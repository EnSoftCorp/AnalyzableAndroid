final class android.media.tv.TvInputService$ServiceHandler extends android.os.Handler
{
    private static final int DO_CREATE_SESSION;
    private static final int DO_NOTIFY_SESSION_CREATED;
    private static final int DO_ADD_HARDWARE_TV_INPUT;
    private static final int DO_REMOVE_HARDWARE_TV_INPUT;
    private static final int DO_ADD_HDMI_TV_INPUT;
    private static final int DO_REMOVE_HDMI_TV_INPUT;
    final android.media.tv.TvInputService this$0;

    private void <init>(android.media.tv.TvInputService)
    {
        android.media.tv.TvInputService$ServiceHandler r0;
        android.media.tv.TvInputService r1;

        r0 := @this: android.media.tv.TvInputService$ServiceHandler;

        r1 := @parameter0: android.media.tv.TvInputService;

        r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0> = r1;

        specialinvoke r0.<android.os.Handler: void <init>()>();

        return;
    }

    private void broadcastAddHardwareTvInput(int, android.media.tv.TvInputInfo)
    {
        android.media.tv.TvInputService$ServiceHandler r0;
        int i0, i1, i2;
        android.media.tv.TvInputInfo r1;
        android.os.RemoteException r2, $r11;
        android.media.tv.TvInputService $r3, $r5, $r7;
        android.os.RemoteCallbackList $r4, $r6, $r8;
        android.os.IInterface $r9;
        android.media.tv.ITvInputServiceCallback $r10;

        r0 := @this: android.media.tv.TvInputService$ServiceHandler;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.tv.TvInputInfo;

        $r3 = r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0>;

        $r4 = staticinvoke <android.media.tv.TvInputService: android.os.RemoteCallbackList access$100(android.media.tv.TvInputService)>($r3);

        i1 = virtualinvoke $r4.<android.os.RemoteCallbackList: int beginBroadcast()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label6;

     label2:
        $r7 = r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0>;

        $r8 = staticinvoke <android.media.tv.TvInputService: android.os.RemoteCallbackList access$100(android.media.tv.TvInputService)>($r7);

        $r9 = virtualinvoke $r8.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i2);

        $r10 = (android.media.tv.ITvInputServiceCallback) $r9;

        interfaceinvoke $r10.<android.media.tv.ITvInputServiceCallback: void addHardwareTvInput(int,android.media.tv.TvInputInfo)>(i0, r1);

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

        r2 = $r11;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TvInputService", "Error while broadcasting.", r2);

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        $r5 = r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0>;

        $r6 = staticinvoke <android.media.tv.TvInputService: android.os.RemoteCallbackList access$100(android.media.tv.TvInputService)>($r5);

        virtualinvoke $r6.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private void broadcastAddHdmiTvInput(int, android.media.tv.TvInputInfo)
    {
        android.media.tv.TvInputService$ServiceHandler r0;
        int i0, i1, i2;
        android.media.tv.TvInputInfo r1;
        android.os.RemoteException r2, $r11;
        android.media.tv.TvInputService $r3, $r5, $r7;
        android.os.RemoteCallbackList $r4, $r6, $r8;
        android.os.IInterface $r9;
        android.media.tv.ITvInputServiceCallback $r10;

        r0 := @this: android.media.tv.TvInputService$ServiceHandler;

        i0 := @parameter0: int;

        r1 := @parameter1: android.media.tv.TvInputInfo;

        $r3 = r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0>;

        $r4 = staticinvoke <android.media.tv.TvInputService: android.os.RemoteCallbackList access$100(android.media.tv.TvInputService)>($r3);

        i1 = virtualinvoke $r4.<android.os.RemoteCallbackList: int beginBroadcast()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label6;

     label2:
        $r7 = r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0>;

        $r8 = staticinvoke <android.media.tv.TvInputService: android.os.RemoteCallbackList access$100(android.media.tv.TvInputService)>($r7);

        $r9 = virtualinvoke $r8.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i2);

        $r10 = (android.media.tv.ITvInputServiceCallback) $r9;

        interfaceinvoke $r10.<android.media.tv.ITvInputServiceCallback: void addHdmiTvInput(int,android.media.tv.TvInputInfo)>(i0, r1);

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

        r2 = $r11;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TvInputService", "Error while broadcasting.", r2);

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        $r5 = r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0>;

        $r6 = staticinvoke <android.media.tv.TvInputService: android.os.RemoteCallbackList access$100(android.media.tv.TvInputService)>($r5);

        virtualinvoke $r6.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    private void broadcastRemoveTvInput(java.lang.String)
    {
        android.media.tv.TvInputService$ServiceHandler r0;
        java.lang.String r1;
        int i0, i1;
        android.os.RemoteException r2, $r11;
        android.media.tv.TvInputService $r3, $r5, $r7;
        android.os.RemoteCallbackList $r4, $r6, $r8;
        android.os.IInterface $r9;
        android.media.tv.ITvInputServiceCallback $r10;

        r0 := @this: android.media.tv.TvInputService$ServiceHandler;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0>;

        $r4 = staticinvoke <android.media.tv.TvInputService: android.os.RemoteCallbackList access$100(android.media.tv.TvInputService)>($r3);

        i0 = virtualinvoke $r4.<android.os.RemoteCallbackList: int beginBroadcast()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label6;

     label2:
        $r7 = r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0>;

        $r8 = staticinvoke <android.media.tv.TvInputService: android.os.RemoteCallbackList access$100(android.media.tv.TvInputService)>($r7);

        $r9 = virtualinvoke $r8.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i1);

        $r10 = (android.media.tv.ITvInputServiceCallback) $r9;

        interfaceinvoke $r10.<android.media.tv.ITvInputServiceCallback: void removeTvInput(java.lang.String)>(r1);

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

        r2 = $r11;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TvInputService", "Error while broadcasting.", r2);

     label5:
        i1 = i1 + 1;

        goto label1;

     label6:
        $r5 = r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0>;

        $r6 = staticinvoke <android.media.tv.TvInputService: android.os.RemoteCallbackList access$100(android.media.tv.TvInputService)>($r5);

        virtualinvoke $r6.<android.os.RemoteCallbackList: void finishBroadcast()>();

        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public final void handleMessage(android.os.Message)
    {
        android.media.tv.TvInputService$ServiceHandler r0;
        android.os.Message r1, $r20;
        com.android.internal.os.SomeArgs r2, r57, r58;
        android.view.InputChannel r3;
        android.media.tv.ITvInputSessionCallback r4, r60;
        java.lang.String r5, r9, $r25, $r48, r66, r70;
        android.media.tv.TvInputService$Session r6;
        android.media.tv.TvInputService$HardwareSession r8;
        int $i0, $i3, $i4, $i5;
        java.lang.Object $r11, $r12, $r13, $r14, $r30, $r34, $r38, $r41, $r43, $r44, $r45, $r46, $r49;
        android.media.tv.TvInputService $r15, $r16, $r19, $r24, $r27, $r29, $r36, $r37, $r39, $r40, $r42;
        android.media.tv.ITvInputSessionWrapper $r17, r55;
        boolean $z0, $z1, $z2, $z3;
        android.os.Handler $r18, $r31, $r33;
        java.lang.StringBuilder $r21, $r22, $r23, $r47, $r50, $r51;
        android.media.tv.TvInputManager$SessionCallback $r35;
        android.os.RemoteException $r52, $r53, $r54;
        android.media.tv.TvInputManager r56;
        android.media.tv.ITvInputSession r59;
        android.os.IBinder r61;
        android.media.tv.TvInputHardwareInfo r63, r65;
        android.media.tv.TvInputInfo r64, r68;
        android.hardware.hdmi.HdmiDeviceInfo r67, r69;

        r0 := @this: android.media.tv.TvInputService$ServiceHandler;

        r1 := @parameter0: android.os.Message;

        $i0 = r1.<android.os.Message: int what>;

        tableswitch($i0)
        {
            case 1: goto label01;
            case 2: goto label17;
            case 3: goto label22;
            case 4: goto label24;
            case 5: goto label26;
            case 6: goto label28;
            default: goto label30;
        };

     label01:
        $r11 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (com.android.internal.os.SomeArgs) $r11;

        $r12 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r3 = (android.view.InputChannel) $r12;

        $r13 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        r4 = (android.media.tv.ITvInputSessionCallback) $r13;

        $r14 = r2.<com.android.internal.os.SomeArgs: java.lang.Object arg3>;

        r5 = (java.lang.String) $r14;

        virtualinvoke r2.<com.android.internal.os.SomeArgs: void recycle()>();

        $r15 = r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0>;

        r6 = virtualinvoke $r15.<android.media.tv.TvInputService: android.media.tv.TvInputService$Session onCreateSession(java.lang.String)>(r5);

        if r6 != null goto label06;

     label02:
        interfaceinvoke r4.<android.media.tv.ITvInputSessionCallback: void onSessionCreated(android.media.tv.ITvInputSession,android.os.IBinder)>(null, null);

     label03:
        goto label05;

     label04:
        $r53 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TvInputService", "error in onSessionCreated");

     label05:
        return;

     label06:
        staticinvoke <android.media.tv.TvInputService$Session: void access$1100(android.media.tv.TvInputService$Session,android.media.tv.ITvInputSessionCallback)>(r6, r4);

        $r17 = new android.media.tv.ITvInputSessionWrapper;

        $r16 = r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0>;

        specialinvoke $r17.<android.media.tv.ITvInputSessionWrapper: void <init>(android.content.Context,android.media.tv.TvInputService$Session,android.view.InputChannel)>($r16, r6, r3);

        r55 = $r17;

        $z0 = r6 instanceof android.media.tv.TvInputService$HardwareSession;

        if $z0 == 0 goto label15;

        r8 = (android.media.tv.TvInputService$HardwareSession) r6;

        r9 = virtualinvoke r8.<android.media.tv.TvInputService$HardwareSession: java.lang.String getHardwareInputId()>();

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r9);

        if $z2 != 0 goto label07;

        $r24 = r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0>;

        $z3 = staticinvoke <android.media.tv.TvInputService: boolean access$1200(android.media.tv.TvInputService,java.lang.String)>($r24, r9);

        if $z3 != 0 goto label14;

     label07:
        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r9);

        if $z1 == 0 goto label08;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TvInputService", "Hardware input id is not setup yet.");

        goto label09;

     label08:
        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid hardware input id : ");

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TvInputService", $r25);

     label09:
        virtualinvoke r6.<android.media.tv.TvInputService$Session: void onRelease()>();

     label10:
        interfaceinvoke r4.<android.media.tv.ITvInputSessionCallback: void onSessionCreated(android.media.tv.ITvInputSession,android.os.IBinder)>(null, null);

     label11:
        goto label13;

     label12:
        $r54 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TvInputService", "error in onSessionCreated");

     label13:
        return;

     label14:
        staticinvoke <android.media.tv.TvInputService$HardwareSession: android.media.tv.ITvInputSession access$802(android.media.tv.TvInputService$HardwareSession,android.media.tv.ITvInputSession)>(r8, r55);

        staticinvoke <android.media.tv.TvInputService$HardwareSession: android.media.tv.ITvInputSessionCallback access$902(android.media.tv.TvInputService$HardwareSession,android.media.tv.ITvInputSessionCallback)>(r8, r4);

        $r27 = r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0>;

        $r31 = staticinvoke <android.media.tv.TvInputService: android.os.Handler access$200(android.media.tv.TvInputService)>($r27);

        staticinvoke <android.media.tv.TvInputService$HardwareSession: android.os.Handler access$1002(android.media.tv.TvInputService$HardwareSession,android.os.Handler)>(r8, $r31);

        $r29 = r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0>;

        $r30 = virtualinvoke $r29.<android.media.tv.TvInputService: java.lang.Object getSystemService(java.lang.String)>("tv_input");

        r56 = (android.media.tv.TvInputManager) $r30;

        $r35 = staticinvoke <android.media.tv.TvInputService$HardwareSession: android.media.tv.TvInputManager$SessionCallback access$1300(android.media.tv.TvInputService$HardwareSession)>(r8);

        $r36 = r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0>;

        $r33 = staticinvoke <android.media.tv.TvInputService: android.os.Handler access$200(android.media.tv.TvInputService)>($r36);

        virtualinvoke r56.<android.media.tv.TvInputManager: void createSession(java.lang.String,android.media.tv.TvInputManager$SessionCallback,android.os.Handler)>(r9, $r35, $r33);

        goto label16;

     label15:
        r57 = staticinvoke <com.android.internal.os.SomeArgs: com.android.internal.os.SomeArgs obtain()>();

        r57.<com.android.internal.os.SomeArgs: java.lang.Object arg1> = r55;

        r57.<com.android.internal.os.SomeArgs: java.lang.Object arg2> = r4;

        r57.<com.android.internal.os.SomeArgs: java.lang.Object arg3> = null;

        $r19 = r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0>;

        $r18 = staticinvoke <android.media.tv.TvInputService: android.os.Handler access$200(android.media.tv.TvInputService)>($r19);

        $r20 = virtualinvoke $r18.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(2, r57);

        virtualinvoke $r20.<android.os.Message: void sendToTarget()>();

     label16:
        return;

     label17:
        $r46 = r1.<android.os.Message: java.lang.Object obj>;

        r58 = (com.android.internal.os.SomeArgs) $r46;

        $r45 = r58.<com.android.internal.os.SomeArgs: java.lang.Object arg1>;

        r59 = (android.media.tv.ITvInputSession) $r45;

        $r44 = r58.<com.android.internal.os.SomeArgs: java.lang.Object arg2>;

        r60 = (android.media.tv.ITvInputSessionCallback) $r44;

        $r49 = r58.<com.android.internal.os.SomeArgs: java.lang.Object arg3>;

        r61 = (android.os.IBinder) $r49;

     label18:
        interfaceinvoke r60.<android.media.tv.ITvInputSessionCallback: void onSessionCreated(android.media.tv.ITvInputSession,android.os.IBinder)>(r59, r61);

     label19:
        goto label21;

     label20:
        $r52 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TvInputService", "error in onSessionCreated");

     label21:
        virtualinvoke r58.<com.android.internal.os.SomeArgs: void recycle()>();

        return;

     label22:
        $r43 = r1.<android.os.Message: java.lang.Object obj>;

        r63 = (android.media.tv.TvInputHardwareInfo) $r43;

        $r42 = r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0>;

        r64 = virtualinvoke $r42.<android.media.tv.TvInputService: android.media.tv.TvInputInfo onHardwareAdded(android.media.tv.TvInputHardwareInfo)>(r63);

        if r64 == null goto label23;

        $i4 = virtualinvoke r63.<android.media.tv.TvInputHardwareInfo: int getDeviceId()>();

        specialinvoke r0.<android.media.tv.TvInputService$ServiceHandler: void broadcastAddHardwareTvInput(int,android.media.tv.TvInputInfo)>($i4, r64);

     label23:
        return;

     label24:
        $r41 = r1.<android.os.Message: java.lang.Object obj>;

        r65 = (android.media.tv.TvInputHardwareInfo) $r41;

        $r40 = r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0>;

        r66 = virtualinvoke $r40.<android.media.tv.TvInputService: java.lang.String onHardwareRemoved(android.media.tv.TvInputHardwareInfo)>(r65);

        if r66 == null goto label25;

        specialinvoke r0.<android.media.tv.TvInputService$ServiceHandler: void broadcastRemoveTvInput(java.lang.String)>(r66);

     label25:
        return;

     label26:
        $r38 = r1.<android.os.Message: java.lang.Object obj>;

        r67 = (android.hardware.hdmi.HdmiDeviceInfo) $r38;

        $r37 = r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0>;

        r68 = virtualinvoke $r37.<android.media.tv.TvInputService: android.media.tv.TvInputInfo onHdmiDeviceAdded(android.hardware.hdmi.HdmiDeviceInfo)>(r67);

        if r68 == null goto label27;

        $i3 = virtualinvoke r67.<android.hardware.hdmi.HdmiDeviceInfo: int getId()>();

        specialinvoke r0.<android.media.tv.TvInputService$ServiceHandler: void broadcastAddHdmiTvInput(int,android.media.tv.TvInputInfo)>($i3, r68);

     label27:
        return;

     label28:
        $r34 = r1.<android.os.Message: java.lang.Object obj>;

        r69 = (android.hardware.hdmi.HdmiDeviceInfo) $r34;

        $r39 = r0.<android.media.tv.TvInputService$ServiceHandler: android.media.tv.TvInputService this$0>;

        r70 = virtualinvoke $r39.<android.media.tv.TvInputService: java.lang.String onHdmiDeviceRemoved(android.hardware.hdmi.HdmiDeviceInfo)>(r69);

        if r70 == null goto label29;

        specialinvoke r0.<android.media.tv.TvInputService$ServiceHandler: void broadcastRemoveTvInput(java.lang.String)>(r70);

     label29:
        return;

     label30:
        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unhandled message code: ");

        $i5 = r1.<android.os.Message: int what>;

        $r47 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TvInputService", $r48);

        return;

        catch android.os.RemoteException from label02 to label03 with label04;
        catch android.os.RemoteException from label10 to label11 with label12;
        catch android.os.RemoteException from label18 to label19 with label20;
    }

    void <init>(android.media.tv.TvInputService, android.media.tv.TvInputService$1)
    {
        android.media.tv.TvInputService$ServiceHandler r0;
        android.media.tv.TvInputService r1;
        android.media.tv.TvInputService$1 r2;

        r0 := @this: android.media.tv.TvInputService$ServiceHandler;

        r1 := @parameter0: android.media.tv.TvInputService;

        r2 := @parameter1: android.media.tv.TvInputService$1;

        specialinvoke r0.<android.media.tv.TvInputService$ServiceHandler: void <init>(android.media.tv.TvInputService)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <android.media.tv.TvInputService$ServiceHandler: int DO_REMOVE_HDMI_TV_INPUT> = 6;

        <android.media.tv.TvInputService$ServiceHandler: int DO_ADD_HDMI_TV_INPUT> = 5;

        <android.media.tv.TvInputService$ServiceHandler: int DO_REMOVE_HARDWARE_TV_INPUT> = 4;

        <android.media.tv.TvInputService$ServiceHandler: int DO_ADD_HARDWARE_TV_INPUT> = 3;

        <android.media.tv.TvInputService$ServiceHandler: int DO_NOTIFY_SESSION_CREATED> = 2;

        <android.media.tv.TvInputService$ServiceHandler: int DO_CREATE_SESSION> = 1;

        return;
    }
}
