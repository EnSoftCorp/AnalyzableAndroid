class android.app.backup.IBackupManager$Stub$Proxy extends java.lang.Object implements android.app.backup.IBackupManager
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        $r1 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        return "android.app.backup.IBackupManager";
    }

    public void dataChanged(java.lang.String) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r5 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void clearBackupData(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        java.lang.String r1, r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r6 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r7 := @caughtexception;

        r5 = $r7;

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void agentConnected(java.lang.String, android.os.IBinder) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        java.lang.String r1;
        android.os.IBinder r2, $r6;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r7;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.os.IBinder;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>(r2);

        $r6 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r7 := @caughtexception;

        r5 = $r7;

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void agentDisconnected(java.lang.String) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r5 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void restoreAtInstall(java.lang.String, int) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        java.lang.String r1;
        int i0;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setBackupEnabled(boolean) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        boolean z0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;
        byte $b0;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        if z0 == 0 goto label2;

        $b0 = 1;

        goto label3;

     label2:
        $b0 = 0;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($b0);

        $r4 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r5 := @caughtexception;

        r3 = $r5;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setAutoRestore(boolean) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        boolean z0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;
        byte $b0;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        if z0 == 0 goto label2;

        $b0 = 1;

        goto label3;

     label2:
        $b0 = 0;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($b0);

        $r4 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r5 := @caughtexception;

        r3 = $r5;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setBackupProvisioned(boolean) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        boolean z0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;
        byte $b0;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        z0 := @parameter0: boolean;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        if z0 == 0 goto label2;

        $b0 = 1;

        goto label3;

     label2:
        $b0 = 0;

     label3:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($b0);

        $r4 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r5 := @caughtexception;

        r3 = $r5;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public boolean isBackupEnabled() throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean z0, $z2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;
        int $i0;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        $r4 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if 0 == $i0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        z0 = $z2;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r5 := @caughtexception;

        r3 = $r5;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label7:
        return z0;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public boolean setBackupPassword(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        java.lang.String r1, r2;
        android.os.Parcel r3, r4;
        boolean z0, $z2;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;
        int $i0;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r6 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r4.<android.os.Parcel: int readInt()>();

        if 0 == $i0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        z0 = $z2;

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r7 := @caughtexception;

        r5 = $r7;

     label6:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label7:
        return z0;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public boolean hasBackupPassword() throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        boolean z0, $z2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;
        int $i0;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        $r4 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r2.<android.os.Parcel: int readInt()>();

        if 0 == $i0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        z0 = $z2;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r5 := @caughtexception;

        r3 = $r5;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label7:
        return z0;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void backupNow() throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        $r4 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void fullBackup(android.os.ParcelFileDescriptor, boolean, boolean, boolean, boolean, boolean, boolean, boolean, java.lang.String[]) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        android.os.ParcelFileDescriptor r1;
        boolean z0, z1, z2, z3, z4, z5, z6;
        java.lang.String[] r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        z2 := @parameter3: boolean;

        z3 := @parameter4: boolean;

        z4 := @parameter5: boolean;

        z5 := @parameter6: boolean;

        z6 := @parameter7: boolean;

        r2 := @parameter8: java.lang.String[];

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label01:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        if r1 == null goto label02;

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>(r3, 0);

        goto label03;

     label02:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(0);

     label03:
        if z0 == 0 goto label04;

        $b5 = 1;

        goto label05;

     label04:
        $b5 = 0;

     label05:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>($b5);

        if z1 == 0 goto label06;

        $b6 = 1;

        goto label07;

     label06:
        $b6 = 0;

     label07:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>($b6);

        if z2 == 0 goto label08;

        $b3 = 1;

        goto label09;

     label08:
        $b3 = 0;

     label09:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>($b3);

        if z3 == 0 goto label10;

        $b4 = 1;

        goto label11;

     label10:
        $b4 = 0;

     label11:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>($b4);

        if z4 == 0 goto label12;

        $b1 = 1;

        goto label13;

     label12:
        $b1 = 0;

     label13:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>($b1);

        if z5 == 0 goto label14;

        $b2 = 1;

        goto label15;

     label14:
        $b2 = 0;

     label15:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>($b2);

        if z6 == 0 goto label16;

        $b0 = 1;

        goto label17;

     label16:
        $b0 = 0;

     label17:
        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>($b0);

        virtualinvoke r3.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r2);

        $r6 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label18:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label21;

     label19:
        $r7 := @caughtexception;

        r5 = $r7;

     label20:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label21:
        return;

        catch java.lang.Throwable from label01 to label18 with label19;
        catch java.lang.Throwable from label19 to label20 with label19;
    }

    public void fullTransportBackup(java.lang.String[]) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        java.lang.String[] r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        r1 := @parameter0: java.lang.String[];

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r2.<android.os.Parcel: void writeStringArray(java.lang.String[])>(r1);

        $r5 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(14, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void fullRestore(android.os.ParcelFileDescriptor) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        android.os.ParcelFileDescriptor r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        if r1 == null goto label2;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r1.<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>(r2, 0);

        goto label3;

     label2:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label3:
        $r5 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(15, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r6 := @caughtexception;

        r4 = $r6;

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void acknowledgeFullBackupOrRestore(int, boolean, java.lang.String, java.lang.String, android.app.backup.IFullBackupRestoreObserver) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        int i0;
        boolean z0;
        java.lang.String r1, r2;
        android.app.backup.IFullBackupRestoreObserver r3;
        android.os.Parcel r4, r5;
        java.lang.Throwable r6, $r9;
        android.os.IBinder $r7, $r8;
        byte $b1;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: android.app.backup.IFullBackupRestoreObserver;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(i0);

        if z0 == 0 goto label2;

        $b1 = 1;

        goto label3;

     label2:
        $b1 = 0;

     label3:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>($b1);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        if r3 == null goto label4;

        $r8 = interfaceinvoke r3.<android.app.backup.IFullBackupRestoreObserver: android.os.IBinder asBinder()>();

        goto label5;

     label4:
        $r8 = null;

     label5:
        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r8);

        $r7 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(16, r4, r5, 0);

        virtualinvoke r5.<android.os.Parcel: void readException()>();

     label6:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        goto label9;

     label7:
        $r9 := @caughtexception;

        r6 = $r9;

     label8:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r6;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public java.lang.String getCurrentTransport() throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.String r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        $r5 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(17, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r3 = virtualinvoke r2.<android.os.Parcel: java.lang.String readString()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r4;

     label5:
        return r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.String[] listAllTransports() throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        android.os.Parcel r1, r2;
        java.lang.String[] r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        $r5 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(18, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

        r3 = virtualinvoke r2.<android.os.Parcel: java.lang.String[] createStringArray()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r4;

     label5:
        return r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.String selectBackupTransport(java.lang.String) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        java.lang.String r1, r4;
        android.os.Parcel r2, r3;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r6 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(19, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        r4 = virtualinvoke r3.<android.os.Parcel: java.lang.String readString()>();

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r7 := @caughtexception;

        r5 = $r7;

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r5;

     label5:
        return r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.content.Intent getConfigurationIntent(java.lang.String) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        android.content.Intent r4;
        java.lang.Throwable r5, $r9;
        android.os.IBinder $r6;
        int $i0;
        android.os.Parcelable$Creator $r7;
        java.lang.Object $r8;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r6 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(20, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        if 0 == $i0 goto label2;

        $r7 = <android.content.Intent: android.os.Parcelable$Creator CREATOR>;

        $r8 = interfaceinvoke $r7.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r3);

        r4 = (android.content.Intent) $r8;

        goto label3;

     label2:
        r4 = null;

     label3:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label6;

     label4:
        $r9 := @caughtexception;

        r5 = $r9;

     label5:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r5;

     label6:
        return r4;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public java.lang.String getDestinationString(java.lang.String) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        java.lang.String r1, r4;
        android.os.Parcel r2, r3;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r6 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(21, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        r4 = virtualinvoke r3.<android.os.Parcel: java.lang.String readString()>();

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r7 := @caughtexception;

        r5 = $r7;

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r5;

     label5:
        return r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.content.Intent getDataManagementIntent(java.lang.String) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        android.content.Intent r4;
        java.lang.Throwable r5, $r9;
        android.os.IBinder $r6;
        int $i0;
        android.os.Parcelable$Creator $r7;
        java.lang.Object $r8;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r6 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(22, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        $i0 = virtualinvoke r3.<android.os.Parcel: int readInt()>();

        if 0 == $i0 goto label2;

        $r7 = <android.content.Intent: android.os.Parcelable$Creator CREATOR>;

        $r8 = interfaceinvoke $r7.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r3);

        r4 = (android.content.Intent) $r8;

        goto label3;

     label2:
        r4 = null;

     label3:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label6;

     label4:
        $r9 := @caughtexception;

        r5 = $r9;

     label5:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r5;

     label6:
        return r4;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public java.lang.String getDataManagementLabel(java.lang.String) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        java.lang.String r1, r4;
        android.os.Parcel r2, r3;
        java.lang.Throwable r5, $r7;
        android.os.IBinder $r6;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r6 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(23, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

        r4 = virtualinvoke r3.<android.os.Parcel: java.lang.String readString()>();

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r7 := @caughtexception;

        r5 = $r7;

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r5;

     label5:
        return r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.app.backup.IRestoreSession beginRestoreSession(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        java.lang.String r1, r2;
        android.os.Parcel r3, r4;
        android.app.backup.IRestoreSession r5;
        java.lang.Throwable r6, $r9;
        android.os.IBinder $r7, $r8;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r7 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(24, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

        $r8 = virtualinvoke r4.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r5 = staticinvoke <android.app.backup.IRestoreSession$Stub: android.app.backup.IRestoreSession asInterface(android.os.IBinder)>($r8);

     label2:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r9 := @caughtexception;

        r6 = $r9;

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r6;

     label5:
        return r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void opComplete(int) throws android.os.RemoteException
    {
        android.app.backup.IBackupManager$Stub$Proxy r0;
        int i0;
        android.os.Parcel r1, r2;
        java.lang.Throwable r3, $r5;
        android.os.IBinder $r4;

        r0 := @this: android.app.backup.IBackupManager$Stub$Proxy;

        i0 := @parameter0: int;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.app.backup.IBackupManager");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        $r4 = r0.<android.app.backup.IBackupManager$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r4.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(25, r1, r2, 0);

        virtualinvoke r2.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
}
