class android.media.AudioService$StreamOverride extends java.lang.Object implements android.view.accessibility.AccessibilityManager$TouchExplorationStateChangeListener
{
    private static final int DEFAULT_STREAM_TYPE_OVERRIDE_DELAY_MS;
    private static final int TOUCH_EXPLORE_STREAM_TYPE_OVERRIDE_DELAY_MS;
    static int sDelayMs;

    private void <init>()
    {
        android.media.AudioService$StreamOverride r0;

        r0 := @this: android.media.AudioService$StreamOverride;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void init(android.content.Context)
    {
        android.content.Context r0;
        android.view.accessibility.AccessibilityManager r1;
        java.lang.Object $r2;
        boolean $z0;
        android.media.AudioService$StreamOverride $r3;

        r0 := @parameter0: android.content.Context;

        $r2 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("accessibility");

        r1 = (android.view.accessibility.AccessibilityManager) $r2;

        $z0 = virtualinvoke r1.<android.view.accessibility.AccessibilityManager: boolean isTouchExplorationEnabled()>();

        staticinvoke <android.media.AudioService$StreamOverride: void updateDefaultStreamOverrideDelay(boolean)>($z0);

        $r3 = new android.media.AudioService$StreamOverride;

        specialinvoke $r3.<android.media.AudioService$StreamOverride: void <init>()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityManager: boolean addTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager$TouchExplorationStateChangeListener)>($r3);

        return;
    }

    public void onTouchExplorationStateChanged(boolean)
    {
        android.media.AudioService$StreamOverride r0;
        boolean z0;

        r0 := @this: android.media.AudioService$StreamOverride;

        z0 := @parameter0: boolean;

        staticinvoke <android.media.AudioService$StreamOverride: void updateDefaultStreamOverrideDelay(boolean)>(z0);

        return;
    }

    private static void updateDefaultStreamOverrideDelay(boolean)
    {
        boolean z0, $z1;
        java.lang.StringBuilder $r0, $r1, $r2, $r3, $r4, $r5;
        int $i0;
        java.lang.String $r6;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        <android.media.AudioService$StreamOverride: int sDelayMs> = 1000;

        goto label2;

     label1:
        <android.media.AudioService$StreamOverride: int sDelayMs> = 5000;

     label2:
        $z1 = <android.media.AudioService: boolean DEBUG_VOL>;

        if $z1 == 0 goto label3;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Touch exploration enabled=");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" stream override delay is now ");

        $i0 = <android.media.AudioService$StreamOverride: int sDelayMs>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ms");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("AudioService", $r6);

     label3:
        return;
    }

    public static void <clinit>()
    {
        <android.media.AudioService$StreamOverride: int TOUCH_EXPLORE_STREAM_TYPE_OVERRIDE_DELAY_MS> = 1000;

        <android.media.AudioService$StreamOverride: int DEFAULT_STREAM_TYPE_OVERRIDE_DELAY_MS> = 5000;

        return;
    }
}
