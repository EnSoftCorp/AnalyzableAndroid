class android.media.CCParser$CCMemory extends java.lang.Object
{
    private final java.lang.String mBlankLine;
    private final android.media.CCParser$CCLineBuilder[] mLines;
    private int mRow;
    private int mCol;

    void <init>()
    {
        android.media.CCParser$CCMemory r0;
        char[] r1;
        android.media.CCParser$CCLineBuilder[] $r2;
        java.lang.String $r3;

        r0 := @this: android.media.CCParser$CCMemory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = newarray (android.media.CCParser$CCLineBuilder)[17];

        r0.<android.media.CCParser$CCMemory: android.media.CCParser$CCLineBuilder[] mLines> = $r2;

        r1 = newarray (char)[34];

        staticinvoke <java.util.Arrays: void fill(char[],char)>(r1, 160);

        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(char[])>(r1);

        r0.<android.media.CCParser$CCMemory: java.lang.String mBlankLine> = $r3;

        return;
    }

    void erase()
    {
        android.media.CCParser$CCMemory r0;
        int i0, $i1;
        android.media.CCParser$CCLineBuilder[] $r1, $r2;

        r0 := @this: android.media.CCParser$CCMemory;

        i0 = 0;

     label1:
        $r1 = r0.<android.media.CCParser$CCMemory: android.media.CCParser$CCLineBuilder[] mLines>;

        $i1 = lengthof $r1;

        if i0 >= $i1 goto label2;

        $r2 = r0.<android.media.CCParser$CCMemory: android.media.CCParser$CCLineBuilder[] mLines>;

        $r2[i0] = null;

        i0 = i0 + 1;

        goto label1;

     label2:
        r0.<android.media.CCParser$CCMemory: int mRow> = 15;

        r0.<android.media.CCParser$CCMemory: int mCol> = 1;

        return;
    }

    void der()
    {
        android.media.CCParser$CCMemory r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i7, $i8;
        android.media.CCParser$CCLineBuilder[] $r1, $r3, $r4, $r6, $r8;
        android.media.CCParser$CCLineBuilder $r2, $r5, $r7, $r9;
        char $c6;

        r0 := @this: android.media.CCParser$CCMemory;

        $r1 = r0.<android.media.CCParser$CCMemory: android.media.CCParser$CCLineBuilder[] mLines>;

        $i2 = r0.<android.media.CCParser$CCMemory: int mRow>;

        $r2 = $r1[$i2];

        if $r2 == null goto label6;

        i0 = 0;

     label1:
        $i3 = r0.<android.media.CCParser$CCMemory: int mCol>;

        if i0 >= $i3 goto label5;

        $r4 = r0.<android.media.CCParser$CCMemory: android.media.CCParser$CCLineBuilder[] mLines>;

        $i5 = r0.<android.media.CCParser$CCMemory: int mRow>;

        $r5 = $r4[$i5];

        $c6 = virtualinvoke $r5.<android.media.CCParser$CCLineBuilder: char charAt(int)>(i0);

        if $c6 == 160 goto label4;

        i1 = r0.<android.media.CCParser$CCMemory: int mCol>;

     label2:
        $r6 = r0.<android.media.CCParser$CCMemory: android.media.CCParser$CCLineBuilder[] mLines>;

        $i7 = r0.<android.media.CCParser$CCMemory: int mRow>;

        $r7 = $r6[$i7];

        $i8 = virtualinvoke $r7.<android.media.CCParser$CCLineBuilder: int length()>();

        if i1 >= $i8 goto label3;

        $r8 = r0.<android.media.CCParser$CCMemory: android.media.CCParser$CCLineBuilder[] mLines>;

        $r9 = $r8[i1];

        virtualinvoke $r9.<android.media.CCParser$CCLineBuilder: void setCharAt(int,char)>(i1, 160);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;

     label4:
        i0 = i0 + 1;

        goto label1;

     label5:
        $r3 = r0.<android.media.CCParser$CCMemory: android.media.CCParser$CCLineBuilder[] mLines>;

        $i4 = r0.<android.media.CCParser$CCMemory: int mRow>;

        $r3[$i4] = null;

     label6:
        return;
    }

    void tab(int)
    {
        android.media.CCParser$CCMemory r0;
        int i0;

        r0 := @this: android.media.CCParser$CCMemory;

        i0 := @parameter0: int;

        specialinvoke r0.<android.media.CCParser$CCMemory: void moveCursorByCol(int)>(i0);

        return;
    }

    void bs()
    {
        android.media.CCParser$CCMemory r0;
        int $i0, $i1, $i2, $i3, $i4;
        android.media.CCParser$CCLineBuilder[] $r1, $r3, $r5;
        android.media.CCParser$CCLineBuilder $r2, $r4, $r6;

        r0 := @this: android.media.CCParser$CCMemory;

        specialinvoke r0.<android.media.CCParser$CCMemory: void moveCursorByCol(int)>(-1);

        $r1 = r0.<android.media.CCParser$CCMemory: android.media.CCParser$CCLineBuilder[] mLines>;

        $i0 = r0.<android.media.CCParser$CCMemory: int mRow>;

        $r2 = $r1[$i0];

        if $r2 == null goto label1;

        $r3 = r0.<android.media.CCParser$CCMemory: android.media.CCParser$CCLineBuilder[] mLines>;

        $i1 = r0.<android.media.CCParser$CCMemory: int mRow>;

        $r4 = $r3[$i1];

        $i2 = r0.<android.media.CCParser$CCMemory: int mCol>;

        virtualinvoke $r4.<android.media.CCParser$CCLineBuilder: void setCharAt(int,char)>($i2, 160);

        $i3 = r0.<android.media.CCParser$CCMemory: int mCol>;

        if $i3 != 31 goto label1;

        $r5 = r0.<android.media.CCParser$CCMemory: android.media.CCParser$CCLineBuilder[] mLines>;

        $i4 = r0.<android.media.CCParser$CCMemory: int mRow>;

        $r6 = $r5[$i4];

        virtualinvoke $r6.<android.media.CCParser$CCLineBuilder: void setCharAt(int,char)>(32, 160);

     label1:
        return;
    }

    void cr()
    {
        android.media.CCParser$CCMemory r0;
        int $i0, $i1;

        r0 := @this: android.media.CCParser$CCMemory;

        $i0 = r0.<android.media.CCParser$CCMemory: int mRow>;

        $i1 = $i0 + 1;

        specialinvoke r0.<android.media.CCParser$CCMemory: void moveCursorTo(int,int)>($i1, 1);

        return;
    }

    void rollUp(int)
    {
        android.media.CCParser$CCMemory r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11;
        android.media.CCParser$CCLineBuilder[] $r1, $r2, $r3, $r5, $r6;
        android.media.CCParser$CCLineBuilder $r4;

        r0 := @this: android.media.CCParser$CCMemory;

        i0 := @parameter0: int;

        i1 = 0;

     label1:
        $i3 = r0.<android.media.CCParser$CCMemory: int mRow>;

        $i4 = $i3 - i0;

        if i1 > $i4 goto label2;

        $r6 = r0.<android.media.CCParser$CCMemory: android.media.CCParser$CCLineBuilder[] mLines>;

        $r6[i1] = null;

        i1 = i1 + 1;

        goto label1;

     label2:
        $i5 = r0.<android.media.CCParser$CCMemory: int mRow>;

        $i6 = $i5 - i0;

        i2 = $i6 + 1;

        if i2 >= 1 goto label3;

        i2 = 1;

     label3:
        i10 = i2;

     label4:
        $i7 = r0.<android.media.CCParser$CCMemory: int mRow>;

        if i10 >= $i7 goto label5;

        $r5 = r0.<android.media.CCParser$CCMemory: android.media.CCParser$CCLineBuilder[] mLines>;

        $r3 = r0.<android.media.CCParser$CCMemory: android.media.CCParser$CCLineBuilder[] mLines>;

        $i9 = i10 + 1;

        $r4 = $r3[$i9];

        $r5[i10] = $r4;

        i10 = i10 + 1;

        goto label4;

     label5:
        i11 = r0.<android.media.CCParser$CCMemory: int mRow>;

     label6:
        $r1 = r0.<android.media.CCParser$CCMemory: android.media.CCParser$CCLineBuilder[] mLines>;

        $i8 = lengthof $r1;

        if i11 >= $i8 goto label7;

        $r2 = r0.<android.media.CCParser$CCMemory: android.media.CCParser$CCLineBuilder[] mLines>;

        $r2[i11] = null;

        i11 = i11 + 1;

        goto label6;

     label7:
        r0.<android.media.CCParser$CCMemory: int mCol> = 1;

        return;
    }

    void writeText(java.lang.String)
    {
        android.media.CCParser$CCMemory r0;
        java.lang.String r1;
        int i0, $i1, $i2, $i3;
        android.media.CCParser$CCLineBuilder $r2;
        char $c4;

        r0 := @this: android.media.CCParser$CCMemory;

        r1 := @parameter0: java.lang.String;

        i0 = 0;

     label1:
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if i0 >= $i1 goto label2;

        $i2 = r0.<android.media.CCParser$CCMemory: int mRow>;

        $r2 = specialinvoke r0.<android.media.CCParser$CCMemory: android.media.CCParser$CCLineBuilder getLineBuffer(int)>($i2);

        $i3 = r0.<android.media.CCParser$CCMemory: int mCol>;

        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);

        virtualinvoke $r2.<android.media.CCParser$CCLineBuilder: void setCharAt(int,char)>($i3, $c4);

        specialinvoke r0.<android.media.CCParser$CCMemory: void moveCursorByCol(int)>(1);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    void writeMidRowCode(android.media.CCParser$StyleCode)
    {
        android.media.CCParser$CCMemory r0;
        android.media.CCParser$StyleCode r1;
        int $i0, $i1;
        android.media.CCParser$CCLineBuilder $r2;

        r0 := @this: android.media.CCParser$CCMemory;

        r1 := @parameter0: android.media.CCParser$StyleCode;

        $i0 = r0.<android.media.CCParser$CCMemory: int mRow>;

        $r2 = specialinvoke r0.<android.media.CCParser$CCMemory: android.media.CCParser$CCLineBuilder getLineBuffer(int)>($i0);

        $i1 = r0.<android.media.CCParser$CCMemory: int mCol>;

        virtualinvoke $r2.<android.media.CCParser$CCLineBuilder: void setMidRowAt(int,android.media.CCParser$StyleCode)>($i1, r1);

        specialinvoke r0.<android.media.CCParser$CCMemory: void moveCursorByCol(int)>(1);

        return;
    }

    void writePAC(android.media.CCParser$PAC)
    {
        android.media.CCParser$CCMemory r0;
        android.media.CCParser$PAC r1;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4;
        android.media.CCParser$CCLineBuilder $r2;

        r0 := @this: android.media.CCParser$CCMemory;

        r1 := @parameter0: android.media.CCParser$PAC;

        $z0 = virtualinvoke r1.<android.media.CCParser$PAC: boolean isIndentPAC()>();

        if $z0 == 0 goto label1;

        $i3 = virtualinvoke r1.<android.media.CCParser$PAC: int getRow()>();

        $i4 = virtualinvoke r1.<android.media.CCParser$PAC: int getCol()>();

        specialinvoke r0.<android.media.CCParser$CCMemory: void moveCursorTo(int,int)>($i3, $i4);

        goto label2;

     label1:
        $i0 = virtualinvoke r1.<android.media.CCParser$PAC: int getRow()>();

        specialinvoke r0.<android.media.CCParser$CCMemory: void moveCursorToRow(int)>($i0);

     label2:
        $i1 = r0.<android.media.CCParser$CCMemory: int mRow>;

        $r2 = specialinvoke r0.<android.media.CCParser$CCMemory: android.media.CCParser$CCLineBuilder getLineBuffer(int)>($i1);

        $i2 = r0.<android.media.CCParser$CCMemory: int mCol>;

        virtualinvoke $r2.<android.media.CCParser$CCLineBuilder: void setPACAt(int,android.media.CCParser$PAC)>($i2, r1);

        return;
    }

    android.text.SpannableStringBuilder[] getStyledText(android.view.accessibility.CaptioningManager$CaptionStyle)
    {
        android.media.CCParser$CCMemory r0;
        android.view.accessibility.CaptioningManager$CaptionStyle r1;
        java.util.ArrayList r2, $r3;
        int i0;
        android.text.SpannableStringBuilder[] $r4, $r6;
        java.lang.Object[] $r5;
        android.media.CCParser$CCLineBuilder[] $r7, $r9;
        android.media.CCParser$CCLineBuilder $r8, $r10;
        android.text.SpannableStringBuilder $r11;

        r0 := @this: android.media.CCParser$CCMemory;

        r1 := @parameter0: android.view.accessibility.CaptioningManager$CaptionStyle;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(15);

        r2 = $r3;

        i0 = 1;

     label1:
        if i0 > 15 goto label4;

        $r7 = r0.<android.media.CCParser$CCMemory: android.media.CCParser$CCLineBuilder[] mLines>;

        $r8 = $r7[i0];

        if $r8 == null goto label2;

        $r9 = r0.<android.media.CCParser$CCMemory: android.media.CCParser$CCLineBuilder[] mLines>;

        $r10 = $r9[i0];

        $r11 = virtualinvoke $r10.<android.media.CCParser$CCLineBuilder: android.text.SpannableStringBuilder getStyledText(android.view.accessibility.CaptioningManager$CaptionStyle)>(r1);

        goto label3;

     label2:
        $r11 = null;

     label3:
        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>($r11);

        i0 = i0 + 1;

        goto label1;

     label4:
        $r4 = newarray (android.text.SpannableStringBuilder)[15];

        $r5 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (android.text.SpannableStringBuilder[]) $r5;

        return $r6;
    }

    private static int clamp(int, int, int)
    {
        int i0, i1, i2, $i3;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        if i0 >= i1 goto label1;

        $i3 = i1;

        goto label3;

     label1:
        if i0 <= i2 goto label2;

        $i3 = i2;

        goto label3;

     label2:
        $i3 = i0;

     label3:
        return $i3;
    }

    private void moveCursorTo(int, int)
    {
        android.media.CCParser$CCMemory r0;
        int i0, i1, $i2, $i3;

        r0 := @this: android.media.CCParser$CCMemory;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <android.media.CCParser$CCMemory: int clamp(int,int,int)>(i0, 1, 15);

        r0.<android.media.CCParser$CCMemory: int mRow> = $i2;

        $i3 = staticinvoke <android.media.CCParser$CCMemory: int clamp(int,int,int)>(i1, 1, 32);

        r0.<android.media.CCParser$CCMemory: int mCol> = $i3;

        return;
    }

    private void moveCursorToRow(int)
    {
        android.media.CCParser$CCMemory r0;
        int i0, $i1;

        r0 := @this: android.media.CCParser$CCMemory;

        i0 := @parameter0: int;

        $i1 = staticinvoke <android.media.CCParser$CCMemory: int clamp(int,int,int)>(i0, 1, 15);

        r0.<android.media.CCParser$CCMemory: int mRow> = $i1;

        return;
    }

    private void moveCursorByCol(int)
    {
        android.media.CCParser$CCMemory r0;
        int i0, $i1, $i2, $i3;

        r0 := @this: android.media.CCParser$CCMemory;

        i0 := @parameter0: int;

        $i1 = r0.<android.media.CCParser$CCMemory: int mCol>;

        $i2 = $i1 + i0;

        $i3 = staticinvoke <android.media.CCParser$CCMemory: int clamp(int,int,int)>($i2, 1, 32);

        r0.<android.media.CCParser$CCMemory: int mCol> = $i3;

        return;
    }

    private void moveBaselineTo(int, int)
    {
        android.media.CCParser$CCMemory r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, i17;
        android.media.CCParser$CCLineBuilder[] $r1, $r2, $r3, $r4, $r6, $r7, $r9;
        android.media.CCParser$CCLineBuilder $r5, $r8;

        r0 := @this: android.media.CCParser$CCMemory;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i4 = r0.<android.media.CCParser$CCMemory: int mRow>;

        if $i4 != i0 goto label01;

        return;

     label01:
        i2 = i1;

        if i0 >= i2 goto label02;

        i2 = i0;

     label02:
        $i5 = r0.<android.media.CCParser$CCMemory: int mRow>;

        if $i5 >= i2 goto label03;

        i2 = r0.<android.media.CCParser$CCMemory: int mRow>;

     label03:
        $i6 = r0.<android.media.CCParser$CCMemory: int mRow>;

        if i0 >= $i6 goto label05;

        i3 = i2 - 1;

     label04:
        if i3 < 0 goto label07;

        $r9 = r0.<android.media.CCParser$CCMemory: android.media.CCParser$CCLineBuilder[] mLines>;

        $i14 = i0 - i3;

        $r7 = r0.<android.media.CCParser$CCMemory: android.media.CCParser$CCLineBuilder[] mLines>;

        $i12 = r0.<android.media.CCParser$CCMemory: int mRow>;

        $i13 = $i12 - i3;

        $r8 = $r7[$i13];

        $r9[$i14] = $r8;

        i3 = i3 + -1;

        goto label04;

     label05:
        i15 = 0;

     label06:
        if i15 >= i2 goto label07;

        $r6 = r0.<android.media.CCParser$CCMemory: android.media.CCParser$CCLineBuilder[] mLines>;

        $i11 = i0 - i15;

        $r4 = r0.<android.media.CCParser$CCMemory: android.media.CCParser$CCLineBuilder[] mLines>;

        $i9 = r0.<android.media.CCParser$CCMemory: int mRow>;

        $i10 = $i9 - i15;

        $r5 = $r4[$i10];

        $r6[$i11] = $r5;

        i15 = i15 + 1;

        goto label06;

     label07:
        i16 = 0;

     label08:
        $i7 = i0 - i1;

        if i16 > $i7 goto label09;

        $r3 = r0.<android.media.CCParser$CCMemory: android.media.CCParser$CCLineBuilder[] mLines>;

        $r3[i16] = null;

        i16 = i16 + 1;

        goto label08;

     label09:
        i17 = i0 + 1;

     label10:
        $r1 = r0.<android.media.CCParser$CCMemory: android.media.CCParser$CCLineBuilder[] mLines>;

        $i8 = lengthof $r1;

        if i17 >= $i8 goto label11;

        $r2 = r0.<android.media.CCParser$CCMemory: android.media.CCParser$CCLineBuilder[] mLines>;

        $r2[i17] = null;

        i17 = i17 + 1;

        goto label10;

     label11:
        return;
    }

    private android.media.CCParser$CCLineBuilder getLineBuffer(int)
    {
        android.media.CCParser$CCMemory r0;
        int i0;
        android.media.CCParser$CCLineBuilder[] $r1, $r3, $r7;
        android.media.CCParser$CCLineBuilder $r2, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: android.media.CCParser$CCMemory;

        i0 := @parameter0: int;

        $r1 = r0.<android.media.CCParser$CCMemory: android.media.CCParser$CCLineBuilder[] mLines>;

        $r2 = $r1[i0];

        if $r2 != null goto label1;

        $r7 = r0.<android.media.CCParser$CCMemory: android.media.CCParser$CCLineBuilder[] mLines>;

        $r5 = new android.media.CCParser$CCLineBuilder;

        $r6 = r0.<android.media.CCParser$CCMemory: java.lang.String mBlankLine>;

        specialinvoke $r5.<android.media.CCParser$CCLineBuilder: void <init>(java.lang.String)>($r6);

        $r7[i0] = $r5;

     label1:
        $r3 = r0.<android.media.CCParser$CCMemory: android.media.CCParser$CCLineBuilder[] mLines>;

        $r4 = $r3[i0];

        return $r4;
    }

    static void access$100(android.media.CCParser$CCMemory, int, int)
    {
        android.media.CCParser$CCMemory r0;
        int i0, i1;

        r0 := @parameter0: android.media.CCParser$CCMemory;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<android.media.CCParser$CCMemory: void moveBaselineTo(int,int)>(i0, i1);

        return;
    }
}
