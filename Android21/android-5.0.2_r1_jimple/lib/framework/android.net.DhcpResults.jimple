public class android.net.DhcpResults extends android.net.StaticIpConfiguration
{
    private static final java.lang.String TAG;
    public java.net.InetAddress serverAddress;
    public java.lang.String vendorInfo;
    public int leaseDuration;
    public static final android.os.Parcelable$Creator CREATOR;

    public void <init>()
    {
        android.net.DhcpResults r0;

        r0 := @this: android.net.DhcpResults;

        specialinvoke r0.<android.net.StaticIpConfiguration: void <init>()>();

        return;
    }

    public void <init>(android.net.StaticIpConfiguration)
    {
        android.net.DhcpResults r0;
        android.net.StaticIpConfiguration r1;

        r0 := @this: android.net.DhcpResults;

        r1 := @parameter0: android.net.StaticIpConfiguration;

        specialinvoke r0.<android.net.StaticIpConfiguration: void <init>(android.net.StaticIpConfiguration)>(r1);

        return;
    }

    public void <init>(android.net.DhcpResults)
    {
        android.net.DhcpResults r0, r1;
        java.net.InetAddress $r2;
        java.lang.String $r3;
        int $i0;

        r0 := @this: android.net.DhcpResults;

        r1 := @parameter0: android.net.DhcpResults;

        specialinvoke r0.<android.net.StaticIpConfiguration: void <init>(android.net.StaticIpConfiguration)>(r1);

        if r1 == null goto label1;

        $r2 = r1.<android.net.DhcpResults: java.net.InetAddress serverAddress>;

        r0.<android.net.DhcpResults: java.net.InetAddress serverAddress> = $r2;

        $r3 = r1.<android.net.DhcpResults: java.lang.String vendorInfo>;

        r0.<android.net.DhcpResults: java.lang.String vendorInfo> = $r3;

        $i0 = r1.<android.net.DhcpResults: int leaseDuration>;

        r0.<android.net.DhcpResults: int leaseDuration> = $i0;

     label1:
        return;
    }

    public void updateFromDhcpRequest(android.net.DhcpResults)
    {
        android.net.DhcpResults r0, r1;
        java.net.InetAddress $r2, $r6;
        java.util.ArrayList $r3, $r4, $r5;
        int $i0;

        r0 := @this: android.net.DhcpResults;

        r1 := @parameter0: android.net.DhcpResults;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<android.net.DhcpResults: java.net.InetAddress gateway>;

        if $r2 != null goto label2;

        $r6 = r1.<android.net.DhcpResults: java.net.InetAddress gateway>;

        r0.<android.net.DhcpResults: java.net.InetAddress gateway> = $r6;

     label2:
        $r3 = r0.<android.net.DhcpResults: java.util.ArrayList dnsServers>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if $i0 != 0 goto label3;

        $r5 = r0.<android.net.DhcpResults: java.util.ArrayList dnsServers>;

        $r4 = r1.<android.net.DhcpResults: java.util.ArrayList dnsServers>;

        virtualinvoke $r5.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r4);

     label3:
        return;
    }

    public boolean hasMeteredHint()
    {
        android.net.DhcpResults r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: android.net.DhcpResults;

        $r1 = r0.<android.net.DhcpResults: java.lang.String vendorInfo>;

        if $r1 == null goto label1;

        $r2 = r0.<android.net.DhcpResults: java.lang.String vendorInfo>;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("ANDROID_METERED");

        return $z0;

     label1:
        return 0;
    }

    public void clear()
    {
        android.net.DhcpResults r0;

        r0 := @this: android.net.DhcpResults;

        specialinvoke r0.<android.net.StaticIpConfiguration: void clear()>();

        r0.<android.net.DhcpResults: java.lang.String vendorInfo> = null;

        r0.<android.net.DhcpResults: int leaseDuration> = 0;

        return;
    }

    public java.lang.String toString()
    {
        android.net.DhcpResults r0;
        java.lang.StringBuffer r1, $r2, $r4, $r7, $r10, $r11;
        java.lang.String $r3, $r8, $r13;
        java.net.InetAddress $r5;
        int $i0;

        r0 := @this: android.net.DhcpResults;

        $r2 = new java.lang.StringBuffer;

        $r3 = specialinvoke r0.<android.net.StaticIpConfiguration: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.StringBuffer: void <init>(java.lang.String)>($r3);

        r1 = $r2;

        $r4 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" DHCP server ");

        $r5 = r0.<android.net.DhcpResults: java.net.InetAddress serverAddress>;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r5);

        $r7 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" Vendor info ");

        $r8 = r0.<android.net.DhcpResults: java.lang.String vendorInfo>;

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" lease ");

        $i0 = r0.<android.net.DhcpResults: int leaseDuration>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" seconds");

        $r13 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r13;
    }

    public boolean equals(java.lang.Object)
    {
        android.net.DhcpResults r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.net.StaticIpConfiguration $r3;
        java.net.InetAddress $r4, $r5;
        java.lang.String $r6, $r7;
        int $i0, $i1;

        r0 := @this: android.net.DhcpResults;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof android.net.DhcpResults;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (android.net.DhcpResults) r1;

        $r3 = (android.net.StaticIpConfiguration) r1;

        $z1 = specialinvoke r0.<android.net.StaticIpConfiguration: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label3;

        $r5 = r0.<android.net.DhcpResults: java.net.InetAddress serverAddress>;

        $r4 = r2.<android.net.DhcpResults: java.net.InetAddress serverAddress>;

        $z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r5, $r4);

        if $z2 == 0 goto label3;

        $r7 = r0.<android.net.DhcpResults: java.lang.String vendorInfo>;

        $r6 = r2.<android.net.DhcpResults: java.lang.String vendorInfo>;

        $z3 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r7, $r6);

        if $z3 == 0 goto label3;

        $i1 = r0.<android.net.DhcpResults: int leaseDuration>;

        $i0 = r2.<android.net.DhcpResults: int leaseDuration>;

        if $i1 != $i0 goto label3;

        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        return $z4;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.net.DhcpResults r0;
        android.os.Parcel r1;
        int i0, $i1;
        java.net.InetAddress $r2;
        java.lang.String $r3;

        r0 := @this: android.net.DhcpResults;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        specialinvoke r0.<android.net.StaticIpConfiguration: void writeToParcel(android.os.Parcel,int)>(r1, i0);

        $i1 = r0.<android.net.DhcpResults: int leaseDuration>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r2 = r0.<android.net.DhcpResults: java.net.InetAddress serverAddress>;

        staticinvoke <android.net.NetworkUtils: void parcelInetAddress(android.os.Parcel,java.net.InetAddress,int)>(r1, $r2, i0);

        $r3 = r0.<android.net.DhcpResults: java.lang.String vendorInfo>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r3);

        return;
    }

    private static void readFromParcel(android.net.DhcpResults, android.os.Parcel)
    {
        android.net.DhcpResults r0;
        android.os.Parcel r1;
        int $i0;
        java.net.InetAddress $r2;
        java.lang.String $r3;

        r0 := @parameter0: android.net.DhcpResults;

        r1 := @parameter1: android.os.Parcel;

        staticinvoke <android.net.StaticIpConfiguration: void readFromParcel(android.net.StaticIpConfiguration,android.os.Parcel)>(r0, r1);

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.net.DhcpResults: int leaseDuration> = $i0;

        $r2 = staticinvoke <android.net.NetworkUtils: java.net.InetAddress unparcelInetAddress(android.os.Parcel)>(r1);

        r0.<android.net.DhcpResults: java.net.InetAddress serverAddress> = $r2;

        $r3 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.net.DhcpResults: java.lang.String vendorInfo> = $r3;

        return;
    }

    public boolean setIpAddress(java.lang.String, int)
    {
        android.net.DhcpResults r0;
        java.lang.String r1, $r11;
        int i0;
        java.net.Inet4Address r2;
        java.net.InetAddress $r3;
        android.net.LinkAddress $r4;
        java.lang.RuntimeException $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10;

        r0 := @this: android.net.DhcpResults;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $r3 = staticinvoke <android.net.NetworkUtils: java.net.InetAddress numericToInetAddress(java.lang.String)>(r1);

        r2 = (java.net.Inet4Address) $r3;

        $r4 = new android.net.LinkAddress;

        specialinvoke $r4.<android.net.LinkAddress: void <init>(java.net.InetAddress,int)>(r2, i0);

        r0.<android.net.DhcpResults: android.net.LinkAddress ipAddress> = $r4;

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setIpAddress failed with addrString ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DhcpResults", $r11);

        return 1;

     label4:
        return 0;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public boolean setGateway(java.lang.String)
    {
        android.net.DhcpResults r0;
        java.lang.String r1, $r8;
        java.net.InetAddress $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5, $r6, $r7;

        r0 := @this: android.net.DhcpResults;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = staticinvoke <android.net.NetworkUtils: java.net.InetAddress numericToInetAddress(java.lang.String)>(r1);

        r0.<android.net.DhcpResults: java.net.InetAddress gateway> = $r3;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setGateway failed with addrString ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DhcpResults", $r8);

        return 1;

     label4:
        return 0;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public boolean addDns(java.lang.String)
    {
        android.net.DhcpResults r0;
        java.lang.String r1, $r9;
        boolean $z0;
        java.util.ArrayList $r3;
        java.net.InetAddress $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6, $r7, $r8;

        r0 := @this: android.net.DhcpResults;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label4;

     label1:
        $r3 = r0.<android.net.DhcpResults: java.util.ArrayList dnsServers>;

        $r4 = staticinvoke <android.net.NetworkUtils: java.net.InetAddress numericToInetAddress(java.lang.String)>(r1);

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r4);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addDns failed with addrString ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DhcpResults", $r9);

        return 1;

     label4:
        return 0;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public boolean setServerAddress(java.lang.String)
    {
        android.net.DhcpResults r0;
        java.lang.String r1, $r8;
        java.net.InetAddress $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5, $r6, $r7;

        r0 := @this: android.net.DhcpResults;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = staticinvoke <android.net.NetworkUtils: java.net.InetAddress numericToInetAddress(java.lang.String)>(r1);

        r0.<android.net.DhcpResults: java.net.InetAddress serverAddress> = $r3;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setServerAddress failed with addrString ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("DhcpResults", $r8);

        return 1;

     label4:
        return 0;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public void setLeaseDuration(int)
    {
        android.net.DhcpResults r0;
        int i0;

        r0 := @this: android.net.DhcpResults;

        i0 := @parameter0: int;

        r0.<android.net.DhcpResults: int leaseDuration> = i0;

        return;
    }

    public void setVendorInfo(java.lang.String)
    {
        android.net.DhcpResults r0;
        java.lang.String r1;

        r0 := @this: android.net.DhcpResults;

        r1 := @parameter0: java.lang.String;

        r0.<android.net.DhcpResults: java.lang.String vendorInfo> = r1;

        return;
    }

    public void setDomains(java.lang.String)
    {
        android.net.DhcpResults r0;
        java.lang.String r1;

        r0 := @this: android.net.DhcpResults;

        r1 := @parameter0: java.lang.String;

        return;
    }

    static void access$000(android.net.DhcpResults, android.os.Parcel)
    {
        android.net.DhcpResults r0;
        android.os.Parcel r1;

        r0 := @parameter0: android.net.DhcpResults;

        r1 := @parameter1: android.os.Parcel;

        staticinvoke <android.net.DhcpResults: void readFromParcel(android.net.DhcpResults,android.os.Parcel)>(r0, r1);

        return;
    }

    static void <clinit>()
    {
        android.net.DhcpResults$1 $r0;

        <android.net.DhcpResults: java.lang.String TAG> = "DhcpResults";

        $r0 = new android.net.DhcpResults$1;

        specialinvoke $r0.<android.net.DhcpResults$1: void <init>()>();

        <android.net.DhcpResults: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }
}
