final class android.hardware.LegacySensorManager$LegacyListener extends java.lang.Object implements android.hardware.SensorEventListener
{
    private float[] mValues;
    private android.hardware.SensorListener mTarget;
    private int mSensors;
    private final android.hardware.LegacySensorManager$LmsFilter mYawfilter;

    void <init>(android.hardware.SensorListener)
    {
        android.hardware.LegacySensorManager$LegacyListener r0;
        android.hardware.SensorListener r1;
        float[] $r2;
        android.hardware.LegacySensorManager$LmsFilter $r3;

        r0 := @this: android.hardware.LegacySensorManager$LegacyListener;

        r1 := @parameter0: android.hardware.SensorListener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = newarray (float)[6];

        r0.<android.hardware.LegacySensorManager$LegacyListener: float[] mValues> = $r2;

        $r3 = new android.hardware.LegacySensorManager$LmsFilter;

        specialinvoke $r3.<android.hardware.LegacySensorManager$LmsFilter: void <init>()>();

        r0.<android.hardware.LegacySensorManager$LegacyListener: android.hardware.LegacySensorManager$LmsFilter mYawfilter> = $r3;

        r0.<android.hardware.LegacySensorManager$LegacyListener: android.hardware.SensorListener mTarget> = r1;

        r0.<android.hardware.LegacySensorManager$LegacyListener: int mSensors> = 0;

        return;
    }

    boolean registerSensor(int)
    {
        android.hardware.LegacySensorManager$LegacyListener r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        boolean z0, $z1;

        r0 := @this: android.hardware.LegacySensorManager$LegacyListener;

        i0 := @parameter0: int;

        $i1 = r0.<android.hardware.LegacySensorManager$LegacyListener: int mSensors>;

        $i2 = $i1 & i0;

        if $i2 == 0 goto label1;

        return 0;

     label1:
        $i3 = r0.<android.hardware.LegacySensorManager$LegacyListener: int mSensors>;

        z0 = staticinvoke <android.hardware.LegacySensorManager$LegacyListener: boolean hasOrientationSensor(int)>($i3);

        $i4 = r0.<android.hardware.LegacySensorManager$LegacyListener: int mSensors>;

        $i5 = $i4 | i0;

        r0.<android.hardware.LegacySensorManager$LegacyListener: int mSensors> = $i5;

        if z0 == 0 goto label2;

        $z1 = staticinvoke <android.hardware.LegacySensorManager$LegacyListener: boolean hasOrientationSensor(int)>(i0);

        if $z1 == 0 goto label2;

        return 0;

     label2:
        return 1;
    }

    boolean unregisterSensor(int)
    {
        android.hardware.LegacySensorManager$LegacyListener r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0, $z1;

        r0 := @this: android.hardware.LegacySensorManager$LegacyListener;

        i0 := @parameter0: int;

        $i1 = r0.<android.hardware.LegacySensorManager$LegacyListener: int mSensors>;

        $i2 = $i1 & i0;

        if $i2 != 0 goto label1;

        return 0;

     label1:
        $i4 = r0.<android.hardware.LegacySensorManager$LegacyListener: int mSensors>;

        $i3 = i0 ^ -1;

        $i5 = $i4 & $i3;

        r0.<android.hardware.LegacySensorManager$LegacyListener: int mSensors> = $i5;

        $z0 = staticinvoke <android.hardware.LegacySensorManager$LegacyListener: boolean hasOrientationSensor(int)>(i0);

        if $z0 == 0 goto label2;

        $i6 = r0.<android.hardware.LegacySensorManager$LegacyListener: int mSensors>;

        $z1 = staticinvoke <android.hardware.LegacySensorManager$LegacyListener: boolean hasOrientationSensor(int)>($i6);

        if $z1 == 0 goto label2;

        return 0;

     label2:
        return 1;
    }

    boolean hasSensors()
    {
        android.hardware.LegacySensorManager$LegacyListener r0;
        int $i0;
        boolean $z0;

        r0 := @this: android.hardware.LegacySensorManager$LegacyListener;

        $i0 = r0.<android.hardware.LegacySensorManager$LegacyListener: int mSensors>;

        if $i0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static boolean hasOrientationSensor(int)
    {
        int i0, $i1;
        boolean $z0;

        i0 := @parameter0: int;

        $i1 = i0 & 129;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void onAccuracyChanged(android.hardware.Sensor, int)
    {
        android.hardware.LegacySensorManager$LegacyListener r0;
        android.hardware.Sensor r1;
        int i0, $i1, $i2;
        android.hardware.SensorListener $r3;
        java.lang.AbstractMethodError $r4;

        r0 := @this: android.hardware.LegacySensorManager$LegacyListener;

        r1 := @parameter0: android.hardware.Sensor;

        i0 := @parameter1: int;

     label1:
        $r3 = r0.<android.hardware.LegacySensorManager$LegacyListener: android.hardware.SensorListener mTarget>;

        $i1 = virtualinvoke r1.<android.hardware.Sensor: int getType()>();

        $i2 = staticinvoke <android.hardware.LegacySensorManager$LegacyListener: int getLegacySensorType(int)>($i1);

        interfaceinvoke $r3.<android.hardware.SensorListener: void onAccuracyChanged(int,int)>($i2, i0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch java.lang.AbstractMethodError from label1 to label2 with label3;
    }

    public void onSensorChanged(android.hardware.SensorEvent)
    {
        android.hardware.LegacySensorManager$LegacyListener r0;
        android.hardware.SensorEvent r1;
        float[] r2, $r3, $r4, $r5;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        float $f0, $f1, $f2, $f3, $f4;
        android.hardware.Sensor $r6;
        android.hardware.SensorListener $r7, $r9, $r10;
        long $l7;
        android.hardware.LegacySensorManager$LmsFilter $r8;

        r0 := @this: android.hardware.LegacySensorManager$LegacyListener;

        r1 := @parameter0: android.hardware.SensorEvent;

        r2 = r0.<android.hardware.LegacySensorManager$LegacyListener: float[] mValues>;

        $r3 = r1.<android.hardware.SensorEvent: float[] values>;

        $f0 = $r3[0];

        r2[0] = $f0;

        $r4 = r1.<android.hardware.SensorEvent: float[] values>;

        $f1 = $r4[1];

        r2[1] = $f1;

        $r5 = r1.<android.hardware.SensorEvent: float[] values>;

        $f2 = $r5[2];

        r2[2] = $f2;

        $r6 = r1.<android.hardware.SensorEvent: android.hardware.Sensor sensor>;

        i0 = virtualinvoke $r6.<android.hardware.Sensor: int getType()>();

        i1 = staticinvoke <android.hardware.LegacySensorManager$LegacyListener: int getLegacySensorType(int)>(i0);

        $i2 = staticinvoke <android.hardware.LegacySensorManager: int getRotation()>();

        specialinvoke r0.<android.hardware.LegacySensorManager$LegacyListener: void mapSensorDataToWindow(int,float[],int)>(i1, r2, $i2);

        if i0 != 3 goto label2;

        $i4 = r0.<android.hardware.LegacySensorManager$LegacyListener: int mSensors>;

        $i3 = $i4 & 128;

        if $i3 == 0 goto label1;

        $r10 = r0.<android.hardware.LegacySensorManager$LegacyListener: android.hardware.SensorListener mTarget>;

        interfaceinvoke $r10.<android.hardware.SensorListener: void onSensorChanged(int,float[])>(128, r2);

     label1:
        $i6 = r0.<android.hardware.LegacySensorManager$LegacyListener: int mSensors>;

        $i5 = $i6 & 1;

        if $i5 == 0 goto label3;

        $r8 = r0.<android.hardware.LegacySensorManager$LegacyListener: android.hardware.LegacySensorManager$LmsFilter mYawfilter>;

        $l7 = r1.<android.hardware.SensorEvent: long timestamp>;

        $f3 = r2[0];

        $f4 = virtualinvoke $r8.<android.hardware.LegacySensorManager$LmsFilter: float filter(long,float)>($l7, $f3);

        r2[0] = $f4;

        $r9 = r0.<android.hardware.LegacySensorManager$LegacyListener: android.hardware.SensorListener mTarget>;

        interfaceinvoke $r9.<android.hardware.SensorListener: void onSensorChanged(int,float[])>(1, r2);

        goto label3;

     label2:
        $r7 = r0.<android.hardware.LegacySensorManager$LegacyListener: android.hardware.SensorListener mTarget>;

        interfaceinvoke $r7.<android.hardware.SensorListener: void onSensorChanged(int,float[])>(i1, r2);

     label3:
        return;
    }

    private void mapSensorDataToWindow(int, float[], int)
    {
        android.hardware.LegacySensorManager$LegacyListener r0;
        int i0, i1, $i2, $i3;
        float[] r1;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, f11, f12, f13;
        byte $b4, $b5;
        short $s6;

        r0 := @this: android.hardware.LegacySensorManager$LegacyListener;

        i0 := @parameter0: int;

        r1 := @parameter1: float[];

        i1 := @parameter2: int;

        f0 = r1[0];

        f1 = r1[1];

        f2 = r1[2];

        lookupswitch(i0)
        {
            case 1: goto label01;
            case 2: goto label02;
            case 8: goto label03;
            case 128: goto label01;
            default: goto label04;
        };

     label01:
        f2 = neg f2;

        goto label04;

     label02:
        f0 = neg f0;

        f1 = neg f1;

        f2 = neg f2;

        goto label04;

     label03:
        f0 = neg f0;

        f1 = neg f1;

     label04:
        r1[0] = f0;

        r1[1] = f1;

        r1[2] = f2;

        r1[3] = f0;

        r1[4] = f1;

        r1[5] = f2;

        $i2 = i1 & 1;

        if $i2 == 0 goto label09;

        lookupswitch(i0)
        {
            case 1: goto label06;
            case 2: goto label05;
            case 8: goto label05;
            case 128: goto label06;
            default: goto label09;
        };

     label05:
        $f8 = neg f1;

        r1[0] = $f8;

        r1[1] = f0;

        r1[2] = f2;

        goto label09;

     label06:
        $b5 = f0 cmpg 270.0F;

        if $b5 >= 0 goto label07;

        $s6 = 90;

        goto label08;

     label07:
        $s6 = -270;

     label08:
        $f9 = (float) $s6;

        $f10 = f0 + $f9;

        r1[0] = $f10;

        r1[1] = f2;

        r1[2] = f1;

     label09:
        $i3 = i1 & 2;

        if $i3 == 0 goto label14;

        f11 = r1[0];

        f12 = r1[1];

        f13 = r1[2];

        lookupswitch(i0)
        {
            case 1: goto label11;
            case 2: goto label10;
            case 8: goto label10;
            case 128: goto label11;
            default: goto label14;
        };

     label10:
        $f3 = neg f11;

        r1[0] = $f3;

        $f4 = neg f12;

        r1[1] = $f4;

        r1[2] = f13;

        goto label14;

     label11:
        $b4 = f11 cmpl 180.0F;

        if $b4 < 0 goto label12;

        $f5 = f11 - 180.0F;

        goto label13;

     label12:
        $f5 = f11 + 180.0F;

     label13:
        r1[0] = $f5;

        $f6 = neg f12;

        r1[1] = $f6;

        $f7 = neg f13;

        r1[2] = $f7;

     label14:
        return;
    }

    private static int getLegacySensorType(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label5;
            case 5: goto label5;
            case 6: goto label5;
            case 7: goto label4;
            default: goto label5;
        };

     label1:
        return 2;

     label2:
        return 8;

     label3:
        return 128;

     label4:
        return 4;

     label5:
        return 0;
    }
}
