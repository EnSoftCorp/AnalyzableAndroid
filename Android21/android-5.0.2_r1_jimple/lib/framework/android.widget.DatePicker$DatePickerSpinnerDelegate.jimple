class android.widget.DatePicker$DatePickerSpinnerDelegate extends android.widget.DatePicker$AbstractDatePickerDelegate
{
    private static final java.lang.String DATE_FORMAT;
    private static final int DEFAULT_START_YEAR;
    private static final int DEFAULT_END_YEAR;
    private static final boolean DEFAULT_CALENDAR_VIEW_SHOWN;
    private static final boolean DEFAULT_SPINNERS_SHOWN;
    private static final boolean DEFAULT_ENABLED_STATE;
    private final android.widget.LinearLayout mSpinners;
    private final android.widget.NumberPicker mDaySpinner;
    private final android.widget.NumberPicker mMonthSpinner;
    private final android.widget.NumberPicker mYearSpinner;
    private final android.widget.EditText mDaySpinnerInput;
    private final android.widget.EditText mMonthSpinnerInput;
    private final android.widget.EditText mYearSpinnerInput;
    private final android.widget.CalendarView mCalendarView;
    private java.lang.String[] mShortMonths;
    private final java.text.DateFormat mDateFormat;
    private int mNumberOfMonths;
    private java.util.Calendar mTempDate;
    private java.util.Calendar mMinDate;
    private java.util.Calendar mMaxDate;
    private java.util.Calendar mCurrentDate;
    private boolean mIsEnabled;

    void <init>(android.widget.DatePicker, android.content.Context, android.util.AttributeSet, int, int)
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        android.widget.DatePicker r1, $r14, $r15, $r17, $r22, $r35, $r43, $r67, $r68;
        android.content.Context r2;
        android.util.AttributeSet r3;
        int i0, i1, i2, i3, i4, $i5, $i6, $i8, $i9, $i12, $i13;
        android.content.res.TypedArray r4;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        java.lang.String r5, r6;
        android.view.LayoutInflater r7;
        android.widget.DatePicker$DatePickerSpinnerDelegate$1 r8, $r16;
        java.util.Locale $r9;
        java.text.SimpleDateFormat $r10;
        int[] $r11;
        java.lang.Object $r12;
        android.view.View $r18, $r19, $r27, $r30, $r34, $r45, $r48, $r51;
        android.widget.LinearLayout $r20;
        android.widget.CalendarView $r21, $r23;
        android.widget.DatePicker$DatePickerSpinnerDelegate$2 $r24;
        android.widget.NumberPicker $r25, $r28, $r29, $r31, $r32, $r33, $r37, $r38, $r39, $r40, $r41, $r46, $r47, $r52, $r53, $r54;
        android.widget.NumberPicker$Formatter $r26;
        android.widget.EditText $r36, $r44, $r49;
        java.lang.String[] $r42;
        java.util.Calendar $r50, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r69;
        long $l7, $l10, $l11;

        r0 := @this: android.widget.DatePicker$DatePickerSpinnerDelegate;

        r1 := @parameter0: android.widget.DatePicker;

        r2 := @parameter1: android.content.Context;

        r3 := @parameter2: android.util.AttributeSet;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        specialinvoke r0.<android.widget.DatePicker$AbstractDatePickerDelegate: void <init>(android.widget.DatePicker,android.content.Context)>(r1, r2);

        $r10 = new java.text.SimpleDateFormat;

        specialinvoke $r10.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("MM/dd/yyyy");

        r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.text.DateFormat mDateFormat> = $r10;

        r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: boolean mIsEnabled> = 1;

        r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.DatePicker mDelegator> = r1;

        r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.content.Context mContext> = r2;

        $r9 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        virtualinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: void setCurrentLocale(java.util.Locale)>($r9);

        $r11 = <com.android.internal.R$styleable: int[] DatePicker>;

        r4 = virtualinvoke r2.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r3, $r11, i0, i1);

        z0 = virtualinvoke r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(6, 1);

        z1 = virtualinvoke r4.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(7, 1);

        i2 = virtualinvoke r4.<android.content.res.TypedArray: int getInt(int,int)>(1, 1900);

        i3 = virtualinvoke r4.<android.content.res.TypedArray: int getInt(int,int)>(2, 2100);

        r5 = virtualinvoke r4.<android.content.res.TypedArray: java.lang.String getString(int)>(4);

        r6 = virtualinvoke r4.<android.content.res.TypedArray: java.lang.String getString(int)>(5);

        i4 = virtualinvoke r4.<android.content.res.TypedArray: int getResourceId(int,int)>(19, 17367106);

        virtualinvoke r4.<android.content.res.TypedArray: void recycle()>();

        $r12 = virtualinvoke r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");

        r7 = (android.view.LayoutInflater) $r12;

        $r14 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.DatePicker mDelegator>;

        virtualinvoke r7.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>(i4, $r14, 1);

        $r16 = new android.widget.DatePicker$DatePickerSpinnerDelegate$1;

        specialinvoke $r16.<android.widget.DatePicker$DatePickerSpinnerDelegate$1: void <init>(android.widget.DatePicker$DatePickerSpinnerDelegate)>(r0);

        r8 = $r16;

        $r15 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.DatePicker mDelegator>;

        $r19 = virtualinvoke $r15.<android.widget.DatePicker: android.view.View findViewById(int)>(16909027);

        $r20 = (android.widget.LinearLayout) $r19;

        r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.LinearLayout mSpinners> = $r20;

        $r17 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.DatePicker mDelegator>;

        $r18 = virtualinvoke $r17.<android.widget.DatePicker: android.view.View findViewById(int)>(16909031);

        $r23 = (android.widget.CalendarView) $r18;

        r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.CalendarView mCalendarView> = $r23;

        $r21 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.CalendarView mCalendarView>;

        $r24 = new android.widget.DatePicker$DatePickerSpinnerDelegate$2;

        specialinvoke $r24.<android.widget.DatePicker$DatePickerSpinnerDelegate$2: void <init>(android.widget.DatePicker$DatePickerSpinnerDelegate)>(r0);

        virtualinvoke $r21.<android.widget.CalendarView: void setOnDateChangeListener(android.widget.CalendarView$OnDateChangeListener)>($r24);

        $r22 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.DatePicker mDelegator>;

        $r27 = virtualinvoke $r22.<android.widget.DatePicker: android.view.View findViewById(int)>(16909029);

        $r28 = (android.widget.NumberPicker) $r27;

        r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mDaySpinner> = $r28;

        $r25 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mDaySpinner>;

        $r26 = staticinvoke <android.widget.NumberPicker: android.widget.NumberPicker$Formatter getTwoDigitFormatter()>();

        virtualinvoke $r25.<android.widget.NumberPicker: void setFormatter(android.widget.NumberPicker$Formatter)>($r26);

        $r31 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mDaySpinner>;

        virtualinvoke $r31.<android.widget.NumberPicker: void setOnLongPressUpdateInterval(long)>(100L);

        $r32 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mDaySpinner>;

        virtualinvoke $r32.<android.widget.NumberPicker: void setOnValueChangedListener(android.widget.NumberPicker$OnValueChangeListener)>(r8);

        $r29 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mDaySpinner>;

        $r30 = virtualinvoke $r29.<android.widget.NumberPicker: android.view.View findViewById(int)>(16909128);

        $r36 = (android.widget.EditText) $r30;

        r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.EditText mDaySpinnerInput> = $r36;

        $r35 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.DatePicker mDelegator>;

        $r34 = virtualinvoke $r35.<android.widget.DatePicker: android.view.View findViewById(int)>(16909028);

        $r33 = (android.widget.NumberPicker) $r34;

        r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mMonthSpinner> = $r33;

        $r38 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mMonthSpinner>;

        virtualinvoke $r38.<android.widget.NumberPicker: void setMinValue(int)>(0);

        $r37 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mMonthSpinner>;

        $i6 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: int mNumberOfMonths>;

        $i5 = $i6 - 1;

        virtualinvoke $r37.<android.widget.NumberPicker: void setMaxValue(int)>($i5);

        $r41 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mMonthSpinner>;

        $r42 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.lang.String[] mShortMonths>;

        virtualinvoke $r41.<android.widget.NumberPicker: void setDisplayedValues(java.lang.String[])>($r42);

        $r40 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mMonthSpinner>;

        virtualinvoke $r40.<android.widget.NumberPicker: void setOnLongPressUpdateInterval(long)>(200L);

        $r39 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mMonthSpinner>;

        virtualinvoke $r39.<android.widget.NumberPicker: void setOnValueChangedListener(android.widget.NumberPicker$OnValueChangeListener)>(r8);

        $r46 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mMonthSpinner>;

        $r45 = virtualinvoke $r46.<android.widget.NumberPicker: android.view.View findViewById(int)>(16909128);

        $r44 = (android.widget.EditText) $r45;

        r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.EditText mMonthSpinnerInput> = $r44;

        $r43 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.DatePicker mDelegator>;

        $r51 = virtualinvoke $r43.<android.widget.DatePicker: android.view.View findViewById(int)>(16909030);

        $r52 = (android.widget.NumberPicker) $r51;

        r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mYearSpinner> = $r52;

        $r53 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mYearSpinner>;

        virtualinvoke $r53.<android.widget.NumberPicker: void setOnLongPressUpdateInterval(long)>(100L);

        $r54 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mYearSpinner>;

        virtualinvoke $r54.<android.widget.NumberPicker: void setOnValueChangedListener(android.widget.NumberPicker$OnValueChangeListener)>(r8);

        $r47 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mYearSpinner>;

        $r48 = virtualinvoke $r47.<android.widget.NumberPicker: android.view.View findViewById(int)>(16909128);

        $r49 = (android.widget.EditText) $r48;

        r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.EditText mYearSpinnerInput> = $r49;

        if z0 != 0 goto label1;

        if z1 != 0 goto label1;

        virtualinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: void setSpinnersShown(boolean)>(1);

        goto label2;

     label1:
        virtualinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: void setSpinnersShown(boolean)>(z0);

        virtualinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: void setCalendarViewShown(boolean)>(z1);

     label2:
        $r50 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mTempDate>;

        virtualinvoke $r50.<java.util.Calendar: void clear()>();

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r5);

        if $z3 != 0 goto label3;

        $r65 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mTempDate>;

        $z5 = specialinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: boolean parseDate(java.lang.String,java.util.Calendar)>(r5, $r65);

        if $z5 != 0 goto label4;

        $r69 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mTempDate>;

        virtualinvoke $r69.<java.util.Calendar: void set(int,int,int)>(i2, 0, 1);

        goto label4;

     label3:
        $r58 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mTempDate>;

        virtualinvoke $r58.<java.util.Calendar: void set(int,int,int)>(i2, 0, 1);

     label4:
        $r59 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mTempDate>;

        $l7 = virtualinvoke $r59.<java.util.Calendar: long getTimeInMillis()>();

        virtualinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: void setMinDate(long)>($l7);

        $r55 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mTempDate>;

        virtualinvoke $r55.<java.util.Calendar: void clear()>();

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r6);

        if $z2 != 0 goto label5;

        $r64 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mTempDate>;

        $z4 = specialinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: boolean parseDate(java.lang.String,java.util.Calendar)>(r6, $r64);

        if $z4 != 0 goto label6;

        $r66 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mTempDate>;

        virtualinvoke $r66.<java.util.Calendar: void set(int,int,int)>(i3, 11, 31);

        goto label6;

     label5:
        $r56 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mTempDate>;

        virtualinvoke $r56.<java.util.Calendar: void set(int,int,int)>(i3, 11, 31);

     label6:
        $r57 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mTempDate>;

        $l10 = virtualinvoke $r57.<java.util.Calendar: long getTimeInMillis()>();

        virtualinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: void setMaxDate(long)>($l10);

        $r62 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mCurrentDate>;

        $l11 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke $r62.<java.util.Calendar: void setTimeInMillis(long)>($l11);

        $r63 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mCurrentDate>;

        $i8 = virtualinvoke $r63.<java.util.Calendar: int get(int)>(1);

        $r60 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mCurrentDate>;

        $i9 = virtualinvoke $r60.<java.util.Calendar: int get(int)>(2);

        $r61 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mCurrentDate>;

        $i12 = virtualinvoke $r61.<java.util.Calendar: int get(int)>(5);

        virtualinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: void init(int,int,int,android.widget.DatePicker$OnDateChangedListener)>($i8, $i9, $i12, null);

        specialinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: void reorderSpinners()>();

        specialinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: void setContentDescriptions()>();

        $r67 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.DatePicker mDelegator>;

        $i13 = virtualinvoke $r67.<android.widget.DatePicker: int getImportantForAccessibility()>();

        if $i13 != 0 goto label7;

        $r68 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.DatePicker mDelegator>;

        virtualinvoke $r68.<android.widget.DatePicker: void setImportantForAccessibility(int)>(1);

     label7:
        return;
    }

    public void init(int, int, int, android.widget.DatePicker$OnDateChangedListener)
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        int i0, i1, i2;
        android.widget.DatePicker$OnDateChangedListener r1;

        r0 := @this: android.widget.DatePicker$DatePickerSpinnerDelegate;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: android.widget.DatePicker$OnDateChangedListener;

        specialinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: void setDate(int,int,int)>(i0, i1, i2);

        specialinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: void updateSpinners()>();

        specialinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: void updateCalendarView()>();

        r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.DatePicker$OnDateChangedListener mOnDateChangedListener> = r1;

        return;
    }

    public void updateDate(int, int, int)
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        int i0, i1, i2;
        boolean $z0;

        r0 := @this: android.widget.DatePicker$DatePickerSpinnerDelegate;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $z0 = specialinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: boolean isNewDate(int,int,int)>(i0, i1, i2);

        if $z0 != 0 goto label1;

        return;

     label1:
        specialinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: void setDate(int,int,int)>(i0, i1, i2);

        specialinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: void updateSpinners()>();

        specialinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: void updateCalendarView()>();

        specialinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: void notifyDateChanged()>();

        return;
    }

    public int getYear()
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        java.util.Calendar $r1;
        int $i0;

        r0 := @this: android.widget.DatePicker$DatePickerSpinnerDelegate;

        $r1 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mCurrentDate>;

        $i0 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(1);

        return $i0;
    }

    public int getMonth()
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        java.util.Calendar $r1;
        int $i0;

        r0 := @this: android.widget.DatePicker$DatePickerSpinnerDelegate;

        $r1 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mCurrentDate>;

        $i0 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(2);

        return $i0;
    }

    public int getDayOfMonth()
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        java.util.Calendar $r1;
        int $i0;

        r0 := @this: android.widget.DatePicker$DatePickerSpinnerDelegate;

        $r1 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mCurrentDate>;

        $i0 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(5);

        return $i0;
    }

    public void setFirstDayOfWeek(int)
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        int i0;
        android.widget.CalendarView $r1;

        r0 := @this: android.widget.DatePicker$DatePickerSpinnerDelegate;

        i0 := @parameter0: int;

        $r1 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.CalendarView mCalendarView>;

        virtualinvoke $r1.<android.widget.CalendarView: void setFirstDayOfWeek(int)>(i0);

        return;
    }

    public int getFirstDayOfWeek()
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        android.widget.CalendarView $r1;
        int $i0;

        r0 := @this: android.widget.DatePicker$DatePickerSpinnerDelegate;

        $r1 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.CalendarView mCalendarView>;

        $i0 = virtualinvoke $r1.<android.widget.CalendarView: int getFirstDayOfWeek()>();

        return $i0;
    }

    public void setMinDate(long)
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        long l0, $l3;
        java.util.Calendar $r1, $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11;
        int $i1, $i2, $i4, $i5;
        android.widget.CalendarView $r5;
        boolean $z0;

        r0 := @this: android.widget.DatePicker$DatePickerSpinnerDelegate;

        l0 := @parameter0: long;

        $r1 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mTempDate>;

        virtualinvoke $r1.<java.util.Calendar: void setTimeInMillis(long)>(l0);

        $r2 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mTempDate>;

        $i1 = virtualinvoke $r2.<java.util.Calendar: int get(int)>(1);

        $r3 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mMinDate>;

        $i2 = virtualinvoke $r3.<java.util.Calendar: int get(int)>(1);

        if $i1 != $i2 goto label1;

        $r10 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mTempDate>;

        $i4 = virtualinvoke $r10.<java.util.Calendar: int get(int)>(6);

        $r11 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mMinDate>;

        $i5 = virtualinvoke $r11.<java.util.Calendar: int get(int)>(6);

        if $i4 == $i5 goto label1;

        return;

     label1:
        $r4 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mMinDate>;

        virtualinvoke $r4.<java.util.Calendar: void setTimeInMillis(long)>(l0);

        $r5 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.CalendarView mCalendarView>;

        virtualinvoke $r5.<android.widget.CalendarView: void setMinDate(long)>(l0);

        $r7 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mCurrentDate>;

        $r6 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mMinDate>;

        $z0 = virtualinvoke $r7.<java.util.Calendar: boolean before(java.lang.Object)>($r6);

        if $z0 == 0 goto label2;

        $r9 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mCurrentDate>;

        $r8 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mMinDate>;

        $l3 = virtualinvoke $r8.<java.util.Calendar: long getTimeInMillis()>();

        virtualinvoke $r9.<java.util.Calendar: void setTimeInMillis(long)>($l3);

        specialinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: void updateCalendarView()>();

     label2:
        specialinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: void updateSpinners()>();

        return;
    }

    public java.util.Calendar getMinDate()
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        java.util.Calendar r1;
        android.widget.CalendarView $r2;
        long $l0;

        r0 := @this: android.widget.DatePicker$DatePickerSpinnerDelegate;

        r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r2 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.CalendarView mCalendarView>;

        $l0 = virtualinvoke $r2.<android.widget.CalendarView: long getMinDate()>();

        virtualinvoke r1.<java.util.Calendar: void setTimeInMillis(long)>($l0);

        return r1;
    }

    public void setMaxDate(long)
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        long l0, $l3;
        java.util.Calendar $r1, $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11;
        int $i1, $i2, $i4, $i5;
        android.widget.CalendarView $r5;
        boolean $z0;

        r0 := @this: android.widget.DatePicker$DatePickerSpinnerDelegate;

        l0 := @parameter0: long;

        $r1 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mTempDate>;

        virtualinvoke $r1.<java.util.Calendar: void setTimeInMillis(long)>(l0);

        $r2 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mTempDate>;

        $i1 = virtualinvoke $r2.<java.util.Calendar: int get(int)>(1);

        $r3 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mMaxDate>;

        $i2 = virtualinvoke $r3.<java.util.Calendar: int get(int)>(1);

        if $i1 != $i2 goto label1;

        $r10 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mTempDate>;

        $i4 = virtualinvoke $r10.<java.util.Calendar: int get(int)>(6);

        $r11 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mMaxDate>;

        $i5 = virtualinvoke $r11.<java.util.Calendar: int get(int)>(6);

        if $i4 == $i5 goto label1;

        return;

     label1:
        $r4 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mMaxDate>;

        virtualinvoke $r4.<java.util.Calendar: void setTimeInMillis(long)>(l0);

        $r5 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.CalendarView mCalendarView>;

        virtualinvoke $r5.<android.widget.CalendarView: void setMaxDate(long)>(l0);

        $r7 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mCurrentDate>;

        $r6 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mMaxDate>;

        $z0 = virtualinvoke $r7.<java.util.Calendar: boolean after(java.lang.Object)>($r6);

        if $z0 == 0 goto label2;

        $r9 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mCurrentDate>;

        $r8 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mMaxDate>;

        $l3 = virtualinvoke $r8.<java.util.Calendar: long getTimeInMillis()>();

        virtualinvoke $r9.<java.util.Calendar: void setTimeInMillis(long)>($l3);

        specialinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: void updateCalendarView()>();

     label2:
        specialinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: void updateSpinners()>();

        return;
    }

    public java.util.Calendar getMaxDate()
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        java.util.Calendar r1;
        android.widget.CalendarView $r2;
        long $l0;

        r0 := @this: android.widget.DatePicker$DatePickerSpinnerDelegate;

        r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r2 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.CalendarView mCalendarView>;

        $l0 = virtualinvoke $r2.<android.widget.CalendarView: long getMaxDate()>();

        virtualinvoke r1.<java.util.Calendar: void setTimeInMillis(long)>($l0);

        return r1;
    }

    public void setEnabled(boolean)
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        boolean z0;
        android.widget.NumberPicker $r1, $r2, $r3;
        android.widget.CalendarView $r4;

        r0 := @this: android.widget.DatePicker$DatePickerSpinnerDelegate;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mDaySpinner>;

        virtualinvoke $r1.<android.widget.NumberPicker: void setEnabled(boolean)>(z0);

        $r2 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mMonthSpinner>;

        virtualinvoke $r2.<android.widget.NumberPicker: void setEnabled(boolean)>(z0);

        $r3 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mYearSpinner>;

        virtualinvoke $r3.<android.widget.NumberPicker: void setEnabled(boolean)>(z0);

        $r4 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.CalendarView mCalendarView>;

        virtualinvoke $r4.<android.widget.CalendarView: void setEnabled(boolean)>(z0);

        r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: boolean mIsEnabled> = z0;

        return;
    }

    public boolean isEnabled()
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        boolean $z0;

        r0 := @this: android.widget.DatePicker$DatePickerSpinnerDelegate;

        $z0 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: boolean mIsEnabled>;

        return $z0;
    }

    public android.widget.CalendarView getCalendarView()
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        android.widget.CalendarView $r1;

        r0 := @this: android.widget.DatePicker$DatePickerSpinnerDelegate;

        $r1 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.CalendarView mCalendarView>;

        return $r1;
    }

    public void setCalendarViewShown(boolean)
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        boolean z0;
        android.widget.CalendarView $r1;
        byte $b0;

        r0 := @this: android.widget.DatePicker$DatePickerSpinnerDelegate;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.CalendarView mCalendarView>;

        if z0 == 0 goto label1;

        $b0 = 0;

        goto label2;

     label1:
        $b0 = 8;

     label2:
        virtualinvoke $r1.<android.widget.CalendarView: void setVisibility(int)>($b0);

        return;
    }

    public boolean getCalendarViewShown()
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        android.widget.CalendarView $r1;
        int $i0;
        boolean $z0;

        r0 := @this: android.widget.DatePicker$DatePickerSpinnerDelegate;

        $r1 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.CalendarView mCalendarView>;

        $i0 = virtualinvoke $r1.<android.widget.CalendarView: int getVisibility()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void setSpinnersShown(boolean)
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        boolean z0;
        android.widget.LinearLayout $r1;
        byte $b0;

        r0 := @this: android.widget.DatePicker$DatePickerSpinnerDelegate;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.LinearLayout mSpinners>;

        if z0 == 0 goto label1;

        $b0 = 0;

        goto label2;

     label1:
        $b0 = 8;

     label2:
        virtualinvoke $r1.<android.widget.LinearLayout: void setVisibility(int)>($b0);

        return;
    }

    public boolean getSpinnersShown()
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        android.widget.LinearLayout $r1;
        boolean $z0;

        r0 := @this: android.widget.DatePicker$DatePickerSpinnerDelegate;

        $r1 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.LinearLayout mSpinners>;

        $z0 = virtualinvoke $r1.<android.widget.LinearLayout: boolean isShown()>();

        return $z0;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        android.content.res.Configuration r1;
        java.util.Locale $r2;

        r0 := @this: android.widget.DatePicker$DatePickerSpinnerDelegate;

        r1 := @parameter0: android.content.res.Configuration;

        $r2 = r1.<android.content.res.Configuration: java.util.Locale locale>;

        virtualinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: void setCurrentLocale(java.util.Locale)>($r2);

        return;
    }

    public android.os.Parcelable onSaveInstanceState(android.os.Parcelable)
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        android.os.Parcelable r1;
        android.widget.DatePicker$SavedState $r2;
        int $i0, $i1, $i2;

        r0 := @this: android.widget.DatePicker$DatePickerSpinnerDelegate;

        r1 := @parameter0: android.os.Parcelable;

        $r2 = new android.widget.DatePicker$SavedState;

        $i0 = virtualinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: int getYear()>();

        $i1 = virtualinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: int getMonth()>();

        $i2 = virtualinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: int getDayOfMonth()>();

        specialinvoke $r2.<android.widget.DatePicker$SavedState: void <init>(android.os.Parcelable,int,int,int,android.widget.DatePicker$1)>(r1, $i0, $i1, $i2, null);

        return $r2;
    }

    public void onRestoreInstanceState(android.os.Parcelable)
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        android.os.Parcelable r1;
        android.widget.DatePicker$SavedState r2;
        int $i0, $i1, $i2;

        r0 := @this: android.widget.DatePicker$DatePickerSpinnerDelegate;

        r1 := @parameter0: android.os.Parcelable;

        r2 = (android.widget.DatePicker$SavedState) r1;

        $i0 = staticinvoke <android.widget.DatePicker$SavedState: int access$1100(android.widget.DatePicker$SavedState)>(r2);

        $i1 = staticinvoke <android.widget.DatePicker$SavedState: int access$1200(android.widget.DatePicker$SavedState)>(r2);

        $i2 = staticinvoke <android.widget.DatePicker$SavedState: int access$1300(android.widget.DatePicker$SavedState)>(r2);

        specialinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: void setDate(int,int,int)>($i0, $i1, $i2);

        specialinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: void updateSpinners()>();

        specialinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: void updateCalendarView()>();

        return;
    }

    public boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        android.view.accessibility.AccessibilityEvent r1;

        r0 := @this: android.widget.DatePicker$DatePickerSpinnerDelegate;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        virtualinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        return 1;
    }

    public void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        android.view.accessibility.AccessibilityEvent r1;
        java.lang.String r2;
        java.util.Calendar $r3;
        android.content.Context $r4;
        long $l1;
        java.util.List $r5;

        r0 := @this: android.widget.DatePicker$DatePickerSpinnerDelegate;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $r4 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.content.Context mContext>;

        $r3 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mCurrentDate>;

        $l1 = virtualinvoke $r3.<java.util.Calendar: long getTimeInMillis()>();

        r2 = staticinvoke <android.text.format.DateUtils: java.lang.String formatDateTime(android.content.Context,long,int)>($r4, $l1, 20);

        $r5 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r2);

        return;
    }

    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        android.view.accessibility.AccessibilityEvent r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: android.widget.DatePicker$DatePickerSpinnerDelegate;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $r2 = class "android/widget/DatePicker";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r3);

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: android.widget.DatePicker$DatePickerSpinnerDelegate;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        $r2 = class "android/widget/DatePicker";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>($r3);

        return;
    }

    protected void setCurrentLocale(java.util.Locale)
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        java.util.Locale r1;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.util.Calendar $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        java.text.DateFormatSymbols $r11;
        java.lang.String[] $r12, $r13, $r15;
        boolean $z0;
        java.lang.Object[] $r14;
        java.lang.Integer $r16;
        java.lang.String $r17;

        r0 := @this: android.widget.DatePicker$DatePickerSpinnerDelegate;

        r1 := @parameter0: java.util.Locale;

        specialinvoke r0.<android.widget.DatePicker$AbstractDatePickerDelegate: void setCurrentLocale(java.util.Locale)>(r1);

        $r2 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mTempDate>;

        $r3 = specialinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar getCalendarForLocale(java.util.Calendar,java.util.Locale)>($r2, r1);

        r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mTempDate> = $r3;

        $r4 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mMinDate>;

        $r5 = specialinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar getCalendarForLocale(java.util.Calendar,java.util.Locale)>($r4, r1);

        r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mMinDate> = $r5;

        $r6 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mMaxDate>;

        $r7 = specialinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar getCalendarForLocale(java.util.Calendar,java.util.Locale)>($r6, r1);

        r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mMaxDate> = $r7;

        $r8 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mCurrentDate>;

        $r9 = specialinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar getCalendarForLocale(java.util.Calendar,java.util.Locale)>($r8, r1);

        r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mCurrentDate> = $r9;

        $r10 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mTempDate>;

        $i1 = virtualinvoke $r10.<java.util.Calendar: int getActualMaximum(int)>(2);

        $i2 = $i1 + 1;

        r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: int mNumberOfMonths> = $i2;

        $r11 = new java.text.DateFormatSymbols;

        specialinvoke $r11.<java.text.DateFormatSymbols: void <init>()>();

        $r12 = virtualinvoke $r11.<java.text.DateFormatSymbols: java.lang.String[] getShortMonths()>();

        r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.lang.String[] mShortMonths> = $r12;

        $z0 = specialinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: boolean usingNumericMonths()>();

        if $z0 == 0 goto label2;

        $i3 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: int mNumberOfMonths>;

        $r13 = newarray (java.lang.String)[$i3];

        r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.lang.String[] mShortMonths> = $r13;

        i0 = 0;

     label1:
        $i4 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: int mNumberOfMonths>;

        if i0 >= $i4 goto label2;

        $r15 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.lang.String[] mShortMonths>;

        $r14 = newarray (java.lang.Object)[1];

        $i5 = i0 + 1;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r14[0] = $r16;

        $r17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%d", $r14);

        $r15[i0] = $r17;

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    private boolean usingNumericMonths()
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        java.lang.String[] $r1;
        java.lang.String $r2;
        char $c0;
        boolean $z0;

        r0 := @this: android.widget.DatePicker$DatePickerSpinnerDelegate;

        $r1 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.lang.String[] mShortMonths>;

        $r2 = $r1[0];

        $c0 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(0);

        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>($c0);

        return $z0;
    }

    private java.util.Calendar getCalendarForLocale(java.util.Calendar, java.util.Locale)
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        java.util.Calendar r1, r3, $r4;
        java.util.Locale r2;
        long l0;

        r0 := @this: android.widget.DatePicker$DatePickerSpinnerDelegate;

        r1 := @parameter0: java.util.Calendar;

        r2 := @parameter1: java.util.Locale;

        if r1 != null goto label1;

        $r4 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.Locale)>(r2);

        return $r4;

     label1:
        l0 = virtualinvoke r1.<java.util.Calendar: long getTimeInMillis()>();

        r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.Locale)>(r2);

        virtualinvoke r3.<java.util.Calendar: void setTimeInMillis(long)>(l0);

        return r3;
    }

    private void reorderSpinners()
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        java.lang.String r1, $r15;
        char[] r2;
        int i0, i1;
        android.widget.LinearLayout $r3, $r6, $r9, $r11;
        java.util.Locale $r4;
        char $c2;
        android.widget.NumberPicker $r5, $r7, $r8, $r10, $r12, $r14;
        java.lang.IllegalArgumentException $r13;

        r0 := @this: android.widget.DatePicker$DatePickerSpinnerDelegate;

        $r3 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.LinearLayout mSpinners>;

        virtualinvoke $r3.<android.widget.LinearLayout: void removeAllViews()>();

        $r4 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        r1 = staticinvoke <android.text.format.DateFormat: java.lang.String getBestDateTimePattern(java.util.Locale,java.lang.String)>($r4, "yyyyMMMdd");

        r2 = staticinvoke <libcore.icu.ICU: char[] getDateFormatOrder(java.lang.String)>(r1);

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label7;

        $c2 = r2[i1];

        lookupswitch($c2)
        {
            case 77: goto label3;
            case 100: goto label2;
            case 121: goto label4;
            default: goto label5;
        };

     label2:
        $r9 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.LinearLayout mSpinners>;

        $r8 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mDaySpinner>;

        virtualinvoke $r9.<android.widget.LinearLayout: void addView(android.view.View)>($r8);

        $r10 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mDaySpinner>;

        specialinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: void setImeOptions(android.widget.NumberPicker,int,int)>($r10, i0, i1);

        goto label6;

     label3:
        $r11 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.LinearLayout mSpinners>;

        $r12 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mMonthSpinner>;

        virtualinvoke $r11.<android.widget.LinearLayout: void addView(android.view.View)>($r12);

        $r14 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mMonthSpinner>;

        specialinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: void setImeOptions(android.widget.NumberPicker,int,int)>($r14, i0, i1);

        goto label6;

     label4:
        $r6 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.LinearLayout mSpinners>;

        $r5 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mYearSpinner>;

        virtualinvoke $r6.<android.widget.LinearLayout: void addView(android.view.View)>($r5);

        $r7 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mYearSpinner>;

        specialinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: void setImeOptions(android.widget.NumberPicker,int,int)>($r7, i0, i1);

        goto label6;

     label5:
        $r13 = new java.lang.IllegalArgumentException;

        $r15 = staticinvoke <java.util.Arrays: java.lang.String toString(char[])>(r2);

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r13;

     label6:
        i1 = i1 + 1;

        goto label1;

     label7:
        return;
    }

    private boolean parseDate(java.lang.String, java.util.Calendar)
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        java.lang.String r1, $r7, $r13;
        java.util.Calendar r2;
        java.text.DateFormat $r4;
        java.util.Date $r5;
        java.text.ParseException $r6;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12;

        r0 := @this: android.widget.DatePicker$DatePickerSpinnerDelegate;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Calendar;

     label1:
        $r4 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.text.DateFormat mDateFormat>;

        $r5 = virtualinvoke $r4.<java.text.DateFormat: java.util.Date parse(java.lang.String)>(r1);

        virtualinvoke r2.<java.util.Calendar: void setTime(java.util.Date)>($r5);

     label2:
        return 1;

     label3:
        $r6 := @caughtexception;

        $r7 = staticinvoke <android.widget.DatePicker: java.lang.String access$1400()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Date: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not in format: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MM/dd/yyyy");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r7, $r13);

        return 0;

        catch java.text.ParseException from label1 to label2 with label3;
    }

    private boolean isNewDate(int, int, int)
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        int i0, i1, i2, $i3, $i4, $i5;
        java.util.Calendar $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: android.widget.DatePicker$DatePickerSpinnerDelegate;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mCurrentDate>;

        $i3 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(1);

        if $i3 != i0 goto label1;

        $r2 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mCurrentDate>;

        $i4 = virtualinvoke $r2.<java.util.Calendar: int get(int)>(2);

        if $i4 != i2 goto label1;

        $r3 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mCurrentDate>;

        $i5 = virtualinvoke $r3.<java.util.Calendar: int get(int)>(5);

        if $i5 == i1 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private void setDate(int, int, int)
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        int i0, i1, i2;
        java.util.Calendar $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        boolean $z0, $z1;
        long $l3, $l4;

        r0 := @this: android.widget.DatePicker$DatePickerSpinnerDelegate;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mCurrentDate>;

        virtualinvoke $r1.<java.util.Calendar: void set(int,int,int)>(i0, i1, i2);

        $r3 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mCurrentDate>;

        $r2 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mMinDate>;

        $z0 = virtualinvoke $r3.<java.util.Calendar: boolean before(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r9 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mCurrentDate>;

        $r8 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mMinDate>;

        $l4 = virtualinvoke $r8.<java.util.Calendar: long getTimeInMillis()>();

        virtualinvoke $r9.<java.util.Calendar: void setTimeInMillis(long)>($l4);

        goto label2;

     label1:
        $r5 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mCurrentDate>;

        $r4 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mMaxDate>;

        $z1 = virtualinvoke $r5.<java.util.Calendar: boolean after(java.lang.Object)>($r4);

        if $z1 == 0 goto label2;

        $r7 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mCurrentDate>;

        $r6 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mMaxDate>;

        $l3 = virtualinvoke $r6.<java.util.Calendar: long getTimeInMillis()>();

        virtualinvoke $r7.<java.util.Calendar: void setTimeInMillis(long)>($l3);

     label2:
        return;
    }

    private void updateSpinners()
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        java.lang.String[] r1, $r15;
        java.util.Calendar $r2, $r3, $r4, $r5, $r7, $r18, $r22, $r24, $r25, $r27, $r31, $r32, $r35, $r39, $r42, $r45, $r46, $r50;
        boolean $z0, $z1, $z2;
        android.widget.NumberPicker $r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r16, $r19, $r20, $r21, $r23, $r26, $r28, $r29, $r33, $r34, $r36, $r37, $r38, $r40, $r41, $r43, $r44, $r47, $r48, $r49, $r51, $r52;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        java.lang.Object[] $r17;
        android.widget.EditText $r30;

        r0 := @this: android.widget.DatePicker$DatePickerSpinnerDelegate;

        $r3 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mCurrentDate>;

        $r2 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mMinDate>;

        $z0 = virtualinvoke $r3.<java.util.Calendar: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r41 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mDaySpinner>;

        $r42 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mCurrentDate>;

        $i14 = virtualinvoke $r42.<java.util.Calendar: int get(int)>(5);

        virtualinvoke $r41.<android.widget.NumberPicker: void setMinValue(int)>($i14);

        $r44 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mDaySpinner>;

        $r45 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mCurrentDate>;

        $i13 = virtualinvoke $r45.<java.util.Calendar: int getActualMaximum(int)>(5);

        virtualinvoke $r44.<android.widget.NumberPicker: void setMaxValue(int)>($i13);

        $r48 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mDaySpinner>;

        virtualinvoke $r48.<android.widget.NumberPicker: void setWrapSelectorWheel(boolean)>(0);

        $r49 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mMonthSpinner>;

        virtualinvoke $r49.<android.widget.NumberPicker: void setDisplayedValues(java.lang.String[])>(null);

        $r51 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mMonthSpinner>;

        $r50 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mCurrentDate>;

        $i15 = virtualinvoke $r50.<java.util.Calendar: int get(int)>(2);

        virtualinvoke $r51.<android.widget.NumberPicker: void setMinValue(int)>($i15);

        $r47 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mMonthSpinner>;

        $r46 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mCurrentDate>;

        $i16 = virtualinvoke $r46.<java.util.Calendar: int getActualMaximum(int)>(2);

        virtualinvoke $r47.<android.widget.NumberPicker: void setMaxValue(int)>($i16);

        $r52 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mMonthSpinner>;

        virtualinvoke $r52.<android.widget.NumberPicker: void setWrapSelectorWheel(boolean)>(0);

        goto label3;

     label1:
        $r5 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mCurrentDate>;

        $r4 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mMaxDate>;

        $z1 = virtualinvoke $r5.<java.util.Calendar: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label2;

        $r34 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mDaySpinner>;

        $r31 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mCurrentDate>;

        $i9 = virtualinvoke $r31.<java.util.Calendar: int getActualMinimum(int)>(5);

        virtualinvoke $r34.<android.widget.NumberPicker: void setMinValue(int)>($i9);

        $r33 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mDaySpinner>;

        $r32 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mCurrentDate>;

        $i10 = virtualinvoke $r32.<java.util.Calendar: int get(int)>(5);

        virtualinvoke $r33.<android.widget.NumberPicker: void setMaxValue(int)>($i10);

        $r37 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mDaySpinner>;

        virtualinvoke $r37.<android.widget.NumberPicker: void setWrapSelectorWheel(boolean)>(0);

        $r36 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mMonthSpinner>;

        virtualinvoke $r36.<android.widget.NumberPicker: void setDisplayedValues(java.lang.String[])>(null);

        $r40 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mMonthSpinner>;

        $r35 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mCurrentDate>;

        $i11 = virtualinvoke $r35.<java.util.Calendar: int getActualMinimum(int)>(2);

        virtualinvoke $r40.<android.widget.NumberPicker: void setMinValue(int)>($i11);

        $r38 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mMonthSpinner>;

        $r39 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mCurrentDate>;

        $i12 = virtualinvoke $r39.<java.util.Calendar: int get(int)>(2);

        virtualinvoke $r38.<android.widget.NumberPicker: void setMaxValue(int)>($i12);

        $r43 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mMonthSpinner>;

        virtualinvoke $r43.<android.widget.NumberPicker: void setWrapSelectorWheel(boolean)>(0);

        goto label3;

     label2:
        $r6 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mDaySpinner>;

        virtualinvoke $r6.<android.widget.NumberPicker: void setMinValue(int)>(1);

        $r8 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mDaySpinner>;

        $r7 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mCurrentDate>;

        $i0 = virtualinvoke $r7.<java.util.Calendar: int getActualMaximum(int)>(5);

        virtualinvoke $r8.<android.widget.NumberPicker: void setMaxValue(int)>($i0);

        $r9 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mDaySpinner>;

        virtualinvoke $r9.<android.widget.NumberPicker: void setWrapSelectorWheel(boolean)>(1);

        $r10 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mMonthSpinner>;

        virtualinvoke $r10.<android.widget.NumberPicker: void setDisplayedValues(java.lang.String[])>(null);

        $r11 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mMonthSpinner>;

        virtualinvoke $r11.<android.widget.NumberPicker: void setMinValue(int)>(0);

        $r12 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mMonthSpinner>;

        virtualinvoke $r12.<android.widget.NumberPicker: void setMaxValue(int)>(11);

        $r14 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mMonthSpinner>;

        virtualinvoke $r14.<android.widget.NumberPicker: void setWrapSelectorWheel(boolean)>(1);

     label3:
        $r15 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.lang.String[] mShortMonths>;

        $r13 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mMonthSpinner>;

        $i1 = virtualinvoke $r13.<android.widget.NumberPicker: int getMinValue()>();

        $r16 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mMonthSpinner>;

        $i2 = virtualinvoke $r16.<android.widget.NumberPicker: int getMaxValue()>();

        $i3 = $i2 + 1;

        $r17 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>($r15, $i1, $i3);

        r1 = (java.lang.String[]) $r17;

        $r19 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mMonthSpinner>;

        virtualinvoke $r19.<android.widget.NumberPicker: void setDisplayedValues(java.lang.String[])>(r1);

        $r20 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mYearSpinner>;

        $r18 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mMinDate>;

        $i4 = virtualinvoke $r18.<java.util.Calendar: int get(int)>(1);

        virtualinvoke $r20.<android.widget.NumberPicker: void setMinValue(int)>($i4);

        $r21 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mYearSpinner>;

        $r22 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mMaxDate>;

        $i5 = virtualinvoke $r22.<java.util.Calendar: int get(int)>(1);

        virtualinvoke $r21.<android.widget.NumberPicker: void setMaxValue(int)>($i5);

        $r23 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mYearSpinner>;

        virtualinvoke $r23.<android.widget.NumberPicker: void setWrapSelectorWheel(boolean)>(0);

        $r26 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mYearSpinner>;

        $r25 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mCurrentDate>;

        $i6 = virtualinvoke $r25.<java.util.Calendar: int get(int)>(1);

        virtualinvoke $r26.<android.widget.NumberPicker: void setValue(int)>($i6);

        $r29 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mMonthSpinner>;

        $r24 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mCurrentDate>;

        $i7 = virtualinvoke $r24.<java.util.Calendar: int get(int)>(2);

        virtualinvoke $r29.<android.widget.NumberPicker: void setValue(int)>($i7);

        $r28 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mDaySpinner>;

        $r27 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mCurrentDate>;

        $i8 = virtualinvoke $r27.<java.util.Calendar: int get(int)>(5);

        virtualinvoke $r28.<android.widget.NumberPicker: void setValue(int)>($i8);

        $z2 = specialinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: boolean usingNumericMonths()>();

        if $z2 == 0 goto label4;

        $r30 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.EditText mMonthSpinnerInput>;

        virtualinvoke $r30.<android.widget.EditText: void setRawInputType(int)>(2);

     label4:
        return;
    }

    private void updateCalendarView()
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        java.util.Calendar $r1;
        android.widget.CalendarView $r2;
        long $l0;

        r0 := @this: android.widget.DatePicker$DatePickerSpinnerDelegate;

        $r2 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.CalendarView mCalendarView>;

        $r1 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mCurrentDate>;

        $l0 = virtualinvoke $r1.<java.util.Calendar: long getTimeInMillis()>();

        virtualinvoke $r2.<android.widget.CalendarView: void setDate(long,boolean,boolean)>($l0, 0, 0);

        return;
    }

    private void notifyDateChanged()
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        android.widget.DatePicker $r1, $r4;
        android.widget.DatePicker$OnDateChangedListener $r2, $r3;
        int $i0, $i1, $i2;

        r0 := @this: android.widget.DatePicker$DatePickerSpinnerDelegate;

        $r1 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.DatePicker mDelegator>;

        virtualinvoke $r1.<android.widget.DatePicker: void sendAccessibilityEvent(int)>(4);

        $r2 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.DatePicker$OnDateChangedListener mOnDateChangedListener>;

        if $r2 == null goto label1;

        $r3 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.DatePicker$OnDateChangedListener mOnDateChangedListener>;

        $r4 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.DatePicker mDelegator>;

        $i0 = virtualinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: int getYear()>();

        $i1 = virtualinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: int getMonth()>();

        $i2 = virtualinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: int getDayOfMonth()>();

        interfaceinvoke $r3.<android.widget.DatePicker$OnDateChangedListener: void onDateChanged(android.widget.DatePicker,int,int,int)>($r4, $i0, $i1, $i2);

     label1:
        return;
    }

    private void setImeOptions(android.widget.NumberPicker, int, int)
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        android.widget.NumberPicker r1;
        int i0, i1, $i3;
        byte b2;
        android.widget.TextView r2;
        android.view.View $r3;

        r0 := @this: android.widget.DatePicker$DatePickerSpinnerDelegate;

        r1 := @parameter0: android.widget.NumberPicker;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i3 = i0 - 1;

        if i1 >= $i3 goto label1;

        b2 = 5;

        goto label2;

     label1:
        b2 = 6;

     label2:
        $r3 = virtualinvoke r1.<android.widget.NumberPicker: android.view.View findViewById(int)>(16909128);

        r2 = (android.widget.TextView) $r3;

        virtualinvoke r2.<android.widget.TextView: void setImeOptions(int)>(b2);

        return;
    }

    private void setContentDescriptions()
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        android.widget.NumberPicker $r1, $r2, $r3, $r4, $r5, $r6;

        r0 := @this: android.widget.DatePicker$DatePickerSpinnerDelegate;

        $r1 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mDaySpinner>;

        specialinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: void trySetContentDescription(android.view.View,int,int)>($r1, 16909127, 17040759);

        $r2 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mDaySpinner>;

        specialinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: void trySetContentDescription(android.view.View,int,int)>($r2, 16909129, 17040760);

        $r3 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mMonthSpinner>;

        specialinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: void trySetContentDescription(android.view.View,int,int)>($r3, 16909127, 17040757);

        $r4 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mMonthSpinner>;

        specialinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: void trySetContentDescription(android.view.View,int,int)>($r4, 16909129, 17040758);

        $r5 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mYearSpinner>;

        specialinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: void trySetContentDescription(android.view.View,int,int)>($r5, 16909127, 17040761);

        $r6 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mYearSpinner>;

        specialinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: void trySetContentDescription(android.view.View,int,int)>($r6, 16909129, 17040762);

        return;
    }

    private void trySetContentDescription(android.view.View, int, int)
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        android.view.View r1, r2;
        int i0, i1;
        android.content.Context $r3;
        java.lang.String $r4;

        r0 := @this: android.widget.DatePicker$DatePickerSpinnerDelegate;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = virtualinvoke r1.<android.view.View: android.view.View findViewById(int)>(i0);

        if r2 == null goto label1;

        $r3 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: java.lang.String getString(int)>(i1);

        virtualinvoke r2.<android.view.View: void setContentDescription(java.lang.CharSequence)>($r4);

     label1:
        return;
    }

    private void updateInputState()
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        android.view.inputmethod.InputMethodManager r1;
        android.widget.EditText $r2, $r3, $r4, $r5, $r8, $r11;
        boolean $z0, $z1, $z2;
        android.widget.DatePicker $r6, $r9, $r13;
        android.os.IBinder $r7, $r10, $r12;

        r0 := @this: android.widget.DatePicker$DatePickerSpinnerDelegate;

        r1 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        if r1 == null goto label3;

        $r2 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.EditText mYearSpinnerInput>;

        $z0 = virtualinvoke r1.<android.view.inputmethod.InputMethodManager: boolean isActive(android.view.View)>($r2);

        if $z0 == 0 goto label1;

        $r11 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.EditText mYearSpinnerInput>;

        virtualinvoke $r11.<android.widget.EditText: void clearFocus()>();

        $r13 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.DatePicker mDelegator>;

        $r12 = virtualinvoke $r13.<android.widget.DatePicker: android.os.IBinder getWindowToken()>();

        virtualinvoke r1.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>($r12, 0);

        goto label3;

     label1:
        $r3 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.EditText mMonthSpinnerInput>;

        $z1 = virtualinvoke r1.<android.view.inputmethod.InputMethodManager: boolean isActive(android.view.View)>($r3);

        if $z1 == 0 goto label2;

        $r8 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.EditText mMonthSpinnerInput>;

        virtualinvoke $r8.<android.widget.EditText: void clearFocus()>();

        $r9 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.DatePicker mDelegator>;

        $r10 = virtualinvoke $r9.<android.widget.DatePicker: android.os.IBinder getWindowToken()>();

        virtualinvoke r1.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>($r10, 0);

        goto label3;

     label2:
        $r4 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.EditText mDaySpinnerInput>;

        $z2 = virtualinvoke r1.<android.view.inputmethod.InputMethodManager: boolean isActive(android.view.View)>($r4);

        if $z2 == 0 goto label3;

        $r5 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.EditText mDaySpinnerInput>;

        virtualinvoke $r5.<android.widget.EditText: void clearFocus()>();

        $r6 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.DatePicker mDelegator>;

        $r7 = virtualinvoke $r6.<android.widget.DatePicker: android.os.IBinder getWindowToken()>();

        virtualinvoke r1.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>($r7, 0);

     label3:
        return;
    }

    static void access$000(android.widget.DatePicker$DatePickerSpinnerDelegate)
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;

        r0 := @parameter0: android.widget.DatePicker$DatePickerSpinnerDelegate;

        specialinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: void updateInputState()>();

        return;
    }

    static java.util.Calendar access$100(android.widget.DatePicker$DatePickerSpinnerDelegate)
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        java.util.Calendar $r1;

        r0 := @parameter0: android.widget.DatePicker$DatePickerSpinnerDelegate;

        $r1 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mCurrentDate>;

        return $r1;
    }

    static java.util.Calendar access$200(android.widget.DatePicker$DatePickerSpinnerDelegate)
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        java.util.Calendar $r1;

        r0 := @parameter0: android.widget.DatePicker$DatePickerSpinnerDelegate;

        $r1 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: java.util.Calendar mTempDate>;

        return $r1;
    }

    static android.widget.NumberPicker access$300(android.widget.DatePicker$DatePickerSpinnerDelegate)
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        android.widget.NumberPicker $r1;

        r0 := @parameter0: android.widget.DatePicker$DatePickerSpinnerDelegate;

        $r1 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mDaySpinner>;

        return $r1;
    }

    static android.widget.NumberPicker access$400(android.widget.DatePicker$DatePickerSpinnerDelegate)
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        android.widget.NumberPicker $r1;

        r0 := @parameter0: android.widget.DatePicker$DatePickerSpinnerDelegate;

        $r1 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mMonthSpinner>;

        return $r1;
    }

    static android.widget.NumberPicker access$500(android.widget.DatePicker$DatePickerSpinnerDelegate)
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        android.widget.NumberPicker $r1;

        r0 := @parameter0: android.widget.DatePicker$DatePickerSpinnerDelegate;

        $r1 = r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: android.widget.NumberPicker mYearSpinner>;

        return $r1;
    }

    static void access$600(android.widget.DatePicker$DatePickerSpinnerDelegate, int, int, int)
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;
        int i0, i1, i2;

        r0 := @parameter0: android.widget.DatePicker$DatePickerSpinnerDelegate;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: void setDate(int,int,int)>(i0, i1, i2);

        return;
    }

    static void access$700(android.widget.DatePicker$DatePickerSpinnerDelegate)
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;

        r0 := @parameter0: android.widget.DatePicker$DatePickerSpinnerDelegate;

        specialinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: void updateSpinners()>();

        return;
    }

    static void access$800(android.widget.DatePicker$DatePickerSpinnerDelegate)
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;

        r0 := @parameter0: android.widget.DatePicker$DatePickerSpinnerDelegate;

        specialinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: void updateCalendarView()>();

        return;
    }

    static void access$900(android.widget.DatePicker$DatePickerSpinnerDelegate)
    {
        android.widget.DatePicker$DatePickerSpinnerDelegate r0;

        r0 := @parameter0: android.widget.DatePicker$DatePickerSpinnerDelegate;

        specialinvoke r0.<android.widget.DatePicker$DatePickerSpinnerDelegate: void notifyDateChanged()>();

        return;
    }

    public static void <clinit>()
    {
        <android.widget.DatePicker$DatePickerSpinnerDelegate: boolean DEFAULT_ENABLED_STATE> = 1;

        <android.widget.DatePicker$DatePickerSpinnerDelegate: boolean DEFAULT_SPINNERS_SHOWN> = 1;

        <android.widget.DatePicker$DatePickerSpinnerDelegate: boolean DEFAULT_CALENDAR_VIEW_SHOWN> = 1;

        <android.widget.DatePicker$DatePickerSpinnerDelegate: int DEFAULT_END_YEAR> = 2100;

        <android.widget.DatePicker$DatePickerSpinnerDelegate: int DEFAULT_START_YEAR> = 1900;

        <android.widget.DatePicker$DatePickerSpinnerDelegate: java.lang.String DATE_FORMAT> = "MM/dd/yyyy";

        return;
    }
}
