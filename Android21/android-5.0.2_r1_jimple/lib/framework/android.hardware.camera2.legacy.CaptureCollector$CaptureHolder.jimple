class android.hardware.camera2.legacy.CaptureCollector$CaptureHolder extends java.lang.Object implements java.lang.Comparable
{
    private final android.hardware.camera2.legacy.RequestHolder mRequest;
    private final android.hardware.camera2.legacy.LegacyRequest mLegacy;
    public final boolean needsJpeg;
    public final boolean needsPreview;
    private long mTimestamp;
    private int mReceivedFlags;
    private boolean mHasStarted;
    private boolean mFailedJpeg;
    private boolean mFailedPreview;
    private boolean mCompleted;
    private boolean mPreviewCompleted;
    final android.hardware.camera2.legacy.CaptureCollector this$0;

    public void <init>(android.hardware.camera2.legacy.CaptureCollector, android.hardware.camera2.legacy.RequestHolder, android.hardware.camera2.legacy.LegacyRequest)
    {
        android.hardware.camera2.legacy.CaptureCollector$CaptureHolder r0;
        android.hardware.camera2.legacy.CaptureCollector r1;
        android.hardware.camera2.legacy.RequestHolder r2;
        android.hardware.camera2.legacy.LegacyRequest r3;
        boolean $z0, $z1;

        r0 := @this: android.hardware.camera2.legacy.CaptureCollector$CaptureHolder;

        r1 := @parameter0: android.hardware.camera2.legacy.CaptureCollector;

        r2 := @parameter1: android.hardware.camera2.legacy.RequestHolder;

        r3 := @parameter2: android.hardware.camera2.legacy.LegacyRequest;

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.CaptureCollector this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: long mTimestamp> = 0L;

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: int mReceivedFlags> = 0;

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean mHasStarted> = 0;

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean mFailedJpeg> = 0;

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean mFailedPreview> = 0;

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean mCompleted> = 0;

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean mPreviewCompleted> = 0;

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.RequestHolder mRequest> = r2;

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.LegacyRequest mLegacy> = r3;

        $z0 = virtualinvoke r2.<android.hardware.camera2.legacy.RequestHolder: boolean hasJpegTargets()>();

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean needsJpeg> = $z0;

        $z1 = virtualinvoke r2.<android.hardware.camera2.legacy.RequestHolder: boolean hasPreviewTargets()>();

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean needsPreview> = $z1;

        return;
    }

    public boolean isPreviewCompleted()
    {
        android.hardware.camera2.legacy.CaptureCollector$CaptureHolder r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: android.hardware.camera2.legacy.CaptureCollector$CaptureHolder;

        $i0 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: int mReceivedFlags>;

        $i1 = $i0 & 12;

        if $i1 != 12 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isJpegCompleted()
    {
        android.hardware.camera2.legacy.CaptureCollector$CaptureHolder r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: android.hardware.camera2.legacy.CaptureCollector$CaptureHolder;

        $i0 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: int mReceivedFlags>;

        $i1 = $i0 & 3;

        if $i1 != 3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isCompleted()
    {
        android.hardware.camera2.legacy.CaptureCollector$CaptureHolder r0;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: android.hardware.camera2.legacy.CaptureCollector$CaptureHolder;

        $z0 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean needsJpeg>;

        $z1 = virtualinvoke r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean isJpegCompleted()>();

        if $z0 != $z1 goto label1;

        $z2 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean needsPreview>;

        $z3 = virtualinvoke r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean isPreviewCompleted()>();

        if $z2 != $z3 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        return $z4;
    }

    public void tryComplete()
    {
        android.hardware.camera2.legacy.CaptureCollector$CaptureHolder r0;
        int i0, $i1, $i3, $i4, $i6, i8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z10, $z11, $z12;
        android.hardware.camera2.legacy.CaptureCollector $r1, $r9, $r16, $r20, $r24;
        java.lang.StringBuilder $r2, $r3, $r5, $r11, $r13, $r14;
        android.hardware.camera2.legacy.RequestHolder $r4, $r7, $r10, $r12, $r18, $r19, $r21, $r22;
        java.lang.String $r6, $r15;
        android.hardware.camera2.legacy.CameraDeviceState $r8, $r17, $r23;
        long $l7;

        r0 := @this: android.hardware.camera2.legacy.CaptureCollector$CaptureHolder;

        $z0 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean mPreviewCompleted>;

        if $z0 != 0 goto label1;

        $z12 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean needsPreview>;

        if $z12 == 0 goto label1;

        $z10 = virtualinvoke r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean isPreviewCompleted()>();

        if $z10 == 0 goto label1;

        $r24 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.CaptureCollector this$0>;

        staticinvoke <android.hardware.camera2.legacy.CaptureCollector: void access$000(android.hardware.camera2.legacy.CaptureCollector)>($r24);

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean mPreviewCompleted> = 1;

     label1:
        $z1 = virtualinvoke r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean isCompleted()>();

        if $z1 == 0 goto label8;

        $z2 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean mCompleted>;

        if $z2 != 0 goto label8;

        $z3 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean mFailedPreview>;

        if $z3 != 0 goto label2;

        $z11 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean mFailedJpeg>;

        if $z11 == 0 goto label7;

     label2:
        $z4 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean mHasStarted>;

        if $z4 != 0 goto label3;

        $r19 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.RequestHolder mRequest>;

        virtualinvoke $r19.<android.hardware.camera2.legacy.RequestHolder: void failRequest()>();

        $r20 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.CaptureCollector this$0>;

        $r23 = staticinvoke <android.hardware.camera2.legacy.CaptureCollector: android.hardware.camera2.legacy.CameraDeviceState access$100(android.hardware.camera2.legacy.CaptureCollector)>($r20);

        $r22 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.RequestHolder mRequest>;

        $l7 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: long mTimestamp>;

        virtualinvoke $r23.<android.hardware.camera2.legacy.CameraDeviceState: boolean setCaptureStart(android.hardware.camera2.legacy.RequestHolder,long,int)>($r22, $l7, 3);

        goto label7;

     label3:
        $z5 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean mFailedPreview>;

        if $z5 == 0 goto label5;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Preview buffers dropped for request: ");

        $r12 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.RequestHolder mRequest>;

        $i4 = virtualinvoke $r12.<android.hardware.camera2.legacy.RequestHolder: int getRequestId()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("CaptureCollector", $r15);

        i0 = 0;

     label4:
        $r18 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.RequestHolder mRequest>;

        $i6 = virtualinvoke $r18.<android.hardware.camera2.legacy.RequestHolder: int numPreviewTargets()>();

        if i0 >= $i6 goto label5;

        $r16 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.CaptureCollector this$0>;

        $r17 = staticinvoke <android.hardware.camera2.legacy.CaptureCollector: android.hardware.camera2.legacy.CameraDeviceState access$100(android.hardware.camera2.legacy.CaptureCollector)>($r16);

        $r21 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.RequestHolder mRequest>;

        virtualinvoke $r17.<android.hardware.camera2.legacy.CameraDeviceState: boolean setCaptureResult(android.hardware.camera2.legacy.RequestHolder,android.hardware.camera2.impl.CameraMetadataNative,int)>($r21, null, 5);

        i0 = i0 + 1;

        goto label4;

     label5:
        $z6 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean mFailedJpeg>;

        if $z6 == 0 goto label7;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Jpeg buffers dropped for request: ");

        $r4 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.RequestHolder mRequest>;

        $i1 = virtualinvoke $r4.<android.hardware.camera2.legacy.RequestHolder: int getRequestId()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("CaptureCollector", $r6);

        i8 = 0;

     label6:
        $r7 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.RequestHolder mRequest>;

        $i3 = virtualinvoke $r7.<android.hardware.camera2.legacy.RequestHolder: int numJpegTargets()>();

        if i8 >= $i3 goto label7;

        $r9 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.CaptureCollector this$0>;

        $r8 = staticinvoke <android.hardware.camera2.legacy.CaptureCollector: android.hardware.camera2.legacy.CameraDeviceState access$100(android.hardware.camera2.legacy.CaptureCollector)>($r9);

        $r10 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.RequestHolder mRequest>;

        virtualinvoke $r8.<android.hardware.camera2.legacy.CameraDeviceState: boolean setCaptureResult(android.hardware.camera2.legacy.RequestHolder,android.hardware.camera2.impl.CameraMetadataNative,int)>($r10, null, 5);

        i8 = i8 + 1;

        goto label6;

     label7:
        $r1 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.CaptureCollector this$0>;

        staticinvoke <android.hardware.camera2.legacy.CaptureCollector: void access$200(android.hardware.camera2.legacy.CaptureCollector,android.hardware.camera2.legacy.CaptureCollector$CaptureHolder)>($r1, r0);

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean mCompleted> = 1;

     label8:
        return;
    }

    public void setJpegTimestamp(long)
    {
        android.hardware.camera2.legacy.CaptureCollector$CaptureHolder r0;
        long l0, $l3, $l5;
        boolean $z0, $z1, $z2, $z3;
        int $i1, $i2, $i6;
        byte $b4;
        android.hardware.camera2.legacy.CaptureCollector $r1;
        android.hardware.camera2.legacy.CameraDeviceState $r2;
        android.hardware.camera2.legacy.RequestHolder $r3, $r7;
        java.lang.IllegalStateException $r4, $r5;
        java.lang.StringBuilder $r6, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: android.hardware.camera2.legacy.CaptureCollector$CaptureHolder;

        l0 := @parameter0: long;

        $z0 = staticinvoke <android.hardware.camera2.legacy.CaptureCollector: boolean access$300()>();

        if $z0 == 0 goto label1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setJpegTimestamp - called for request ");

        $r7 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.RequestHolder mRequest>;

        $i6 = virtualinvoke $r7.<android.hardware.camera2.legacy.RequestHolder: int getRequestId()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CaptureCollector", $r10);

     label1:
        $z1 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean needsJpeg>;

        if $z1 != 0 goto label2;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setJpegTimestamp called for capture with no jpeg targets.");

        throw $r4;

     label2:
        $z2 = virtualinvoke r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean isCompleted()>();

        if $z2 == 0 goto label3;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setJpegTimestamp called on already completed request.");

        throw $r5;

     label3:
        $i1 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: int mReceivedFlags>;

        $i2 = $i1 | 2;

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: int mReceivedFlags> = $i2;

        $l3 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: long mTimestamp>;

        $b4 = $l3 cmp 0L;

        if $b4 != 0 goto label4;

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: long mTimestamp> = l0;

     label4:
        $z3 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean mHasStarted>;

        if $z3 != 0 goto label5;

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean mHasStarted> = 1;

        $r1 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.CaptureCollector this$0>;

        $r2 = staticinvoke <android.hardware.camera2.legacy.CaptureCollector: android.hardware.camera2.legacy.CameraDeviceState access$100(android.hardware.camera2.legacy.CaptureCollector)>($r1);

        $r3 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.RequestHolder mRequest>;

        $l5 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: long mTimestamp>;

        virtualinvoke $r2.<android.hardware.camera2.legacy.CameraDeviceState: boolean setCaptureStart(android.hardware.camera2.legacy.RequestHolder,long,int)>($r3, $l5, -1);

     label5:
        virtualinvoke r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: void tryComplete()>();

        return;
    }

    public void setJpegProduced()
    {
        android.hardware.camera2.legacy.CaptureCollector$CaptureHolder r0;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2;
        java.lang.IllegalStateException $r1, $r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        android.hardware.camera2.legacy.RequestHolder $r5;
        java.lang.String $r7;

        r0 := @this: android.hardware.camera2.legacy.CaptureCollector$CaptureHolder;

        $z0 = staticinvoke <android.hardware.camera2.legacy.CaptureCollector: boolean access$300()>();

        if $z0 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setJpegProduced - called for request ");

        $r5 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.RequestHolder mRequest>;

        $i2 = virtualinvoke $r5.<android.hardware.camera2.legacy.RequestHolder: int getRequestId()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CaptureCollector", $r7);

     label1:
        $z1 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean needsJpeg>;

        if $z1 != 0 goto label2;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setJpegProduced called for capture with no jpeg targets.");

        throw $r2;

     label2:
        $z2 = virtualinvoke r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean isCompleted()>();

        if $z2 == 0 goto label3;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setJpegProduced called on already completed request.");

        throw $r1;

     label3:
        $i0 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: int mReceivedFlags>;

        $i1 = $i0 | 1;

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: int mReceivedFlags> = $i1;

        virtualinvoke r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: void tryComplete()>();

        return;
    }

    public void setJpegFailed()
    {
        android.hardware.camera2.legacy.CaptureCollector$CaptureHolder r0;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.StringBuilder $r1, $r2, $r4;
        android.hardware.camera2.legacy.RequestHolder $r3;
        java.lang.String $r5;

        r0 := @this: android.hardware.camera2.legacy.CaptureCollector$CaptureHolder;

        $z0 = staticinvoke <android.hardware.camera2.legacy.CaptureCollector: boolean access$300()>();

        if $z0 == 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setJpegFailed - called for request ");

        $r3 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.RequestHolder mRequest>;

        $i4 = virtualinvoke $r3.<android.hardware.camera2.legacy.RequestHolder: int getRequestId()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CaptureCollector", $r5);

     label1:
        $z1 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean needsJpeg>;

        if $z1 == 0 goto label2;

        $z2 = virtualinvoke r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean isJpegCompleted()>();

        if $z2 == 0 goto label3;

     label2:
        return;

     label3:
        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean mFailedJpeg> = 1;

        $i0 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: int mReceivedFlags>;

        $i1 = $i0 | 1;

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: int mReceivedFlags> = $i1;

        $i2 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: int mReceivedFlags>;

        $i3 = $i2 | 2;

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: int mReceivedFlags> = $i3;

        virtualinvoke r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: void tryComplete()>();

        return;
    }

    public void setPreviewTimestamp(long)
    {
        android.hardware.camera2.legacy.CaptureCollector$CaptureHolder r0;
        long l0, $l3, $l5;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i1, $i2, $i6;
        byte $b4;
        android.hardware.camera2.legacy.CaptureCollector $r1;
        android.hardware.camera2.legacy.CameraDeviceState $r2;
        android.hardware.camera2.legacy.RequestHolder $r3, $r8;
        java.lang.IllegalStateException $r4, $r6;
        java.lang.StringBuilder $r5, $r7, $r10;
        java.lang.String $r9;

        r0 := @this: android.hardware.camera2.legacy.CaptureCollector$CaptureHolder;

        l0 := @parameter0: long;

        $z0 = staticinvoke <android.hardware.camera2.legacy.CaptureCollector: boolean access$300()>();

        if $z0 == 0 goto label1;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setPreviewTimestamp - called for request ");

        $r8 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.RequestHolder mRequest>;

        $i6 = virtualinvoke $r8.<android.hardware.camera2.legacy.RequestHolder: int getRequestId()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CaptureCollector", $r9);

     label1:
        $z1 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean needsPreview>;

        if $z1 != 0 goto label2;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setPreviewTimestamp called for capture with no preview targets.");

        throw $r6;

     label2:
        $z2 = virtualinvoke r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean isCompleted()>();

        if $z2 == 0 goto label3;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setPreviewTimestamp called on already completed request.");

        throw $r4;

     label3:
        $i1 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: int mReceivedFlags>;

        $i2 = $i1 | 8;

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: int mReceivedFlags> = $i2;

        $l3 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: long mTimestamp>;

        $b4 = $l3 cmp 0L;

        if $b4 != 0 goto label4;

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: long mTimestamp> = l0;

     label4:
        $z3 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean needsJpeg>;

        if $z3 != 0 goto label5;

        $z4 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean mHasStarted>;

        if $z4 != 0 goto label5;

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean mHasStarted> = 1;

        $r1 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.CaptureCollector this$0>;

        $r2 = staticinvoke <android.hardware.camera2.legacy.CaptureCollector: android.hardware.camera2.legacy.CameraDeviceState access$100(android.hardware.camera2.legacy.CaptureCollector)>($r1);

        $r3 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.RequestHolder mRequest>;

        $l5 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: long mTimestamp>;

        virtualinvoke $r2.<android.hardware.camera2.legacy.CameraDeviceState: boolean setCaptureStart(android.hardware.camera2.legacy.RequestHolder,long,int)>($r3, $l5, -1);

     label5:
        virtualinvoke r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: void tryComplete()>();

        return;
    }

    public void setPreviewProduced()
    {
        android.hardware.camera2.legacy.CaptureCollector$CaptureHolder r0;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2;
        java.lang.IllegalStateException $r1, $r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        android.hardware.camera2.legacy.RequestHolder $r5;
        java.lang.String $r7;

        r0 := @this: android.hardware.camera2.legacy.CaptureCollector$CaptureHolder;

        $z0 = staticinvoke <android.hardware.camera2.legacy.CaptureCollector: boolean access$300()>();

        if $z0 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setPreviewProduced - called for request ");

        $r5 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.RequestHolder mRequest>;

        $i2 = virtualinvoke $r5.<android.hardware.camera2.legacy.RequestHolder: int getRequestId()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CaptureCollector", $r7);

     label1:
        $z1 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean needsPreview>;

        if $z1 != 0 goto label2;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setPreviewProduced called for capture with no preview targets.");

        throw $r2;

     label2:
        $z2 = virtualinvoke r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean isCompleted()>();

        if $z2 == 0 goto label3;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("setPreviewProduced called on already completed request.");

        throw $r1;

     label3:
        $i0 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: int mReceivedFlags>;

        $i1 = $i0 | 4;

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: int mReceivedFlags> = $i1;

        virtualinvoke r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: void tryComplete()>();

        return;
    }

    public void setPreviewFailed()
    {
        android.hardware.camera2.legacy.CaptureCollector$CaptureHolder r0;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.StringBuilder $r1, $r2, $r4;
        android.hardware.camera2.legacy.RequestHolder $r3;
        java.lang.String $r5;

        r0 := @this: android.hardware.camera2.legacy.CaptureCollector$CaptureHolder;

        $z0 = staticinvoke <android.hardware.camera2.legacy.CaptureCollector: boolean access$300()>();

        if $z0 == 0 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setPreviewFailed - called for request ");

        $r3 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.RequestHolder mRequest>;

        $i4 = virtualinvoke $r3.<android.hardware.camera2.legacy.RequestHolder: int getRequestId()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CaptureCollector", $r5);

     label1:
        $z1 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean needsPreview>;

        if $z1 == 0 goto label2;

        $z2 = virtualinvoke r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean isPreviewCompleted()>();

        if $z2 == 0 goto label3;

     label2:
        return;

     label3:
        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: boolean mFailedPreview> = 1;

        $i0 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: int mReceivedFlags>;

        $i1 = $i0 | 4;

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: int mReceivedFlags> = $i1;

        $i2 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: int mReceivedFlags>;

        $i3 = $i2 | 8;

        r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: int mReceivedFlags> = $i3;

        virtualinvoke r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: void tryComplete()>();

        return;
    }

    public int compareTo(android.hardware.camera2.legacy.CaptureCollector$CaptureHolder)
    {
        android.hardware.camera2.legacy.CaptureCollector$CaptureHolder r0, r1;
        android.hardware.camera2.legacy.RequestHolder $r2, $r3, $r4, $r5;
        long $l0, $l1, $l3, $l4;
        byte $b2, $b5, $b6;

        r0 := @this: android.hardware.camera2.legacy.CaptureCollector$CaptureHolder;

        r1 := @parameter0: android.hardware.camera2.legacy.CaptureCollector$CaptureHolder;

        $r2 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.RequestHolder mRequest>;

        $l0 = virtualinvoke $r2.<android.hardware.camera2.legacy.RequestHolder: long getFrameNumber()>();

        $r3 = r1.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.RequestHolder mRequest>;

        $l1 = virtualinvoke $r3.<android.hardware.camera2.legacy.RequestHolder: long getFrameNumber()>();

        $b2 = $l0 cmp $l1;

        if $b2 <= 0 goto label1;

        $b6 = 1;

        goto label3;

     label1:
        $r4 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.RequestHolder mRequest>;

        $l3 = virtualinvoke $r4.<android.hardware.camera2.legacy.RequestHolder: long getFrameNumber()>();

        $r5 = r1.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.RequestHolder mRequest>;

        $l4 = virtualinvoke $r5.<android.hardware.camera2.legacy.RequestHolder: long getFrameNumber()>();

        $b5 = $l3 cmp $l4;

        if $b5 != 0 goto label2;

        $b6 = 0;

        goto label3;

     label2:
        $b6 = -1;

     label3:
        return $b6;
    }

    public boolean equals(java.lang.Object)
    {
        android.hardware.camera2.legacy.CaptureCollector$CaptureHolder r0, $r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        int $i0;

        r0 := @this: android.hardware.camera2.legacy.CaptureCollector$CaptureHolder;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof android.hardware.camera2.legacy.CaptureCollector$CaptureHolder;

        if $z0 == 0 goto label1;

        $r2 = (android.hardware.camera2.legacy.CaptureCollector$CaptureHolder) r1;

        $i0 = virtualinvoke r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: int compareTo(android.hardware.camera2.legacy.CaptureCollector$CaptureHolder)>($r2);

        if $i0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public volatile int compareTo(java.lang.Object)
    {
        android.hardware.camera2.legacy.CaptureCollector$CaptureHolder r0, $r2;
        java.lang.Object r1;
        int $i0;

        r0 := @this: android.hardware.camera2.legacy.CaptureCollector$CaptureHolder;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.hardware.camera2.legacy.CaptureCollector$CaptureHolder) r1;

        $i0 = virtualinvoke r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: int compareTo(android.hardware.camera2.legacy.CaptureCollector$CaptureHolder)>($r2);

        return $i0;
    }

    static android.hardware.camera2.legacy.RequestHolder access$400(android.hardware.camera2.legacy.CaptureCollector$CaptureHolder)
    {
        android.hardware.camera2.legacy.CaptureCollector$CaptureHolder r0;
        android.hardware.camera2.legacy.RequestHolder $r1;

        r0 := @parameter0: android.hardware.camera2.legacy.CaptureCollector$CaptureHolder;

        $r1 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: android.hardware.camera2.legacy.RequestHolder mRequest>;

        return $r1;
    }

    static long access$500(android.hardware.camera2.legacy.CaptureCollector$CaptureHolder)
    {
        android.hardware.camera2.legacy.CaptureCollector$CaptureHolder r0;
        long $l0;

        r0 := @parameter0: android.hardware.camera2.legacy.CaptureCollector$CaptureHolder;

        $l0 = r0.<android.hardware.camera2.legacy.CaptureCollector$CaptureHolder: long mTimestamp>;

        return $l0;
    }
}
