public class android.service.notification.ZenModeConfig extends java.lang.Object implements android.os.Parcelable
{
    private static java.lang.String TAG;
    public static final java.lang.String SLEEP_MODE_NIGHTS;
    public static final java.lang.String SLEEP_MODE_WEEKNIGHTS;
    public static final java.lang.String SLEEP_MODE_DAYS_PREFIX;
    public static final int SOURCE_ANYONE;
    public static final int SOURCE_CONTACT;
    public static final int SOURCE_STAR;
    public static final int MAX_SOURCE;
    public static final int[] ALL_DAYS;
    public static final int[] WEEKNIGHT_DAYS;
    public static final int[] MINUTE_BUCKETS;
    private static final int SECONDS_MS;
    private static final int MINUTES_MS;
    private static final int ZERO_VALUE_MS;
    private static final boolean DEFAULT_ALLOW_EVENTS;
    private static final int XML_VERSION;
    private static final java.lang.String ZEN_TAG;
    private static final java.lang.String ZEN_ATT_VERSION;
    private static final java.lang.String ALLOW_TAG;
    private static final java.lang.String ALLOW_ATT_CALLS;
    private static final java.lang.String ALLOW_ATT_MESSAGES;
    private static final java.lang.String ALLOW_ATT_FROM;
    private static final java.lang.String ALLOW_ATT_EVENTS;
    private static final java.lang.String SLEEP_TAG;
    private static final java.lang.String SLEEP_ATT_MODE;
    private static final java.lang.String SLEEP_ATT_START_HR;
    private static final java.lang.String SLEEP_ATT_START_MIN;
    private static final java.lang.String SLEEP_ATT_END_HR;
    private static final java.lang.String SLEEP_ATT_END_MIN;
    private static final java.lang.String CONDITION_TAG;
    private static final java.lang.String CONDITION_ATT_COMPONENT;
    private static final java.lang.String CONDITION_ATT_ID;
    private static final java.lang.String CONDITION_ATT_SUMMARY;
    private static final java.lang.String CONDITION_ATT_LINE1;
    private static final java.lang.String CONDITION_ATT_LINE2;
    private static final java.lang.String CONDITION_ATT_ICON;
    private static final java.lang.String CONDITION_ATT_STATE;
    private static final java.lang.String CONDITION_ATT_FLAGS;
    private static final java.lang.String EXIT_CONDITION_TAG;
    private static final java.lang.String EXIT_CONDITION_ATT_COMPONENT;
    public boolean allowCalls;
    public boolean allowMessages;
    public boolean allowEvents;
    public int allowFrom;
    public java.lang.String sleepMode;
    public int sleepStartHour;
    public int sleepStartMinute;
    public int sleepEndHour;
    public int sleepEndMinute;
    public android.content.ComponentName[] conditionComponents;
    public android.net.Uri[] conditionIds;
    public android.service.notification.Condition exitCondition;
    public android.content.ComponentName exitConditionComponent;
    public static final android.os.Parcelable$Creator CREATOR;
    private static final java.lang.String SYSTEM_AUTHORITY;
    private static final java.lang.String COUNTDOWN_PATH;
    private static final java.lang.String DOWNTIME_PATH;

    public void <init>()
    {
        android.service.notification.ZenModeConfig r0;

        r0 := @this: android.service.notification.ZenModeConfig;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.service.notification.ZenModeConfig: boolean allowEvents> = 1;

        r0.<android.service.notification.ZenModeConfig: int allowFrom> = 0;

        return;
    }

    public void <init>(android.os.Parcel)
    {
        android.service.notification.ZenModeConfig r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        android.os.Parcelable $r2, $r5;
        android.service.notification.Condition $r3;
        android.content.ComponentName $r4;
        android.os.Parcelable$Creator $r6, $r11;
        android.net.Uri[] $r7, $r9;
        android.content.ComponentName[] $r8, $r10;
        boolean $z0, $z1, $z2;
        java.lang.String $r12;

        r0 := @this: android.service.notification.ZenModeConfig;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.service.notification.ZenModeConfig: boolean allowEvents> = 1;

        r0.<android.service.notification.ZenModeConfig: int allowFrom> = 0;

        $i1 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i1 != 1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r0.<android.service.notification.ZenModeConfig: boolean allowCalls> = $z1;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i2 != 1 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        r0.<android.service.notification.ZenModeConfig: boolean allowMessages> = $z2;

        $i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i3 != 1 goto label5;

        $z0 = 1;

        goto label6;

     label5:
        $z0 = 0;

     label6:
        r0.<android.service.notification.ZenModeConfig: boolean allowEvents> = $z0;

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i4 != 1 goto label7;

        $r12 = virtualinvoke r1.<android.os.Parcel: java.lang.String readString()>();

        r0.<android.service.notification.ZenModeConfig: java.lang.String sleepMode> = $r12;

     label7:
        $i5 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.service.notification.ZenModeConfig: int sleepStartHour> = $i5;

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.service.notification.ZenModeConfig: int sleepStartMinute> = $i6;

        $i7 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.service.notification.ZenModeConfig: int sleepEndHour> = $i7;

        $i8 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.service.notification.ZenModeConfig: int sleepEndMinute> = $i8;

        i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i0 <= 0 goto label8;

        $r8 = newarray (android.content.ComponentName)[i0];

        r0.<android.service.notification.ZenModeConfig: android.content.ComponentName[] conditionComponents> = $r8;

        $r10 = r0.<android.service.notification.ZenModeConfig: android.content.ComponentName[] conditionComponents>;

        $r11 = <android.content.ComponentName: android.os.Parcelable$Creator CREATOR>;

        virtualinvoke r1.<android.os.Parcel: void readTypedArray(java.lang.Object[],android.os.Parcelable$Creator)>($r10, $r11);

     label8:
        i10 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if i10 <= 0 goto label9;

        $r7 = newarray (android.net.Uri)[i10];

        r0.<android.service.notification.ZenModeConfig: android.net.Uri[] conditionIds> = $r7;

        $r9 = r0.<android.service.notification.ZenModeConfig: android.net.Uri[] conditionIds>;

        $r6 = <android.net.Uri: android.os.Parcelable$Creator CREATOR>;

        virtualinvoke r1.<android.os.Parcel: void readTypedArray(java.lang.Object[],android.os.Parcelable$Creator)>($r9, $r6);

     label9:
        $i9 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.service.notification.ZenModeConfig: int allowFrom> = $i9;

        $r2 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(null);

        $r3 = (android.service.notification.Condition) $r2;

        r0.<android.service.notification.ZenModeConfig: android.service.notification.Condition exitCondition> = $r3;

        $r5 = virtualinvoke r1.<android.os.Parcel: android.os.Parcelable readParcelable(java.lang.ClassLoader)>(null);

        $r4 = (android.content.ComponentName) $r5;

        r0.<android.service.notification.ZenModeConfig: android.content.ComponentName exitConditionComponent> = $r4;

        return;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.service.notification.ZenModeConfig r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean $z0, $z1, $z2;
        java.lang.String $r2, $r13;
        android.content.ComponentName[] $r3, $r9, $r11, $r12;
        android.net.Uri[] $r4, $r7, $r8, $r10;
        android.service.notification.Condition $r5;
        android.content.ComponentName $r6;
        byte $b10, $b11, $b12;

        r0 := @this: android.service.notification.ZenModeConfig;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $z0 = r0.<android.service.notification.ZenModeConfig: boolean allowCalls>;

        if $z0 == 0 goto label01;

        $b11 = 1;

        goto label02;

     label01:
        $b11 = 0;

     label02:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($b11);

        $z1 = r0.<android.service.notification.ZenModeConfig: boolean allowMessages>;

        if $z1 == 0 goto label03;

        $b12 = 1;

        goto label04;

     label03:
        $b12 = 0;

     label04:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($b12);

        $z2 = r0.<android.service.notification.ZenModeConfig: boolean allowEvents>;

        if $z2 == 0 goto label05;

        $b10 = 1;

        goto label06;

     label05:
        $b10 = 0;

     label06:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($b10);

        $r2 = r0.<android.service.notification.ZenModeConfig: java.lang.String sleepMode>;

        if $r2 == null goto label07;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r13 = r0.<android.service.notification.ZenModeConfig: java.lang.String sleepMode>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r13);

        goto label08;

     label07:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label08:
        $i1 = r0.<android.service.notification.ZenModeConfig: int sleepStartHour>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $i2 = r0.<android.service.notification.ZenModeConfig: int sleepStartMinute>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $i3 = r0.<android.service.notification.ZenModeConfig: int sleepEndHour>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        $i4 = r0.<android.service.notification.ZenModeConfig: int sleepEndMinute>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i4);

        $r3 = r0.<android.service.notification.ZenModeConfig: android.content.ComponentName[] conditionComponents>;

        if $r3 == null goto label09;

        $r9 = r0.<android.service.notification.ZenModeConfig: android.content.ComponentName[] conditionComponents>;

        $i8 = lengthof $r9;

        if $i8 <= 0 goto label09;

        $r11 = r0.<android.service.notification.ZenModeConfig: android.content.ComponentName[] conditionComponents>;

        $i9 = lengthof $r11;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i9);

        $r12 = r0.<android.service.notification.ZenModeConfig: android.content.ComponentName[] conditionComponents>;

        virtualinvoke r1.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>($r12, 0);

        goto label10;

     label09:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label10:
        $r4 = r0.<android.service.notification.ZenModeConfig: android.net.Uri[] conditionIds>;

        if $r4 == null goto label11;

        $r7 = r0.<android.service.notification.ZenModeConfig: android.net.Uri[] conditionIds>;

        $i6 = lengthof $r7;

        if $i6 <= 0 goto label11;

        $r8 = r0.<android.service.notification.ZenModeConfig: android.net.Uri[] conditionIds>;

        $i7 = lengthof $r8;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i7);

        $r10 = r0.<android.service.notification.ZenModeConfig: android.net.Uri[] conditionIds>;

        virtualinvoke r1.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>($r10, 0);

        goto label12;

     label11:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label12:
        $i5 = r0.<android.service.notification.ZenModeConfig: int allowFrom>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i5);

        $r5 = r0.<android.service.notification.ZenModeConfig: android.service.notification.Condition exitCondition>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r5, 0);

        $r6 = r0.<android.service.notification.ZenModeConfig: android.content.ComponentName exitConditionComponent>;

        virtualinvoke r1.<android.os.Parcel: void writeParcelable(android.os.Parcelable,int)>($r6, 0);

        return;
    }

    public java.lang.String toString()
    {
        android.service.notification.ZenModeConfig r0;
        java.lang.StringBuilder $r1, $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r26, $r27, $r28, $r31, $r32, $r33, $r36, $r39, $r41, $r42;
        java.lang.Class $r2;
        java.lang.String $r3, $r10, $r14, $r30, $r35, $r40;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, $i3, $i4;
        android.content.ComponentName[] $r24, $r25;
        android.net.Uri[] $r29, $r34;
        android.content.ComponentName $r37;
        android.service.notification.Condition $r38;

        r0 := @this: android.service.notification.ZenModeConfig;

        $r1 = new java.lang.StringBuilder;

        $r2 = class "android/service/notification/ZenModeConfig";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("allowCalls=");

        $z0 = r0.<android.service.notification.ZenModeConfig: boolean allowCalls>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",allowMessages=");

        $z1 = r0.<android.service.notification.ZenModeConfig: boolean allowMessages>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",allowFrom=");

        $i0 = r0.<android.service.notification.ZenModeConfig: int allowFrom>;

        $r10 = staticinvoke <android.service.notification.ZenModeConfig: java.lang.String sourceToString(int)>($i0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",allowEvents=");

        $z2 = r0.<android.service.notification.ZenModeConfig: boolean allowEvents>;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",sleepMode=");

        $r14 = r0.<android.service.notification.ZenModeConfig: java.lang.String sleepMode>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",sleepStart=");

        $i1 = r0.<android.service.notification.ZenModeConfig: int sleepStartHour>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $i2 = r0.<android.service.notification.ZenModeConfig: int sleepStartMinute>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",sleepEnd=");

        $i3 = r0.<android.service.notification.ZenModeConfig: int sleepEndHour>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $i4 = r0.<android.service.notification.ZenModeConfig: int sleepEndMinute>;

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",conditionComponents=");

        $r24 = r0.<android.service.notification.ZenModeConfig: android.content.ComponentName[] conditionComponents>;

        if $r24 != null goto label1;

        $r30 = null;

        goto label2;

     label1:
        $r25 = r0.<android.service.notification.ZenModeConfig: android.content.ComponentName[] conditionComponents>;

        $r30 = staticinvoke <android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Object[])>(",", $r25);

     label2:
        $r31 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r28 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",conditionIds=");

        $r29 = r0.<android.service.notification.ZenModeConfig: android.net.Uri[] conditionIds>;

        if $r29 != null goto label3;

        $r35 = null;

        goto label4;

     label3:
        $r34 = r0.<android.service.notification.ZenModeConfig: android.net.Uri[] conditionIds>;

        $r35 = staticinvoke <android.text.TextUtils: java.lang.String join(java.lang.CharSequence,java.lang.Object[])>(",", $r34);

     label4:
        $r32 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",exitCondition=");

        $r38 = r0.<android.service.notification.ZenModeConfig: android.service.notification.Condition exitCondition>;

        $r39 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r38);

        $r36 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",exitConditionComponent=");

        $r37 = r0.<android.service.notification.ZenModeConfig: android.content.ComponentName exitConditionComponent>;

        $r42 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r37);

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r40;
    }

    public static java.lang.String sourceToString(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label1:
        return "anyone";

     label2:
        return "contacts";

     label3:
        return "stars";

     label4:
        return "UNKNOWN";
    }

    public boolean equals(java.lang.Object)
    {
        android.service.notification.ZenModeConfig r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.String $r3, $r4;
        android.content.ComponentName[] $r5, $r6;
        android.net.Uri[] $r7, $r8;
        android.service.notification.Condition $r9, $r10;
        android.content.ComponentName $r11, $r12;

        r0 := @this: android.service.notification.ZenModeConfig;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof android.service.notification.ZenModeConfig;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        if r1 != r0 goto label2;

        return 1;

     label2:
        r2 = (android.service.notification.ZenModeConfig) r1;

        $z2 = r2.<android.service.notification.ZenModeConfig: boolean allowCalls>;

        $z1 = r0.<android.service.notification.ZenModeConfig: boolean allowCalls>;

        if $z2 != $z1 goto label3;

        $z4 = r2.<android.service.notification.ZenModeConfig: boolean allowMessages>;

        $z3 = r0.<android.service.notification.ZenModeConfig: boolean allowMessages>;

        if $z4 != $z3 goto label3;

        $i1 = r2.<android.service.notification.ZenModeConfig: int allowFrom>;

        $i0 = r0.<android.service.notification.ZenModeConfig: int allowFrom>;

        if $i1 != $i0 goto label3;

        $z6 = r2.<android.service.notification.ZenModeConfig: boolean allowEvents>;

        $z5 = r0.<android.service.notification.ZenModeConfig: boolean allowEvents>;

        if $z6 != $z5 goto label3;

        $r4 = r2.<android.service.notification.ZenModeConfig: java.lang.String sleepMode>;

        $r3 = r0.<android.service.notification.ZenModeConfig: java.lang.String sleepMode>;

        $z7 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z7 == 0 goto label3;

        $i4 = r2.<android.service.notification.ZenModeConfig: int sleepStartHour>;

        $i2 = r0.<android.service.notification.ZenModeConfig: int sleepStartHour>;

        if $i4 != $i2 goto label3;

        $i6 = r2.<android.service.notification.ZenModeConfig: int sleepStartMinute>;

        $i3 = r0.<android.service.notification.ZenModeConfig: int sleepStartMinute>;

        if $i6 != $i3 goto label3;

        $i8 = r2.<android.service.notification.ZenModeConfig: int sleepEndHour>;

        $i5 = r0.<android.service.notification.ZenModeConfig: int sleepEndHour>;

        if $i8 != $i5 goto label3;

        $i9 = r2.<android.service.notification.ZenModeConfig: int sleepEndMinute>;

        $i7 = r0.<android.service.notification.ZenModeConfig: int sleepEndMinute>;

        if $i9 != $i7 goto label3;

        $r6 = r2.<android.service.notification.ZenModeConfig: android.content.ComponentName[] conditionComponents>;

        $r5 = r0.<android.service.notification.ZenModeConfig: android.content.ComponentName[] conditionComponents>;

        $z8 = staticinvoke <java.util.Objects: boolean deepEquals(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z8 == 0 goto label3;

        $r7 = r2.<android.service.notification.ZenModeConfig: android.net.Uri[] conditionIds>;

        $r8 = r0.<android.service.notification.ZenModeConfig: android.net.Uri[] conditionIds>;

        $z9 = staticinvoke <java.util.Objects: boolean deepEquals(java.lang.Object,java.lang.Object)>($r7, $r8);

        if $z9 == 0 goto label3;

        $r10 = r2.<android.service.notification.ZenModeConfig: android.service.notification.Condition exitCondition>;

        $r9 = r0.<android.service.notification.ZenModeConfig: android.service.notification.Condition exitCondition>;

        $z10 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r10, $r9);

        if $z10 == 0 goto label3;

        $r12 = r2.<android.service.notification.ZenModeConfig: android.content.ComponentName exitConditionComponent>;

        $r11 = r0.<android.service.notification.ZenModeConfig: android.content.ComponentName exitConditionComponent>;

        $z11 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r12, $r11);

        if $z11 == 0 goto label3;

        $z12 = 1;

        goto label4;

     label3:
        $z12 = 0;

     label4:
        return $z12;
    }

    public int hashCode()
    {
        android.service.notification.ZenModeConfig r0;
        java.lang.Object[] $r1;
        boolean $z0, $z1, $z2;
        java.lang.Boolean $r2, $r3, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.Integer $r4, $r7, $r8, $r9, $r11, $r13, $r14;
        java.lang.String $r6;
        android.content.ComponentName[] $r10;
        android.net.Uri[] $r12;
        android.service.notification.Condition $r15;
        android.content.ComponentName $r16;

        r0 := @this: android.service.notification.ZenModeConfig;

        $r1 = newarray (java.lang.Object)[13];

        $z0 = r0.<android.service.notification.ZenModeConfig: boolean allowCalls>;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r1[0] = $r2;

        $z1 = r0.<android.service.notification.ZenModeConfig: boolean allowMessages>;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $r1[1] = $r3;

        $i0 = r0.<android.service.notification.ZenModeConfig: int allowFrom>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[2] = $r4;

        $z2 = r0.<android.service.notification.ZenModeConfig: boolean allowEvents>;

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        $r1[3] = $r5;

        $r6 = r0.<android.service.notification.ZenModeConfig: java.lang.String sleepMode>;

        $r1[4] = $r6;

        $i1 = r0.<android.service.notification.ZenModeConfig: int sleepStartHour>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r1[5] = $r7;

        $i2 = r0.<android.service.notification.ZenModeConfig: int sleepStartMinute>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r1[6] = $r8;

        $i3 = r0.<android.service.notification.ZenModeConfig: int sleepEndHour>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r1[7] = $r9;

        $i4 = r0.<android.service.notification.ZenModeConfig: int sleepEndMinute>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r1[8] = $r11;

        $r10 = r0.<android.service.notification.ZenModeConfig: android.content.ComponentName[] conditionComponents>;

        $i5 = staticinvoke <java.util.Arrays: int hashCode(java.lang.Object[])>($r10);

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r1[9] = $r13;

        $r12 = r0.<android.service.notification.ZenModeConfig: android.net.Uri[] conditionIds>;

        $i6 = staticinvoke <java.util.Arrays: int hashCode(java.lang.Object[])>($r12);

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r1[10] = $r14;

        $r15 = r0.<android.service.notification.ZenModeConfig: android.service.notification.Condition exitCondition>;

        $r1[11] = $r15;

        $r16 = r0.<android.service.notification.ZenModeConfig: android.content.ComponentName exitConditionComponent>;

        $r1[12] = $r16;

        $i7 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>($r1);

        return $i7;
    }

    public boolean isValid()
    {
        android.service.notification.ZenModeConfig r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.String $r1;

        r0 := @this: android.service.notification.ZenModeConfig;

        $i0 = r0.<android.service.notification.ZenModeConfig: int sleepStartHour>;

        $z0 = staticinvoke <android.service.notification.ZenModeConfig: boolean isValidHour(int)>($i0);

        if $z0 == 0 goto label1;

        $i1 = r0.<android.service.notification.ZenModeConfig: int sleepStartMinute>;

        $z1 = staticinvoke <android.service.notification.ZenModeConfig: boolean isValidMinute(int)>($i1);

        if $z1 == 0 goto label1;

        $i2 = r0.<android.service.notification.ZenModeConfig: int sleepEndHour>;

        $z2 = staticinvoke <android.service.notification.ZenModeConfig: boolean isValidHour(int)>($i2);

        if $z2 == 0 goto label1;

        $i3 = r0.<android.service.notification.ZenModeConfig: int sleepEndMinute>;

        $z3 = staticinvoke <android.service.notification.ZenModeConfig: boolean isValidMinute(int)>($i3);

        if $z3 == 0 goto label1;

        $r1 = r0.<android.service.notification.ZenModeConfig: java.lang.String sleepMode>;

        $z4 = staticinvoke <android.service.notification.ZenModeConfig: boolean isValidSleepMode(java.lang.String)>($r1);

        if $z4 == 0 goto label1;

        $z5 = 1;

        goto label2;

     label1:
        $z5 = 0;

     label2:
        return $z5;
    }

    public static boolean isValidSleepMode(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0, $z1, $z2;
        int[] $r1;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("nights");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("weeknights");

        if $z1 != 0 goto label1;

        $r1 = staticinvoke <android.service.notification.ZenModeConfig: int[] tryParseDays(java.lang.String)>(r0);

        if $r1 == null goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public static int[] tryParseDays(java.lang.String)
    {
        java.lang.String r0, $r3, $r4, $r5, $r6, $r7, r10;
        java.lang.String[] r1;
        int[] r2, $r8, $r9;
        int i0, i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        r10 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        $r3 = "nights";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z0 == 0 goto label2;

        $r9 = <android.service.notification.ZenModeConfig: int[] ALL_DAYS>;

        return $r9;

     label2:
        $r4 = "weeknights";

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z1 == 0 goto label3;

        $r8 = <android.service.notification.ZenModeConfig: int[] WEEKNIGHT_DAYS>;

        return $r8;

     label3:
        $z2 = virtualinvoke r10.<java.lang.String: boolean startsWith(java.lang.String)>("days:");

        if $z2 != 0 goto label4;

        return null;

     label4:
        $z3 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>("days:");

        if $z3 == 0 goto label5;

        return null;

     label5:
        $r5 = "days:";

        $i2 = virtualinvoke $r5.<java.lang.String: int length()>();

        $r6 = virtualinvoke r10.<java.lang.String: java.lang.String substring(int)>($i2);

        r1 = virtualinvoke $r6.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $i4 = lengthof r1;

        if $i4 != 0 goto label6;

        return null;

     label6:
        $i3 = lengthof r1;

        r2 = newarray (int)[$i3];

        i0 = 0;

     label7:
        $i5 = lengthof r1;

        if i0 >= $i5 goto label9;

        $r7 = r1[i0];

        i1 = staticinvoke <android.service.notification.ZenModeConfig: int tryParseInt(java.lang.String,int)>($r7, -1);

        if i1 != -1 goto label8;

        return null;

     label8:
        r2[i0] = i1;

        i0 = i0 + 1;

        goto label7;

     label9:
        return r2;
    }

    private static int tryParseInt(java.lang.String, int)
    {
        java.lang.String r0;
        int i0, $i1;
        boolean $z0;
        java.lang.Integer $r2;
        java.lang.NumberFormatException $r3;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 == 0 goto label1;

        return i0;

     label1:
        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(r0);

        $i1 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

     label2:
        return $i1;

     label3:
        $r3 := @caughtexception;

        return i0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static android.service.notification.ZenModeConfig readXml(org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        org.xmlpull.v1.XmlPullParser r0;
        int i0, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17;
        java.lang.String r1, r5, $r6, $r11, $r12, $r13, $r14, $r18, $r21, $r27, r31;
        android.service.notification.ZenModeConfig r2, $r7;
        java.util.ArrayList r3, r4, $r8, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16;
        java.lang.IllegalStateException $r10;
        android.service.notification.Condition $r15, $r16;
        android.content.ComponentName $r17, r32;
        java.lang.StringBuilder $r19, $r22, $r23;
        java.lang.IndexOutOfBoundsException $r20;
        android.content.ComponentName[] $r24, $r26;
        java.lang.Object[] $r25, $r29;
        android.net.Uri[] $r28, $r30;
        android.net.Uri r33;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        i0 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int getEventType()>();

        if i0 == 2 goto label01;

        return null;

     label01:
        r1 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r6 = "zen";

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label02;

        return null;

     label02:
        $r7 = new android.service.notification.ZenModeConfig;

        specialinvoke $r7.<android.service.notification.ZenModeConfig: void <init>()>();

        r2 = $r7;

        staticinvoke <android.service.notification.ZenModeConfig: int safeInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r0, "version", 1);

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r3 = $r9;

        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r4 = $r8;

     label03:
        $i6 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: int next()>();

        i17 = $i6;

        if $i6 == 1 goto label21;

        r31 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        if i17 != 3 goto label05;

        $r27 = "zen";

        $z15 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>(r31);

        if $z15 == 0 goto label05;

        $z16 = virtualinvoke r3.<java.util.ArrayList: boolean isEmpty()>();

        if $z16 != 0 goto label04;

        $i14 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        $r24 = newarray (android.content.ComponentName)[$i14];

        $r25 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r24);

        $r26 = (android.content.ComponentName[]) $r25;

        r2.<android.service.notification.ZenModeConfig: android.content.ComponentName[] conditionComponents> = $r26;

        $i16 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        $r28 = newarray (android.net.Uri)[$i16];

        $r29 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r28);

        $r30 = (android.net.Uri[]) $r29;

        r2.<android.service.notification.ZenModeConfig: android.net.Uri[] conditionIds> = $r30;

     label04:
        return r2;

     label05:
        if i17 != 2 goto label03;

        $r11 = "allow";

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r31);

        if $z1 == 0 goto label07;

        $z14 = staticinvoke <android.service.notification.ZenModeConfig: boolean safeBoolean(org.xmlpull.v1.XmlPullParser,java.lang.String,boolean)>(r0, "calls", 0);

        r2.<android.service.notification.ZenModeConfig: boolean allowCalls> = $z14;

        $z13 = staticinvoke <android.service.notification.ZenModeConfig: boolean safeBoolean(org.xmlpull.v1.XmlPullParser,java.lang.String,boolean)>(r0, "messages", 0);

        r2.<android.service.notification.ZenModeConfig: boolean allowMessages> = $z13;

        $z12 = staticinvoke <android.service.notification.ZenModeConfig: boolean safeBoolean(org.xmlpull.v1.XmlPullParser,java.lang.String,boolean)>(r0, "events", 1);

        r2.<android.service.notification.ZenModeConfig: boolean allowEvents> = $z12;

        $i12 = staticinvoke <android.service.notification.ZenModeConfig: int safeInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r0, "from", 0);

        r2.<android.service.notification.ZenModeConfig: int allowFrom> = $i12;

        $i11 = r2.<android.service.notification.ZenModeConfig: int allowFrom>;

        if $i11 < 0 goto label06;

        $i15 = r2.<android.service.notification.ZenModeConfig: int allowFrom>;

        if $i15 <= 2 goto label03;

     label06:
        $r20 = new java.lang.IndexOutOfBoundsException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad source in config:");

        $i13 = r2.<android.service.notification.ZenModeConfig: int allowFrom>;

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r21);

        throw $r20;

     label07:
        $r12 = "sleep";

        $z2 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r31);

        if $z2 == 0 goto label18;

        r5 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "mode");

        $z5 = staticinvoke <android.service.notification.ZenModeConfig: boolean isValidSleepMode(java.lang.String)>(r5);

        if $z5 == 0 goto label08;

        $r18 = r5;

        goto label09;

     label08:
        $r18 = null;

     label09:
        r2.<android.service.notification.ZenModeConfig: java.lang.String sleepMode> = $r18;

        i2 = staticinvoke <android.service.notification.ZenModeConfig: int safeInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r0, "startHour", 0);

        i3 = staticinvoke <android.service.notification.ZenModeConfig: int safeInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r0, "startMin", 0);

        i4 = staticinvoke <android.service.notification.ZenModeConfig: int safeInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r0, "endHour", 0);

        i5 = staticinvoke <android.service.notification.ZenModeConfig: int safeInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r0, "endMin", 0);

        $z10 = staticinvoke <android.service.notification.ZenModeConfig: boolean isValidHour(int)>(i2);

        if $z10 == 0 goto label10;

        $i7 = i2;

        goto label11;

     label10:
        $i7 = 0;

     label11:
        r2.<android.service.notification.ZenModeConfig: int sleepStartHour> = $i7;

        $z11 = staticinvoke <android.service.notification.ZenModeConfig: boolean isValidMinute(int)>(i3);

        if $z11 == 0 goto label12;

        $i8 = i3;

        goto label13;

     label12:
        $i8 = 0;

     label13:
        r2.<android.service.notification.ZenModeConfig: int sleepStartMinute> = $i8;

        $z8 = staticinvoke <android.service.notification.ZenModeConfig: boolean isValidHour(int)>(i4);

        if $z8 == 0 goto label14;

        $i9 = i4;

        goto label15;

     label14:
        $i9 = 0;

     label15:
        r2.<android.service.notification.ZenModeConfig: int sleepEndHour> = $i9;

        $z9 = staticinvoke <android.service.notification.ZenModeConfig: boolean isValidMinute(int)>(i5);

        if $z9 == 0 goto label16;

        $i10 = i5;

        goto label17;

     label16:
        $i10 = 0;

     label17:
        r2.<android.service.notification.ZenModeConfig: int sleepEndMinute> = $i10;

        goto label03;

     label18:
        $r13 = "condition";

        $z3 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>(r31);

        if $z3 == 0 goto label20;

        r32 = staticinvoke <android.service.notification.ZenModeConfig: android.content.ComponentName safeComponentName(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "component");

        r33 = staticinvoke <android.service.notification.ZenModeConfig: android.net.Uri safeUri(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "id");

        if r32 == null goto label19;

        if r33 == null goto label19;

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r32);

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r33);

     label19:
        goto label03;

     label20:
        $r14 = "exitCondition";

        $z4 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r31);

        if $z4 == 0 goto label03;

        $r15 = staticinvoke <android.service.notification.ZenModeConfig: android.service.notification.Condition readConditionXml(org.xmlpull.v1.XmlPullParser)>(r0);

        r2.<android.service.notification.ZenModeConfig: android.service.notification.Condition exitCondition> = $r15;

        $r16 = r2.<android.service.notification.ZenModeConfig: android.service.notification.Condition exitCondition>;

        if $r16 == null goto label03;

        $r17 = staticinvoke <android.service.notification.ZenModeConfig: android.content.ComponentName safeComponentName(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "component");

        r2.<android.service.notification.ZenModeConfig: android.content.ComponentName exitConditionComponent> = $r17;

        goto label03;

     label21:
        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Failed to reach END_DOCUMENT");

        throw $r10;
    }

    public void writeXml(org.xmlpull.v1.XmlSerializer) throws java.io.IOException
    {
        android.service.notification.ZenModeConfig r0;
        org.xmlpull.v1.XmlSerializer r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.String $r3, $r6, $r8, $r11, $r12, $r15, $r17, $r19, $r22, $r24, $r34, $r40, $r49, $r51;
        boolean $z0, $z1, $z2;
        android.service.notification.Condition $r26, $r32;
        android.content.ComponentName[] $r27, $r35, $r38, $r44;
        android.content.ComponentName $r29, $r31, $r45;
        android.net.Uri[] $r37, $r39, $r42;
        android.net.Uri $r50;

        r0 := @this: android.service.notification.ZenModeConfig;

        r1 := @parameter0: org.xmlpull.v1.XmlSerializer;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "zen");

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "version", $r3);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "allow");

        $z0 = r0.<android.service.notification.ZenModeConfig: boolean allowCalls>;

        $r6 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z0);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "calls", $r6);

        $z1 = r0.<android.service.notification.ZenModeConfig: boolean allowMessages>;

        $r8 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "messages", $r8);

        $z2 = r0.<android.service.notification.ZenModeConfig: boolean allowEvents>;

        $r11 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>($z2);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "events", $r11);

        $i1 = r0.<android.service.notification.ZenModeConfig: int allowFrom>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "from", $r12);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "allow");

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "sleep");

        $r15 = r0.<android.service.notification.ZenModeConfig: java.lang.String sleepMode>;

        if $r15 == null goto label1;

        $r49 = r0.<android.service.notification.ZenModeConfig: java.lang.String sleepMode>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "mode", $r49);

     label1:
        $i2 = r0.<android.service.notification.ZenModeConfig: int sleepStartHour>;

        $r17 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "startHour", $r17);

        $i3 = r0.<android.service.notification.ZenModeConfig: int sleepStartMinute>;

        $r19 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "startMin", $r19);

        $i4 = r0.<android.service.notification.ZenModeConfig: int sleepEndHour>;

        $r22 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i4);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "endHour", $r22);

        $i5 = r0.<android.service.notification.ZenModeConfig: int sleepEndMinute>;

        $r24 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i5);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "endMin", $r24);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "sleep");

        $r27 = r0.<android.service.notification.ZenModeConfig: android.content.ComponentName[] conditionComponents>;

        if $r27 == null goto label3;

        $r37 = r0.<android.service.notification.ZenModeConfig: android.net.Uri[] conditionIds>;

        if $r37 == null goto label3;

        $r38 = r0.<android.service.notification.ZenModeConfig: android.content.ComponentName[] conditionComponents>;

        $i7 = lengthof $r38;

        $r39 = r0.<android.service.notification.ZenModeConfig: android.net.Uri[] conditionIds>;

        $i6 = lengthof $r39;

        if $i7 != $i6 goto label3;

        i0 = 0;

     label2:
        $r35 = r0.<android.service.notification.ZenModeConfig: android.content.ComponentName[] conditionComponents>;

        $i8 = lengthof $r35;

        if i0 >= $i8 goto label3;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "condition");

        $r44 = r0.<android.service.notification.ZenModeConfig: android.content.ComponentName[] conditionComponents>;

        $r45 = $r44[i0];

        $r40 = virtualinvoke $r45.<android.content.ComponentName: java.lang.String flattenToString()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "component", $r40);

        $r42 = r0.<android.service.notification.ZenModeConfig: android.net.Uri[] conditionIds>;

        $r50 = $r42[i0];

        $r51 = virtualinvoke $r50.<android.net.Uri: java.lang.String toString()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "id", $r51);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "condition");

        i0 = i0 + 1;

        goto label2;

     label3:
        $r26 = r0.<android.service.notification.ZenModeConfig: android.service.notification.Condition exitCondition>;

        if $r26 == null goto label4;

        $r31 = r0.<android.service.notification.ZenModeConfig: android.content.ComponentName exitConditionComponent>;

        if $r31 == null goto label4;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "exitCondition");

        $r29 = r0.<android.service.notification.ZenModeConfig: android.content.ComponentName exitConditionComponent>;

        $r34 = virtualinvoke $r29.<android.content.ComponentName: java.lang.String flattenToString()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "component", $r34);

        $r32 = r0.<android.service.notification.ZenModeConfig: android.service.notification.Condition exitCondition>;

        staticinvoke <android.service.notification.ZenModeConfig: void writeConditionXml(android.service.notification.Condition,org.xmlpull.v1.XmlSerializer)>($r32, r1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "exitCondition");

     label4:
        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "zen");

        return;
    }

    public static android.service.notification.Condition readConditionXml(org.xmlpull.v1.XmlPullParser)
    {
        org.xmlpull.v1.XmlPullParser r0;
        android.net.Uri r1;
        java.lang.String r2, r3, r4, $r8;
        int i0, i1, i2;
        java.lang.IllegalArgumentException r5, $r6;
        android.service.notification.Condition $r7;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 = staticinvoke <android.service.notification.ZenModeConfig: android.net.Uri safeUri(org.xmlpull.v1.XmlPullParser,java.lang.String)>(r0, "id");

        r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "summary");

        r3 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "line1");

        r4 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "line2");

        i0 = staticinvoke <android.service.notification.ZenModeConfig: int safeInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r0, "icon", -1);

        i1 = staticinvoke <android.service.notification.ZenModeConfig: int safeInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r0, "state", -1);

        i2 = staticinvoke <android.service.notification.ZenModeConfig: int safeInt(org.xmlpull.v1.XmlPullParser,java.lang.String,int)>(r0, "flags", -1);

     label1:
        $r7 = new android.service.notification.Condition;

        specialinvoke $r7.<android.service.notification.Condition: void <init>(android.net.Uri,java.lang.String,java.lang.String,java.lang.String,int,int,int)>(r1, r2, r3, r4, i0, i1, i2);

     label2:
        return $r7;

     label3:
        $r6 := @caughtexception;

        r5 = $r6;

        $r8 = <android.service.notification.ZenModeConfig: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r8, "Unable to read condition xml", r5);

        return null;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    public static void writeConditionXml(android.service.notification.Condition, org.xmlpull.v1.XmlSerializer) throws java.io.IOException
    {
        android.service.notification.Condition r0;
        org.xmlpull.v1.XmlSerializer r1;
        android.net.Uri $r2;
        java.lang.String $r3, $r5, $r7, $r9, $r12, $r13, $r16;
        int $i0, $i1, $i2;

        r0 := @parameter0: android.service.notification.Condition;

        r1 := @parameter1: org.xmlpull.v1.XmlSerializer;

        $r2 = r0.<android.service.notification.Condition: android.net.Uri id>;

        $r3 = virtualinvoke $r2.<android.net.Uri: java.lang.String toString()>();

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "id", $r3);

        $r5 = r0.<android.service.notification.Condition: java.lang.String summary>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "summary", $r5);

        $r7 = r0.<android.service.notification.Condition: java.lang.String line1>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "line1", $r7);

        $r9 = r0.<android.service.notification.Condition: java.lang.String line2>;

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "line2", $r9);

        $i0 = r0.<android.service.notification.Condition: int icon>;

        $r12 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "icon", $r12);

        $i1 = r0.<android.service.notification.Condition: int state>;

        $r13 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "state", $r13);

        $i2 = r0.<android.service.notification.Condition: int flags>;

        $r16 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        interfaceinvoke r1.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "flags", $r16);

        return;
    }

    public static boolean isValidHour(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 >= 24 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isValidMinute(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 >= 60 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static boolean safeBoolean(org.xmlpull.v1.XmlPullParser, java.lang.String, boolean)
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, r2;
        boolean z0, $z1, $z2;
        java.lang.Boolean $r3;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r1);

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z1 == 0 goto label1;

        return z0;

     label1:
        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>(r2);

        $z2 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z2;
    }

    private static int safeInt(org.xmlpull.v1.XmlPullParser, java.lang.String, int)
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, r2;
        int i0, $i1;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r1);

        $i1 = staticinvoke <android.service.notification.ZenModeConfig: int tryParseInt(java.lang.String,int)>(r2, i0);

        return $i1;
    }

    private static android.content.ComponentName safeComponentName(org.xmlpull.v1.XmlPullParser, java.lang.String)
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, r2;
        boolean $z0;
        android.content.ComponentName $r3;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r1);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r3 = staticinvoke <android.content.ComponentName: android.content.ComponentName unflattenFromString(java.lang.String)>(r2);

        return $r3;
    }

    private static android.net.Uri safeUri(org.xmlpull.v1.XmlPullParser, java.lang.String)
    {
        org.xmlpull.v1.XmlPullParser r0;
        java.lang.String r1, r2;
        boolean $z0;
        android.net.Uri $r3;

        r0 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r1 := @parameter1: java.lang.String;

        r2 = interfaceinvoke r0.<org.xmlpull.v1.XmlPullParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, r1);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r3 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r2);

        return $r3;
    }

    public int describeContents()
    {
        android.service.notification.ZenModeConfig r0;

        r0 := @this: android.service.notification.ZenModeConfig;

        return 0;
    }

    public android.service.notification.ZenModeConfig copy()
    {
        android.service.notification.ZenModeConfig r0, r2, $r4;
        android.os.Parcel r1;
        java.lang.Throwable r3, $r5;

        r0 := @this: android.service.notification.ZenModeConfig;

        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r0.<android.service.notification.ZenModeConfig: void writeToParcel(android.os.Parcel,int)>(r1, 0);

        virtualinvoke r1.<android.os.Parcel: void setDataPosition(int)>(0);

        $r4 = new android.service.notification.ZenModeConfig;

        specialinvoke $r4.<android.service.notification.ZenModeConfig: void <init>(android.os.Parcel)>(r1);

        r2 = $r4;

     label2:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        return r2;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

     label4:
        virtualinvoke r1.<android.os.Parcel: void recycle()>();

        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.service.notification.ZenModeConfig$DowntimeInfo toDowntimeInfo()
    {
        android.service.notification.ZenModeConfig r0;
        android.service.notification.ZenModeConfig$DowntimeInfo r1, $r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.service.notification.ZenModeConfig;

        $r2 = new android.service.notification.ZenModeConfig$DowntimeInfo;

        specialinvoke $r2.<android.service.notification.ZenModeConfig$DowntimeInfo: void <init>()>();

        r1 = $r2;

        $i0 = r0.<android.service.notification.ZenModeConfig: int sleepStartHour>;

        r1.<android.service.notification.ZenModeConfig$DowntimeInfo: int startHour> = $i0;

        $i1 = r0.<android.service.notification.ZenModeConfig: int sleepStartMinute>;

        r1.<android.service.notification.ZenModeConfig$DowntimeInfo: int startMinute> = $i1;

        $i2 = r0.<android.service.notification.ZenModeConfig: int sleepEndHour>;

        r1.<android.service.notification.ZenModeConfig$DowntimeInfo: int endHour> = $i2;

        $i3 = r0.<android.service.notification.ZenModeConfig: int sleepEndMinute>;

        r1.<android.service.notification.ZenModeConfig$DowntimeInfo: int endMinute> = $i3;

        return r1;
    }

    public static android.service.notification.Condition toTimeCondition(int)
    {
        int i0, $i3;
        long l1, l2, $l4, $l5;
        android.service.notification.Condition $r0;

        i0 := @parameter0: int;

        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        if i0 != 0 goto label1;

        $l5 = 20000L;

        goto label2;

     label1:
        $i3 = i0 * 60000;

        $l5 = (long) $i3;

     label2:
        l2 = $l5;

        $l4 = l1 + l2;

        $r0 = staticinvoke <android.service.notification.ZenModeConfig: android.service.notification.Condition toTimeCondition(long,int)>($l4, i0);

        return $r0;
    }

    public static android.service.notification.Condition toTimeCondition(long, int)
    {
        long l0;
        int i1, i2, i3, $i4, $i5;
        java.lang.String r0;
        android.net.Uri r1;
        float $f0, $f1;
        android.content.res.Resources $r2;
        java.lang.Object[] $r3;
        java.lang.Integer $r4;
        android.service.notification.Condition $r5;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        if i1 >= 60 goto label1;

        $i4 = i1;

        goto label2;

     label1:
        $f0 = (float) i1;

        $f1 = $f0 / 60.0F;

        $i4 = staticinvoke <java.lang.Math: int round(float)>($f1);

     label2:
        i2 = $i4;

        if i1 >= 60 goto label3;

        $i5 = 18087961;

        goto label4;

     label3:
        $i5 = 18087962;

     label4:
        i3 = $i5;

        $r2 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r3[0] = $r4;

        r0 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String getQuantityString(int,int,java.lang.Object[])>(i3, i2, $r3);

        r1 = staticinvoke <android.service.notification.ZenModeConfig: android.net.Uri toCountdownConditionId(long)>(l0);

        $r5 = new android.service.notification.Condition;

        specialinvoke $r5.<android.service.notification.Condition: void <init>(android.net.Uri,java.lang.String,java.lang.String,java.lang.String,int,int,int)>(r1, r0, "", "", 0, 1, 1);

        return $r5;
    }

    public static android.net.Uri toCountdownConditionId(long)
    {
        long l0;
        android.net.Uri$Builder $r0, $r1, $r2, $r3, $r5;
        java.lang.String $r4;
        android.net.Uri $r6;

        l0 := @parameter0: long;

        $r0 = new android.net.Uri$Builder;

        specialinvoke $r0.<android.net.Uri$Builder: void <init>()>();

        $r1 = virtualinvoke $r0.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("condition");

        $r2 = virtualinvoke $r1.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>("android");

        $r3 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>("countdown");

        $r4 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        $r5 = virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r6;
    }

    public static long tryParseCountdownConditionId(android.net.Uri)
    {
        android.net.Uri r0;
        java.lang.RuntimeException r1, $r9;
        boolean $z0, $z1;
        java.util.List $r2, $r4, $r6;
        int $i0;
        java.lang.String $r3, $r8, $r11, $r14;
        java.lang.Object $r5, $r7;
        long $l1;
        java.lang.StringBuilder $r10, $r12, $r13;

        r0 := @parameter0: android.net.Uri;

        $z0 = staticinvoke <android.service.notification.Condition: boolean isValidId(android.net.Uri,java.lang.String)>(r0, "android");

        if $z0 != 0 goto label1;

        return 0L;

     label1:
        $r2 = virtualinvoke r0.<android.net.Uri: java.util.List getPathSegments()>();

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 != 2 goto label2;

        $r3 = "countdown";

        $r4 = virtualinvoke r0.<android.net.Uri: java.util.List getPathSegments()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0);

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z1 != 0 goto label3;

     label2:
        return 0L;

     label3:
        $r6 = virtualinvoke r0.<android.net.Uri: java.util.List getPathSegments()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(1);

        $r8 = (java.lang.String) $r7;

        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r8);

     label4:
        return $l1;

     label5:
        $r9 := @caughtexception;

        r1 = $r9;

        $r11 = <android.service.notification.ZenModeConfig: java.lang.String TAG>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error parsing countdown condition: ");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r11, $r14, r1);

        return 0L;

        catch java.lang.RuntimeException from label3 to label4 with label5;
    }

    public static boolean isValidCountdownConditionId(android.net.Uri)
    {
        android.net.Uri r0;
        long $l0;
        byte $b1;
        boolean $z0;

        r0 := @parameter0: android.net.Uri;

        $l0 = staticinvoke <android.service.notification.ZenModeConfig: long tryParseCountdownConditionId(android.net.Uri)>(r0);

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static android.net.Uri toDowntimeConditionId(android.service.notification.ZenModeConfig$DowntimeInfo)
    {
        android.service.notification.ZenModeConfig$DowntimeInfo r0;
        android.net.Uri$Builder $r1, $r2, $r3, $r4, $r10, $r17;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r11, $r12, $r13, $r15;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r9, $r14;
        android.net.Uri $r16;

        r0 := @parameter0: android.service.notification.ZenModeConfig$DowntimeInfo;

        $r1 = new android.net.Uri$Builder;

        specialinvoke $r1.<android.net.Uri$Builder: void <init>()>();

        $r2 = virtualinvoke $r1.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("condition");

        $r3 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>("android");

        $r4 = virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>("downtime");

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $i0 = r0.<android.service.notification.ZenModeConfig$DowntimeInfo: int startHour>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $i1 = r0.<android.service.notification.ZenModeConfig$DowntimeInfo: int startMinute>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = virtualinvoke $r4.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("start", $r9);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $i2 = r0.<android.service.notification.ZenModeConfig$DowntimeInfo: int endHour>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $i3 = r0.<android.service.notification.ZenModeConfig$DowntimeInfo: int endMinute>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = virtualinvoke $r10.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("end", $r14);

        $r16 = virtualinvoke $r17.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r16;
    }

    public static android.service.notification.ZenModeConfig$DowntimeInfo tryParseDowntimeConditionId(android.net.Uri)
    {
        android.net.Uri r0;
        int[] r1, r2;
        android.service.notification.ZenModeConfig$DowntimeInfo r3, $r10;
        boolean $z0, $z1;
        java.util.List $r4, $r6;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r5, $r8, $r9;
        java.lang.Object $r7;

        r0 := @parameter0: android.net.Uri;

        $z0 = staticinvoke <android.service.notification.Condition: boolean isValidId(android.net.Uri,java.lang.String)>(r0, "android");

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r0.<android.net.Uri: java.util.List getPathSegments()>();

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i0 != 1 goto label1;

        $r5 = "downtime";

        $r6 = virtualinvoke r0.<android.net.Uri: java.util.List getPathSegments()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(0);

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 != 0 goto label2;

     label1:
        return null;

     label2:
        $r8 = virtualinvoke r0.<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>("start");

        r1 = staticinvoke <android.service.notification.ZenModeConfig: int[] tryParseHourAndMinute(java.lang.String)>($r8);

        $r9 = virtualinvoke r0.<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>("end");

        r2 = staticinvoke <android.service.notification.ZenModeConfig: int[] tryParseHourAndMinute(java.lang.String)>($r9);

        if r1 == null goto label3;

        if r2 != null goto label4;

     label3:
        return null;

     label4:
        $r10 = new android.service.notification.ZenModeConfig$DowntimeInfo;

        specialinvoke $r10.<android.service.notification.ZenModeConfig$DowntimeInfo: void <init>()>();

        r3 = $r10;

        $i2 = r1[0];

        r3.<android.service.notification.ZenModeConfig$DowntimeInfo: int startHour> = $i2;

        $i1 = r1[1];

        r3.<android.service.notification.ZenModeConfig$DowntimeInfo: int startMinute> = $i1;

        $i4 = r2[0];

        r3.<android.service.notification.ZenModeConfig$DowntimeInfo: int endHour> = $i4;

        $i3 = r2[1];

        r3.<android.service.notification.ZenModeConfig$DowntimeInfo: int endMinute> = $i3;

        return r3;
    }

    private static int[] tryParseHourAndMinute(java.lang.String)
    {
        java.lang.String r0, $r1, $r2;
        int i0, i1, i2, $i3, $i4, $i5;
        boolean $z0, $z1, $z2;
        int[] $r3;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 == 0 goto label1;

        return null;

     label1:
        i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(46);

        if i0 < 1 goto label2;

        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        $i4 = $i3 - 1;

        if i0 < $i4 goto label3;

     label2:
        return null;

     label3:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        i1 = staticinvoke <android.service.notification.ZenModeConfig: int tryParseInt(java.lang.String,int)>($r1, -1);

        $i5 = i0 + 1;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i5);

        i2 = staticinvoke <android.service.notification.ZenModeConfig: int tryParseInt(java.lang.String,int)>($r2, -1);

        $z1 = staticinvoke <android.service.notification.ZenModeConfig: boolean isValidHour(int)>(i1);

        if $z1 == 0 goto label4;

        $z2 = staticinvoke <android.service.notification.ZenModeConfig: boolean isValidMinute(int)>(i2);

        if $z2 == 0 goto label4;

        $r3 = newarray (int)[2];

        $r3[0] = i1;

        $r3[1] = i2;

        goto label5;

     label4:
        $r3 = null;

     label5:
        return $r3;
    }

    public static boolean isValidDowntimeConditionId(android.net.Uri)
    {
        android.net.Uri r0;
        android.service.notification.ZenModeConfig$DowntimeInfo $r1;
        boolean $z0;

        r0 := @parameter0: android.net.Uri;

        $r1 = staticinvoke <android.service.notification.ZenModeConfig: android.service.notification.ZenModeConfig$DowntimeInfo tryParseDowntimeConditionId(android.net.Uri)>(r0);

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static void <clinit>()
    {
        int[] $r0, $r1, $r2;
        android.service.notification.ZenModeConfig$1 $r3;

        <android.service.notification.ZenModeConfig: java.lang.String DOWNTIME_PATH> = "downtime";

        <android.service.notification.ZenModeConfig: java.lang.String COUNTDOWN_PATH> = "countdown";

        <android.service.notification.ZenModeConfig: java.lang.String SYSTEM_AUTHORITY> = "android";

        <android.service.notification.ZenModeConfig: java.lang.String EXIT_CONDITION_ATT_COMPONENT> = "component";

        <android.service.notification.ZenModeConfig: java.lang.String EXIT_CONDITION_TAG> = "exitCondition";

        <android.service.notification.ZenModeConfig: java.lang.String CONDITION_ATT_FLAGS> = "flags";

        <android.service.notification.ZenModeConfig: java.lang.String CONDITION_ATT_STATE> = "state";

        <android.service.notification.ZenModeConfig: java.lang.String CONDITION_ATT_ICON> = "icon";

        <android.service.notification.ZenModeConfig: java.lang.String CONDITION_ATT_LINE2> = "line2";

        <android.service.notification.ZenModeConfig: java.lang.String CONDITION_ATT_LINE1> = "line1";

        <android.service.notification.ZenModeConfig: java.lang.String CONDITION_ATT_SUMMARY> = "summary";

        <android.service.notification.ZenModeConfig: java.lang.String CONDITION_ATT_ID> = "id";

        <android.service.notification.ZenModeConfig: java.lang.String CONDITION_ATT_COMPONENT> = "component";

        <android.service.notification.ZenModeConfig: java.lang.String CONDITION_TAG> = "condition";

        <android.service.notification.ZenModeConfig: java.lang.String SLEEP_ATT_END_MIN> = "endMin";

        <android.service.notification.ZenModeConfig: java.lang.String SLEEP_ATT_END_HR> = "endHour";

        <android.service.notification.ZenModeConfig: java.lang.String SLEEP_ATT_START_MIN> = "startMin";

        <android.service.notification.ZenModeConfig: java.lang.String SLEEP_ATT_START_HR> = "startHour";

        <android.service.notification.ZenModeConfig: java.lang.String SLEEP_ATT_MODE> = "mode";

        <android.service.notification.ZenModeConfig: java.lang.String SLEEP_TAG> = "sleep";

        <android.service.notification.ZenModeConfig: java.lang.String ALLOW_ATT_EVENTS> = "events";

        <android.service.notification.ZenModeConfig: java.lang.String ALLOW_ATT_FROM> = "from";

        <android.service.notification.ZenModeConfig: java.lang.String ALLOW_ATT_MESSAGES> = "messages";

        <android.service.notification.ZenModeConfig: java.lang.String ALLOW_ATT_CALLS> = "calls";

        <android.service.notification.ZenModeConfig: java.lang.String ALLOW_TAG> = "allow";

        <android.service.notification.ZenModeConfig: java.lang.String ZEN_ATT_VERSION> = "version";

        <android.service.notification.ZenModeConfig: java.lang.String ZEN_TAG> = "zen";

        <android.service.notification.ZenModeConfig: int XML_VERSION> = 1;

        <android.service.notification.ZenModeConfig: boolean DEFAULT_ALLOW_EVENTS> = 1;

        <android.service.notification.ZenModeConfig: int ZERO_VALUE_MS> = 20000;

        <android.service.notification.ZenModeConfig: int MINUTES_MS> = 60000;

        <android.service.notification.ZenModeConfig: int SECONDS_MS> = 1000;

        <android.service.notification.ZenModeConfig: int MAX_SOURCE> = 2;

        <android.service.notification.ZenModeConfig: int SOURCE_STAR> = 2;

        <android.service.notification.ZenModeConfig: int SOURCE_CONTACT> = 1;

        <android.service.notification.ZenModeConfig: int SOURCE_ANYONE> = 0;

        <android.service.notification.ZenModeConfig: java.lang.String SLEEP_MODE_DAYS_PREFIX> = "days:";

        <android.service.notification.ZenModeConfig: java.lang.String SLEEP_MODE_WEEKNIGHTS> = "weeknights";

        <android.service.notification.ZenModeConfig: java.lang.String SLEEP_MODE_NIGHTS> = "nights";

        <android.service.notification.ZenModeConfig: java.lang.String TAG> = "ZenModeConfig";

        $r0 = newarray (int)[7];

        $r0[0] = 1;

        $r0[1] = 2;

        $r0[2] = 3;

        $r0[3] = 4;

        $r0[4] = 5;

        $r0[5] = 6;

        $r0[6] = 7;

        <android.service.notification.ZenModeConfig: int[] ALL_DAYS> = $r0;

        $r1 = newarray (int)[5];

        $r1[0] = 1;

        $r1[1] = 2;

        $r1[2] = 3;

        $r1[3] = 4;

        $r1[4] = 5;

        <android.service.notification.ZenModeConfig: int[] WEEKNIGHT_DAYS> = $r1;

        $r2 = newarray (int)[8];

        $r2[0] = 15;

        $r2[1] = 30;

        $r2[2] = 45;

        $r2[3] = 60;

        $r2[4] = 120;

        $r2[5] = 180;

        $r2[6] = 240;

        $r2[7] = 480;

        <android.service.notification.ZenModeConfig: int[] MINUTE_BUCKETS> = $r2;

        $r3 = new android.service.notification.ZenModeConfig$1;

        specialinvoke $r3.<android.service.notification.ZenModeConfig$1: void <init>()>();

        <android.service.notification.ZenModeConfig: android.os.Parcelable$Creator CREATOR> = $r3;

        return;
    }
}
