public class com.android.internal.os.ZygoteInit extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final java.lang.String PROPERTY_DISABLE_OPENGL_PRELOADING;
    private static final java.lang.String ANDROID_SOCKET_PREFIX;
    private static final int LOG_BOOT_PROGRESS_PRELOAD_START;
    private static final int LOG_BOOT_PROGRESS_PRELOAD_END;
    private static final int PRELOAD_GC_THRESHOLD;
    private static final java.lang.String ABI_LIST_ARG;
    private static final java.lang.String SOCKET_NAME_ARG;
    private static android.net.LocalServerSocket sServerSocket;
    private static android.content.res.Resources mResources;
    static final int GC_LOOP_COUNT;
    private static final java.lang.String PRELOADED_CLASSES;
    private static final boolean PRELOAD_RESOURCES;
    private static final int UNPRIVILEGED_UID;
    private static final int UNPRIVILEGED_GID;
    private static final int ROOT_UID;
    private static final int ROOT_GID;

    static void invokeStaticMain(java.lang.ClassLoader, java.lang.String, java.lang.String[]) throws com.android.internal.os.ZygoteInit$MethodAndArgsCaller
    {
        java.lang.ClassLoader r0;
        java.lang.String r1, $r11, $r17, $r23, $r28;
        java.lang.String[] r2;
        java.lang.Class r3;
        java.lang.ClassNotFoundException r4, $r14;
        java.lang.NoSuchMethodException r5, $r26;
        java.lang.Class[] $r6;
        boolean $z0, $z1;
        java.lang.RuntimeException $r7, $r13, $r19, $r25;
        java.lang.StringBuilder $r8, $r9, $r10, $r15, $r16, $r18, $r21, $r22, $r24, $r27, $r29, $r30;
        com.android.internal.os.ZygoteInit$MethodAndArgsCaller $r12;
        java.lang.SecurityException $r20, r32;
        java.lang.reflect.Method r31;
        int i0;

        r0 := @parameter0: java.lang.ClassLoader;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String[];

     label01:
        r3 = virtualinvoke r0.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r1);

     label02:
        goto label04;

     label03:
        $r14 := @caughtexception;

        r4 = $r14;

        $r13 = new java.lang.RuntimeException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing class when invoking static main ");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r17, r4);

        throw $r13;

     label04:
        $r6 = newarray (java.lang.Class)[1];

        $r6[0] = class "[Ljava/lang/String;";

        r31 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("main", $r6);

     label05:
        goto label08;

     label06:
        $r26 := @caughtexception;

        r5 = $r26;

        $r25 = new java.lang.RuntimeException;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing static main on ");

        $r27 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r28, r5);

        throw $r25;

     label07:
        $r20 := @caughtexception;

        r32 = $r20;

        $r19 = new java.lang.RuntimeException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Problem getting static main on ");

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r23, r32);

        throw $r19;

     label08:
        i0 = virtualinvoke r31.<java.lang.reflect.Method: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>(i0);

        if $z0 == 0 goto label09;

        $z1 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>(i0);

        if $z1 != 0 goto label10;

     label09:
        $r7 = new java.lang.RuntimeException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Main method is not public and static on ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label10:
        $r12 = new com.android.internal.os.ZygoteInit$MethodAndArgsCaller;

        specialinvoke $r12.<com.android.internal.os.ZygoteInit$MethodAndArgsCaller: void <init>(java.lang.reflect.Method,java.lang.String[])>(r31, r2);

        throw $r12;

        catch java.lang.ClassNotFoundException from label01 to label02 with label03;
        catch java.lang.NoSuchMethodException from label04 to label05 with label06;
        catch java.lang.SecurityException from label04 to label05 with label07;
    }

    private static void registerZygoteSocket(java.lang.String)
    {
        java.lang.String r0, r1, r2, $r15, $r20;
        int i0;
        android.net.LocalServerSocket $r3, $r7;
        java.lang.StringBuilder $r4, $r5, $r6, $r11, $r12, $r13, $r16, $r18, $r19, $r21;
        java.io.FileDescriptor $r8;
        java.lang.RuntimeException $r9, $r10, $r17, r22;
        java.io.IOException $r14, r23;

        r0 := @parameter0: java.lang.String;

        $r3 = <com.android.internal.os.ZygoteInit: android.net.LocalServerSocket sServerSocket>;

        if $r3 != null goto label7;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ANDROID_SOCKET_");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        r1 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        r2 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>(r1);

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        r22 = $r9;

        $r10 = new java.lang.RuntimeException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" unset or invalid");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r15, r22);

        throw $r10;

     label4:
        $r7 = new android.net.LocalServerSocket;

        $r8 = staticinvoke <com.android.internal.os.ZygoteInit: java.io.FileDescriptor createFileDescriptor(int)>(i0);

        specialinvoke $r7.<android.net.LocalServerSocket: void <init>(java.io.FileDescriptor)>($r8);

        <com.android.internal.os.ZygoteInit: android.net.LocalServerSocket sServerSocket> = $r7;

     label5:
        goto label7;

     label6:
        $r14 := @caughtexception;

        r23 = $r14;

        $r17 = new java.lang.RuntimeException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error binding to local socket \'");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r20, r23);

        throw $r17;

     label7:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.io.IOException from label4 to label5 with label6;
    }

    private static com.android.internal.os.ZygoteConnection acceptCommandPeer(java.lang.String)
    {
        java.lang.String r0;
        java.io.IOException r1, $r5;
        com.android.internal.os.ZygoteConnection $r2;
        android.net.LocalServerSocket $r3;
        android.net.LocalSocket $r4;
        java.lang.RuntimeException $r6;

        r0 := @parameter0: java.lang.String;

     label1:
        $r2 = new com.android.internal.os.ZygoteConnection;

        $r3 = <com.android.internal.os.ZygoteInit: android.net.LocalServerSocket sServerSocket>;

        $r4 = virtualinvoke $r3.<android.net.LocalServerSocket: android.net.LocalSocket accept()>();

        specialinvoke $r2.<com.android.internal.os.ZygoteConnection: void <init>(android.net.LocalSocket,java.lang.String)>($r4, r0);

     label2:
        return $r2;

     label3:
        $r5 := @caughtexception;

        r1 = $r5;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("IOException during accept()", r1);

        throw $r6;

        catch java.io.IOException from label1 to label2 with label3;
    }

    static void closeServerSocket()
    {
        java.io.FileDescriptor r0;
        android.net.LocalServerSocket $r1, $r2, $r3;
        android.system.ErrnoException $r4, r7;
        java.io.IOException $r5, r6;

     label1:
        $r1 = <com.android.internal.os.ZygoteInit: android.net.LocalServerSocket sServerSocket>;

        if $r1 == null goto label2;

        $r2 = <com.android.internal.os.ZygoteInit: android.net.LocalServerSocket sServerSocket>;

        r0 = virtualinvoke $r2.<android.net.LocalServerSocket: java.io.FileDescriptor getFileDescriptor()>();

        $r3 = <com.android.internal.os.ZygoteInit: android.net.LocalServerSocket sServerSocket>;

        virtualinvoke $r3.<android.net.LocalServerSocket: void close()>();

        if r0 == null goto label2;

        staticinvoke <android.system.Os: void close(java.io.FileDescriptor)>(r0);

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r6 = $r5;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Zygote", "Zygote:  error closing sockets", r6);

        goto label5;

     label4:
        $r4 := @caughtexception;

        r7 = $r4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Zygote", "Zygote:  error closing descriptor", r7);

     label5:
        <com.android.internal.os.ZygoteInit: android.net.LocalServerSocket sServerSocket> = null;

        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch android.system.ErrnoException from label1 to label2 with label4;
    }

    static java.io.FileDescriptor getServerSocketFileDescriptor()
    {
        android.net.LocalServerSocket $r0;
        java.io.FileDescriptor $r1;

        $r0 = <com.android.internal.os.ZygoteInit: android.net.LocalServerSocket sServerSocket>;

        $r1 = virtualinvoke $r0.<android.net.LocalServerSocket: java.io.FileDescriptor getFileDescriptor()>();

        return $r1;
    }

    private static void setEffectiveUser(int)
    {
        int i0, i1;
        java.lang.StringBuilder $r0, $r1, $r2;
        java.lang.String $r3;

        i0 := @parameter0: int;

        i1 = staticinvoke <com.android.internal.os.ZygoteInit: int setreuid(int,int)>(0, i0);

        if i1 == 0 goto label1;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setreuid() failed. errno: ");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Zygote", $r3);

     label1:
        return;
    }

    private static void setEffectiveGroup(int)
    {
        int i0, i1;
        java.lang.StringBuilder $r0, $r1, $r2;
        java.lang.String $r3;

        i0 := @parameter0: int;

        i1 = staticinvoke <com.android.internal.os.ZygoteInit: int setregid(int,int)>(0, i0);

        if i1 == 0 goto label1;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setregid() failed. errno: ");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Zygote", $r3);

     label1:
        return;
    }

    static void preload()
    {
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Zygote", "begin preload");

        staticinvoke <com.android.internal.os.ZygoteInit: void preloadClasses()>();

        staticinvoke <com.android.internal.os.ZygoteInit: void preloadResources()>();

        staticinvoke <com.android.internal.os.ZygoteInit: void preloadOpenGL()>();

        staticinvoke <com.android.internal.os.ZygoteInit: void preloadSharedLibraries()>();

        staticinvoke <android.webkit.WebViewFactory: void prepareWebViewInZygote()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("Zygote", "end preload");

        return;
    }

    private static void preloadSharedLibraries()
    {
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Zygote", "Preloading shared libraries...");

        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("android");

        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("compiler_rt");

        staticinvoke <java.lang.System: void loadLibrary(java.lang.String)>("jnigraphics");

        return;
    }

    private static void preloadOpenGL()
    {
        boolean $z0;

        $z0 = staticinvoke <android.os.SystemProperties: boolean getBoolean(java.lang.String,boolean)>("ro.zygote.disable_gl_preload", 0);

        if $z0 != 0 goto label1;

        staticinvoke <android.opengl.EGL14: android.opengl.EGLDisplay eglGetDisplay(int)>(0);

     label1:
        return;
    }

    private static void preloadClasses()
    {
        dalvik.system.VMRuntime r0;
        java.io.InputStream r1;
        long l0, $l3, $l4;
        float f0;
        java.io.BufferedReader r2, $r7;
        int i1, $i6;
        java.lang.String r3, $r8, $r15, $r23, $r31, $r39, r41;
        java.lang.Throwable r5, $r18, $r40, r43;
        java.lang.ClassLoader $r6;
        java.io.InputStreamReader $r9;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r14, $r16, $r19, $r20, $r21, $r22, $r28, $r29, $r30, $r32, $r33, $r34, $r35, $r38;
        boolean $z0, $z1, $z2, $z3;
        java.lang.UnsatisfiedLinkError $r24, r42;
        java.lang.Error $r25;
        java.lang.RuntimeException $r26, $r27;
        java.lang.ClassNotFoundException $r36;
        java.io.IOException $r37, r44;

        r0 = staticinvoke <dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>();

        $r6 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>();

        r1 = virtualinvoke $r6.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>("preloaded-classes");

        if r1 != null goto label01;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Zygote", "Couldn\'t find preloaded-classes.");

        goto label18;

     label01:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Zygote", "Preloading classes...");

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        staticinvoke <com.android.internal.os.ZygoteInit: void setEffectiveGroup(int)>(9999);

        staticinvoke <com.android.internal.os.ZygoteInit: void setEffectiveUser(int)>(9999);

        f0 = virtualinvoke r0.<dalvik.system.VMRuntime: float getTargetHeapUtilization()>();

        virtualinvoke r0.<dalvik.system.VMRuntime: float setTargetHeapUtilization(float)>(0.8F);

        staticinvoke <java.lang.System: void gc()>();

        virtualinvoke r0.<dalvik.system.VMRuntime: void runFinalizationSync()>();

        staticinvoke <android.os.Debug: void startAllocCounting()>();

     label02:
        $r7 = new java.io.BufferedReader;

        $r9 = new java.io.InputStreamReader;

        specialinvoke $r9.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r1);

        specialinvoke $r7.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r9, 256);

        r2 = $r7;

        i1 = 0;

     label03:
        $r8 = virtualinvoke r2.<java.io.BufferedReader: java.lang.String readLine()>();

        r3 = $r8;

        if $r8 == null goto label12;

        r41 = virtualinvoke r3.<java.lang.String: java.lang.String trim()>();

        $z1 = virtualinvoke r41.<java.lang.String: boolean startsWith(java.lang.String)>("#");

        if $z1 != 0 goto label03;

        $z0 = virtualinvoke r41.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label04;

        goto label03;

     label04:
        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r41);

        $i6 = staticinvoke <android.os.Debug: int getGlobalAllocSize()>();

        if $i6 <= 50000 goto label05;

        staticinvoke <java.lang.System: void gc()>();

        virtualinvoke r0.<dalvik.system.VMRuntime: void runFinalizationSync()>();

        staticinvoke <android.os.Debug: void resetGlobalAllocSize()>();

     label05:
        i1 = i1 + 1;

     label06:
        goto label03;

     label07:
        $r36 := @caughtexception;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Class not found for preloading: ");

        $r38 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r41);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Zygote", $r39);

        goto label03;

     label08:
        $r24 := @caughtexception;

        r42 = $r24;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Problem preloading ");

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r41);

        $r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r42);

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Zygote", $r31);

        goto label03;

     label09:
        $r18 := @caughtexception;

        r43 = $r18;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error preloading ");

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r41);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Zygote", $r23, r43);

        $z2 = r43 instanceof java.lang.Error;

        if $z2 == 0 goto label10;

        $r25 = (java.lang.Error) r43;

        throw $r25;

     label10:
        $z3 = r43 instanceof java.lang.RuntimeException;

        if $z3 == 0 goto label11;

        $r26 = (java.lang.RuntimeException) r43;

        throw $r26;

     label11:
        $r27 = new java.lang.RuntimeException;

        specialinvoke $r27.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r43);

        throw $r27;

     label12:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...preloaded ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" classes in ");

        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l4 = $l3 - l0;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms.");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Zygote", $r15);

     label13:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r1);

        virtualinvoke r0.<dalvik.system.VMRuntime: float setTargetHeapUtilization(float)>(f0);

        virtualinvoke r0.<dalvik.system.VMRuntime: void preloadDexCaches()>();

        staticinvoke <android.os.Debug: void stopAllocCounting()>();

        staticinvoke <com.android.internal.os.ZygoteInit: void setEffectiveUser(int)>(0);

        staticinvoke <com.android.internal.os.ZygoteInit: void setEffectiveGroup(int)>(0);

        goto label18;

     label14:
        $r37 := @caughtexception;

        r44 = $r37;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Zygote", "Error reading preloaded-classes.", r44);

     label15:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r1);

        virtualinvoke r0.<dalvik.system.VMRuntime: float setTargetHeapUtilization(float)>(f0);

        virtualinvoke r0.<dalvik.system.VMRuntime: void preloadDexCaches()>();

        staticinvoke <android.os.Debug: void stopAllocCounting()>();

        staticinvoke <com.android.internal.os.ZygoteInit: void setEffectiveUser(int)>(0);

        staticinvoke <com.android.internal.os.ZygoteInit: void setEffectiveGroup(int)>(0);

        goto label18;

     label16:
        $r40 := @caughtexception;

        r5 = $r40;

     label17:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r1);

        virtualinvoke r0.<dalvik.system.VMRuntime: float setTargetHeapUtilization(float)>(f0);

        virtualinvoke r0.<dalvik.system.VMRuntime: void preloadDexCaches()>();

        staticinvoke <android.os.Debug: void stopAllocCounting()>();

        staticinvoke <com.android.internal.os.ZygoteInit: void setEffectiveUser(int)>(0);

        staticinvoke <com.android.internal.os.ZygoteInit: void setEffectiveGroup(int)>(0);

        throw r5;

     label18:
        return;

        catch java.lang.ClassNotFoundException from label04 to label06 with label07;
        catch java.lang.UnsatisfiedLinkError from label04 to label06 with label08;
        catch java.lang.Throwable from label04 to label06 with label09;
        catch java.io.IOException from label02 to label13 with label14;
        catch java.lang.Throwable from label02 to label13 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    private static void preloadResources()
    {
        dalvik.system.VMRuntime r0;
        long l0, $l3, $l4, $l6, $l7, l10;
        android.content.res.TypedArray r1, r24;
        int i1, i11;
        java.lang.Throwable r2, $r23;
        android.content.res.Resources $r3, $r4, $r5, $r13, $r22;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r12, $r14, $r15, $r16, $r17, $r19, $r20;
        java.lang.String $r11, $r18;
        java.lang.RuntimeException $r21, r25;

        r0 = staticinvoke <dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>();

        staticinvoke <android.os.Debug: void startAllocCounting()>();

     label1:
        staticinvoke <java.lang.System: void gc()>();

        virtualinvoke r0.<dalvik.system.VMRuntime: void runFinalizationSync()>();

        $r3 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        <com.android.internal.os.ZygoteInit: android.content.res.Resources mResources> = $r3;

        $r4 = <com.android.internal.os.ZygoteInit: android.content.res.Resources mResources>;

        virtualinvoke $r4.<android.content.res.Resources: void startPreloading()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Zygote", "Preloading resources...");

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r5 = <com.android.internal.os.ZygoteInit: android.content.res.Resources mResources>;

        r1 = virtualinvoke $r5.<android.content.res.Resources: android.content.res.TypedArray obtainTypedArray(int)>(17235974);

        i1 = staticinvoke <com.android.internal.os.ZygoteInit: int preloadDrawables(dalvik.system.VMRuntime,android.content.res.TypedArray)>(r0, r1);

        virtualinvoke r1.<android.content.res.TypedArray: void recycle()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...preloaded ");

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" resources in ");

        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l4 = $l3 - l0;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms.");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Zygote", $r11);

        l10 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r13 = <com.android.internal.os.ZygoteInit: android.content.res.Resources mResources>;

        r24 = virtualinvoke $r13.<android.content.res.Resources: android.content.res.TypedArray obtainTypedArray(int)>(17235975);

        i11 = staticinvoke <com.android.internal.os.ZygoteInit: int preloadColorStateLists(dalvik.system.VMRuntime,android.content.res.TypedArray)>(r0, r24);

        virtualinvoke r24.<android.content.res.TypedArray: void recycle()>();

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...preloaded ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" resources in ");

        $l6 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l7 = $l6 - l10;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms.");

        $r18 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Zygote", $r18);

        $r22 = <com.android.internal.os.ZygoteInit: android.content.res.Resources mResources>;

        virtualinvoke $r22.<android.content.res.Resources: void finishPreloading()>();

     label2:
        staticinvoke <android.os.Debug: void stopAllocCounting()>();

        goto label7;

     label3:
        $r21 := @caughtexception;

        r25 = $r21;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("Zygote", "Failure preloading resources", r25);

     label4:
        staticinvoke <android.os.Debug: void stopAllocCounting()>();

        goto label7;

     label5:
        $r23 := @caughtexception;

        r2 = $r23;

     label6:
        staticinvoke <android.os.Debug: void stopAllocCounting()>();

        throw r2;

     label7:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private static int preloadColorStateLists(dalvik.system.VMRuntime, android.content.res.TypedArray)
    {
        dalvik.system.VMRuntime r0;
        android.content.res.TypedArray r1;
        int i0, i1, i2, $i3;
        android.content.res.Resources $r2;
        android.content.res.ColorStateList $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5, $r6, $r8, $r9, $r10, $r13;
        java.lang.String $r7, $r11, $r12;

        r0 := @parameter0: dalvik.system.VMRuntime;

        r1 := @parameter1: android.content.res.TypedArray;

        i0 = virtualinvoke r1.<android.content.res.TypedArray: int length()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        $i3 = staticinvoke <android.os.Debug: int getGlobalAllocSize()>();

        if $i3 <= 50000 goto label2;

        staticinvoke <java.lang.System: void gc()>();

        virtualinvoke r0.<dalvik.system.VMRuntime: void runFinalizationSync()>();

        staticinvoke <android.os.Debug: void resetGlobalAllocSize()>();

     label2:
        i2 = virtualinvoke r1.<android.content.res.TypedArray: int getResourceId(int,int)>(i1, 0);

        if i2 == 0 goto label3;

        $r2 = <com.android.internal.os.ZygoteInit: android.content.res.Resources mResources>;

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int)>(i2);

        if $r3 != null goto label3;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find preloaded color resource #0x");

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i2);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r11 = virtualinvoke r1.<android.content.res.TypedArray: java.lang.String getString(int)>(i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r4;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return i0;
    }

    private static int preloadDrawables(dalvik.system.VMRuntime, android.content.res.TypedArray)
    {
        dalvik.system.VMRuntime r0;
        android.content.res.TypedArray r1;
        int i0, i1, i2, $i3;
        android.content.res.Resources $r2;
        android.graphics.drawable.Drawable $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5, $r6, $r8, $r9, $r10, $r13;
        java.lang.String $r7, $r11, $r12;

        r0 := @parameter0: dalvik.system.VMRuntime;

        r1 := @parameter1: android.content.res.TypedArray;

        i0 = virtualinvoke r1.<android.content.res.TypedArray: int length()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        $i3 = staticinvoke <android.os.Debug: int getGlobalAllocSize()>();

        if $i3 <= 50000 goto label2;

        staticinvoke <java.lang.System: void gc()>();

        virtualinvoke r0.<dalvik.system.VMRuntime: void runFinalizationSync()>();

        staticinvoke <android.os.Debug: void resetGlobalAllocSize()>();

     label2:
        i2 = virtualinvoke r1.<android.content.res.TypedArray: int getResourceId(int,int)>(i1, 0);

        if i2 == 0 goto label3;

        $r2 = <com.android.internal.os.ZygoteInit: android.content.res.Resources mResources>;

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme)>(i2, null);

        if $r3 != null goto label3;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to find preloaded drawable resource #0x");

        $r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i2);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $r11 = virtualinvoke r1.<android.content.res.TypedArray: java.lang.String getString(int)>(i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r4;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return i0;
    }

    static void gc()
    {
        dalvik.system.VMRuntime r0;

        r0 = staticinvoke <dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>();

        staticinvoke <java.lang.System: void gc()>();

        virtualinvoke r0.<dalvik.system.VMRuntime: void runFinalizationSync()>();

        staticinvoke <java.lang.System: void gc()>();

        virtualinvoke r0.<dalvik.system.VMRuntime: void runFinalizationSync()>();

        staticinvoke <java.lang.System: void gc()>();

        virtualinvoke r0.<dalvik.system.VMRuntime: void runFinalizationSync()>();

        return;
    }

    private static void handleSystemServerProcess(com.android.internal.os.ZygoteConnection$Arguments) throws com.android.internal.os.ZygoteInit$MethodAndArgsCaller
    {
        com.android.internal.os.ZygoteConnection$Arguments r0;
        java.lang.String r1, $r4, $r5, $r10, $r11, $r14;
        java.lang.String[] r2, r3, $r6, $r12, $r13;
        int $i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8;
        dalvik.system.PathClassLoader $r7, r15;
        java.lang.ClassLoader $r8;
        java.lang.Thread $r9;

        r0 := @parameter0: com.android.internal.os.ZygoteConnection$Arguments;

        staticinvoke <com.android.internal.os.ZygoteInit: void closeServerSocket()>();

        $i1 = <android.system.OsConstants: int S_IRWXG>;

        $i0 = <android.system.OsConstants: int S_IRWXO>;

        $i2 = $i1 | $i0;

        staticinvoke <android.system.Os: int umask(int)>($i2);

        $r4 = r0.<com.android.internal.os.ZygoteConnection$Arguments: java.lang.String niceName>;

        if $r4 == null goto label1;

        $r14 = r0.<com.android.internal.os.ZygoteConnection$Arguments: java.lang.String niceName>;

        staticinvoke <android.os.Process: void setArgV0(java.lang.String)>($r14);

     label1:
        r1 = staticinvoke <android.system.Os: java.lang.String getenv(java.lang.String)>("SYSTEMSERVERCLASSPATH");

        if r1 == null goto label2;

        staticinvoke <com.android.internal.os.ZygoteInit: void performSystemServerDexOpt(java.lang.String)>(r1);

     label2:
        $r5 = r0.<com.android.internal.os.ZygoteConnection$Arguments: java.lang.String invokeWith>;

        if $r5 == null goto label4;

        r2 = r0.<com.android.internal.os.ZygoteConnection$Arguments: java.lang.String[] remainingArgs>;

        if r1 == null goto label3;

        $i6 = lengthof r2;

        $i7 = $i6 + 2;

        r3 = newarray (java.lang.String)[$i7];

        r3[0] = "-cp";

        r3[1] = r1;

        $r13 = r0.<com.android.internal.os.ZygoteConnection$Arguments: java.lang.String[] remainingArgs>;

        $r12 = r0.<com.android.internal.os.ZygoteConnection$Arguments: java.lang.String[] remainingArgs>;

        $i8 = lengthof $r12;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r13, 0, r3, 2, $i8);

     label3:
        $r11 = r0.<com.android.internal.os.ZygoteConnection$Arguments: java.lang.String invokeWith>;

        $r10 = r0.<com.android.internal.os.ZygoteConnection$Arguments: java.lang.String niceName>;

        $i5 = r0.<com.android.internal.os.ZygoteConnection$Arguments: int targetSdkVersion>;

        staticinvoke <com.android.internal.os.WrapperInit: void execApplication(java.lang.String,java.lang.String,int,java.io.FileDescriptor,java.lang.String[])>($r11, $r10, $i5, null, r2);

        goto label6;

     label4:
        r15 = null;

        if r1 == null goto label5;

        $r7 = new dalvik.system.PathClassLoader;

        $r8 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>();

        specialinvoke $r7.<dalvik.system.PathClassLoader: void <init>(java.lang.String,java.lang.ClassLoader)>(r1, $r8);

        r15 = $r7;

        $r9 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r9.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>(r15);

     label5:
        $i4 = r0.<com.android.internal.os.ZygoteConnection$Arguments: int targetSdkVersion>;

        $r6 = r0.<com.android.internal.os.ZygoteConnection$Arguments: java.lang.String[] remainingArgs>;

        staticinvoke <com.android.internal.os.RuntimeInit: void zygoteInit(int,java.lang.String[],java.lang.ClassLoader)>($i4, $r6, r15);

     label6:
        return;
    }

    private static void performSystemServerDexOpt(java.lang.String)
    {
        java.lang.String r0, r3, r5;
        java.lang.String[] r1, r4;
        com.android.internal.os.InstallerConnection r2, $r7;
        int i0, i1;
        byte b2;
        java.lang.Throwable r6, $r10;
        dalvik.system.VMRuntime $r8;
        java.io.IOException $r9, r12;
        java.lang.RuntimeException $r11;

        r0 := @parameter0: java.lang.String;

        r1 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        $r7 = new com.android.internal.os.InstallerConnection;

        specialinvoke $r7.<com.android.internal.os.InstallerConnection: void <init>()>();

        r2 = $r7;

        $r8 = staticinvoke <dalvik.system.VMRuntime: dalvik.system.VMRuntime getRuntime()>();

        r3 = virtualinvoke $r8.<dalvik.system.VMRuntime: java.lang.String vmInstructionSet()>();

     label1:
        r4 = r1;

        i0 = lengthof r4;

        i1 = 0;

     label2:
        if i1 >= i0 goto label5;

        r5 = r4[i1];

        b2 = staticinvoke <dalvik.system.DexFile: byte isDexOptNeededInternal(java.lang.String,java.lang.String,java.lang.String,boolean)>(r5, "*", r3, 0);

        if b2 != 2 goto label3;

        virtualinvoke r2.<com.android.internal.os.InstallerConnection: int dexopt(java.lang.String,int,boolean,java.lang.String)>(r5, 1000, 0, r3);

        goto label4;

     label3:
        if b2 != 1 goto label4;

        virtualinvoke r2.<com.android.internal.os.InstallerConnection: int patchoat(java.lang.String,int,boolean,java.lang.String)>(r5, 1000, 0, r3);

     label4:
        i1 = i1 + 1;

        goto label2;

     label5:
        virtualinvoke r2.<com.android.internal.os.InstallerConnection: void disconnect()>();

        goto label9;

     label6:
        $r9 := @caughtexception;

        r12 = $r9;

        $r11 = new java.lang.RuntimeException;

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Error starting system_server", r12);

        throw $r11;

     label7:
        $r10 := @caughtexception;

        r6 = $r10;

     label8:
        virtualinvoke r2.<com.android.internal.os.InstallerConnection: void disconnect()>();

        throw r6;

     label9:
        return;

        catch java.io.IOException from label1 to label5 with label6;
        catch java.lang.Throwable from label1 to label5 with label7;
        catch java.lang.Throwable from label6 to label8 with label7;
    }

    private static boolean startSystemServer(java.lang.String, java.lang.String) throws com.android.internal.os.ZygoteInit$MethodAndArgsCaller, java.lang.RuntimeException
    {
        java.lang.String r0, r1, $r12;
        long l0, $l13, $l14;
        java.lang.String[] r2, $r5;
        int i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i15, $i16, $i17;
        java.lang.IllegalArgumentException r3, $r15;
        int[] $r4, $r13;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10;
        com.android.internal.os.ZygoteConnection$Arguments $r11, r17;
        int[][] $r14;
        boolean $z0;
        java.lang.RuntimeException $r16;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r4 = newarray (int)[11];

        $i2 = <android.system.OsConstants: int CAP_BLOCK_SUSPEND>;

        $r4[0] = $i2;

        $i3 = <android.system.OsConstants: int CAP_KILL>;

        $r4[1] = $i3;

        $i4 = <android.system.OsConstants: int CAP_NET_ADMIN>;

        $r4[2] = $i4;

        $i5 = <android.system.OsConstants: int CAP_NET_BIND_SERVICE>;

        $r4[3] = $i5;

        $i6 = <android.system.OsConstants: int CAP_NET_BROADCAST>;

        $r4[4] = $i6;

        $i7 = <android.system.OsConstants: int CAP_NET_RAW>;

        $r4[5] = $i7;

        $i8 = <android.system.OsConstants: int CAP_SYS_MODULE>;

        $r4[6] = $i8;

        $i10 = <android.system.OsConstants: int CAP_SYS_NICE>;

        $r4[7] = $i10;

        $i9 = <android.system.OsConstants: int CAP_SYS_RESOURCE>;

        $r4[8] = $i9;

        $i12 = <android.system.OsConstants: int CAP_SYS_TIME>;

        $r4[9] = $i12;

        $i11 = <android.system.OsConstants: int CAP_SYS_TTY_CONFIG>;

        $r4[10] = $i11;

        l0 = staticinvoke <com.android.internal.os.ZygoteInit: long posixCapabilitiesAsBits(int[])>($r4);

        $r5 = newarray (java.lang.String)[7];

        $r5[0] = "--setuid=1000";

        $r5[1] = "--setgid=1000";

        $r5[2] = "--setgroups=1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1018,1032,3001,3002,3003,3006,3007";

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--capabilities=");

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5[3] = $r12;

        $r5[4] = "--runtime-init";

        $r5[5] = "--nice-name=system_server";

        $r5[6] = "com.android.server.SystemServer";

        r2 = $r5;

     label1:
        $r11 = new com.android.internal.os.ZygoteConnection$Arguments;

        specialinvoke $r11.<com.android.internal.os.ZygoteConnection$Arguments: void <init>(java.lang.String[])>(r2);

        r17 = $r11;

        staticinvoke <com.android.internal.os.ZygoteConnection: void applyDebuggerSystemProperty(com.android.internal.os.ZygoteConnection$Arguments)>(r17);

        staticinvoke <com.android.internal.os.ZygoteConnection: void applyInvokeWithSystemProperty(com.android.internal.os.ZygoteConnection$Arguments)>(r17);

        $i17 = r17.<com.android.internal.os.ZygoteConnection$Arguments: int uid>;

        $i15 = r17.<com.android.internal.os.ZygoteConnection$Arguments: int gid>;

        $r13 = r17.<com.android.internal.os.ZygoteConnection$Arguments: int[] gids>;

        $i16 = r17.<com.android.internal.os.ZygoteConnection$Arguments: int debugFlags>;

        $r14 = (int[][]) null;

        $l13 = r17.<com.android.internal.os.ZygoteConnection$Arguments: long permittedCapabilities>;

        $l14 = r17.<com.android.internal.os.ZygoteConnection$Arguments: long effectiveCapabilities>;

        i1 = staticinvoke <com.android.internal.os.Zygote: int forkSystemServer(int,int,int[],int,int[][],long,long)>($i17, $i15, $r13, $i16, null, $l13, $l14);

     label2:
        goto label4;

     label3:
        $r15 := @caughtexception;

        r3 = $r15;

        $r16 = new java.lang.RuntimeException;

        specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r3);

        throw $r16;

     label4:
        if i1 != 0 goto label6;

        $z0 = staticinvoke <com.android.internal.os.ZygoteInit: boolean hasSecondZygote(java.lang.String)>(r0);

        if $z0 == 0 goto label5;

        staticinvoke <com.android.internal.os.ZygoteInit: void waitForSecondaryZygote(java.lang.String)>(r1);

     label5:
        staticinvoke <com.android.internal.os.ZygoteInit: void handleSystemServerProcess(com.android.internal.os.ZygoteConnection$Arguments)>(r17);

     label6:
        return 1;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    private static transient long posixCapabilitiesAsBits(int[])
    {
        int[] r0, r1;
        long l0, $l5;
        int i1, i2, i3, $i4;
        java.lang.IllegalArgumentException $r2;
        java.lang.String $r3;

        r0 := @parameter0: int[];

        l0 = 0L;

        r1 = r0;

        i1 = lengthof r1;

        i2 = 0;

     label1:
        if i2 >= i1 goto label4;

        i3 = r1[i2];

        if i3 < 0 goto label2;

        $i4 = <android.system.OsConstants: int CAP_LAST_CAP>;

        if i3 <= $i4 goto label3;

     label2:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i3);

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r2;

     label3:
        $l5 = 1L << i3;

        l0 = l0 | $l5;

        i2 = i2 + 1;

        goto label1;

     label4:
        return l0;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;
        boolean z0, $z2, $z3, $z4;
        java.lang.String r1, r2, $r4, $r5, $r6, $r7, $r10, $r12, $r14, $r15, $r16, $r17;
        int i0, $i1, $i7, $i8;
        long $l2, $l4;
        java.lang.RuntimeException $r3, $r9, $r19, r21;
        java.lang.StringBuilder $r8, $r11, $r13;
        com.android.internal.os.ZygoteInit$MethodAndArgsCaller $r18, r20;

        r0 := @parameter0: java.lang.String[];

     label01:
        staticinvoke <com.android.internal.os.SamplingProfilerIntegration: void start()>();

        z0 = 0;

        r1 = "zygote";

        r2 = null;

        i0 = 1;

     label02:
        $i1 = lengthof r0;

        if i0 >= $i1 goto label07;

        $r5 = "start-system-server";

        $r4 = r0[i0];

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z2 == 0 goto label03;

        z0 = 1;

        goto label06;

     label03:
        $r6 = r0[i0];

        $z3 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("--abi-list=");

        if $z3 == 0 goto label04;

        $r17 = r0[i0];

        $r16 = "--abi-list=";

        $i8 = virtualinvoke $r16.<java.lang.String: int length()>();

        r2 = virtualinvoke $r17.<java.lang.String: java.lang.String substring(int)>($i8);

        goto label06;

     label04:
        $r7 = r0[i0];

        $z4 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>("--socket-name=");

        if $z4 == 0 goto label05;

        $r14 = r0[i0];

        $r15 = "--socket-name=";

        $i7 = virtualinvoke $r15.<java.lang.String: int length()>();

        r1 = virtualinvoke $r14.<java.lang.String: java.lang.String substring(int)>($i7);

        goto label06;

     label05:
        $r9 = new java.lang.RuntimeException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown command line argument: ");

        $r10 = r0[i0];

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>($r12);

        throw $r9;

     label06:
        i0 = i0 + 1;

        goto label02;

     label07:
        if r2 != null goto label08;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>("No ABI list supplied.");

        throw $r3;

     label08:
        staticinvoke <com.android.internal.os.ZygoteInit: void registerZygoteSocket(java.lang.String)>(r1);

        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        staticinvoke <android.util.EventLog: int writeEvent(int,long)>(3020, $l2);

        staticinvoke <com.android.internal.os.ZygoteInit: void preload()>();

        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        staticinvoke <android.util.EventLog: int writeEvent(int,long)>(3030, $l4);

        staticinvoke <com.android.internal.os.SamplingProfilerIntegration: void writeZygoteSnapshot()>();

        staticinvoke <com.android.internal.os.ZygoteInit: void gc()>();

        staticinvoke <android.os.Trace: void setTracingEnabled(boolean)>(0);

        if z0 == 0 goto label09;

        staticinvoke <com.android.internal.os.ZygoteInit: boolean startSystemServer(java.lang.String,java.lang.String)>(r2, r1);

     label09:
        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Zygote", "Accepting command socket connections");

        staticinvoke <com.android.internal.os.ZygoteInit: void runSelectLoop(java.lang.String)>(r2);

        staticinvoke <com.android.internal.os.ZygoteInit: void closeServerSocket()>();

     label10:
        goto label13;

     label11:
        $r18 := @caughtexception;

        r20 = $r18;

        virtualinvoke r20.<com.android.internal.os.ZygoteInit$MethodAndArgsCaller: void run()>();

        goto label13;

     label12:
        $r19 := @caughtexception;

        r21 = $r19;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Zygote", "Zygote died with exception", r21);

        staticinvoke <com.android.internal.os.ZygoteInit: void closeServerSocket()>();

        throw r21;

     label13:
        return;

        catch com.android.internal.os.ZygoteInit$MethodAndArgsCaller from label01 to label10 with label11;
        catch java.lang.RuntimeException from label01 to label10 with label12;
    }

    private static boolean hasSecondZygote(java.lang.String)
    {
        java.lang.String r0, $r1;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <android.os.SystemProperties: java.lang.String get(java.lang.String)>("ro.product.cpu.abilist");

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private static void waitForSecondaryZygote(java.lang.String)
    {
        java.lang.String r0, r1, $r3, $r4, $r8, $r10;
        android.os.Process$ZygoteState r2;
        boolean $z0;
        java.io.IOException $r5, r12;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.lang.InterruptedException $r11;

        r0 := @parameter0: java.lang.String;

        $r3 = "zygote";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        $r4 = "zygote_secondary";

        goto label2;

     label1:
        $r4 = "zygote";

     label2:
        r1 = $r4;

     label3:
        r2 = staticinvoke <android.os.Process$ZygoteState: android.os.Process$ZygoteState connect(java.lang.String)>(r1);

        virtualinvoke r2.<android.os.Process$ZygoteState: void close()>();

     label4:
        goto label9;

     label5:
        $r5 := @caughtexception;

        r12 = $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Got error connecting to zygote, retrying. msg= ");

        $r8 = virtualinvoke r12.<java.io.IOException: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Zygote", $r10);

     label6:
        staticinvoke <java.lang.Thread: void sleep(long)>(1000L);

     label7:
        goto label3;

     label8:
        $r11 := @caughtexception;

        goto label3;

     label9:
        return;

        catch java.io.IOException from label3 to label4 with label5;
        catch java.lang.InterruptedException from label6 to label7 with label8;
    }

    private static void runSelectLoop(java.lang.String) throws com.android.internal.os.ZygoteInit$MethodAndArgsCaller
    {
        java.lang.String r0;
        java.util.ArrayList r1, r2, $r5, $r6;
        java.io.FileDescriptor[] r3;
        int i0, i1;
        java.io.IOException r4, $r15;
        android.net.LocalServerSocket $r7;
        java.io.FileDescriptor $r8, $r14;
        java.lang.Object[] $r9;
        java.lang.Object $r10;
        com.android.internal.os.ZygoteConnection $r11, r18;
        java.lang.RuntimeException $r16, $r17;
        boolean z4;

        r0 := @parameter0: java.lang.String;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r1 = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r2 = $r6;

        r3 = newarray (java.io.FileDescriptor)[4];

        $r7 = <com.android.internal.os.ZygoteInit: android.net.LocalServerSocket sServerSocket>;

        $r8 = virtualinvoke $r7.<android.net.LocalServerSocket: java.io.FileDescriptor getFileDescriptor()>();

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(null);

        i0 = 10;

     label1:
        if i0 > 0 goto label2;

        staticinvoke <com.android.internal.os.ZygoteInit: void gc()>();

        i0 = 10;

        goto label3;

     label2:
        i0 = i0 + -1;

     label3:
        $r9 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(r3);

        r3 = (java.io.FileDescriptor[]) $r9;

        i1 = staticinvoke <com.android.internal.os.ZygoteInit: int selectReadable(java.io.FileDescriptor[])>(r3);

     label4:
        goto label6;

     label5:
        $r15 := @caughtexception;

        r4 = $r15;

        $r17 = new java.lang.RuntimeException;

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Error in select()", r4);

        throw $r17;

     label6:
        if i1 >= 0 goto label7;

        $r16 = new java.lang.RuntimeException;

        specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String)>("Error in select()");

        throw $r16;

     label7:
        if i1 != 0 goto label8;

        r18 = staticinvoke <com.android.internal.os.ZygoteInit: com.android.internal.os.ZygoteConnection acceptCommandPeer(java.lang.String)>(r0);

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r18);

        $r14 = virtualinvoke r18.<com.android.internal.os.ZygoteConnection: java.io.FileDescriptor getFileDescriptor()>();

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r14);

        goto label9;

     label8:
        $r10 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r11 = (com.android.internal.os.ZygoteConnection) $r10;

        z4 = virtualinvoke $r11.<com.android.internal.os.ZygoteConnection: boolean runOnce()>();

        if z4 == 0 goto label9;

        virtualinvoke r2.<java.util.ArrayList: java.lang.Object remove(int)>(i1);

        virtualinvoke r1.<java.util.ArrayList: java.lang.Object remove(int)>(i1);

     label9:
        goto label1;

        catch java.io.IOException from label3 to label4 with label5;
    }

    static native int setreuid(int, int);

    static native int setregid(int, int);

    static native int setpgid(int, int);

    static native int getpgid(int) throws java.io.IOException;

    static native void reopenStdio(java.io.FileDescriptor, java.io.FileDescriptor, java.io.FileDescriptor) throws java.io.IOException;

    static native void setCloseOnExec(java.io.FileDescriptor, boolean) throws java.io.IOException;

    static native int selectReadable(java.io.FileDescriptor[]) throws java.io.IOException;

    static native java.io.FileDescriptor createFileDescriptor(int) throws java.io.IOException;

    private void <init>()
    {
        com.android.internal.os.ZygoteInit r0;

        r0 := @this: com.android.internal.os.ZygoteInit;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.os.ZygoteInit: int ROOT_GID> = 0;

        <com.android.internal.os.ZygoteInit: int ROOT_UID> = 0;

        <com.android.internal.os.ZygoteInit: int UNPRIVILEGED_GID> = 9999;

        <com.android.internal.os.ZygoteInit: int UNPRIVILEGED_UID> = 9999;

        <com.android.internal.os.ZygoteInit: boolean PRELOAD_RESOURCES> = 1;

        <com.android.internal.os.ZygoteInit: java.lang.String PRELOADED_CLASSES> = "preloaded-classes";

        <com.android.internal.os.ZygoteInit: int GC_LOOP_COUNT> = 10;

        <com.android.internal.os.ZygoteInit: java.lang.String SOCKET_NAME_ARG> = "--socket-name=";

        <com.android.internal.os.ZygoteInit: java.lang.String ABI_LIST_ARG> = "--abi-list=";

        <com.android.internal.os.ZygoteInit: int PRELOAD_GC_THRESHOLD> = 50000;

        <com.android.internal.os.ZygoteInit: int LOG_BOOT_PROGRESS_PRELOAD_END> = 3030;

        <com.android.internal.os.ZygoteInit: int LOG_BOOT_PROGRESS_PRELOAD_START> = 3020;

        <com.android.internal.os.ZygoteInit: java.lang.String ANDROID_SOCKET_PREFIX> = "ANDROID_SOCKET_";

        <com.android.internal.os.ZygoteInit: java.lang.String PROPERTY_DISABLE_OPENGL_PRELOADING> = "ro.zygote.disable_gl_preload";

        <com.android.internal.os.ZygoteInit: java.lang.String TAG> = "Zygote";

        return;
    }
}
