public class android.media.audiofx.Equalizer extends android.media.audiofx.AudioEffect
{
    private static final java.lang.String TAG;
    public static final int PARAM_NUM_BANDS;
    public static final int PARAM_LEVEL_RANGE;
    public static final int PARAM_BAND_LEVEL;
    public static final int PARAM_CENTER_FREQ;
    public static final int PARAM_BAND_FREQ_RANGE;
    public static final int PARAM_GET_BAND;
    public static final int PARAM_CURRENT_PRESET;
    public static final int PARAM_GET_NUM_OF_PRESETS;
    public static final int PARAM_GET_PRESET_NAME;
    private static final int PARAM_PROPERTIES;
    public static final int PARAM_STRING_SIZE_MAX;
    private short mNumBands;
    private int mNumPresets;
    private java.lang.String[] mPresetNames;
    private android.media.audiofx.Equalizer$OnParameterChangeListener mParamListener;
    private android.media.audiofx.Equalizer$BaseParameterListener mBaseParamListener;
    private final java.lang.Object mParamListenerLock;

    public void <init>(int, int) throws java.lang.IllegalStateException, java.lang.IllegalArgumentException, java.lang.UnsupportedOperationException, java.lang.RuntimeException
    {
        android.media.audiofx.Equalizer r0;
        int i0, i1, i2, i3, $i6, $i7, $i8, $i9;
        byte[] r1;
        int[] r2;
        java.util.UUID $r4, $r5;
        java.lang.Object $r6;
        short $s5;
        java.lang.String[] $r7, $r9;
        java.lang.String $r8;
        byte $b10;
        java.io.UnsupportedEncodingException $r10;

        r0 := @this: android.media.audiofx.Equalizer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r5 = <android.media.audiofx.Equalizer: java.util.UUID EFFECT_TYPE_EQUALIZER>;

        $r4 = <android.media.audiofx.Equalizer: java.util.UUID EFFECT_TYPE_NULL>;

        specialinvoke r0.<android.media.audiofx.AudioEffect: void <init>(java.util.UUID,java.util.UUID,int,int)>($r5, $r4, i0, i1);

        r0.<android.media.audiofx.Equalizer: short mNumBands> = 0;

        r0.<android.media.audiofx.Equalizer: android.media.audiofx.Equalizer$OnParameterChangeListener mParamListener> = null;

        r0.<android.media.audiofx.Equalizer: android.media.audiofx.Equalizer$BaseParameterListener mBaseParamListener> = null;

        $r6 = new java.lang.Object;

        specialinvoke $r6.<java.lang.Object: void <init>()>();

        r0.<android.media.audiofx.Equalizer: java.lang.Object mParamListenerLock> = $r6;

        if i1 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Equalizer", "WARNING: attaching an Equalizer to global output mix is deprecated!");

     label1:
        virtualinvoke r0.<android.media.audiofx.Equalizer: short getNumberOfBands()>();

        $s5 = virtualinvoke r0.<android.media.audiofx.Equalizer: short getNumberOfPresets()>();

        r0.<android.media.audiofx.Equalizer: int mNumPresets> = $s5;

        $i6 = r0.<android.media.audiofx.Equalizer: int mNumPresets>;

        if $i6 == 0 goto label8;

        $i7 = r0.<android.media.audiofx.Equalizer: int mNumPresets>;

        $r7 = newarray (java.lang.String)[$i7];

        r0.<android.media.audiofx.Equalizer: java.lang.String[] mPresetNames> = $r7;

        r1 = newarray (byte)[32];

        r2 = newarray (int)[2];

        r2[0] = 8;

        i2 = 0;

     label2:
        $i9 = r0.<android.media.audiofx.Equalizer: int mNumPresets>;

        if i2 >= $i9 goto label8;

        r2[1] = i2;

        $i8 = virtualinvoke r0.<android.media.audiofx.Equalizer: int getParameter(int[],byte[])>(r2, r1);

        virtualinvoke r0.<android.media.audiofx.Equalizer: void checkStatus(int)>($i8);

        i3 = 0;

     label3:
        $b10 = r1[i3];

        if $b10 == 0 goto label4;

        i3 = i3 + 1;

        goto label3;

     label4:
        $r9 = r0.<android.media.audiofx.Equalizer: java.lang.String[] mPresetNames>;

        $r8 = new java.lang.String;

        specialinvoke $r8.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r1, 0, i3, "ISO-8859-1");

        $r9[i2] = $r8;

     label5:
        goto label7;

     label6:
        $r10 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Equalizer", "preset name decode error");

     label7:
        i2 = i2 + 1;

        goto label2;

     label8:
        return;

        catch java.io.UnsupportedEncodingException from label4 to label5 with label6;
    }

    public short getNumberOfBands() throws java.lang.IllegalStateException, java.lang.IllegalArgumentException, java.lang.UnsupportedOperationException
    {
        android.media.audiofx.Equalizer r0;
        int[] r1;
        short[] r2;
        short $s0, $s2, $s3, $s4;
        int $i1;

        r0 := @this: android.media.audiofx.Equalizer;

        $s0 = r0.<android.media.audiofx.Equalizer: short mNumBands>;

        if $s0 == 0 goto label1;

        $s4 = r0.<android.media.audiofx.Equalizer: short mNumBands>;

        return $s4;

     label1:
        r1 = newarray (int)[1];

        r1[0] = 0;

        r2 = newarray (short)[1];

        $i1 = virtualinvoke r0.<android.media.audiofx.Equalizer: int getParameter(int[],short[])>(r1, r2);

        virtualinvoke r0.<android.media.audiofx.Equalizer: void checkStatus(int)>($i1);

        $s2 = r2[0];

        r0.<android.media.audiofx.Equalizer: short mNumBands> = $s2;

        $s3 = r0.<android.media.audiofx.Equalizer: short mNumBands>;

        return $s3;
    }

    public short[] getBandLevelRange() throws java.lang.IllegalStateException, java.lang.IllegalArgumentException, java.lang.UnsupportedOperationException
    {
        android.media.audiofx.Equalizer r0;
        short[] r1;
        int $i0;

        r0 := @this: android.media.audiofx.Equalizer;

        r1 = newarray (short)[2];

        $i0 = virtualinvoke r0.<android.media.audiofx.Equalizer: int getParameter(int,short[])>(1, r1);

        virtualinvoke r0.<android.media.audiofx.Equalizer: void checkStatus(int)>($i0);

        return r1;
    }

    public void setBandLevel(short, short) throws java.lang.IllegalStateException, java.lang.IllegalArgumentException, java.lang.UnsupportedOperationException
    {
        android.media.audiofx.Equalizer r0;
        short s0, s1;
        int[] r1;
        short[] r2;
        int $i2;

        r0 := @this: android.media.audiofx.Equalizer;

        s0 := @parameter0: short;

        s1 := @parameter1: short;

        r1 = newarray (int)[2];

        r2 = newarray (short)[1];

        r1[0] = 2;

        r1[1] = s0;

        r2[0] = s1;

        $i2 = virtualinvoke r0.<android.media.audiofx.Equalizer: int setParameter(int[],short[])>(r1, r2);

        virtualinvoke r0.<android.media.audiofx.Equalizer: void checkStatus(int)>($i2);

        return;
    }

    public short getBandLevel(short) throws java.lang.IllegalStateException, java.lang.IllegalArgumentException, java.lang.UnsupportedOperationException
    {
        android.media.audiofx.Equalizer r0;
        short s0, $s2;
        int[] r1;
        short[] r2;
        int $i1;

        r0 := @this: android.media.audiofx.Equalizer;

        s0 := @parameter0: short;

        r1 = newarray (int)[2];

        r2 = newarray (short)[1];

        r1[0] = 2;

        r1[1] = s0;

        $i1 = virtualinvoke r0.<android.media.audiofx.Equalizer: int getParameter(int[],short[])>(r1, r2);

        virtualinvoke r0.<android.media.audiofx.Equalizer: void checkStatus(int)>($i1);

        $s2 = r2[0];

        return $s2;
    }

    public int getCenterFreq(short) throws java.lang.IllegalStateException, java.lang.IllegalArgumentException, java.lang.UnsupportedOperationException
    {
        android.media.audiofx.Equalizer r0;
        short s0;
        int[] r1, r2;
        int $i1, $i2;

        r0 := @this: android.media.audiofx.Equalizer;

        s0 := @parameter0: short;

        r1 = newarray (int)[2];

        r2 = newarray (int)[1];

        r1[0] = 3;

        r1[1] = s0;

        $i1 = virtualinvoke r0.<android.media.audiofx.Equalizer: int getParameter(int[],int[])>(r1, r2);

        virtualinvoke r0.<android.media.audiofx.Equalizer: void checkStatus(int)>($i1);

        $i2 = r2[0];

        return $i2;
    }

    public int[] getBandFreqRange(short) throws java.lang.IllegalStateException, java.lang.IllegalArgumentException, java.lang.UnsupportedOperationException
    {
        android.media.audiofx.Equalizer r0;
        short s0;
        int[] r1, r2;
        int $i1;

        r0 := @this: android.media.audiofx.Equalizer;

        s0 := @parameter0: short;

        r1 = newarray (int)[2];

        r2 = newarray (int)[2];

        r1[0] = 4;

        r1[1] = s0;

        $i1 = virtualinvoke r0.<android.media.audiofx.Equalizer: int getParameter(int[],int[])>(r1, r2);

        virtualinvoke r0.<android.media.audiofx.Equalizer: void checkStatus(int)>($i1);

        return r2;
    }

    public short getBand(int) throws java.lang.IllegalStateException, java.lang.IllegalArgumentException, java.lang.UnsupportedOperationException
    {
        android.media.audiofx.Equalizer r0;
        int i0, $i1;
        int[] r1;
        short[] r2;
        short $s2;

        r0 := @this: android.media.audiofx.Equalizer;

        i0 := @parameter0: int;

        r1 = newarray (int)[2];

        r2 = newarray (short)[1];

        r1[0] = 5;

        r1[1] = i0;

        $i1 = virtualinvoke r0.<android.media.audiofx.Equalizer: int getParameter(int[],short[])>(r1, r2);

        virtualinvoke r0.<android.media.audiofx.Equalizer: void checkStatus(int)>($i1);

        $s2 = r2[0];

        return $s2;
    }

    public short getCurrentPreset() throws java.lang.IllegalStateException, java.lang.IllegalArgumentException, java.lang.UnsupportedOperationException
    {
        android.media.audiofx.Equalizer r0;
        short[] r1;
        int $i0;
        short $s1;

        r0 := @this: android.media.audiofx.Equalizer;

        r1 = newarray (short)[1];

        $i0 = virtualinvoke r0.<android.media.audiofx.Equalizer: int getParameter(int,short[])>(6, r1);

        virtualinvoke r0.<android.media.audiofx.Equalizer: void checkStatus(int)>($i0);

        $s1 = r1[0];

        return $s1;
    }

    public void usePreset(short) throws java.lang.IllegalStateException, java.lang.IllegalArgumentException, java.lang.UnsupportedOperationException
    {
        android.media.audiofx.Equalizer r0;
        short s0;
        int $i1;

        r0 := @this: android.media.audiofx.Equalizer;

        s0 := @parameter0: short;

        $i1 = virtualinvoke r0.<android.media.audiofx.Equalizer: int setParameter(int,short)>(6, s0);

        virtualinvoke r0.<android.media.audiofx.Equalizer: void checkStatus(int)>($i1);

        return;
    }

    public short getNumberOfPresets() throws java.lang.IllegalStateException, java.lang.IllegalArgumentException, java.lang.UnsupportedOperationException
    {
        android.media.audiofx.Equalizer r0;
        short[] r1;
        int $i0;
        short $s1;

        r0 := @this: android.media.audiofx.Equalizer;

        r1 = newarray (short)[1];

        $i0 = virtualinvoke r0.<android.media.audiofx.Equalizer: int getParameter(int,short[])>(7, r1);

        virtualinvoke r0.<android.media.audiofx.Equalizer: void checkStatus(int)>($i0);

        $s1 = r1[0];

        return $s1;
    }

    public java.lang.String getPresetName(short)
    {
        android.media.audiofx.Equalizer r0;
        short s0;
        int $i1;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: android.media.audiofx.Equalizer;

        s0 := @parameter0: short;

        if s0 < 0 goto label1;

        $i1 = r0.<android.media.audiofx.Equalizer: int mNumPresets>;

        if s0 >= $i1 goto label1;

        $r1 = r0.<android.media.audiofx.Equalizer: java.lang.String[] mPresetNames>;

        $r2 = $r1[s0];

        return $r2;

     label1:
        return "";
    }

    public void setParameterListener(android.media.audiofx.Equalizer$OnParameterChangeListener)
    {
        android.media.audiofx.Equalizer r0;
        android.media.audiofx.Equalizer$OnParameterChangeListener r1, $r5;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r8;
        android.media.audiofx.Equalizer$BaseParameterListener $r6, $r7;

        r0 := @this: android.media.audiofx.Equalizer;

        r1 := @parameter0: android.media.audiofx.Equalizer$OnParameterChangeListener;

        $r4 = r0.<android.media.audiofx.Equalizer: java.lang.Object mParamListenerLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<android.media.audiofx.Equalizer: android.media.audiofx.Equalizer$OnParameterChangeListener mParamListener>;

        if $r5 != null goto label2;

        r0.<android.media.audiofx.Equalizer: android.media.audiofx.Equalizer$OnParameterChangeListener mParamListener> = r1;

        $r6 = new android.media.audiofx.Equalizer$BaseParameterListener;

        specialinvoke $r6.<android.media.audiofx.Equalizer$BaseParameterListener: void <init>(android.media.audiofx.Equalizer,android.media.audiofx.Equalizer$1)>(r0, null);

        r0.<android.media.audiofx.Equalizer: android.media.audiofx.Equalizer$BaseParameterListener mBaseParamListener> = $r6;

        $r7 = r0.<android.media.audiofx.Equalizer: android.media.audiofx.Equalizer$BaseParameterListener mBaseParamListener>;

        specialinvoke r0.<android.media.audiofx.AudioEffect: void setParameterListener(android.media.audiofx.AudioEffect$OnParameterChangeListener)>($r7);

     label2:
        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public android.media.audiofx.Equalizer$Settings getProperties() throws java.lang.IllegalStateException, java.lang.IllegalArgumentException, java.lang.UnsupportedOperationException
    {
        android.media.audiofx.Equalizer r0;
        byte[] r1;
        android.media.audiofx.Equalizer$Settings r2, $r3;
        int i0, $i2, $i3, $i4, $i9, $i10;
        short $s1, $s5, $s6, $s7, $s8, $s11;
        short[] $r4, $r5;

        r0 := @this: android.media.audiofx.Equalizer;

        $s1 = r0.<android.media.audiofx.Equalizer: short mNumBands>;

        $i2 = $s1 * 2;

        $i3 = 4 + $i2;

        r1 = newarray (byte)[$i3];

        $i4 = virtualinvoke r0.<android.media.audiofx.Equalizer: int getParameter(int,byte[])>(9, r1);

        virtualinvoke r0.<android.media.audiofx.Equalizer: void checkStatus(int)>($i4);

        $r3 = new android.media.audiofx.Equalizer$Settings;

        specialinvoke $r3.<android.media.audiofx.Equalizer$Settings: void <init>()>();

        r2 = $r3;

        $s5 = staticinvoke <android.media.audiofx.Equalizer: short byteArrayToShort(byte[],int)>(r1, 0);

        r2.<android.media.audiofx.Equalizer$Settings: short curPreset> = $s5;

        $s6 = staticinvoke <android.media.audiofx.Equalizer: short byteArrayToShort(byte[],int)>(r1, 2);

        r2.<android.media.audiofx.Equalizer$Settings: short numBands> = $s6;

        $s7 = r0.<android.media.audiofx.Equalizer: short mNumBands>;

        $r4 = newarray (short)[$s7];

        r2.<android.media.audiofx.Equalizer$Settings: short[] bandLevels> = $r4;

        i0 = 0;

     label1:
        $s8 = r0.<android.media.audiofx.Equalizer: short mNumBands>;

        if i0 >= $s8 goto label2;

        $r5 = r2.<android.media.audiofx.Equalizer$Settings: short[] bandLevels>;

        $i9 = 2 * i0;

        $i10 = 4 + $i9;

        $s11 = staticinvoke <android.media.audiofx.Equalizer: short byteArrayToShort(byte[],int)>(r1, $i10);

        $r5[i0] = $s11;

        i0 = i0 + 1;

        goto label1;

     label2:
        return r2;
    }

    public void setProperties(android.media.audiofx.Equalizer$Settings) throws java.lang.IllegalStateException, java.lang.IllegalArgumentException, java.lang.UnsupportedOperationException
    {
        android.media.audiofx.Equalizer r0;
        android.media.audiofx.Equalizer$Settings r1;
        byte[] r2, $r10, $r11, $r14;
        int i0, $i1, $i9;
        short[] $r3, $r13;
        short $s2, $s3, $s4, $s5, $s6, $s7, $s8, $s10;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;
        byte[][] $r9, $r12;

        r0 := @this: android.media.audiofx.Equalizer;

        r1 := @parameter0: android.media.audiofx.Equalizer$Settings;

        $s2 = r1.<android.media.audiofx.Equalizer$Settings: short numBands>;

        $r3 = r1.<android.media.audiofx.Equalizer$Settings: short[] bandLevels>;

        $i1 = lengthof $r3;

        if $s2 != $i1 goto label1;

        $s5 = r1.<android.media.audiofx.Equalizer$Settings: short numBands>;

        $s4 = r0.<android.media.audiofx.Equalizer: short mNumBands>;

        if $s5 == $s4 goto label2;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("settings invalid band count: ");

        $s3 = r1.<android.media.audiofx.Equalizer$Settings: short numBands>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($s3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label2:
        $r9 = newarray (byte[])[2];

        $s6 = r1.<android.media.audiofx.Equalizer$Settings: short curPreset>;

        $r10 = staticinvoke <android.media.audiofx.Equalizer: byte[] shortToByteArray(short)>($s6);

        $r9[0] = $r10;

        $s7 = r0.<android.media.audiofx.Equalizer: short mNumBands>;

        $r11 = staticinvoke <android.media.audiofx.Equalizer: byte[] shortToByteArray(short)>($s7);

        $r9[1] = $r11;

        r2 = staticinvoke <android.media.audiofx.Equalizer: byte[] concatArrays(byte[][])>($r9);

        i0 = 0;

     label3:
        $s8 = r0.<android.media.audiofx.Equalizer: short mNumBands>;

        if i0 >= $s8 goto label4;

        $r12 = newarray (byte[])[2];

        $r12[0] = r2;

        $r13 = r1.<android.media.audiofx.Equalizer$Settings: short[] bandLevels>;

        $s10 = $r13[i0];

        $r14 = staticinvoke <android.media.audiofx.Equalizer: byte[] shortToByteArray(short)>($s10);

        $r12[1] = $r14;

        r2 = staticinvoke <android.media.audiofx.Equalizer: byte[] concatArrays(byte[][])>($r12);

        i0 = i0 + 1;

        goto label3;

     label4:
        $i9 = virtualinvoke r0.<android.media.audiofx.Equalizer: int setParameter(int,byte[])>(9, r2);

        virtualinvoke r0.<android.media.audiofx.Equalizer: void checkStatus(int)>($i9);

        return;
    }

    static java.lang.Object access$000(android.media.audiofx.Equalizer)
    {
        android.media.audiofx.Equalizer r0;
        java.lang.Object $r1;

        r0 := @parameter0: android.media.audiofx.Equalizer;

        $r1 = r0.<android.media.audiofx.Equalizer: java.lang.Object mParamListenerLock>;

        return $r1;
    }

    static android.media.audiofx.Equalizer$OnParameterChangeListener access$100(android.media.audiofx.Equalizer)
    {
        android.media.audiofx.Equalizer r0;
        android.media.audiofx.Equalizer$OnParameterChangeListener $r1;

        r0 := @parameter0: android.media.audiofx.Equalizer;

        $r1 = r0.<android.media.audiofx.Equalizer: android.media.audiofx.Equalizer$OnParameterChangeListener mParamListener>;

        return $r1;
    }

    public static void <clinit>()
    {
        <android.media.audiofx.Equalizer: int PARAM_STRING_SIZE_MAX> = 32;

        <android.media.audiofx.Equalizer: int PARAM_PROPERTIES> = 9;

        <android.media.audiofx.Equalizer: int PARAM_GET_PRESET_NAME> = 8;

        <android.media.audiofx.Equalizer: int PARAM_GET_NUM_OF_PRESETS> = 7;

        <android.media.audiofx.Equalizer: int PARAM_CURRENT_PRESET> = 6;

        <android.media.audiofx.Equalizer: int PARAM_GET_BAND> = 5;

        <android.media.audiofx.Equalizer: int PARAM_BAND_FREQ_RANGE> = 4;

        <android.media.audiofx.Equalizer: int PARAM_CENTER_FREQ> = 3;

        <android.media.audiofx.Equalizer: int PARAM_BAND_LEVEL> = 2;

        <android.media.audiofx.Equalizer: int PARAM_LEVEL_RANGE> = 1;

        <android.media.audiofx.Equalizer: int PARAM_NUM_BANDS> = 0;

        <android.media.audiofx.Equalizer: java.lang.String TAG> = "Equalizer";

        return;
    }
}
