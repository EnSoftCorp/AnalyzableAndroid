public class android.hardware.hdmi.HdmiRecordListener$TimerStatusData extends java.lang.Object
{
    private boolean mOverlapped;
    private int mMediaInfo;
    private boolean mProgrammed;
    private int mProgrammedInfo;
    private int mNotProgrammedError;
    private int mDurationHour;
    private int mDurationMinute;
    private int mExtraError;

    static android.hardware.hdmi.HdmiRecordListener$TimerStatusData parseFrom(int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i17, $i18, $i19, $i20, $i22, $i23, $i24, $i26, $i27;
        android.hardware.hdmi.HdmiRecordListener$TimerStatusData r0, $r1;
        boolean $z0, $z1, $z2;
        byte $b11, $b16, $b21, $b25;

        i0 := @parameter0: int;

        $r1 = new android.hardware.hdmi.HdmiRecordListener$TimerStatusData;

        specialinvoke $r1.<android.hardware.hdmi.HdmiRecordListener$TimerStatusData: void <init>()>();

        r0 = $r1;

        $i1 = i0 >> 31;

        $i2 = $i1 & 1;

        if $i2 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        r0.<android.hardware.hdmi.HdmiRecordListener$TimerStatusData: boolean mOverlapped> = $z2;

        $i3 = i0 >> 29;

        $i4 = $i3 & 3;

        r0.<android.hardware.hdmi.HdmiRecordListener$TimerStatusData: int mMediaInfo> = $i4;

        $i5 = i0 >> 28;

        $i6 = $i5 & 1;

        if $i6 == 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        r0.<android.hardware.hdmi.HdmiRecordListener$TimerStatusData: boolean mProgrammed> = $z1;

        $z0 = r0.<android.hardware.hdmi.HdmiRecordListener$TimerStatusData: boolean mProgrammed>;

        if $z0 == 0 goto label5;

        $i17 = i0 >> 24;

        $i20 = $i17 & 15;

        r0.<android.hardware.hdmi.HdmiRecordListener$TimerStatusData: int mProgrammedInfo> = $i20;

        $i19 = i0 >> 16;

        $i22 = $i19 & 255;

        $b21 = (byte) $i22;

        $i24 = staticinvoke <android.hardware.hdmi.HdmiRecordListener$TimerStatusData: int bcdByteToInt(byte)>($b21);

        r0.<android.hardware.hdmi.HdmiRecordListener$TimerStatusData: int mDurationHour> = $i24;

        $i23 = i0 >> 8;

        $i26 = $i23 & 255;

        $b25 = (byte) $i26;

        $i27 = staticinvoke <android.hardware.hdmi.HdmiRecordListener$TimerStatusData: int bcdByteToInt(byte)>($b25);

        r0.<android.hardware.hdmi.HdmiRecordListener$TimerStatusData: int mDurationMinute> = $i27;

        goto label6;

     label5:
        $i7 = i0 >> 24;

        $i8 = $i7 & 15;

        r0.<android.hardware.hdmi.HdmiRecordListener$TimerStatusData: int mNotProgrammedError> = $i8;

        $i9 = i0 >> 16;

        $i10 = $i9 & 255;

        $b11 = (byte) $i10;

        $i12 = staticinvoke <android.hardware.hdmi.HdmiRecordListener$TimerStatusData: int bcdByteToInt(byte)>($b11);

        r0.<android.hardware.hdmi.HdmiRecordListener$TimerStatusData: int mDurationHour> = $i12;

        $i14 = i0 >> 8;

        $i13 = $i14 & 255;

        $b16 = (byte) $i13;

        $i15 = staticinvoke <android.hardware.hdmi.HdmiRecordListener$TimerStatusData: int bcdByteToInt(byte)>($b16);

        r0.<android.hardware.hdmi.HdmiRecordListener$TimerStatusData: int mDurationMinute> = $i15;

     label6:
        $i18 = i0 & 255;

        r0.<android.hardware.hdmi.HdmiRecordListener$TimerStatusData: int mExtraError> = $i18;

        return r0;
    }

    private static int bcdByteToInt(byte)
    {
        byte b0, $b1, $b2;
        int $i3, $i4, $i5;

        b0 := @parameter0: byte;

        $b1 = b0 >> 4;

        $b2 = $b1 & 15;

        $i3 = $b2 * 10;

        $i4 = $i3 + b0;

        $i5 = $i4 & 15;

        return $i5;
    }

    private void <init>()
    {
        android.hardware.hdmi.HdmiRecordListener$TimerStatusData r0;

        r0 := @this: android.hardware.hdmi.HdmiRecordListener$TimerStatusData;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean isOverlapped()
    {
        android.hardware.hdmi.HdmiRecordListener$TimerStatusData r0;
        boolean $z0;

        r0 := @this: android.hardware.hdmi.HdmiRecordListener$TimerStatusData;

        $z0 = r0.<android.hardware.hdmi.HdmiRecordListener$TimerStatusData: boolean mOverlapped>;

        return $z0;
    }

    public int getMediaInfo()
    {
        android.hardware.hdmi.HdmiRecordListener$TimerStatusData r0;
        int $i0;

        r0 := @this: android.hardware.hdmi.HdmiRecordListener$TimerStatusData;

        $i0 = r0.<android.hardware.hdmi.HdmiRecordListener$TimerStatusData: int mMediaInfo>;

        return $i0;
    }

    public boolean isProgrammed()
    {
        android.hardware.hdmi.HdmiRecordListener$TimerStatusData r0;
        boolean $z0;

        r0 := @this: android.hardware.hdmi.HdmiRecordListener$TimerStatusData;

        $z0 = r0.<android.hardware.hdmi.HdmiRecordListener$TimerStatusData: boolean mProgrammed>;

        return $z0;
    }

    public int getProgrammedInfo()
    {
        android.hardware.hdmi.HdmiRecordListener$TimerStatusData r0;
        boolean $z0;
        int $i0;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.hardware.hdmi.HdmiRecordListener$TimerStatusData;

        $z0 = virtualinvoke r0.<android.hardware.hdmi.HdmiRecordListener$TimerStatusData: boolean isProgrammed()>();

        if $z0 != 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No programmed info. Call getNotProgammedError() instead.");

        throw $r1;

     label1:
        $i0 = r0.<android.hardware.hdmi.HdmiRecordListener$TimerStatusData: int mProgrammedInfo>;

        return $i0;
    }

    public int getNotProgammedError()
    {
        android.hardware.hdmi.HdmiRecordListener$TimerStatusData r0;
        boolean $z0;
        int $i0;
        java.lang.IllegalStateException $r1;

        r0 := @this: android.hardware.hdmi.HdmiRecordListener$TimerStatusData;

        $z0 = virtualinvoke r0.<android.hardware.hdmi.HdmiRecordListener$TimerStatusData: boolean isProgrammed()>();

        if $z0 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Has no not-programmed error. Call getProgrammedInfo() instead.");

        throw $r1;

     label1:
        $i0 = r0.<android.hardware.hdmi.HdmiRecordListener$TimerStatusData: int mNotProgrammedError>;

        return $i0;
    }

    public int getDurationHour()
    {
        android.hardware.hdmi.HdmiRecordListener$TimerStatusData r0;
        int $i0;

        r0 := @this: android.hardware.hdmi.HdmiRecordListener$TimerStatusData;

        $i0 = r0.<android.hardware.hdmi.HdmiRecordListener$TimerStatusData: int mDurationHour>;

        return $i0;
    }

    public int getDurationMinute()
    {
        android.hardware.hdmi.HdmiRecordListener$TimerStatusData r0;
        int $i0;

        r0 := @this: android.hardware.hdmi.HdmiRecordListener$TimerStatusData;

        $i0 = r0.<android.hardware.hdmi.HdmiRecordListener$TimerStatusData: int mDurationMinute>;

        return $i0;
    }

    public int getExtraError()
    {
        android.hardware.hdmi.HdmiRecordListener$TimerStatusData r0;
        int $i0;

        r0 := @this: android.hardware.hdmi.HdmiRecordListener$TimerStatusData;

        $i0 = r0.<android.hardware.hdmi.HdmiRecordListener$TimerStatusData: int mExtraError>;

        return $i0;
    }
}
