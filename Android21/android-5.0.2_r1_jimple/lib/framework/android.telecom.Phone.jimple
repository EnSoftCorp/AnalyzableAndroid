public final class android.telecom.Phone extends java.lang.Object
{
    private final java.util.Map mCallByTelecomCallId;
    private final java.util.List mCalls;
    private final java.util.List mUnmodifiableCalls;
    private final android.telecom.InCallAdapter mInCallAdapter;
    private android.telecom.AudioState mAudioState;
    private final java.util.List mListeners;

    void <init>(android.telecom.InCallAdapter)
    {
        android.telecom.Phone r0;
        android.telecom.InCallAdapter r1;
        android.util.ArrayMap $r2;
        java.util.concurrent.CopyOnWriteArrayList $r3, $r6;
        java.util.List $r4, $r5;

        r0 := @this: android.telecom.Phone;

        r1 := @parameter0: android.telecom.InCallAdapter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.util.ArrayMap;

        specialinvoke $r2.<android.util.ArrayMap: void <init>()>();

        r0.<android.telecom.Phone: java.util.Map mCallByTelecomCallId> = $r2;

        $r3 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<android.telecom.Phone: java.util.List mCalls> = $r3;

        $r4 = r0.<android.telecom.Phone: java.util.List mCalls>;

        $r5 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r4);

        r0.<android.telecom.Phone: java.util.List mUnmodifiableCalls> = $r5;

        $r6 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r6.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<android.telecom.Phone: java.util.List mListeners> = $r6;

        r0.<android.telecom.Phone: android.telecom.InCallAdapter mInCallAdapter> = r1;

        return;
    }

    final void internalAddCall(android.telecom.ParcelableCall)
    {
        android.telecom.Phone r0;
        android.telecom.ParcelableCall r1;
        android.telecom.Call r2, $r3;
        java.lang.String $r4, $r7;
        android.telecom.InCallAdapter $r5;
        java.util.Map $r6, $r10;
        java.util.List $r9;

        r0 := @this: android.telecom.Phone;

        r1 := @parameter0: android.telecom.ParcelableCall;

        $r3 = new android.telecom.Call;

        $r4 = virtualinvoke r1.<android.telecom.ParcelableCall: java.lang.String getId()>();

        $r5 = r0.<android.telecom.Phone: android.telecom.InCallAdapter mInCallAdapter>;

        specialinvoke $r3.<android.telecom.Call: void <init>(android.telecom.Phone,java.lang.String,android.telecom.InCallAdapter)>(r0, $r4, $r5);

        r2 = $r3;

        $r6 = r0.<android.telecom.Phone: java.util.Map mCallByTelecomCallId>;

        $r7 = virtualinvoke r1.<android.telecom.ParcelableCall: java.lang.String getId()>();

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, r2);

        $r9 = r0.<android.telecom.Phone: java.util.List mCalls>;

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>(r2);

        specialinvoke r0.<android.telecom.Phone: void checkCallTree(android.telecom.ParcelableCall)>(r1);

        $r10 = r0.<android.telecom.Phone: java.util.Map mCallByTelecomCallId>;

        virtualinvoke r2.<android.telecom.Call: void internalUpdate(android.telecom.ParcelableCall,java.util.Map)>(r1, $r10);

        specialinvoke r0.<android.telecom.Phone: void fireCallAdded(android.telecom.Call)>(r2);

        return;
    }

    final void internalRemoveCall(android.telecom.Call)
    {
        android.telecom.Phone r0;
        android.telecom.Call r1;
        java.util.Map $r2;
        java.lang.String $r3;
        java.util.List $r5;

        r0 := @this: android.telecom.Phone;

        r1 := @parameter0: android.telecom.Call;

        $r2 = r0.<android.telecom.Phone: java.util.Map mCallByTelecomCallId>;

        $r3 = virtualinvoke r1.<android.telecom.Call: java.lang.String internalGetCallId()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r3);

        $r5 = r0.<android.telecom.Phone: java.util.List mCalls>;

        interfaceinvoke $r5.<java.util.List: boolean remove(java.lang.Object)>(r1);

        specialinvoke r0.<android.telecom.Phone: void fireCallRemoved(android.telecom.Call)>(r1);

        return;
    }

    final void internalUpdateCall(android.telecom.ParcelableCall)
    {
        android.telecom.Phone r0;
        android.telecom.ParcelableCall r1;
        android.telecom.Call r2;
        java.util.Map $r3, $r6;
        java.lang.String $r4;
        java.lang.Object $r5;

        r0 := @this: android.telecom.Phone;

        r1 := @parameter0: android.telecom.ParcelableCall;

        $r3 = r0.<android.telecom.Phone: java.util.Map mCallByTelecomCallId>;

        $r4 = virtualinvoke r1.<android.telecom.ParcelableCall: java.lang.String getId()>();

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        r2 = (android.telecom.Call) $r5;

        if r2 == null goto label1;

        specialinvoke r0.<android.telecom.Phone: void checkCallTree(android.telecom.ParcelableCall)>(r1);

        $r6 = r0.<android.telecom.Phone: java.util.Map mCallByTelecomCallId>;

        virtualinvoke r2.<android.telecom.Call: void internalUpdate(android.telecom.ParcelableCall,java.util.Map)>(r1, $r6);

     label1:
        return;
    }

    final void internalSetPostDialWait(java.lang.String, java.lang.String)
    {
        android.telecom.Phone r0;
        java.lang.String r1, r2;
        android.telecom.Call r3;
        java.util.Map $r4;
        java.lang.Object $r5;

        r0 := @this: android.telecom.Phone;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r4 = r0.<android.telecom.Phone: java.util.Map mCallByTelecomCallId>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (android.telecom.Call) $r5;

        if r3 == null goto label1;

        virtualinvoke r3.<android.telecom.Call: void internalSetPostDialWait(java.lang.String)>(r2);

     label1:
        return;
    }

    final void internalAudioStateChanged(android.telecom.AudioState)
    {
        android.telecom.Phone r0;
        android.telecom.AudioState r1, $r2;
        boolean $z0;

        r0 := @this: android.telecom.Phone;

        r1 := @parameter0: android.telecom.AudioState;

        $r2 = r0.<android.telecom.Phone: android.telecom.AudioState mAudioState>;

        $z0 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r2, r1);

        if $z0 != 0 goto label1;

        r0.<android.telecom.Phone: android.telecom.AudioState mAudioState> = r1;

        specialinvoke r0.<android.telecom.Phone: void fireAudioStateChanged(android.telecom.AudioState)>(r1);

     label1:
        return;
    }

    final android.telecom.Call internalGetCallByTelecomId(java.lang.String)
    {
        android.telecom.Phone r0;
        java.lang.String r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        android.telecom.Call $r4;

        r0 := @this: android.telecom.Phone;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.telecom.Phone: java.util.Map mCallByTelecomCallId>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (android.telecom.Call) $r3;

        return $r4;
    }

    final void internalBringToForeground(boolean)
    {
        android.telecom.Phone r0;
        boolean z0;

        r0 := @this: android.telecom.Phone;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.telecom.Phone: void fireBringToForeground(boolean)>(z0);

        return;
    }

    final void destroy()
    {
        android.telecom.Phone r0;
        java.util.Iterator r1;
        android.telecom.Call r2;
        java.util.List $r3;
        boolean $z0;
        java.lang.Object $r4;
        int $i0;

        r0 := @this: android.telecom.Phone;

        $r3 = r0.<android.telecom.Phone: java.util.List mCalls>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.telecom.Call) $r4;

        $i0 = virtualinvoke r2.<android.telecom.Call: int getState()>();

        if $i0 == 7 goto label2;

        virtualinvoke r2.<android.telecom.Call: void internalSetDisconnected()>();

     label2:
        goto label1;

     label3:
        return;
    }

    public final void addListener(android.telecom.Phone$Listener)
    {
        android.telecom.Phone r0;
        android.telecom.Phone$Listener r1;
        java.util.List $r2;

        r0 := @this: android.telecom.Phone;

        r1 := @parameter0: android.telecom.Phone$Listener;

        $r2 = r0.<android.telecom.Phone: java.util.List mListeners>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public final void removeListener(android.telecom.Phone$Listener)
    {
        android.telecom.Phone r0;
        android.telecom.Phone$Listener r1;
        java.util.List $r2;

        r0 := @this: android.telecom.Phone;

        r1 := @parameter0: android.telecom.Phone$Listener;

        if r1 == null goto label1;

        $r2 = r0.<android.telecom.Phone: java.util.List mListeners>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1);

     label1:
        return;
    }

    public final java.util.List getCalls()
    {
        android.telecom.Phone r0;
        java.util.List $r1;

        r0 := @this: android.telecom.Phone;

        $r1 = r0.<android.telecom.Phone: java.util.List mUnmodifiableCalls>;

        return $r1;
    }

    public final void setMuted(boolean)
    {
        android.telecom.Phone r0;
        boolean z0;
        android.telecom.InCallAdapter $r1;

        r0 := @this: android.telecom.Phone;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.telecom.Phone: android.telecom.InCallAdapter mInCallAdapter>;

        virtualinvoke $r1.<android.telecom.InCallAdapter: void mute(boolean)>(z0);

        return;
    }

    public final void setAudioRoute(int)
    {
        android.telecom.Phone r0;
        int i0;
        android.telecom.InCallAdapter $r1;

        r0 := @this: android.telecom.Phone;

        i0 := @parameter0: int;

        $r1 = r0.<android.telecom.Phone: android.telecom.InCallAdapter mInCallAdapter>;

        virtualinvoke $r1.<android.telecom.InCallAdapter: void setAudioRoute(int)>(i0);

        return;
    }

    public final void setProximitySensorOn()
    {
        android.telecom.Phone r0;
        android.telecom.InCallAdapter $r1;

        r0 := @this: android.telecom.Phone;

        $r1 = r0.<android.telecom.Phone: android.telecom.InCallAdapter mInCallAdapter>;

        virtualinvoke $r1.<android.telecom.InCallAdapter: void turnProximitySensorOn()>();

        return;
    }

    public final void setProximitySensorOff(boolean)
    {
        android.telecom.Phone r0;
        boolean z0;
        android.telecom.InCallAdapter $r1;

        r0 := @this: android.telecom.Phone;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.telecom.Phone: android.telecom.InCallAdapter mInCallAdapter>;

        virtualinvoke $r1.<android.telecom.InCallAdapter: void turnProximitySensorOff(boolean)>(z0);

        return;
    }

    public final android.telecom.AudioState getAudioState()
    {
        android.telecom.Phone r0;
        android.telecom.AudioState $r1;

        r0 := @this: android.telecom.Phone;

        $r1 = r0.<android.telecom.Phone: android.telecom.AudioState mAudioState>;

        return $r1;
    }

    private void fireCallAdded(android.telecom.Call)
    {
        android.telecom.Phone r0;
        android.telecom.Call r1;
        java.util.Iterator r2;
        android.telecom.Phone$Listener r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: android.telecom.Phone;

        r1 := @parameter0: android.telecom.Call;

        $r4 = r0.<android.telecom.Phone: java.util.List mListeners>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.telecom.Phone$Listener) $r5;

        virtualinvoke r3.<android.telecom.Phone$Listener: void onCallAdded(android.telecom.Phone,android.telecom.Call)>(r0, r1);

        goto label1;

     label2:
        return;
    }

    private void fireCallRemoved(android.telecom.Call)
    {
        android.telecom.Phone r0;
        android.telecom.Call r1;
        java.util.Iterator r2;
        android.telecom.Phone$Listener r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: android.telecom.Phone;

        r1 := @parameter0: android.telecom.Call;

        $r4 = r0.<android.telecom.Phone: java.util.List mListeners>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.telecom.Phone$Listener) $r5;

        virtualinvoke r3.<android.telecom.Phone$Listener: void onCallRemoved(android.telecom.Phone,android.telecom.Call)>(r0, r1);

        goto label1;

     label2:
        return;
    }

    private void fireAudioStateChanged(android.telecom.AudioState)
    {
        android.telecom.Phone r0;
        android.telecom.AudioState r1;
        java.util.Iterator r2;
        android.telecom.Phone$Listener r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: android.telecom.Phone;

        r1 := @parameter0: android.telecom.AudioState;

        $r4 = r0.<android.telecom.Phone: java.util.List mListeners>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.telecom.Phone$Listener) $r5;

        virtualinvoke r3.<android.telecom.Phone$Listener: void onAudioStateChanged(android.telecom.Phone,android.telecom.AudioState)>(r0, r1);

        goto label1;

     label2:
        return;
    }

    private void fireBringToForeground(boolean)
    {
        android.telecom.Phone r0;
        boolean z0, $z1;
        java.util.Iterator r1;
        android.telecom.Phone$Listener r2;
        java.util.List $r3;
        java.lang.Object $r4;

        r0 := @this: android.telecom.Phone;

        z0 := @parameter0: boolean;

        $r3 = r0.<android.telecom.Phone: java.util.List mListeners>;

        r1 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.telecom.Phone$Listener) $r4;

        virtualinvoke r2.<android.telecom.Phone$Listener: void onBringToForeground(android.telecom.Phone,boolean)>(r0, z0);

        goto label1;

     label2:
        return;
    }

    private void checkCallTree(android.telecom.ParcelableCall)
    {
        android.telecom.Phone r0;
        android.telecom.ParcelableCall r1;
        int i0, $i1;
        java.lang.String $r2, $r9, $r12, $r15, $r16;
        java.util.List $r3, $r4, $r6, $r11;
        java.util.Map $r5, $r13;
        java.lang.Object $r7, $r10;
        boolean $z0, $z1;
        java.lang.Object[] $r8, $r14;

        r0 := @this: android.telecom.Phone;

        r1 := @parameter0: android.telecom.ParcelableCall;

        $r2 = virtualinvoke r1.<android.telecom.ParcelableCall: java.lang.String getParentCallId()>();

        if $r2 == null goto label1;

        $r13 = r0.<android.telecom.Phone: java.util.Map mCallByTelecomCallId>;

        $r12 = virtualinvoke r1.<android.telecom.ParcelableCall: java.lang.String getParentCallId()>();

        $z1 = interfaceinvoke $r13.<java.util.Map: boolean containsKey(java.lang.Object)>($r12);

        if $z1 != 0 goto label1;

        $r14 = newarray (java.lang.Object)[2];

        $r15 = virtualinvoke r1.<android.telecom.ParcelableCall: java.lang.String getId()>();

        $r14[0] = $r15;

        $r16 = virtualinvoke r1.<android.telecom.ParcelableCall: java.lang.String getParentCallId()>();

        $r14[1] = $r16;

        staticinvoke <android.telecom.Log: void wtf(java.lang.Object,java.lang.String,java.lang.Object[])>(r0, "ParcelableCall %s has nonexistent parent %s", $r14);

     label1:
        $r3 = virtualinvoke r1.<android.telecom.ParcelableCall: java.util.List getChildCallIds()>();

        if $r3 == null goto label4;

        i0 = 0;

     label2:
        $r4 = virtualinvoke r1.<android.telecom.ParcelableCall: java.util.List getChildCallIds()>();

        $i1 = interfaceinvoke $r4.<java.util.List: int size()>();

        if i0 >= $i1 goto label4;

        $r5 = r0.<android.telecom.Phone: java.util.Map mCallByTelecomCallId>;

        $r6 = virtualinvoke r1.<android.telecom.ParcelableCall: java.util.List getChildCallIds()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i0);

        $z0 = interfaceinvoke $r5.<java.util.Map: boolean containsKey(java.lang.Object)>($r7);

        if $z0 != 0 goto label3;

        $r8 = newarray (java.lang.Object)[2];

        $r9 = virtualinvoke r1.<android.telecom.ParcelableCall: java.lang.String getId()>();

        $r8[0] = $r9;

        $r11 = virtualinvoke r1.<android.telecom.ParcelableCall: java.util.List getChildCallIds()>();

        $r10 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(i0);

        $r8[1] = $r10;

        staticinvoke <android.telecom.Log: void wtf(java.lang.Object,java.lang.String,java.lang.Object[])>(r0, "ParcelableCall %s has nonexistent child %s", $r8);

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        return;
    }
}
