public final class android.net.http.Headers extends java.lang.Object
{
    private static final java.lang.String LOGTAG;
    public static final int CONN_CLOSE;
    public static final int CONN_KEEP_ALIVE;
    public static final int NO_CONN_TYPE;
    public static final long NO_TRANSFER_ENCODING;
    public static final long NO_CONTENT_LENGTH;
    public static final java.lang.String TRANSFER_ENCODING;
    public static final java.lang.String CONTENT_LEN;
    public static final java.lang.String CONTENT_TYPE;
    public static final java.lang.String CONTENT_ENCODING;
    public static final java.lang.String CONN_DIRECTIVE;
    public static final java.lang.String LOCATION;
    public static final java.lang.String PROXY_CONNECTION;
    public static final java.lang.String WWW_AUTHENTICATE;
    public static final java.lang.String PROXY_AUTHENTICATE;
    public static final java.lang.String CONTENT_DISPOSITION;
    public static final java.lang.String ACCEPT_RANGES;
    public static final java.lang.String EXPIRES;
    public static final java.lang.String CACHE_CONTROL;
    public static final java.lang.String LAST_MODIFIED;
    public static final java.lang.String ETAG;
    public static final java.lang.String SET_COOKIE;
    public static final java.lang.String PRAGMA;
    public static final java.lang.String REFRESH;
    public static final java.lang.String X_PERMITTED_CROSS_DOMAIN_POLICIES;
    private static final int HASH_TRANSFER_ENCODING;
    private static final int HASH_CONTENT_LEN;
    private static final int HASH_CONTENT_TYPE;
    private static final int HASH_CONTENT_ENCODING;
    private static final int HASH_CONN_DIRECTIVE;
    private static final int HASH_LOCATION;
    private static final int HASH_PROXY_CONNECTION;
    private static final int HASH_WWW_AUTHENTICATE;
    private static final int HASH_PROXY_AUTHENTICATE;
    private static final int HASH_CONTENT_DISPOSITION;
    private static final int HASH_ACCEPT_RANGES;
    private static final int HASH_EXPIRES;
    private static final int HASH_CACHE_CONTROL;
    private static final int HASH_LAST_MODIFIED;
    private static final int HASH_ETAG;
    private static final int HASH_SET_COOKIE;
    private static final int HASH_PRAGMA;
    private static final int HASH_REFRESH;
    private static final int HASH_X_PERMITTED_CROSS_DOMAIN_POLICIES;
    private static final int IDX_TRANSFER_ENCODING;
    private static final int IDX_CONTENT_LEN;
    private static final int IDX_CONTENT_TYPE;
    private static final int IDX_CONTENT_ENCODING;
    private static final int IDX_CONN_DIRECTIVE;
    private static final int IDX_LOCATION;
    private static final int IDX_PROXY_CONNECTION;
    private static final int IDX_WWW_AUTHENTICATE;
    private static final int IDX_PROXY_AUTHENTICATE;
    private static final int IDX_CONTENT_DISPOSITION;
    private static final int IDX_ACCEPT_RANGES;
    private static final int IDX_EXPIRES;
    private static final int IDX_CACHE_CONTROL;
    private static final int IDX_LAST_MODIFIED;
    private static final int IDX_ETAG;
    private static final int IDX_SET_COOKIE;
    private static final int IDX_PRAGMA;
    private static final int IDX_REFRESH;
    private static final int IDX_X_PERMITTED_CROSS_DOMAIN_POLICIES;
    private static final int HEADER_COUNT;
    private long transferEncoding;
    private long contentLength;
    private int connectionType;
    private java.util.ArrayList cookies;
    private java.lang.String[] mHeaders;
    private static final java.lang.String[] sHeaderNames;
    private java.util.ArrayList mExtraHeaderNames;
    private java.util.ArrayList mExtraHeaderValues;

    public void <init>()
    {
        android.net.http.Headers r0;
        java.util.ArrayList $r1, $r3, $r4;
        java.lang.String[] $r2;

        r0 := @this: android.net.http.Headers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(2);

        r0.<android.net.http.Headers: java.util.ArrayList cookies> = $r1;

        $r2 = newarray (java.lang.String)[19];

        r0.<android.net.http.Headers: java.lang.String[] mHeaders> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(4);

        r0.<android.net.http.Headers: java.util.ArrayList mExtraHeaderNames> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>(4);

        r0.<android.net.http.Headers: java.util.ArrayList mExtraHeaderValues> = $r4;

        r0.<android.net.http.Headers: long transferEncoding> = 0L;

        r0.<android.net.http.Headers: long contentLength> = -1L;

        r0.<android.net.http.Headers: int connectionType> = 0;

        return;
    }

    public void parseHeader(org.apache.http.util.CharArrayBuffer)
    {
        android.net.http.Headers r0;
        org.apache.http.util.CharArrayBuffer r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i10;
        java.lang.String r2, r3, $r11, $r12, $r14, $r23, $r26, $r27, $r34;
        org.apache.http.HeaderElement[] r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z21, $z22;
        java.lang.String[] $r5, $r6, $r7, $r9, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r24, $r25, $r28, $r33, $r35, $r36, $r37, $r38, $r39, $r41, $r42;
        org.apache.http.message.ParserCursor $r8;
        org.apache.http.message.BasicHeaderValueParser $r10;
        org.apache.http.HeaderElement $r13;
        java.util.ArrayList $r15, $r40, $r43;
        java.lang.StringBuilder $r29, $r30, $r31, $r32;
        long $l9;
        java.lang.NumberFormatException $r44;

        r0 := @this: android.net.http.Headers;

        r1 := @parameter0: org.apache.http.util.CharArrayBuffer;

        i0 = staticinvoke <android.net.http.CharArrayBuffers: int setLowercaseIndexOf(org.apache.http.util.CharArrayBuffer,int)>(r1, 58);

        if i0 != -1 goto label01;

        return;

     label01:
        r2 = virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: java.lang.String substringTrimmed(int,int)>(0, i0);

        $i2 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i2 != 0 goto label02;

        return;

     label02:
        i10 = i0 + 1;

        $i3 = virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: int length()>();

        r3 = virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: java.lang.String substringTrimmed(int,int)>(i10, $i3);

        $i4 = virtualinvoke r2.<java.lang.String: int hashCode()>();

        lookupswitch($i4)
        {
            case -1345594014: goto label28;
            case -1309235404: goto label20;
            case -1267267485: goto label18;
            case -1132779846: goto label07;
            case -980228804: goto label26;
            case -775651618: goto label13;
            case -301767724: goto label17;
            case -243037365: goto label16;
            case -208775662: goto label21;
            case 3123477: goto label24;
            case 150043680: goto label23;
            case 285929373: goto label15;
            case 785670158: goto label11;
            case 1085444827: goto label27;
            case 1237214767: goto label25;
            case 1274458357: goto label03;
            case 1397189435: goto label19;
            case 1901043637: goto label14;
            case 2095084583: goto label12;
            default: goto label29;
        };

     label03:
        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("transfer-encoding");

        if $z3 == 0 goto label30;

        $r9 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r9[0] = r3;

        $r10 = <org.apache.http.message.BasicHeaderValueParser: org.apache.http.message.BasicHeaderValueParser DEFAULT>;

        $r8 = new org.apache.http.message.ParserCursor;

        $i5 = virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: int length()>();

        specialinvoke $r8.<org.apache.http.message.ParserCursor: void <init>(int,int)>(i10, $i5);

        r4 = virtualinvoke $r10.<org.apache.http.message.BasicHeaderValueParser: org.apache.http.HeaderElement[] parseElements(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>(r1, $r8);

        i1 = lengthof r4;

        $r11 = "identity";

        $z4 = virtualinvoke $r11.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r3);

        if $z4 == 0 goto label04;

        r0.<android.net.http.Headers: long transferEncoding> = -1L;

        goto label06;

     label04:
        if i1 <= 0 goto label05;

        $r12 = "chunked";

        $i6 = i1 - 1;

        $r13 = r4[$i6];

        $r14 = interfaceinvoke $r13.<org.apache.http.HeaderElement: java.lang.String getName()>();

        $z5 = virtualinvoke $r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r14);

        if $z5 == 0 goto label05;

        r0.<android.net.http.Headers: long transferEncoding> = -2L;

        goto label06;

     label05:
        r0.<android.net.http.Headers: long transferEncoding> = -1L;

     label06:
        goto label30;

     label07:
        $z16 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("content-length");

        if $z16 == 0 goto label30;

        $r36 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r36[1] = r3;

     label08:
        $l9 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r3);

        r0.<android.net.http.Headers: long contentLength> = $l9;

     label09:
        goto label30;

     label10:
        $r44 := @caughtexception;

        goto label30;

     label11:
        $z8 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("content-type");

        if $z8 == 0 goto label30;

        $r17 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r17[2] = r3;

        goto label30;

     label12:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("content-encoding");

        if $z0 == 0 goto label30;

        $r5 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r5[3] = r3;

        goto label30;

     label13:
        $z17 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("connection");

        if $z17 == 0 goto label30;

        $r38 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r38[4] = r3;

        specialinvoke r0.<android.net.http.Headers: void setConnectionType(org.apache.http.util.CharArrayBuffer,int)>(r1, i10);

        goto label30;

     label14:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("location");

        if $z1 == 0 goto label30;

        $r6 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r6[5] = r3;

        goto label30;

     label15:
        $z11 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("proxy-connection");

        if $z11 == 0 goto label30;

        $r20 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r20[6] = r3;

        specialinvoke r0.<android.net.http.Headers: void setConnectionType(org.apache.http.util.CharArrayBuffer,int)>(r1, i10);

        goto label30;

     label16:
        $z15 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("www-authenticate");

        if $z15 == 0 goto label30;

        $r33 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r33[7] = r3;

        goto label30;

     label17:
        $z14 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("proxy-authenticate");

        if $z14 == 0 goto label30;

        $r37 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r37[8] = r3;

        goto label30;

     label18:
        $z21 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("content-disposition");

        if $z21 == 0 goto label30;

        $r41 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r41[9] = r3;

        goto label30;

     label19:
        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("accept-ranges");

        if $z2 == 0 goto label30;

        $r7 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r7[10] = r3;

        goto label30;

     label20:
        $z22 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("expires");

        if $z22 == 0 goto label30;

        $r42 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r42[11] = r3;

        goto label30;

     label21:
        $z12 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("cache-control");

        if $z12 == 0 goto label30;

        $r21 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r26 = $r21[12];

        if $r26 == null goto label22;

        $r24 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r23 = $r24[12];

        $i7 = virtualinvoke $r23.<java.lang.String: int length()>();

        if $i7 <= 0 goto label22;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r28 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r27 = $r28[12];

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        $r28[12] = $r34;

        goto label30;

     label22:
        $r25 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r25[12] = r3;

        goto label30;

     label23:
        $z10 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("last-modified");

        if $z10 == 0 goto label30;

        $r19 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r19[13] = r3;

        goto label30;

     label24:
        $z13 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("etag");

        if $z13 == 0 goto label30;

        $r22 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r22[14] = r3;

        goto label30;

     label25:
        $z7 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("set-cookie");

        if $z7 == 0 goto label30;

        $r16 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r16[15] = r3;

        $r15 = r0.<android.net.http.Headers: java.util.ArrayList cookies>;

        virtualinvoke $r15.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

        goto label30;

     label26:
        $z18 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("pragma");

        if $z18 == 0 goto label30;

        $r35 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r35[16] = r3;

        goto label30;

     label27:
        $z9 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("refresh");

        if $z9 == 0 goto label30;

        $r18 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r18[17] = r3;

        goto label30;

     label28:
        $z19 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("x-permitted-cross-domain-policies");

        if $z19 == 0 goto label30;

        $r39 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r39[18] = r3;

        goto label30;

     label29:
        $r40 = r0.<android.net.http.Headers: java.util.ArrayList mExtraHeaderNames>;

        virtualinvoke $r40.<java.util.ArrayList: boolean add(java.lang.Object)>(r2);

        $r43 = r0.<android.net.http.Headers: java.util.ArrayList mExtraHeaderValues>;

        virtualinvoke $r43.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

     label30:
        return;

        catch java.lang.NumberFormatException from label08 to label09 with label10;
    }

    public long getTransferEncoding()
    {
        android.net.http.Headers r0;
        long $l0;

        r0 := @this: android.net.http.Headers;

        $l0 = r0.<android.net.http.Headers: long transferEncoding>;

        return $l0;
    }

    public long getContentLength()
    {
        android.net.http.Headers r0;
        long $l0;

        r0 := @this: android.net.http.Headers;

        $l0 = r0.<android.net.http.Headers: long contentLength>;

        return $l0;
    }

    public int getConnectionType()
    {
        android.net.http.Headers r0;
        int $i0;

        r0 := @this: android.net.http.Headers;

        $i0 = r0.<android.net.http.Headers: int connectionType>;

        return $i0;
    }

    public java.lang.String getContentType()
    {
        android.net.http.Headers r0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: android.net.http.Headers;

        $r1 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r2 = $r1[2];

        return $r2;
    }

    public java.lang.String getContentEncoding()
    {
        android.net.http.Headers r0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: android.net.http.Headers;

        $r1 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r2 = $r1[3];

        return $r2;
    }

    public java.lang.String getLocation()
    {
        android.net.http.Headers r0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: android.net.http.Headers;

        $r1 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r2 = $r1[5];

        return $r2;
    }

    public java.lang.String getWwwAuthenticate()
    {
        android.net.http.Headers r0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: android.net.http.Headers;

        $r1 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r2 = $r1[7];

        return $r2;
    }

    public java.lang.String getProxyAuthenticate()
    {
        android.net.http.Headers r0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: android.net.http.Headers;

        $r1 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r2 = $r1[8];

        return $r2;
    }

    public java.lang.String getContentDisposition()
    {
        android.net.http.Headers r0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: android.net.http.Headers;

        $r1 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r2 = $r1[9];

        return $r2;
    }

    public java.lang.String getAcceptRanges()
    {
        android.net.http.Headers r0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: android.net.http.Headers;

        $r1 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r2 = $r1[10];

        return $r2;
    }

    public java.lang.String getExpires()
    {
        android.net.http.Headers r0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: android.net.http.Headers;

        $r1 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r2 = $r1[11];

        return $r2;
    }

    public java.lang.String getCacheControl()
    {
        android.net.http.Headers r0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: android.net.http.Headers;

        $r1 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r2 = $r1[12];

        return $r2;
    }

    public java.lang.String getLastModified()
    {
        android.net.http.Headers r0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: android.net.http.Headers;

        $r1 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r2 = $r1[13];

        return $r2;
    }

    public java.lang.String getEtag()
    {
        android.net.http.Headers r0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: android.net.http.Headers;

        $r1 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r2 = $r1[14];

        return $r2;
    }

    public java.util.ArrayList getSetCookie()
    {
        android.net.http.Headers r0;
        java.util.ArrayList $r1;

        r0 := @this: android.net.http.Headers;

        $r1 = r0.<android.net.http.Headers: java.util.ArrayList cookies>;

        return $r1;
    }

    public java.lang.String getPragma()
    {
        android.net.http.Headers r0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: android.net.http.Headers;

        $r1 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r2 = $r1[16];

        return $r2;
    }

    public java.lang.String getRefresh()
    {
        android.net.http.Headers r0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: android.net.http.Headers;

        $r1 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r2 = $r1[17];

        return $r2;
    }

    public java.lang.String getXPermittedCrossDomainPolicies()
    {
        android.net.http.Headers r0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: android.net.http.Headers;

        $r1 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r2 = $r1[18];

        return $r2;
    }

    public void setContentLength(long)
    {
        android.net.http.Headers r0;
        long l0;

        r0 := @this: android.net.http.Headers;

        l0 := @parameter0: long;

        r0.<android.net.http.Headers: long contentLength> = l0;

        return;
    }

    public void setContentType(java.lang.String)
    {
        android.net.http.Headers r0;
        java.lang.String r1;
        java.lang.String[] $r2;

        r0 := @this: android.net.http.Headers;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r2[2] = r1;

        return;
    }

    public void setContentEncoding(java.lang.String)
    {
        android.net.http.Headers r0;
        java.lang.String r1;
        java.lang.String[] $r2;

        r0 := @this: android.net.http.Headers;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r2[3] = r1;

        return;
    }

    public void setLocation(java.lang.String)
    {
        android.net.http.Headers r0;
        java.lang.String r1;
        java.lang.String[] $r2;

        r0 := @this: android.net.http.Headers;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r2[5] = r1;

        return;
    }

    public void setWwwAuthenticate(java.lang.String)
    {
        android.net.http.Headers r0;
        java.lang.String r1;
        java.lang.String[] $r2;

        r0 := @this: android.net.http.Headers;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r2[7] = r1;

        return;
    }

    public void setProxyAuthenticate(java.lang.String)
    {
        android.net.http.Headers r0;
        java.lang.String r1;
        java.lang.String[] $r2;

        r0 := @this: android.net.http.Headers;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r2[8] = r1;

        return;
    }

    public void setContentDisposition(java.lang.String)
    {
        android.net.http.Headers r0;
        java.lang.String r1;
        java.lang.String[] $r2;

        r0 := @this: android.net.http.Headers;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r2[9] = r1;

        return;
    }

    public void setAcceptRanges(java.lang.String)
    {
        android.net.http.Headers r0;
        java.lang.String r1;
        java.lang.String[] $r2;

        r0 := @this: android.net.http.Headers;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r2[10] = r1;

        return;
    }

    public void setExpires(java.lang.String)
    {
        android.net.http.Headers r0;
        java.lang.String r1;
        java.lang.String[] $r2;

        r0 := @this: android.net.http.Headers;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r2[11] = r1;

        return;
    }

    public void setCacheControl(java.lang.String)
    {
        android.net.http.Headers r0;
        java.lang.String r1;
        java.lang.String[] $r2;

        r0 := @this: android.net.http.Headers;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r2[12] = r1;

        return;
    }

    public void setLastModified(java.lang.String)
    {
        android.net.http.Headers r0;
        java.lang.String r1;
        java.lang.String[] $r2;

        r0 := @this: android.net.http.Headers;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r2[13] = r1;

        return;
    }

    public void setEtag(java.lang.String)
    {
        android.net.http.Headers r0;
        java.lang.String r1;
        java.lang.String[] $r2;

        r0 := @this: android.net.http.Headers;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r2[14] = r1;

        return;
    }

    public void setXPermittedCrossDomainPolicies(java.lang.String)
    {
        android.net.http.Headers r0;
        java.lang.String r1;
        java.lang.String[] $r2;

        r0 := @this: android.net.http.Headers;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        $r2[18] = r1;

        return;
    }

    public void getHeaders(android.net.http.Headers$HeaderCallback)
    {
        android.net.http.Headers r0;
        android.net.http.Headers$HeaderCallback r1;
        int i0, i1, i2;
        java.lang.String r2, $r7, $r9, $r12;
        java.util.ArrayList $r3, $r4, $r6;
        java.lang.Object $r5, $r8;
        java.lang.String[] $r10, $r11;

        r0 := @this: android.net.http.Headers;

        r1 := @parameter0: android.net.http.Headers$HeaderCallback;

        i0 = 0;

     label1:
        if i0 >= 19 goto label3;

        $r10 = r0.<android.net.http.Headers: java.lang.String[] mHeaders>;

        r2 = $r10[i0];

        if r2 == null goto label2;

        $r11 = <android.net.http.Headers: java.lang.String[] sHeaderNames>;

        $r12 = $r11[i0];

        interfaceinvoke r1.<android.net.http.Headers$HeaderCallback: void header(java.lang.String,java.lang.String)>($r12, r2);

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $r3 = r0.<android.net.http.Headers: java.util.ArrayList mExtraHeaderNames>;

        i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i2 = 0;

     label4:
        if i2 >= i1 goto label5;

        $r4 = r0.<android.net.http.Headers: java.util.ArrayList mExtraHeaderNames>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r7 = (java.lang.String) $r5;

        $r6 = r0.<android.net.http.Headers: java.util.ArrayList mExtraHeaderValues>;

        $r8 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r9 = (java.lang.String) $r8;

        interfaceinvoke r1.<android.net.http.Headers$HeaderCallback: void header(java.lang.String,java.lang.String)>($r7, $r9);

        i2 = i2 + 1;

        goto label4;

     label5:
        return;
    }

    private void setConnectionType(org.apache.http.util.CharArrayBuffer, int)
    {
        android.net.http.Headers r0;
        org.apache.http.util.CharArrayBuffer r1;
        int i0;
        boolean $z0, $z1;

        r0 := @this: android.net.http.Headers;

        r1 := @parameter0: org.apache.http.util.CharArrayBuffer;

        i0 := @parameter1: int;

        $z0 = staticinvoke <android.net.http.CharArrayBuffers: boolean containsIgnoreCaseTrimmed(org.apache.http.util.CharArrayBuffer,int,java.lang.String)>(r1, i0, "Close");

        if $z0 == 0 goto label1;

        r0.<android.net.http.Headers: int connectionType> = 1;

        goto label2;

     label1:
        $z1 = staticinvoke <android.net.http.CharArrayBuffers: boolean containsIgnoreCaseTrimmed(org.apache.http.util.CharArrayBuffer,int,java.lang.String)>(r1, i0, "Keep-Alive");

        if $z1 == 0 goto label2;

        r0.<android.net.http.Headers: int connectionType> = 2;

     label2:
        return;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;

        <android.net.http.Headers: int HEADER_COUNT> = 19;

        <android.net.http.Headers: int IDX_X_PERMITTED_CROSS_DOMAIN_POLICIES> = 18;

        <android.net.http.Headers: int IDX_REFRESH> = 17;

        <android.net.http.Headers: int IDX_PRAGMA> = 16;

        <android.net.http.Headers: int IDX_SET_COOKIE> = 15;

        <android.net.http.Headers: int IDX_ETAG> = 14;

        <android.net.http.Headers: int IDX_LAST_MODIFIED> = 13;

        <android.net.http.Headers: int IDX_CACHE_CONTROL> = 12;

        <android.net.http.Headers: int IDX_EXPIRES> = 11;

        <android.net.http.Headers: int IDX_ACCEPT_RANGES> = 10;

        <android.net.http.Headers: int IDX_CONTENT_DISPOSITION> = 9;

        <android.net.http.Headers: int IDX_PROXY_AUTHENTICATE> = 8;

        <android.net.http.Headers: int IDX_WWW_AUTHENTICATE> = 7;

        <android.net.http.Headers: int IDX_PROXY_CONNECTION> = 6;

        <android.net.http.Headers: int IDX_LOCATION> = 5;

        <android.net.http.Headers: int IDX_CONN_DIRECTIVE> = 4;

        <android.net.http.Headers: int IDX_CONTENT_ENCODING> = 3;

        <android.net.http.Headers: int IDX_CONTENT_TYPE> = 2;

        <android.net.http.Headers: int IDX_CONTENT_LEN> = 1;

        <android.net.http.Headers: int IDX_TRANSFER_ENCODING> = 0;

        <android.net.http.Headers: int HASH_X_PERMITTED_CROSS_DOMAIN_POLICIES> = -1345594014;

        <android.net.http.Headers: int HASH_REFRESH> = 1085444827;

        <android.net.http.Headers: int HASH_PRAGMA> = -980228804;

        <android.net.http.Headers: int HASH_SET_COOKIE> = 1237214767;

        <android.net.http.Headers: int HASH_ETAG> = 3123477;

        <android.net.http.Headers: int HASH_LAST_MODIFIED> = 150043680;

        <android.net.http.Headers: int HASH_CACHE_CONTROL> = -208775662;

        <android.net.http.Headers: int HASH_EXPIRES> = -1309235404;

        <android.net.http.Headers: int HASH_ACCEPT_RANGES> = 1397189435;

        <android.net.http.Headers: int HASH_CONTENT_DISPOSITION> = -1267267485;

        <android.net.http.Headers: int HASH_PROXY_AUTHENTICATE> = -301767724;

        <android.net.http.Headers: int HASH_WWW_AUTHENTICATE> = -243037365;

        <android.net.http.Headers: int HASH_PROXY_CONNECTION> = 285929373;

        <android.net.http.Headers: int HASH_LOCATION> = 1901043637;

        <android.net.http.Headers: int HASH_CONN_DIRECTIVE> = -775651618;

        <android.net.http.Headers: int HASH_CONTENT_ENCODING> = 2095084583;

        <android.net.http.Headers: int HASH_CONTENT_TYPE> = 785670158;

        <android.net.http.Headers: int HASH_CONTENT_LEN> = -1132779846;

        <android.net.http.Headers: int HASH_TRANSFER_ENCODING> = 1274458357;

        <android.net.http.Headers: java.lang.String X_PERMITTED_CROSS_DOMAIN_POLICIES> = "x-permitted-cross-domain-policies";

        <android.net.http.Headers: java.lang.String REFRESH> = "refresh";

        <android.net.http.Headers: java.lang.String PRAGMA> = "pragma";

        <android.net.http.Headers: java.lang.String SET_COOKIE> = "set-cookie";

        <android.net.http.Headers: java.lang.String ETAG> = "etag";

        <android.net.http.Headers: java.lang.String LAST_MODIFIED> = "last-modified";

        <android.net.http.Headers: java.lang.String CACHE_CONTROL> = "cache-control";

        <android.net.http.Headers: java.lang.String EXPIRES> = "expires";

        <android.net.http.Headers: java.lang.String ACCEPT_RANGES> = "accept-ranges";

        <android.net.http.Headers: java.lang.String CONTENT_DISPOSITION> = "content-disposition";

        <android.net.http.Headers: java.lang.String PROXY_AUTHENTICATE> = "proxy-authenticate";

        <android.net.http.Headers: java.lang.String WWW_AUTHENTICATE> = "www-authenticate";

        <android.net.http.Headers: java.lang.String PROXY_CONNECTION> = "proxy-connection";

        <android.net.http.Headers: java.lang.String LOCATION> = "location";

        <android.net.http.Headers: java.lang.String CONN_DIRECTIVE> = "connection";

        <android.net.http.Headers: java.lang.String CONTENT_ENCODING> = "content-encoding";

        <android.net.http.Headers: java.lang.String CONTENT_TYPE> = "content-type";

        <android.net.http.Headers: java.lang.String CONTENT_LEN> = "content-length";

        <android.net.http.Headers: java.lang.String TRANSFER_ENCODING> = "transfer-encoding";

        <android.net.http.Headers: long NO_CONTENT_LENGTH> = -1L;

        <android.net.http.Headers: long NO_TRANSFER_ENCODING> = 0L;

        <android.net.http.Headers: int NO_CONN_TYPE> = 0;

        <android.net.http.Headers: int CONN_KEEP_ALIVE> = 2;

        <android.net.http.Headers: int CONN_CLOSE> = 1;

        <android.net.http.Headers: java.lang.String LOGTAG> = "Http";

        $r0 = newarray (java.lang.String)[19];

        $r0[0] = "transfer-encoding";

        $r0[1] = "content-length";

        $r0[2] = "content-type";

        $r0[3] = "content-encoding";

        $r0[4] = "connection";

        $r0[5] = "location";

        $r0[6] = "proxy-connection";

        $r0[7] = "www-authenticate";

        $r0[8] = "proxy-authenticate";

        $r0[9] = "content-disposition";

        $r0[10] = "accept-ranges";

        $r0[11] = "expires";

        $r0[12] = "cache-control";

        $r0[13] = "last-modified";

        $r0[14] = "etag";

        $r0[15] = "set-cookie";

        $r0[16] = "pragma";

        $r0[17] = "refresh";

        $r0[18] = "x-permitted-cross-domain-policies";

        <android.net.http.Headers: java.lang.String[] sHeaderNames> = $r0;

        return;
    }
}
