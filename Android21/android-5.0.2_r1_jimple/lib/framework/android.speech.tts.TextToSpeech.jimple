public class android.speech.tts.TextToSpeech extends java.lang.Object
{
    private static final java.lang.String TAG;
    public static final int SUCCESS;
    public static final int ERROR;
    public static final int STOPPED;
    public static final int ERROR_SYNTHESIS;
    public static final int ERROR_SERVICE;
    public static final int ERROR_OUTPUT;
    public static final int ERROR_NETWORK;
    public static final int ERROR_NETWORK_TIMEOUT;
    public static final int ERROR_INVALID_REQUEST;
    public static final int ERROR_NOT_INSTALLED_YET;
    public static final int QUEUE_FLUSH;
    public static final int QUEUE_ADD;
    static final int QUEUE_DESTROY;
    public static final int LANG_COUNTRY_VAR_AVAILABLE;
    public static final int LANG_COUNTRY_AVAILABLE;
    public static final int LANG_AVAILABLE;
    public static final int LANG_MISSING_DATA;
    public static final int LANG_NOT_SUPPORTED;
    public static final java.lang.String ACTION_TTS_QUEUE_PROCESSING_COMPLETED;
    private final android.content.Context mContext;
    private android.speech.tts.TextToSpeech$Connection mConnectingServiceConnection;
    private android.speech.tts.TextToSpeech$Connection mServiceConnection;
    private android.speech.tts.TextToSpeech$OnInitListener mInitListener;
    private volatile android.speech.tts.UtteranceProgressListener mUtteranceProgressListener;
    private final java.lang.Object mStartLock;
    private java.lang.String mRequestedEngine;
    private final boolean mUseFallback;
    private final java.util.Map mEarcons;
    private final java.util.Map mUtterances;
    private final android.os.Bundle mParams;
    private final android.speech.tts.TtsEngines mEnginesHelper;
    private volatile java.lang.String mCurrentEngine;

    public void <init>(android.content.Context, android.speech.tts.TextToSpeech$OnInitListener)
    {
        android.speech.tts.TextToSpeech r0;
        android.content.Context r1;
        android.speech.tts.TextToSpeech$OnInitListener r2;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.speech.tts.TextToSpeech$OnInitListener;

        specialinvoke r0.<android.speech.tts.TextToSpeech: void <init>(android.content.Context,android.speech.tts.TextToSpeech$OnInitListener,java.lang.String)>(r1, r2, null);

        return;
    }

    public void <init>(android.content.Context, android.speech.tts.TextToSpeech$OnInitListener, java.lang.String)
    {
        android.speech.tts.TextToSpeech r0;
        android.content.Context r1;
        android.speech.tts.TextToSpeech$OnInitListener r2;
        java.lang.String r3;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.speech.tts.TextToSpeech$OnInitListener;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<android.speech.tts.TextToSpeech: void <init>(android.content.Context,android.speech.tts.TextToSpeech$OnInitListener,java.lang.String,java.lang.String,boolean)>(r1, r2, r3, null, 1);

        return;
    }

    public void <init>(android.content.Context, android.speech.tts.TextToSpeech$OnInitListener, java.lang.String, java.lang.String, boolean)
    {
        android.speech.tts.TextToSpeech r0;
        android.content.Context r1, $r10;
        android.speech.tts.TextToSpeech$OnInitListener r2;
        java.lang.String r3, r4;
        boolean z0;
        java.lang.Object $r5;
        android.os.Bundle $r6;
        java.util.HashMap $r7, $r8;
        android.speech.tts.TtsEngines $r9;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.speech.tts.TextToSpeech$OnInitListener;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        r0.<android.speech.tts.TextToSpeech: java.lang.Object mStartLock> = $r5;

        $r6 = new android.os.Bundle;

        specialinvoke $r6.<android.os.Bundle: void <init>()>();

        r0.<android.speech.tts.TextToSpeech: android.os.Bundle mParams> = $r6;

        r0.<android.speech.tts.TextToSpeech: java.lang.String mCurrentEngine> = null;

        r0.<android.speech.tts.TextToSpeech: android.content.Context mContext> = r1;

        r0.<android.speech.tts.TextToSpeech: android.speech.tts.TextToSpeech$OnInitListener mInitListener> = r2;

        r0.<android.speech.tts.TextToSpeech: java.lang.String mRequestedEngine> = r3;

        r0.<android.speech.tts.TextToSpeech: boolean mUseFallback> = z0;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r0.<android.speech.tts.TextToSpeech: java.util.Map mEarcons> = $r7;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        r0.<android.speech.tts.TextToSpeech: java.util.Map mUtterances> = $r8;

        r0.<android.speech.tts.TextToSpeech: android.speech.tts.UtteranceProgressListener mUtteranceProgressListener> = null;

        $r9 = new android.speech.tts.TtsEngines;

        $r10 = r0.<android.speech.tts.TextToSpeech: android.content.Context mContext>;

        specialinvoke $r9.<android.speech.tts.TtsEngines: void <init>(android.content.Context)>($r10);

        r0.<android.speech.tts.TextToSpeech: android.speech.tts.TtsEngines mEnginesHelper> = $r9;

        specialinvoke r0.<android.speech.tts.TextToSpeech: int initTts()>();

        return;
    }

    private java.lang.Object runActionNoReconnect(android.speech.tts.TextToSpeech$Action, java.lang.Object, java.lang.String, boolean)
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts.TextToSpeech$Action r1;
        java.lang.Object r2, $r4;
        java.lang.String r3;
        boolean z0;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: android.speech.tts.TextToSpeech$Action;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        $r4 = specialinvoke r0.<android.speech.tts.TextToSpeech: java.lang.Object runAction(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String,boolean,boolean)>(r1, r2, r3, 0, z0);

        return $r4;
    }

    private java.lang.Object runAction(android.speech.tts.TextToSpeech$Action, java.lang.Object, java.lang.String)
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts.TextToSpeech$Action r1;
        java.lang.Object r2, $r4;
        java.lang.String r3;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: android.speech.tts.TextToSpeech$Action;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.String;

        $r4 = specialinvoke r0.<android.speech.tts.TextToSpeech: java.lang.Object runAction(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String,boolean,boolean)>(r1, r2, r3, 1, 1);

        return $r4;
    }

    private java.lang.Object runAction(android.speech.tts.TextToSpeech$Action, java.lang.Object, java.lang.String, boolean, boolean)
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts.TextToSpeech$Action r1;
        java.lang.Object r2, r4, $r6, $r9;
        java.lang.String r3, $r12;
        boolean z0, z1;
        java.lang.Throwable r5, $r14;
        android.speech.tts.TextToSpeech$Connection $r7, $r8;
        java.lang.StringBuilder $r10, $r11, $r13;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: android.speech.tts.TextToSpeech$Action;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        $r6 = r0.<android.speech.tts.TextToSpeech: java.lang.Object mStartLock>;

        r4 = $r6;

        entermonitor $r6;

     label1:
        $r7 = r0.<android.speech.tts.TextToSpeech: android.speech.tts.TextToSpeech$Connection mServiceConnection>;

        if $r7 != null goto label3;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed: not bound to TTS engine");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TextToSpeech", $r12);

        exitmonitor r4;

     label2:
        return r2;

     label3:
        $r8 = r0.<android.speech.tts.TextToSpeech: android.speech.tts.TextToSpeech$Connection mServiceConnection>;

        $r9 = virtualinvoke $r8.<android.speech.tts.TextToSpeech$Connection: java.lang.Object runAction(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String,boolean,boolean)>(r1, r2, r3, z0, z1);

        exitmonitor r4;

     label4:
        return $r9;

     label5:
        $r14 := @caughtexception;

        r5 = $r14;

        exitmonitor r4;

     label6:
        throw r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private int initTts()
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.String r1, r2, $r3, $r5, $r6, $r7, $r10, $r12, $r14, $r15;
        android.speech.tts.TtsEngines $r4, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.StringBuilder $r9, $r11, $r13;

        r0 := @this: android.speech.tts.TextToSpeech;

        $r3 = r0.<android.speech.tts.TextToSpeech: java.lang.String mRequestedEngine>;

        if $r3 == null goto label3;

        $r8 = r0.<android.speech.tts.TextToSpeech: android.speech.tts.TtsEngines mEnginesHelper>;

        $r7 = r0.<android.speech.tts.TextToSpeech: java.lang.String mRequestedEngine>;

        $z6 = virtualinvoke $r8.<android.speech.tts.TtsEngines: boolean isEngineInstalled(java.lang.String)>($r7);

        if $z6 == 0 goto label2;

        $r14 = r0.<android.speech.tts.TextToSpeech: java.lang.String mRequestedEngine>;

        $z8 = specialinvoke r0.<android.speech.tts.TextToSpeech: boolean connectToEngine(java.lang.String)>($r14);

        if $z8 == 0 goto label1;

        $r15 = r0.<android.speech.tts.TextToSpeech: java.lang.String mRequestedEngine>;

        r0.<android.speech.tts.TextToSpeech: java.lang.String mCurrentEngine> = $r15;

        return 0;

     label1:
        $z7 = r0.<android.speech.tts.TextToSpeech: boolean mUseFallback>;

        if $z7 != 0 goto label3;

        r0.<android.speech.tts.TextToSpeech: java.lang.String mCurrentEngine> = null;

        specialinvoke r0.<android.speech.tts.TextToSpeech: void dispatchOnInit(int)>(-1);

        return -1;

     label2:
        $z5 = r0.<android.speech.tts.TextToSpeech: boolean mUseFallback>;

        if $z5 != 0 goto label3;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested engine not installed: ");

        $r10 = r0.<android.speech.tts.TextToSpeech: java.lang.String mRequestedEngine>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("TextToSpeech", $r12);

        r0.<android.speech.tts.TextToSpeech: java.lang.String mCurrentEngine> = null;

        specialinvoke r0.<android.speech.tts.TextToSpeech: void dispatchOnInit(int)>(-1);

        return -1;

     label3:
        r1 = virtualinvoke r0.<android.speech.tts.TextToSpeech: java.lang.String getDefaultEngine()>();

        if r1 == null goto label4;

        $r6 = r0.<android.speech.tts.TextToSpeech: java.lang.String mRequestedEngine>;

        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z3 != 0 goto label4;

        $z4 = specialinvoke r0.<android.speech.tts.TextToSpeech: boolean connectToEngine(java.lang.String)>(r1);

        if $z4 == 0 goto label4;

        r0.<android.speech.tts.TextToSpeech: java.lang.String mCurrentEngine> = r1;

        return 0;

     label4:
        $r4 = r0.<android.speech.tts.TextToSpeech: android.speech.tts.TtsEngines mEnginesHelper>;

        r2 = virtualinvoke $r4.<android.speech.tts.TtsEngines: java.lang.String getHighestRankedEngineName()>();

        if r2 == null goto label5;

        $r5 = r0.<android.speech.tts.TextToSpeech: java.lang.String mRequestedEngine>;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label5;

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 != 0 goto label5;

        $z2 = specialinvoke r0.<android.speech.tts.TextToSpeech: boolean connectToEngine(java.lang.String)>(r2);

        if $z2 == 0 goto label5;

        r0.<android.speech.tts.TextToSpeech: java.lang.String mCurrentEngine> = r2;

        return 0;

     label5:
        r0.<android.speech.tts.TextToSpeech: java.lang.String mCurrentEngine> = null;

        specialinvoke r0.<android.speech.tts.TextToSpeech: void dispatchOnInit(int)>(-1);

        return -1;
    }

    private boolean connectToEngine(java.lang.String)
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.String r1, $r11, $r15;
        android.speech.tts.TextToSpeech$Connection r2, $r4;
        android.content.Intent r3, $r5;
        boolean z0;
        android.content.Context $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r12, $r13, $r14;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: java.lang.String;

        $r4 = new android.speech.tts.TextToSpeech$Connection;

        specialinvoke $r4.<android.speech.tts.TextToSpeech$Connection: void <init>(android.speech.tts.TextToSpeech,android.speech.tts.TextToSpeech$1)>(r0, null);

        r2 = $r4;

        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.TTS_SERVICE");

        r3 = $r5;

        virtualinvoke r3.<android.content.Intent: android.content.Intent setPackage(java.lang.String)>(r1);

        $r7 = r0.<android.speech.tts.TextToSpeech: android.content.Context mContext>;

        z0 = virtualinvoke $r7.<android.content.Context: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)>(r3, r2, 1);

        if z0 != 0 goto label1;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to bind to ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TextToSpeech", $r15);

        return 0;

     label1:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sucessfully bound to ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("TextToSpeech", $r11);

        r0.<android.speech.tts.TextToSpeech: android.speech.tts.TextToSpeech$Connection mConnectingServiceConnection> = r2;

        return 1;
    }

    private void dispatchOnInit(int)
    {
        android.speech.tts.TextToSpeech r0;
        int i0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r6;
        android.speech.tts.TextToSpeech$OnInitListener $r4, $r5;

        r0 := @this: android.speech.tts.TextToSpeech;

        i0 := @parameter0: int;

        $r3 = r0.<android.speech.tts.TextToSpeech: java.lang.Object mStartLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<android.speech.tts.TextToSpeech: android.speech.tts.TextToSpeech$OnInitListener mInitListener>;

        if $r4 == null goto label2;

        $r5 = r0.<android.speech.tts.TextToSpeech: android.speech.tts.TextToSpeech$OnInitListener mInitListener>;

        interfaceinvoke $r5.<android.speech.tts.TextToSpeech$OnInitListener: void onInit(int)>(i0);

        r0.<android.speech.tts.TextToSpeech: android.speech.tts.TextToSpeech$OnInitListener mInitListener> = null;

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private android.os.IBinder getCallerIdentity()
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts.TextToSpeech$Connection $r1;
        android.os.IBinder $r2;

        r0 := @this: android.speech.tts.TextToSpeech;

        $r1 = r0.<android.speech.tts.TextToSpeech: android.speech.tts.TextToSpeech$Connection mServiceConnection>;

        $r2 = virtualinvoke $r1.<android.speech.tts.TextToSpeech$Connection: android.os.IBinder getCallerIdentity()>();

        return $r2;
    }

    public void shutdown()
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r9;
        android.speech.tts.TextToSpeech$Connection $r4, $r7;
        android.speech.tts.TextToSpeech$1 $r5;
        android.content.Context $r8;

        r0 := @this: android.speech.tts.TextToSpeech;

        $r3 = r0.<android.speech.tts.TextToSpeech: java.lang.Object mStartLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<android.speech.tts.TextToSpeech: android.speech.tts.TextToSpeech$Connection mConnectingServiceConnection>;

        if $r4 == null goto label3;

        $r8 = r0.<android.speech.tts.TextToSpeech: android.content.Context mContext>;

        $r7 = r0.<android.speech.tts.TextToSpeech: android.speech.tts.TextToSpeech$Connection mConnectingServiceConnection>;

        virtualinvoke $r8.<android.content.Context: void unbindService(android.content.ServiceConnection)>($r7);

        r0.<android.speech.tts.TextToSpeech: android.speech.tts.TextToSpeech$Connection mConnectingServiceConnection> = null;

        exitmonitor r1;

     label2:
        return;

     label3:
        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r9 := @caughtexception;

        r2 = $r9;

        exitmonitor r1;

     label6:
        throw r2;

     label7:
        $r5 = new android.speech.tts.TextToSpeech$1;

        specialinvoke $r5.<android.speech.tts.TextToSpeech$1: void <init>(android.speech.tts.TextToSpeech)>(r0);

        specialinvoke r0.<android.speech.tts.TextToSpeech: java.lang.Object runActionNoReconnect(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String,boolean)>($r5, null, "shutdown", 0);

        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public int addSpeech(java.lang.String, java.lang.String, int)
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.String r1, r2;
        int i0;
        java.lang.Object r3, $r5;
        java.lang.Throwable r4, $r9;
        java.util.Map $r6;
        android.net.Uri $r7;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r5 = r0.<android.speech.tts.TextToSpeech: java.lang.Object mStartLock>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<android.speech.tts.TextToSpeech: java.util.Map mUtterances>;

        $r7 = specialinvoke r0.<android.speech.tts.TextToSpeech: android.net.Uri makeResourceUri(java.lang.String,int)>(r2, i0);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r7);

        exitmonitor r3;

     label2:
        return 0;

     label3:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r3;

     label4:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int addSpeech(java.lang.CharSequence, java.lang.String, int)
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.CharSequence r1;
        java.lang.String r2;
        int i0;
        java.lang.Object r3, $r5;
        java.lang.Throwable r4, $r9;
        java.util.Map $r6;
        android.net.Uri $r7;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r5 = r0.<android.speech.tts.TextToSpeech: java.lang.Object mStartLock>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<android.speech.tts.TextToSpeech: java.util.Map mUtterances>;

        $r7 = specialinvoke r0.<android.speech.tts.TextToSpeech: android.net.Uri makeResourceUri(java.lang.String,int)>(r2, i0);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r7);

        exitmonitor r3;

     label2:
        return 0;

     label3:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r3;

     label4:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int addSpeech(java.lang.String, java.lang.String)
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.String r1, r2;
        java.lang.Object r3, $r5;
        java.lang.Throwable r4, $r9;
        java.util.Map $r6;
        android.net.Uri $r7;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r5 = r0.<android.speech.tts.TextToSpeech: java.lang.Object mStartLock>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<android.speech.tts.TextToSpeech: java.util.Map mUtterances>;

        $r7 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r2);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r7);

        exitmonitor r3;

     label2:
        return 0;

     label3:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r3;

     label4:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int addSpeech(java.lang.CharSequence, java.io.File)
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.CharSequence r1;
        java.io.File r2;
        java.lang.Object r3, $r5;
        java.lang.Throwable r4, $r9;
        java.util.Map $r6;
        android.net.Uri $r7;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: java.io.File;

        $r5 = r0.<android.speech.tts.TextToSpeech: java.lang.Object mStartLock>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<android.speech.tts.TextToSpeech: java.util.Map mUtterances>;

        $r7 = staticinvoke <android.net.Uri: android.net.Uri fromFile(java.io.File)>(r2);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r7);

        exitmonitor r3;

     label2:
        return 0;

     label3:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r3;

     label4:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int addEarcon(java.lang.String, java.lang.String, int)
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.String r1, r2;
        int i0;
        java.lang.Object r3, $r5;
        java.lang.Throwable r4, $r9;
        java.util.Map $r6;
        android.net.Uri $r7;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r5 = r0.<android.speech.tts.TextToSpeech: java.lang.Object mStartLock>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<android.speech.tts.TextToSpeech: java.util.Map mEarcons>;

        $r7 = specialinvoke r0.<android.speech.tts.TextToSpeech: android.net.Uri makeResourceUri(java.lang.String,int)>(r2, i0);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r7);

        exitmonitor r3;

     label2:
        return 0;

     label3:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r3;

     label4:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int addEarcon(java.lang.String, java.lang.String)
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.String r1, r2;
        java.lang.Object r3, $r5;
        java.lang.Throwable r4, $r9;
        java.util.Map $r6;
        android.net.Uri $r7;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r5 = r0.<android.speech.tts.TextToSpeech: java.lang.Object mStartLock>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<android.speech.tts.TextToSpeech: java.util.Map mEarcons>;

        $r7 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r2);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r7);

        exitmonitor r3;

     label2:
        return 0;

     label3:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r3;

     label4:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int addEarcon(java.lang.String, java.io.File)
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.String r1;
        java.io.File r2;
        java.lang.Object r3, $r5;
        java.lang.Throwable r4, $r9;
        java.util.Map $r6;
        android.net.Uri $r7;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.File;

        $r5 = r0.<android.speech.tts.TextToSpeech: java.lang.Object mStartLock>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<android.speech.tts.TextToSpeech: java.util.Map mEarcons>;

        $r7 = staticinvoke <android.net.Uri: android.net.Uri fromFile(java.io.File)>(r2);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r7);

        exitmonitor r3;

     label2:
        return 0;

     label3:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r3;

     label4:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private android.net.Uri makeResourceUri(java.lang.String, int)
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.String r1, $r5;
        int i0;
        android.net.Uri$Builder $r2, $r3, $r4, $r6;
        android.net.Uri $r7;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = new android.net.Uri$Builder;

        specialinvoke $r2.<android.net.Uri$Builder: void <init>()>();

        $r3 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("android.resource");

        $r4 = virtualinvoke $r3.<android.net.Uri$Builder: android.net.Uri$Builder encodedAuthority(java.lang.String)>(r1);

        $r5 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        $r6 = virtualinvoke $r4.<android.net.Uri$Builder: android.net.Uri$Builder appendEncodedPath(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r7;
    }

    public int speak(java.lang.CharSequence, int, android.os.Bundle, java.lang.String)
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.CharSequence r1;
        int i0, $i1;
        android.os.Bundle r2;
        java.lang.String r3;
        android.speech.tts.TextToSpeech$2 $r4;
        java.lang.Integer $r5, $r7;
        java.lang.Object $r6;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        r3 := @parameter3: java.lang.String;

        $r4 = new android.speech.tts.TextToSpeech$2;

        specialinvoke $r4.<android.speech.tts.TextToSpeech$2: void <init>(android.speech.tts.TextToSpeech,java.lang.CharSequence,int,android.os.Bundle,java.lang.String)>(r0, r1, i0, r2, r3);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        $r6 = specialinvoke r0.<android.speech.tts.TextToSpeech: java.lang.Object runAction(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String)>($r4, $r5, "speak");

        $r7 = (java.lang.Integer) $r6;

        $i1 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        return $i1;
    }

    public int speak(java.lang.String, int, java.util.HashMap)
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.String r1, $r5;
        int i0, $i1;
        java.util.HashMap r2;
        android.os.Bundle $r3;
        java.lang.Object $r4;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.util.HashMap;

        $r3 = specialinvoke r0.<android.speech.tts.TextToSpeech: android.os.Bundle convertParamsHashMaptoBundle(java.util.HashMap)>(r2);

        if r2 != null goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r4 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("utteranceId");

        $r5 = (java.lang.String) $r4;

     label2:
        $i1 = virtualinvoke r0.<android.speech.tts.TextToSpeech: int speak(java.lang.CharSequence,int,android.os.Bundle,java.lang.String)>(r1, i0, $r3, $r5);

        return $i1;
    }

    public int playEarcon(java.lang.String, int, android.os.Bundle, java.lang.String)
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.String r1, r3;
        int i0, $i1;
        android.os.Bundle r2;
        android.speech.tts.TextToSpeech$3 $r4;
        java.lang.Integer $r5, $r7;
        java.lang.Object $r6;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        r3 := @parameter3: java.lang.String;

        $r4 = new android.speech.tts.TextToSpeech$3;

        specialinvoke $r4.<android.speech.tts.TextToSpeech$3: void <init>(android.speech.tts.TextToSpeech,java.lang.String,int,android.os.Bundle,java.lang.String)>(r0, r1, i0, r2, r3);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        $r6 = specialinvoke r0.<android.speech.tts.TextToSpeech: java.lang.Object runAction(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String)>($r4, $r5, "playEarcon");

        $r7 = (java.lang.Integer) $r6;

        $i1 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        return $i1;
    }

    public int playEarcon(java.lang.String, int, java.util.HashMap)
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.String r1, $r5;
        int i0, $i1;
        java.util.HashMap r2;
        android.os.Bundle $r3;
        java.lang.Object $r4;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.util.HashMap;

        $r3 = specialinvoke r0.<android.speech.tts.TextToSpeech: android.os.Bundle convertParamsHashMaptoBundle(java.util.HashMap)>(r2);

        if r2 != null goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r4 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("utteranceId");

        $r5 = (java.lang.String) $r4;

     label2:
        $i1 = virtualinvoke r0.<android.speech.tts.TextToSpeech: int playEarcon(java.lang.String,int,android.os.Bundle,java.lang.String)>(r1, i0, $r3, $r5);

        return $i1;
    }

    public int playSilentUtterance(long, int, java.lang.String)
    {
        android.speech.tts.TextToSpeech r0;
        long l0;
        int i1, $i2;
        java.lang.String r1;
        android.speech.tts.TextToSpeech$4 $r2;
        java.lang.Integer $r3, $r5;
        java.lang.Object $r4;

        r0 := @this: android.speech.tts.TextToSpeech;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $r2 = new android.speech.tts.TextToSpeech$4;

        specialinvoke $r2.<android.speech.tts.TextToSpeech$4: void <init>(android.speech.tts.TextToSpeech,long,int,java.lang.String)>(r0, l0, i1, r1);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        $r4 = specialinvoke r0.<android.speech.tts.TextToSpeech: java.lang.Object runAction(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String)>($r2, $r3, "playSilentUtterance");

        $r5 = (java.lang.Integer) $r4;

        $i2 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        return $i2;
    }

    public int playSilence(long, int, java.util.HashMap)
    {
        android.speech.tts.TextToSpeech r0;
        long l0;
        int i1, $i2;
        java.util.HashMap r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @this: android.speech.tts.TextToSpeech;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r1 := @parameter2: java.util.HashMap;

        if r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = virtualinvoke r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("utteranceId");

        $r3 = (java.lang.String) $r2;

     label2:
        $i2 = virtualinvoke r0.<android.speech.tts.TextToSpeech: int playSilentUtterance(long,int,java.lang.String)>(l0, i1, $r3);

        return $i2;
    }

    public java.util.Set getFeatures(java.util.Locale)
    {
        android.speech.tts.TextToSpeech r0;
        java.util.Locale r1;
        android.speech.tts.TextToSpeech$5 $r2;
        java.lang.Object $r3;
        java.util.Set $r4;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: java.util.Locale;

        $r2 = new android.speech.tts.TextToSpeech$5;

        specialinvoke $r2.<android.speech.tts.TextToSpeech$5: void <init>(android.speech.tts.TextToSpeech,java.util.Locale)>(r0, r1);

        $r3 = specialinvoke r0.<android.speech.tts.TextToSpeech: java.lang.Object runAction(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String)>($r2, null, "getFeatures");

        $r4 = (java.util.Set) $r3;

        return $r4;
    }

    public boolean isSpeaking()
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts.TextToSpeech$6 $r1;
        java.lang.Boolean $r2, $r4;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: android.speech.tts.TextToSpeech;

        $r1 = new android.speech.tts.TextToSpeech$6;

        specialinvoke $r1.<android.speech.tts.TextToSpeech$6: void <init>(android.speech.tts.TextToSpeech)>(r0);

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r3 = specialinvoke r0.<android.speech.tts.TextToSpeech: java.lang.Object runAction(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String)>($r1, $r2, "isSpeaking");

        $r4 = (java.lang.Boolean) $r3;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    public int stop()
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts.TextToSpeech$7 $r1;
        java.lang.Integer $r2, $r4;
        java.lang.Object $r3;
        int $i0;

        r0 := @this: android.speech.tts.TextToSpeech;

        $r1 = new android.speech.tts.TextToSpeech$7;

        specialinvoke $r1.<android.speech.tts.TextToSpeech$7: void <init>(android.speech.tts.TextToSpeech)>(r0);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        $r3 = specialinvoke r0.<android.speech.tts.TextToSpeech: java.lang.Object runAction(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String)>($r1, $r2, "stop");

        $r4 = (java.lang.Integer) $r3;

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public int setSpeechRate(float)
    {
        android.speech.tts.TextToSpeech r0;
        float f0, $f1;
        int i0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        byte $b1;
        android.os.Bundle $r4;

        r0 := @this: android.speech.tts.TextToSpeech;

        f0 := @parameter0: float;

        $b1 = f0 cmpl 0.0F;

        if $b1 <= 0 goto label6;

        $f1 = f0 * 100.0F;

        i0 = (int) $f1;

        if i0 <= 0 goto label6;

        $r3 = r0.<android.speech.tts.TextToSpeech: java.lang.Object mStartLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<android.speech.tts.TextToSpeech: android.os.Bundle mParams>;

        virtualinvoke $r4.<android.os.Bundle: void putInt(java.lang.String,int)>("rate", i0);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return 0;

     label6:
        return -1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int setPitch(float)
    {
        android.speech.tts.TextToSpeech r0;
        float f0, $f1;
        int i0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r5;
        byte $b1;
        android.os.Bundle $r4;

        r0 := @this: android.speech.tts.TextToSpeech;

        f0 := @parameter0: float;

        $b1 = f0 cmpl 0.0F;

        if $b1 <= 0 goto label6;

        $f1 = f0 * 100.0F;

        i0 = (int) $f1;

        if i0 <= 0 goto label6;

        $r3 = r0.<android.speech.tts.TextToSpeech: java.lang.Object mStartLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<android.speech.tts.TextToSpeech: android.os.Bundle mParams>;

        virtualinvoke $r4.<android.os.Bundle: void putInt(java.lang.String,int)>("pitch", i0);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return 0;

     label6:
        return -1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int setAudioAttributes(android.media.AudioAttributes)
    {
        android.speech.tts.TextToSpeech r0;
        android.media.AudioAttributes r1;
        java.lang.Object r2, $r4;
        java.lang.Throwable r3, $r6;
        android.os.Bundle $r5;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: android.media.AudioAttributes;

        if r1 == null goto label6;

        $r4 = r0.<android.speech.tts.TextToSpeech: java.lang.Object mStartLock>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<android.speech.tts.TextToSpeech: android.os.Bundle mParams>;

        virtualinvoke $r5.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("audioAttributes", r1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return 0;

     label6:
        return -1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.String getCurrentEngine()
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.String $r1;

        r0 := @this: android.speech.tts.TextToSpeech;

        $r1 = r0.<android.speech.tts.TextToSpeech: java.lang.String mCurrentEngine>;

        return $r1;
    }

    public java.util.Locale getDefaultLanguage()
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts.TextToSpeech$8 $r1;
        java.lang.Object $r2;
        java.util.Locale $r3;

        r0 := @this: android.speech.tts.TextToSpeech;

        $r1 = new android.speech.tts.TextToSpeech$8;

        specialinvoke $r1.<android.speech.tts.TextToSpeech$8: void <init>(android.speech.tts.TextToSpeech)>(r0);

        $r2 = specialinvoke r0.<android.speech.tts.TextToSpeech: java.lang.Object runAction(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String)>($r1, null, "getDefaultLanguage");

        $r3 = (java.util.Locale) $r2;

        return $r3;
    }

    public int setLanguage(java.util.Locale)
    {
        android.speech.tts.TextToSpeech r0;
        java.util.Locale r1;
        android.speech.tts.TextToSpeech$9 $r2;
        java.lang.Integer $r3, $r5;
        java.lang.Object $r4;
        int $i0;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: java.util.Locale;

        $r2 = new android.speech.tts.TextToSpeech$9;

        specialinvoke $r2.<android.speech.tts.TextToSpeech$9: void <init>(android.speech.tts.TextToSpeech,java.util.Locale)>(r0, r1);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-2);

        $r4 = specialinvoke r0.<android.speech.tts.TextToSpeech: java.lang.Object runAction(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String)>($r2, $r3, "setLanguage");

        $r5 = (java.lang.Integer) $r4;

        $i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public java.util.Locale getLanguage()
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts.TextToSpeech$10 $r1;
        java.lang.Object $r2;
        java.util.Locale $r3;

        r0 := @this: android.speech.tts.TextToSpeech;

        $r1 = new android.speech.tts.TextToSpeech$10;

        specialinvoke $r1.<android.speech.tts.TextToSpeech$10: void <init>(android.speech.tts.TextToSpeech)>(r0);

        $r2 = specialinvoke r0.<android.speech.tts.TextToSpeech: java.lang.Object runAction(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String)>($r1, null, "getLanguage");

        $r3 = (java.util.Locale) $r2;

        return $r3;
    }

    public java.util.Set getAvailableLanguages()
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts.TextToSpeech$11 $r1;
        java.lang.Object $r2;
        java.util.Set $r3;

        r0 := @this: android.speech.tts.TextToSpeech;

        $r1 = new android.speech.tts.TextToSpeech$11;

        specialinvoke $r1.<android.speech.tts.TextToSpeech$11: void <init>(android.speech.tts.TextToSpeech)>(r0);

        $r2 = specialinvoke r0.<android.speech.tts.TextToSpeech: java.lang.Object runAction(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String)>($r1, null, "getAvailableLanguages");

        $r3 = (java.util.Set) $r2;

        return $r3;
    }

    public java.util.Set getVoices()
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts.TextToSpeech$12 $r1;
        java.lang.Object $r2;
        java.util.Set $r3;

        r0 := @this: android.speech.tts.TextToSpeech;

        $r1 = new android.speech.tts.TextToSpeech$12;

        specialinvoke $r1.<android.speech.tts.TextToSpeech$12: void <init>(android.speech.tts.TextToSpeech)>(r0);

        $r2 = specialinvoke r0.<android.speech.tts.TextToSpeech: java.lang.Object runAction(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String)>($r1, null, "getVoices");

        $r3 = (java.util.Set) $r2;

        return $r3;
    }

    public int setVoice(android.speech.tts.Voice)
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts.Voice r1;
        android.speech.tts.TextToSpeech$13 $r2;
        java.lang.Integer $r3, $r5;
        java.lang.Object $r4;
        int $i0;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: android.speech.tts.Voice;

        $r2 = new android.speech.tts.TextToSpeech$13;

        specialinvoke $r2.<android.speech.tts.TextToSpeech$13: void <init>(android.speech.tts.TextToSpeech,android.speech.tts.Voice)>(r0, r1);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-2);

        $r4 = specialinvoke r0.<android.speech.tts.TextToSpeech: java.lang.Object runAction(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String)>($r2, $r3, "setVoice");

        $r5 = (java.lang.Integer) $r4;

        $i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public android.speech.tts.Voice getVoice()
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts.TextToSpeech$14 $r1;
        java.lang.Object $r2;
        android.speech.tts.Voice $r3;

        r0 := @this: android.speech.tts.TextToSpeech;

        $r1 = new android.speech.tts.TextToSpeech$14;

        specialinvoke $r1.<android.speech.tts.TextToSpeech$14: void <init>(android.speech.tts.TextToSpeech)>(r0);

        $r2 = specialinvoke r0.<android.speech.tts.TextToSpeech: java.lang.Object runAction(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String)>($r1, null, "getVoice");

        $r3 = (android.speech.tts.Voice) $r2;

        return $r3;
    }

    public android.speech.tts.Voice getDefaultVoice()
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts.TextToSpeech$15 $r1;
        java.lang.Object $r2;
        android.speech.tts.Voice $r3;

        r0 := @this: android.speech.tts.TextToSpeech;

        $r1 = new android.speech.tts.TextToSpeech$15;

        specialinvoke $r1.<android.speech.tts.TextToSpeech$15: void <init>(android.speech.tts.TextToSpeech)>(r0);

        $r2 = specialinvoke r0.<android.speech.tts.TextToSpeech: java.lang.Object runAction(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String)>($r1, null, "getDefaultVoice");

        $r3 = (android.speech.tts.Voice) $r2;

        return $r3;
    }

    public int isLanguageAvailable(java.util.Locale)
    {
        android.speech.tts.TextToSpeech r0;
        java.util.Locale r1;
        android.speech.tts.TextToSpeech$16 $r2;
        java.lang.Integer $r3, $r5;
        java.lang.Object $r4;
        int $i0;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: java.util.Locale;

        $r2 = new android.speech.tts.TextToSpeech$16;

        specialinvoke $r2.<android.speech.tts.TextToSpeech$16: void <init>(android.speech.tts.TextToSpeech,java.util.Locale)>(r0, r1);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-2);

        $r4 = specialinvoke r0.<android.speech.tts.TextToSpeech: java.lang.Object runAction(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String)>($r2, $r3, "isLanguageAvailable");

        $r5 = (java.lang.Integer) $r4;

        $i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public int synthesizeToFile(java.lang.CharSequence, android.os.Bundle, java.io.File, java.lang.String)
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.CharSequence r1;
        android.os.Bundle r2;
        java.io.File r3;
        java.lang.String r4;
        android.speech.tts.TextToSpeech$17 $r5;
        java.lang.Integer $r6, $r8;
        java.lang.Object $r7;
        int $i0;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: android.os.Bundle;

        r3 := @parameter2: java.io.File;

        r4 := @parameter3: java.lang.String;

        $r5 = new android.speech.tts.TextToSpeech$17;

        specialinvoke $r5.<android.speech.tts.TextToSpeech$17: void <init>(android.speech.tts.TextToSpeech,java.io.File,java.lang.CharSequence,android.os.Bundle,java.lang.String)>(r0, r3, r1, r2, r4);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-1);

        $r7 = specialinvoke r0.<android.speech.tts.TextToSpeech: java.lang.Object runAction(android.speech.tts.TextToSpeech$Action,java.lang.Object,java.lang.String)>($r5, $r6, "synthesizeToFile");

        $r8 = (java.lang.Integer) $r7;

        $i0 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public int synthesizeToFile(java.lang.String, java.util.HashMap, java.lang.String)
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.String r1, r3, $r7;
        java.util.HashMap r2;
        android.os.Bundle $r4;
        java.io.File $r5;
        java.lang.Object $r6;
        int $i0;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.HashMap;

        r3 := @parameter2: java.lang.String;

        $r4 = specialinvoke r0.<android.speech.tts.TextToSpeech: android.os.Bundle convertParamsHashMaptoBundle(java.util.HashMap)>(r2);

        $r5 = new java.io.File;

        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>(r3);

        $r6 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("utteranceId");

        $r7 = (java.lang.String) $r6;

        $i0 = virtualinvoke r0.<android.speech.tts.TextToSpeech: int synthesizeToFile(java.lang.CharSequence,android.os.Bundle,java.io.File,java.lang.String)>(r1, $r4, $r5, $r7);

        return $i0;
    }

    private android.os.Bundle convertParamsHashMaptoBundle(java.util.HashMap)
    {
        android.speech.tts.TextToSpeech r0;
        java.util.HashMap r1;
        android.os.Bundle r2, $r6;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        java.lang.String r5, $r7, $r11, $r13;
        boolean $z0, $z1, $z2, $z3;
        java.util.Set $r8;
        java.lang.Object $r9, $r10, $r12;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: java.util.HashMap;

        if r1 == null goto label4;

        $z0 = virtualinvoke r1.<java.util.HashMap: boolean isEmpty()>();

        if $z0 != 0 goto label4;

        $r6 = new android.os.Bundle;

        specialinvoke $r6.<android.os.Bundle: void <init>()>();

        r2 = $r6;

        specialinvoke r0.<android.speech.tts.TextToSpeech: void copyIntParam(android.os.Bundle,java.util.HashMap,java.lang.String)>(r2, r1, "streamType");

        specialinvoke r0.<android.speech.tts.TextToSpeech: void copyIntParam(android.os.Bundle,java.util.HashMap,java.lang.String)>(r2, r1, "sessionId");

        specialinvoke r0.<android.speech.tts.TextToSpeech: void copyStringParam(android.os.Bundle,java.util.HashMap,java.lang.String)>(r2, r1, "utteranceId");

        specialinvoke r0.<android.speech.tts.TextToSpeech: void copyFloatParam(android.os.Bundle,java.util.HashMap,java.lang.String)>(r2, r1, "volume");

        specialinvoke r0.<android.speech.tts.TextToSpeech: void copyFloatParam(android.os.Bundle,java.util.HashMap,java.lang.String)>(r2, r1, "pan");

        specialinvoke r0.<android.speech.tts.TextToSpeech: void copyStringParam(android.os.Bundle,java.util.HashMap,java.lang.String)>(r2, r1, "networkTts");

        specialinvoke r0.<android.speech.tts.TextToSpeech: void copyStringParam(android.os.Bundle,java.util.HashMap,java.lang.String)>(r2, r1, "embeddedTts");

        specialinvoke r0.<android.speech.tts.TextToSpeech: void copyIntParam(android.os.Bundle,java.util.HashMap,java.lang.String)>(r2, r1, "networkTimeoutMs");

        specialinvoke r0.<android.speech.tts.TextToSpeech: void copyIntParam(android.os.Bundle,java.util.HashMap,java.lang.String)>(r2, r1, "networkRetriesCount");

        $r7 = r0.<android.speech.tts.TextToSpeech: java.lang.String mCurrentEngine>;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r7);

        if $z1 != 0 goto label3;

        $r8 = virtualinvoke r1.<java.util.HashMap: java.util.Set entrySet()>();

        r3 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r9;

        $r10 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        r5 = (java.lang.String) $r10;

        if r5 == null goto label2;

        $r11 = r0.<android.speech.tts.TextToSpeech: java.lang.String mCurrentEngine>;

        $z3 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>($r11);

        if $z3 == 0 goto label2;

        $r12 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = (java.lang.String) $r12;

        virtualinvoke r2.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>(r5, $r13);

     label2:
        goto label1;

     label3:
        return r2;

     label4:
        return null;
    }

    private android.os.Bundle getParams(android.os.Bundle)
    {
        android.speech.tts.TextToSpeech r0;
        android.os.Bundle r1, r2, $r3, $r4, $r5;
        boolean $z0;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: android.os.Bundle;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.os.Bundle: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r4 = new android.os.Bundle;

        $r5 = r0.<android.speech.tts.TextToSpeech: android.os.Bundle mParams>;

        specialinvoke $r4.<android.os.Bundle: void <init>(android.os.Bundle)>($r5);

        r2 = $r4;

        virtualinvoke r2.<android.os.Bundle: void putAll(android.os.Bundle)>(r1);

        staticinvoke <android.speech.tts.TextToSpeech: boolean verifyIntegerBundleParam(android.os.Bundle,java.lang.String)>(r2, "streamType");

        staticinvoke <android.speech.tts.TextToSpeech: boolean verifyIntegerBundleParam(android.os.Bundle,java.lang.String)>(r2, "sessionId");

        staticinvoke <android.speech.tts.TextToSpeech: boolean verifyStringBundleParam(android.os.Bundle,java.lang.String)>(r2, "utteranceId");

        staticinvoke <android.speech.tts.TextToSpeech: boolean verifyFloatBundleParam(android.os.Bundle,java.lang.String)>(r2, "volume");

        staticinvoke <android.speech.tts.TextToSpeech: boolean verifyFloatBundleParam(android.os.Bundle,java.lang.String)>(r2, "pan");

        staticinvoke <android.speech.tts.TextToSpeech: boolean verifyBooleanBundleParam(android.os.Bundle,java.lang.String)>(r2, "networkTts");

        staticinvoke <android.speech.tts.TextToSpeech: boolean verifyBooleanBundleParam(android.os.Bundle,java.lang.String)>(r2, "embeddedTts");

        staticinvoke <android.speech.tts.TextToSpeech: boolean verifyIntegerBundleParam(android.os.Bundle,java.lang.String)>(r2, "networkTimeoutMs");

        staticinvoke <android.speech.tts.TextToSpeech: boolean verifyIntegerBundleParam(android.os.Bundle,java.lang.String)>(r2, "networkRetriesCount");

        return r2;

     label1:
        $r3 = r0.<android.speech.tts.TextToSpeech: android.os.Bundle mParams>;

        return $r3;
    }

    private static boolean verifyIntegerBundleParam(android.os.Bundle, java.lang.String)
    {
        android.os.Bundle r0;
        java.lang.String r1, $r9;
        boolean $z0, $z1, $z2;
        java.lang.Object $r2, $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8;

        r0 := @parameter0: android.os.Bundle;

        r1 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<android.os.Bundle: boolean containsKey(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>(r1);

        $z1 = $r2 instanceof java.lang.Integer;

        if $z1 != 0 goto label1;

        $r3 = virtualinvoke r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>(r1);

        $z2 = $r3 instanceof java.lang.Long;

        if $z2 != 0 goto label1;

        virtualinvoke r0.<android.os.Bundle: void remove(java.lang.String)>(r1);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Synthesis request paramter ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" containst value ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with invalid type. Should be an Integer or a Long");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TextToSpeech", $r9);

        return 0;

     label1:
        return 1;
    }

    private static boolean verifyStringBundleParam(android.os.Bundle, java.lang.String)
    {
        android.os.Bundle r0;
        java.lang.String r1, $r8;
        boolean $z0, $z1;
        java.lang.Object $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7;

        r0 := @parameter0: android.os.Bundle;

        r1 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<android.os.Bundle: boolean containsKey(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>(r1);

        $z1 = $r2 instanceof java.lang.String;

        if $z1 != 0 goto label1;

        virtualinvoke r0.<android.os.Bundle: void remove(java.lang.String)>(r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Synthesis request paramter ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" containst value ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with invalid type. Should be a String");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TextToSpeech", $r8);

        return 0;

     label1:
        return 1;
    }

    private static boolean verifyBooleanBundleParam(android.os.Bundle, java.lang.String)
    {
        android.os.Bundle r0;
        java.lang.String r1, $r9;
        boolean $z0, $z1, $z2;
        java.lang.Object $r2, $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8;

        r0 := @parameter0: android.os.Bundle;

        r1 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<android.os.Bundle: boolean containsKey(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>(r1);

        $z1 = $r2 instanceof java.lang.Boolean;

        if $z1 != 0 goto label1;

        $r3 = virtualinvoke r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>(r1);

        $z2 = $r3 instanceof java.lang.String;

        if $z2 != 0 goto label1;

        virtualinvoke r0.<android.os.Bundle: void remove(java.lang.String)>(r1);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Synthesis request paramter ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" containst value ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with invalid type. Should be a Boolean or String");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TextToSpeech", $r9);

        return 0;

     label1:
        return 1;
    }

    private static boolean verifyFloatBundleParam(android.os.Bundle, java.lang.String)
    {
        android.os.Bundle r0;
        java.lang.String r1, $r9;
        boolean $z0, $z1, $z2;
        java.lang.Object $r2, $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8;

        r0 := @parameter0: android.os.Bundle;

        r1 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<android.os.Bundle: boolean containsKey(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>(r1);

        $z1 = $r2 instanceof java.lang.Float;

        if $z1 != 0 goto label1;

        $r3 = virtualinvoke r0.<android.os.Bundle: java.lang.Object get(java.lang.String)>(r1);

        $z2 = $r3 instanceof java.lang.Double;

        if $z2 != 0 goto label1;

        virtualinvoke r0.<android.os.Bundle: void remove(java.lang.String)>(r1);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Synthesis request paramter ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" containst value ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with invalid type. Should be a Float or a Double");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TextToSpeech", $r9);

        return 0;

     label1:
        return 1;
    }

    private void copyStringParam(android.os.Bundle, java.util.HashMap, java.lang.String)
    {
        android.speech.tts.TextToSpeech r0;
        android.os.Bundle r1;
        java.util.HashMap r2;
        java.lang.String r3, r4;
        java.lang.Object $r5;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: java.util.HashMap;

        r3 := @parameter2: java.lang.String;

        $r5 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (java.lang.String) $r5;

        if r4 == null goto label1;

        virtualinvoke r1.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>(r3, r4);

     label1:
        return;
    }

    private void copyIntParam(android.os.Bundle, java.util.HashMap, java.lang.String)
    {
        android.speech.tts.TextToSpeech r0;
        android.os.Bundle r1;
        java.util.HashMap r2;
        java.lang.String r3, r4;
        int i0;
        java.lang.Object $r5;
        boolean $z0;
        java.lang.NumberFormatException $r6;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: java.util.HashMap;

        r3 := @parameter2: java.lang.String;

        $r5 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (java.lang.String) $r5;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r4);

        if $z0 != 0 goto label4;

     label1:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r4);

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>(r3, i0);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

     label4:
        return;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private void copyFloatParam(android.os.Bundle, java.util.HashMap, java.lang.String)
    {
        android.speech.tts.TextToSpeech r0;
        android.os.Bundle r1;
        java.util.HashMap r2;
        java.lang.String r3, r4;
        float f0;
        java.lang.Object $r5;
        boolean $z0;
        java.lang.NumberFormatException $r6;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: java.util.HashMap;

        r3 := @parameter2: java.lang.String;

        $r5 = virtualinvoke r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (java.lang.String) $r5;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r4);

        if $z0 != 0 goto label4;

     label1:
        f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r4);

        virtualinvoke r1.<android.os.Bundle: void putFloat(java.lang.String,float)>(r3, f0);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

     label4:
        return;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public int setOnUtteranceCompletedListener(android.speech.tts.TextToSpeech$OnUtteranceCompletedListener)
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts.TextToSpeech$OnUtteranceCompletedListener r1;
        android.speech.tts.UtteranceProgressListener $r2;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: android.speech.tts.TextToSpeech$OnUtteranceCompletedListener;

        $r2 = staticinvoke <android.speech.tts.UtteranceProgressListener: android.speech.tts.UtteranceProgressListener 'from'(android.speech.tts.TextToSpeech$OnUtteranceCompletedListener)>(r1);

        r0.<android.speech.tts.TextToSpeech: android.speech.tts.UtteranceProgressListener mUtteranceProgressListener> = $r2;

        return 0;
    }

    public int setOnUtteranceProgressListener(android.speech.tts.UtteranceProgressListener)
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts.UtteranceProgressListener r1;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: android.speech.tts.UtteranceProgressListener;

        r0.<android.speech.tts.TextToSpeech: android.speech.tts.UtteranceProgressListener mUtteranceProgressListener> = r1;

        return 0;
    }

    public int setEngineByPackageName(java.lang.String)
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.String r1;
        int $i0;

        r0 := @this: android.speech.tts.TextToSpeech;

        r1 := @parameter0: java.lang.String;

        r0.<android.speech.tts.TextToSpeech: java.lang.String mRequestedEngine> = r1;

        $i0 = specialinvoke r0.<android.speech.tts.TextToSpeech: int initTts()>();

        return $i0;
    }

    public java.lang.String getDefaultEngine()
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts.TtsEngines $r1;
        java.lang.String $r2;

        r0 := @this: android.speech.tts.TextToSpeech;

        $r1 = r0.<android.speech.tts.TextToSpeech: android.speech.tts.TtsEngines mEnginesHelper>;

        $r2 = virtualinvoke $r1.<android.speech.tts.TtsEngines: java.lang.String getDefaultEngine()>();

        return $r2;
    }

    public boolean areDefaultsEnforced()
    {
        android.speech.tts.TextToSpeech r0;

        r0 := @this: android.speech.tts.TextToSpeech;

        return 0;
    }

    public java.util.List getEngines()
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts.TtsEngines $r1;
        java.util.List $r2;

        r0 := @this: android.speech.tts.TextToSpeech;

        $r1 = r0.<android.speech.tts.TextToSpeech: android.speech.tts.TtsEngines mEnginesHelper>;

        $r2 = virtualinvoke $r1.<android.speech.tts.TtsEngines: java.util.List getEngines()>();

        return $r2;
    }

    public static int getMaxSpeechInputLength()
    {
        return 4000;
    }

    static android.os.IBinder access$100(android.speech.tts.TextToSpeech)
    {
        android.speech.tts.TextToSpeech r0;
        android.os.IBinder $r1;

        r0 := @parameter0: android.speech.tts.TextToSpeech;

        $r1 = specialinvoke r0.<android.speech.tts.TextToSpeech: android.os.IBinder getCallerIdentity()>();

        return $r1;
    }

    static android.speech.tts.TextToSpeech$Connection access$200(android.speech.tts.TextToSpeech)
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts.TextToSpeech$Connection $r1;

        r0 := @parameter0: android.speech.tts.TextToSpeech;

        $r1 = r0.<android.speech.tts.TextToSpeech: android.speech.tts.TextToSpeech$Connection mServiceConnection>;

        return $r1;
    }

    static android.speech.tts.TextToSpeech$Connection access$202(android.speech.tts.TextToSpeech, android.speech.tts.TextToSpeech$Connection)
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts.TextToSpeech$Connection r1;

        r0 := @parameter0: android.speech.tts.TextToSpeech;

        r1 := @parameter1: android.speech.tts.TextToSpeech$Connection;

        r0.<android.speech.tts.TextToSpeech: android.speech.tts.TextToSpeech$Connection mServiceConnection> = r1;

        return r1;
    }

    static java.lang.String access$302(android.speech.tts.TextToSpeech, java.lang.String)
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.String r1;

        r0 := @parameter0: android.speech.tts.TextToSpeech;

        r1 := @parameter1: java.lang.String;

        r0.<android.speech.tts.TextToSpeech: java.lang.String mCurrentEngine> = r1;

        return r1;
    }

    static java.util.Map access$400(android.speech.tts.TextToSpeech)
    {
        android.speech.tts.TextToSpeech r0;
        java.util.Map $r1;

        r0 := @parameter0: android.speech.tts.TextToSpeech;

        $r1 = r0.<android.speech.tts.TextToSpeech: java.util.Map mUtterances>;

        return $r1;
    }

    static android.os.Bundle access$500(android.speech.tts.TextToSpeech, android.os.Bundle)
    {
        android.speech.tts.TextToSpeech r0;
        android.os.Bundle r1, $r2;

        r0 := @parameter0: android.speech.tts.TextToSpeech;

        r1 := @parameter1: android.os.Bundle;

        $r2 = specialinvoke r0.<android.speech.tts.TextToSpeech: android.os.Bundle getParams(android.os.Bundle)>(r1);

        return $r2;
    }

    static java.util.Map access$600(android.speech.tts.TextToSpeech)
    {
        android.speech.tts.TextToSpeech r0;
        java.util.Map $r1;

        r0 := @parameter0: android.speech.tts.TextToSpeech;

        $r1 = r0.<android.speech.tts.TextToSpeech: java.util.Map mEarcons>;

        return $r1;
    }

    static android.os.Bundle access$700(android.speech.tts.TextToSpeech)
    {
        android.speech.tts.TextToSpeech r0;
        android.os.Bundle $r1;

        r0 := @parameter0: android.speech.tts.TextToSpeech;

        $r1 = r0.<android.speech.tts.TextToSpeech: android.os.Bundle mParams>;

        return $r1;
    }

    static android.speech.tts.UtteranceProgressListener access$800(android.speech.tts.TextToSpeech)
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts.UtteranceProgressListener $r1;

        r0 := @parameter0: android.speech.tts.TextToSpeech;

        $r1 = r0.<android.speech.tts.TextToSpeech: android.speech.tts.UtteranceProgressListener mUtteranceProgressListener>;

        return $r1;
    }

    static java.lang.Object access$900(android.speech.tts.TextToSpeech)
    {
        android.speech.tts.TextToSpeech r0;
        java.lang.Object $r1;

        r0 := @parameter0: android.speech.tts.TextToSpeech;

        $r1 = r0.<android.speech.tts.TextToSpeech: java.lang.Object mStartLock>;

        return $r1;
    }

    static void access$1400(android.speech.tts.TextToSpeech, int)
    {
        android.speech.tts.TextToSpeech r0;
        int i0;

        r0 := @parameter0: android.speech.tts.TextToSpeech;

        i0 := @parameter1: int;

        specialinvoke r0.<android.speech.tts.TextToSpeech: void dispatchOnInit(int)>(i0);

        return;
    }

    static android.speech.tts.TextToSpeech$Connection access$1502(android.speech.tts.TextToSpeech, android.speech.tts.TextToSpeech$Connection)
    {
        android.speech.tts.TextToSpeech r0;
        android.speech.tts.TextToSpeech$Connection r1;

        r0 := @parameter0: android.speech.tts.TextToSpeech;

        r1 := @parameter1: android.speech.tts.TextToSpeech$Connection;

        r0.<android.speech.tts.TextToSpeech: android.speech.tts.TextToSpeech$Connection mConnectingServiceConnection> = r1;

        return r1;
    }

    static android.content.Context access$1600(android.speech.tts.TextToSpeech)
    {
        android.speech.tts.TextToSpeech r0;
        android.content.Context $r1;

        r0 := @parameter0: android.speech.tts.TextToSpeech;

        $r1 = r0.<android.speech.tts.TextToSpeech: android.content.Context mContext>;

        return $r1;
    }

    static int access$1700(android.speech.tts.TextToSpeech)
    {
        android.speech.tts.TextToSpeech r0;
        int $i0;

        r0 := @parameter0: android.speech.tts.TextToSpeech;

        $i0 = specialinvoke r0.<android.speech.tts.TextToSpeech: int initTts()>();

        return $i0;
    }

    public static void <clinit>()
    {
        <android.speech.tts.TextToSpeech: java.lang.String ACTION_TTS_QUEUE_PROCESSING_COMPLETED> = "android.speech.tts.TTS_QUEUE_PROCESSING_COMPLETED";

        <android.speech.tts.TextToSpeech: int LANG_NOT_SUPPORTED> = -2;

        <android.speech.tts.TextToSpeech: int LANG_MISSING_DATA> = -1;

        <android.speech.tts.TextToSpeech: int LANG_AVAILABLE> = 0;

        <android.speech.tts.TextToSpeech: int LANG_COUNTRY_AVAILABLE> = 1;

        <android.speech.tts.TextToSpeech: int LANG_COUNTRY_VAR_AVAILABLE> = 2;

        <android.speech.tts.TextToSpeech: int QUEUE_DESTROY> = 2;

        <android.speech.tts.TextToSpeech: int QUEUE_ADD> = 1;

        <android.speech.tts.TextToSpeech: int QUEUE_FLUSH> = 0;

        <android.speech.tts.TextToSpeech: int ERROR_NOT_INSTALLED_YET> = -9;

        <android.speech.tts.TextToSpeech: int ERROR_INVALID_REQUEST> = -8;

        <android.speech.tts.TextToSpeech: int ERROR_NETWORK_TIMEOUT> = -7;

        <android.speech.tts.TextToSpeech: int ERROR_NETWORK> = -6;

        <android.speech.tts.TextToSpeech: int ERROR_OUTPUT> = -5;

        <android.speech.tts.TextToSpeech: int ERROR_SERVICE> = -4;

        <android.speech.tts.TextToSpeech: int ERROR_SYNTHESIS> = -3;

        <android.speech.tts.TextToSpeech: int STOPPED> = -2;

        <android.speech.tts.TextToSpeech: int ERROR> = -1;

        <android.speech.tts.TextToSpeech: int SUCCESS> = 0;

        <android.speech.tts.TextToSpeech: java.lang.String TAG> = "TextToSpeech";

        return;
    }
}
