public class android.net.wifi.p2p.nsd.WifiP2pServiceInfo extends java.lang.Object implements android.os.Parcelable
{
    public static final int SERVICE_TYPE_ALL;
    public static final int SERVICE_TYPE_BONJOUR;
    public static final int SERVICE_TYPE_UPNP;
    public static final int SERVICE_TYPE_WS_DISCOVERY;
    public static final int SERVICE_TYPE_VENDOR_SPECIFIC;
    private java.util.List mQueryList;
    public static final android.os.Parcelable$Creator CREATOR;

    protected void <init>(java.util.List)
    {
        android.net.wifi.p2p.nsd.WifiP2pServiceInfo r0;
        java.util.List r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.net.wifi.p2p.nsd.WifiP2pServiceInfo;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("query list cannot be null");

        throw $r2;

     label1:
        r0.<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: java.util.List mQueryList> = r1;

        return;
    }

    public java.util.List getSupplicantQueryList()
    {
        android.net.wifi.p2p.nsd.WifiP2pServiceInfo r0;
        java.util.List $r1;

        r0 := @this: android.net.wifi.p2p.nsd.WifiP2pServiceInfo;

        $r1 = r0.<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: java.util.List mQueryList>;

        return $r1;
    }

    static java.lang.String bin2HexStr(byte[])
    {
        byte[] r0, r2;
        java.lang.StringBuffer r1, $r4;
        int i0, i1, $i4;
        byte b2;
        java.lang.Exception r3, $r6;
        java.lang.String $r5, r7;
        short $s3;

        r0 := @parameter0: byte[];

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        r1 = $r4;

        r2 = r0;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label7;

        b2 = r2[i1];

     label2:
        $s3 = b2 & 255;

        r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($s3);

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        r3 = $r6;

        virtualinvoke r3.<java.lang.Exception: void printStackTrace()>();

        return null;

     label5:
        $i4 = virtualinvoke r7.<java.lang.String: int length()>();

        if $i4 != 1 goto label6;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(48);

     label6:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        i1 = i1 + 1;

        goto label1;

     label7:
        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public boolean equals(java.lang.Object)
    {
        android.net.wifi.p2p.nsd.WifiP2pServiceInfo r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        java.util.List $r3, $r4;

        r0 := @this: android.net.wifi.p2p.nsd.WifiP2pServiceInfo;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof android.net.wifi.p2p.nsd.WifiP2pServiceInfo;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (android.net.wifi.p2p.nsd.WifiP2pServiceInfo) r1;

        $r4 = r0.<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: java.util.List mQueryList>;

        $r3 = r2.<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: java.util.List mQueryList>;

        $z1 = interfaceinvoke $r4.<java.util.List: boolean equals(java.lang.Object)>($r3);

        return $z1;
    }

    public int hashCode()
    {
        android.net.wifi.p2p.nsd.WifiP2pServiceInfo r0;
        byte b0;
        java.util.List $r1, $r2;
        int $i1, $i2, i3;

        r0 := @this: android.net.wifi.p2p.nsd.WifiP2pServiceInfo;

        b0 = 17;

        $i1 = 31 * b0;

        $r1 = r0.<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: java.util.List mQueryList>;

        if $r1 != null goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $r2 = r0.<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: java.util.List mQueryList>;

        $i2 = interfaceinvoke $r2.<java.util.List: int hashCode()>();

     label2:
        i3 = $i1 + $i2;

        return i3;
    }

    public int describeContents()
    {
        android.net.wifi.p2p.nsd.WifiP2pServiceInfo r0;

        r0 := @this: android.net.wifi.p2p.nsd.WifiP2pServiceInfo;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.net.wifi.p2p.nsd.WifiP2pServiceInfo r0;
        android.os.Parcel r1;
        int i0;
        java.util.List $r2;

        r0 := @this: android.net.wifi.p2p.nsd.WifiP2pServiceInfo;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.net.wifi.p2p.nsd.WifiP2pServiceInfo: java.util.List mQueryList>;

        virtualinvoke r1.<android.os.Parcel: void writeStringList(java.util.List)>($r2);

        return;
    }

    static void <clinit>()
    {
        android.net.wifi.p2p.nsd.WifiP2pServiceInfo$1 $r0;

        <android.net.wifi.p2p.nsd.WifiP2pServiceInfo: int SERVICE_TYPE_VENDOR_SPECIFIC> = 255;

        <android.net.wifi.p2p.nsd.WifiP2pServiceInfo: int SERVICE_TYPE_WS_DISCOVERY> = 3;

        <android.net.wifi.p2p.nsd.WifiP2pServiceInfo: int SERVICE_TYPE_UPNP> = 2;

        <android.net.wifi.p2p.nsd.WifiP2pServiceInfo: int SERVICE_TYPE_BONJOUR> = 1;

        <android.net.wifi.p2p.nsd.WifiP2pServiceInfo: int SERVICE_TYPE_ALL> = 0;

        $r0 = new android.net.wifi.p2p.nsd.WifiP2pServiceInfo$1;

        specialinvoke $r0.<android.net.wifi.p2p.nsd.WifiP2pServiceInfo$1: void <init>()>();

        <android.net.wifi.p2p.nsd.WifiP2pServiceInfo: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }
}
