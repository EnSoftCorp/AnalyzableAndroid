public final class android.util.ArrayMap extends java.lang.Object implements java.util.Map
{
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    private static final int BASE_SIZE;
    private static final int CACHE_SIZE;
    public static final android.util.ArrayMap EMPTY;
    static java.lang.Object[] mBaseCache;
    static int mBaseCacheSize;
    static java.lang.Object[] mTwiceBaseCache;
    static int mTwiceBaseCacheSize;
    static final int[] EMPTY_IMMUTABLE_INTS;
    int[] mHashes;
    java.lang.Object[] mArray;
    int mSize;
    android.util.MapCollections mCollections;

    int indexOf(java.lang.Object, int)
    {
        android.util.ArrayMap r0;
        java.lang.Object r1, $r4, $r7, $r10;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10;
        int[] $r2, $r5, $r8;
        java.lang.Object[] $r3, $r6, $r9;
        boolean $z0, $z1, $z2;

        r0 := @this: android.util.ArrayMap;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 = r0.<android.util.ArrayMap: int mSize>;

        if i1 != 0 goto label1;

        return -1;

     label1:
        $r2 = r0.<android.util.ArrayMap: int[] mHashes>;

        i2 = staticinvoke <android.util.ContainerHelpers: int binarySearch(int[],int,int)>($r2, i1, i0);

        if i2 >= 0 goto label2;

        return i2;

     label2:
        $r3 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i5 = i2 << 1;

        $r4 = $r3[$i5];

        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label3;

        return i2;

     label3:
        i3 = i2 + 1;

     label4:
        if i3 >= i1 goto label6;

        $r8 = r0.<android.util.ArrayMap: int[] mHashes>;

        $i9 = $r8[i3];

        if $i9 != i0 goto label6;

        $r9 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i10 = i3 << 1;

        $r10 = $r9[$i10];

        $z2 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r10);

        if $z2 == 0 goto label5;

        return i3;

     label5:
        i3 = i3 + 1;

        goto label4;

     label6:
        i4 = i2 - 1;

     label7:
        if i4 < 0 goto label9;

        $r5 = r0.<android.util.ArrayMap: int[] mHashes>;

        $i7 = $r5[i4];

        if $i7 != i0 goto label9;

        $r6 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i8 = i4 << 1;

        $r7 = $r6[$i8];

        $z1 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label8;

        return i4;

     label8:
        i4 = i4 + -1;

        goto label7;

     label9:
        $i6 = i3 ^ -1;

        return $i6;
    }

    int indexOfNull()
    {
        android.util.ArrayMap r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9;
        int[] $r1, $r4, $r7;
        java.lang.Object[] $r2, $r5, $r8;
        java.lang.Object $r3, $r6, $r9;

        r0 := @this: android.util.ArrayMap;

        i0 = r0.<android.util.ArrayMap: int mSize>;

        if i0 != 0 goto label1;

        return -1;

     label1:
        $r1 = r0.<android.util.ArrayMap: int[] mHashes>;

        i1 = staticinvoke <android.util.ContainerHelpers: int binarySearch(int[],int,int)>($r1, i0, 0);

        if i1 >= 0 goto label2;

        return i1;

     label2:
        $r2 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i4 = i1 << 1;

        $r3 = $r2[$i4];

        if null != $r3 goto label3;

        return i1;

     label3:
        i2 = i1 + 1;

     label4:
        if i2 >= i0 goto label6;

        $r7 = r0.<android.util.ArrayMap: int[] mHashes>;

        $i8 = $r7[i2];

        if $i8 != 0 goto label6;

        $r8 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i9 = i2 << 1;

        $r9 = $r8[$i9];

        if null != $r9 goto label5;

        return i2;

     label5:
        i2 = i2 + 1;

        goto label4;

     label6:
        i3 = i1 - 1;

     label7:
        if i3 < 0 goto label9;

        $r4 = r0.<android.util.ArrayMap: int[] mHashes>;

        $i6 = $r4[i3];

        if $i6 != 0 goto label9;

        $r5 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i7 = i3 << 1;

        $r6 = $r5[$i7];

        if null != $r6 goto label8;

        return i3;

     label8:
        i3 = i3 + -1;

        goto label7;

     label9:
        $i5 = i2 ^ -1;

        return $i5;
    }

    private void allocArrays(int)
    {
        android.util.ArrayMap r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Class r1, r26;
        java.lang.Object[] r2, $r8, $r9, $r11, $r12, $r16, $r17, $r20, r27;
        java.lang.Throwable r3, r4, $r23, $r25;
        int[] $r5, $r6, $r7, $r13, $r15, $r21, $r22;
        java.lang.Object $r10, $r14, $r18, $r19;
        java.lang.UnsupportedOperationException $r24;

        r0 := @this: android.util.ArrayMap;

        i0 := @parameter0: int;

        $r6 = r0.<android.util.ArrayMap: int[] mHashes>;

        $r5 = <android.util.ArrayMap: int[] EMPTY_IMMUTABLE_INTS>;

        if $r6 != $r5 goto label01;

        $r24 = new java.lang.UnsupportedOperationException;

        specialinvoke $r24.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("ArrayMap is immutable");

        throw $r24;

     label01:
        if i0 != 8 goto label09;

        r1 = class "android/util/ArrayMap";

        entermonitor class "android/util/ArrayMap";

     label02:
        $r16 = <android.util.ArrayMap: java.lang.Object[] mTwiceBaseCache>;

        if $r16 == null goto label04;

        r2 = <android.util.ArrayMap: java.lang.Object[] mTwiceBaseCache>;

        r0.<android.util.ArrayMap: java.lang.Object[] mArray> = r2;

        $r18 = r2[0];

        $r17 = (java.lang.Object[]) $r18;

        $r20 = (java.lang.Object[]) $r17;

        <android.util.ArrayMap: java.lang.Object[] mTwiceBaseCache> = $r20;

        $r19 = r2[1];

        $r22 = (int[]) $r19;

        $r21 = (int[]) $r22;

        r0.<android.util.ArrayMap: int[] mHashes> = $r21;

        r2[1] = null;

        r2[0] = null;

        $i5 = <android.util.ArrayMap: int mTwiceBaseCacheSize>;

        $i4 = $i5 - 1;

        <android.util.ArrayMap: int mTwiceBaseCacheSize> = $i4;

        exitmonitor r1;

     label03:
        return;

     label04:
        exitmonitor r1;

     label05:
        goto label08;

     label06:
        $r25 := @caughtexception;

        r3 = $r25;

        exitmonitor r1;

     label07:
        throw r3;

     label08:
        goto label16;

     label09:
        if i0 != 4 goto label16;

        r26 = class "android/util/ArrayMap";

        entermonitor class "android/util/ArrayMap";

     label10:
        $r9 = <android.util.ArrayMap: java.lang.Object[] mBaseCache>;

        if $r9 == null goto label12;

        r27 = <android.util.ArrayMap: java.lang.Object[] mBaseCache>;

        r0.<android.util.ArrayMap: java.lang.Object[] mArray> = r27;

        $r10 = r27[0];

        $r11 = (java.lang.Object[]) $r10;

        $r12 = (java.lang.Object[]) $r11;

        <android.util.ArrayMap: java.lang.Object[] mBaseCache> = $r12;

        $r14 = r27[1];

        $r13 = (int[]) $r14;

        $r15 = (int[]) $r13;

        r0.<android.util.ArrayMap: int[] mHashes> = $r15;

        r27[1] = null;

        r27[0] = null;

        $i2 = <android.util.ArrayMap: int mBaseCacheSize>;

        $i3 = $i2 - 1;

        <android.util.ArrayMap: int mBaseCacheSize> = $i3;

        exitmonitor r26;

     label11:
        return;

     label12:
        exitmonitor r26;

     label13:
        goto label16;

     label14:
        $r23 := @caughtexception;

        r4 = $r23;

        exitmonitor r26;

     label15:
        throw r4;

     label16:
        $r7 = newarray (int)[i0];

        r0.<android.util.ArrayMap: int[] mHashes> = $r7;

        $i1 = i0 << 1;

        $r8 = newarray (java.lang.Object)[$i1];

        r0.<android.util.ArrayMap: java.lang.Object[] mArray> = $r8;

        return;

        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    private static void freeArrays(int[], java.lang.Object[], int)
    {
        int[] r0;
        java.lang.Object[] r1, $r5, $r6;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12;
        java.lang.Class r2, r9;
        java.lang.Throwable r3, r4, $r7, $r8;

        r0 := @parameter0: int[];

        r1 := @parameter1: java.lang.Object[];

        i0 := @parameter2: int;

        $i2 = lengthof r0;

        if $i2 != 8 goto label09;

        r2 = class "android/util/ArrayMap";

        entermonitor class "android/util/ArrayMap";

     label01:
        $i8 = <android.util.ArrayMap: int mTwiceBaseCacheSize>;

        if $i8 >= 10 goto label04;

        $r6 = <android.util.ArrayMap: java.lang.Object[] mTwiceBaseCache>;

        r1[0] = $r6;

        r1[1] = r0;

        $i10 = i0 << 1;

        i1 = $i10 - 1;

     label02:
        if i1 < 2 goto label03;

        r1[i1] = null;

        i1 = i1 + -1;

        goto label02;

     label03:
        <android.util.ArrayMap: java.lang.Object[] mTwiceBaseCache> = r1;

        $i9 = <android.util.ArrayMap: int mTwiceBaseCacheSize>;

        $i11 = $i9 + 1;

        <android.util.ArrayMap: int mTwiceBaseCacheSize> = $i11;

     label04:
        exitmonitor r2;

     label05:
        goto label08;

     label06:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r2;

     label07:
        throw r3;

     label08:
        goto label17;

     label09:
        $i3 = lengthof r0;

        if $i3 != 4 goto label17;

        r9 = class "android/util/ArrayMap";

        entermonitor class "android/util/ArrayMap";

     label10:
        $i4 = <android.util.ArrayMap: int mBaseCacheSize>;

        if $i4 >= 10 goto label13;

        $r5 = <android.util.ArrayMap: java.lang.Object[] mBaseCache>;

        r1[0] = $r5;

        r1[1] = r0;

        $i5 = i0 << 1;

        i12 = $i5 - 1;

     label11:
        if i12 < 2 goto label12;

        r1[i12] = null;

        i12 = i12 + -1;

        goto label11;

     label12:
        <android.util.ArrayMap: java.lang.Object[] mBaseCache> = r1;

        $i6 = <android.util.ArrayMap: int mBaseCacheSize>;

        $i7 = $i6 + 1;

        <android.util.ArrayMap: int mBaseCacheSize> = $i7;

     label13:
        exitmonitor r9;

     label14:
        goto label17;

     label15:
        $r8 := @caughtexception;

        r4 = $r8;

        exitmonitor r9;

     label16:
        throw r4;

     label17:
        return;

        catch java.lang.Throwable from label01 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label10 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    public void <init>()
    {
        android.util.ArrayMap r0;
        int[] $r1;
        java.lang.Object[] $r2;

        r0 := @this: android.util.ArrayMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <libcore.util.EmptyArray: int[] INT>;

        r0.<android.util.ArrayMap: int[] mHashes> = $r1;

        $r2 = <libcore.util.EmptyArray: java.lang.Object[] OBJECT>;

        r0.<android.util.ArrayMap: java.lang.Object[] mArray> = $r2;

        r0.<android.util.ArrayMap: int mSize> = 0;

        return;
    }

    public void <init>(int)
    {
        android.util.ArrayMap r0;
        int i0;
        int[] $r1;
        java.lang.Object[] $r2;

        r0 := @this: android.util.ArrayMap;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if i0 != 0 goto label1;

        $r1 = <libcore.util.EmptyArray: int[] INT>;

        r0.<android.util.ArrayMap: int[] mHashes> = $r1;

        $r2 = <libcore.util.EmptyArray: java.lang.Object[] OBJECT>;

        r0.<android.util.ArrayMap: java.lang.Object[] mArray> = $r2;

        goto label2;

     label1:
        specialinvoke r0.<android.util.ArrayMap: void allocArrays(int)>(i0);

     label2:
        r0.<android.util.ArrayMap: int mSize> = 0;

        return;
    }

    private void <init>(boolean)
    {
        android.util.ArrayMap r0;
        boolean z0;
        int[] $r1;
        java.lang.Object[] $r2;

        r0 := @this: android.util.ArrayMap;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <libcore.util.EmptyArray: int[] INT>;

        r0.<android.util.ArrayMap: int[] mHashes> = $r1;

        $r2 = <libcore.util.EmptyArray: java.lang.Object[] OBJECT>;

        r0.<android.util.ArrayMap: java.lang.Object[] mArray> = $r2;

        r0.<android.util.ArrayMap: int mSize> = 0;

        return;
    }

    public void <init>(android.util.ArrayMap)
    {
        android.util.ArrayMap r0, r1;

        r0 := @this: android.util.ArrayMap;

        r1 := @parameter0: android.util.ArrayMap;

        specialinvoke r0.<android.util.ArrayMap: void <init>()>();

        if r1 == null goto label1;

        virtualinvoke r0.<android.util.ArrayMap: void putAll(android.util.ArrayMap)>(r1);

     label1:
        return;
    }

    public void clear()
    {
        android.util.ArrayMap r0;
        int $i0, $i1;
        java.lang.Object[] $r1, $r4;
        int[] $r2, $r3;

        r0 := @this: android.util.ArrayMap;

        $i0 = r0.<android.util.ArrayMap: int mSize>;

        if $i0 <= 0 goto label1;

        $r2 = r0.<android.util.ArrayMap: int[] mHashes>;

        $r1 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i1 = r0.<android.util.ArrayMap: int mSize>;

        staticinvoke <android.util.ArrayMap: void freeArrays(int[],java.lang.Object[],int)>($r2, $r1, $i1);

        $r3 = <libcore.util.EmptyArray: int[] INT>;

        r0.<android.util.ArrayMap: int[] mHashes> = $r3;

        $r4 = <libcore.util.EmptyArray: java.lang.Object[] OBJECT>;

        r0.<android.util.ArrayMap: java.lang.Object[] mArray> = $r4;

        r0.<android.util.ArrayMap: int mSize> = 0;

     label1:
        return;
    }

    public void erase()
    {
        android.util.ArrayMap r0;
        int i0, i1, $i2, $i3;
        java.lang.Object[] r1;

        r0 := @this: android.util.ArrayMap;

        $i2 = r0.<android.util.ArrayMap: int mSize>;

        if $i2 <= 0 goto label3;

        $i3 = r0.<android.util.ArrayMap: int mSize>;

        i0 = $i3 << 1;

        r1 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r1[i1] = null;

        i1 = i1 + 1;

        goto label1;

     label2:
        r0.<android.util.ArrayMap: int mSize> = 0;

     label3:
        return;
    }

    public void ensureCapacity(int)
    {
        android.util.ArrayMap r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        int[] r1, $r3, $r4;
        java.lang.Object[] r2, $r5;

        r0 := @this: android.util.ArrayMap;

        i0 := @parameter0: int;

        $r3 = r0.<android.util.ArrayMap: int[] mHashes>;

        $i1 = lengthof $r3;

        if $i1 >= i0 goto label2;

        r1 = r0.<android.util.ArrayMap: int[] mHashes>;

        r2 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        specialinvoke r0.<android.util.ArrayMap: void allocArrays(int)>(i0);

        $i2 = r0.<android.util.ArrayMap: int mSize>;

        if $i2 <= 0 goto label1;

        $r4 = r0.<android.util.ArrayMap: int[] mHashes>;

        $i4 = r0.<android.util.ArrayMap: int mSize>;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>(r1, 0, $r4, 0, $i4);

        $r5 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i5 = r0.<android.util.ArrayMap: int mSize>;

        $i6 = $i5 << 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, 0, $r5, 0, $i6);

     label1:
        $i3 = r0.<android.util.ArrayMap: int mSize>;

        staticinvoke <android.util.ArrayMap: void freeArrays(int[],java.lang.Object[],int)>(r1, r2, $i3);

     label2:
        return;
    }

    public boolean containsKey(java.lang.Object)
    {
        android.util.ArrayMap r0;
        java.lang.Object r1;
        int $i0;
        boolean $z0;

        r0 := @this: android.util.ArrayMap;

        r1 := @parameter0: java.lang.Object;

        $i0 = virtualinvoke r0.<android.util.ArrayMap: int indexOfKey(java.lang.Object)>(r1);

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int indexOfKey(java.lang.Object)
    {
        android.util.ArrayMap r0;
        java.lang.Object r1;
        int $i0, $i1;

        r0 := @this: android.util.ArrayMap;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        $i1 = virtualinvoke r0.<android.util.ArrayMap: int indexOfNull()>();

        goto label2;

     label1:
        $i0 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        $i1 = virtualinvoke r0.<android.util.ArrayMap: int indexOf(java.lang.Object,int)>(r1, $i0);

     label2:
        return $i1;
    }

    int indexOfValue(java.lang.Object)
    {
        android.util.ArrayMap r0;
        java.lang.Object r1, $r3, $r4;
        int i0, i1, $i2, $i3, $i4, i5;
        java.lang.Object[] r2;
        boolean $z0;

        r0 := @this: android.util.ArrayMap;

        r1 := @parameter0: java.lang.Object;

        $i2 = r0.<android.util.ArrayMap: int mSize>;

        i0 = $i2 * 2;

        r2 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        if r1 != null goto label4;

        i1 = 1;

     label1:
        if i1 >= i0 goto label3;

        $r4 = r2[i1];

        if $r4 != null goto label2;

        $i4 = i1 >> 1;

        return $i4;

     label2:
        i1 = i1 + 2;

        goto label1;

     label3:
        goto label7;

     label4:
        i5 = 1;

     label5:
        if i5 >= i0 goto label7;

        $r3 = r2[i5];

        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label6;

        $i3 = i5 >> 1;

        return $i3;

     label6:
        i5 = i5 + 2;

        goto label5;

     label7:
        return -1;
    }

    public boolean containsValue(java.lang.Object)
    {
        android.util.ArrayMap r0;
        java.lang.Object r1;
        int $i0;
        boolean $z0;

        r0 := @this: android.util.ArrayMap;

        r1 := @parameter0: java.lang.Object;

        $i0 = virtualinvoke r0.<android.util.ArrayMap: int indexOfValue(java.lang.Object)>(r1);

        if $i0 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Object get(java.lang.Object)
    {
        android.util.ArrayMap r0;
        java.lang.Object r1, $r3;
        int i0, $i1, $i2;
        java.lang.Object[] $r2;

        r0 := @this: android.util.ArrayMap;

        r1 := @parameter0: java.lang.Object;

        i0 = virtualinvoke r0.<android.util.ArrayMap: int indexOfKey(java.lang.Object)>(r1);

        if i0 < 0 goto label1;

        $r2 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i1 = i0 << 1;

        $i2 = $i1 + 1;

        $r3 = $r2[$i2];

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public java.lang.Object keyAt(int)
    {
        android.util.ArrayMap r0;
        int i0, $i1;
        java.lang.Object[] $r1;
        java.lang.Object $r2;

        r0 := @this: android.util.ArrayMap;

        i0 := @parameter0: int;

        $r1 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i1 = i0 << 1;

        $r2 = $r1[$i1];

        return $r2;
    }

    public java.lang.Object valueAt(int)
    {
        android.util.ArrayMap r0;
        int i0, $i1, $i2;
        java.lang.Object[] $r1;
        java.lang.Object $r2;

        r0 := @this: android.util.ArrayMap;

        i0 := @parameter0: int;

        $r1 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i1 = i0 << 1;

        $i2 = $i1 + 1;

        $r2 = $r1[$i2];

        return $r2;
    }

    public java.lang.Object setValueAt(int, java.lang.Object)
    {
        android.util.ArrayMap r0;
        int i0, $i1, i2;
        java.lang.Object r1, r2;
        java.lang.Object[] $r3, $r4;

        r0 := @this: android.util.ArrayMap;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        $i1 = i0 << 1;

        i2 = $i1 + 1;

        $r3 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        r2 = $r3[i2];

        $r4 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $r4[i2] = r1;

        return r2;
    }

    public boolean isEmpty()
    {
        android.util.ArrayMap r0;
        int $i0;
        boolean $z0;

        r0 := @this: android.util.ArrayMap;

        $i0 = r0.<android.util.ArrayMap: int mSize>;

        if $i0 > 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        android.util.ArrayMap r0;
        java.lang.Object r1, r2, r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, i30, i31, i32;
        int[] r4, $r6, $r7, $r10, $r11, $r14, $r16;
        java.lang.Object[] r5, $r8, $r9, $r12, $r13, $r15, $r17, $r18;

        r0 := @this: android.util.ArrayMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        if r1 != null goto label1;

        i0 = 0;

        i1 = virtualinvoke r0.<android.util.ArrayMap: int indexOfNull()>();

        goto label2;

     label1:
        i0 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        i1 = virtualinvoke r0.<android.util.ArrayMap: int indexOf(java.lang.Object,int)>(r1, i0);

     label2:
        if i1 < 0 goto label3;

        $i29 = i1 << 1;

        i30 = $i29 + 1;

        $r18 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        r3 = $r18[i30];

        $r17 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $r17[i30] = r2;

        return r3;

     label3:
        i31 = i1 ^ -1;

        $i3 = r0.<android.util.ArrayMap: int mSize>;

        $r6 = r0.<android.util.ArrayMap: int[] mHashes>;

        $i2 = lengthof $r6;

        if $i3 < $i2 goto label8;

        $i18 = r0.<android.util.ArrayMap: int mSize>;

        if $i18 < 8 goto label4;

        $i26 = r0.<android.util.ArrayMap: int mSize>;

        $i28 = r0.<android.util.ArrayMap: int mSize>;

        $i25 = $i28 >> 1;

        $i27 = $i26 + $i25;

        goto label6;

     label4:
        $i22 = r0.<android.util.ArrayMap: int mSize>;

        if $i22 < 4 goto label5;

        $i27 = 8;

        goto label6;

     label5:
        $i27 = 4;

     label6:
        i32 = $i27;

        r4 = r0.<android.util.ArrayMap: int[] mHashes>;

        r5 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        specialinvoke r0.<android.util.ArrayMap: void allocArrays(int)>(i32);

        $r14 = r0.<android.util.ArrayMap: int[] mHashes>;

        $i20 = lengthof $r14;

        if $i20 <= 0 goto label7;

        $r16 = r0.<android.util.ArrayMap: int[] mHashes>;

        $i24 = lengthof r4;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>(r4, 0, $r16, 0, $i24);

        $r15 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i23 = lengthof r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r5, 0, $r15, 0, $i23);

     label7:
        $i21 = r0.<android.util.ArrayMap: int mSize>;

        staticinvoke <android.util.ArrayMap: void freeArrays(int[],java.lang.Object[],int)>(r4, r5, $i21);

     label8:
        $i4 = r0.<android.util.ArrayMap: int mSize>;

        if i31 >= $i4 goto label9;

        $r11 = r0.<android.util.ArrayMap: int[] mHashes>;

        $r10 = r0.<android.util.ArrayMap: int[] mHashes>;

        $i12 = i31 + 1;

        $i11 = r0.<android.util.ArrayMap: int mSize>;

        $i10 = $i11 - i31;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>($r11, i31, $r10, $i12, $i10);

        $r12 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i19 = i31 << 1;

        $r13 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i13 = i31 + 1;

        $i16 = $i13 << 1;

        $i15 = r0.<android.util.ArrayMap: int mSize>;

        $i14 = $i15 - i31;

        $i17 = $i14 << 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r12, $i19, $r13, $i16, $i17);

     label9:
        $r7 = r0.<android.util.ArrayMap: int[] mHashes>;

        $r7[i31] = i0;

        $r8 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i5 = i31 << 1;

        $r8[$i5] = r1;

        $r9 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i6 = i31 << 1;

        $i7 = $i6 + 1;

        $r9[$i7] = r2;

        $i9 = r0.<android.util.ArrayMap: int mSize>;

        $i8 = $i9 + 1;

        r0.<android.util.ArrayMap: int mSize> = $i8;

        return null;
    }

    public void append(java.lang.Object, java.lang.Object)
    {
        android.util.ArrayMap r0;
        java.lang.Object r1, r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i11;
        java.lang.RuntimeException r3, $r9;
        int[] $r4, $r5, $r8, $r15;
        java.lang.Object[] $r6, $r7;
        java.lang.StringBuilder $r10, $r12, $r13, $r14, $r16, $r17, $r18, $r19, $r20;
        java.lang.IllegalStateException $r22;
        java.lang.String $r23;

        r0 := @this: android.util.ArrayMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        i0 = r0.<android.util.ArrayMap: int mSize>;

        if r1 != null goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $i2 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

     label2:
        i1 = $i2;

        $r4 = r0.<android.util.ArrayMap: int[] mHashes>;

        $i3 = lengthof $r4;

        if i0 < $i3 goto label3;

        $r22 = new java.lang.IllegalStateException;

        specialinvoke $r22.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Array is full");

        throw $r22;

     label3:
        if i0 <= 0 goto label4;

        $r8 = r0.<android.util.ArrayMap: int[] mHashes>;

        $i6 = i0 - 1;

        $i7 = $r8[$i6];

        if $i7 <= i1 goto label4;

        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>("here");

        r3 = $r9;

        virtualinvoke r3.<java.lang.RuntimeException: java.lang.Throwable fillInStackTrace()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("New hash ");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is before end of array hash ");

        $r15 = r0.<android.util.ArrayMap: int[] mHashes>;

        $i8 = i0 - 1;

        $i9 = $r15[$i8];

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at index ");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" key ");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r23 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ArrayMap", $r23, r3);

        virtualinvoke r0.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;

     label4:
        $i4 = i0 + 1;

        r0.<android.util.ArrayMap: int mSize> = $i4;

        $r5 = r0.<android.util.ArrayMap: int[] mHashes>;

        $r5[i0] = i1;

        i11 = i0 << 1;

        $r6 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $r6[i11] = r1;

        $r7 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i5 = i11 + 1;

        $r7[$i5] = r2;

        return;
    }

    public void validate()
    {
        android.util.ArrayMap r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7;
        java.lang.Object r1, r2;
        int[] $r3, $r4;
        java.lang.Object[] $r5, $r6;
        boolean $z0;
        java.lang.StringBuilder $r7, $r9, $r10, $r13, $r14, $r16;
        java.lang.IllegalArgumentException $r8, $r11;
        java.lang.String $r12, $r15;

        r0 := @this: android.util.ArrayMap;

        i0 = r0.<android.util.ArrayMap: int mSize>;

        if i0 > 1 goto label1;

        return;

     label1:
        $r3 = r0.<android.util.ArrayMap: int[] mHashes>;

        i1 = $r3[0];

        i2 = 0;

        i3 = 1;

     label2:
        if i3 >= i0 goto label8;

        $r4 = r0.<android.util.ArrayMap: int[] mHashes>;

        i4 = $r4[i3];

        if i4 == i1 goto label3;

        i1 = i4;

        i2 = i3;

        goto label7;

     label3:
        $r5 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i6 = i3 << 1;

        r1 = $r5[$i6];

        i5 = i3 - 1;

     label4:
        if i5 < i2 goto label7;

        $r6 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i7 = i5 << 1;

        r2 = $r6[$i7];

        if r1 != r2 goto label5;

        $r11 = new java.lang.IllegalArgumentException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate key in ArrayMap: ");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r11;

     label5:
        if r1 == null goto label6;

        if r2 == null goto label6;

        $z0 = virtualinvoke r1.<java.lang.Object: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label6;

        $r8 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Duplicate key in ArrayMap: ");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r8;

     label6:
        i5 = i5 + -1;

        goto label4;

     label7:
        i3 = i3 + 1;

        goto label2;

     label8:
        return;
    }

    public void putAll(android.util.ArrayMap)
    {
        android.util.ArrayMap r0, r1;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.lang.Object $r2, $r3;
        int[] $r5, $r6;
        java.lang.Object[] $r7, $r8;

        r0 := @this: android.util.ArrayMap;

        r1 := @parameter0: android.util.ArrayMap;

        i0 = r1.<android.util.ArrayMap: int mSize>;

        $i2 = r0.<android.util.ArrayMap: int mSize>;

        $i3 = $i2 + i0;

        virtualinvoke r0.<android.util.ArrayMap: void ensureCapacity(int)>($i3);

        $i4 = r0.<android.util.ArrayMap: int mSize>;

        if $i4 != 0 goto label1;

        if i0 <= 0 goto label3;

        $r6 = r1.<android.util.ArrayMap: int[] mHashes>;

        $r5 = r0.<android.util.ArrayMap: int[] mHashes>;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>($r6, 0, $r5, 0, i0);

        $r8 = r1.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $r7 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i5 = i0 << 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, $r7, 0, $i5);

        r0.<android.util.ArrayMap: int mSize> = i0;

        goto label3;

     label1:
        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        $r2 = virtualinvoke r1.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i1);

        $r3 = virtualinvoke r1.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i1);

        virtualinvoke r0.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        i1 = i1 + 1;

        goto label2;

     label3:
        return;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        android.util.ArrayMap r0;
        java.lang.Object r1, $r2;
        int i0;

        r0 := @this: android.util.ArrayMap;

        r1 := @parameter0: java.lang.Object;

        i0 = virtualinvoke r0.<android.util.ArrayMap: int indexOfKey(java.lang.Object)>(r1);

        if i0 < 0 goto label1;

        $r2 = virtualinvoke r0.<android.util.ArrayMap: java.lang.Object removeAt(int)>(i0);

        return $r2;

     label1:
        return null;
    }

    public java.lang.Object removeAt(int)
    {
        android.util.ArrayMap r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44;
        java.lang.Object r1;
        int[] r2, $r5, $r8, $r9, $r11, $r13, $r14, $r17, $r19;
        java.lang.Object[] r3, $r4, $r6, $r7, $r10, $r12, $r15, $r16, $r18, $r20;

        r0 := @this: android.util.ArrayMap;

        i0 := @parameter0: int;

        $r4 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i2 = i0 << 1;

        $i3 = $i2 + 1;

        r1 = $r4[$i3];

        $i4 = r0.<android.util.ArrayMap: int mSize>;

        if $i4 > 1 goto label1;

        $r17 = r0.<android.util.ArrayMap: int[] mHashes>;

        $r18 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i43 = r0.<android.util.ArrayMap: int mSize>;

        staticinvoke <android.util.ArrayMap: void freeArrays(int[],java.lang.Object[],int)>($r17, $r18, $i43);

        $r19 = <libcore.util.EmptyArray: int[] INT>;

        r0.<android.util.ArrayMap: int[] mHashes> = $r19;

        $r20 = <libcore.util.EmptyArray: java.lang.Object[] OBJECT>;

        r0.<android.util.ArrayMap: java.lang.Object[] mArray> = $r20;

        r0.<android.util.ArrayMap: int mSize> = 0;

        goto label8;

     label1:
        $r5 = r0.<android.util.ArrayMap: int[] mHashes>;

        $i5 = lengthof $r5;

        if $i5 <= 8 goto label6;

        $i23 = r0.<android.util.ArrayMap: int mSize>;

        $r11 = r0.<android.util.ArrayMap: int[] mHashes>;

        $i25 = lengthof $r11;

        $i26 = $i25 / 3;

        if $i23 >= $i26 goto label6;

        $i24 = r0.<android.util.ArrayMap: int mSize>;

        if $i24 <= 8 goto label2;

        $i40 = r0.<android.util.ArrayMap: int mSize>;

        $i42 = r0.<android.util.ArrayMap: int mSize>;

        $i41 = $i42 >> 1;

        $i44 = $i40 + $i41;

        goto label3;

     label2:
        $i44 = 8;

     label3:
        i1 = $i44;

        r2 = r0.<android.util.ArrayMap: int[] mHashes>;

        r3 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        specialinvoke r0.<android.util.ArrayMap: void allocArrays(int)>(i1);

        $i29 = r0.<android.util.ArrayMap: int mSize>;

        $i30 = $i29 - 1;

        r0.<android.util.ArrayMap: int mSize> = $i30;

        if i0 <= 0 goto label4;

        $r14 = r0.<android.util.ArrayMap: int[] mHashes>;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>(r2, 0, $r14, 0, i0);

        $r16 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i38 = i0 << 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, $r16, 0, $i38);

     label4:
        $i27 = r0.<android.util.ArrayMap: int mSize>;

        if i0 >= $i27 goto label5;

        $i31 = i0 + 1;

        $r13 = r0.<android.util.ArrayMap: int[] mHashes>;

        $i28 = r0.<android.util.ArrayMap: int mSize>;

        $i33 = $i28 - i0;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>(r2, $i31, $r13, i0, $i33);

        $i32 = i0 + 1;

        $i39 = $i32 << 1;

        $r15 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i34 = i0 << 1;

        $i37 = r0.<android.util.ArrayMap: int mSize>;

        $i36 = $i37 - i0;

        $i35 = $i36 << 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, $i39, $r15, $i34, $i35);

     label5:
        goto label8;

     label6:
        $i6 = r0.<android.util.ArrayMap: int mSize>;

        $i7 = $i6 - 1;

        r0.<android.util.ArrayMap: int mSize> = $i7;

        $i8 = r0.<android.util.ArrayMap: int mSize>;

        if i0 >= $i8 goto label7;

        $r9 = r0.<android.util.ArrayMap: int[] mHashes>;

        $i16 = i0 + 1;

        $r8 = r0.<android.util.ArrayMap: int[] mHashes>;

        $i15 = r0.<android.util.ArrayMap: int mSize>;

        $i14 = $i15 - i0;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>($r9, $i16, $r8, i0, $i14);

        $r10 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i17 = i0 + 1;

        $i22 = $i17 << 1;

        $r12 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i20 = i0 << 1;

        $i19 = r0.<android.util.ArrayMap: int mSize>;

        $i18 = $i19 - i0;

        $i21 = $i18 << 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r10, $i22, $r12, $i20, $i21);

     label7:
        $r6 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i9 = r0.<android.util.ArrayMap: int mSize>;

        $i10 = $i9 << 1;

        $r6[$i10] = null;

        $r7 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        $i12 = r0.<android.util.ArrayMap: int mSize>;

        $i11 = $i12 << 1;

        $i13 = $i11 + 1;

        $r7[$i13] = null;

     label8:
        return r1;
    }

    public int size()
    {
        android.util.ArrayMap r0;
        int $i0;

        r0 := @this: android.util.ArrayMap;

        $i0 = r0.<android.util.ArrayMap: int mSize>;

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        android.util.ArrayMap r0;
        java.lang.Object r1, r3, r4, r5;
        java.util.Map r2;
        int i0, $i1, $i2, $i3;
        boolean $z0, $z1, $z2;
        java.lang.NullPointerException $r6;
        java.lang.ClassCastException $r7;

        r0 := @this: android.util.ArrayMap;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label01;

        return 1;

     label01:
        $z0 = r1 instanceof java.util.Map;

        if $z0 == 0 goto label12;

        r2 = (java.util.Map) r1;

        $i1 = virtualinvoke r0.<android.util.ArrayMap: int size()>();

        $i2 = interfaceinvoke r2.<java.util.Map: int size()>();

        if $i1 == $i2 goto label02;

        return 0;

     label02:
        i0 = 0;

     label03:
        $i3 = r0.<android.util.ArrayMap: int mSize>;

        if i0 >= $i3 goto label08;

        r3 = virtualinvoke r0.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i0);

        r4 = virtualinvoke r0.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i0);

        r5 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        if r4 != null goto label05;

        if r5 != null goto label04;

        $z2 = interfaceinvoke r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r3);

        if $z2 != 0 goto label07;

     label04:
        return 0;

     label05:
        $z1 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(r5);

        if $z1 != 0 goto label07;

     label06:
        return 0;

     label07:
        i0 = i0 + 1;

        goto label03;

     label08:
        goto label11;

     label09:
        $r6 := @caughtexception;

        return 0;

     label10:
        $r7 := @caughtexception;

        return 0;

     label11:
        return 1;

     label12:
        return 0;

        catch java.lang.NullPointerException from label02 to label04 with label09;
        catch java.lang.NullPointerException from label05 to label06 with label09;
        catch java.lang.NullPointerException from label07 to label08 with label09;
        catch java.lang.ClassCastException from label02 to label04 with label10;
        catch java.lang.ClassCastException from label05 to label06 with label10;
        catch java.lang.ClassCastException from label07 to label08 with label10;
    }

    public int hashCode()
    {
        android.util.ArrayMap r0;
        int[] r1;
        java.lang.Object[] r2;
        int i0, i1, i2, i3, $i4, $i5, $i6;
        java.lang.Object r3;

        r0 := @this: android.util.ArrayMap;

        r1 = r0.<android.util.ArrayMap: int[] mHashes>;

        r2 = r0.<android.util.ArrayMap: java.lang.Object[] mArray>;

        i0 = 0;

        i1 = 0;

        i2 = 1;

        i3 = r0.<android.util.ArrayMap: int mSize>;

     label1:
        if i1 >= i3 goto label4;

        r3 = r2[i2];

        $i4 = r1[i1];

        if r3 != null goto label2;

        $i5 = 0;

        goto label3;

     label2:
        $i5 = virtualinvoke r3.<java.lang.Object: int hashCode()>();

     label3:
        $i6 = $i4 ^ $i5;

        i0 = i0 + $i6;

        i1 = i1 + 1;

        i2 = i2 + 2;

        goto label1;

     label4:
        return i0;
    }

    public java.lang.String toString()
    {
        android.util.ArrayMap r0;
        java.lang.StringBuilder r1, $r4;
        int i0, $i1, $i2, $i3;
        java.lang.Object r2, r3;
        boolean $z0;
        java.lang.String $r7;

        r0 := @this: android.util.ArrayMap;

        $z0 = virtualinvoke r0.<android.util.ArrayMap: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return "{}";

     label1:
        $r4 = new java.lang.StringBuilder;

        $i1 = r0.<android.util.ArrayMap: int mSize>;

        $i2 = $i1 * 28;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>($i2);

        r1 = $r4;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(123);

        i0 = 0;

     label2:
        $i3 = r0.<android.util.ArrayMap: int mSize>;

        if i0 >= $i3 goto label8;

        if i0 <= 0 goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label3:
        r2 = virtualinvoke r0.<android.util.ArrayMap: java.lang.Object keyAt(int)>(i0);

        if r2 == r0 goto label4;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        goto label5;

     label4:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(this Map)");

     label5:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        r3 = virtualinvoke r0.<android.util.ArrayMap: java.lang.Object valueAt(int)>(i0);

        if r3 == r0 goto label6;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        goto label7;

     label6:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(this Map)");

     label7:
        i0 = i0 + 1;

        goto label2;

     label8:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r7 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    private android.util.MapCollections getCollection()
    {
        android.util.ArrayMap r0;
        android.util.MapCollections $r1, $r2;
        android.util.ArrayMap$1 $r3;

        r0 := @this: android.util.ArrayMap;

        $r1 = r0.<android.util.ArrayMap: android.util.MapCollections mCollections>;

        if $r1 != null goto label1;

        $r3 = new android.util.ArrayMap$1;

        specialinvoke $r3.<android.util.ArrayMap$1: void <init>(android.util.ArrayMap)>(r0);

        r0.<android.util.ArrayMap: android.util.MapCollections mCollections> = $r3;

     label1:
        $r2 = r0.<android.util.ArrayMap: android.util.MapCollections mCollections>;

        return $r2;
    }

    public boolean containsAll(java.util.Collection)
    {
        android.util.ArrayMap r0;
        java.util.Collection r1;
        boolean $z0;

        r0 := @this: android.util.ArrayMap;

        r1 := @parameter0: java.util.Collection;

        $z0 = staticinvoke <android.util.MapCollections: boolean containsAllHelper(java.util.Map,java.util.Collection)>(r0, r1);

        return $z0;
    }

    public void putAll(java.util.Map)
    {
        android.util.ArrayMap r0;
        java.util.Map r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        int $i0, $i1, $i2;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5, $r6, $r7;

        r0 := @this: android.util.ArrayMap;

        r1 := @parameter0: java.util.Map;

        $i0 = r0.<android.util.ArrayMap: int mSize>;

        $i1 = interfaceinvoke r1.<java.util.Map: int size()>();

        $i2 = $i0 + $i1;

        virtualinvoke r0.<android.util.ArrayMap: void ensureCapacity(int)>($i2);

        $r4 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r5;

        $r6 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r0.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r7);

        goto label1;

     label2:
        return;
    }

    public boolean removeAll(java.util.Collection)
    {
        android.util.ArrayMap r0;
        java.util.Collection r1;
        boolean $z0;

        r0 := @this: android.util.ArrayMap;

        r1 := @parameter0: java.util.Collection;

        $z0 = staticinvoke <android.util.MapCollections: boolean removeAllHelper(java.util.Map,java.util.Collection)>(r0, r1);

        return $z0;
    }

    public boolean retainAll(java.util.Collection)
    {
        android.util.ArrayMap r0;
        java.util.Collection r1;
        boolean $z0;

        r0 := @this: android.util.ArrayMap;

        r1 := @parameter0: java.util.Collection;

        $z0 = staticinvoke <android.util.MapCollections: boolean retainAllHelper(java.util.Map,java.util.Collection)>(r0, r1);

        return $z0;
    }

    public java.util.Set entrySet()
    {
        android.util.ArrayMap r0;
        android.util.MapCollections $r1;
        java.util.Set $r2;

        r0 := @this: android.util.ArrayMap;

        $r1 = specialinvoke r0.<android.util.ArrayMap: android.util.MapCollections getCollection()>();

        $r2 = virtualinvoke $r1.<android.util.MapCollections: java.util.Set getEntrySet()>();

        return $r2;
    }

    public java.util.Set keySet()
    {
        android.util.ArrayMap r0;
        android.util.MapCollections $r1;
        java.util.Set $r2;

        r0 := @this: android.util.ArrayMap;

        $r1 = specialinvoke r0.<android.util.ArrayMap: android.util.MapCollections getCollection()>();

        $r2 = virtualinvoke $r1.<android.util.MapCollections: java.util.Set getKeySet()>();

        return $r2;
    }

    public java.util.Collection values()
    {
        android.util.ArrayMap r0;
        android.util.MapCollections $r1;
        java.util.Collection $r2;

        r0 := @this: android.util.ArrayMap;

        $r1 = specialinvoke r0.<android.util.ArrayMap: android.util.MapCollections getCollection()>();

        $r2 = virtualinvoke $r1.<android.util.MapCollections: java.util.Collection getValues()>();

        return $r2;
    }

    static void <clinit>()
    {
        android.util.ArrayMap $r0;
        int[] $r1;

        <android.util.ArrayMap: int CACHE_SIZE> = 10;

        <android.util.ArrayMap: int BASE_SIZE> = 4;

        <android.util.ArrayMap: java.lang.String TAG> = "ArrayMap";

        <android.util.ArrayMap: boolean DEBUG> = 0;

        $r0 = new android.util.ArrayMap;

        specialinvoke $r0.<android.util.ArrayMap: void <init>(boolean)>(1);

        <android.util.ArrayMap: android.util.ArrayMap EMPTY> = $r0;

        $r1 = newarray (int)[0];

        <android.util.ArrayMap: int[] EMPTY_IMMUTABLE_INTS> = $r1;

        return;
    }
}
