class android.media.Utils extends java.lang.Object
{
    private static final java.lang.String TAG;

    void <init>()
    {
        android.media.Utils r0;

        r0 := @this: android.media.Utils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void sortDistinctRanges(android.util.Range[])
    {
        android.util.Range[] r0;
        android.media.Utils$1 $r1;

        r0 := @parameter0: android.util.Range[];

        $r1 = new android.media.Utils$1;

        specialinvoke $r1.<android.media.Utils$1: void <init>()>();

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>(r0, $r1);

        return;
    }

    public static android.util.Range[] intersectSortedDistinctRanges(android.util.Range[], android.util.Range[])
    {
        android.util.Range[] r0, r1, r3, $r6, $r8;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.util.Vector r2, $r5;
        android.util.Range r4, $r10, $r12, $r13, $r14, $r17, $r18, $r20;
        java.lang.Object[] $r7;
        java.lang.Comparable $r9, $r11, $r15, $r16, $r19, $r21;

        r0 := @parameter0: android.util.Range[];

        r1 := @parameter1: android.util.Range[];

        i0 = 0;

        $r5 = new java.util.Vector;

        specialinvoke $r5.<java.util.Vector: void <init>()>();

        r2 = $r5;

        r3 = r1;

        i1 = lengthof r3;

        i2 = 0;

     label1:
        if i2 >= i1 goto label7;

        r4 = r3[i2];

     label2:
        $i4 = lengthof r0;

        if i0 >= $i4 goto label3;

        $r20 = r0[i0];

        $r19 = virtualinvoke $r20.<android.util.Range: java.lang.Comparable getUpper()>();

        $r21 = virtualinvoke r4.<android.util.Range: java.lang.Comparable getLower()>();

        $i9 = interfaceinvoke $r19.<java.lang.Comparable: int compareTo(java.lang.Object)>($r21);

        if $i9 >= 0 goto label3;

        i0 = i0 + 1;

        goto label2;

     label3:
        $i5 = lengthof r0;

        if i0 >= $i5 goto label4;

        $r14 = r0[i0];

        $r16 = virtualinvoke $r14.<android.util.Range: java.lang.Comparable getUpper()>();

        $r15 = virtualinvoke r4.<android.util.Range: java.lang.Comparable getUpper()>();

        $i8 = interfaceinvoke $r16.<java.lang.Comparable: int compareTo(java.lang.Object)>($r15);

        if $i8 >= 0 goto label4;

        $r17 = r0[i0];

        $r18 = virtualinvoke r4.<android.util.Range: android.util.Range intersect(android.util.Range)>($r17);

        virtualinvoke r2.<java.util.Vector: boolean add(java.lang.Object)>($r18);

        i0 = i0 + 1;

        goto label3;

     label4:
        $i6 = lengthof r0;

        if i0 != $i6 goto label5;

        goto label7;

     label5:
        $r10 = r0[i0];

        $r9 = virtualinvoke $r10.<android.util.Range: java.lang.Comparable getLower()>();

        $r11 = virtualinvoke r4.<android.util.Range: java.lang.Comparable getUpper()>();

        $i7 = interfaceinvoke $r9.<java.lang.Comparable: int compareTo(java.lang.Object)>($r11);

        if $i7 > 0 goto label6;

        $r13 = r0[i0];

        $r12 = virtualinvoke r4.<android.util.Range: android.util.Range intersect(android.util.Range)>($r13);

        virtualinvoke r2.<java.util.Vector: boolean add(java.lang.Object)>($r12);

     label6:
        i2 = i2 + 1;

        goto label1;

     label7:
        $i3 = virtualinvoke r2.<java.util.Vector: int size()>();

        $r6 = newarray (android.util.Range)[$i3];

        $r7 = virtualinvoke r2.<java.util.Vector: java.lang.Object[] toArray(java.lang.Object[])>($r6);

        $r8 = (android.util.Range[]) $r7;

        return $r8;
    }

    public static int binarySearchDistinctRanges(android.util.Range[], java.lang.Comparable)
    {
        android.util.Range[] r0;
        java.lang.Comparable r1;
        android.util.Range $r2;
        android.media.Utils$2 $r3;
        int $i0;

        r0 := @parameter0: android.util.Range[];

        r1 := @parameter1: java.lang.Comparable;

        $r2 = staticinvoke <android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>(r1, r1);

        $r3 = new android.media.Utils$2;

        specialinvoke $r3.<android.media.Utils$2: void <init>()>();

        $i0 = staticinvoke <java.util.Arrays: int binarySearch(java.lang.Object[],java.lang.Object,java.util.Comparator)>(r0, $r2, $r3);

        return $i0;
    }

    static int gcd(int, int)
    {
        int i0, i1, i2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 != 0 goto label1;

        if i1 != 0 goto label1;

        return 1;

     label1:
        if i1 >= 0 goto label2;

        i1 = neg i1;

     label2:
        if i0 >= 0 goto label3;

        i0 = neg i0;

     label3:
        if i0 == 0 goto label4;

        i2 = i1 % i0;

        i1 = i0;

        i0 = i2;

        goto label3;

     label4:
        return i1;
    }

    static android.util.Range factorRange(android.util.Range, int)
    {
        android.util.Range r0, $r7;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.Comparable $r1, $r4;
        java.lang.Integer $r2, $r3, $r5, $r6;

        r0 := @parameter0: android.util.Range;

        i0 := @parameter1: int;

        if i0 != 1 goto label1;

        return r0;

     label1:
        $r1 = virtualinvoke r0.<android.util.Range: java.lang.Comparable getLower()>();

        $r2 = (java.lang.Integer) $r1;

        $i1 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $i2 = staticinvoke <android.media.Utils: int divUp(int,int)>($i1, i0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4 = virtualinvoke r0.<android.util.Range: java.lang.Comparable getUpper()>();

        $r5 = (java.lang.Integer) $r4;

        $i3 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        $i4 = $i3 / i0;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r7 = staticinvoke <android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>($r3, $r6);

        return $r7;
    }

    static android.util.Range factorRange(android.util.Range, long)
    {
        android.util.Range r0, $r7;
        long l0, $l2, $l3, $l4, $l5;
        byte $b1;
        java.lang.Comparable $r1, $r4;
        java.lang.Long $r2, $r3, $r5, $r6;

        r0 := @parameter0: android.util.Range;

        l0 := @parameter1: long;

        $b1 = l0 cmp 1L;

        if $b1 != 0 goto label1;

        return r0;

     label1:
        $r1 = virtualinvoke r0.<android.util.Range: java.lang.Comparable getLower()>();

        $r2 = (java.lang.Long) $r1;

        $l2 = virtualinvoke $r2.<java.lang.Long: long longValue()>();

        $l3 = staticinvoke <android.media.Utils: long divUp(long,long)>($l2, l0);

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        $r4 = virtualinvoke r0.<android.util.Range: java.lang.Comparable getUpper()>();

        $r5 = (java.lang.Long) $r4;

        $l4 = virtualinvoke $r5.<java.lang.Long: long longValue()>();

        $l5 = $l4 / l0;

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        $r7 = staticinvoke <android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>($r3, $r6);

        return $r7;
    }

    private static android.util.Rational scaleRatio(android.util.Rational, int, int)
    {
        android.util.Rational r0, $r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, i7, i8;
        double $d0, $d1, $d2, $d3, $d4, $d5;

        r0 := @parameter0: android.util.Rational;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = staticinvoke <android.media.Utils: int gcd(int,int)>(i0, i1);

        i7 = i0 / i2;

        i8 = i1 / i2;

        $r1 = new android.util.Rational;

        $i3 = virtualinvoke r0.<android.util.Rational: int getNumerator()>();

        $d1 = (double) $i3;

        $d0 = (double) i7;

        $d2 = $d1 * $d0;

        $i4 = (int) $d2;

        $i5 = virtualinvoke r0.<android.util.Rational: int getDenominator()>();

        $d4 = (double) $i5;

        $d3 = (double) i8;

        $d5 = $d4 * $d3;

        $i6 = (int) $d5;

        specialinvoke $r1.<android.util.Rational: void <init>(int,int)>($i4, $i6);

        return $r1;
    }

    static android.util.Range scaleRange(android.util.Range, int, int)
    {
        android.util.Range r0, $r7;
        int i0, i1;
        java.lang.Comparable $r1, $r4;
        android.util.Rational $r2, $r3, $r5, $r6;

        r0 := @parameter0: android.util.Range;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i0 != i1 goto label1;

        return r0;

     label1:
        $r1 = virtualinvoke r0.<android.util.Range: java.lang.Comparable getLower()>();

        $r2 = (android.util.Rational) $r1;

        $r3 = staticinvoke <android.media.Utils: android.util.Rational scaleRatio(android.util.Rational,int,int)>($r2, i0, i1);

        $r4 = virtualinvoke r0.<android.util.Range: java.lang.Comparable getUpper()>();

        $r5 = (android.util.Rational) $r4;

        $r6 = staticinvoke <android.media.Utils: android.util.Rational scaleRatio(android.util.Rational,int,int)>($r5, i0, i1);

        $r7 = staticinvoke <android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>($r3, $r6);

        return $r7;
    }

    static android.util.Range alignRange(android.util.Range, int)
    {
        android.util.Range r0, $r7;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Comparable $r1, $r4;
        java.lang.Integer $r2, $r3, $r5, $r6;

        r0 := @parameter0: android.util.Range;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<android.util.Range: java.lang.Comparable getLower()>();

        $r2 = (java.lang.Integer) $r1;

        $i1 = virtualinvoke $r2.<java.lang.Integer: int intValue()>();

        $i2 = staticinvoke <android.media.Utils: int divUp(int,int)>($i1, i0);

        $i3 = $i2 * i0;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r4 = virtualinvoke r0.<android.util.Range: java.lang.Comparable getUpper()>();

        $r5 = (java.lang.Integer) $r4;

        $i4 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        $i5 = $i4 / i0;

        $i6 = $i5 * i0;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r7 = virtualinvoke r0.<android.util.Range: android.util.Range intersect(java.lang.Comparable,java.lang.Comparable)>($r3, $r6);

        return $r7;
    }

    static int divUp(int, int)
    {
        int i0, i1, $i2, $i3, $i4;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i0 + i1;

        $i3 = $i2 - 1;

        $i4 = $i3 / i1;

        return $i4;
    }

    private static long divUp(long, long)
    {
        long l0, l1, $l2, $l3, $l4;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        $l2 = l0 + l1;

        $l3 = $l2 - 1L;

        $l4 = $l3 / l1;

        return $l4;
    }

    private static long lcm(int, int)
    {
        int i0, i1, $i5;
        java.lang.IllegalArgumentException $r0;
        long $l2, $l3, $l4, $l6, $l7;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 == 0 goto label1;

        if i1 != 0 goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("lce is not defined for zero arguments");

        throw $r0;

     label2:
        $l3 = (long) i0;

        $l2 = (long) i1;

        $l4 = $l3 * $l2;

        $i5 = staticinvoke <android.media.Utils: int gcd(int,int)>(i0, i1);

        $l6 = (long) $i5;

        $l7 = $l4 / $l6;

        return $l7;
    }

    static android.util.Range intRangeFor(double)
    {
        double d0, $d1;
        int $i0, $i1;
        java.lang.Integer $r0, $r1;
        android.util.Range $r2;

        d0 := @parameter0: double;

        $i0 = (int) d0;

        $r0 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>(d0);

        $i1 = (int) $d1;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r2 = staticinvoke <android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>($r0, $r1);

        return $r2;
    }

    static android.util.Range longRangeFor(double)
    {
        double d0, $d1;
        long $l0, $l1;
        java.lang.Long $r0, $r1;
        android.util.Range $r2;

        d0 := @parameter0: double;

        $l0 = (long) d0;

        $r0 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>(d0);

        $l1 = (long) $d1;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r2 = staticinvoke <android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>($r0, $r1);

        return $r2;
    }

    static android.util.Size parseSize(java.lang.Object, android.util.Size)
    {
        java.lang.Object r0;
        android.util.Size r1, $r4;
        java.lang.String $r3, $r10;
        java.lang.NumberFormatException $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;
        java.lang.NullPointerException $r11;
        java.lang.ClassCastException $r12;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: android.util.Size;

     label1:
        $r3 = (java.lang.String) r0;

        $r4 = staticinvoke <android.util.Size: android.util.Size parseSize(java.lang.String)>($r3);

     label2:
        return $r4;

     label3:
        $r12 := @caughtexception;

        goto label6;

     label4:
        $r5 := @caughtexception;

        goto label6;

     label5:
        $r11 := @caughtexception;

        return r1;

     label6:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not parse size \'");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Utils", $r10);

        return r1;

        catch java.lang.ClassCastException from label1 to label2 with label3;
        catch java.lang.NumberFormatException from label1 to label2 with label4;
        catch java.lang.NullPointerException from label1 to label2 with label5;
    }

    static int parseIntSafely(java.lang.Object, int)
    {
        java.lang.Object r0;
        int i0, $i1;
        java.lang.String r1, $r7;
        java.lang.NumberFormatException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.ClassCastException $r8;
        java.lang.NullPointerException $r9;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

     label1:
        r1 = (java.lang.String) r0;

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

     label2:
        return $i1;

     label3:
        $r8 := @caughtexception;

        goto label6;

     label4:
        $r2 := @caughtexception;

        goto label6;

     label5:
        $r9 := @caughtexception;

        return i0;

     label6:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not parse integer \'");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Utils", $r7);

        return i0;

        catch java.lang.ClassCastException from label1 to label2 with label3;
        catch java.lang.NumberFormatException from label1 to label2 with label4;
        catch java.lang.NullPointerException from label1 to label2 with label5;
    }

    static android.util.Range parseIntRange(java.lang.Object, android.util.Range)
    {
        java.lang.Object r0;
        android.util.Range r1, $r5, $r9;
        java.lang.String r2, $r6, $r8, $r16;
        int i0, i1, $i2, $i3, $i4;
        java.lang.Integer $r3, $r4, $r7, $r10;
        java.lang.StringBuilder $r11, $r13, $r14, $r15;
        java.lang.ClassCastException $r12;
        java.lang.IllegalArgumentException $r17;
        java.lang.NumberFormatException $r18;
        java.lang.NullPointerException $r19;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: android.util.Range;

     label1:
        r2 = (java.lang.String) r0;

        i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45);

        if i0 < 0 goto label3;

        $r6 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r6, 10);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $i3 = i0 + 1;

        $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3);

        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r8, 10);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r9 = staticinvoke <android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>($r7, $r10);

     label2:
        return $r9;

     label3:
        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r5 = staticinvoke <android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>($r3, $r4);

     label4:
        return $r5;

     label5:
        $r12 := @caughtexception;

        goto label9;

     label6:
        $r18 := @caughtexception;

        goto label9;

     label7:
        $r19 := @caughtexception;

        return r1;

     label8:
        $r17 := @caughtexception;

     label9:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not parse integer range \'");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Utils", $r16);

        return r1;

        catch java.lang.ClassCastException from label1 to label2 with label5;
        catch java.lang.ClassCastException from label3 to label4 with label5;
        catch java.lang.NumberFormatException from label1 to label2 with label6;
        catch java.lang.NumberFormatException from label3 to label4 with label6;
        catch java.lang.NullPointerException from label1 to label2 with label7;
        catch java.lang.NullPointerException from label3 to label4 with label7;
        catch java.lang.IllegalArgumentException from label1 to label2 with label8;
        catch java.lang.IllegalArgumentException from label3 to label4 with label8;
    }

    static android.util.Range parseLongRange(java.lang.Object, android.util.Range)
    {
        java.lang.Object r0;
        android.util.Range r1, $r5, $r11;
        java.lang.String r2, $r6, $r8, $r15;
        int i0, $i3;
        long l1, $l2, $l4;
        java.lang.Long $r3, $r4, $r7, $r9;
        java.lang.ClassCastException $r10;
        java.lang.StringBuilder $r12, $r13, $r14, $r16;
        java.lang.NumberFormatException $r17;
        java.lang.NullPointerException $r18;
        java.lang.IllegalArgumentException $r19;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: android.util.Range;

     label1:
        r2 = (java.lang.String) r0;

        i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45);

        if i0 < 0 goto label3;

        $r6 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $l2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>($r6, 10);

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $i3 = i0 + 1;

        $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i3);

        $l4 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>($r8, 10);

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        $r11 = staticinvoke <android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>($r7, $r9);

     label2:
        return $r11;

     label3:
        l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r2);

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r5 = staticinvoke <android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>($r3, $r4);

     label4:
        return $r5;

     label5:
        $r10 := @caughtexception;

        goto label9;

     label6:
        $r17 := @caughtexception;

        goto label9;

     label7:
        $r18 := @caughtexception;

        return r1;

     label8:
        $r19 := @caughtexception;

     label9:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not parse long range \'");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Utils", $r15);

        return r1;

        catch java.lang.ClassCastException from label1 to label2 with label5;
        catch java.lang.ClassCastException from label3 to label4 with label5;
        catch java.lang.NumberFormatException from label1 to label2 with label6;
        catch java.lang.NumberFormatException from label3 to label4 with label6;
        catch java.lang.NullPointerException from label1 to label2 with label7;
        catch java.lang.NullPointerException from label3 to label4 with label7;
        catch java.lang.IllegalArgumentException from label1 to label2 with label8;
        catch java.lang.IllegalArgumentException from label3 to label4 with label8;
    }

    static android.util.Range parseRationalRange(java.lang.Object, android.util.Range)
    {
        java.lang.Object r0;
        android.util.Range r1, $r4, $r9;
        java.lang.String r2, $r5, $r7, $r15;
        int i0, $i1;
        android.util.Rational r3, $r6, $r8;
        java.lang.NullPointerException $r10;
        java.lang.IllegalArgumentException $r11;
        java.lang.StringBuilder $r12, $r13, $r14, $r16;
        java.lang.ClassCastException $r17;
        java.lang.NumberFormatException $r18;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: android.util.Range;

     label1:
        r2 = (java.lang.String) r0;

        i0 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(45);

        if i0 < 0 goto label3;

        $r5 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $r6 = staticinvoke <android.util.Rational: android.util.Rational parseRational(java.lang.String)>($r5);

        $i1 = i0 + 1;

        $r7 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i1);

        $r8 = staticinvoke <android.util.Rational: android.util.Rational parseRational(java.lang.String)>($r7);

        $r9 = staticinvoke <android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>($r6, $r8);

     label2:
        return $r9;

     label3:
        r3 = staticinvoke <android.util.Rational: android.util.Rational parseRational(java.lang.String)>(r2);

        $r4 = staticinvoke <android.util.Range: android.util.Range create(java.lang.Comparable,java.lang.Comparable)>(r3, r3);

     label4:
        return $r4;

     label5:
        $r17 := @caughtexception;

        goto label9;

     label6:
        $r18 := @caughtexception;

        goto label9;

     label7:
        $r10 := @caughtexception;

        return r1;

     label8:
        $r11 := @caughtexception;

     label9:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not parse rational range \'");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Utils", $r15);

        return r1;

        catch java.lang.ClassCastException from label1 to label2 with label5;
        catch java.lang.ClassCastException from label3 to label4 with label5;
        catch java.lang.NumberFormatException from label1 to label2 with label6;
        catch java.lang.NumberFormatException from label3 to label4 with label6;
        catch java.lang.NullPointerException from label1 to label2 with label7;
        catch java.lang.NullPointerException from label3 to label4 with label7;
        catch java.lang.IllegalArgumentException from label1 to label2 with label8;
        catch java.lang.IllegalArgumentException from label3 to label4 with label8;
    }

    static android.util.Pair parseSizeRange(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.String r1, $r4, $r6, $r13;
        int i0, $i1;
        android.util.Size r2, $r5, $r7;
        android.util.Pair $r3, $r8;
        java.lang.IllegalArgumentException $r9;
        java.lang.StringBuilder $r10, $r11, $r12, $r14;
        java.lang.NumberFormatException $r15;
        java.lang.NullPointerException $r16;
        java.lang.ClassCastException $r17;

        r0 := @parameter0: java.lang.Object;

     label1:
        r1 = (java.lang.String) r0;

        i0 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(45);

        if i0 < 0 goto label3;

        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $r5 = staticinvoke <android.util.Size: android.util.Size parseSize(java.lang.String)>($r4);

        $i1 = i0 + 1;

        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i1);

        $r7 = staticinvoke <android.util.Size: android.util.Size parseSize(java.lang.String)>($r6);

        $r8 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>($r5, $r7);

     label2:
        return $r8;

     label3:
        r2 = staticinvoke <android.util.Size: android.util.Size parseSize(java.lang.String)>(r1);

        $r3 = staticinvoke <android.util.Pair: android.util.Pair create(java.lang.Object,java.lang.Object)>(r2, r2);

     label4:
        return $r3;

     label5:
        $r17 := @caughtexception;

        goto label9;

     label6:
        $r15 := @caughtexception;

        goto label9;

     label7:
        $r16 := @caughtexception;

        return null;

     label8:
        $r9 := @caughtexception;

     label9:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("could not parse size range \'");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Utils", $r13);

        return null;

        catch java.lang.ClassCastException from label1 to label2 with label5;
        catch java.lang.ClassCastException from label3 to label4 with label5;
        catch java.lang.NumberFormatException from label1 to label2 with label6;
        catch java.lang.NumberFormatException from label3 to label4 with label6;
        catch java.lang.NullPointerException from label1 to label2 with label7;
        catch java.lang.NullPointerException from label3 to label4 with label7;
        catch java.lang.IllegalArgumentException from label1 to label2 with label8;
        catch java.lang.IllegalArgumentException from label3 to label4 with label8;
    }

    public static void <clinit>()
    {
        <android.media.Utils: java.lang.String TAG> = "Utils";

        return;
    }
}
