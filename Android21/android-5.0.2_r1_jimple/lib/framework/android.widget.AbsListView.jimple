public abstract class android.widget.AbsListView extends android.widget.AdapterView implements android.text.TextWatcher, android.view.ViewTreeObserver$OnGlobalLayoutListener, android.widget.Filter$FilterListener, android.view.ViewTreeObserver$OnTouchModeChangeListener, android.widget.RemoteViewsAdapter$RemoteAdapterConnectionCallback
{
    private static final java.lang.String TAG;
    public static final int TRANSCRIPT_MODE_DISABLED;
    public static final int TRANSCRIPT_MODE_NORMAL;
    public static final int TRANSCRIPT_MODE_ALWAYS_SCROLL;
    static final int TOUCH_MODE_REST;
    static final int TOUCH_MODE_DOWN;
    static final int TOUCH_MODE_TAP;
    static final int TOUCH_MODE_DONE_WAITING;
    static final int TOUCH_MODE_SCROLL;
    static final int TOUCH_MODE_FLING;
    static final int TOUCH_MODE_OVERSCROLL;
    static final int TOUCH_MODE_OVERFLING;
    static final int LAYOUT_NORMAL;
    static final int LAYOUT_FORCE_TOP;
    static final int LAYOUT_SET_SELECTION;
    static final int LAYOUT_FORCE_BOTTOM;
    static final int LAYOUT_SPECIFIC;
    static final int LAYOUT_SYNC;
    static final int LAYOUT_MOVE_SELECTION;
    public static final int CHOICE_MODE_NONE;
    public static final int CHOICE_MODE_SINGLE;
    public static final int CHOICE_MODE_MULTIPLE;
    public static final int CHOICE_MODE_MULTIPLE_MODAL;
    private final java.lang.Thread mOwnerThread;
    int mChoiceMode;
    android.view.ActionMode mChoiceActionMode;
    android.widget.AbsListView$MultiChoiceModeWrapper mMultiChoiceModeCallback;
    int mCheckedItemCount;
    android.util.SparseBooleanArray mCheckStates;
    android.util.LongSparseArray mCheckedIdStates;
    int mLayoutMode;
    android.widget.AbsListView$AdapterDataSetObserver mDataSetObserver;
    android.widget.ListAdapter mAdapter;
    private android.widget.RemoteViewsAdapter mRemoteAdapter;
    boolean mAdapterHasStableIds;
    private boolean mDeferNotifyDataSetChanged;
    boolean mDrawSelectorOnTop;
    android.graphics.drawable.Drawable mSelector;
    int mSelectorPosition;
    android.graphics.Rect mSelectorRect;
    final android.widget.AbsListView$RecycleBin mRecycler;
    int mSelectionLeftPadding;
    int mSelectionTopPadding;
    int mSelectionRightPadding;
    int mSelectionBottomPadding;
    android.graphics.Rect mListPadding;
    int mWidthMeasureSpec;
    android.view.View mScrollUp;
    android.view.View mScrollDown;
    boolean mCachingStarted;
    boolean mCachingActive;
    int mMotionPosition;
    int mMotionViewOriginalTop;
    int mMotionViewNewTop;
    int mMotionX;
    int mMotionY;
    int mTouchMode;
    int mLastY;
    int mMotionCorrection;
    private android.view.VelocityTracker mVelocityTracker;
    private android.widget.AbsListView$FlingRunnable mFlingRunnable;
    android.widget.AbsListView$AbsPositionScroller mPositionScroller;
    int mSelectedTop;
    boolean mStackFromBottom;
    boolean mScrollingCacheEnabled;
    boolean mFastScrollEnabled;
    boolean mFastScrollAlwaysVisible;
    private android.widget.AbsListView$OnScrollListener mOnScrollListener;
    android.widget.PopupWindow mPopup;
    android.widget.EditText mTextFilter;
    private boolean mSmoothScrollbarEnabled;
    private boolean mTextFilterEnabled;
    private boolean mFiltered;
    private android.graphics.Rect mTouchFrame;
    int mResurrectToPosition;
    private android.view.ContextMenu$ContextMenuInfo mContextMenuInfo;
    int mOverscrollMax;
    static final int OVERSCROLL_LIMIT_DIVISOR;
    private static final int CHECK_POSITION_SEARCH_DISTANCE;
    private static final int TOUCH_MODE_UNKNOWN;
    private static final int TOUCH_MODE_ON;
    private static final int TOUCH_MODE_OFF;
    private int mLastTouchMode;
    private static final boolean PROFILE_SCROLLING;
    private boolean mScrollProfilingStarted;
    private static final boolean PROFILE_FLINGING;
    private boolean mFlingProfilingStarted;
    private android.os.StrictMode$Span mScrollStrictSpan;
    private android.os.StrictMode$Span mFlingStrictSpan;
    private android.widget.AbsListView$CheckForLongPress mPendingCheckForLongPress;
    private android.widget.AbsListView$CheckForTap mPendingCheckForTap;
    private android.widget.AbsListView$CheckForKeyLongPress mPendingCheckForKeyLongPress;
    private android.widget.AbsListView$PerformClick mPerformClick;
    private java.lang.Runnable mTouchModeReset;
    private int mTranscriptMode;
    private int mCacheColorHint;
    private boolean mIsChildViewEnabled;
    private int mLastScrollState;
    private android.widget.FastScroller mFastScroll;
    private int mFastScrollStyle;
    private boolean mGlobalLayoutListenerAddedFilter;
    private int mTouchSlop;
    private float mDensityScale;
    private android.view.inputmethod.InputConnection mDefInputConnection;
    private android.widget.AbsListView$InputConnectionWrapper mPublicInputConnection;
    private java.lang.Runnable mClearScrollingCache;
    java.lang.Runnable mPositionScrollAfterLayout;
    private int mMinimumVelocity;
    private int mMaximumVelocity;
    private float mVelocityScale;
    final boolean[] mIsScrap;
    private final int[] mScrollOffset;
    private final int[] mScrollConsumed;
    private int mNestedYOffset;
    private boolean mPopupHidden;
    private int mActivePointerId;
    private static final int INVALID_POINTER;
    int mOverscrollDistance;
    int mOverflingDistance;
    private android.widget.EdgeEffect mEdgeGlowTop;
    private android.widget.EdgeEffect mEdgeGlowBottom;
    private int mFirstPositionDistanceGuess;
    private int mLastPositionDistanceGuess;
    private int mDirection;
    private boolean mForceTranscriptScroll;
    private int mGlowPaddingLeft;
    private int mGlowPaddingRight;
    private android.widget.AbsListView$ListItemAccessibilityDelegate mAccessibilityDelegate;
    private int mLastAccessibilityScrollEventFromIndex;
    private int mLastAccessibilityScrollEventToIndex;
    private int mLastHandledItemCount;
    static final android.view.animation.Interpolator sLinearInterpolator;
    private android.widget.AbsListView$SavedState mPendingSync;
    private boolean mIsDetaching;

    public void <init>(android.content.Context)
    {
        android.widget.AbsListView r0;
        android.content.Context r1;
        android.content.res.TypedArray r2;
        android.graphics.Rect $r3, $r5;
        android.widget.AbsListView$RecycleBin $r4;
        boolean[] $r6;
        int[] $r7, $r8, $r10;
        java.lang.Thread $r9;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.AdapterView: void <init>(android.content.Context)>(r1);

        r0.<android.widget.AbsListView: int mChoiceMode> = 0;

        r0.<android.widget.AbsListView: int mLayoutMode> = 0;

        r0.<android.widget.AbsListView: boolean mDeferNotifyDataSetChanged> = 0;

        r0.<android.widget.AbsListView: boolean mDrawSelectorOnTop> = 0;

        r0.<android.widget.AbsListView: int mSelectorPosition> = -1;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<android.widget.AbsListView: android.graphics.Rect mSelectorRect> = $r3;

        $r4 = new android.widget.AbsListView$RecycleBin;

        specialinvoke $r4.<android.widget.AbsListView$RecycleBin: void <init>(android.widget.AbsListView)>(r0);

        r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler> = $r4;

        r0.<android.widget.AbsListView: int mSelectionLeftPadding> = 0;

        r0.<android.widget.AbsListView: int mSelectionTopPadding> = 0;

        r0.<android.widget.AbsListView: int mSelectionRightPadding> = 0;

        r0.<android.widget.AbsListView: int mSelectionBottomPadding> = 0;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<android.widget.AbsListView: android.graphics.Rect mListPadding> = $r5;

        r0.<android.widget.AbsListView: int mWidthMeasureSpec> = 0;

        r0.<android.widget.AbsListView: int mTouchMode> = -1;

        r0.<android.widget.AbsListView: int mSelectedTop> = 0;

        r0.<android.widget.AbsListView: boolean mSmoothScrollbarEnabled> = 1;

        r0.<android.widget.AbsListView: int mResurrectToPosition> = -1;

        r0.<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo mContextMenuInfo> = null;

        r0.<android.widget.AbsListView: int mLastTouchMode> = -1;

        r0.<android.widget.AbsListView: boolean mScrollProfilingStarted> = 0;

        r0.<android.widget.AbsListView: boolean mFlingProfilingStarted> = 0;

        r0.<android.widget.AbsListView: android.os.StrictMode$Span mScrollStrictSpan> = null;

        r0.<android.widget.AbsListView: android.os.StrictMode$Span mFlingStrictSpan> = null;

        r0.<android.widget.AbsListView: int mLastScrollState> = 0;

        r0.<android.widget.AbsListView: float mVelocityScale> = 1.0F;

        $r6 = newarray (boolean)[1];

        r0.<android.widget.AbsListView: boolean[] mIsScrap> = $r6;

        $r7 = newarray (int)[2];

        r0.<android.widget.AbsListView: int[] mScrollOffset> = $r7;

        $r8 = newarray (int)[2];

        r0.<android.widget.AbsListView: int[] mScrollConsumed> = $r8;

        r0.<android.widget.AbsListView: int mNestedYOffset> = 0;

        r0.<android.widget.AbsListView: int mActivePointerId> = -1;

        r0.<android.widget.AbsListView: int mDirection> = 0;

        specialinvoke r0.<android.widget.AbsListView: void initAbsListView()>();

        $r9 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r0.<android.widget.AbsListView: java.lang.Thread mOwnerThread> = $r9;

        virtualinvoke r0.<android.widget.AbsListView: void setVerticalScrollBarEnabled(boolean)>(1);

        $r10 = <com.android.internal.R$styleable: int[] View>;

        r2 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(int[])>($r10);

        virtualinvoke r0.<android.widget.AbsListView: void initializeScrollbarsInternal(android.content.res.TypedArray)>(r2);

        virtualinvoke r2.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.AbsListView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.AbsListView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 16842858);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.AbsListView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.AbsListView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.widget.AbsListView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, i1, i2, i3, i4, $i5;
        android.content.res.TypedArray r3;
        android.graphics.drawable.Drawable r4;
        boolean z0, z1, z2, z3, z4, $z5, $z6;
        android.graphics.Rect $r5, $r6;
        android.widget.AbsListView$RecycleBin $r7;
        int[] $r8, $r11, $r12;
        boolean[] $r9;
        java.lang.Thread $r10;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.widget.AdapterView: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, i1);

        r0.<android.widget.AbsListView: int mChoiceMode> = 0;

        r0.<android.widget.AbsListView: int mLayoutMode> = 0;

        r0.<android.widget.AbsListView: boolean mDeferNotifyDataSetChanged> = 0;

        r0.<android.widget.AbsListView: boolean mDrawSelectorOnTop> = 0;

        r0.<android.widget.AbsListView: int mSelectorPosition> = -1;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<android.widget.AbsListView: android.graphics.Rect mSelectorRect> = $r5;

        $r7 = new android.widget.AbsListView$RecycleBin;

        specialinvoke $r7.<android.widget.AbsListView$RecycleBin: void <init>(android.widget.AbsListView)>(r0);

        r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler> = $r7;

        r0.<android.widget.AbsListView: int mSelectionLeftPadding> = 0;

        r0.<android.widget.AbsListView: int mSelectionTopPadding> = 0;

        r0.<android.widget.AbsListView: int mSelectionRightPadding> = 0;

        r0.<android.widget.AbsListView: int mSelectionBottomPadding> = 0;

        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<android.graphics.Rect: void <init>()>();

        r0.<android.widget.AbsListView: android.graphics.Rect mListPadding> = $r6;

        r0.<android.widget.AbsListView: int mWidthMeasureSpec> = 0;

        r0.<android.widget.AbsListView: int mTouchMode> = -1;

        r0.<android.widget.AbsListView: int mSelectedTop> = 0;

        r0.<android.widget.AbsListView: boolean mSmoothScrollbarEnabled> = 1;

        r0.<android.widget.AbsListView: int mResurrectToPosition> = -1;

        r0.<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo mContextMenuInfo> = null;

        r0.<android.widget.AbsListView: int mLastTouchMode> = -1;

        r0.<android.widget.AbsListView: boolean mScrollProfilingStarted> = 0;

        r0.<android.widget.AbsListView: boolean mFlingProfilingStarted> = 0;

        r0.<android.widget.AbsListView: android.os.StrictMode$Span mScrollStrictSpan> = null;

        r0.<android.widget.AbsListView: android.os.StrictMode$Span mFlingStrictSpan> = null;

        r0.<android.widget.AbsListView: int mLastScrollState> = 0;

        r0.<android.widget.AbsListView: float mVelocityScale> = 1.0F;

        $r9 = newarray (boolean)[1];

        r0.<android.widget.AbsListView: boolean[] mIsScrap> = $r9;

        $r8 = newarray (int)[2];

        r0.<android.widget.AbsListView: int[] mScrollOffset> = $r8;

        $r11 = newarray (int)[2];

        r0.<android.widget.AbsListView: int[] mScrollConsumed> = $r11;

        r0.<android.widget.AbsListView: int mNestedYOffset> = 0;

        r0.<android.widget.AbsListView: int mActivePointerId> = -1;

        r0.<android.widget.AbsListView: int mDirection> = 0;

        specialinvoke r0.<android.widget.AbsListView: void initAbsListView()>();

        $r10 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r0.<android.widget.AbsListView: java.lang.Thread mOwnerThread> = $r10;

        $r12 = <com.android.internal.R$styleable: int[] AbsListView>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r12, i0, i1);

        r4 = virtualinvoke r3.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(0);

        if r4 == null goto label1;

        virtualinvoke r0.<android.widget.AbsListView: void setSelector(android.graphics.drawable.Drawable)>(r4);

     label1:
        $z5 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(1, 0);

        r0.<android.widget.AbsListView: boolean mDrawSelectorOnTop> = $z5;

        z0 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(2, 0);

        virtualinvoke r0.<android.widget.AbsListView: void setStackFromBottom(boolean)>(z0);

        z1 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(3, 1);

        virtualinvoke r0.<android.widget.AbsListView: void setScrollingCacheEnabled(boolean)>(z1);

        z2 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(4, 0);

        virtualinvoke r0.<android.widget.AbsListView: void setTextFilterEnabled(boolean)>(z2);

        i2 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(5, 0);

        virtualinvoke r0.<android.widget.AbsListView: void setTranscriptMode(int)>(i2);

        i3 = virtualinvoke r3.<android.content.res.TypedArray: int getColor(int,int)>(6, 0);

        virtualinvoke r0.<android.widget.AbsListView: void setCacheColorHint(int)>(i3);

        z3 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(8, 0);

        virtualinvoke r0.<android.widget.AbsListView: void setFastScrollEnabled(boolean)>(z3);

        i4 = virtualinvoke r3.<android.content.res.TypedArray: int getResourceId(int,int)>(11, 0);

        virtualinvoke r0.<android.widget.AbsListView: void setFastScrollStyle(int)>(i4);

        z4 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(9, 1);

        virtualinvoke r0.<android.widget.AbsListView: void setSmoothScrollbarEnabled(boolean)>(z4);

        $i5 = virtualinvoke r3.<android.content.res.TypedArray: int getInt(int,int)>(7, 0);

        virtualinvoke r0.<android.widget.AbsListView: void setChoiceMode(int)>($i5);

        $z6 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(10, 0);

        virtualinvoke r0.<android.widget.AbsListView: void setFastScrollAlwaysVisible(boolean)>($z6);

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        return;
    }

    private void initAbsListView()
    {
        android.widget.AbsListView r0;
        android.view.ViewConfiguration r1;
        android.content.Context $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4;
        android.content.res.Resources $r4;
        android.util.DisplayMetrics $r5;
        float $f0;

        r0 := @this: android.widget.AbsListView;

        virtualinvoke r0.<android.widget.AbsListView: void setClickable(boolean)>(1);

        virtualinvoke r0.<android.widget.AbsListView: void setFocusableInTouchMode(boolean)>(1);

        virtualinvoke r0.<android.widget.AbsListView: void setWillNotDraw(boolean)>(0);

        virtualinvoke r0.<android.widget.AbsListView: void setAlwaysDrawnWithCacheEnabled(boolean)>(0);

        virtualinvoke r0.<android.widget.AbsListView: void setScrollingCacheEnabled(boolean)>(1);

        $r2 = r0.<android.widget.AbsListView: android.content.Context mContext>;

        r1 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r2);

        $i0 = virtualinvoke r1.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        r0.<android.widget.AbsListView: int mTouchSlop> = $i0;

        $i1 = virtualinvoke r1.<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>();

        r0.<android.widget.AbsListView: int mMinimumVelocity> = $i1;

        $i2 = virtualinvoke r1.<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>();

        r0.<android.widget.AbsListView: int mMaximumVelocity> = $i2;

        $i3 = virtualinvoke r1.<android.view.ViewConfiguration: int getScaledOverscrollDistance()>();

        r0.<android.widget.AbsListView: int mOverscrollDistance> = $i3;

        $i4 = virtualinvoke r1.<android.view.ViewConfiguration: int getScaledOverflingDistance()>();

        r0.<android.widget.AbsListView: int mOverflingDistance> = $i4;

        $r3 = virtualinvoke r0.<android.widget.AbsListView: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = virtualinvoke $r4.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = $r5.<android.util.DisplayMetrics: float density>;

        r0.<android.widget.AbsListView: float mDensityScale> = $f0;

        return;
    }

    public void setOverScrollMode(int)
    {
        android.widget.AbsListView r0;
        int i0;
        android.content.Context r1;
        android.widget.EdgeEffect $r2, $r3, $r4;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        if i0 == 2 goto label1;

        $r2 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        if $r2 != null goto label2;

        r1 = virtualinvoke r0.<android.widget.AbsListView: android.content.Context getContext()>();

        $r3 = new android.widget.EdgeEffect;

        specialinvoke $r3.<android.widget.EdgeEffect: void <init>(android.content.Context)>(r1);

        r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop> = $r3;

        $r4 = new android.widget.EdgeEffect;

        specialinvoke $r4.<android.widget.EdgeEffect: void <init>(android.content.Context)>(r1);

        r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom> = $r4;

        goto label2;

     label1:
        r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop> = null;

        r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom> = null;

     label2:
        specialinvoke r0.<android.widget.AdapterView: void setOverScrollMode(int)>(i0);

        return;
    }

    public void setAdapter(android.widget.ListAdapter)
    {
        android.widget.AbsListView r0;
        android.widget.ListAdapter r1, $r6;
        android.util.SparseBooleanArray $r2, $r5;
        android.util.LongSparseArray $r3, $r4, $r7, $r8;
        boolean $z0, $z1;
        int $i0;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.widget.ListAdapter;

        if r1 == null goto label1;

        $r6 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $z0 = interfaceinvoke $r6.<android.widget.ListAdapter: boolean hasStableIds()>();

        r0.<android.widget.AbsListView: boolean mAdapterHasStableIds> = $z0;

        $i0 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i0 == 0 goto label1;

        $z1 = r0.<android.widget.AbsListView: boolean mAdapterHasStableIds>;

        if $z1 == 0 goto label1;

        $r7 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        if $r7 != null goto label1;

        $r8 = new android.util.LongSparseArray;

        specialinvoke $r8.<android.util.LongSparseArray: void <init>()>();

        r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates> = $r8;

     label1:
        $r2 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        if $r2 == null goto label2;

        $r5 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        virtualinvoke $r5.<android.util.SparseBooleanArray: void clear()>();

     label2:
        $r3 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        if $r3 == null goto label3;

        $r4 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        virtualinvoke $r4.<android.util.LongSparseArray: void clear()>();

     label3:
        return;
    }

    public int getCheckedItemCount()
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mCheckedItemCount>;

        return $i0;
    }

    public boolean isItemChecked(int)
    {
        android.widget.AbsListView r0;
        int i0, $i1;
        android.util.SparseBooleanArray $r1, $r2;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        $i1 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i1 == 0 goto label1;

        $r1 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        $z0 = virtualinvoke $r2.<android.util.SparseBooleanArray: boolean get(int)>(i0);

        return $z0;

     label1:
        return 0;
    }

    public int getCheckedItemPosition()
    {
        android.widget.AbsListView r0;
        int $i0, $i1, $i2;
        android.util.SparseBooleanArray $r1, $r2, $r3;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i0 != 1 goto label1;

        $r1 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        $i1 = virtualinvoke $r2.<android.util.SparseBooleanArray: int size()>();

        if $i1 != 1 goto label1;

        $r3 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        $i2 = virtualinvoke $r3.<android.util.SparseBooleanArray: int keyAt(int)>(0);

        return $i2;

     label1:
        return -1;
    }

    public android.util.SparseBooleanArray getCheckedItemPositions()
    {
        android.widget.AbsListView r0;
        int $i0;
        android.util.SparseBooleanArray $r1;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i0 == 0 goto label1;

        $r1 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        return $r1;

     label1:
        return null;
    }

    public long[] getCheckedItemIds()
    {
        android.widget.AbsListView r0;
        android.util.LongSparseArray r1, $r4;
        int i0, i1, $i2;
        long[] r2, $r3;
        android.widget.ListAdapter $r5;
        long $l3;

        r0 := @this: android.widget.AbsListView;

        $i2 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i2 == 0 goto label1;

        $r4 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        if $r4 == null goto label1;

        $r5 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        if $r5 != null goto label2;

     label1:
        $r3 = newarray (long)[0];

        return $r3;

     label2:
        r1 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        i0 = virtualinvoke r1.<android.util.LongSparseArray: int size()>();

        r2 = newarray (long)[i0];

        i1 = 0;

     label3:
        if i1 >= i0 goto label4;

        $l3 = virtualinvoke r1.<android.util.LongSparseArray: long keyAt(int)>(i1);

        r2[i1] = $l3;

        i1 = i1 + 1;

        goto label3;

     label4:
        return r2;
    }

    public void clearChoices()
    {
        android.widget.AbsListView r0;
        android.util.SparseBooleanArray $r1, $r4;
        android.util.LongSparseArray $r2, $r3;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        if $r1 == null goto label1;

        $r4 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        virtualinvoke $r4.<android.util.SparseBooleanArray: void clear()>();

     label1:
        $r2 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        if $r2 == null goto label2;

        $r3 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        virtualinvoke $r3.<android.util.LongSparseArray: void clear()>();

     label2:
        r0.<android.widget.AbsListView: int mCheckedItemCount> = 0;

        return;
    }

    public void setItemChecked(int, boolean)
    {
        android.widget.AbsListView r0;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i10, $i11, $i13;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10;
        long l1, $l8, $l9, $l12;
        android.util.SparseBooleanArray $r1, $r2, $r14, $r15, $r17, $r18;
        android.util.LongSparseArray $r3, $r10, $r11, $r16, $r21, $r23;
        android.view.ActionMode $r4, $r6, $r25, $r29;
        android.widget.ListAdapter $r5, $r8, $r9, $r12, $r20, $r22;
        android.widget.AbsListView$MultiChoiceModeWrapper $r7, $r24, $r26, $r27;
        java.lang.Integer $r13, $r19;
        java.lang.IllegalStateException $r28;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $i2 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i2 != 0 goto label01;

        return;

     label01:
        if z0 == 0 goto label04;

        $i13 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i13 != 3 goto label04;

        $r25 = r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode>;

        if $r25 != null goto label04;

        $r24 = r0.<android.widget.AbsListView: android.widget.AbsListView$MultiChoiceModeWrapper mMultiChoiceModeCallback>;

        if $r24 == null goto label02;

        $r27 = r0.<android.widget.AbsListView: android.widget.AbsListView$MultiChoiceModeWrapper mMultiChoiceModeCallback>;

        $z9 = virtualinvoke $r27.<android.widget.AbsListView$MultiChoiceModeWrapper: boolean hasWrappedCallback()>();

        if $z9 != 0 goto label03;

     label02:
        $r28 = new java.lang.IllegalStateException;

        specialinvoke $r28.<java.lang.IllegalStateException: void <init>(java.lang.String)>("AbsListView: attempted to start selection mode for CHOICE_MODE_MULTIPLE_MODAL but no choice mode callback was supplied. Call setMultiChoiceModeListener to set a callback.");

        throw $r28;

     label03:
        $r26 = r0.<android.widget.AbsListView: android.widget.AbsListView$MultiChoiceModeWrapper mMultiChoiceModeCallback>;

        $r29 = virtualinvoke r0.<android.widget.AbsListView: android.view.ActionMode startActionMode(android.view.ActionMode$Callback)>($r26);

        r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode> = $r29;

     label04:
        $i3 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i3 == 2 goto label05;

        $i10 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i10 != 3 goto label11;

     label05:
        $r1 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        z1 = virtualinvoke $r1.<android.util.SparseBooleanArray: boolean get(int)>(i0);

        $r2 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        virtualinvoke $r2.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, z0);

        $r3 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        if $r3 == null goto label07;

        $r8 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $z4 = interfaceinvoke $r8.<android.widget.ListAdapter: boolean hasStableIds()>();

        if $z4 == 0 goto label07;

        if z0 == 0 goto label06;

        $r11 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        $r12 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $l9 = interfaceinvoke $r12.<android.widget.ListAdapter: long getItemId(int)>(i0);

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r11.<android.util.LongSparseArray: void put(long,java.lang.Object)>($l9, $r13);

        goto label07;

     label06:
        $r10 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        $r9 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $l8 = interfaceinvoke $r9.<android.widget.ListAdapter: long getItemId(int)>(i0);

        virtualinvoke $r10.<android.util.LongSparseArray: void delete(long)>($l8);

     label07:
        if z1 == z0 goto label09;

        if z0 == 0 goto label08;

        $i5 = r0.<android.widget.AbsListView: int mCheckedItemCount>;

        $i7 = $i5 + 1;

        r0.<android.widget.AbsListView: int mCheckedItemCount> = $i7;

        goto label09;

     label08:
        $i4 = r0.<android.widget.AbsListView: int mCheckedItemCount>;

        $i6 = $i4 - 1;

        r0.<android.widget.AbsListView: int mCheckedItemCount> = $i6;

     label09:
        $r4 = r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode>;

        if $r4 == null goto label10;

        $r5 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        l1 = interfaceinvoke $r5.<android.widget.ListAdapter: long getItemId(int)>(i0);

        $r7 = r0.<android.widget.AbsListView: android.widget.AbsListView$MultiChoiceModeWrapper mMultiChoiceModeCallback>;

        $r6 = r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode>;

        virtualinvoke $r7.<android.widget.AbsListView$MultiChoiceModeWrapper: void onItemCheckedStateChanged(android.view.ActionMode,int,long,boolean)>($r6, i0, l1, z0);

     label10:
        goto label19;

     label11:
        $r16 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        if $r16 == null goto label12;

        $r22 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $z6 = interfaceinvoke $r22.<android.widget.ListAdapter: boolean hasStableIds()>();

        if $z6 == 0 goto label12;

        $z8 = 1;

        goto label13;

     label12:
        $z8 = 0;

     label13:
        z10 = $z8;

        if z0 != 0 goto label14;

        $z7 = virtualinvoke r0.<android.widget.AbsListView: boolean isItemChecked(int)>(i0);

        if $z7 == 0 goto label15;

     label14:
        $r14 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        virtualinvoke $r14.<android.util.SparseBooleanArray: void clear()>();

        if z10 == 0 goto label15;

        $r23 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        virtualinvoke $r23.<android.util.LongSparseArray: void clear()>();

     label15:
        if z0 == 0 goto label17;

        $r17 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        virtualinvoke $r17.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, 1);

        if z10 == 0 goto label16;

        $r21 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        $r20 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $l12 = interfaceinvoke $r20.<android.widget.ListAdapter: long getItemId(int)>(i0);

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r21.<android.util.LongSparseArray: void put(long,java.lang.Object)>($l12, $r19);

     label16:
        r0.<android.widget.AbsListView: int mCheckedItemCount> = 1;

        goto label19;

     label17:
        $r15 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        $i11 = virtualinvoke $r15.<android.util.SparseBooleanArray: int size()>();

        if $i11 == 0 goto label18;

        $r18 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        $z5 = virtualinvoke $r18.<android.util.SparseBooleanArray: boolean valueAt(int)>(0);

        if $z5 != 0 goto label19;

     label18:
        r0.<android.widget.AbsListView: int mCheckedItemCount> = 0;

     label19:
        $z2 = r0.<android.widget.AbsListView: boolean mInLayout>;

        if $z2 != 0 goto label20;

        $z3 = r0.<android.widget.AbsListView: boolean mBlockLayoutRequests>;

        if $z3 != 0 goto label20;

        r0.<android.widget.AbsListView: boolean mDataChanged> = 1;

        virtualinvoke r0.<android.widget.AbsListView: void rememberSyncState()>();

        virtualinvoke r0.<android.widget.AbsListView: void requestLayout()>();

     label20:
        return;
    }

    public boolean performItemClick(android.view.View, int, long)
    {
        android.widget.AbsListView r0;
        android.view.View r1;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i10, $i11, $i12;
        long l1, $l8, $l9, $l13;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, z12;
        android.util.SparseBooleanArray $r2, $r3, $r14, $r15, $r16, $r17, $r19;
        android.util.LongSparseArray $r4, $r10, $r11, $r18, $r20, $r24;
        android.view.ActionMode $r5, $r6, $r25;
        android.widget.AbsListView$MultiChoiceModeWrapper $r7;
        android.widget.ListAdapter $r8, $r9, $r12, $r21, $r22;
        java.lang.Integer $r13, $r23;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        z0 = 0;

        z1 = 1;

        $i2 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i2 == 0 goto label17;

        z0 = 1;

        z2 = 0;

        $i3 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i3 == 2 goto label01;

        $i11 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i11 != 3 goto label09;

        $r25 = r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode>;

        if $r25 == null goto label09;

     label01:
        $r2 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        $z5 = virtualinvoke $r2.<android.util.SparseBooleanArray: boolean get(int,boolean)>(i0, 0);

        if $z5 != 0 goto label02;

        $z7 = 1;

        goto label03;

     label02:
        $z7 = 0;

     label03:
        z3 = $z7;

        $r3 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        virtualinvoke $r3.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, z3);

        $r4 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        if $r4 == null goto label05;

        $r8 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $z6 = interfaceinvoke $r8.<android.widget.ListAdapter: boolean hasStableIds()>();

        if $z6 == 0 goto label05;

        if z3 == 0 goto label04;

        $r11 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        $r12 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $l9 = interfaceinvoke $r12.<android.widget.ListAdapter: long getItemId(int)>(i0);

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r11.<android.util.LongSparseArray: void put(long,java.lang.Object)>($l9, $r13);

        goto label05;

     label04:
        $r10 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        $r9 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $l8 = interfaceinvoke $r9.<android.widget.ListAdapter: long getItemId(int)>(i0);

        virtualinvoke $r10.<android.util.LongSparseArray: void delete(long)>($l8);

     label05:
        if z3 == 0 goto label06;

        $i6 = r0.<android.widget.AbsListView: int mCheckedItemCount>;

        $i7 = $i6 + 1;

        r0.<android.widget.AbsListView: int mCheckedItemCount> = $i7;

        goto label07;

     label06:
        $i5 = r0.<android.widget.AbsListView: int mCheckedItemCount>;

        $i4 = $i5 - 1;

        r0.<android.widget.AbsListView: int mCheckedItemCount> = $i4;

     label07:
        $r6 = r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode>;

        if $r6 == null goto label08;

        $r7 = r0.<android.widget.AbsListView: android.widget.AbsListView$MultiChoiceModeWrapper mMultiChoiceModeCallback>;

        $r5 = r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode>;

        virtualinvoke $r7.<android.widget.AbsListView$MultiChoiceModeWrapper: void onItemCheckedStateChanged(android.view.ActionMode,int,long,boolean)>($r5, i0, l1, z3);

        z1 = 0;

     label08:
        z2 = 1;

        goto label16;

     label09:
        $i10 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i10 != 1 goto label16;

        $r14 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        $z8 = virtualinvoke $r14.<android.util.SparseBooleanArray: boolean get(int,boolean)>(i0, 0);

        if $z8 != 0 goto label10;

        $z11 = 1;

        goto label11;

     label10:
        $z11 = 0;

     label11:
        z12 = $z11;

        if z12 == 0 goto label13;

        $r19 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        virtualinvoke $r19.<android.util.SparseBooleanArray: void clear()>();

        $r17 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        virtualinvoke $r17.<android.util.SparseBooleanArray: void put(int,boolean)>(i0, 1);

        $r18 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        if $r18 == null goto label12;

        $r22 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $z10 = interfaceinvoke $r22.<android.widget.ListAdapter: boolean hasStableIds()>();

        if $z10 == 0 goto label12;

        $r20 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        virtualinvoke $r20.<android.util.LongSparseArray: void clear()>();

        $r24 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        $r21 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $l13 = interfaceinvoke $r21.<android.widget.ListAdapter: long getItemId(int)>(i0);

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r24.<android.util.LongSparseArray: void put(long,java.lang.Object)>($l13, $r23);

     label12:
        r0.<android.widget.AbsListView: int mCheckedItemCount> = 1;

        goto label15;

     label13:
        $r16 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        $i12 = virtualinvoke $r16.<android.util.SparseBooleanArray: int size()>();

        if $i12 == 0 goto label14;

        $r15 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        $z9 = virtualinvoke $r15.<android.util.SparseBooleanArray: boolean valueAt(int)>(0);

        if $z9 != 0 goto label15;

     label14:
        r0.<android.widget.AbsListView: int mCheckedItemCount> = 0;

     label15:
        z2 = 1;

     label16:
        if z2 == 0 goto label17;

        specialinvoke r0.<android.widget.AbsListView: void updateOnScreenCheckedViews()>();

     label17:
        if z1 == 0 goto label18;

        $z4 = specialinvoke r0.<android.widget.AdapterView: boolean performItemClick(android.view.View,int,long)>(r1, i0, l1);

        z0 = z0 | $z4;

     label18:
        return z0;
    }

    private void updateOnScreenCheckedViews()
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, i3, $i4;
        boolean z0, $z1, $z2, $z3, $z4;
        android.view.View r1;
        android.content.Context $r2;
        android.content.pm.ApplicationInfo $r3;
        android.util.SparseBooleanArray $r4, $r5;
        android.widget.Checkable $r6;

        r0 := @this: android.widget.AbsListView;

        i0 = r0.<android.widget.AbsListView: int mFirstPosition>;

        i1 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        $r2 = virtualinvoke r0.<android.widget.AbsListView: android.content.Context getContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $i4 = $r3.<android.content.pm.ApplicationInfo: int targetSdkVersion>;

        if $i4 < 11 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        z0 = $z4;

        i2 = 0;

     label3:
        if i2 >= i1 goto label6;

        r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i2);

        i3 = i0 + i2;

        $z1 = r1 instanceof android.widget.Checkable;

        if $z1 == 0 goto label4;

        $r6 = (android.widget.Checkable) r1;

        $r5 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        $z3 = virtualinvoke $r5.<android.util.SparseBooleanArray: boolean get(int)>(i3);

        interfaceinvoke $r6.<android.widget.Checkable: void setChecked(boolean)>($z3);

        goto label5;

     label4:
        if z0 == 0 goto label5;

        $r4 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        $z2 = virtualinvoke $r4.<android.util.SparseBooleanArray: boolean get(int)>(i3);

        virtualinvoke r1.<android.view.View: void setActivated(boolean)>($z2);

     label5:
        i2 = i2 + 1;

        goto label3;

     label6:
        return;
    }

    public int getChoiceMode()
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mChoiceMode>;

        return $i0;
    }

    public void setChoiceMode(int)
    {
        android.widget.AbsListView r0;
        int i0, $i1, $i2;
        android.view.ActionMode $r1, $r8;
        android.util.SparseBooleanArray $r2, $r7;
        android.util.LongSparseArray $r3, $r6;
        android.widget.ListAdapter $r4, $r5;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        r0.<android.widget.AbsListView: int mChoiceMode> = i0;

        $r1 = r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode>;

        if $r1 == null goto label1;

        $r8 = r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode>;

        virtualinvoke $r8.<android.view.ActionMode: void finish()>();

        r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode> = null;

     label1:
        $i1 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i1 == 0 goto label4;

        $r2 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        if $r2 != null goto label2;

        $r7 = new android.util.SparseBooleanArray;

        specialinvoke $r7.<android.util.SparseBooleanArray: void <init>(int)>(0);

        r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates> = $r7;

     label2:
        $r3 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        if $r3 != null goto label3;

        $r4 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        if $r4 == null goto label3;

        $r5 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $z0 = interfaceinvoke $r5.<android.widget.ListAdapter: boolean hasStableIds()>();

        if $z0 == 0 goto label3;

        $r6 = new android.util.LongSparseArray;

        specialinvoke $r6.<android.util.LongSparseArray: void <init>(int)>(0);

        r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates> = $r6;

     label3:
        $i2 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i2 != 3 goto label4;

        virtualinvoke r0.<android.widget.AbsListView: void clearChoices()>();

        virtualinvoke r0.<android.widget.AbsListView: void setLongClickable(boolean)>(1);

     label4:
        return;
    }

    public void setMultiChoiceModeListener(android.widget.AbsListView$MultiChoiceModeListener)
    {
        android.widget.AbsListView r0;
        android.widget.AbsListView$MultiChoiceModeListener r1;
        android.widget.AbsListView$MultiChoiceModeWrapper $r2, $r3, $r4;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.widget.AbsListView$MultiChoiceModeListener;

        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$MultiChoiceModeWrapper mMultiChoiceModeCallback>;

        if $r2 != null goto label1;

        $r4 = new android.widget.AbsListView$MultiChoiceModeWrapper;

        specialinvoke $r4.<android.widget.AbsListView$MultiChoiceModeWrapper: void <init>(android.widget.AbsListView)>(r0);

        r0.<android.widget.AbsListView: android.widget.AbsListView$MultiChoiceModeWrapper mMultiChoiceModeCallback> = $r4;

     label1:
        $r3 = r0.<android.widget.AbsListView: android.widget.AbsListView$MultiChoiceModeWrapper mMultiChoiceModeCallback>;

        virtualinvoke $r3.<android.widget.AbsListView$MultiChoiceModeWrapper: void setWrapped(android.widget.AbsListView$MultiChoiceModeListener)>(r1);

        return;
    }

    private boolean contentFits()
    {
        android.widget.AbsListView r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.view.View $r1, $r3;
        android.graphics.Rect $r2, $r4;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        i0 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if i0 != 0 goto label1;

        return 1;

     label1:
        $i1 = r0.<android.widget.AbsListView: int mItemCount>;

        if i0 == $i1 goto label2;

        return 0;

     label2:
        $r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(0);

        $i2 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $r2 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i3 = $r2.<android.graphics.Rect: int top>;

        if $i2 < $i3 goto label3;

        $i4 = i0 - 1;

        $r3 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i4);

        $i5 = virtualinvoke $r3.<android.view.View: int getBottom()>();

        $i6 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $r4 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i7 = $r4.<android.graphics.Rect: int bottom>;

        $i8 = $i6 - $i7;

        if $i5 > $i8 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    public void setFastScrollEnabled(boolean)
    {
        android.widget.AbsListView r0;
        boolean z0, $z1, $z2;
        android.widget.AbsListView$1 $r1;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.widget.AbsListView: boolean mFastScrollEnabled>;

        if $z1 == z0 goto label2;

        r0.<android.widget.AbsListView: boolean mFastScrollEnabled> = z0;

        $z2 = specialinvoke r0.<android.widget.AbsListView: boolean isOwnerThread()>();

        if $z2 == 0 goto label1;

        specialinvoke r0.<android.widget.AbsListView: void setFastScrollerEnabledUiThread(boolean)>(z0);

        goto label2;

     label1:
        $r1 = new android.widget.AbsListView$1;

        specialinvoke $r1.<android.widget.AbsListView$1: void <init>(android.widget.AbsListView,boolean)>(r0, z0);

        virtualinvoke r0.<android.widget.AbsListView: boolean post(java.lang.Runnable)>($r1);

     label2:
        return;
    }

    private void setFastScrollerEnabledUiThread(boolean)
    {
        android.widget.AbsListView r0;
        boolean z0;
        android.widget.FastScroller $r1, $r2, $r3, $r4, $r5, $r6;
        int $i0;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        if $r1 == null goto label1;

        $r6 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        virtualinvoke $r6.<android.widget.FastScroller: void setEnabled(boolean)>(z0);

        goto label2;

     label1:
        if z0 == 0 goto label2;

        $r4 = new android.widget.FastScroller;

        $i0 = r0.<android.widget.AbsListView: int mFastScrollStyle>;

        specialinvoke $r4.<android.widget.FastScroller: void <init>(android.widget.AbsListView,int)>(r0, $i0);

        r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll> = $r4;

        $r5 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        virtualinvoke $r5.<android.widget.FastScroller: void setEnabled(boolean)>(1);

     label2:
        virtualinvoke r0.<android.widget.AbsListView: void resolvePadding()>();

        $r2 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        if $r2 == null goto label3;

        $r3 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        virtualinvoke $r3.<android.widget.FastScroller: void updateLayout()>();

     label3:
        return;
    }

    public void setFastScrollStyle(int)
    {
        android.widget.AbsListView r0;
        int i0;
        android.widget.FastScroller $r1, $r2;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        $r1 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        if $r1 != null goto label1;

        r0.<android.widget.AbsListView: int mFastScrollStyle> = i0;

        goto label2;

     label1:
        $r2 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        virtualinvoke $r2.<android.widget.FastScroller: void setStyle(int)>(i0);

     label2:
        return;
    }

    public void setFastScrollAlwaysVisible(boolean)
    {
        android.widget.AbsListView r0;
        boolean z0, $z1, $z2, $z4;
        android.widget.AbsListView$2 $r1;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.widget.AbsListView: boolean mFastScrollAlwaysVisible>;

        if $z1 == z0 goto label3;

        if z0 == 0 goto label1;

        $z4 = r0.<android.widget.AbsListView: boolean mFastScrollEnabled>;

        if $z4 != 0 goto label1;

        virtualinvoke r0.<android.widget.AbsListView: void setFastScrollEnabled(boolean)>(1);

     label1:
        r0.<android.widget.AbsListView: boolean mFastScrollAlwaysVisible> = z0;

        $z2 = specialinvoke r0.<android.widget.AbsListView: boolean isOwnerThread()>();

        if $z2 == 0 goto label2;

        specialinvoke r0.<android.widget.AbsListView: void setFastScrollerAlwaysVisibleUiThread(boolean)>(z0);

        goto label3;

     label2:
        $r1 = new android.widget.AbsListView$2;

        specialinvoke $r1.<android.widget.AbsListView$2: void <init>(android.widget.AbsListView,boolean)>(r0, z0);

        virtualinvoke r0.<android.widget.AbsListView: boolean post(java.lang.Runnable)>($r1);

     label3:
        return;
    }

    private void setFastScrollerAlwaysVisibleUiThread(boolean)
    {
        android.widget.AbsListView r0;
        boolean z0;
        android.widget.FastScroller $r1, $r2;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        virtualinvoke $r2.<android.widget.FastScroller: void setAlwaysShow(boolean)>(z0);

     label1:
        return;
    }

    private boolean isOwnerThread()
    {
        android.widget.AbsListView r0;
        java.lang.Thread $r1, $r2;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: java.lang.Thread mOwnerThread>;

        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        if $r1 != $r2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isFastScrollAlwaysVisible()
    {
        android.widget.AbsListView r0;
        android.widget.FastScroller $r1, $r2, $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        if $r1 != null goto label3;

        $z3 = r0.<android.widget.AbsListView: boolean mFastScrollEnabled>;

        if $z3 == 0 goto label1;

        $z4 = r0.<android.widget.AbsListView: boolean mFastScrollAlwaysVisible>;

        if $z4 == 0 goto label1;

        $z5 = 1;

        goto label2;

     label1:
        $z5 = 0;

     label2:
        return $z5;

     label3:
        $r2 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        $z0 = virtualinvoke $r2.<android.widget.FastScroller: boolean isEnabled()>();

        if $z0 == 0 goto label4;

        $r3 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        $z1 = virtualinvoke $r3.<android.widget.FastScroller: boolean isAlwaysShowEnabled()>();

        if $z1 == 0 goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        return $z2;
    }

    public int getVerticalScrollbarWidth()
    {
        android.widget.AbsListView r0;
        android.widget.FastScroller $r1, $r2, $r3;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        $z0 = virtualinvoke $r2.<android.widget.FastScroller: boolean isEnabled()>();

        if $z0 == 0 goto label1;

        $i1 = specialinvoke r0.<android.widget.AdapterView: int getVerticalScrollbarWidth()>();

        $r3 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        $i2 = virtualinvoke $r3.<android.widget.FastScroller: int getWidth()>();

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i1, $i2);

        return $i3;

     label1:
        $i0 = specialinvoke r0.<android.widget.AdapterView: int getVerticalScrollbarWidth()>();

        return $i0;
    }

    public boolean isFastScrollEnabled()
    {
        android.widget.AbsListView r0;
        android.widget.FastScroller $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        if $r1 != null goto label1;

        $z1 = r0.<android.widget.AbsListView: boolean mFastScrollEnabled>;

        return $z1;

     label1:
        $r2 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        $z0 = virtualinvoke $r2.<android.widget.FastScroller: boolean isEnabled()>();

        return $z0;
    }

    public void setVerticalScrollbarPosition(int)
    {
        android.widget.AbsListView r0;
        int i0;
        android.widget.FastScroller $r1, $r2;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        specialinvoke r0.<android.widget.AdapterView: void setVerticalScrollbarPosition(int)>(i0);

        $r1 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        virtualinvoke $r2.<android.widget.FastScroller: void setScrollbarPosition(int)>(i0);

     label1:
        return;
    }

    public void setScrollBarStyle(int)
    {
        android.widget.AbsListView r0;
        int i0;
        android.widget.FastScroller $r1, $r2;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        specialinvoke r0.<android.widget.AdapterView: void setScrollBarStyle(int)>(i0);

        $r1 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        virtualinvoke $r2.<android.widget.FastScroller: void setScrollBarStyle(int)>(i0);

     label1:
        return;
    }

    protected boolean isVerticalScrollBarHidden()
    {
        android.widget.AbsListView r0;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        $z0 = virtualinvoke r0.<android.widget.AbsListView: boolean isFastScrollEnabled()>();

        return $z0;
    }

    public void setSmoothScrollbarEnabled(boolean)
    {
        android.widget.AbsListView r0;
        boolean z0;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        r0.<android.widget.AbsListView: boolean mSmoothScrollbarEnabled> = z0;

        return;
    }

    public boolean isSmoothScrollbarEnabled()
    {
        android.widget.AbsListView r0;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        $z0 = r0.<android.widget.AbsListView: boolean mSmoothScrollbarEnabled>;

        return $z0;
    }

    public void setOnScrollListener(android.widget.AbsListView$OnScrollListener)
    {
        android.widget.AbsListView r0;
        android.widget.AbsListView$OnScrollListener r1;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.widget.AbsListView$OnScrollListener;

        r0.<android.widget.AbsListView: android.widget.AbsListView$OnScrollListener mOnScrollListener> = r1;

        virtualinvoke r0.<android.widget.AbsListView: void invokeOnItemScrollListener()>();

        return;
    }

    void invokeOnItemScrollListener()
    {
        android.widget.AbsListView r0;
        android.widget.FastScroller $r1, $r4;
        android.widget.AbsListView$OnScrollListener $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        if $r1 == null goto label1;

        $r4 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        $i3 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i4 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        $i5 = r0.<android.widget.AbsListView: int mItemCount>;

        virtualinvoke $r4.<android.widget.FastScroller: void onScroll(int,int,int)>($i3, $i4, $i5);

     label1:
        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$OnScrollListener mOnScrollListener>;

        if $r2 == null goto label2;

        $r3 = r0.<android.widget.AbsListView: android.widget.AbsListView$OnScrollListener mOnScrollListener>;

        $i0 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i1 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        $i2 = r0.<android.widget.AbsListView: int mItemCount>;

        interfaceinvoke $r3.<android.widget.AbsListView$OnScrollListener: void onScroll(android.widget.AbsListView,int,int,int)>(r0, $i0, $i1, $i2);

     label2:
        virtualinvoke r0.<android.widget.AbsListView: void onScrollChanged(int,int,int,int)>(0, 0, 0, 0);

        return;
    }

    public void sendAccessibilityEvent(int)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, $i3, $i4;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        if i0 != 4096 goto label2;

        i1 = virtualinvoke r0.<android.widget.AbsListView: int getFirstVisiblePosition()>();

        i2 = virtualinvoke r0.<android.widget.AbsListView: int getLastVisiblePosition()>();

        $i3 = r0.<android.widget.AbsListView: int mLastAccessibilityScrollEventFromIndex>;

        if $i3 != i1 goto label1;

        $i4 = r0.<android.widget.AbsListView: int mLastAccessibilityScrollEventToIndex>;

        if $i4 != i2 goto label1;

        return;

     label1:
        r0.<android.widget.AbsListView: int mLastAccessibilityScrollEventFromIndex> = i1;

        r0.<android.widget.AbsListView: int mLastAccessibilityScrollEventToIndex> = i2;

     label2:
        specialinvoke r0.<android.widget.AdapterView: void sendAccessibilityEvent(int)>(i0);

        return;
    }

    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.AbsListView r0;
        android.view.accessibility.AccessibilityEvent r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.widget.AdapterView: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        $r2 = class "android/widget/AbsListView";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r3);

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        android.widget.AbsListView r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.Class $r2;
        java.lang.String $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<android.widget.AdapterView: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        $r2 = class "android/widget/AbsListView";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>($r3);

        $z0 = virtualinvoke r0.<android.widget.AbsListView: boolean isEnabled()>();

        if $z0 == 0 goto label2;

        $z1 = specialinvoke r0.<android.widget.AbsListView: boolean canScrollUp()>();

        if $z1 == 0 goto label1;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(8192);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setScrollable(boolean)>(1);

     label1:
        $z2 = specialinvoke r0.<android.widget.AbsListView: boolean canScrollDown()>();

        if $z2 == 0 goto label2;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(4096);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setScrollable(boolean)>(1);

     label2:
        return;
    }

    int getSelectionModeForAccessibility()
    {
        android.widget.AbsListView r0;
        int i0;

        r0 := @this: android.widget.AbsListView;

        i0 = virtualinvoke r0.<android.widget.AbsListView: int getChoiceMode()>();

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        return 0;

     label2:
        return 1;

     label3:
        return 2;

     label4:
        return 0;
    }

    public boolean performAccessibilityAction(int, android.os.Bundle)
    {
        android.widget.AbsListView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15;
        android.os.Bundle r1;
        boolean $z0, $z1, $z2;
        android.graphics.Rect $r2, $r3, $r4, $r5;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        $z0 = specialinvoke r0.<android.widget.AdapterView: boolean performAccessibilityAction(int,android.os.Bundle)>(i0, r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        lookupswitch(i0)
        {
            case 4096: goto label2;
            case 8192: goto label4;
            default: goto label6;
        };

     label2:
        $z2 = virtualinvoke r0.<android.widget.AbsListView: boolean isEnabled()>();

        if $z2 == 0 goto label3;

        $i8 = virtualinvoke r0.<android.widget.AbsListView: int getLastVisiblePosition()>();

        $i10 = virtualinvoke r0.<android.widget.AbsListView: int getCount()>();

        $i9 = $i10 - 1;

        if $i8 >= $i9 goto label3;

        $i11 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $r4 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i12 = $r4.<android.graphics.Rect: int top>;

        $i13 = $i11 - $i12;

        $r5 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i14 = $r5.<android.graphics.Rect: int bottom>;

        i1 = $i13 - $i14;

        virtualinvoke r0.<android.widget.AbsListView: void smoothScrollBy(int,int)>(i1, 200);

        return 1;

     label3:
        return 0;

     label4:
        $z1 = virtualinvoke r0.<android.widget.AbsListView: boolean isEnabled()>();

        if $z1 == 0 goto label5;

        $i2 = r0.<android.widget.AbsListView: int mFirstPosition>;

        if $i2 <= 0 goto label5;

        $i3 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $r2 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i4 = $r2.<android.graphics.Rect: int top>;

        $i6 = $i3 - $i4;

        $r3 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i5 = $r3.<android.graphics.Rect: int bottom>;

        i15 = $i6 - $i5;

        $i7 = neg i15;

        virtualinvoke r0.<android.widget.AbsListView: void smoothScrollBy(int,int)>($i7, 200);

        return 1;

     label5:
        return 0;

     label6:
        return 0;
    }

    public android.view.View findViewByAccessibilityIdTraversal(int)
    {
        android.widget.AbsListView r0;
        int i0, $i1;
        boolean $z0;
        android.view.View $r1;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<android.widget.AbsListView: int getAccessibilityViewId()>();

        if i0 != $i1 goto label1;

        return r0;

     label1:
        $z0 = r0.<android.widget.AbsListView: boolean mDataChanged>;

        if $z0 == 0 goto label2;

        return null;

     label2:
        $r1 = specialinvoke r0.<android.widget.AdapterView: android.view.View findViewByAccessibilityIdTraversal(int)>(i0);

        return $r1;
    }

    public boolean isScrollingCacheEnabled()
    {
        android.widget.AbsListView r0;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        $z0 = r0.<android.widget.AbsListView: boolean mScrollingCacheEnabled>;

        return $z0;
    }

    public void setScrollingCacheEnabled(boolean)
    {
        android.widget.AbsListView r0;
        boolean z0, $z1;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.widget.AbsListView: boolean mScrollingCacheEnabled>;

        if $z1 == 0 goto label1;

        if z0 != 0 goto label1;

        specialinvoke r0.<android.widget.AbsListView: void clearScrollingCache()>();

     label1:
        r0.<android.widget.AbsListView: boolean mScrollingCacheEnabled> = z0;

        return;
    }

    public void setTextFilterEnabled(boolean)
    {
        android.widget.AbsListView r0;
        boolean z0;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        r0.<android.widget.AbsListView: boolean mTextFilterEnabled> = z0;

        return;
    }

    public boolean isTextFilterEnabled()
    {
        android.widget.AbsListView r0;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        $z0 = r0.<android.widget.AbsListView: boolean mTextFilterEnabled>;

        return $z0;
    }

    public void getFocusedRect(android.graphics.Rect)
    {
        android.widget.AbsListView r0;
        android.graphics.Rect r1;
        android.view.View r2;
        android.view.ViewParent $r3;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.graphics.Rect;

        r2 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getSelectedView()>();

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<android.view.View: android.view.ViewParent getParent()>();

        if $r3 != r0 goto label1;

        virtualinvoke r2.<android.view.View: void getFocusedRect(android.graphics.Rect)>(r1);

        virtualinvoke r0.<android.widget.AbsListView: void offsetDescendantRectToMyCoords(android.view.View,android.graphics.Rect)>(r2, r1);

        goto label2;

     label1:
        specialinvoke r0.<android.widget.AdapterView: void getFocusedRect(android.graphics.Rect)>(r1);

     label2:
        return;
    }

    private void useDefaultSelector()
    {
        android.widget.AbsListView r0;
        android.content.Context $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.widget.AbsListView;

        $r1 = virtualinvoke r0.<android.widget.AbsListView: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(17301602);

        virtualinvoke r0.<android.widget.AbsListView: void setSelector(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public boolean isStackFromBottom()
    {
        android.widget.AbsListView r0;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        $z0 = r0.<android.widget.AbsListView: boolean mStackFromBottom>;

        return $z0;
    }

    public void setStackFromBottom(boolean)
    {
        android.widget.AbsListView r0;
        boolean z0, $z1;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.widget.AbsListView: boolean mStackFromBottom>;

        if $z1 == z0 goto label1;

        r0.<android.widget.AbsListView: boolean mStackFromBottom> = z0;

        virtualinvoke r0.<android.widget.AbsListView: void requestLayoutIfNecessary()>();

     label1:
        return;
    }

    void requestLayoutIfNecessary()
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @this: android.widget.AbsListView;

        $i0 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if $i0 <= 0 goto label1;

        virtualinvoke r0.<android.widget.AbsListView: void resetList()>();

        virtualinvoke r0.<android.widget.AbsListView: void requestLayout()>();

        virtualinvoke r0.<android.widget.AbsListView: void invalidate()>();

     label1:
        return;
    }

    public android.os.Parcelable onSaveInstanceState()
    {
        android.widget.AbsListView r0;
        android.os.Parcelable r1;
        android.widget.AbsListView$SavedState r2, $r4, $r5, $r20, $r21, $r22, $r23, $r24, $r25, $r27, $r28, $r29, $r31;
        boolean z0, $z1, $z2, $z3, $z4;
        long l0, $l8, $l14, $l17, $l18;
        android.view.View r3;
        int i1, i2, $i3, $i4, $i6, $i7, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i19, $i20, $i21, $i22, i23;
        byte $b5;
        android.util.LongSparseArray $r6, $r9, $r11, $r12, $r14, $r32, r35;
        android.util.SparseBooleanArray $r7, $r15, $r16, $r30;
        android.widget.RemoteViewsAdapter $r8, $r10;
        java.lang.Object $r13;
        java.lang.String $r17, $r26;
        android.view.ActionMode $r18;
        android.widget.ListAdapter $r19;
        android.widget.EditText r33;
        android.text.Editable r34;

        r0 := @this: android.widget.AbsListView;

        specialinvoke r0.<android.widget.AbsListView: void dismissPopup()>();

        r1 = specialinvoke r0.<android.widget.AdapterView: android.os.Parcelable onSaveInstanceState()>();

        $r4 = new android.widget.AbsListView$SavedState;

        specialinvoke $r4.<android.widget.AbsListView$SavedState: void <init>(android.os.Parcelable)>(r1);

        r2 = $r4;

        $r5 = r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync>;

        if $r5 == null goto label01;

        $r20 = r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync>;

        $l18 = $r20.<android.widget.AbsListView$SavedState: long selectedId>;

        r2.<android.widget.AbsListView$SavedState: long selectedId> = $l18;

        $r22 = r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync>;

        $l17 = $r22.<android.widget.AbsListView$SavedState: long firstId>;

        r2.<android.widget.AbsListView$SavedState: long firstId> = $l17;

        $r21 = r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync>;

        $i20 = $r21.<android.widget.AbsListView$SavedState: int viewTop>;

        r2.<android.widget.AbsListView$SavedState: int viewTop> = $i20;

        $r24 = r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync>;

        $i19 = $r24.<android.widget.AbsListView$SavedState: int position>;

        r2.<android.widget.AbsListView$SavedState: int position> = $i19;

        $r23 = r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync>;

        $i21 = $r23.<android.widget.AbsListView$SavedState: int height>;

        r2.<android.widget.AbsListView$SavedState: int height> = $i21;

        $r27 = r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync>;

        $r26 = $r27.<android.widget.AbsListView$SavedState: java.lang.String filter>;

        r2.<android.widget.AbsListView$SavedState: java.lang.String filter> = $r26;

        $r25 = r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync>;

        $z4 = $r25.<android.widget.AbsListView$SavedState: boolean inActionMode>;

        r2.<android.widget.AbsListView$SavedState: boolean inActionMode> = $z4;

        $r29 = r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync>;

        $i22 = $r29.<android.widget.AbsListView$SavedState: int checkedItemCount>;

        r2.<android.widget.AbsListView$SavedState: int checkedItemCount> = $i22;

        $r28 = r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync>;

        $r30 = $r28.<android.widget.AbsListView$SavedState: android.util.SparseBooleanArray checkState>;

        r2.<android.widget.AbsListView$SavedState: android.util.SparseBooleanArray checkState> = $r30;

        $r31 = r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync>;

        $r32 = $r31.<android.widget.AbsListView$SavedState: android.util.LongSparseArray checkIdState>;

        r2.<android.widget.AbsListView$SavedState: android.util.LongSparseArray checkIdState> = $r32;

        return r2;

     label01:
        $i3 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if $i3 <= 0 goto label02;

        $i16 = r0.<android.widget.AbsListView: int mItemCount>;

        if $i16 <= 0 goto label02;

        $z3 = 1;

        goto label03;

     label02:
        $z3 = 0;

     label03:
        z0 = $z3;

        l0 = virtualinvoke r0.<android.widget.AbsListView: long getSelectedItemId()>();

        r2.<android.widget.AbsListView$SavedState: long selectedId> = l0;

        $i4 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        r2.<android.widget.AbsListView$SavedState: int height> = $i4;

        $b5 = l0 cmp 0L;

        if $b5 < 0 goto label04;

        $i13 = r0.<android.widget.AbsListView: int mSelectedTop>;

        r2.<android.widget.AbsListView$SavedState: int viewTop> = $i13;

        $i15 = virtualinvoke r0.<android.widget.AbsListView: int getSelectedItemPosition()>();

        r2.<android.widget.AbsListView$SavedState: int position> = $i15;

        r2.<android.widget.AbsListView$SavedState: long firstId> = -1L;

        goto label07;

     label04:
        if z0 == 0 goto label06;

        $i11 = r0.<android.widget.AbsListView: int mFirstPosition>;

        if $i11 <= 0 goto label06;

        r3 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(0);

        $i9 = virtualinvoke r3.<android.view.View: int getTop()>();

        r2.<android.widget.AbsListView$SavedState: int viewTop> = $i9;

        i1 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i10 = r0.<android.widget.AbsListView: int mItemCount>;

        if i1 < $i10 goto label05;

        $i12 = r0.<android.widget.AbsListView: int mItemCount>;

        i1 = $i12 - 1;

     label05:
        r2.<android.widget.AbsListView$SavedState: int position> = i1;

        $r19 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $l14 = interfaceinvoke $r19.<android.widget.ListAdapter: long getItemId(int)>(i1);

        r2.<android.widget.AbsListView$SavedState: long firstId> = $l14;

        goto label07;

     label06:
        r2.<android.widget.AbsListView$SavedState: int viewTop> = 0;

        r2.<android.widget.AbsListView$SavedState: long firstId> = -1L;

        r2.<android.widget.AbsListView$SavedState: int position> = 0;

     label07:
        r2.<android.widget.AbsListView$SavedState: java.lang.String filter> = null;

        $z1 = r0.<android.widget.AbsListView: boolean mFiltered>;

        if $z1 == 0 goto label08;

        r33 = r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        if r33 == null goto label08;

        r34 = virtualinvoke r33.<android.widget.EditText: android.text.Editable getText()>();

        if r34 == null goto label08;

        $r17 = virtualinvoke r34.<java.lang.Object: java.lang.String toString()>();

        r2.<android.widget.AbsListView$SavedState: java.lang.String filter> = $r17;

     label08:
        $i6 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i6 != 3 goto label09;

        $r18 = r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode>;

        if $r18 == null goto label09;

        $z2 = 1;

        goto label10;

     label09:
        $z2 = 0;

     label10:
        r2.<android.widget.AbsListView$SavedState: boolean inActionMode> = $z2;

        $r7 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        if $r7 == null goto label11;

        $r16 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        $r15 = virtualinvoke $r16.<android.util.SparseBooleanArray: android.util.SparseBooleanArray clone()>();

        r2.<android.widget.AbsListView$SavedState: android.util.SparseBooleanArray checkState> = $r15;

     label11:
        $r6 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        if $r6 == null goto label14;

        $r9 = new android.util.LongSparseArray;

        specialinvoke $r9.<android.util.LongSparseArray: void <init>()>();

        r35 = $r9;

        $r11 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        i23 = virtualinvoke $r11.<android.util.LongSparseArray: int size()>();

        i2 = 0;

     label12:
        if i2 >= i23 goto label13;

        $r12 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        $l8 = virtualinvoke $r12.<android.util.LongSparseArray: long keyAt(int)>(i2);

        $r14 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        $r13 = virtualinvoke $r14.<android.util.LongSparseArray: java.lang.Object valueAt(int)>(i2);

        virtualinvoke r35.<android.util.LongSparseArray: void put(long,java.lang.Object)>($l8, $r13);

        i2 = i2 + 1;

        goto label12;

     label13:
        r2.<android.widget.AbsListView$SavedState: android.util.LongSparseArray checkIdState> = r35;

     label14:
        $i7 = r0.<android.widget.AbsListView: int mCheckedItemCount>;

        r2.<android.widget.AbsListView$SavedState: int checkedItemCount> = $i7;

        $r8 = r0.<android.widget.AbsListView: android.widget.RemoteViewsAdapter mRemoteAdapter>;

        if $r8 == null goto label15;

        $r10 = r0.<android.widget.AbsListView: android.widget.RemoteViewsAdapter mRemoteAdapter>;

        virtualinvoke $r10.<android.widget.RemoteViewsAdapter: void saveRemoteViewsCache()>();

     label15:
        return r2;
    }

    public void onRestoreInstanceState(android.os.Parcelable)
    {
        android.widget.AbsListView r0;
        android.os.Parcelable r1, $r3;
        android.widget.AbsListView$SavedState r2;
        int $i0, $i6, $i7, $i9, $i10, $i11, $i13;
        long $l1, $l2, $l4, $l8, $l12;
        byte $b3, $b5;
        java.lang.String $r4;
        android.util.SparseBooleanArray $r5, $r11;
        android.util.LongSparseArray $r6, $r9;
        boolean $z0;
        android.widget.AbsListView$MultiChoiceModeWrapper $r7, $r8;
        android.view.ActionMode $r10;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.os.Parcelable;

        r2 = (android.widget.AbsListView$SavedState) r1;

        $r3 = virtualinvoke r2.<android.widget.AbsListView$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.widget.AdapterView: void onRestoreInstanceState(android.os.Parcelable)>($r3);

        r0.<android.widget.AbsListView: boolean mDataChanged> = 1;

        $i0 = r2.<android.widget.AbsListView$SavedState: int height>;

        $l1 = (long) $i0;

        r0.<android.widget.AbsListView: long mSyncHeight> = $l1;

        $l2 = r2.<android.widget.AbsListView$SavedState: long selectedId>;

        $b3 = $l2 cmp 0L;

        if $b3 < 0 goto label1;

        r0.<android.widget.AbsListView: boolean mNeedSync> = 1;

        r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync> = r2;

        $l12 = r2.<android.widget.AbsListView$SavedState: long selectedId>;

        r0.<android.widget.AbsListView: long mSyncRowId> = $l12;

        $i11 = r2.<android.widget.AbsListView$SavedState: int position>;

        r0.<android.widget.AbsListView: int mSyncPosition> = $i11;

        $i13 = r2.<android.widget.AbsListView$SavedState: int viewTop>;

        r0.<android.widget.AbsListView: int mSpecificTop> = $i13;

        r0.<android.widget.AbsListView: int mSyncMode> = 0;

        goto label2;

     label1:
        $l4 = r2.<android.widget.AbsListView$SavedState: long firstId>;

        $b5 = $l4 cmp 0L;

        if $b5 < 0 goto label2;

        virtualinvoke r0.<android.widget.AbsListView: void setSelectedPositionInt(int)>(-1);

        virtualinvoke r0.<android.widget.AbsListView: void setNextSelectedPositionInt(int)>(-1);

        r0.<android.widget.AbsListView: int mSelectorPosition> = -1;

        r0.<android.widget.AbsListView: boolean mNeedSync> = 1;

        r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync> = r2;

        $l8 = r2.<android.widget.AbsListView$SavedState: long firstId>;

        r0.<android.widget.AbsListView: long mSyncRowId> = $l8;

        $i10 = r2.<android.widget.AbsListView$SavedState: int position>;

        r0.<android.widget.AbsListView: int mSyncPosition> = $i10;

        $i9 = r2.<android.widget.AbsListView$SavedState: int viewTop>;

        r0.<android.widget.AbsListView: int mSpecificTop> = $i9;

        r0.<android.widget.AbsListView: int mSyncMode> = 1;

     label2:
        $r4 = r2.<android.widget.AbsListView$SavedState: java.lang.String filter>;

        virtualinvoke r0.<android.widget.AbsListView: void setFilterText(java.lang.String)>($r4);

        $r5 = r2.<android.widget.AbsListView$SavedState: android.util.SparseBooleanArray checkState>;

        if $r5 == null goto label3;

        $r11 = r2.<android.widget.AbsListView$SavedState: android.util.SparseBooleanArray checkState>;

        r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates> = $r11;

     label3:
        $r6 = r2.<android.widget.AbsListView$SavedState: android.util.LongSparseArray checkIdState>;

        if $r6 == null goto label4;

        $r9 = r2.<android.widget.AbsListView$SavedState: android.util.LongSparseArray checkIdState>;

        r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates> = $r9;

     label4:
        $i6 = r2.<android.widget.AbsListView$SavedState: int checkedItemCount>;

        r0.<android.widget.AbsListView: int mCheckedItemCount> = $i6;

        $z0 = r2.<android.widget.AbsListView$SavedState: boolean inActionMode>;

        if $z0 == 0 goto label5;

        $i7 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i7 != 3 goto label5;

        $r8 = r0.<android.widget.AbsListView: android.widget.AbsListView$MultiChoiceModeWrapper mMultiChoiceModeCallback>;

        if $r8 == null goto label5;

        $r7 = r0.<android.widget.AbsListView: android.widget.AbsListView$MultiChoiceModeWrapper mMultiChoiceModeCallback>;

        $r10 = virtualinvoke r0.<android.widget.AbsListView: android.view.ActionMode startActionMode(android.view.ActionMode$Callback)>($r7);

        r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode> = $r10;

     label5:
        virtualinvoke r0.<android.widget.AbsListView: void requestLayout()>();

        return;
    }

    private boolean acceptFilter()
    {
        android.widget.AbsListView r0;
        boolean $z0, $z1, $z2;
        android.widget.Adapter $r1, $r2;
        android.widget.Filterable $r3;
        android.widget.Filter $r4;

        r0 := @this: android.widget.AbsListView;

        $z0 = r0.<android.widget.AbsListView: boolean mTextFilterEnabled>;

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<android.widget.AbsListView: android.widget.Adapter getAdapter()>();

        $z1 = $r1 instanceof android.widget.Filterable;

        if $z1 == 0 goto label1;

        $r2 = virtualinvoke r0.<android.widget.AbsListView: android.widget.Adapter getAdapter()>();

        $r3 = (android.widget.Filterable) $r2;

        $r4 = interfaceinvoke $r3.<android.widget.Filterable: android.widget.Filter getFilter()>();

        if $r4 == null goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public void setFilterText(java.lang.String)
    {
        android.widget.AbsListView r0;
        java.lang.String r1;
        android.widget.Filter r2;
        boolean $z0, $z1, $z2;
        android.widget.EditText $r3, $r4;
        int $i0;
        android.widget.ListAdapter $r5, $r8;
        android.widget.PopupWindow $r6;
        android.widget.AbsListView$AdapterDataSetObserver $r7;
        android.widget.Filterable $r9;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<android.widget.AbsListView: boolean mTextFilterEnabled>;

        if $z0 == 0 goto label2;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z1 != 0 goto label2;

        specialinvoke r0.<android.widget.AbsListView: void createTextFilter(boolean)>(0);

        $r3 = r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        virtualinvoke $r3.<android.widget.EditText: void setText(java.lang.CharSequence)>(r1);

        $r4 = r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        virtualinvoke $r4.<android.widget.EditText: void setSelection(int)>($i0);

        $r5 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $z2 = $r5 instanceof android.widget.Filterable;

        if $z2 == 0 goto label2;

        $r6 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        if $r6 != null goto label1;

        $r8 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $r9 = (android.widget.Filterable) $r8;

        r2 = interfaceinvoke $r9.<android.widget.Filterable: android.widget.Filter getFilter()>();

        virtualinvoke r2.<android.widget.Filter: void filter(java.lang.CharSequence)>(r1);

     label1:
        r0.<android.widget.AbsListView: boolean mFiltered> = 1;

        $r7 = r0.<android.widget.AbsListView: android.widget.AbsListView$AdapterDataSetObserver mDataSetObserver>;

        virtualinvoke $r7.<android.widget.AbsListView$AdapterDataSetObserver: void clearSavedState()>();

     label2:
        return;
    }

    public java.lang.CharSequence getTextFilter()
    {
        android.widget.AbsListView r0;
        boolean $z0;
        android.widget.EditText $r1, $r2;
        android.text.Editable $r3;

        r0 := @this: android.widget.AbsListView;

        $z0 = r0.<android.widget.AbsListView: boolean mTextFilterEnabled>;

        if $z0 == 0 goto label1;

        $r1 = r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        $r3 = virtualinvoke $r2.<android.widget.EditText: android.text.Editable getText()>();

        return $r3;

     label1:
        return null;
    }

    protected void onFocusChanged(boolean, int, android.graphics.Rect)
    {
        android.widget.AbsListView r0;
        boolean z0, $z1, $z2;
        int i0, $i1, $i2, $i3;
        android.graphics.Rect r1;
        android.widget.ListAdapter $r2, $r3;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: android.graphics.Rect;

        specialinvoke r0.<android.widget.AdapterView: void onFocusChanged(boolean,int,android.graphics.Rect)>(z0, i0, r1);

        if z0 == 0 goto label2;

        $i1 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        if $i1 >= 0 goto label2;

        $z1 = virtualinvoke r0.<android.widget.AbsListView: boolean isInTouchMode()>();

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r0.<android.widget.AbsListView: boolean isAttachedToWindow()>();

        if $z2 != 0 goto label1;

        $r2 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        if $r2 == null goto label1;

        r0.<android.widget.AbsListView: boolean mDataChanged> = 1;

        $i2 = r0.<android.widget.AbsListView: int mItemCount>;

        r0.<android.widget.AbsListView: int mOldItemCount> = $i2;

        $r3 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $i3 = interfaceinvoke $r3.<android.widget.ListAdapter: int getCount()>();

        r0.<android.widget.AbsListView: int mItemCount> = $i3;

     label1:
        virtualinvoke r0.<android.widget.AbsListView: boolean resurrectSelection()>();

     label2:
        return;
    }

    public void requestLayout()
    {
        android.widget.AbsListView r0;
        boolean $z0, $z1;

        r0 := @this: android.widget.AbsListView;

        $z0 = r0.<android.widget.AbsListView: boolean mBlockLayoutRequests>;

        if $z0 != 0 goto label1;

        $z1 = r0.<android.widget.AbsListView: boolean mInLayout>;

        if $z1 != 0 goto label1;

        specialinvoke r0.<android.widget.AdapterView: void requestLayout()>();

     label1:
        return;
    }

    void resetList()
    {
        android.widget.AbsListView r0;
        android.graphics.Rect $r1;

        r0 := @this: android.widget.AbsListView;

        virtualinvoke r0.<android.widget.AbsListView: void removeAllViewsInLayout()>();

        r0.<android.widget.AbsListView: int mFirstPosition> = 0;

        r0.<android.widget.AbsListView: boolean mDataChanged> = 0;

        r0.<android.widget.AbsListView: java.lang.Runnable mPositionScrollAfterLayout> = null;

        r0.<android.widget.AbsListView: boolean mNeedSync> = 0;

        r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync> = null;

        r0.<android.widget.AbsListView: int mOldSelectedPosition> = -1;

        r0.<android.widget.AbsListView: long mOldSelectedRowId> = -9223372036854775808L;

        virtualinvoke r0.<android.widget.AbsListView: void setSelectedPositionInt(int)>(-1);

        virtualinvoke r0.<android.widget.AbsListView: void setNextSelectedPositionInt(int)>(-1);

        r0.<android.widget.AbsListView: int mSelectedTop> = 0;

        r0.<android.widget.AbsListView: int mSelectorPosition> = -1;

        $r1 = r0.<android.widget.AbsListView: android.graphics.Rect mSelectorRect>;

        virtualinvoke $r1.<android.graphics.Rect: void setEmpty()>();

        virtualinvoke r0.<android.widget.AbsListView: void invalidate()>();

        return;
    }

    protected int computeVerticalScrollExtent()
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12;
        android.view.View r1, r2;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        i0 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if i0 <= 0 goto label4;

        $z0 = r0.<android.widget.AbsListView: boolean mSmoothScrollbarEnabled>;

        if $z0 == 0 goto label3;

        i1 = i0 * 100;

        r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(0);

        i2 = virtualinvoke r1.<android.view.View: int getTop()>();

        i3 = virtualinvoke r1.<android.view.View: int getHeight()>();

        if i3 <= 0 goto label1;

        $i11 = i2 * 100;

        $i10 = $i11 / i3;

        i1 = i1 + $i10;

     label1:
        $i5 = i0 - 1;

        r2 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i5);

        i4 = virtualinvoke r2.<android.view.View: int getBottom()>();

        i12 = virtualinvoke r2.<android.view.View: int getHeight()>();

        if i12 <= 0 goto label2;

        $i7 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $i6 = i4 - $i7;

        $i9 = $i6 * 100;

        $i8 = $i9 / i12;

        i1 = i1 - $i8;

     label2:
        return i1;

     label3:
        return 1;

     label4:
        return 0;
    }

    protected int computeVerticalScrollOffset()
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18;
        android.view.View r1;
        boolean $z0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;

        r0 := @this: android.widget.AbsListView;

        i0 = r0.<android.widget.AbsListView: int mFirstPosition>;

        i1 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if i0 < 0 goto label6;

        if i1 <= 0 goto label6;

        $z0 = r0.<android.widget.AbsListView: boolean mSmoothScrollbarEnabled>;

        if $z0 == 0 goto label2;

        r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(0);

        i2 = virtualinvoke r1.<android.view.View: int getTop()>();

        i3 = virtualinvoke r1.<android.view.View: int getHeight()>();

        if i3 <= 0 goto label1;

        $i8 = i0 * 100;

        $i7 = i2 * 100;

        $i9 = $i7 / i3;

        $i10 = $i8 - $i9;

        $i11 = r0.<android.widget.AbsListView: int mScrollY>;

        $f7 = (float) $i11;

        $i12 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $f8 = (float) $i12;

        $f9 = $f7 / $f8;

        $i13 = r0.<android.widget.AbsListView: int mItemCount>;

        $f10 = (float) $i13;

        $f11 = $f9 * $f10;

        $f12 = $f11 * 100.0F;

        $i14 = (int) $f12;

        $i15 = $i10 + $i14;

        $i16 = staticinvoke <java.lang.Math: int max(int,int)>($i15, 0);

        return $i16;

     label1:
        goto label6;

     label2:
        i17 = r0.<android.widget.AbsListView: int mItemCount>;

        if i0 != 0 goto label3;

        i18 = 0;

        goto label5;

     label3:
        $i4 = i0 + i1;

        if $i4 != i17 goto label4;

        i18 = i17;

        goto label5;

     label4:
        $i5 = i1 / 2;

        i18 = i0 + $i5;

     label5:
        $f5 = (float) i0;

        $f3 = (float) i1;

        $f1 = (float) i18;

        $f0 = (float) i17;

        $f2 = $f1 / $f0;

        $f4 = $f3 * $f2;

        $f6 = $f5 + $f4;

        $i6 = (int) $f6;

        return $i6;

     label6:
        return 0;
    }

    protected int computeVerticalScrollRange()
    {
        android.widget.AbsListView r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: android.widget.AbsListView;

        $z0 = r0.<android.widget.AbsListView: boolean mSmoothScrollbarEnabled>;

        if $z0 == 0 goto label1;

        $i1 = r0.<android.widget.AbsListView: int mItemCount>;

        $i2 = $i1 * 100;

        i0 = staticinvoke <java.lang.Math: int max(int,int)>($i2, 0);

        $i3 = r0.<android.widget.AbsListView: int mScrollY>;

        if $i3 == 0 goto label2;

        $i4 = r0.<android.widget.AbsListView: int mScrollY>;

        $f0 = (float) $i4;

        $i5 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $f1 = (float) $i5;

        $f3 = $f0 / $f1;

        $i6 = r0.<android.widget.AbsListView: int mItemCount>;

        $f2 = (float) $i6;

        $f4 = $f3 * $f2;

        $f5 = $f4 * 100.0F;

        $i8 = (int) $f5;

        $i7 = staticinvoke <java.lang.Math: int abs(int)>($i8);

        i0 = i0 + $i7;

        goto label2;

     label1:
        i0 = r0.<android.widget.AbsListView: int mItemCount>;

     label2:
        return i0;
    }

    protected float getTopFadingEdgeStrength()
    {
        android.widget.AbsListView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        float f0, f1, $f2, $f3;
        android.view.View $r1;

        r0 := @this: android.widget.AbsListView;

        i0 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        f0 = specialinvoke r0.<android.widget.AdapterView: float getTopFadingEdgeStrength()>();

        if i0 != 0 goto label1;

        return f0;

     label1:
        $i2 = r0.<android.widget.AbsListView: int mFirstPosition>;

        if $i2 <= 0 goto label2;

        return 1.0F;

     label2:
        $r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(0);

        i1 = virtualinvoke $r1.<android.view.View: int getTop()>();

        $i3 = virtualinvoke r0.<android.widget.AbsListView: int getVerticalFadingEdgeLength()>();

        f1 = (float) $i3;

        $i4 = r0.<android.widget.AbsListView: int mPaddingTop>;

        if i1 >= $i4 goto label3;

        $i5 = r0.<android.widget.AbsListView: int mPaddingTop>;

        $i6 = i1 - $i5;

        $i7 = neg $i6;

        $f2 = (float) $i7;

        $f3 = $f2 / f1;

        goto label4;

     label3:
        $f3 = f0;

     label4:
        return $f3;
    }

    protected float getBottomFadingEdgeStrength()
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        float f0, f1, $f2, $f3;
        android.view.View $r1;

        r0 := @this: android.widget.AbsListView;

        i0 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        f0 = specialinvoke r0.<android.widget.AdapterView: float getBottomFadingEdgeStrength()>();

        if i0 != 0 goto label1;

        return f0;

     label1:
        $i3 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i4 = $i3 + i0;

        $i7 = $i4 - 1;

        $i5 = r0.<android.widget.AbsListView: int mItemCount>;

        $i6 = $i5 - 1;

        if $i7 >= $i6 goto label2;

        return 1.0F;

     label2:
        $i8 = i0 - 1;

        $r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i8);

        i1 = virtualinvoke $r1.<android.view.View: int getBottom()>();

        i2 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $i9 = virtualinvoke r0.<android.widget.AbsListView: int getVerticalFadingEdgeLength()>();

        f1 = (float) $i9;

        $i11 = r0.<android.widget.AbsListView: int mPaddingBottom>;

        $i10 = i2 - $i11;

        if i1 <= $i10 goto label3;

        $i12 = i1 - i2;

        $i13 = r0.<android.widget.AbsListView: int mPaddingBottom>;

        $i14 = $i12 + $i13;

        $f2 = (float) $i14;

        $f3 = $f2 / f1;

        goto label4;

     label3:
        $f3 = f0;

     label4:
        return $f3;
    }

    protected void onMeasure(int, int)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24;
        android.graphics.Rect r1;
        android.view.View r2;
        android.graphics.drawable.Drawable $r3;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r3 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        if $r3 != null goto label1;

        specialinvoke r0.<android.widget.AbsListView: void useDefaultSelector()>();

     label1:
        r1 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i6 = r0.<android.widget.AbsListView: int mSelectionLeftPadding>;

        $i5 = r0.<android.widget.AbsListView: int mPaddingLeft>;

        $i7 = $i6 + $i5;

        r1.<android.graphics.Rect: int left> = $i7;

        $i9 = r0.<android.widget.AbsListView: int mSelectionTopPadding>;

        $i8 = r0.<android.widget.AbsListView: int mPaddingTop>;

        $i10 = $i9 + $i8;

        r1.<android.graphics.Rect: int top> = $i10;

        $i13 = r0.<android.widget.AbsListView: int mSelectionRightPadding>;

        $i11 = r0.<android.widget.AbsListView: int mPaddingRight>;

        $i12 = $i13 + $i11;

        r1.<android.graphics.Rect: int right> = $i12;

        $i14 = r0.<android.widget.AbsListView: int mSelectionBottomPadding>;

        $i15 = r0.<android.widget.AbsListView: int mPaddingBottom>;

        $i17 = $i14 + $i15;

        r1.<android.graphics.Rect: int bottom> = $i17;

        $i16 = r0.<android.widget.AbsListView: int mTranscriptMode>;

        if $i16 != 1 goto label6;

        i2 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        $i18 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $i20 = virtualinvoke r0.<android.widget.AbsListView: int getPaddingBottom()>();

        i3 = $i18 - $i20;

        $i19 = i2 - 1;

        r2 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i19);

        if r2 == null goto label2;

        $i24 = virtualinvoke r2.<android.view.View: int getBottom()>();

        goto label3;

     label2:
        $i24 = i3;

     label3:
        i4 = $i24;

        $i21 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i22 = $i21 + i2;

        $i23 = r0.<android.widget.AbsListView: int mLastHandledItemCount>;

        if $i22 < $i23 goto label4;

        if i4 > i3 goto label4;

        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        r0.<android.widget.AbsListView: boolean mForceTranscriptScroll> = $z0;

     label6:
        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.widget.AbsListView r0;
        boolean z0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9;
        android.widget.FastScroller $r1, $r2;
        android.widget.AbsListView$RecycleBin $r3;
        android.view.View $r4;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        specialinvoke r0.<android.widget.AdapterView: void onLayout(boolean,int,int,int,int)>(z0, i0, i1, i2, i3);

        r0.<android.widget.AbsListView: boolean mInLayout> = 1;

        i4 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if z0 == 0 goto label3;

        i5 = 0;

     label1:
        if i5 >= i4 goto label2;

        $r4 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i5);

        virtualinvoke $r4.<android.view.View: void forceLayout()>();

        i5 = i5 + 1;

        goto label1;

     label2:
        $r3 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        virtualinvoke $r3.<android.widget.AbsListView$RecycleBin: void markChildrenDirty()>();

     label3:
        virtualinvoke r0.<android.widget.AbsListView: void layoutChildren()>();

        r0.<android.widget.AbsListView: boolean mInLayout> = 0;

        $i6 = i3 - i1;

        $i7 = $i6 / 3;

        r0.<android.widget.AbsListView: int mOverscrollMax> = $i7;

        $r1 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        if $r1 == null goto label4;

        $r2 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        $i8 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        $i9 = r0.<android.widget.AbsListView: int mItemCount>;

        virtualinvoke $r2.<android.widget.FastScroller: void onItemCountChanged(int,int)>($i8, $i9);

     label4:
        return;
    }

    protected boolean setFrame(int, int, int, int)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, i3, $i4;
        boolean z0, z1, $z2, $z3, $z4;
        android.widget.PopupWindow $r1, $r2;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        z0 = specialinvoke r0.<android.widget.AdapterView: boolean setFrame(int,int,int,int)>(i0, i1, i2, i3);

        if z0 == 0 goto label3;

        $i4 = virtualinvoke r0.<android.widget.AbsListView: int getWindowVisibility()>();

        if $i4 != 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        z1 = $z4;

        $z2 = r0.<android.widget.AbsListView: boolean mFiltered>;

        if $z2 == 0 goto label3;

        if z1 == 0 goto label3;

        $r1 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        if $r1 == null goto label3;

        $r2 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        $z3 = virtualinvoke $r2.<android.widget.PopupWindow: boolean isShowing()>();

        if $z3 == 0 goto label3;

        specialinvoke r0.<android.widget.AbsListView: void positionPopup()>();

     label3:
        return z0;
    }

    protected void layoutChildren()
    {
        android.widget.AbsListView r0;

        r0 := @this: android.widget.AbsListView;

        return;
    }

    android.view.View getAccessibilityFocusedChild(android.view.View)
    {
        android.widget.AbsListView r0;
        android.view.View r1;
        android.view.ViewParent r2;
        boolean $z0, $z1;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.View;

        r2 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

     label1:
        $z0 = r2 instanceof android.view.View;

        if $z0 == 0 goto label2;

        if r2 == r0 goto label2;

        r1 = (android.view.View) r2;

        r2 = interfaceinvoke r2.<android.view.ViewParent: android.view.ViewParent getParent()>();

        goto label1;

     label2:
        $z1 = r2 instanceof android.view.View;

        if $z1 != 0 goto label3;

        return null;

     label3:
        return r1;
    }

    void updateScrollIndicators()
    {
        android.widget.AbsListView r0;
        android.view.View $r1, $r2, $r3, $r4;
        boolean $z0, $z1;
        byte $b0, $b1;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.view.View mScrollUp>;

        if $r1 == null goto label3;

        $r4 = r0.<android.widget.AbsListView: android.view.View mScrollUp>;

        $z1 = specialinvoke r0.<android.widget.AbsListView: boolean canScrollUp()>();

        if $z1 == 0 goto label1;

        $b1 = 0;

        goto label2;

     label1:
        $b1 = 4;

     label2:
        virtualinvoke $r4.<android.view.View: void setVisibility(int)>($b1);

     label3:
        $r2 = r0.<android.widget.AbsListView: android.view.View mScrollDown>;

        if $r2 == null goto label6;

        $r3 = r0.<android.widget.AbsListView: android.view.View mScrollDown>;

        $z0 = specialinvoke r0.<android.widget.AbsListView: boolean canScrollDown()>();

        if $z0 == 0 goto label4;

        $b0 = 0;

        goto label5;

     label4:
        $b0 = 4;

     label5:
        virtualinvoke $r3.<android.view.View: void setVisibility(int)>($b0);

     label6:
        return;
    }

    private boolean canScrollUp()
    {
        android.widget.AbsListView r0;
        boolean z0, $z1, $z2;
        android.view.View r1;
        int $i0, $i1, $i2, $i3;
        android.graphics.Rect $r2;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mFirstPosition>;

        if $i0 <= 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z0 = $z2;

        if z0 != 0 goto label5;

        $i1 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if $i1 <= 0 goto label5;

        r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(0);

        $i2 = virtualinvoke r1.<android.view.View: int getTop()>();

        $r2 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i3 = $r2.<android.graphics.Rect: int top>;

        if $i2 >= $i3 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        z0 = $z1;

     label5:
        return z0;
    }

    private boolean canScrollDown()
    {
        android.widget.AbsListView r0;
        boolean z0, $z1, $z2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        android.view.View r1;
        android.graphics.Rect $r2;

        r0 := @this: android.widget.AbsListView;

        i0 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        $i1 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i3 = $i1 + i0;

        $i2 = r0.<android.widget.AbsListView: int mItemCount>;

        if $i3 >= $i2 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z0 = $z2;

        if z0 != 0 goto label5;

        if i0 <= 0 goto label5;

        $i4 = i0 - 1;

        r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i4);

        $i5 = virtualinvoke r1.<android.view.View: int getBottom()>();

        $i7 = r0.<android.widget.AbsListView: int mBottom>;

        $r2 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i6 = $r2.<android.graphics.Rect: int bottom>;

        $i8 = $i7 - $i6;

        if $i5 <= $i8 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        z0 = $z1;

     label5:
        return z0;
    }

    public android.view.View getSelectedView()
    {
        android.widget.AbsListView r0;
        int $i0, $i1, $i2, $i3, $i4;
        android.view.View $r1;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mItemCount>;

        if $i0 <= 0 goto label1;

        $i1 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        if $i1 < 0 goto label1;

        $i3 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        $i2 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i4 = $i3 - $i2;

        $r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i4);

        return $r1;

     label1:
        return null;
    }

    public int getListPaddingTop()
    {
        android.widget.AbsListView r0;
        android.graphics.Rect $r1;
        int $i0;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i0 = $r1.<android.graphics.Rect: int top>;

        return $i0;
    }

    public int getListPaddingBottom()
    {
        android.widget.AbsListView r0;
        android.graphics.Rect $r1;
        int $i0;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i0 = $r1.<android.graphics.Rect: int bottom>;

        return $i0;
    }

    public int getListPaddingLeft()
    {
        android.widget.AbsListView r0;
        android.graphics.Rect $r1;
        int $i0;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i0 = $r1.<android.graphics.Rect: int left>;

        return $i0;
    }

    public int getListPaddingRight()
    {
        android.widget.AbsListView r0;
        android.graphics.Rect $r1;
        int $i0;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i0 = $r1.<android.graphics.Rect: int right>;

        return $i0;
    }

    android.view.View obtainView(int, boolean[])
    {
        android.widget.AbsListView r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        boolean[] r1;
        android.view.View r2, r4, r19, r20;
        android.widget.AbsListView$LayoutParams r3;
        android.widget.AbsListView$RecycleBin $r5, $r6, $r15, $r18;
        android.widget.ListAdapter $r7, $r16, $r17;
        android.content.Context $r8;
        android.view.accessibility.AccessibilityManager $r9;
        android.widget.AbsListView$ListItemAccessibilityDelegate $r10, $r11, $r13;
        boolean $z0;
        android.view.View$AccessibilityDelegate $r12;
        android.view.ViewGroup$LayoutParams $r14;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        r1 := @parameter1: boolean[];

        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(8L, "obtainView");

        r1[0] = 0;

        $r5 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        r2 = virtualinvoke $r5.<android.widget.AbsListView$RecycleBin: android.view.View getTransientStateView(int)>(i0);

        if r2 == null goto label2;

        $r14 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.widget.AbsListView$LayoutParams) $r14;

        $i4 = r3.<android.widget.AbsListView$LayoutParams: int viewType>;

        $r16 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $i5 = interfaceinvoke $r16.<android.widget.ListAdapter: int getItemViewType(int)>(i0);

        if $i4 != $i5 goto label1;

        $r17 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        r4 = interfaceinvoke $r17.<android.widget.ListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>(i0, r2, r0);

        if r4 == r2 goto label1;

        specialinvoke r0.<android.widget.AbsListView: void setItemViewLayoutParams(android.view.View,int)>(r4, i0);

        $r18 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        virtualinvoke $r18.<android.widget.AbsListView$RecycleBin: void addScrapView(android.view.View,int)>(r4, i0);

     label1:
        r1[0] = 1;

        return r2;

     label2:
        $r6 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        r19 = virtualinvoke $r6.<android.widget.AbsListView$RecycleBin: android.view.View getScrapView(int)>(i0);

        $r7 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        r20 = interfaceinvoke $r7.<android.widget.ListAdapter: android.view.View getView(int,android.view.View,android.view.ViewGroup)>(i0, r19, r0);

        if r19 == null goto label4;

        if r20 == r19 goto label3;

        $r15 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        virtualinvoke $r15.<android.widget.AbsListView$RecycleBin: void addScrapView(android.view.View,int)>(r19, i0);

        goto label4;

     label3:
        r1[0] = 1;

        virtualinvoke r20.<android.view.View: void dispatchFinishTemporaryDetach()>();

     label4:
        $i1 = r0.<android.widget.AbsListView: int mCacheColorHint>;

        if $i1 == 0 goto label5;

        $i3 = r0.<android.widget.AbsListView: int mCacheColorHint>;

        virtualinvoke r20.<android.view.View: void setDrawingCacheBackgroundColor(int)>($i3);

     label5:
        $i2 = virtualinvoke r20.<android.view.View: int getImportantForAccessibility()>();

        if $i2 != 0 goto label6;

        virtualinvoke r20.<android.view.View: void setImportantForAccessibility(int)>(1);

     label6:
        specialinvoke r0.<android.widget.AbsListView: void setItemViewLayoutParams(android.view.View,int)>(r20, i0);

        $r8 = r0.<android.widget.AbsListView: android.content.Context mContext>;

        $r9 = staticinvoke <android.view.accessibility.AccessibilityManager: android.view.accessibility.AccessibilityManager getInstance(android.content.Context)>($r8);

        $z0 = virtualinvoke $r9.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z0 == 0 goto label8;

        $r10 = r0.<android.widget.AbsListView: android.widget.AbsListView$ListItemAccessibilityDelegate mAccessibilityDelegate>;

        if $r10 != null goto label7;

        $r13 = new android.widget.AbsListView$ListItemAccessibilityDelegate;

        specialinvoke $r13.<android.widget.AbsListView$ListItemAccessibilityDelegate: void <init>(android.widget.AbsListView)>(r0);

        r0.<android.widget.AbsListView: android.widget.AbsListView$ListItemAccessibilityDelegate mAccessibilityDelegate> = $r13;

     label7:
        $r12 = virtualinvoke r20.<android.view.View: android.view.View$AccessibilityDelegate getAccessibilityDelegate()>();

        if $r12 != null goto label8;

        $r11 = r0.<android.widget.AbsListView: android.widget.AbsListView$ListItemAccessibilityDelegate mAccessibilityDelegate>;

        virtualinvoke r20.<android.view.View: void setAccessibilityDelegate(android.view.View$AccessibilityDelegate)>($r11);

     label8:
        staticinvoke <android.os.Trace: void traceEnd(long)>(8L);

        return r20;
    }

    private void setItemViewLayoutParams(android.view.View, int)
    {
        android.widget.AbsListView r0;
        android.view.View r1;
        int i0, $i1;
        android.view.ViewGroup$LayoutParams r2, $r6, $r7;
        android.widget.AbsListView$LayoutParams r3;
        boolean $z0, $z1;
        android.widget.ListAdapter $r4, $r5;
        long $l2;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        if r2 != null goto label1;

        $r7 = virtualinvoke r0.<android.widget.AbsListView: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>();

        r3 = (android.widget.AbsListView$LayoutParams) $r7;

        goto label3;

     label1:
        $z0 = virtualinvoke r0.<android.widget.AbsListView: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>(r2);

        if $z0 != 0 goto label2;

        $r6 = virtualinvoke r0.<android.widget.AbsListView: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>(r2);

        r3 = (android.widget.AbsListView$LayoutParams) $r6;

        goto label3;

     label2:
        r3 = (android.widget.AbsListView$LayoutParams) r2;

     label3:
        $z1 = r0.<android.widget.AbsListView: boolean mAdapterHasStableIds>;

        if $z1 == 0 goto label4;

        $r5 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $l2 = interfaceinvoke $r5.<android.widget.ListAdapter: long getItemId(int)>(i0);

        r3.<android.widget.AbsListView$LayoutParams: long itemId> = $l2;

     label4:
        $r4 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $i1 = interfaceinvoke $r4.<android.widget.ListAdapter: int getItemViewType(int)>(i0);

        r3.<android.widget.AbsListView$LayoutParams: int viewType> = $i1;

        virtualinvoke r1.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r3);

        return;
    }

    public void onInitializeAccessibilityNodeInfoForItem(android.view.View, int, android.view.accessibility.AccessibilityNodeInfo)
    {
        android.widget.AbsListView r0;
        android.view.View r1;
        int i0, $i1;
        android.view.accessibility.AccessibilityNodeInfo r2;
        android.widget.ListAdapter r3;
        android.widget.Adapter $r4;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: android.view.accessibility.AccessibilityNodeInfo;

        $r4 = virtualinvoke r0.<android.widget.AbsListView: android.widget.Adapter getAdapter()>();

        r3 = (android.widget.ListAdapter) $r4;

        if i0 == -1 goto label1;

        if r3 != null goto label2;

     label1:
        return;

     label2:
        $z0 = virtualinvoke r0.<android.widget.AbsListView: boolean isEnabled()>();

        if $z0 == 0 goto label3;

        $z1 = interfaceinvoke r3.<android.widget.ListAdapter: boolean isEnabled(int)>(i0);

        if $z1 != 0 goto label4;

     label3:
        virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: void setEnabled(boolean)>(0);

        return;

     label4:
        $i1 = virtualinvoke r0.<android.widget.AbsListView: int getSelectedItemPosition()>();

        if i0 != $i1 goto label5;

        virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: void setSelected(boolean)>(1);

        virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(8);

        goto label6;

     label5:
        virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(4);

     label6:
        $z2 = virtualinvoke r0.<android.widget.AbsListView: boolean isClickable()>();

        if $z2 == 0 goto label7;

        virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(16);

        virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: void setClickable(boolean)>(1);

     label7:
        $z3 = virtualinvoke r0.<android.widget.AbsListView: boolean isLongClickable()>();

        if $z3 == 0 goto label8;

        virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: void addAction(int)>(32);

        virtualinvoke r2.<android.view.accessibility.AccessibilityNodeInfo: void setLongClickable(boolean)>(1);

     label8:
        return;
    }

    void positionSelectorLikeTouch(int, android.view.View, float, float)
    {
        android.widget.AbsListView r0;
        int i0;
        android.view.View r1;
        float f0, f1;
        android.graphics.drawable.Drawable $r2, $r3;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.View;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        virtualinvoke r0.<android.widget.AbsListView: void positionSelectorLikeFocus(int,android.view.View)>(i0, r1);

        $r2 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        if $r2 == null goto label1;

        if i0 == -1 goto label1;

        $r3 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void setHotspot(float,float)>(f0, f1);

     label1:
        return;
    }

    void positionSelectorLikeFocus(int, android.view.View)
    {
        android.widget.AbsListView r0;
        int i0, $i1, $i2;
        android.view.View r1;
        android.graphics.drawable.Drawable r2;
        boolean z0, $z2, $z4;
        android.graphics.Rect r3;
        float f0, f1;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.View;

        r2 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        if r2 == null goto label1;

        $i2 = r0.<android.widget.AbsListView: int mSelectorPosition>;

        if $i2 == i0 goto label1;

        if i0 == -1 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        z0 = $z4;

        if z0 == 0 goto label3;

        virtualinvoke r2.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(0, 0);

     label3:
        virtualinvoke r0.<android.widget.AbsListView: void positionSelector(int,android.view.View)>(i0, r1);

        if z0 == 0 goto label6;

        r3 = r0.<android.widget.AbsListView: android.graphics.Rect mSelectorRect>;

        f0 = virtualinvoke r3.<android.graphics.Rect: float exactCenterX()>();

        f1 = virtualinvoke r3.<android.graphics.Rect: float exactCenterY()>();

        $i1 = virtualinvoke r0.<android.widget.AbsListView: int getVisibility()>();

        if $i1 != 0 goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        virtualinvoke r2.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>($z2, 0);

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setHotspot(float,float)>(f0, f1);

     label6:
        return;
    }

    void positionSelector(int, android.view.View)
    {
        android.widget.AbsListView r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        android.view.View r1;
        android.graphics.Rect r2;
        android.graphics.drawable.Drawable r3;
        boolean z0, $z1, $z2, $z3;
        android.widget.AbsListView$SelectionBoundsAdjuster $r4;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.View;

        if i0 == -1 goto label1;

        r0.<android.widget.AbsListView: int mSelectorPosition> = i0;

     label1:
        r2 = r0.<android.widget.AbsListView: android.graphics.Rect mSelectorRect>;

        $i1 = virtualinvoke r1.<android.view.View: int getLeft()>();

        $i2 = virtualinvoke r1.<android.view.View: int getTop()>();

        $i3 = virtualinvoke r1.<android.view.View: int getRight()>();

        $i4 = virtualinvoke r1.<android.view.View: int getBottom()>();

        virtualinvoke r2.<android.graphics.Rect: void set(int,int,int,int)>($i1, $i2, $i3, $i4);

        $z1 = r1 instanceof android.widget.AbsListView$SelectionBoundsAdjuster;

        if $z1 == 0 goto label2;

        $r4 = (android.widget.AbsListView$SelectionBoundsAdjuster) r1;

        interfaceinvoke $r4.<android.widget.AbsListView$SelectionBoundsAdjuster: void adjustListItemSelectionBounds(android.graphics.Rect)>(r2);

     label2:
        $i6 = r2.<android.graphics.Rect: int left>;

        $i5 = r0.<android.widget.AbsListView: int mSelectionLeftPadding>;

        $i7 = $i6 - $i5;

        r2.<android.graphics.Rect: int left> = $i7;

        $i9 = r2.<android.graphics.Rect: int top>;

        $i8 = r0.<android.widget.AbsListView: int mSelectionTopPadding>;

        $i11 = $i9 - $i8;

        r2.<android.graphics.Rect: int top> = $i11;

        $i13 = r2.<android.graphics.Rect: int right>;

        $i10 = r0.<android.widget.AbsListView: int mSelectionRightPadding>;

        $i12 = $i13 + $i10;

        r2.<android.graphics.Rect: int right> = $i12;

        $i14 = r2.<android.graphics.Rect: int bottom>;

        $i15 = r0.<android.widget.AbsListView: int mSelectionBottomPadding>;

        $i16 = $i14 + $i15;

        r2.<android.graphics.Rect: int bottom> = $i16;

        r3 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        if r3 == null goto label3;

        virtualinvoke r3.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>(r2);

     label3:
        z0 = r0.<android.widget.AbsListView: boolean mIsChildViewEnabled>;

        $z2 = virtualinvoke r1.<android.view.View: boolean isEnabled()>();

        if $z2 == z0 goto label6;

        if z0 != 0 goto label4;

        $z3 = 1;

        goto label5;

     label4:
        $z3 = 0;

     label5:
        r0.<android.widget.AbsListView: boolean mIsChildViewEnabled> = $z3;

        $i17 = virtualinvoke r0.<android.widget.AbsListView: int getSelectedItemPosition()>();

        if $i17 == -1 goto label6;

        virtualinvoke r0.<android.widget.AbsListView: void refreshDrawableState()>();

     label6:
        return;
    }

    protected void dispatchDraw(android.graphics.Canvas)
    {
        android.widget.AbsListView r0;
        android.graphics.Canvas r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24;
        boolean z0, $z2, z3;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.graphics.Canvas;

        i0 = 0;

        $i3 = r0.<android.widget.AbsListView: int mGroupFlags>;

        $i4 = $i3 & 34;

        if $i4 != 34 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z0 = $z2;

        if z0 == 0 goto label3;

        i0 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

        i1 = r0.<android.widget.AbsListView: int mScrollX>;

        i2 = r0.<android.widget.AbsListView: int mScrollY>;

        $i7 = r0.<android.widget.AbsListView: int mPaddingLeft>;

        $i22 = i1 + $i7;

        $i8 = r0.<android.widget.AbsListView: int mPaddingTop>;

        $i20 = i2 + $i8;

        $i9 = r0.<android.widget.AbsListView: int mRight>;

        $i11 = i1 + $i9;

        $i10 = r0.<android.widget.AbsListView: int mLeft>;

        $i12 = $i11 - $i10;

        $i13 = r0.<android.widget.AbsListView: int mPaddingRight>;

        $i21 = $i12 - $i13;

        $i15 = r0.<android.widget.AbsListView: int mBottom>;

        $i17 = i2 + $i15;

        $i14 = r0.<android.widget.AbsListView: int mTop>;

        $i19 = $i17 - $i14;

        $i16 = r0.<android.widget.AbsListView: int mPaddingBottom>;

        $i18 = $i19 - $i16;

        virtualinvoke r1.<android.graphics.Canvas: boolean clipRect(int,int,int,int)>($i22, $i20, $i21, $i18);

        $i24 = r0.<android.widget.AbsListView: int mGroupFlags>;

        $i23 = $i24 & -35;

        r0.<android.widget.AbsListView: int mGroupFlags> = $i23;

     label3:
        z3 = r0.<android.widget.AbsListView: boolean mDrawSelectorOnTop>;

        if z3 != 0 goto label4;

        specialinvoke r0.<android.widget.AbsListView: void drawSelector(android.graphics.Canvas)>(r1);

     label4:
        specialinvoke r0.<android.widget.AdapterView: void dispatchDraw(android.graphics.Canvas)>(r1);

        if z3 == 0 goto label5;

        specialinvoke r0.<android.widget.AbsListView: void drawSelector(android.graphics.Canvas)>(r1);

     label5:
        if z0 == 0 goto label6;

        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i0);

        $i5 = r0.<android.widget.AbsListView: int mGroupFlags>;

        $i6 = $i5 | 34;

        r0.<android.widget.AbsListView: int mGroupFlags> = $i6;

     label6:
        return;
    }

    protected boolean isPaddingOffsetRequired()
    {
        android.widget.AbsListView r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mGroupFlags>;

        $i1 = $i0 & 34;

        if $i1 == 34 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected int getLeftPaddingOffset()
    {
        android.widget.AbsListView r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mGroupFlags>;

        $i1 = $i0 & 34;

        if $i1 != 34 goto label1;

        $i3 = 0;

        goto label2;

     label1:
        $i2 = r0.<android.widget.AbsListView: int mPaddingLeft>;

        $i3 = neg $i2;

     label2:
        return $i3;
    }

    protected int getTopPaddingOffset()
    {
        android.widget.AbsListView r0;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mGroupFlags>;

        $i1 = $i0 & 34;

        if $i1 != 34 goto label1;

        $i3 = 0;

        goto label2;

     label1:
        $i2 = r0.<android.widget.AbsListView: int mPaddingTop>;

        $i3 = neg $i2;

     label2:
        return $i3;
    }

    protected int getRightPaddingOffset()
    {
        android.widget.AbsListView r0;
        int $i0, $i1, $i2;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mGroupFlags>;

        $i1 = $i0 & 34;

        if $i1 != 34 goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $i2 = r0.<android.widget.AbsListView: int mPaddingRight>;

     label2:
        return $i2;
    }

    protected int getBottomPaddingOffset()
    {
        android.widget.AbsListView r0;
        int $i0, $i1, $i2;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mGroupFlags>;

        $i1 = $i0 & 34;

        if $i1 != 34 goto label1;

        $i2 = 0;

        goto label2;

     label1:
        $i2 = r0.<android.widget.AbsListView: int mPaddingBottom>;

     label2:
        return $i2;
    }

    protected void onSizeChanged(int, int, int, int)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, i3, $i4;
        android.widget.FastScroller $r1, $r2;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $i4 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if $i4 <= 0 goto label1;

        r0.<android.widget.AbsListView: boolean mDataChanged> = 1;

        virtualinvoke r0.<android.widget.AbsListView: void rememberSyncState()>();

     label1:
        $r1 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        if $r1 == null goto label2;

        $r2 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        virtualinvoke $r2.<android.widget.FastScroller: void onSizeChanged(int,int,int,int)>(i0, i1, i2, i3);

     label2:
        return;
    }

    boolean touchModeDrawsInPressedState()
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mTouchMode>;

        lookupswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label1;
            default: goto label2;
        };

     label1:
        return 1;

     label2:
        return 0;
    }

    boolean shouldShowSelector()
    {
        android.widget.AbsListView r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: android.widget.AbsListView;

        $z0 = virtualinvoke r0.<android.widget.AbsListView: boolean isInTouchMode()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<android.widget.AbsListView: boolean touchModeDrawsInPressedState()>();

        if $z1 == 0 goto label2;

        $z3 = virtualinvoke r0.<android.widget.AbsListView: boolean isPressed()>();

        if $z3 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    private void drawSelector(android.graphics.Canvas)
    {
        android.widget.AbsListView r0;
        android.graphics.Canvas r1;
        android.graphics.drawable.Drawable r2;
        android.graphics.Rect $r3, $r4;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.graphics.Canvas;

        $r3 = r0.<android.widget.AbsListView: android.graphics.Rect mSelectorRect>;

        $z0 = virtualinvoke $r3.<android.graphics.Rect: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        r2 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        $r4 = r0.<android.widget.AbsListView: android.graphics.Rect mSelectorRect>;

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>($r4);

        virtualinvoke r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

     label1:
        return;
    }

    public void setDrawSelectorOnTop(boolean)
    {
        android.widget.AbsListView r0;
        boolean z0;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        r0.<android.widget.AbsListView: boolean mDrawSelectorOnTop> = z0;

        return;
    }

    public void setSelector(int)
    {
        android.widget.AbsListView r0;
        int i0;
        android.content.Context $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.widget.AbsListView: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(i0);

        virtualinvoke r0.<android.widget.AbsListView: void setSelector(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public void setSelector(android.graphics.drawable.Drawable)
    {
        android.widget.AbsListView r0;
        android.graphics.drawable.Drawable r1, $r3, $r5, $r6;
        android.graphics.Rect r2, $r4;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r3 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        if $r3 == null goto label1;

        $r5 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(null);

        $r6 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        virtualinvoke r0.<android.widget.AbsListView: void unscheduleDrawable(android.graphics.drawable.Drawable)>($r6);

     label1:
        r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector> = r1;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r2 = $r4;

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>(r2);

        $i0 = r2.<android.graphics.Rect: int left>;

        r0.<android.widget.AbsListView: int mSelectionLeftPadding> = $i0;

        $i1 = r2.<android.graphics.Rect: int top>;

        r0.<android.widget.AbsListView: int mSelectionTopPadding> = $i1;

        $i2 = r2.<android.graphics.Rect: int right>;

        r0.<android.widget.AbsListView: int mSelectionRightPadding> = $i2;

        $i3 = r2.<android.graphics.Rect: int bottom>;

        r0.<android.widget.AbsListView: int mSelectionBottomPadding> = $i3;

        virtualinvoke r1.<android.graphics.drawable.Drawable: void setCallback(android.graphics.drawable.Drawable$Callback)>(r0);

        virtualinvoke r0.<android.widget.AbsListView: void updateSelectorState()>();

        return;
    }

    public android.graphics.drawable.Drawable getSelector()
    {
        android.widget.AbsListView r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        return $r1;
    }

    void keyPressed()
    {
        android.widget.AbsListView r0;
        android.graphics.drawable.Drawable r1, r4;
        android.graphics.Rect r2;
        android.view.View r3;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z7, $z8, $z9;
        int $i0, $i1, $i2, $i4, $i5;
        android.widget.AbsListView$CheckForKeyLongPress $r5, $r6, $r7, $r8;
        long $l3;
        android.graphics.drawable.TransitionDrawable $r9, $r10;

        r0 := @this: android.widget.AbsListView;

        $z1 = virtualinvoke r0.<android.widget.AbsListView: boolean isEnabled()>();

        if $z1 == 0 goto label1;

        $z2 = virtualinvoke r0.<android.widget.AbsListView: boolean isClickable()>();

        if $z2 != 0 goto label2;

     label1:
        return;

     label2:
        r1 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        r2 = r0.<android.widget.AbsListView: android.graphics.Rect mSelectorRect>;

        if r1 == null goto label9;

        $z3 = virtualinvoke r0.<android.widget.AbsListView: boolean isFocused()>();

        if $z3 != 0 goto label3;

        $z8 = virtualinvoke r0.<android.widget.AbsListView: boolean touchModeDrawsInPressedState()>();

        if $z8 == 0 goto label9;

     label3:
        $z4 = virtualinvoke r2.<android.graphics.Rect: boolean isEmpty()>();

        if $z4 != 0 goto label9;

        $i1 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        $i0 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i2 = $i1 - $i0;

        r3 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i2);

        if r3 == null goto label5;

        $z9 = virtualinvoke r3.<android.view.View: boolean hasFocusable()>();

        if $z9 == 0 goto label4;

        return;

     label4:
        virtualinvoke r3.<android.view.View: void setPressed(boolean)>(1);

     label5:
        virtualinvoke r0.<android.widget.AbsListView: void setPressed(boolean)>(1);

        z0 = virtualinvoke r0.<android.widget.AbsListView: boolean isLongClickable()>();

        r4 = virtualinvoke r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable getCurrent()>();

        if r4 == null goto label7;

        $z7 = r4 instanceof android.graphics.drawable.TransitionDrawable;

        if $z7 == 0 goto label7;

        if z0 == 0 goto label6;

        $r10 = (android.graphics.drawable.TransitionDrawable) r4;

        $i5 = staticinvoke <android.view.ViewConfiguration: int getLongPressTimeout()>();

        virtualinvoke $r10.<android.graphics.drawable.TransitionDrawable: void startTransition(int)>($i5);

        goto label7;

     label6:
        $r9 = (android.graphics.drawable.TransitionDrawable) r4;

        virtualinvoke $r9.<android.graphics.drawable.TransitionDrawable: void resetTransition()>();

     label7:
        if z0 == 0 goto label9;

        $z5 = r0.<android.widget.AbsListView: boolean mDataChanged>;

        if $z5 != 0 goto label9;

        $r5 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForKeyLongPress mPendingCheckForKeyLongPress>;

        if $r5 != null goto label8;

        $r8 = new android.widget.AbsListView$CheckForKeyLongPress;

        specialinvoke $r8.<android.widget.AbsListView$CheckForKeyLongPress: void <init>(android.widget.AbsListView,android.widget.AbsListView$1)>(r0, null);

        r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForKeyLongPress mPendingCheckForKeyLongPress> = $r8;

     label8:
        $r7 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForKeyLongPress mPendingCheckForKeyLongPress>;

        virtualinvoke $r7.<android.widget.AbsListView$CheckForKeyLongPress: void rememberWindowAttachCount()>();

        $r6 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForKeyLongPress mPendingCheckForKeyLongPress>;

        $i4 = staticinvoke <android.view.ViewConfiguration: int getLongPressTimeout()>();

        $l3 = (long) $i4;

        virtualinvoke r0.<android.widget.AbsListView: boolean postDelayed(java.lang.Runnable,long)>($r6, $l3);

     label9:
        return;
    }

    public void setScrollIndicators(android.view.View, android.view.View)
    {
        android.widget.AbsListView r0;
        android.view.View r1, r2;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        r0.<android.widget.AbsListView: android.view.View mScrollUp> = r1;

        r0.<android.widget.AbsListView: android.view.View mScrollDown> = r2;

        return;
    }

    void updateSelectorState()
    {
        android.widget.AbsListView r0;
        android.graphics.drawable.Drawable $r1, $r3, $r4;
        boolean $z0;
        int[] $r2, $r5;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        if $r1 == null goto label2;

        $z0 = virtualinvoke r0.<android.widget.AbsListView: boolean shouldShowSelector()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        $r5 = virtualinvoke r0.<android.widget.AbsListView: int[] getDrawableState()>();

        virtualinvoke $r4.<android.graphics.drawable.Drawable: boolean setState(int[])>($r5);

        goto label2;

     label1:
        $r3 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        $r2 = <android.util.StateSet: int[] NOTHING>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: boolean setState(int[])>($r2);

     label2:
        return;
    }

    protected void drawableStateChanged()
    {
        android.widget.AbsListView r0;

        r0 := @this: android.widget.AbsListView;

        specialinvoke r0.<android.widget.AdapterView: void drawableStateChanged()>();

        virtualinvoke r0.<android.widget.AbsListView: void updateSelectorState()>();

        return;
    }

    protected int[] onCreateDrawableState(int)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        int[] r1, $r2, $r3;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        $z0 = r0.<android.widget.AbsListView: boolean mIsChildViewEnabled>;

        if $z0 == 0 goto label1;

        $r3 = specialinvoke r0.<android.widget.AdapterView: int[] onCreateDrawableState(int)>(i0);

        return $r3;

     label1:
        $r2 = <android.widget.AbsListView: int[] ENABLED_STATE_SET>;

        i1 = $r2[0];

        $i4 = i0 + 1;

        r1 = specialinvoke r0.<android.widget.AdapterView: int[] onCreateDrawableState(int)>($i4);

        i2 = -1;

        $i5 = lengthof r1;

        i3 = $i5 - 1;

     label2:
        if i3 < 0 goto label4;

        $i10 = r1[i3];

        if $i10 != i1 goto label3;

        i2 = i3;

        goto label4;

     label3:
        i3 = i3 + -1;

        goto label2;

     label4:
        if i2 < 0 goto label5;

        $i9 = i2 + 1;

        $i6 = lengthof r1;

        $i7 = $i6 - i2;

        $i8 = $i7 - 1;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>(r1, $i9, r1, i2, $i8);

     label5:
        return r1;
    }

    public boolean verifyDrawable(android.graphics.drawable.Drawable)
    {
        android.widget.AbsListView r0;
        android.graphics.drawable.Drawable r1, $r2;
        boolean $z0, $z1;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        if $r2 == r1 goto label1;

        $z0 = specialinvoke r0.<android.widget.AdapterView: boolean verifyDrawable(android.graphics.drawable.Drawable)>(r1);

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public void jumpDrawablesToCurrentState()
    {
        android.widget.AbsListView r0;
        android.graphics.drawable.Drawable $r1, $r2;

        r0 := @this: android.widget.AbsListView;

        specialinvoke r0.<android.widget.AdapterView: void jumpDrawablesToCurrentState()>();

        $r1 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

     label1:
        return;
    }

    protected void onAttachedToWindow()
    {
        android.widget.AbsListView r0;
        android.view.ViewTreeObserver r1;
        boolean $z0, $z1;
        android.widget.ListAdapter $r2, $r6, $r7;
        android.widget.AbsListView$AdapterDataSetObserver $r3, $r4, $r5;
        int $i0, $i1;
        android.widget.PopupWindow $r8;

        r0 := @this: android.widget.AbsListView;

        specialinvoke r0.<android.widget.AdapterView: void onAttachedToWindow()>();

        r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.ViewTreeObserver getViewTreeObserver()>();

        virtualinvoke r1.<android.view.ViewTreeObserver: void addOnTouchModeChangeListener(android.view.ViewTreeObserver$OnTouchModeChangeListener)>(r0);

        $z0 = r0.<android.widget.AbsListView: boolean mTextFilterEnabled>;

        if $z0 == 0 goto label1;

        $r8 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        if $r8 == null goto label1;

        $z1 = r0.<android.widget.AbsListView: boolean mGlobalLayoutListenerAddedFilter>;

        if $z1 != 0 goto label1;

        virtualinvoke r1.<android.view.ViewTreeObserver: void addOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>(r0);

     label1:
        $r2 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        if $r2 == null goto label2;

        $r3 = r0.<android.widget.AbsListView: android.widget.AbsListView$AdapterDataSetObserver mDataSetObserver>;

        if $r3 != null goto label2;

        $r4 = new android.widget.AbsListView$AdapterDataSetObserver;

        specialinvoke $r4.<android.widget.AbsListView$AdapterDataSetObserver: void <init>(android.widget.AbsListView)>(r0);

        r0.<android.widget.AbsListView: android.widget.AbsListView$AdapterDataSetObserver mDataSetObserver> = $r4;

        $r6 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $r5 = r0.<android.widget.AbsListView: android.widget.AbsListView$AdapterDataSetObserver mDataSetObserver>;

        interfaceinvoke $r6.<android.widget.ListAdapter: void registerDataSetObserver(android.database.DataSetObserver)>($r5);

        r0.<android.widget.AbsListView: boolean mDataChanged> = 1;

        $i0 = r0.<android.widget.AbsListView: int mItemCount>;

        r0.<android.widget.AbsListView: int mOldItemCount> = $i0;

        $r7 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $i1 = interfaceinvoke $r7.<android.widget.ListAdapter: int getCount()>();

        r0.<android.widget.AbsListView: int mItemCount> = $i1;

     label2:
        return;
    }

    protected void onDetachedFromWindow()
    {
        android.widget.AbsListView r0;
        android.view.ViewTreeObserver r1;
        android.widget.AbsListView$RecycleBin $r2;
        boolean $z0;
        android.widget.ListAdapter $r3, $r20;
        android.os.StrictMode$Span $r4, $r5, $r17, $r19;
        android.widget.AbsListView$FlingRunnable $r6, $r15;
        android.widget.AbsListView$AbsPositionScroller $r7, $r16;
        java.lang.Runnable $r8, $r10, $r11, $r12, $r14;
        android.widget.AbsListView$PerformClick $r9, $r13;
        android.widget.AbsListView$AdapterDataSetObserver $r18, $r21;
        android.widget.PopupWindow $r22;

        r0 := @this: android.widget.AbsListView;

        specialinvoke r0.<android.widget.AdapterView: void onDetachedFromWindow()>();

        r0.<android.widget.AbsListView: boolean mIsDetaching> = 1;

        specialinvoke r0.<android.widget.AbsListView: void dismissPopup()>();

        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        virtualinvoke $r2.<android.widget.AbsListView$RecycleBin: void clear()>();

        r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.ViewTreeObserver getViewTreeObserver()>();

        virtualinvoke r1.<android.view.ViewTreeObserver: void removeOnTouchModeChangeListener(android.view.ViewTreeObserver$OnTouchModeChangeListener)>(r0);

        $z0 = r0.<android.widget.AbsListView: boolean mTextFilterEnabled>;

        if $z0 == 0 goto label1;

        $r22 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        if $r22 == null goto label1;

        virtualinvoke r1.<android.view.ViewTreeObserver: void removeOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>(r0);

        r0.<android.widget.AbsListView: boolean mGlobalLayoutListenerAddedFilter> = 0;

     label1:
        $r3 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        if $r3 == null goto label2;

        $r18 = r0.<android.widget.AbsListView: android.widget.AbsListView$AdapterDataSetObserver mDataSetObserver>;

        if $r18 == null goto label2;

        $r20 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $r21 = r0.<android.widget.AbsListView: android.widget.AbsListView$AdapterDataSetObserver mDataSetObserver>;

        interfaceinvoke $r20.<android.widget.ListAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>($r21);

        r0.<android.widget.AbsListView: android.widget.AbsListView$AdapterDataSetObserver mDataSetObserver> = null;

     label2:
        $r4 = r0.<android.widget.AbsListView: android.os.StrictMode$Span mScrollStrictSpan>;

        if $r4 == null goto label3;

        $r19 = r0.<android.widget.AbsListView: android.os.StrictMode$Span mScrollStrictSpan>;

        virtualinvoke $r19.<android.os.StrictMode$Span: void finish()>();

        r0.<android.widget.AbsListView: android.os.StrictMode$Span mScrollStrictSpan> = null;

     label3:
        $r5 = r0.<android.widget.AbsListView: android.os.StrictMode$Span mFlingStrictSpan>;

        if $r5 == null goto label4;

        $r17 = r0.<android.widget.AbsListView: android.os.StrictMode$Span mFlingStrictSpan>;

        virtualinvoke $r17.<android.os.StrictMode$Span: void finish()>();

        r0.<android.widget.AbsListView: android.os.StrictMode$Span mFlingStrictSpan> = null;

     label4:
        $r6 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        if $r6 == null goto label5;

        $r15 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>($r15);

     label5:
        $r7 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        if $r7 == null goto label6;

        $r16 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        virtualinvoke $r16.<android.widget.AbsListView$AbsPositionScroller: void stop()>();

     label6:
        $r8 = r0.<android.widget.AbsListView: java.lang.Runnable mClearScrollingCache>;

        if $r8 == null goto label7;

        $r14 = r0.<android.widget.AbsListView: java.lang.Runnable mClearScrollingCache>;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>($r14);

     label7:
        $r9 = r0.<android.widget.AbsListView: android.widget.AbsListView$PerformClick mPerformClick>;

        if $r9 == null goto label8;

        $r13 = r0.<android.widget.AbsListView: android.widget.AbsListView$PerformClick mPerformClick>;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>($r13);

     label8:
        $r10 = r0.<android.widget.AbsListView: java.lang.Runnable mTouchModeReset>;

        if $r10 == null goto label9;

        $r11 = r0.<android.widget.AbsListView: java.lang.Runnable mTouchModeReset>;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>($r11);

        $r12 = r0.<android.widget.AbsListView: java.lang.Runnable mTouchModeReset>;

        interfaceinvoke $r12.<java.lang.Runnable: void run()>();

     label9:
        r0.<android.widget.AbsListView: boolean mIsDetaching> = 0;

        return;
    }

    public void onWindowFocusChanged(boolean)
    {
        android.widget.AbsListView r0;
        boolean z0, $z1, $z2, $z4;
        byte b0, $b5;
        int $i1, $i2, $i3, $i4;
        android.widget.AbsListView$FlingRunnable $r1, $r2, $r3;
        android.widget.AbsListView$AbsPositionScroller $r4, $r5;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.widget.AdapterView: void onWindowFocusChanged(boolean)>(z0);

        $z1 = virtualinvoke r0.<android.widget.AbsListView: boolean isInTouchMode()>();

        if $z1 == 0 goto label1;

        $b5 = 0;

        goto label2;

     label1:
        $b5 = 1;

     label2:
        b0 = $b5;

        if z0 != 0 goto label5;

        virtualinvoke r0.<android.widget.AbsListView: void setChildrenDrawingCacheEnabled(boolean)>(0);

        $r1 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        if $r1 == null goto label4;

        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>($r2);

        $r3 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        virtualinvoke $r3.<android.widget.AbsListView$FlingRunnable: void endFling()>();

        $r4 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        if $r4 == null goto label3;

        $r5 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        virtualinvoke $r5.<android.widget.AbsListView$AbsPositionScroller: void stop()>();

     label3:
        $i4 = r0.<android.widget.AbsListView: int mScrollY>;

        if $i4 == 0 goto label4;

        r0.<android.widget.AbsListView: int mScrollY> = 0;

        virtualinvoke r0.<android.widget.AbsListView: void invalidateParentCaches()>();

        specialinvoke r0.<android.widget.AbsListView: void finishGlows()>();

        virtualinvoke r0.<android.widget.AbsListView: void invalidate()>();

     label4:
        specialinvoke r0.<android.widget.AbsListView: void dismissPopup()>();

        if b0 != 1 goto label8;

        $i3 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        r0.<android.widget.AbsListView: int mResurrectToPosition> = $i3;

        goto label8;

     label5:
        $z2 = r0.<android.widget.AbsListView: boolean mFiltered>;

        if $z2 == 0 goto label6;

        $z4 = r0.<android.widget.AbsListView: boolean mPopupHidden>;

        if $z4 != 0 goto label6;

        specialinvoke r0.<android.widget.AbsListView: void showPopup()>();

     label6:
        $i1 = r0.<android.widget.AbsListView: int mLastTouchMode>;

        if b0 == $i1 goto label8;

        $i2 = r0.<android.widget.AbsListView: int mLastTouchMode>;

        if $i2 == -1 goto label8;

        if b0 != 1 goto label7;

        virtualinvoke r0.<android.widget.AbsListView: boolean resurrectSelection()>();

        goto label8;

     label7:
        virtualinvoke r0.<android.widget.AbsListView: void hideSelector()>();

        r0.<android.widget.AbsListView: int mLayoutMode> = 0;

        virtualinvoke r0.<android.widget.AbsListView: void layoutChildren()>();

     label8:
        r0.<android.widget.AbsListView: int mLastTouchMode> = b0;

        return;
    }

    public void onRtlPropertiesChanged(int)
    {
        android.widget.AbsListView r0;
        int i0, $i1;
        android.widget.FastScroller $r1, $r2;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        specialinvoke r0.<android.widget.AdapterView: void onRtlPropertiesChanged(int)>(i0);

        $r1 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        $i1 = virtualinvoke r0.<android.widget.AbsListView: int getVerticalScrollbarPosition()>();

        virtualinvoke $r2.<android.widget.FastScroller: void setScrollbarPosition(int)>($i1);

     label1:
        return;
    }

    android.view.ContextMenu$ContextMenuInfo createContextMenuInfo(android.view.View, int, long)
    {
        android.widget.AbsListView r0;
        android.view.View r1;
        int i0;
        long l1;
        android.widget.AdapterView$AdapterContextMenuInfo $r2;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        $r2 = new android.widget.AdapterView$AdapterContextMenuInfo;

        specialinvoke $r2.<android.widget.AdapterView$AdapterContextMenuInfo: void <init>(android.view.View,int,long)>(r1, i0, l1);

        return $r2;
    }

    public void onCancelPendingInputEvents()
    {
        android.widget.AbsListView r0;
        android.widget.AbsListView$PerformClick $r1, $r8;
        android.widget.AbsListView$CheckForTap $r2, $r7;
        android.widget.AbsListView$CheckForLongPress $r3, $r6;
        android.widget.AbsListView$CheckForKeyLongPress $r4, $r5;

        r0 := @this: android.widget.AbsListView;

        specialinvoke r0.<android.widget.AdapterView: void onCancelPendingInputEvents()>();

        $r1 = r0.<android.widget.AbsListView: android.widget.AbsListView$PerformClick mPerformClick>;

        if $r1 == null goto label1;

        $r8 = r0.<android.widget.AbsListView: android.widget.AbsListView$PerformClick mPerformClick>;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>($r8);

     label1:
        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForTap mPendingCheckForTap>;

        if $r2 == null goto label2;

        $r7 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForTap mPendingCheckForTap>;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>($r7);

     label2:
        $r3 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForLongPress mPendingCheckForLongPress>;

        if $r3 == null goto label3;

        $r6 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForLongPress mPendingCheckForLongPress>;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>($r6);

     label3:
        $r4 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForKeyLongPress mPendingCheckForKeyLongPress>;

        if $r4 == null goto label4;

        $r5 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForKeyLongPress mPendingCheckForKeyLongPress>;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>($r5);

     label4:
        return;
    }

    boolean performLongPress(android.view.View, int, long)
    {
        android.widget.AbsListView r0;
        android.view.View r1;
        int i0, $i2;
        long l1;
        boolean z0;
        android.widget.AdapterView$OnItemLongClickListener $r2, $r4;
        android.view.ContextMenu$ContextMenuInfo $r3;
        android.view.ActionMode $r5, $r7;
        android.widget.AbsListView$MultiChoiceModeWrapper $r6;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        $i2 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i2 != 3 goto label2;

        $r5 = r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode>;

        if $r5 != null goto label1;

        $r6 = r0.<android.widget.AbsListView: android.widget.AbsListView$MultiChoiceModeWrapper mMultiChoiceModeCallback>;

        $r7 = virtualinvoke r0.<android.widget.AbsListView: android.view.ActionMode startActionMode(android.view.ActionMode$Callback)>($r6);

        r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode> = $r7;

        if $r7 == null goto label1;

        virtualinvoke r0.<android.widget.AbsListView: void setItemChecked(int,boolean)>(i0, 1);

        virtualinvoke r0.<android.widget.AbsListView: boolean performHapticFeedback(int)>(0);

     label1:
        return 1;

     label2:
        z0 = 0;

        $r2 = r0.<android.widget.AbsListView: android.widget.AdapterView$OnItemLongClickListener mOnItemLongClickListener>;

        if $r2 == null goto label3;

        $r4 = r0.<android.widget.AbsListView: android.widget.AdapterView$OnItemLongClickListener mOnItemLongClickListener>;

        z0 = interfaceinvoke $r4.<android.widget.AdapterView$OnItemLongClickListener: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)>(r0, r1, i0, l1);

     label3:
        if z0 != 0 goto label4;

        $r3 = virtualinvoke r0.<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo createContextMenuInfo(android.view.View,int,long)>(r1, i0, l1);

        r0.<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo mContextMenuInfo> = $r3;

        z0 = specialinvoke r0.<android.widget.AdapterView: boolean showContextMenuForChild(android.view.View)>(r0);

     label4:
        if z0 == 0 goto label5;

        virtualinvoke r0.<android.widget.AbsListView: boolean performHapticFeedback(int)>(0);

     label5:
        return z0;
    }

    protected android.view.ContextMenu$ContextMenuInfo getContextMenuInfo()
    {
        android.widget.AbsListView r0;
        android.view.ContextMenu$ContextMenuInfo $r1;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo mContextMenuInfo>;

        return $r1;
    }

    public boolean showContextMenu(float, float, int)
    {
        android.widget.AbsListView r0;
        float f0, f1;
        int i0, i1, $i3, $i4, $i5, $i6;
        long l2;
        android.view.View r1;
        boolean $z0, $z1;
        android.widget.ListAdapter $r2;
        android.view.ContextMenu$ContextMenuInfo $r3;

        r0 := @this: android.widget.AbsListView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        i0 := @parameter2: int;

        $i4 = (int) f0;

        $i3 = (int) f1;

        i1 = virtualinvoke r0.<android.widget.AbsListView: int pointToPosition(int,int)>($i4, $i3);

        if i1 == -1 goto label1;

        $r2 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        l2 = interfaceinvoke $r2.<android.widget.ListAdapter: long getItemId(int)>(i1);

        $i5 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i6 = i1 - $i5;

        r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i6);

        if r1 == null goto label1;

        $r3 = virtualinvoke r0.<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo createContextMenuInfo(android.view.View,int,long)>(r1, i1, l2);

        r0.<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo mContextMenuInfo> = $r3;

        $z1 = specialinvoke r0.<android.widget.AdapterView: boolean showContextMenuForChild(android.view.View)>(r0);

        return $z1;

     label1:
        $z0 = specialinvoke r0.<android.widget.AdapterView: boolean showContextMenu(float,float,int)>(f0, f1, i0);

        return $z0;
    }

    public boolean showContextMenuForChild(android.view.View)
    {
        android.widget.AbsListView r0;
        android.view.View r1, $r4;
        int i0, $i2, $i3;
        long l1;
        boolean z0;
        android.widget.ListAdapter $r2;
        android.widget.AdapterView$OnItemLongClickListener $r3, $r6;
        android.view.ContextMenu$ContextMenuInfo $r5;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.View;

        i0 = virtualinvoke r0.<android.widget.AbsListView: int getPositionForView(android.view.View)>(r1);

        if i0 < 0 goto label3;

        $r2 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        l1 = interfaceinvoke $r2.<android.widget.ListAdapter: long getItemId(int)>(i0);

        z0 = 0;

        $r3 = r0.<android.widget.AbsListView: android.widget.AdapterView$OnItemLongClickListener mOnItemLongClickListener>;

        if $r3 == null goto label1;

        $r6 = r0.<android.widget.AbsListView: android.widget.AdapterView$OnItemLongClickListener mOnItemLongClickListener>;

        z0 = interfaceinvoke $r6.<android.widget.AdapterView$OnItemLongClickListener: boolean onItemLongClick(android.widget.AdapterView,android.view.View,int,long)>(r0, r1, i0, l1);

     label1:
        if z0 != 0 goto label2;

        $i2 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i3 = i0 - $i2;

        $r4 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i3);

        $r5 = virtualinvoke r0.<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo createContextMenuInfo(android.view.View,int,long)>($r4, i0, l1);

        r0.<android.widget.AbsListView: android.view.ContextMenu$ContextMenuInfo mContextMenuInfo> = $r5;

        z0 = specialinvoke r0.<android.widget.AdapterView: boolean showContextMenuForChild(android.view.View)>(r1);

     label2:
        return z0;

     label3:
        return 0;
    }

    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        android.widget.AbsListView r0;
        int i0;
        android.view.KeyEvent r1;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        return 0;
    }

    public boolean onKeyUp(int, android.view.KeyEvent)
    {
        android.widget.AbsListView r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.view.KeyEvent r1;
        android.view.View r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.widget.ListAdapter $r3, $r4;
        long $l8;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        $z0 = staticinvoke <android.view.KeyEvent: boolean isConfirmKey(int)>(i0);

        if $z0 == 0 goto label3;

        $z2 = virtualinvoke r0.<android.widget.AbsListView: boolean isEnabled()>();

        if $z2 != 0 goto label1;

        return 1;

     label1:
        $z3 = virtualinvoke r0.<android.widget.AbsListView: boolean isClickable()>();

        if $z3 == 0 goto label3;

        $z4 = virtualinvoke r0.<android.widget.AbsListView: boolean isPressed()>();

        if $z4 == 0 goto label3;

        $i1 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        if $i1 < 0 goto label3;

        $r3 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        if $r3 == null goto label3;

        $i2 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        $r4 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $i3 = interfaceinvoke $r4.<android.widget.ListAdapter: int getCount()>();

        if $i2 >= $i3 goto label3;

        $i5 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        $i4 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i6 = $i5 - $i4;

        r2 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i6);

        if r2 == null goto label2;

        $i7 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        $l8 = r0.<android.widget.AbsListView: long mSelectedRowId>;

        virtualinvoke r0.<android.widget.AbsListView: boolean performItemClick(android.view.View,int,long)>(r2, $i7, $l8);

        virtualinvoke r2.<android.view.View: void setPressed(boolean)>(0);

     label2:
        virtualinvoke r0.<android.widget.AbsListView: void setPressed(boolean)>(0);

        return 1;

     label3:
        $z1 = specialinvoke r0.<android.widget.AdapterView: boolean onKeyUp(int,android.view.KeyEvent)>(i0, r1);

        return $z1;
    }

    protected void dispatchSetPressed(boolean)
    {
        android.widget.AbsListView r0;
        boolean z0;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        return;
    }

    public int pointToPosition(int, int)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6;
        android.graphics.Rect r1, $r3;
        android.view.View r2;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<android.widget.AbsListView: android.graphics.Rect mTouchFrame>;

        if r1 != null goto label1;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<android.widget.AbsListView: android.graphics.Rect mTouchFrame> = $r3;

        r1 = r0.<android.widget.AbsListView: android.graphics.Rect mTouchFrame>;

     label1:
        i2 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        i3 = i2 - 1;

     label2:
        if i3 < 0 goto label4;

        r2 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i3);

        $i4 = virtualinvoke r2.<android.view.View: int getVisibility()>();

        if $i4 != 0 goto label3;

        virtualinvoke r2.<android.view.View: void getHitRect(android.graphics.Rect)>(r1);

        $z0 = virtualinvoke r1.<android.graphics.Rect: boolean contains(int,int)>(i0, i1);

        if $z0 == 0 goto label3;

        $i5 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i6 = $i5 + i3;

        return $i6;

     label3:
        i3 = i3 + -1;

        goto label2;

     label4:
        return -1;
    }

    public long pointToRowId(int, int)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2;
        android.widget.ListAdapter $r1;
        long $l3;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = virtualinvoke r0.<android.widget.AbsListView: int pointToPosition(int,int)>(i0, i1);

        if i2 < 0 goto label1;

        $r1 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $l3 = interfaceinvoke $r1.<android.widget.ListAdapter: long getItemId(int)>(i2);

        return $l3;

     label1:
        return -9223372036854775808L;
    }

    private boolean startScrollIfNeeded(int, int, android.view.MotionEvent)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        android.view.MotionEvent r1;
        boolean z0, $z2;
        android.view.View r2;
        android.view.ViewParent r3;
        android.widget.AbsListView$CheckForLongPress $r4;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.view.MotionEvent;

        $i4 = r0.<android.widget.AbsListView: int mMotionY>;

        i2 = i1 - $i4;

        i3 = staticinvoke <java.lang.Math: int abs(int)>(i2);

        $i5 = r0.<android.widget.AbsListView: int mScrollY>;

        if $i5 == 0 goto label01;

        $z2 = 1;

        goto label02;

     label01:
        $z2 = 0;

     label02:
        z0 = $z2;

        if z0 != 0 goto label03;

        $i13 = r0.<android.widget.AbsListView: int mTouchSlop>;

        if i3 <= $i13 goto label10;

     label03:
        $i6 = virtualinvoke r0.<android.widget.AbsListView: int getNestedScrollAxes()>();

        $i7 = $i6 & 2;

        if $i7 != 0 goto label10;

        specialinvoke r0.<android.widget.AbsListView: void createScrollingCache()>();

        if z0 == 0 goto label04;

        r0.<android.widget.AbsListView: int mTouchMode> = 5;

        r0.<android.widget.AbsListView: int mMotionCorrection> = 0;

        goto label07;

     label04:
        r0.<android.widget.AbsListView: int mTouchMode> = 3;

        if i2 <= 0 goto label05;

        $i9 = r0.<android.widget.AbsListView: int mTouchSlop>;

        goto label06;

     label05:
        $i8 = r0.<android.widget.AbsListView: int mTouchSlop>;

        $i9 = neg $i8;

     label06:
        r0.<android.widget.AbsListView: int mMotionCorrection> = $i9;

     label07:
        $r4 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForLongPress mPendingCheckForLongPress>;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>($r4);

        virtualinvoke r0.<android.widget.AbsListView: void setPressed(boolean)>(0);

        $i10 = r0.<android.widget.AbsListView: int mMotionPosition>;

        $i11 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i12 = $i10 - $i11;

        r2 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i12);

        if r2 == null goto label08;

        virtualinvoke r2.<android.view.View: void setPressed(boolean)>(0);

     label08:
        virtualinvoke r0.<android.widget.AbsListView: void reportScrollStateChange(int)>(1);

        r3 = virtualinvoke r0.<android.widget.AbsListView: android.view.ViewParent getParent()>();

        if r3 == null goto label09;

        interfaceinvoke r3.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

     label09:
        specialinvoke r0.<android.widget.AbsListView: void scrollIfNeeded(int,int,android.view.MotionEvent)>(i0, i1, r1);

        return 1;

     label10:
        return 0;
    }

    private void scrollIfNeeded(int, int, android.view.MotionEvent)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, i97, i98, i99, i101, i102, i103, i104;
        android.view.MotionEvent r1;
        android.view.ViewParent r2;
        android.view.View r3, r35, r36;
        boolean z0, z1, $z2, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        int[] $r4, $r5, $r16, $r24, $r25, $r29, $r30, $r31, $r32, $r33, $r34;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27;
        android.widget.EdgeEffect $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r15, $r17, $r18, $r19, $r20, $r21, $r26, $r27;
        android.os.StrictMode$Span $r14, $r28;
        byte $b49, b100;
        android.view.VelocityTracker $r22, $r23;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.view.MotionEvent;

        $i13 = r0.<android.widget.AbsListView: int mMotionY>;

        i2 = i1 - $i13;

        i3 = 0;

        i4 = 0;

        $i12 = r0.<android.widget.AbsListView: int mLastY>;

        if $i12 != -2147483648 goto label01;

        $i90 = r0.<android.widget.AbsListView: int mMotionCorrection>;

        i2 = i2 - $i90;

     label01:
        $i14 = r0.<android.widget.AbsListView: int mLastY>;

        if $i14 == -2147483648 goto label02;

        $i92 = r0.<android.widget.AbsListView: int mLastY>;

        $i15 = $i92 - i1;

        goto label03;

     label02:
        $i15 = neg i2;

     label03:
        $r5 = r0.<android.widget.AbsListView: int[] mScrollConsumed>;

        $r4 = r0.<android.widget.AbsListView: int[] mScrollOffset>;

        $z2 = virtualinvoke r0.<android.widget.AbsListView: boolean dispatchNestedPreScroll(int,int,int[],int[])>(0, $i15, $r5, $r4);

        if $z2 == 0 goto label04;

        $r32 = r0.<android.widget.AbsListView: int[] mScrollConsumed>;

        $i93 = $r32[1];

        i2 = i2 + $i93;

        $r31 = r0.<android.widget.AbsListView: int[] mScrollOffset>;

        $i96 = $r31[1];

        i3 = neg $i96;

        $r34 = r0.<android.widget.AbsListView: int[] mScrollConsumed>;

        i4 = $r34[1];

        if r1 == null goto label04;

        $r33 = r0.<android.widget.AbsListView: int[] mScrollOffset>;

        $i95 = $r33[1];

        $f27 = (float) $i95;

        virtualinvoke r1.<android.view.MotionEvent: void offsetLocation(float,float)>(0.0F, $f27);

        $i89 = r0.<android.widget.AbsListView: int mNestedYOffset>;

        $r30 = r0.<android.widget.AbsListView: int[] mScrollOffset>;

        $i88 = $r30[1];

        $i91 = $i89 + $i88;

        r0.<android.widget.AbsListView: int mNestedYOffset> = $i91;

     label04:
        i5 = i2;

        $i16 = r0.<android.widget.AbsListView: int mLastY>;

        if $i16 == -2147483648 goto label05;

        $i83 = r0.<android.widget.AbsListView: int mLastY>;

        $i82 = i1 - $i83;

        $i94 = $i82 + i4;

        goto label06;

     label05:
        $i94 = i5;

     label06:
        i6 = $i94;

        i7 = 0;

        $i18 = r0.<android.widget.AbsListView: int mTouchMode>;

        if $i18 != 3 goto label22;

        $r14 = r0.<android.widget.AbsListView: android.os.StrictMode$Span mScrollStrictSpan>;

        if $r14 != null goto label07;

        $r28 = staticinvoke <android.os.StrictMode: android.os.StrictMode$Span enterCriticalSpan(java.lang.String)>("AbsListView-scroll");

        r0.<android.widget.AbsListView: android.os.StrictMode$Span mScrollStrictSpan> = $r28;

     label07:
        $i51 = r0.<android.widget.AbsListView: int mLastY>;

        if i1 == $i51 goto label39;

        $i50 = r0.<android.widget.AbsListView: int mGroupFlags>;

        $i47 = $i50 & 524288;

        if $i47 != 0 goto label08;

        $i79 = staticinvoke <java.lang.Math: int abs(int)>(i2);

        $i78 = r0.<android.widget.AbsListView: int mTouchSlop>;

        if $i79 <= $i78 goto label08;

        r2 = virtualinvoke r0.<android.widget.AbsListView: android.view.ViewParent getParent()>();

        if r2 == null goto label08;

        interfaceinvoke r2.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

     label08:
        $i46 = r0.<android.widget.AbsListView: int mMotionPosition>;

        if $i46 < 0 goto label09;

        $i80 = r0.<android.widget.AbsListView: int mMotionPosition>;

        $i81 = r0.<android.widget.AbsListView: int mFirstPosition>;

        i97 = $i80 - $i81;

        goto label10;

     label09:
        $i48 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        i97 = $i48 / 2;

     label10:
        i8 = 0;

        r3 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i97);

        if r3 == null goto label11;

        i8 = virtualinvoke r3.<android.view.View: int getTop()>();

     label11:
        z0 = 0;

        if i6 == 0 goto label12;

        z0 = virtualinvoke r0.<android.widget.AbsListView: boolean trackMotionScroll(int,int)>(i5, i6);

     label12:
        r35 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i97);

        if r35 == null goto label21;

        i9 = virtualinvoke r35.<android.view.View: int getTop()>();

        if z0 == 0 goto label20;

        $i53 = neg i6;

        $i52 = i9 - i8;

        i10 = $i53 - $i52;

        $i60 = i10 - i6;

        $r16 = r0.<android.widget.AbsListView: int[] mScrollOffset>;

        $z8 = virtualinvoke r0.<android.widget.AbsListView: boolean dispatchNestedScroll(int,int,int,int,int[])>(0, $i60, 0, i10, $r16);

        if $z8 == 0 goto label13;

        $r24 = r0.<android.widget.AbsListView: int[] mScrollOffset>;

        $i74 = $r24[1];

        i7 = i7 - $i74;

        if r1 == null goto label20;

        $r25 = r0.<android.widget.AbsListView: int[] mScrollOffset>;

        $i85 = $r25[1];

        $f26 = (float) $i85;

        virtualinvoke r1.<android.view.MotionEvent: void offsetLocation(float,float)>(0.0F, $f26);

        $i87 = r0.<android.widget.AbsListView: int mNestedYOffset>;

        $r29 = r0.<android.widget.AbsListView: int[] mScrollOffset>;

        $i84 = $r29[1];

        $i86 = $i87 + $i84;

        r0.<android.widget.AbsListView: int mNestedYOffset> = $i86;

        goto label20;

     label13:
        $i58 = r0.<android.widget.AbsListView: int mScrollY>;

        $i59 = r0.<android.widget.AbsListView: int mOverscrollDistance>;

        z1 = virtualinvoke r0.<android.widget.AbsListView: boolean overScrollBy(int,int,int,int,int,int,int,int,boolean)>(0, i10, 0, $i58, 0, 0, 0, $i59, 1);

        if z1 == 0 goto label14;

        $r22 = r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker>;

        if $r22 == null goto label14;

        $r23 = r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r23.<android.view.VelocityTracker: void clear()>();

     label14:
        i11 = virtualinvoke r0.<android.widget.AbsListView: int getOverScrollMode()>();

        if i11 == 0 goto label15;

        if i11 != 1 goto label20;

        $z10 = specialinvoke r0.<android.widget.AbsListView: boolean contentFits()>();

        if $z10 != 0 goto label20;

     label15:
        if z1 != 0 goto label16;

        r0.<android.widget.AbsListView: int mDirection> = 0;

        r0.<android.widget.AbsListView: int mTouchMode> = 5;

     label16:
        if i6 <= 0 goto label18;

        $r20 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        $i72 = neg i10;

        $f20 = (float) $i72;

        $i65 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $f22 = (float) $i65;

        $f21 = $f20 / $f22;

        $f23 = (float) i0;

        $i66 = virtualinvoke r0.<android.widget.AbsListView: int getWidth()>();

        $f25 = (float) $i66;

        $f24 = $f23 / $f25;

        virtualinvoke $r20.<android.widget.EdgeEffect: void onPull(float,float)>($f21, $f24);

        $r26 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        $z11 = virtualinvoke $r26.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z11 != 0 goto label17;

        $r21 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        virtualinvoke $r21.<android.widget.EdgeEffect: void onRelease()>();

     label17:
        $i75 = virtualinvoke r0.<android.widget.AbsListView: int getWidth()>();

        $r27 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        $i76 = virtualinvoke $r27.<android.widget.EdgeEffect: int getMaxHeight()>();

        $i77 = virtualinvoke r0.<android.widget.AbsListView: int getPaddingTop()>();

        $i73 = $i76 + $i77;

        virtualinvoke r0.<android.widget.AbsListView: void invalidate(int,int,int,int)>(0, 0, $i75, $i73);

        goto label20;

     label18:
        if i6 >= 0 goto label20;

        $r15 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        $f17 = (float) i10;

        $i62 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $f16 = (float) $i62;

        $f15 = $f17 / $f16;

        $f14 = (float) i0;

        $i61 = virtualinvoke r0.<android.widget.AbsListView: int getWidth()>();

        $f13 = (float) $i61;

        $f19 = $f14 / $f13;

        $f18 = 1.0F - $f19;

        virtualinvoke $r15.<android.widget.EdgeEffect: void onPull(float,float)>($f15, $f18);

        $r18 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        $z9 = virtualinvoke $r18.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z9 != 0 goto label19;

        $r19 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        virtualinvoke $r19.<android.widget.EdgeEffect: void onRelease()>();

     label19:
        $i64 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $i63 = virtualinvoke r0.<android.widget.AbsListView: int getPaddingBottom()>();

        $i68 = $i64 - $i63;

        $r17 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        $i67 = virtualinvoke $r17.<android.widget.EdgeEffect: int getMaxHeight()>();

        $i70 = $i68 - $i67;

        $i69 = virtualinvoke r0.<android.widget.AbsListView: int getWidth()>();

        $i71 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        virtualinvoke r0.<android.widget.AbsListView: void invalidate(int,int,int,int)>(0, $i70, $i69, $i71);

     label20:
        $i54 = i1 + i7;

        $i55 = $i54 + i3;

        r0.<android.widget.AbsListView: int mMotionY> = $i55;

     label21:
        $i57 = i1 + i7;

        $i56 = $i57 + i3;

        r0.<android.widget.AbsListView: int mLastY> = $i56;

        goto label39;

     label22:
        $i17 = r0.<android.widget.AbsListView: int mTouchMode>;

        if $i17 != 5 goto label39;

        $i20 = r0.<android.widget.AbsListView: int mLastY>;

        if i1 == $i20 goto label39;

        i98 = r0.<android.widget.AbsListView: int mScrollY>;

        i99 = i98 - i6;

        $i19 = r0.<android.widget.AbsListView: int mLastY>;

        if i1 <= $i19 goto label23;

        $b49 = 1;

        goto label24;

     label23:
        $b49 = -1;

     label24:
        b100 = $b49;

        $i22 = r0.<android.widget.AbsListView: int mDirection>;

        if $i22 != 0 goto label25;

        r0.<android.widget.AbsListView: int mDirection> = b100;

     label25:
        i101 = neg i6;

        if i99 >= 0 goto label26;

        if i98 >= 0 goto label27;

     label26:
        if i99 <= 0 goto label28;

        if i98 > 0 goto label28;

     label27:
        i101 = neg i98;

        i102 = i6 + i101;

        goto label29;

     label28:
        i102 = 0;

     label29:
        if i101 == 0 goto label34;

        $i28 = r0.<android.widget.AbsListView: int mScrollY>;

        $i30 = r0.<android.widget.AbsListView: int mOverscrollDistance>;

        virtualinvoke r0.<android.widget.AbsListView: boolean overScrollBy(int,int,int,int,int,int,int,int,boolean)>(0, i101, 0, $i28, 0, 0, 0, $i30, 1);

        i103 = virtualinvoke r0.<android.widget.AbsListView: int getOverScrollMode()>();

        if i103 == 0 goto label30;

        if i103 != 1 goto label34;

        $z7 = specialinvoke r0.<android.widget.AbsListView: boolean contentFits()>();

        if $z7 != 0 goto label34;

     label30:
        if i2 <= 0 goto label32;

        $r9 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        $f7 = (float) i101;

        $i37 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $f8 = (float) $i37;

        $f10 = $f7 / $f8;

        $f11 = (float) i0;

        $i41 = virtualinvoke r0.<android.widget.AbsListView: int getWidth()>();

        $f12 = (float) $i41;

        $f9 = $f11 / $f12;

        virtualinvoke $r9.<android.widget.EdgeEffect: void onPull(float,float)>($f10, $f9);

        $r11 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        $z6 = virtualinvoke $r11.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z6 != 0 goto label31;

        $r12 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        virtualinvoke $r12.<android.widget.EdgeEffect: void onRelease()>();

     label31:
        $i44 = virtualinvoke r0.<android.widget.AbsListView: int getWidth()>();

        $r13 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        $i45 = virtualinvoke $r13.<android.widget.EdgeEffect: int getMaxHeight()>();

        $i43 = virtualinvoke r0.<android.widget.AbsListView: int getPaddingTop()>();

        $i42 = $i45 + $i43;

        virtualinvoke r0.<android.widget.AbsListView: void invalidate(int,int,int,int)>(0, 0, $i44, $i42);

        goto label34;

     label32:
        if i2 >= 0 goto label34;

        $r6 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        $f0 = (float) i101;

        $i31 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $f3 = (float) $i31;

        $f2 = $f0 / $f3;

        $f1 = (float) i0;

        $i32 = virtualinvoke r0.<android.widget.AbsListView: int getWidth()>();

        $f6 = (float) $i32;

        $f5 = $f1 / $f6;

        $f4 = 1.0F - $f5;

        virtualinvoke $r6.<android.widget.EdgeEffect: void onPull(float,float)>($f2, $f4);

        $r7 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        $z5 = virtualinvoke $r7.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z5 != 0 goto label33;

        $r10 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        virtualinvoke $r10.<android.widget.EdgeEffect: void onRelease()>();

     label33:
        $i33 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $i36 = virtualinvoke r0.<android.widget.AbsListView: int getPaddingBottom()>();

        $i35 = $i33 - $i36;

        $r8 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        $i34 = virtualinvoke $r8.<android.widget.EdgeEffect: int getMaxHeight()>();

        $i38 = $i35 - $i34;

        $i39 = virtualinvoke r0.<android.widget.AbsListView: int getWidth()>();

        $i40 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        virtualinvoke r0.<android.widget.AbsListView: void invalidate(int,int,int,int)>(0, $i38, $i39, $i40);

     label34:
        if i102 == 0 goto label38;

        $i24 = r0.<android.widget.AbsListView: int mScrollY>;

        if $i24 == 0 goto label35;

        r0.<android.widget.AbsListView: int mScrollY> = 0;

        virtualinvoke r0.<android.widget.AbsListView: void invalidateParentIfNeeded()>();

     label35:
        virtualinvoke r0.<android.widget.AbsListView: boolean trackMotionScroll(int,int)>(i102, i102);

        r0.<android.widget.AbsListView: int mTouchMode> = 3;

        i104 = virtualinvoke r0.<android.widget.AbsListView: int findClosestMotionRow(int)>(i1);

        r0.<android.widget.AbsListView: int mMotionCorrection> = 0;

        $i26 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i27 = i104 - $i26;

        r36 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i27);

        if r36 == null goto label36;

        $i29 = virtualinvoke r36.<android.view.View: int getTop()>();

        goto label37;

     label36:
        $i29 = 0;

     label37:
        r0.<android.widget.AbsListView: int mMotionViewOriginalTop> = $i29;

        $i25 = i1 + i3;

        r0.<android.widget.AbsListView: int mMotionY> = $i25;

        r0.<android.widget.AbsListView: int mMotionPosition> = i104;

     label38:
        $i21 = i1 + i7;

        $i23 = $i21 + i3;

        r0.<android.widget.AbsListView: int mLastY> = $i23;

        r0.<android.widget.AbsListView: int mDirection> = b100;

     label39:
        return;
    }

    public void onTouchModeChanged(boolean)
    {
        android.widget.AbsListView r0;
        boolean z0;
        int i0, $i1, $i2, $i3;
        android.widget.AbsListView$FlingRunnable $r1, $r4;
        android.widget.AbsListView$AbsPositionScroller $r2, $r3;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label2;

        virtualinvoke r0.<android.widget.AbsListView: void hideSelector()>();

        $i2 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        if $i2 <= 0 goto label1;

        $i3 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if $i3 <= 0 goto label1;

        virtualinvoke r0.<android.widget.AbsListView: void layoutChildren()>();

     label1:
        virtualinvoke r0.<android.widget.AbsListView: void updateSelectorState()>();

        goto label6;

     label2:
        i0 = r0.<android.widget.AbsListView: int mTouchMode>;

        if i0 == 5 goto label3;

        if i0 != 6 goto label6;

     label3:
        $r1 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        if $r1 == null goto label4;

        $r4 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        virtualinvoke $r4.<android.widget.AbsListView$FlingRunnable: void endFling()>();

     label4:
        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        if $r2 == null goto label5;

        $r3 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        virtualinvoke $r3.<android.widget.AbsListView$AbsPositionScroller: void stop()>();

     label5:
        $i1 = r0.<android.widget.AbsListView: int mScrollY>;

        if $i1 == 0 goto label6;

        r0.<android.widget.AbsListView: int mScrollY> = 0;

        virtualinvoke r0.<android.widget.AbsListView: void invalidateParentCaches()>();

        specialinvoke r0.<android.widget.AbsListView: void finishGlows()>();

        virtualinvoke r0.<android.widget.AbsListView: void invalidate()>();

     label6:
        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.widget.AbsListView r0;
        android.view.MotionEvent r1, r10;
        boolean z0, $z1, $z2, $z3, $z5, $z6, $z7;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14, i15;
        android.view.View r2, r3;
        android.widget.AbsListView$AbsPositionScroller $r4, $r8;
        android.widget.FastScroller $r5, $r9;
        float $f0, $f1, $f2;
        android.view.VelocityTracker $r6, $r7;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.MotionEvent;

        $z1 = virtualinvoke r0.<android.widget.AbsListView: boolean isEnabled()>();

        if $z1 != 0 goto label04;

        $z5 = virtualinvoke r0.<android.widget.AbsListView: boolean isClickable()>();

        if $z5 != 0 goto label01;

        $z6 = virtualinvoke r0.<android.widget.AbsListView: boolean isLongClickable()>();

        if $z6 == 0 goto label02;

     label01:
        $z7 = 1;

        goto label03;

     label02:
        $z7 = 0;

     label03:
        return $z7;

     label04:
        $r4 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        if $r4 == null goto label05;

        $r8 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        virtualinvoke $r8.<android.widget.AbsListView$AbsPositionScroller: void stop()>();

     label05:
        $z2 = r0.<android.widget.AbsListView: boolean mIsDetaching>;

        if $z2 != 0 goto label06;

        $z3 = virtualinvoke r0.<android.widget.AbsListView: boolean isAttachedToWindow()>();

        if $z3 != 0 goto label07;

     label06:
        return 0;

     label07:
        virtualinvoke r0.<android.widget.AbsListView: boolean startNestedScroll(int)>(2);

        $r5 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        if $r5 == null goto label08;

        $r9 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        z0 = virtualinvoke $r9.<android.widget.FastScroller: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        if z0 == 0 goto label08;

        return 1;

     label08:
        specialinvoke r0.<android.widget.AbsListView: void initVelocityTrackerIfNotExists()>();

        r10 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>(r1);

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        if i0 != 0 goto label09;

        r0.<android.widget.AbsListView: int mNestedYOffset> = 0;

     label09:
        $i5 = r0.<android.widget.AbsListView: int mNestedYOffset>;

        $f0 = (float) $i5;

        virtualinvoke r10.<android.view.MotionEvent: void offsetLocation(float,float)>(0.0F, $f0);

        tableswitch(i0)
        {
            case 0: goto label10;
            case 1: goto label12;
            case 2: goto label11;
            case 3: goto label13;
            case 4: goto label18;
            case 5: goto label16;
            case 6: goto label14;
            default: goto label18;
        };

     label10:
        specialinvoke r0.<android.widget.AbsListView: void onTouchDown(android.view.MotionEvent)>(r1);

        goto label18;

     label11:
        specialinvoke r0.<android.widget.AbsListView: void onTouchMove(android.view.MotionEvent,android.view.MotionEvent)>(r1, r10);

        goto label18;

     label12:
        specialinvoke r0.<android.widget.AbsListView: void onTouchUp(android.view.MotionEvent)>(r1);

        goto label18;

     label13:
        specialinvoke r0.<android.widget.AbsListView: void onTouchCancel()>();

        goto label18;

     label14:
        specialinvoke r0.<android.widget.AbsListView: void onSecondaryPointerUp(android.view.MotionEvent)>(r1);

        i1 = r0.<android.widget.AbsListView: int mMotionX>;

        i2 = r0.<android.widget.AbsListView: int mMotionY>;

        i3 = virtualinvoke r0.<android.widget.AbsListView: int pointToPosition(int,int)>(i1, i2);

        if i3 < 0 goto label15;

        $i6 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i7 = i3 - $i6;

        r2 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i7);

        $i8 = virtualinvoke r2.<android.view.View: int getTop()>();

        r0.<android.widget.AbsListView: int mMotionViewOriginalTop> = $i8;

        r0.<android.widget.AbsListView: int mMotionPosition> = i3;

     label15:
        r0.<android.widget.AbsListView: int mLastY> = i2;

        goto label18;

     label16:
        i12 = virtualinvoke r1.<android.view.MotionEvent: int getActionIndex()>();

        i13 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(i12);

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(i12);

        i14 = (int) $f1;

        $f2 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(i12);

        i15 = (int) $f2;

        r0.<android.widget.AbsListView: int mMotionCorrection> = 0;

        r0.<android.widget.AbsListView: int mActivePointerId> = i13;

        r0.<android.widget.AbsListView: int mMotionX> = i14;

        r0.<android.widget.AbsListView: int mMotionY> = i15;

        i4 = virtualinvoke r0.<android.widget.AbsListView: int pointToPosition(int,int)>(i14, i15);

        if i4 < 0 goto label17;

        $i10 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i11 = i4 - $i10;

        r3 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i11);

        $i9 = virtualinvoke r3.<android.view.View: int getTop()>();

        r0.<android.widget.AbsListView: int mMotionViewOriginalTop> = $i9;

        r0.<android.widget.AbsListView: int mMotionPosition> = i4;

     label17:
        r0.<android.widget.AbsListView: int mLastY> = i15;

        goto label18;

     label18:
        $r7 = r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker>;

        if $r7 == null goto label19;

        $r6 = r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r6.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r10);

     label19:
        virtualinvoke r10.<android.view.MotionEvent: void recycle()>();

        return 1;
    }

    private void onTouchDown(android.view.MotionEvent)
    {
        android.widget.AbsListView r0;
        android.view.MotionEvent r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i15;
        android.view.View r2;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        boolean $z0, $z1, $z3;
        android.widget.AbsListView$CheckForTap $r3, $r6, $r7, $r8, $r9, $r10;
        android.widget.ListAdapter $r4;
        android.widget.Adapter $r5;
        long $l12;
        android.widget.AbsListView$AbsPositionScroller $r11, $r14;
        android.widget.AbsListView$FlingRunnable $r12, $r13;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.MotionEvent;

        $i3 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(0);

        r0.<android.widget.AbsListView: int mActivePointerId> = $i3;

        $i4 = r0.<android.widget.AbsListView: int mTouchMode>;

        if $i4 != 6 goto label2;

        $r13 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        virtualinvoke $r13.<android.widget.AbsListView$FlingRunnable: void endFling()>();

        $r11 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        if $r11 == null goto label1;

        $r14 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        virtualinvoke $r14.<android.widget.AbsListView$AbsPositionScroller: void stop()>();

     label1:
        r0.<android.widget.AbsListView: int mTouchMode> = 5;

        $f4 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $i15 = (int) $f4;

        r0.<android.widget.AbsListView: int mMotionX> = $i15;

        $f5 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $i13 = (int) $f5;

        r0.<android.widget.AbsListView: int mMotionY> = $i13;

        $i14 = r0.<android.widget.AbsListView: int mMotionY>;

        r0.<android.widget.AbsListView: int mLastY> = $i14;

        r0.<android.widget.AbsListView: int mMotionCorrection> = 0;

        r0.<android.widget.AbsListView: int mDirection> = 0;

        goto label7;

     label2:
        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        i0 = (int) $f0;

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        i1 = (int) $f1;

        i2 = virtualinvoke r0.<android.widget.AbsListView: int pointToPosition(int,int)>(i0, i1);

        $z0 = r0.<android.widget.AbsListView: boolean mDataChanged>;

        if $z0 != 0 goto label5;

        $i9 = r0.<android.widget.AbsListView: int mTouchMode>;

        if $i9 != 4 goto label3;

        specialinvoke r0.<android.widget.AbsListView: void createScrollingCache()>();

        r0.<android.widget.AbsListView: int mTouchMode> = 3;

        r0.<android.widget.AbsListView: int mMotionCorrection> = 0;

        i2 = virtualinvoke r0.<android.widget.AbsListView: int findMotionRow(int)>(i1);

        $r12 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        virtualinvoke $r12.<android.widget.AbsListView$FlingRunnable: void flywheelTouch()>();

        goto label5;

     label3:
        if i2 < 0 goto label5;

        $r5 = virtualinvoke r0.<android.widget.AbsListView: android.widget.Adapter getAdapter()>();

        $r4 = (android.widget.ListAdapter) $r5;

        $z3 = interfaceinvoke $r4.<android.widget.ListAdapter: boolean isEnabled(int)>(i2);

        if $z3 == 0 goto label5;

        r0.<android.widget.AbsListView: int mTouchMode> = 0;

        $r6 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForTap mPendingCheckForTap>;

        if $r6 != null goto label4;

        $r10 = new android.widget.AbsListView$CheckForTap;

        specialinvoke $r10.<android.widget.AbsListView$CheckForTap: void <init>(android.widget.AbsListView,android.widget.AbsListView$1)>(r0, null);

        r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForTap mPendingCheckForTap> = $r10;

     label4:
        $r7 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForTap mPendingCheckForTap>;

        $f2 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $r7.<android.widget.AbsListView$CheckForTap: float x> = $f2;

        $r8 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForTap mPendingCheckForTap>;

        $f3 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $r8.<android.widget.AbsListView$CheckForTap: float y> = $f3;

        $r9 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForTap mPendingCheckForTap>;

        $i11 = staticinvoke <android.view.ViewConfiguration: int getTapTimeout()>();

        $l12 = (long) $i11;

        virtualinvoke r0.<android.widget.AbsListView: boolean postDelayed(java.lang.Runnable,long)>($r9, $l12);

     label5:
        if i2 < 0 goto label6;

        $i7 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i8 = i2 - $i7;

        r2 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i8);

        $i10 = virtualinvoke r2.<android.view.View: int getTop()>();

        r0.<android.widget.AbsListView: int mMotionViewOriginalTop> = $i10;

     label6:
        r0.<android.widget.AbsListView: int mMotionX> = i0;

        r0.<android.widget.AbsListView: int mMotionY> = i1;

        r0.<android.widget.AbsListView: int mMotionPosition> = i2;

        r0.<android.widget.AbsListView: int mLastY> = -2147483648;

     label7:
        $i5 = r0.<android.widget.AbsListView: int mTouchMode>;

        if $i5 != 0 goto label8;

        $i6 = r0.<android.widget.AbsListView: int mMotionPosition>;

        if $i6 == -1 goto label8;

        $z1 = virtualinvoke r0.<android.widget.AbsListView: boolean performButtonActionOnTouchDown(android.view.MotionEvent)>(r1);

        if $z1 == 0 goto label8;

        $r3 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForTap mPendingCheckForTap>;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>($r3);

     label8:
        return;
    }

    private void onTouchMove(android.view.MotionEvent, android.view.MotionEvent)
    {
        android.widget.AbsListView r0;
        android.view.MotionEvent r1, r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        float f0, $f1, $f2, $f3, $f4, $f5;
        android.view.View r3;
        boolean $z0, $z1, $z2;
        java.lang.Runnable $r4;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.MotionEvent;

        r2 := @parameter1: android.view.MotionEvent;

        $i2 = r0.<android.widget.AbsListView: int mActivePointerId>;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int findPointerIndex(int)>($i2);

        if i0 != -1 goto label1;

        i0 = 0;

        $i10 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(i0);

        r0.<android.widget.AbsListView: int mActivePointerId> = $i10;

     label1:
        $z0 = r0.<android.widget.AbsListView: boolean mDataChanged>;

        if $z0 == 0 goto label2;

        virtualinvoke r0.<android.widget.AbsListView: void layoutChildren()>();

     label2:
        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(i0);

        i1 = (int) $f1;

        $i3 = r0.<android.widget.AbsListView: int mTouchMode>;

        tableswitch($i3)
        {
            case 0: goto label3;
            case 1: goto label3;
            case 2: goto label3;
            case 3: goto label8;
            case 4: goto label9;
            case 5: goto label8;
            default: goto label9;
        };

     label3:
        $f2 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(i0);

        $i4 = (int) $f2;

        $z1 = specialinvoke r0.<android.widget.AbsListView: boolean startScrollIfNeeded(int,int,android.view.MotionEvent)>($i4, i1, r2);

        if $z1 == 0 goto label4;

        goto label9;

     label4:
        f0 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(i0);

        $f4 = (float) i1;

        $i5 = r0.<android.widget.AbsListView: int mTouchSlop>;

        $f3 = (float) $i5;

        $z2 = virtualinvoke r0.<android.widget.AbsListView: boolean pointInView(float,float,float)>(f0, $f4, $f3);

        if $z2 != 0 goto label9;

        virtualinvoke r0.<android.widget.AbsListView: void setPressed(boolean)>(0);

        $i6 = r0.<android.widget.AbsListView: int mMotionPosition>;

        $i7 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i8 = $i6 - $i7;

        r3 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i8);

        if r3 == null goto label5;

        virtualinvoke r3.<android.view.View: void setPressed(boolean)>(0);

     label5:
        $i9 = r0.<android.widget.AbsListView: int mTouchMode>;

        if $i9 != 0 goto label6;

        $r4 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForTap mPendingCheckForTap>;

        goto label7;

     label6:
        $r4 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForLongPress mPendingCheckForLongPress>;

     label7:
        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>($r4);

        r0.<android.widget.AbsListView: int mTouchMode> = 2;

        virtualinvoke r0.<android.widget.AbsListView: void updateSelectorState()>();

        goto label9;

     label8:
        $f5 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(i0);

        $i11 = (int) $f5;

        specialinvoke r0.<android.widget.AbsListView: void scrollIfNeeded(int,int,android.view.MotionEvent)>($i11, i1, r2);

     label9:
        return;
    }

    private void onTouchUp(android.view.MotionEvent)
    {
        android.widget.AbsListView r0;
        android.view.MotionEvent r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i18, $i19, $i20, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, i51, i52, i53, i54, i55;
        android.view.View r2, $r30, $r34;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13;
        boolean z0, z1, $z3, $z5, $z6, $z9, $z10, $z11, $z12, $z13, $z16, $z17;
        android.widget.AbsListView$PerformClick r3, $r13, $r24;
        android.graphics.drawable.Drawable r4, $r18, $r21, $r22;
        android.view.VelocityTracker r5, r42;
        android.widget.AbsListView$CheckForLongPress $r6;
        android.widget.EdgeEffect $r7, $r9, $r11;
        android.os.StrictMode$Span $r8, $r10;
        android.graphics.Rect $r12, $r26, $r32, $r33;
        byte $b8, $b21;
        java.lang.Runnable $r14, $r17, $r19, $r20;
        android.widget.ListAdapter $r15, $r25;
        android.widget.AbsListView$3 $r16;
        long $l14;
        android.graphics.drawable.TransitionDrawable $r23;
        android.widget.AbsListView$FlingRunnable $r27, $r28, $r29, $r31, $r36, $r37, $r39, $r40, $r41;
        android.widget.AbsListView$AbsPositionScroller $r35, $r38;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.MotionEvent;

        $i3 = r0.<android.widget.AbsListView: int mTouchMode>;

        tableswitch($i3)
        {
            case 0: goto label01;
            case 1: goto label01;
            case 2: goto label01;
            case 3: goto label16;
            case 4: goto label32;
            case 5: goto label29;
            default: goto label32;
        };

     label01:
        i0 = r0.<android.widget.AbsListView: int mMotionPosition>;

        $i4 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i5 = i0 - $i4;

        r2 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i5);

        if r2 == null goto label15;

        $i6 = r0.<android.widget.AbsListView: int mTouchMode>;

        if $i6 == 0 goto label02;

        virtualinvoke r2.<android.view.View: void setPressed(boolean)>(0);

     label02:
        f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $r12 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i7 = $r12.<android.graphics.Rect: int left>;

        $f1 = (float) $i7;

        $b8 = f0 cmpl $f1;

        if $b8 <= 0 goto label03;

        $i18 = virtualinvoke r0.<android.widget.AbsListView: int getWidth()>();

        $r26 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i17 = $r26.<android.graphics.Rect: int right>;

        $i16 = $i18 - $i17;

        $f5 = (float) $i16;

        $b21 = f0 cmpg $f5;

        if $b21 >= 0 goto label03;

        $z12 = 1;

        goto label04;

     label03:
        $z12 = 0;

     label04:
        z0 = $z12;

        if z0 == 0 goto label15;

        $z3 = virtualinvoke r2.<android.view.View: boolean hasFocusable()>();

        if $z3 != 0 goto label15;

        $r13 = r0.<android.widget.AbsListView: android.widget.AbsListView$PerformClick mPerformClick>;

        if $r13 != null goto label05;

        $r24 = new android.widget.AbsListView$PerformClick;

        specialinvoke $r24.<android.widget.AbsListView$PerformClick: void <init>(android.widget.AbsListView,android.widget.AbsListView$1)>(r0, null);

        r0.<android.widget.AbsListView: android.widget.AbsListView$PerformClick mPerformClick> = $r24;

     label05:
        r3 = r0.<android.widget.AbsListView: android.widget.AbsListView$PerformClick mPerformClick>;

        r3.<android.widget.AbsListView$PerformClick: int mClickMotionPosition> = i0;

        virtualinvoke r3.<android.widget.AbsListView$PerformClick: void rememberWindowAttachCount()>();

        r0.<android.widget.AbsListView: int mResurrectToPosition> = i0;

        $i9 = r0.<android.widget.AbsListView: int mTouchMode>;

        if $i9 == 0 goto label06;

        $i15 = r0.<android.widget.AbsListView: int mTouchMode>;

        if $i15 != 1 goto label14;

     label06:
        $i10 = r0.<android.widget.AbsListView: int mTouchMode>;

        if $i10 != 0 goto label07;

        $r14 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForTap mPendingCheckForTap>;

        goto label08;

     label07:
        $r14 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForLongPress mPendingCheckForLongPress>;

     label08:
        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>($r14);

        r0.<android.widget.AbsListView: int mLayoutMode> = 0;

        $z5 = r0.<android.widget.AbsListView: boolean mDataChanged>;

        if $z5 != 0 goto label12;

        $r15 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $z6 = interfaceinvoke $r15.<android.widget.ListAdapter: boolean isEnabled(int)>(i0);

        if $z6 == 0 goto label12;

        r0.<android.widget.AbsListView: int mTouchMode> = 1;

        $i11 = r0.<android.widget.AbsListView: int mMotionPosition>;

        virtualinvoke r0.<android.widget.AbsListView: void setSelectedPositionInt(int)>($i11);

        virtualinvoke r0.<android.widget.AbsListView: void layoutChildren()>();

        virtualinvoke r2.<android.view.View: void setPressed(boolean)>(1);

        $i12 = r0.<android.widget.AbsListView: int mMotionPosition>;

        virtualinvoke r0.<android.widget.AbsListView: void positionSelector(int,android.view.View)>($i12, r2);

        virtualinvoke r0.<android.widget.AbsListView: void setPressed(boolean)>(1);

        $r18 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        if $r18 == null goto label10;

        $r22 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        r4 = virtualinvoke $r22.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable getCurrent()>();

        if r4 == null goto label09;

        $z9 = r4 instanceof android.graphics.drawable.TransitionDrawable;

        if $z9 == 0 goto label09;

        $r23 = (android.graphics.drawable.TransitionDrawable) r4;

        virtualinvoke $r23.<android.graphics.drawable.TransitionDrawable: void resetTransition()>();

     label09:
        $r21 = r0.<android.widget.AbsListView: android.graphics.drawable.Drawable mSelector>;

        $f2 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        virtualinvoke $r21.<android.graphics.drawable.Drawable: void setHotspot(float,float)>(f0, $f2);

     label10:
        $r19 = r0.<android.widget.AbsListView: java.lang.Runnable mTouchModeReset>;

        if $r19 == null goto label11;

        $r20 = r0.<android.widget.AbsListView: java.lang.Runnable mTouchModeReset>;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>($r20);

     label11:
        $r16 = new android.widget.AbsListView$3;

        specialinvoke $r16.<android.widget.AbsListView$3: void <init>(android.widget.AbsListView,android.view.View,android.widget.AbsListView$PerformClick)>(r0, r2, r3);

        r0.<android.widget.AbsListView: java.lang.Runnable mTouchModeReset> = $r16;

        $r17 = r0.<android.widget.AbsListView: java.lang.Runnable mTouchModeReset>;

        $i13 = staticinvoke <android.view.ViewConfiguration: int getPressedStateDuration()>();

        $l14 = (long) $i13;

        virtualinvoke r0.<android.widget.AbsListView: boolean postDelayed(java.lang.Runnable,long)>($r17, $l14);

        goto label13;

     label12:
        r0.<android.widget.AbsListView: int mTouchMode> = -1;

        virtualinvoke r0.<android.widget.AbsListView: void updateSelectorState()>();

     label13:
        return;

     label14:
        $z11 = r0.<android.widget.AbsListView: boolean mDataChanged>;

        if $z11 != 0 goto label15;

        $r25 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $z10 = interfaceinvoke $r25.<android.widget.ListAdapter: boolean isEnabled(int)>(i0);

        if $z10 == 0 goto label15;

        virtualinvoke r3.<android.widget.AbsListView$PerformClick: void run()>();

     label15:
        r0.<android.widget.AbsListView: int mTouchMode> = -1;

        virtualinvoke r0.<android.widget.AbsListView: void updateSelectorState()>();

        goto label32;

     label16:
        i51 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if i51 <= 0 goto label28;

        $r30 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(0);

        i52 = virtualinvoke $r30.<android.view.View: int getTop()>();

        $i27 = i51 - 1;

        $r34 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i27);

        i53 = virtualinvoke $r34.<android.view.View: int getBottom()>();

        $r32 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        i54 = $r32.<android.graphics.Rect: int top>;

        $i25 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $r33 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i26 = $r33.<android.graphics.Rect: int bottom>;

        i1 = $i25 - $i26;

        $i30 = r0.<android.widget.AbsListView: int mFirstPosition>;

        if $i30 != 0 goto label17;

        if i52 < i54 goto label17;

        $i43 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i49 = $i43 + i51;

        $i42 = r0.<android.widget.AbsListView: int mItemCount>;

        if $i49 >= $i42 goto label17;

        $i48 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $i50 = $i48 - i1;

        if i53 > $i50 goto label17;

        r0.<android.widget.AbsListView: int mTouchMode> = -1;

        virtualinvoke r0.<android.widget.AbsListView: void reportScrollStateChange(int)>(0);

        goto label27;

     label17:
        r5 = r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker>;

        $i29 = r0.<android.widget.AbsListView: int mMaximumVelocity>;

        $f9 = (float) $i29;

        virtualinvoke r5.<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>(1000, $f9);

        $i31 = r0.<android.widget.AbsListView: int mActivePointerId>;

        $f7 = virtualinvoke r5.<android.view.VelocityTracker: float getYVelocity(int)>($i31);

        $f6 = r0.<android.widget.AbsListView: float mVelocityScale>;

        $f8 = $f7 * $f6;

        i2 = (int) $f8;

        $i28 = staticinvoke <java.lang.Math: int abs(int)>(i2);

        $i34 = r0.<android.widget.AbsListView: int mMinimumVelocity>;

        if $i28 <= $i34 goto label18;

        $z17 = 1;

        goto label19;

     label18:
        $z17 = 0;

     label19:
        z1 = $z17;

        if z1 == 0 goto label24;

        $i39 = r0.<android.widget.AbsListView: int mFirstPosition>;

        if $i39 != 0 goto label20;

        $i45 = r0.<android.widget.AbsListView: int mOverscrollDistance>;

        $i44 = i54 - $i45;

        if i52 == $i44 goto label24;

     label20:
        $i37 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i35 = $i37 + i51;

        $i38 = r0.<android.widget.AbsListView: int mItemCount>;

        if $i35 != $i38 goto label21;

        $i47 = r0.<android.widget.AbsListView: int mOverscrollDistance>;

        $i46 = i1 + $i47;

        if i53 == $i46 goto label24;

     label21:
        $i36 = neg i2;

        $f13 = (float) $i36;

        $z16 = virtualinvoke r0.<android.widget.AbsListView: boolean dispatchNestedPreFling(float,float)>(0.0F, $f13);

        if $z16 != 0 goto label23;

        $r40 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        if $r40 != null goto label22;

        $r41 = new android.widget.AbsListView$FlingRunnable;

        specialinvoke $r41.<android.widget.AbsListView$FlingRunnable: void <init>(android.widget.AbsListView)>(r0);

        r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable> = $r41;

     label22:
        virtualinvoke r0.<android.widget.AbsListView: void reportScrollStateChange(int)>(2);

        $r39 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        $i41 = neg i2;

        virtualinvoke $r39.<android.widget.AbsListView$FlingRunnable: void start(int)>($i41);

        $i40 = neg i2;

        $f12 = (float) $i40;

        virtualinvoke r0.<android.widget.AbsListView: boolean dispatchNestedFling(float,float,boolean)>(0.0F, $f12, 1);

        goto label27;

     label23:
        r0.<android.widget.AbsListView: int mTouchMode> = -1;

        virtualinvoke r0.<android.widget.AbsListView: void reportScrollStateChange(int)>(0);

        goto label27;

     label24:
        r0.<android.widget.AbsListView: int mTouchMode> = -1;

        virtualinvoke r0.<android.widget.AbsListView: void reportScrollStateChange(int)>(0);

        $r36 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        if $r36 == null goto label25;

        $r37 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        virtualinvoke $r37.<android.widget.AbsListView$FlingRunnable: void endFling()>();

     label25:
        $r35 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        if $r35 == null goto label26;

        $r38 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        virtualinvoke $r38.<android.widget.AbsListView$AbsPositionScroller: void stop()>();

     label26:
        if z1 == 0 goto label27;

        $i33 = neg i2;

        $f11 = (float) $i33;

        $z13 = virtualinvoke r0.<android.widget.AbsListView: boolean dispatchNestedPreFling(float,float)>(0.0F, $f11);

        if $z13 != 0 goto label27;

        $i32 = neg i2;

        $f10 = (float) $i32;

        virtualinvoke r0.<android.widget.AbsListView: boolean dispatchNestedFling(float,float,boolean)>(0.0F, $f10, 0);

     label27:
        goto label32;

     label28:
        r0.<android.widget.AbsListView: int mTouchMode> = -1;

        virtualinvoke r0.<android.widget.AbsListView: void reportScrollStateChange(int)>(0);

        goto label32;

     label29:
        $r27 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        if $r27 != null goto label30;

        $r29 = new android.widget.AbsListView$FlingRunnable;

        specialinvoke $r29.<android.widget.AbsListView$FlingRunnable: void <init>(android.widget.AbsListView)>(r0);

        r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable> = $r29;

     label30:
        r42 = r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker>;

        $i19 = r0.<android.widget.AbsListView: int mMaximumVelocity>;

        $f3 = (float) $i19;

        virtualinvoke r42.<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>(1000, $f3);

        $i20 = r0.<android.widget.AbsListView: int mActivePointerId>;

        $f4 = virtualinvoke r42.<android.view.VelocityTracker: float getYVelocity(int)>($i20);

        i55 = (int) $f4;

        virtualinvoke r0.<android.widget.AbsListView: void reportScrollStateChange(int)>(2);

        $i22 = staticinvoke <java.lang.Math: int abs(int)>(i55);

        $i23 = r0.<android.widget.AbsListView: int mMinimumVelocity>;

        if $i22 <= $i23 goto label31;

        $r28 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        $i24 = neg i55;

        virtualinvoke $r28.<android.widget.AbsListView$FlingRunnable: void startOverfling(int)>($i24);

        goto label32;

     label31:
        $r31 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        virtualinvoke $r31.<android.widget.AbsListView$FlingRunnable: void startSpringback()>();

     label32:
        virtualinvoke r0.<android.widget.AbsListView: void setPressed(boolean)>(0);

        $r7 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        if $r7 == null goto label33;

        $r9 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        virtualinvoke $r9.<android.widget.EdgeEffect: void onRelease()>();

        $r11 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        virtualinvoke $r11.<android.widget.EdgeEffect: void onRelease()>();

     label33:
        virtualinvoke r0.<android.widget.AbsListView: void invalidate()>();

        $r6 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForLongPress mPendingCheckForLongPress>;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>($r6);

        specialinvoke r0.<android.widget.AbsListView: void recycleVelocityTracker()>();

        r0.<android.widget.AbsListView: int mActivePointerId> = -1;

        $r8 = r0.<android.widget.AbsListView: android.os.StrictMode$Span mScrollStrictSpan>;

        if $r8 == null goto label34;

        $r10 = r0.<android.widget.AbsListView: android.os.StrictMode$Span mScrollStrictSpan>;

        virtualinvoke $r10.<android.os.StrictMode$Span: void finish()>();

        r0.<android.widget.AbsListView: android.os.StrictMode$Span mScrollStrictSpan> = null;

     label34:
        return;
    }

    private void onTouchCancel()
    {
        android.widget.AbsListView r0;
        android.view.View r1;
        int $i0, $i1, $i2, $i3;
        android.widget.EdgeEffect $r2, $r3, $r4;
        android.widget.AbsListView$FlingRunnable $r5, $r6, $r7;
        android.widget.AbsListView$CheckForLongPress $r8;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mTouchMode>;

        lookupswitch($i0)
        {
            case 5: goto label1;
            case 6: goto label3;
            default: goto label4;
        };

     label1:
        $r5 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        if $r5 != null goto label2;

        $r7 = new android.widget.AbsListView$FlingRunnable;

        specialinvoke $r7.<android.widget.AbsListView$FlingRunnable: void <init>(android.widget.AbsListView)>(r0);

        r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable> = $r7;

     label2:
        $r6 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        virtualinvoke $r6.<android.widget.AbsListView$FlingRunnable: void startSpringback()>();

        goto label6;

     label3:
        goto label6;

     label4:
        r0.<android.widget.AbsListView: int mTouchMode> = -1;

        virtualinvoke r0.<android.widget.AbsListView: void setPressed(boolean)>(0);

        $i2 = r0.<android.widget.AbsListView: int mMotionPosition>;

        $i1 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i3 = $i2 - $i1;

        r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i3);

        if r1 == null goto label5;

        virtualinvoke r1.<android.view.View: void setPressed(boolean)>(0);

     label5:
        specialinvoke r0.<android.widget.AbsListView: void clearScrollingCache()>();

        $r8 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForLongPress mPendingCheckForLongPress>;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>($r8);

        specialinvoke r0.<android.widget.AbsListView: void recycleVelocityTracker()>();

     label6:
        $r2 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        if $r2 == null goto label7;

        $r3 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        virtualinvoke $r3.<android.widget.EdgeEffect: void onRelease()>();

        $r4 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        virtualinvoke $r4.<android.widget.EdgeEffect: void onRelease()>();

     label7:
        r0.<android.widget.AbsListView: int mActivePointerId> = -1;

        return;
    }

    protected void onOverScrolled(int, int, boolean, boolean)
    {
        android.widget.AbsListView r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        boolean z0, z1;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $i2 = r0.<android.widget.AbsListView: int mScrollY>;

        if $i2 == i1 goto label1;

        $i5 = r0.<android.widget.AbsListView: int mScrollX>;

        $i4 = r0.<android.widget.AbsListView: int mScrollX>;

        $i3 = r0.<android.widget.AbsListView: int mScrollY>;

        virtualinvoke r0.<android.widget.AbsListView: void onScrollChanged(int,int,int,int)>($i5, i1, $i4, $i3);

        r0.<android.widget.AbsListView: int mScrollY> = i1;

        virtualinvoke r0.<android.widget.AbsListView: void invalidateParentIfNeeded()>();

        virtualinvoke r0.<android.widget.AbsListView: boolean awakenScrollBars()>();

     label1:
        return;
    }

    public boolean onGenericMotionEvent(android.view.MotionEvent)
    {
        android.widget.AbsListView r0;
        android.view.MotionEvent r1;
        float f0, $f1, $f2;
        int i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1;
        byte $b5;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.MotionEvent;

        $i1 = virtualinvoke r1.<android.view.MotionEvent: int getSource()>();

        $i2 = $i1 & 2;

        if $i2 == 0 goto label2;

        $i3 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        lookupswitch($i3)
        {
            case 8: goto label1;
            default: goto label2;
        };

     label1:
        $i4 = r0.<android.widget.AbsListView: int mTouchMode>;

        if $i4 != -1 goto label2;

        f0 = virtualinvoke r1.<android.view.MotionEvent: float getAxisValue(int)>(9);

        $b5 = f0 cmpl 0.0F;

        if $b5 == 0 goto label2;

        $f1 = virtualinvoke r0.<android.widget.AbsListView: float getVerticalScrollFactor()>();

        $f2 = f0 * $f1;

        i0 = (int) $f2;

        $z1 = virtualinvoke r0.<android.widget.AbsListView: boolean trackMotionScroll(int,int)>(i0, i0);

        if $z1 != 0 goto label2;

        return 1;

     label2:
        $z0 = specialinvoke r0.<android.widget.AdapterView: boolean onGenericMotionEvent(android.view.MotionEvent)>(r1);

        return $z0;
    }

    public void fling(int)
    {
        android.widget.AbsListView r0;
        int i0;
        android.widget.AbsListView$FlingRunnable $r1, $r2, $r3;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        $r1 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        if $r1 != null goto label1;

        $r3 = new android.widget.AbsListView$FlingRunnable;

        specialinvoke $r3.<android.widget.AbsListView$FlingRunnable: void <init>(android.widget.AbsListView)>(r0);

        r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable> = $r3;

     label1:
        virtualinvoke r0.<android.widget.AbsListView: void reportScrollStateChange(int)>(2);

        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        virtualinvoke $r2.<android.widget.AbsListView$FlingRunnable: void start(int)>(i0);

        return;
    }

    public boolean onStartNestedScroll(android.view.View, android.view.View, int)
    {
        android.widget.AbsListView r0;
        android.view.View r1, r2;
        int i0, $i1;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void onNestedScrollAccepted(android.view.View, android.view.View, int)
    {
        android.widget.AbsListView r0;
        android.view.View r1, r2;
        int i0;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.AdapterView: void onNestedScrollAccepted(android.view.View,android.view.View,int)>(r1, r2, i0);

        virtualinvoke r0.<android.widget.AbsListView: boolean startNestedScroll(int)>(2);

        return;
    }

    public void onNestedScroll(android.view.View, int, int, int, int)
    {
        android.widget.AbsListView r0;
        android.view.View r1, r2;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12;
        boolean $z1;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $i8 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        i4 = $i8 / 2;

        r2 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i4);

        if r2 == null goto label1;

        $i12 = virtualinvoke r2.<android.view.View: int getTop()>();

        goto label2;

     label1:
        $i12 = 0;

     label2:
        i5 = $i12;

        if r2 == null goto label3;

        $i11 = neg i3;

        $i10 = neg i3;

        $z1 = virtualinvoke r0.<android.widget.AbsListView: boolean trackMotionScroll(int,int)>($i11, $i10);

        if $z1 == 0 goto label5;

     label3:
        i6 = i3;

        i7 = 0;

        if r2 == null goto label4;

        $i9 = virtualinvoke r2.<android.view.View: int getTop()>();

        i7 = $i9 - i5;

        i6 = i6 - i7;

     label4:
        virtualinvoke r0.<android.widget.AbsListView: boolean dispatchNestedScroll(int,int,int,int,int[])>(0, i7, 0, i6, null);

     label5:
        return;
    }

    public boolean onNestedFling(android.view.View, float, float, boolean)
    {
        android.widget.AbsListView r0;
        android.view.View r1;
        float f0, f1, $f2, $f3;
        boolean z0, $z1, $z2, $z3;
        int i0, $i1, $i2, $i4;
        byte $b3;
        android.widget.AbsListView$FlingRunnable $r2, $r3, $r4;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        z0 := @parameter3: boolean;

        i0 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if z0 != 0 goto label3;

        if i0 <= 0 goto label3;

        $i1 = (int) f1;

        $z2 = virtualinvoke r0.<android.widget.AbsListView: boolean canScrollList(int)>($i1);

        if $z2 == 0 goto label3;

        $f2 = staticinvoke <java.lang.Math: float abs(float)>(f1);

        $i2 = r0.<android.widget.AbsListView: int mMinimumVelocity>;

        $f3 = (float) $i2;

        $b3 = $f2 cmpl $f3;

        if $b3 <= 0 goto label3;

        virtualinvoke r0.<android.widget.AbsListView: void reportScrollStateChange(int)>(2);

        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        if $r2 != null goto label1;

        $r4 = new android.widget.AbsListView$FlingRunnable;

        specialinvoke $r4.<android.widget.AbsListView$FlingRunnable: void <init>(android.widget.AbsListView)>(r0);

        r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable> = $r4;

     label1:
        $z3 = virtualinvoke r0.<android.widget.AbsListView: boolean dispatchNestedPreFling(float,float)>(0.0F, f1);

        if $z3 != 0 goto label2;

        $r3 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        $i4 = (int) f1;

        virtualinvoke $r3.<android.widget.AbsListView$FlingRunnable: void start(int)>($i4);

     label2:
        return 1;

     label3:
        $z1 = virtualinvoke r0.<android.widget.AbsListView: boolean dispatchNestedFling(float,float,boolean)>(f0, f1, z0);

        return $z1;
    }

    public void draw(android.graphics.Canvas)
    {
        android.widget.AbsListView r0;
        android.graphics.Canvas r1;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, i23, i24;
        android.widget.EdgeEffect $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        boolean $z0, $z1, $z2, $z3;
        float $f0, $f1, $f2, $f3;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.widget.AdapterView: void draw(android.graphics.Canvas)>(r1);

        $r2 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        if $r2 == null goto label4;

        i0 = r0.<android.widget.AbsListView: int mScrollY>;

        $r3 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        $z0 = virtualinvoke $r3.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z0 != 0 goto label2;

        i1 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

        i2 = virtualinvoke r0.<android.widget.AbsListView: int getWidth()>();

        $i15 = r0.<android.widget.AbsListView: int mFirstPositionDistanceGuess>;

        $i16 = i0 + $i15;

        i3 = staticinvoke <java.lang.Math: int min(int,int)>(0, $i16);

        $f3 = (float) i3;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>(0.0F, $f3);

        $r9 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        $i17 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        virtualinvoke $r9.<android.widget.EdgeEffect: void setSize(int,int)>(i2, $i17);

        $r8 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        $z3 = virtualinvoke $r8.<android.widget.EdgeEffect: boolean draw(android.graphics.Canvas)>(r1);

        if $z3 == 0 goto label1;

        $i18 = virtualinvoke r0.<android.widget.AbsListView: int getWidth()>();

        $r10 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        $i21 = virtualinvoke $r10.<android.widget.EdgeEffect: int getMaxHeight()>();

        $i20 = virtualinvoke r0.<android.widget.AbsListView: int getPaddingTop()>();

        $i19 = $i21 + $i20;

        virtualinvoke r0.<android.widget.AbsListView: void invalidate(int,int,int,int)>(0, 0, $i18, $i19);

     label1:
        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i1);

     label2:
        $r4 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        $z1 = virtualinvoke $r4.<android.widget.EdgeEffect: boolean isFinished()>();

        if $z1 != 0 goto label4;

        i22 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

        i23 = virtualinvoke r0.<android.widget.AbsListView: int getWidth()>();

        i24 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        i4 = neg i23;

        $i7 = r0.<android.widget.AbsListView: int mLastPositionDistanceGuess>;

        $i6 = i0 + $i7;

        i5 = staticinvoke <java.lang.Math: int max(int,int)>(i24, $i6);

        $f2 = (float) i4;

        $f0 = (float) i5;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f2, $f0);

        $f1 = (float) i23;

        virtualinvoke r1.<android.graphics.Canvas: void rotate(float,float,float)>(180.0F, $f1, 0.0F);

        $r6 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        virtualinvoke $r6.<android.widget.EdgeEffect: void setSize(int,int)>(i23, i24);

        $r5 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        $z2 = virtualinvoke $r5.<android.widget.EdgeEffect: boolean draw(android.graphics.Canvas)>(r1);

        if $z2 == 0 goto label3;

        $i9 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $i8 = virtualinvoke r0.<android.widget.AbsListView: int getPaddingBottom()>();

        $i10 = $i9 - $i8;

        $r7 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        $i12 = virtualinvoke $r7.<android.widget.EdgeEffect: int getMaxHeight()>();

        $i11 = $i10 - $i12;

        $i13 = virtualinvoke r0.<android.widget.AbsListView: int getWidth()>();

        $i14 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        virtualinvoke r0.<android.widget.AbsListView: void invalidate(int,int,int,int)>(0, $i11, $i13, $i14);

     label3:
        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i22);

     label4:
        return;
    }

    public void setOverScrollEffectPadding(int, int)
    {
        android.widget.AbsListView r0;
        int i0, i1;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<android.widget.AbsListView: int mGlowPaddingLeft> = i0;

        r0.<android.widget.AbsListView: int mGlowPaddingRight> = i1;

        return;
    }

    private void initOrResetVelocityTracker()
    {
        android.widget.AbsListView r0;
        android.view.VelocityTracker $r1, $r2, $r3;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker> = $r3;

        goto label2;

     label1:
        $r2 = r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2.<android.view.VelocityTracker: void clear()>();

     label2:
        return;
    }

    private void initVelocityTrackerIfNotExists()
    {
        android.widget.AbsListView r0;
        android.view.VelocityTracker $r1, $r2;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker>;

        if $r1 != null goto label1;

        $r2 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker> = $r2;

     label1:
        return;
    }

    private void recycleVelocityTracker()
    {
        android.widget.AbsListView r0;
        android.view.VelocityTracker $r1, $r2;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2.<android.view.VelocityTracker: void recycle()>();

        r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker> = null;

     label1:
        return;
    }

    public void requestDisallowInterceptTouchEvent(boolean)
    {
        android.widget.AbsListView r0;
        boolean z0;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        specialinvoke r0.<android.widget.AbsListView: void recycleVelocityTracker()>();

     label1:
        specialinvoke r0.<android.widget.AdapterView: void requestDisallowInterceptTouchEvent(boolean)>(z0);

        return;
    }

    public boolean onInterceptHoverEvent(android.view.MotionEvent)
    {
        android.widget.AbsListView r0;
        android.view.MotionEvent r1;
        android.widget.FastScroller $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        if $r2 == null goto label1;

        $r3 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        $z1 = virtualinvoke $r3.<android.widget.FastScroller: boolean onInterceptHoverEvent(android.view.MotionEvent)>(r1);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke r0.<android.widget.AdapterView: boolean onInterceptHoverEvent(android.view.MotionEvent)>(r1);

        return $z0;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        android.widget.AbsListView r0;
        android.view.MotionEvent r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14;
        android.view.View r2;
        android.widget.AbsListView$AbsPositionScroller $r3, $r7;
        boolean $z0, $z1, $z3, $z4;
        android.widget.FastScroller $r4, $r8;
        float $f0, $f1, $f2, $f3;
        android.view.VelocityTracker $r5, $r6;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        $r3 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        if $r3 == null goto label01;

        $r7 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        virtualinvoke $r7.<android.widget.AbsListView$AbsPositionScroller: void stop()>();

     label01:
        $z0 = r0.<android.widget.AbsListView: boolean mIsDetaching>;

        if $z0 != 0 goto label02;

        $z1 = virtualinvoke r0.<android.widget.AbsListView: boolean isAttachedToWindow()>();

        if $z1 != 0 goto label03;

     label02:
        return 0;

     label03:
        $r4 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        if $r4 == null goto label04;

        $r8 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        $z4 = virtualinvoke $r8.<android.widget.FastScroller: boolean onInterceptTouchEvent(android.view.MotionEvent)>(r1);

        if $z4 == 0 goto label04;

        return 1;

     label04:
        tableswitch(i0)
        {
            case 0: goto label05;
            case 1: goto label13;
            case 2: goto label09;
            case 3: goto label13;
            case 4: goto label15;
            case 5: goto label15;
            case 6: goto label14;
            default: goto label15;
        };

     label05:
        i1 = r0.<android.widget.AbsListView: int mTouchMode>;

        if i1 == 6 goto label06;

        if i1 != 5 goto label07;

     label06:
        r0.<android.widget.AbsListView: int mMotionCorrection> = 0;

        return 1;

     label07:
        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        i2 = (int) $f0;

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        i3 = (int) $f1;

        $i5 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(0);

        r0.<android.widget.AbsListView: int mActivePointerId> = $i5;

        i4 = virtualinvoke r0.<android.widget.AbsListView: int findMotionRow(int)>(i3);

        if i1 == 4 goto label08;

        if i4 < 0 goto label08;

        $i6 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i7 = i4 - $i6;

        r2 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i7);

        $i9 = virtualinvoke r2.<android.view.View: int getTop()>();

        r0.<android.widget.AbsListView: int mMotionViewOriginalTop> = $i9;

        r0.<android.widget.AbsListView: int mMotionX> = i2;

        r0.<android.widget.AbsListView: int mMotionY> = i3;

        r0.<android.widget.AbsListView: int mMotionPosition> = i4;

        r0.<android.widget.AbsListView: int mTouchMode> = 0;

        specialinvoke r0.<android.widget.AbsListView: void clearScrollingCache()>();

     label08:
        r0.<android.widget.AbsListView: int mLastY> = -2147483648;

        specialinvoke r0.<android.widget.AbsListView: void initOrResetVelocityTracker()>();

        $r5 = r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r5.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r1);

        r0.<android.widget.AbsListView: int mNestedYOffset> = 0;

        virtualinvoke r0.<android.widget.AbsListView: boolean startNestedScroll(int)>(2);

        if i1 != 4 goto label15;

        return 1;

     label09:
        $i8 = r0.<android.widget.AbsListView: int mTouchMode>;

        lookupswitch($i8)
        {
            case 0: goto label10;
            default: goto label12;
        };

     label10:
        $i10 = r0.<android.widget.AbsListView: int mActivePointerId>;

        i13 = virtualinvoke r1.<android.view.MotionEvent: int findPointerIndex(int)>($i10);

        if i13 != -1 goto label11;

        i13 = 0;

        $i12 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(i13);

        r0.<android.widget.AbsListView: int mActivePointerId> = $i12;

     label11:
        $f2 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(i13);

        i14 = (int) $f2;

        specialinvoke r0.<android.widget.AbsListView: void initVelocityTrackerIfNotExists()>();

        $r6 = r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r6.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r1);

        $f3 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(i13);

        $i11 = (int) $f3;

        $z3 = specialinvoke r0.<android.widget.AbsListView: boolean startScrollIfNeeded(int,int,android.view.MotionEvent)>($i11, i14, null);

        if $z3 == 0 goto label12;

        return 1;

     label12:
        goto label15;

     label13:
        r0.<android.widget.AbsListView: int mTouchMode> = -1;

        r0.<android.widget.AbsListView: int mActivePointerId> = -1;

        specialinvoke r0.<android.widget.AbsListView: void recycleVelocityTracker()>();

        virtualinvoke r0.<android.widget.AbsListView: void reportScrollStateChange(int)>(0);

        virtualinvoke r0.<android.widget.AbsListView: void stopNestedScroll()>();

        goto label15;

     label14:
        specialinvoke r0.<android.widget.AbsListView: void onSecondaryPointerUp(android.view.MotionEvent)>(r1);

     label15:
        return 0;
    }

    private void onSecondaryPointerUp(android.view.MotionEvent)
    {
        android.widget.AbsListView r0;
        android.view.MotionEvent r1;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i8;
        byte b2, $b9;
        float $f0, $f1;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.MotionEvent;

        $i3 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        $i4 = $i3 & 65280;

        i0 = $i4 >> 8;

        i1 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(i0);

        $i5 = r0.<android.widget.AbsListView: int mActivePointerId>;

        if i1 != $i5 goto label3;

        if i0 != 0 goto label1;

        $b9 = 1;

        goto label2;

     label1:
        $b9 = 0;

     label2:
        b2 = $b9;

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(b2);

        $i6 = (int) $f0;

        r0.<android.widget.AbsListView: int mMotionX> = $i6;

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(b2);

        $i7 = (int) $f1;

        r0.<android.widget.AbsListView: int mMotionY> = $i7;

        r0.<android.widget.AbsListView: int mMotionCorrection> = 0;

        $i8 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(b2);

        r0.<android.widget.AbsListView: int mActivePointerId> = $i8;

     label3:
        return;
    }

    public void addTouchables(java.util.ArrayList)
    {
        android.widget.AbsListView r0;
        java.util.ArrayList r1;
        int i0, i1, i2, $i3;
        android.widget.ListAdapter r2;
        android.view.View r3;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: java.util.ArrayList;

        i0 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        i1 = r0.<android.widget.AbsListView: int mFirstPosition>;

        r2 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        if r2 != null goto label1;

        return;

     label1:
        i2 = 0;

     label2:
        if i2 >= i0 goto label4;

        r3 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i2);

        $i3 = i1 + i2;

        $z0 = interfaceinvoke r2.<android.widget.ListAdapter: boolean isEnabled(int)>($i3);

        if $z0 == 0 goto label3;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

     label3:
        virtualinvoke r3.<android.view.View: void addTouchables(java.util.ArrayList)>(r1);

        i2 = i2 + 1;

        goto label2;

     label4:
        return;
    }

    void reportScrollStateChange(int)
    {
        android.widget.AbsListView r0;
        int i0, $i1;
        android.widget.AbsListView$OnScrollListener $r1, $r2;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        $i1 = r0.<android.widget.AbsListView: int mLastScrollState>;

        if i0 == $i1 goto label1;

        $r1 = r0.<android.widget.AbsListView: android.widget.AbsListView$OnScrollListener mOnScrollListener>;

        if $r1 == null goto label1;

        r0.<android.widget.AbsListView: int mLastScrollState> = i0;

        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$OnScrollListener mOnScrollListener>;

        interfaceinvoke $r2.<android.widget.AbsListView$OnScrollListener: void onScrollStateChanged(android.widget.AbsListView,int)>(r0, i0);

     label1:
        return;
    }

    public void setFriction(float)
    {
        android.widget.AbsListView r0;
        float f0;
        android.widget.AbsListView$FlingRunnable $r1, $r2, $r4;
        android.widget.OverScroller $r3;

        r0 := @this: android.widget.AbsListView;

        f0 := @parameter0: float;

        $r1 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        if $r1 != null goto label1;

        $r4 = new android.widget.AbsListView$FlingRunnable;

        specialinvoke $r4.<android.widget.AbsListView$FlingRunnable: void <init>(android.widget.AbsListView)>(r0);

        r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable> = $r4;

     label1:
        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        $r3 = staticinvoke <android.widget.AbsListView$FlingRunnable: android.widget.OverScroller access$1500(android.widget.AbsListView$FlingRunnable)>($r2);

        virtualinvoke $r3.<android.widget.OverScroller: void setFriction(float)>(f0);

        return;
    }

    public void setVelocityScale(float)
    {
        android.widget.AbsListView r0;
        float f0;

        r0 := @this: android.widget.AbsListView;

        f0 := @parameter0: float;

        r0.<android.widget.AbsListView: float mVelocityScale> = f0;

        return;
    }

    android.widget.AbsListView$AbsPositionScroller createPositionScroller()
    {
        android.widget.AbsListView r0;
        android.widget.AbsListView$PositionScroller $r1;

        r0 := @this: android.widget.AbsListView;

        $r1 = new android.widget.AbsListView$PositionScroller;

        specialinvoke $r1.<android.widget.AbsListView$PositionScroller: void <init>(android.widget.AbsListView)>(r0);

        return $r1;
    }

    public void smoothScrollToPosition(int)
    {
        android.widget.AbsListView r0;
        int i0;
        android.widget.AbsListView$AbsPositionScroller $r1, $r2, $r3;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        $r1 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller createPositionScroller()>();

        r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller> = $r3;

     label1:
        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        virtualinvoke $r2.<android.widget.AbsListView$AbsPositionScroller: void start(int)>(i0);

        return;
    }

    public void smoothScrollToPositionFromTop(int, int, int)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2;
        android.widget.AbsListView$AbsPositionScroller $r1, $r2, $r3;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller createPositionScroller()>();

        r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller> = $r3;

     label1:
        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        virtualinvoke $r2.<android.widget.AbsListView$AbsPositionScroller: void startWithOffset(int,int,int)>(i0, i1, i2);

        return;
    }

    public void smoothScrollToPositionFromTop(int, int)
    {
        android.widget.AbsListView r0;
        int i0, i1;
        android.widget.AbsListView$AbsPositionScroller $r1, $r2, $r3;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller createPositionScroller()>();

        r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller> = $r3;

     label1:
        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        virtualinvoke $r2.<android.widget.AbsListView$AbsPositionScroller: void startWithOffset(int,int,int)>(i0, i1, i1);

        return;
    }

    public void smoothScrollToPosition(int, int)
    {
        android.widget.AbsListView r0;
        int i0, i1;
        android.widget.AbsListView$AbsPositionScroller $r1, $r2, $r3;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller createPositionScroller()>();

        r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller> = $r3;

     label1:
        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        virtualinvoke $r2.<android.widget.AbsListView$AbsPositionScroller: void start(int,int)>(i0, i1);

        return;
    }

    public void smoothScrollBy(int, int)
    {
        android.widget.AbsListView r0;
        int i0, i1;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.widget.AbsListView: void smoothScrollBy(int,int,boolean)>(i0, i1, 0);

        return;
    }

    void smoothScrollBy(int, int, boolean)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        boolean z0;
        android.widget.AbsListView$FlingRunnable $r1, $r2, $r5, $r8;
        android.widget.AbsListView$AbsPositionScroller $r3, $r4;
        android.view.View $r6, $r7;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r1 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        if $r1 != null goto label1;

        $r8 = new android.widget.AbsListView$FlingRunnable;

        specialinvoke $r8.<android.widget.AbsListView$FlingRunnable: void <init>(android.widget.AbsListView)>(r0);

        r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable> = $r8;

     label1:
        i2 = r0.<android.widget.AbsListView: int mFirstPosition>;

        i3 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        i4 = i2 + i3;

        i5 = virtualinvoke r0.<android.widget.AbsListView: int getPaddingTop()>();

        $i7 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $i8 = virtualinvoke r0.<android.widget.AbsListView: int getPaddingBottom()>();

        i6 = $i7 - $i8;

        if i0 == 0 goto label3;

        $i9 = r0.<android.widget.AbsListView: int mItemCount>;

        if $i9 == 0 goto label3;

        if i3 == 0 goto label3;

        if i2 != 0 goto label2;

        $r7 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(0);

        $i13 = virtualinvoke $r7.<android.view.View: int getTop()>();

        if $i13 != i5 goto label2;

        if i0 < 0 goto label3;

     label2:
        $i10 = r0.<android.widget.AbsListView: int mItemCount>;

        if i4 != $i10 goto label4;

        $i11 = i3 - 1;

        $r6 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i11);

        $i12 = virtualinvoke $r6.<android.view.View: int getBottom()>();

        if $i12 != i6 goto label4;

        if i0 <= 0 goto label4;

     label3:
        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        virtualinvoke $r2.<android.widget.AbsListView$FlingRunnable: void endFling()>();

        $r3 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        if $r3 == null goto label5;

        $r4 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        virtualinvoke $r4.<android.widget.AbsListView$AbsPositionScroller: void stop()>();

        goto label5;

     label4:
        virtualinvoke r0.<android.widget.AbsListView: void reportScrollStateChange(int)>(2);

        $r5 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        virtualinvoke $r5.<android.widget.AbsListView$FlingRunnable: void startScroll(int,int,boolean)>(i0, i1, z0);

     label5:
        return;
    }

    void smoothScrollByOffset(int)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        android.view.View r1;
        android.graphics.Rect r2, $r3;
        float f0, $f2, $f3;
        boolean $z0;
        byte $b14, $b15;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 = -1;

        if i0 >= 0 goto label1;

        i1 = virtualinvoke r0.<android.widget.AbsListView: int getFirstVisiblePosition()>();

        goto label2;

     label1:
        if i0 <= 0 goto label2;

        i1 = virtualinvoke r0.<android.widget.AbsListView: int getLastVisiblePosition()>();

     label2:
        if i1 <= -1 goto label5;

        $i4 = virtualinvoke r0.<android.widget.AbsListView: int getFirstVisiblePosition()>();

        $i5 = i1 - $i4;

        r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i5);

        if r1 == null goto label5;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r2 = $r3;

        $z0 = virtualinvoke r1.<android.view.View: boolean getGlobalVisibleRect(android.graphics.Rect)>(r2);

        if $z0 == 0 goto label4;

        $i9 = virtualinvoke r1.<android.view.View: int getWidth()>();

        $i12 = virtualinvoke r1.<android.view.View: int getHeight()>();

        i2 = $i9 * $i12;

        $i11 = virtualinvoke r2.<android.graphics.Rect: int width()>();

        $i13 = virtualinvoke r2.<android.graphics.Rect: int height()>();

        i3 = $i11 * $i13;

        $f3 = (float) i3;

        $f2 = (float) i2;

        f0 = $f3 / $f2;

        if i0 >= 0 goto label3;

        $b15 = f0 cmpg 0.75F;

        if $b15 >= 0 goto label3;

        i1 = i1 + 1;

        goto label4;

     label3:
        if i0 <= 0 goto label4;

        $b14 = f0 cmpg 0.75F;

        if $b14 >= 0 goto label4;

        i1 = i1 + -1;

     label4:
        $i6 = virtualinvoke r0.<android.widget.AbsListView: int getCount()>();

        $i8 = i1 + i0;

        $i7 = staticinvoke <java.lang.Math: int min(int,int)>($i6, $i8);

        $i10 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i7);

        virtualinvoke r0.<android.widget.AbsListView: void smoothScrollToPosition(int)>($i10);

     label5:
        return;
    }

    private void createScrollingCache()
    {
        android.widget.AbsListView r0;
        boolean $z0, $z1, $z2;

        r0 := @this: android.widget.AbsListView;

        $z0 = r0.<android.widget.AbsListView: boolean mScrollingCacheEnabled>;

        if $z0 == 0 goto label1;

        $z1 = r0.<android.widget.AbsListView: boolean mCachingStarted>;

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r0.<android.widget.AbsListView: boolean isHardwareAccelerated()>();

        if $z2 != 0 goto label1;

        virtualinvoke r0.<android.widget.AbsListView: void setChildrenDrawnWithCacheEnabled(boolean)>(1);

        virtualinvoke r0.<android.widget.AbsListView: void setChildrenDrawingCacheEnabled(boolean)>(1);

        r0.<android.widget.AbsListView: boolean mCachingActive> = 1;

        r0.<android.widget.AbsListView: boolean mCachingStarted> = 1;

     label1:
        return;
    }

    private void clearScrollingCache()
    {
        android.widget.AbsListView r0;
        boolean $z0;
        java.lang.Runnable $r1, $r2;
        android.widget.AbsListView$4 $r3;

        r0 := @this: android.widget.AbsListView;

        $z0 = virtualinvoke r0.<android.widget.AbsListView: boolean isHardwareAccelerated()>();

        if $z0 != 0 goto label2;

        $r1 = r0.<android.widget.AbsListView: java.lang.Runnable mClearScrollingCache>;

        if $r1 != null goto label1;

        $r3 = new android.widget.AbsListView$4;

        specialinvoke $r3.<android.widget.AbsListView$4: void <init>(android.widget.AbsListView)>(r0);

        r0.<android.widget.AbsListView: java.lang.Runnable mClearScrollingCache> = $r3;

     label1:
        $r2 = r0.<android.widget.AbsListView: java.lang.Runnable mClearScrollingCache>;

        virtualinvoke r0.<android.widget.AbsListView: boolean post(java.lang.Runnable)>($r2);

     label2:
        return;
    }

    public void scrollListBy(int)
    {
        android.widget.AbsListView r0;
        int i0, $i1, $i2;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        $i2 = neg i0;

        $i1 = neg i0;

        virtualinvoke r0.<android.widget.AbsListView: boolean trackMotionScroll(int,int)>($i2, $i1);

        return;
    }

    public boolean canScrollList(int)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, i11;
        android.graphics.Rect r1;
        android.view.View $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if i1 != 0 goto label1;

        return 0;

     label1:
        i2 = r0.<android.widget.AbsListView: int mFirstPosition>;

        r1 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        if i0 <= 0 goto label5;

        $i6 = i1 - 1;

        $r3 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i6);

        i3 = virtualinvoke $r3.<android.view.View: int getBottom()>();

        i4 = i2 + i1;

        $i7 = r0.<android.widget.AbsListView: int mItemCount>;

        if i4 < $i7 goto label2;

        $i9 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $i8 = r1.<android.graphics.Rect: int bottom>;

        $i10 = $i9 - $i8;

        if i3 <= $i10 goto label3;

     label2:
        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;

     label5:
        $r2 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(0);

        i11 = virtualinvoke $r2.<android.view.View: int getTop()>();

        if i2 > 0 goto label6;

        $i5 = r1.<android.graphics.Rect: int top>;

        if i11 >= $i5 goto label7;

     label6:
        $z0 = 1;

        goto label8;

     label7:
        $z0 = 0;

     label8:
        return $z0;
    }

    boolean trackMotionScroll(int, int)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, i73, i74, i75, i76, i77, i78, i79, i80;
        android.graphics.Rect r1, $r6;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        android.view.View r2, $r3, $r4, $r5, $r8, r11;
        android.widget.AbsListView$RecycleBin $r7, $r9, $r10;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if i2 != 0 goto label01;

        return 1;

     label01:
        $r3 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(0);

        i3 = virtualinvoke $r3.<android.view.View: int getTop()>();

        $i19 = i2 - 1;

        $r4 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i19);

        i4 = virtualinvoke $r4.<android.view.View: int getBottom()>();

        r1 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        i5 = 0;

        i6 = 0;

        $i22 = r0.<android.widget.AbsListView: int mGroupFlags>;

        $i23 = $i22 & 34;

        if $i23 != 34 goto label02;

        i5 = r1.<android.graphics.Rect: int top>;

        i6 = r1.<android.graphics.Rect: int bottom>;

     label02:
        i7 = i5 - i3;

        $i20 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        i8 = $i20 - i6;

        i9 = i4 - i8;

        $i21 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $i26 = r0.<android.widget.AbsListView: int mPaddingBottom>;

        $i24 = $i21 - $i26;

        $i27 = r0.<android.widget.AbsListView: int mPaddingTop>;

        i10 = $i24 - $i27;

        if i0 >= 0 goto label03;

        $i72 = i10 - 1;

        $i71 = neg $i72;

        i73 = staticinvoke <java.lang.Math: int max(int,int)>($i71, i0);

        goto label04;

     label03:
        $i25 = i10 - 1;

        i73 = staticinvoke <java.lang.Math: int min(int,int)>($i25, i0);

     label04:
        if i1 >= 0 goto label05;

        $i64 = i10 - 1;

        $i65 = neg $i64;

        i74 = staticinvoke <java.lang.Math: int max(int,int)>($i65, i1);

        goto label06;

     label05:
        $i29 = i10 - 1;

        i74 = staticinvoke <java.lang.Math: int min(int,int)>($i29, i1);

     label06:
        i11 = r0.<android.widget.AbsListView: int mFirstPosition>;

        if i11 != 0 goto label07;

        $i66 = r1.<android.graphics.Rect: int top>;

        $i67 = i3 - $i66;

        r0.<android.widget.AbsListView: int mFirstPositionDistanceGuess> = $i67;

        goto label08;

     label07:
        $i28 = r0.<android.widget.AbsListView: int mFirstPositionDistanceGuess>;

        $i32 = $i28 + i74;

        r0.<android.widget.AbsListView: int mFirstPositionDistanceGuess> = $i32;

     label08:
        $i30 = i11 + i2;

        $i33 = r0.<android.widget.AbsListView: int mItemCount>;

        if $i30 != $i33 goto label09;

        $i68 = r1.<android.graphics.Rect: int bottom>;

        $i69 = i4 + $i68;

        r0.<android.widget.AbsListView: int mLastPositionDistanceGuess> = $i69;

        goto label10;

     label09:
        $i31 = r0.<android.widget.AbsListView: int mLastPositionDistanceGuess>;

        $i36 = $i31 + i74;

        r0.<android.widget.AbsListView: int mLastPositionDistanceGuess> = $i36;

     label10:
        if i11 != 0 goto label11;

        $i70 = r1.<android.graphics.Rect: int top>;

        if i3 < $i70 goto label11;

        if i74 < 0 goto label11;

        $z10 = 1;

        goto label12;

     label11:
        $z10 = 0;

     label12:
        z0 = $z10;

        $i34 = i11 + i2;

        $i35 = r0.<android.widget.AbsListView: int mItemCount>;

        if $i34 != $i35 goto label13;

        $i61 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $i60 = r1.<android.graphics.Rect: int bottom>;

        $i62 = $i61 - $i60;

        if i4 > $i62 goto label13;

        if i74 > 0 goto label13;

        $z7 = 1;

        goto label14;

     label13:
        $z7 = 0;

     label14:
        z1 = $z7;

        if z0 != 0 goto label15;

        if z1 == 0 goto label18;

     label15:
        if i74 == 0 goto label16;

        $z4 = 1;

        goto label17;

     label16:
        $z4 = 0;

     label17:
        return $z4;

     label18:
        if i74 >= 0 goto label19;

        $z9 = 1;

        goto label20;

     label19:
        $z9 = 0;

     label20:
        z3 = $z9;

        z2 = virtualinvoke r0.<android.widget.AbsListView: boolean isInTouchMode()>();

        if z2 == 0 goto label21;

        virtualinvoke r0.<android.widget.AbsListView: void hideSelector()>();

     label21:
        i13 = virtualinvoke r0.<android.widget.AbsListView: int getHeaderViewsCount()>();

        $i38 = r0.<android.widget.AbsListView: int mItemCount>;

        $i37 = virtualinvoke r0.<android.widget.AbsListView: int getFooterViewsCount()>();

        i12 = $i38 - $i37;

        i15 = 0;

        i14 = 0;

        if z3 == 0 goto label28;

        i17 = neg i74;

        $i56 = r0.<android.widget.AbsListView: int mGroupFlags>;

        $i55 = $i56 & 34;

        if $i55 != 34 goto label22;

        $i63 = r1.<android.graphics.Rect: int top>;

        i17 = i17 + $i63;

     label22:
        i16 = 0;

     label23:
        if i16 >= i2 goto label27;

        r2 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i16);

        $i57 = virtualinvoke r2.<android.view.View: int getBottom()>();

        if $i57 < i17 goto label24;

        goto label27;

     label24:
        i14 = i14 + 1;

        i18 = i11 + i16;

        if i18 < i13 goto label26;

        if i18 >= i12 goto label26;

        $z8 = virtualinvoke r2.<android.view.View: boolean isAccessibilityFocused()>();

        if $z8 == 0 goto label25;

        virtualinvoke r2.<android.view.View: void clearAccessibilityFocus()>();

     label25:
        $r10 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        virtualinvoke $r10.<android.widget.AbsListView$RecycleBin: void addScrapView(android.view.View,int)>(r2, i18);

     label26:
        i16 = i16 + 1;

        goto label23;

     label27:
        goto label34;

     label28:
        $i42 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        i75 = $i42 - i74;

        $i41 = r0.<android.widget.AbsListView: int mGroupFlags>;

        $i40 = $i41 & 34;

        if $i40 != 34 goto label29;

        $i59 = r1.<android.graphics.Rect: int bottom>;

        i75 = i75 - $i59;

     label29:
        i76 = i2 - 1;

     label30:
        if i76 < 0 goto label34;

        r11 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i76);

        $i58 = virtualinvoke r11.<android.view.View: int getTop()>();

        if $i58 > i75 goto label31;

        goto label34;

     label31:
        i15 = i76;

        i14 = i14 + 1;

        i77 = i11 + i76;

        if i77 < i13 goto label33;

        if i77 >= i12 goto label33;

        $z6 = virtualinvoke r11.<android.view.View: boolean isAccessibilityFocused()>();

        if $z6 == 0 goto label32;

        virtualinvoke r11.<android.view.View: void clearAccessibilityFocus()>();

     label32:
        $r9 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        virtualinvoke $r9.<android.widget.AbsListView$RecycleBin: void addScrapView(android.view.View,int)>(r11, i77);

     label33:
        i76 = i76 + -1;

        goto label30;

     label34:
        $i39 = r0.<android.widget.AbsListView: int mMotionViewOriginalTop>;

        $i44 = $i39 + i73;

        r0.<android.widget.AbsListView: int mMotionViewNewTop> = $i44;

        r0.<android.widget.AbsListView: boolean mBlockLayoutRequests> = 1;

        if i14 <= 0 goto label35;

        virtualinvoke r0.<android.widget.AbsListView: void detachViewsFromParent(int,int)>(i15, i14);

        $r7 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        virtualinvoke $r7.<android.widget.AbsListView$RecycleBin: void removeSkippedScrap()>();

     label35:
        $z5 = virtualinvoke r0.<android.widget.AbsListView: boolean awakenScrollBars()>();

        if $z5 != 0 goto label36;

        virtualinvoke r0.<android.widget.AbsListView: void invalidate()>();

     label36:
        virtualinvoke r0.<android.widget.AbsListView: void offsetChildrenTopAndBottom(int)>(i74);

        if z3 == 0 goto label37;

        $i50 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i51 = $i50 + i14;

        r0.<android.widget.AbsListView: int mFirstPosition> = $i51;

     label37:
        i78 = staticinvoke <java.lang.Math: int abs(int)>(i74);

        if i7 < i78 goto label38;

        if i9 >= i78 goto label39;

     label38:
        virtualinvoke r0.<android.widget.AbsListView: void fillGap(boolean)>(z3);

     label39:
        if z2 != 0 goto label41;

        $i45 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        if $i45 == -1 goto label41;

        $i52 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        $i46 = r0.<android.widget.AbsListView: int mFirstPosition>;

        i79 = $i52 - $i46;

        if i79 < 0 goto label40;

        $i53 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if i79 >= $i53 goto label40;

        $i54 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        $r8 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i79);

        virtualinvoke r0.<android.widget.AbsListView: void positionSelector(int,android.view.View)>($i54, $r8);

     label40:
        goto label44;

     label41:
        $i43 = r0.<android.widget.AbsListView: int mSelectorPosition>;

        if $i43 == -1 goto label43;

        $i48 = r0.<android.widget.AbsListView: int mSelectorPosition>;

        $i47 = r0.<android.widget.AbsListView: int mFirstPosition>;

        i80 = $i48 - $i47;

        if i80 < 0 goto label42;

        $i49 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if i80 >= $i49 goto label42;

        $r5 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i80);

        virtualinvoke r0.<android.widget.AbsListView: void positionSelector(int,android.view.View)>(-1, $r5);

     label42:
        goto label44;

     label43:
        $r6 = r0.<android.widget.AbsListView: android.graphics.Rect mSelectorRect>;

        virtualinvoke $r6.<android.graphics.Rect: void setEmpty()>();

     label44:
        r0.<android.widget.AbsListView: boolean mBlockLayoutRequests> = 0;

        virtualinvoke r0.<android.widget.AbsListView: void invokeOnItemScrollListener()>();

        return 0;
    }

    int getHeaderViewsCount()
    {
        android.widget.AbsListView r0;

        r0 := @this: android.widget.AbsListView;

        return 0;
    }

    int getFooterViewsCount()
    {
        android.widget.AbsListView r0;

        r0 := @this: android.widget.AbsListView;

        return 0;
    }

    abstract void fillGap(boolean);

    void hideSelector()
    {
        android.widget.AbsListView r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        if $i0 == -1 goto label3;

        $i1 = r0.<android.widget.AbsListView: int mLayoutMode>;

        if $i1 == 4 goto label1;

        $i6 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        r0.<android.widget.AbsListView: int mResurrectToPosition> = $i6;

     label1:
        $i2 = r0.<android.widget.AbsListView: int mNextSelectedPosition>;

        if $i2 < 0 goto label2;

        $i4 = r0.<android.widget.AbsListView: int mNextSelectedPosition>;

        $i3 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        if $i4 == $i3 goto label2;

        $i5 = r0.<android.widget.AbsListView: int mNextSelectedPosition>;

        r0.<android.widget.AbsListView: int mResurrectToPosition> = $i5;

     label2:
        virtualinvoke r0.<android.widget.AbsListView: void setSelectedPositionInt(int)>(-1);

        virtualinvoke r0.<android.widget.AbsListView: void setNextSelectedPositionInt(int)>(-1);

        r0.<android.widget.AbsListView: int mSelectedTop> = 0;

     label3:
        return;
    }

    int reconcileSelectedPosition()
    {
        android.widget.AbsListView r0;
        int i0, $i1, $i2, i3, i4;

        r0 := @this: android.widget.AbsListView;

        i0 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        if i0 >= 0 goto label1;

        i0 = r0.<android.widget.AbsListView: int mResurrectToPosition>;

     label1:
        i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, i0);

        $i1 = r0.<android.widget.AbsListView: int mItemCount>;

        $i2 = $i1 - 1;

        i4 = staticinvoke <java.lang.Math: int min(int,int)>(i3, $i2);

        return i4;
    }

    abstract int findMotionRow(int);

    int findClosestMotionRow(int)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, $i3, $i4, $i5;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if i1 != 0 goto label1;

        return -1;

     label1:
        i2 = virtualinvoke r0.<android.widget.AbsListView: int findMotionRow(int)>(i0);

        if i2 == -1 goto label2;

        $i5 = i2;

        goto label3;

     label2:
        $i3 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i4 = $i3 + i1;

        $i5 = $i4 - 1;

     label3:
        return $i5;
    }

    public void invalidateViews()
    {
        android.widget.AbsListView r0;

        r0 := @this: android.widget.AbsListView;

        r0.<android.widget.AbsListView: boolean mDataChanged> = 1;

        virtualinvoke r0.<android.widget.AbsListView: void rememberSyncState()>();

        virtualinvoke r0.<android.widget.AbsListView: void requestLayout()>();

        virtualinvoke r0.<android.widget.AbsListView: void invalidate()>();

        return;
    }

    boolean resurrectSelectionIfNeeded()
    {
        android.widget.AbsListView r0;
        int $i0;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        if $i0 >= 0 goto label1;

        $z0 = virtualinvoke r0.<android.widget.AbsListView: boolean resurrectSelection()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.widget.AbsListView: void updateSelectorState()>();

        return 1;

     label1:
        return 0;
    }

    abstract void setSelectionInt(int);

    boolean resurrectSelection()
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, i28, i29, i30, i31;
        boolean z0, $z2;
        android.view.View r1, r7, r8;
        android.graphics.Rect $r2, $r3;
        android.widget.AbsListView$FlingRunnable $r4;
        android.widget.AbsListView$AbsPositionScroller $r5, $r6;

        r0 := @this: android.widget.AbsListView;

        i0 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        if i0 > 0 goto label01;

        return 0;

     label01:
        i1 = 0;

        $r2 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        i3 = $r2.<android.graphics.Rect: int top>;

        $i11 = r0.<android.widget.AbsListView: int mBottom>;

        $i12 = r0.<android.widget.AbsListView: int mTop>;

        $i15 = $i11 - $i12;

        $r3 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i13 = $r3.<android.graphics.Rect: int bottom>;

        i4 = $i15 - $i13;

        i5 = r0.<android.widget.AbsListView: int mFirstPosition>;

        i6 = r0.<android.widget.AbsListView: int mResurrectToPosition>;

        z0 = 1;

        if i6 < i5 goto label04;

        $i20 = i5 + i0;

        if i6 >= $i20 goto label04;

        i2 = i6;

        $i21 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i23 = i2 - $i21;

        r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i23);

        i1 = virtualinvoke r1.<android.view.View: int getTop()>();

        i7 = virtualinvoke r1.<android.view.View: int getBottom()>();

        if i1 >= i3 goto label02;

        $i25 = virtualinvoke r0.<android.widget.AbsListView: int getVerticalFadingEdgeLength()>();

        i1 = i3 + $i25;

        goto label03;

     label02:
        if i7 <= i4 goto label03;

        $i26 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        $i27 = i4 - $i26;

        $i24 = virtualinvoke r0.<android.widget.AbsListView: int getVerticalFadingEdgeLength()>();

        i1 = $i27 - $i24;

     label03:
        goto label15;

     label04:
        if i6 >= i5 goto label10;

        i2 = i5;

        i28 = 0;

     label05:
        if i28 >= i0 goto label09;

        r7 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i28);

        i8 = virtualinvoke r7.<android.view.View: int getTop()>();

        if i28 != 0 goto label07;

        i1 = i8;

        if i5 > 0 goto label06;

        if i8 >= i3 goto label07;

     label06:
        $i22 = virtualinvoke r0.<android.widget.AbsListView: int getVerticalFadingEdgeLength()>();

        i3 = i3 + $i22;

     label07:
        if i8 < i3 goto label08;

        i2 = i5 + i28;

        i1 = i8;

        goto label09;

     label08:
        i28 = i28 + 1;

        goto label05;

     label09:
        goto label15;

     label10:
        i29 = r0.<android.widget.AbsListView: int mItemCount>;

        z0 = 0;

        $i14 = i5 + i0;

        i2 = $i14 - 1;

        i30 = i0 - 1;

     label11:
        if i30 < 0 goto label15;

        r8 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i30);

        i9 = virtualinvoke r8.<android.view.View: int getTop()>();

        i10 = virtualinvoke r8.<android.view.View: int getBottom()>();

        $i18 = i0 - 1;

        if i30 != $i18 goto label13;

        i1 = i9;

        $i19 = i5 + i0;

        if $i19 < i29 goto label12;

        if i10 <= i4 goto label13;

     label12:
        $i17 = virtualinvoke r0.<android.widget.AbsListView: int getVerticalFadingEdgeLength()>();

        i4 = i4 - $i17;

     label13:
        if i10 > i4 goto label14;

        i2 = i5 + i30;

        i1 = i9;

        goto label15;

     label14:
        i30 = i30 + -1;

        goto label11;

     label15:
        r0.<android.widget.AbsListView: int mResurrectToPosition> = -1;

        $r4 = r0.<android.widget.AbsListView: android.widget.AbsListView$FlingRunnable mFlingRunnable>;

        virtualinvoke r0.<android.widget.AbsListView: boolean removeCallbacks(java.lang.Runnable)>($r4);

        $r5 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        if $r5 == null goto label16;

        $r6 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        virtualinvoke $r6.<android.widget.AbsListView$AbsPositionScroller: void stop()>();

     label16:
        r0.<android.widget.AbsListView: int mTouchMode> = -1;

        specialinvoke r0.<android.widget.AbsListView: void clearScrollingCache()>();

        r0.<android.widget.AbsListView: int mSpecificTop> = i1;

        i31 = virtualinvoke r0.<android.widget.AbsListView: int lookForSelectablePosition(int,boolean)>(i2, z0);

        if i31 < i5 goto label17;

        $i16 = virtualinvoke r0.<android.widget.AbsListView: int getLastVisiblePosition()>();

        if i31 > $i16 goto label17;

        r0.<android.widget.AbsListView: int mLayoutMode> = 4;

        virtualinvoke r0.<android.widget.AbsListView: void updateSelectorState()>();

        virtualinvoke r0.<android.widget.AbsListView: void setSelectionInt(int)>(i31);

        virtualinvoke r0.<android.widget.AbsListView: void invokeOnItemScrollListener()>();

        goto label18;

     label17:
        i31 = -1;

     label18:
        virtualinvoke r0.<android.widget.AbsListView: void reportScrollStateChange(int)>(0);

        if i31 < 0 goto label19;

        $z2 = 1;

        goto label20;

     label19:
        $z2 = 0;

     label20:
        return $z2;
    }

    void confirmCheckedPositionsById()
    {
        android.widget.AbsListView r0;
        boolean z0, z1;
        int i0, i2, i4, i5, i6, $i8, $i10, $i11, $i12, $i13, $i14;
        long l1, l3, l7;
        android.util.SparseBooleanArray $r1, $r10, $r18;
        android.util.LongSparseArray $r2, $r4, $r6, $r11, $r19;
        android.view.ActionMode $r3, $r5, $r13, $r14;
        java.lang.Integer $r7, $r17;
        java.lang.Object $r8;
        android.widget.ListAdapter $r9, $r16;
        byte $b9, $b15;
        android.widget.AbsListView$MultiChoiceModeWrapper $r12, $r15;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        virtualinvoke $r1.<android.util.SparseBooleanArray: void clear()>();

        z0 = 0;

        i0 = 0;

     label1:
        $r2 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        $i8 = virtualinvoke $r2.<android.util.LongSparseArray: int size()>();

        if i0 >= $i8 goto label8;

        $r4 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        l1 = virtualinvoke $r4.<android.util.LongSparseArray: long keyAt(int)>(i0);

        $r6 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        $r8 = virtualinvoke $r6.<android.util.LongSparseArray: java.lang.Object valueAt(int)>(i0);

        $r7 = (java.lang.Integer) $r8;

        i2 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        $r9 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        l3 = interfaceinvoke $r9.<android.widget.ListAdapter: long getItemId(int)>(i2);

        $b9 = l1 cmp l3;

        if $b9 == 0 goto label6;

        $i10 = i2 - 20;

        i4 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i10);

        $i13 = i2 + 20;

        $i11 = r0.<android.widget.AbsListView: int mItemCount>;

        i5 = staticinvoke <java.lang.Math: int min(int,int)>($i13, $i11);

        z1 = 0;

        i6 = i4;

     label2:
        if i6 >= i5 goto label4;

        $r16 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        l7 = interfaceinvoke $r16.<android.widget.ListAdapter: long getItemId(int)>(i6);

        $b15 = l1 cmp l7;

        if $b15 != 0 goto label3;

        z1 = 1;

        $r18 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        virtualinvoke $r18.<android.util.SparseBooleanArray: void put(int,boolean)>(i6, 1);

        $r19 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i6);

        virtualinvoke $r19.<android.util.LongSparseArray: void setValueAt(int,java.lang.Object)>(i0, $r17);

        goto label4;

     label3:
        i6 = i6 + 1;

        goto label2;

     label4:
        if z1 != 0 goto label5;

        $r11 = r0.<android.widget.AbsListView: android.util.LongSparseArray mCheckedIdStates>;

        virtualinvoke $r11.<android.util.LongSparseArray: void delete(long)>(l1);

        i0 = i0 + -1;

        $i12 = r0.<android.widget.AbsListView: int mCheckedItemCount>;

        $i14 = $i12 - 1;

        r0.<android.widget.AbsListView: int mCheckedItemCount> = $i14;

        z0 = 1;

        $r14 = r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode>;

        if $r14 == null goto label5;

        $r12 = r0.<android.widget.AbsListView: android.widget.AbsListView$MultiChoiceModeWrapper mMultiChoiceModeCallback>;

        if $r12 == null goto label5;

        $r15 = r0.<android.widget.AbsListView: android.widget.AbsListView$MultiChoiceModeWrapper mMultiChoiceModeCallback>;

        $r13 = r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode>;

        virtualinvoke $r15.<android.widget.AbsListView$MultiChoiceModeWrapper: void onItemCheckedStateChanged(android.view.ActionMode,int,long,boolean)>($r13, i2, l1, 0);

     label5:
        goto label7;

     label6:
        $r10 = r0.<android.widget.AbsListView: android.util.SparseBooleanArray mCheckStates>;

        virtualinvoke $r10.<android.util.SparseBooleanArray: void put(int,boolean)>(i2, 1);

     label7:
        i0 = i0 + 1;

        goto label1;

     label8:
        if z0 == 0 goto label9;

        $r3 = r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode>;

        if $r3 == null goto label9;

        $r5 = r0.<android.widget.AbsListView: android.view.ActionMode mChoiceActionMode>;

        virtualinvoke $r5.<android.view.ActionMode: void invalidate()>();

     label9:
        return;
    }

    protected void handleDataChanged()
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i20, $i21, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, i32, i33, i34;
        android.view.View r1;
        android.widget.AbsListView$RecycleBin $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z6;
        byte $b9, $b23;
        long $l19, $l22;
        android.widget.ListAdapter $r3, $r4;

        r0 := @this: android.widget.AbsListView;

        i0 = r0.<android.widget.AbsListView: int mItemCount>;

        i1 = r0.<android.widget.AbsListView: int mLastHandledItemCount>;

        $i7 = r0.<android.widget.AbsListView: int mItemCount>;

        r0.<android.widget.AbsListView: int mLastHandledItemCount> = $i7;

        $i8 = r0.<android.widget.AbsListView: int mChoiceMode>;

        if $i8 == 0 goto label01;

        $r4 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        if $r4 == null goto label01;

        $r3 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $z6 = interfaceinvoke $r3.<android.widget.ListAdapter: boolean hasStableIds()>();

        if $z6 == 0 goto label01;

        virtualinvoke r0.<android.widget.AbsListView: void confirmCheckedPositionsById()>();

     label01:
        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        virtualinvoke $r2.<android.widget.AbsListView$RecycleBin: void clearTransientStateViews()>();

        if i0 <= 0 goto label18;

        $z1 = r0.<android.widget.AbsListView: boolean mNeedSync>;

        if $z1 == 0 goto label13;

        r0.<android.widget.AbsListView: boolean mNeedSync> = 0;

        r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync> = null;

        $i12 = r0.<android.widget.AbsListView: int mTranscriptMode>;

        if $i12 != 2 goto label02;

        r0.<android.widget.AbsListView: int mLayoutMode> = 3;

        return;

     label02:
        $i11 = r0.<android.widget.AbsListView: int mTranscriptMode>;

        if $i11 != 1 goto label07;

        $z4 = r0.<android.widget.AbsListView: boolean mForceTranscriptScroll>;

        if $z4 == 0 goto label03;

        r0.<android.widget.AbsListView: boolean mForceTranscriptScroll> = 0;

        r0.<android.widget.AbsListView: int mLayoutMode> = 3;

        return;

     label03:
        i4 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        $i27 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $i28 = virtualinvoke r0.<android.widget.AbsListView: int getPaddingBottom()>();

        i5 = $i27 - $i28;

        $i26 = i4 - 1;

        r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>($i26);

        if r1 == null goto label04;

        $i29 = virtualinvoke r1.<android.view.View: int getBottom()>();

        goto label05;

     label04:
        $i29 = i5;

     label05:
        i6 = $i29;

        $i30 = r0.<android.widget.AbsListView: int mFirstPosition>;

        $i31 = $i30 + i4;

        if $i31 < i1 goto label06;

        if i6 > i5 goto label06;

        r0.<android.widget.AbsListView: int mLayoutMode> = 3;

        return;

     label06:
        virtualinvoke r0.<android.widget.AbsListView: boolean awakenScrollBars()>();

     label07:
        $i14 = r0.<android.widget.AbsListView: int mSyncMode>;

        lookupswitch($i14)
        {
            case 0: goto label08;
            case 1: goto label12;
            default: goto label13;
        };

     label08:
        $z3 = virtualinvoke r0.<android.widget.AbsListView: boolean isInTouchMode()>();

        if $z3 == 0 goto label09;

        r0.<android.widget.AbsListView: int mLayoutMode> = 5;

        $i20 = r0.<android.widget.AbsListView: int mSyncPosition>;

        $i21 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i20);

        $i24 = i0 - 1;

        $i25 = staticinvoke <java.lang.Math: int min(int,int)>($i21, $i24);

        r0.<android.widget.AbsListView: int mSyncPosition> = $i25;

        return;

     label09:
        i2 = virtualinvoke r0.<android.widget.AbsListView: int findSyncPosition()>();

        if i2 < 0 goto label13;

        i3 = virtualinvoke r0.<android.widget.AbsListView: int lookForSelectablePosition(int,boolean)>(i2, 1);

        if i3 != i2 goto label13;

        r0.<android.widget.AbsListView: int mSyncPosition> = i2;

        $l19 = r0.<android.widget.AbsListView: long mSyncHeight>;

        $i18 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $l22 = (long) $i18;

        $b23 = $l19 cmp $l22;

        if $b23 != 0 goto label10;

        r0.<android.widget.AbsListView: int mLayoutMode> = 5;

        goto label11;

     label10:
        r0.<android.widget.AbsListView: int mLayoutMode> = 2;

     label11:
        virtualinvoke r0.<android.widget.AbsListView: void setNextSelectedPositionInt(int)>(i2);

        return;

     label12:
        r0.<android.widget.AbsListView: int mLayoutMode> = 5;

        $i13 = r0.<android.widget.AbsListView: int mSyncPosition>;

        $i16 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i13);

        $i15 = i0 - 1;

        $i17 = staticinvoke <java.lang.Math: int min(int,int)>($i16, $i15);

        r0.<android.widget.AbsListView: int mSyncPosition> = $i17;

        return;

     label13:
        $z2 = virtualinvoke r0.<android.widget.AbsListView: boolean isInTouchMode()>();

        if $z2 != 0 goto label17;

        i32 = virtualinvoke r0.<android.widget.AbsListView: int getSelectedItemPosition()>();

        if i32 < i0 goto label14;

        i32 = i0 - 1;

     label14:
        if i32 >= 0 goto label15;

        i32 = 0;

     label15:
        i33 = virtualinvoke r0.<android.widget.AbsListView: int lookForSelectablePosition(int,boolean)>(i32, 1);

        if i33 < 0 goto label16;

        virtualinvoke r0.<android.widget.AbsListView: void setNextSelectedPositionInt(int)>(i33);

        return;

     label16:
        i34 = virtualinvoke r0.<android.widget.AbsListView: int lookForSelectablePosition(int,boolean)>(i32, 0);

        if i34 < 0 goto label18;

        virtualinvoke r0.<android.widget.AbsListView: void setNextSelectedPositionInt(int)>(i34);

        return;

     label17:
        $i10 = r0.<android.widget.AbsListView: int mResurrectToPosition>;

        if $i10 < 0 goto label18;

        return;

     label18:
        $z0 = r0.<android.widget.AbsListView: boolean mStackFromBottom>;

        if $z0 == 0 goto label19;

        $b9 = 3;

        goto label20;

     label19:
        $b9 = 1;

     label20:
        r0.<android.widget.AbsListView: int mLayoutMode> = $b9;

        r0.<android.widget.AbsListView: int mSelectedPosition> = -1;

        r0.<android.widget.AbsListView: long mSelectedRowId> = -9223372036854775808L;

        r0.<android.widget.AbsListView: int mNextSelectedPosition> = -1;

        r0.<android.widget.AbsListView: long mNextSelectedRowId> = -9223372036854775808L;

        r0.<android.widget.AbsListView: boolean mNeedSync> = 0;

        r0.<android.widget.AbsListView: android.widget.AbsListView$SavedState mPendingSync> = null;

        r0.<android.widget.AbsListView: int mSelectorPosition> = -1;

        virtualinvoke r0.<android.widget.AbsListView: void checkSelectionChanged()>();

        return;
    }

    protected void onDisplayHint(int)
    {
        android.widget.AbsListView r0;
        int i0;
        android.widget.PopupWindow $r1, $r2, $r3, $r4;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        specialinvoke r0.<android.widget.AdapterView: void onDisplayHint(int)>(i0);

        lookupswitch(i0)
        {
            case 0: goto label2;
            case 4: goto label1;
            default: goto label3;
        };

     label1:
        $r1 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        if $r1 == null goto label3;

        $r2 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        $z1 = virtualinvoke $r2.<android.widget.PopupWindow: boolean isShowing()>();

        if $z1 == 0 goto label3;

        specialinvoke r0.<android.widget.AbsListView: void dismissPopup()>();

        goto label3;

     label2:
        $z2 = r0.<android.widget.AbsListView: boolean mFiltered>;

        if $z2 == 0 goto label3;

        $r3 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        if $r3 == null goto label3;

        $r4 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        $z3 = virtualinvoke $r4.<android.widget.PopupWindow: boolean isShowing()>();

        if $z3 != 0 goto label3;

        specialinvoke r0.<android.widget.AbsListView: void showPopup()>();

     label3:
        if i0 != 4 goto label4;

        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        r0.<android.widget.AbsListView: boolean mPopupHidden> = $z0;

        return;
    }

    private void dismissPopup()
    {
        android.widget.AbsListView r0;
        android.widget.PopupWindow $r1, $r2;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        virtualinvoke $r2.<android.widget.PopupWindow: void dismiss()>();

     label1:
        return;
    }

    private void showPopup()
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @this: android.widget.AbsListView;

        $i0 = virtualinvoke r0.<android.widget.AbsListView: int getWindowVisibility()>();

        if $i0 != 0 goto label1;

        specialinvoke r0.<android.widget.AbsListView: void createTextFilter(boolean)>(1);

        specialinvoke r0.<android.widget.AbsListView: void positionPopup()>();

        virtualinvoke r0.<android.widget.AbsListView: void checkFocus()>();

     label1:
        return;
    }

    private void positionPopup()
    {
        android.widget.AbsListView r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        int[] r1;
        android.content.res.Resources $r2;
        android.util.DisplayMetrics $r3;
        float $f0, $f1;
        android.widget.PopupWindow $r4, $r5, $r6;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        $r2 = virtualinvoke r0.<android.widget.AbsListView: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        i0 = $r3.<android.util.DisplayMetrics: int heightPixels>;

        r1 = newarray (int)[2];

        virtualinvoke r0.<android.widget.AbsListView: void getLocationOnScreen(int[])>(r1);

        $i2 = r1[1];

        $i3 = i0 - $i2;

        $i4 = virtualinvoke r0.<android.widget.AbsListView: int getHeight()>();

        $i6 = $i3 - $i4;

        $f0 = r0.<android.widget.AbsListView: float mDensityScale>;

        $f1 = $f0 * 20.0F;

        $i5 = (int) $f1;

        i1 = $i6 + $i5;

        $r4 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        $z0 = virtualinvoke $r4.<android.widget.PopupWindow: boolean isShowing()>();

        if $z0 != 0 goto label1;

        $r6 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        $i8 = r1[0];

        virtualinvoke $r6.<android.widget.PopupWindow: void showAtLocation(android.view.View,int,int,int)>(r0, 81, $i8, i1);

        goto label2;

     label1:
        $r5 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        $i7 = r1[0];

        virtualinvoke $r5.<android.widget.PopupWindow: void update(int,int,int,int)>($i7, i1, -1, -1);

     label2:
        return;
    }

    static int getDistance(android.graphics.Rect, android.graphics.Rect, int)
    {
        android.graphics.Rect r0, r1;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45;
        java.lang.IllegalArgumentException $r2;

        r0 := @parameter0: android.graphics.Rect;

        r1 := @parameter1: android.graphics.Rect;

        i0 := @parameter2: int;

        lookupswitch(i0)
        {
            case 1: goto label5;
            case 2: goto label5;
            case 17: goto label3;
            case 33: goto label4;
            case 66: goto label1;
            case 130: goto label2;
            default: goto label6;
        };

     label1:
        i1 = r0.<android.graphics.Rect: int right>;

        $i17 = r0.<android.graphics.Rect: int top>;

        $i16 = virtualinvoke r0.<android.graphics.Rect: int height()>();

        $i19 = $i16 / 2;

        i2 = $i17 + $i19;

        i3 = r1.<android.graphics.Rect: int left>;

        $i18 = r1.<android.graphics.Rect: int top>;

        $i21 = virtualinvoke r1.<android.graphics.Rect: int height()>();

        $i20 = $i21 / 2;

        i4 = $i18 + $i20;

        goto label7;

     label2:
        $i7 = r0.<android.graphics.Rect: int left>;

        $i8 = virtualinvoke r0.<android.graphics.Rect: int width()>();

        $i9 = $i8 / 2;

        i1 = $i7 + $i9;

        i2 = r0.<android.graphics.Rect: int bottom>;

        $i10 = r1.<android.graphics.Rect: int left>;

        $i11 = virtualinvoke r1.<android.graphics.Rect: int width()>();

        $i12 = $i11 / 2;

        i3 = $i10 + $i12;

        i4 = r1.<android.graphics.Rect: int top>;

        goto label7;

     label3:
        i1 = r0.<android.graphics.Rect: int left>;

        $i29 = r0.<android.graphics.Rect: int top>;

        $i28 = virtualinvoke r0.<android.graphics.Rect: int height()>();

        $i32 = $i28 / 2;

        i2 = $i29 + $i32;

        i3 = r1.<android.graphics.Rect: int right>;

        $i33 = r1.<android.graphics.Rect: int top>;

        $i30 = virtualinvoke r1.<android.graphics.Rect: int height()>();

        $i31 = $i30 / 2;

        i4 = $i33 + $i31;

        goto label7;

     label4:
        $i23 = r0.<android.graphics.Rect: int left>;

        $i22 = virtualinvoke r0.<android.graphics.Rect: int width()>();

        $i25 = $i22 / 2;

        i1 = $i23 + $i25;

        i2 = r0.<android.graphics.Rect: int top>;

        $i24 = r1.<android.graphics.Rect: int left>;

        $i27 = virtualinvoke r1.<android.graphics.Rect: int width()>();

        $i26 = $i27 / 2;

        i3 = $i24 + $i26;

        i4 = r1.<android.graphics.Rect: int bottom>;

        goto label7;

     label5:
        $i36 = r0.<android.graphics.Rect: int right>;

        $i37 = virtualinvoke r0.<android.graphics.Rect: int width()>();

        $i34 = $i37 / 2;

        i1 = $i36 + $i34;

        $i35 = r0.<android.graphics.Rect: int top>;

        $i40 = virtualinvoke r0.<android.graphics.Rect: int height()>();

        $i41 = $i40 / 2;

        i2 = $i35 + $i41;

        $i38 = r1.<android.graphics.Rect: int left>;

        $i39 = virtualinvoke r1.<android.graphics.Rect: int width()>();

        $i44 = $i39 / 2;

        i3 = $i38 + $i44;

        $i45 = r1.<android.graphics.Rect: int top>;

        $i42 = virtualinvoke r1.<android.graphics.Rect: int height()>();

        $i43 = $i42 / 2;

        i4 = $i45 + $i43;

        goto label7;

     label6:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direction must be one of {FOCUS_UP, FOCUS_DOWN, FOCUS_LEFT, FOCUS_RIGHT, FOCUS_FORWARD, FOCUS_BACKWARD}.");

        throw $r2;

     label7:
        i5 = i3 - i1;

        i6 = i4 - i2;

        $i15 = i6 * i6;

        $i13 = i5 * i5;

        $i14 = $i15 + $i13;

        return $i14;
    }

    protected boolean isInFilterMode()
    {
        android.widget.AbsListView r0;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        $z0 = r0.<android.widget.AbsListView: boolean mFiltered>;

        return $z0;
    }

    boolean sendToTextFilter(int, int, android.view.KeyEvent)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, $i3, $i5, $i6, $i7;
        android.view.KeyEvent r1, r9;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6;
        android.view.KeyEvent$DispatcherState r2;
        android.widget.EditText $r3, $r4, $r5, $r8;
        long $l4;
        android.widget.PopupWindow $r6, $r7;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.view.KeyEvent;

        $z2 = specialinvoke r0.<android.widget.AbsListView: boolean acceptFilter()>();

        if $z2 != 0 goto label01;

        return 0;

     label01:
        z0 = 0;

        z1 = 1;

        lookupswitch(i0)
        {
            case 4: goto label03;
            case 19: goto label02;
            case 20: goto label02;
            case 21: goto label02;
            case 22: goto label02;
            case 23: goto label02;
            case 62: goto label07;
            case 66: goto label02;
            default: goto label08;
        };

     label02:
        z1 = 0;

        goto label08;

     label03:
        $z3 = r0.<android.widget.AbsListView: boolean mFiltered>;

        if $z3 == 0 goto label06;

        $r7 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        if $r7 == null goto label06;

        $r6 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        $z4 = virtualinvoke $r6.<android.widget.PopupWindow: boolean isShowing()>();

        if $z4 == 0 goto label06;

        $i5 = virtualinvoke r1.<android.view.KeyEvent: int getAction()>();

        if $i5 != 0 goto label05;

        $i7 = virtualinvoke r1.<android.view.KeyEvent: int getRepeatCount()>();

        if $i7 != 0 goto label05;

        r2 = virtualinvoke r0.<android.widget.AbsListView: android.view.KeyEvent$DispatcherState getKeyDispatcherState()>();

        if r2 == null goto label04;

        virtualinvoke r2.<android.view.KeyEvent$DispatcherState: void startTracking(android.view.KeyEvent,java.lang.Object)>(r1, r0);

     label04:
        z0 = 1;

        goto label06;

     label05:
        $i6 = virtualinvoke r1.<android.view.KeyEvent: int getAction()>();

        if $i6 != 1 goto label06;

        $z5 = virtualinvoke r1.<android.view.KeyEvent: boolean isTracking()>();

        if $z5 == 0 goto label06;

        $z6 = virtualinvoke r1.<android.view.KeyEvent: boolean isCanceled()>();

        if $z6 != 0 goto label06;

        z0 = 1;

        $r8 = r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        virtualinvoke $r8.<android.widget.EditText: void setText(java.lang.CharSequence)>("");

     label06:
        z1 = 0;

        goto label08;

     label07:
        z1 = r0.<android.widget.AbsListView: boolean mFiltered>;

     label08:
        if z1 == 0 goto label13;

        specialinvoke r0.<android.widget.AbsListView: void createTextFilter(boolean)>(1);

        r9 = r1;

        $i3 = virtualinvoke r9.<android.view.KeyEvent: int getRepeatCount()>();

        if $i3 <= 0 goto label09;

        $l4 = virtualinvoke r1.<android.view.KeyEvent: long getEventTime()>();

        r9 = staticinvoke <android.view.KeyEvent: android.view.KeyEvent changeTimeRepeat(android.view.KeyEvent,long,int)>(r1, $l4, 0);

     label09:
        i2 = virtualinvoke r1.<android.view.KeyEvent: int getAction()>();

        tableswitch(i2)
        {
            case 0: goto label10;
            case 1: goto label11;
            case 2: goto label12;
            default: goto label13;
        };

     label10:
        $r3 = r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        z0 = virtualinvoke $r3.<android.widget.EditText: boolean onKeyDown(int,android.view.KeyEvent)>(i0, r9);

        goto label13;

     label11:
        $r5 = r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        z0 = virtualinvoke $r5.<android.widget.EditText: boolean onKeyUp(int,android.view.KeyEvent)>(i0, r9);

        goto label13;

     label12:
        $r4 = r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        z0 = virtualinvoke $r4.<android.widget.EditText: boolean onKeyMultiple(int,int,android.view.KeyEvent)>(i0, i1, r1);

     label13:
        return z0;
    }

    public android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
    {
        android.widget.AbsListView r0;
        android.view.inputmethod.EditorInfo r1;
        boolean $z0;
        android.widget.AbsListView$InputConnectionWrapper $r2, $r3, $r5;
        android.view.inputmethod.BaseInputConnection $r4;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.inputmethod.EditorInfo;

        $z0 = virtualinvoke r0.<android.widget.AbsListView: boolean isTextFilterEnabled()>();

        if $z0 == 0 goto label2;

        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$InputConnectionWrapper mPublicInputConnection>;

        if $r2 != null goto label1;

        $r4 = new android.view.inputmethod.BaseInputConnection;

        specialinvoke $r4.<android.view.inputmethod.BaseInputConnection: void <init>(android.view.View,boolean)>(r0, 0);

        r0.<android.widget.AbsListView: android.view.inputmethod.InputConnection mDefInputConnection> = $r4;

        $r5 = new android.widget.AbsListView$InputConnectionWrapper;

        specialinvoke $r5.<android.widget.AbsListView$InputConnectionWrapper: void <init>(android.widget.AbsListView,android.view.inputmethod.EditorInfo)>(r0, r1);

        r0.<android.widget.AbsListView: android.widget.AbsListView$InputConnectionWrapper mPublicInputConnection> = $r5;

     label1:
        r1.<android.view.inputmethod.EditorInfo: int inputType> = 177;

        r1.<android.view.inputmethod.EditorInfo: int imeOptions> = 6;

        $r3 = r0.<android.widget.AbsListView: android.widget.AbsListView$InputConnectionWrapper mPublicInputConnection>;

        return $r3;

     label2:
        return null;
    }

    public boolean checkInputConnectionProxy(android.view.View)
    {
        android.widget.AbsListView r0;
        android.view.View r1;
        android.widget.EditText $r2;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        if r1 != $r2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private void createTextFilter(boolean)
    {
        android.widget.AbsListView r0;
        boolean z0;
        android.widget.PopupWindow r1, $r2, $r3, $r4, $r5;
        android.content.Context $r6;
        android.widget.EditText $r7;
        android.view.ViewTreeObserver $r8;

        r0 := @this: android.widget.AbsListView;

        z0 := @parameter0: boolean;

        $r2 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        if $r2 != null goto label1;

        $r5 = new android.widget.PopupWindow;

        $r6 = virtualinvoke r0.<android.widget.AbsListView: android.content.Context getContext()>();

        specialinvoke $r5.<android.widget.PopupWindow: void <init>(android.content.Context)>($r6);

        r1 = $r5;

        virtualinvoke r1.<android.widget.PopupWindow: void setFocusable(boolean)>(0);

        virtualinvoke r1.<android.widget.PopupWindow: void setTouchable(boolean)>(0);

        virtualinvoke r1.<android.widget.PopupWindow: void setInputMethodMode(int)>(2);

        $r7 = specialinvoke r0.<android.widget.AbsListView: android.widget.EditText getTextFilterInput()>();

        virtualinvoke r1.<android.widget.PopupWindow: void setContentView(android.view.View)>($r7);

        virtualinvoke r1.<android.widget.PopupWindow: void setWidth(int)>(-2);

        virtualinvoke r1.<android.widget.PopupWindow: void setHeight(int)>(-2);

        virtualinvoke r1.<android.widget.PopupWindow: void setBackgroundDrawable(android.graphics.drawable.Drawable)>(null);

        r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup> = r1;

        $r8 = virtualinvoke r0.<android.widget.AbsListView: android.view.ViewTreeObserver getViewTreeObserver()>();

        virtualinvoke $r8.<android.view.ViewTreeObserver: void addOnGlobalLayoutListener(android.view.ViewTreeObserver$OnGlobalLayoutListener)>(r0);

        r0.<android.widget.AbsListView: boolean mGlobalLayoutListenerAddedFilter> = 1;

     label1:
        if z0 == 0 goto label2;

        $r4 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        virtualinvoke $r4.<android.widget.PopupWindow: void setAnimationStyle(int)>(16974553);

        goto label3;

     label2:
        $r3 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        virtualinvoke $r3.<android.widget.PopupWindow: void setAnimationStyle(int)>(16974554);

     label3:
        return;
    }

    private android.widget.EditText getTextFilterInput()
    {
        android.widget.AbsListView r0;
        android.view.LayoutInflater r1;
        android.widget.EditText $r2, $r3, $r6, $r7, $r8, $r9;
        android.content.Context $r4;
        android.view.View $r5;

        r0 := @this: android.widget.AbsListView;

        $r2 = r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        if $r2 != null goto label1;

        $r4 = virtualinvoke r0.<android.widget.AbsListView: android.content.Context getContext()>();

        r1 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>($r4);

        $r5 = virtualinvoke r1.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(17367269, null);

        $r6 = (android.widget.EditText) $r5;

        r0.<android.widget.AbsListView: android.widget.EditText mTextFilter> = $r6;

        $r7 = r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        virtualinvoke $r7.<android.widget.EditText: void setRawInputType(int)>(177);

        $r8 = r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        virtualinvoke $r8.<android.widget.EditText: void setImeOptions(int)>(268435456);

        $r9 = r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        virtualinvoke $r9.<android.widget.EditText: void addTextChangedListener(android.text.TextWatcher)>(r0);

     label1:
        $r3 = r0.<android.widget.AbsListView: android.widget.EditText mTextFilter>;

        return $r3;
    }

    public void clearTextFilter()
    {
        android.widget.AbsListView r0;
        boolean $z0, $z1;
        android.widget.EditText $r1;
        android.widget.PopupWindow $r2, $r3;

        r0 := @this: android.widget.AbsListView;

        $z0 = r0.<android.widget.AbsListView: boolean mFiltered>;

        if $z0 == 0 goto label1;

        $r1 = specialinvoke r0.<android.widget.AbsListView: android.widget.EditText getTextFilterInput()>();

        virtualinvoke $r1.<android.widget.EditText: void setText(java.lang.CharSequence)>("");

        r0.<android.widget.AbsListView: boolean mFiltered> = 0;

        $r2 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        if $r2 == null goto label1;

        $r3 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        $z1 = virtualinvoke $r3.<android.widget.PopupWindow: boolean isShowing()>();

        if $z1 == 0 goto label1;

        specialinvoke r0.<android.widget.AbsListView: void dismissPopup()>();

     label1:
        return;
    }

    public boolean hasTextFilter()
    {
        android.widget.AbsListView r0;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        $z0 = r0.<android.widget.AbsListView: boolean mFiltered>;

        return $z0;
    }

    public void onGlobalLayout()
    {
        android.widget.AbsListView r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        android.widget.PopupWindow $r1, $r2, $r3, $r4;

        r0 := @this: android.widget.AbsListView;

        $z0 = virtualinvoke r0.<android.widget.AbsListView: boolean isShown()>();

        if $z0 == 0 goto label1;

        $z2 = r0.<android.widget.AbsListView: boolean mFiltered>;

        if $z2 == 0 goto label2;

        $r3 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        if $r3 == null goto label2;

        $r4 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        $z3 = virtualinvoke $r4.<android.widget.PopupWindow: boolean isShowing()>();

        if $z3 != 0 goto label2;

        $z4 = r0.<android.widget.AbsListView: boolean mPopupHidden>;

        if $z4 != 0 goto label2;

        specialinvoke r0.<android.widget.AbsListView: void showPopup()>();

        goto label2;

     label1:
        $r1 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        if $r1 == null goto label2;

        $r2 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        $z1 = virtualinvoke $r2.<android.widget.PopupWindow: boolean isShowing()>();

        if $z1 == 0 goto label2;

        specialinvoke r0.<android.widget.AbsListView: void dismissPopup()>();

     label2:
        return;
    }

    public void beforeTextChanged(java.lang.CharSequence, int, int, int)
    {
        android.widget.AbsListView r0;
        java.lang.CharSequence r1;
        int i0, i1, i2;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        return;
    }

    public void onTextChanged(java.lang.CharSequence, int, int, int)
    {
        android.widget.AbsListView r0;
        java.lang.CharSequence r1;
        int i0, i1, i2, i3;
        boolean z0, $z1, $z2;
        android.widget.Filter r2;
        android.widget.PopupWindow $r3;
        android.widget.ListAdapter $r4, $r5;
        android.widget.Filterable $r6;
        java.lang.IllegalStateException $r7;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $z1 = virtualinvoke r0.<android.widget.AbsListView: boolean isTextFilterEnabled()>();

        if $z1 == 0 goto label4;

        specialinvoke r0.<android.widget.AbsListView: void createTextFilter(boolean)>(1);

        i3 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        $r3 = r0.<android.widget.AbsListView: android.widget.PopupWindow mPopup>;

        z0 = virtualinvoke $r3.<android.widget.PopupWindow: boolean isShowing()>();

        if z0 != 0 goto label1;

        if i3 <= 0 goto label1;

        specialinvoke r0.<android.widget.AbsListView: void showPopup()>();

        r0.<android.widget.AbsListView: boolean mFiltered> = 1;

        goto label2;

     label1:
        if z0 == 0 goto label2;

        if i3 != 0 goto label2;

        specialinvoke r0.<android.widget.AbsListView: void dismissPopup()>();

        r0.<android.widget.AbsListView: boolean mFiltered> = 0;

     label2:
        $r4 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $z2 = $r4 instanceof android.widget.Filterable;

        if $z2 == 0 goto label4;

        $r5 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $r6 = (android.widget.Filterable) $r5;

        r2 = interfaceinvoke $r6.<android.widget.Filterable: android.widget.Filter getFilter()>();

        if r2 == null goto label3;

        virtualinvoke r2.<android.widget.Filter: void filter(java.lang.CharSequence,android.widget.Filter$FilterListener)>(r1, r0);

        goto label4;

     label3:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("You cannot call onTextChanged with a non filterable adapter");

        throw $r7;

     label4:
        return;
    }

    public void afterTextChanged(android.text.Editable)
    {
        android.widget.AbsListView r0;
        android.text.Editable r1;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.text.Editable;

        return;
    }

    public void onFilterComplete(int)
    {
        android.widget.AbsListView r0;
        int i0, $i1;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        $i1 = r0.<android.widget.AbsListView: int mSelectedPosition>;

        if $i1 >= 0 goto label1;

        if i0 <= 0 goto label1;

        r0.<android.widget.AbsListView: int mResurrectToPosition> = -1;

        virtualinvoke r0.<android.widget.AbsListView: boolean resurrectSelection()>();

     label1:
        return;
    }

    protected android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        android.widget.AbsListView r0;
        android.widget.AbsListView$LayoutParams $r1;

        r0 := @this: android.widget.AbsListView;

        $r1 = new android.widget.AbsListView$LayoutParams;

        specialinvoke $r1.<android.widget.AbsListView$LayoutParams: void <init>(int,int,int)>(-1, -2, 0);

        return $r1;
    }

    protected android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.widget.AbsListView r0;
        android.view.ViewGroup$LayoutParams r1;
        android.widget.AbsListView$LayoutParams $r2;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r2 = new android.widget.AbsListView$LayoutParams;

        specialinvoke $r2.<android.widget.AbsListView$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r1);

        return $r2;
    }

    public android.widget.AbsListView$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.widget.AbsListView r0;
        android.util.AttributeSet r1;
        android.widget.AbsListView$LayoutParams $r2;
        android.content.Context $r3;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = new android.widget.AbsListView$LayoutParams;

        $r3 = virtualinvoke r0.<android.widget.AbsListView: android.content.Context getContext()>();

        specialinvoke $r2.<android.widget.AbsListView$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, r1);

        return $r2;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.widget.AbsListView r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof android.widget.AbsListView$LayoutParams;

        return $z0;
    }

    public void setTranscriptMode(int)
    {
        android.widget.AbsListView r0;
        int i0;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        r0.<android.widget.AbsListView: int mTranscriptMode> = i0;

        return;
    }

    public int getTranscriptMode()
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mTranscriptMode>;

        return $i0;
    }

    public int getSolidColor()
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mCacheColorHint>;

        return $i0;
    }

    public void setCacheColorHint(int)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, $i3;
        android.widget.AbsListView$RecycleBin $r1;
        android.view.View $r2;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        $i3 = r0.<android.widget.AbsListView: int mCacheColorHint>;

        if i0 == $i3 goto label3;

        r0.<android.widget.AbsListView: int mCacheColorHint> = i0;

        i1 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r2 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i2);

        virtualinvoke $r2.<android.view.View: void setDrawingCacheBackgroundColor(int)>(i0);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r1 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        virtualinvoke $r1.<android.widget.AbsListView$RecycleBin: void setCacheColorHint(int)>(i0);

     label3:
        return;
    }

    public int getCacheColorHint()
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @this: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mCacheColorHint>;

        return $i0;
    }

    public void reclaimViews(java.util.List)
    {
        android.widget.AbsListView r0;
        java.util.List r1;
        int i0, i1, $i2;
        android.widget.AbsListView$RecyclerListener r2;
        android.view.View r3;
        android.widget.AbsListView$LayoutParams r4;
        android.widget.AbsListView$RecycleBin $r5, $r6, $r8;
        android.view.ViewGroup$LayoutParams $r7;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: java.util.List;

        i0 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        $r5 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        r2 = staticinvoke <android.widget.AbsListView$RecycleBin: android.widget.AbsListView$RecyclerListener access$3900(android.widget.AbsListView$RecycleBin)>($r5);

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i1);

        $r7 = virtualinvoke r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.widget.AbsListView$LayoutParams) $r7;

        if r4 == null goto label2;

        $r8 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        $i2 = r4.<android.widget.AbsListView$LayoutParams: int viewType>;

        $z0 = virtualinvoke $r8.<android.widget.AbsListView$RecycleBin: boolean shouldRecycleViewType(int)>($i2);

        if $z0 == 0 goto label2;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r3);

        virtualinvoke r3.<android.view.View: void setAccessibilityDelegate(android.view.View$AccessibilityDelegate)>(null);

        if r2 == null goto label2;

        interfaceinvoke r2.<android.widget.AbsListView$RecyclerListener: void onMovedToScrapHeap(android.view.View)>(r3);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r6 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        virtualinvoke $r6.<android.widget.AbsListView$RecycleBin: void reclaimScrapViews(java.util.List)>(r1);

        virtualinvoke r0.<android.widget.AbsListView: void removeAllViewsInLayout()>();

        return;
    }

    private void finishGlows()
    {
        android.widget.AbsListView r0;
        android.widget.EdgeEffect $r1, $r2, $r3;

        r0 := @this: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        virtualinvoke $r2.<android.widget.EdgeEffect: void finish()>();

        $r3 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        virtualinvoke $r3.<android.widget.EdgeEffect: void finish()>();

     label1:
        return;
    }

    public void setRemoteViewsAdapter(android.content.Intent)
    {
        android.widget.AbsListView r0;
        android.content.Intent r1, $r12;
        android.content.Intent$FilterComparison r2, r3, $r9, $r10;
        android.widget.RemoteViewsAdapter $r4, $r5, $r7, $r8, $r11;
        android.content.Context $r6;
        boolean $z0, $z1;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.content.Intent;

        $r4 = r0.<android.widget.AbsListView: android.widget.RemoteViewsAdapter mRemoteAdapter>;

        if $r4 == null goto label1;

        $r9 = new android.content.Intent$FilterComparison;

        specialinvoke $r9.<android.content.Intent$FilterComparison: void <init>(android.content.Intent)>(r1);

        r2 = $r9;

        $r10 = new android.content.Intent$FilterComparison;

        $r11 = r0.<android.widget.AbsListView: android.widget.RemoteViewsAdapter mRemoteAdapter>;

        $r12 = virtualinvoke $r11.<android.widget.RemoteViewsAdapter: android.content.Intent getRemoteViewsServiceIntent()>();

        specialinvoke $r10.<android.content.Intent$FilterComparison: void <init>(android.content.Intent)>($r12);

        r3 = $r10;

        $z1 = virtualinvoke r2.<android.content.Intent$FilterComparison: boolean equals(java.lang.Object)>(r3);

        if $z1 == 0 goto label1;

        return;

     label1:
        r0.<android.widget.AbsListView: boolean mDeferNotifyDataSetChanged> = 0;

        $r5 = new android.widget.RemoteViewsAdapter;

        $r6 = virtualinvoke r0.<android.widget.AbsListView: android.content.Context getContext()>();

        specialinvoke $r5.<android.widget.RemoteViewsAdapter: void <init>(android.content.Context,android.content.Intent,android.widget.RemoteViewsAdapter$RemoteAdapterConnectionCallback)>($r6, r1, r0);

        r0.<android.widget.AbsListView: android.widget.RemoteViewsAdapter mRemoteAdapter> = $r5;

        $r7 = r0.<android.widget.AbsListView: android.widget.RemoteViewsAdapter mRemoteAdapter>;

        $z0 = virtualinvoke $r7.<android.widget.RemoteViewsAdapter: boolean isDataReady()>();

        if $z0 == 0 goto label2;

        $r8 = r0.<android.widget.AbsListView: android.widget.RemoteViewsAdapter mRemoteAdapter>;

        virtualinvoke r0.<android.widget.AbsListView: void setAdapter(android.widget.ListAdapter)>($r8);

     label2:
        return;
    }

    public void setRemoteViewsOnClickHandler(android.widget.RemoteViews$OnClickHandler)
    {
        android.widget.AbsListView r0;
        android.widget.RemoteViews$OnClickHandler r1;
        android.widget.RemoteViewsAdapter $r2, $r3;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.widget.RemoteViews$OnClickHandler;

        $r2 = r0.<android.widget.AbsListView: android.widget.RemoteViewsAdapter mRemoteAdapter>;

        if $r2 == null goto label1;

        $r3 = r0.<android.widget.AbsListView: android.widget.RemoteViewsAdapter mRemoteAdapter>;

        virtualinvoke $r3.<android.widget.RemoteViewsAdapter: void setRemoteViewsOnClickHandler(android.widget.RemoteViews$OnClickHandler)>(r1);

     label1:
        return;
    }

    public void deferNotifyDataSetChanged()
    {
        android.widget.AbsListView r0;

        r0 := @this: android.widget.AbsListView;

        r0.<android.widget.AbsListView: boolean mDeferNotifyDataSetChanged> = 1;

        return;
    }

    public boolean onRemoteAdapterConnected()
    {
        android.widget.AbsListView r0;
        android.widget.ListAdapter $r1;
        android.widget.RemoteViewsAdapter $r2, $r3, $r4, $r5, $r6;
        boolean $z0;

        r0 := @this: android.widget.AbsListView;

        $r2 = r0.<android.widget.AbsListView: android.widget.RemoteViewsAdapter mRemoteAdapter>;

        $r1 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        if $r2 == $r1 goto label2;

        $r5 = r0.<android.widget.AbsListView: android.widget.RemoteViewsAdapter mRemoteAdapter>;

        virtualinvoke r0.<android.widget.AbsListView: void setAdapter(android.widget.ListAdapter)>($r5);

        $z0 = r0.<android.widget.AbsListView: boolean mDeferNotifyDataSetChanged>;

        if $z0 == 0 goto label1;

        $r6 = r0.<android.widget.AbsListView: android.widget.RemoteViewsAdapter mRemoteAdapter>;

        virtualinvoke $r6.<android.widget.RemoteViewsAdapter: void notifyDataSetChanged()>();

        r0.<android.widget.AbsListView: boolean mDeferNotifyDataSetChanged> = 0;

     label1:
        return 0;

     label2:
        $r3 = r0.<android.widget.AbsListView: android.widget.RemoteViewsAdapter mRemoteAdapter>;

        if $r3 == null goto label3;

        $r4 = r0.<android.widget.AbsListView: android.widget.RemoteViewsAdapter mRemoteAdapter>;

        virtualinvoke $r4.<android.widget.RemoteViewsAdapter: void superNotifyDataSetChanged()>();

        return 1;

     label3:
        return 0;
    }

    public void onRemoteAdapterDisconnected()
    {
        android.widget.AbsListView r0;

        r0 := @this: android.widget.AbsListView;

        return;
    }

    void setVisibleRangeHint(int, int)
    {
        android.widget.AbsListView r0;
        int i0, i1;
        android.widget.RemoteViewsAdapter $r1, $r2;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.widget.AbsListView: android.widget.RemoteViewsAdapter mRemoteAdapter>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.AbsListView: android.widget.RemoteViewsAdapter mRemoteAdapter>;

        virtualinvoke $r2.<android.widget.RemoteViewsAdapter: void setVisibleRangeHint(int,int)>(i0, i1);

     label1:
        return;
    }

    public void setRecyclerListener(android.widget.AbsListView$RecyclerListener)
    {
        android.widget.AbsListView r0;
        android.widget.AbsListView$RecyclerListener r1;
        android.widget.AbsListView$RecycleBin $r2;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.widget.AbsListView$RecyclerListener;

        $r2 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        staticinvoke <android.widget.AbsListView$RecycleBin: android.widget.AbsListView$RecyclerListener access$3902(android.widget.AbsListView$RecycleBin,android.widget.AbsListView$RecyclerListener)>($r2, r1);

        return;
    }

    int getHeightForPosition(int)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, i3, i4, $i5, $i6;
        android.view.View r1, r4;
        boolean[] $r2;
        android.widget.AbsListView$RecycleBin $r3;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 = virtualinvoke r0.<android.widget.AbsListView: int getFirstVisiblePosition()>();

        i2 = virtualinvoke r0.<android.widget.AbsListView: int getChildCount()>();

        i3 = i0 - i1;

        if i3 < 0 goto label1;

        if i3 >= i2 goto label1;

        r1 = virtualinvoke r0.<android.widget.AbsListView: android.view.View getChildAt(int)>(i3);

        $i6 = virtualinvoke r1.<android.view.View: int getHeight()>();

        return $i6;

     label1:
        $r2 = r0.<android.widget.AbsListView: boolean[] mIsScrap>;

        r4 = virtualinvoke r0.<android.widget.AbsListView: android.view.View obtainView(int,boolean[])>(i0, $r2);

        $i5 = r0.<android.widget.AbsListView: int mWidthMeasureSpec>;

        virtualinvoke r4.<android.view.View: void measure(int,int)>($i5, 0);

        i4 = virtualinvoke r4.<android.view.View: int getMeasuredHeight()>();

        $r3 = r0.<android.widget.AbsListView: android.widget.AbsListView$RecycleBin mRecycler>;

        virtualinvoke $r3.<android.widget.AbsListView$RecycleBin: void addScrapView(android.view.View,int)>(r4, i0);

        return i4;
    }

    public void setSelectionFromTop(int, int)
    {
        android.widget.AbsListView r0;
        int i0, i1, $i2, $i3;
        android.widget.ListAdapter $r1, $r5;
        boolean $z0, $z1;
        android.graphics.Rect $r2;
        android.widget.AbsListView$AbsPositionScroller $r3, $r4;
        long $l4;

        r0 := @this: android.widget.AbsListView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        if $r1 != null goto label1;

        return;

     label1:
        $z0 = virtualinvoke r0.<android.widget.AbsListView: boolean isInTouchMode()>();

        if $z0 != 0 goto label2;

        i0 = virtualinvoke r0.<android.widget.AbsListView: int lookForSelectablePosition(int,boolean)>(i0, 1);

        if i0 < 0 goto label3;

        virtualinvoke r0.<android.widget.AbsListView: void setNextSelectedPositionInt(int)>(i0);

        goto label3;

     label2:
        r0.<android.widget.AbsListView: int mResurrectToPosition> = i0;

     label3:
        if i0 < 0 goto label6;

        r0.<android.widget.AbsListView: int mLayoutMode> = 4;

        $r2 = r0.<android.widget.AbsListView: android.graphics.Rect mListPadding>;

        $i2 = $r2.<android.graphics.Rect: int top>;

        $i3 = $i2 + i1;

        r0.<android.widget.AbsListView: int mSpecificTop> = $i3;

        $z1 = r0.<android.widget.AbsListView: boolean mNeedSync>;

        if $z1 == 0 goto label4;

        r0.<android.widget.AbsListView: int mSyncPosition> = i0;

        $r5 = r0.<android.widget.AbsListView: android.widget.ListAdapter mAdapter>;

        $l4 = interfaceinvoke $r5.<android.widget.ListAdapter: long getItemId(int)>(i0);

        r0.<android.widget.AbsListView: long mSyncRowId> = $l4;

     label4:
        $r3 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        if $r3 == null goto label5;

        $r4 = r0.<android.widget.AbsListView: android.widget.AbsListView$AbsPositionScroller mPositionScroller>;

        virtualinvoke $r4.<android.widget.AbsListView$AbsPositionScroller: void stop()>();

     label5:
        virtualinvoke r0.<android.widget.AbsListView: void requestLayout()>();

     label6:
        return;
    }

    public volatile void setAdapter(android.widget.Adapter)
    {
        android.widget.AbsListView r0;
        android.widget.Adapter r1;
        android.widget.ListAdapter $r2;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.widget.Adapter;

        $r2 = (android.widget.ListAdapter) r1;

        virtualinvoke r0.<android.widget.AbsListView: void setAdapter(android.widget.ListAdapter)>($r2);

        return;
    }

    public volatile android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.widget.AbsListView r0;
        android.util.AttributeSet r1;
        android.widget.AbsListView$LayoutParams $r2;

        r0 := @this: android.widget.AbsListView;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = virtualinvoke r0.<android.widget.AbsListView: android.widget.AbsListView$LayoutParams generateLayoutParams(android.util.AttributeSet)>(r1);

        return $r2;
    }

    static void access$000(android.widget.AbsListView, boolean)
    {
        android.widget.AbsListView r0;
        boolean z0;

        r0 := @parameter0: android.widget.AbsListView;

        z0 := @parameter1: boolean;

        specialinvoke r0.<android.widget.AbsListView: void setFastScrollerEnabledUiThread(boolean)>(z0);

        return;
    }

    static void access$100(android.widget.AbsListView, boolean)
    {
        android.widget.AbsListView r0;
        boolean z0;

        r0 := @parameter0: android.widget.AbsListView;

        z0 := @parameter1: boolean;

        specialinvoke r0.<android.widget.AbsListView: void setFastScrollerAlwaysVisibleUiThread(boolean)>(z0);

        return;
    }

    static int access$400(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = virtualinvoke r0.<android.widget.AbsListView: int getWindowAttachCount()>();

        return $i0;
    }

    static int access$500(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = virtualinvoke r0.<android.widget.AbsListView: int getWindowAttachCount()>();

        return $i0;
    }

    static android.widget.AbsListView$CheckForLongPress access$700(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        android.widget.AbsListView$CheckForLongPress $r1;

        r0 := @parameter0: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForLongPress mPendingCheckForLongPress>;

        return $r1;
    }

    static android.widget.AbsListView$CheckForLongPress access$702(android.widget.AbsListView, android.widget.AbsListView$CheckForLongPress)
    {
        android.widget.AbsListView r0;
        android.widget.AbsListView$CheckForLongPress r1;

        r0 := @parameter0: android.widget.AbsListView;

        r1 := @parameter1: android.widget.AbsListView$CheckForLongPress;

        r0.<android.widget.AbsListView: android.widget.AbsListView$CheckForLongPress mPendingCheckForLongPress> = r1;

        return r1;
    }

    static java.lang.Runnable access$1102(android.widget.AbsListView, java.lang.Runnable)
    {
        android.widget.AbsListView r0;
        java.lang.Runnable r1;

        r0 := @parameter0: android.widget.AbsListView;

        r1 := @parameter1: java.lang.Runnable;

        r0.<android.widget.AbsListView: java.lang.Runnable mTouchModeReset> = r1;

        return r1;
    }

    static boolean access$1200(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        boolean $z0;

        r0 := @parameter0: android.widget.AbsListView;

        $z0 = r0.<android.widget.AbsListView: boolean mIsDetaching>;

        return $z0;
    }

    static int access$1300(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mActivePointerId>;

        return $i0;
    }

    static android.view.VelocityTracker access$1400(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        android.view.VelocityTracker $r1;

        r0 := @parameter0: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.view.VelocityTracker mVelocityTracker>;

        return $r1;
    }

    static int access$1600(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mMaximumVelocity>;

        return $i0;
    }

    static int access$1700(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mMinimumVelocity>;

        return $i0;
    }

    static android.os.StrictMode$Span access$1800(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        android.os.StrictMode$Span $r1;

        r0 := @parameter0: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.os.StrictMode$Span mFlingStrictSpan>;

        return $r1;
    }

    static android.os.StrictMode$Span access$1802(android.widget.AbsListView, android.os.StrictMode$Span)
    {
        android.widget.AbsListView r0;
        android.os.StrictMode$Span r1;

        r0 := @parameter0: android.widget.AbsListView;

        r1 := @parameter1: android.os.StrictMode$Span;

        r0.<android.widget.AbsListView: android.os.StrictMode$Span mFlingStrictSpan> = r1;

        return r1;
    }

    static int access$1900(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mScrollY>;

        return $i0;
    }

    static int access$2000(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mScrollY>;

        return $i0;
    }

    static int access$2100(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mScrollY>;

        return $i0;
    }

    static boolean access$2200(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        boolean $z0;

        r0 := @parameter0: android.widget.AbsListView;

        $z0 = specialinvoke r0.<android.widget.AbsListView: boolean contentFits()>();

        return $z0;
    }

    static android.widget.EdgeEffect access$2300(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        android.widget.EdgeEffect $r1;

        r0 := @parameter0: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowTop>;

        return $r1;
    }

    static android.widget.EdgeEffect access$2400(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        android.widget.EdgeEffect $r1;

        r0 := @parameter0: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.widget.EdgeEffect mEdgeGlowBottom>;

        return $r1;
    }

    static void access$2500(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;

        r0 := @parameter0: android.widget.AbsListView;

        specialinvoke r0.<android.widget.AbsListView: void clearScrollingCache()>();

        return;
    }

    static int access$2600(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mPaddingBottom>;

        return $i0;
    }

    static int access$2700(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mPaddingTop>;

        return $i0;
    }

    static int access$2800(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mPaddingBottom>;

        return $i0;
    }

    static int access$2900(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mPaddingTop>;

        return $i0;
    }

    static int access$3000(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mScrollY>;

        return $i0;
    }

    static boolean access$3100(android.widget.AbsListView, int, int, int, int, int, int, int, int, boolean)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, i3, i4, i5, i6, i7;
        boolean z0, $z1;

        r0 := @parameter0: android.widget.AbsListView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        i5 := @parameter6: int;

        i6 := @parameter7: int;

        i7 := @parameter8: int;

        z0 := @parameter9: boolean;

        $z1 = virtualinvoke r0.<android.widget.AbsListView: boolean overScrollBy(int,int,int,int,int,int,int,int,boolean)>(i0, i1, i2, i3, i4, i5, i6, i7, z0);

        return $z1;
    }

    static int access$3200(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mScrollY>;

        return $i0;
    }

    static boolean access$3300(android.widget.AbsListView, int, int, int, int, int, int, int, int, boolean)
    {
        android.widget.AbsListView r0;
        int i0, i1, i2, i3, i4, i5, i6, i7;
        boolean z0, $z1;

        r0 := @parameter0: android.widget.AbsListView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        i5 := @parameter6: int;

        i6 := @parameter7: int;

        i7 := @parameter8: int;

        z0 := @parameter9: boolean;

        $z1 = virtualinvoke r0.<android.widget.AbsListView: boolean overScrollBy(int,int,int,int,int,int,int,int,boolean)>(i0, i1, i2, i3, i4, i5, i6, i7, z0);

        return $z1;
    }

    static void access$3400(android.widget.AbsListView, boolean)
    {
        android.widget.AbsListView r0;
        boolean z0;

        r0 := @parameter0: android.widget.AbsListView;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<android.widget.AbsListView: void setChildrenDrawnWithCacheEnabled(boolean)>(z0);

        return;
    }

    static int access$3500(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        int $i0;

        r0 := @parameter0: android.widget.AbsListView;

        $i0 = r0.<android.widget.AbsListView: int mPersistentDrawingCache>;

        return $i0;
    }

    static void access$3600(android.widget.AbsListView, boolean)
    {
        android.widget.AbsListView r0;
        boolean z0;

        r0 := @parameter0: android.widget.AbsListView;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<android.widget.AbsListView: void setChildrenDrawingCacheEnabled(boolean)>(z0);

        return;
    }

    static android.widget.EditText access$3700(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        android.widget.EditText $r1;

        r0 := @parameter0: android.widget.AbsListView;

        $r1 = specialinvoke r0.<android.widget.AbsListView: android.widget.EditText getTextFilterInput()>();

        return $r1;
    }

    static android.view.inputmethod.InputConnection access$3800(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        android.view.inputmethod.InputConnection $r1;

        r0 := @parameter0: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.view.inputmethod.InputConnection mDefInputConnection>;

        return $r1;
    }

    static android.widget.FastScroller access$4000(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        android.widget.FastScroller $r1;

        r0 := @parameter0: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.widget.FastScroller mFastScroll>;

        return $r1;
    }

    static void access$4100(android.widget.AbsListView, android.view.View, boolean)
    {
        android.widget.AbsListView r0;
        android.view.View r1;
        boolean z0;

        r0 := @parameter0: android.widget.AbsListView;

        r1 := @parameter1: android.view.View;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<android.widget.AbsListView: void removeDetachedView(android.view.View,boolean)>(r1, z0);

        return;
    }

    static android.content.Context access$4200(android.widget.AbsListView)
    {
        android.widget.AbsListView r0;
        android.content.Context $r1;

        r0 := @parameter0: android.widget.AbsListView;

        $r1 = r0.<android.widget.AbsListView: android.content.Context mContext>;

        return $r1;
    }

    static void <clinit>()
    {
        android.view.animation.LinearInterpolator $r0;

        <android.widget.AbsListView: int INVALID_POINTER> = -1;

        <android.widget.AbsListView: boolean PROFILE_FLINGING> = 0;

        <android.widget.AbsListView: boolean PROFILE_SCROLLING> = 0;

        <android.widget.AbsListView: int TOUCH_MODE_OFF> = 1;

        <android.widget.AbsListView: int TOUCH_MODE_ON> = 0;

        <android.widget.AbsListView: int TOUCH_MODE_UNKNOWN> = -1;

        <android.widget.AbsListView: int CHECK_POSITION_SEARCH_DISTANCE> = 20;

        <android.widget.AbsListView: int OVERSCROLL_LIMIT_DIVISOR> = 3;

        <android.widget.AbsListView: int CHOICE_MODE_MULTIPLE_MODAL> = 3;

        <android.widget.AbsListView: int CHOICE_MODE_MULTIPLE> = 2;

        <android.widget.AbsListView: int CHOICE_MODE_SINGLE> = 1;

        <android.widget.AbsListView: int CHOICE_MODE_NONE> = 0;

        <android.widget.AbsListView: int LAYOUT_MOVE_SELECTION> = 6;

        <android.widget.AbsListView: int LAYOUT_SYNC> = 5;

        <android.widget.AbsListView: int LAYOUT_SPECIFIC> = 4;

        <android.widget.AbsListView: int LAYOUT_FORCE_BOTTOM> = 3;

        <android.widget.AbsListView: int LAYOUT_SET_SELECTION> = 2;

        <android.widget.AbsListView: int LAYOUT_FORCE_TOP> = 1;

        <android.widget.AbsListView: int LAYOUT_NORMAL> = 0;

        <android.widget.AbsListView: int TOUCH_MODE_OVERFLING> = 6;

        <android.widget.AbsListView: int TOUCH_MODE_OVERSCROLL> = 5;

        <android.widget.AbsListView: int TOUCH_MODE_FLING> = 4;

        <android.widget.AbsListView: int TOUCH_MODE_SCROLL> = 3;

        <android.widget.AbsListView: int TOUCH_MODE_DONE_WAITING> = 2;

        <android.widget.AbsListView: int TOUCH_MODE_TAP> = 1;

        <android.widget.AbsListView: int TOUCH_MODE_DOWN> = 0;

        <android.widget.AbsListView: int TOUCH_MODE_REST> = -1;

        <android.widget.AbsListView: int TRANSCRIPT_MODE_ALWAYS_SCROLL> = 2;

        <android.widget.AbsListView: int TRANSCRIPT_MODE_NORMAL> = 1;

        <android.widget.AbsListView: int TRANSCRIPT_MODE_DISABLED> = 0;

        <android.widget.AbsListView: java.lang.String TAG> = "AbsListView";

        $r0 = new android.view.animation.LinearInterpolator;

        specialinvoke $r0.<android.view.animation.LinearInterpolator: void <init>()>();

        <android.widget.AbsListView: android.view.animation.Interpolator sLinearInterpolator> = $r0;

        return;
    }
}
