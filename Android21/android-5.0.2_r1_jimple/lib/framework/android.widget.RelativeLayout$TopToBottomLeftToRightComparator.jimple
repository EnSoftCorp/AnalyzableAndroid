class android.widget.RelativeLayout$TopToBottomLeftToRightComparator extends java.lang.Object implements java.util.Comparator
{
    final android.widget.RelativeLayout this$0;

    private void <init>(android.widget.RelativeLayout)
    {
        android.widget.RelativeLayout$TopToBottomLeftToRightComparator r0;
        android.widget.RelativeLayout r1;

        r0 := @this: android.widget.RelativeLayout$TopToBottomLeftToRightComparator;

        r1 := @parameter0: android.widget.RelativeLayout;

        r0.<android.widget.RelativeLayout$TopToBottomLeftToRightComparator: android.widget.RelativeLayout this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(android.view.View, android.view.View)
    {
        android.widget.RelativeLayout$TopToBottomLeftToRightComparator r0;
        android.view.View r1, r2;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: android.widget.RelativeLayout$TopToBottomLeftToRightComparator;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        $i4 = virtualinvoke r1.<android.view.View: int getTop()>();

        $i5 = virtualinvoke r2.<android.view.View: int getTop()>();

        i0 = $i4 - $i5;

        if i0 == 0 goto label1;

        return i0;

     label1:
        $i6 = virtualinvoke r1.<android.view.View: int getLeft()>();

        $i7 = virtualinvoke r2.<android.view.View: int getLeft()>();

        i1 = $i6 - $i7;

        if i1 == 0 goto label2;

        return i1;

     label2:
        $i8 = virtualinvoke r1.<android.view.View: int getHeight()>();

        $i9 = virtualinvoke r2.<android.view.View: int getHeight()>();

        i2 = $i8 - $i9;

        if i2 == 0 goto label3;

        return i2;

     label3:
        $i10 = virtualinvoke r1.<android.view.View: int getWidth()>();

        $i11 = virtualinvoke r2.<android.view.View: int getWidth()>();

        i3 = $i10 - $i11;

        if i3 == 0 goto label4;

        return i3;

     label4:
        return 0;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        android.widget.RelativeLayout$TopToBottomLeftToRightComparator r0;
        java.lang.Object r1, r2;
        android.view.View $r3, $r4;
        int $i0;

        r0 := @this: android.widget.RelativeLayout$TopToBottomLeftToRightComparator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (android.view.View) r1;

        $r3 = (android.view.View) r2;

        $i0 = virtualinvoke r0.<android.widget.RelativeLayout$TopToBottomLeftToRightComparator: int compare(android.view.View,android.view.View)>($r4, $r3);

        return $i0;
    }

    void <init>(android.widget.RelativeLayout, android.widget.RelativeLayout$1)
    {
        android.widget.RelativeLayout$TopToBottomLeftToRightComparator r0;
        android.widget.RelativeLayout r1;
        android.widget.RelativeLayout$1 r2;

        r0 := @this: android.widget.RelativeLayout$TopToBottomLeftToRightComparator;

        r1 := @parameter0: android.widget.RelativeLayout;

        r2 := @parameter1: android.widget.RelativeLayout$1;

        specialinvoke r0.<android.widget.RelativeLayout$TopToBottomLeftToRightComparator: void <init>(android.widget.RelativeLayout)>(r1);

        return;
    }
}
