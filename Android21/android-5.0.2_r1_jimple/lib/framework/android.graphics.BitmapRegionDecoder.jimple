public final class android.graphics.BitmapRegionDecoder extends java.lang.Object
{
    private long mNativeBitmapRegionDecoder;
    private boolean mRecycled;
    private final java.lang.Object mNativeLock;

    public static android.graphics.BitmapRegionDecoder newInstance(byte[], int, int, boolean) throws java.io.IOException
    {
        byte[] r0;
        int i0, i1, $i2, $i3, $i4;
        boolean z0;
        java.lang.ArrayIndexOutOfBoundsException $r1;
        android.graphics.BitmapRegionDecoder $r2;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        $i2 = i0 | i1;

        if $i2 < 0 goto label1;

        $i4 = lengthof r0;

        $i3 = i0 + i1;

        if $i4 >= $i3 goto label2;

     label1:
        $r1 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r1;

     label2:
        $r2 = staticinvoke <android.graphics.BitmapRegionDecoder: android.graphics.BitmapRegionDecoder nativeNewInstance(byte[],int,int,boolean)>(r0, i0, i1, z0);

        return $r2;
    }

    public static android.graphics.BitmapRegionDecoder newInstance(java.io.FileDescriptor, boolean) throws java.io.IOException
    {
        java.io.FileDescriptor r0;
        boolean z0;
        android.graphics.BitmapRegionDecoder $r1;

        r0 := @parameter0: java.io.FileDescriptor;

        z0 := @parameter1: boolean;

        $r1 = staticinvoke <android.graphics.BitmapRegionDecoder: android.graphics.BitmapRegionDecoder nativeNewInstance(java.io.FileDescriptor,boolean)>(r0, z0);

        return $r1;
    }

    public static android.graphics.BitmapRegionDecoder newInstance(java.io.InputStream, boolean) throws java.io.IOException
    {
        java.io.InputStream r0;
        boolean z0, $z1;
        byte[] r1;
        android.graphics.BitmapRegionDecoder $r2, $r4;
        android.content.res.AssetManager$AssetInputStream $r3;
        long $l0;

        r0 := @parameter0: java.io.InputStream;

        z0 := @parameter1: boolean;

        $z1 = r0 instanceof android.content.res.AssetManager$AssetInputStream;

        if $z1 == 0 goto label1;

        $r3 = (android.content.res.AssetManager$AssetInputStream) r0;

        $l0 = virtualinvoke $r3.<android.content.res.AssetManager$AssetInputStream: long getNativeAsset()>();

        $r4 = staticinvoke <android.graphics.BitmapRegionDecoder: android.graphics.BitmapRegionDecoder nativeNewInstance(long,boolean)>($l0, z0);

        return $r4;

     label1:
        r1 = newarray (byte)[16384];

        $r2 = staticinvoke <android.graphics.BitmapRegionDecoder: android.graphics.BitmapRegionDecoder nativeNewInstance(java.io.InputStream,byte[],boolean)>(r0, r1, z0);

        return $r2;
    }

    public static android.graphics.BitmapRegionDecoder newInstance(java.lang.String, boolean) throws java.io.IOException
    {
        java.lang.String r0;
        boolean z0;
        java.io.FileInputStream r1, $r3;
        java.lang.Throwable r2, $r4;
        java.io.IOException $r5, $r6;
        android.graphics.BitmapRegionDecoder r7;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r1 = null;

     label01:
        $r3 = new java.io.FileInputStream;

        specialinvoke $r3.<java.io.FileInputStream: void <init>(java.lang.String)>(r0);

        r1 = $r3;

        r7 = staticinvoke <android.graphics.BitmapRegionDecoder: android.graphics.BitmapRegionDecoder newInstance(java.io.InputStream,boolean)>(r1, z0);

     label02:
        if r1 == null goto label12;

     label03:
        virtualinvoke r1.<java.io.InputStream: void close()>();

     label04:
        goto label12;

     label05:
        $r5 := @caughtexception;

        goto label12;

     label06:
        $r4 := @caughtexception;

        r2 = $r4;

     label07:
        if r1 == null goto label11;

     label08:
        virtualinvoke r1.<java.io.InputStream: void close()>();

     label09:
        goto label11;

     label10:
        $r6 := @caughtexception;

     label11:
        throw r2;

     label12:
        return r7;

        catch java.io.IOException from label03 to label04 with label05;
        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.io.IOException from label08 to label09 with label10;
        catch java.lang.Throwable from label06 to label07 with label06;
    }

    private void <init>(long)
    {
        android.graphics.BitmapRegionDecoder r0;
        long l0;
        java.lang.Object $r1;

        r0 := @this: android.graphics.BitmapRegionDecoder;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<android.graphics.BitmapRegionDecoder: java.lang.Object mNativeLock> = $r1;

        r0.<android.graphics.BitmapRegionDecoder: long mNativeBitmapRegionDecoder> = l0;

        r0.<android.graphics.BitmapRegionDecoder: boolean mRecycled> = 0;

        return;
    }

    public android.graphics.Bitmap decodeRegion(android.graphics.Rect, android.graphics.BitmapFactory$Options)
    {
        android.graphics.BitmapRegionDecoder r0;
        android.graphics.Rect r1;
        android.graphics.BitmapFactory$Options r2;
        java.lang.Object r3, $r5;
        java.lang.Throwable r4, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14;
        java.lang.IllegalArgumentException $r6;
        long $l13;
        android.graphics.Bitmap $r7;

        r0 := @this: android.graphics.BitmapRegionDecoder;

        r1 := @parameter0: android.graphics.Rect;

        r2 := @parameter1: android.graphics.BitmapFactory$Options;

        $r5 = r0.<android.graphics.BitmapRegionDecoder: java.lang.Object mNativeLock>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        specialinvoke r0.<android.graphics.BitmapRegionDecoder: void checkRecycled(java.lang.String)>("decodeRegion called on recycled region decoder");

        $i0 = r1.<android.graphics.Rect: int right>;

        if $i0 <= 0 goto label2;

        $i1 = r1.<android.graphics.Rect: int bottom>;

        if $i1 <= 0 goto label2;

        $i2 = r1.<android.graphics.Rect: int left>;

        $i3 = virtualinvoke r0.<android.graphics.BitmapRegionDecoder: int getWidth()>();

        if $i2 >= $i3 goto label2;

        $i4 = r1.<android.graphics.Rect: int top>;

        $i5 = virtualinvoke r0.<android.graphics.BitmapRegionDecoder: int getHeight()>();

        if $i4 < $i5 goto label3;

     label2:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("rectangle is outside the image");

        throw $r6;

     label3:
        $l13 = r0.<android.graphics.BitmapRegionDecoder: long mNativeBitmapRegionDecoder>;

        $i14 = r1.<android.graphics.Rect: int left>;

        $i11 = r1.<android.graphics.Rect: int top>;

        $i7 = r1.<android.graphics.Rect: int right>;

        $i6 = r1.<android.graphics.Rect: int left>;

        $i12 = $i7 - $i6;

        $i10 = r1.<android.graphics.Rect: int bottom>;

        $i8 = r1.<android.graphics.Rect: int top>;

        $i9 = $i10 - $i8;

        $r7 = staticinvoke <android.graphics.BitmapRegionDecoder: android.graphics.Bitmap nativeDecodeRegion(long,int,int,int,int,android.graphics.BitmapFactory$Options)>($l13, $i14, $i11, $i12, $i9, r2);

        exitmonitor r3;

     label4:
        return $r7;

     label5:
        $r8 := @caughtexception;

        r4 = $r8;

        exitmonitor r3;

     label6:
        throw r4;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public int getWidth()
    {
        android.graphics.BitmapRegionDecoder r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;
        long $l0;
        int $i1;

        r0 := @this: android.graphics.BitmapRegionDecoder;

        $r3 = r0.<android.graphics.BitmapRegionDecoder: java.lang.Object mNativeLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        specialinvoke r0.<android.graphics.BitmapRegionDecoder: void checkRecycled(java.lang.String)>("getWidth called on recycled region decoder");

        $l0 = r0.<android.graphics.BitmapRegionDecoder: long mNativeBitmapRegionDecoder>;

        $i1 = staticinvoke <android.graphics.BitmapRegionDecoder: int nativeGetWidth(long)>($l0);

        exitmonitor r1;

     label2:
        return $i1;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int getHeight()
    {
        android.graphics.BitmapRegionDecoder r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;
        long $l0;
        int $i1;

        r0 := @this: android.graphics.BitmapRegionDecoder;

        $r3 = r0.<android.graphics.BitmapRegionDecoder: java.lang.Object mNativeLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        specialinvoke r0.<android.graphics.BitmapRegionDecoder: void checkRecycled(java.lang.String)>("getHeight called on recycled region decoder");

        $l0 = r0.<android.graphics.BitmapRegionDecoder: long mNativeBitmapRegionDecoder>;

        $i1 = staticinvoke <android.graphics.BitmapRegionDecoder: int nativeGetHeight(long)>($l0);

        exitmonitor r1;

     label2:
        return $i1;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void recycle()
    {
        android.graphics.BitmapRegionDecoder r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;
        boolean $z0;
        long $l0;

        r0 := @this: android.graphics.BitmapRegionDecoder;

        $r3 = r0.<android.graphics.BitmapRegionDecoder: java.lang.Object mNativeLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $z0 = r0.<android.graphics.BitmapRegionDecoder: boolean mRecycled>;

        if $z0 != 0 goto label2;

        $l0 = r0.<android.graphics.BitmapRegionDecoder: long mNativeBitmapRegionDecoder>;

        staticinvoke <android.graphics.BitmapRegionDecoder: void nativeClean(long)>($l0);

        r0.<android.graphics.BitmapRegionDecoder: boolean mRecycled> = 1;

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public final boolean isRecycled()
    {
        android.graphics.BitmapRegionDecoder r0;
        boolean $z0;

        r0 := @this: android.graphics.BitmapRegionDecoder;

        $z0 = r0.<android.graphics.BitmapRegionDecoder: boolean mRecycled>;

        return $z0;
    }

    private void checkRecycled(java.lang.String)
    {
        android.graphics.BitmapRegionDecoder r0;
        java.lang.String r1;
        boolean $z0;
        java.lang.IllegalStateException $r2;

        r0 := @this: android.graphics.BitmapRegionDecoder;

        r1 := @parameter0: java.lang.String;

        $z0 = r0.<android.graphics.BitmapRegionDecoder: boolean mRecycled>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>(r1);

        throw $r2;

     label1:
        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.graphics.BitmapRegionDecoder r0;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.graphics.BitmapRegionDecoder;

     label1:
        virtualinvoke r0.<android.graphics.BitmapRegionDecoder: void recycle()>();

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        goto label5;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

     label4:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private static native android.graphics.Bitmap nativeDecodeRegion(long, int, int, int, int, android.graphics.BitmapFactory$Options);

    private static native int nativeGetWidth(long);

    private static native int nativeGetHeight(long);

    private static native void nativeClean(long);

    private static native android.graphics.BitmapRegionDecoder nativeNewInstance(byte[], int, int, boolean);

    private static native android.graphics.BitmapRegionDecoder nativeNewInstance(java.io.FileDescriptor, boolean);

    private static native android.graphics.BitmapRegionDecoder nativeNewInstance(java.io.InputStream, byte[], boolean);

    private static native android.graphics.BitmapRegionDecoder nativeNewInstance(long, boolean);
}
