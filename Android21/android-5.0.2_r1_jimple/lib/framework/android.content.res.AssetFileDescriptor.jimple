public class android.content.res.AssetFileDescriptor extends java.lang.Object implements android.os.Parcelable, java.io.Closeable
{
    public static final long UNKNOWN_LENGTH;
    private final android.os.ParcelFileDescriptor mFd;
    private final long mStartOffset;
    private final long mLength;
    private final android.os.Bundle mExtras;
    public static final android.os.Parcelable$Creator CREATOR;

    public void <init>(android.os.ParcelFileDescriptor, long, long)
    {
        android.content.res.AssetFileDescriptor r0;
        android.os.ParcelFileDescriptor r1;
        long l0, l1;

        r0 := @this: android.content.res.AssetFileDescriptor;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        specialinvoke r0.<android.content.res.AssetFileDescriptor: void <init>(android.os.ParcelFileDescriptor,long,long,android.os.Bundle)>(r1, l0, l1, null);

        return;
    }

    public void <init>(android.os.ParcelFileDescriptor, long, long, android.os.Bundle)
    {
        android.content.res.AssetFileDescriptor r0;
        android.os.ParcelFileDescriptor r1;
        long l0, l1;
        android.os.Bundle r2;
        byte $b2, $b3;
        java.lang.IllegalArgumentException $r3, $r4;

        r0 := @this: android.content.res.AssetFileDescriptor;

        r1 := @parameter0: android.os.ParcelFileDescriptor;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r2 := @parameter3: android.os.Bundle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("fd must not be null");

        throw $r4;

     label1:
        $b2 = l1 cmp 0L;

        if $b2 >= 0 goto label2;

        $b3 = l0 cmp 0L;

        if $b3 == 0 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("startOffset must be 0 when using UNKNOWN_LENGTH");

        throw $r3;

     label2:
        r0.<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor mFd> = r1;

        r0.<android.content.res.AssetFileDescriptor: long mStartOffset> = l0;

        r0.<android.content.res.AssetFileDescriptor: long mLength> = l1;

        r0.<android.content.res.AssetFileDescriptor: android.os.Bundle mExtras> = r2;

        return;
    }

    public android.os.ParcelFileDescriptor getParcelFileDescriptor()
    {
        android.content.res.AssetFileDescriptor r0;
        android.os.ParcelFileDescriptor $r1;

        r0 := @this: android.content.res.AssetFileDescriptor;

        $r1 = r0.<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor mFd>;

        return $r1;
    }

    public java.io.FileDescriptor getFileDescriptor()
    {
        android.content.res.AssetFileDescriptor r0;
        android.os.ParcelFileDescriptor $r1;
        java.io.FileDescriptor $r2;

        r0 := @this: android.content.res.AssetFileDescriptor;

        $r1 = r0.<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor mFd>;

        $r2 = virtualinvoke $r1.<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>();

        return $r2;
    }

    public long getStartOffset()
    {
        android.content.res.AssetFileDescriptor r0;
        long $l0;

        r0 := @this: android.content.res.AssetFileDescriptor;

        $l0 = r0.<android.content.res.AssetFileDescriptor: long mStartOffset>;

        return $l0;
    }

    public android.os.Bundle getExtras()
    {
        android.content.res.AssetFileDescriptor r0;
        android.os.Bundle $r1;

        r0 := @this: android.content.res.AssetFileDescriptor;

        $r1 = r0.<android.content.res.AssetFileDescriptor: android.os.Bundle mExtras>;

        return $r1;
    }

    public long getLength()
    {
        android.content.res.AssetFileDescriptor r0;
        long l0, $l1, $l4, $l5;
        byte $b2, $b3;
        android.os.ParcelFileDescriptor $r1;

        r0 := @this: android.content.res.AssetFileDescriptor;

        $l1 = r0.<android.content.res.AssetFileDescriptor: long mLength>;

        $b2 = $l1 cmp 0L;

        if $b2 < 0 goto label1;

        $l5 = r0.<android.content.res.AssetFileDescriptor: long mLength>;

        return $l5;

     label1:
        $r1 = r0.<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor mFd>;

        l0 = virtualinvoke $r1.<android.os.ParcelFileDescriptor: long getStatSize()>();

        $b3 = l0 cmp 0L;

        if $b3 < 0 goto label2;

        $l4 = l0;

        goto label3;

     label2:
        $l4 = -1L;

     label3:
        return $l4;
    }

    public long getDeclaredLength()
    {
        android.content.res.AssetFileDescriptor r0;
        long $l0;

        r0 := @this: android.content.res.AssetFileDescriptor;

        $l0 = r0.<android.content.res.AssetFileDescriptor: long mLength>;

        return $l0;
    }

    public void close() throws java.io.IOException
    {
        android.content.res.AssetFileDescriptor r0;
        android.os.ParcelFileDescriptor $r1;

        r0 := @this: android.content.res.AssetFileDescriptor;

        $r1 = r0.<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor mFd>;

        virtualinvoke $r1.<android.os.ParcelFileDescriptor: void close()>();

        return;
    }

    public java.io.FileInputStream createInputStream() throws java.io.IOException
    {
        android.content.res.AssetFileDescriptor r0;
        long $l0;
        byte $b1;
        android.content.res.AssetFileDescriptor$AutoCloseInputStream $r1;
        android.os.ParcelFileDescriptor$AutoCloseInputStream $r2;
        android.os.ParcelFileDescriptor $r3;

        r0 := @this: android.content.res.AssetFileDescriptor;

        $l0 = r0.<android.content.res.AssetFileDescriptor: long mLength>;

        $b1 = $l0 cmp 0L;

        if $b1 >= 0 goto label1;

        $r2 = new android.os.ParcelFileDescriptor$AutoCloseInputStream;

        $r3 = r0.<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor mFd>;

        specialinvoke $r2.<android.os.ParcelFileDescriptor$AutoCloseInputStream: void <init>(android.os.ParcelFileDescriptor)>($r3);

        return $r2;

     label1:
        $r1 = new android.content.res.AssetFileDescriptor$AutoCloseInputStream;

        specialinvoke $r1.<android.content.res.AssetFileDescriptor$AutoCloseInputStream: void <init>(android.content.res.AssetFileDescriptor)>(r0);

        return $r1;
    }

    public java.io.FileOutputStream createOutputStream() throws java.io.IOException
    {
        android.content.res.AssetFileDescriptor r0;
        long $l0;
        byte $b1;
        android.content.res.AssetFileDescriptor$AutoCloseOutputStream $r1;
        android.os.ParcelFileDescriptor$AutoCloseOutputStream $r2;
        android.os.ParcelFileDescriptor $r3;

        r0 := @this: android.content.res.AssetFileDescriptor;

        $l0 = r0.<android.content.res.AssetFileDescriptor: long mLength>;

        $b1 = $l0 cmp 0L;

        if $b1 >= 0 goto label1;

        $r2 = new android.os.ParcelFileDescriptor$AutoCloseOutputStream;

        $r3 = r0.<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor mFd>;

        specialinvoke $r2.<android.os.ParcelFileDescriptor$AutoCloseOutputStream: void <init>(android.os.ParcelFileDescriptor)>($r3);

        return $r2;

     label1:
        $r1 = new android.content.res.AssetFileDescriptor$AutoCloseOutputStream;

        specialinvoke $r1.<android.content.res.AssetFileDescriptor$AutoCloseOutputStream: void <init>(android.content.res.AssetFileDescriptor)>(r0);

        return $r1;
    }

    public java.lang.String toString()
    {
        android.content.res.AssetFileDescriptor r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r6, $r7, $r8, $r9;
        android.os.ParcelFileDescriptor $r3;
        long $l0, $l1;
        java.lang.String $r10;

        r0 := @this: android.content.res.AssetFileDescriptor;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{AssetFileDescriptor: ");

        $r3 = r0.<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor mFd>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" start=");

        $l0 = r0.<android.content.res.AssetFileDescriptor: long mStartOffset>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" len=");

        $l1 = r0.<android.content.res.AssetFileDescriptor: long mLength>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public int describeContents()
    {
        android.content.res.AssetFileDescriptor r0;
        android.os.ParcelFileDescriptor $r1;
        int $i0;

        r0 := @this: android.content.res.AssetFileDescriptor;

        $r1 = r0.<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor mFd>;

        $i0 = virtualinvoke $r1.<android.os.ParcelFileDescriptor: int describeContents()>();

        return $i0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.content.res.AssetFileDescriptor r0;
        android.os.Parcel r1;
        int i0;
        android.os.ParcelFileDescriptor $r2;
        long $l1, $l2;
        android.os.Bundle $r3, $r4;

        r0 := @this: android.content.res.AssetFileDescriptor;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r2 = r0.<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor mFd>;

        virtualinvoke $r2.<android.os.ParcelFileDescriptor: void writeToParcel(android.os.Parcel,int)>(r1, i0);

        $l1 = r0.<android.content.res.AssetFileDescriptor: long mStartOffset>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l1);

        $l2 = r0.<android.content.res.AssetFileDescriptor: long mLength>;

        virtualinvoke r1.<android.os.Parcel: void writeLong(long)>($l2);

        $r3 = r0.<android.content.res.AssetFileDescriptor: android.os.Bundle mExtras>;

        if $r3 == null goto label1;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r4 = r0.<android.content.res.AssetFileDescriptor: android.os.Bundle mExtras>;

        virtualinvoke r1.<android.os.Parcel: void writeBundle(android.os.Bundle)>($r4);

        goto label2;

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label2:
        return;
    }

    void <init>(android.os.Parcel)
    {
        android.content.res.AssetFileDescriptor r0;
        android.os.Parcel r1;
        android.os.Parcelable$Creator $r2;
        java.lang.Object $r3;
        android.os.ParcelFileDescriptor $r4;
        long $l0, $l1;
        int $i2;
        android.os.Bundle $r5;

        r0 := @this: android.content.res.AssetFileDescriptor;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <android.os.ParcelFileDescriptor: android.os.Parcelable$Creator CREATOR>;

        $r3 = interfaceinvoke $r2.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        $r4 = (android.os.ParcelFileDescriptor) $r3;

        r0.<android.content.res.AssetFileDescriptor: android.os.ParcelFileDescriptor mFd> = $r4;

        $l0 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.content.res.AssetFileDescriptor: long mStartOffset> = $l0;

        $l1 = virtualinvoke r1.<android.os.Parcel: long readLong()>();

        r0.<android.content.res.AssetFileDescriptor: long mLength> = $l1;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if $i2 == 0 goto label1;

        $r5 = virtualinvoke r1.<android.os.Parcel: android.os.Bundle readBundle()>();

        r0.<android.content.res.AssetFileDescriptor: android.os.Bundle mExtras> = $r5;

        goto label2;

     label1:
        r0.<android.content.res.AssetFileDescriptor: android.os.Bundle mExtras> = null;

     label2:
        return;
    }

    static void <clinit>()
    {
        android.content.res.AssetFileDescriptor$1 $r0;

        <android.content.res.AssetFileDescriptor: long UNKNOWN_LENGTH> = -1L;

        $r0 = new android.content.res.AssetFileDescriptor$1;

        specialinvoke $r0.<android.content.res.AssetFileDescriptor$1: void <init>()>();

        <android.content.res.AssetFileDescriptor: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }
}
