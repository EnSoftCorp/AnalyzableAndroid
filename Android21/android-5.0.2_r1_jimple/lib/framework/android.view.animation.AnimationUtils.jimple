public class android.view.animation.AnimationUtils extends java.lang.Object
{
    private static final int TOGETHER;
    private static final int SEQUENTIALLY;

    public void <init>()
    {
        android.view.animation.AnimationUtils r0;

        r0 := @this: android.view.animation.AnimationUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static long currentAnimationTimeMillis()
    {
        long $l0;

        $l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        return $l0;
    }

    public static android.view.animation.Animation loadAnimation(android.content.Context, int) throws android.content.res.Resources$NotFoundException
    {
        android.content.Context r0;
        int i0;
        android.content.res.XmlResourceParser r1;
        android.view.animation.Animation r2;
        android.content.res.Resources$NotFoundException r3, $r7, $r15, r25;
        java.lang.Throwable r4, $r13;
        android.content.res.Resources $r5;
        org.xmlpull.v1.XmlPullParserException $r6, r23;
        java.lang.StringBuilder $r8, $r9, $r11, $r17, $r18, $r19;
        java.lang.String $r10, $r12, $r20, $r22;
        java.io.IOException $r16, r24;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r1 = null;

     label1:
        $r5 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r5.<android.content.res.Resources: android.content.res.XmlResourceParser getAnimation(int)>(i0);

        r2 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Animation createAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser)>(r0, r1);

     label2:
        if r1 == null goto label3;

        interfaceinvoke r1.<android.content.res.XmlResourceParser: void close()>();

     label3:
        return r2;

     label4:
        $r6 := @caughtexception;

        r23 = $r6;

        $r7 = new android.content.res.Resources$NotFoundException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t load animation resource ID #0x");

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r12);

        r3 = $r7;

        virtualinvoke r3.<android.content.res.Resources$NotFoundException: java.lang.Throwable initCause(java.lang.Throwable)>(r23);

        throw r3;

     label5:
        $r16 := @caughtexception;

        r24 = $r16;

        $r15 = new android.content.res.Resources$NotFoundException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t load animation resource ID #0x");

        $r20 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r22);

        r25 = $r15;

        virtualinvoke r25.<android.content.res.Resources$NotFoundException: java.lang.Throwable initCause(java.lang.Throwable)>(r24);

        throw r25;

     label6:
        $r13 := @caughtexception;

        r4 = $r13;

     label7:
        if r1 == null goto label8;

        interfaceinvoke r1.<android.content.res.XmlResourceParser: void close()>();

     label8:
        throw r4;

        catch org.xmlpull.v1.XmlPullParserException from label1 to label2 with label4;
        catch java.io.IOException from label1 to label2 with label5;
        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label7 with label6;
    }

    private static android.view.animation.Animation createAnimationFromXml(android.content.Context, org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.Context r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.util.AttributeSet $r2;
        android.view.animation.Animation $r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $r2 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r1);

        $r3 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Animation createAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser,android.view.animation.AnimationSet,android.util.AttributeSet)>(r0, r1, null, $r2);

        return $r3;
    }

    private static android.view.animation.Animation createAnimationFromXml(android.content.Context, org.xmlpull.v1.XmlPullParser, android.view.animation.AnimationSet, android.util.AttributeSet) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.Context r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.view.animation.AnimationSet r2, $r16, $r17;
        android.util.AttributeSet r3;
        android.view.animation.Animation r4;
        int i0, i1, $i2, $i3;
        java.lang.String r5, $r8, $r10;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r6, $r9, $r11;
        java.lang.RuntimeException $r7;
        android.view.animation.RotateAnimation $r12;
        android.view.animation.TranslateAnimation $r13;
        android.view.animation.AlphaAnimation $r14;
        android.view.animation.ScaleAnimation $r15;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter2: android.view.animation.AnimationSet;

        r3 := @parameter3: android.util.AttributeSet;

        r4 = null;

        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label01:
        $i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        i0 = $i2;

        if $i2 != 3 goto label02;

        $i3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i3 <= i1 goto label11;

     label02:
        if i0 == 1 goto label11;

        if i0 == 2 goto label03;

        goto label01;

     label03:
        r5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("set");

        if $z0 == 0 goto label04;

        $r17 = new android.view.animation.AnimationSet;

        specialinvoke $r17.<android.view.animation.AnimationSet: void <init>(android.content.Context,android.util.AttributeSet)>(r0, r3);

        r4 = $r17;

        $r16 = (android.view.animation.AnimationSet) r4;

        staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Animation createAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser,android.view.animation.AnimationSet,android.util.AttributeSet)>(r0, r1, $r16, r3);

        goto label09;

     label04:
        $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("alpha");

        if $z1 == 0 goto label05;

        $r14 = new android.view.animation.AlphaAnimation;

        specialinvoke $r14.<android.view.animation.AlphaAnimation: void <init>(android.content.Context,android.util.AttributeSet)>(r0, r3);

        r4 = $r14;

        goto label09;

     label05:
        $z2 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("scale");

        if $z2 == 0 goto label06;

        $r15 = new android.view.animation.ScaleAnimation;

        specialinvoke $r15.<android.view.animation.ScaleAnimation: void <init>(android.content.Context,android.util.AttributeSet)>(r0, r3);

        r4 = $r15;

        goto label09;

     label06:
        $z3 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("rotate");

        if $z3 == 0 goto label07;

        $r12 = new android.view.animation.RotateAnimation;

        specialinvoke $r12.<android.view.animation.RotateAnimation: void <init>(android.content.Context,android.util.AttributeSet)>(r0, r3);

        r4 = $r12;

        goto label09;

     label07:
        $z4 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("translate");

        if $z4 == 0 goto label08;

        $r13 = new android.view.animation.TranslateAnimation;

        specialinvoke $r13.<android.view.animation.TranslateAnimation: void <init>(android.content.Context,android.util.AttributeSet)>(r0, r3);

        r4 = $r13;

        goto label09;

     label08:
        $r7 = new java.lang.RuntimeException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown animation name: ");

        $r8 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10);

        throw $r7;

     label09:
        if r2 == null goto label10;

        virtualinvoke r2.<android.view.animation.AnimationSet: void addAnimation(android.view.animation.Animation)>(r4);

     label10:
        goto label01;

     label11:
        return r4;
    }

    public static android.view.animation.LayoutAnimationController loadLayoutAnimation(android.content.Context, int) throws android.content.res.Resources$NotFoundException
    {
        android.content.Context r0;
        int i0;
        android.content.res.XmlResourceParser r1;
        android.view.animation.LayoutAnimationController r2;
        android.content.res.Resources$NotFoundException r3, $r8, $r15, r25;
        java.lang.Throwable r4, $r6;
        android.content.res.Resources $r5;
        java.io.IOException $r7, r24;
        java.lang.StringBuilder $r9, $r10, $r12, $r17, $r18, $r19;
        java.lang.String $r11, $r14, $r20, $r22;
        org.xmlpull.v1.XmlPullParserException $r16, r23;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r1 = null;

     label1:
        $r5 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r5.<android.content.res.Resources: android.content.res.XmlResourceParser getAnimation(int)>(i0);

        r2 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.LayoutAnimationController createLayoutAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser)>(r0, r1);

     label2:
        if r1 == null goto label3;

        interfaceinvoke r1.<android.content.res.XmlResourceParser: void close()>();

     label3:
        return r2;

     label4:
        $r16 := @caughtexception;

        r23 = $r16;

        $r15 = new android.content.res.Resources$NotFoundException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t load animation resource ID #0x");

        $r20 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r22);

        r3 = $r15;

        virtualinvoke r3.<android.content.res.Resources$NotFoundException: java.lang.Throwable initCause(java.lang.Throwable)>(r23);

        throw r3;

     label5:
        $r7 := @caughtexception;

        r24 = $r7;

        $r8 = new android.content.res.Resources$NotFoundException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t load animation resource ID #0x");

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r14);

        r25 = $r8;

        virtualinvoke r25.<android.content.res.Resources$NotFoundException: java.lang.Throwable initCause(java.lang.Throwable)>(r24);

        throw r25;

     label6:
        $r6 := @caughtexception;

        r4 = $r6;

     label7:
        if r1 == null goto label8;

        interfaceinvoke r1.<android.content.res.XmlResourceParser: void close()>();

     label8:
        throw r4;

        catch org.xmlpull.v1.XmlPullParserException from label1 to label2 with label4;
        catch java.io.IOException from label1 to label2 with label5;
        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label7 with label6;
    }

    private static android.view.animation.LayoutAnimationController createLayoutAnimationFromXml(android.content.Context, org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.Context r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.util.AttributeSet $r2;
        android.view.animation.LayoutAnimationController $r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        $r2 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r1);

        $r3 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.LayoutAnimationController createLayoutAnimationFromXml(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet)>(r0, r1, $r2);

        return $r3;
    }

    private static android.view.animation.LayoutAnimationController createLayoutAnimationFromXml(android.content.Context, org.xmlpull.v1.XmlPullParser, android.util.AttributeSet) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.Context r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.util.AttributeSet r2;
        android.view.animation.LayoutAnimationController r3, $r13;
        int i0, i1, $i2, $i3;
        java.lang.String r4, $r5, $r6, $r12;
        boolean $z0, $z1;
        java.lang.RuntimeException $r7;
        java.lang.StringBuilder $r8, $r9, $r10;
        android.view.animation.GridLayoutAnimationController $r11;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter2: android.util.AttributeSet;

        r3 = null;

        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        $i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        i0 = $i2;

        if $i2 != 3 goto label2;

        $i3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i3 <= i1 goto label7;

     label2:
        if i0 == 1 goto label7;

        if i0 == 2 goto label3;

        goto label1;

     label3:
        r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r5 = "layoutAnimation";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label4;

        $r13 = new android.view.animation.LayoutAnimationController;

        specialinvoke $r13.<android.view.animation.LayoutAnimationController: void <init>(android.content.Context,android.util.AttributeSet)>(r0, r2);

        r3 = $r13;

        goto label6;

     label4:
        $r6 = "gridLayoutAnimation";

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z1 == 0 goto label5;

        $r11 = new android.view.animation.GridLayoutAnimationController;

        specialinvoke $r11.<android.view.animation.GridLayoutAnimationController: void <init>(android.content.Context,android.util.AttributeSet)>(r0, r2);

        r3 = $r11;

        goto label6;

     label5:
        $r7 = new java.lang.RuntimeException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown layout animation name: ");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r12);

        throw $r7;

     label6:
        goto label1;

     label7:
        return r3;
    }

    public static android.view.animation.Animation makeInAnimation(android.content.Context, boolean)
    {
        android.content.Context r0;
        boolean z0;
        android.view.animation.Animation r1;
        android.view.animation.DecelerateInterpolator $r2;
        long $l0;

        r0 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        r1 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>(r0, 17432578);

        goto label2;

     label1:
        r1 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>(r0, 17432673);

     label2:
        $r2 = new android.view.animation.DecelerateInterpolator;

        specialinvoke $r2.<android.view.animation.DecelerateInterpolator: void <init>()>();

        virtualinvoke r1.<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>($r2);

        $l0 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        virtualinvoke r1.<android.view.animation.Animation: void setStartTime(long)>($l0);

        return r1;
    }

    public static android.view.animation.Animation makeOutAnimation(android.content.Context, boolean)
    {
        android.content.Context r0;
        boolean z0;
        android.view.animation.Animation r1;
        android.view.animation.AccelerateInterpolator $r2;
        long $l0;

        r0 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        r1 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>(r0, 17432579);

        goto label2;

     label1:
        r1 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>(r0, 17432676);

     label2:
        $r2 = new android.view.animation.AccelerateInterpolator;

        specialinvoke $r2.<android.view.animation.AccelerateInterpolator: void <init>()>();

        virtualinvoke r1.<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>($r2);

        $l0 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        virtualinvoke r1.<android.view.animation.Animation: void setStartTime(long)>($l0);

        return r1;
    }

    public static android.view.animation.Animation makeInChildBottomAnimation(android.content.Context)
    {
        android.content.Context r0;
        android.view.animation.Animation r1;
        android.view.animation.AccelerateInterpolator $r2;
        long $l0;

        r0 := @parameter0: android.content.Context;

        r1 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>(r0, 17432671);

        $r2 = new android.view.animation.AccelerateInterpolator;

        specialinvoke $r2.<android.view.animation.AccelerateInterpolator: void <init>()>();

        virtualinvoke r1.<android.view.animation.Animation: void setInterpolator(android.view.animation.Interpolator)>($r2);

        $l0 = staticinvoke <android.view.animation.AnimationUtils: long currentAnimationTimeMillis()>();

        virtualinvoke r1.<android.view.animation.Animation: void setStartTime(long)>($l0);

        return r1;
    }

    public static android.view.animation.Interpolator loadInterpolator(android.content.Context, int) throws android.content.res.Resources$NotFoundException
    {
        android.content.Context r0;
        int i0;
        android.content.res.XmlResourceParser r1;
        android.view.animation.Interpolator r2;
        android.content.res.Resources$NotFoundException r3, $r9, $r18, r27;
        java.lang.Throwable r4, $r23;
        android.content.res.Resources $r5, $r6;
        android.content.res.Resources$Theme $r7;
        org.xmlpull.v1.XmlPullParserException $r8, r25;
        java.lang.StringBuilder $r10, $r11, $r14, $r17, $r20, $r22;
        java.lang.String $r12, $r13, $r19, $r21;
        java.io.IOException $r15, r26;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r1 = null;

     label1:
        $r5 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r5.<android.content.res.Resources: android.content.res.XmlResourceParser getAnimation(int)>(i0);

        $r6 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $r7 = virtualinvoke r0.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        r2 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Interpolator createInterpolatorFromXml(android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)>($r6, $r7, r1);

     label2:
        if r1 == null goto label3;

        interfaceinvoke r1.<android.content.res.XmlResourceParser: void close()>();

     label3:
        return r2;

     label4:
        $r8 := @caughtexception;

        r25 = $r8;

        $r9 = new android.content.res.Resources$NotFoundException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t load animation resource ID #0x");

        $r12 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r13);

        r3 = $r9;

        virtualinvoke r3.<android.content.res.Resources$NotFoundException: java.lang.Throwable initCause(java.lang.Throwable)>(r25);

        throw r3;

     label5:
        $r15 := @caughtexception;

        r26 = $r15;

        $r18 = new android.content.res.Resources$NotFoundException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t load animation resource ID #0x");

        $r19 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r21);

        r27 = $r18;

        virtualinvoke r27.<android.content.res.Resources$NotFoundException: java.lang.Throwable initCause(java.lang.Throwable)>(r26);

        throw r27;

     label6:
        $r23 := @caughtexception;

        r4 = $r23;

     label7:
        if r1 == null goto label8;

        interfaceinvoke r1.<android.content.res.XmlResourceParser: void close()>();

     label8:
        throw r4;

        catch org.xmlpull.v1.XmlPullParserException from label1 to label2 with label4;
        catch java.io.IOException from label1 to label2 with label5;
        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label7 with label6;
    }

    public static android.view.animation.Interpolator loadInterpolator(android.content.res.Resources, android.content.res.Resources$Theme, int) throws android.content.res.Resources$NotFoundException
    {
        android.content.res.Resources r0;
        android.content.res.Resources$Theme r1;
        int i0;
        android.content.res.XmlResourceParser r2;
        android.view.animation.Interpolator r3;
        android.content.res.Resources$NotFoundException r4, $r7, $r15, r25;
        java.lang.Throwable r5, $r13;
        org.xmlpull.v1.XmlPullParserException $r6, r23;
        java.lang.StringBuilder $r8, $r9, $r11, $r17, $r18, $r19;
        java.lang.String $r10, $r12, $r20, $r22;
        java.io.IOException $r16, r24;

        r0 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: android.content.res.Resources$Theme;

        i0 := @parameter2: int;

        r2 = null;

     label1:
        r2 = virtualinvoke r0.<android.content.res.Resources: android.content.res.XmlResourceParser getAnimation(int)>(i0);

        r3 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Interpolator createInterpolatorFromXml(android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser)>(r0, r1, r2);

     label2:
        if r2 == null goto label3;

        interfaceinvoke r2.<android.content.res.XmlResourceParser: void close()>();

     label3:
        return r3;

     label4:
        $r6 := @caughtexception;

        r23 = $r6;

        $r7 = new android.content.res.Resources$NotFoundException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t load animation resource ID #0x");

        $r10 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r12);

        r4 = $r7;

        virtualinvoke r4.<android.content.res.Resources$NotFoundException: java.lang.Throwable initCause(java.lang.Throwable)>(r23);

        throw r4;

     label5:
        $r16 := @caughtexception;

        r24 = $r16;

        $r15 = new android.content.res.Resources$NotFoundException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t load animation resource ID #0x");

        $r20 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<android.content.res.Resources$NotFoundException: void <init>(java.lang.String)>($r22);

        r25 = $r15;

        virtualinvoke r25.<android.content.res.Resources$NotFoundException: java.lang.Throwable initCause(java.lang.Throwable)>(r24);

        throw r25;

     label6:
        $r13 := @caughtexception;

        r5 = $r13;

     label7:
        if r2 == null goto label8;

        interfaceinvoke r2.<android.content.res.XmlResourceParser: void close()>();

     label8:
        throw r5;

        catch org.xmlpull.v1.XmlPullParserException from label1 to label2 with label4;
        catch java.io.IOException from label1 to label2 with label5;
        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label4 to label7 with label6;
    }

    private static android.view.animation.Interpolator createInterpolatorFromXml(android.content.res.Resources, android.content.res.Resources$Theme, org.xmlpull.v1.XmlPullParser) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.content.res.Resources r0;
        android.content.res.Resources$Theme r1;
        org.xmlpull.v1.XmlPullParser r2;
        android.view.animation.Interpolator r3;
        int i0, i1, $i2, $i3;
        android.util.AttributeSet r4;
        java.lang.String r5, $r8, $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.lang.StringBuilder $r6, $r9, $r11;
        java.lang.RuntimeException $r7;
        android.view.animation.BounceInterpolator $r12;
        android.view.animation.PathInterpolator $r13;
        android.view.animation.OvershootInterpolator $r14;
        android.view.animation.AnticipateOvershootInterpolator $r15;
        android.view.animation.AccelerateDecelerateInterpolator $r16;
        android.view.animation.DecelerateInterpolator $r17;
        android.view.animation.AnticipateInterpolator $r18;
        android.view.animation.CycleInterpolator $r19;
        android.view.animation.AccelerateInterpolator $r20;
        android.view.animation.LinearInterpolator $r21;

        r0 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: android.content.res.Resources$Theme;

        r2 := @parameter2: org.xmlpull.v1.XmlPullParser;

        r3 = null;

        i1 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label01:
        $i2 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int next()>();

        i0 = $i2;

        if $i2 != 3 goto label02;

        $i3 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i3 <= i1 goto label15;

     label02:
        if i0 == 1 goto label15;

        if i0 == 2 goto label03;

        goto label01;

     label03:
        r4 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r2);

        r5 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $z0 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("linearInterpolator");

        if $z0 == 0 goto label04;

        $r21 = new android.view.animation.LinearInterpolator;

        specialinvoke $r21.<android.view.animation.LinearInterpolator: void <init>()>();

        r3 = $r21;

        goto label14;

     label04:
        $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("accelerateInterpolator");

        if $z1 == 0 goto label05;

        $r20 = new android.view.animation.AccelerateInterpolator;

        specialinvoke $r20.<android.view.animation.AccelerateInterpolator: void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet)>(r0, r1, r4);

        r3 = $r20;

        goto label14;

     label05:
        $z2 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("decelerateInterpolator");

        if $z2 == 0 goto label06;

        $r17 = new android.view.animation.DecelerateInterpolator;

        specialinvoke $r17.<android.view.animation.DecelerateInterpolator: void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet)>(r0, r1, r4);

        r3 = $r17;

        goto label14;

     label06:
        $z3 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("accelerateDecelerateInterpolator");

        if $z3 == 0 goto label07;

        $r16 = new android.view.animation.AccelerateDecelerateInterpolator;

        specialinvoke $r16.<android.view.animation.AccelerateDecelerateInterpolator: void <init>()>();

        r3 = $r16;

        goto label14;

     label07:
        $z5 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("cycleInterpolator");

        if $z5 == 0 goto label08;

        $r19 = new android.view.animation.CycleInterpolator;

        specialinvoke $r19.<android.view.animation.CycleInterpolator: void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet)>(r0, r1, r4);

        r3 = $r19;

        goto label14;

     label08:
        $z4 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("anticipateInterpolator");

        if $z4 == 0 goto label09;

        $r18 = new android.view.animation.AnticipateInterpolator;

        specialinvoke $r18.<android.view.animation.AnticipateInterpolator: void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet)>(r0, r1, r4);

        r3 = $r18;

        goto label14;

     label09:
        $z7 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("overshootInterpolator");

        if $z7 == 0 goto label10;

        $r14 = new android.view.animation.OvershootInterpolator;

        specialinvoke $r14.<android.view.animation.OvershootInterpolator: void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet)>(r0, r1, r4);

        r3 = $r14;

        goto label14;

     label10:
        $z6 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("anticipateOvershootInterpolator");

        if $z6 == 0 goto label11;

        $r15 = new android.view.animation.AnticipateOvershootInterpolator;

        specialinvoke $r15.<android.view.animation.AnticipateOvershootInterpolator: void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet)>(r0, r1, r4);

        r3 = $r15;

        goto label14;

     label11:
        $z9 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("bounceInterpolator");

        if $z9 == 0 goto label12;

        $r12 = new android.view.animation.BounceInterpolator;

        specialinvoke $r12.<android.view.animation.BounceInterpolator: void <init>()>();

        r3 = $r12;

        goto label14;

     label12:
        $z8 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("pathInterpolator");

        if $z8 == 0 goto label13;

        $r13 = new android.view.animation.PathInterpolator;

        specialinvoke $r13.<android.view.animation.PathInterpolator: void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet)>(r0, r1, r4);

        r3 = $r13;

        goto label14;

     label13:
        $r7 = new java.lang.RuntimeException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown interpolator name: ");

        $r8 = interfaceinvoke r2.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10);

        throw $r7;

     label14:
        goto label01;

     label15:
        return r3;
    }

    public static void <clinit>()
    {
        <android.view.animation.AnimationUtils: int SEQUENTIALLY> = 1;

        <android.view.animation.AnimationUtils: int TOGETHER> = 0;

        return;
    }
}
