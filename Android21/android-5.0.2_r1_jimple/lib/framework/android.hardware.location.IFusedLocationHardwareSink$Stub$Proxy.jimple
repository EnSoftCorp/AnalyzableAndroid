class android.hardware.location.IFusedLocationHardwareSink$Stub$Proxy extends java.lang.Object implements android.hardware.location.IFusedLocationHardwareSink
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.hardware.location.IFusedLocationHardwareSink$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.hardware.location.IFusedLocationHardwareSink$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.hardware.location.IFusedLocationHardwareSink$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.hardware.location.IFusedLocationHardwareSink$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.hardware.location.IFusedLocationHardwareSink$Stub$Proxy;

        $r1 = r0.<android.hardware.location.IFusedLocationHardwareSink$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.hardware.location.IFusedLocationHardwareSink$Stub$Proxy r0;

        r0 := @this: android.hardware.location.IFusedLocationHardwareSink$Stub$Proxy;

        return "android.hardware.location.IFusedLocationHardwareSink";
    }

    public void onLocationAvailable(android.location.Location[]) throws android.os.RemoteException
    {
        android.hardware.location.IFusedLocationHardwareSink$Stub$Proxy r0;
        android.location.Location[] r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: android.hardware.location.IFusedLocationHardwareSink$Stub$Proxy;

        r1 := @parameter0: android.location.Location[];

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.location.IFusedLocationHardwareSink");

        virtualinvoke r2.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r1, 0);

        $r5 = r0.<android.hardware.location.IFusedLocationHardwareSink$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void onDiagnosticDataAvailable(java.lang.String) throws android.os.RemoteException
    {
        android.hardware.location.IFusedLocationHardwareSink$Stub$Proxy r0;
        java.lang.String r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r6;
        android.os.IBinder $r5;

        r0 := @this: android.hardware.location.IFusedLocationHardwareSink$Stub$Proxy;

        r1 := @parameter0: java.lang.String;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.hardware.location.IFusedLocationHardwareSink");

        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>(r1);

        $r5 = r0.<android.hardware.location.IFusedLocationHardwareSink$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label2:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label5;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
}
