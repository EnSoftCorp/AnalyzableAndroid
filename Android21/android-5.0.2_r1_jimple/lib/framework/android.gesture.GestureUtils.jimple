public final class android.gesture.GestureUtils extends java.lang.Object
{
    private static final float SCALING_THRESHOLD;
    private static final float NONUNIFORM_SCALE;

    private void <init>()
    {
        android.gesture.GestureUtils r0;

        r0 := @this: android.gesture.GestureUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void closeStream(java.io.Closeable)
    {
        java.io.Closeable r0;
        java.io.IOException r1, $r2;

        r0 := @parameter0: java.io.Closeable;

        if r0 == null goto label4;

     label1:
        interfaceinvoke r0.<java.io.Closeable: void close()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("Gestures", "Could not close stream", r1);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static float[] spatialSampling(android.gesture.Gesture, int)
    {
        android.gesture.Gesture r0;
        int i0;
        float[] $r1;

        r0 := @parameter0: android.gesture.Gesture;

        i0 := @parameter1: int;

        $r1 = staticinvoke <android.gesture.GestureUtils: float[] spatialSampling(android.gesture.Gesture,int,boolean)>(r0, i0, 0);

        return $r1;
    }

    public static float[] spatialSampling(android.gesture.Gesture, int, boolean)
    {
        android.gesture.Gesture r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i12, $i16, $i27, $i31;
        boolean z0;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, f12, f13, f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, $f48, f49, f50, f51, f52, f53, f54, f55, f56, f57, f58, f59, f60, f61, f62, f63;
        float[] r1, r4, r6;
        android.graphics.RectF r2;
        java.util.ArrayList r3;
        android.gesture.GestureStroke r5;
        byte $b8, $b9, $b10, $b11, $b13, $b14, $b15, $b17, $b18, $b19, $b20, $b21, $b22, $b23, $b24, $b25, $b26, $b28, $b29, $b30;
        java.lang.Object $r7;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;

        r0 := @parameter0: android.gesture.Gesture;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $i6 = i0 - 1;

        f0 = (float) $i6;

        $i7 = i0 * i0;

        r1 = newarray (float)[$i7];

        staticinvoke <java.util.Arrays: void fill(float[],float)>(r1, 0.0F);

        r2 = virtualinvoke r0.<android.gesture.Gesture: android.graphics.RectF getBoundingBox()>();

        f1 = virtualinvoke r2.<android.graphics.RectF: float width()>();

        f2 = virtualinvoke r2.<android.graphics.RectF: float height()>();

        f3 = f0 / f1;

        f4 = f0 / f2;

        if z0 == 0 goto label03;

        $b28 = f3 cmpg f4;

        if $b28 >= 0 goto label01;

        $f46 = f3;

        goto label02;

     label01:
        $f46 = f4;

     label02:
        f5 = $f46;

        f3 = f5;

        f4 = f5;

        goto label10;

     label03:
        f49 = f1 / f2;

        $b8 = f49 cmpl 1.0F;

        if $b8 <= 0 goto label04;

        f49 = 1.0F / f49;

     label04:
        $b9 = f49 cmpg 0.26F;

        if $b9 >= 0 goto label07;

        $b30 = f3 cmpg f4;

        if $b30 >= 0 goto label05;

        $f47 = f3;

        goto label06;

     label05:
        $f47 = f4;

     label06:
        f6 = $f47;

        f3 = f6;

        f4 = f6;

        goto label10;

     label07:
        $b11 = f3 cmpl f4;

        if $b11 <= 0 goto label09;

        $f48 = <android.gesture.GestureUtils: float NONUNIFORM_SCALE>;

        f50 = f4 * $f48;

        $b29 = f50 cmpg f3;

        if $b29 >= 0 goto label08;

        f3 = f50;

     label08:
        goto label10;

     label09:
        $f16 = <android.gesture.GestureUtils: float NONUNIFORM_SCALE>;

        f51 = f3 * $f16;

        $b10 = f51 cmpg f4;

        if $b10 >= 0 goto label10;

        f4 = f51;

     label10:
        $f15 = virtualinvoke r2.<android.graphics.RectF: float centerX()>();

        f52 = neg $f15;

        $f17 = virtualinvoke r2.<android.graphics.RectF: float centerY()>();

        f53 = neg $f17;

        f7 = f0 / 2.0F;

        f8 = f0 / 2.0F;

        r3 = virtualinvoke r0.<android.gesture.Gesture: java.util.ArrayList getStrokes()>();

        i1 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        i3 = 0;

     label11:
        if i3 >= i1 goto label32;

        $r7 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        r5 = (android.gesture.GestureStroke) $r7;

        r4 = r5.<android.gesture.GestureStroke: float[] points>;

        i2 = lengthof r4;

        r6 = newarray (float)[i2];

        i4 = 0;

     label12:
        if i4 >= i2 goto label13;

        $f34 = r4[i4];

        $f44 = $f34 + f52;

        $f43 = $f44 * f3;

        $f45 = $f43 + f7;

        r6[i4] = $f45;

        $i31 = i4 + 1;

        $i27 = i4 + 1;

        $f40 = r4[$i27];

        $f39 = $f40 + f53;

        $f42 = $f39 * f4;

        $f41 = $f42 + f8;

        r6[$i31] = $f41;

        i4 = i4 + 2;

        goto label12;

     label13:
        f54 = -1.0F;

        f11 = -1.0F;

        i5 = 0;

     label14:
        if i5 >= i2 goto label31;

        $f19 = r6[i5];

        $b13 = $f19 cmpg 0.0F;

        if $b13 >= 0 goto label15;

        $f35 = 0.0F;

        goto label16;

     label15:
        $f35 = r6[i5];

     label16:
        f13 = $f35;

        $i12 = i5 + 1;

        $f18 = r6[$i12];

        $b17 = $f18 cmpg 0.0F;

        if $b17 >= 0 goto label17;

        $f32 = 0.0F;

        goto label18;

     label17:
        $i16 = i5 + 1;

        $f32 = r6[$i16];

     label18:
        f12 = $f32;

        $b15 = f13 cmpl f0;

        if $b15 <= 0 goto label19;

        f13 = f0;

     label19:
        $b14 = f12 cmpl f0;

        if $b14 <= 0 goto label20;

        f12 = f0;

     label20:
        staticinvoke <android.gesture.GestureUtils: void plot(float,float,float[],int)>(f13, f12, r1, i0);

        $b21 = f54 cmpl -1.0F;

        if $b21 == 0 goto label30;

        $b20 = f54 cmpl f13;

        if $b20 <= 0 goto label23;

        $d5 = (double) f13;

        $d6 = staticinvoke <java.lang.Math: double ceil(double)>($d5);

        f9 = (float) $d6;

        $f36 = f11 - f12;

        $f37 = f54 - f13;

        f14 = $f36 / $f37;

     label21:
        $b26 = f9 cmpg f54;

        if $b26 >= 0 goto label22;

        $f38 = f9 - f13;

        $f33 = f14 * $f38;

        f10 = $f33 + f12;

        staticinvoke <android.gesture.GestureUtils: void plot(float,float,float[],int)>(f9, f10, r1, i0);

        f9 = f9 + 1.0F;

        goto label21;

     label22:
        goto label25;

     label23:
        $b19 = f54 cmpg f13;

        if $b19 >= 0 goto label25;

        $d2 = (double) f54;

        $d7 = staticinvoke <java.lang.Math: double ceil(double)>($d2);

        f55 = (float) $d7;

        $f31 = f11 - f12;

        $f30 = f54 - f13;

        f56 = $f31 / $f30;

     label24:
        $b25 = f55 cmpg f13;

        if $b25 >= 0 goto label25;

        $f28 = f55 - f13;

        $f29 = f56 * $f28;

        f57 = $f29 + f12;

        staticinvoke <android.gesture.GestureUtils: void plot(float,float,float[],int)>(f55, f57, r1, i0);

        f55 = f55 + 1.0F;

        goto label24;

     label25:
        $b18 = f11 cmpl f12;

        if $b18 <= 0 goto label28;

        $d3 = (double) f12;

        $d4 = staticinvoke <java.lang.Math: double ceil(double)>($d3);

        f58 = (float) $d4;

        $f27 = f54 - f13;

        $f26 = f11 - f12;

        f59 = $f27 / $f26;

     label26:
        $b24 = f58 cmpg f11;

        if $b24 >= 0 goto label27;

        $f24 = f58 - f12;

        $f25 = f59 * $f24;

        f60 = $f25 + f13;

        staticinvoke <android.gesture.GestureUtils: void plot(float,float,float[],int)>(f60, f58, r1, i0);

        f58 = f58 + 1.0F;

        goto label26;

     label27:
        goto label30;

     label28:
        $b22 = f11 cmpg f12;

        if $b22 >= 0 goto label30;

        $d1 = (double) f11;

        $d0 = staticinvoke <java.lang.Math: double ceil(double)>($d1);

        f61 = (float) $d0;

        $f23 = f54 - f13;

        $f20 = f11 - f12;

        f62 = $f23 / $f20;

     label29:
        $b23 = f61 cmpg f12;

        if $b23 >= 0 goto label30;

        $f22 = f61 - f12;

        $f21 = f62 * $f22;

        f63 = $f21 + f13;

        staticinvoke <android.gesture.GestureUtils: void plot(float,float,float[],int)>(f63, f61, r1, i0);

        f61 = f61 + 1.0F;

        goto label29;

     label30:
        f54 = f13;

        f11 = f12;

        i5 = i5 + 2;

        goto label14;

     label31:
        i3 = i3 + 1;

        goto label11;

     label32:
        return r1;
    }

    private static void plot(float, float, float[], int)
    {
        float f0, f1, f2, f3, f4, f5, f6, f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, f27, f28, f29, f30, f31;
        float[] r0;
        int i0, i1, i2, i3, i4, i5, i7, $i11, $i13, $i14, $i16, $i20, i21, i22, i23;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, d23;
        byte $b6, $b8, $b9, $b10, $b12, $b15, $b17, $b18, $b19;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r0 := @parameter2: float[];

        i0 := @parameter3: int;

        $b6 = f0 cmpg 0.0F;

        if $b6 >= 0 goto label01;

        $f25 = 0.0F;

        goto label02;

     label01:
        $f25 = f0;

     label02:
        f27 = $f25;

        $b8 = f1 cmpg 0.0F;

        if $b8 >= 0 goto label03;

        $f24 = 0.0F;

        goto label04;

     label03:
        $f24 = f1;

     label04:
        f28 = $f24;

        $d3 = (double) f27;

        $d5 = staticinvoke <java.lang.Math: double floor(double)>($d3);

        i1 = (int) $d5;

        $d4 = (double) f27;

        $d7 = staticinvoke <java.lang.Math: double ceil(double)>($d4);

        i2 = (int) $d7;

        $d6 = (double) f28;

        $d9 = staticinvoke <java.lang.Math: double floor(double)>($d6);

        i3 = (int) $d9;

        $d8 = (double) f28;

        $d10 = staticinvoke <java.lang.Math: double ceil(double)>($d8);

        i4 = (int) $d10;

        $f9 = (float) i1;

        $b9 = f27 cmpl $f9;

        if $b9 != 0 goto label06;

        $f26 = (float) i3;

        $b19 = f28 cmpl $f26;

        if $b19 != 0 goto label06;

        $i20 = i4 * i0;

        i5 = $i20 + i2;

        $f23 = r0[i5];

        $b17 = $f23 cmpg 1.0F;

        if $b17 >= 0 goto label05;

        r0[i5] = 1.0F;

     label05:
        goto label10;

     label06:
        $f8 = (float) i1;

        $f11 = $f8 - f27;

        $d11 = (double) $f11;

        d23 = staticinvoke <java.lang.Math: double pow(double,double)>($d11, 2.0);

        $f10 = (float) i3;

        $f13 = $f10 - f28;

        $d12 = (double) $f13;

        d0 = staticinvoke <java.lang.Math: double pow(double,double)>($d12, 2.0);

        $f12 = (float) i2;

        $f15 = $f12 - f27;

        $d13 = (double) $f15;

        d1 = staticinvoke <java.lang.Math: double pow(double,double)>($d13, 2.0);

        $f14 = (float) i4;

        $f16 = $f14 - f28;

        $d15 = (double) $f16;

        d2 = staticinvoke <java.lang.Math: double pow(double,double)>($d15, 2.0);

        $d14 = d23 + d0;

        $d19 = staticinvoke <java.lang.Math: double sqrt(double)>($d14);

        f3 = (float) $d19;

        $d18 = d1 + d0;

        $d17 = staticinvoke <java.lang.Math: double sqrt(double)>($d18);

        f2 = (float) $d17;

        $d16 = d23 + d2;

        $d22 = staticinvoke <java.lang.Math: double sqrt(double)>($d16);

        f5 = (float) $d22;

        $d21 = d1 + d2;

        $d20 = staticinvoke <java.lang.Math: double sqrt(double)>($d21);

        f4 = (float) $d20;

        $f17 = f3 + f2;

        $f19 = $f17 + f5;

        f7 = $f19 + f4;

        f6 = f3 / f7;

        $i11 = i3 * i0;

        i7 = $i11 + i1;

        $f18 = r0[i7];

        $b10 = f6 cmpl $f18;

        if $b10 <= 0 goto label07;

        r0[i7] = f6;

     label07:
        f29 = f2 / f7;

        $i14 = i3 * i0;

        i21 = $i14 + i2;

        $f22 = r0[i21];

        $b15 = f29 cmpl $f22;

        if $b15 <= 0 goto label08;

        r0[i21] = f29;

     label08:
        f30 = f5 / f7;

        $i16 = i4 * i0;

        i22 = $i16 + i1;

        $f20 = r0[i22];

        $b12 = f30 cmpl $f20;

        if $b12 <= 0 goto label09;

        r0[i22] = f30;

     label09:
        f31 = f4 / f7;

        $i13 = i4 * i0;

        i23 = $i13 + i2;

        $f21 = r0[i23];

        $b18 = f31 cmpl $f21;

        if $b18 <= 0 goto label10;

        r0[i23] = f31;

     label10:
        return;
    }

    public static float[] temporalSampling(android.gesture.GestureStroke, int)
    {
        android.gesture.GestureStroke r0;
        int i0, i1, i3, i4, $i5, $i6, $i8, $i10, $i11, $i12, i13, i14, i15, i16;
        float f0, f1, f2, f3, f4, f5, f6, f7, f8, f9, f10, f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20;
        float[] r1, r2;
        byte b2, $b7, $b9;
        double $d0, $d1;

        r0 := @parameter0: android.gesture.GestureStroke;

        i0 := @parameter1: int;

        $f13 = r0.<android.gesture.GestureStroke: float length>;

        $i5 = i0 - 1;

        $f12 = (float) $i5;

        f0 = $f13 / $f12;

        i1 = i0 * 2;

        r1 = newarray (float)[i1];

        f1 = 0.0F;

        r2 = r0.<android.gesture.GestureStroke: float[] points>;

        f2 = r2[0];

        f3 = r2[1];

        b2 = 0;

        f4 = 1.4E-45F;

        f5 = 1.4E-45F;

        r1[b2] = f2;

        i13 = b2 + 1;

        r1[i13] = f3;

        i14 = i13 + 1;

        i3 = 0;

        $i6 = lengthof r2;

        i4 = $i6 / 2;

     label1:
        if i3 >= i4 goto label6;

        $b7 = f4 cmpl 1.4E-45F;

        if $b7 != 0 goto label3;

        i3 = i3 + 1;

        if i3 < i4 goto label2;

        goto label6;

     label2:
        $i11 = i3 * 2;

        f4 = r2[$i11];

        $i12 = i3 * 2;

        $i10 = $i12 + 1;

        f5 = r2[$i10];

     label3:
        f6 = f4 - f2;

        f7 = f5 - f3;

        $f14 = f6 * f6;

        $f15 = f7 * f7;

        $f16 = $f14 + $f15;

        $d0 = (double) $f16;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        f9 = (float) $d1;

        $f17 = f1 + f9;

        $b9 = $f17 cmpl f0;

        if $b9 < 0 goto label4;

        $f20 = f0 - f1;

        f8 = $f20 / f9;

        $f18 = f8 * f6;

        f11 = f2 + $f18;

        $f19 = f8 * f7;

        f10 = f3 + $f19;

        r1[i14] = f11;

        i15 = i14 + 1;

        r1[i15] = f10;

        i14 = i15 + 1;

        f2 = f11;

        f3 = f10;

        f1 = 0.0F;

        goto label5;

     label4:
        f2 = f4;

        f3 = f5;

        f4 = 1.4E-45F;

        f5 = 1.4E-45F;

        f1 = f1 + f9;

     label5:
        goto label1;

     label6:
        i16 = i14;

     label7:
        if i16 >= i1 goto label8;

        r1[i16] = f2;

        $i8 = i16 + 1;

        r1[$i8] = f3;

        i16 = i16 + 2;

        goto label7;

     label8:
        return r1;
    }

    static float[] computeCentroid(float[])
    {
        float[] r0, r1;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        int i0, i1, i2;

        r0 := @parameter0: float[];

        f0 = 0.0F;

        f1 = 0.0F;

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $f8 = r0[i1];

        f0 = f0 + $f8;

        i2 = i1 + 1;

        $f9 = r0[i2];

        f1 = f1 + $f9;

        i1 = i2 + 1;

        goto label1;

     label2:
        r1 = newarray (float)[2];

        $f3 = 2.0F * f0;

        $f2 = (float) i0;

        $f4 = $f3 / $f2;

        r1[0] = $f4;

        $f6 = 2.0F * f1;

        $f5 = (float) i0;

        $f7 = $f6 / $f5;

        r1[1] = $f7;

        return r1;
    }

    private static float[][] computeCoVariance(float[])
    {
        float[] r0, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        float[][] r1;
        int i0, i1, $i2, $i3, $i4, $i5, i6;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23;

        r0 := @parameter0: float[];

        r1 = newmultiarray (float)[2][2];

        $r2 = r1[0];

        $r2[0] = 0.0F;

        $r3 = r1[0];

        $r3[1] = 0.0F;

        $r4 = r1[1];

        $r4[0] = 0.0F;

        $r5 = r1[1];

        $r5[1] = 0.0F;

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        f0 = r0[i1];

        i6 = i1 + 1;

        f1 = r0[i6];

        $r10 = r1[0];

        $f16 = $r10[0];

        $f14 = f0 * f0;

        $f17 = $f16 + $f14;

        $r10[0] = $f17;

        $r11 = r1[0];

        $f19 = $r11[1];

        $f15 = f0 * f1;

        $f20 = $f19 + $f15;

        $r11[1] = $f20;

        $r13 = r1[1];

        $r12 = r1[0];

        $f18 = $r12[1];

        $r13[0] = $f18;

        $r14 = r1[1];

        $f22 = $r14[1];

        $f21 = f1 * f1;

        $f23 = $f22 + $f21;

        $r14[1] = $f23;

        i1 = i6 + 1;

        goto label1;

     label2:
        $r6 = r1[0];

        $f3 = $r6[0];

        $i2 = i0 / 2;

        $f2 = (float) $i2;

        $f4 = $f3 / $f2;

        $r6[0] = $f4;

        $r7 = r1[0];

        $f7 = $r7[1];

        $i3 = i0 / 2;

        $f5 = (float) $i3;

        $f6 = $f7 / $f5;

        $r7[1] = $f6;

        $r8 = r1[1];

        $f8 = $r8[0];

        $i4 = i0 / 2;

        $f9 = (float) $i4;

        $f10 = $f8 / $f9;

        $r8[0] = $f10;

        $r9 = r1[1];

        $f13 = $r9[1];

        $i5 = i0 / 2;

        $f11 = (float) $i5;

        $f12 = $f13 / $f11;

        $r9[1] = $f12;

        return r1;
    }

    static float computeTotalLength(float[])
    {
        float[] r0;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        int i0, i1, $i2, $i3, $i4, $i5;
        double $d0, $d1, $d2, $d3;

        r0 := @parameter0: float[];

        f0 = 0.0F;

        $i2 = lengthof r0;

        i0 = $i2 - 4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $i3 = i1 + 2;

        $f4 = r0[$i3];

        $f3 = r0[i1];

        f1 = $f4 - $f3;

        $i4 = i1 + 3;

        $f6 = r0[$i4];

        $i5 = i1 + 1;

        $f5 = r0[$i5];

        f2 = $f6 - $f5;

        $d2 = (double) f0;

        $f8 = f1 * f1;

        $f7 = f2 * f2;

        $f9 = $f8 + $f7;

        $d0 = (double) $f9;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $d3 = $d2 + $d1;

        f0 = (float) $d3;

        i1 = i1 + 2;

        goto label1;

     label2:
        return f0;
    }

    static float computeStraightness(float[])
    {
        float[] r0;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        double $d0, $d1;

        r0 := @parameter0: float[];

        f0 = staticinvoke <android.gesture.GestureUtils: float computeTotalLength(float[])>(r0);

        $f4 = r0[2];

        $f3 = r0[0];

        f1 = $f4 - $f3;

        $f6 = r0[3];

        $f5 = r0[1];

        f2 = $f6 - $f5;

        $f8 = f1 * f1;

        $f7 = f2 * f2;

        $f9 = $f8 + $f7;

        $d0 = (double) $f9;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f10 = (float) $d1;

        $f11 = $f10 / f0;

        return $f11;
    }

    static float computeStraightness(float[], float)
    {
        float[] r0;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        double $d0, $d1;

        r0 := @parameter0: float[];

        f0 := @parameter1: float;

        $f4 = r0[2];

        $f3 = r0[0];

        f1 = $f4 - $f3;

        $f6 = r0[3];

        $f5 = r0[1];

        f2 = $f6 - $f5;

        $f8 = f1 * f1;

        $f7 = f2 * f2;

        $f9 = $f8 + $f7;

        $d0 = (double) $f9;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f10 = (float) $d1;

        $f11 = $f10 / f0;

        return $f11;
    }

    static float squaredEuclideanDistance(float[], float[])
    {
        float[] r0, r1;
        float f0, f1, $f2, $f3, $f4, $f5, $f6;
        int i0, i1;

        r0 := @parameter0: float[];

        r1 := @parameter1: float[];

        f0 = 0.0F;

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $f5 = r0[i1];

        $f4 = r1[i1];

        f1 = $f5 - $f4;

        $f6 = f1 * f1;

        f0 = f0 + $f6;

        i1 = i1 + 1;

        goto label1;

     label2:
        $f2 = (float) i0;

        $f3 = f0 / $f2;

        return $f3;
    }

    static float cosineDistance(float[], float[])
    {
        float[] r0, r1;
        float f0, $f1, $f2, $f3, $f4;
        int i0, i1;
        double $d0, $d1;

        r0 := @parameter0: float[];

        r1 := @parameter1: float[];

        f0 = 0.0F;

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $f3 = r0[i1];

        $f2 = r1[i1];

        $f4 = $f3 * $f2;

        f0 = f0 + $f4;

        i1 = i1 + 1;

        goto label1;

     label2:
        $d0 = (double) f0;

        $d1 = staticinvoke <java.lang.Math: double acos(double)>($d0);

        $f1 = (float) $d1;

        return $f1;
    }

    static float minimumCosineDistance(float[], float[], int)
    {
        float[] r0, r1;
        int i0, i1, i2, $i5, $i6, $i7, $i8;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, f18;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15;
        byte $b3, $b4;

        r0 := @parameter0: float[];

        r1 := @parameter1: float[];

        i0 := @parameter2: int;

        i1 = lengthof r0;

        f0 = 0.0F;

        f1 = 0.0F;

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $f5 = r0[i2];

        $f4 = r1[i2];

        $f7 = $f5 * $f4;

        $i5 = i2 + 1;

        $f9 = r0[$i5];

        $i6 = i2 + 1;

        $f8 = r1[$i6];

        $f6 = $f9 * $f8;

        $f12 = $f7 + $f6;

        f0 = f0 + $f12;

        $f11 = r0[i2];

        $i7 = i2 + 1;

        $f10 = r1[$i7];

        $f17 = $f11 * $f10;

        $i8 = i2 + 1;

        $f13 = r0[$i8];

        $f15 = r1[i2];

        $f14 = $f13 * $f15;

        $f16 = $f17 - $f14;

        f1 = f1 + $f16;

        i2 = i2 + 2;

        goto label1;

     label2:
        $b3 = f0 cmpl 0.0F;

        if $b3 == 0 goto label4;

        f18 = f1 / f0;

        $d3 = (double) f18;

        d0 = staticinvoke <java.lang.Math: double atan(double)>($d3);

        if i0 <= 2 goto label3;

        $d11 = staticinvoke <java.lang.Math: double abs(double)>(d0);

        $d13 = (double) i0;

        $d12 = 3.141592653589793 / $d13;

        $b4 = $d11 cmpl $d12;

        if $b4 < 0 goto label3;

        $d14 = (double) f0;

        $d15 = staticinvoke <java.lang.Math: double acos(double)>($d14);

        $f3 = (float) $d15;

        return $f3;

     label3:
        d1 = staticinvoke <java.lang.Math: double cos(double)>(d0);

        $d4 = (double) f18;

        d2 = d1 * $d4;

        $d6 = (double) f0;

        $d7 = $d6 * d1;

        $d5 = (double) f1;

        $d8 = $d5 * d2;

        $d10 = $d7 + $d8;

        $d9 = staticinvoke <java.lang.Math: double acos(double)>($d10);

        $f2 = (float) $d9;

        return $f2;

     label4:
        return 1.5707964F;
    }

    public static android.gesture.OrientedBoundingBox computeOrientedBoundingBox(java.util.ArrayList)
    {
        java.util.ArrayList r0;
        int i0, i1, i2, $i3, $i4;
        float[] r1, r5;
        android.gesture.GesturePoint r2;
        android.gesture.OrientedBoundingBox $r3;
        java.lang.Object $r4;
        float $f0, $f1;

        r0 := @parameter0: java.util.ArrayList;

        i0 = virtualinvoke r0.<java.util.ArrayList: int size()>();

        $i3 = i0 * 2;

        r1 = newarray (float)[$i3];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r4 = virtualinvoke r0.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (android.gesture.GesturePoint) $r4;

        i2 = i1 * 2;

        $f0 = r2.<android.gesture.GesturePoint: float x>;

        r1[i2] = $f0;

        $i4 = i2 + 1;

        $f1 = r2.<android.gesture.GesturePoint: float y>;

        r1[$i4] = $f1;

        i1 = i1 + 1;

        goto label1;

     label2:
        r5 = staticinvoke <android.gesture.GestureUtils: float[] computeCentroid(float[])>(r1);

        $r3 = staticinvoke <android.gesture.GestureUtils: android.gesture.OrientedBoundingBox computeOrientedBoundingBox(float[],float[])>(r1, r5);

        return $r3;
    }

    public static android.gesture.OrientedBoundingBox computeOrientedBoundingBox(float[])
    {
        float[] r0, r1, r3;
        int i0, i1;
        android.gesture.OrientedBoundingBox $r2;
        float $f0;

        r0 := @parameter0: float[];

        i0 = lengthof r0;

        r1 = newarray (float)[i0];

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $f0 = r0[i1];

        r1[i1] = $f0;

        i1 = i1 + 1;

        goto label1;

     label2:
        r3 = staticinvoke <android.gesture.GestureUtils: float[] computeCentroid(float[])>(r1);

        $r2 = staticinvoke <android.gesture.GestureUtils: android.gesture.OrientedBoundingBox computeOrientedBoundingBox(float[],float[])>(r1, r3);

        return $r2;
    }

    private static android.gesture.OrientedBoundingBox computeOrientedBoundingBox(float[], float[])
    {
        float[] r0, r1, r3;
        float[][] r2;
        float f0, f1, f2, f3, f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23;
        int i0, i1, i8;
        byte $b2, $b3, $b4, $b5, $b6, $b7;
        double $d0, $d1, $d2, $d3, $d4;
        android.gesture.OrientedBoundingBox $r5;

        r0 := @parameter0: float[];

        r1 := @parameter1: float[];

        $f5 = r1[0];

        $f8 = neg $f5;

        $f6 = r1[1];

        $f7 = neg $f6;

        staticinvoke <android.gesture.GestureUtils: float[] translate(float[],float,float)>(r0, $f8, $f7);

        r2 = staticinvoke <android.gesture.GestureUtils: float[][] computeCoVariance(float[])>(r0);

        r3 = staticinvoke <android.gesture.GestureUtils: float[] computeOrientation(float[][])>(r2);

        $f9 = r3[0];

        $b2 = $f9 cmpl 0.0F;

        if $b2 != 0 goto label1;

        $f23 = r3[1];

        $b7 = $f23 cmpl 0.0F;

        if $b7 != 0 goto label1;

        f0 = -1.5707964F;

        goto label2;

     label1:
        $f11 = r3[1];

        $d0 = (double) $f11;

        $f10 = r3[0];

        $d1 = (double) $f10;

        $d2 = staticinvoke <java.lang.Math: double atan2(double,double)>($d0, $d1);

        f0 = (float) $d2;

        $f12 = neg f0;

        staticinvoke <android.gesture.GestureUtils: float[] rotate(float[],float)>(r0, $f12);

     label2:
        f1 = 3.4028235E38F;

        f2 = 3.4028235E38F;

        f3 = 1.4E-45F;

        f4 = 1.4E-45F;

        i0 = lengthof r0;

        i1 = 0;

     label3:
        if i1 >= i0 goto label8;

        $f20 = r0[i1];

        $b4 = $f20 cmpg f1;

        if $b4 >= 0 goto label4;

        f1 = r0[i1];

     label4:
        $f19 = r0[i1];

        $b3 = $f19 cmpl f3;

        if $b3 <= 0 goto label5;

        f3 = r0[i1];

     label5:
        i8 = i1 + 1;

        $f22 = r0[i8];

        $b6 = $f22 cmpg f2;

        if $b6 >= 0 goto label6;

        f2 = r0[i8];

     label6:
        $f21 = r0[i8];

        $b5 = $f21 cmpl f4;

        if $b5 <= 0 goto label7;

        f4 = r0[i8];

     label7:
        i1 = i8 + 1;

        goto label3;

     label8:
        $r5 = new android.gesture.OrientedBoundingBox;

        $f13 = f0 * 180.0F;

        $d3 = (double) $f13;

        $d4 = $d3 / 3.141592653589793;

        $f16 = (float) $d4;

        $f15 = r1[0];

        $f18 = r1[1];

        $f17 = f3 - f1;

        $f14 = f4 - f2;

        specialinvoke $r5.<android.gesture.OrientedBoundingBox: void <init>(float,float,float,float,float)>($f16, $f15, $f18, $f17, $f14);

        return $r5;
    }

    private static float[] computeOrientation(float[][])
    {
        float[][] r0;
        float[] r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        float f0, f1, f2, f3, f4, f5, f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24;
        byte $b0, $b1, $b2, $b3;
        double $d0, $d1, $d2, $d3, $d4;

        r0 := @parameter0: float[][];

        r1 = newarray (float)[2];

        $r2 = r0[0];

        $f7 = $r2[1];

        $b0 = $f7 cmpl 0.0F;

        if $b0 == 0 goto label1;

        $r11 = r0[1];

        $f24 = $r11[0];

        $b3 = $f24 cmpl 0.0F;

        if $b3 != 0 goto label2;

     label1:
        r1[0] = 1.0F;

        r1[1] = 0.0F;

     label2:
        $r3 = r0[0];

        $f8 = $r3[0];

        $f10 = neg $f8;

        $r4 = r0[1];

        $f9 = $r4[1];

        f0 = $f10 - $f9;

        $r5 = r0[0];

        $f12 = $r5[0];

        $r6 = r0[1];

        $f11 = $r6[1];

        $f16 = $f12 * $f11;

        $r7 = r0[0];

        $f15 = $r7[1];

        $r8 = r0[1];

        $f13 = $r8[0];

        $f14 = $f15 * $f13;

        f1 = $f16 - $f14;

        f2 = f0 / 2.0F;

        $d0 = (double) f2;

        $d2 = staticinvoke <java.lang.Math: double pow(double,double)>($d0, 2.0);

        $d1 = (double) f1;

        $d4 = $d2 - $d1;

        $d3 = staticinvoke <java.lang.Math: double sqrt(double)>($d4);

        f3 = (float) $d3;

        $f17 = neg f2;

        f4 = $f17 + f3;

        $f18 = neg f2;

        f5 = $f18 - f3;

        $b1 = f4 cmpl f5;

        if $b1 != 0 goto label3;

        r1[0] = 0.0F;

        r1[1] = 0.0F;

        goto label6;

     label3:
        $b2 = f4 cmpl f5;

        if $b2 <= 0 goto label4;

        $f21 = f4;

        goto label5;

     label4:
        $f21 = f5;

     label5:
        f6 = $f21;

        r1[0] = 1.0F;

        $r10 = r0[0];

        $f20 = $r10[0];

        $f22 = f6 - $f20;

        $r9 = r0[0];

        $f19 = $r9[1];

        $f23 = $f22 / $f19;

        r1[1] = $f23;

     label6:
        return r1;
    }

    static float[] rotate(float[], float)
    {
        float[] r0;
        float f0, f1, f2, f3, f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;
        int i0, i1, $i2, $i3, $i4;
        double $d0, $d1, $d2, $d3;

        r0 := @parameter0: float[];

        f0 := @parameter1: float;

        $d0 = (double) f0;

        $d1 = staticinvoke <java.lang.Math: double cos(double)>($d0);

        f1 = (float) $d1;

        $d2 = (double) f0;

        $d3 = staticinvoke <java.lang.Math: double sin(double)>($d2);

        f2 = (float) $d3;

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $f5 = r0[i1];

        $f9 = $f5 * f1;

        $i2 = i1 + 1;

        $f6 = r0[$i2];

        $f7 = $f6 * f2;

        f3 = $f9 - $f7;

        $f8 = r0[i1];

        $f11 = $f8 * f2;

        $i3 = i1 + 1;

        $f10 = r0[$i3];

        $f12 = $f10 * f1;

        f4 = $f11 + $f12;

        r0[i1] = f3;

        $i4 = i1 + 1;

        r0[$i4] = f4;

        i1 = i1 + 2;

        goto label1;

     label2:
        return r0;
    }

    static float[] translate(float[], float, float)
    {
        float[] r0;
        float f0, f1, $f2, $f3, $f4, $f5;
        int i0, i1, $i2;

        r0 := @parameter0: float[];

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $f2 = r0[i1];

        $f3 = $f2 + f0;

        r0[i1] = $f3;

        $i2 = i1 + 1;

        $f4 = r0[$i2];

        $f5 = $f4 + f1;

        r0[$i2] = $f5;

        i1 = i1 + 2;

        goto label1;

     label2:
        return r0;
    }

    static float[] scale(float[], float, float)
    {
        float[] r0;
        float f0, f1, $f2, $f3, $f4, $f5;
        int i0, i1, $i2;

        r0 := @parameter0: float[];

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $f2 = r0[i1];

        $f3 = $f2 * f0;

        r0[i1] = $f3;

        $i2 = i1 + 1;

        $f4 = r0[$i2];

        $f5 = $f4 * f1;

        r0[$i2] = $f5;

        i1 = i1 + 2;

        goto label1;

     label2:
        return r0;
    }

    static void <clinit>()
    {
        double $d0;
        float $f0;

        <android.gesture.GestureUtils: float SCALING_THRESHOLD> = 0.26F;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>(2.0);

        $f0 = (float) $d0;

        <android.gesture.GestureUtils: float NONUNIFORM_SCALE> = $f0;

        return;
    }
}
