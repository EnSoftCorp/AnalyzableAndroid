class android.hardware.camera2.impl.CameraCaptureSessionImpl$SequenceDrainListener extends java.lang.Object implements android.hardware.camera2.utils.TaskDrainer$DrainListener
{
    final android.hardware.camera2.impl.CameraCaptureSessionImpl this$0;

    private void <init>(android.hardware.camera2.impl.CameraCaptureSessionImpl)
    {
        android.hardware.camera2.impl.CameraCaptureSessionImpl$SequenceDrainListener r0;
        android.hardware.camera2.impl.CameraCaptureSessionImpl r1;

        r0 := @this: android.hardware.camera2.impl.CameraCaptureSessionImpl$SequenceDrainListener;

        r1 := @parameter0: android.hardware.camera2.impl.CameraCaptureSessionImpl;

        r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$SequenceDrainListener: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onDrained()
    {
        android.hardware.camera2.impl.CameraCaptureSessionImpl$SequenceDrainListener r0;
        boolean $z0;
        android.hardware.camera2.impl.CameraCaptureSessionImpl $r1, $r4;
        android.hardware.camera2.utils.TaskSingleDrainer $r2;
        java.lang.StringBuilder $r3, $r6, $r7;
        java.lang.String $r5, $r8;

        r0 := @this: android.hardware.camera2.impl.CameraCaptureSessionImpl$SequenceDrainListener;

        $z0 = staticinvoke <android.hardware.camera2.impl.CameraCaptureSessionImpl: boolean access$500()>();

        if $z0 == 0 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$SequenceDrainListener: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0>;

        $r5 = staticinvoke <android.hardware.camera2.impl.CameraCaptureSessionImpl: java.lang.String access$600(android.hardware.camera2.impl.CameraCaptureSessionImpl)>($r4);

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onSequenceDrained");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("CameraCaptureSession", $r8);

     label1:
        $r1 = r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$SequenceDrainListener: android.hardware.camera2.impl.CameraCaptureSessionImpl this$0>;

        $r2 = staticinvoke <android.hardware.camera2.impl.CameraCaptureSessionImpl: android.hardware.camera2.utils.TaskSingleDrainer access$1000(android.hardware.camera2.impl.CameraCaptureSessionImpl)>($r1);

        virtualinvoke $r2.<android.hardware.camera2.utils.TaskSingleDrainer: void beginDrain()>();

        return;
    }

    void <init>(android.hardware.camera2.impl.CameraCaptureSessionImpl, android.hardware.camera2.impl.CameraCaptureSessionImpl$1)
    {
        android.hardware.camera2.impl.CameraCaptureSessionImpl$SequenceDrainListener r0;
        android.hardware.camera2.impl.CameraCaptureSessionImpl r1;
        android.hardware.camera2.impl.CameraCaptureSessionImpl$1 r2;

        r0 := @this: android.hardware.camera2.impl.CameraCaptureSessionImpl$SequenceDrainListener;

        r1 := @parameter0: android.hardware.camera2.impl.CameraCaptureSessionImpl;

        r2 := @parameter1: android.hardware.camera2.impl.CameraCaptureSessionImpl$1;

        specialinvoke r0.<android.hardware.camera2.impl.CameraCaptureSessionImpl$SequenceDrainListener: void <init>(android.hardware.camera2.impl.CameraCaptureSessionImpl)>(r1);

        return;
    }
}
