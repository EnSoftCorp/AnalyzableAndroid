class com.android.internal.util.StateMachine$LogRecords extends java.lang.Object
{
    private static final int DEFAULT_SIZE;
    private java.util.Vector mLogRecVector;
    private int mMaxSize;
    private int mOldestIndex;
    private int mCount;
    private boolean mLogOnlyTransitions;

    private void <init>()
    {
        com.android.internal.util.StateMachine$LogRecords r0;
        java.util.Vector $r1;

        r0 := @this: com.android.internal.util.StateMachine$LogRecords;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>()>();

        r0.<com.android.internal.util.StateMachine$LogRecords: java.util.Vector mLogRecVector> = $r1;

        r0.<com.android.internal.util.StateMachine$LogRecords: int mMaxSize> = 20;

        r0.<com.android.internal.util.StateMachine$LogRecords: int mOldestIndex> = 0;

        r0.<com.android.internal.util.StateMachine$LogRecords: int mCount> = 0;

        r0.<com.android.internal.util.StateMachine$LogRecords: boolean mLogOnlyTransitions> = 0;

        return;
    }

    synchronized void setSize(int)
    {
        com.android.internal.util.StateMachine$LogRecords r0;
        int i0;
        java.util.Vector $r1;

        r0 := @this: com.android.internal.util.StateMachine$LogRecords;

        i0 := @parameter0: int;

        r0.<com.android.internal.util.StateMachine$LogRecords: int mMaxSize> = i0;

        r0.<com.android.internal.util.StateMachine$LogRecords: int mCount> = 0;

        $r1 = r0.<com.android.internal.util.StateMachine$LogRecords: java.util.Vector mLogRecVector>;

        virtualinvoke $r1.<java.util.Vector: void clear()>();

        return;
    }

    synchronized void setLogOnlyTransitions(boolean)
    {
        com.android.internal.util.StateMachine$LogRecords r0;
        boolean z0;

        r0 := @this: com.android.internal.util.StateMachine$LogRecords;

        z0 := @parameter0: boolean;

        r0.<com.android.internal.util.StateMachine$LogRecords: boolean mLogOnlyTransitions> = z0;

        return;
    }

    synchronized boolean logOnlyTransitions()
    {
        com.android.internal.util.StateMachine$LogRecords r0;
        boolean $z0;

        r0 := @this: com.android.internal.util.StateMachine$LogRecords;

        $z0 = r0.<com.android.internal.util.StateMachine$LogRecords: boolean mLogOnlyTransitions>;

        return $z0;
    }

    synchronized int size()
    {
        com.android.internal.util.StateMachine$LogRecords r0;
        java.util.Vector $r1;
        int $i0;

        r0 := @this: com.android.internal.util.StateMachine$LogRecords;

        $r1 = r0.<com.android.internal.util.StateMachine$LogRecords: java.util.Vector mLogRecVector>;

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        return $i0;
    }

    synchronized int count()
    {
        com.android.internal.util.StateMachine$LogRecords r0;
        int $i0;

        r0 := @this: com.android.internal.util.StateMachine$LogRecords;

        $i0 = r0.<com.android.internal.util.StateMachine$LogRecords: int mCount>;

        return $i0;
    }

    synchronized void cleanup()
    {
        com.android.internal.util.StateMachine$LogRecords r0;
        java.util.Vector $r1;

        r0 := @this: com.android.internal.util.StateMachine$LogRecords;

        $r1 = r0.<com.android.internal.util.StateMachine$LogRecords: java.util.Vector mLogRecVector>;

        virtualinvoke $r1.<java.util.Vector: void clear()>();

        return;
    }

    synchronized com.android.internal.util.StateMachine$LogRec get(int)
    {
        com.android.internal.util.StateMachine$LogRecords r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.util.Vector $r1;
        java.lang.Object $r2;
        com.android.internal.util.StateMachine$LogRec $r3;

        r0 := @this: com.android.internal.util.StateMachine$LogRecords;

        i0 := @parameter0: int;

        $i2 = r0.<com.android.internal.util.StateMachine$LogRecords: int mOldestIndex>;

        i1 = $i2 + i0;

        $i3 = r0.<com.android.internal.util.StateMachine$LogRecords: int mMaxSize>;

        if i1 < $i3 goto label1;

        $i5 = r0.<com.android.internal.util.StateMachine$LogRecords: int mMaxSize>;

        i1 = i1 - $i5;

     label1:
        $i4 = virtualinvoke r0.<com.android.internal.util.StateMachine$LogRecords: int size()>();

        if i1 < $i4 goto label2;

        return null;

     label2:
        $r1 = r0.<com.android.internal.util.StateMachine$LogRecords: java.util.Vector mLogRecVector>;

        $r2 = virtualinvoke $r1.<java.util.Vector: java.lang.Object get(int)>(i1);

        $r3 = (com.android.internal.util.StateMachine$LogRec) $r2;

        return $r3;
    }

    synchronized void add(com.android.internal.util.StateMachine, android.os.Message, java.lang.String, com.android.internal.util.IState, com.android.internal.util.IState, com.android.internal.util.IState)
    {
        com.android.internal.util.StateMachine$LogRecords r0;
        com.android.internal.util.StateMachine r1;
        android.os.Message r2;
        java.lang.String r3;
        com.android.internal.util.IState r4, r5, r6;
        com.android.internal.util.StateMachine$LogRec r7, $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.util.Vector $r8, $r9, $r11;
        java.lang.Object $r10;

        r0 := @this: com.android.internal.util.StateMachine$LogRecords;

        r1 := @parameter0: com.android.internal.util.StateMachine;

        r2 := @parameter1: android.os.Message;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: com.android.internal.util.IState;

        r5 := @parameter4: com.android.internal.util.IState;

        r6 := @parameter5: com.android.internal.util.IState;

        $i0 = r0.<com.android.internal.util.StateMachine$LogRecords: int mCount>;

        $i1 = $i0 + 1;

        r0.<com.android.internal.util.StateMachine$LogRecords: int mCount> = $i1;

        $r8 = r0.<com.android.internal.util.StateMachine$LogRecords: java.util.Vector mLogRecVector>;

        $i2 = virtualinvoke $r8.<java.util.Vector: int size()>();

        $i3 = r0.<com.android.internal.util.StateMachine$LogRecords: int mMaxSize>;

        if $i2 >= $i3 goto label1;

        $r11 = r0.<com.android.internal.util.StateMachine$LogRecords: java.util.Vector mLogRecVector>;

        $r12 = new com.android.internal.util.StateMachine$LogRec;

        specialinvoke $r12.<com.android.internal.util.StateMachine$LogRec: void <init>(com.android.internal.util.StateMachine,android.os.Message,java.lang.String,com.android.internal.util.IState,com.android.internal.util.IState,com.android.internal.util.IState)>(r1, r2, r3, r4, r5, r6);

        virtualinvoke $r11.<java.util.Vector: boolean add(java.lang.Object)>($r12);

        goto label3;

     label1:
        $r9 = r0.<com.android.internal.util.StateMachine$LogRecords: java.util.Vector mLogRecVector>;

        $i4 = r0.<com.android.internal.util.StateMachine$LogRecords: int mOldestIndex>;

        $r10 = virtualinvoke $r9.<java.util.Vector: java.lang.Object get(int)>($i4);

        r7 = (com.android.internal.util.StateMachine$LogRec) $r10;

        $i6 = r0.<com.android.internal.util.StateMachine$LogRecords: int mOldestIndex>;

        $i5 = $i6 + 1;

        r0.<com.android.internal.util.StateMachine$LogRecords: int mOldestIndex> = $i5;

        $i7 = r0.<com.android.internal.util.StateMachine$LogRecords: int mOldestIndex>;

        $i8 = r0.<com.android.internal.util.StateMachine$LogRecords: int mMaxSize>;

        if $i7 < $i8 goto label2;

        r0.<com.android.internal.util.StateMachine$LogRecords: int mOldestIndex> = 0;

     label2:
        virtualinvoke r7.<com.android.internal.util.StateMachine$LogRec: void update(com.android.internal.util.StateMachine,android.os.Message,java.lang.String,com.android.internal.util.IState,com.android.internal.util.IState,com.android.internal.util.IState)>(r1, r2, r3, r4, r5, r6);

     label3:
        return;
    }

    void <init>(com.android.internal.util.StateMachine$1)
    {
        com.android.internal.util.StateMachine$LogRecords r0;
        com.android.internal.util.StateMachine$1 r1;

        r0 := @this: com.android.internal.util.StateMachine$LogRecords;

        r1 := @parameter0: com.android.internal.util.StateMachine$1;

        specialinvoke r0.<com.android.internal.util.StateMachine$LogRecords: void <init>()>();

        return;
    }

    static java.util.Vector access$1700(com.android.internal.util.StateMachine$LogRecords)
    {
        com.android.internal.util.StateMachine$LogRecords r0;
        java.util.Vector $r1;

        r0 := @parameter0: com.android.internal.util.StateMachine$LogRecords;

        $r1 = r0.<com.android.internal.util.StateMachine$LogRecords: java.util.Vector mLogRecVector>;

        return $r1;
    }

    public static void <clinit>()
    {
        <com.android.internal.util.StateMachine$LogRecords: int DEFAULT_SIZE> = 20;

        return;
    }
}
