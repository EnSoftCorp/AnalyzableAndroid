public class android.database.CursorWindow extends android.database.sqlite.SQLiteClosable implements android.os.Parcelable
{
    private static final java.lang.String STATS_TAG;
    private static int sCursorWindowSize;
    public long mWindowPtr;
    private int mStartPos;
    private final java.lang.String mName;
    private final dalvik.system.CloseGuard mCloseGuard;
    public static final android.os.Parcelable$Creator CREATOR;
    private static final android.util.LongSparseArray sWindowToPidMap;

    private static native long nativeCreate(java.lang.String, int);

    private static native long nativeCreateFromParcel(android.os.Parcel);

    private static native void nativeDispose(long);

    private static native void nativeWriteToParcel(long, android.os.Parcel);

    private static native void nativeClear(long);

    private static native int nativeGetNumRows(long);

    private static native boolean nativeSetNumColumns(long, int);

    private static native boolean nativeAllocRow(long);

    private static native void nativeFreeLastRow(long);

    private static native int nativeGetType(long, int, int);

    private static native byte[] nativeGetBlob(long, int, int);

    private static native java.lang.String nativeGetString(long, int, int);

    private static native long nativeGetLong(long, int, int);

    private static native double nativeGetDouble(long, int, int);

    private static native void nativeCopyStringToBuffer(long, int, int, android.database.CharArrayBuffer);

    private static native boolean nativePutBlob(long, byte[], int, int);

    private static native boolean nativePutString(long, java.lang.String, int, int);

    private static native boolean nativePutLong(long, long, int, int);

    private static native boolean nativePutDouble(long, double, int, int);

    private static native boolean nativePutNull(long, int, int);

    private static native java.lang.String nativeGetName(long);

    public void <init>(java.lang.String)
    {
        android.database.CursorWindow r0;
        java.lang.String r1, $r3, $r9, $r11, $r14;
        dalvik.system.CloseGuard $r2, $r4;
        int $i0, $i1, $i5, $i7, $i8, $i9, $i10, $i11;
        long $l2, $l3, $l6;
        byte $b4;
        android.database.CursorWindowAllocationException $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r10, $r12;
        android.content.res.Resources $r13;

        r0 := @this: android.database.CursorWindow;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<android.database.sqlite.SQLiteClosable: void <init>()>();

        $r2 = staticinvoke <dalvik.system.CloseGuard: dalvik.system.CloseGuard get()>();

        r0.<android.database.CursorWindow: dalvik.system.CloseGuard mCloseGuard> = $r2;

        r0.<android.database.CursorWindow: int mStartPos> = 0;

        if r1 == null goto label1;

        $i10 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i10 == 0 goto label1;

        $r14 = r1;

        goto label2;

     label1:
        $r14 = "<unnamed>";

     label2:
        r0.<android.database.CursorWindow: java.lang.String mName> = $r14;

        $i0 = <android.database.CursorWindow: int sCursorWindowSize>;

        if $i0 >= 0 goto label3;

        $r13 = staticinvoke <android.content.res.Resources: android.content.res.Resources getSystem()>();

        $i9 = virtualinvoke $r13.<android.content.res.Resources: int getInteger(int)>(17694816);

        $i11 = $i9 * 1024;

        <android.database.CursorWindow: int sCursorWindowSize> = $i11;

     label3:
        $r3 = r0.<android.database.CursorWindow: java.lang.String mName>;

        $i1 = <android.database.CursorWindow: int sCursorWindowSize>;

        $l2 = staticinvoke <android.database.CursorWindow: long nativeCreate(java.lang.String,int)>($r3, $i1);

        r0.<android.database.CursorWindow: long mWindowPtr> = $l2;

        $l3 = r0.<android.database.CursorWindow: long mWindowPtr>;

        $b4 = $l3 cmp 0L;

        if $b4 != 0 goto label4;

        $r5 = new android.database.CursorWindowAllocationException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cursor window allocation of ");

        $i7 = <android.database.CursorWindow: int sCursorWindowSize>;

        $i8 = $i7 / 1024;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" kb failed. ");

        $r9 = specialinvoke r0.<android.database.CursorWindow: java.lang.String printStats()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<android.database.CursorWindowAllocationException: void <init>(java.lang.String)>($r11);

        throw $r5;

     label4:
        $r4 = r0.<android.database.CursorWindow: dalvik.system.CloseGuard mCloseGuard>;

        virtualinvoke $r4.<dalvik.system.CloseGuard: void open(java.lang.String)>("close");

        $i5 = staticinvoke <android.os.Binder: int getCallingPid()>();

        $l6 = r0.<android.database.CursorWindow: long mWindowPtr>;

        specialinvoke r0.<android.database.CursorWindow: void recordNewWindow(int,long)>($i5, $l6);

        return;
    }

    public void <init>(boolean)
    {
        android.database.CursorWindow r0;
        boolean z0;
        java.lang.String $r1;

        r0 := @this: android.database.CursorWindow;

        z0 := @parameter0: boolean;

        $r1 = (java.lang.String) null;

        specialinvoke r0.<android.database.CursorWindow: void <init>(java.lang.String)>($r1);

        return;
    }

    private void <init>(android.os.Parcel)
    {
        android.database.CursorWindow r0;
        android.os.Parcel r1;
        dalvik.system.CloseGuard $r2, $r4;
        int $i0;
        long $l1, $l2, $l4;
        byte $b3;
        java.lang.String $r3;
        android.database.CursorWindowAllocationException $r5;

        r0 := @this: android.database.CursorWindow;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<android.database.sqlite.SQLiteClosable: void <init>()>();

        $r2 = staticinvoke <dalvik.system.CloseGuard: dalvik.system.CloseGuard get()>();

        r0.<android.database.CursorWindow: dalvik.system.CloseGuard mCloseGuard> = $r2;

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.database.CursorWindow: int mStartPos> = $i0;

        $l1 = staticinvoke <android.database.CursorWindow: long nativeCreateFromParcel(android.os.Parcel)>(r1);

        r0.<android.database.CursorWindow: long mWindowPtr> = $l1;

        $l2 = r0.<android.database.CursorWindow: long mWindowPtr>;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label1;

        $r5 = new android.database.CursorWindowAllocationException;

        specialinvoke $r5.<android.database.CursorWindowAllocationException: void <init>(java.lang.String)>("Cursor window could not be created from binder.");

        throw $r5;

     label1:
        $l4 = r0.<android.database.CursorWindow: long mWindowPtr>;

        $r3 = staticinvoke <android.database.CursorWindow: java.lang.String nativeGetName(long)>($l4);

        r0.<android.database.CursorWindow: java.lang.String mName> = $r3;

        $r4 = r0.<android.database.CursorWindow: dalvik.system.CloseGuard mCloseGuard>;

        virtualinvoke $r4.<dalvik.system.CloseGuard: void open(java.lang.String)>("close");

        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.database.CursorWindow r0;
        java.lang.Throwable r1, $r4;
        dalvik.system.CloseGuard $r2, $r3;

        r0 := @this: android.database.CursorWindow;

     label1:
        $r2 = r0.<android.database.CursorWindow: dalvik.system.CloseGuard mCloseGuard>;

        if $r2 == null goto label2;

        $r3 = r0.<android.database.CursorWindow: dalvik.system.CloseGuard mCloseGuard>;

        virtualinvoke $r3.<dalvik.system.CloseGuard: void warnIfOpen()>();

     label2:
        specialinvoke r0.<android.database.CursorWindow: void dispose()>();

     label3:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        goto label6;

     label4:
        $r4 := @caughtexception;

        r1 = $r4;

     label5:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw r1;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void dispose()
    {
        android.database.CursorWindow r0;
        dalvik.system.CloseGuard $r1, $r2;
        long $l0, $l2, $l3;
        byte $b1;

        r0 := @this: android.database.CursorWindow;

        $r1 = r0.<android.database.CursorWindow: dalvik.system.CloseGuard mCloseGuard>;

        if $r1 == null goto label1;

        $r2 = r0.<android.database.CursorWindow: dalvik.system.CloseGuard mCloseGuard>;

        virtualinvoke $r2.<dalvik.system.CloseGuard: void close()>();

     label1:
        $l0 = r0.<android.database.CursorWindow: long mWindowPtr>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label2;

        $l2 = r0.<android.database.CursorWindow: long mWindowPtr>;

        specialinvoke r0.<android.database.CursorWindow: void recordClosingOfWindow(long)>($l2);

        $l3 = r0.<android.database.CursorWindow: long mWindowPtr>;

        staticinvoke <android.database.CursorWindow: void nativeDispose(long)>($l3);

        r0.<android.database.CursorWindow: long mWindowPtr> = 0L;

     label2:
        return;
    }

    public java.lang.String getName()
    {
        android.database.CursorWindow r0;
        java.lang.String $r1;

        r0 := @this: android.database.CursorWindow;

        $r1 = r0.<android.database.CursorWindow: java.lang.String mName>;

        return $r1;
    }

    public void clear()
    {
        android.database.CursorWindow r0;
        java.lang.Throwable r1, $r2;
        long $l0;

        r0 := @this: android.database.CursorWindow;

        virtualinvoke r0.<android.database.CursorWindow: void acquireReference()>();

     label1:
        r0.<android.database.CursorWindow: int mStartPos> = 0;

        $l0 = r0.<android.database.CursorWindow: long mWindowPtr>;

        staticinvoke <android.database.CursorWindow: void nativeClear(long)>($l0);

     label2:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        goto label5;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

     label4:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        throw r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int getStartPosition()
    {
        android.database.CursorWindow r0;
        int $i0;

        r0 := @this: android.database.CursorWindow;

        $i0 = r0.<android.database.CursorWindow: int mStartPos>;

        return $i0;
    }

    public void setStartPosition(int)
    {
        android.database.CursorWindow r0;
        int i0;

        r0 := @this: android.database.CursorWindow;

        i0 := @parameter0: int;

        r0.<android.database.CursorWindow: int mStartPos> = i0;

        return;
    }

    public int getNumRows()
    {
        android.database.CursorWindow r0;
        int i0;
        java.lang.Throwable r1, $r2;
        long $l1;

        r0 := @this: android.database.CursorWindow;

        virtualinvoke r0.<android.database.CursorWindow: void acquireReference()>();

     label1:
        $l1 = r0.<android.database.CursorWindow: long mWindowPtr>;

        i0 = staticinvoke <android.database.CursorWindow: int nativeGetNumRows(long)>($l1);

     label2:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        return i0;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

     label4:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean setNumColumns(int)
    {
        android.database.CursorWindow r0;
        int i0;
        boolean z0;
        java.lang.Throwable r1, $r2;
        long $l1;

        r0 := @this: android.database.CursorWindow;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.database.CursorWindow: void acquireReference()>();

     label1:
        $l1 = r0.<android.database.CursorWindow: long mWindowPtr>;

        z0 = staticinvoke <android.database.CursorWindow: boolean nativeSetNumColumns(long,int)>($l1, i0);

     label2:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        return z0;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

     label4:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean allocRow()
    {
        android.database.CursorWindow r0;
        boolean z0;
        java.lang.Throwable r1, $r2;
        long $l0;

        r0 := @this: android.database.CursorWindow;

        virtualinvoke r0.<android.database.CursorWindow: void acquireReference()>();

     label1:
        $l0 = r0.<android.database.CursorWindow: long mWindowPtr>;

        z0 = staticinvoke <android.database.CursorWindow: boolean nativeAllocRow(long)>($l0);

     label2:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        return z0;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

     label4:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void freeLastRow()
    {
        android.database.CursorWindow r0;
        java.lang.Throwable r1, $r2;
        long $l0;

        r0 := @this: android.database.CursorWindow;

        virtualinvoke r0.<android.database.CursorWindow: void acquireReference()>();

     label1:
        $l0 = r0.<android.database.CursorWindow: long mWindowPtr>;

        staticinvoke <android.database.CursorWindow: void nativeFreeLastRow(long)>($l0);

     label2:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        goto label5;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

     label4:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        throw r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean isNull(int, int)
    {
        android.database.CursorWindow r0;
        int i0, i1, $i2;
        boolean $z0;

        r0 := @this: android.database.CursorWindow;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = virtualinvoke r0.<android.database.CursorWindow: int getType(int,int)>(i0, i1);

        if $i2 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isBlob(int, int)
    {
        android.database.CursorWindow r0;
        int i0, i1, i2;
        boolean $z0;

        r0 := @this: android.database.CursorWindow;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = virtualinvoke r0.<android.database.CursorWindow: int getType(int,int)>(i0, i1);

        if i2 == 4 goto label1;

        if i2 != 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean isLong(int, int)
    {
        android.database.CursorWindow r0;
        int i0, i1, $i2;
        boolean $z0;

        r0 := @this: android.database.CursorWindow;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = virtualinvoke r0.<android.database.CursorWindow: int getType(int,int)>(i0, i1);

        if $i2 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isFloat(int, int)
    {
        android.database.CursorWindow r0;
        int i0, i1, $i2;
        boolean $z0;

        r0 := @this: android.database.CursorWindow;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = virtualinvoke r0.<android.database.CursorWindow: int getType(int,int)>(i0, i1);

        if $i2 != 2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isString(int, int)
    {
        android.database.CursorWindow r0;
        int i0, i1, i2;
        boolean $z0;

        r0 := @this: android.database.CursorWindow;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = virtualinvoke r0.<android.database.CursorWindow: int getType(int,int)>(i0, i1);

        if i2 == 3 goto label1;

        if i2 != 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public int getType(int, int)
    {
        android.database.CursorWindow r0;
        int i0, i1, i2, $i3, $i4;
        java.lang.Throwable r1, $r2;
        long $l5;

        r0 := @this: android.database.CursorWindow;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.database.CursorWindow: void acquireReference()>();

     label1:
        $l5 = r0.<android.database.CursorWindow: long mWindowPtr>;

        $i3 = r0.<android.database.CursorWindow: int mStartPos>;

        $i4 = i0 - $i3;

        i2 = staticinvoke <android.database.CursorWindow: int nativeGetType(long,int,int)>($l5, $i4, i1);

     label2:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        return i2;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

     label4:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public byte[] getBlob(int, int)
    {
        android.database.CursorWindow r0;
        int i0, i1, $i2, $i3;
        byte[] r1;
        java.lang.Throwable r2, $r3;
        long $l4;

        r0 := @this: android.database.CursorWindow;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.database.CursorWindow: void acquireReference()>();

     label1:
        $l4 = r0.<android.database.CursorWindow: long mWindowPtr>;

        $i2 = r0.<android.database.CursorWindow: int mStartPos>;

        $i3 = i0 - $i2;

        r1 = staticinvoke <android.database.CursorWindow: byte[] nativeGetBlob(long,int,int)>($l4, $i3, i1);

     label2:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        return r1;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.String getString(int, int)
    {
        android.database.CursorWindow r0;
        int i0, i1, $i2, $i3;
        java.lang.String r1;
        java.lang.Throwable r2, $r3;
        long $l4;

        r0 := @this: android.database.CursorWindow;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.database.CursorWindow: void acquireReference()>();

     label1:
        $l4 = r0.<android.database.CursorWindow: long mWindowPtr>;

        $i2 = r0.<android.database.CursorWindow: int mStartPos>;

        $i3 = i0 - $i2;

        r1 = staticinvoke <android.database.CursorWindow: java.lang.String nativeGetString(long,int,int)>($l4, $i3, i1);

     label2:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        return r1;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void copyStringToBuffer(int, int, android.database.CharArrayBuffer)
    {
        android.database.CursorWindow r0;
        int i0, i1, $i2, $i3;
        android.database.CharArrayBuffer r1;
        java.lang.Throwable r2, $r4;
        long $l4;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: android.database.CursorWindow;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.database.CharArrayBuffer;

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("CharArrayBuffer should not be null");

        throw $r3;

     label1:
        virtualinvoke r0.<android.database.CursorWindow: void acquireReference()>();

     label2:
        $l4 = r0.<android.database.CursorWindow: long mWindowPtr>;

        $i2 = r0.<android.database.CursorWindow: int mStartPos>;

        $i3 = i0 - $i2;

        staticinvoke <android.database.CursorWindow: void nativeCopyStringToBuffer(long,int,int,android.database.CharArrayBuffer)>($l4, $i3, i1, r1);

     label3:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        goto label6;

     label4:
        $r4 := @caughtexception;

        r2 = $r4;

     label5:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public long getLong(int, int)
    {
        android.database.CursorWindow r0;
        int i0, i1, $i3, $i4;
        long l2, $l5;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.database.CursorWindow;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.database.CursorWindow: void acquireReference()>();

     label1:
        $l5 = r0.<android.database.CursorWindow: long mWindowPtr>;

        $i3 = r0.<android.database.CursorWindow: int mStartPos>;

        $i4 = i0 - $i3;

        l2 = staticinvoke <android.database.CursorWindow: long nativeGetLong(long,int,int)>($l5, $i4, i1);

     label2:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        return l2;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

     label4:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public double getDouble(int, int)
    {
        android.database.CursorWindow r0;
        int i0, i1, $i2, $i3;
        double d0;
        java.lang.Throwable r1, $r2;
        long $l4;

        r0 := @this: android.database.CursorWindow;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.database.CursorWindow: void acquireReference()>();

     label1:
        $l4 = r0.<android.database.CursorWindow: long mWindowPtr>;

        $i2 = r0.<android.database.CursorWindow: int mStartPos>;

        $i3 = i0 - $i2;

        d0 = staticinvoke <android.database.CursorWindow: double nativeGetDouble(long,int,int)>($l4, $i3, i1);

     label2:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        return d0;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

     label4:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public short getShort(int, int)
    {
        android.database.CursorWindow r0;
        int i0, i1, $i3;
        long $l2;
        short $s4;

        r0 := @this: android.database.CursorWindow;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $l2 = virtualinvoke r0.<android.database.CursorWindow: long getLong(int,int)>(i0, i1);

        $i3 = (int) $l2;

        $s4 = (short) $i3;

        return $s4;
    }

    public int getInt(int, int)
    {
        android.database.CursorWindow r0;
        int i0, i1, $i3;
        long $l2;

        r0 := @this: android.database.CursorWindow;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $l2 = virtualinvoke r0.<android.database.CursorWindow: long getLong(int,int)>(i0, i1);

        $i3 = (int) $l2;

        return $i3;
    }

    public float getFloat(int, int)
    {
        android.database.CursorWindow r0;
        int i0, i1;
        double $d0;
        float $f0;

        r0 := @this: android.database.CursorWindow;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $d0 = virtualinvoke r0.<android.database.CursorWindow: double getDouble(int,int)>(i0, i1);

        $f0 = (float) $d0;

        return $f0;
    }

    public boolean putBlob(byte[], int, int)
    {
        android.database.CursorWindow r0;
        byte[] r1;
        int i0, i1, $i2, $i3;
        boolean z0;
        java.lang.Throwable r2, $r3;
        long $l4;

        r0 := @this: android.database.CursorWindow;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<android.database.CursorWindow: void acquireReference()>();

     label1:
        $l4 = r0.<android.database.CursorWindow: long mWindowPtr>;

        $i2 = r0.<android.database.CursorWindow: int mStartPos>;

        $i3 = i0 - $i2;

        z0 = staticinvoke <android.database.CursorWindow: boolean nativePutBlob(long,byte[],int,int)>($l4, r1, $i3, i1);

     label2:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        return z0;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean putString(java.lang.String, int, int)
    {
        android.database.CursorWindow r0;
        java.lang.String r1;
        int i0, i1, $i2, $i3;
        boolean z0;
        java.lang.Throwable r2, $r3;
        long $l4;

        r0 := @this: android.database.CursorWindow;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<android.database.CursorWindow: void acquireReference()>();

     label1:
        $l4 = r0.<android.database.CursorWindow: long mWindowPtr>;

        $i2 = r0.<android.database.CursorWindow: int mStartPos>;

        $i3 = i0 - $i2;

        z0 = staticinvoke <android.database.CursorWindow: boolean nativePutString(long,java.lang.String,int,int)>($l4, r1, $i3, i1);

     label2:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        return z0;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean putLong(long, int, int)
    {
        android.database.CursorWindow r0;
        long l0, $l5;
        int i1, i2, $i3, $i4;
        boolean z0;
        java.lang.Throwable r1, $r2;

        r0 := @this: android.database.CursorWindow;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        virtualinvoke r0.<android.database.CursorWindow: void acquireReference()>();

     label1:
        $l5 = r0.<android.database.CursorWindow: long mWindowPtr>;

        $i3 = r0.<android.database.CursorWindow: int mStartPos>;

        $i4 = i1 - $i3;

        z0 = staticinvoke <android.database.CursorWindow: boolean nativePutLong(long,long,int,int)>($l5, l0, $i4, i2);

     label2:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        return z0;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

     label4:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean putDouble(double, int, int)
    {
        android.database.CursorWindow r0;
        double d0;
        int i0, i1, $i2, $i3;
        boolean z0;
        java.lang.Throwable r1, $r2;
        long $l4;

        r0 := @this: android.database.CursorWindow;

        d0 := @parameter0: double;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        virtualinvoke r0.<android.database.CursorWindow: void acquireReference()>();

     label1:
        $l4 = r0.<android.database.CursorWindow: long mWindowPtr>;

        $i2 = r0.<android.database.CursorWindow: int mStartPos>;

        $i3 = i0 - $i2;

        z0 = staticinvoke <android.database.CursorWindow: boolean nativePutDouble(long,double,int,int)>($l4, d0, $i3, i1);

     label2:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        return z0;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

     label4:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean putNull(int, int)
    {
        android.database.CursorWindow r0;
        int i0, i1, $i2, $i3;
        boolean z0;
        java.lang.Throwable r1, $r2;
        long $l4;

        r0 := @this: android.database.CursorWindow;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.database.CursorWindow: void acquireReference()>();

     label1:
        $l4 = r0.<android.database.CursorWindow: long mWindowPtr>;

        $i2 = r0.<android.database.CursorWindow: int mStartPos>;

        $i3 = i0 - $i2;

        z0 = staticinvoke <android.database.CursorWindow: boolean nativePutNull(long,int,int)>($l4, $i3, i1);

     label2:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        return z0;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

     label4:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static android.database.CursorWindow newFromParcel(android.os.Parcel)
    {
        android.os.Parcel r0;
        android.os.Parcelable$Creator $r1;
        java.lang.Object $r2;
        android.database.CursorWindow $r3;

        r0 := @parameter0: android.os.Parcel;

        $r1 = <android.database.CursorWindow: android.os.Parcelable$Creator CREATOR>;

        $r2 = interfaceinvoke $r1.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r0);

        $r3 = (android.database.CursorWindow) $r2;

        return $r3;
    }

    public int describeContents()
    {
        android.database.CursorWindow r0;

        r0 := @this: android.database.CursorWindow;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.database.CursorWindow r0;
        android.os.Parcel r1;
        int i0, $i1, $i3;
        java.lang.Throwable r2, $r3;
        long $l2;

        r0 := @this: android.database.CursorWindow;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        virtualinvoke r0.<android.database.CursorWindow: void acquireReference()>();

     label1:
        $i1 = r0.<android.database.CursorWindow: int mStartPos>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $l2 = r0.<android.database.CursorWindow: long mWindowPtr>;

        staticinvoke <android.database.CursorWindow: void nativeWriteToParcel(long,android.os.Parcel)>($l2, r1);

     label2:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        goto label5;

     label3:
        $r3 := @caughtexception;

        r2 = $r3;

     label4:
        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

        throw r2;

     label5:
        $i3 = i0 & 1;

        if $i3 == 0 goto label6;

        virtualinvoke r0.<android.database.CursorWindow: void releaseReference()>();

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    protected void onAllReferencesReleased()
    {
        android.database.CursorWindow r0;

        r0 := @this: android.database.CursorWindow;

        specialinvoke r0.<android.database.CursorWindow: void dispose()>();

        return;
    }

    private void recordNewWindow(int, long)
    {
        android.database.CursorWindow r0;
        int i0;
        long l1;
        android.util.LongSparseArray r1, $r3, $r4;
        java.lang.Throwable r2, $r11;
        java.lang.Integer $r5;
        boolean $z0;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.lang.String $r8, $r10;

        r0 := @this: android.database.CursorWindow;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $r3 = <android.database.CursorWindow: android.util.LongSparseArray sWindowToPidMap>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = <android.database.CursorWindow: android.util.LongSparseArray sWindowToPidMap>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r4.<android.util.LongSparseArray: void put(long,java.lang.Object)>(l1, $r5);

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("CursorWindowStats", 2);

        if $z0 == 0 goto label2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Created a new Cursor. ");

        $r8 = specialinvoke r0.<android.database.CursorWindow: java.lang.String printStats()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("CursorWindowStats", $r10);

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r11 := @caughtexception;

        r2 = $r11;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void recordClosingOfWindow(long)
    {
        android.database.CursorWindow r0;
        long l0;
        android.util.LongSparseArray r1, $r3, $r4, $r5;
        java.lang.Throwable r2, $r6;
        int $i1;

        r0 := @this: android.database.CursorWindow;

        l0 := @parameter0: long;

        $r3 = <android.database.CursorWindow: android.util.LongSparseArray sWindowToPidMap>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = <android.database.CursorWindow: android.util.LongSparseArray sWindowToPidMap>;

        $i1 = virtualinvoke $r4.<android.util.LongSparseArray: int size()>();

        if $i1 != 0 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r5 = <android.database.CursorWindow: android.util.LongSparseArray sWindowToPidMap>;

        virtualinvoke $r5.<android.util.LongSparseArray: void delete(long)>(l0);

        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label6:
        throw r2;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private java.lang.String printStats()
    {
        android.database.CursorWindow r0;
        java.lang.StringBuilder r1, $r5, $r9, $r11, $r12, $r14, $r16, $r17, $r18, $r20, $r22, $r24, $r25;
        int i0, i1, i2, i3, i4, i5, $i6, i7, i8, i9, i10, i11;
        android.util.SparseIntArray r2, $r6;
        android.util.LongSparseArray r3, $r7, $r8, $r26;
        java.lang.Throwable r4, $r31;
        java.lang.String $r10, $r13, $r21, $r23, r32;
        java.lang.Object $r27;
        java.lang.Integer $r30;

        r0 := @this: android.database.CursorWindow;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        r1 = $r5;

        i0 = staticinvoke <android.os.Process: int myPid()>();

        i1 = 0;

        $r6 = new android.util.SparseIntArray;

        specialinvoke $r6.<android.util.SparseIntArray: void <init>()>();

        r2 = $r6;

        $r7 = <android.database.CursorWindow: android.util.LongSparseArray sWindowToPidMap>;

        r3 = $r7;

        entermonitor $r7;

     label01:
        $r8 = <android.database.CursorWindow: android.util.LongSparseArray sWindowToPidMap>;

        i2 = virtualinvoke $r8.<android.util.LongSparseArray: int size()>();

        if i2 != 0 goto label03;

        exitmonitor r3;

     label02:
        return "";

     label03:
        i3 = 0;

     label04:
        if i3 >= i2 goto label05;

        $r26 = <android.database.CursorWindow: android.util.LongSparseArray sWindowToPidMap>;

        $r27 = virtualinvoke $r26.<android.util.LongSparseArray: java.lang.Object valueAt(int)>(i3);

        $r30 = (java.lang.Integer) $r27;

        i4 = virtualinvoke $r30.<java.lang.Integer: int intValue()>();

        i5 = virtualinvoke r2.<android.util.SparseIntArray: int get(int)>(i4);

        i7 = i5 + 1;

        virtualinvoke r2.<android.util.SparseIntArray: void put(int,int)>(i4, i7);

        i3 = i3 + 1;

        goto label04;

     label05:
        exitmonitor r3;

     label06:
        goto label09;

     label07:
        $r31 := @caughtexception;

        r4 = $r31;

        exitmonitor r3;

     label08:
        throw r4;

     label09:
        i8 = virtualinvoke r2.<android.util.SparseIntArray: int size()>();

        i9 = 0;

     label10:
        if i9 >= i8 goto label13;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (# cursors opened by ");

        i10 = virtualinvoke r2.<android.util.SparseIntArray: int keyAt(int)>(i9);

        if i10 != i0 goto label11;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("this proc=");

        goto label12;

     label11:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("pid ");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i10);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

     label12:
        i11 = virtualinvoke r2.<android.util.SparseIntArray: int get(int)>(i10);

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11);

        $r22 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        i1 = i1 + i11;

        i9 = i9 + 1;

        goto label10;

     label13:
        $i6 = virtualinvoke r1.<java.lang.StringBuilder: int length()>();

        if $i6 <= 980 goto label14;

        $r10 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String substring(int,int)>(0, 980);

        goto label15;

     label14:
        $r10 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label15:
        r32 = $r10;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("# Open Cursors=");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r32);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;

        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Throwable from label03 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    public java.lang.String toString()
    {
        android.database.CursorWindow r0;
        java.lang.StringBuilder $r1, $r3, $r4, $r6, $r7;
        java.lang.String $r2, $r5, $r8;
        long $l0;

        r0 := @this: android.database.CursorWindow;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<android.database.CursorWindow: java.lang.String getName()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" {");

        $l0 = r0.<android.database.CursorWindow: long mWindowPtr>;

        $r5 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l0);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    void <init>(android.os.Parcel, android.database.CursorWindow$1)
    {
        android.database.CursorWindow r0;
        android.os.Parcel r1;
        android.database.CursorWindow$1 r2;

        r0 := @this: android.database.CursorWindow;

        r1 := @parameter0: android.os.Parcel;

        r2 := @parameter1: android.database.CursorWindow$1;

        specialinvoke r0.<android.database.CursorWindow: void <init>(android.os.Parcel)>(r1);

        return;
    }

    static void <clinit>()
    {
        android.database.CursorWindow$1 $r0;
        android.util.LongSparseArray $r1;

        <android.database.CursorWindow: java.lang.String STATS_TAG> = "CursorWindowStats";

        <android.database.CursorWindow: int sCursorWindowSize> = -1;

        $r0 = new android.database.CursorWindow$1;

        specialinvoke $r0.<android.database.CursorWindow$1: void <init>()>();

        <android.database.CursorWindow: android.os.Parcelable$Creator CREATOR> = $r0;

        $r1 = new android.util.LongSparseArray;

        specialinvoke $r1.<android.util.LongSparseArray: void <init>()>();

        <android.database.CursorWindow: android.util.LongSparseArray sWindowToPidMap> = $r1;

        return;
    }
}
