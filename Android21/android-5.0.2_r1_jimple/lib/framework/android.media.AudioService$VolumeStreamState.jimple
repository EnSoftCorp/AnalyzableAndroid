public class android.media.AudioService$VolumeStreamState extends java.lang.Object
{
    private final int mStreamType;
    private java.lang.String mVolumeIndexSettingName;
    private int mIndexMax;
    private final java.util.concurrent.ConcurrentHashMap mIndex;
    private java.util.ArrayList mDeathHandlers;
    final android.media.AudioService this$0;

    private void <init>(android.media.AudioService, java.lang.String, int)
    {
        android.media.AudioService$VolumeStreamState r0;
        android.media.AudioService r1;
        java.lang.String r2;
        int i0, $i1, $i2, $i4, $i5;
        java.util.concurrent.ConcurrentHashMap $r3;
        int[] $r4;
        java.util.ArrayList $r5;

        r0 := @this: android.media.AudioService$VolumeStreamState;

        r1 := @parameter0: android.media.AudioService;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r0.<android.media.AudioService$VolumeStreamState: android.media.AudioService this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r3.<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>(8, 0.75F, 4);

        r0.<android.media.AudioService$VolumeStreamState: java.util.concurrent.ConcurrentHashMap mIndex> = $r3;

        r0.<android.media.AudioService$VolumeStreamState: java.lang.String mVolumeIndexSettingName> = r2;

        r0.<android.media.AudioService$VolumeStreamState: int mStreamType> = i0;

        $r4 = staticinvoke <android.media.AudioService: int[] access$4000()>();

        $i1 = $r4[i0];

        r0.<android.media.AudioService$VolumeStreamState: int mIndexMax> = $i1;

        $i2 = r0.<android.media.AudioService$VolumeStreamState: int mIndexMax>;

        staticinvoke <android.media.AudioSystem: int initStreamVolume(int,int,int)>(i0, 0, $i2);

        $i4 = r0.<android.media.AudioService$VolumeStreamState: int mIndexMax>;

        $i5 = $i4 * 10;

        r0.<android.media.AudioService$VolumeStreamState: int mIndexMax> = $i5;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<android.media.AudioService$VolumeStreamState: java.util.ArrayList mDeathHandlers> = $r5;

        virtualinvoke r0.<android.media.AudioService$VolumeStreamState: void readSettings()>();

        return;
    }

    public java.lang.String getSettingNameForDevice(int)
    {
        android.media.AudioService$VolumeStreamState r0;
        int i0;
        java.lang.String r1, r2, $r7;
        boolean $z0;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;

        r0 := @this: android.media.AudioService$VolumeStreamState;

        i0 := @parameter0: int;

        r1 = r0.<android.media.AudioService$VolumeStreamState: java.lang.String mVolumeIndexSettingName>;

        r2 = staticinvoke <android.media.AudioSystem: java.lang.String getOutputDeviceName(int)>(i0);

        $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return r1;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public void readSettings()
    {
        android.media.AudioService$VolumeStreamState r0;
        java.lang.Class r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16;
        java.lang.Boolean r2, $r10, $r11;
        java.lang.Throwable r3, r5, $r27, $r28;
        java.lang.String r4;
        android.media.AudioService $r6, $r8, $r9, $r16;
        boolean $z0, $z1;
        int[] $r7, $r23;
        java.util.concurrent.ConcurrentHashMap $r12, $r17, $r22;
        java.lang.Integer $r13, $r14, $r18, $r20, $r24, $r26;
        android.content.ContentResolver $r19;

        r0 := @this: android.media.AudioService$VolumeStreamState;

        r1 = class "android/media/AudioService$VolumeStreamState";

        entermonitor class "android/media/AudioService$VolumeStreamState";

     label01:
        $r6 = r0.<android.media.AudioService$VolumeStreamState: android.media.AudioService this$0>;

        $z0 = staticinvoke <android.media.AudioService: boolean access$4100(android.media.AudioService)>($r6);

        if $z0 == 0 goto label03;

        $r22 = r0.<android.media.AudioService$VolumeStreamState: java.util.concurrent.ConcurrentHashMap mIndex>;

        $r26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1073741824);

        $i13 = r0.<android.media.AudioService$VolumeStreamState: int mIndexMax>;

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i13);

        virtualinvoke $r22.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r26, $r24);

        exitmonitor r1;

     label02:
        return;

     label03:
        $i3 = r0.<android.media.AudioService$VolumeStreamState: int mStreamType>;

        if $i3 == 1 goto label04;

        $i6 = r0.<android.media.AudioService$VolumeStreamState: int mStreamType>;

        if $i6 != 7 goto label12;

     label04:
        $r7 = <android.media.AudioManager: int[] DEFAULT_STREAM_VOLUME>;

        $i4 = r0.<android.media.AudioService$VolumeStreamState: int mStreamType>;

        $i5 = $r7[$i4];

        i0 = 10 * $i5;

        $r8 = r0.<android.media.AudioService$VolumeStreamState: android.media.AudioService this$0>;

        $r10 = staticinvoke <android.media.AudioService: java.lang.Boolean access$4200(android.media.AudioService)>($r8);

        r2 = $r10;

        entermonitor $r10;

     label05:
        $r9 = r0.<android.media.AudioService$VolumeStreamState: android.media.AudioService this$0>;

        $r11 = staticinvoke <android.media.AudioService: java.lang.Boolean access$4200(android.media.AudioService)>($r9);

        $z1 = virtualinvoke $r11.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label06;

        i0 = r0.<android.media.AudioService$VolumeStreamState: int mIndexMax>;

     label06:
        exitmonitor r2;

     label07:
        goto label10;

     label08:
        $r27 := @caughtexception;

        r3 = $r27;

        exitmonitor r2;

     label09:
        throw r3;

     label10:
        $r12 = r0.<android.media.AudioService$VolumeStreamState: java.util.concurrent.ConcurrentHashMap mIndex>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1073741824);

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r12.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r13);

        exitmonitor r1;

     label11:
        return;

     label12:
        i14 = 1077936127;

        i15 = 0;

     label13:
        if i14 == 0 goto label19;

        i16 = 1 << i15;

        $i8 = i16 & i14;

        if $i8 != 0 goto label14;

        goto label18;

     label14:
        $i7 = i16 ^ -1;

        i14 = i14 & $i7;

        r4 = virtualinvoke r0.<android.media.AudioService$VolumeStreamState: java.lang.String getSettingNameForDevice(int)>(i16);

        if i16 != 1073741824 goto label15;

        $r23 = <android.media.AudioManager: int[] DEFAULT_STREAM_VOLUME>;

        $i12 = r0.<android.media.AudioService$VolumeStreamState: int mStreamType>;

        $i11 = $r23[$i12];

        goto label16;

     label15:
        $i11 = -1;

     label16:
        i1 = $i11;

        $r16 = r0.<android.media.AudioService$VolumeStreamState: android.media.AudioService this$0>;

        $r19 = staticinvoke <android.media.AudioService: android.content.ContentResolver access$2900(android.media.AudioService)>($r16);

        i2 = staticinvoke <android.provider.Settings$System: int getIntForUser(android.content.ContentResolver,java.lang.String,int,int)>($r19, r4, i1, -2);

        if i2 != -1 goto label17;

        goto label18;

     label17:
        $r17 = r0.<android.media.AudioService$VolumeStreamState: java.util.concurrent.ConcurrentHashMap mIndex>;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i16);

        $i9 = 10 * i2;

        $i10 = specialinvoke r0.<android.media.AudioService$VolumeStreamState: int getValidIndex(int)>($i9);

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        virtualinvoke $r17.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, $r20);

     label18:
        i15 = i15 + 1;

        goto label13;

     label19:
        exitmonitor r1;

     label20:
        goto label23;

     label21:
        $r28 := @caughtexception;

        r5 = $r28;

        exitmonitor r1;

     label22:
        throw r5;

     label23:
        return;

        catch java.lang.Throwable from label05 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
        catch java.lang.Throwable from label01 to label02 with label21;
        catch java.lang.Throwable from label03 to label11 with label21;
        catch java.lang.Throwable from label12 to label20 with label21;
        catch java.lang.Throwable from label21 to label22 with label21;
    }

    public void applyDeviceVolume(int)
    {
        android.media.AudioService$VolumeStreamState r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10;
        boolean $z0, $z1;
        android.media.AudioService $r1, $r2;

        r0 := @this: android.media.AudioService$VolumeStreamState;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<android.media.AudioService$VolumeStreamState: boolean isMuted()>();

        if $z0 == 0 goto label1;

        i1 = 0;

        goto label5;

     label1:
        $i2 = i0 & 896;

        if $i2 == 0 goto label2;

        $r2 = r0.<android.media.AudioService$VolumeStreamState: android.media.AudioService this$0>;

        $z1 = staticinvoke <android.media.AudioService: boolean access$4300(android.media.AudioService)>($r2);

        if $z1 != 0 goto label3;

     label2:
        $r1 = r0.<android.media.AudioService$VolumeStreamState: android.media.AudioService this$0>;

        $i3 = $r1.<android.media.AudioService: int mFullVolumeDevices>;

        $i4 = i0 & $i3;

        if $i4 == 0 goto label4;

     label3:
        $i9 = r0.<android.media.AudioService$VolumeStreamState: int mIndexMax>;

        $i10 = $i9 + 5;

        i1 = $i10 / 10;

        goto label5;

     label4:
        $i5 = virtualinvoke r0.<android.media.AudioService$VolumeStreamState: int getIndex(int)>(i0);

        $i6 = $i5 + 5;

        i1 = $i6 / 10;

     label5:
        $i7 = r0.<android.media.AudioService$VolumeStreamState: int mStreamType>;

        staticinvoke <android.media.AudioSystem: int setStreamVolumeIndex(int,int,int)>($i7, i1, i0);

        return;
    }

    public void applyAllVolumes()
    {
        android.media.AudioService$VolumeStreamState r0;
        java.lang.Class r1;
        int i0, i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, i15;
        java.util.Set r2;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        java.lang.Throwable r5, $r14;
        boolean $z0, $z1, $z2, $z3;
        java.util.concurrent.ConcurrentHashMap $r6;
        java.lang.Object $r7, $r8, $r11;
        java.lang.Integer $r9, $r12;
        android.media.AudioService $r10, $r13;

        r0 := @this: android.media.AudioService$VolumeStreamState;

        r1 = class "android/media/AudioService$VolumeStreamState";

        entermonitor class "android/media/AudioService$VolumeStreamState";

     label01:
        $z0 = specialinvoke r0.<android.media.AudioService$VolumeStreamState: boolean isMuted()>();

        if $z0 == 0 goto label02;

        i0 = 0;

        goto label03;

     label02:
        $i2 = virtualinvoke r0.<android.media.AudioService$VolumeStreamState: int getIndex(int)>(1073741824);

        $i3 = $i2 + 5;

        i0 = $i3 / 10;

     label03:
        $i4 = r0.<android.media.AudioService$VolumeStreamState: int mStreamType>;

        staticinvoke <android.media.AudioSystem: int setStreamVolumeIndex(int,int,int)>($i4, i0, 1073741824);

        $r6 = r0.<android.media.AudioService$VolumeStreamState: java.util.concurrent.ConcurrentHashMap mIndex>;

        r2 = virtualinvoke $r6.<java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()>();

        r3 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r8;

        $r7 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = (java.lang.Integer) $r7;

        i1 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        if i1 == 1073741824 goto label10;

        $z2 = specialinvoke r0.<android.media.AudioService$VolumeStreamState: boolean isMuted()>();

        if $z2 == 0 goto label05;

        i15 = 0;

        goto label09;

     label05:
        $i6 = i1 & 896;

        if $i6 == 0 goto label06;

        $r13 = r0.<android.media.AudioService$VolumeStreamState: android.media.AudioService this$0>;

        $z3 = staticinvoke <android.media.AudioService: boolean access$4300(android.media.AudioService)>($r13);

        if $z3 != 0 goto label07;

     label06:
        $r10 = r0.<android.media.AudioService$VolumeStreamState: android.media.AudioService this$0>;

        $i7 = $r10.<android.media.AudioService: int mFullVolumeDevices>;

        $i8 = i1 & $i7;

        if $i8 == 0 goto label08;

     label07:
        $i14 = r0.<android.media.AudioService$VolumeStreamState: int mIndexMax>;

        $i12 = $i14 + 5;

        i15 = $i12 / 10;

        goto label09;

     label08:
        $r11 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r12 = (java.lang.Integer) $r11;

        $i9 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        $i11 = $i9 + 5;

        i15 = $i11 / 10;

     label09:
        $i10 = r0.<android.media.AudioService$VolumeStreamState: int mStreamType>;

        staticinvoke <android.media.AudioSystem: int setStreamVolumeIndex(int,int,int)>($i10, i15, i1);

     label10:
        goto label04;

     label11:
        exitmonitor r1;

     label12:
        goto label15;

     label13:
        $r14 := @caughtexception;

        r5 = $r14;

        exitmonitor r1;

     label14:
        throw r5;

     label15:
        return;

        catch java.lang.Throwable from label01 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public boolean adjustIndex(int, int)
    {
        android.media.AudioService$VolumeStreamState r0;
        int i0, i1, $i2, $i3;
        boolean $z0;

        r0 := @this: android.media.AudioService$VolumeStreamState;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = virtualinvoke r0.<android.media.AudioService$VolumeStreamState: int getIndex(int)>(i1);

        $i3 = $i2 + i0;

        $z0 = virtualinvoke r0.<android.media.AudioService$VolumeStreamState: boolean setIndex(int,int)>($i3, i1);

        return $z0;
    }

    public boolean setIndex(int, int)
    {
        android.media.AudioService$VolumeStreamState r0, $r19, $r21;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14;
        java.lang.Class r1;
        java.lang.Boolean r2, $r6, $r22;
        java.lang.Throwable r3, r4, $r24, $r25;
        android.media.AudioService $r5, $r11, $r12, $r14, $r16, $r17, $r20, $r23;
        java.lang.Integer $r7, $r10;
        java.util.concurrent.ConcurrentHashMap $r8;
        int[] $r13;
        android.media.AudioService$VolumeStreamState[] $r15, $r18;
        boolean $z2, $z3, z4;

        r0 := @this: android.media.AudioService$VolumeStreamState;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = class "android/media/AudioService$VolumeStreamState";

        entermonitor class "android/media/AudioService$VolumeStreamState";

     label01:
        i2 = virtualinvoke r0.<android.media.AudioService$VolumeStreamState: int getIndex(int)>(i1);

        i13 = specialinvoke r0.<android.media.AudioService$VolumeStreamState: int getValidIndex(int)>(i0);

        $r5 = r0.<android.media.AudioService$VolumeStreamState: android.media.AudioService this$0>;

        $r6 = staticinvoke <android.media.AudioService: java.lang.Boolean access$4200(android.media.AudioService)>($r5);

        r2 = $r6;

        entermonitor $r6;

     label02:
        $i5 = r0.<android.media.AudioService$VolumeStreamState: int mStreamType>;

        if $i5 != 7 goto label03;

        $r23 = r0.<android.media.AudioService$VolumeStreamState: android.media.AudioService this$0>;

        $r22 = staticinvoke <android.media.AudioService: java.lang.Boolean access$4200(android.media.AudioService)>($r23);

        $z2 = virtualinvoke $r22.<java.lang.Boolean: boolean booleanValue()>();

        if $z2 == 0 goto label03;

        i13 = r0.<android.media.AudioService$VolumeStreamState: int mIndexMax>;

     label03:
        exitmonitor r2;

     label04:
        goto label07;

     label05:
        $r25 := @caughtexception;

        r3 = $r25;

        exitmonitor r2;

     label06:
        throw r3;

     label07:
        $r8 = r0.<android.media.AudioService$VolumeStreamState: java.util.concurrent.ConcurrentHashMap mIndex>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i13);

        virtualinvoke $r8.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, $r10);

        if i2 == i13 goto label14;

        $r11 = r0.<android.media.AudioService$VolumeStreamState: android.media.AudioService this$0>;

        $i6 = r0.<android.media.AudioService$VolumeStreamState: int mStreamType>;

        $i7 = staticinvoke <android.media.AudioService: int access$4400(android.media.AudioService,int)>($r11, $i6);

        if i1 != $i7 goto label08;

        $z3 = 1;

        goto label09;

     label08:
        $z3 = 0;

     label09:
        z4 = $z3;

        i14 = staticinvoke <android.media.AudioSystem: int getNumStreamTypes()>();

        i3 = i14 - 1;

     label10:
        if i3 < 0 goto label12;

        $i8 = r0.<android.media.AudioService$VolumeStreamState: int mStreamType>;

        if i3 == $i8 goto label11;

        $r12 = r0.<android.media.AudioService$VolumeStreamState: android.media.AudioService this$0>;

        $r13 = staticinvoke <android.media.AudioService: int[] access$4500(android.media.AudioService)>($r12);

        $i11 = $r13[i3];

        $i9 = r0.<android.media.AudioService$VolumeStreamState: int mStreamType>;

        if $i11 != $i9 goto label11;

        $r16 = r0.<android.media.AudioService$VolumeStreamState: android.media.AudioService this$0>;

        $i10 = r0.<android.media.AudioService$VolumeStreamState: int mStreamType>;

        i4 = staticinvoke <android.media.AudioService: int access$4600(android.media.AudioService,int,int,int)>($r16, i13, $i10, i3);

        $r14 = r0.<android.media.AudioService$VolumeStreamState: android.media.AudioService this$0>;

        $r15 = staticinvoke <android.media.AudioService: android.media.AudioService$VolumeStreamState[] access$4700(android.media.AudioService)>($r14);

        $r19 = $r15[i3];

        virtualinvoke $r19.<android.media.AudioService$VolumeStreamState: boolean setIndex(int,int)>(i4, i1);

        if z4 == 0 goto label11;

        $r17 = r0.<android.media.AudioService$VolumeStreamState: android.media.AudioService this$0>;

        $r18 = staticinvoke <android.media.AudioService: android.media.AudioService$VolumeStreamState[] access$4700(android.media.AudioService)>($r17);

        $r21 = $r18[i3];

        $r20 = r0.<android.media.AudioService$VolumeStreamState: android.media.AudioService this$0>;

        $i12 = staticinvoke <android.media.AudioService: int access$4400(android.media.AudioService,int)>($r20, i3);

        virtualinvoke $r21.<android.media.AudioService$VolumeStreamState: boolean setIndex(int,int)>(i4, $i12);

     label11:
        i3 = i3 + -1;

        goto label10;

     label12:
        exitmonitor r1;

     label13:
        return 1;

     label14:
        exitmonitor r1;

     label15:
        return 0;

     label16:
        $r24 := @caughtexception;

        r4 = $r24;

        exitmonitor r1;

     label17:
        throw r4;

        catch java.lang.Throwable from label02 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label01 to label13 with label16;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    public int getIndex(int)
    {
        android.media.AudioService$VolumeStreamState r0;
        int i0, $i1;
        java.lang.Class r1;
        java.lang.Integer r2, $r5, $r8;
        java.lang.Throwable r3, $r10;
        java.util.concurrent.ConcurrentHashMap $r4, $r7;
        java.lang.Object $r6, $r9;

        r0 := @this: android.media.AudioService$VolumeStreamState;

        i0 := @parameter0: int;

        r1 = class "android/media/AudioService$VolumeStreamState";

        entermonitor class "android/media/AudioService$VolumeStreamState";

     label1:
        $r4 = r0.<android.media.AudioService$VolumeStreamState: java.util.concurrent.ConcurrentHashMap mIndex>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6 = virtualinvoke $r4.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r5);

        r2 = (java.lang.Integer) $r6;

        if r2 != null goto label2;

        $r7 = r0.<android.media.AudioService$VolumeStreamState: java.util.concurrent.ConcurrentHashMap mIndex>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1073741824);

        $r9 = virtualinvoke $r7.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>($r8);

        r2 = (java.lang.Integer) $r9;

     label2:
        $i1 = virtualinvoke r2.<java.lang.Integer: int intValue()>();

        exitmonitor r1;

     label3:
        return $i1;

     label4:
        $r10 := @caughtexception;

        r3 = $r10;

        exitmonitor r1;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int getMaxIndex()
    {
        android.media.AudioService$VolumeStreamState r0;
        int $i0;

        r0 := @this: android.media.AudioService$VolumeStreamState;

        $i0 = r0.<android.media.AudioService$VolumeStreamState: int mIndexMax>;

        return $i0;
    }

    public void setAllIndexes(android.media.AudioService$VolumeStreamState)
    {
        android.media.AudioService$VolumeStreamState r0, r1;
        java.lang.Class r2;
        int i0, i1, i2, $i3, $i4, i5, i6, i7;
        java.util.Set r3, r20;
        java.util.Iterator r4, r21;
        java.util.Map$Entry r5, r22;
        java.lang.Throwable r6, $r17;
        android.media.AudioService $r7, $r16;
        java.util.concurrent.ConcurrentHashMap $r8, $r9;
        boolean $z0, $z1;
        java.lang.Object $r10, $r11, $r14, $r15;
        java.lang.Integer $r12, $r13, $r18;

        r0 := @this: android.media.AudioService$VolumeStreamState;

        r1 := @parameter0: android.media.AudioService$VolumeStreamState;

        r2 = class "android/media/AudioService$VolumeStreamState";

        entermonitor class "android/media/AudioService$VolumeStreamState";

     label1:
        i0 = virtualinvoke r1.<android.media.AudioService$VolumeStreamState: int getStreamType()>();

        i1 = virtualinvoke r1.<android.media.AudioService$VolumeStreamState: int getIndex(int)>(1073741824);

        $r7 = r0.<android.media.AudioService$VolumeStreamState: android.media.AudioService this$0>;

        $i3 = r0.<android.media.AudioService$VolumeStreamState: int mStreamType>;

        i5 = staticinvoke <android.media.AudioService: int access$4600(android.media.AudioService,int,int,int)>($r7, i1, i0, $i3);

        $r8 = r0.<android.media.AudioService$VolumeStreamState: java.util.concurrent.ConcurrentHashMap mIndex>;

        r3 = virtualinvoke $r8.<java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()>();

        r4 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r15 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r15;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i5);

        interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>($r18);

        goto label2;

     label3:
        $r9 = r1.<android.media.AudioService$VolumeStreamState: java.util.concurrent.ConcurrentHashMap mIndex>;

        r20 = virtualinvoke $r9.<java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()>();

        r21 = interfaceinvoke r20.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r21.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r11 = interfaceinvoke r21.<java.util.Iterator: java.lang.Object next()>();

        r22 = (java.util.Map$Entry) $r11;

        $r10 = interfaceinvoke r22.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r12 = (java.lang.Integer) $r10;

        i2 = virtualinvoke $r12.<java.lang.Integer: int intValue()>();

        $r14 = interfaceinvoke r22.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = (java.lang.Integer) $r14;

        i6 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        $r16 = r0.<android.media.AudioService$VolumeStreamState: android.media.AudioService this$0>;

        $i4 = r0.<android.media.AudioService$VolumeStreamState: int mStreamType>;

        i7 = staticinvoke <android.media.AudioService: int access$4600(android.media.AudioService,int,int,int)>($r16, i6, i0, $i4);

        virtualinvoke r0.<android.media.AudioService$VolumeStreamState: boolean setIndex(int,int)>(i7, i2);

        goto label4;

     label5:
        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r17 := @caughtexception;

        r6 = $r17;

        exitmonitor r2;

     label8:
        throw r6;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void setAllIndexesToMax()
    {
        android.media.AudioService$VolumeStreamState r0;
        java.lang.Class r1;
        java.util.Set r2;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        java.lang.Throwable r5, $r10;
        java.util.concurrent.ConcurrentHashMap $r6;
        boolean $z0;
        java.lang.Object $r7;
        int $i0;
        java.lang.Integer $r8;

        r0 := @this: android.media.AudioService$VolumeStreamState;

        r1 = class "android/media/AudioService$VolumeStreamState";

        entermonitor class "android/media/AudioService$VolumeStreamState";

     label1:
        $r6 = r0.<android.media.AudioService$VolumeStreamState: java.util.concurrent.ConcurrentHashMap mIndex>;

        r2 = virtualinvoke $r6.<java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()>();

        r3 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r7;

        $i0 = r0.<android.media.AudioService$VolumeStreamState: int mIndexMax>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>($r8);

        goto label2;

     label3:
        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r10 := @caughtexception;

        r5 = $r10;

        exitmonitor r1;

     label6:
        throw r5;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void mute(android.os.IBinder, boolean)
    {
        android.media.AudioService$VolumeStreamState r0;
        android.os.IBinder r1;
        boolean z0;
        java.lang.Class r2;
        android.media.AudioService$VolumeStreamState$VolumeDeathHandler r3;
        java.lang.Throwable r4, $r9;
        java.lang.StringBuilder $r5, $r6, $r7;
        int $i0;
        java.lang.String $r8;

        r0 := @this: android.media.AudioService$VolumeStreamState;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        r2 = class "android/media/AudioService$VolumeStreamState";

        entermonitor class "android/media/AudioService$VolumeStreamState";

     label1:
        r3 = specialinvoke r0.<android.media.AudioService$VolumeStreamState: android.media.AudioService$VolumeStreamState$VolumeDeathHandler getDeathHandler(android.os.IBinder,boolean)>(r1, z0);

        if r3 != null goto label3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not get client death handler for stream: ");

        $i0 = r0.<android.media.AudioService$VolumeStreamState: int mStreamType>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("AudioService", $r8);

        exitmonitor r2;

     label2:
        return;

     label3:
        virtualinvoke r3.<android.media.AudioService$VolumeStreamState$VolumeDeathHandler: void mute(boolean)>(z0);

        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r2;

     label6:
        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public int getStreamType()
    {
        android.media.AudioService$VolumeStreamState r0;
        int $i0;

        r0 := @this: android.media.AudioService$VolumeStreamState;

        $i0 = r0.<android.media.AudioService$VolumeStreamState: int mStreamType>;

        return $i0;
    }

    public void checkFixedVolumeDevices()
    {
        android.media.AudioService$VolumeStreamState r0;
        java.lang.Class r1;
        java.util.Set r2;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.Throwable r5, $r18;
        android.media.AudioService $r6, $r14, $r17;
        int[] $r7;
        java.util.concurrent.ConcurrentHashMap $r8;
        java.lang.Object $r9, $r11, $r12;
        boolean $z0;
        java.lang.Integer $r10, $r13, $r16;

        r0 := @this: android.media.AudioService$VolumeStreamState;

        r1 = class "android/media/AudioService$VolumeStreamState";

        entermonitor class "android/media/AudioService$VolumeStreamState";

     label1:
        $r6 = r0.<android.media.AudioService$VolumeStreamState: android.media.AudioService this$0>;

        $r7 = staticinvoke <android.media.AudioService: int[] access$4500(android.media.AudioService)>($r6);

        $i2 = r0.<android.media.AudioService$VolumeStreamState: int mStreamType>;

        $i3 = $r7[$i2];

        if $i3 != 3 goto label5;

        $r8 = r0.<android.media.AudioService$VolumeStreamState: java.util.concurrent.ConcurrentHashMap mIndex>;

        r2 = virtualinvoke $r8.<java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()>();

        r3 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r9 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r9;

        $r11 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r10 = (java.lang.Integer) $r11;

        i0 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();

        $r12 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = (java.lang.Integer) $r12;

        i1 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        $r14 = r0.<android.media.AudioService$VolumeStreamState: android.media.AudioService this$0>;

        $i4 = $r14.<android.media.AudioService: int mFullVolumeDevices>;

        $i6 = i0 & $i4;

        if $i6 != 0 goto label3;

        $r17 = r0.<android.media.AudioService$VolumeStreamState: android.media.AudioService this$0>;

        $i7 = $r17.<android.media.AudioService: int mFixedVolumeDevices>;

        $i8 = i0 & $i7;

        if $i8 == 0 goto label4;

        if i1 == 0 goto label4;

     label3:
        $i5 = r0.<android.media.AudioService$VolumeStreamState: int mIndexMax>;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>($r16);

     label4:
        virtualinvoke r0.<android.media.AudioService$VolumeStreamState: void applyDeviceVolume(int)>(i0);

        goto label2;

     label5:
        exitmonitor r1;

     label6:
        goto label9;

     label7:
        $r18 := @caughtexception;

        r5 = $r18;

        exitmonitor r1;

     label8:
        throw r5;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private int getValidIndex(int)
    {
        android.media.AudioService$VolumeStreamState r0;
        int i0, $i1, $i2;
        android.media.AudioService $r1;
        boolean $z0;

        r0 := @this: android.media.AudioService$VolumeStreamState;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<android.media.AudioService$VolumeStreamState: android.media.AudioService this$0>;

        $z0 = staticinvoke <android.media.AudioService: boolean access$4100(android.media.AudioService)>($r1);

        if $z0 != 0 goto label2;

        $i2 = r0.<android.media.AudioService$VolumeStreamState: int mIndexMax>;

        if i0 <= $i2 goto label3;

     label2:
        $i1 = r0.<android.media.AudioService$VolumeStreamState: int mIndexMax>;

        return $i1;

     label3:
        return i0;
    }

    private synchronized int muteCount()
    {
        android.media.AudioService$VolumeStreamState r0;
        int i0, i1, i2, $i3;
        java.util.ArrayList $r1, $r2;
        java.lang.Object $r3;
        android.media.AudioService$VolumeStreamState$VolumeDeathHandler $r4;

        r0 := @this: android.media.AudioService$VolumeStreamState;

        i0 = 0;

        $r1 = r0.<android.media.AudioService$VolumeStreamState: java.util.ArrayList mDeathHandlers>;

        i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r2 = r0.<android.media.AudioService$VolumeStreamState: java.util.ArrayList mDeathHandlers>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r4 = (android.media.AudioService$VolumeStreamState$VolumeDeathHandler) $r3;

        $i3 = staticinvoke <android.media.AudioService$VolumeStreamState$VolumeDeathHandler: int access$2300(android.media.AudioService$VolumeStreamState$VolumeDeathHandler)>($r4);

        i0 = i0 + $i3;

        i2 = i2 + 1;

        goto label1;

     label2:
        return i0;
    }

    private synchronized boolean isMuted()
    {
        android.media.AudioService$VolumeStreamState r0;
        int $i0;
        boolean $z0;

        r0 := @this: android.media.AudioService$VolumeStreamState;

        $i0 = specialinvoke r0.<android.media.AudioService$VolumeStreamState: int muteCount()>();

        if $i0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private android.media.AudioService$VolumeStreamState$VolumeDeathHandler getDeathHandler(android.os.IBinder, boolean)
    {
        android.media.AudioService$VolumeStreamState r0;
        android.os.IBinder r1, $r7;
        boolean z0;
        android.media.AudioService$VolumeStreamState$VolumeDeathHandler r2, $r4, r8;
        int i0, i1;
        java.util.ArrayList $r3, $r5;
        java.lang.Object $r6;

        r0 := @this: android.media.AudioService$VolumeStreamState;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        $r3 = r0.<android.media.AudioService$VolumeStreamState: java.util.ArrayList mDeathHandlers>;

        i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r5 = r0.<android.media.AudioService$VolumeStreamState: java.util.ArrayList mDeathHandlers>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (android.media.AudioService$VolumeStreamState$VolumeDeathHandler) $r6;

        $r7 = staticinvoke <android.media.AudioService$VolumeStreamState$VolumeDeathHandler: android.os.IBinder access$4900(android.media.AudioService$VolumeStreamState$VolumeDeathHandler)>(r2);

        if r1 != $r7 goto label2;

        return r2;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        if z0 == 0 goto label4;

        $r4 = new android.media.AudioService$VolumeStreamState$VolumeDeathHandler;

        specialinvoke $r4.<android.media.AudioService$VolumeStreamState$VolumeDeathHandler: void <init>(android.media.AudioService$VolumeStreamState,android.os.IBinder)>(r0, r1);

        r8 = $r4;

        goto label5;

     label4:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("AudioService", "stream was not muted by this client");

        r8 = null;

     label5:
        return r8;
    }

    private void dump(java.io.PrintWriter)
    {
        android.media.AudioService$VolumeStreamState r0;
        java.io.PrintWriter r1;
        java.util.Set r2;
        java.util.Iterator r3;
        java.util.Map$Entry r4;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String r5, $r10, $r11;
        java.util.concurrent.ConcurrentHashMap $r6;
        boolean $z0, $z1, $z2;
        java.lang.Object $r7, $r8, $r12;
        java.lang.Integer $r9, $r13;

        r0 := @this: android.media.AudioService$VolumeStreamState;

        r1 := @parameter0: java.io.PrintWriter;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("   Mute count: ");

        $i2 = specialinvoke r0.<android.media.AudioService$VolumeStreamState: int muteCount()>();

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i2);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("   Max: ");

        $i3 = r0.<android.media.AudioService$VolumeStreamState: int mIndexMax>;

        $i4 = $i3 + 5;

        $i5 = $i4 / 10;

        virtualinvoke r1.<java.io.PrintWriter: void println(int)>($i5);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>("   Current: ");

        $r6 = r0.<android.media.AudioService$VolumeStreamState: java.util.concurrent.ConcurrentHashMap mIndex>;

        r2 = virtualinvoke $r6.<java.util.concurrent.ConcurrentHashMap: java.util.Set entrySet()>();

        r3 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r8;

        $r7 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = (java.lang.Integer) $r7;

        i0 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        $r11 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r11);

        if i0 != 1073741824 goto label2;

        $r10 = "default";

        goto label3;

     label2:
        $r10 = staticinvoke <android.media.AudioSystem: java.lang.String getOutputDeviceName(int)>(i0);

     label3:
        r5 = $r10;

        $z1 = virtualinvoke r5.<java.lang.String: boolean isEmpty()>();

        if $z1 != 0 goto label4;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(" (");

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(r5);

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(")");

     label4:
        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(": ");

        $r12 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = (java.lang.Integer) $r12;

        $i6 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        $i7 = $i6 + 5;

        i1 = $i7 / 10;

        virtualinvoke r1.<java.io.PrintWriter: void print(int)>(i1);

        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>(", ");

     label5:
        goto label1;

     label6:
        return;
    }

    static boolean access$300(android.media.AudioService$VolumeStreamState)
    {
        android.media.AudioService$VolumeStreamState r0;
        boolean $z0;

        r0 := @parameter0: android.media.AudioService$VolumeStreamState;

        $z0 = specialinvoke r0.<android.media.AudioService$VolumeStreamState: boolean isMuted()>();

        return $z0;
    }

    void <init>(android.media.AudioService, java.lang.String, int, android.media.AudioService$1)
    {
        android.media.AudioService$VolumeStreamState r0;
        android.media.AudioService r1;
        java.lang.String r2;
        int i0;
        android.media.AudioService$1 r3;

        r0 := @this: android.media.AudioService$VolumeStreamState;

        r1 := @parameter0: android.media.AudioService;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r3 := @parameter3: android.media.AudioService$1;

        specialinvoke r0.<android.media.AudioService$VolumeStreamState: void <init>(android.media.AudioService,java.lang.String,int)>(r1, r2, i0);

        return;
    }

    static void access$500(android.media.AudioService$VolumeStreamState, java.io.PrintWriter)
    {
        android.media.AudioService$VolumeStreamState r0;
        java.io.PrintWriter r1;

        r0 := @parameter0: android.media.AudioService$VolumeStreamState;

        r1 := @parameter1: java.io.PrintWriter;

        specialinvoke r0.<android.media.AudioService$VolumeStreamState: void dump(java.io.PrintWriter)>(r1);

        return;
    }

    static java.util.concurrent.ConcurrentHashMap access$1200(android.media.AudioService$VolumeStreamState)
    {
        android.media.AudioService$VolumeStreamState r0;
        java.util.concurrent.ConcurrentHashMap $r1;

        r0 := @parameter0: android.media.AudioService$VolumeStreamState;

        $r1 = r0.<android.media.AudioService$VolumeStreamState: java.util.concurrent.ConcurrentHashMap mIndex>;

        return $r1;
    }

    static java.util.ArrayList access$2200(android.media.AudioService$VolumeStreamState)
    {
        android.media.AudioService$VolumeStreamState r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: android.media.AudioService$VolumeStreamState;

        $r1 = r0.<android.media.AudioService$VolumeStreamState: java.util.ArrayList mDeathHandlers>;

        return $r1;
    }

    static int access$4800(android.media.AudioService$VolumeStreamState)
    {
        android.media.AudioService$VolumeStreamState r0;
        int $i0;

        r0 := @parameter0: android.media.AudioService$VolumeStreamState;

        $i0 = r0.<android.media.AudioService$VolumeStreamState: int mStreamType>;

        return $i0;
    }

    static int access$6200(android.media.AudioService$VolumeStreamState)
    {
        android.media.AudioService$VolumeStreamState r0;
        int $i0;

        r0 := @parameter0: android.media.AudioService$VolumeStreamState;

        $i0 = r0.<android.media.AudioService$VolumeStreamState: int mIndexMax>;

        return $i0;
    }
}
