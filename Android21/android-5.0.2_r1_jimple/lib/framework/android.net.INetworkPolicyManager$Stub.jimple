public abstract class android.net.INetworkPolicyManager$Stub extends android.os.Binder implements android.net.INetworkPolicyManager
{
    private static final java.lang.String DESCRIPTOR;
    static final int TRANSACTION_setUidPolicy;
    static final int TRANSACTION_addUidPolicy;
    static final int TRANSACTION_removeUidPolicy;
    static final int TRANSACTION_getUidPolicy;
    static final int TRANSACTION_getUidsWithPolicy;
    static final int TRANSACTION_isUidForeground;
    static final int TRANSACTION_getPowerSaveAppIdWhitelist;
    static final int TRANSACTION_registerListener;
    static final int TRANSACTION_unregisterListener;
    static final int TRANSACTION_setNetworkPolicies;
    static final int TRANSACTION_getNetworkPolicies;
    static final int TRANSACTION_snoozeLimit;
    static final int TRANSACTION_setRestrictBackground;
    static final int TRANSACTION_getRestrictBackground;
    static final int TRANSACTION_getNetworkQuotaInfo;
    static final int TRANSACTION_isNetworkMetered;

    public void <init>()
    {
        android.net.INetworkPolicyManager$Stub r0;

        r0 := @this: android.net.INetworkPolicyManager$Stub;

        specialinvoke r0.<android.os.Binder: void <init>()>();

        virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: void attachInterface(android.os.IInterface,java.lang.String)>(r0, "android.net.INetworkPolicyManager");

        return;
    }

    public static android.net.INetworkPolicyManager asInterface(android.os.IBinder)
    {
        android.os.IBinder r0;
        android.os.IInterface r1;
        android.net.INetworkPolicyManager$Stub$Proxy $r2;
        boolean $z0;
        android.net.INetworkPolicyManager $r3;

        r0 := @parameter0: android.os.IBinder;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.os.IBinder: android.os.IInterface queryLocalInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        if r1 == null goto label2;

        $z0 = r1 instanceof android.net.INetworkPolicyManager;

        if $z0 == 0 goto label2;

        $r3 = (android.net.INetworkPolicyManager) r1;

        return $r3;

     label2:
        $r2 = new android.net.INetworkPolicyManager$Stub$Proxy;

        specialinvoke $r2.<android.net.INetworkPolicyManager$Stub$Proxy: void <init>(android.os.IBinder)>(r0);

        return $r2;
    }

    public android.os.IBinder asBinder()
    {
        android.net.INetworkPolicyManager$Stub r0;

        r0 := @this: android.net.INetworkPolicyManager$Stub;

        return r0;
    }

    public boolean onTransact(int, android.os.Parcel, android.os.Parcel, int) throws android.os.RemoteException
    {
        android.net.INetworkPolicyManager$Stub r0;
        int i0, i1, i2, i3, $i4, $i6, $i8, $i9, i11, i12, i13, i14, i15, i16, i17, i18;
        android.os.Parcel r1, r2;
        byte $b5, $b7, $b10;
        android.os.Parcelable$Creator $r3, $r6, $r7, $r10;
        java.lang.Object $r4, $r5, $r8;
        boolean $z0, $z1, z2, z3, z4, z5;
        java.lang.Object[] $r9;
        android.os.IBinder $r11, $r12;
        int[] r13, r14;
        android.net.INetworkPolicyListener r15, r16;
        android.net.NetworkPolicy[] r17, r18;
        android.net.NetworkTemplate r19;
        android.net.NetworkState r20, r22;
        android.net.NetworkQuotaInfo r21;

        r0 := @this: android.net.INetworkPolicyManager$Stub;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Parcel;

        r2 := @parameter2: android.os.Parcel;

        i1 := @parameter3: int;

        lookupswitch(i0)
        {
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label05;
            case 5: goto label06;
            case 6: goto label07;
            case 7: goto label10;
            case 8: goto label11;
            case 9: goto label12;
            case 10: goto label13;
            case 11: goto label14;
            case 12: goto label15;
            case 13: goto label18;
            case 14: goto label21;
            case 15: goto label24;
            case 16: goto label29;
            case 1598968902: goto label01;
            default: goto label34;
        };

     label01:
        virtualinvoke r2.<android.os.Parcel: void writeString(java.lang.String)>("android.net.INetworkPolicyManager");

        return 1;

     label02:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i3 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: void setUidPolicy(int,int)>(i2, i3);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label03:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        i11 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i12 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: void addUidPolicy(int,int)>(i11, i12);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label04:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        i13 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i14 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: void removeUidPolicy(int,int)>(i13, i14);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label05:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        i15 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        i16 = virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: int getUidPolicy(int)>(i15);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i16);

        return 1;

     label06:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        i17 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r13 = virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: int[] getUidsWithPolicy(int)>(i17);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeIntArray(int[])>(r13);

        return 1;

     label07:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        i18 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        z2 = virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: boolean isUidForeground(int)>(i18);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z2 == 0 goto label08;

        $b10 = 1;

        goto label09;

     label08:
        $b10 = 0;

     label09:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>($b10);

        return 1;

     label10:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        r14 = virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: int[] getPowerSaveAppIdWhitelist()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeIntArray(int[])>(r14);

        return 1;

     label11:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        $r12 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r15 = staticinvoke <android.net.INetworkPolicyListener$Stub: android.net.INetworkPolicyListener asInterface(android.os.IBinder)>($r12);

        virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: void registerListener(android.net.INetworkPolicyListener)>(r15);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label12:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        $r11 = virtualinvoke r1.<android.os.Parcel: android.os.IBinder readStrongBinder()>();

        r16 = staticinvoke <android.net.INetworkPolicyListener$Stub: android.net.INetworkPolicyListener asInterface(android.os.IBinder)>($r11);

        virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: void unregisterListener(android.net.INetworkPolicyListener)>(r16);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label13:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        $r10 = <android.net.NetworkPolicy: android.os.Parcelable$Creator CREATOR>;

        $r9 = virtualinvoke r1.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r10);

        r17 = (android.net.NetworkPolicy[]) $r9;

        virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: void setNetworkPolicies(android.net.NetworkPolicy[])>(r17);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label14:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        r18 = virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: android.net.NetworkPolicy[] getNetworkPolicies()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        virtualinvoke r2.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r18, 1);

        return 1;

     label15:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        $i9 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i9 goto label16;

        $r7 = <android.net.NetworkTemplate: android.os.Parcelable$Creator CREATOR>;

        $r8 = interfaceinvoke $r7.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r19 = (android.net.NetworkTemplate) $r8;

        goto label17;

     label16:
        r19 = null;

     label17:
        virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: void snoozeLimit(android.net.NetworkTemplate)>(r19);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label18:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        $i8 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i8 goto label19;

        $z0 = 1;

        goto label20;

     label19:
        $z0 = 0;

     label20:
        z3 = $z0;

        virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: void setRestrictBackground(boolean)>(z3);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        return 1;

     label21:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        z4 = virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: boolean getRestrictBackground()>();

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z4 == 0 goto label22;

        $b7 = 1;

        goto label23;

     label22:
        $b7 = 0;

     label23:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>($b7);

        return 1;

     label24:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        $i6 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i6 goto label25;

        $r6 = <android.net.NetworkState: android.os.Parcelable$Creator CREATOR>;

        $r5 = interfaceinvoke $r6.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r20 = (android.net.NetworkState) $r5;

        goto label26;

     label25:
        r20 = null;

     label26:
        r21 = virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: android.net.NetworkQuotaInfo getNetworkQuotaInfo(android.net.NetworkState)>(r20);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if r21 == null goto label27;

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r21.<android.net.NetworkQuotaInfo: void writeToParcel(android.os.Parcel,int)>(r2, 1);

        goto label28;

     label27:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(0);

     label28:
        return 1;

     label29:
        virtualinvoke r1.<android.os.Parcel: void enforceInterface(java.lang.String)>("android.net.INetworkPolicyManager");

        $i4 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        if 0 == $i4 goto label30;

        $r3 = <android.net.NetworkState: android.os.Parcelable$Creator CREATOR>;

        $r4 = interfaceinvoke $r3.<android.os.Parcelable$Creator: java.lang.Object createFromParcel(android.os.Parcel)>(r1);

        r22 = (android.net.NetworkState) $r4;

        goto label31;

     label30:
        r22 = null;

     label31:
        z5 = virtualinvoke r0.<android.net.INetworkPolicyManager$Stub: boolean isNetworkMetered(android.net.NetworkState)>(r22);

        virtualinvoke r2.<android.os.Parcel: void writeNoException()>();

        if z5 == 0 goto label32;

        $b5 = 1;

        goto label33;

     label32:
        $b5 = 0;

     label33:
        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>($b5);

        return 1;

     label34:
        $z1 = specialinvoke r0.<android.os.Binder: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)>(i0, r1, r2, i1);

        return $z1;
    }

    public static void <clinit>()
    {
        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_isNetworkMetered> = 16;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_getNetworkQuotaInfo> = 15;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_getRestrictBackground> = 14;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_setRestrictBackground> = 13;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_snoozeLimit> = 12;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_getNetworkPolicies> = 11;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_setNetworkPolicies> = 10;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_unregisterListener> = 9;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_registerListener> = 8;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_getPowerSaveAppIdWhitelist> = 7;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_isUidForeground> = 6;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_getUidsWithPolicy> = 5;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_getUidPolicy> = 4;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_removeUidPolicy> = 3;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_addUidPolicy> = 2;

        <android.net.INetworkPolicyManager$Stub: int TRANSACTION_setUidPolicy> = 1;

        <android.net.INetworkPolicyManager$Stub: java.lang.String DESCRIPTOR> = "android.net.INetworkPolicyManager";

        return;
    }
}
