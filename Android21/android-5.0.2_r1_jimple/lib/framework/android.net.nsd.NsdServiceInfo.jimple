public final class android.net.nsd.NsdServiceInfo extends java.lang.Object implements android.os.Parcelable
{
    private static final java.lang.String TAG;
    private java.lang.String mServiceName;
    private java.lang.String mServiceType;
    private final android.util.ArrayMap mTxtRecord;
    private java.net.InetAddress mHost;
    private int mPort;
    public static final android.os.Parcelable$Creator CREATOR;

    public void <init>()
    {
        android.net.nsd.NsdServiceInfo r0;
        android.util.ArrayMap $r1;

        r0 := @this: android.net.nsd.NsdServiceInfo;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new android.util.ArrayMap;

        specialinvoke $r1.<android.util.ArrayMap: void <init>()>();

        r0.<android.net.nsd.NsdServiceInfo: android.util.ArrayMap mTxtRecord> = $r1;

        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        android.net.nsd.NsdServiceInfo r0;
        java.lang.String r1, r2;
        android.util.ArrayMap $r3;

        r0 := @this: android.net.nsd.NsdServiceInfo;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new android.util.ArrayMap;

        specialinvoke $r3.<android.util.ArrayMap: void <init>()>();

        r0.<android.net.nsd.NsdServiceInfo: android.util.ArrayMap mTxtRecord> = $r3;

        r0.<android.net.nsd.NsdServiceInfo: java.lang.String mServiceName> = r1;

        r0.<android.net.nsd.NsdServiceInfo: java.lang.String mServiceType> = r2;

        return;
    }

    public java.lang.String getServiceName()
    {
        android.net.nsd.NsdServiceInfo r0;
        java.lang.String $r1;

        r0 := @this: android.net.nsd.NsdServiceInfo;

        $r1 = r0.<android.net.nsd.NsdServiceInfo: java.lang.String mServiceName>;

        return $r1;
    }

    public void setServiceName(java.lang.String)
    {
        android.net.nsd.NsdServiceInfo r0;
        java.lang.String r1;

        r0 := @this: android.net.nsd.NsdServiceInfo;

        r1 := @parameter0: java.lang.String;

        r0.<android.net.nsd.NsdServiceInfo: java.lang.String mServiceName> = r1;

        return;
    }

    public java.lang.String getServiceType()
    {
        android.net.nsd.NsdServiceInfo r0;
        java.lang.String $r1;

        r0 := @this: android.net.nsd.NsdServiceInfo;

        $r1 = r0.<android.net.nsd.NsdServiceInfo: java.lang.String mServiceType>;

        return $r1;
    }

    public void setServiceType(java.lang.String)
    {
        android.net.nsd.NsdServiceInfo r0;
        java.lang.String r1;

        r0 := @this: android.net.nsd.NsdServiceInfo;

        r1 := @parameter0: java.lang.String;

        r0.<android.net.nsd.NsdServiceInfo: java.lang.String mServiceType> = r1;

        return;
    }

    public java.net.InetAddress getHost()
    {
        android.net.nsd.NsdServiceInfo r0;
        java.net.InetAddress $r1;

        r0 := @this: android.net.nsd.NsdServiceInfo;

        $r1 = r0.<android.net.nsd.NsdServiceInfo: java.net.InetAddress mHost>;

        return $r1;
    }

    public void setHost(java.net.InetAddress)
    {
        android.net.nsd.NsdServiceInfo r0;
        java.net.InetAddress r1;

        r0 := @this: android.net.nsd.NsdServiceInfo;

        r1 := @parameter0: java.net.InetAddress;

        r0.<android.net.nsd.NsdServiceInfo: java.net.InetAddress mHost> = r1;

        return;
    }

    public int getPort()
    {
        android.net.nsd.NsdServiceInfo r0;
        int $i0;

        r0 := @this: android.net.nsd.NsdServiceInfo;

        $i0 = r0.<android.net.nsd.NsdServiceInfo: int mPort>;

        return $i0;
    }

    public void setPort(int)
    {
        android.net.nsd.NsdServiceInfo r0;
        int i0;

        r0 := @this: android.net.nsd.NsdServiceInfo;

        i0 := @parameter0: int;

        r0.<android.net.nsd.NsdServiceInfo: int mPort> = i0;

        return;
    }

    public void setAttribute(java.lang.String, byte[])
    {
        android.net.nsd.NsdServiceInfo r0;
        java.lang.String r1, $r8;
        byte[] r2;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i13, i14;
        char c1;
        android.util.ArrayMap $r3;
        java.lang.StringBuilder $r5, $r7, $r9;
        java.lang.IllegalArgumentException $r6, $r10, $r11, $r12;

        r0 := @this: android.net.nsd.NsdServiceInfo;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        i0 = 0;

     label01:
        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        if i0 >= $i2 goto label05;

        c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);

        if c1 < 32 goto label02;

        if c1 <= 126 goto label03;

     label02:
        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Key strings must be printable US-ASCII");

        throw $r11;

     label03:
        if c1 != 61 goto label04;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Key strings must not include \'=\'");

        throw $r12;

     label04:
        i0 = i0 + 1;

        goto label01;

     label05:
        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        if r2 != null goto label06;

        $i4 = 0;

        goto label07;

     label06:
        $i4 = lengthof r2;

     label07:
        $i5 = $i3 + $i4;

        if $i5 < 255 goto label08;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Key length + value length must be < 255 bytes");

        throw $r10;

     label08:
        $i6 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i6 <= 9 goto label09;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Key lengths > 9 are discouraged: ");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("NsdServiceInfo", $r8);

     label09:
        i13 = specialinvoke r0.<android.net.nsd.NsdServiceInfo: int getTxtRecordSize()>();

        $i7 = virtualinvoke r1.<java.lang.String: int length()>();

        $i9 = i13 + $i7;

        if r2 != null goto label10;

        $i8 = 0;

        goto label11;

     label10:
        $i8 = lengthof r2;

     label11:
        $i10 = $i9 + $i8;

        i14 = $i10 + 2;

        if i14 <= 1300 goto label12;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Total length of attributes must be < 1300 bytes");

        throw $r6;

     label12:
        if i14 <= 400 goto label13;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("NsdServiceInfo", "Total length of all attributes exceeds 400 bytes; truncation may occur");

     label13:
        $r3 = r0.<android.net.nsd.NsdServiceInfo: android.util.ArrayMap mTxtRecord>;

        virtualinvoke $r3.<android.util.ArrayMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public void setAttribute(java.lang.String, java.lang.String)
    {
        android.net.nsd.NsdServiceInfo r0;
        java.lang.String r1, r2;
        byte[] $r4;
        java.io.UnsupportedEncodingException $r5;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: android.net.nsd.NsdServiceInfo;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

     label1:
        if r2 != null goto label2;

        $r4 = (byte[]) null;

        goto label3;

     label2:
        $r4 = virtualinvoke r2.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

     label3:
        virtualinvoke r0.<android.net.nsd.NsdServiceInfo: void setAttribute(java.lang.String,byte[])>(r1, $r4);

     label4:
        goto label6;

     label5:
        $r5 := @caughtexception;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Value must be UTF-8");

        throw $r6;

     label6:
        return;

        catch java.io.UnsupportedEncodingException from label1 to label4 with label5;
    }

    public void removeAttribute(java.lang.String)
    {
        android.net.nsd.NsdServiceInfo r0;
        java.lang.String r1;
        android.util.ArrayMap $r2;

        r0 := @this: android.net.nsd.NsdServiceInfo;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<android.net.nsd.NsdServiceInfo: android.util.ArrayMap mTxtRecord>;

        virtualinvoke $r2.<android.util.ArrayMap: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    public java.util.Map getAttributes()
    {
        android.net.nsd.NsdServiceInfo r0;
        android.util.ArrayMap $r1;
        java.util.Map $r2;

        r0 := @this: android.net.nsd.NsdServiceInfo;

        $r1 = r0.<android.net.nsd.NsdServiceInfo: android.util.ArrayMap mTxtRecord>;

        $r2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r1);

        return $r2;
    }

    private int getTxtRecordSize()
    {
        android.net.nsd.NsdServiceInfo r0;
        int i0, $i1, $i2, i3, i4;
        java.util.Iterator r1;
        java.util.Map$Entry r2;
        byte[] r3;
        android.util.ArrayMap $r4;
        java.util.Set $r5;
        boolean $z0;
        java.lang.Object $r6, $r7, $r9;
        java.lang.String $r8;

        r0 := @this: android.net.nsd.NsdServiceInfo;

        i0 = 0;

        $r4 = r0.<android.net.nsd.NsdServiceInfo: android.util.ArrayMap mTxtRecord>;

        $r5 = virtualinvoke $r4.<android.util.ArrayMap: java.util.Set entrySet()>();

        r1 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.Map$Entry) $r6;

        i3 = i0 + 2;

        $r7 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r8 = (java.lang.String) $r7;

        $i1 = virtualinvoke $r8.<java.lang.String: int length()>();

        i4 = i3 + $i1;

        $r9 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        r3 = (byte[]) $r9;

        if r3 != null goto label2;

        $i2 = 0;

        goto label3;

     label2:
        $i2 = lengthof r3;

     label3:
        i0 = i4 + $i2;

        goto label1;

     label4:
        return i0;
    }

    public byte[] getTxtRecord()
    {
        android.net.nsd.NsdServiceInfo r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i7, $i8, $i9, $i10, $i11, i12, i13;
        byte[] r1, r5, $r11;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.lang.String r4;
        android.util.ArrayMap $r6;
        java.util.Set $r7;
        boolean $z0;
        java.lang.Object $r8, $r9, $r10;
        byte $b6;
        java.nio.charset.Charset $r12;

        r0 := @this: android.net.nsd.NsdServiceInfo;

        i0 = specialinvoke r0.<android.net.nsd.NsdServiceInfo: int getTxtRecordSize()>();

        if i0 != 0 goto label1;

        return null;

     label1:
        r1 = newarray (byte)[i0];

        i1 = 0;

        $r6 = r0.<android.net.nsd.NsdServiceInfo: android.util.ArrayMap mTxtRecord>;

        $r7 = virtualinvoke $r6.<android.util.ArrayMap: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r7.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r8;

        $r9 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        r4 = (java.lang.String) $r9;

        $r10 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        r5 = (byte[]) $r10;

        $i3 = i1;

        i12 = i1 + 1;

        $i2 = virtualinvoke r4.<java.lang.String: int length()>();

        if r5 != null goto label3;

        $i5 = 0;

        goto label4;

     label3:
        $i5 = lengthof r5;

     label4:
        $i4 = $i2 + $i5;

        $i7 = $i4 + 1;

        $b6 = (byte) $i7;

        r1[$i3] = $b6;

        $r12 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset US_ASCII>;

        $r11 = virtualinvoke r4.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r12);

        $i8 = virtualinvoke r4.<java.lang.String: int length()>();

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r11, 0, r1, i12, $i8);

        $i9 = virtualinvoke r4.<java.lang.String: int length()>();

        i13 = i12 + $i9;

        i1 = i13 + 1;

        r1[i13] = 61;

        if r5 == null goto label5;

        $i11 = lengthof r5;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r5, 0, r1, i1, $i11);

        $i10 = lengthof r5;

        i1 = i1 + $i10;

     label5:
        goto label2;

     label6:
        return r1;
    }

    public java.lang.String toString()
    {
        android.net.nsd.NsdServiceInfo r0;
        java.lang.StringBuffer r1, $r3, $r4, $r6, $r7, $r9, $r10, $r12, $r13, $r17;
        byte[] r2;
        java.lang.String $r5, $r8, $r15, $r16;
        java.net.InetAddress $r11;
        int $i0;
        java.nio.charset.Charset $r19;

        r0 := @this: android.net.nsd.NsdServiceInfo;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        r1 = $r3;

        $r4 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("name: ");

        $r5 = r0.<android.net.nsd.NsdServiceInfo: java.lang.String mServiceName>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", type: ");

        $r8 = r0.<android.net.nsd.NsdServiceInfo: java.lang.String mServiceType>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", host: ");

        $r11 = r0.<android.net.nsd.NsdServiceInfo: java.net.InetAddress mHost>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", port: ");

        $i0 = r0.<android.net.nsd.NsdServiceInfo: int mPort>;

        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        r2 = virtualinvoke r0.<android.net.nsd.NsdServiceInfo: byte[] getTxtRecord()>();

        if r2 == null goto label1;

        $r17 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", txtRecord: ");

        $r16 = new java.lang.String;

        $r19 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;

        specialinvoke $r16.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>(r2, $r19);

        virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

     label1:
        $r15 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r15;
    }

    public int describeContents()
    {
        android.net.nsd.NsdServiceInfo r0;

        r0 := @this: android.net.nsd.NsdServiceInfo;

        return 0;
    }

    public void writeToParcel(android.os.Parcel, int)
    {
        android.net.nsd.NsdServiceInfo r0;
        android.os.Parcel r1;
        int i0, $i1, $i2, $i3;
        java.util.Iterator r2;
        java.lang.String r3, $r5, $r6;
        byte[] r4, $r14;
        java.net.InetAddress $r7, $r15;
        android.util.ArrayMap $r8, $r9, $r11;
        java.util.Set $r10;
        boolean $z0;
        java.lang.Object $r12, $r13;

        r0 := @this: android.net.nsd.NsdServiceInfo;

        r1 := @parameter0: android.os.Parcel;

        i0 := @parameter1: int;

        $r5 = r0.<android.net.nsd.NsdServiceInfo: java.lang.String mServiceName>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r5);

        $r6 = r0.<android.net.nsd.NsdServiceInfo: java.lang.String mServiceType>;

        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>($r6);

        $r7 = r0.<android.net.nsd.NsdServiceInfo: java.net.InetAddress mHost>;

        if $r7 == null goto label1;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $r15 = r0.<android.net.nsd.NsdServiceInfo: java.net.InetAddress mHost>;

        $r14 = virtualinvoke $r15.<java.net.InetAddress: byte[] getAddress()>();

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>($r14);

        goto label2;

     label1:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label2:
        $i1 = r0.<android.net.nsd.NsdServiceInfo: int mPort>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i1);

        $r8 = r0.<android.net.nsd.NsdServiceInfo: android.util.ArrayMap mTxtRecord>;

        $i2 = virtualinvoke $r8.<android.util.ArrayMap: int size()>();

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i2);

        $r9 = r0.<android.net.nsd.NsdServiceInfo: android.util.ArrayMap mTxtRecord>;

        $r10 = virtualinvoke $r9.<android.util.ArrayMap: java.util.Set keySet()>();

        r2 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r12 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r12;

        $r11 = r0.<android.net.nsd.NsdServiceInfo: android.util.ArrayMap mTxtRecord>;

        $r13 = virtualinvoke $r11.<android.util.ArrayMap: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (byte[]) $r13;

        if r4 == null goto label4;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(1);

        $i3 = lengthof r4;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>(r4);

        goto label5;

     label4:
        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label5:
        virtualinvoke r1.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        goto label3;

     label6:
        return;
    }

    static java.lang.String access$002(android.net.nsd.NsdServiceInfo, java.lang.String)
    {
        android.net.nsd.NsdServiceInfo r0;
        java.lang.String r1;

        r0 := @parameter0: android.net.nsd.NsdServiceInfo;

        r1 := @parameter1: java.lang.String;

        r0.<android.net.nsd.NsdServiceInfo: java.lang.String mServiceName> = r1;

        return r1;
    }

    static java.lang.String access$102(android.net.nsd.NsdServiceInfo, java.lang.String)
    {
        android.net.nsd.NsdServiceInfo r0;
        java.lang.String r1;

        r0 := @parameter0: android.net.nsd.NsdServiceInfo;

        r1 := @parameter1: java.lang.String;

        r0.<android.net.nsd.NsdServiceInfo: java.lang.String mServiceType> = r1;

        return r1;
    }

    static java.net.InetAddress access$202(android.net.nsd.NsdServiceInfo, java.net.InetAddress)
    {
        android.net.nsd.NsdServiceInfo r0;
        java.net.InetAddress r1;

        r0 := @parameter0: android.net.nsd.NsdServiceInfo;

        r1 := @parameter1: java.net.InetAddress;

        r0.<android.net.nsd.NsdServiceInfo: java.net.InetAddress mHost> = r1;

        return r1;
    }

    static int access$302(android.net.nsd.NsdServiceInfo, int)
    {
        android.net.nsd.NsdServiceInfo r0;
        int i0;

        r0 := @parameter0: android.net.nsd.NsdServiceInfo;

        i0 := @parameter1: int;

        r0.<android.net.nsd.NsdServiceInfo: int mPort> = i0;

        return i0;
    }

    static android.util.ArrayMap access$400(android.net.nsd.NsdServiceInfo)
    {
        android.net.nsd.NsdServiceInfo r0;
        android.util.ArrayMap $r1;

        r0 := @parameter0: android.net.nsd.NsdServiceInfo;

        $r1 = r0.<android.net.nsd.NsdServiceInfo: android.util.ArrayMap mTxtRecord>;

        return $r1;
    }

    static void <clinit>()
    {
        android.net.nsd.NsdServiceInfo$1 $r0;

        <android.net.nsd.NsdServiceInfo: java.lang.String TAG> = "NsdServiceInfo";

        $r0 = new android.net.nsd.NsdServiceInfo$1;

        specialinvoke $r0.<android.net.nsd.NsdServiceInfo$1: void <init>()>();

        <android.net.nsd.NsdServiceInfo: android.os.Parcelable$Creator CREATOR> = $r0;

        return;
    }
}
