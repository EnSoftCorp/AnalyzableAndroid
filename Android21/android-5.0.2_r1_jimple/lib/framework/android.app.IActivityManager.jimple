public interface  android.app.IActivityManager extends java.lang.Object implements android.os.IInterface
{
    public static final java.lang.String descriptor;
    public static final int HANDLE_APPLICATION_CRASH_TRANSACTION;
    public static final int START_ACTIVITY_TRANSACTION;
    public static final int UNHANDLED_BACK_TRANSACTION;
    public static final int OPEN_CONTENT_URI_TRANSACTION;
    public static final int FINISH_ACTIVITY_TRANSACTION;
    public static final int REGISTER_RECEIVER_TRANSACTION;
    public static final int UNREGISTER_RECEIVER_TRANSACTION;
    public static final int BROADCAST_INTENT_TRANSACTION;
    public static final int UNBROADCAST_INTENT_TRANSACTION;
    public static final int FINISH_RECEIVER_TRANSACTION;
    public static final int ATTACH_APPLICATION_TRANSACTION;
    public static final int ACTIVITY_IDLE_TRANSACTION;
    public static final int ACTIVITY_PAUSED_TRANSACTION;
    public static final int ACTIVITY_STOPPED_TRANSACTION;
    public static final int GET_CALLING_PACKAGE_TRANSACTION;
    public static final int GET_CALLING_ACTIVITY_TRANSACTION;
    public static final int GET_TASKS_TRANSACTION;
    public static final int MOVE_TASK_TO_FRONT_TRANSACTION;
    public static final int MOVE_TASK_TO_BACK_TRANSACTION;
    public static final int MOVE_TASK_BACKWARDS_TRANSACTION;
    public static final int GET_TASK_FOR_ACTIVITY_TRANSACTION;
    public static final int GET_CONTENT_PROVIDER_TRANSACTION;
    public static final int PUBLISH_CONTENT_PROVIDERS_TRANSACTION;
    public static final int REF_CONTENT_PROVIDER_TRANSACTION;
    public static final int FINISH_SUB_ACTIVITY_TRANSACTION;
    public static final int GET_RUNNING_SERVICE_CONTROL_PANEL_TRANSACTION;
    public static final int START_SERVICE_TRANSACTION;
    public static final int STOP_SERVICE_TRANSACTION;
    public static final int BIND_SERVICE_TRANSACTION;
    public static final int UNBIND_SERVICE_TRANSACTION;
    public static final int PUBLISH_SERVICE_TRANSACTION;
    public static final int ACTIVITY_RESUMED_TRANSACTION;
    public static final int SET_DEBUG_APP_TRANSACTION;
    public static final int SET_ALWAYS_FINISH_TRANSACTION;
    public static final int START_INSTRUMENTATION_TRANSACTION;
    public static final int FINISH_INSTRUMENTATION_TRANSACTION;
    public static final int GET_CONFIGURATION_TRANSACTION;
    public static final int UPDATE_CONFIGURATION_TRANSACTION;
    public static final int STOP_SERVICE_TOKEN_TRANSACTION;
    public static final int GET_ACTIVITY_CLASS_FOR_TOKEN_TRANSACTION;
    public static final int GET_PACKAGE_FOR_TOKEN_TRANSACTION;
    public static final int SET_PROCESS_LIMIT_TRANSACTION;
    public static final int GET_PROCESS_LIMIT_TRANSACTION;
    public static final int CHECK_PERMISSION_TRANSACTION;
    public static final int CHECK_URI_PERMISSION_TRANSACTION;
    public static final int GRANT_URI_PERMISSION_TRANSACTION;
    public static final int REVOKE_URI_PERMISSION_TRANSACTION;
    public static final int SET_ACTIVITY_CONTROLLER_TRANSACTION;
    public static final int SHOW_WAITING_FOR_DEBUGGER_TRANSACTION;
    public static final int SIGNAL_PERSISTENT_PROCESSES_TRANSACTION;
    public static final int GET_RECENT_TASKS_TRANSACTION;
    public static final int SERVICE_DONE_EXECUTING_TRANSACTION;
    public static final int ACTIVITY_DESTROYED_TRANSACTION;
    public static final int GET_INTENT_SENDER_TRANSACTION;
    public static final int CANCEL_INTENT_SENDER_TRANSACTION;
    public static final int GET_PACKAGE_FOR_INTENT_SENDER_TRANSACTION;
    public static final int ENTER_SAFE_MODE_TRANSACTION;
    public static final int START_NEXT_MATCHING_ACTIVITY_TRANSACTION;
    public static final int NOTE_WAKEUP_ALARM_TRANSACTION;
    public static final int REMOVE_CONTENT_PROVIDER_TRANSACTION;
    public static final int SET_REQUESTED_ORIENTATION_TRANSACTION;
    public static final int GET_REQUESTED_ORIENTATION_TRANSACTION;
    public static final int UNBIND_FINISHED_TRANSACTION;
    public static final int SET_PROCESS_FOREGROUND_TRANSACTION;
    public static final int SET_SERVICE_FOREGROUND_TRANSACTION;
    public static final int MOVE_ACTIVITY_TASK_TO_BACK_TRANSACTION;
    public static final int GET_MEMORY_INFO_TRANSACTION;
    public static final int GET_PROCESSES_IN_ERROR_STATE_TRANSACTION;
    public static final int CLEAR_APP_DATA_TRANSACTION;
    public static final int FORCE_STOP_PACKAGE_TRANSACTION;
    public static final int KILL_PIDS_TRANSACTION;
    public static final int GET_SERVICES_TRANSACTION;
    public static final int GET_TASK_THUMBNAIL_TRANSACTION;
    public static final int GET_RUNNING_APP_PROCESSES_TRANSACTION;
    public static final int GET_DEVICE_CONFIGURATION_TRANSACTION;
    public static final int PEEK_SERVICE_TRANSACTION;
    public static final int PROFILE_CONTROL_TRANSACTION;
    public static final int SHUTDOWN_TRANSACTION;
    public static final int STOP_APP_SWITCHES_TRANSACTION;
    public static final int RESUME_APP_SWITCHES_TRANSACTION;
    public static final int START_BACKUP_AGENT_TRANSACTION;
    public static final int BACKUP_AGENT_CREATED_TRANSACTION;
    public static final int UNBIND_BACKUP_AGENT_TRANSACTION;
    public static final int GET_UID_FOR_INTENT_SENDER_TRANSACTION;
    public static final int HANDLE_INCOMING_USER_TRANSACTION;
    public static final int ADD_PACKAGE_DEPENDENCY_TRANSACTION;
    public static final int KILL_APPLICATION_WITH_APPID_TRANSACTION;
    public static final int CLOSE_SYSTEM_DIALOGS_TRANSACTION;
    public static final int GET_PROCESS_MEMORY_INFO_TRANSACTION;
    public static final int KILL_APPLICATION_PROCESS_TRANSACTION;
    public static final int START_ACTIVITY_INTENT_SENDER_TRANSACTION;
    public static final int OVERRIDE_PENDING_TRANSITION_TRANSACTION;
    public static final int HANDLE_APPLICATION_WTF_TRANSACTION;
    public static final int KILL_BACKGROUND_PROCESSES_TRANSACTION;
    public static final int IS_USER_A_MONKEY_TRANSACTION;
    public static final int START_ACTIVITY_AND_WAIT_TRANSACTION;
    public static final int WILL_ACTIVITY_BE_VISIBLE_TRANSACTION;
    public static final int START_ACTIVITY_WITH_CONFIG_TRANSACTION;
    public static final int GET_RUNNING_EXTERNAL_APPLICATIONS_TRANSACTION;
    public static final int FINISH_HEAVY_WEIGHT_APP_TRANSACTION;
    public static final int HANDLE_APPLICATION_STRICT_MODE_VIOLATION_TRANSACTION;
    public static final int IS_IMMERSIVE_TRANSACTION;
    public static final int SET_IMMERSIVE_TRANSACTION;
    public static final int IS_TOP_ACTIVITY_IMMERSIVE_TRANSACTION;
    public static final int CRASH_APPLICATION_TRANSACTION;
    public static final int GET_PROVIDER_MIME_TYPE_TRANSACTION;
    public static final int NEW_URI_PERMISSION_OWNER_TRANSACTION;
    public static final int GRANT_URI_PERMISSION_FROM_OWNER_TRANSACTION;
    public static final int REVOKE_URI_PERMISSION_FROM_OWNER_TRANSACTION;
    public static final int CHECK_GRANT_URI_PERMISSION_TRANSACTION;
    public static final int DUMP_HEAP_TRANSACTION;
    public static final int START_ACTIVITIES_TRANSACTION;
    public static final int IS_USER_RUNNING_TRANSACTION;
    public static final int ACTIVITY_SLEPT_TRANSACTION;
    public static final int GET_FRONT_ACTIVITY_SCREEN_COMPAT_MODE_TRANSACTION;
    public static final int SET_FRONT_ACTIVITY_SCREEN_COMPAT_MODE_TRANSACTION;
    public static final int GET_PACKAGE_SCREEN_COMPAT_MODE_TRANSACTION;
    public static final int SET_PACKAGE_SCREEN_COMPAT_MODE_TRANSACTION;
    public static final int GET_PACKAGE_ASK_SCREEN_COMPAT_TRANSACTION;
    public static final int SET_PACKAGE_ASK_SCREEN_COMPAT_TRANSACTION;
    public static final int SWITCH_USER_TRANSACTION;
    public static final int ___AVAILABLE_1___;
    public static final int REMOVE_TASK_TRANSACTION;
    public static final int REGISTER_PROCESS_OBSERVER_TRANSACTION;
    public static final int UNREGISTER_PROCESS_OBSERVER_TRANSACTION;
    public static final int IS_INTENT_SENDER_TARGETED_TO_PACKAGE_TRANSACTION;
    public static final int UPDATE_PERSISTENT_CONFIGURATION_TRANSACTION;
    public static final int GET_PROCESS_PSS_TRANSACTION;
    public static final int SHOW_BOOT_MESSAGE_TRANSACTION;
    public static final int KILL_ALL_BACKGROUND_PROCESSES_TRANSACTION;
    public static final int GET_CONTENT_PROVIDER_EXTERNAL_TRANSACTION;
    public static final int REMOVE_CONTENT_PROVIDER_EXTERNAL_TRANSACTION;
    public static final int GET_MY_MEMORY_STATE_TRANSACTION;
    public static final int KILL_PROCESSES_BELOW_FOREGROUND_TRANSACTION;
    public static final int GET_CURRENT_USER_TRANSACTION;
    public static final int SHOULD_UP_RECREATE_TASK_TRANSACTION;
    public static final int NAVIGATE_UP_TO_TRANSACTION;
    public static final int SET_LOCK_SCREEN_SHOWN_TRANSACTION;
    public static final int FINISH_ACTIVITY_AFFINITY_TRANSACTION;
    public static final int GET_LAUNCHED_FROM_UID_TRANSACTION;
    public static final int UNSTABLE_PROVIDER_DIED_TRANSACTION;
    public static final int IS_INTENT_SENDER_AN_ACTIVITY_TRANSACTION;
    public static final int START_ACTIVITY_AS_USER_TRANSACTION;
    public static final int STOP_USER_TRANSACTION;
    public static final int REGISTER_USER_SWITCH_OBSERVER_TRANSACTION;
    public static final int UNREGISTER_USER_SWITCH_OBSERVER_TRANSACTION;
    public static final int GET_RUNNING_USER_IDS_TRANSACTION;
    public static final int REQUEST_BUG_REPORT_TRANSACTION;
    public static final int INPUT_DISPATCHING_TIMED_OUT_TRANSACTION;
    public static final int CLEAR_PENDING_BACKUP_TRANSACTION;
    public static final int GET_INTENT_FOR_INTENT_SENDER_TRANSACTION;
    public static final int GET_ASSIST_CONTEXT_EXTRAS_TRANSACTION;
    public static final int REPORT_ASSIST_CONTEXT_EXTRAS_TRANSACTION;
    public static final int GET_LAUNCHED_FROM_PACKAGE_TRANSACTION;
    public static final int KILL_UID_TRANSACTION;
    public static final int SET_USER_IS_MONKEY_TRANSACTION;
    public static final int HANG_TRANSACTION;
    public static final int CREATE_ACTIVITY_CONTAINER_TRANSACTION;
    public static final int MOVE_TASK_TO_STACK_TRANSACTION;
    public static final int RESIZE_STACK_TRANSACTION;
    public static final int GET_ALL_STACK_INFOS_TRANSACTION;
    public static final int SET_FOCUSED_STACK_TRANSACTION;
    public static final int GET_STACK_INFO_TRANSACTION;
    public static final int CONVERT_FROM_TRANSLUCENT_TRANSACTION;
    public static final int CONVERT_TO_TRANSLUCENT_TRANSACTION;
    public static final int NOTIFY_ACTIVITY_DRAWN_TRANSACTION;
    public static final int REPORT_ACTIVITY_FULLY_DRAWN_TRANSACTION;
    public static final int RESTART_TRANSACTION;
    public static final int PERFORM_IDLE_MAINTENANCE_TRANSACTION;
    public static final int TAKE_PERSISTABLE_URI_PERMISSION_TRANSACTION;
    public static final int RELEASE_PERSISTABLE_URI_PERMISSION_TRANSACTION;
    public static final int GET_PERSISTED_URI_PERMISSIONS_TRANSACTION;
    public static final int APP_NOT_RESPONDING_VIA_PROVIDER_TRANSACTION;
    public static final int GET_HOME_ACTIVITY_TOKEN_TRANSACTION;
    public static final int GET_ACTIVITY_CONTAINER_TRANSACTION;
    public static final int DELETE_ACTIVITY_CONTAINER_TRANSACTION;
    public static final int GET_TAG_FOR_INTENT_SENDER_TRANSACTION;
    public static final int START_USER_IN_BACKGROUND_TRANSACTION;
    public static final int IS_IN_HOME_STACK_TRANSACTION;
    public static final int START_LOCK_TASK_BY_TASK_ID_TRANSACTION;
    public static final int START_LOCK_TASK_BY_TOKEN_TRANSACTION;
    public static final int STOP_LOCK_TASK_MODE_TRANSACTION;
    public static final int IS_IN_LOCK_TASK_MODE_TRANSACTION;
    public static final int SET_TASK_DESCRIPTION_TRANSACTION;
    public static final int START_VOICE_ACTIVITY_TRANSACTION;
    public static final int GET_ACTIVITY_OPTIONS_TRANSACTION;
    public static final int GET_APP_TASKS_TRANSACTION;
    public static final int START_LOCK_TASK_BY_CURRENT_TRANSACTION;
    public static final int STOP_LOCK_TASK_BY_CURRENT_TRANSACTION;
    public static final int FINISH_VOICE_TASK_TRANSACTION;
    public static final int IS_TOP_OF_TASK_TRANSACTION;
    public static final int REQUEST_VISIBLE_BEHIND_TRANSACTION;
    public static final int IS_BACKGROUND_VISIBLE_BEHIND_TRANSACTION;
    public static final int BACKGROUND_RESOURCES_RELEASED_TRANSACTION;
    public static final int NOTIFY_LAUNCH_TASK_BEHIND_COMPLETE_TRANSACTION;
    public static final int START_ACTIVITY_FROM_RECENTS_TRANSACTION;
    public static final int NOTIFY_ENTER_ANIMATION_COMPLETE_TRANSACTION;
    public static final int KEYGUARD_WAITING_FOR_ACTIVITY_DRAWN_TRANSACTION;
    public static final int START_ACTIVITY_AS_CALLER_TRANSACTION;
    public static final int ADD_APP_TASK_TRANSACTION;
    public static final int GET_APP_TASK_THUMBNAIL_SIZE_TRANSACTION;
    public static final int RELEASE_ACTIVITY_INSTANCE_TRANSACTION;
    public static final int RELEASE_SOME_ACTIVITIES_TRANSACTION;
    public static final int BOOT_ANIMATION_COMPLETE_TRANSACTION;
    public static final int GET_TASK_DESCRIPTION_ICON_TRANSACTION;
    public static final int LAUNCH_ASSIST_INTENT_TRANSACTION;

    public abstract int startActivity(android.app.IApplicationThread, java.lang.String, android.content.Intent, java.lang.String, android.os.IBinder, java.lang.String, int, int, android.app.ProfilerInfo, android.os.Bundle) throws android.os.RemoteException;

    public abstract int startActivityAsUser(android.app.IApplicationThread, java.lang.String, android.content.Intent, java.lang.String, android.os.IBinder, java.lang.String, int, int, android.app.ProfilerInfo, android.os.Bundle, int) throws android.os.RemoteException;

    public abstract int startActivityAsCaller(android.app.IApplicationThread, java.lang.String, android.content.Intent, java.lang.String, android.os.IBinder, java.lang.String, int, int, android.app.ProfilerInfo, android.os.Bundle, int) throws android.os.RemoteException;

    public abstract android.app.IActivityManager$WaitResult startActivityAndWait(android.app.IApplicationThread, java.lang.String, android.content.Intent, java.lang.String, android.os.IBinder, java.lang.String, int, int, android.app.ProfilerInfo, android.os.Bundle, int) throws android.os.RemoteException;

    public abstract int startActivityWithConfig(android.app.IApplicationThread, java.lang.String, android.content.Intent, java.lang.String, android.os.IBinder, java.lang.String, int, int, android.content.res.Configuration, android.os.Bundle, int) throws android.os.RemoteException;

    public abstract int startActivityIntentSender(android.app.IApplicationThread, android.content.IntentSender, android.content.Intent, java.lang.String, android.os.IBinder, java.lang.String, int, int, int, android.os.Bundle) throws android.os.RemoteException;

    public abstract int startVoiceActivity(java.lang.String, int, int, android.content.Intent, java.lang.String, android.service.voice.IVoiceInteractionSession, com.android.internal.app.IVoiceInteractor, int, android.app.ProfilerInfo, android.os.Bundle, int) throws android.os.RemoteException;

    public abstract boolean startNextMatchingActivity(android.os.IBinder, android.content.Intent, android.os.Bundle) throws android.os.RemoteException;

    public abstract int startActivityFromRecents(int, android.os.Bundle) throws android.os.RemoteException;

    public abstract boolean finishActivity(android.os.IBinder, int, android.content.Intent, boolean) throws android.os.RemoteException;

    public abstract void finishSubActivity(android.os.IBinder, java.lang.String, int) throws android.os.RemoteException;

    public abstract boolean finishActivityAffinity(android.os.IBinder) throws android.os.RemoteException;

    public abstract void finishVoiceTask(android.service.voice.IVoiceInteractionSession) throws android.os.RemoteException;

    public abstract boolean releaseActivityInstance(android.os.IBinder) throws android.os.RemoteException;

    public abstract void releaseSomeActivities(android.app.IApplicationThread) throws android.os.RemoteException;

    public abstract boolean willActivityBeVisible(android.os.IBinder) throws android.os.RemoteException;

    public abstract android.content.Intent registerReceiver(android.app.IApplicationThread, java.lang.String, android.content.IIntentReceiver, android.content.IntentFilter, java.lang.String, int) throws android.os.RemoteException;

    public abstract void unregisterReceiver(android.content.IIntentReceiver) throws android.os.RemoteException;

    public abstract int broadcastIntent(android.app.IApplicationThread, android.content.Intent, java.lang.String, android.content.IIntentReceiver, int, java.lang.String, android.os.Bundle, java.lang.String, int, boolean, boolean, int) throws android.os.RemoteException;

    public abstract void unbroadcastIntent(android.app.IApplicationThread, android.content.Intent, int) throws android.os.RemoteException;

    public abstract void finishReceiver(android.os.IBinder, int, java.lang.String, android.os.Bundle, boolean) throws android.os.RemoteException;

    public abstract void attachApplication(android.app.IApplicationThread) throws android.os.RemoteException;

    public abstract void activityResumed(android.os.IBinder) throws android.os.RemoteException;

    public abstract void activityIdle(android.os.IBinder, android.content.res.Configuration, boolean) throws android.os.RemoteException;

    public abstract void activityPaused(android.os.IBinder) throws android.os.RemoteException;

    public abstract void activityStopped(android.os.IBinder, android.os.Bundle, android.os.PersistableBundle, java.lang.CharSequence) throws android.os.RemoteException;

    public abstract void activitySlept(android.os.IBinder) throws android.os.RemoteException;

    public abstract void activityDestroyed(android.os.IBinder) throws android.os.RemoteException;

    public abstract java.lang.String getCallingPackage(android.os.IBinder) throws android.os.RemoteException;

    public abstract android.content.ComponentName getCallingActivity(android.os.IBinder) throws android.os.RemoteException;

    public abstract java.util.List getAppTasks(java.lang.String) throws android.os.RemoteException;

    public abstract int addAppTask(android.os.IBinder, android.content.Intent, android.app.ActivityManager$TaskDescription, android.graphics.Bitmap) throws android.os.RemoteException;

    public abstract android.graphics.Point getAppTaskThumbnailSize() throws android.os.RemoteException;

    public abstract java.util.List getTasks(int, int) throws android.os.RemoteException;

    public abstract java.util.List getRecentTasks(int, int, int) throws android.os.RemoteException;

    public abstract android.app.ActivityManager$TaskThumbnail getTaskThumbnail(int) throws android.os.RemoteException;

    public abstract java.util.List getServices(int, int) throws android.os.RemoteException;

    public abstract java.util.List getProcessesInErrorState() throws android.os.RemoteException;

    public abstract void moveTaskToFront(int, int, android.os.Bundle) throws android.os.RemoteException;

    public abstract void moveTaskToBack(int) throws android.os.RemoteException;

    public abstract boolean moveActivityTaskToBack(android.os.IBinder, boolean) throws android.os.RemoteException;

    public abstract void moveTaskBackwards(int) throws android.os.RemoteException;

    public abstract void moveTaskToStack(int, int, boolean) throws android.os.RemoteException;

    public abstract void resizeStack(int, android.graphics.Rect) throws android.os.RemoteException;

    public abstract java.util.List getAllStackInfos() throws android.os.RemoteException;

    public abstract android.app.ActivityManager$StackInfo getStackInfo(int) throws android.os.RemoteException;

    public abstract boolean isInHomeStack(int) throws android.os.RemoteException;

    public abstract void setFocusedStack(int) throws android.os.RemoteException;

    public abstract int getTaskForActivity(android.os.IBinder, boolean) throws android.os.RemoteException;

    public abstract android.app.IActivityManager$ContentProviderHolder getContentProvider(android.app.IApplicationThread, java.lang.String, int, boolean) throws android.os.RemoteException;

    public abstract android.app.IActivityManager$ContentProviderHolder getContentProviderExternal(java.lang.String, int, android.os.IBinder) throws android.os.RemoteException;

    public abstract void removeContentProvider(android.os.IBinder, boolean) throws android.os.RemoteException;

    public abstract void removeContentProviderExternal(java.lang.String, android.os.IBinder) throws android.os.RemoteException;

    public abstract void publishContentProviders(android.app.IApplicationThread, java.util.List) throws android.os.RemoteException;

    public abstract boolean refContentProvider(android.os.IBinder, int, int) throws android.os.RemoteException;

    public abstract void unstableProviderDied(android.os.IBinder) throws android.os.RemoteException;

    public abstract void appNotRespondingViaProvider(android.os.IBinder) throws android.os.RemoteException;

    public abstract android.app.PendingIntent getRunningServiceControlPanel(android.content.ComponentName) throws android.os.RemoteException;

    public abstract android.content.ComponentName startService(android.app.IApplicationThread, android.content.Intent, java.lang.String, int) throws android.os.RemoteException;

    public abstract int stopService(android.app.IApplicationThread, android.content.Intent, java.lang.String, int) throws android.os.RemoteException;

    public abstract boolean stopServiceToken(android.content.ComponentName, android.os.IBinder, int) throws android.os.RemoteException;

    public abstract void setServiceForeground(android.content.ComponentName, android.os.IBinder, int, android.app.Notification, boolean) throws android.os.RemoteException;

    public abstract int bindService(android.app.IApplicationThread, android.os.IBinder, android.content.Intent, java.lang.String, android.app.IServiceConnection, int, int) throws android.os.RemoteException;

    public abstract boolean unbindService(android.app.IServiceConnection) throws android.os.RemoteException;

    public abstract void publishService(android.os.IBinder, android.content.Intent, android.os.IBinder) throws android.os.RemoteException;

    public abstract void unbindFinished(android.os.IBinder, android.content.Intent, boolean) throws android.os.RemoteException;

    public abstract void serviceDoneExecuting(android.os.IBinder, int, int, int) throws android.os.RemoteException;

    public abstract android.os.IBinder peekService(android.content.Intent, java.lang.String) throws android.os.RemoteException;

    public abstract boolean bindBackupAgent(android.content.pm.ApplicationInfo, int) throws android.os.RemoteException;

    public abstract void clearPendingBackup() throws android.os.RemoteException;

    public abstract void backupAgentCreated(java.lang.String, android.os.IBinder) throws android.os.RemoteException;

    public abstract void unbindBackupAgent(android.content.pm.ApplicationInfo) throws android.os.RemoteException;

    public abstract void killApplicationProcess(java.lang.String, int) throws android.os.RemoteException;

    public abstract boolean startInstrumentation(android.content.ComponentName, java.lang.String, int, android.os.Bundle, android.app.IInstrumentationWatcher, android.app.IUiAutomationConnection, int, java.lang.String) throws android.os.RemoteException;

    public abstract void finishInstrumentation(android.app.IApplicationThread, int, android.os.Bundle) throws android.os.RemoteException;

    public abstract android.content.res.Configuration getConfiguration() throws android.os.RemoteException;

    public abstract void updateConfiguration(android.content.res.Configuration) throws android.os.RemoteException;

    public abstract void setRequestedOrientation(android.os.IBinder, int) throws android.os.RemoteException;

    public abstract int getRequestedOrientation(android.os.IBinder) throws android.os.RemoteException;

    public abstract android.content.ComponentName getActivityClassForToken(android.os.IBinder) throws android.os.RemoteException;

    public abstract java.lang.String getPackageForToken(android.os.IBinder) throws android.os.RemoteException;

    public abstract android.content.IIntentSender getIntentSender(int, java.lang.String, android.os.IBinder, java.lang.String, int, android.content.Intent[], java.lang.String[], int, android.os.Bundle, int) throws android.os.RemoteException;

    public abstract void cancelIntentSender(android.content.IIntentSender) throws android.os.RemoteException;

    public abstract boolean clearApplicationUserData(java.lang.String, android.content.pm.IPackageDataObserver, int) throws android.os.RemoteException;

    public abstract java.lang.String getPackageForIntentSender(android.content.IIntentSender) throws android.os.RemoteException;

    public abstract int getUidForIntentSender(android.content.IIntentSender) throws android.os.RemoteException;

    public abstract int handleIncomingUser(int, int, int, boolean, boolean, java.lang.String, java.lang.String) throws android.os.RemoteException;

    public abstract void setProcessLimit(int) throws android.os.RemoteException;

    public abstract int getProcessLimit() throws android.os.RemoteException;

    public abstract void setProcessForeground(android.os.IBinder, int, boolean) throws android.os.RemoteException;

    public abstract int checkPermission(java.lang.String, int, int) throws android.os.RemoteException;

    public abstract int checkUriPermission(android.net.Uri, int, int, int, int) throws android.os.RemoteException;

    public abstract void grantUriPermission(android.app.IApplicationThread, java.lang.String, android.net.Uri, int, int) throws android.os.RemoteException;

    public abstract void revokeUriPermission(android.app.IApplicationThread, android.net.Uri, int, int) throws android.os.RemoteException;

    public abstract void takePersistableUriPermission(android.net.Uri, int, int) throws android.os.RemoteException;

    public abstract void releasePersistableUriPermission(android.net.Uri, int, int) throws android.os.RemoteException;

    public abstract android.content.pm.ParceledListSlice getPersistedUriPermissions(java.lang.String, boolean) throws android.os.RemoteException;

    public abstract void showWaitingForDebugger(android.app.IApplicationThread, boolean) throws android.os.RemoteException;

    public abstract void getMemoryInfo(android.app.ActivityManager$MemoryInfo) throws android.os.RemoteException;

    public abstract void killBackgroundProcesses(java.lang.String, int) throws android.os.RemoteException;

    public abstract void killAllBackgroundProcesses() throws android.os.RemoteException;

    public abstract void forceStopPackage(java.lang.String, int) throws android.os.RemoteException;

    public abstract void setLockScreenShown(boolean) throws android.os.RemoteException;

    public abstract void unhandledBack() throws android.os.RemoteException;

    public abstract android.os.ParcelFileDescriptor openContentUri(android.net.Uri) throws android.os.RemoteException;

    public abstract void setDebugApp(java.lang.String, boolean, boolean) throws android.os.RemoteException;

    public abstract void setAlwaysFinish(boolean) throws android.os.RemoteException;

    public abstract void setActivityController(android.app.IActivityController) throws android.os.RemoteException;

    public abstract void enterSafeMode() throws android.os.RemoteException;

    public abstract void noteWakeupAlarm(android.content.IIntentSender, int, java.lang.String) throws android.os.RemoteException;

    public abstract boolean killPids(int[], java.lang.String, boolean) throws android.os.RemoteException;

    public abstract boolean killProcessesBelowForeground(java.lang.String) throws android.os.RemoteException;

    public abstract void handleApplicationCrash(android.os.IBinder, android.app.ApplicationErrorReport$CrashInfo) throws android.os.RemoteException;

    public abstract boolean handleApplicationWtf(android.os.IBinder, java.lang.String, boolean, android.app.ApplicationErrorReport$CrashInfo) throws android.os.RemoteException;

    public abstract void handleApplicationStrictModeViolation(android.os.IBinder, int, android.os.StrictMode$ViolationInfo) throws android.os.RemoteException;

    public abstract void signalPersistentProcesses(int) throws android.os.RemoteException;

    public abstract java.util.List getRunningAppProcesses() throws android.os.RemoteException;

    public abstract java.util.List getRunningExternalApplications() throws android.os.RemoteException;

    public abstract void getMyMemoryState(android.app.ActivityManager$RunningAppProcessInfo) throws android.os.RemoteException;

    public abstract android.content.pm.ConfigurationInfo getDeviceConfigurationInfo() throws android.os.RemoteException;

    public abstract boolean profileControl(java.lang.String, int, boolean, android.app.ProfilerInfo, int) throws android.os.RemoteException;

    public abstract boolean shutdown(int) throws android.os.RemoteException;

    public abstract void stopAppSwitches() throws android.os.RemoteException;

    public abstract void resumeAppSwitches() throws android.os.RemoteException;

    public abstract void addPackageDependency(java.lang.String) throws android.os.RemoteException;

    public abstract void killApplicationWithAppId(java.lang.String, int, java.lang.String) throws android.os.RemoteException;

    public abstract void closeSystemDialogs(java.lang.String) throws android.os.RemoteException;

    public abstract android.os.Debug$MemoryInfo[] getProcessMemoryInfo(int[]) throws android.os.RemoteException;

    public abstract void overridePendingTransition(android.os.IBinder, java.lang.String, int, int) throws android.os.RemoteException;

    public abstract boolean isUserAMonkey() throws android.os.RemoteException;

    public abstract void setUserIsMonkey(boolean) throws android.os.RemoteException;

    public abstract void finishHeavyWeightApp() throws android.os.RemoteException;

    public abstract boolean convertFromTranslucent(android.os.IBinder) throws android.os.RemoteException;

    public abstract boolean convertToTranslucent(android.os.IBinder, android.app.ActivityOptions) throws android.os.RemoteException;

    public abstract void notifyActivityDrawn(android.os.IBinder) throws android.os.RemoteException;

    public abstract android.app.ActivityOptions getActivityOptions(android.os.IBinder) throws android.os.RemoteException;

    public abstract void bootAnimationComplete() throws android.os.RemoteException;

    public abstract void setImmersive(android.os.IBinder, boolean) throws android.os.RemoteException;

    public abstract boolean isImmersive(android.os.IBinder) throws android.os.RemoteException;

    public abstract boolean isTopActivityImmersive() throws android.os.RemoteException;

    public abstract boolean isTopOfTask(android.os.IBinder) throws android.os.RemoteException;

    public abstract void crashApplication(int, int, java.lang.String, java.lang.String) throws android.os.RemoteException;

    public abstract java.lang.String getProviderMimeType(android.net.Uri, int) throws android.os.RemoteException;

    public abstract android.os.IBinder newUriPermissionOwner(java.lang.String) throws android.os.RemoteException;

    public abstract void grantUriPermissionFromOwner(android.os.IBinder, int, java.lang.String, android.net.Uri, int, int, int) throws android.os.RemoteException;

    public abstract void revokeUriPermissionFromOwner(android.os.IBinder, android.net.Uri, int, int) throws android.os.RemoteException;

    public abstract int checkGrantUriPermission(int, java.lang.String, android.net.Uri, int, int) throws android.os.RemoteException;

    public abstract boolean dumpHeap(java.lang.String, int, boolean, java.lang.String, android.os.ParcelFileDescriptor) throws android.os.RemoteException;

    public abstract int startActivities(android.app.IApplicationThread, java.lang.String, android.content.Intent[], java.lang.String[], android.os.IBinder, android.os.Bundle, int) throws android.os.RemoteException;

    public abstract int getFrontActivityScreenCompatMode() throws android.os.RemoteException;

    public abstract void setFrontActivityScreenCompatMode(int) throws android.os.RemoteException;

    public abstract int getPackageScreenCompatMode(java.lang.String) throws android.os.RemoteException;

    public abstract void setPackageScreenCompatMode(java.lang.String, int) throws android.os.RemoteException;

    public abstract boolean getPackageAskScreenCompat(java.lang.String) throws android.os.RemoteException;

    public abstract void setPackageAskScreenCompat(java.lang.String, boolean) throws android.os.RemoteException;

    public abstract boolean switchUser(int) throws android.os.RemoteException;

    public abstract boolean startUserInBackground(int) throws android.os.RemoteException;

    public abstract int stopUser(int, android.app.IStopUserCallback) throws android.os.RemoteException;

    public abstract android.content.pm.UserInfo getCurrentUser() throws android.os.RemoteException;

    public abstract boolean isUserRunning(int, boolean) throws android.os.RemoteException;

    public abstract int[] getRunningUserIds() throws android.os.RemoteException;

    public abstract boolean removeTask(int, int) throws android.os.RemoteException;

    public abstract void registerProcessObserver(android.app.IProcessObserver) throws android.os.RemoteException;

    public abstract void unregisterProcessObserver(android.app.IProcessObserver) throws android.os.RemoteException;

    public abstract boolean isIntentSenderTargetedToPackage(android.content.IIntentSender) throws android.os.RemoteException;

    public abstract boolean isIntentSenderAnActivity(android.content.IIntentSender) throws android.os.RemoteException;

    public abstract android.content.Intent getIntentForIntentSender(android.content.IIntentSender) throws android.os.RemoteException;

    public abstract java.lang.String getTagForIntentSender(android.content.IIntentSender, java.lang.String) throws android.os.RemoteException;

    public abstract void updatePersistentConfiguration(android.content.res.Configuration) throws android.os.RemoteException;

    public abstract long[] getProcessPss(int[]) throws android.os.RemoteException;

    public abstract void showBootMessage(java.lang.CharSequence, boolean) throws android.os.RemoteException;

    public abstract void keyguardWaitingForActivityDrawn() throws android.os.RemoteException;

    public abstract boolean shouldUpRecreateTask(android.os.IBinder, java.lang.String) throws android.os.RemoteException;

    public abstract boolean navigateUpTo(android.os.IBinder, android.content.Intent, int, android.content.Intent) throws android.os.RemoteException;

    public abstract int getLaunchedFromUid(android.os.IBinder) throws android.os.RemoteException;

    public abstract java.lang.String getLaunchedFromPackage(android.os.IBinder) throws android.os.RemoteException;

    public abstract void registerUserSwitchObserver(android.app.IUserSwitchObserver) throws android.os.RemoteException;

    public abstract void unregisterUserSwitchObserver(android.app.IUserSwitchObserver) throws android.os.RemoteException;

    public abstract void requestBugReport() throws android.os.RemoteException;

    public abstract long inputDispatchingTimedOut(int, boolean, java.lang.String) throws android.os.RemoteException;

    public abstract android.os.Bundle getAssistContextExtras(int) throws android.os.RemoteException;

    public abstract void reportAssistContextExtras(android.os.IBinder, android.os.Bundle) throws android.os.RemoteException;

    public abstract boolean launchAssistIntent(android.content.Intent, int, java.lang.String, int) throws android.os.RemoteException;

    public abstract void killUid(int, java.lang.String) throws android.os.RemoteException;

    public abstract void hang(android.os.IBinder, boolean) throws android.os.RemoteException;

    public abstract void reportActivityFullyDrawn(android.os.IBinder) throws android.os.RemoteException;

    public abstract void restart() throws android.os.RemoteException;

    public abstract void performIdleMaintenance() throws android.os.RemoteException;

    public abstract android.app.IActivityContainer createActivityContainer(android.os.IBinder, android.app.IActivityContainerCallback) throws android.os.RemoteException;

    public abstract void deleteActivityContainer(android.app.IActivityContainer) throws android.os.RemoteException;

    public abstract android.app.IActivityContainer getEnclosingActivityContainer(android.os.IBinder) throws android.os.RemoteException;

    public abstract android.os.IBinder getHomeActivityToken() throws android.os.RemoteException;

    public abstract void startLockTaskModeOnCurrent() throws android.os.RemoteException;

    public abstract void startLockTaskMode(int) throws android.os.RemoteException;

    public abstract void startLockTaskMode(android.os.IBinder) throws android.os.RemoteException;

    public abstract void stopLockTaskMode() throws android.os.RemoteException;

    public abstract void stopLockTaskModeOnCurrent() throws android.os.RemoteException;

    public abstract boolean isInLockTaskMode() throws android.os.RemoteException;

    public abstract void setTaskDescription(android.os.IBinder, android.app.ActivityManager$TaskDescription) throws android.os.RemoteException;

    public abstract android.graphics.Bitmap getTaskDescriptionIcon(java.lang.String) throws android.os.RemoteException;

    public abstract boolean requestVisibleBehind(android.os.IBinder, boolean) throws android.os.RemoteException;

    public abstract boolean isBackgroundVisibleBehind(android.os.IBinder) throws android.os.RemoteException;

    public abstract void backgroundResourcesReleased(android.os.IBinder) throws android.os.RemoteException;

    public abstract void notifyLaunchTaskBehindComplete(android.os.IBinder) throws android.os.RemoteException;

    public abstract void notifyEnterAnimationComplete(android.os.IBinder) throws android.os.RemoteException;

    public abstract boolean testIsSystemReady();

    public static void <clinit>()
    {
        <android.app.IActivityManager: int LAUNCH_ASSIST_INTENT_TRANSACTION> = 240;

        <android.app.IActivityManager: int GET_TASK_DESCRIPTION_ICON_TRANSACTION> = 239;

        <android.app.IActivityManager: int BOOT_ANIMATION_COMPLETE_TRANSACTION> = 238;

        <android.app.IActivityManager: int RELEASE_SOME_ACTIVITIES_TRANSACTION> = 237;

        <android.app.IActivityManager: int RELEASE_ACTIVITY_INSTANCE_TRANSACTION> = 236;

        <android.app.IActivityManager: int GET_APP_TASK_THUMBNAIL_SIZE_TRANSACTION> = 235;

        <android.app.IActivityManager: int ADD_APP_TASK_TRANSACTION> = 234;

        <android.app.IActivityManager: int START_ACTIVITY_AS_CALLER_TRANSACTION> = 233;

        <android.app.IActivityManager: int KEYGUARD_WAITING_FOR_ACTIVITY_DRAWN_TRANSACTION> = 232;

        <android.app.IActivityManager: int NOTIFY_ENTER_ANIMATION_COMPLETE_TRANSACTION> = 231;

        <android.app.IActivityManager: int START_ACTIVITY_FROM_RECENTS_TRANSACTION> = 230;

        <android.app.IActivityManager: int NOTIFY_LAUNCH_TASK_BEHIND_COMPLETE_TRANSACTION> = 229;

        <android.app.IActivityManager: int BACKGROUND_RESOURCES_RELEASED_TRANSACTION> = 228;

        <android.app.IActivityManager: int IS_BACKGROUND_VISIBLE_BEHIND_TRANSACTION> = 227;

        <android.app.IActivityManager: int REQUEST_VISIBLE_BEHIND_TRANSACTION> = 226;

        <android.app.IActivityManager: int IS_TOP_OF_TASK_TRANSACTION> = 225;

        <android.app.IActivityManager: int FINISH_VOICE_TASK_TRANSACTION> = 224;

        <android.app.IActivityManager: int STOP_LOCK_TASK_BY_CURRENT_TRANSACTION> = 223;

        <android.app.IActivityManager: int START_LOCK_TASK_BY_CURRENT_TRANSACTION> = 222;

        <android.app.IActivityManager: int GET_APP_TASKS_TRANSACTION> = 221;

        <android.app.IActivityManager: int GET_ACTIVITY_OPTIONS_TRANSACTION> = 220;

        <android.app.IActivityManager: int START_VOICE_ACTIVITY_TRANSACTION> = 219;

        <android.app.IActivityManager: int SET_TASK_DESCRIPTION_TRANSACTION> = 218;

        <android.app.IActivityManager: int IS_IN_LOCK_TASK_MODE_TRANSACTION> = 217;

        <android.app.IActivityManager: int STOP_LOCK_TASK_MODE_TRANSACTION> = 216;

        <android.app.IActivityManager: int START_LOCK_TASK_BY_TOKEN_TRANSACTION> = 215;

        <android.app.IActivityManager: int START_LOCK_TASK_BY_TASK_ID_TRANSACTION> = 214;

        <android.app.IActivityManager: int IS_IN_HOME_STACK_TRANSACTION> = 213;

        <android.app.IActivityManager: int START_USER_IN_BACKGROUND_TRANSACTION> = 212;

        <android.app.IActivityManager: int GET_TAG_FOR_INTENT_SENDER_TRANSACTION> = 211;

        <android.app.IActivityManager: int DELETE_ACTIVITY_CONTAINER_TRANSACTION> = 186;

        <android.app.IActivityManager: int GET_ACTIVITY_CONTAINER_TRANSACTION> = 185;

        <android.app.IActivityManager: int GET_HOME_ACTIVITY_TOKEN_TRANSACTION> = 184;

        <android.app.IActivityManager: int APP_NOT_RESPONDING_VIA_PROVIDER_TRANSACTION> = 183;

        <android.app.IActivityManager: int GET_PERSISTED_URI_PERMISSIONS_TRANSACTION> = 182;

        <android.app.IActivityManager: int RELEASE_PERSISTABLE_URI_PERMISSION_TRANSACTION> = 181;

        <android.app.IActivityManager: int TAKE_PERSISTABLE_URI_PERMISSION_TRANSACTION> = 180;

        <android.app.IActivityManager: int PERFORM_IDLE_MAINTENANCE_TRANSACTION> = 179;

        <android.app.IActivityManager: int RESTART_TRANSACTION> = 178;

        <android.app.IActivityManager: int REPORT_ACTIVITY_FULLY_DRAWN_TRANSACTION> = 177;

        <android.app.IActivityManager: int NOTIFY_ACTIVITY_DRAWN_TRANSACTION> = 176;

        <android.app.IActivityManager: int CONVERT_TO_TRANSLUCENT_TRANSACTION> = 175;

        <android.app.IActivityManager: int CONVERT_FROM_TRANSLUCENT_TRANSACTION> = 174;

        <android.app.IActivityManager: int GET_STACK_INFO_TRANSACTION> = 173;

        <android.app.IActivityManager: int SET_FOCUSED_STACK_TRANSACTION> = 172;

        <android.app.IActivityManager: int GET_ALL_STACK_INFOS_TRANSACTION> = 171;

        <android.app.IActivityManager: int RESIZE_STACK_TRANSACTION> = 170;

        <android.app.IActivityManager: int MOVE_TASK_TO_STACK_TRANSACTION> = 169;

        <android.app.IActivityManager: int CREATE_ACTIVITY_CONTAINER_TRANSACTION> = 168;

        <android.app.IActivityManager: int HANG_TRANSACTION> = 167;

        <android.app.IActivityManager: int SET_USER_IS_MONKEY_TRANSACTION> = 166;

        <android.app.IActivityManager: int KILL_UID_TRANSACTION> = 165;

        <android.app.IActivityManager: int GET_LAUNCHED_FROM_PACKAGE_TRANSACTION> = 164;

        <android.app.IActivityManager: int REPORT_ASSIST_CONTEXT_EXTRAS_TRANSACTION> = 163;

        <android.app.IActivityManager: int GET_ASSIST_CONTEXT_EXTRAS_TRANSACTION> = 162;

        <android.app.IActivityManager: int GET_INTENT_FOR_INTENT_SENDER_TRANSACTION> = 161;

        <android.app.IActivityManager: int CLEAR_PENDING_BACKUP_TRANSACTION> = 160;

        <android.app.IActivityManager: int INPUT_DISPATCHING_TIMED_OUT_TRANSACTION> = 159;

        <android.app.IActivityManager: int REQUEST_BUG_REPORT_TRANSACTION> = 158;

        <android.app.IActivityManager: int GET_RUNNING_USER_IDS_TRANSACTION> = 157;

        <android.app.IActivityManager: int UNREGISTER_USER_SWITCH_OBSERVER_TRANSACTION> = 156;

        <android.app.IActivityManager: int REGISTER_USER_SWITCH_OBSERVER_TRANSACTION> = 155;

        <android.app.IActivityManager: int STOP_USER_TRANSACTION> = 154;

        <android.app.IActivityManager: int START_ACTIVITY_AS_USER_TRANSACTION> = 153;

        <android.app.IActivityManager: int IS_INTENT_SENDER_AN_ACTIVITY_TRANSACTION> = 152;

        <android.app.IActivityManager: int UNSTABLE_PROVIDER_DIED_TRANSACTION> = 151;

        <android.app.IActivityManager: int GET_LAUNCHED_FROM_UID_TRANSACTION> = 150;

        <android.app.IActivityManager: int FINISH_ACTIVITY_AFFINITY_TRANSACTION> = 149;

        <android.app.IActivityManager: int SET_LOCK_SCREEN_SHOWN_TRANSACTION> = 148;

        <android.app.IActivityManager: int NAVIGATE_UP_TO_TRANSACTION> = 147;

        <android.app.IActivityManager: int SHOULD_UP_RECREATE_TASK_TRANSACTION> = 146;

        <android.app.IActivityManager: int GET_CURRENT_USER_TRANSACTION> = 145;

        <android.app.IActivityManager: int KILL_PROCESSES_BELOW_FOREGROUND_TRANSACTION> = 144;

        <android.app.IActivityManager: int GET_MY_MEMORY_STATE_TRANSACTION> = 143;

        <android.app.IActivityManager: int REMOVE_CONTENT_PROVIDER_EXTERNAL_TRANSACTION> = 142;

        <android.app.IActivityManager: int GET_CONTENT_PROVIDER_EXTERNAL_TRANSACTION> = 141;

        <android.app.IActivityManager: int KILL_ALL_BACKGROUND_PROCESSES_TRANSACTION> = 140;

        <android.app.IActivityManager: int SHOW_BOOT_MESSAGE_TRANSACTION> = 138;

        <android.app.IActivityManager: int GET_PROCESS_PSS_TRANSACTION> = 137;

        <android.app.IActivityManager: int UPDATE_PERSISTENT_CONFIGURATION_TRANSACTION> = 136;

        <android.app.IActivityManager: int IS_INTENT_SENDER_TARGETED_TO_PACKAGE_TRANSACTION> = 135;

        <android.app.IActivityManager: int UNREGISTER_PROCESS_OBSERVER_TRANSACTION> = 134;

        <android.app.IActivityManager: int REGISTER_PROCESS_OBSERVER_TRANSACTION> = 133;

        <android.app.IActivityManager: int REMOVE_TASK_TRANSACTION> = 132;

        <android.app.IActivityManager: int ___AVAILABLE_1___> = 131;

        <android.app.IActivityManager: int SWITCH_USER_TRANSACTION> = 130;

        <android.app.IActivityManager: int SET_PACKAGE_ASK_SCREEN_COMPAT_TRANSACTION> = 129;

        <android.app.IActivityManager: int GET_PACKAGE_ASK_SCREEN_COMPAT_TRANSACTION> = 128;

        <android.app.IActivityManager: int SET_PACKAGE_SCREEN_COMPAT_MODE_TRANSACTION> = 127;

        <android.app.IActivityManager: int GET_PACKAGE_SCREEN_COMPAT_MODE_TRANSACTION> = 126;

        <android.app.IActivityManager: int SET_FRONT_ACTIVITY_SCREEN_COMPAT_MODE_TRANSACTION> = 125;

        <android.app.IActivityManager: int GET_FRONT_ACTIVITY_SCREEN_COMPAT_MODE_TRANSACTION> = 124;

        <android.app.IActivityManager: int ACTIVITY_SLEPT_TRANSACTION> = 123;

        <android.app.IActivityManager: int IS_USER_RUNNING_TRANSACTION> = 122;

        <android.app.IActivityManager: int START_ACTIVITIES_TRANSACTION> = 121;

        <android.app.IActivityManager: int DUMP_HEAP_TRANSACTION> = 120;

        <android.app.IActivityManager: int CHECK_GRANT_URI_PERMISSION_TRANSACTION> = 119;

        <android.app.IActivityManager: int REVOKE_URI_PERMISSION_FROM_OWNER_TRANSACTION> = 118;

        <android.app.IActivityManager: int GRANT_URI_PERMISSION_FROM_OWNER_TRANSACTION> = 117;

        <android.app.IActivityManager: int NEW_URI_PERMISSION_OWNER_TRANSACTION> = 116;

        <android.app.IActivityManager: int GET_PROVIDER_MIME_TYPE_TRANSACTION> = 115;

        <android.app.IActivityManager: int CRASH_APPLICATION_TRANSACTION> = 114;

        <android.app.IActivityManager: int IS_TOP_ACTIVITY_IMMERSIVE_TRANSACTION> = 113;

        <android.app.IActivityManager: int SET_IMMERSIVE_TRANSACTION> = 112;

        <android.app.IActivityManager: int IS_IMMERSIVE_TRANSACTION> = 111;

        <android.app.IActivityManager: int HANDLE_APPLICATION_STRICT_MODE_VIOLATION_TRANSACTION> = 110;

        <android.app.IActivityManager: int FINISH_HEAVY_WEIGHT_APP_TRANSACTION> = 109;

        <android.app.IActivityManager: int GET_RUNNING_EXTERNAL_APPLICATIONS_TRANSACTION> = 108;

        <android.app.IActivityManager: int START_ACTIVITY_WITH_CONFIG_TRANSACTION> = 107;

        <android.app.IActivityManager: int WILL_ACTIVITY_BE_VISIBLE_TRANSACTION> = 106;

        <android.app.IActivityManager: int START_ACTIVITY_AND_WAIT_TRANSACTION> = 105;

        <android.app.IActivityManager: int IS_USER_A_MONKEY_TRANSACTION> = 104;

        <android.app.IActivityManager: int KILL_BACKGROUND_PROCESSES_TRANSACTION> = 103;

        <android.app.IActivityManager: int HANDLE_APPLICATION_WTF_TRANSACTION> = 102;

        <android.app.IActivityManager: int OVERRIDE_PENDING_TRANSITION_TRANSACTION> = 101;

        <android.app.IActivityManager: int START_ACTIVITY_INTENT_SENDER_TRANSACTION> = 100;

        <android.app.IActivityManager: int KILL_APPLICATION_PROCESS_TRANSACTION> = 99;

        <android.app.IActivityManager: int GET_PROCESS_MEMORY_INFO_TRANSACTION> = 98;

        <android.app.IActivityManager: int CLOSE_SYSTEM_DIALOGS_TRANSACTION> = 97;

        <android.app.IActivityManager: int KILL_APPLICATION_WITH_APPID_TRANSACTION> = 96;

        <android.app.IActivityManager: int ADD_PACKAGE_DEPENDENCY_TRANSACTION> = 95;

        <android.app.IActivityManager: int HANDLE_INCOMING_USER_TRANSACTION> = 94;

        <android.app.IActivityManager: int GET_UID_FOR_INTENT_SENDER_TRANSACTION> = 93;

        <android.app.IActivityManager: int UNBIND_BACKUP_AGENT_TRANSACTION> = 92;

        <android.app.IActivityManager: int BACKUP_AGENT_CREATED_TRANSACTION> = 91;

        <android.app.IActivityManager: int START_BACKUP_AGENT_TRANSACTION> = 90;

        <android.app.IActivityManager: int RESUME_APP_SWITCHES_TRANSACTION> = 89;

        <android.app.IActivityManager: int STOP_APP_SWITCHES_TRANSACTION> = 88;

        <android.app.IActivityManager: int SHUTDOWN_TRANSACTION> = 87;

        <android.app.IActivityManager: int PROFILE_CONTROL_TRANSACTION> = 86;

        <android.app.IActivityManager: int PEEK_SERVICE_TRANSACTION> = 85;

        <android.app.IActivityManager: int GET_DEVICE_CONFIGURATION_TRANSACTION> = 84;

        <android.app.IActivityManager: int GET_RUNNING_APP_PROCESSES_TRANSACTION> = 83;

        <android.app.IActivityManager: int GET_TASK_THUMBNAIL_TRANSACTION> = 82;

        <android.app.IActivityManager: int GET_SERVICES_TRANSACTION> = 81;

        <android.app.IActivityManager: int KILL_PIDS_TRANSACTION> = 80;

        <android.app.IActivityManager: int FORCE_STOP_PACKAGE_TRANSACTION> = 79;

        <android.app.IActivityManager: int CLEAR_APP_DATA_TRANSACTION> = 78;

        <android.app.IActivityManager: int GET_PROCESSES_IN_ERROR_STATE_TRANSACTION> = 77;

        <android.app.IActivityManager: int GET_MEMORY_INFO_TRANSACTION> = 76;

        <android.app.IActivityManager: int MOVE_ACTIVITY_TASK_TO_BACK_TRANSACTION> = 75;

        <android.app.IActivityManager: int SET_SERVICE_FOREGROUND_TRANSACTION> = 74;

        <android.app.IActivityManager: int SET_PROCESS_FOREGROUND_TRANSACTION> = 73;

        <android.app.IActivityManager: int UNBIND_FINISHED_TRANSACTION> = 72;

        <android.app.IActivityManager: int GET_REQUESTED_ORIENTATION_TRANSACTION> = 71;

        <android.app.IActivityManager: int SET_REQUESTED_ORIENTATION_TRANSACTION> = 70;

        <android.app.IActivityManager: int REMOVE_CONTENT_PROVIDER_TRANSACTION> = 69;

        <android.app.IActivityManager: int NOTE_WAKEUP_ALARM_TRANSACTION> = 68;

        <android.app.IActivityManager: int START_NEXT_MATCHING_ACTIVITY_TRANSACTION> = 67;

        <android.app.IActivityManager: int ENTER_SAFE_MODE_TRANSACTION> = 66;

        <android.app.IActivityManager: int GET_PACKAGE_FOR_INTENT_SENDER_TRANSACTION> = 65;

        <android.app.IActivityManager: int CANCEL_INTENT_SENDER_TRANSACTION> = 64;

        <android.app.IActivityManager: int GET_INTENT_SENDER_TRANSACTION> = 63;

        <android.app.IActivityManager: int ACTIVITY_DESTROYED_TRANSACTION> = 62;

        <android.app.IActivityManager: int SERVICE_DONE_EXECUTING_TRANSACTION> = 61;

        <android.app.IActivityManager: int GET_RECENT_TASKS_TRANSACTION> = 60;

        <android.app.IActivityManager: int SIGNAL_PERSISTENT_PROCESSES_TRANSACTION> = 59;

        <android.app.IActivityManager: int SHOW_WAITING_FOR_DEBUGGER_TRANSACTION> = 58;

        <android.app.IActivityManager: int SET_ACTIVITY_CONTROLLER_TRANSACTION> = 57;

        <android.app.IActivityManager: int REVOKE_URI_PERMISSION_TRANSACTION> = 56;

        <android.app.IActivityManager: int GRANT_URI_PERMISSION_TRANSACTION> = 55;

        <android.app.IActivityManager: int CHECK_URI_PERMISSION_TRANSACTION> = 54;

        <android.app.IActivityManager: int CHECK_PERMISSION_TRANSACTION> = 53;

        <android.app.IActivityManager: int GET_PROCESS_LIMIT_TRANSACTION> = 52;

        <android.app.IActivityManager: int SET_PROCESS_LIMIT_TRANSACTION> = 51;

        <android.app.IActivityManager: int GET_PACKAGE_FOR_TOKEN_TRANSACTION> = 50;

        <android.app.IActivityManager: int GET_ACTIVITY_CLASS_FOR_TOKEN_TRANSACTION> = 49;

        <android.app.IActivityManager: int STOP_SERVICE_TOKEN_TRANSACTION> = 48;

        <android.app.IActivityManager: int UPDATE_CONFIGURATION_TRANSACTION> = 47;

        <android.app.IActivityManager: int GET_CONFIGURATION_TRANSACTION> = 46;

        <android.app.IActivityManager: int FINISH_INSTRUMENTATION_TRANSACTION> = 45;

        <android.app.IActivityManager: int START_INSTRUMENTATION_TRANSACTION> = 44;

        <android.app.IActivityManager: int SET_ALWAYS_FINISH_TRANSACTION> = 43;

        <android.app.IActivityManager: int SET_DEBUG_APP_TRANSACTION> = 42;

        <android.app.IActivityManager: int ACTIVITY_RESUMED_TRANSACTION> = 39;

        <android.app.IActivityManager: int PUBLISH_SERVICE_TRANSACTION> = 38;

        <android.app.IActivityManager: int UNBIND_SERVICE_TRANSACTION> = 37;

        <android.app.IActivityManager: int BIND_SERVICE_TRANSACTION> = 36;

        <android.app.IActivityManager: int STOP_SERVICE_TRANSACTION> = 35;

        <android.app.IActivityManager: int START_SERVICE_TRANSACTION> = 34;

        <android.app.IActivityManager: int GET_RUNNING_SERVICE_CONTROL_PANEL_TRANSACTION> = 33;

        <android.app.IActivityManager: int FINISH_SUB_ACTIVITY_TRANSACTION> = 32;

        <android.app.IActivityManager: int REF_CONTENT_PROVIDER_TRANSACTION> = 31;

        <android.app.IActivityManager: int PUBLISH_CONTENT_PROVIDERS_TRANSACTION> = 30;

        <android.app.IActivityManager: int GET_CONTENT_PROVIDER_TRANSACTION> = 29;

        <android.app.IActivityManager: int GET_TASK_FOR_ACTIVITY_TRANSACTION> = 27;

        <android.app.IActivityManager: int MOVE_TASK_BACKWARDS_TRANSACTION> = 26;

        <android.app.IActivityManager: int MOVE_TASK_TO_BACK_TRANSACTION> = 25;

        <android.app.IActivityManager: int MOVE_TASK_TO_FRONT_TRANSACTION> = 24;

        <android.app.IActivityManager: int GET_TASKS_TRANSACTION> = 23;

        <android.app.IActivityManager: int GET_CALLING_ACTIVITY_TRANSACTION> = 22;

        <android.app.IActivityManager: int GET_CALLING_PACKAGE_TRANSACTION> = 21;

        <android.app.IActivityManager: int ACTIVITY_STOPPED_TRANSACTION> = 20;

        <android.app.IActivityManager: int ACTIVITY_PAUSED_TRANSACTION> = 19;

        <android.app.IActivityManager: int ACTIVITY_IDLE_TRANSACTION> = 18;

        <android.app.IActivityManager: int ATTACH_APPLICATION_TRANSACTION> = 17;

        <android.app.IActivityManager: int FINISH_RECEIVER_TRANSACTION> = 16;

        <android.app.IActivityManager: int UNBROADCAST_INTENT_TRANSACTION> = 15;

        <android.app.IActivityManager: int BROADCAST_INTENT_TRANSACTION> = 14;

        <android.app.IActivityManager: int UNREGISTER_RECEIVER_TRANSACTION> = 13;

        <android.app.IActivityManager: int REGISTER_RECEIVER_TRANSACTION> = 12;

        <android.app.IActivityManager: int FINISH_ACTIVITY_TRANSACTION> = 11;

        <android.app.IActivityManager: int OPEN_CONTENT_URI_TRANSACTION> = 5;

        <android.app.IActivityManager: int UNHANDLED_BACK_TRANSACTION> = 4;

        <android.app.IActivityManager: int START_ACTIVITY_TRANSACTION> = 3;

        <android.app.IActivityManager: int HANDLE_APPLICATION_CRASH_TRANSACTION> = 2;

        <android.app.IActivityManager: java.lang.String descriptor> = "android.app.IActivityManager";

        return;
    }
}
