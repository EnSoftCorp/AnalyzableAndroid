public class android.gesture.OrientedBoundingBox extends java.lang.Object
{
    public final float squareness;
    public final float width;
    public final float height;
    public final float orientation;
    public final float centerX;
    public final float centerY;

    void <init>(float, float, float, float, float)
    {
        android.gesture.OrientedBoundingBox r0;
        float f0, f1, f2, f3, f4, f5, $f6;
        byte $b0;

        r0 := @this: android.gesture.OrientedBoundingBox;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        f4 := @parameter4: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.gesture.OrientedBoundingBox: float orientation> = f0;

        r0.<android.gesture.OrientedBoundingBox: float width> = f3;

        r0.<android.gesture.OrientedBoundingBox: float height> = f4;

        r0.<android.gesture.OrientedBoundingBox: float centerX> = f1;

        r0.<android.gesture.OrientedBoundingBox: float centerY> = f2;

        f5 = f3 / f4;

        $b0 = f5 cmpl 1.0F;

        if $b0 <= 0 goto label1;

        $f6 = 1.0F / f5;

        r0.<android.gesture.OrientedBoundingBox: float squareness> = $f6;

        goto label2;

     label1:
        r0.<android.gesture.OrientedBoundingBox: float squareness> = f5;

     label2:
        return;
    }

    public android.graphics.Path toPath()
    {
        android.gesture.OrientedBoundingBox r0;
        android.graphics.Path r1, $r4;
        float[] r2;
        android.graphics.Matrix r3, $r5;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30;

        r0 := @this: android.gesture.OrientedBoundingBox;

        $r4 = new android.graphics.Path;

        specialinvoke $r4.<android.graphics.Path: void <init>()>();

        r1 = $r4;

        r2 = newarray (float)[2];

        $f0 = r0.<android.gesture.OrientedBoundingBox: float width>;

        $f1 = neg $f0;

        $f2 = $f1 / 2.0F;

        r2[0] = $f2;

        $f3 = r0.<android.gesture.OrientedBoundingBox: float height>;

        $f4 = $f3 / 2.0F;

        r2[1] = $f4;

        $r5 = new android.graphics.Matrix;

        specialinvoke $r5.<android.graphics.Matrix: void <init>()>();

        r3 = $r5;

        $f5 = r0.<android.gesture.OrientedBoundingBox: float orientation>;

        virtualinvoke r3.<android.graphics.Matrix: void setRotate(float)>($f5);

        $f7 = r0.<android.gesture.OrientedBoundingBox: float centerX>;

        $f6 = r0.<android.gesture.OrientedBoundingBox: float centerY>;

        virtualinvoke r3.<android.graphics.Matrix: boolean postTranslate(float,float)>($f7, $f6);

        virtualinvoke r3.<android.graphics.Matrix: void mapPoints(float[])>(r2);

        $f10 = r2[0];

        $f8 = r2[1];

        virtualinvoke r1.<android.graphics.Path: void moveTo(float,float)>($f10, $f8);

        $f9 = r0.<android.gesture.OrientedBoundingBox: float width>;

        $f12 = neg $f9;

        $f11 = $f12 / 2.0F;

        r2[0] = $f11;

        $f14 = r0.<android.gesture.OrientedBoundingBox: float height>;

        $f13 = neg $f14;

        $f16 = $f13 / 2.0F;

        r2[1] = $f16;

        virtualinvoke r3.<android.graphics.Matrix: void mapPoints(float[])>(r2);

        $f18 = r2[0];

        $f15 = r2[1];

        virtualinvoke r1.<android.graphics.Path: void lineTo(float,float)>($f18, $f15);

        $f17 = r0.<android.gesture.OrientedBoundingBox: float width>;

        $f20 = $f17 / 2.0F;

        r2[0] = $f20;

        $f19 = r0.<android.gesture.OrientedBoundingBox: float height>;

        $f22 = neg $f19;

        $f21 = $f22 / 2.0F;

        r2[1] = $f21;

        virtualinvoke r3.<android.graphics.Matrix: void mapPoints(float[])>(r2);

        $f23 = r2[0];

        $f24 = r2[1];

        virtualinvoke r1.<android.graphics.Path: void lineTo(float,float)>($f23, $f24);

        $f27 = r0.<android.gesture.OrientedBoundingBox: float width>;

        $f28 = $f27 / 2.0F;

        r2[0] = $f28;

        $f25 = r0.<android.gesture.OrientedBoundingBox: float height>;

        $f26 = $f25 / 2.0F;

        r2[1] = $f26;

        virtualinvoke r3.<android.graphics.Matrix: void mapPoints(float[])>(r2);

        $f30 = r2[0];

        $f29 = r2[1];

        virtualinvoke r1.<android.graphics.Path: void lineTo(float,float)>($f30, $f29);

        virtualinvoke r1.<android.graphics.Path: void close()>();

        return r1;
    }
}
