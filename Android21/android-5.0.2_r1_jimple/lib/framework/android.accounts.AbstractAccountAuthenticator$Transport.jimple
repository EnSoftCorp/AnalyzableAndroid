class android.accounts.AbstractAccountAuthenticator$Transport extends android.accounts.IAccountAuthenticator$Stub
{
    final android.accounts.AbstractAccountAuthenticator this$0;

    private void <init>(android.accounts.AbstractAccountAuthenticator)
    {
        android.accounts.AbstractAccountAuthenticator$Transport r0;
        android.accounts.AbstractAccountAuthenticator r1;

        r0 := @this: android.accounts.AbstractAccountAuthenticator$Transport;

        r1 := @parameter0: android.accounts.AbstractAccountAuthenticator;

        r0.<android.accounts.AbstractAccountAuthenticator$Transport: android.accounts.AbstractAccountAuthenticator this$0> = r1;

        specialinvoke r0.<android.accounts.IAccountAuthenticator$Stub: void <init>()>();

        return;
    }

    public void addAccount(android.accounts.IAccountAuthenticatorResponse, java.lang.String, java.lang.String, java.lang.String[], android.os.Bundle) throws android.os.RemoteException
    {
        android.accounts.AbstractAccountAuthenticator$Transport r0;
        android.accounts.IAccountAuthenticatorResponse r1;
        java.lang.String r2, r3, $r14, $r24, $r25;
        java.lang.String[] r4;
        android.os.Bundle r5, r6, $r12;
        boolean $z0, $z1;
        android.accounts.AbstractAccountAuthenticator $r7, $r9, $r27;
        android.accounts.AccountAuthenticatorResponse $r8;
        java.lang.StringBuilder $r11, $r13, $r15, $r16, $r17, $r19, $r20, $r21, $r22, $r23;
        java.lang.Exception $r26, r28;

        r0 := @this: android.accounts.AbstractAccountAuthenticator$Transport;

        r1 := @parameter0: android.accounts.IAccountAuthenticatorResponse;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        r5 := @parameter4: android.os.Bundle;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountAuthenticator", 2);

        if $z0 == 0 goto label3;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addAccount: accountType ");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", authTokenType ");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", features ");

        if r4 != null goto label1;

        $r24 = "[]";

        goto label2;

     label1:
        $r24 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r4);

     label2:
        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AccountAuthenticator", $r25);

     label3:
        $r7 = r0.<android.accounts.AbstractAccountAuthenticator$Transport: android.accounts.AbstractAccountAuthenticator this$0>;

        staticinvoke <android.accounts.AbstractAccountAuthenticator: void access$000(android.accounts.AbstractAccountAuthenticator)>($r7);

     label4:
        $r9 = r0.<android.accounts.AbstractAccountAuthenticator$Transport: android.accounts.AbstractAccountAuthenticator this$0>;

        $r8 = new android.accounts.AccountAuthenticatorResponse;

        specialinvoke $r8.<android.accounts.AccountAuthenticatorResponse: void <init>(android.accounts.IAccountAuthenticatorResponse)>(r1);

        r6 = virtualinvoke $r9.<android.accounts.AbstractAccountAuthenticator: android.os.Bundle addAccount(android.accounts.AccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.String[],android.os.Bundle)>($r8, r2, r3, r4, r5);

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountAuthenticator", 2);

        if $z1 == 0 goto label5;

        virtualinvoke r6.<android.os.Bundle: java.util.Set keySet()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addAccount: result ");

        $r12 = staticinvoke <android.accounts.AccountManager: android.os.Bundle sanitizeResult(android.os.Bundle)>(r6);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AccountAuthenticator", $r14);

     label5:
        if r6 == null goto label6;

        interfaceinvoke r1.<android.accounts.IAccountAuthenticatorResponse: void onResult(android.os.Bundle)>(r6);

     label6:
        goto label8;

     label7:
        $r26 := @caughtexception;

        r28 = $r26;

        $r27 = r0.<android.accounts.AbstractAccountAuthenticator$Transport: android.accounts.AbstractAccountAuthenticator this$0>;

        staticinvoke <android.accounts.AbstractAccountAuthenticator: void access$100(android.accounts.AbstractAccountAuthenticator,android.accounts.IAccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.Exception)>($r27, r1, "addAccount", r2, r28);

     label8:
        return;

        catch java.lang.Exception from label4 to label6 with label7;
    }

    public void confirmCredentials(android.accounts.IAccountAuthenticatorResponse, android.accounts.Account, android.os.Bundle) throws android.os.RemoteException
    {
        android.accounts.AbstractAccountAuthenticator$Transport r0;
        android.accounts.IAccountAuthenticatorResponse r1;
        android.accounts.Account r2;
        android.os.Bundle r3, r4, $r11;
        boolean $z0, $z1;
        android.accounts.AbstractAccountAuthenticator $r5, $r7, $r19;
        android.accounts.AccountAuthenticatorResponse $r6;
        java.lang.StringBuilder $r9, $r10, $r13, $r14, $r15, $r17;
        java.lang.String $r12, $r16, $r20;
        java.lang.Exception $r18, r21;

        r0 := @this: android.accounts.AbstractAccountAuthenticator$Transport;

        r1 := @parameter0: android.accounts.IAccountAuthenticatorResponse;

        r2 := @parameter1: android.accounts.Account;

        r3 := @parameter2: android.os.Bundle;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountAuthenticator", 2);

        if $z0 == 0 goto label1;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("confirmCredentials: ");

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AccountAuthenticator", $r16);

     label1:
        $r5 = r0.<android.accounts.AbstractAccountAuthenticator$Transport: android.accounts.AbstractAccountAuthenticator this$0>;

        staticinvoke <android.accounts.AbstractAccountAuthenticator: void access$000(android.accounts.AbstractAccountAuthenticator)>($r5);

     label2:
        $r7 = r0.<android.accounts.AbstractAccountAuthenticator$Transport: android.accounts.AbstractAccountAuthenticator this$0>;

        $r6 = new android.accounts.AccountAuthenticatorResponse;

        specialinvoke $r6.<android.accounts.AccountAuthenticatorResponse: void <init>(android.accounts.IAccountAuthenticatorResponse)>(r1);

        r4 = virtualinvoke $r7.<android.accounts.AbstractAccountAuthenticator: android.os.Bundle confirmCredentials(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle)>($r6, r2, r3);

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountAuthenticator", 2);

        if $z1 == 0 goto label3;

        virtualinvoke r4.<android.os.Bundle: java.util.Set keySet()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("confirmCredentials: result ");

        $r11 = staticinvoke <android.accounts.AccountManager: android.os.Bundle sanitizeResult(android.os.Bundle)>(r4);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AccountAuthenticator", $r12);

     label3:
        if r4 == null goto label4;

        interfaceinvoke r1.<android.accounts.IAccountAuthenticatorResponse: void onResult(android.os.Bundle)>(r4);

     label4:
        goto label6;

     label5:
        $r18 := @caughtexception;

        r21 = $r18;

        $r19 = r0.<android.accounts.AbstractAccountAuthenticator$Transport: android.accounts.AbstractAccountAuthenticator this$0>;

        $r20 = virtualinvoke r2.<android.accounts.Account: java.lang.String toString()>();

        staticinvoke <android.accounts.AbstractAccountAuthenticator: void access$100(android.accounts.AbstractAccountAuthenticator,android.accounts.IAccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.Exception)>($r19, r1, "confirmCredentials", $r20, r21);

     label6:
        return;

        catch java.lang.Exception from label2 to label4 with label5;
    }

    public void getAuthTokenLabel(android.accounts.IAccountAuthenticatorResponse, java.lang.String) throws android.os.RemoteException
    {
        android.accounts.AbstractAccountAuthenticator$Transport r0;
        android.accounts.IAccountAuthenticatorResponse r1;
        java.lang.String r2, $r7, $r12, $r16;
        android.os.Bundle r3, $r5, $r11;
        boolean $z0, $z1;
        android.accounts.AbstractAccountAuthenticator $r4, $r6, $r19;
        java.lang.StringBuilder $r9, $r10, $r13, $r14, $r15, $r17;
        java.lang.Exception $r18, r20;

        r0 := @this: android.accounts.AbstractAccountAuthenticator$Transport;

        r1 := @parameter0: android.accounts.IAccountAuthenticatorResponse;

        r2 := @parameter1: java.lang.String;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountAuthenticator", 2);

        if $z0 == 0 goto label1;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getAuthTokenLabel: authTokenType ");

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AccountAuthenticator", $r16);

     label1:
        $r4 = r0.<android.accounts.AbstractAccountAuthenticator$Transport: android.accounts.AbstractAccountAuthenticator this$0>;

        staticinvoke <android.accounts.AbstractAccountAuthenticator: void access$000(android.accounts.AbstractAccountAuthenticator)>($r4);

     label2:
        $r5 = new android.os.Bundle;

        specialinvoke $r5.<android.os.Bundle: void <init>()>();

        r3 = $r5;

        $r6 = r0.<android.accounts.AbstractAccountAuthenticator$Transport: android.accounts.AbstractAccountAuthenticator this$0>;

        $r7 = virtualinvoke $r6.<android.accounts.AbstractAccountAuthenticator: java.lang.String getAuthTokenLabel(java.lang.String)>(r2);

        virtualinvoke r3.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("authTokenLabelKey", $r7);

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountAuthenticator", 2);

        if $z1 == 0 goto label3;

        virtualinvoke r3.<android.os.Bundle: java.util.Set keySet()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getAuthTokenLabel: result ");

        $r11 = staticinvoke <android.accounts.AccountManager: android.os.Bundle sanitizeResult(android.os.Bundle)>(r3);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AccountAuthenticator", $r12);

     label3:
        interfaceinvoke r1.<android.accounts.IAccountAuthenticatorResponse: void onResult(android.os.Bundle)>(r3);

     label4:
        goto label6;

     label5:
        $r18 := @caughtexception;

        r20 = $r18;

        $r19 = r0.<android.accounts.AbstractAccountAuthenticator$Transport: android.accounts.AbstractAccountAuthenticator this$0>;

        staticinvoke <android.accounts.AbstractAccountAuthenticator: void access$100(android.accounts.AbstractAccountAuthenticator,android.accounts.IAccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.Exception)>($r19, r1, "getAuthTokenLabel", r2, r20);

     label6:
        return;

        catch java.lang.Exception from label2 to label4 with label5;
    }

    public void getAuthToken(android.accounts.IAccountAuthenticatorResponse, android.accounts.Account, java.lang.String, android.os.Bundle) throws android.os.RemoteException
    {
        android.accounts.AbstractAccountAuthenticator$Transport r0;
        android.accounts.IAccountAuthenticatorResponse r1;
        android.accounts.Account r2;
        java.lang.String r3, $r14, $r20, $r26, $r28;
        android.os.Bundle r4, r5, $r13;
        boolean $z0, $z1;
        android.accounts.AbstractAccountAuthenticator $r6, $r8, $r23;
        android.accounts.AccountAuthenticatorResponse $r7;
        java.lang.StringBuilder $r10, $r11, $r12, $r15, $r16, $r17, $r18, $r19, $r21, $r24, $r25, $r27;
        java.lang.Exception $r22, r29;

        r0 := @this: android.accounts.AbstractAccountAuthenticator$Transport;

        r1 := @parameter0: android.accounts.IAccountAuthenticatorResponse;

        r2 := @parameter1: android.accounts.Account;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.Bundle;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountAuthenticator", 2);

        if $z0 == 0 goto label1;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getAuthToken: ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", authTokenType ");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AccountAuthenticator", $r20);

     label1:
        $r6 = r0.<android.accounts.AbstractAccountAuthenticator$Transport: android.accounts.AbstractAccountAuthenticator this$0>;

        staticinvoke <android.accounts.AbstractAccountAuthenticator: void access$000(android.accounts.AbstractAccountAuthenticator)>($r6);

     label2:
        $r8 = r0.<android.accounts.AbstractAccountAuthenticator$Transport: android.accounts.AbstractAccountAuthenticator this$0>;

        $r7 = new android.accounts.AccountAuthenticatorResponse;

        specialinvoke $r7.<android.accounts.AccountAuthenticatorResponse: void <init>(android.accounts.IAccountAuthenticatorResponse)>(r1);

        r5 = virtualinvoke $r8.<android.accounts.AbstractAccountAuthenticator: android.os.Bundle getAuthToken(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>($r7, r2, r3, r4);

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountAuthenticator", 2);

        if $z1 == 0 goto label3;

        virtualinvoke r5.<android.os.Bundle: java.util.Set keySet()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getAuthToken: result ");

        $r13 = staticinvoke <android.accounts.AccountManager: android.os.Bundle sanitizeResult(android.os.Bundle)>(r5);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AccountAuthenticator", $r14);

     label3:
        if r5 == null goto label4;

        interfaceinvoke r1.<android.accounts.IAccountAuthenticatorResponse: void onResult(android.os.Bundle)>(r5);

     label4:
        goto label6;

     label5:
        $r22 := @caughtexception;

        r29 = $r22;

        $r23 = r0.<android.accounts.AbstractAccountAuthenticator$Transport: android.accounts.AbstractAccountAuthenticator this$0>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke r2.<android.accounts.Account: java.lang.String toString()>();

        $r27 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r24 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.accounts.AbstractAccountAuthenticator: void access$100(android.accounts.AbstractAccountAuthenticator,android.accounts.IAccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.Exception)>($r23, r1, "getAuthToken", $r28, r29);

     label6:
        return;

        catch java.lang.Exception from label2 to label4 with label5;
    }

    public void updateCredentials(android.accounts.IAccountAuthenticatorResponse, android.accounts.Account, java.lang.String, android.os.Bundle) throws android.os.RemoteException
    {
        android.accounts.AbstractAccountAuthenticator$Transport r0;
        android.accounts.IAccountAuthenticatorResponse r1;
        android.accounts.Account r2;
        java.lang.String r3, $r14, $r20, $r26, $r28;
        android.os.Bundle r4, r5, $r13;
        boolean $z0, $z1;
        android.accounts.AbstractAccountAuthenticator $r6, $r8, $r23;
        android.accounts.AccountAuthenticatorResponse $r7;
        java.lang.StringBuilder $r10, $r11, $r12, $r15, $r16, $r17, $r18, $r19, $r21, $r24, $r25, $r27;
        java.lang.Exception $r22, r29;

        r0 := @this: android.accounts.AbstractAccountAuthenticator$Transport;

        r1 := @parameter0: android.accounts.IAccountAuthenticatorResponse;

        r2 := @parameter1: android.accounts.Account;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.os.Bundle;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountAuthenticator", 2);

        if $z0 == 0 goto label1;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateCredentials: ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", authTokenType ");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AccountAuthenticator", $r20);

     label1:
        $r6 = r0.<android.accounts.AbstractAccountAuthenticator$Transport: android.accounts.AbstractAccountAuthenticator this$0>;

        staticinvoke <android.accounts.AbstractAccountAuthenticator: void access$000(android.accounts.AbstractAccountAuthenticator)>($r6);

     label2:
        $r8 = r0.<android.accounts.AbstractAccountAuthenticator$Transport: android.accounts.AbstractAccountAuthenticator this$0>;

        $r7 = new android.accounts.AccountAuthenticatorResponse;

        specialinvoke $r7.<android.accounts.AccountAuthenticatorResponse: void <init>(android.accounts.IAccountAuthenticatorResponse)>(r1);

        r5 = virtualinvoke $r8.<android.accounts.AbstractAccountAuthenticator: android.os.Bundle updateCredentials(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String,android.os.Bundle)>($r7, r2, r3, r4);

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("AccountAuthenticator", 2);

        if $z1 == 0 goto label3;

        virtualinvoke r5.<android.os.Bundle: java.util.Set keySet()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateCredentials: result ");

        $r13 = staticinvoke <android.accounts.AccountManager: android.os.Bundle sanitizeResult(android.os.Bundle)>(r5);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("AccountAuthenticator", $r14);

     label3:
        if r5 == null goto label4;

        interfaceinvoke r1.<android.accounts.IAccountAuthenticatorResponse: void onResult(android.os.Bundle)>(r5);

     label4:
        goto label6;

     label5:
        $r22 := @caughtexception;

        r29 = $r22;

        $r23 = r0.<android.accounts.AbstractAccountAuthenticator$Transport: android.accounts.AbstractAccountAuthenticator this$0>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke r2.<android.accounts.Account: java.lang.String toString()>();

        $r27 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r24 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.accounts.AbstractAccountAuthenticator: void access$100(android.accounts.AbstractAccountAuthenticator,android.accounts.IAccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.Exception)>($r23, r1, "updateCredentials", $r28, r29);

     label6:
        return;

        catch java.lang.Exception from label2 to label4 with label5;
    }

    public void editProperties(android.accounts.IAccountAuthenticatorResponse, java.lang.String) throws android.os.RemoteException
    {
        android.accounts.AbstractAccountAuthenticator$Transport r0;
        android.accounts.IAccountAuthenticatorResponse r1;
        java.lang.String r2;
        android.os.Bundle r3;
        android.accounts.AbstractAccountAuthenticator $r4, $r6, $r8;
        android.accounts.AccountAuthenticatorResponse $r5;
        java.lang.Exception $r7, r9;

        r0 := @this: android.accounts.AbstractAccountAuthenticator$Transport;

        r1 := @parameter0: android.accounts.IAccountAuthenticatorResponse;

        r2 := @parameter1: java.lang.String;

        $r4 = r0.<android.accounts.AbstractAccountAuthenticator$Transport: android.accounts.AbstractAccountAuthenticator this$0>;

        staticinvoke <android.accounts.AbstractAccountAuthenticator: void access$000(android.accounts.AbstractAccountAuthenticator)>($r4);

     label1:
        $r6 = r0.<android.accounts.AbstractAccountAuthenticator$Transport: android.accounts.AbstractAccountAuthenticator this$0>;

        $r5 = new android.accounts.AccountAuthenticatorResponse;

        specialinvoke $r5.<android.accounts.AccountAuthenticatorResponse: void <init>(android.accounts.IAccountAuthenticatorResponse)>(r1);

        r3 = virtualinvoke $r6.<android.accounts.AbstractAccountAuthenticator: android.os.Bundle editProperties(android.accounts.AccountAuthenticatorResponse,java.lang.String)>($r5, r2);

        if r3 == null goto label2;

        interfaceinvoke r1.<android.accounts.IAccountAuthenticatorResponse: void onResult(android.os.Bundle)>(r3);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r9 = $r7;

        $r8 = r0.<android.accounts.AbstractAccountAuthenticator$Transport: android.accounts.AbstractAccountAuthenticator this$0>;

        staticinvoke <android.accounts.AbstractAccountAuthenticator: void access$100(android.accounts.AbstractAccountAuthenticator,android.accounts.IAccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.Exception)>($r8, r1, "editProperties", r2, r9);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void hasFeatures(android.accounts.IAccountAuthenticatorResponse, android.accounts.Account, java.lang.String[]) throws android.os.RemoteException
    {
        android.accounts.AbstractAccountAuthenticator$Transport r0;
        android.accounts.IAccountAuthenticatorResponse r1;
        android.accounts.Account r2;
        java.lang.String[] r3;
        android.os.Bundle r4;
        android.accounts.AbstractAccountAuthenticator $r5, $r7, $r9;
        android.accounts.AccountAuthenticatorResponse $r6;
        java.lang.Exception $r8, r11;
        java.lang.String $r10;

        r0 := @this: android.accounts.AbstractAccountAuthenticator$Transport;

        r1 := @parameter0: android.accounts.IAccountAuthenticatorResponse;

        r2 := @parameter1: android.accounts.Account;

        r3 := @parameter2: java.lang.String[];

        $r5 = r0.<android.accounts.AbstractAccountAuthenticator$Transport: android.accounts.AbstractAccountAuthenticator this$0>;

        staticinvoke <android.accounts.AbstractAccountAuthenticator: void access$000(android.accounts.AbstractAccountAuthenticator)>($r5);

     label1:
        $r7 = r0.<android.accounts.AbstractAccountAuthenticator$Transport: android.accounts.AbstractAccountAuthenticator this$0>;

        $r6 = new android.accounts.AccountAuthenticatorResponse;

        specialinvoke $r6.<android.accounts.AccountAuthenticatorResponse: void <init>(android.accounts.IAccountAuthenticatorResponse)>(r1);

        r4 = virtualinvoke $r7.<android.accounts.AbstractAccountAuthenticator: android.os.Bundle hasFeatures(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,java.lang.String[])>($r6, r2, r3);

        if r4 == null goto label2;

        interfaceinvoke r1.<android.accounts.IAccountAuthenticatorResponse: void onResult(android.os.Bundle)>(r4);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        r11 = $r8;

        $r9 = r0.<android.accounts.AbstractAccountAuthenticator$Transport: android.accounts.AbstractAccountAuthenticator this$0>;

        $r10 = virtualinvoke r2.<android.accounts.Account: java.lang.String toString()>();

        staticinvoke <android.accounts.AbstractAccountAuthenticator: void access$100(android.accounts.AbstractAccountAuthenticator,android.accounts.IAccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.Exception)>($r9, r1, "hasFeatures", $r10, r11);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void getAccountRemovalAllowed(android.accounts.IAccountAuthenticatorResponse, android.accounts.Account) throws android.os.RemoteException
    {
        android.accounts.AbstractAccountAuthenticator$Transport r0;
        android.accounts.IAccountAuthenticatorResponse r1;
        android.accounts.Account r2;
        android.os.Bundle r3;
        android.accounts.AbstractAccountAuthenticator $r4, $r6, $r8;
        android.accounts.AccountAuthenticatorResponse $r5;
        java.lang.Exception $r7, r10;
        java.lang.String $r9;

        r0 := @this: android.accounts.AbstractAccountAuthenticator$Transport;

        r1 := @parameter0: android.accounts.IAccountAuthenticatorResponse;

        r2 := @parameter1: android.accounts.Account;

        $r4 = r0.<android.accounts.AbstractAccountAuthenticator$Transport: android.accounts.AbstractAccountAuthenticator this$0>;

        staticinvoke <android.accounts.AbstractAccountAuthenticator: void access$000(android.accounts.AbstractAccountAuthenticator)>($r4);

     label1:
        $r6 = r0.<android.accounts.AbstractAccountAuthenticator$Transport: android.accounts.AbstractAccountAuthenticator this$0>;

        $r5 = new android.accounts.AccountAuthenticatorResponse;

        specialinvoke $r5.<android.accounts.AccountAuthenticatorResponse: void <init>(android.accounts.IAccountAuthenticatorResponse)>(r1);

        r3 = virtualinvoke $r6.<android.accounts.AbstractAccountAuthenticator: android.os.Bundle getAccountRemovalAllowed(android.accounts.AccountAuthenticatorResponse,android.accounts.Account)>($r5, r2);

        if r3 == null goto label2;

        interfaceinvoke r1.<android.accounts.IAccountAuthenticatorResponse: void onResult(android.os.Bundle)>(r3);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r10 = $r7;

        $r8 = r0.<android.accounts.AbstractAccountAuthenticator$Transport: android.accounts.AbstractAccountAuthenticator this$0>;

        $r9 = virtualinvoke r2.<android.accounts.Account: java.lang.String toString()>();

        staticinvoke <android.accounts.AbstractAccountAuthenticator: void access$100(android.accounts.AbstractAccountAuthenticator,android.accounts.IAccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.Exception)>($r8, r1, "getAccountRemovalAllowed", $r9, r10);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void getAccountCredentialsForCloning(android.accounts.IAccountAuthenticatorResponse, android.accounts.Account) throws android.os.RemoteException
    {
        android.accounts.AbstractAccountAuthenticator$Transport r0;
        android.accounts.IAccountAuthenticatorResponse r1;
        android.accounts.Account r2;
        android.os.Bundle r3;
        android.accounts.AbstractAccountAuthenticator $r4, $r6, $r8;
        android.accounts.AccountAuthenticatorResponse $r5;
        java.lang.Exception $r7, r10;
        java.lang.String $r9;

        r0 := @this: android.accounts.AbstractAccountAuthenticator$Transport;

        r1 := @parameter0: android.accounts.IAccountAuthenticatorResponse;

        r2 := @parameter1: android.accounts.Account;

        $r4 = r0.<android.accounts.AbstractAccountAuthenticator$Transport: android.accounts.AbstractAccountAuthenticator this$0>;

        staticinvoke <android.accounts.AbstractAccountAuthenticator: void access$000(android.accounts.AbstractAccountAuthenticator)>($r4);

     label1:
        $r6 = r0.<android.accounts.AbstractAccountAuthenticator$Transport: android.accounts.AbstractAccountAuthenticator this$0>;

        $r5 = new android.accounts.AccountAuthenticatorResponse;

        specialinvoke $r5.<android.accounts.AccountAuthenticatorResponse: void <init>(android.accounts.IAccountAuthenticatorResponse)>(r1);

        r3 = virtualinvoke $r6.<android.accounts.AbstractAccountAuthenticator: android.os.Bundle getAccountCredentialsForCloning(android.accounts.AccountAuthenticatorResponse,android.accounts.Account)>($r5, r2);

        if r3 == null goto label2;

        interfaceinvoke r1.<android.accounts.IAccountAuthenticatorResponse: void onResult(android.os.Bundle)>(r3);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r10 = $r7;

        $r8 = r0.<android.accounts.AbstractAccountAuthenticator$Transport: android.accounts.AbstractAccountAuthenticator this$0>;

        $r9 = virtualinvoke r2.<android.accounts.Account: java.lang.String toString()>();

        staticinvoke <android.accounts.AbstractAccountAuthenticator: void access$100(android.accounts.AbstractAccountAuthenticator,android.accounts.IAccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.Exception)>($r8, r1, "getAccountCredentialsForCloning", $r9, r10);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void addAccountFromCredentials(android.accounts.IAccountAuthenticatorResponse, android.accounts.Account, android.os.Bundle) throws android.os.RemoteException
    {
        android.accounts.AbstractAccountAuthenticator$Transport r0;
        android.accounts.IAccountAuthenticatorResponse r1;
        android.accounts.Account r2;
        android.os.Bundle r3, r4;
        android.accounts.AbstractAccountAuthenticator $r5, $r7, $r9;
        android.accounts.AccountAuthenticatorResponse $r6;
        java.lang.Exception $r8, r11;
        java.lang.String $r10;

        r0 := @this: android.accounts.AbstractAccountAuthenticator$Transport;

        r1 := @parameter0: android.accounts.IAccountAuthenticatorResponse;

        r2 := @parameter1: android.accounts.Account;

        r3 := @parameter2: android.os.Bundle;

        $r5 = r0.<android.accounts.AbstractAccountAuthenticator$Transport: android.accounts.AbstractAccountAuthenticator this$0>;

        staticinvoke <android.accounts.AbstractAccountAuthenticator: void access$000(android.accounts.AbstractAccountAuthenticator)>($r5);

     label1:
        $r7 = r0.<android.accounts.AbstractAccountAuthenticator$Transport: android.accounts.AbstractAccountAuthenticator this$0>;

        $r6 = new android.accounts.AccountAuthenticatorResponse;

        specialinvoke $r6.<android.accounts.AccountAuthenticatorResponse: void <init>(android.accounts.IAccountAuthenticatorResponse)>(r1);

        r4 = virtualinvoke $r7.<android.accounts.AbstractAccountAuthenticator: android.os.Bundle addAccountFromCredentials(android.accounts.AccountAuthenticatorResponse,android.accounts.Account,android.os.Bundle)>($r6, r2, r3);

        if r4 == null goto label2;

        interfaceinvoke r1.<android.accounts.IAccountAuthenticatorResponse: void onResult(android.os.Bundle)>(r4);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        r11 = $r8;

        $r9 = r0.<android.accounts.AbstractAccountAuthenticator$Transport: android.accounts.AbstractAccountAuthenticator this$0>;

        $r10 = virtualinvoke r2.<android.accounts.Account: java.lang.String toString()>();

        staticinvoke <android.accounts.AbstractAccountAuthenticator: void access$100(android.accounts.AbstractAccountAuthenticator,android.accounts.IAccountAuthenticatorResponse,java.lang.String,java.lang.String,java.lang.Exception)>($r9, r1, "addAccountFromCredentials", $r10, r11);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    void <init>(android.accounts.AbstractAccountAuthenticator, android.accounts.AbstractAccountAuthenticator$1)
    {
        android.accounts.AbstractAccountAuthenticator$Transport r0;
        android.accounts.AbstractAccountAuthenticator r1;
        android.accounts.AbstractAccountAuthenticator$1 r2;

        r0 := @this: android.accounts.AbstractAccountAuthenticator$Transport;

        r1 := @parameter0: android.accounts.AbstractAccountAuthenticator;

        r2 := @parameter1: android.accounts.AbstractAccountAuthenticator$1;

        specialinvoke r0.<android.accounts.AbstractAccountAuthenticator$Transport: void <init>(android.accounts.AbstractAccountAuthenticator)>(r1);

        return;
    }
}
