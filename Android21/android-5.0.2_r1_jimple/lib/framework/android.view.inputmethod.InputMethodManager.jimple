public final class android.view.inputmethod.InputMethodManager extends java.lang.Object
{
    static final boolean DEBUG;
    static final java.lang.String TAG;
    static final java.lang.String PENDING_EVENT_COUNTER;
    static android.view.inputmethod.InputMethodManager sInstance;
    public static final int CONTROL_WINDOW_VIEW_HAS_FOCUS;
    public static final int CONTROL_WINDOW_IS_TEXT_EDITOR;
    public static final int CONTROL_WINDOW_FIRST;
    public static final int CONTROL_START_INITIAL;
    static final long INPUT_METHOD_NOT_RESPONDING_TIMEOUT;
    public static final int DISPATCH_IN_PROGRESS;
    public static final int DISPATCH_NOT_HANDLED;
    public static final int DISPATCH_HANDLED;
    final com.android.internal.view.IInputMethodManager mService;
    final android.os.Looper mMainLooper;
    final android.view.inputmethod.InputMethodManager$H mH;
    final com.android.internal.view.IInputContext mIInputContext;
    boolean mActive;
    boolean mHasBeenInactive;
    boolean mFullscreenMode;
    android.view.View mCurRootView;
    android.view.View mServedView;
    android.view.View mNextServedView;
    boolean mServedConnecting;
    android.view.inputmethod.EditorInfo mCurrentTextBoxAttribute;
    android.view.inputmethod.InputConnection mServedInputConnection;
    android.view.inputmethod.InputMethodManager$ControlledInputConnectionWrapper mServedInputConnectionWrapper;
    android.view.inputmethod.CompletionInfo[] mCompletions;
    android.graphics.Rect mTmpCursorRect;
    android.graphics.Rect mCursorRect;
    int mCursorSelStart;
    int mCursorSelEnd;
    int mCursorCandStart;
    int mCursorCandEnd;
    private static final int NOT_AN_ACTION_NOTIFICATION_SEQUENCE_NUMBER;
    private int mNextUserActionNotificationSequenceNumber;
    private int mLastSentUserActionNotificationSequenceNumber;
    private android.view.inputmethod.CursorAnchorInfo mCursorAnchorInfo;
    private final int[] mViewTopLeft;
    private final android.graphics.Matrix mViewToScreenMatrix;
    int mBindSequence;
    java.lang.String mCurId;
    com.android.internal.view.IInputMethodSession mCurMethod;
    android.view.InputChannel mCurChannel;
    android.view.inputmethod.InputMethodManager$ImeInputEventSender mCurSender;
    private static final int REQUEST_UPDATE_CURSOR_ANCHOR_INFO_NONE;
    private int mRequestUpdateCursorAnchorInfoMonitorMode;
    final android.util.Pools$Pool mPendingEventPool;
    final android.util.SparseArray mPendingEvents;
    static final int MSG_DUMP;
    static final int MSG_BIND;
    static final int MSG_UNBIND;
    static final int MSG_SET_ACTIVE;
    static final int MSG_SEND_INPUT_EVENT;
    static final int MSG_TIMEOUT_INPUT_EVENT;
    static final int MSG_FLUSH_INPUT_EVENT;
    static final int MSG_SET_USER_ACTION_NOTIFICATION_SEQUENCE_NUMBER;
    final com.android.internal.view.IInputMethodClient$Stub mClient;
    final android.view.inputmethod.InputConnection mDummyInputConnection;
    public static final int SHOW_IMPLICIT;
    public static final int SHOW_FORCED;
    public static final int RESULT_UNCHANGED_SHOWN;
    public static final int RESULT_UNCHANGED_HIDDEN;
    public static final int RESULT_SHOWN;
    public static final int RESULT_HIDDEN;
    public static final int HIDE_IMPLICIT_ONLY;
    public static final int HIDE_NOT_ALWAYS;

    void <init>(com.android.internal.view.IInputMethodManager, android.os.Looper)
    {
        android.view.inputmethod.InputMethodManager r0;
        com.android.internal.view.IInputMethodManager r1;
        android.os.Looper r2;
        android.graphics.Rect $r3, $r4;
        int[] $r5;
        android.graphics.Matrix $r6;
        android.util.Pools$SimplePool $r7;
        android.util.SparseArray $r8;
        android.view.inputmethod.InputMethodManager$1 $r9;
        android.view.inputmethod.BaseInputConnection $r10;
        android.view.inputmethod.InputMethodManager$H $r11;
        android.view.inputmethod.InputMethodManager$ControlledInputConnectionWrapper $r12;
        android.view.inputmethod.InputConnection $r13;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: com.android.internal.view.IInputMethodManager;

        r2 := @parameter1: android.os.Looper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.view.inputmethod.InputMethodManager: boolean mActive> = 0;

        r0.<android.view.inputmethod.InputMethodManager: boolean mHasBeenInactive> = 1;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<android.view.inputmethod.InputMethodManager: android.graphics.Rect mTmpCursorRect> = $r3;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<android.view.inputmethod.InputMethodManager: android.graphics.Rect mCursorRect> = $r4;

        r0.<android.view.inputmethod.InputMethodManager: int mNextUserActionNotificationSequenceNumber> = -1;

        r0.<android.view.inputmethod.InputMethodManager: int mLastSentUserActionNotificationSequenceNumber> = -1;

        r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.CursorAnchorInfo mCursorAnchorInfo> = null;

        $r5 = newarray (int)[2];

        r0.<android.view.inputmethod.InputMethodManager: int[] mViewTopLeft> = $r5;

        $r6 = new android.graphics.Matrix;

        specialinvoke $r6.<android.graphics.Matrix: void <init>()>();

        r0.<android.view.inputmethod.InputMethodManager: android.graphics.Matrix mViewToScreenMatrix> = $r6;

        r0.<android.view.inputmethod.InputMethodManager: int mBindSequence> = -1;

        r0.<android.view.inputmethod.InputMethodManager: int mRequestUpdateCursorAnchorInfoMonitorMode> = 0;

        $r7 = new android.util.Pools$SimplePool;

        specialinvoke $r7.<android.util.Pools$SimplePool: void <init>(int)>(20);

        r0.<android.view.inputmethod.InputMethodManager: android.util.Pools$Pool mPendingEventPool> = $r7;

        $r8 = new android.util.SparseArray;

        specialinvoke $r8.<android.util.SparseArray: void <init>(int)>(20);

        r0.<android.view.inputmethod.InputMethodManager: android.util.SparseArray mPendingEvents> = $r8;

        $r9 = new android.view.inputmethod.InputMethodManager$1;

        specialinvoke $r9.<android.view.inputmethod.InputMethodManager$1: void <init>(android.view.inputmethod.InputMethodManager)>(r0);

        r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodClient$Stub mClient> = $r9;

        $r10 = new android.view.inputmethod.BaseInputConnection;

        specialinvoke $r10.<android.view.inputmethod.BaseInputConnection: void <init>(android.view.inputmethod.InputMethodManager,boolean)>(r0, 0);

        r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputConnection mDummyInputConnection> = $r10;

        r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService> = r1;

        r0.<android.view.inputmethod.InputMethodManager: android.os.Looper mMainLooper> = r2;

        $r11 = new android.view.inputmethod.InputMethodManager$H;

        specialinvoke $r11.<android.view.inputmethod.InputMethodManager$H: void <init>(android.view.inputmethod.InputMethodManager,android.os.Looper)>(r0, r2);

        r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH> = $r11;

        $r12 = new android.view.inputmethod.InputMethodManager$ControlledInputConnectionWrapper;

        $r13 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputConnection mDummyInputConnection>;

        specialinvoke $r12.<android.view.inputmethod.InputMethodManager$ControlledInputConnectionWrapper: void <init>(android.os.Looper,android.view.inputmethod.InputConnection,android.view.inputmethod.InputMethodManager)>(r2, $r13, r0);

        r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputContext mIInputContext> = $r12;

        return;
    }

    public static android.view.inputmethod.InputMethodManager getInstance()
    {
        java.lang.Class r0;
        android.os.IBinder r1;
        com.android.internal.view.IInputMethodManager r2;
        java.lang.Throwable r3, $r8;
        android.view.inputmethod.InputMethodManager $r4, $r5, $r6;
        android.os.Looper $r7;

        r0 = class "android/view/inputmethod/InputMethodManager";

        entermonitor class "android/view/inputmethod/InputMethodManager";

     label1:
        $r4 = <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager sInstance>;

        if $r4 != null goto label2;

        r1 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("input_method");

        r2 = staticinvoke <com.android.internal.view.IInputMethodManager$Stub: com.android.internal.view.IInputMethodManager asInterface(android.os.IBinder)>(r1);

        $r6 = new android.view.inputmethod.InputMethodManager;

        $r7 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r6.<android.view.inputmethod.InputMethodManager: void <init>(com.android.internal.view.IInputMethodManager,android.os.Looper)>(r2, $r7);

        <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager sInstance> = $r6;

     label2:
        $r5 = <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager sInstance>;

        exitmonitor r0;

     label3:
        return $r5;

     label4:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r0;

     label5:
        throw r3;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static android.view.inputmethod.InputMethodManager peekInstance()
    {
        android.view.inputmethod.InputMethodManager $r0;

        $r0 = <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager sInstance>;

        return $r0;
    }

    public com.android.internal.view.IInputMethodClient getClient()
    {
        android.view.inputmethod.InputMethodManager r0;
        com.android.internal.view.IInputMethodClient$Stub $r1;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        $r1 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodClient$Stub mClient>;

        return $r1;
    }

    public com.android.internal.view.IInputContext getInputContext()
    {
        android.view.inputmethod.InputMethodManager r0;
        com.android.internal.view.IInputContext $r1;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        $r1 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputContext mIInputContext>;

        return $r1;
    }

    public java.util.List getInputMethodList()
    {
        android.view.inputmethod.InputMethodManager r0;
        android.os.RemoteException r1, $r4;
        com.android.internal.view.IInputMethodManager $r2;
        java.util.List $r3;
        java.lang.RuntimeException $r5;

        r0 := @this: android.view.inputmethod.InputMethodManager;

     label1:
        $r2 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

        $r3 = interfaceinvoke $r2.<com.android.internal.view.IInputMethodManager: java.util.List getInputMethodList()>();

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getEnabledInputMethodList()
    {
        android.view.inputmethod.InputMethodManager r0;
        android.os.RemoteException r1, $r4;
        com.android.internal.view.IInputMethodManager $r2;
        java.util.List $r3;
        java.lang.RuntimeException $r5;

        r0 := @this: android.view.inputmethod.InputMethodManager;

     label1:
        $r2 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

        $r3 = interfaceinvoke $r2.<com.android.internal.view.IInputMethodManager: java.util.List getEnabledInputMethodList()>();

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);

        throw $r5;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public java.util.List getEnabledInputMethodSubtypeList(android.view.inputmethod.InputMethodInfo, boolean)
    {
        android.view.inputmethod.InputMethodManager r0;
        android.view.inputmethod.InputMethodInfo r1;
        boolean z0;
        android.os.RemoteException r2, $r6;
        com.android.internal.view.IInputMethodManager $r3;
        java.lang.String $r4;
        java.util.List $r5;
        java.lang.RuntimeException $r7;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: android.view.inputmethod.InputMethodInfo;

        z0 := @parameter1: boolean;

     label1:
        $r3 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

        if r1 != null goto label2;

        $r4 = null;

        goto label3;

     label2:
        $r4 = virtualinvoke r1.<android.view.inputmethod.InputMethodInfo: java.lang.String getId()>();

     label3:
        $r5 = interfaceinvoke $r3.<com.android.internal.view.IInputMethodManager: java.util.List getEnabledInputMethodSubtypeList(java.lang.String,boolean)>($r4, z0);

     label4:
        return $r5;

     label5:
        $r6 := @caughtexception;

        r2 = $r6;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r2);

        throw $r7;

        catch android.os.RemoteException from label1 to label4 with label5;
    }

    public void showStatusIcon(android.os.IBinder, java.lang.String, int)
    {
        android.view.inputmethod.InputMethodManager r0;
        android.os.IBinder r1;
        java.lang.String r2;
        int i0;
        android.os.RemoteException r3, $r5;
        com.android.internal.view.IInputMethodManager $r4;
        java.lang.RuntimeException $r6;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

     label1:
        $r4 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

        interfaceinvoke $r4.<com.android.internal.view.IInputMethodManager: void updateStatusIcon(android.os.IBinder,java.lang.String,int)>(r1, r2, i0);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r3);

        throw $r6;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void hideStatusIcon(android.os.IBinder)
    {
        android.view.inputmethod.InputMethodManager r0;
        android.os.IBinder r1;
        android.os.RemoteException r2, $r4;
        com.android.internal.view.IInputMethodManager $r3;
        java.lang.RuntimeException $r5;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: android.os.IBinder;

     label1:
        $r3 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

        interfaceinvoke $r3.<com.android.internal.view.IInputMethodManager: void updateStatusIcon(android.os.IBinder,java.lang.String,int)>(r1, null, 0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r2);

        throw $r5;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setImeWindowStatus(android.os.IBinder, int, int)
    {
        android.view.inputmethod.InputMethodManager r0;
        android.os.IBinder r1;
        int i0, i1;
        android.os.RemoteException r2, $r4;
        com.android.internal.view.IInputMethodManager $r3;
        java.lang.RuntimeException $r5;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $r3 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

        interfaceinvoke $r3.<com.android.internal.view.IInputMethodManager: void setImeWindowStatus(android.os.IBinder,int,int)>(r1, i0, i1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r2);

        throw $r5;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setFullscreenMode(boolean)
    {
        android.view.inputmethod.InputMethodManager r0;
        boolean z0;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        z0 := @parameter0: boolean;

        r0.<android.view.inputmethod.InputMethodManager: boolean mFullscreenMode> = z0;

        return;
    }

    public void registerSuggestionSpansForNotification(android.text.style.SuggestionSpan[])
    {
        android.view.inputmethod.InputMethodManager r0;
        android.text.style.SuggestionSpan[] r1;
        android.os.RemoteException r2, $r4;
        com.android.internal.view.IInputMethodManager $r3;
        java.lang.RuntimeException $r5;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: android.text.style.SuggestionSpan[];

     label1:
        $r3 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

        interfaceinvoke $r3.<com.android.internal.view.IInputMethodManager: void registerSuggestionSpansForNotification(android.text.style.SuggestionSpan[])>(r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r2);

        throw $r5;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void notifySuggestionPicked(android.text.style.SuggestionSpan, java.lang.String, int)
    {
        android.view.inputmethod.InputMethodManager r0;
        android.text.style.SuggestionSpan r1;
        java.lang.String r2;
        int i0;
        android.os.RemoteException r3, $r5;
        com.android.internal.view.IInputMethodManager $r4;
        java.lang.RuntimeException $r6;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: android.text.style.SuggestionSpan;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

     label1:
        $r4 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

        interfaceinvoke $r4.<com.android.internal.view.IInputMethodManager: boolean notifySuggestionPicked(android.text.style.SuggestionSpan,java.lang.String,int)>(r1, r2, i0);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r3);

        throw $r6;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean isFullscreenMode()
    {
        android.view.inputmethod.InputMethodManager r0;
        boolean $z0;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        $z0 = r0.<android.view.inputmethod.InputMethodManager: boolean mFullscreenMode>;

        return $z0;
    }

    public boolean isActive(android.view.View)
    {
        android.view.inputmethod.InputMethodManager r0;
        android.view.View r1, $r5, $r7, $r8;
        android.view.inputmethod.InputMethodManager$H r2, $r4;
        java.lang.Throwable r3, $r9;
        android.view.inputmethod.EditorInfo $r6;
        boolean $z0, $z1;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: android.view.View;

        virtualinvoke r0.<android.view.inputmethod.InputMethodManager: void checkFocus()>();

        $r4 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r5 == r1 goto label2;

        $r7 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r7 == null goto label3;

        $r8 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        $z1 = virtualinvoke $r8.<android.view.View: boolean checkInputConnectionProxy(android.view.View)>(r1);

        if $z1 == 0 goto label3;

     label2:
        $r6 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.EditorInfo mCurrentTextBoxAttribute>;

        if $r6 == null goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        exitmonitor r2;

     label5:
        return $z0;

     label6:
        $r9 := @caughtexception;

        r3 = $r9;

        exitmonitor r2;

     label7:
        throw r3;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public boolean isActive()
    {
        android.view.inputmethod.InputMethodManager r0;
        android.view.inputmethod.InputMethodManager$H r1, $r3;
        java.lang.Throwable r2, $r6;
        android.view.View $r4;
        android.view.inputmethod.EditorInfo $r5;
        boolean $z0;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        virtualinvoke r0.<android.view.inputmethod.InputMethodManager: void checkFocus()>();

        $r3 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r4 == null goto label2;

        $r5 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.EditorInfo mCurrentTextBoxAttribute>;

        if $r5 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor r1;

     label4:
        return $z0;

     label5:
        $r6 := @caughtexception;

        r2 = $r6;

        exitmonitor r1;

     label6:
        throw r2;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public boolean isAcceptingText()
    {
        android.view.inputmethod.InputMethodManager r0;
        android.view.inputmethod.InputConnection $r1;
        boolean $z0;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        virtualinvoke r0.<android.view.inputmethod.InputMethodManager: void checkFocus()>();

        $r1 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputConnection mServedInputConnection>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    void clearBindingLocked()
    {
        android.view.inputmethod.InputMethodManager r0;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        virtualinvoke r0.<android.view.inputmethod.InputMethodManager: void clearConnectionLocked()>();

        virtualinvoke r0.<android.view.inputmethod.InputMethodManager: void setInputChannelLocked(android.view.InputChannel)>(null);

        r0.<android.view.inputmethod.InputMethodManager: int mBindSequence> = -1;

        r0.<android.view.inputmethod.InputMethodManager: java.lang.String mCurId> = null;

        r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod> = null;

        return;
    }

    void setInputChannelLocked(android.view.InputChannel)
    {
        android.view.inputmethod.InputMethodManager r0;
        android.view.InputChannel r1, $r2, $r4, $r5;
        android.view.inputmethod.InputMethodManager$ImeInputEventSender $r3, $r6;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: android.view.InputChannel;

        $r2 = r0.<android.view.inputmethod.InputMethodManager: android.view.InputChannel mCurChannel>;

        if $r2 == r1 goto label3;

        $r3 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$ImeInputEventSender mCurSender>;

        if $r3 == null goto label1;

        specialinvoke r0.<android.view.inputmethod.InputMethodManager: void flushPendingEventsLocked()>();

        $r6 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$ImeInputEventSender mCurSender>;

        virtualinvoke $r6.<android.view.inputmethod.InputMethodManager$ImeInputEventSender: void dispose()>();

        r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$ImeInputEventSender mCurSender> = null;

     label1:
        $r4 = r0.<android.view.inputmethod.InputMethodManager: android.view.InputChannel mCurChannel>;

        if $r4 == null goto label2;

        $r5 = r0.<android.view.inputmethod.InputMethodManager: android.view.InputChannel mCurChannel>;

        virtualinvoke $r5.<android.view.InputChannel: void dispose()>();

     label2:
        r0.<android.view.inputmethod.InputMethodManager: android.view.InputChannel mCurChannel> = r1;

     label3:
        return;
    }

    void clearConnectionLocked()
    {
        android.view.inputmethod.InputMethodManager r0;
        android.view.inputmethod.InputMethodManager$ControlledInputConnectionWrapper $r1, $r2;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.EditorInfo mCurrentTextBoxAttribute> = null;

        r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputConnection mServedInputConnection> = null;

        $r1 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$ControlledInputConnectionWrapper mServedInputConnectionWrapper>;

        if $r1 == null goto label1;

        $r2 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$ControlledInputConnectionWrapper mServedInputConnectionWrapper>;

        virtualinvoke $r2.<android.view.inputmethod.InputMethodManager$ControlledInputConnectionWrapper: void deactivate()>();

        r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$ControlledInputConnectionWrapper mServedInputConnectionWrapper> = null;

     label1:
        return;
    }

    void finishInputLocked()
    {
        android.view.inputmethod.InputMethodManager r0;
        android.view.View $r2;
        android.view.inputmethod.EditorInfo $r3;
        com.android.internal.view.IInputMethodClient$Stub $r4;
        com.android.internal.view.IInputMethodManager $r5;
        android.os.RemoteException $r6;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r0.<android.view.inputmethod.InputMethodManager: android.view.View mCurRootView> = null;

        r0.<android.view.inputmethod.InputMethodManager: android.view.View mNextServedView> = null;

        $r2 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r2 == null goto label5;

        $r3 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.EditorInfo mCurrentTextBoxAttribute>;

        if $r3 == null goto label4;

     label1:
        $r5 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

        $r4 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodClient$Stub mClient>;

        interfaceinvoke $r5.<com.android.internal.view.IInputMethodManager: void finishInput(com.android.internal.view.IInputMethodClient)>($r4);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

     label4:
        specialinvoke r0.<android.view.inputmethod.InputMethodManager: void notifyInputConnectionFinished()>();

        r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView> = null;

        r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.CompletionInfo[] mCompletions> = null;

        r0.<android.view.inputmethod.InputMethodManager: boolean mServedConnecting> = 0;

        virtualinvoke r0.<android.view.inputmethod.InputMethodManager: void clearConnectionLocked()>();

     label5:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    private void notifyInputConnectionFinished()
    {
        android.view.inputmethod.InputMethodManager r0;
        android.view.ViewRootImpl r1;
        android.view.View $r2, $r4;
        android.view.inputmethod.InputConnection $r3, $r5;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        $r2 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r2 == null goto label1;

        $r3 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputConnection mServedInputConnection>;

        if $r3 == null goto label1;

        $r4 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        r1 = virtualinvoke $r4.<android.view.View: android.view.ViewRootImpl getViewRootImpl()>();

        if r1 == null goto label1;

        $r5 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputConnection mServedInputConnection>;

        virtualinvoke r1.<android.view.ViewRootImpl: void dispatchFinishInputConnection(android.view.inputmethod.InputConnection)>($r5);

     label1:
        return;
    }

    public void reportFinishInputConnection(android.view.inputmethod.InputConnection)
    {
        android.view.inputmethod.InputMethodManager r0;
        android.view.inputmethod.InputConnection r1, $r2;
        boolean $z1;
        android.view.inputmethod.BaseInputConnection $r3;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: android.view.inputmethod.InputConnection;

        $r2 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputConnection mServedInputConnection>;

        if $r2 == r1 goto label1;

        interfaceinvoke r1.<android.view.inputmethod.InputConnection: boolean finishComposingText()>();

        $z1 = r1 instanceof android.view.inputmethod.BaseInputConnection;

        if $z1 == 0 goto label1;

        $r3 = (android.view.inputmethod.BaseInputConnection) r1;

        virtualinvoke $r3.<android.view.inputmethod.BaseInputConnection: void reportFinish()>();

     label1:
        return;
    }

    public void displayCompletions(android.view.View, android.view.inputmethod.CompletionInfo[])
    {
        android.view.inputmethod.InputMethodManager r0;
        android.view.View r1, $r7, $r11, $r12;
        android.view.inputmethod.CompletionInfo[] r2, $r9;
        android.view.inputmethod.InputMethodManager$H r3, $r6;
        java.lang.Throwable r5, $r13;
        com.android.internal.view.IInputMethodSession $r8, $r10;
        boolean $z0;
        android.os.RemoteException $r14;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.inputmethod.CompletionInfo[];

        virtualinvoke r0.<android.view.inputmethod.InputMethodManager: void checkFocus()>();

        $r6 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        r3 = $r6;

        entermonitor $r6;

     label01:
        $r7 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r7 == r1 goto label04;

        $r11 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r11 == null goto label02;

        $r12 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        $z0 = virtualinvoke $r12.<android.view.View: boolean checkInputConnectionProxy(android.view.View)>(r1);

        if $z0 != 0 goto label04;

     label02:
        exitmonitor r3;

     label03:
        return;

     label04:
        r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.CompletionInfo[] mCompletions> = r2;

        $r8 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

        if $r8 == null goto label08;

     label05:
        $r10 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

        $r9 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.CompletionInfo[] mCompletions>;

        interfaceinvoke $r10.<com.android.internal.view.IInputMethodSession: void displayCompletions(android.view.inputmethod.CompletionInfo[])>($r9);

     label06:
        goto label08;

     label07:
        $r14 := @caughtexception;

     label08:
        exitmonitor r3;

     label09:
        goto label12;

     label10:
        $r13 := @caughtexception;

        r5 = $r13;

        exitmonitor r3;

     label11:
        throw r5;

     label12:
        return;

        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label01 to label03 with label10;
        catch java.lang.Throwable from label04 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void updateExtractedText(android.view.View, int, android.view.inputmethod.ExtractedText)
    {
        android.view.inputmethod.InputMethodManager r0;
        android.view.View r1, $r7, $r10, $r11;
        int i0;
        android.view.inputmethod.ExtractedText r2;
        android.view.inputmethod.InputMethodManager$H r3, $r6;
        java.lang.Throwable r5, $r12;
        com.android.internal.view.IInputMethodSession $r8, $r9;
        boolean $z0;
        android.os.RemoteException $r13;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: android.view.inputmethod.ExtractedText;

        virtualinvoke r0.<android.view.inputmethod.InputMethodManager: void checkFocus()>();

        $r6 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        r3 = $r6;

        entermonitor $r6;

     label01:
        $r7 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r7 == r1 goto label04;

        $r10 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r10 == null goto label02;

        $r11 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        $z0 = virtualinvoke $r11.<android.view.View: boolean checkInputConnectionProxy(android.view.View)>(r1);

        if $z0 != 0 goto label04;

     label02:
        exitmonitor r3;

     label03:
        return;

     label04:
        $r8 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

        if $r8 == null goto label08;

     label05:
        $r9 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

        interfaceinvoke $r9.<com.android.internal.view.IInputMethodSession: void updateExtractedText(int,android.view.inputmethod.ExtractedText)>(i0, r2);

     label06:
        goto label08;

     label07:
        $r13 := @caughtexception;

     label08:
        exitmonitor r3;

     label09:
        goto label12;

     label10:
        $r12 := @caughtexception;

        r5 = $r12;

        exitmonitor r3;

     label11:
        throw r5;

     label12:
        return;

        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label01 to label03 with label10;
        catch java.lang.Throwable from label04 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public boolean showSoftInput(android.view.View, int)
    {
        android.view.inputmethod.InputMethodManager r0;
        android.view.View r1;
        int i0;
        boolean $z0;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r0.<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int,android.os.ResultReceiver)>(r1, i0, null);

        return $z0;
    }

    public boolean showSoftInput(android.view.View, int, android.os.ResultReceiver)
    {
        android.view.inputmethod.InputMethodManager r0;
        android.view.View r1, $r7, $r10, $r11;
        int i0;
        android.os.ResultReceiver r2;
        android.view.inputmethod.InputMethodManager$H r3, $r6;
        java.lang.Throwable r5, $r13;
        com.android.internal.view.IInputMethodClient$Stub $r8;
        com.android.internal.view.IInputMethodManager $r9;
        boolean $z0, $z1;
        android.os.RemoteException $r12;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.ResultReceiver;

        virtualinvoke r0.<android.view.inputmethod.InputMethodManager: void checkFocus()>();

        $r6 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        r3 = $r6;

        entermonitor $r6;

     label01:
        $r7 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r7 == r1 goto label04;

        $r10 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r10 == null goto label02;

        $r11 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        $z1 = virtualinvoke $r11.<android.view.View: boolean checkInputConnectionProxy(android.view.View)>(r1);

        if $z1 != 0 goto label04;

     label02:
        exitmonitor r3;

     label03:
        return 0;

     label04:
        $r9 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

        $r8 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodClient$Stub mClient>;

        $z0 = interfaceinvoke $r9.<com.android.internal.view.IInputMethodManager: boolean showSoftInput(com.android.internal.view.IInputMethodClient,int,android.os.ResultReceiver)>($r8, i0, r2);

     label05:
        exitmonitor r3;

     label06:
        return $z0;

     label07:
        $r12 := @caughtexception;

        exitmonitor r3;

     label08:
        return 0;

     label09:
        $r13 := @caughtexception;

        r5 = $r13;

        exitmonitor r3;

     label10:
        throw r5;

        catch android.os.RemoteException from label04 to label05 with label07;
        catch java.lang.Throwable from label01 to label03 with label09;
        catch java.lang.Throwable from label04 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public void showSoftInputUnchecked(int, android.os.ResultReceiver)
    {
        android.view.inputmethod.InputMethodManager r0;
        int i0;
        android.os.ResultReceiver r1;
        com.android.internal.view.IInputMethodClient$Stub $r3;
        com.android.internal.view.IInputMethodManager $r4;
        android.os.RemoteException $r5;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.ResultReceiver;

     label1:
        $r4 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

        $r3 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodClient$Stub mClient>;

        interfaceinvoke $r4.<com.android.internal.view.IInputMethodManager: boolean showSoftInput(com.android.internal.view.IInputMethodClient,int,android.os.ResultReceiver)>($r3, i0, r1);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public boolean hideSoftInputFromWindow(android.os.IBinder, int)
    {
        android.view.inputmethod.InputMethodManager r0;
        android.os.IBinder r1;
        int i0;
        boolean $z0;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        $z0 = virtualinvoke r0.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int,android.os.ResultReceiver)>(r1, i0, null);

        return $z0;
    }

    public boolean hideSoftInputFromWindow(android.os.IBinder, int, android.os.ResultReceiver)
    {
        android.view.inputmethod.InputMethodManager r0;
        android.os.IBinder r1, $r9;
        int i0;
        android.os.ResultReceiver r2;
        android.view.inputmethod.InputMethodManager$H r3, $r6;
        java.lang.Throwable r5, $r13;
        android.view.View $r7, $r8;
        com.android.internal.view.IInputMethodClient$Stub $r10;
        com.android.internal.view.IInputMethodManager $r11;
        boolean $z0;
        android.os.RemoteException $r12;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.ResultReceiver;

        virtualinvoke r0.<android.view.inputmethod.InputMethodManager: void checkFocus()>();

        $r6 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        r3 = $r6;

        entermonitor $r6;

     label01:
        $r7 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r7 == null goto label02;

        $r8 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        $r9 = virtualinvoke $r8.<android.view.View: android.os.IBinder getWindowToken()>();

        if $r9 == r1 goto label04;

     label02:
        exitmonitor r3;

     label03:
        return 0;

     label04:
        $r11 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

        $r10 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodClient$Stub mClient>;

        $z0 = interfaceinvoke $r11.<com.android.internal.view.IInputMethodManager: boolean hideSoftInput(com.android.internal.view.IInputMethodClient,int,android.os.ResultReceiver)>($r10, i0, r2);

     label05:
        exitmonitor r3;

     label06:
        return $z0;

     label07:
        $r12 := @caughtexception;

        exitmonitor r3;

     label08:
        return 0;

     label09:
        $r13 := @caughtexception;

        r5 = $r13;

        exitmonitor r3;

     label10:
        throw r5;

        catch android.os.RemoteException from label04 to label05 with label07;
        catch java.lang.Throwable from label01 to label03 with label09;
        catch java.lang.Throwable from label04 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public void toggleSoftInputFromWindow(android.os.IBinder, int, int)
    {
        android.view.inputmethod.InputMethodManager r0;
        android.os.IBinder r1, $r8;
        int i0, i1;
        android.view.inputmethod.InputMethodManager$H r2, $r5;
        java.lang.Throwable r4, $r11;
        android.view.View $r6, $r7;
        com.android.internal.view.IInputMethodSession $r9, $r10;
        android.os.RemoteException $r12;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r5 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        r2 = $r5;

        entermonitor $r5;

     label01:
        $r6 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r6 == null goto label02;

        $r7 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        $r8 = virtualinvoke $r7.<android.view.View: android.os.IBinder getWindowToken()>();

        if $r8 == r1 goto label04;

     label02:
        exitmonitor r2;

     label03:
        return;

     label04:
        $r9 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

        if $r9 == null goto label08;

     label05:
        $r10 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

        interfaceinvoke $r10.<com.android.internal.view.IInputMethodSession: void toggleSoftInput(int,int)>(i0, i1);

     label06:
        goto label08;

     label07:
        $r12 := @caughtexception;

     label08:
        exitmonitor r2;

     label09:
        goto label12;

     label10:
        $r11 := @caughtexception;

        r4 = $r11;

        exitmonitor r2;

     label11:
        throw r4;

     label12:
        return;

        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label01 to label03 with label10;
        catch java.lang.Throwable from label04 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void toggleSoftInput(int, int)
    {
        android.view.inputmethod.InputMethodManager r0;
        int i0, i1;
        com.android.internal.view.IInputMethodSession $r2, $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

        if $r2 == null goto label4;

     label1:
        $r3 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

        interfaceinvoke $r3.<com.android.internal.view.IInputMethodSession: void toggleSoftInput(int,int)>(i0, i1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void restartInput(android.view.View)
    {
        android.view.inputmethod.InputMethodManager r0;
        android.view.View r1, $r5, $r6, $r7;
        android.view.inputmethod.InputMethodManager$H r2, $r4;
        java.lang.Throwable r3, $r8;
        boolean $z1;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: android.view.View;

        virtualinvoke r0.<android.view.inputmethod.InputMethodManager: void checkFocus()>();

        $r4 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r5 == r1 goto label4;

        $r6 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r6 == null goto label2;

        $r7 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        $z1 = virtualinvoke $r7.<android.view.View: boolean checkInputConnectionProxy(android.view.View)>(r1);

        if $z1 != 0 goto label4;

     label2:
        exitmonitor r2;

     label3:
        return;

     label4:
        r0.<android.view.inputmethod.InputMethodManager: boolean mServedConnecting> = 1;

        exitmonitor r2;

     label5:
        goto label8;

     label6:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label7:
        throw r3;

     label8:
        virtualinvoke r0.<android.view.inputmethod.InputMethodManager: boolean startInputInner(android.os.IBinder,int,int,int)>(null, 0, 0, 0);

        return;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    boolean startInputInner(android.os.IBinder, int, int, int)
    {
        android.view.inputmethod.InputMethodManager r0;
        android.os.IBinder r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        android.view.View r2, $r17;
        android.view.inputmethod.InputMethodManager$H r3, r6, $r11, $r18;
        java.lang.Throwable r4, r10, $r43, $r50;
        android.view.inputmethod.InputConnection r5;
        android.view.inputmethod.InputMethodManager$ControlledInputConnectionWrapper r7, $r19, $r38, $r41;
        com.android.internal.view.InputBindResult r8;
        android.os.Looper $r12, $r14, $r40;
        android.view.inputmethod.EditorInfo $r13, $r20, r53;
        java.lang.String $r15, $r25, $r37, $r44, $r46;
        android.content.Context $r16;
        boolean $z0;
        com.android.internal.view.IInputMethodManager $r21, $r35;
        com.android.internal.view.IInputMethodClient$Stub $r22, $r36;
        android.view.inputmethod.CompletionInfo[] $r23, $r27;
        com.android.internal.view.IInputMethodSession $r24, $r28, $r31, $r32;
        android.view.InputChannel $r26, $r29, $r30, $r33, $r34;
        android.view.inputmethod.InputMethodManager$2 $r39;
        android.graphics.Rect $r42;
        java.lang.StringBuilder $r45, $r48, $r49;
        android.os.RemoteException $r47, $r51, r54;
        android.os.Handler r52;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r11 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        r3 = $r11;

        entermonitor $r11;

     label01:
        r2 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if r2 != null goto label03;

        exitmonitor r3;

     label02:
        return 0;

     label03:
        exitmonitor r3;

     label04:
        goto label07;

     label05:
        $r43 := @caughtexception;

        r4 = $r43;

        exitmonitor r3;

     label06:
        throw r4;

     label07:
        r52 = virtualinvoke r2.<android.view.View: android.os.Handler getHandler()>();

        if r52 != null goto label08;

        virtualinvoke r0.<android.view.inputmethod.InputMethodManager: void closeCurrentInput()>();

        return 0;

     label08:
        $r12 = virtualinvoke r52.<android.os.Handler: android.os.Looper getLooper()>();

        $r14 = staticinvoke <android.os.Looper: android.os.Looper myLooper()>();

        if $r12 == $r14 goto label09;

        $r39 = new android.view.inputmethod.InputMethodManager$2;

        specialinvoke $r39.<android.view.inputmethod.InputMethodManager$2: void <init>(android.view.inputmethod.InputMethodManager)>(r0);

        virtualinvoke r52.<android.os.Handler: boolean post(java.lang.Runnable)>($r39);

        return 0;

     label09:
        $r13 = new android.view.inputmethod.EditorInfo;

        specialinvoke $r13.<android.view.inputmethod.EditorInfo: void <init>()>();

        r53 = $r13;

        $r16 = virtualinvoke r2.<android.view.View: android.content.Context getContext()>();

        $r15 = virtualinvoke $r16.<android.content.Context: java.lang.String getPackageName()>();

        r53.<android.view.inputmethod.EditorInfo: java.lang.String packageName> = $r15;

        $i3 = virtualinvoke r2.<android.view.View: int getId()>();

        r53.<android.view.inputmethod.EditorInfo: int fieldId> = $i3;

        r5 = virtualinvoke r2.<android.view.View: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)>(r53);

        $r18 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        r6 = $r18;

        entermonitor $r18;

     label10:
        $r17 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r17 != r2 goto label11;

        $z0 = r0.<android.view.inputmethod.InputMethodManager: boolean mServedConnecting>;

        if $z0 != 0 goto label13;

     label11:
        exitmonitor r6;

     label12:
        return 0;

     label13:
        $r20 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.EditorInfo mCurrentTextBoxAttribute>;

        if $r20 != null goto label14;

        i0 = i0 | 256;

     label14:
        r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.EditorInfo mCurrentTextBoxAttribute> = r53;

        r0.<android.view.inputmethod.InputMethodManager: boolean mServedConnecting> = 0;

        specialinvoke r0.<android.view.inputmethod.InputMethodManager: void notifyInputConnectionFinished()>();

        r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputConnection mServedInputConnection> = r5;

        if r5 == null goto label15;

        $i7 = r53.<android.view.inputmethod.EditorInfo: int initialSelStart>;

        r0.<android.view.inputmethod.InputMethodManager: int mCursorSelStart> = $i7;

        $i6 = r53.<android.view.inputmethod.EditorInfo: int initialSelEnd>;

        r0.<android.view.inputmethod.InputMethodManager: int mCursorSelEnd> = $i6;

        r0.<android.view.inputmethod.InputMethodManager: int mCursorCandStart> = -1;

        r0.<android.view.inputmethod.InputMethodManager: int mCursorCandEnd> = -1;

        $r42 = r0.<android.view.inputmethod.InputMethodManager: android.graphics.Rect mCursorRect>;

        virtualinvoke $r42.<android.graphics.Rect: void setEmpty()>();

        r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.CursorAnchorInfo mCursorAnchorInfo> = null;

        $r41 = new android.view.inputmethod.InputMethodManager$ControlledInputConnectionWrapper;

        $r40 = virtualinvoke r52.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke $r41.<android.view.inputmethod.InputMethodManager$ControlledInputConnectionWrapper: void <init>(android.os.Looper,android.view.inputmethod.InputConnection,android.view.inputmethod.InputMethodManager)>($r40, r5, r0);

        r7 = $r41;

        goto label16;

     label15:
        r7 = null;

     label16:
        $r19 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$ControlledInputConnectionWrapper mServedInputConnectionWrapper>;

        if $r19 == null goto label17;

        $r38 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$ControlledInputConnectionWrapper mServedInputConnectionWrapper>;

        virtualinvoke $r38.<android.view.inputmethod.InputMethodManager$ControlledInputConnectionWrapper: void deactivate()>();

     label17:
        r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$ControlledInputConnectionWrapper mServedInputConnectionWrapper> = r7;

     label18:
        if r1 == null goto label19;

        $r35 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

        $r36 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodClient$Stub mClient>;

        r8 = interfaceinvoke $r35.<com.android.internal.view.IInputMethodManager: com.android.internal.view.InputBindResult windowGainedFocus(com.android.internal.view.IInputMethodClient,android.os.IBinder,int,int,int,android.view.inputmethod.EditorInfo,com.android.internal.view.IInputContext)>($r36, r1, i0, i1, i2, r53, r7);

        goto label20;

     label19:
        $r21 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

        $r22 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodClient$Stub mClient>;

        r8 = interfaceinvoke $r21.<com.android.internal.view.IInputMethodManager: com.android.internal.view.InputBindResult startInput(com.android.internal.view.IInputMethodClient,com.android.internal.view.IInputContext,android.view.inputmethod.EditorInfo,int)>($r22, r7, r53, i0);

     label20:
        if r8 == null goto label25;

        $r25 = r8.<com.android.internal.view.InputBindResult: java.lang.String id>;

        if $r25 == null goto label21;

        $r34 = r8.<com.android.internal.view.InputBindResult: android.view.InputChannel channel>;

        virtualinvoke r0.<android.view.inputmethod.InputMethodManager: void setInputChannelLocked(android.view.InputChannel)>($r34);

        $i4 = r8.<com.android.internal.view.InputBindResult: int sequence>;

        r0.<android.view.inputmethod.InputMethodManager: int mBindSequence> = $i4;

        $r32 = r8.<com.android.internal.view.InputBindResult: com.android.internal.view.IInputMethodSession method>;

        r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod> = $r32;

        $r37 = r8.<com.android.internal.view.InputBindResult: java.lang.String id>;

        r0.<android.view.inputmethod.InputMethodManager: java.lang.String mCurId> = $r37;

        $i5 = r8.<com.android.internal.view.InputBindResult: int userActionNotificationSequenceNumber>;

        r0.<android.view.inputmethod.InputMethodManager: int mNextUserActionNotificationSequenceNumber> = $i5;

        goto label25;

     label21:
        $r26 = r8.<com.android.internal.view.InputBindResult: android.view.InputChannel channel>;

        if $r26 == null goto label22;

        $r30 = r8.<com.android.internal.view.InputBindResult: android.view.InputChannel channel>;

        $r29 = r0.<android.view.inputmethod.InputMethodManager: android.view.InputChannel mCurChannel>;

        if $r30 == $r29 goto label22;

        $r33 = r8.<com.android.internal.view.InputBindResult: android.view.InputChannel channel>;

        virtualinvoke $r33.<android.view.InputChannel: void dispose()>();

     label22:
        $r31 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

        if $r31 != null goto label25;

     label23:
        exitmonitor r6;

     label24:
        return 1;

     label25:
        $r24 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

        if $r24 == null goto label29;

        $r23 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.CompletionInfo[] mCompletions>;

        if $r23 == null goto label29;

     label26:
        $r28 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

        $r27 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.CompletionInfo[] mCompletions>;

        interfaceinvoke $r28.<com.android.internal.view.IInputMethodSession: void displayCompletions(android.view.inputmethod.CompletionInfo[])>($r27);

     label27:
        goto label29;

     label28:
        $r51 := @caughtexception;

     label29:
        goto label31;

     label30:
        $r47 := @caughtexception;

        r54 = $r47;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IME died: ");

        $r44 = r0.<android.view.inputmethod.InputMethodManager: java.lang.String mCurId>;

        $r45 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodManager", $r46, r54);

     label31:
        exitmonitor r6;

     label32:
        goto label35;

     label33:
        $r50 := @caughtexception;

        r10 = $r50;

        exitmonitor r6;

     label34:
        throw r10;

     label35:
        return 1;

        catch java.lang.Throwable from label01 to label02 with label05;
        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch android.os.RemoteException from label26 to label27 with label28;
        catch android.os.RemoteException from label18 to label23 with label30;
        catch android.os.RemoteException from label25 to label29 with label30;
        catch java.lang.Throwable from label10 to label12 with label33;
        catch java.lang.Throwable from label13 to label24 with label33;
        catch java.lang.Throwable from label25 to label32 with label33;
        catch java.lang.Throwable from label33 to label34 with label33;
    }

    public void windowDismissed(android.os.IBinder)
    {
        android.view.inputmethod.InputMethodManager r0;
        android.os.IBinder r1, $r7;
        android.view.inputmethod.InputMethodManager$H r2, $r4;
        java.lang.Throwable r3, $r8;
        android.view.View $r5, $r6;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: android.os.IBinder;

        virtualinvoke r0.<android.view.inputmethod.InputMethodManager: void checkFocus()>();

        $r4 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r5 == null goto label2;

        $r6 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        $r7 = virtualinvoke $r6.<android.view.View: android.os.IBinder getWindowToken()>();

        if $r7 != r1 goto label2;

        virtualinvoke r0.<android.view.inputmethod.InputMethodManager: void finishInputLocked()>();

     label2:
        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void focusIn(android.view.View)
    {
        android.view.inputmethod.InputMethodManager r0;
        android.view.View r1;
        android.view.inputmethod.InputMethodManager$H r2, $r4;
        java.lang.Throwable r3, $r5;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: android.view.View;

        $r4 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        virtualinvoke r0.<android.view.inputmethod.InputMethodManager: void focusInLocked(android.view.View)>(r1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    void focusInLocked(android.view.View)
    {
        android.view.inputmethod.InputMethodManager r0;
        android.view.View r1, $r2, $r3;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mCurRootView>;

        $r3 = virtualinvoke r1.<android.view.View: android.view.View getRootView()>();

        if $r2 == $r3 goto label1;

        return;

     label1:
        r0.<android.view.inputmethod.InputMethodManager: android.view.View mNextServedView> = r1;

        staticinvoke <android.view.inputmethod.InputMethodManager: void scheduleCheckFocusLocked(android.view.View)>(r1);

        return;
    }

    public void focusOut(android.view.View)
    {
        android.view.inputmethod.InputMethodManager r0;
        android.view.View r1, $r5;
        android.view.inputmethod.InputMethodManager$H r2, $r4;
        java.lang.Throwable r3, $r6;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: android.view.View;

        $r4 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r5 == r1 goto label2;

     label2:
        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    static void scheduleCheckFocusLocked(android.view.View)
    {
        android.view.View r0;
        android.view.ViewRootImpl r1;

        r0 := @parameter0: android.view.View;

        r1 = virtualinvoke r0.<android.view.View: android.view.ViewRootImpl getViewRootImpl()>();

        if r1 == null goto label1;

        virtualinvoke r1.<android.view.ViewRootImpl: void dispatchCheckFocus()>();

     label1:
        return;
    }

    public void checkFocus()
    {
        android.view.inputmethod.InputMethodManager r0;
        boolean $z0;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        $z0 = specialinvoke r0.<android.view.inputmethod.InputMethodManager: boolean checkFocusNoStartInput(boolean,boolean)>(0, 1);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.view.inputmethod.InputMethodManager: boolean startInputInner(android.os.IBinder,int,int,int)>(null, 0, 0, 0);

     label1:
        return;
    }

    private boolean checkFocusNoStartInput(boolean, boolean)
    {
        android.view.inputmethod.InputMethodManager r0;
        boolean z0, z1;
        android.view.inputmethod.InputMethodManager$H r1, $r5;
        java.lang.Throwable r2, $r10;
        android.view.View $r3, $r4, $r6, $r7, $r8, $r9;
        android.view.inputmethod.InputConnection r11;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $r4 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        $r3 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mNextServedView>;

        if $r4 != $r3 goto label01;

        if z0 != 0 goto label01;

        return 0;

     label01:
        $r5 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        r1 = $r5;

        entermonitor $r5;

     label02:
        $r7 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        $r6 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mNextServedView>;

        if $r7 != $r6 goto label04;

        if z0 != 0 goto label04;

        exitmonitor r1;

     label03:
        return 0;

     label04:
        $r8 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mNextServedView>;

        if $r8 != null goto label06;

        virtualinvoke r0.<android.view.inputmethod.InputMethodManager: void finishInputLocked()>();

        virtualinvoke r0.<android.view.inputmethod.InputMethodManager: void closeCurrentInput()>();

        exitmonitor r1;

     label05:
        return 0;

     label06:
        r11 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputConnection mServedInputConnection>;

        $r9 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mNextServedView>;

        r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView> = $r9;

        r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.EditorInfo mCurrentTextBoxAttribute> = null;

        r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.CompletionInfo[] mCompletions> = null;

        r0.<android.view.inputmethod.InputMethodManager: boolean mServedConnecting> = 1;

        exitmonitor r1;

     label07:
        goto label10;

     label08:
        $r10 := @caughtexception;

        r2 = $r10;

        exitmonitor r1;

     label09:
        throw r2;

     label10:
        if z1 == 0 goto label11;

        if r11 == null goto label11;

        interfaceinvoke r11.<android.view.inputmethod.InputConnection: boolean finishComposingText()>();

     label11:
        return 1;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    void closeCurrentInput()
    {
        android.view.inputmethod.InputMethodManager r0;
        com.android.internal.view.IInputMethodClient$Stub $r2;
        com.android.internal.view.IInputMethodManager $r3;
        android.os.RemoteException $r4;

        r0 := @this: android.view.inputmethod.InputMethodManager;

     label1:
        $r3 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

        $r2 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodClient$Stub mClient>;

        interfaceinvoke $r3.<com.android.internal.view.IInputMethodManager: boolean hideSoftInput(com.android.internal.view.IInputMethodClient,int,android.os.ResultReceiver)>($r2, 2, null);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void onWindowFocus(android.view.View, android.view.View, int, boolean, int)
    {
        android.view.inputmethod.InputMethodManager r0;
        android.view.View r1, r2, $r15;
        int i0, i1;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        android.view.inputmethod.InputMethodManager$H r3, $r7, $r8, r18;
        java.lang.Throwable r4, r6, $r16, $r17;
        com.android.internal.view.IInputMethodClient$Stub $r9;
        com.android.internal.view.IInputMethodManager $r10;
        android.os.IBinder $r12, $r13;
        android.os.RemoteException $r14;
        byte b2;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        i1 := @parameter4: int;

        z1 = 0;

        $r7 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        r3 = $r7;

        entermonitor $r7;

     label01:
        $z2 = r0.<android.view.inputmethod.InputMethodManager: boolean mHasBeenInactive>;

        if $z2 == 0 goto label02;

        r0.<android.view.inputmethod.InputMethodManager: boolean mHasBeenInactive> = 0;

        z1 = 1;

     label02:
        if r2 == null goto label03;

        $r15 = r2;

        goto label04;

     label03:
        $r15 = r1;

     label04:
        virtualinvoke r0.<android.view.inputmethod.InputMethodManager: void focusInLocked(android.view.View)>($r15);

        exitmonitor r3;

     label05:
        goto label08;

     label06:
        $r17 := @caughtexception;

        r4 = $r17;

        exitmonitor r3;

     label07:
        throw r4;

     label08:
        b2 = 0;

        if r2 == null goto label09;

        b2 = b2 | 1;

        $z4 = virtualinvoke r2.<android.view.View: boolean onCheckIsTextEditor()>();

        if $z4 == 0 goto label09;

        b2 = b2 | 2;

     label09:
        if z0 == 0 goto label10;

        b2 = b2 | 4;

     label10:
        $z3 = specialinvoke r0.<android.view.inputmethod.InputMethodManager: boolean checkFocusNoStartInput(boolean,boolean)>(z1, 1);

        if $z3 == 0 goto label11;

        $r13 = virtualinvoke r1.<android.view.View: android.os.IBinder getWindowToken()>();

        $z5 = virtualinvoke r0.<android.view.inputmethod.InputMethodManager: boolean startInputInner(android.os.IBinder,int,int,int)>($r13, b2, i0, i1);

        if $z5 == 0 goto label11;

        return;

     label11:
        $r8 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        r18 = $r8;

        entermonitor $r8;

     label12:
        $r10 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

        $r9 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodClient$Stub mClient>;

        $r12 = virtualinvoke r1.<android.view.View: android.os.IBinder getWindowToken()>();

        interfaceinvoke $r10.<com.android.internal.view.IInputMethodManager: com.android.internal.view.InputBindResult windowGainedFocus(com.android.internal.view.IInputMethodClient,android.os.IBinder,int,int,int,android.view.inputmethod.EditorInfo,com.android.internal.view.IInputContext)>($r9, $r12, b2, i0, i1, null, null);

     label13:
        goto label15;

     label14:
        $r14 := @caughtexception;

     label15:
        exitmonitor r18;

     label16:
        goto label19;

     label17:
        $r16 := @caughtexception;

        r6 = $r16;

        exitmonitor r18;

     label18:
        throw r6;

     label19:
        return;

        catch java.lang.Throwable from label01 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch android.os.RemoteException from label12 to label13 with label14;
        catch java.lang.Throwable from label12 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    public void startGettingWindowFocus(android.view.View)
    {
        android.view.inputmethod.InputMethodManager r0;
        android.view.View r1;
        android.view.inputmethod.InputMethodManager$H r2, $r4;
        java.lang.Throwable r3, $r5;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: android.view.View;

        $r4 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        r0.<android.view.inputmethod.InputMethodManager: android.view.View mCurRootView> = r1;

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void updateSelection(android.view.View, int, int, int, int)
    {
        android.view.inputmethod.InputMethodManager r0;
        android.view.View r1, $r5, $r9, $r10;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9;
        android.view.inputmethod.InputMethodManager$H r2, $r4;
        java.lang.Throwable r3, $r17;
        android.view.inputmethod.EditorInfo $r6;
        com.android.internal.view.IInputMethodSession $r7, $r8;
        boolean $z0;
        java.lang.StringBuilder $r11, $r13, $r14;
        android.os.RemoteException $r12, r18;
        java.lang.String $r15, $r16;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        virtualinvoke r0.<android.view.inputmethod.InputMethodManager: void checkFocus()>();

        $r4 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        r2 = $r4;

        entermonitor $r4;

     label01:
        $r5 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r5 == r1 goto label02;

        $r9 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r9 == null goto label03;

        $r10 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        $z0 = virtualinvoke $r10.<android.view.View: boolean checkInputConnectionProxy(android.view.View)>(r1);

        if $z0 == 0 goto label03;

     label02:
        $r6 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.EditorInfo mCurrentTextBoxAttribute>;

        if $r6 == null goto label03;

        $r7 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

        if $r7 != null goto label05;

     label03:
        exitmonitor r2;

     label04:
        return;

     label05:
        $i6 = r0.<android.view.inputmethod.InputMethodManager: int mCursorSelStart>;

        if $i6 != i0 goto label06;

        $i8 = r0.<android.view.inputmethod.InputMethodManager: int mCursorSelEnd>;

        if $i8 != i1 goto label06;

        $i7 = r0.<android.view.inputmethod.InputMethodManager: int mCursorCandStart>;

        if $i7 != i2 goto label06;

        $i9 = r0.<android.view.inputmethod.InputMethodManager: int mCursorCandEnd>;

        if $i9 == i3 goto label09;

     label06:
        i4 = r0.<android.view.inputmethod.InputMethodManager: int mCursorSelStart>;

        i5 = r0.<android.view.inputmethod.InputMethodManager: int mCursorSelEnd>;

        r0.<android.view.inputmethod.InputMethodManager: int mCursorSelStart> = i0;

        r0.<android.view.inputmethod.InputMethodManager: int mCursorSelEnd> = i1;

        r0.<android.view.inputmethod.InputMethodManager: int mCursorCandStart> = i2;

        r0.<android.view.inputmethod.InputMethodManager: int mCursorCandEnd> = i3;

        $r8 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

        interfaceinvoke $r8.<com.android.internal.view.IInputMethodSession: void updateSelection(int,int,int,int,int,int)>(i4, i5, i0, i1, i2, i3);

     label07:
        goto label09;

     label08:
        $r12 := @caughtexception;

        r18 = $r12;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IME died: ");

        $r15 = r0.<android.view.inputmethod.InputMethodManager: java.lang.String mCurId>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodManager", $r16, r18);

     label09:
        exitmonitor r2;

     label10:
        goto label13;

     label11:
        $r17 := @caughtexception;

        r3 = $r17;

        exitmonitor r2;

     label12:
        throw r3;

     label13:
        return;

        catch android.os.RemoteException from label06 to label07 with label08;
        catch java.lang.Throwable from label01 to label04 with label11;
        catch java.lang.Throwable from label05 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public void viewClicked(android.view.View)
    {
        android.view.inputmethod.InputMethodManager r0;
        android.view.View r1, $r5, $r6, $r8, $r12, $r13;
        boolean z0, $z1, $z2;
        android.view.inputmethod.InputMethodManager$H r2, $r7;
        android.os.RemoteException r3, $r15;
        java.lang.Throwable r4, $r14;
        android.view.inputmethod.EditorInfo $r9;
        com.android.internal.view.IInputMethodSession $r10, $r11;
        java.lang.StringBuilder $r16, $r18, $r20;
        java.lang.String $r17, $r19;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: android.view.View;

        $r6 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        $r5 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mNextServedView>;

        if $r6 == $r5 goto label01;

        $z2 = 1;

        goto label02;

     label01:
        $z2 = 0;

     label02:
        z0 = $z2;

        virtualinvoke r0.<android.view.inputmethod.InputMethodManager: void checkFocus()>();

        $r7 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        r2 = $r7;

        entermonitor $r7;

     label03:
        $r8 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r8 == r1 goto label04;

        $r12 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r12 == null goto label05;

        $r13 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        $z1 = virtualinvoke $r13.<android.view.View: boolean checkInputConnectionProxy(android.view.View)>(r1);

        if $z1 == 0 goto label05;

     label04:
        $r9 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.EditorInfo mCurrentTextBoxAttribute>;

        if $r9 == null goto label05;

        $r10 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

        if $r10 != null goto label07;

     label05:
        exitmonitor r2;

     label06:
        return;

     label07:
        $r11 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

        interfaceinvoke $r11.<com.android.internal.view.IInputMethodSession: void viewClicked(boolean)>(z0);

     label08:
        goto label10;

     label09:
        $r15 := @caughtexception;

        r3 = $r15;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IME died: ");

        $r17 = r0.<android.view.inputmethod.InputMethodManager: java.lang.String mCurId>;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodManager", $r19, r3);

     label10:
        exitmonitor r2;

     label11:
        goto label14;

     label12:
        $r14 := @caughtexception;

        r4 = $r14;

        exitmonitor r2;

     label13:
        throw r4;

     label14:
        return;

        catch android.os.RemoteException from label07 to label08 with label09;
        catch java.lang.Throwable from label03 to label06 with label12;
        catch java.lang.Throwable from label07 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    public boolean isWatchingCursor(android.view.View)
    {
        android.view.inputmethod.InputMethodManager r0;
        android.view.View r1;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: android.view.View;

        return 0;
    }

    public boolean isCursorAnchorInfoEnabled()
    {
        android.view.inputmethod.InputMethodManager r0;
        android.view.inputmethod.InputMethodManager$H r1, $r3;
        boolean z0, z1, $z2, $z3, $z4;
        java.lang.Throwable r2, $r4;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        $r3 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        r1 = $r3;

        entermonitor $r3;

     label01:
        $i0 = r0.<android.view.inputmethod.InputMethodManager: int mRequestUpdateCursorAnchorInfoMonitorMode>;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label02;

        $z4 = 1;

        goto label03;

     label02:
        $z4 = 0;

     label03:
        z0 = $z4;

        $i2 = r0.<android.view.inputmethod.InputMethodManager: int mRequestUpdateCursorAnchorInfoMonitorMode>;

        $i3 = $i2 & 2;

        if $i3 == 0 goto label04;

        $z3 = 1;

        goto label05;

     label04:
        $z3 = 0;

     label05:
        z1 = $z3;

        if z0 != 0 goto label06;

        if z1 == 0 goto label07;

     label06:
        $z2 = 1;

        goto label08;

     label07:
        $z2 = 0;

     label08:
        exitmonitor r1;

     label09:
        return $z2;

     label10:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label11:
        throw r2;

        catch java.lang.Throwable from label01 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void setUpdateCursorAnchorInfoMode(int)
    {
        android.view.inputmethod.InputMethodManager r0;
        int i0;
        android.view.inputmethod.InputMethodManager$H r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        i0 := @parameter0: int;

        $r3 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        r0.<android.view.inputmethod.InputMethodManager: int mRequestUpdateCursorAnchorInfoMonitorMode> = i0;

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void updateCursor(android.view.View, int, int, int, int)
    {
        android.view.inputmethod.InputMethodManager r0;
        android.view.View r1, $r6, $r15, $r17;
        int i0, i1, i2, i3;
        android.view.inputmethod.InputMethodManager$H r2, $r5;
        android.os.RemoteException r3, $r20;
        java.lang.Throwable r4, $r18;
        android.view.inputmethod.EditorInfo $r7;
        com.android.internal.view.IInputMethodSession $r8, $r14;
        android.graphics.Rect $r9, $r10, $r11, $r12, $r13, $r16;
        boolean $z0, $z1;
        java.lang.StringBuilder $r19, $r21, $r24;
        java.lang.String $r22, $r23;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        virtualinvoke r0.<android.view.inputmethod.InputMethodManager: void checkFocus()>();

        $r5 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        r2 = $r5;

        entermonitor $r5;

     label01:
        $r6 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r6 == r1 goto label02;

        $r15 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r15 == null goto label03;

        $r17 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        $z1 = virtualinvoke $r17.<android.view.View: boolean checkInputConnectionProxy(android.view.View)>(r1);

        if $z1 == 0 goto label03;

     label02:
        $r7 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.EditorInfo mCurrentTextBoxAttribute>;

        if $r7 == null goto label03;

        $r8 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

        if $r8 != null goto label05;

     label03:
        exitmonitor r2;

     label04:
        return;

     label05:
        $r9 = r0.<android.view.inputmethod.InputMethodManager: android.graphics.Rect mTmpCursorRect>;

        virtualinvoke $r9.<android.graphics.Rect: void set(int,int,int,int)>(i0, i1, i2, i3);

        $r11 = r0.<android.view.inputmethod.InputMethodManager: android.graphics.Rect mCursorRect>;

        $r10 = r0.<android.view.inputmethod.InputMethodManager: android.graphics.Rect mTmpCursorRect>;

        $z0 = virtualinvoke $r11.<android.graphics.Rect: boolean equals(java.lang.Object)>($r10);

        if $z0 != 0 goto label09;

     label06:
        $r14 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

        $r12 = r0.<android.view.inputmethod.InputMethodManager: android.graphics.Rect mTmpCursorRect>;

        interfaceinvoke $r14.<com.android.internal.view.IInputMethodSession: void updateCursor(android.graphics.Rect)>($r12);

        $r16 = r0.<android.view.inputmethod.InputMethodManager: android.graphics.Rect mCursorRect>;

        $r13 = r0.<android.view.inputmethod.InputMethodManager: android.graphics.Rect mTmpCursorRect>;

        virtualinvoke $r16.<android.graphics.Rect: void set(android.graphics.Rect)>($r13);

     label07:
        goto label09;

     label08:
        $r20 := @caughtexception;

        r3 = $r20;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IME died: ");

        $r23 = r0.<android.view.inputmethod.InputMethodManager: java.lang.String mCurId>;

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r22 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodManager", $r22, r3);

     label09:
        exitmonitor r2;

     label10:
        goto label13;

     label11:
        $r18 := @caughtexception;

        r4 = $r18;

        exitmonitor r2;

     label12:
        throw r4;

     label13:
        return;

        catch android.os.RemoteException from label06 to label07 with label08;
        catch java.lang.Throwable from label01 to label04 with label11;
        catch java.lang.Throwable from label05 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public void updateCursorAnchorInfo(android.view.View, android.view.inputmethod.CursorAnchorInfo)
    {
        android.view.inputmethod.InputMethodManager r0;
        android.view.View r1, $r7, $r12, $r13;
        android.view.inputmethod.CursorAnchorInfo r2, $r11;
        android.view.inputmethod.InputMethodManager$H r3, $r6;
        boolean z0, $z1, $z2, $z3;
        android.os.RemoteException r4, $r15;
        java.lang.Throwable r5, $r14;
        android.view.inputmethod.EditorInfo $r8;
        com.android.internal.view.IInputMethodSession $r9, $r10;
        int $i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r16, $r18, $r19;
        java.lang.String $r17, $r20;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.inputmethod.CursorAnchorInfo;

        if r1 == null goto label01;

        if r2 != null goto label02;

     label01:
        return;

     label02:
        virtualinvoke r0.<android.view.inputmethod.InputMethodManager: void checkFocus()>();

        $r6 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        r3 = $r6;

        entermonitor $r6;

     label03:
        $r7 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r7 == r1 goto label04;

        $r13 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r13 == null goto label05;

        $r12 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        $z3 = virtualinvoke $r12.<android.view.View: boolean checkInputConnectionProxy(android.view.View)>(r1);

        if $z3 == 0 goto label05;

     label04:
        $r8 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.EditorInfo mCurrentTextBoxAttribute>;

        if $r8 == null goto label05;

        $r9 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

        if $r9 != null goto label07;

     label05:
        exitmonitor r3;

     label06:
        return;

     label07:
        $i0 = r0.<android.view.inputmethod.InputMethodManager: int mRequestUpdateCursorAnchorInfoMonitorMode>;

        $i1 = $i0 & 1;

        if $i1 == 0 goto label08;

        $z2 = 1;

        goto label09;

     label08:
        $z2 = 0;

     label09:
        z0 = $z2;

        if z0 != 0 goto label11;

        $r11 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.CursorAnchorInfo mCursorAnchorInfo>;

        $z1 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r11, r2);

        if $z1 == 0 goto label11;

        exitmonitor r3;

     label10:
        return;

     label11:
        $r10 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

        interfaceinvoke $r10.<com.android.internal.view.IInputMethodSession: void updateCursorAnchorInfo(android.view.inputmethod.CursorAnchorInfo)>(r2);

        r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.CursorAnchorInfo mCursorAnchorInfo> = r2;

        $i2 = r0.<android.view.inputmethod.InputMethodManager: int mRequestUpdateCursorAnchorInfoMonitorMode>;

        $i3 = $i2 & -2;

        r0.<android.view.inputmethod.InputMethodManager: int mRequestUpdateCursorAnchorInfoMonitorMode> = $i3;

     label12:
        goto label14;

     label13:
        $r15 := @caughtexception;

        r4 = $r15;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IME died: ");

        $r17 = r0.<android.view.inputmethod.InputMethodManager: java.lang.String mCurId>;

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodManager", $r20, r4);

     label14:
        exitmonitor r3;

     label15:
        goto label18;

     label16:
        $r14 := @caughtexception;

        r5 = $r14;

        exitmonitor r3;

     label17:
        throw r5;

     label18:
        return;

        catch android.os.RemoteException from label11 to label12 with label13;
        catch java.lang.Throwable from label03 to label06 with label16;
        catch java.lang.Throwable from label07 to label10 with label16;
        catch java.lang.Throwable from label11 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    public void sendAppPrivateCommand(android.view.View, java.lang.String, android.os.Bundle)
    {
        android.view.inputmethod.InputMethodManager r0;
        android.view.View r1, $r8, $r12, $r13;
        java.lang.String r2, $r16, $r18;
        android.os.Bundle r3;
        android.view.inputmethod.InputMethodManager$H r4, $r7;
        android.os.RemoteException r5, $r14;
        java.lang.Throwable r6, $r20;
        android.view.inputmethod.EditorInfo $r9;
        com.android.internal.view.IInputMethodSession $r10, $r11;
        boolean $z0;
        java.lang.StringBuilder $r15, $r17, $r19;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.os.Bundle;

        virtualinvoke r0.<android.view.inputmethod.InputMethodManager: void checkFocus()>();

        $r7 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        r4 = $r7;

        entermonitor $r7;

     label01:
        $r8 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r8 == r1 goto label02;

        $r12 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        if $r12 == null goto label03;

        $r13 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        $z0 = virtualinvoke $r13.<android.view.View: boolean checkInputConnectionProxy(android.view.View)>(r1);

        if $z0 == 0 goto label03;

     label02:
        $r9 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.EditorInfo mCurrentTextBoxAttribute>;

        if $r9 == null goto label03;

        $r10 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

        if $r10 != null goto label05;

     label03:
        exitmonitor r4;

     label04:
        return;

     label05:
        $r11 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

        interfaceinvoke $r11.<com.android.internal.view.IInputMethodSession: void appPrivateCommand(java.lang.String,android.os.Bundle)>(r2, r3);

     label06:
        goto label08;

     label07:
        $r14 := @caughtexception;

        r5 = $r14;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IME died: ");

        $r16 = r0.<android.view.inputmethod.InputMethodManager: java.lang.String mCurId>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodManager", $r18, r5);

     label08:
        exitmonitor r4;

     label09:
        goto label12;

     label10:
        $r20 := @caughtexception;

        r6 = $r20;

        exitmonitor r4;

     label11:
        throw r6;

     label12:
        return;

        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label01 to label04 with label10;
        catch java.lang.Throwable from label05 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void setInputMethod(android.os.IBinder, java.lang.String)
    {
        android.view.inputmethod.InputMethodManager r0;
        android.os.IBinder r1;
        java.lang.String r2;
        android.os.RemoteException r3, $r5;
        com.android.internal.view.IInputMethodManager $r4;
        java.lang.RuntimeException $r6;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: java.lang.String;

     label1:
        $r4 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

        interfaceinvoke $r4.<com.android.internal.view.IInputMethodManager: void setInputMethod(android.os.IBinder,java.lang.String)>(r1, r2);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r3);

        throw $r6;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void setInputMethodAndSubtype(android.os.IBinder, java.lang.String, android.view.inputmethod.InputMethodSubtype)
    {
        android.view.inputmethod.InputMethodManager r0;
        android.os.IBinder r1;
        java.lang.String r2;
        android.view.inputmethod.InputMethodSubtype r3;
        android.os.RemoteException r4, $r6;
        com.android.internal.view.IInputMethodManager $r5;
        java.lang.RuntimeException $r7;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: android.os.IBinder;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.view.inputmethod.InputMethodSubtype;

     label1:
        $r5 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

        interfaceinvoke $r5.<com.android.internal.view.IInputMethodManager: void setInputMethodAndSubtype(android.os.IBinder,java.lang.String,android.view.inputmethod.InputMethodSubtype)>(r1, r2, r3);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r4 = $r6;

        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r4);

        throw $r7;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void hideSoftInputFromInputMethod(android.os.IBinder, int)
    {
        android.view.inputmethod.InputMethodManager r0;
        android.os.IBinder r1;
        int i0;
        android.os.RemoteException r2, $r4;
        com.android.internal.view.IInputMethodManager $r3;
        java.lang.RuntimeException $r5;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

     label1:
        $r3 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

        interfaceinvoke $r3.<com.android.internal.view.IInputMethodManager: void hideMySoftInput(android.os.IBinder,int)>(r1, i0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r2);

        throw $r5;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void showSoftInputFromInputMethod(android.os.IBinder, int)
    {
        android.view.inputmethod.InputMethodManager r0;
        android.os.IBinder r1;
        int i0;
        android.os.RemoteException r2, $r4;
        com.android.internal.view.IInputMethodManager $r3;
        java.lang.RuntimeException $r5;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: android.os.IBinder;

        i0 := @parameter1: int;

     label1:
        $r3 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

        interfaceinvoke $r3.<com.android.internal.view.IInputMethodManager: void showMySoftInput(android.os.IBinder,int)>(r1, i0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r2);

        throw $r5;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public int dispatchInputEvent(android.view.InputEvent, java.lang.Object, android.view.inputmethod.InputMethodManager$FinishedInputEventCallback, android.os.Handler)
    {
        android.view.inputmethod.InputMethodManager r0;
        android.view.InputEvent r1;
        java.lang.Object r2;
        android.view.inputmethod.InputMethodManager$FinishedInputEventCallback r3;
        android.os.Handler r4;
        android.view.inputmethod.InputMethodManager$H r5, $r9, $r13, $r14;
        android.view.KeyEvent r6;
        android.os.Message r7;
        java.lang.Throwable r8, $r15;
        com.android.internal.view.IInputMethodSession $r10;
        boolean $z0, $z1;
        java.lang.String $r11;
        android.os.Looper $r12;
        int $i0, $i1, $i2, $i3;
        android.view.inputmethod.InputMethodManager$PendingEvent r16;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: android.view.InputEvent;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: android.view.inputmethod.InputMethodManager$FinishedInputEventCallback;

        r4 := @parameter3: android.os.Handler;

        $r9 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        r5 = $r9;

        entermonitor $r9;

     label01:
        $r10 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

        if $r10 == null goto label07;

        $z0 = r1 instanceof android.view.KeyEvent;

        if $z0 == 0 goto label03;

        r6 = (android.view.KeyEvent) r1;

        $i2 = virtualinvoke r6.<android.view.KeyEvent: int getAction()>();

        if $i2 != 0 goto label03;

        $i1 = virtualinvoke r6.<android.view.KeyEvent: int getKeyCode()>();

        if $i1 != 63 goto label03;

        $i3 = virtualinvoke r6.<android.view.KeyEvent: int getRepeatCount()>();

        if $i3 != 0 goto label03;

        specialinvoke r0.<android.view.inputmethod.InputMethodManager: void showInputMethodPickerLocked()>();

        exitmonitor r5;

     label02:
        return 1;

     label03:
        $r11 = r0.<android.view.inputmethod.InputMethodManager: java.lang.String mCurId>;

        r16 = specialinvoke r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$PendingEvent obtainPendingEventLocked(android.view.InputEvent,java.lang.Object,java.lang.String,android.view.inputmethod.InputMethodManager$FinishedInputEventCallback,android.os.Handler)>(r1, r2, $r11, r3, r4);

        $r12 = r0.<android.view.inputmethod.InputMethodManager: android.os.Looper mMainLooper>;

        $z1 = virtualinvoke $r12.<android.os.Looper: boolean isCurrentThread()>();

        if $z1 == 0 goto label05;

        $i0 = virtualinvoke r0.<android.view.inputmethod.InputMethodManager: int sendInputEventOnMainLooperLocked(android.view.inputmethod.InputMethodManager$PendingEvent)>(r16);

        exitmonitor r5;

     label04:
        return $i0;

     label05:
        $r13 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        r7 = virtualinvoke $r13.<android.view.inputmethod.InputMethodManager$H: android.os.Message obtainMessage(int,java.lang.Object)>(5, r16);

        virtualinvoke r7.<android.os.Message: void setAsynchronous(boolean)>(1);

        $r14 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        virtualinvoke $r14.<android.view.inputmethod.InputMethodManager$H: boolean sendMessage(android.os.Message)>(r7);

        exitmonitor r5;

     label06:
        return -1;

     label07:
        exitmonitor r5;

     label08:
        goto label11;

     label09:
        $r15 := @caughtexception;

        r8 = $r15;

        exitmonitor r5;

     label10:
        throw r8;

     label11:
        return 0;

        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label03 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    void sendInputEventAndReportResultOnMainLooper(android.view.inputmethod.InputMethodManager$PendingEvent)
    {
        android.view.inputmethod.InputMethodManager r0;
        android.view.inputmethod.InputMethodManager$PendingEvent r1;
        boolean z0, $z1;
        android.view.inputmethod.InputMethodManager$H r2, $r4;
        int i0;
        java.lang.Throwable r3, $r5;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: android.view.inputmethod.InputMethodManager$PendingEvent;

        $r4 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        i0 = virtualinvoke r0.<android.view.inputmethod.InputMethodManager: int sendInputEventOnMainLooperLocked(android.view.inputmethod.InputMethodManager$PendingEvent)>(r1);

        if i0 != -1 goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        if i0 != 1 goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        z0 = $z1;

        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r5 := @caughtexception;

        r3 = $r5;

        exitmonitor r2;

     label8:
        throw r3;

     label9:
        virtualinvoke r0.<android.view.inputmethod.InputMethodManager: void invokeFinishedInputEventCallback(android.view.inputmethod.InputMethodManager$PendingEvent,boolean)>(r1, z0);

        return;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    int sendInputEventOnMainLooperLocked(android.view.inputmethod.InputMethodManager$PendingEvent)
    {
        android.view.inputmethod.InputMethodManager r0;
        android.view.inputmethod.InputMethodManager$PendingEvent r1;
        android.view.InputEvent r2;
        int i0, $i2;
        android.os.Message r3;
        android.view.InputChannel $r4, $r21;
        android.view.inputmethod.InputMethodManager$ImeInputEventSender $r5, $r6, $r19;
        boolean $z0;
        java.lang.StringBuilder $r7, $r8, $r10, $r11, $r13;
        java.lang.String $r9, $r12;
        android.util.SparseArray $r14, $r15;
        android.view.inputmethod.InputMethodManager$H $r16, $r17, $r18;
        android.os.Looper $r20;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: android.view.inputmethod.InputMethodManager$PendingEvent;

        $r4 = r0.<android.view.inputmethod.InputMethodManager: android.view.InputChannel mCurChannel>;

        if $r4 == null goto label3;

        $r5 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$ImeInputEventSender mCurSender>;

        if $r5 != null goto label1;

        $r19 = new android.view.inputmethod.InputMethodManager$ImeInputEventSender;

        $r21 = r0.<android.view.inputmethod.InputMethodManager: android.view.InputChannel mCurChannel>;

        $r18 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        $r20 = virtualinvoke $r18.<android.view.inputmethod.InputMethodManager$H: android.os.Looper getLooper()>();

        specialinvoke $r19.<android.view.inputmethod.InputMethodManager$ImeInputEventSender: void <init>(android.view.inputmethod.InputMethodManager,android.view.InputChannel,android.os.Looper)>(r0, $r21, $r20);

        r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$ImeInputEventSender mCurSender> = $r19;

     label1:
        r2 = r1.<android.view.inputmethod.InputMethodManager$PendingEvent: android.view.InputEvent mEvent>;

        i0 = virtualinvoke r2.<android.view.InputEvent: int getSequenceNumber()>();

        $r6 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$ImeInputEventSender mCurSender>;

        $z0 = virtualinvoke $r6.<android.view.inputmethod.InputMethodManager$ImeInputEventSender: boolean sendInputEvent(int,android.view.InputEvent)>(i0, r2);

        if $z0 == 0 goto label2;

        $r14 = r0.<android.view.inputmethod.InputMethodManager: android.util.SparseArray mPendingEvents>;

        virtualinvoke $r14.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r1);

        $r15 = r0.<android.view.inputmethod.InputMethodManager: android.util.SparseArray mPendingEvents>;

        $i2 = virtualinvoke $r15.<android.util.SparseArray: int size()>();

        staticinvoke <android.os.Trace: void traceCounter(long,java.lang.String,int)>(4L, "aq:imm", $i2);

        $r16 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        r3 = virtualinvoke $r16.<android.view.inputmethod.InputMethodManager$H: android.os.Message obtainMessage(int,java.lang.Object)>(6, r1);

        virtualinvoke r3.<android.os.Message: void setAsynchronous(boolean)>(1);

        $r17 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        virtualinvoke $r17.<android.view.inputmethod.InputMethodManager$H: boolean sendMessageDelayed(android.os.Message,long)>(r3, 2500L);

        return -1;

     label2:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to send input event to IME: ");

        $r9 = r0.<android.view.inputmethod.InputMethodManager: java.lang.String mCurId>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dropping: ");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("InputMethodManager", $r12);

     label3:
        return 0;
    }

    void finishedInputEvent(int, boolean, boolean)
    {
        android.view.inputmethod.InputMethodManager r0;
        int i0, i1, $i2;
        boolean z0, z1;
        android.view.inputmethod.InputMethodManager$PendingEvent r1;
        android.view.inputmethod.InputMethodManager$H r2, $r4, $r10;
        java.lang.Throwable r3, $r16;
        android.util.SparseArray $r5, $r6, $r8, $r9;
        java.lang.Object $r7;
        java.lang.StringBuilder $r11, $r13, $r15;
        java.lang.String $r12, $r14;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r4 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<android.view.inputmethod.InputMethodManager: android.util.SparseArray mPendingEvents>;

        i1 = virtualinvoke $r5.<android.util.SparseArray: int indexOfKey(int)>(i0);

        if i1 >= 0 goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        $r6 = r0.<android.view.inputmethod.InputMethodManager: android.util.SparseArray mPendingEvents>;

        $r7 = virtualinvoke $r6.<android.util.SparseArray: java.lang.Object valueAt(int)>(i1);

        r1 = (android.view.inputmethod.InputMethodManager$PendingEvent) $r7;

        $r8 = r0.<android.view.inputmethod.InputMethodManager: android.util.SparseArray mPendingEvents>;

        virtualinvoke $r8.<android.util.SparseArray: void removeAt(int)>(i1);

        $r9 = r0.<android.view.inputmethod.InputMethodManager: android.util.SparseArray mPendingEvents>;

        $i2 = virtualinvoke $r9.<android.util.SparseArray: int size()>();

        staticinvoke <android.os.Trace: void traceCounter(long,java.lang.String,int)>(4L, "aq:imm", $i2);

        if z1 == 0 goto label4;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timeout waiting for IME to handle input event after 2500 ms: ");

        $r12 = r1.<android.view.inputmethod.InputMethodManager$PendingEvent: java.lang.String mInputMethodId>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("InputMethodManager", $r14);

        goto label5;

     label4:
        $r10 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        virtualinvoke $r10.<android.view.inputmethod.InputMethodManager$H: void removeMessages(int,java.lang.Object)>(6, r1);

     label5:
        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r16 := @caughtexception;

        r3 = $r16;

        exitmonitor r2;

     label8:
        throw r3;

     label9:
        virtualinvoke r0.<android.view.inputmethod.InputMethodManager: void invokeFinishedInputEventCallback(android.view.inputmethod.InputMethodManager$PendingEvent,boolean)>(r1, z0);

        return;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    void invokeFinishedInputEventCallback(android.view.inputmethod.InputMethodManager$PendingEvent, boolean)
    {
        android.view.inputmethod.InputMethodManager r0;
        android.view.inputmethod.InputMethodManager$PendingEvent r1;
        boolean z0, $z1;
        android.os.Message r2;
        android.os.Handler $r3, $r5;
        android.os.Looper $r4;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: android.view.inputmethod.InputMethodManager$PendingEvent;

        z0 := @parameter1: boolean;

        r1.<android.view.inputmethod.InputMethodManager$PendingEvent: boolean mHandled> = z0;

        $r3 = r1.<android.view.inputmethod.InputMethodManager$PendingEvent: android.os.Handler mHandler>;

        $r4 = virtualinvoke $r3.<android.os.Handler: android.os.Looper getLooper()>();

        $z1 = virtualinvoke $r4.<android.os.Looper: boolean isCurrentThread()>();

        if $z1 == 0 goto label1;

        virtualinvoke r1.<android.view.inputmethod.InputMethodManager$PendingEvent: void run()>();

        goto label2;

     label1:
        $r5 = r1.<android.view.inputmethod.InputMethodManager$PendingEvent: android.os.Handler mHandler>;

        r2 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,java.lang.Runnable)>($r5, r1);

        virtualinvoke r2.<android.os.Message: void setAsynchronous(boolean)>(1);

        virtualinvoke r2.<android.os.Message: void sendToTarget()>();

     label2:
        return;
    }

    private void flushPendingEventsLocked()
    {
        android.view.inputmethod.InputMethodManager r0;
        int i0, i1, i2;
        android.os.Message r1;
        android.view.inputmethod.InputMethodManager$H $r2, $r5;
        android.util.SparseArray $r3, $r4;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        $r2 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        virtualinvoke $r2.<android.view.inputmethod.InputMethodManager$H: void removeMessages(int)>(7);

        $r3 = r0.<android.view.inputmethod.InputMethodManager: android.util.SparseArray mPendingEvents>;

        i0 = virtualinvoke $r3.<android.util.SparseArray: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r4 = r0.<android.view.inputmethod.InputMethodManager: android.util.SparseArray mPendingEvents>;

        i2 = virtualinvoke $r4.<android.util.SparseArray: int keyAt(int)>(i1);

        $r5 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        r1 = virtualinvoke $r5.<android.view.inputmethod.InputMethodManager$H: android.os.Message obtainMessage(int,int,int)>(7, i2, 0);

        virtualinvoke r1.<android.os.Message: void setAsynchronous(boolean)>(1);

        virtualinvoke r1.<android.os.Message: void sendToTarget()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private android.view.inputmethod.InputMethodManager$PendingEvent obtainPendingEventLocked(android.view.InputEvent, java.lang.Object, java.lang.String, android.view.inputmethod.InputMethodManager$FinishedInputEventCallback, android.os.Handler)
    {
        android.view.inputmethod.InputMethodManager r0;
        android.view.InputEvent r1;
        java.lang.Object r2, $r8;
        java.lang.String r3;
        android.view.inputmethod.InputMethodManager$FinishedInputEventCallback r4;
        android.os.Handler r5;
        android.view.inputmethod.InputMethodManager$PendingEvent r6, $r9;
        android.util.Pools$Pool $r7;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: android.view.InputEvent;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.view.inputmethod.InputMethodManager$FinishedInputEventCallback;

        r5 := @parameter4: android.os.Handler;

        $r7 = r0.<android.view.inputmethod.InputMethodManager: android.util.Pools$Pool mPendingEventPool>;

        $r8 = interfaceinvoke $r7.<android.util.Pools$Pool: java.lang.Object acquire()>();

        r6 = (android.view.inputmethod.InputMethodManager$PendingEvent) $r8;

        if r6 != null goto label1;

        $r9 = new android.view.inputmethod.InputMethodManager$PendingEvent;

        specialinvoke $r9.<android.view.inputmethod.InputMethodManager$PendingEvent: void <init>(android.view.inputmethod.InputMethodManager,android.view.inputmethod.InputMethodManager$1)>(r0, null);

        r6 = $r9;

     label1:
        r6.<android.view.inputmethod.InputMethodManager$PendingEvent: android.view.InputEvent mEvent> = r1;

        r6.<android.view.inputmethod.InputMethodManager$PendingEvent: java.lang.Object mToken> = r2;

        r6.<android.view.inputmethod.InputMethodManager$PendingEvent: java.lang.String mInputMethodId> = r3;

        r6.<android.view.inputmethod.InputMethodManager$PendingEvent: android.view.inputmethod.InputMethodManager$FinishedInputEventCallback mCallback> = r4;

        r6.<android.view.inputmethod.InputMethodManager$PendingEvent: android.os.Handler mHandler> = r5;

        return r6;
    }

    private void recyclePendingEventLocked(android.view.inputmethod.InputMethodManager$PendingEvent)
    {
        android.view.inputmethod.InputMethodManager r0;
        android.view.inputmethod.InputMethodManager$PendingEvent r1;
        android.util.Pools$Pool $r2;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: android.view.inputmethod.InputMethodManager$PendingEvent;

        virtualinvoke r1.<android.view.inputmethod.InputMethodManager$PendingEvent: void recycle()>();

        $r2 = r0.<android.view.inputmethod.InputMethodManager: android.util.Pools$Pool mPendingEventPool>;

        interfaceinvoke $r2.<android.util.Pools$Pool: boolean release(java.lang.Object)>(r1);

        return;
    }

    public void showInputMethodPicker()
    {
        android.view.inputmethod.InputMethodManager r0;
        android.view.inputmethod.InputMethodManager$H r1, $r3;
        java.lang.Throwable r2, $r4;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        $r3 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        specialinvoke r0.<android.view.inputmethod.InputMethodManager: void showInputMethodPickerLocked()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void showInputMethodPickerLocked()
    {
        android.view.inputmethod.InputMethodManager r0;
        android.os.RemoteException r1, $r4;
        com.android.internal.view.IInputMethodClient$Stub $r2;
        com.android.internal.view.IInputMethodManager $r3;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.lang.String $r7, $r9;

        r0 := @this: android.view.inputmethod.InputMethodManager;

     label1:
        $r3 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

        $r2 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodClient$Stub mClient>;

        interfaceinvoke $r3.<com.android.internal.view.IInputMethodManager: void showInputMethodPickerFromClient(com.android.internal.view.IInputMethodClient)>($r2);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IME died: ");

        $r7 = r0.<android.view.inputmethod.InputMethodManager: java.lang.String mCurId>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodManager", $r9, r1);

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    public void showInputMethodAndSubtypeEnabler(java.lang.String)
    {
        android.view.inputmethod.InputMethodManager r0;
        java.lang.String r1, $r11, $r13;
        android.view.inputmethod.InputMethodManager$H r2, $r5;
        android.os.RemoteException r3, $r8;
        java.lang.Throwable r4, $r14;
        com.android.internal.view.IInputMethodClient$Stub $r6;
        com.android.internal.view.IInputMethodManager $r7;
        java.lang.StringBuilder $r9, $r10, $r12;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: java.lang.String;

        $r5 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r7 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

        $r6 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodClient$Stub mClient>;

        interfaceinvoke $r7.<com.android.internal.view.IInputMethodManager: void showInputMethodAndSubtypeEnablerFromClient(com.android.internal.view.IInputMethodClient,java.lang.String)>($r6, r1);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        r3 = $r8;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IME died: ");

        $r11 = r0.<android.view.inputmethod.InputMethodManager: java.lang.String mCurId>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodManager", $r13, r3);

     label4:
        exitmonitor r2;

     label5:
        goto label8;

     label6:
        $r14 := @caughtexception;

        r4 = $r14;

        exitmonitor r2;

     label7:
        throw r4;

     label8:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype()
    {
        android.view.inputmethod.InputMethodManager r0;
        android.view.inputmethod.InputMethodManager$H r1, $r4;
        android.os.RemoteException r2, $r8;
        java.lang.Throwable r3, $r7;
        com.android.internal.view.IInputMethodManager $r5;
        android.view.inputmethod.InputMethodSubtype $r6;
        java.lang.StringBuilder $r9, $r10, $r12;
        java.lang.String $r11, $r13;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        $r4 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

        $r6 = interfaceinvoke $r5.<com.android.internal.view.IInputMethodManager: android.view.inputmethod.InputMethodSubtype getCurrentInputMethodSubtype()>();

     label2:
        exitmonitor r1;

     label3:
        return $r6;

     label4:
        $r8 := @caughtexception;

        r2 = $r8;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IME died: ");

        $r11 = r0.<android.view.inputmethod.InputMethodManager: java.lang.String mCurId>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodManager", $r13, r2);

        exitmonitor r1;

     label5:
        return null;

     label6:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r1;

     label7:
        throw r3;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public boolean setCurrentInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)
    {
        android.view.inputmethod.InputMethodManager r0;
        android.view.inputmethod.InputMethodSubtype r1;
        android.view.inputmethod.InputMethodManager$H r2, $r5;
        android.os.RemoteException r3, $r7;
        java.lang.Throwable r4, $r13;
        com.android.internal.view.IInputMethodManager $r6;
        boolean $z0;
        java.lang.StringBuilder $r8, $r9, $r11;
        java.lang.String $r10, $r12;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: android.view.inputmethod.InputMethodSubtype;

        $r5 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

        $z0 = interfaceinvoke $r6.<com.android.internal.view.IInputMethodManager: boolean setCurrentInputMethodSubtype(android.view.inputmethod.InputMethodSubtype)>(r1);

     label2:
        exitmonitor r2;

     label3:
        return $z0;

     label4:
        $r7 := @caughtexception;

        r3 = $r7;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IME died: ");

        $r10 = r0.<android.view.inputmethod.InputMethodManager: java.lang.String mCurId>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodManager", $r12, r3);

        exitmonitor r2;

     label5:
        return 0;

     label6:
        $r13 := @caughtexception;

        r4 = $r13;

        exitmonitor r2;

     label7:
        throw r4;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void notifyUserAction()
    {
        android.view.inputmethod.InputMethodManager r0;
        android.view.inputmethod.InputMethodManager$H r1, $r4;
        android.os.RemoteException r2, $r6;
        java.lang.Throwable r3, $r12;
        int $i0, $i1, $i2, $i3;
        com.android.internal.view.IInputMethodManager $r5;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10, $r11;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        $r4 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        r1 = $r4;

        entermonitor $r4;

     label01:
        $i1 = r0.<android.view.inputmethod.InputMethodManager: int mLastSentUserActionNotificationSequenceNumber>;

        $i0 = r0.<android.view.inputmethod.InputMethodManager: int mNextUserActionNotificationSequenceNumber>;

        if $i1 != $i0 goto label03;

        exitmonitor r1;

     label02:
        return;

     label03:
        $r5 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

        $i2 = r0.<android.view.inputmethod.InputMethodManager: int mNextUserActionNotificationSequenceNumber>;

        interfaceinvoke $r5.<com.android.internal.view.IInputMethodManager: void notifyUserAction(int)>($i2);

        $i3 = r0.<android.view.inputmethod.InputMethodManager: int mNextUserActionNotificationSequenceNumber>;

        r0.<android.view.inputmethod.InputMethodManager: int mLastSentUserActionNotificationSequenceNumber> = $i3;

     label04:
        goto label06;

     label05:
        $r6 := @caughtexception;

        r2 = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IME died: ");

        $r10 = r0.<android.view.inputmethod.InputMethodManager: java.lang.String mCurId>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodManager", $r11, r2);

     label06:
        exitmonitor r1;

     label07:
        goto label10;

     label08:
        $r12 := @caughtexception;

        r3 = $r12;

        exitmonitor r1;

     label09:
        throw r3;

     label10:
        return;

        catch android.os.RemoteException from label03 to label04 with label05;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public java.util.Map getShortcutInputMethodsAndSubtypes()
    {
        android.view.inputmethod.InputMethodManager r0;
        android.view.inputmethod.InputMethodManager$H r1, $r7;
        java.util.HashMap r2, $r8;
        java.util.List r3;
        java.util.ArrayList r4, $r11;
        int i0, i1;
        java.lang.Object r5;
        java.lang.Throwable r6, $r20;
        com.android.internal.view.IInputMethodManager $r9;
        boolean $z0, $z1, $z3;
        android.view.inputmethod.InputMethodSubtype $r10;
        android.view.inputmethod.InputMethodInfo $r13;
        android.os.RemoteException $r14, r21;
        java.lang.StringBuilder $r15, $r17, $r19;
        java.lang.String $r16, $r18;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        $r7 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        r1 = $r7;

        entermonitor $r7;

     label01:
        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        r2 = $r8;

     label02:
        $r9 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

        r3 = interfaceinvoke $r9.<com.android.internal.view.IInputMethodManager: java.util.List getShortcutInputMethodsAndSubtypes()>();

        r4 = null;

        i0 = interfaceinvoke r3.<java.util.List: int size()>();

        if r3 == null goto label07;

        if i0 <= 0 goto label07;

        i1 = 0;

     label03:
        if i1 >= i0 goto label07;

        r5 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i1);

        $z1 = r5 instanceof android.view.inputmethod.InputMethodInfo;

        if $z1 == 0 goto label05;

        $z3 = virtualinvoke r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r5);

        if $z3 == 0 goto label04;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("InputMethodManager", "IMI list already contains the same InputMethod.");

        goto label07;

     label04:
        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>()>();

        r4 = $r11;

        $r13 = (android.view.inputmethod.InputMethodInfo) r5;

        virtualinvoke r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r13, r4);

        goto label06;

     label05:
        if r4 == null goto label06;

        $z0 = r5 instanceof android.view.inputmethod.InputMethodSubtype;

        if $z0 == 0 goto label06;

        $r10 = (android.view.inputmethod.InputMethodSubtype) r5;

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

     label06:
        i1 = i1 + 1;

        goto label03;

     label07:
        goto label09;

     label08:
        $r14 := @caughtexception;

        r21 = $r14;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IME died: ");

        $r16 = r0.<android.view.inputmethod.InputMethodManager: java.lang.String mCurId>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodManager", $r18, r21);

     label09:
        exitmonitor r1;

     label10:
        return r2;

     label11:
        $r20 := @caughtexception;

        r6 = $r20;

        exitmonitor r1;

     label12:
        throw r6;

        catch android.os.RemoteException from label02 to label07 with label08;
        catch java.lang.Throwable from label01 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public int getInputMethodWindowVisibleHeight()
    {
        android.view.inputmethod.InputMethodManager r0;
        android.view.inputmethod.InputMethodManager$H r1, $r4;
        android.os.RemoteException r2, $r7;
        java.lang.Throwable r3, $r6;
        com.android.internal.view.IInputMethodManager $r5;
        int $i0;
        java.lang.StringBuilder $r8, $r9, $r11;
        java.lang.String $r10, $r12;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        $r4 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

        $i0 = interfaceinvoke $r5.<com.android.internal.view.IInputMethodManager: int getInputMethodWindowVisibleHeight()>();

     label2:
        exitmonitor r1;

     label3:
        return $i0;

     label4:
        $r7 := @caughtexception;

        r2 = $r7;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IME died: ");

        $r10 = r0.<android.view.inputmethod.InputMethodManager: java.lang.String mCurId>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodManager", $r12, r2);

        exitmonitor r1;

     label5:
        return 0;

     label6:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r1;

     label7:
        throw r3;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public boolean switchToLastInputMethod(android.os.IBinder)
    {
        android.view.inputmethod.InputMethodManager r0;
        android.os.IBinder r1;
        android.view.inputmethod.InputMethodManager$H r2, $r5;
        android.os.RemoteException r3, $r8;
        java.lang.Throwable r4, $r7;
        com.android.internal.view.IInputMethodManager $r6;
        boolean $z0;
        java.lang.StringBuilder $r9, $r10, $r13;
        java.lang.String $r11, $r12;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: android.os.IBinder;

        $r5 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

        $z0 = interfaceinvoke $r6.<com.android.internal.view.IInputMethodManager: boolean switchToLastInputMethod(android.os.IBinder)>(r1);

     label2:
        exitmonitor r2;

     label3:
        return $z0;

     label4:
        $r8 := @caughtexception;

        r3 = $r8;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IME died: ");

        $r11 = r0.<android.view.inputmethod.InputMethodManager: java.lang.String mCurId>;

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodManager", $r12, r3);

        exitmonitor r2;

     label5:
        return 0;

     label6:
        $r7 := @caughtexception;

        r4 = $r7;

        exitmonitor r2;

     label7:
        throw r4;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public boolean switchToNextInputMethod(android.os.IBinder, boolean)
    {
        android.view.inputmethod.InputMethodManager r0;
        android.os.IBinder r1;
        boolean z0, $z1;
        android.view.inputmethod.InputMethodManager$H r2, $r5;
        android.os.RemoteException r3, $r7;
        java.lang.Throwable r4, $r13;
        com.android.internal.view.IInputMethodManager $r6;
        java.lang.StringBuilder $r8, $r9, $r11;
        java.lang.String $r10, $r12;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: android.os.IBinder;

        z0 := @parameter1: boolean;

        $r5 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

        $z1 = interfaceinvoke $r6.<com.android.internal.view.IInputMethodManager: boolean switchToNextInputMethod(android.os.IBinder,boolean)>(r1, z0);

     label2:
        exitmonitor r2;

     label3:
        return $z1;

     label4:
        $r7 := @caughtexception;

        r3 = $r7;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IME died: ");

        $r10 = r0.<android.view.inputmethod.InputMethodManager: java.lang.String mCurId>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodManager", $r12, r3);

        exitmonitor r2;

     label5:
        return 0;

     label6:
        $r13 := @caughtexception;

        r4 = $r13;

        exitmonitor r2;

     label7:
        throw r4;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public boolean shouldOfferSwitchingToNextInputMethod(android.os.IBinder)
    {
        android.view.inputmethod.InputMethodManager r0;
        android.os.IBinder r1;
        android.view.inputmethod.InputMethodManager$H r2, $r5;
        android.os.RemoteException r3, $r7;
        java.lang.Throwable r4, $r13;
        com.android.internal.view.IInputMethodManager $r6;
        boolean $z0;
        java.lang.StringBuilder $r8, $r9, $r11;
        java.lang.String $r10, $r12;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: android.os.IBinder;

        $r5 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

        $z0 = interfaceinvoke $r6.<com.android.internal.view.IInputMethodManager: boolean shouldOfferSwitchingToNextInputMethod(android.os.IBinder)>(r1);

     label2:
        exitmonitor r2;

     label3:
        return $z0;

     label4:
        $r7 := @caughtexception;

        r3 = $r7;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IME died: ");

        $r10 = r0.<android.view.inputmethod.InputMethodManager: java.lang.String mCurId>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodManager", $r12, r3);

        exitmonitor r2;

     label5:
        return 0;

     label6:
        $r13 := @caughtexception;

        r4 = $r13;

        exitmonitor r2;

     label7:
        throw r4;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void setAdditionalInputMethodSubtypes(java.lang.String, android.view.inputmethod.InputMethodSubtype[])
    {
        android.view.inputmethod.InputMethodManager r0;
        java.lang.String r1, $r12, $r13;
        android.view.inputmethod.InputMethodSubtype[] r2;
        android.view.inputmethod.InputMethodManager$H r3, $r6;
        android.os.RemoteException r4, $r9;
        java.lang.Throwable r5, $r8;
        com.android.internal.view.IInputMethodManager $r7;
        java.lang.StringBuilder $r10, $r11, $r14;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.view.inputmethod.InputMethodSubtype[];

        $r6 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        r3 = $r6;

        entermonitor $r6;

     label1:
        $r7 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

        interfaceinvoke $r7.<com.android.internal.view.IInputMethodManager: void setAdditionalInputMethodSubtypes(java.lang.String,android.view.inputmethod.InputMethodSubtype[])>(r1, r2);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        r4 = $r9;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IME died: ");

        $r12 = r0.<android.view.inputmethod.InputMethodManager: java.lang.String mCurId>;

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodManager", $r13, r4);

     label4:
        exitmonitor r3;

     label5:
        goto label8;

     label6:
        $r8 := @caughtexception;

        r5 = $r8;

        exitmonitor r3;

     label7:
        throw r5;

     label8:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public android.view.inputmethod.InputMethodSubtype getLastInputMethodSubtype()
    {
        android.view.inputmethod.InputMethodManager r0;
        android.view.inputmethod.InputMethodManager$H r1, $r4;
        android.os.RemoteException r2, $r8;
        java.lang.Throwable r3, $r7;
        com.android.internal.view.IInputMethodManager $r5;
        android.view.inputmethod.InputMethodSubtype $r6;
        java.lang.StringBuilder $r9, $r10, $r12;
        java.lang.String $r11, $r13;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        $r4 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager$H mH>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

        $r6 = interfaceinvoke $r5.<com.android.internal.view.IInputMethodManager: android.view.inputmethod.InputMethodSubtype getLastInputMethodSubtype()>();

     label2:
        exitmonitor r1;

     label3:
        return $r6;

     label4:
        $r8 := @caughtexception;

        r2 = $r8;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IME died: ");

        $r11 = r0.<android.view.inputmethod.InputMethodManager: java.lang.String mCurId>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodManager", $r13, r2);

        exitmonitor r1;

     label5:
        return null;

     label6:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r1;

     label7:
        throw r3;

        catch android.os.RemoteException from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    void doDump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])
    {
        android.view.inputmethod.InputMethodManager r0;
        java.io.FileDescriptor r1;
        java.io.PrintWriter r2;
        java.lang.String[] r3;
        android.util.PrintWriterPrinter r4, $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r11, $r12, $r14, $r16, $r17, $r18, $r20, $r23, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r35, $r38, $r39, $r40, $r41, $r44, $r45, $r46, $r48, $r49, $r51, $r54, $r56, $r57, $r58, $r59, $r61, $r63, $r66, $r67, $r68, $r69, $r71, $r72, $r74, $r76, $r77, $r78, $r79, $r81, $r82, $r83, $r85, $r86, $r87, $r90, $r91, $r92, $r93;
        java.lang.String $r10, $r15, $r21, $r24, $r34, $r36, $r43, $r47, $r50, $r53, $r62, $r64, $r75, $r80, $r84, $r88;
        com.android.internal.view.IInputMethodManager $r13;
        android.os.Looper $r19;
        com.android.internal.view.IInputContext $r22;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        com.android.internal.view.IInputMethodSession $r37;
        android.view.View $r42, $r52, $r55;
        android.view.inputmethod.InputConnection $r60;
        android.view.inputmethod.EditorInfo $r65, $r89;
        android.graphics.Rect $r70;
        android.view.inputmethod.CompletionInfo[] $r73;

        r0 := @this: android.view.inputmethod.InputMethodManager;

        r1 := @parameter0: java.io.FileDescriptor;

        r2 := @parameter1: java.io.PrintWriter;

        r3 := @parameter2: java.lang.String[];

        $r5 = new android.util.PrintWriterPrinter;

        specialinvoke $r5.<android.util.PrintWriterPrinter: void <init>(java.io.PrintWriter)>(r2);

        r4 = $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Input method client state for ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r10);

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mService=");

        $r13 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodManager mService>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r15);

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mMainLooper=");

        $r19 = r0.<android.view.inputmethod.InputMethodManager: android.os.Looper mMainLooper>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r21);

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mIInputContext=");

        $r22 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputContext mIInputContext>;

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r24);

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mActive=");

        $z0 = r0.<android.view.inputmethod.InputMethodManager: boolean mActive>;

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mHasBeenInactive=");

        $z1 = r0.<android.view.inputmethod.InputMethodManager: boolean mHasBeenInactive>;

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mBindSequence=");

        $i0 = r0.<android.view.inputmethod.InputMethodManager: int mBindSequence>;

        $r30 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r35 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCurId=");

        $r36 = r0.<android.view.inputmethod.InputMethodManager: java.lang.String mCurId>;

        $r33 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r34);

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCurMethod=");

        $r37 = r0.<android.view.inputmethod.InputMethodManager: com.android.internal.view.IInputMethodSession mCurMethod>;

        $r38 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r37);

        $r43 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r43);

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCurRootView=");

        $r42 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mCurRootView>;

        $r48 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r42);

        $r47 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r47);

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mServedView=");

        $r52 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mServedView>;

        $r51 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r52);

        $r50 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r50);

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mNextServedView=");

        $r55 = r0.<android.view.inputmethod.InputMethodManager: android.view.View mNextServedView>;

        $r54 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r55);

        $r53 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r53);

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r58 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mServedConnecting=");

        $z2 = r0.<android.view.inputmethod.InputMethodManager: boolean mServedConnecting>;

        $r57 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r64 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r64);

        $r65 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.EditorInfo mCurrentTextBoxAttribute>;

        if $r65 == null goto label1;

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>("  mCurrentTextBoxAttribute:");

        $r89 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.EditorInfo mCurrentTextBoxAttribute>;

        virtualinvoke $r89.<android.view.inputmethod.EditorInfo: void dump(android.util.Printer,java.lang.String)>(r4, "    ");

        goto label2;

     label1:
        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>("  mCurrentTextBoxAttribute: null");

     label2:
        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mServedInputConnection=");

        $r60 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputConnection mServedInputConnection>;

        $r61 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r60);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r62);

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        $r72 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCompletions=");

        $r73 = r0.<android.view.inputmethod.InputMethodManager: android.view.inputmethod.CompletionInfo[] mCompletions>;

        $r74 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r73);

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r75);

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCursorRect=");

        $r70 = r0.<android.view.inputmethod.InputMethodManager: android.graphics.Rect mCursorRect>;

        $r71 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r70);

        $r80 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r80);

        $r79 = new java.lang.StringBuilder;

        specialinvoke $r79.<java.lang.StringBuilder: void <init>()>();

        $r81 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mCursorSelStart=");

        $i2 = r0.<android.view.inputmethod.InputMethodManager: int mCursorSelStart>;

        $r77 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r76 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCursorSelEnd=");

        $i1 = r0.<android.view.inputmethod.InputMethodManager: int mCursorSelEnd>;

        $r78 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r85 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCursorCandStart=");

        $i4 = r0.<android.view.inputmethod.InputMethodManager: int mCursorCandStart>;

        $r87 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r86 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mCursorCandEnd=");

        $i3 = r0.<android.view.inputmethod.InputMethodManager: int mCursorCandEnd>;

        $r82 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r84 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r84);

        $r83 = new java.lang.StringBuilder;

        specialinvoke $r83.<java.lang.StringBuilder: void <init>()>();

        $r93 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  mNextUserActionNotificationSequenceNumber=");

        $i6 = r0.<android.view.inputmethod.InputMethodManager: int mNextUserActionNotificationSequenceNumber>;

        $r91 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mLastSentUserActionNotificationSequenceNumber=");

        $i5 = r0.<android.view.inputmethod.InputMethodManager: int mLastSentUserActionNotificationSequenceNumber>;

        $r90 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r88 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r4.<android.util.Printer: void println(java.lang.String)>($r88);

        return;
    }

    static int access$002(android.view.inputmethod.InputMethodManager, int)
    {
        android.view.inputmethod.InputMethodManager r0;
        int i0;

        r0 := @parameter0: android.view.inputmethod.InputMethodManager;

        i0 := @parameter1: int;

        r0.<android.view.inputmethod.InputMethodManager: int mRequestUpdateCursorAnchorInfoMonitorMode> = i0;

        return i0;
    }

    static boolean access$100(android.view.inputmethod.InputMethodManager, boolean, boolean)
    {
        android.view.inputmethod.InputMethodManager r0;
        boolean z0, z1, $z2;

        r0 := @parameter0: android.view.inputmethod.InputMethodManager;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $z2 = specialinvoke r0.<android.view.inputmethod.InputMethodManager: boolean checkFocusNoStartInput(boolean,boolean)>(z0, z1);

        return $z2;
    }

    static int access$202(android.view.inputmethod.InputMethodManager, int)
    {
        android.view.inputmethod.InputMethodManager r0;
        int i0;

        r0 := @parameter0: android.view.inputmethod.InputMethodManager;

        i0 := @parameter1: int;

        r0.<android.view.inputmethod.InputMethodManager: int mNextUserActionNotificationSequenceNumber> = i0;

        return i0;
    }

    static void access$400(android.view.inputmethod.InputMethodManager, android.view.inputmethod.InputMethodManager$PendingEvent)
    {
        android.view.inputmethod.InputMethodManager r0;
        android.view.inputmethod.InputMethodManager$PendingEvent r1;

        r0 := @parameter0: android.view.inputmethod.InputMethodManager;

        r1 := @parameter1: android.view.inputmethod.InputMethodManager$PendingEvent;

        specialinvoke r0.<android.view.inputmethod.InputMethodManager: void recyclePendingEventLocked(android.view.inputmethod.InputMethodManager$PendingEvent)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <android.view.inputmethod.InputMethodManager: int HIDE_NOT_ALWAYS> = 2;

        <android.view.inputmethod.InputMethodManager: int HIDE_IMPLICIT_ONLY> = 1;

        <android.view.inputmethod.InputMethodManager: int RESULT_HIDDEN> = 3;

        <android.view.inputmethod.InputMethodManager: int RESULT_SHOWN> = 2;

        <android.view.inputmethod.InputMethodManager: int RESULT_UNCHANGED_HIDDEN> = 1;

        <android.view.inputmethod.InputMethodManager: int RESULT_UNCHANGED_SHOWN> = 0;

        <android.view.inputmethod.InputMethodManager: int SHOW_FORCED> = 2;

        <android.view.inputmethod.InputMethodManager: int SHOW_IMPLICIT> = 1;

        <android.view.inputmethod.InputMethodManager: int MSG_SET_USER_ACTION_NOTIFICATION_SEQUENCE_NUMBER> = 9;

        <android.view.inputmethod.InputMethodManager: int MSG_FLUSH_INPUT_EVENT> = 7;

        <android.view.inputmethod.InputMethodManager: int MSG_TIMEOUT_INPUT_EVENT> = 6;

        <android.view.inputmethod.InputMethodManager: int MSG_SEND_INPUT_EVENT> = 5;

        <android.view.inputmethod.InputMethodManager: int MSG_SET_ACTIVE> = 4;

        <android.view.inputmethod.InputMethodManager: int MSG_UNBIND> = 3;

        <android.view.inputmethod.InputMethodManager: int MSG_BIND> = 2;

        <android.view.inputmethod.InputMethodManager: int MSG_DUMP> = 1;

        <android.view.inputmethod.InputMethodManager: int REQUEST_UPDATE_CURSOR_ANCHOR_INFO_NONE> = 0;

        <android.view.inputmethod.InputMethodManager: int NOT_AN_ACTION_NOTIFICATION_SEQUENCE_NUMBER> = -1;

        <android.view.inputmethod.InputMethodManager: int DISPATCH_HANDLED> = 1;

        <android.view.inputmethod.InputMethodManager: int DISPATCH_NOT_HANDLED> = 0;

        <android.view.inputmethod.InputMethodManager: int DISPATCH_IN_PROGRESS> = -1;

        <android.view.inputmethod.InputMethodManager: long INPUT_METHOD_NOT_RESPONDING_TIMEOUT> = 2500L;

        <android.view.inputmethod.InputMethodManager: int CONTROL_START_INITIAL> = 256;

        <android.view.inputmethod.InputMethodManager: int CONTROL_WINDOW_FIRST> = 4;

        <android.view.inputmethod.InputMethodManager: int CONTROL_WINDOW_IS_TEXT_EDITOR> = 2;

        <android.view.inputmethod.InputMethodManager: int CONTROL_WINDOW_VIEW_HAS_FOCUS> = 1;

        <android.view.inputmethod.InputMethodManager: java.lang.String PENDING_EVENT_COUNTER> = "aq:imm";

        <android.view.inputmethod.InputMethodManager: java.lang.String TAG> = "InputMethodManager";

        <android.view.inputmethod.InputMethodManager: boolean DEBUG> = 0;

        return;
    }
}
