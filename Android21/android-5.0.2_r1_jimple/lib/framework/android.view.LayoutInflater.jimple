public abstract class android.view.LayoutInflater extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final boolean DEBUG;
    protected final android.content.Context mContext;
    private boolean mFactorySet;
    private android.view.LayoutInflater$Factory mFactory;
    private android.view.LayoutInflater$Factory2 mFactory2;
    private android.view.LayoutInflater$Factory2 mPrivateFactory;
    private android.view.LayoutInflater$Filter mFilter;
    final java.lang.Object[] mConstructorArgs;
    static final java.lang.Class[] mConstructorSignature;
    private static final java.util.HashMap sConstructorMap;
    private java.util.HashMap mFilterMap;
    private static final java.lang.String TAG_MERGE;
    private static final java.lang.String TAG_INCLUDE;
    private static final java.lang.String TAG_1995;
    private static final java.lang.String TAG_REQUEST_FOCUS;
    private static final java.lang.String TAG_TAG;
    private static final int[] ATTRS_THEME;

    protected void <init>(android.content.Context)
    {
        android.view.LayoutInflater r0;
        android.content.Context r1;
        java.lang.Object[] $r2;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = newarray (java.lang.Object)[2];

        r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs> = $r2;

        r0.<android.view.LayoutInflater: android.content.Context mContext> = r1;

        return;
    }

    protected void <init>(android.view.LayoutInflater, android.content.Context)
    {
        android.view.LayoutInflater r0, r1;
        android.content.Context r2;
        java.lang.Object[] $r3;
        android.view.LayoutInflater$Factory $r4;
        android.view.LayoutInflater$Factory2 $r5, $r6;
        android.view.LayoutInflater$Filter $r7;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: android.view.LayoutInflater;

        r2 := @parameter1: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = newarray (java.lang.Object)[2];

        r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs> = $r3;

        r0.<android.view.LayoutInflater: android.content.Context mContext> = r2;

        $r4 = r1.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory>;

        r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory> = $r4;

        $r5 = r1.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mFactory2>;

        r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mFactory2> = $r5;

        $r6 = r1.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mPrivateFactory>;

        r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mPrivateFactory> = $r6;

        $r7 = r1.<android.view.LayoutInflater: android.view.LayoutInflater$Filter mFilter>;

        virtualinvoke r0.<android.view.LayoutInflater: void setFilter(android.view.LayoutInflater$Filter)>($r7);

        return;
    }

    public static android.view.LayoutInflater 'from'(android.content.Context)
    {
        android.content.Context r0;
        android.view.LayoutInflater r1;
        java.lang.Object $r2;
        java.lang.AssertionError $r3;

        r0 := @parameter0: android.content.Context;

        $r2 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");

        r1 = (android.view.LayoutInflater) $r2;

        if r1 != null goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>(java.lang.Object)>("LayoutInflater not found.");

        throw $r3;

     label1:
        return r1;
    }

    public abstract android.view.LayoutInflater cloneInContext(android.content.Context);

    public android.content.Context getContext()
    {
        android.view.LayoutInflater r0;
        android.content.Context $r1;

        r0 := @this: android.view.LayoutInflater;

        $r1 = r0.<android.view.LayoutInflater: android.content.Context mContext>;

        return $r1;
    }

    public final android.view.LayoutInflater$Factory getFactory()
    {
        android.view.LayoutInflater r0;
        android.view.LayoutInflater$Factory $r1;

        r0 := @this: android.view.LayoutInflater;

        $r1 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory>;

        return $r1;
    }

    public final android.view.LayoutInflater$Factory2 getFactory2()
    {
        android.view.LayoutInflater r0;
        android.view.LayoutInflater$Factory2 $r1;

        r0 := @this: android.view.LayoutInflater;

        $r1 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mFactory2>;

        return $r1;
    }

    public void setFactory(android.view.LayoutInflater$Factory)
    {
        android.view.LayoutInflater r0;
        android.view.LayoutInflater$Factory r1, $r2, $r5;
        boolean $z0;
        android.view.LayoutInflater$FactoryMerger $r3;
        android.view.LayoutInflater$Factory2 $r4;
        java.lang.NullPointerException $r6;
        java.lang.IllegalStateException $r7;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: android.view.LayoutInflater$Factory;

        $z0 = r0.<android.view.LayoutInflater: boolean mFactorySet>;

        if $z0 == 0 goto label1;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("A factory has already been set on this LayoutInflater");

        throw $r7;

     label1:
        if r1 != null goto label2;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("Given factory can not be null");

        throw $r6;

     label2:
        r0.<android.view.LayoutInflater: boolean mFactorySet> = 1;

        $r2 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory>;

        if $r2 != null goto label3;

        r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory> = r1;

        goto label4;

     label3:
        $r3 = new android.view.LayoutInflater$FactoryMerger;

        $r5 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory>;

        $r4 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mFactory2>;

        specialinvoke $r3.<android.view.LayoutInflater$FactoryMerger: void <init>(android.view.LayoutInflater$Factory,android.view.LayoutInflater$Factory2,android.view.LayoutInflater$Factory,android.view.LayoutInflater$Factory2)>(r1, null, $r5, $r4);

        r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory> = $r3;

     label4:
        return;
    }

    public void setFactory2(android.view.LayoutInflater$Factory2)
    {
        android.view.LayoutInflater r0;
        android.view.LayoutInflater$Factory2 r1, $r4;
        boolean $z0;
        android.view.LayoutInflater$Factory $r2, $r5;
        android.view.LayoutInflater$FactoryMerger $r3;
        java.lang.NullPointerException $r6;
        java.lang.IllegalStateException $r7;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: android.view.LayoutInflater$Factory2;

        $z0 = r0.<android.view.LayoutInflater: boolean mFactorySet>;

        if $z0 == 0 goto label1;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("A factory has already been set on this LayoutInflater");

        throw $r7;

     label1:
        if r1 != null goto label2;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("Given factory can not be null");

        throw $r6;

     label2:
        r0.<android.view.LayoutInflater: boolean mFactorySet> = 1;

        $r2 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory>;

        if $r2 != null goto label3;

        r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mFactory2> = r1;

        r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory> = r1;

        goto label4;

     label3:
        $r3 = new android.view.LayoutInflater$FactoryMerger;

        $r5 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory>;

        $r4 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mFactory2>;

        specialinvoke $r3.<android.view.LayoutInflater$FactoryMerger: void <init>(android.view.LayoutInflater$Factory,android.view.LayoutInflater$Factory2,android.view.LayoutInflater$Factory,android.view.LayoutInflater$Factory2)>(r1, r1, $r5, $r4);

        r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mFactory2> = $r3;

        r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory> = $r3;

     label4:
        return;
    }

    public void setPrivateFactory(android.view.LayoutInflater$Factory2)
    {
        android.view.LayoutInflater r0;
        android.view.LayoutInflater$Factory2 r1, $r2, $r4, $r5;
        android.view.LayoutInflater$FactoryMerger $r3;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: android.view.LayoutInflater$Factory2;

        $r2 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mPrivateFactory>;

        if $r2 != null goto label1;

        r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mPrivateFactory> = r1;

        goto label2;

     label1:
        $r3 = new android.view.LayoutInflater$FactoryMerger;

        $r5 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mPrivateFactory>;

        $r4 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mPrivateFactory>;

        specialinvoke $r3.<android.view.LayoutInflater$FactoryMerger: void <init>(android.view.LayoutInflater$Factory,android.view.LayoutInflater$Factory2,android.view.LayoutInflater$Factory,android.view.LayoutInflater$Factory2)>(r1, r1, $r5, $r4);

        r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mPrivateFactory> = $r3;

     label2:
        return;
    }

    public android.view.LayoutInflater$Filter getFilter()
    {
        android.view.LayoutInflater r0;
        android.view.LayoutInflater$Filter $r1;

        r0 := @this: android.view.LayoutInflater;

        $r1 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Filter mFilter>;

        return $r1;
    }

    public void setFilter(android.view.LayoutInflater$Filter)
    {
        android.view.LayoutInflater r0;
        android.view.LayoutInflater$Filter r1;
        java.util.HashMap $r2;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: android.view.LayoutInflater$Filter;

        r0.<android.view.LayoutInflater: android.view.LayoutInflater$Filter mFilter> = r1;

        if r1 == null goto label1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<android.view.LayoutInflater: java.util.HashMap mFilterMap> = $r2;

     label1:
        return;
    }

    public android.view.View inflate(int, android.view.ViewGroup)
    {
        android.view.LayoutInflater r0;
        int i0;
        android.view.ViewGroup r1;
        android.view.View $r2;
        boolean $z0;

        r0 := @this: android.view.LayoutInflater;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.ViewGroup;

        if r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r2 = virtualinvoke r0.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>(i0, r1, $z0);

        return $r2;
    }

    public android.view.View inflate(org.xmlpull.v1.XmlPullParser, android.view.ViewGroup)
    {
        android.view.LayoutInflater r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.view.ViewGroup r2;
        android.view.View $r3;
        boolean $z0;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: android.view.ViewGroup;

        if r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r3 = virtualinvoke r0.<android.view.LayoutInflater: android.view.View inflate(org.xmlpull.v1.XmlPullParser,android.view.ViewGroup,boolean)>(r1, r2, $z0);

        return $r3;
    }

    public android.view.View inflate(int, android.view.ViewGroup, boolean)
    {
        android.view.LayoutInflater r0;
        int i0;
        android.view.ViewGroup r1;
        boolean z0;
        android.content.res.Resources r2;
        android.content.res.XmlResourceParser r3;
        android.view.View r4;
        java.lang.Throwable r5, $r7;
        android.content.Context $r6;

        r0 := @this: android.view.LayoutInflater;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.ViewGroup;

        z0 := @parameter2: boolean;

        $r6 = virtualinvoke r0.<android.view.LayoutInflater: android.content.Context getContext()>();

        r2 = virtualinvoke $r6.<android.content.Context: android.content.res.Resources getResources()>();

        r3 = virtualinvoke r2.<android.content.res.Resources: android.content.res.XmlResourceParser getLayout(int)>(i0);

     label1:
        r4 = virtualinvoke r0.<android.view.LayoutInflater: android.view.View inflate(org.xmlpull.v1.XmlPullParser,android.view.ViewGroup,boolean)>(r3, r1, z0);

     label2:
        interfaceinvoke r3.<android.content.res.XmlResourceParser: void close()>();

        return r4;

     label3:
        $r7 := @caughtexception;

        r5 = $r7;

     label4:
        interfaceinvoke r3.<android.content.res.XmlResourceParser: void close()>();

        throw r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public android.view.View inflate(org.xmlpull.v1.XmlPullParser, android.view.ViewGroup, boolean)
    {
        android.view.LayoutInflater r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.view.ViewGroup r2;
        boolean z0, $z1;
        java.lang.Object[] r3, $r12, $r14, $r15, $r18, $r19, $r32, $r36;
        android.util.AttributeSet r4;
        android.content.Context r5, $r16;
        android.view.View r6, r8;
        int i0, $i1;
        java.lang.String r7, $r17, $r24, $r25, $r27, $r38, $r41, $r43;
        android.view.ViewGroup$LayoutParams r9;
        java.lang.Throwable r10, r11, $r31, $r33;
        java.lang.Object $r13;
        android.view.InflateException $r20, $r22, $r30, $r34, r46, r48;
        java.lang.StringBuilder $r21, $r23, $r26, $r35, $r39, $r40, $r44;
        org.xmlpull.v1.XmlPullParserException $r29, r45;
        java.io.IOException $r37, r47;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: android.view.ViewGroup;

        z0 := @parameter2: boolean;

        $r12 = r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs>;

        r3 = $r12;

        entermonitor $r12;

     label01:
        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(8L, "inflate");

        r4 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r1);

        $r14 = r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs>;

        $r13 = $r14[0];

        r5 = (android.content.Context) $r13;

        $r15 = r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs>;

        $r16 = r0.<android.view.LayoutInflater: android.content.Context mContext>;

        $r15[0] = $r16;

        r6 = r2;

     label02:
        $i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        i0 = $i1;

        if $i1 == 2 goto label03;

        if i0 == 1 goto label03;

        goto label02;

     label03:
        if i0 == 2 goto label04;

        $r22 = new android.view.InflateException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r25 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r26 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r23 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": No start tag found!");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<android.view.InflateException: void <init>(java.lang.String)>($r24);

        throw $r22;

     label04:
        r7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r17 = "merge";

        $z1 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>(r7);

        if $z1 == 0 goto label07;

        if r2 == null goto label05;

        if z0 != 0 goto label06;

     label05:
        $r20 = new android.view.InflateException;

        specialinvoke $r20.<android.view.InflateException: void <init>(java.lang.String)>("<merge /> can be used only with a valid ViewGroup root and attachToRoot=true");

        throw $r20;

     label06:
        virtualinvoke r0.<android.view.LayoutInflater: void rInflate(org.xmlpull.v1.XmlPullParser,android.view.View,android.util.AttributeSet,boolean,boolean)>(r1, r2, r4, 0, 0);

        goto label11;

     label07:
        r8 = virtualinvoke r0.<android.view.LayoutInflater: android.view.View createViewFromTag(android.view.View,java.lang.String,android.util.AttributeSet,boolean)>(r2, r7, r4, 0);

        r9 = null;

        if r2 == null goto label08;

        r9 = virtualinvoke r2.<android.view.ViewGroup: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>(r4);

        if z0 != 0 goto label08;

        virtualinvoke r8.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r9);

     label08:
        virtualinvoke r0.<android.view.LayoutInflater: void rInflate(org.xmlpull.v1.XmlPullParser,android.view.View,android.util.AttributeSet,boolean,boolean)>(r1, r8, r4, 1, 1);

        if r2 == null goto label09;

        if z0 == 0 goto label09;

        virtualinvoke r2.<android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r8, r9);

     label09:
        if r2 == null goto label10;

        if z0 != 0 goto label11;

     label10:
        r6 = r8;

     label11:
        $r18 = r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs>;

        $r18[0] = r5;

        $r19 = r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs>;

        $r19[1] = null;

        goto label16;

     label12:
        $r29 := @caughtexception;

        r45 = $r29;

        $r30 = new android.view.InflateException;

        $r27 = virtualinvoke r45.<org.xmlpull.v1.XmlPullParserException: java.lang.String getMessage()>();

        specialinvoke $r30.<android.view.InflateException: void <init>(java.lang.String)>($r27);

        r46 = $r30;

        virtualinvoke r46.<android.view.InflateException: java.lang.Throwable initCause(java.lang.Throwable)>(r45);

        throw r46;

     label13:
        $r37 := @caughtexception;

        r47 = $r37;

        $r34 = new android.view.InflateException;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r41 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getPositionDescription()>();

        $r40 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r38 = virtualinvoke r47.<java.io.IOException: java.lang.String getMessage()>();

        $r44 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r34.<android.view.InflateException: void <init>(java.lang.String)>($r43);

        r48 = $r34;

        virtualinvoke r48.<android.view.InflateException: java.lang.Throwable initCause(java.lang.Throwable)>(r47);

        throw r48;

     label14:
        $r31 := @caughtexception;

        r10 = $r31;

     label15:
        $r32 = r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs>;

        $r32[0] = r5;

        $r36 = r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs>;

        $r36[1] = null;

        throw r10;

     label16:
        staticinvoke <android.os.Trace: void traceEnd(long)>(8L);

        exitmonitor r3;

     label17:
        return r6;

     label18:
        $r33 := @caughtexception;

        r11 = $r33;

        exitmonitor r3;

     label19:
        throw r11;

        catch org.xmlpull.v1.XmlPullParserException from label02 to label11 with label12;
        catch java.io.IOException from label02 to label11 with label13;
        catch java.lang.Throwable from label02 to label11 with label14;
        catch java.lang.Throwable from label12 to label15 with label14;
        catch java.lang.Throwable from label01 to label17 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
    }

    public final android.view.View createView(java.lang.String, java.lang.String, android.util.AttributeSet) throws java.lang.ClassNotFoundException, android.view.InflateException
    {
        android.view.LayoutInflater r0, $r13;
        java.lang.String r1, r2, $r26, $r39, $r43, $r47, $r50, $r56, $r61, $r65, $r66, $r76, $r78;
        android.util.AttributeSet r3;
        java.lang.reflect.Constructor r4;
        java.lang.Class r5, $r20, $r29;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        android.view.ViewStub r6;
        java.lang.Throwable r7, $r68;
        java.util.HashMap $r8, $r16, $r22, $r32;
        java.lang.Object $r9, $r11, $r12, $r15;
        android.view.LayoutInflater$Filter $r10, $r23, $r33, $r37;
        android.content.Context $r14, $r19, $r30;
        java.lang.Boolean $r17, $r21, r79;
        java.lang.ClassLoader $r18, $r31;
        java.lang.StringBuilder $r25, $r27, $r28, $r35, $r40, $r41, $r42, $r44, $r48, $r49, $r51, $r52, $r53, $r54, $r55, $r57, $r60, $r64, $r70, $r72, $r73, $r74, $r75, $r77;
        java.lang.Class[] $r34;
        java.lang.NoSuchMethodException $r38, r83;
        android.view.InflateException $r45, $r59, $r63, r84, r86, r89;
        java.lang.Exception $r58, r88;
        java.lang.ClassCastException $r62, r85;
        java.lang.ClassNotFoundException $r69, r87;
        java.lang.Object[] r80;
        android.view.View r81, r82;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.util.AttributeSet;

        $r8 = <android.view.LayoutInflater: java.util.HashMap sConstructorMap>;

        $r9 = virtualinvoke $r8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.lang.reflect.Constructor) $r9;

        r5 = null;

     label01:
        staticinvoke <android.os.Trace: void traceBegin(long,java.lang.String)>(8L, r1);

        if r4 != null goto label05;

        $r30 = r0.<android.view.LayoutInflater: android.content.Context mContext>;

        $r31 = virtualinvoke $r30.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

        if r2 == null goto label02;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label03;

     label02:
        $r39 = r1;

     label03:
        $r29 = virtualinvoke $r31.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r39);

        r5 = virtualinvoke $r29.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "android/view/View");

        $r33 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Filter mFilter>;

        if $r33 == null goto label04;

        if r5 == null goto label04;

        $r37 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Filter mFilter>;

        z0 = interfaceinvoke $r37.<android.view.LayoutInflater$Filter: boolean onLoadClass(java.lang.Class)>(r5);

        if z0 != 0 goto label04;

        specialinvoke r0.<android.view.LayoutInflater: void failNotAllowed(java.lang.String,java.lang.String,android.util.AttributeSet)>(r1, r2, r3);

     label04:
        $r34 = <android.view.LayoutInflater: java.lang.Class[] mConstructorSignature>;

        r4 = virtualinvoke r5.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r34);

        $r32 = <android.view.LayoutInflater: java.util.HashMap sConstructorMap>;

        virtualinvoke $r32.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4);

        goto label12;

     label05:
        $r10 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Filter mFilter>;

        if $r10 == null goto label12;

        $r16 = r0.<android.view.LayoutInflater: java.util.HashMap mFilterMap>;

        $r15 = virtualinvoke $r16.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r79 = (java.lang.Boolean) $r15;

        if r79 != null goto label11;

        $r19 = r0.<android.view.LayoutInflater: android.content.Context mContext>;

        $r18 = virtualinvoke $r19.<android.content.Context: java.lang.ClassLoader getClassLoader()>();

        if r2 == null goto label06;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r25 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label07;

     label06:
        $r26 = r1;

     label07:
        $r20 = virtualinvoke $r18.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r26);

        r5 = virtualinvoke $r20.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "android/view/View");

        if r5 == null goto label08;

        $r23 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Filter mFilter>;

        $z5 = interfaceinvoke $r23.<android.view.LayoutInflater$Filter: boolean onLoadClass(java.lang.Class)>(r5);

        if $z5 == 0 goto label08;

        $z4 = 1;

        goto label09;

     label08:
        $z4 = 0;

     label09:
        z1 = $z4;

        $r22 = r0.<android.view.LayoutInflater: java.util.HashMap mFilterMap>;

        $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1);

        virtualinvoke $r22.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r21);

        if z1 != 0 goto label10;

        specialinvoke r0.<android.view.LayoutInflater: void failNotAllowed(java.lang.String,java.lang.String,android.util.AttributeSet)>(r1, r2, r3);

     label10:
        goto label12;

     label11:
        $r17 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        $z3 = virtualinvoke r79.<java.lang.Boolean: boolean equals(java.lang.Object)>($r17);

        if $z3 == 0 goto label12;

        specialinvoke r0.<android.view.LayoutInflater: void failNotAllowed(java.lang.String,java.lang.String,android.util.AttributeSet)>(r1, r2, r3);

     label12:
        r80 = r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs>;

        r80[1] = r3;

        virtualinvoke r4.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);

        $r11 = virtualinvoke r4.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(r80);

        r81 = (android.view.View) $r11;

        $z2 = r81 instanceof android.view.ViewStub;

        if $z2 == 0 goto label13;

        r6 = (android.view.ViewStub) r81;

        $r12 = r80[0];

        $r14 = (android.content.Context) $r12;

        $r13 = virtualinvoke r0.<android.view.LayoutInflater: android.view.LayoutInflater cloneInContext(android.content.Context)>($r14);

        virtualinvoke r6.<android.view.ViewStub: void setLayoutInflater(android.view.LayoutInflater)>($r13);

     label13:
        r82 = r81;

     label14:
        staticinvoke <android.os.Trace: void traceEnd(long)>(8L);

        return r82;

     label15:
        $r38 := @caughtexception;

        r83 = $r38;

        $r45 = new android.view.InflateException;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r43 = interfaceinvoke r3.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        $r42 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r49 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Error inflating class ");

        if r2 == null goto label16;

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r51 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r50 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label17;

     label16:
        $r50 = r1;

     label17:
        $r48 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r47 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r45.<android.view.InflateException: void <init>(java.lang.String)>($r47);

        r84 = $r45;

        virtualinvoke r84.<android.view.InflateException: java.lang.Throwable initCause(java.lang.Throwable)>(r83);

        throw r84;

     label18:
        $r62 := @caughtexception;

        r85 = $r62;

        $r63 = new android.view.InflateException;

        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        $r65 = interfaceinvoke r3.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        $r75 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

        $r74 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Class is not a View ");

        if r2 == null goto label19;

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        $r73 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r72 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r78 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label20;

     label19:
        $r78 = r1;

     label20:
        $r77 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r78);

        $r76 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r63.<android.view.InflateException: void <init>(java.lang.String)>($r76);

        r86 = $r63;

        virtualinvoke r86.<android.view.InflateException: java.lang.Throwable initCause(java.lang.Throwable)>(r85);

        throw r86;

     label21:
        $r69 := @caughtexception;

        r87 = $r69;

        throw r87;

     label22:
        $r58 := @caughtexception;

        r88 = $r58;

        $r59 = new android.view.InflateException;

        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        $r61 = interfaceinvoke r3.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        $r54 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Error inflating class ");

        if r5 != null goto label23;

        $r56 = "<unknown>";

        goto label24;

     label23:
        $r56 = virtualinvoke r5.<java.lang.Class: java.lang.String getName()>();

     label24:
        $r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);

        $r66 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r59.<android.view.InflateException: void <init>(java.lang.String)>($r66);

        r89 = $r59;

        virtualinvoke r89.<android.view.InflateException: java.lang.Throwable initCause(java.lang.Throwable)>(r88);

        throw r89;

     label25:
        $r68 := @caughtexception;

        r7 = $r68;

     label26:
        staticinvoke <android.os.Trace: void traceEnd(long)>(8L);

        throw r7;

        catch java.lang.NoSuchMethodException from label01 to label14 with label15;
        catch java.lang.ClassCastException from label01 to label14 with label18;
        catch java.lang.ClassNotFoundException from label01 to label14 with label21;
        catch java.lang.Exception from label01 to label14 with label22;
        catch java.lang.Throwable from label01 to label14 with label25;
        catch java.lang.Throwable from label15 to label26 with label25;
    }

    private void failNotAllowed(java.lang.String, java.lang.String, android.util.AttributeSet)
    {
        android.view.LayoutInflater r0;
        java.lang.String r1, r2, $r6, $r10, $r14;
        android.util.AttributeSet r3;
        android.view.InflateException $r4;
        java.lang.StringBuilder $r5, $r7, $r8, $r9, $r11, $r12, $r13;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.util.AttributeSet;

        $r4 = new android.view.InflateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = interfaceinvoke r3.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Class not allowed to be inflated ");

        if r2 == null goto label1;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        $r14 = r1;

     label2:
        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<android.view.InflateException: void <init>(java.lang.String)>($r10);

        throw $r4;
    }

    protected android.view.View onCreateView(java.lang.String, android.util.AttributeSet) throws java.lang.ClassNotFoundException
    {
        android.view.LayoutInflater r0;
        java.lang.String r1;
        android.util.AttributeSet r2;
        android.view.View $r3;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.util.AttributeSet;

        $r3 = virtualinvoke r0.<android.view.LayoutInflater: android.view.View createView(java.lang.String,java.lang.String,android.util.AttributeSet)>(r1, "android.view.", r2);

        return $r3;
    }

    protected android.view.View onCreateView(android.view.View, java.lang.String, android.util.AttributeSet) throws java.lang.ClassNotFoundException
    {
        android.view.LayoutInflater r0;
        android.view.View r1, $r4;
        java.lang.String r2;
        android.util.AttributeSet r3;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.util.AttributeSet;

        $r4 = virtualinvoke r0.<android.view.LayoutInflater: android.view.View onCreateView(java.lang.String,android.util.AttributeSet)>(r2, r3);

        return $r4;
    }

    android.view.View createViewFromTag(android.view.View, java.lang.String, android.util.AttributeSet, boolean)
    {
        android.view.LayoutInflater r0;
        android.view.View r1, r6;
        java.lang.String r2, $r28, $r32, $r34, $r38;
        android.util.AttributeSet r3;
        boolean z0, $z1, $z2;
        android.content.Context r4;
        android.content.res.TypedArray r5;
        int i0, $i1;
        java.lang.Object r7;
        java.lang.Throwable r8, $r23;
        int[] $r9;
        android.view.LayoutInflater$Factory $r10, $r17;
        android.view.LayoutInflater$Factory2 $r11, $r15, $r16, $r18;
        java.lang.Object[] $r12, $r13, $r14, $r24;
        android.view.LayoutInflater$BlinkLayout $r19;
        android.view.ContextThemeWrapper $r20;
        java.lang.ClassNotFoundException $r21, r43;
        android.view.InflateException $r22, $r36, $r41, r42, r44, r46;
        java.lang.StringBuilder $r25, $r26, $r27, $r31, $r33, $r35, $r39, $r40;
        java.lang.Exception $r30, r45;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.util.AttributeSet;

        z0 := @parameter3: boolean;

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("view");

        if $z1 == 0 goto label01;

        r2 = interfaceinvoke r3.<android.util.AttributeSet: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "class");

     label01:
        if r1 == null goto label02;

        if z0 == 0 goto label02;

        r4 = virtualinvoke r1.<android.view.View: android.content.Context getContext()>();

        goto label03;

     label02:
        r4 = r0.<android.view.LayoutInflater: android.content.Context mContext>;

     label03:
        $r9 = <android.view.LayoutInflater: int[] ATTRS_THEME>;

        r5 = virtualinvoke r4.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r3, $r9);

        i0 = virtualinvoke r5.<android.content.res.TypedArray: int getResourceId(int,int)>(0, 0);

        if i0 == 0 goto label04;

        $r20 = new android.view.ContextThemeWrapper;

        specialinvoke $r20.<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>(r4, i0);

        r4 = $r20;

     label04:
        virtualinvoke r5.<android.content.res.TypedArray: void recycle()>();

        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("blink");

        if $z2 == 0 goto label05;

        $r19 = new android.view.LayoutInflater$BlinkLayout;

        specialinvoke $r19.<android.view.LayoutInflater$BlinkLayout: void <init>(android.content.Context,android.util.AttributeSet)>(r4, r3);

        return $r19;

     label05:
        $r11 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mFactory2>;

        if $r11 == null goto label06;

        $r18 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mFactory2>;

        r6 = interfaceinvoke $r18.<android.view.LayoutInflater$Factory2: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>(r1, r2, r4, r3);

        goto label08;

     label06:
        $r10 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory>;

        if $r10 == null goto label07;

        $r17 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory mFactory>;

        r6 = interfaceinvoke $r17.<android.view.LayoutInflater$Factory: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)>(r2, r4, r3);

        goto label08;

     label07:
        r6 = null;

     label08:
        if r6 != null goto label09;

        $r15 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mPrivateFactory>;

        if $r15 == null goto label09;

        $r16 = r0.<android.view.LayoutInflater: android.view.LayoutInflater$Factory2 mPrivateFactory>;

        r6 = interfaceinvoke $r16.<android.view.LayoutInflater$Factory2: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)>(r1, r2, r4, r3);

     label09:
        if r6 != null goto label15;

        $r13 = r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs>;

        r7 = $r13[0];

        $r12 = r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs>;

        $r12[0] = r4;

     label10:
        $i1 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(46);

        if -1 != $i1 goto label11;

        r6 = virtualinvoke r0.<android.view.LayoutInflater: android.view.View onCreateView(android.view.View,java.lang.String,android.util.AttributeSet)>(r1, r2, r3);

        goto label12;

     label11:
        r6 = virtualinvoke r0.<android.view.LayoutInflater: android.view.View createView(java.lang.String,java.lang.String,android.util.AttributeSet)>(r2, null, r3);

     label12:
        $r14 = r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs>;

        $r14[0] = r7;

        goto label15;

     label13:
        $r23 := @caughtexception;

        r8 = $r23;

     label14:
        $r24 = r0.<android.view.LayoutInflater: java.lang.Object[] mConstructorArgs>;

        $r24[0] = r7;

        throw r8;

     label15:
        return r6;

     label16:
        $r41 := @caughtexception;

        r42 = $r41;

        throw r42;

     label17:
        $r21 := @caughtexception;

        r43 = $r21;

        $r22 = new android.view.InflateException;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r28 = interfaceinvoke r3.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        $r25 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Error inflating class ");

        $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<android.view.InflateException: void <init>(java.lang.String)>($r32);

        r44 = $r22;

        virtualinvoke r44.<android.view.InflateException: java.lang.Throwable initCause(java.lang.Throwable)>(r43);

        throw r44;

     label18:
        $r30 := @caughtexception;

        r45 = $r30;

        $r36 = new android.view.InflateException;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r34 = interfaceinvoke r3.<android.util.AttributeSet: java.lang.String getPositionDescription()>();

        $r33 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r40 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": Error inflating class ");

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r36.<android.view.InflateException: void <init>(java.lang.String)>($r38);

        r46 = $r36;

        virtualinvoke r46.<android.view.InflateException: java.lang.Throwable initCause(java.lang.Throwable)>(r45);

        throw r46;

        catch java.lang.Throwable from label10 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
        catch android.view.InflateException from label05 to label15 with label16;
        catch java.lang.ClassNotFoundException from label05 to label15 with label17;
        catch java.lang.Exception from label05 to label15 with label18;
    }

    void rInflate(org.xmlpull.v1.XmlPullParser, android.view.View, android.util.AttributeSet, boolean, boolean) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.view.LayoutInflater r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.view.View r2, r5;
        android.util.AttributeSet r3;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        int i0, i1, $i2, $i3, $i4;
        java.lang.String r4, $r8, $r9, $r10, $r11;
        android.view.ViewGroup r6;
        android.view.ViewGroup$LayoutParams r7;
        android.view.InflateException $r12, $r13;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.util.AttributeSet;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        i0 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label01:
        $i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        i1 = $i2;

        if $i2 != 3 goto label02;

        $i4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i4 <= i0 goto label10;

     label02:
        if i1 == 1 goto label10;

        if i1 == 2 goto label03;

        goto label01;

     label03:
        r4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: java.lang.String getName()>();

        $r8 = "requestFocus";

        $z2 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z2 == 0 goto label04;

        specialinvoke r0.<android.view.LayoutInflater: void parseRequestFocus(org.xmlpull.v1.XmlPullParser,android.view.View)>(r1, r2);

        goto label09;

     label04:
        $r9 = "tag";

        $z3 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z3 == 0 goto label05;

        specialinvoke r0.<android.view.LayoutInflater: void parseViewTag(org.xmlpull.v1.XmlPullParser,android.view.View,android.util.AttributeSet)>(r1, r2, r3);

        goto label09;

     label05:
        $r10 = "include";

        $z4 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z4 == 0 goto label07;

        $i3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i3 != 0 goto label06;

        $r13 = new android.view.InflateException;

        specialinvoke $r13.<android.view.InflateException: void <init>(java.lang.String)>("<include /> cannot be the root element");

        throw $r13;

     label06:
        specialinvoke r0.<android.view.LayoutInflater: void parseInclude(org.xmlpull.v1.XmlPullParser,android.view.View,android.util.AttributeSet,boolean)>(r1, r2, r3, z1);

        goto label09;

     label07:
        $r11 = "merge";

        $z5 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z5 == 0 goto label08;

        $r12 = new android.view.InflateException;

        specialinvoke $r12.<android.view.InflateException: void <init>(java.lang.String)>("<merge /> must be the root element");

        throw $r12;

     label08:
        r5 = virtualinvoke r0.<android.view.LayoutInflater: android.view.View createViewFromTag(android.view.View,java.lang.String,android.util.AttributeSet,boolean)>(r2, r4, r3, z1);

        r6 = (android.view.ViewGroup) r2;

        r7 = virtualinvoke r6.<android.view.ViewGroup: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>(r3);

        virtualinvoke r0.<android.view.LayoutInflater: void rInflate(org.xmlpull.v1.XmlPullParser,android.view.View,android.util.AttributeSet,boolean,boolean)>(r1, r5, r3, 1, 1);

        virtualinvoke r6.<android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r5, r7);

     label09:
        goto label01;

     label10:
        if z0 == 0 goto label11;

        virtualinvoke r2.<android.view.View: void onFinishInflate()>();

     label11:
        return;
    }

    private void parseRequestFocus(org.xmlpull.v1.XmlPullParser, android.view.View) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.view.LayoutInflater r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.view.View r2;
        int i0, i1, $i2, $i3;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: android.view.View;

        virtualinvoke r2.<android.view.View: boolean requestFocus()>();

        i1 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        $i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        i0 = $i2;

        if $i2 != 3 goto label2;

        $i3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i3 <= i1 goto label3;

     label2:
        if i0 == 1 goto label3;

        goto label1;

     label3:
        return;
    }

    private void parseViewTag(org.xmlpull.v1.XmlPullParser, android.view.View, android.util.AttributeSet) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.view.LayoutInflater r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.view.View r2;
        android.util.AttributeSet r3;
        int i0, i1, i2, $i3, $i4;
        android.content.res.TypedArray r4;
        java.lang.CharSequence r5;
        int[] $r6;
        android.content.Context $r7;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.util.AttributeSet;

        $r7 = r0.<android.view.LayoutInflater: android.content.Context mContext>;

        $r6 = <com.android.internal.R$styleable: int[] ViewTag>;

        r4 = virtualinvoke $r7.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[])>(r3, $r6);

        i1 = virtualinvoke r4.<android.content.res.TypedArray: int getResourceId(int,int)>(1, 0);

        r5 = virtualinvoke r4.<android.content.res.TypedArray: java.lang.CharSequence getText(int)>(0);

        virtualinvoke r2.<android.view.View: void setTag(int,java.lang.Object)>(i1, r5);

        virtualinvoke r4.<android.content.res.TypedArray: void recycle()>();

        i2 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label1:
        $i3 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        i0 = $i3;

        if $i3 != 3 goto label2;

        $i4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i4 <= i2 goto label3;

     label2:
        if i0 == 1 goto label3;

        goto label1;

     label3:
        return;
    }

    private void parseInclude(org.xmlpull.v1.XmlPullParser, android.view.View, android.util.AttributeSet, boolean) throws org.xmlpull.v1.XmlPullParserException, java.io.IOException
    {
        android.view.LayoutInflater r0;
        org.xmlpull.v1.XmlPullParser r1;
        android.view.View r2, r7;
        android.util.AttributeSet r3, r5;
        boolean z0, $z1, $z2;
        int i0, i1, i2, $i3, $i4, $i5, i6, i7, i8;
        java.lang.String r4, r6, $r14, $r20, $r21, $r27;
        android.view.ViewGroup r8;
        java.lang.Throwable r9, r10, $r30, $r31;
        android.view.InflateException $r11, $r17, $r25, $r26;
        android.content.res.Resources $r12;
        android.content.Context $r13, $r15;
        int[] $r16;
        java.lang.StringBuilder $r18, $r19, $r22, $r23, $r24, $r28, $r29;
        java.lang.RuntimeException $r32;
        android.content.res.XmlResourceParser r33;
        android.view.ViewGroup$LayoutParams r34, r35;
        android.content.res.TypedArray r36;

        r0 := @this: android.view.LayoutInflater;

        r1 := @parameter0: org.xmlpull.v1.XmlPullParser;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.util.AttributeSet;

        z0 := @parameter3: boolean;

        $z1 = r2 instanceof android.view.ViewGroup;

        if $z1 == 0 goto label25;

        i1 = interfaceinvoke r3.<android.util.AttributeSet: int getAttributeResourceValue(java.lang.String,java.lang.String,int)>(null, "layout", 0);

        if i1 != 0 goto label02;

        r4 = interfaceinvoke r3.<android.util.AttributeSet: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "layout");

        if r4 != null goto label01;

        $r26 = new android.view.InflateException;

        specialinvoke $r26.<android.view.InflateException: void <init>(java.lang.String)>("You must specifiy a layout in the include tag: <include layout=\"@layout/layoutID\" />");

        throw $r26;

     label01:
        $r25 = new android.view.InflateException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("You must specifiy a valid layout reference. The layout ID ");

        $r29 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not valid.");

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<android.view.InflateException: void <init>(java.lang.String)>($r27);

        throw $r25;

     label02:
        $r13 = virtualinvoke r0.<android.view.LayoutInflater: android.content.Context getContext()>();

        $r12 = virtualinvoke $r13.<android.content.Context: android.content.res.Resources getResources()>();

        r33 = virtualinvoke $r12.<android.content.res.Resources: android.content.res.XmlResourceParser getLayout(int)>(i1);

     label03:
        r5 = staticinvoke <android.util.Xml: android.util.AttributeSet asAttributeSet(org.xmlpull.v1.XmlPullParser)>(r33);

     label04:
        $i3 = interfaceinvoke r33.<android.content.res.XmlResourceParser: int next()>();

        i0 = $i3;

        if $i3 == 2 goto label05;

        if i0 == 1 goto label05;

        goto label04;

     label05:
        if i0 == 2 goto label06;

        $r17 = new android.view.InflateException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r21 = interfaceinvoke r33.<android.content.res.XmlResourceParser: java.lang.String getPositionDescription()>();

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r19 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": No start tag found!");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<android.view.InflateException: void <init>(java.lang.String)>($r20);

        throw $r17;

     label06:
        r6 = interfaceinvoke r33.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $r14 = "merge";

        $z2 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z2 == 0 goto label07;

        virtualinvoke r0.<android.view.LayoutInflater: void rInflate(org.xmlpull.v1.XmlPullParser,android.view.View,android.util.AttributeSet,boolean,boolean)>(r33, r2, r5, 0, z0);

        goto label21;

     label07:
        r7 = virtualinvoke r0.<android.view.LayoutInflater: android.view.View createViewFromTag(android.view.View,java.lang.String,android.util.AttributeSet,boolean)>(r2, r6, r5, z0);

        r8 = (android.view.ViewGroup) r2;

     label08:
        r34 = virtualinvoke r8.<android.view.ViewGroup: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>(r3);

     label09:
        if r34 == null goto label15;

        virtualinvoke r7.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r34);

        goto label15;

     label10:
        $r32 := @caughtexception;

        r35 = virtualinvoke r8.<android.view.ViewGroup: android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)>(r5);

     label11:
        if r35 == null goto label15;

        virtualinvoke r7.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r35);

        goto label15;

     label12:
        $r30 := @caughtexception;

        r9 = $r30;

     label13:
        goto label14;

     label14:
        throw r9;

     label15:
        virtualinvoke r0.<android.view.LayoutInflater: void rInflate(org.xmlpull.v1.XmlPullParser,android.view.View,android.util.AttributeSet,boolean,boolean)>(r33, r7, r5, 1, 1);

        $r15 = r0.<android.view.LayoutInflater: android.content.Context mContext>;

        $r16 = <com.android.internal.R$styleable: int[] View>;

        r36 = virtualinvoke $r15.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r3, $r16, 0, 0);

        i6 = virtualinvoke r36.<android.content.res.TypedArray: int getResourceId(int,int)>(9, -1);

        i2 = virtualinvoke r36.<android.content.res.TypedArray: int getInt(int,int)>(21, -1);

        virtualinvoke r36.<android.content.res.TypedArray: void recycle()>();

        if i6 == -1 goto label16;

        virtualinvoke r7.<android.view.View: void setId(int)>(i6);

     label16:
        tableswitch(i2)
        {
            case 0: goto label17;
            case 1: goto label18;
            case 2: goto label19;
            default: goto label20;
        };

     label17:
        virtualinvoke r7.<android.view.View: void setVisibility(int)>(0);

        goto label20;

     label18:
        virtualinvoke r7.<android.view.View: void setVisibility(int)>(4);

        goto label20;

     label19:
        virtualinvoke r7.<android.view.View: void setVisibility(int)>(8);

     label20:
        virtualinvoke r8.<android.view.ViewGroup: void addView(android.view.View)>(r7);

     label21:
        interfaceinvoke r33.<android.content.res.XmlResourceParser: void close()>();

        goto label24;

     label22:
        $r31 := @caughtexception;

        r10 = $r31;

     label23:
        interfaceinvoke r33.<android.content.res.XmlResourceParser: void close()>();

        throw r10;

     label24:
        goto label26;

     label25:
        $r11 = new android.view.InflateException;

        specialinvoke $r11.<android.view.InflateException: void <init>(java.lang.String)>("<include /> can only be used inside of a ViewGroup");

        throw $r11;

     label26:
        i7 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

     label27:
        $i4 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int next()>();

        i8 = $i4;

        if $i4 != 3 goto label28;

        $i5 = interfaceinvoke r1.<org.xmlpull.v1.XmlPullParser: int getDepth()>();

        if $i5 <= i7 goto label29;

     label28:
        if i8 == 1 goto label29;

        goto label27;

     label29:
        return;

        catch java.lang.RuntimeException from label08 to label09 with label10;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch java.lang.Throwable from label03 to label21 with label22;
        catch java.lang.Throwable from label22 to label23 with label22;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.lang.Class[] $r2;
        java.util.HashMap $r3;
        int[] $r4;

        <android.view.LayoutInflater: java.lang.String TAG_TAG> = "tag";

        <android.view.LayoutInflater: java.lang.String TAG_REQUEST_FOCUS> = "requestFocus";

        <android.view.LayoutInflater: java.lang.String TAG_1995> = "blink";

        <android.view.LayoutInflater: java.lang.String TAG_INCLUDE> = "include";

        <android.view.LayoutInflater: java.lang.String TAG_MERGE> = "merge";

        <android.view.LayoutInflater: boolean DEBUG> = 0;

        $r0 = class "android/view/LayoutInflater";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <android.view.LayoutInflater: java.lang.String TAG> = $r1;

        $r2 = newarray (java.lang.Class)[2];

        $r2[0] = class "android/content/Context";

        $r2[1] = class "android/util/AttributeSet";

        <android.view.LayoutInflater: java.lang.Class[] mConstructorSignature> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        <android.view.LayoutInflater: java.util.HashMap sConstructorMap> = $r3;

        $r4 = newarray (int)[1];

        $r4[0] = 16842752;

        <android.view.LayoutInflater: int[] ATTRS_THEME> = $r4;

        return;
    }
}
