public class android.view.inputmethod.InputMethodSubtypeArray extends java.lang.Object
{
    private static final java.lang.String TAG;
    private final java.lang.Object mLockObject;
    private final int mCount;
    private volatile android.view.inputmethod.InputMethodSubtype[] mInstance;
    private volatile byte[] mCompressedData;
    private volatile int mDecompressedSize;

    public void <init>(java.util.List)
    {
        android.view.inputmethod.InputMethodSubtypeArray r0;
        java.util.List r1;
        java.lang.Object $r2;
        int $i0, $i1;
        android.view.inputmethod.InputMethodSubtype[] $r3, $r5;
        java.lang.Object[] $r4;

        r0 := @this: android.view.inputmethod.InputMethodSubtypeArray;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<android.view.inputmethod.InputMethodSubtypeArray: java.lang.Object mLockObject> = $r2;

        if r1 != null goto label1;

        r0.<android.view.inputmethod.InputMethodSubtypeArray: int mCount> = 0;

        return;

     label1:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        r0.<android.view.inputmethod.InputMethodSubtypeArray: int mCount> = $i0;

        $i1 = r0.<android.view.inputmethod.InputMethodSubtypeArray: int mCount>;

        $r3 = newarray (android.view.inputmethod.InputMethodSubtype)[$i1];

        $r4 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (android.view.inputmethod.InputMethodSubtype[]) $r4;

        r0.<android.view.inputmethod.InputMethodSubtypeArray: android.view.inputmethod.InputMethodSubtype[] mInstance> = $r5;

        return;
    }

    public void <init>(android.os.Parcel)
    {
        android.view.inputmethod.InputMethodSubtypeArray r0;
        android.os.Parcel r1;
        java.lang.Object $r2;
        int $i0, $i1, $i2;
        byte[] $r3;

        r0 := @this: android.view.inputmethod.InputMethodSubtypeArray;

        r1 := @parameter0: android.os.Parcel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.Object;

        specialinvoke $r2.<java.lang.Object: void <init>()>();

        r0.<android.view.inputmethod.InputMethodSubtypeArray: java.lang.Object mLockObject> = $r2;

        $i0 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.inputmethod.InputMethodSubtypeArray: int mCount> = $i0;

        $i1 = r0.<android.view.inputmethod.InputMethodSubtypeArray: int mCount>;

        if $i1 <= 0 goto label1;

        $i2 = virtualinvoke r1.<android.os.Parcel: int readInt()>();

        r0.<android.view.inputmethod.InputMethodSubtypeArray: int mDecompressedSize> = $i2;

        $r3 = virtualinvoke r1.<android.os.Parcel: byte[] createByteArray()>();

        r0.<android.view.inputmethod.InputMethodSubtypeArray: byte[] mCompressedData> = $r3;

     label1:
        return;
    }

    public void writeToParcel(android.os.Parcel)
    {
        android.view.inputmethod.InputMethodSubtypeArray r0;
        android.os.Parcel r1;
        byte[] r2, r4;
        int i0, $i1, $i3, $i5;
        java.lang.Object r3, $r6;
        java.lang.Throwable r5, $r8;
        android.view.inputmethod.InputMethodSubtype[] $r7;

        r0 := @this: android.view.inputmethod.InputMethodSubtypeArray;

        r1 := @parameter0: android.os.Parcel;

        $i1 = r0.<android.view.inputmethod.InputMethodSubtypeArray: int mCount>;

        if $i1 != 0 goto label01;

        $i5 = r0.<android.view.inputmethod.InputMethodSubtypeArray: int mCount>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i5);

        return;

     label01:
        r2 = r0.<android.view.inputmethod.InputMethodSubtypeArray: byte[] mCompressedData>;

        i0 = r0.<android.view.inputmethod.InputMethodSubtypeArray: int mDecompressedSize>;

        if r2 != null goto label09;

        if i0 != 0 goto label09;

        $r6 = r0.<android.view.inputmethod.InputMethodSubtypeArray: java.lang.Object mLockObject>;

        r3 = $r6;

        entermonitor $r6;

     label02:
        r2 = r0.<android.view.inputmethod.InputMethodSubtypeArray: byte[] mCompressedData>;

        i0 = r0.<android.view.inputmethod.InputMethodSubtypeArray: int mDecompressedSize>;

        if r2 != null goto label05;

        if i0 != 0 goto label05;

        $r7 = r0.<android.view.inputmethod.InputMethodSubtypeArray: android.view.inputmethod.InputMethodSubtype[] mInstance>;

        r4 = staticinvoke <android.view.inputmethod.InputMethodSubtypeArray: byte[] marshall(android.view.inputmethod.InputMethodSubtype[])>($r7);

        r2 = staticinvoke <android.view.inputmethod.InputMethodSubtypeArray: byte[] compress(byte[])>(r4);

        if r2 != null goto label03;

        i0 = -1;

        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("InputMethodSubtypeArray", "Failed to compress data.");

        goto label04;

     label03:
        i0 = lengthof r4;

     label04:
        r0.<android.view.inputmethod.InputMethodSubtypeArray: int mDecompressedSize> = i0;

        r0.<android.view.inputmethod.InputMethodSubtypeArray: byte[] mCompressedData> = r2;

     label05:
        exitmonitor r3;

     label06:
        goto label09;

     label07:
        $r8 := @caughtexception;

        r5 = $r8;

        exitmonitor r3;

     label08:
        throw r5;

     label09:
        if r2 == null goto label10;

        if i0 <= 0 goto label10;

        $i3 = r0.<android.view.inputmethod.InputMethodSubtypeArray: int mCount>;

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>($i3);

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r1.<android.os.Parcel: void writeByteArray(byte[])>(r2);

        goto label11;

     label10:
        staticinvoke <android.util.Slog: int i(java.lang.String,java.lang.String)>("InputMethodSubtypeArray", "Unexpected state. Behaving as an empty array.");

        virtualinvoke r1.<android.os.Parcel: void writeInt(int)>(0);

     label11:
        return;

        catch java.lang.Throwable from label02 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    public android.view.inputmethod.InputMethodSubtype get(int)
    {
        android.view.inputmethod.InputMethodSubtypeArray r0;
        int i0, $i1, $i2, $i4;
        android.view.inputmethod.InputMethodSubtype[] r1;
        java.lang.Object r2, $r7;
        byte[] r3, $r8;
        java.lang.Throwable r4, $r9;
        java.lang.ArrayIndexOutOfBoundsException $r5;
        android.view.inputmethod.InputMethodSubtype $r6;

        r0 := @this: android.view.inputmethod.InputMethodSubtypeArray;

        i0 := @parameter0: int;

        if i0 < 0 goto label01;

        $i1 = r0.<android.view.inputmethod.InputMethodSubtypeArray: int mCount>;

        if $i1 > i0 goto label02;

     label01:
        $r5 = new java.lang.ArrayIndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

        throw $r5;

     label02:
        r1 = r0.<android.view.inputmethod.InputMethodSubtypeArray: android.view.inputmethod.InputMethodSubtype[] mInstance>;

        if r1 != null goto label10;

        $r7 = r0.<android.view.inputmethod.InputMethodSubtypeArray: java.lang.Object mLockObject>;

        r2 = $r7;

        entermonitor $r7;

     label03:
        r1 = r0.<android.view.inputmethod.InputMethodSubtypeArray: android.view.inputmethod.InputMethodSubtype[] mInstance>;

        if r1 != null goto label06;

        $r8 = r0.<android.view.inputmethod.InputMethodSubtypeArray: byte[] mCompressedData>;

        $i2 = r0.<android.view.inputmethod.InputMethodSubtypeArray: int mDecompressedSize>;

        r3 = staticinvoke <android.view.inputmethod.InputMethodSubtypeArray: byte[] decompress(byte[],int)>($r8, $i2);

        r0.<android.view.inputmethod.InputMethodSubtypeArray: byte[] mCompressedData> = null;

        r0.<android.view.inputmethod.InputMethodSubtypeArray: int mDecompressedSize> = 0;

        if r3 == null goto label04;

        r1 = staticinvoke <android.view.inputmethod.InputMethodSubtypeArray: android.view.inputmethod.InputMethodSubtype[] unmarshall(byte[])>(r3);

        goto label05;

     label04:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("InputMethodSubtypeArray", "Failed to decompress data. Returns null as fallback.");

        $i4 = r0.<android.view.inputmethod.InputMethodSubtypeArray: int mCount>;

        r1 = newarray (android.view.inputmethod.InputMethodSubtype)[$i4];

     label05:
        r0.<android.view.inputmethod.InputMethodSubtypeArray: android.view.inputmethod.InputMethodSubtype[] mInstance> = r1;

     label06:
        exitmonitor r2;

     label07:
        goto label10;

     label08:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r2;

     label09:
        throw r4;

     label10:
        $r6 = r1[i0];

        return $r6;

        catch java.lang.Throwable from label03 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public int getCount()
    {
        android.view.inputmethod.InputMethodSubtypeArray r0;
        int $i0;

        r0 := @this: android.view.inputmethod.InputMethodSubtypeArray;

        $i0 = r0.<android.view.inputmethod.InputMethodSubtypeArray: int mCount>;

        return $i0;
    }

    private static byte[] marshall(android.view.inputmethod.InputMethodSubtype[])
    {
        android.view.inputmethod.InputMethodSubtype[] r0;
        android.os.Parcel r1;
        byte[] r2;
        java.lang.Throwable r3, $r4;

        r0 := @parameter0: android.view.inputmethod.InputMethodSubtype[];

        r1 = null;

     label1:
        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        virtualinvoke r1.<android.os.Parcel: void writeTypedArray(android.os.Parcelable[],int)>(r0, 0);

        r2 = virtualinvoke r1.<android.os.Parcel: byte[] marshall()>();

     label2:
        if r1 == null goto label3;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

     label3:
        return r2;

     label4:
        $r4 := @caughtexception;

        r3 = $r4;

     label5:
        if r1 == null goto label6;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private static android.view.inputmethod.InputMethodSubtype[] unmarshall(byte[])
    {
        byte[] r0;
        android.os.Parcel r1;
        android.view.inputmethod.InputMethodSubtype[] r2;
        java.lang.Throwable r3, $r6;
        int $i0;
        android.os.Parcelable$Creator $r4;
        java.lang.Object[] $r5;

        r0 := @parameter0: byte[];

        r1 = null;

     label1:
        r1 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        $i0 = lengthof r0;

        virtualinvoke r1.<android.os.Parcel: void unmarshall(byte[],int,int)>(r0, 0, $i0);

        virtualinvoke r1.<android.os.Parcel: void setDataPosition(int)>(0);

        $r4 = <android.view.inputmethod.InputMethodSubtype: android.os.Parcelable$Creator CREATOR>;

        $r5 = virtualinvoke r1.<android.os.Parcel: java.lang.Object[] createTypedArray(android.os.Parcelable$Creator)>($r4);

        r2 = (android.view.inputmethod.InputMethodSubtype[]) $r5;

     label2:
        if r1 == null goto label3;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

     label3:
        return r2;

     label4:
        $r6 := @caughtexception;

        r3 = $r6;

     label5:
        if r1 == null goto label6;

        virtualinvoke r1.<android.os.Parcel: void recycle()>();

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private static byte[] compress(byte[])
    {
        byte[] r0, $r9;
        java.io.ByteArrayOutputStream r1, $r7;
        java.util.zip.GZIPOutputStream r2, $r8;
        java.io.IOException r3, r4, r6, $r10, $r12, $r13, $r14, $r15, $r16, $r17, r18, r19, r20;
        java.lang.Throwable r5, $r11;

        r0 := @parameter0: byte[];

        r1 = null;

        r2 = null;

     label01:
        $r7 = new java.io.ByteArrayOutputStream;

        specialinvoke $r7.<java.io.ByteArrayOutputStream: void <init>()>();

        r1 = $r7;

        $r8 = new java.util.zip.GZIPOutputStream;

        specialinvoke $r8.<java.util.zip.GZIPOutputStream: void <init>(java.io.OutputStream)>(r1);

        r2 = $r8;

        virtualinvoke r2.<java.util.zip.GZIPOutputStream: void write(byte[])>(r0);

     label02:
        if r2 == null goto label03;

        virtualinvoke r2.<java.util.zip.GZIPOutputStream: void close()>();

     label03:
        goto label05;

     label04:
        $r17 := @caughtexception;

        r3 = $r17;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodSubtypeArray", "Failed to close the stream.", r3);

     label05:
        if r1 == null goto label06;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void close()>();

     label06:
        goto label24;

     label07:
        $r14 := @caughtexception;

        r18 = $r14;

        r1 = null;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodSubtypeArray", "Failed to close the stream.", r18);

        goto label24;

     label08:
        $r10 := @caughtexception;

     label09:
        if r2 == null goto label10;

        virtualinvoke r2.<java.util.zip.GZIPOutputStream: void close()>();

     label10:
        goto label12;

     label11:
        $r15 := @caughtexception;

        r4 = $r15;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodSubtypeArray", "Failed to close the stream.", r4);

     label12:
        if r1 == null goto label13;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void close()>();

     label13:
        goto label15;

     label14:
        $r12 := @caughtexception;

        r19 = $r12;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodSubtypeArray", "Failed to close the stream.", r19);

     label15:
        return null;

     label16:
        $r11 := @caughtexception;

        r5 = $r11;

     label17:
        if r2 == null goto label18;

        virtualinvoke r2.<java.util.zip.GZIPOutputStream: void close()>();

     label18:
        goto label20;

     label19:
        $r16 := @caughtexception;

        r6 = $r16;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodSubtypeArray", "Failed to close the stream.", r6);

     label20:
        if r1 == null goto label21;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void close()>();

     label21:
        goto label23;

     label22:
        $r13 := @caughtexception;

        r20 = $r13;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodSubtypeArray", "Failed to close the stream.", r20);

     label23:
        throw r5;

     label24:
        if r1 == null goto label25;

        $r9 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        goto label26;

     label25:
        $r9 = null;

     label26:
        return $r9;

        catch java.io.IOException from label02 to label03 with label04;
        catch java.io.IOException from label05 to label06 with label07;
        catch java.io.IOException from label01 to label02 with label08;
        catch java.io.IOException from label09 to label10 with label11;
        catch java.io.IOException from label12 to label13 with label14;
        catch java.lang.Throwable from label01 to label02 with label16;
        catch java.lang.Throwable from label08 to label09 with label16;
        catch java.io.IOException from label17 to label18 with label19;
        catch java.io.IOException from label20 to label21 with label22;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    private static byte[] decompress(byte[], int)
    {
        byte[] r0, r3, r20;
        int i0, i1, i2, i3, $i4, $i5;
        java.io.ByteArrayInputStream r1, $r6;
        java.util.zip.GZIPInputStream r2, $r7;
        java.lang.Throwable r4, $r17;
        java.io.IOException r5, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, r18, r19, r21, r22, r23, r24, r25;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        r1 = null;

        r2 = null;

     label01:
        $r6 = new java.io.ByteArrayInputStream;

        specialinvoke $r6.<java.io.ByteArrayInputStream: void <init>(byte[])>(r0);

        r1 = $r6;

        $r7 = new java.util.zip.GZIPInputStream;

        specialinvoke $r7.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>(r1);

        r2 = $r7;

        r3 = newarray (byte)[i0];

        i1 = 0;

     label02:
        $i4 = lengthof r3;

        if i1 >= $i4 goto label04;

        $i5 = lengthof r3;

        i2 = $i5 - i1;

        i3 = virtualinvoke r2.<java.util.zip.GZIPInputStream: int read(byte[],int,int)>(r3, i1, i2);

        if i3 >= 0 goto label03;

        goto label04;

     label03:
        i1 = i1 + i3;

        goto label02;

     label04:
        if i0 == i1 goto label12;

     label05:
        if r2 == null goto label06;

        virtualinvoke r2.<java.util.zip.GZIPInputStream: void close()>();

     label06:
        goto label08;

     label07:
        $r13 := @caughtexception;

        r18 = $r13;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodSubtypeArray", "Failed to close the stream.", r18);

     label08:
        if r1 == null goto label09;

        virtualinvoke r1.<java.io.ByteArrayInputStream: void close()>();

     label09:
        goto label11;

     label10:
        $r11 := @caughtexception;

        r19 = $r11;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodSubtypeArray", "Failed to close the stream.", r19);

     label11:
        return null;

     label12:
        r20 = r3;

     label13:
        if r2 == null goto label14;

        virtualinvoke r2.<java.util.zip.GZIPInputStream: void close()>();

     label14:
        goto label16;

     label15:
        $r12 := @caughtexception;

        r21 = $r12;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodSubtypeArray", "Failed to close the stream.", r21);

     label16:
        if r1 == null goto label17;

        virtualinvoke r1.<java.io.ByteArrayInputStream: void close()>();

     label17:
        goto label19;

     label18:
        $r16 := @caughtexception;

        r22 = $r16;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodSubtypeArray", "Failed to close the stream.", r22);

     label19:
        return r20;

     label20:
        $r9 := @caughtexception;

     label21:
        if r2 == null goto label22;

        virtualinvoke r2.<java.util.zip.GZIPInputStream: void close()>();

     label22:
        goto label24;

     label23:
        $r15 := @caughtexception;

        r23 = $r15;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodSubtypeArray", "Failed to close the stream.", r23);

     label24:
        if r1 == null goto label25;

        virtualinvoke r1.<java.io.ByteArrayInputStream: void close()>();

     label25:
        goto label27;

     label26:
        $r10 := @caughtexception;

        r24 = $r10;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodSubtypeArray", "Failed to close the stream.", r24);

     label27:
        return null;

     label28:
        $r17 := @caughtexception;

        r4 = $r17;

     label29:
        if r2 == null goto label30;

        virtualinvoke r2.<java.util.zip.GZIPInputStream: void close()>();

     label30:
        goto label32;

     label31:
        $r14 := @caughtexception;

        r5 = $r14;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodSubtypeArray", "Failed to close the stream.", r5);

     label32:
        if r1 == null goto label33;

        virtualinvoke r1.<java.io.ByteArrayInputStream: void close()>();

     label33:
        goto label35;

     label34:
        $r8 := @caughtexception;

        r25 = $r8;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("InputMethodSubtypeArray", "Failed to close the stream.", r25);

     label35:
        throw r4;

        catch java.io.IOException from label05 to label06 with label07;
        catch java.io.IOException from label08 to label09 with label10;
        catch java.io.IOException from label13 to label14 with label15;
        catch java.io.IOException from label16 to label17 with label18;
        catch java.io.IOException from label01 to label05 with label20;
        catch java.io.IOException from label12 to label13 with label20;
        catch java.io.IOException from label21 to label22 with label23;
        catch java.io.IOException from label24 to label25 with label26;
        catch java.lang.Throwable from label01 to label05 with label28;
        catch java.lang.Throwable from label12 to label13 with label28;
        catch java.lang.Throwable from label20 to label21 with label28;
        catch java.io.IOException from label29 to label30 with label31;
        catch java.io.IOException from label32 to label33 with label34;
        catch java.lang.Throwable from label28 to label29 with label28;
    }

    public static void <clinit>()
    {
        <android.view.inputmethod.InputMethodSubtypeArray: java.lang.String TAG> = "InputMethodSubtypeArray";

        return;
    }
}
