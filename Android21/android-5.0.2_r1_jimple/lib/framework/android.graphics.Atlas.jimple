public class android.graphics.Atlas extends java.lang.Object
{
    public static final int FLAG_ALLOW_ROTATIONS;
    public static final int FLAG_ADD_PADDING;
    public static final int FLAG_DEFAULTS;
    private final android.graphics.Atlas$Policy mPolicy;

    public void <init>(android.graphics.Atlas$Type, int, int)
    {
        android.graphics.Atlas r0;
        android.graphics.Atlas$Type r1;
        int i0, i1;

        r0 := @this: android.graphics.Atlas;

        r1 := @parameter0: android.graphics.Atlas$Type;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<android.graphics.Atlas: void <init>(android.graphics.Atlas$Type,int,int,int)>(r1, i0, i1, 2);

        return;
    }

    public void <init>(android.graphics.Atlas$Type, int, int, int)
    {
        android.graphics.Atlas r0;
        android.graphics.Atlas$Type r1;
        int i0, i1, i2;
        android.graphics.Atlas$Policy $r2;

        r0 := @this: android.graphics.Atlas;

        r1 := @parameter0: android.graphics.Atlas$Type;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <android.graphics.Atlas: android.graphics.Atlas$Policy findPolicy(android.graphics.Atlas$Type,int,int,int)>(r1, i0, i1, i2);

        r0.<android.graphics.Atlas: android.graphics.Atlas$Policy mPolicy> = $r2;

        return;
    }

    public android.graphics.Atlas$Entry pack(int, int)
    {
        android.graphics.Atlas r0;
        int i0, i1;
        android.graphics.Atlas$Entry $r1;

        r0 := @this: android.graphics.Atlas;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<android.graphics.Atlas: android.graphics.Atlas$Entry pack(int,int,android.graphics.Atlas$Entry)>(i0, i1, null);

        return $r1;
    }

    public android.graphics.Atlas$Entry pack(int, int, android.graphics.Atlas$Entry)
    {
        android.graphics.Atlas r0;
        int i0, i1;
        android.graphics.Atlas$Entry r1, $r3, $r4;
        android.graphics.Atlas$Policy $r2;

        r0 := @this: android.graphics.Atlas;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.graphics.Atlas$Entry;

        if r1 != null goto label1;

        $r4 = new android.graphics.Atlas$Entry;

        specialinvoke $r4.<android.graphics.Atlas$Entry: void <init>()>();

        r1 = $r4;

     label1:
        $r2 = r0.<android.graphics.Atlas: android.graphics.Atlas$Policy mPolicy>;

        $r3 = virtualinvoke $r2.<android.graphics.Atlas$Policy: android.graphics.Atlas$Entry pack(int,int,android.graphics.Atlas$Entry)>(i0, i1, r1);

        return $r3;
    }

    private static android.graphics.Atlas$Policy findPolicy(android.graphics.Atlas$Type, int, int, int)
    {
        android.graphics.Atlas$Type r0;
        int i0, i1, i2, $i3, $i4;
        int[] $r1;
        android.graphics.Atlas$SlicePolicy $r2, $r4, $r6, $r8;
        android.graphics.Atlas$SlicePolicy$MinAreaSplitDecision $r3;
        android.graphics.Atlas$SlicePolicy$LongerFreeAxisSplitDecision $r5;
        android.graphics.Atlas$SlicePolicy$ShorterFreeAxisSplitDecision $r7;
        android.graphics.Atlas$SlicePolicy$MaxAreaSplitDecision $r9;

        r0 := @parameter0: android.graphics.Atlas$Type;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r1 = <android.graphics.Atlas$1: int[] $SwitchMap$android$graphics$Atlas$Type>;

        $i3 = virtualinvoke r0.<android.graphics.Atlas$Type: int ordinal()>();

        $i4 = $r1[$i3];

        tableswitch($i4)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            default: goto label5;
        };

     label1:
        $r2 = new android.graphics.Atlas$SlicePolicy;

        $r3 = new android.graphics.Atlas$SlicePolicy$MinAreaSplitDecision;

        specialinvoke $r3.<android.graphics.Atlas$SlicePolicy$MinAreaSplitDecision: void <init>(android.graphics.Atlas$1)>(null);

        specialinvoke $r2.<android.graphics.Atlas$SlicePolicy: void <init>(int,int,int,android.graphics.Atlas$SlicePolicy$SplitDecision)>(i0, i1, i2, $r3);

        return $r2;

     label2:
        $r8 = new android.graphics.Atlas$SlicePolicy;

        $r9 = new android.graphics.Atlas$SlicePolicy$MaxAreaSplitDecision;

        specialinvoke $r9.<android.graphics.Atlas$SlicePolicy$MaxAreaSplitDecision: void <init>(android.graphics.Atlas$1)>(null);

        specialinvoke $r8.<android.graphics.Atlas$SlicePolicy: void <init>(int,int,int,android.graphics.Atlas$SlicePolicy$SplitDecision)>(i0, i1, i2, $r9);

        return $r8;

     label3:
        $r6 = new android.graphics.Atlas$SlicePolicy;

        $r7 = new android.graphics.Atlas$SlicePolicy$ShorterFreeAxisSplitDecision;

        specialinvoke $r7.<android.graphics.Atlas$SlicePolicy$ShorterFreeAxisSplitDecision: void <init>(android.graphics.Atlas$1)>(null);

        specialinvoke $r6.<android.graphics.Atlas$SlicePolicy: void <init>(int,int,int,android.graphics.Atlas$SlicePolicy$SplitDecision)>(i0, i1, i2, $r7);

        return $r6;

     label4:
        $r4 = new android.graphics.Atlas$SlicePolicy;

        $r5 = new android.graphics.Atlas$SlicePolicy$LongerFreeAxisSplitDecision;

        specialinvoke $r5.<android.graphics.Atlas$SlicePolicy$LongerFreeAxisSplitDecision: void <init>(android.graphics.Atlas$1)>(null);

        specialinvoke $r4.<android.graphics.Atlas$SlicePolicy: void <init>(int,int,int,android.graphics.Atlas$SlicePolicy$SplitDecision)>(i0, i1, i2, $r5);

        return $r4;

     label5:
        return null;
    }

    public static void <clinit>()
    {
        <android.graphics.Atlas: int FLAG_DEFAULTS> = 2;

        <android.graphics.Atlas: int FLAG_ADD_PADDING> = 2;

        <android.graphics.Atlas: int FLAG_ALLOW_ROTATIONS> = 1;

        return;
    }
}
