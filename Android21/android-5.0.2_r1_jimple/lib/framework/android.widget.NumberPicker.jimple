public class android.widget.NumberPicker extends android.widget.LinearLayout
{
    private static final int SELECTOR_WHEEL_ITEM_COUNT;
    private static final long DEFAULT_LONG_PRESS_UPDATE_INTERVAL;
    private static final int SELECTOR_MIDDLE_ITEM_INDEX;
    private static final int SELECTOR_MAX_FLING_VELOCITY_ADJUSTMENT;
    private static final int SELECTOR_ADJUSTMENT_DURATION_MILLIS;
    private static final int SNAP_SCROLL_DURATION;
    private static final float TOP_AND_BOTTOM_FADING_EDGE_STRENGTH;
    private static final int UNSCALED_DEFAULT_SELECTION_DIVIDER_HEIGHT;
    private static final int UNSCALED_DEFAULT_SELECTION_DIVIDERS_DISTANCE;
    private static final int DEFAULT_LAYOUT_RESOURCE_ID;
    private static final int SIZE_UNSPECIFIED;
    private static final android.widget.NumberPicker$TwoDigitFormatter sTwoDigitFormatter;
    private final android.widget.ImageButton mIncrementButton;
    private final android.widget.ImageButton mDecrementButton;
    private final android.widget.EditText mInputText;
    private final int mSelectionDividersDistance;
    private final int mMinHeight;
    private final int mMaxHeight;
    private final int mMinWidth;
    private int mMaxWidth;
    private final boolean mComputeMaxWidth;
    private final int mTextSize;
    private int mSelectorTextGapHeight;
    private java.lang.String[] mDisplayedValues;
    private int mMinValue;
    private int mMaxValue;
    private int mValue;
    private android.widget.NumberPicker$OnValueChangeListener mOnValueChangeListener;
    private android.widget.NumberPicker$OnScrollListener mOnScrollListener;
    private android.widget.NumberPicker$Formatter mFormatter;
    private long mLongPressUpdateInterval;
    private final android.util.SparseArray mSelectorIndexToStringCache;
    private final int[] mSelectorIndices;
    private final android.graphics.Paint mSelectorWheelPaint;
    private final android.graphics.drawable.Drawable mVirtualButtonPressedDrawable;
    private int mSelectorElementHeight;
    private int mInitialScrollOffset;
    private int mCurrentScrollOffset;
    private final android.widget.Scroller mFlingScroller;
    private final android.widget.Scroller mAdjustScroller;
    private int mPreviousScrollerY;
    private android.widget.NumberPicker$SetSelectionCommand mSetSelectionCommand;
    private android.widget.NumberPicker$ChangeCurrentByOneFromLongPressCommand mChangeCurrentByOneFromLongPressCommand;
    private android.widget.NumberPicker$BeginSoftInputOnLongPressCommand mBeginSoftInputOnLongPressCommand;
    private float mLastDownEventY;
    private long mLastDownEventTime;
    private float mLastDownOrMoveEventY;
    private android.view.VelocityTracker mVelocityTracker;
    private int mTouchSlop;
    private int mMinimumFlingVelocity;
    private int mMaximumFlingVelocity;
    private boolean mWrapSelectorWheel;
    private final int mSolidColor;
    private final boolean mHasSelectorWheel;
    private final android.graphics.drawable.Drawable mSelectionDivider;
    private final int mSelectionDividerHeight;
    private int mScrollState;
    private boolean mIgnoreMoveEvents;
    private boolean mPerformClickOnTap;
    private int mTopSelectionDividerTop;
    private int mBottomSelectionDividerBottom;
    private int mLastHoveredChildVirtualViewId;
    private boolean mIncrementVirtualButtonPressed;
    private boolean mDecrementVirtualButtonPressed;
    private android.widget.NumberPicker$AccessibilityNodeProviderImpl mAccessibilityNodeProvider;
    private final android.widget.NumberPicker$PressedStateHelper mPressedStateHelper;
    private int mLastHandledDownDpadKeyCode;
    private boolean mHideWheelUntilFocused;
    private static final char[] DIGIT_CHARACTERS;

    public static final android.widget.NumberPicker$Formatter getTwoDigitFormatter()
    {
        android.widget.NumberPicker$TwoDigitFormatter $r0;

        $r0 = <android.widget.NumberPicker: android.widget.NumberPicker$TwoDigitFormatter sTwoDigitFormatter>;

        return $r0;
    }

    public void <init>(android.content.Context)
    {
        android.widget.NumberPicker r0;
        android.content.Context r1;

        r0 := @this: android.widget.NumberPicker;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.NumberPicker: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.widget.NumberPicker r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.widget.NumberPicker;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.NumberPicker: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 16843810);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.widget.NumberPicker r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;

        r0 := @this: android.widget.NumberPicker;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.NumberPicker: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int, int)
    {
        android.widget.NumberPicker r0;
        android.content.Context r1, $r19, $r41, $r45;
        android.util.AttributeSet r2;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28;
        android.content.res.TypedArray r3;
        android.view.LayoutInflater r4;
        android.widget.NumberPicker$1 r5, $r23;
        android.widget.NumberPicker$2 r6, $r22;
        android.view.ViewConfiguration r7;
        android.graphics.Paint r8, $r35;
        android.content.res.ColorStateList r9;
        int[] $r10, $r12, $r44;
        android.util.SparseArray $r11;
        boolean $z0, $z1, $z2, $z3, $z5, $z6, $z7;
        android.graphics.drawable.Drawable $r13, $r18;
        android.util.DisplayMetrics $r14, $r17;
        android.content.res.Resources $r15, $r16;
        float $f0, $f1, $f2, $f3;
        java.lang.Object $r20;
        android.widget.NumberPicker$PressedStateHelper $r21;
        android.widget.NumberPicker$3 $r25;
        android.widget.EditText $r26, $r28, $r31, $r32, $r33, $r34, $r38, $r40;
        android.view.View $r27, $r47, $r51;
        android.widget.NumberPicker$InputTextFilter $r29;
        android.text.InputFilter[] $r30;
        android.graphics.Typeface $r36;
        android.graphics.Paint$Align $r39;
        android.widget.Scroller $r42, $r46;
        android.view.animation.DecelerateInterpolator $r43;
        android.widget.ImageButton $r48, $r49, $r50, $r52, $r53, $r55;
        java.lang.IllegalArgumentException $r54, $r56;

        r0 := @this: android.widget.NumberPicker;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<android.widget.LinearLayout: void <init>(android.content.Context,android.util.AttributeSet,int,int)>(r1, r2, i0, i1);

        r0.<android.widget.NumberPicker: long mLongPressUpdateInterval> = 300L;

        $r11 = new android.util.SparseArray;

        specialinvoke $r11.<android.util.SparseArray: void <init>()>();

        r0.<android.widget.NumberPicker: android.util.SparseArray mSelectorIndexToStringCache> = $r11;

        $r10 = newarray (int)[3];

        r0.<android.widget.NumberPicker: int[] mSelectorIndices> = $r10;

        r0.<android.widget.NumberPicker: int mInitialScrollOffset> = -2147483648;

        r0.<android.widget.NumberPicker: int mScrollState> = 0;

        r0.<android.widget.NumberPicker: int mLastHandledDownDpadKeyCode> = -1;

        $r12 = <com.android.internal.R$styleable: int[] NumberPicker>;

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.TypedArray obtainStyledAttributes(android.util.AttributeSet,int[],int,int)>(r2, $r12, i0, i1);

        i2 = virtualinvoke r3.<android.content.res.TypedArray: int getResourceId(int,int)>(1, 17367174);

        if i2 == 17367174 goto label01;

        $z7 = 1;

        goto label02;

     label01:
        $z7 = 0;

     label02:
        r0.<android.widget.NumberPicker: boolean mHasSelectorWheel> = $z7;

        $z0 = virtualinvoke r3.<android.content.res.TypedArray: boolean getBoolean(int,boolean)>(10, 0);

        r0.<android.widget.NumberPicker: boolean mHideWheelUntilFocused> = $z0;

        $i6 = virtualinvoke r3.<android.content.res.TypedArray: int getColor(int,int)>(0, 0);

        r0.<android.widget.NumberPicker: int mSolidColor> = $i6;

        $r13 = virtualinvoke r3.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(2);

        r0.<android.widget.NumberPicker: android.graphics.drawable.Drawable mSelectionDivider> = $r13;

        $r15 = virtualinvoke r0.<android.widget.NumberPicker: android.content.res.Resources getResources()>();

        $r14 = virtualinvoke $r15.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f0 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>(1, 2.0F, $r14);

        i3 = (int) $f0;

        $i7 = virtualinvoke r3.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(3, i3);

        r0.<android.widget.NumberPicker: int mSelectionDividerHeight> = $i7;

        $r16 = virtualinvoke r0.<android.widget.NumberPicker: android.content.res.Resources getResources()>();

        $r17 = virtualinvoke $r16.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f1 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>(1, 48.0F, $r17);

        i4 = (int) $f1;

        $i8 = virtualinvoke r3.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(4, i4);

        r0.<android.widget.NumberPicker: int mSelectionDividersDistance> = $i8;

        $i11 = virtualinvoke r3.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(5, -1);

        r0.<android.widget.NumberPicker: int mMinHeight> = $i11;

        $i12 = virtualinvoke r3.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(6, -1);

        r0.<android.widget.NumberPicker: int mMaxHeight> = $i12;

        $i9 = r0.<android.widget.NumberPicker: int mMinHeight>;

        if $i9 == -1 goto label03;

        $i23 = r0.<android.widget.NumberPicker: int mMaxHeight>;

        if $i23 == -1 goto label03;

        $i28 = r0.<android.widget.NumberPicker: int mMinHeight>;

        $i27 = r0.<android.widget.NumberPicker: int mMaxHeight>;

        if $i28 <= $i27 goto label03;

        $r56 = new java.lang.IllegalArgumentException;

        specialinvoke $r56.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("minHeight > maxHeight");

        throw $r56;

     label03:
        $i10 = virtualinvoke r3.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(7, -1);

        r0.<android.widget.NumberPicker: int mMinWidth> = $i10;

        $i14 = virtualinvoke r3.<android.content.res.TypedArray: int getDimensionPixelSize(int,int)>(8, -1);

        r0.<android.widget.NumberPicker: int mMaxWidth> = $i14;

        $i15 = r0.<android.widget.NumberPicker: int mMinWidth>;

        if $i15 == -1 goto label04;

        $i26 = r0.<android.widget.NumberPicker: int mMaxWidth>;

        if $i26 == -1 goto label04;

        $i25 = r0.<android.widget.NumberPicker: int mMinWidth>;

        $i24 = r0.<android.widget.NumberPicker: int mMaxWidth>;

        if $i25 <= $i24 goto label04;

        $r54 = new java.lang.IllegalArgumentException;

        specialinvoke $r54.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("minWidth > maxWidth");

        throw $r54;

     label04:
        $i13 = r0.<android.widget.NumberPicker: int mMaxWidth>;

        if $i13 != -1 goto label05;

        $z5 = 1;

        goto label06;

     label05:
        $z5 = 0;

     label06:
        r0.<android.widget.NumberPicker: boolean mComputeMaxWidth> = $z5;

        $r18 = virtualinvoke r3.<android.content.res.TypedArray: android.graphics.drawable.Drawable getDrawable(int)>(9);

        r0.<android.widget.NumberPicker: android.graphics.drawable.Drawable mVirtualButtonPressedDrawable> = $r18;

        virtualinvoke r3.<android.content.res.TypedArray: void recycle()>();

        $r21 = new android.widget.NumberPicker$PressedStateHelper;

        specialinvoke $r21.<android.widget.NumberPicker$PressedStateHelper: void <init>(android.widget.NumberPicker)>(r0);

        r0.<android.widget.NumberPicker: android.widget.NumberPicker$PressedStateHelper mPressedStateHelper> = $r21;

        $z1 = r0.<android.widget.NumberPicker: boolean mHasSelectorWheel>;

        if $z1 != 0 goto label07;

        $z6 = 1;

        goto label08;

     label07:
        $z6 = 0;

     label08:
        virtualinvoke r0.<android.widget.NumberPicker: void setWillNotDraw(boolean)>($z6);

        $r19 = virtualinvoke r0.<android.widget.NumberPicker: android.content.Context getContext()>();

        $r20 = virtualinvoke $r19.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");

        r4 = (android.view.LayoutInflater) $r20;

        virtualinvoke r4.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>(i2, r0, 1);

        $r23 = new android.widget.NumberPicker$1;

        specialinvoke $r23.<android.widget.NumberPicker$1: void <init>(android.widget.NumberPicker)>(r0);

        r5 = $r23;

        $r22 = new android.widget.NumberPicker$2;

        specialinvoke $r22.<android.widget.NumberPicker$2: void <init>(android.widget.NumberPicker)>(r0);

        r6 = $r22;

        $z2 = r0.<android.widget.NumberPicker: boolean mHasSelectorWheel>;

        if $z2 != 0 goto label09;

        $r47 = virtualinvoke r0.<android.widget.NumberPicker: android.view.View findViewById(int)>(16909127);

        $r50 = (android.widget.ImageButton) $r47;

        r0.<android.widget.NumberPicker: android.widget.ImageButton mIncrementButton> = $r50;

        $r49 = r0.<android.widget.NumberPicker: android.widget.ImageButton mIncrementButton>;

        virtualinvoke $r49.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>(r5);

        $r55 = r0.<android.widget.NumberPicker: android.widget.ImageButton mIncrementButton>;

        virtualinvoke $r55.<android.widget.ImageButton: void setOnLongClickListener(android.view.View$OnLongClickListener)>(r6);

        goto label10;

     label09:
        r0.<android.widget.NumberPicker: android.widget.ImageButton mIncrementButton> = null;

     label10:
        $z3 = r0.<android.widget.NumberPicker: boolean mHasSelectorWheel>;

        if $z3 != 0 goto label11;

        $r51 = virtualinvoke r0.<android.widget.NumberPicker: android.view.View findViewById(int)>(16909129);

        $r53 = (android.widget.ImageButton) $r51;

        r0.<android.widget.NumberPicker: android.widget.ImageButton mDecrementButton> = $r53;

        $r52 = r0.<android.widget.NumberPicker: android.widget.ImageButton mDecrementButton>;

        virtualinvoke $r52.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>(r5);

        $r48 = r0.<android.widget.NumberPicker: android.widget.ImageButton mDecrementButton>;

        virtualinvoke $r48.<android.widget.ImageButton: void setOnLongClickListener(android.view.View$OnLongClickListener)>(r6);

        goto label12;

     label11:
        r0.<android.widget.NumberPicker: android.widget.ImageButton mDecrementButton> = null;

     label12:
        $r27 = virtualinvoke r0.<android.widget.NumberPicker: android.view.View findViewById(int)>(16909128);

        $r26 = (android.widget.EditText) $r27;

        r0.<android.widget.NumberPicker: android.widget.EditText mInputText> = $r26;

        $r31 = r0.<android.widget.NumberPicker: android.widget.EditText mInputText>;

        $r25 = new android.widget.NumberPicker$3;

        specialinvoke $r25.<android.widget.NumberPicker$3: void <init>(android.widget.NumberPicker)>(r0);

        virtualinvoke $r31.<android.widget.EditText: void setOnFocusChangeListener(android.view.View$OnFocusChangeListener)>($r25);

        $r28 = r0.<android.widget.NumberPicker: android.widget.EditText mInputText>;

        $r30 = newarray (android.text.InputFilter)[1];

        $r29 = new android.widget.NumberPicker$InputTextFilter;

        specialinvoke $r29.<android.widget.NumberPicker$InputTextFilter: void <init>(android.widget.NumberPicker)>(r0);

        $r30[0] = $r29;

        virtualinvoke $r28.<android.widget.EditText: void setFilters(android.text.InputFilter[])>($r30);

        $r33 = r0.<android.widget.NumberPicker: android.widget.EditText mInputText>;

        virtualinvoke $r33.<android.widget.EditText: void setRawInputType(int)>(2);

        $r32 = r0.<android.widget.NumberPicker: android.widget.EditText mInputText>;

        virtualinvoke $r32.<android.widget.EditText: void setImeOptions(int)>(6);

        r7 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>(r1);

        $i17 = virtualinvoke r7.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        r0.<android.widget.NumberPicker: int mTouchSlop> = $i17;

        $i18 = virtualinvoke r7.<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>();

        r0.<android.widget.NumberPicker: int mMinimumFlingVelocity> = $i18;

        $i19 = virtualinvoke r7.<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>();

        $i20 = $i19 / 8;

        r0.<android.widget.NumberPicker: int mMaximumFlingVelocity> = $i20;

        $r34 = r0.<android.widget.NumberPicker: android.widget.EditText mInputText>;

        $f2 = virtualinvoke $r34.<android.widget.EditText: float getTextSize()>();

        $i16 = (int) $f2;

        r0.<android.widget.NumberPicker: int mTextSize> = $i16;

        $r35 = new android.graphics.Paint;

        specialinvoke $r35.<android.graphics.Paint: void <init>()>();

        r8 = $r35;

        virtualinvoke r8.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r39 = <android.graphics.Paint$Align: android.graphics.Paint$Align CENTER>;

        virtualinvoke r8.<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>($r39);

        $i21 = r0.<android.widget.NumberPicker: int mTextSize>;

        $f3 = (float) $i21;

        virtualinvoke r8.<android.graphics.Paint: void setTextSize(float)>($f3);

        $r40 = r0.<android.widget.NumberPicker: android.widget.EditText mInputText>;

        $r36 = virtualinvoke $r40.<android.widget.EditText: android.graphics.Typeface getTypeface()>();

        virtualinvoke r8.<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>($r36);

        $r38 = r0.<android.widget.NumberPicker: android.widget.EditText mInputText>;

        r9 = virtualinvoke $r38.<android.widget.EditText: android.content.res.ColorStateList getTextColors()>();

        $r44 = <android.widget.NumberPicker: int[] ENABLED_STATE_SET>;

        i5 = virtualinvoke r9.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r44, -1);

        virtualinvoke r8.<android.graphics.Paint: void setColor(int)>(i5);

        r0.<android.widget.NumberPicker: android.graphics.Paint mSelectorWheelPaint> = r8;

        $r46 = new android.widget.Scroller;

        $r45 = virtualinvoke r0.<android.widget.NumberPicker: android.content.Context getContext()>();

        specialinvoke $r46.<android.widget.Scroller: void <init>(android.content.Context,android.view.animation.Interpolator,boolean)>($r45, null, 1);

        r0.<android.widget.NumberPicker: android.widget.Scroller mFlingScroller> = $r46;

        $r42 = new android.widget.Scroller;

        $r41 = virtualinvoke r0.<android.widget.NumberPicker: android.content.Context getContext()>();

        $r43 = new android.view.animation.DecelerateInterpolator;

        specialinvoke $r43.<android.view.animation.DecelerateInterpolator: void <init>(float)>(2.5F);

        specialinvoke $r42.<android.widget.Scroller: void <init>(android.content.Context,android.view.animation.Interpolator)>($r41, $r43);

        r0.<android.widget.NumberPicker: android.widget.Scroller mAdjustScroller> = $r42;

        specialinvoke r0.<android.widget.NumberPicker: boolean updateInputTextView()>();

        $i22 = virtualinvoke r0.<android.widget.NumberPicker: int getImportantForAccessibility()>();

        if $i22 != 0 goto label13;

        virtualinvoke r0.<android.widget.NumberPicker: void setImportantForAccessibility(int)>(1);

     label13:
        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.widget.NumberPicker r0;
        boolean z0, $z1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25;
        android.widget.EditText $r1, $r2, $r3;

        r0 := @this: android.widget.NumberPicker;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $z1 = r0.<android.widget.NumberPicker: boolean mHasSelectorWheel>;

        if $z1 != 0 goto label1;

        specialinvoke r0.<android.widget.LinearLayout: void onLayout(boolean,int,int,int,int)>(z0, i0, i1, i2, i3);

        return;

     label1:
        i4 = virtualinvoke r0.<android.widget.NumberPicker: int getMeasuredWidth()>();

        i5 = virtualinvoke r0.<android.widget.NumberPicker: int getMeasuredHeight()>();

        $r1 = r0.<android.widget.NumberPicker: android.widget.EditText mInputText>;

        i6 = virtualinvoke $r1.<android.widget.EditText: int getMeasuredWidth()>();

        $r2 = r0.<android.widget.NumberPicker: android.widget.EditText mInputText>;

        i7 = virtualinvoke $r2.<android.widget.EditText: int getMeasuredHeight()>();

        $i12 = i4 - i6;

        i8 = $i12 / 2;

        $i13 = i5 - i7;

        i9 = $i13 / 2;

        i10 = i8 + i6;

        i11 = i9 + i7;

        $r3 = r0.<android.widget.NumberPicker: android.widget.EditText mInputText>;

        virtualinvoke $r3.<android.widget.EditText: void layout(int,int,int,int)>(i8, i9, i10, i11);

        if z0 == 0 goto label2;

        specialinvoke r0.<android.widget.NumberPicker: void initializeSelectorWheel()>();

        specialinvoke r0.<android.widget.NumberPicker: void initializeFadingEdges()>();

        $i15 = virtualinvoke r0.<android.widget.NumberPicker: int getHeight()>();

        $i14 = r0.<android.widget.NumberPicker: int mSelectionDividersDistance>;

        $i17 = $i15 - $i14;

        $i19 = $i17 / 2;

        $i16 = r0.<android.widget.NumberPicker: int mSelectionDividerHeight>;

        $i18 = $i19 - $i16;

        r0.<android.widget.NumberPicker: int mTopSelectionDividerTop> = $i18;

        $i24 = r0.<android.widget.NumberPicker: int mTopSelectionDividerTop>;

        $i21 = r0.<android.widget.NumberPicker: int mSelectionDividerHeight>;

        $i20 = 2 * $i21;

        $i22 = $i24 + $i20;

        $i25 = r0.<android.widget.NumberPicker: int mSelectionDividersDistance>;

        $i23 = $i22 + $i25;

        r0.<android.widget.NumberPicker: int mBottomSelectionDividerBottom> = $i23;

     label2:
        return;
    }

    protected void onMeasure(int, int)
    {
        android.widget.NumberPicker r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11;
        boolean $z0;

        r0 := @this: android.widget.NumberPicker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = r0.<android.widget.NumberPicker: boolean mHasSelectorWheel>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.widget.LinearLayout: void onMeasure(int,int)>(i0, i1);

        return;

     label1:
        $i6 = r0.<android.widget.NumberPicker: int mMaxWidth>;

        i2 = specialinvoke r0.<android.widget.NumberPicker: int makeMeasureSpec(int,int)>(i0, $i6);

        $i7 = r0.<android.widget.NumberPicker: int mMaxHeight>;

        i3 = specialinvoke r0.<android.widget.NumberPicker: int makeMeasureSpec(int,int)>(i1, $i7);

        specialinvoke r0.<android.widget.LinearLayout: void onMeasure(int,int)>(i2, i3);

        $i8 = r0.<android.widget.NumberPicker: int mMinWidth>;

        $i9 = virtualinvoke r0.<android.widget.NumberPicker: int getMeasuredWidth()>();

        i4 = specialinvoke r0.<android.widget.NumberPicker: int resolveSizeAndStateRespectingMinSize(int,int,int)>($i8, $i9, i0);

        $i10 = r0.<android.widget.NumberPicker: int mMinHeight>;

        $i11 = virtualinvoke r0.<android.widget.NumberPicker: int getMeasuredHeight()>();

        i5 = specialinvoke r0.<android.widget.NumberPicker: int resolveSizeAndStateRespectingMinSize(int,int,int)>($i10, $i11, i1);

        virtualinvoke r0.<android.widget.NumberPicker: void setMeasuredDimension(int,int)>(i4, i5);

        return;
    }

    private boolean moveToFinalScrollerPosition(android.widget.Scroller)
    {
        android.widget.NumberPicker r0;
        android.widget.Scroller r1;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14;

        r0 := @this: android.widget.NumberPicker;

        r1 := @parameter0: android.widget.Scroller;

        virtualinvoke r1.<android.widget.Scroller: void forceFinished(boolean)>(1);

        $i3 = virtualinvoke r1.<android.widget.Scroller: int getFinalY()>();

        $i4 = virtualinvoke r1.<android.widget.Scroller: int getCurrY()>();

        i0 = $i3 - $i4;

        $i5 = r0.<android.widget.NumberPicker: int mCurrentScrollOffset>;

        $i7 = $i5 + i0;

        $i6 = r0.<android.widget.NumberPicker: int mSelectorElementHeight>;

        i1 = $i7 % $i6;

        $i8 = r0.<android.widget.NumberPicker: int mInitialScrollOffset>;

        i2 = $i8 - i1;

        if i2 == 0 goto label3;

        $i9 = staticinvoke <java.lang.Math: int abs(int)>(i2);

        $i10 = r0.<android.widget.NumberPicker: int mSelectorElementHeight>;

        $i11 = $i10 / 2;

        if $i9 <= $i11 goto label2;

        if i2 <= 0 goto label1;

        $i13 = r0.<android.widget.NumberPicker: int mSelectorElementHeight>;

        i2 = i2 - $i13;

        goto label2;

     label1:
        $i12 = r0.<android.widget.NumberPicker: int mSelectorElementHeight>;

        i2 = i2 + $i12;

     label2:
        i14 = i0 + i2;

        virtualinvoke r0.<android.widget.NumberPicker: void scrollBy(int,int)>(0, i14);

        return 1;

     label3:
        return 0;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        android.widget.NumberPicker r0;
        android.view.MotionEvent r1;
        int i0, $i2, $i4, $i6, $i8, $i10, $i11, $i14, $i15;
        boolean $z0, $z1, $z2, $z3;
        android.widget.EditText $r2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        long $l1, $l12, $l13;
        byte $b3, $b5, $b7, $b9;
        android.view.ViewParent $r3;
        android.widget.Scroller $r4, $r5, $r6, $r7, $r8, $r9;
        android.widget.NumberPicker$PressedStateHelper $r10, $r11;

        r0 := @this: android.widget.NumberPicker;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = r0.<android.widget.NumberPicker: boolean mHasSelectorWheel>;

        if $z0 == 0 goto label01;

        $z1 = virtualinvoke r0.<android.widget.NumberPicker: boolean isEnabled()>();

        if $z1 != 0 goto label02;

     label01:
        return 0;

     label02:
        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        lookupswitch(i0)
        {
            case 0: goto label03;
            default: goto label11;
        };

     label03:
        specialinvoke r0.<android.widget.NumberPicker: void removeAllCallbacks()>();

        $r2 = r0.<android.widget.NumberPicker: android.widget.EditText mInputText>;

        virtualinvoke $r2.<android.widget.EditText: void setVisibility(int)>(4);

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        r0.<android.widget.NumberPicker: float mLastDownEventY> = $f0;

        r0.<android.widget.NumberPicker: float mLastDownOrMoveEventY> = $f0;

        $l1 = virtualinvoke r1.<android.view.MotionEvent: long getEventTime()>();

        r0.<android.widget.NumberPicker: long mLastDownEventTime> = $l1;

        r0.<android.widget.NumberPicker: boolean mIgnoreMoveEvents> = 0;

        r0.<android.widget.NumberPicker: boolean mPerformClickOnTap> = 0;

        $f2 = r0.<android.widget.NumberPicker: float mLastDownEventY>;

        $i2 = r0.<android.widget.NumberPicker: int mTopSelectionDividerTop>;

        $f1 = (float) $i2;

        $b3 = $f2 cmpg $f1;

        if $b3 >= 0 goto label04;

        $i14 = r0.<android.widget.NumberPicker: int mScrollState>;

        if $i14 != 0 goto label05;

        $r10 = r0.<android.widget.NumberPicker: android.widget.NumberPicker$PressedStateHelper mPressedStateHelper>;

        virtualinvoke $r10.<android.widget.NumberPicker$PressedStateHelper: void buttonPressDelayed(int)>(2);

        goto label05;

     label04:
        $f4 = r0.<android.widget.NumberPicker: float mLastDownEventY>;

        $i4 = r0.<android.widget.NumberPicker: int mBottomSelectionDividerBottom>;

        $f3 = (float) $i4;

        $b5 = $f4 cmpl $f3;

        if $b5 <= 0 goto label05;

        $i15 = r0.<android.widget.NumberPicker: int mScrollState>;

        if $i15 != 0 goto label05;

        $r11 = r0.<android.widget.NumberPicker: android.widget.NumberPicker$PressedStateHelper mPressedStateHelper>;

        virtualinvoke $r11.<android.widget.NumberPicker$PressedStateHelper: void buttonPressDelayed(int)>(1);

     label05:
        $r3 = virtualinvoke r0.<android.widget.NumberPicker: android.view.ViewParent getParent()>();

        interfaceinvoke $r3.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

        $r4 = r0.<android.widget.NumberPicker: android.widget.Scroller mFlingScroller>;

        $z2 = virtualinvoke $r4.<android.widget.Scroller: boolean isFinished()>();

        if $z2 != 0 goto label06;

        $r6 = r0.<android.widget.NumberPicker: android.widget.Scroller mFlingScroller>;

        virtualinvoke $r6.<android.widget.Scroller: void forceFinished(boolean)>(1);

        $r7 = r0.<android.widget.NumberPicker: android.widget.Scroller mAdjustScroller>;

        virtualinvoke $r7.<android.widget.Scroller: void forceFinished(boolean)>(1);

        specialinvoke r0.<android.widget.NumberPicker: void onScrollStateChange(int)>(0);

        goto label10;

     label06:
        $r5 = r0.<android.widget.NumberPicker: android.widget.Scroller mAdjustScroller>;

        $z3 = virtualinvoke $r5.<android.widget.Scroller: boolean isFinished()>();

        if $z3 != 0 goto label07;

        $r8 = r0.<android.widget.NumberPicker: android.widget.Scroller mFlingScroller>;

        virtualinvoke $r8.<android.widget.Scroller: void forceFinished(boolean)>(1);

        $r9 = r0.<android.widget.NumberPicker: android.widget.Scroller mAdjustScroller>;

        virtualinvoke $r9.<android.widget.Scroller: void forceFinished(boolean)>(1);

        goto label10;

     label07:
        $f6 = r0.<android.widget.NumberPicker: float mLastDownEventY>;

        $i6 = r0.<android.widget.NumberPicker: int mTopSelectionDividerTop>;

        $f5 = (float) $i6;

        $b7 = $f6 cmpg $f5;

        if $b7 >= 0 goto label08;

        specialinvoke r0.<android.widget.NumberPicker: void hideSoftInput()>();

        $i11 = staticinvoke <android.view.ViewConfiguration: int getLongPressTimeout()>();

        $l12 = (long) $i11;

        specialinvoke r0.<android.widget.NumberPicker: void postChangeCurrentByOneFromLongPress(boolean,long)>(0, $l12);

        goto label10;

     label08:
        $f8 = r0.<android.widget.NumberPicker: float mLastDownEventY>;

        $i8 = r0.<android.widget.NumberPicker: int mBottomSelectionDividerBottom>;

        $f7 = (float) $i8;

        $b9 = $f8 cmpl $f7;

        if $b9 <= 0 goto label09;

        specialinvoke r0.<android.widget.NumberPicker: void hideSoftInput()>();

        $i10 = staticinvoke <android.view.ViewConfiguration: int getLongPressTimeout()>();

        $l13 = (long) $i10;

        specialinvoke r0.<android.widget.NumberPicker: void postChangeCurrentByOneFromLongPress(boolean,long)>(1, $l13);

        goto label10;

     label09:
        r0.<android.widget.NumberPicker: boolean mPerformClickOnTap> = 1;

        specialinvoke r0.<android.widget.NumberPicker: void postBeginSoftInputOnLongPressCommand()>();

     label10:
        return 1;

     label11:
        return 0;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.widget.NumberPicker r0;
        android.view.MotionEvent r1;
        int i0, i1, i2, i3, i5, $i6, $i7, $i8, $i9, $i10, $i13, $i15, $i17, $i18, i19, i20;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;
        long l4, $l11, $l12, $l16;
        boolean $z0, $z1, $z2, $z4;
        android.view.VelocityTracker $r2, $r3, $r5, $r8, r9;
        android.widget.NumberPicker$PressedStateHelper $r4, $r6, $r7;
        byte $b14;

        r0 := @this: android.widget.NumberPicker;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = virtualinvoke r0.<android.widget.NumberPicker: boolean isEnabled()>();

        if $z0 == 0 goto label01;

        $z1 = r0.<android.widget.NumberPicker: boolean mHasSelectorWheel>;

        if $z1 != 0 goto label02;

     label01:
        return 0;

     label02:
        $r2 = r0.<android.widget.NumberPicker: android.view.VelocityTracker mVelocityTracker>;

        if $r2 != null goto label03;

        $r8 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<android.widget.NumberPicker: android.view.VelocityTracker mVelocityTracker> = $r8;

     label03:
        $r3 = r0.<android.widget.NumberPicker: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r3.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r1);

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        lookupswitch(i0)
        {
            case 1: goto label09;
            case 2: goto label04;
            default: goto label17;
        };

     label04:
        $z2 = r0.<android.widget.NumberPicker: boolean mIgnoreMoveEvents>;

        if $z2 == 0 goto label05;

        goto label17;

     label05:
        f0 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $i6 = r0.<android.widget.NumberPicker: int mScrollState>;

        if $i6 == 1 goto label07;

        $f4 = r0.<android.widget.NumberPicker: float mLastDownEventY>;

        $f3 = f0 - $f4;

        $f5 = staticinvoke <java.lang.Math: float abs(float)>($f3);

        i1 = (int) $f5;

        $i7 = r0.<android.widget.NumberPicker: int mTouchSlop>;

        if i1 <= $i7 goto label06;

        specialinvoke r0.<android.widget.NumberPicker: void removeAllCallbacks()>();

        specialinvoke r0.<android.widget.NumberPicker: void onScrollStateChange(int)>(1);

     label06:
        goto label08;

     label07:
        $f2 = r0.<android.widget.NumberPicker: float mLastDownOrMoveEventY>;

        $f1 = f0 - $f2;

        i19 = (int) $f1;

        virtualinvoke r0.<android.widget.NumberPicker: void scrollBy(int,int)>(0, i19);

        virtualinvoke r0.<android.widget.NumberPicker: void invalidate()>();

     label08:
        r0.<android.widget.NumberPicker: float mLastDownOrMoveEventY> = f0;

        goto label17;

     label09:
        specialinvoke r0.<android.widget.NumberPicker: void removeBeginSoftInputCommand()>();

        specialinvoke r0.<android.widget.NumberPicker: void removeChangeCurrentByOneFromLongPress()>();

        $r4 = r0.<android.widget.NumberPicker: android.widget.NumberPicker$PressedStateHelper mPressedStateHelper>;

        virtualinvoke $r4.<android.widget.NumberPicker$PressedStateHelper: void cancel()>();

        r9 = r0.<android.widget.NumberPicker: android.view.VelocityTracker mVelocityTracker>;

        $i8 = r0.<android.widget.NumberPicker: int mMaximumFlingVelocity>;

        $f7 = (float) $i8;

        virtualinvoke r9.<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>(1000, $f7);

        $f6 = virtualinvoke r9.<android.view.VelocityTracker: float getYVelocity()>();

        i20 = (int) $f6;

        $i10 = staticinvoke <java.lang.Math: int abs(int)>(i20);

        $i9 = r0.<android.widget.NumberPicker: int mMinimumFlingVelocity>;

        if $i10 <= $i9 goto label10;

        specialinvoke r0.<android.widget.NumberPicker: void fling(int)>(i20);

        specialinvoke r0.<android.widget.NumberPicker: void onScrollStateChange(int)>(2);

        goto label16;

     label10:
        $f9 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        i2 = (int) $f9;

        $f11 = (float) i2;

        $f8 = r0.<android.widget.NumberPicker: float mLastDownEventY>;

        $f12 = $f11 - $f8;

        $f10 = staticinvoke <java.lang.Math: float abs(float)>($f12);

        i3 = (int) $f10;

        $l11 = virtualinvoke r1.<android.view.MotionEvent: long getEventTime()>();

        $l12 = r0.<android.widget.NumberPicker: long mLastDownEventTime>;

        l4 = $l11 - $l12;

        $i13 = r0.<android.widget.NumberPicker: int mTouchSlop>;

        if i3 > $i13 goto label14;

        $i15 = staticinvoke <android.view.ViewConfiguration: int getTapTimeout()>();

        $l16 = (long) $i15;

        $b14 = l4 cmp $l16;

        if $b14 >= 0 goto label14;

        $z4 = r0.<android.widget.NumberPicker: boolean mPerformClickOnTap>;

        if $z4 == 0 goto label11;

        r0.<android.widget.NumberPicker: boolean mPerformClickOnTap> = 0;

        virtualinvoke r0.<android.widget.NumberPicker: boolean performClick()>();

        goto label15;

     label11:
        $i17 = r0.<android.widget.NumberPicker: int mSelectorElementHeight>;

        $i18 = i2 / $i17;

        i5 = $i18 - 1;

        if i5 <= 0 goto label12;

        specialinvoke r0.<android.widget.NumberPicker: void changeValueByOne(boolean)>(1);

        $r7 = r0.<android.widget.NumberPicker: android.widget.NumberPicker$PressedStateHelper mPressedStateHelper>;

        virtualinvoke $r7.<android.widget.NumberPicker$PressedStateHelper: void buttonTapped(int)>(1);

        goto label13;

     label12:
        if i5 >= 0 goto label13;

        specialinvoke r0.<android.widget.NumberPicker: void changeValueByOne(boolean)>(0);

        $r6 = r0.<android.widget.NumberPicker: android.widget.NumberPicker$PressedStateHelper mPressedStateHelper>;

        virtualinvoke $r6.<android.widget.NumberPicker$PressedStateHelper: void buttonTapped(int)>(2);

     label13:
        goto label15;

     label14:
        specialinvoke r0.<android.widget.NumberPicker: boolean ensureScrollWheelAdjusted()>();

     label15:
        specialinvoke r0.<android.widget.NumberPicker: void onScrollStateChange(int)>(0);

     label16:
        $r5 = r0.<android.widget.NumberPicker: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r5.<android.view.VelocityTracker: void recycle()>();

        r0.<android.widget.NumberPicker: android.view.VelocityTracker mVelocityTracker> = null;

     label17:
        return 1;
    }

    public boolean dispatchTouchEvent(android.view.MotionEvent)
    {
        android.widget.NumberPicker r0;
        android.view.MotionEvent r1;
        int i0;
        boolean $z0;

        r0 := @this: android.widget.NumberPicker;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        lookupswitch(i0)
        {
            case 1: goto label1;
            case 3: goto label1;
            default: goto label2;
        };

     label1:
        specialinvoke r0.<android.widget.NumberPicker: void removeAllCallbacks()>();

     label2:
        $z0 = specialinvoke r0.<android.widget.LinearLayout: boolean dispatchTouchEvent(android.view.MotionEvent)>(r1);

        return $z0;
    }

    public boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        android.widget.NumberPicker r0;
        android.view.KeyEvent r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0, $z1, $z2, $z4, $z5;
        android.widget.Scroller $r2;

        r0 := @this: android.widget.NumberPicker;

        r1 := @parameter0: android.view.KeyEvent;

        i0 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        lookupswitch(i0)
        {
            case 19: goto label02;
            case 20: goto label02;
            case 23: goto label01;
            case 66: goto label01;
            default: goto label11;
        };

     label01:
        specialinvoke r0.<android.widget.NumberPicker: void removeAllCallbacks()>();

        goto label11;

     label02:
        $z1 = r0.<android.widget.NumberPicker: boolean mHasSelectorWheel>;

        if $z1 != 0 goto label03;

        goto label11;

     label03:
        $i1 = virtualinvoke r1.<android.view.KeyEvent: int getAction()>();

        lookupswitch($i1)
        {
            case 0: goto label04;
            case 1: goto label10;
            default: goto label11;
        };

     label04:
        $z2 = r0.<android.widget.NumberPicker: boolean mWrapSelectorWheel>;

        if $z2 != 0 goto label06;

        if i0 != 20 goto label05;

        $i5 = virtualinvoke r0.<android.widget.NumberPicker: int getValue()>();

        $i6 = virtualinvoke r0.<android.widget.NumberPicker: int getMaxValue()>();

        if $i5 >= $i6 goto label11;

        goto label06;

     label05:
        $i3 = virtualinvoke r0.<android.widget.NumberPicker: int getValue()>();

        $i4 = virtualinvoke r0.<android.widget.NumberPicker: int getMinValue()>();

        if $i3 <= $i4 goto label11;

     label06:
        virtualinvoke r0.<android.widget.NumberPicker: boolean requestFocus()>();

        r0.<android.widget.NumberPicker: int mLastHandledDownDpadKeyCode> = i0;

        specialinvoke r0.<android.widget.NumberPicker: void removeAllCallbacks()>();

        $r2 = r0.<android.widget.NumberPicker: android.widget.Scroller mFlingScroller>;

        $z4 = virtualinvoke $r2.<android.widget.Scroller: boolean isFinished()>();

        if $z4 == 0 goto label09;

        if i0 != 20 goto label07;

        $z5 = 1;

        goto label08;

     label07:
        $z5 = 0;

     label08:
        specialinvoke r0.<android.widget.NumberPicker: void changeValueByOne(boolean)>($z5);

     label09:
        return 1;

     label10:
        $i2 = r0.<android.widget.NumberPicker: int mLastHandledDownDpadKeyCode>;

        if $i2 != i0 goto label11;

        r0.<android.widget.NumberPicker: int mLastHandledDownDpadKeyCode> = -1;

        return 1;

     label11:
        $z0 = specialinvoke r0.<android.widget.LinearLayout: boolean dispatchKeyEvent(android.view.KeyEvent)>(r1);

        return $z0;
    }

    public boolean dispatchTrackballEvent(android.view.MotionEvent)
    {
        android.widget.NumberPicker r0;
        android.view.MotionEvent r1;
        int i0;
        boolean $z0;

        r0 := @this: android.widget.NumberPicker;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        lookupswitch(i0)
        {
            case 1: goto label1;
            case 3: goto label1;
            default: goto label2;
        };

     label1:
        specialinvoke r0.<android.widget.NumberPicker: void removeAllCallbacks()>();

     label2:
        $z0 = specialinvoke r0.<android.widget.LinearLayout: boolean dispatchTrackballEvent(android.view.MotionEvent)>(r1);

        return $z0;
    }

    protected boolean dispatchHoverEvent(android.view.MotionEvent)
    {
        android.widget.NumberPicker r0;
        android.view.MotionEvent r1;
        int i0, i2, $i3, $i4, $i5, $i6, $i7;
        byte b1;
        android.widget.NumberPicker$AccessibilityNodeProviderImpl r2;
        boolean $z0, $z1, $z4;
        android.content.Context $r3;
        android.view.accessibility.AccessibilityManager $r4;
        float $f0;
        android.view.accessibility.AccessibilityNodeProvider $r5;

        r0 := @this: android.widget.NumberPicker;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = r0.<android.widget.NumberPicker: boolean mHasSelectorWheel>;

        if $z0 != 0 goto label1;

        $z4 = specialinvoke r0.<android.widget.LinearLayout: boolean dispatchHoverEvent(android.view.MotionEvent)>(r1);

        return $z4;

     label1:
        $r3 = r0.<android.widget.NumberPicker: android.content.Context mContext>;

        $r4 = staticinvoke <android.view.accessibility.AccessibilityManager: android.view.accessibility.AccessibilityManager getInstance(android.content.Context)>($r3);

        $z1 = virtualinvoke $r4.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z1 == 0 goto label8;

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        i0 = (int) $f0;

        $i3 = r0.<android.widget.NumberPicker: int mTopSelectionDividerTop>;

        if i0 >= $i3 goto label2;

        b1 = 3;

        goto label4;

     label2:
        $i4 = r0.<android.widget.NumberPicker: int mBottomSelectionDividerBottom>;

        if i0 <= $i4 goto label3;

        b1 = 1;

        goto label4;

     label3:
        b1 = 2;

     label4:
        i2 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        $r5 = virtualinvoke r0.<android.widget.NumberPicker: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>();

        r2 = (android.widget.NumberPicker$AccessibilityNodeProviderImpl) $r5;

        tableswitch(i2)
        {
            case 7: goto label6;
            case 8: goto label8;
            case 9: goto label5;
            case 10: goto label7;
            default: goto label8;
        };

     label5:
        virtualinvoke r2.<android.widget.NumberPicker$AccessibilityNodeProviderImpl: void sendAccessibilityEventForVirtualView(int,int)>(b1, 128);

        r0.<android.widget.NumberPicker: int mLastHoveredChildVirtualViewId> = b1;

        virtualinvoke r2.<android.widget.NumberPicker$AccessibilityNodeProviderImpl: boolean performAction(int,int,android.os.Bundle)>(b1, 64, null);

        goto label8;

     label6:
        $i6 = r0.<android.widget.NumberPicker: int mLastHoveredChildVirtualViewId>;

        if $i6 == b1 goto label8;

        $i5 = r0.<android.widget.NumberPicker: int mLastHoveredChildVirtualViewId>;

        if $i5 == -1 goto label8;

        $i7 = r0.<android.widget.NumberPicker: int mLastHoveredChildVirtualViewId>;

        virtualinvoke r2.<android.widget.NumberPicker$AccessibilityNodeProviderImpl: void sendAccessibilityEventForVirtualView(int,int)>($i7, 256);

        virtualinvoke r2.<android.widget.NumberPicker$AccessibilityNodeProviderImpl: void sendAccessibilityEventForVirtualView(int,int)>(b1, 128);

        r0.<android.widget.NumberPicker: int mLastHoveredChildVirtualViewId> = b1;

        virtualinvoke r2.<android.widget.NumberPicker$AccessibilityNodeProviderImpl: boolean performAction(int,int,android.os.Bundle)>(b1, 64, null);

        goto label8;

     label7:
        virtualinvoke r2.<android.widget.NumberPicker$AccessibilityNodeProviderImpl: void sendAccessibilityEventForVirtualView(int,int)>(b1, 256);

        r0.<android.widget.NumberPicker: int mLastHoveredChildVirtualViewId> = -1;

     label8:
        return 0;
    }

    public void computeScroll()
    {
        android.widget.NumberPicker r0;
        android.widget.Scroller r1;
        int i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z2, $z3;

        r0 := @this: android.widget.NumberPicker;

        r1 = r0.<android.widget.NumberPicker: android.widget.Scroller mFlingScroller>;

        $z0 = virtualinvoke r1.<android.widget.Scroller: boolean isFinished()>();

        if $z0 == 0 goto label1;

        r1 = r0.<android.widget.NumberPicker: android.widget.Scroller mAdjustScroller>;

        $z3 = virtualinvoke r1.<android.widget.Scroller: boolean isFinished()>();

        if $z3 == 0 goto label1;

        return;

     label1:
        virtualinvoke r1.<android.widget.Scroller: boolean computeScrollOffset()>();

        i0 = virtualinvoke r1.<android.widget.Scroller: int getCurrY()>();

        $i1 = r0.<android.widget.NumberPicker: int mPreviousScrollerY>;

        if $i1 != 0 goto label2;

        $i4 = virtualinvoke r1.<android.widget.Scroller: int getStartY()>();

        r0.<android.widget.NumberPicker: int mPreviousScrollerY> = $i4;

     label2:
        $i2 = r0.<android.widget.NumberPicker: int mPreviousScrollerY>;

        $i3 = i0 - $i2;

        virtualinvoke r0.<android.widget.NumberPicker: void scrollBy(int,int)>(0, $i3);

        r0.<android.widget.NumberPicker: int mPreviousScrollerY> = i0;

        $z2 = virtualinvoke r1.<android.widget.Scroller: boolean isFinished()>();

        if $z2 == 0 goto label3;

        specialinvoke r0.<android.widget.NumberPicker: void onScrollerFinished(android.widget.Scroller)>(r1);

        goto label4;

     label3:
        virtualinvoke r0.<android.widget.NumberPicker: void invalidate()>();

     label4:
        return;
    }

    public void setEnabled(boolean)
    {
        android.widget.NumberPicker r0;
        boolean z0, $z1, $z2;
        android.widget.EditText $r1;
        android.widget.ImageButton $r2, $r3;

        r0 := @this: android.widget.NumberPicker;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.widget.LinearLayout: void setEnabled(boolean)>(z0);

        $z1 = r0.<android.widget.NumberPicker: boolean mHasSelectorWheel>;

        if $z1 != 0 goto label1;

        $r3 = r0.<android.widget.NumberPicker: android.widget.ImageButton mIncrementButton>;

        virtualinvoke $r3.<android.widget.ImageButton: void setEnabled(boolean)>(z0);

     label1:
        $z2 = r0.<android.widget.NumberPicker: boolean mHasSelectorWheel>;

        if $z2 != 0 goto label2;

        $r2 = r0.<android.widget.NumberPicker: android.widget.ImageButton mDecrementButton>;

        virtualinvoke $r2.<android.widget.ImageButton: void setEnabled(boolean)>(z0);

     label2:
        $r1 = r0.<android.widget.NumberPicker: android.widget.EditText mInputText>;

        virtualinvoke $r1.<android.widget.EditText: void setEnabled(boolean)>(z0);

        return;
    }

    public void scrollBy(int, int)
    {
        android.widget.NumberPicker r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32;
        int[] r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: android.widget.NumberPicker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 = r0.<android.widget.NumberPicker: int[] mSelectorIndices>;

        $z0 = r0.<android.widget.NumberPicker: boolean mWrapSelectorWheel>;

        if $z0 != 0 goto label1;

        if i1 <= 0 goto label1;

        $i32 = r1[1];

        $i31 = r0.<android.widget.NumberPicker: int mMinValue>;

        if $i32 > $i31 goto label1;

        $i30 = r0.<android.widget.NumberPicker: int mInitialScrollOffset>;

        r0.<android.widget.NumberPicker: int mCurrentScrollOffset> = $i30;

        return;

     label1:
        $z1 = r0.<android.widget.NumberPicker: boolean mWrapSelectorWheel>;

        if $z1 != 0 goto label2;

        if i1 >= 0 goto label2;

        $i26 = r1[1];

        $i29 = r0.<android.widget.NumberPicker: int mMaxValue>;

        if $i26 < $i29 goto label2;

        $i27 = r0.<android.widget.NumberPicker: int mInitialScrollOffset>;

        r0.<android.widget.NumberPicker: int mCurrentScrollOffset> = $i27;

        return;

     label2:
        $i2 = r0.<android.widget.NumberPicker: int mCurrentScrollOffset>;

        $i3 = $i2 + i1;

        r0.<android.widget.NumberPicker: int mCurrentScrollOffset> = $i3;

     label3:
        $i5 = r0.<android.widget.NumberPicker: int mCurrentScrollOffset>;

        $i4 = r0.<android.widget.NumberPicker: int mInitialScrollOffset>;

        $i7 = $i5 - $i4;

        $i6 = r0.<android.widget.NumberPicker: int mSelectorTextGapHeight>;

        if $i7 <= $i6 goto label4;

        $i22 = r0.<android.widget.NumberPicker: int mCurrentScrollOffset>;

        $i19 = r0.<android.widget.NumberPicker: int mSelectorElementHeight>;

        $i21 = $i22 - $i19;

        r0.<android.widget.NumberPicker: int mCurrentScrollOffset> = $i21;

        specialinvoke r0.<android.widget.NumberPicker: void decrementSelectorIndices(int[])>(r1);

        $i23 = r1[1];

        specialinvoke r0.<android.widget.NumberPicker: void setValueInternal(int,boolean)>($i23, 1);

        $z3 = r0.<android.widget.NumberPicker: boolean mWrapSelectorWheel>;

        if $z3 != 0 goto label3;

        $i24 = r1[1];

        $i25 = r0.<android.widget.NumberPicker: int mMinValue>;

        if $i24 > $i25 goto label3;

        $i28 = r0.<android.widget.NumberPicker: int mInitialScrollOffset>;

        r0.<android.widget.NumberPicker: int mCurrentScrollOffset> = $i28;

        goto label3;

     label4:
        $i9 = r0.<android.widget.NumberPicker: int mCurrentScrollOffset>;

        $i8 = r0.<android.widget.NumberPicker: int mInitialScrollOffset>;

        $i13 = $i9 - $i8;

        $i10 = r0.<android.widget.NumberPicker: int mSelectorTextGapHeight>;

        $i11 = neg $i10;

        if $i13 >= $i11 goto label5;

        $i15 = r0.<android.widget.NumberPicker: int mCurrentScrollOffset>;

        $i12 = r0.<android.widget.NumberPicker: int mSelectorElementHeight>;

        $i14 = $i15 + $i12;

        r0.<android.widget.NumberPicker: int mCurrentScrollOffset> = $i14;

        specialinvoke r0.<android.widget.NumberPicker: void incrementSelectorIndices(int[])>(r1);

        $i16 = r1[1];

        specialinvoke r0.<android.widget.NumberPicker: void setValueInternal(int,boolean)>($i16, 1);

        $z2 = r0.<android.widget.NumberPicker: boolean mWrapSelectorWheel>;

        if $z2 != 0 goto label4;

        $i17 = r1[1];

        $i18 = r0.<android.widget.NumberPicker: int mMaxValue>;

        if $i17 < $i18 goto label4;

        $i20 = r0.<android.widget.NumberPicker: int mInitialScrollOffset>;

        r0.<android.widget.NumberPicker: int mCurrentScrollOffset> = $i20;

        goto label4;

     label5:
        return;
    }

    protected int computeVerticalScrollOffset()
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @this: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mCurrentScrollOffset>;

        return $i0;
    }

    protected int computeVerticalScrollRange()
    {
        android.widget.NumberPicker r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.widget.NumberPicker;

        $i1 = r0.<android.widget.NumberPicker: int mMaxValue>;

        $i0 = r0.<android.widget.NumberPicker: int mMinValue>;

        $i2 = $i1 - $i0;

        $i4 = $i2 + 1;

        $i3 = r0.<android.widget.NumberPicker: int mSelectorElementHeight>;

        $i5 = $i4 * $i3;

        return $i5;
    }

    protected int computeVerticalScrollExtent()
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @this: android.widget.NumberPicker;

        $i0 = virtualinvoke r0.<android.widget.NumberPicker: int getHeight()>();

        return $i0;
    }

    public int getSolidColor()
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @this: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mSolidColor>;

        return $i0;
    }

    public void setOnValueChangedListener(android.widget.NumberPicker$OnValueChangeListener)
    {
        android.widget.NumberPicker r0;
        android.widget.NumberPicker$OnValueChangeListener r1;

        r0 := @this: android.widget.NumberPicker;

        r1 := @parameter0: android.widget.NumberPicker$OnValueChangeListener;

        r0.<android.widget.NumberPicker: android.widget.NumberPicker$OnValueChangeListener mOnValueChangeListener> = r1;

        return;
    }

    public void setOnScrollListener(android.widget.NumberPicker$OnScrollListener)
    {
        android.widget.NumberPicker r0;
        android.widget.NumberPicker$OnScrollListener r1;

        r0 := @this: android.widget.NumberPicker;

        r1 := @parameter0: android.widget.NumberPicker$OnScrollListener;

        r0.<android.widget.NumberPicker: android.widget.NumberPicker$OnScrollListener mOnScrollListener> = r1;

        return;
    }

    public void setFormatter(android.widget.NumberPicker$Formatter)
    {
        android.widget.NumberPicker r0;
        android.widget.NumberPicker$Formatter r1, $r2;

        r0 := @this: android.widget.NumberPicker;

        r1 := @parameter0: android.widget.NumberPicker$Formatter;

        $r2 = r0.<android.widget.NumberPicker: android.widget.NumberPicker$Formatter mFormatter>;

        if r1 != $r2 goto label1;

        return;

     label1:
        r0.<android.widget.NumberPicker: android.widget.NumberPicker$Formatter mFormatter> = r1;

        specialinvoke r0.<android.widget.NumberPicker: void initializeSelectorWheelIndices()>();

        specialinvoke r0.<android.widget.NumberPicker: boolean updateInputTextView()>();

        return;
    }

    public void setValue(int)
    {
        android.widget.NumberPicker r0;
        int i0;

        r0 := @this: android.widget.NumberPicker;

        i0 := @parameter0: int;

        specialinvoke r0.<android.widget.NumberPicker: void setValueInternal(int,boolean)>(i0, 0);

        return;
    }

    public boolean performClick()
    {
        android.widget.NumberPicker r0;
        boolean $z0, $z1, $z2;

        r0 := @this: android.widget.NumberPicker;

        $z0 = r0.<android.widget.NumberPicker: boolean mHasSelectorWheel>;

        if $z0 != 0 goto label1;

        $z2 = specialinvoke r0.<android.widget.LinearLayout: boolean performClick()>();

        return $z2;

     label1:
        $z1 = specialinvoke r0.<android.widget.LinearLayout: boolean performClick()>();

        if $z1 != 0 goto label2;

        specialinvoke r0.<android.widget.NumberPicker: void showSoftInput()>();

     label2:
        return 1;
    }

    public boolean performLongClick()
    {
        android.widget.NumberPicker r0;
        boolean $z0, $z1, $z2;

        r0 := @this: android.widget.NumberPicker;

        $z0 = r0.<android.widget.NumberPicker: boolean mHasSelectorWheel>;

        if $z0 != 0 goto label1;

        $z2 = specialinvoke r0.<android.widget.LinearLayout: boolean performLongClick()>();

        return $z2;

     label1:
        $z1 = specialinvoke r0.<android.widget.LinearLayout: boolean performLongClick()>();

        if $z1 != 0 goto label2;

        specialinvoke r0.<android.widget.NumberPicker: void showSoftInput()>();

        r0.<android.widget.NumberPicker: boolean mIgnoreMoveEvents> = 1;

     label2:
        return 1;
    }

    private void showSoftInput()
    {
        android.widget.NumberPicker r0;
        android.view.inputmethod.InputMethodManager r1;
        boolean $z0;
        android.widget.EditText $r2, $r3, $r4;

        r0 := @this: android.widget.NumberPicker;

        r1 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        if r1 == null goto label2;

        $z0 = r0.<android.widget.NumberPicker: boolean mHasSelectorWheel>;

        if $z0 == 0 goto label1;

        $r4 = r0.<android.widget.NumberPicker: android.widget.EditText mInputText>;

        virtualinvoke $r4.<android.widget.EditText: void setVisibility(int)>(0);

     label1:
        $r2 = r0.<android.widget.NumberPicker: android.widget.EditText mInputText>;

        virtualinvoke $r2.<android.widget.EditText: boolean requestFocus()>();

        $r3 = r0.<android.widget.NumberPicker: android.widget.EditText mInputText>;

        virtualinvoke r1.<android.view.inputmethod.InputMethodManager: boolean showSoftInput(android.view.View,int)>($r3, 0);

     label2:
        return;
    }

    private void hideSoftInput()
    {
        android.widget.NumberPicker r0;
        android.view.inputmethod.InputMethodManager r1;
        android.widget.EditText $r2, $r4;
        boolean $z0, $z2;
        android.os.IBinder $r3;

        r0 := @this: android.widget.NumberPicker;

        r1 = staticinvoke <android.view.inputmethod.InputMethodManager: android.view.inputmethod.InputMethodManager peekInstance()>();

        if r1 == null goto label1;

        $r2 = r0.<android.widget.NumberPicker: android.widget.EditText mInputText>;

        $z0 = virtualinvoke r1.<android.view.inputmethod.InputMethodManager: boolean isActive(android.view.View)>($r2);

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<android.widget.NumberPicker: android.os.IBinder getWindowToken()>();

        virtualinvoke r1.<android.view.inputmethod.InputMethodManager: boolean hideSoftInputFromWindow(android.os.IBinder,int)>($r3, 0);

        $z2 = r0.<android.widget.NumberPicker: boolean mHasSelectorWheel>;

        if $z2 == 0 goto label1;

        $r4 = r0.<android.widget.NumberPicker: android.widget.EditText mInputText>;

        virtualinvoke $r4.<android.widget.EditText: void setVisibility(int)>(4);

     label1:
        return;
    }

    private void tryComputeMaxWidth()
    {
        android.widget.NumberPicker r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i10, i11, i12, i13, i14;
        float f0, f1, $f2, $f3, $f4, f5;
        boolean $z0;
        java.lang.String[] $r1, $r2, $r6;
        android.widget.EditText $r3, $r4;
        java.lang.String $r5, $r8;
        android.graphics.Paint $r7, $r9;
        byte $b8, $b9;

        r0 := @this: android.widget.NumberPicker;

        $z0 = r0.<android.widget.NumberPicker: boolean mComputeMaxWidth>;

        if $z0 != 0 goto label01;

        return;

     label01:
        i0 = 0;

        $r1 = r0.<android.widget.NumberPicker: java.lang.String[] mDisplayedValues>;

        if $r1 != null goto label07;

        f0 = 0.0F;

        i1 = 0;

     label02:
        if i1 > 9 goto label04;

        $r9 = r0.<android.widget.NumberPicker: android.graphics.Paint mSelectorWheelPaint>;

        $r8 = staticinvoke <android.widget.NumberPicker: java.lang.String formatNumberWithLocale(int)>(i1);

        f1 = virtualinvoke $r9.<android.graphics.Paint: float measureText(java.lang.String)>($r8);

        $b9 = f1 cmpl f0;

        if $b9 <= 0 goto label03;

        f0 = f1;

     label03:
        i1 = i1 + 1;

        goto label02;

     label04:
        i10 = 0;

        i11 = r0.<android.widget.NumberPicker: int mMaxValue>;

     label05:
        if i11 <= 0 goto label06;

        i10 = i10 + 1;

        i11 = i11 / 10;

        goto label05;

     label06:
        $f4 = (float) i10;

        $f3 = $f4 * f0;

        i0 = (int) $f3;

        goto label10;

     label07:
        $r2 = r0.<android.widget.NumberPicker: java.lang.String[] mDisplayedValues>;

        i12 = lengthof $r2;

        i13 = 0;

     label08:
        if i13 >= i12 goto label10;

        $r7 = r0.<android.widget.NumberPicker: android.graphics.Paint mSelectorWheelPaint>;

        $r6 = r0.<android.widget.NumberPicker: java.lang.String[] mDisplayedValues>;

        $r5 = $r6[i13];

        f5 = virtualinvoke $r7.<android.graphics.Paint: float measureText(java.lang.String)>($r5);

        $f2 = (float) i0;

        $b8 = f5 cmpl $f2;

        if $b8 <= 0 goto label09;

        i0 = (int) f5;

     label09:
        i13 = i13 + 1;

        goto label08;

     label10:
        $r3 = r0.<android.widget.NumberPicker: android.widget.EditText mInputText>;

        $i2 = virtualinvoke $r3.<android.widget.EditText: int getPaddingLeft()>();

        $r4 = r0.<android.widget.NumberPicker: android.widget.EditText mInputText>;

        $i3 = virtualinvoke $r4.<android.widget.EditText: int getPaddingRight()>();

        $i4 = $i2 + $i3;

        i14 = i0 + $i4;

        $i5 = r0.<android.widget.NumberPicker: int mMaxWidth>;

        if $i5 == i14 goto label13;

        $i6 = r0.<android.widget.NumberPicker: int mMinWidth>;

        if i14 <= $i6 goto label11;

        r0.<android.widget.NumberPicker: int mMaxWidth> = i14;

        goto label12;

     label11:
        $i7 = r0.<android.widget.NumberPicker: int mMinWidth>;

        r0.<android.widget.NumberPicker: int mMaxWidth> = $i7;

     label12:
        virtualinvoke r0.<android.widget.NumberPicker: void invalidate()>();

     label13:
        return;
    }

    public boolean getWrapSelectorWheel()
    {
        android.widget.NumberPicker r0;
        boolean $z0;

        r0 := @this: android.widget.NumberPicker;

        $z0 = r0.<android.widget.NumberPicker: boolean mWrapSelectorWheel>;

        return $z0;
    }

    public void setWrapSelectorWheel(boolean)
    {
        android.widget.NumberPicker r0;
        boolean z0, z1, $z2, $z3;
        int $i0, $i1, $i2, $i3;
        int[] $r1;

        r0 := @this: android.widget.NumberPicker;

        z0 := @parameter0: boolean;

        $i1 = r0.<android.widget.NumberPicker: int mMaxValue>;

        $i0 = r0.<android.widget.NumberPicker: int mMinValue>;

        $i3 = $i1 - $i0;

        $r1 = r0.<android.widget.NumberPicker: int[] mSelectorIndices>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        z1 = $z3;

        if z0 == 0 goto label3;

        if z1 == 0 goto label4;

     label3:
        $z2 = r0.<android.widget.NumberPicker: boolean mWrapSelectorWheel>;

        if z0 == $z2 goto label4;

        r0.<android.widget.NumberPicker: boolean mWrapSelectorWheel> = z0;

     label4:
        return;
    }

    public void setOnLongPressUpdateInterval(long)
    {
        android.widget.NumberPicker r0;
        long l0;

        r0 := @this: android.widget.NumberPicker;

        l0 := @parameter0: long;

        r0.<android.widget.NumberPicker: long mLongPressUpdateInterval> = l0;

        return;
    }

    public int getValue()
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @this: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mValue>;

        return $i0;
    }

    public int getMinValue()
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @this: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mMinValue>;

        return $i0;
    }

    public void setMinValue(int)
    {
        android.widget.NumberPicker r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean z0, $z2;
        int[] $r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.widget.NumberPicker;

        i0 := @parameter0: int;

        $i1 = r0.<android.widget.NumberPicker: int mMinValue>;

        if $i1 != i0 goto label1;

        return;

     label1:
        if i0 >= 0 goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("minValue must be >= 0");

        throw $r2;

     label2:
        r0.<android.widget.NumberPicker: int mMinValue> = i0;

        $i3 = r0.<android.widget.NumberPicker: int mMinValue>;

        $i2 = r0.<android.widget.NumberPicker: int mValue>;

        if $i3 <= $i2 goto label3;

        $i8 = r0.<android.widget.NumberPicker: int mMinValue>;

        r0.<android.widget.NumberPicker: int mValue> = $i8;

     label3:
        $i5 = r0.<android.widget.NumberPicker: int mMaxValue>;

        $i4 = r0.<android.widget.NumberPicker: int mMinValue>;

        $i7 = $i5 - $i4;

        $r1 = r0.<android.widget.NumberPicker: int[] mSelectorIndices>;

        $i6 = lengthof $r1;

        if $i7 <= $i6 goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        z0 = $z2;

        virtualinvoke r0.<android.widget.NumberPicker: void setWrapSelectorWheel(boolean)>(z0);

        specialinvoke r0.<android.widget.NumberPicker: void initializeSelectorWheelIndices()>();

        specialinvoke r0.<android.widget.NumberPicker: boolean updateInputTextView()>();

        specialinvoke r0.<android.widget.NumberPicker: void tryComputeMaxWidth()>();

        virtualinvoke r0.<android.widget.NumberPicker: void invalidate()>();

        return;
    }

    public int getMaxValue()
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @this: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mMaxValue>;

        return $i0;
    }

    public void setMaxValue(int)
    {
        android.widget.NumberPicker r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean z0, $z2;
        int[] $r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: android.widget.NumberPicker;

        i0 := @parameter0: int;

        $i1 = r0.<android.widget.NumberPicker: int mMaxValue>;

        if $i1 != i0 goto label1;

        return;

     label1:
        if i0 >= 0 goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("maxValue must be >= 0");

        throw $r2;

     label2:
        r0.<android.widget.NumberPicker: int mMaxValue> = i0;

        $i3 = r0.<android.widget.NumberPicker: int mMaxValue>;

        $i2 = r0.<android.widget.NumberPicker: int mValue>;

        if $i3 >= $i2 goto label3;

        $i8 = r0.<android.widget.NumberPicker: int mMaxValue>;

        r0.<android.widget.NumberPicker: int mValue> = $i8;

     label3:
        $i5 = r0.<android.widget.NumberPicker: int mMaxValue>;

        $i4 = r0.<android.widget.NumberPicker: int mMinValue>;

        $i7 = $i5 - $i4;

        $r1 = r0.<android.widget.NumberPicker: int[] mSelectorIndices>;

        $i6 = lengthof $r1;

        if $i7 <= $i6 goto label4;

        $z2 = 1;

        goto label5;

     label4:
        $z2 = 0;

     label5:
        z0 = $z2;

        virtualinvoke r0.<android.widget.NumberPicker: void setWrapSelectorWheel(boolean)>(z0);

        specialinvoke r0.<android.widget.NumberPicker: void initializeSelectorWheelIndices()>();

        specialinvoke r0.<android.widget.NumberPicker: boolean updateInputTextView()>();

        specialinvoke r0.<android.widget.NumberPicker: void tryComputeMaxWidth()>();

        virtualinvoke r0.<android.widget.NumberPicker: void invalidate()>();

        return;
    }

    public java.lang.String[] getDisplayedValues()
    {
        android.widget.NumberPicker r0;
        java.lang.String[] $r1;

        r0 := @this: android.widget.NumberPicker;

        $r1 = r0.<android.widget.NumberPicker: java.lang.String[] mDisplayedValues>;

        return $r1;
    }

    public void setDisplayedValues(java.lang.String[])
    {
        android.widget.NumberPicker r0;
        java.lang.String[] r1, $r2, $r3;
        android.widget.EditText $r4, $r5;

        r0 := @this: android.widget.NumberPicker;

        r1 := @parameter0: java.lang.String[];

        $r2 = r0.<android.widget.NumberPicker: java.lang.String[] mDisplayedValues>;

        if $r2 != r1 goto label1;

        return;

     label1:
        r0.<android.widget.NumberPicker: java.lang.String[] mDisplayedValues> = r1;

        $r3 = r0.<android.widget.NumberPicker: java.lang.String[] mDisplayedValues>;

        if $r3 == null goto label2;

        $r5 = r0.<android.widget.NumberPicker: android.widget.EditText mInputText>;

        virtualinvoke $r5.<android.widget.EditText: void setRawInputType(int)>(524289);

        goto label3;

     label2:
        $r4 = r0.<android.widget.NumberPicker: android.widget.EditText mInputText>;

        virtualinvoke $r4.<android.widget.EditText: void setRawInputType(int)>(2);

     label3:
        specialinvoke r0.<android.widget.NumberPicker: boolean updateInputTextView()>();

        specialinvoke r0.<android.widget.NumberPicker: void initializeSelectorWheelIndices()>();

        specialinvoke r0.<android.widget.NumberPicker: void tryComputeMaxWidth()>();

        return;
    }

    protected float getTopFadingEdgeStrength()
    {
        android.widget.NumberPicker r0;

        r0 := @this: android.widget.NumberPicker;

        return 0.9F;
    }

    protected float getBottomFadingEdgeStrength()
    {
        android.widget.NumberPicker r0;

        r0 := @this: android.widget.NumberPicker;

        return 0.9F;
    }

    protected void onDetachedFromWindow()
    {
        android.widget.NumberPicker r0;

        r0 := @this: android.widget.NumberPicker;

        specialinvoke r0.<android.widget.LinearLayout: void onDetachedFromWindow()>();

        specialinvoke r0.<android.widget.NumberPicker: void removeAllCallbacks()>();

        return;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        android.widget.NumberPicker r0;
        android.graphics.Canvas r1;
        boolean z0, $z1, $z2, $z3, $z4, $z7;
        float f0, f1, $f2;
        int[] r2, $r14, $r16;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21, i22, i23;
        java.lang.String r3;
        android.graphics.drawable.Drawable $r4, $r5, $r6, $r7, $r9, $r12, $r15, $r17, $r18, $r19, $r20, $r21;
        android.util.SparseArray $r8;
        java.lang.Object $r10;
        android.widget.EditText $r11;
        android.graphics.Paint $r13;

        r0 := @this: android.widget.NumberPicker;

        r1 := @parameter0: android.graphics.Canvas;

        $z1 = r0.<android.widget.NumberPicker: boolean mHasSelectorWheel>;

        if $z1 != 0 goto label01;

        specialinvoke r0.<android.widget.LinearLayout: void onDraw(android.graphics.Canvas)>(r1);

        return;

     label01:
        $z2 = r0.<android.widget.NumberPicker: boolean mHideWheelUntilFocused>;

        if $z2 == 0 goto label02;

        $z7 = virtualinvoke r0.<android.widget.NumberPicker: boolean hasFocus()>();

        goto label03;

     label02:
        $z7 = 1;

     label03:
        z0 = $z7;

        $i4 = r0.<android.widget.NumberPicker: int mRight>;

        $i3 = r0.<android.widget.NumberPicker: int mLeft>;

        $i5 = $i4 - $i3;

        $i6 = $i5 / 2;

        f0 = (float) $i6;

        $i8 = r0.<android.widget.NumberPicker: int mCurrentScrollOffset>;

        f1 = (float) $i8;

        if z0 == 0 goto label05;

        $r12 = r0.<android.widget.NumberPicker: android.graphics.drawable.Drawable mVirtualButtonPressedDrawable>;

        if $r12 == null goto label05;

        $i14 = r0.<android.widget.NumberPicker: int mScrollState>;

        if $i14 != 0 goto label05;

        $z3 = r0.<android.widget.NumberPicker: boolean mDecrementVirtualButtonPressed>;

        if $z3 == 0 goto label04;

        $r17 = r0.<android.widget.NumberPicker: android.graphics.drawable.Drawable mVirtualButtonPressedDrawable>;

        $r16 = <android.widget.NumberPicker: int[] PRESSED_STATE_SET>;

        virtualinvoke $r17.<android.graphics.drawable.Drawable: boolean setState(int[])>($r16);

        $r20 = r0.<android.widget.NumberPicker: android.graphics.drawable.Drawable mVirtualButtonPressedDrawable>;

        $i19 = r0.<android.widget.NumberPicker: int mRight>;

        $i20 = r0.<android.widget.NumberPicker: int mTopSelectionDividerTop>;

        virtualinvoke $r20.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i19, $i20);

        $r21 = r0.<android.widget.NumberPicker: android.graphics.drawable.Drawable mVirtualButtonPressedDrawable>;

        virtualinvoke $r21.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

     label04:
        $z4 = r0.<android.widget.NumberPicker: boolean mIncrementVirtualButtonPressed>;

        if $z4 == 0 goto label05;

        $r15 = r0.<android.widget.NumberPicker: android.graphics.drawable.Drawable mVirtualButtonPressedDrawable>;

        $r14 = <android.widget.NumberPicker: int[] PRESSED_STATE_SET>;

        virtualinvoke $r15.<android.graphics.drawable.Drawable: boolean setState(int[])>($r14);

        $r18 = r0.<android.widget.NumberPicker: android.graphics.drawable.Drawable mVirtualButtonPressedDrawable>;

        $i17 = r0.<android.widget.NumberPicker: int mBottomSelectionDividerBottom>;

        $i16 = r0.<android.widget.NumberPicker: int mRight>;

        $i18 = r0.<android.widget.NumberPicker: int mBottom>;

        virtualinvoke $r18.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, $i17, $i16, $i18);

        $r19 = r0.<android.widget.NumberPicker: android.graphics.drawable.Drawable mVirtualButtonPressedDrawable>;

        virtualinvoke $r19.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

     label05:
        r2 = r0.<android.widget.NumberPicker: int[] mSelectorIndices>;

        i0 = 0;

     label06:
        $i7 = lengthof r2;

        if i0 >= $i7 goto label10;

        i1 = r2[i0];

        $r8 = r0.<android.widget.NumberPicker: android.util.SparseArray mSelectorIndexToStringCache>;

        $r10 = virtualinvoke $r8.<android.util.SparseArray: java.lang.Object get(int)>(i1);

        r3 = (java.lang.String) $r10;

        if z0 == 0 goto label07;

        if i0 != 1 goto label08;

     label07:
        if i0 != 1 goto label09;

        $r11 = r0.<android.widget.NumberPicker: android.widget.EditText mInputText>;

        $i15 = virtualinvoke $r11.<android.widget.EditText: int getVisibility()>();

        if $i15 == 0 goto label09;

     label08:
        $r13 = r0.<android.widget.NumberPicker: android.graphics.Paint mSelectorWheelPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>(r3, f0, f1, $r13);

     label09:
        $i13 = r0.<android.widget.NumberPicker: int mSelectorElementHeight>;

        $f2 = (float) $i13;

        f1 = f1 + $f2;

        i0 = i0 + 1;

        goto label06;

     label10:
        if z0 == 0 goto label11;

        $r4 = r0.<android.widget.NumberPicker: android.graphics.drawable.Drawable mSelectionDivider>;

        if $r4 == null goto label11;

        i21 = r0.<android.widget.NumberPicker: int mTopSelectionDividerTop>;

        $i9 = r0.<android.widget.NumberPicker: int mSelectionDividerHeight>;

        i22 = i21 + $i9;

        $r5 = r0.<android.widget.NumberPicker: android.graphics.drawable.Drawable mSelectionDivider>;

        $i10 = r0.<android.widget.NumberPicker: int mRight>;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, i21, $i10, i22);

        $r6 = r0.<android.widget.NumberPicker: android.graphics.drawable.Drawable mSelectionDivider>;

        virtualinvoke $r6.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        i23 = r0.<android.widget.NumberPicker: int mBottomSelectionDividerBottom>;

        $i11 = r0.<android.widget.NumberPicker: int mSelectionDividerHeight>;

        i2 = i23 - $i11;

        $r7 = r0.<android.widget.NumberPicker: android.graphics.drawable.Drawable mSelectionDivider>;

        $i12 = r0.<android.widget.NumberPicker: int mRight>;

        virtualinvoke $r7.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, i2, $i12, i23);

        $r9 = r0.<android.widget.NumberPicker: android.graphics.drawable.Drawable mSelectionDivider>;

        virtualinvoke $r9.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

     label11:
        return;
    }

    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.widget.NumberPicker r0;
        android.view.accessibility.AccessibilityEvent r1;
        java.lang.Class $r2;
        java.lang.String $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;

        r0 := @this: android.widget.NumberPicker;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.widget.LinearLayout: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        $r2 = class "android/widget/NumberPicker";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r3);

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setScrollable(boolean)>(1);

        $i1 = r0.<android.widget.NumberPicker: int mMinValue>;

        $i0 = r0.<android.widget.NumberPicker: int mValue>;

        $i3 = $i1 + $i0;

        $i2 = r0.<android.widget.NumberPicker: int mSelectorElementHeight>;

        $i4 = $i3 * $i2;

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setScrollY(int)>($i4);

        $i6 = r0.<android.widget.NumberPicker: int mMaxValue>;

        $i5 = r0.<android.widget.NumberPicker: int mMinValue>;

        $i8 = $i6 - $i5;

        $i7 = r0.<android.widget.NumberPicker: int mSelectorElementHeight>;

        $i9 = $i8 * $i7;

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setMaxScrollY(int)>($i9);

        return;
    }

    public android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
    {
        android.widget.NumberPicker r0;
        boolean $z0;
        android.widget.NumberPicker$AccessibilityNodeProviderImpl $r1, $r2, $r3;
        android.view.accessibility.AccessibilityNodeProvider $r4;

        r0 := @this: android.widget.NumberPicker;

        $z0 = r0.<android.widget.NumberPicker: boolean mHasSelectorWheel>;

        if $z0 != 0 goto label1;

        $r4 = specialinvoke r0.<android.widget.LinearLayout: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()>();

        return $r4;

     label1:
        $r1 = r0.<android.widget.NumberPicker: android.widget.NumberPicker$AccessibilityNodeProviderImpl mAccessibilityNodeProvider>;

        if $r1 != null goto label2;

        $r3 = new android.widget.NumberPicker$AccessibilityNodeProviderImpl;

        specialinvoke $r3.<android.widget.NumberPicker$AccessibilityNodeProviderImpl: void <init>(android.widget.NumberPicker)>(r0);

        r0.<android.widget.NumberPicker: android.widget.NumberPicker$AccessibilityNodeProviderImpl mAccessibilityNodeProvider> = $r3;

     label2:
        $r2 = r0.<android.widget.NumberPicker: android.widget.NumberPicker$AccessibilityNodeProviderImpl mAccessibilityNodeProvider>;

        return $r2;
    }

    private int makeMeasureSpec(int, int)
    {
        android.widget.NumberPicker r0;
        int i0, i1, i2, i3, $i4, $i5, $i6;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: android.widget.NumberPicker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 != -1 goto label1;

        return i0;

     label1:
        i2 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        lookupswitch(i3)
        {
            case -2147483648: goto label3;
            case 0: goto label4;
            case 1073741824: goto label2;
            default: goto label5;
        };

     label2:
        return i0;

     label3:
        $i5 = staticinvoke <java.lang.Math: int min(int,int)>(i2, i1);

        $i6 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i5, 1073741824);

        return $i6;

     label4:
        $i4 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i1, 1073741824);

        return $i4;

     label5:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown measure mode: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;
    }

    private int resolveSizeAndStateRespectingMinSize(int, int, int)
    {
        android.widget.NumberPicker r0;
        int i0, i1, i2, i3, $i4;

        r0 := @this: android.widget.NumberPicker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        if i0 == -1 goto label1;

        i3 = staticinvoke <java.lang.Math: int max(int,int)>(i0, i1);

        $i4 = staticinvoke <android.widget.NumberPicker: int resolveSizeAndState(int,int,int)>(i3, i2, 0);

        return $i4;

     label1:
        return i1;
    }

    private void initializeSelectorWheelIndices()
    {
        android.widget.NumberPicker r0;
        int[] r1, $r3;
        int i0, i1, i2, $i3, $i4, $i5;
        android.util.SparseArray $r2;
        boolean $z0;

        r0 := @this: android.widget.NumberPicker;

        $r2 = r0.<android.widget.NumberPicker: android.util.SparseArray mSelectorIndexToStringCache>;

        virtualinvoke $r2.<android.util.SparseArray: void clear()>();

        r1 = r0.<android.widget.NumberPicker: int[] mSelectorIndices>;

        i0 = virtualinvoke r0.<android.widget.NumberPicker: int getValue()>();

        i1 = 0;

     label1:
        $r3 = r0.<android.widget.NumberPicker: int[] mSelectorIndices>;

        $i3 = lengthof $r3;

        if i1 >= $i3 goto label3;

        $i4 = i1 - 1;

        i2 = i0 + $i4;

        $z0 = r0.<android.widget.NumberPicker: boolean mWrapSelectorWheel>;

        if $z0 == 0 goto label2;

        i2 = specialinvoke r0.<android.widget.NumberPicker: int getWrappedSelectorIndex(int)>(i2);

     label2:
        r1[i1] = i2;

        $i5 = r1[i1];

        specialinvoke r0.<android.widget.NumberPicker: void ensureCachedScrollSelectorValue(int)>($i5);

        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    private void setValueInternal(int, boolean)
    {
        android.widget.NumberPicker r0;
        int i0, i1, $i2, $i3, $i4, i5, i6;
        boolean z0, $z1;

        r0 := @this: android.widget.NumberPicker;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $i2 = r0.<android.widget.NumberPicker: int mValue>;

        if $i2 != i0 goto label1;

        return;

     label1:
        $z1 = r0.<android.widget.NumberPicker: boolean mWrapSelectorWheel>;

        if $z1 == 0 goto label2;

        i5 = specialinvoke r0.<android.widget.NumberPicker: int getWrappedSelectorIndex(int)>(i0);

        goto label3;

     label2:
        $i3 = r0.<android.widget.NumberPicker: int mMinValue>;

        i6 = staticinvoke <java.lang.Math: int max(int,int)>(i0, $i3);

        $i4 = r0.<android.widget.NumberPicker: int mMaxValue>;

        i5 = staticinvoke <java.lang.Math: int min(int,int)>(i6, $i4);

     label3:
        i1 = r0.<android.widget.NumberPicker: int mValue>;

        r0.<android.widget.NumberPicker: int mValue> = i5;

        specialinvoke r0.<android.widget.NumberPicker: boolean updateInputTextView()>();

        if z0 == 0 goto label4;

        specialinvoke r0.<android.widget.NumberPicker: void notifyChange(int,int)>(i1, i5);

     label4:
        specialinvoke r0.<android.widget.NumberPicker: void initializeSelectorWheelIndices()>();

        virtualinvoke r0.<android.widget.NumberPicker: void invalidate()>();

        return;
    }

    private void changeValueByOne(boolean)
    {
        android.widget.NumberPicker r0;
        boolean z0, $z1, $z2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.widget.EditText $r1;
        android.widget.Scroller $r2, $r3, $r4, $r5;

        r0 := @this: android.widget.NumberPicker;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.widget.NumberPicker: boolean mHasSelectorWheel>;

        if $z1 == 0 goto label4;

        $r1 = r0.<android.widget.NumberPicker: android.widget.EditText mInputText>;

        virtualinvoke $r1.<android.widget.EditText: void setVisibility(int)>(4);

        $r2 = r0.<android.widget.NumberPicker: android.widget.Scroller mFlingScroller>;

        $z2 = specialinvoke r0.<android.widget.NumberPicker: boolean moveToFinalScrollerPosition(android.widget.Scroller)>($r2);

        if $z2 != 0 goto label1;

        $r5 = r0.<android.widget.NumberPicker: android.widget.Scroller mAdjustScroller>;

        specialinvoke r0.<android.widget.NumberPicker: boolean moveToFinalScrollerPosition(android.widget.Scroller)>($r5);

     label1:
        r0.<android.widget.NumberPicker: int mPreviousScrollerY> = 0;

        if z0 == 0 goto label2;

        $r4 = r0.<android.widget.NumberPicker: android.widget.Scroller mFlingScroller>;

        $i5 = r0.<android.widget.NumberPicker: int mSelectorElementHeight>;

        $i6 = neg $i5;

        virtualinvoke $r4.<android.widget.Scroller: void startScroll(int,int,int,int,int)>(0, 0, 0, $i6, 300);

        goto label3;

     label2:
        $r3 = r0.<android.widget.NumberPicker: android.widget.Scroller mFlingScroller>;

        $i4 = r0.<android.widget.NumberPicker: int mSelectorElementHeight>;

        virtualinvoke $r3.<android.widget.Scroller: void startScroll(int,int,int,int,int)>(0, 0, 0, $i4, 300);

     label3:
        virtualinvoke r0.<android.widget.NumberPicker: void invalidate()>();

        goto label6;

     label4:
        if z0 == 0 goto label5;

        $i2 = r0.<android.widget.NumberPicker: int mValue>;

        $i3 = $i2 + 1;

        specialinvoke r0.<android.widget.NumberPicker: void setValueInternal(int,boolean)>($i3, 1);

        goto label6;

     label5:
        $i0 = r0.<android.widget.NumberPicker: int mValue>;

        $i1 = $i0 - 1;

        specialinvoke r0.<android.widget.NumberPicker: void setValueInternal(int,boolean)>($i1, 1);

     label6:
        return;
    }

    private void initializeSelectorWheel()
    {
        android.widget.NumberPicker r0;
        int[] r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        float f0, f1, $f2, $f3;
        android.widget.EditText $r2, $r3;

        r0 := @this: android.widget.NumberPicker;

        specialinvoke r0.<android.widget.NumberPicker: void initializeSelectorWheelIndices()>();

        r1 = r0.<android.widget.NumberPicker: int[] mSelectorIndices>;

        $i3 = lengthof r1;

        $i2 = r0.<android.widget.NumberPicker: int mTextSize>;

        i0 = $i3 * $i2;

        $i5 = r0.<android.widget.NumberPicker: int mBottom>;

        $i4 = r0.<android.widget.NumberPicker: int mTop>;

        $i6 = $i5 - $i4;

        $i7 = $i6 - i0;

        f0 = (float) $i7;

        $i8 = lengthof r1;

        f1 = (float) $i8;

        $f2 = f0 / f1;

        $f3 = $f2 + 0.5F;

        $i9 = (int) $f3;

        r0.<android.widget.NumberPicker: int mSelectorTextGapHeight> = $i9;

        $i10 = r0.<android.widget.NumberPicker: int mTextSize>;

        $i11 = r0.<android.widget.NumberPicker: int mSelectorTextGapHeight>;

        $i12 = $i10 + $i11;

        r0.<android.widget.NumberPicker: int mSelectorElementHeight> = $i12;

        $r2 = r0.<android.widget.NumberPicker: android.widget.EditText mInputText>;

        $i13 = virtualinvoke $r2.<android.widget.EditText: int getBaseline()>();

        $r3 = r0.<android.widget.NumberPicker: android.widget.EditText mInputText>;

        $i15 = virtualinvoke $r3.<android.widget.EditText: int getTop()>();

        i1 = $i13 + $i15;

        $i14 = r0.<android.widget.NumberPicker: int mSelectorElementHeight>;

        $i17 = $i14 * 1;

        $i16 = i1 - $i17;

        r0.<android.widget.NumberPicker: int mInitialScrollOffset> = $i16;

        $i18 = r0.<android.widget.NumberPicker: int mInitialScrollOffset>;

        r0.<android.widget.NumberPicker: int mCurrentScrollOffset> = $i18;

        specialinvoke r0.<android.widget.NumberPicker: boolean updateInputTextView()>();

        return;
    }

    private void initializeFadingEdges()
    {
        android.widget.NumberPicker r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: android.widget.NumberPicker;

        virtualinvoke r0.<android.widget.NumberPicker: void setVerticalFadingEdgeEnabled(boolean)>(1);

        $i1 = r0.<android.widget.NumberPicker: int mBottom>;

        $i0 = r0.<android.widget.NumberPicker: int mTop>;

        $i3 = $i1 - $i0;

        $i2 = r0.<android.widget.NumberPicker: int mTextSize>;

        $i4 = $i3 - $i2;

        $i5 = $i4 / 2;

        virtualinvoke r0.<android.widget.NumberPicker: void setFadingEdgeLength(int)>($i5);

        return;
    }

    private void onScrollerFinished(android.widget.Scroller)
    {
        android.widget.NumberPicker r0;
        android.widget.Scroller r1, $r2;
        int $i0;
        boolean $z1;

        r0 := @this: android.widget.NumberPicker;

        r1 := @parameter0: android.widget.Scroller;

        $r2 = r0.<android.widget.NumberPicker: android.widget.Scroller mFlingScroller>;

        if r1 != $r2 goto label2;

        $z1 = specialinvoke r0.<android.widget.NumberPicker: boolean ensureScrollWheelAdjusted()>();

        if $z1 != 0 goto label1;

        specialinvoke r0.<android.widget.NumberPicker: boolean updateInputTextView()>();

     label1:
        specialinvoke r0.<android.widget.NumberPicker: void onScrollStateChange(int)>(0);

        goto label3;

     label2:
        $i0 = r0.<android.widget.NumberPicker: int mScrollState>;

        if $i0 == 1 goto label3;

        specialinvoke r0.<android.widget.NumberPicker: boolean updateInputTextView()>();

     label3:
        return;
    }

    private void onScrollStateChange(int)
    {
        android.widget.NumberPicker r0;
        int i0, $i1;
        android.widget.NumberPicker$OnScrollListener $r1, $r2;

        r0 := @this: android.widget.NumberPicker;

        i0 := @parameter0: int;

        $i1 = r0.<android.widget.NumberPicker: int mScrollState>;

        if $i1 != i0 goto label1;

        return;

     label1:
        r0.<android.widget.NumberPicker: int mScrollState> = i0;

        $r1 = r0.<android.widget.NumberPicker: android.widget.NumberPicker$OnScrollListener mOnScrollListener>;

        if $r1 == null goto label2;

        $r2 = r0.<android.widget.NumberPicker: android.widget.NumberPicker$OnScrollListener mOnScrollListener>;

        interfaceinvoke $r2.<android.widget.NumberPicker$OnScrollListener: void onScrollStateChange(android.widget.NumberPicker,int)>(r0, i0);

     label2:
        return;
    }

    private void fling(int)
    {
        android.widget.NumberPicker r0;
        int i0;
        android.widget.Scroller $r1, $r2;

        r0 := @this: android.widget.NumberPicker;

        i0 := @parameter0: int;

        r0.<android.widget.NumberPicker: int mPreviousScrollerY> = 0;

        if i0 <= 0 goto label1;

        $r2 = r0.<android.widget.NumberPicker: android.widget.Scroller mFlingScroller>;

        virtualinvoke $r2.<android.widget.Scroller: void fling(int,int,int,int,int,int,int,int)>(0, 0, 0, i0, 0, 0, 0, 2147483647);

        goto label2;

     label1:
        $r1 = r0.<android.widget.NumberPicker: android.widget.Scroller mFlingScroller>;

        virtualinvoke $r1.<android.widget.Scroller: void fling(int,int,int,int,int,int,int,int)>(0, 2147483647, 0, i0, 0, 0, 0, 2147483647);

     label2:
        virtualinvoke r0.<android.widget.NumberPicker: void invalidate()>();

        return;
    }

    private int getWrappedSelectorIndex(int)
    {
        android.widget.NumberPicker r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;

        r0 := @this: android.widget.NumberPicker;

        i0 := @parameter0: int;

        $i1 = r0.<android.widget.NumberPicker: int mMaxValue>;

        if i0 <= $i1 goto label1;

        $i17 = r0.<android.widget.NumberPicker: int mMinValue>;

        $i12 = r0.<android.widget.NumberPicker: int mMaxValue>;

        $i15 = i0 - $i12;

        $i14 = r0.<android.widget.NumberPicker: int mMaxValue>;

        $i13 = r0.<android.widget.NumberPicker: int mMinValue>;

        $i16 = $i14 - $i13;

        $i18 = $i15 % $i16;

        $i20 = $i17 + $i18;

        $i19 = $i20 - 1;

        return $i19;

     label1:
        $i2 = r0.<android.widget.NumberPicker: int mMinValue>;

        if i0 >= $i2 goto label2;

        $i9 = r0.<android.widget.NumberPicker: int mMaxValue>;

        $i3 = r0.<android.widget.NumberPicker: int mMinValue>;

        $i7 = $i3 - i0;

        $i5 = r0.<android.widget.NumberPicker: int mMaxValue>;

        $i4 = r0.<android.widget.NumberPicker: int mMinValue>;

        $i6 = $i5 - $i4;

        $i8 = $i7 % $i6;

        $i10 = $i9 - $i8;

        $i11 = $i10 + 1;

        return $i11;

     label2:
        return i0;
    }

    private void incrementSelectorIndices(int[])
    {
        android.widget.NumberPicker r0;
        int[] r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11;
        boolean $z0;

        r0 := @this: android.widget.NumberPicker;

        r1 := @parameter0: int[];

        i0 = 0;

     label1:
        $i1 = lengthof r1;

        $i2 = $i1 - 1;

        if i0 >= $i2 goto label2;

        $i9 = i0 + 1;

        $i10 = r1[$i9];

        r1[i0] = $i10;

        i0 = i0 + 1;

        goto label1;

     label2:
        $i3 = lengthof r1;

        $i4 = $i3 - 2;

        $i5 = r1[$i4];

        i11 = $i5 + 1;

        $z0 = r0.<android.widget.NumberPicker: boolean mWrapSelectorWheel>;

        if $z0 == 0 goto label3;

        $i8 = r0.<android.widget.NumberPicker: int mMaxValue>;

        if i11 <= $i8 goto label3;

        i11 = r0.<android.widget.NumberPicker: int mMinValue>;

     label3:
        $i6 = lengthof r1;

        $i7 = $i6 - 1;

        r1[$i7] = i11;

        specialinvoke r0.<android.widget.NumberPicker: void ensureCachedScrollSelectorValue(int)>(i11);

        return;
    }

    private void decrementSelectorIndices(int[])
    {
        android.widget.NumberPicker r0;
        int[] r1;
        int i0, $i1, $i2, $i3, $i4, $i5, i6;
        boolean $z0;

        r0 := @this: android.widget.NumberPicker;

        r1 := @parameter0: int[];

        $i1 = lengthof r1;

        i0 = $i1 - 1;

     label1:
        if i0 <= 0 goto label2;

        $i4 = i0 - 1;

        $i5 = r1[$i4];

        r1[i0] = $i5;

        i0 = i0 + -1;

        goto label1;

     label2:
        $i2 = r1[1];

        i6 = $i2 - 1;

        $z0 = r0.<android.widget.NumberPicker: boolean mWrapSelectorWheel>;

        if $z0 == 0 goto label3;

        $i3 = r0.<android.widget.NumberPicker: int mMinValue>;

        if i6 >= $i3 goto label3;

        i6 = r0.<android.widget.NumberPicker: int mMaxValue>;

     label3:
        r1[0] = i6;

        specialinvoke r0.<android.widget.NumberPicker: void ensureCachedScrollSelectorValue(int)>(i6);

        return;
    }

    private void ensureCachedScrollSelectorValue(int)
    {
        android.widget.NumberPicker r0;
        int i0, i1, $i2, $i3, $i4;
        android.util.SparseArray r1;
        java.lang.String r2, r6;
        java.lang.Object $r3;
        java.lang.String[] $r4, $r5;

        r0 := @this: android.widget.NumberPicker;

        i0 := @parameter0: int;

        r1 = r0.<android.widget.NumberPicker: android.util.SparseArray mSelectorIndexToStringCache>;

        $r3 = virtualinvoke r1.<android.util.SparseArray: java.lang.Object get(int)>(i0);

        r2 = (java.lang.String) $r3;

        if r2 == null goto label1;

        return;

     label1:
        $i2 = r0.<android.widget.NumberPicker: int mMinValue>;

        if i0 < $i2 goto label2;

        $i3 = r0.<android.widget.NumberPicker: int mMaxValue>;

        if i0 <= $i3 goto label3;

     label2:
        r6 = "";

        goto label5;

     label3:
        $r4 = r0.<android.widget.NumberPicker: java.lang.String[] mDisplayedValues>;

        if $r4 == null goto label4;

        $i4 = r0.<android.widget.NumberPicker: int mMinValue>;

        i1 = i0 - $i4;

        $r5 = r0.<android.widget.NumberPicker: java.lang.String[] mDisplayedValues>;

        r6 = $r5[i1];

        goto label5;

     label4:
        r6 = specialinvoke r0.<android.widget.NumberPicker: java.lang.String formatNumber(int)>(i0);

     label5:
        virtualinvoke r1.<android.util.SparseArray: void put(int,java.lang.Object)>(i0, r6);

        return;
    }

    private java.lang.String formatNumber(int)
    {
        android.widget.NumberPicker r0;
        int i0;
        android.widget.NumberPicker$Formatter $r1, $r3;
        java.lang.String $r2;

        r0 := @this: android.widget.NumberPicker;

        i0 := @parameter0: int;

        $r1 = r0.<android.widget.NumberPicker: android.widget.NumberPicker$Formatter mFormatter>;

        if $r1 == null goto label1;

        $r3 = r0.<android.widget.NumberPicker: android.widget.NumberPicker$Formatter mFormatter>;

        $r2 = interfaceinvoke $r3.<android.widget.NumberPicker$Formatter: java.lang.String format(int)>(i0);

        goto label2;

     label1:
        $r2 = staticinvoke <android.widget.NumberPicker: java.lang.String formatNumberWithLocale(int)>(i0);

     label2:
        return $r2;
    }

    private void validateInputTextView(android.view.View)
    {
        android.widget.NumberPicker r0;
        android.view.View r1;
        java.lang.String r2, $r5;
        int i0;
        android.widget.TextView $r3;
        java.lang.CharSequence $r4;
        boolean $z0;

        r0 := @this: android.widget.NumberPicker;

        r1 := @parameter0: android.view.View;

        $r3 = (android.widget.TextView) r1;

        $r4 = virtualinvoke $r3.<android.widget.TextView: java.lang.CharSequence getText()>();

        r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r4);

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z0 == 0 goto label1;

        specialinvoke r0.<android.widget.NumberPicker: boolean updateInputTextView()>();

        goto label2;

     label1:
        $r5 = virtualinvoke r2.<java.lang.String: java.lang.String toString()>();

        i0 = specialinvoke r0.<android.widget.NumberPicker: int getSelectedPos(java.lang.String)>($r5);

        specialinvoke r0.<android.widget.NumberPicker: void setValueInternal(int,boolean)>(i0, 1);

     label2:
        return;
    }

    private boolean updateInputTextView()
    {
        android.widget.NumberPicker r0;
        java.lang.String r1, $r6, $r8;
        java.lang.String[] $r2, $r3;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1;
        android.widget.EditText $r4, $r7;
        android.text.Editable $r5;

        r0 := @this: android.widget.NumberPicker;

        $r2 = r0.<android.widget.NumberPicker: java.lang.String[] mDisplayedValues>;

        if $r2 != null goto label1;

        $i3 = r0.<android.widget.NumberPicker: int mValue>;

        $r8 = specialinvoke r0.<android.widget.NumberPicker: java.lang.String formatNumber(int)>($i3);

        goto label2;

     label1:
        $r3 = r0.<android.widget.NumberPicker: java.lang.String[] mDisplayedValues>;

        $i1 = r0.<android.widget.NumberPicker: int mValue>;

        $i0 = r0.<android.widget.NumberPicker: int mMinValue>;

        $i2 = $i1 - $i0;

        $r8 = $r3[$i2];

     label2:
        r1 = $r8;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label3;

        $r4 = r0.<android.widget.NumberPicker: android.widget.EditText mInputText>;

        $r5 = virtualinvoke $r4.<android.widget.EditText: android.text.Editable getText()>();

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 != 0 goto label3;

        $r7 = r0.<android.widget.NumberPicker: android.widget.EditText mInputText>;

        virtualinvoke $r7.<android.widget.EditText: void setText(java.lang.CharSequence)>(r1);

        return 1;

     label3:
        return 0;
    }

    private void notifyChange(int, int)
    {
        android.widget.NumberPicker r0;
        int i0, i1, $i2;
        android.widget.NumberPicker$OnValueChangeListener $r1, $r2;

        r0 := @this: android.widget.NumberPicker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.widget.NumberPicker: android.widget.NumberPicker$OnValueChangeListener mOnValueChangeListener>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.NumberPicker: android.widget.NumberPicker$OnValueChangeListener mOnValueChangeListener>;

        $i2 = r0.<android.widget.NumberPicker: int mValue>;

        interfaceinvoke $r2.<android.widget.NumberPicker$OnValueChangeListener: void onValueChange(android.widget.NumberPicker,int,int)>(r0, i0, $i2);

     label1:
        return;
    }

    private void postChangeCurrentByOneFromLongPress(boolean, long)
    {
        android.widget.NumberPicker r0;
        boolean z0;
        long l0;
        android.widget.NumberPicker$ChangeCurrentByOneFromLongPressCommand $r1, $r2, $r3, $r4, $r5;

        r0 := @this: android.widget.NumberPicker;

        z0 := @parameter0: boolean;

        l0 := @parameter1: long;

        $r1 = r0.<android.widget.NumberPicker: android.widget.NumberPicker$ChangeCurrentByOneFromLongPressCommand mChangeCurrentByOneFromLongPressCommand>;

        if $r1 != null goto label1;

        $r5 = new android.widget.NumberPicker$ChangeCurrentByOneFromLongPressCommand;

        specialinvoke $r5.<android.widget.NumberPicker$ChangeCurrentByOneFromLongPressCommand: void <init>(android.widget.NumberPicker)>(r0);

        r0.<android.widget.NumberPicker: android.widget.NumberPicker$ChangeCurrentByOneFromLongPressCommand mChangeCurrentByOneFromLongPressCommand> = $r5;

        goto label2;

     label1:
        $r2 = r0.<android.widget.NumberPicker: android.widget.NumberPicker$ChangeCurrentByOneFromLongPressCommand mChangeCurrentByOneFromLongPressCommand>;

        virtualinvoke r0.<android.widget.NumberPicker: boolean removeCallbacks(java.lang.Runnable)>($r2);

     label2:
        $r3 = r0.<android.widget.NumberPicker: android.widget.NumberPicker$ChangeCurrentByOneFromLongPressCommand mChangeCurrentByOneFromLongPressCommand>;

        staticinvoke <android.widget.NumberPicker$ChangeCurrentByOneFromLongPressCommand: void access$500(android.widget.NumberPicker$ChangeCurrentByOneFromLongPressCommand,boolean)>($r3, z0);

        $r4 = r0.<android.widget.NumberPicker: android.widget.NumberPicker$ChangeCurrentByOneFromLongPressCommand mChangeCurrentByOneFromLongPressCommand>;

        virtualinvoke r0.<android.widget.NumberPicker: boolean postDelayed(java.lang.Runnable,long)>($r4, l0);

        return;
    }

    private void removeChangeCurrentByOneFromLongPress()
    {
        android.widget.NumberPicker r0;
        android.widget.NumberPicker$ChangeCurrentByOneFromLongPressCommand $r1, $r2;

        r0 := @this: android.widget.NumberPicker;

        $r1 = r0.<android.widget.NumberPicker: android.widget.NumberPicker$ChangeCurrentByOneFromLongPressCommand mChangeCurrentByOneFromLongPressCommand>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.NumberPicker: android.widget.NumberPicker$ChangeCurrentByOneFromLongPressCommand mChangeCurrentByOneFromLongPressCommand>;

        virtualinvoke r0.<android.widget.NumberPicker: boolean removeCallbacks(java.lang.Runnable)>($r2);

     label1:
        return;
    }

    private void postBeginSoftInputOnLongPressCommand()
    {
        android.widget.NumberPicker r0;
        android.widget.NumberPicker$BeginSoftInputOnLongPressCommand $r1, $r2, $r3, $r4;
        int $i0;
        long $l1;

        r0 := @this: android.widget.NumberPicker;

        $r1 = r0.<android.widget.NumberPicker: android.widget.NumberPicker$BeginSoftInputOnLongPressCommand mBeginSoftInputOnLongPressCommand>;

        if $r1 != null goto label1;

        $r4 = new android.widget.NumberPicker$BeginSoftInputOnLongPressCommand;

        specialinvoke $r4.<android.widget.NumberPicker$BeginSoftInputOnLongPressCommand: void <init>(android.widget.NumberPicker)>(r0);

        r0.<android.widget.NumberPicker: android.widget.NumberPicker$BeginSoftInputOnLongPressCommand mBeginSoftInputOnLongPressCommand> = $r4;

        goto label2;

     label1:
        $r2 = r0.<android.widget.NumberPicker: android.widget.NumberPicker$BeginSoftInputOnLongPressCommand mBeginSoftInputOnLongPressCommand>;

        virtualinvoke r0.<android.widget.NumberPicker: boolean removeCallbacks(java.lang.Runnable)>($r2);

     label2:
        $r3 = r0.<android.widget.NumberPicker: android.widget.NumberPicker$BeginSoftInputOnLongPressCommand mBeginSoftInputOnLongPressCommand>;

        $i0 = staticinvoke <android.view.ViewConfiguration: int getLongPressTimeout()>();

        $l1 = (long) $i0;

        virtualinvoke r0.<android.widget.NumberPicker: boolean postDelayed(java.lang.Runnable,long)>($r3, $l1);

        return;
    }

    private void removeBeginSoftInputCommand()
    {
        android.widget.NumberPicker r0;
        android.widget.NumberPicker$BeginSoftInputOnLongPressCommand $r1, $r2;

        r0 := @this: android.widget.NumberPicker;

        $r1 = r0.<android.widget.NumberPicker: android.widget.NumberPicker$BeginSoftInputOnLongPressCommand mBeginSoftInputOnLongPressCommand>;

        if $r1 == null goto label1;

        $r2 = r0.<android.widget.NumberPicker: android.widget.NumberPicker$BeginSoftInputOnLongPressCommand mBeginSoftInputOnLongPressCommand>;

        virtualinvoke r0.<android.widget.NumberPicker: boolean removeCallbacks(java.lang.Runnable)>($r2);

     label1:
        return;
    }

    private void removeAllCallbacks()
    {
        android.widget.NumberPicker r0;
        android.widget.NumberPicker$ChangeCurrentByOneFromLongPressCommand $r1, $r7;
        android.widget.NumberPicker$SetSelectionCommand $r2, $r6;
        android.widget.NumberPicker$BeginSoftInputOnLongPressCommand $r3, $r5;
        android.widget.NumberPicker$PressedStateHelper $r4;

        r0 := @this: android.widget.NumberPicker;

        $r1 = r0.<android.widget.NumberPicker: android.widget.NumberPicker$ChangeCurrentByOneFromLongPressCommand mChangeCurrentByOneFromLongPressCommand>;

        if $r1 == null goto label1;

        $r7 = r0.<android.widget.NumberPicker: android.widget.NumberPicker$ChangeCurrentByOneFromLongPressCommand mChangeCurrentByOneFromLongPressCommand>;

        virtualinvoke r0.<android.widget.NumberPicker: boolean removeCallbacks(java.lang.Runnable)>($r7);

     label1:
        $r2 = r0.<android.widget.NumberPicker: android.widget.NumberPicker$SetSelectionCommand mSetSelectionCommand>;

        if $r2 == null goto label2;

        $r6 = r0.<android.widget.NumberPicker: android.widget.NumberPicker$SetSelectionCommand mSetSelectionCommand>;

        virtualinvoke r0.<android.widget.NumberPicker: boolean removeCallbacks(java.lang.Runnable)>($r6);

     label2:
        $r3 = r0.<android.widget.NumberPicker: android.widget.NumberPicker$BeginSoftInputOnLongPressCommand mBeginSoftInputOnLongPressCommand>;

        if $r3 == null goto label3;

        $r5 = r0.<android.widget.NumberPicker: android.widget.NumberPicker$BeginSoftInputOnLongPressCommand mBeginSoftInputOnLongPressCommand>;

        virtualinvoke r0.<android.widget.NumberPicker: boolean removeCallbacks(java.lang.Runnable)>($r5);

     label3:
        $r4 = r0.<android.widget.NumberPicker: android.widget.NumberPicker$PressedStateHelper mPressedStateHelper>;

        virtualinvoke $r4.<android.widget.NumberPicker$PressedStateHelper: void cancel()>();

        return;
    }

    private int getSelectedPos(java.lang.String)
    {
        android.widget.NumberPicker r0;
        java.lang.String r1, $r6, $r7;
        java.lang.String[] $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        boolean $z0;
        java.lang.NumberFormatException $r8, $r9;

        r0 := @this: android.widget.NumberPicker;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<android.widget.NumberPicker: java.lang.String[] mDisplayedValues>;

        if $r3 != null goto label04;

     label01:
        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

     label02:
        return $i4;

     label03:
        $r8 := @caughtexception;

        goto label10;

     label04:
        i6 = 0;

     label05:
        $r4 = r0.<android.widget.NumberPicker: java.lang.String[] mDisplayedValues>;

        $i0 = lengthof $r4;

        if i6 >= $i0 goto label07;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r5 = r0.<android.widget.NumberPicker: java.lang.String[] mDisplayedValues>;

        $r6 = $r5[i6];

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>(r1);

        if $z0 == 0 goto label06;

        $i2 = r0.<android.widget.NumberPicker: int mMinValue>;

        $i3 = $i2 + i6;

        return $i3;

     label06:
        i6 = i6 + 1;

        goto label05;

     label07:
        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r1);

     label08:
        return $i1;

     label09:
        $r9 := @caughtexception;

     label10:
        $i5 = r0.<android.widget.NumberPicker: int mMinValue>;

        return $i5;

        catch java.lang.NumberFormatException from label01 to label02 with label03;
        catch java.lang.NumberFormatException from label07 to label08 with label09;
    }

    private void postSetSelectionCommand(int, int)
    {
        android.widget.NumberPicker r0;
        int i0, i1;
        android.widget.NumberPicker$SetSelectionCommand $r1, $r2, $r3, $r4, $r5, $r6;

        r0 := @this: android.widget.NumberPicker;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<android.widget.NumberPicker: android.widget.NumberPicker$SetSelectionCommand mSetSelectionCommand>;

        if $r1 != null goto label1;

        $r6 = new android.widget.NumberPicker$SetSelectionCommand;

        specialinvoke $r6.<android.widget.NumberPicker$SetSelectionCommand: void <init>(android.widget.NumberPicker)>(r0);

        r0.<android.widget.NumberPicker: android.widget.NumberPicker$SetSelectionCommand mSetSelectionCommand> = $r6;

        goto label2;

     label1:
        $r2 = r0.<android.widget.NumberPicker: android.widget.NumberPicker$SetSelectionCommand mSetSelectionCommand>;

        virtualinvoke r0.<android.widget.NumberPicker: boolean removeCallbacks(java.lang.Runnable)>($r2);

     label2:
        $r3 = r0.<android.widget.NumberPicker: android.widget.NumberPicker$SetSelectionCommand mSetSelectionCommand>;

        staticinvoke <android.widget.NumberPicker$SetSelectionCommand: int access$602(android.widget.NumberPicker$SetSelectionCommand,int)>($r3, i0);

        $r4 = r0.<android.widget.NumberPicker: android.widget.NumberPicker$SetSelectionCommand mSetSelectionCommand>;

        staticinvoke <android.widget.NumberPicker$SetSelectionCommand: int access$702(android.widget.NumberPicker$SetSelectionCommand,int)>($r4, i1);

        $r5 = r0.<android.widget.NumberPicker: android.widget.NumberPicker$SetSelectionCommand mSetSelectionCommand>;

        virtualinvoke r0.<android.widget.NumberPicker: boolean post(java.lang.Runnable)>($r5);

        return;
    }

    private boolean ensureScrollWheelAdjusted()
    {
        android.widget.NumberPicker r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.widget.Scroller $r1;

        r0 := @this: android.widget.NumberPicker;

        $i2 = r0.<android.widget.NumberPicker: int mInitialScrollOffset>;

        $i1 = r0.<android.widget.NumberPicker: int mCurrentScrollOffset>;

        i0 = $i2 - $i1;

        if i0 == 0 goto label4;

        r0.<android.widget.NumberPicker: int mPreviousScrollerY> = 0;

        $i3 = staticinvoke <java.lang.Math: int abs(int)>(i0);

        $i4 = r0.<android.widget.NumberPicker: int mSelectorElementHeight>;

        $i5 = $i4 / 2;

        if $i3 <= $i5 goto label3;

        if i0 <= 0 goto label1;

        $i7 = r0.<android.widget.NumberPicker: int mSelectorElementHeight>;

        $i6 = neg $i7;

        goto label2;

     label1:
        $i6 = r0.<android.widget.NumberPicker: int mSelectorElementHeight>;

     label2:
        i0 = i0 + $i6;

     label3:
        $r1 = r0.<android.widget.NumberPicker: android.widget.Scroller mAdjustScroller>;

        virtualinvoke $r1.<android.widget.Scroller: void startScroll(int,int,int,int,int)>(0, 0, 0, i0, 800);

        virtualinvoke r0.<android.widget.NumberPicker: void invalidate()>();

        return 1;

     label4:
        return 0;
    }

    private static java.lang.String formatNumberWithLocale(int)
    {
        int i0;
        java.util.Locale $r0;
        java.lang.Object[] $r1;
        java.lang.Integer $r2;
        java.lang.String $r3;

        i0 := @parameter0: int;

        $r0 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r0, "%d", $r1);

        return $r3;
    }

    static void access$000(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;

        r0 := @parameter0: android.widget.NumberPicker;

        specialinvoke r0.<android.widget.NumberPicker: void hideSoftInput()>();

        return;
    }

    static android.widget.EditText access$100(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        android.widget.EditText $r1;

        r0 := @parameter0: android.widget.NumberPicker;

        $r1 = r0.<android.widget.NumberPicker: android.widget.EditText mInputText>;

        return $r1;
    }

    static void access$200(android.widget.NumberPicker, boolean)
    {
        android.widget.NumberPicker r0;
        boolean z0;

        r0 := @parameter0: android.widget.NumberPicker;

        z0 := @parameter1: boolean;

        specialinvoke r0.<android.widget.NumberPicker: void changeValueByOne(boolean)>(z0);

        return;
    }

    static void access$300(android.widget.NumberPicker, boolean, long)
    {
        android.widget.NumberPicker r0;
        boolean z0;
        long l0;

        r0 := @parameter0: android.widget.NumberPicker;

        z0 := @parameter1: boolean;

        l0 := @parameter2: long;

        specialinvoke r0.<android.widget.NumberPicker: void postChangeCurrentByOneFromLongPress(boolean,long)>(z0, l0);

        return;
    }

    static void access$400(android.widget.NumberPicker, android.view.View)
    {
        android.widget.NumberPicker r0;
        android.view.View r1;

        r0 := @parameter0: android.widget.NumberPicker;

        r1 := @parameter1: android.view.View;

        specialinvoke r0.<android.widget.NumberPicker: void validateInputTextView(android.view.View)>(r1);

        return;
    }

    static char[] access$800()
    {
        char[] $r0;

        $r0 = <android.widget.NumberPicker: char[] DIGIT_CHARACTERS>;

        return $r0;
    }

    static java.lang.String[] access$900(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        java.lang.String[] $r1;

        r0 := @parameter0: android.widget.NumberPicker;

        $r1 = r0.<android.widget.NumberPicker: java.lang.String[] mDisplayedValues>;

        return $r1;
    }

    static int access$1000(android.widget.NumberPicker, java.lang.String)
    {
        android.widget.NumberPicker r0;
        java.lang.String r1;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        r1 := @parameter1: java.lang.String;

        $i0 = specialinvoke r0.<android.widget.NumberPicker: int getSelectedPos(java.lang.String)>(r1);

        return $i0;
    }

    static int access$1100(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mMaxValue>;

        return $i0;
    }

    static void access$1200(android.widget.NumberPicker, int, int)
    {
        android.widget.NumberPicker r0;
        int i0, i1;

        r0 := @parameter0: android.widget.NumberPicker;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<android.widget.NumberPicker: void postSetSelectionCommand(int,int)>(i0, i1);

        return;
    }

    static boolean access$1300(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        boolean $z0;

        r0 := @parameter0: android.widget.NumberPicker;

        $z0 = r0.<android.widget.NumberPicker: boolean mIncrementVirtualButtonPressed>;

        return $z0;
    }

    static boolean access$1302(android.widget.NumberPicker, boolean)
    {
        android.widget.NumberPicker r0;
        boolean z0;

        r0 := @parameter0: android.widget.NumberPicker;

        z0 := @parameter1: boolean;

        r0.<android.widget.NumberPicker: boolean mIncrementVirtualButtonPressed> = z0;

        return z0;
    }

    static int access$1400(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mBottomSelectionDividerBottom>;

        return $i0;
    }

    static int access$1500(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mRight>;

        return $i0;
    }

    static int access$1600(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mBottom>;

        return $i0;
    }

    static boolean access$1702(android.widget.NumberPicker, boolean)
    {
        android.widget.NumberPicker r0;
        boolean z0;

        r0 := @parameter0: android.widget.NumberPicker;

        z0 := @parameter1: boolean;

        r0.<android.widget.NumberPicker: boolean mDecrementVirtualButtonPressed> = z0;

        return z0;
    }

    static boolean access$1700(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        boolean $z0;

        r0 := @parameter0: android.widget.NumberPicker;

        $z0 = r0.<android.widget.NumberPicker: boolean mDecrementVirtualButtonPressed>;

        return $z0;
    }

    static int access$1800(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mRight>;

        return $i0;
    }

    static int access$1900(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mTopSelectionDividerTop>;

        return $i0;
    }

    static int access$2000(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mRight>;

        return $i0;
    }

    static int access$2100(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mBottom>;

        return $i0;
    }

    static int access$2200(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mRight>;

        return $i0;
    }

    static boolean access$1380(android.widget.NumberPicker, int)
    {
        android.widget.NumberPicker r0;
        int i0, $i1, i3;
        boolean $z0, z1, z2, z3;
        byte $b2, b4;

        r0 := @parameter0: android.widget.NumberPicker;

        i0 := @parameter1: int;

        $z0 = r0.<android.widget.NumberPicker: boolean mIncrementVirtualButtonPressed>;

        z1 = $z0;

        i3 = (int) z1;

        $i1 = i3 ^ i0;

        $b2 = (byte) $i1;

        b4 = $b2;

        z2 = (boolean) b4;

        r0.<android.widget.NumberPicker: boolean mIncrementVirtualButtonPressed> = z2;

        z3 = (boolean) $b2;

        return z3;
    }

    static int access$2300(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mRight>;

        return $i0;
    }

    static int access$2400(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mBottom>;

        return $i0;
    }

    static boolean access$1780(android.widget.NumberPicker, int)
    {
        android.widget.NumberPicker r0;
        int i0, $i1, i3;
        boolean $z0, z1, z2, z3;
        byte $b2, b4;

        r0 := @parameter0: android.widget.NumberPicker;

        i0 := @parameter1: int;

        $z0 = r0.<android.widget.NumberPicker: boolean mDecrementVirtualButtonPressed>;

        z1 = $z0;

        i3 = (int) z1;

        $i1 = i3 ^ i0;

        $b2 = (byte) $i1;

        b4 = $b2;

        z2 = (boolean) b4;

        r0.<android.widget.NumberPicker: boolean mDecrementVirtualButtonPressed> = z2;

        z3 = (boolean) $b2;

        return z3;
    }

    static int access$2500(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mRight>;

        return $i0;
    }

    static long access$2600(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        long $l0;

        r0 := @parameter0: android.widget.NumberPicker;

        $l0 = r0.<android.widget.NumberPicker: long mLongPressUpdateInterval>;

        return $l0;
    }

    static int access$2700(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mScrollX>;

        return $i0;
    }

    static int access$2800(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mScrollY>;

        return $i0;
    }

    static int access$2900(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mScrollX>;

        return $i0;
    }

    static int access$3000(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mRight>;

        return $i0;
    }

    static int access$3100(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mLeft>;

        return $i0;
    }

    static int access$3200(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mScrollY>;

        return $i0;
    }

    static int access$3300(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mBottom>;

        return $i0;
    }

    static int access$3400(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mTop>;

        return $i0;
    }

    static int access$3500(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mScrollX>;

        return $i0;
    }

    static int access$3600(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mScrollY>;

        return $i0;
    }

    static int access$3700(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mScrollX>;

        return $i0;
    }

    static int access$3800(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mRight>;

        return $i0;
    }

    static int access$3900(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mLeft>;

        return $i0;
    }

    static int access$4000(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mSelectionDividerHeight>;

        return $i0;
    }

    static int access$4100(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mScrollX>;

        return $i0;
    }

    static int access$4200(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mScrollX>;

        return $i0;
    }

    static int access$4300(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mRight>;

        return $i0;
    }

    static int access$4400(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mLeft>;

        return $i0;
    }

    static int access$4500(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mScrollX>;

        return $i0;
    }

    static int access$4600(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mScrollX>;

        return $i0;
    }

    static int access$4700(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mRight>;

        return $i0;
    }

    static int access$4800(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mLeft>;

        return $i0;
    }

    static int access$4900(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mScrollY>;

        return $i0;
    }

    static int access$5000(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mBottom>;

        return $i0;
    }

    static int access$5100(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mTop>;

        return $i0;
    }

    static int access$5200(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mRight>;

        return $i0;
    }

    static int access$5300(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mBottom>;

        return $i0;
    }

    static int access$5400(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mRight>;

        return $i0;
    }

    static int access$5500(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mBottom>;

        return $i0;
    }

    static int access$5600(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mRight>;

        return $i0;
    }

    static int access$5700(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mRight>;

        return $i0;
    }

    static android.content.Context access$5800(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        android.content.Context $r1;

        r0 := @parameter0: android.widget.NumberPicker;

        $r1 = r0.<android.widget.NumberPicker: android.content.Context mContext>;

        return $r1;
    }

    static android.content.Context access$5900(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        android.content.Context $r1;

        r0 := @parameter0: android.widget.NumberPicker;

        $r1 = r0.<android.widget.NumberPicker: android.content.Context mContext>;

        return $r1;
    }

    static android.content.Context access$6000(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        android.content.Context $r1;

        r0 := @parameter0: android.widget.NumberPicker;

        $r1 = r0.<android.widget.NumberPicker: android.content.Context mContext>;

        return $r1;
    }

    static boolean access$6100(android.widget.NumberPicker, android.graphics.Rect)
    {
        android.widget.NumberPicker r0;
        android.graphics.Rect r1;
        boolean $z0;

        r0 := @parameter0: android.widget.NumberPicker;

        r1 := @parameter1: android.graphics.Rect;

        $z0 = virtualinvoke r0.<android.widget.NumberPicker: boolean isVisibleToUser(android.graphics.Rect)>(r1);

        return $z0;
    }

    static android.content.Context access$6200(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        android.content.Context $r1;

        r0 := @parameter0: android.widget.NumberPicker;

        $r1 = r0.<android.widget.NumberPicker: android.content.Context mContext>;

        return $r1;
    }

    static boolean access$6300(android.widget.NumberPicker, android.graphics.Rect)
    {
        android.widget.NumberPicker r0;
        android.graphics.Rect r1;
        boolean $z0;

        r0 := @parameter0: android.widget.NumberPicker;

        r1 := @parameter1: android.graphics.Rect;

        $z0 = virtualinvoke r0.<android.widget.NumberPicker: boolean isVisibleToUser(android.graphics.Rect)>(r1);

        return $z0;
    }

    static android.content.Context access$6400(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        android.content.Context $r1;

        r0 := @parameter0: android.widget.NumberPicker;

        $r1 = r0.<android.widget.NumberPicker: android.content.Context mContext>;

        return $r1;
    }

    static boolean access$6500(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        boolean $z0;

        r0 := @parameter0: android.widget.NumberPicker;

        $z0 = virtualinvoke r0.<android.widget.NumberPicker: boolean isVisibleToUser()>();

        return $z0;
    }

    static int access$6600(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mValue>;

        return $i0;
    }

    static boolean access$6700(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        boolean $z0;

        r0 := @parameter0: android.widget.NumberPicker;

        $z0 = r0.<android.widget.NumberPicker: boolean mWrapSelectorWheel>;

        return $z0;
    }

    static int access$6800(android.widget.NumberPicker, int)
    {
        android.widget.NumberPicker r0;
        int i0, $i1;

        r0 := @parameter0: android.widget.NumberPicker;

        i0 := @parameter1: int;

        $i1 = specialinvoke r0.<android.widget.NumberPicker: int getWrappedSelectorIndex(int)>(i0);

        return $i1;
    }

    static int access$6900(android.widget.NumberPicker)
    {
        android.widget.NumberPicker r0;
        int $i0;

        r0 := @parameter0: android.widget.NumberPicker;

        $i0 = r0.<android.widget.NumberPicker: int mMinValue>;

        return $i0;
    }

    static java.lang.String access$7000(android.widget.NumberPicker, int)
    {
        android.widget.NumberPicker r0;
        int i0;
        java.lang.String $r1;

        r0 := @parameter0: android.widget.NumberPicker;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<android.widget.NumberPicker: java.lang.String formatNumber(int)>(i0);

        return $r1;
    }

    static void <clinit>()
    {
        android.widget.NumberPicker$TwoDigitFormatter $r0;
        char[] $r1;

        <android.widget.NumberPicker: int SIZE_UNSPECIFIED> = -1;

        <android.widget.NumberPicker: int DEFAULT_LAYOUT_RESOURCE_ID> = 17367174;

        <android.widget.NumberPicker: int UNSCALED_DEFAULT_SELECTION_DIVIDERS_DISTANCE> = 48;

        <android.widget.NumberPicker: int UNSCALED_DEFAULT_SELECTION_DIVIDER_HEIGHT> = 2;

        <android.widget.NumberPicker: float TOP_AND_BOTTOM_FADING_EDGE_STRENGTH> = 0.9F;

        <android.widget.NumberPicker: int SNAP_SCROLL_DURATION> = 300;

        <android.widget.NumberPicker: int SELECTOR_ADJUSTMENT_DURATION_MILLIS> = 800;

        <android.widget.NumberPicker: int SELECTOR_MAX_FLING_VELOCITY_ADJUSTMENT> = 8;

        <android.widget.NumberPicker: int SELECTOR_MIDDLE_ITEM_INDEX> = 1;

        <android.widget.NumberPicker: long DEFAULT_LONG_PRESS_UPDATE_INTERVAL> = 300L;

        <android.widget.NumberPicker: int SELECTOR_WHEEL_ITEM_COUNT> = 3;

        $r0 = new android.widget.NumberPicker$TwoDigitFormatter;

        specialinvoke $r0.<android.widget.NumberPicker$TwoDigitFormatter: void <init>()>();

        <android.widget.NumberPicker: android.widget.NumberPicker$TwoDigitFormatter sTwoDigitFormatter> = $r0;

        $r1 = newarray (char)[60];

        $r1[0] = 48;

        $r1[1] = 49;

        $r1[2] = 50;

        $r1[3] = 51;

        $r1[4] = 52;

        $r1[5] = 53;

        $r1[6] = 54;

        $r1[7] = 55;

        $r1[8] = 56;

        $r1[9] = 57;

        $r1[10] = 1632;

        $r1[11] = 1633;

        $r1[12] = 1634;

        $r1[13] = 1635;

        $r1[14] = 1636;

        $r1[15] = 1637;

        $r1[16] = 1638;

        $r1[17] = 1639;

        $r1[18] = 1640;

        $r1[19] = 1641;

        $r1[20] = 1776;

        $r1[21] = 1777;

        $r1[22] = 1778;

        $r1[23] = 1779;

        $r1[24] = 1780;

        $r1[25] = 1781;

        $r1[26] = 1782;

        $r1[27] = 1783;

        $r1[28] = 1784;

        $r1[29] = 1785;

        $r1[30] = 2406;

        $r1[31] = 2407;

        $r1[32] = 2408;

        $r1[33] = 2409;

        $r1[34] = 2410;

        $r1[35] = 2411;

        $r1[36] = 2412;

        $r1[37] = 2413;

        $r1[38] = 2414;

        $r1[39] = 2415;

        $r1[40] = 2534;

        $r1[41] = 2535;

        $r1[42] = 2536;

        $r1[43] = 2537;

        $r1[44] = 2538;

        $r1[45] = 2539;

        $r1[46] = 2540;

        $r1[47] = 2541;

        $r1[48] = 2542;

        $r1[49] = 2543;

        $r1[50] = 3302;

        $r1[51] = 3303;

        $r1[52] = 3304;

        $r1[53] = 3305;

        $r1[54] = 3306;

        $r1[55] = 3307;

        $r1[56] = 3308;

        $r1[57] = 3309;

        $r1[58] = 3310;

        $r1[59] = 3311;

        <android.widget.NumberPicker: char[] DIGIT_CHARACTERS> = $r1;

        return;
    }
}
