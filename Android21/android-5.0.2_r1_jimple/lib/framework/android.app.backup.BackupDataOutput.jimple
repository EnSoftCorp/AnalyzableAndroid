public class android.app.backup.BackupDataOutput extends java.lang.Object
{
    long mBackupWriter;

    public void <init>(java.io.FileDescriptor)
    {
        android.app.backup.BackupDataOutput r0;
        java.io.FileDescriptor r1;
        long $l0, $l1;
        byte $b2;
        java.lang.RuntimeException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;
        java.lang.NullPointerException $r7;

        r0 := @this: android.app.backup.BackupDataOutput;

        r1 := @parameter0: java.io.FileDescriptor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>()>();

        throw $r7;

     label1:
        $l0 = staticinvoke <android.app.backup.BackupDataOutput: long ctor(java.io.FileDescriptor)>(r1);

        r0.<android.app.backup.BackupDataOutput: long mBackupWriter> = $l0;

        $l1 = r0.<android.app.backup.BackupDataOutput: long mBackupWriter>;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label2;

        $r2 = new java.lang.RuntimeException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Native initialization failed with fd=");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label2:
        return;
    }

    public int writeEntityHeader(java.lang.String, int) throws java.io.IOException
    {
        android.app.backup.BackupDataOutput r0;
        java.lang.String r1, $r5, $r7;
        int i0, i1;
        long $l2;
        java.io.IOException $r2;
        java.lang.StringBuilder $r3, $r4, $r6;

        r0 := @this: android.app.backup.BackupDataOutput;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $l2 = r0.<android.app.backup.BackupDataOutput: long mBackupWriter>;

        i1 = staticinvoke <android.app.backup.BackupDataOutput: int writeEntityHeader_native(long,java.lang.String,int)>($l2, r1, i0);

        if i1 < 0 goto label1;

        return i1;

     label1:
        $r2 = new java.io.IOException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("result=0x");

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i1);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r2;
    }

    public int writeEntityData(byte[], int) throws java.io.IOException
    {
        android.app.backup.BackupDataOutput r0;
        byte[] r1;
        int i0, i1;
        long $l2;
        java.io.IOException $r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5, $r7;

        r0 := @this: android.app.backup.BackupDataOutput;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        $l2 = r0.<android.app.backup.BackupDataOutput: long mBackupWriter>;

        i1 = staticinvoke <android.app.backup.BackupDataOutput: int writeEntityData_native(long,byte[],int)>($l2, r1, i0);

        if i1 < 0 goto label1;

        return i1;

     label1:
        $r2 = new java.io.IOException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("result=0x");

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i1);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r2;
    }

    public void setKeyPrefix(java.lang.String)
    {
        android.app.backup.BackupDataOutput r0;
        java.lang.String r1;
        long $l0;

        r0 := @this: android.app.backup.BackupDataOutput;

        r1 := @parameter0: java.lang.String;

        $l0 = r0.<android.app.backup.BackupDataOutput: long mBackupWriter>;

        staticinvoke <android.app.backup.BackupDataOutput: void setKeyPrefix_native(long,java.lang.String)>($l0, r1);

        return;
    }

    protected void finalize() throws java.lang.Throwable
    {
        android.app.backup.BackupDataOutput r0;
        java.lang.Throwable r1, $r2;
        long $l0;

        r0 := @this: android.app.backup.BackupDataOutput;

     label1:
        $l0 = r0.<android.app.backup.BackupDataOutput: long mBackupWriter>;

        staticinvoke <android.app.backup.BackupDataOutput: void dtor(long)>($l0);

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        goto label5;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

     label4:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private static native long ctor(java.io.FileDescriptor);

    private static native void dtor(long);

    private static native int writeEntityHeader_native(long, java.lang.String, int);

    private static native int writeEntityData_native(long, byte[], int);

    private static native void setKeyPrefix_native(long, java.lang.String);
}
