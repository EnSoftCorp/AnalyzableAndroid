public class android.net.MobileDataStateTracker extends android.net.BaseNetworkStateTracker
{
    private static final java.lang.String TAG;
    private static final boolean DBG;
    private static final boolean VDBG;
    private com.android.internal.telephony.PhoneConstants$DataState mMobileDataState;
    private com.android.internal.telephony.ITelephony mPhoneService;
    private java.lang.String mApnType;
    private android.net.NetworkInfo mNetworkInfo;
    private boolean mTeardownRequested;
    private android.os.Handler mTarget;
    private android.content.Context mContext;
    private android.net.LinkProperties mLinkProperties;
    private boolean mPrivateDnsRouteSet;
    private boolean mDefaultRouteSet;
    protected boolean mUserDataEnabled;
    protected boolean mPolicyDataEnabled;
    private android.os.Handler mHandler;
    private com.android.internal.util.AsyncChannel mDataConnectionTrackerAc;
    private java.util.concurrent.atomic.AtomicBoolean mIsCaptivePortal;
    private android.telephony.SignalStrength mSignalStrength;
    private android.net.SamplingDataTracker mSamplingDataTracker;
    private static final int UNKNOWN;
    private final android.telephony.PhoneStateListener mPhoneStateListener;
    private static android.net.MobileDataStateTracker$NetworkDataEntry[] mTheoreticalBWTable;

    public void <init>(int, java.lang.String)
    {
        android.net.MobileDataStateTracker r0;
        int i0, $i1;
        java.lang.String r1, $r8, $r9;
        java.util.concurrent.atomic.AtomicBoolean $r2;
        android.net.SamplingDataTracker $r3;
        android.net.MobileDataStateTracker$1 $r4;
        android.net.NetworkInfo $r5;
        android.telephony.TelephonyManager $r6, $r7;

        r0 := @this: android.net.MobileDataStateTracker;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<android.net.BaseNetworkStateTracker: void <init>()>();

        r0.<android.net.MobileDataStateTracker: boolean mTeardownRequested> = 0;

        r0.<android.net.MobileDataStateTracker: boolean mPrivateDnsRouteSet> = 0;

        r0.<android.net.MobileDataStateTracker: boolean mDefaultRouteSet> = 0;

        r0.<android.net.MobileDataStateTracker: boolean mUserDataEnabled> = 1;

        r0.<android.net.MobileDataStateTracker: boolean mPolicyDataEnabled> = 1;

        $r2 = new java.util.concurrent.atomic.AtomicBoolean;

        specialinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);

        r0.<android.net.MobileDataStateTracker: java.util.concurrent.atomic.AtomicBoolean mIsCaptivePortal> = $r2;

        $r3 = new android.net.SamplingDataTracker;

        specialinvoke $r3.<android.net.SamplingDataTracker: void <init>()>();

        r0.<android.net.MobileDataStateTracker: android.net.SamplingDataTracker mSamplingDataTracker> = $r3;

        $r4 = new android.net.MobileDataStateTracker$1;

        specialinvoke $r4.<android.net.MobileDataStateTracker$1: void <init>(android.net.MobileDataStateTracker)>(r0);

        r0.<android.net.MobileDataStateTracker: android.telephony.PhoneStateListener mPhoneStateListener> = $r4;

        $r5 = new android.net.NetworkInfo;

        $r6 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>();

        $i1 = virtualinvoke $r6.<android.telephony.TelephonyManager: int getNetworkType()>();

        $r7 = staticinvoke <android.telephony.TelephonyManager: android.telephony.TelephonyManager getDefault()>();

        $r8 = virtualinvoke $r7.<android.telephony.TelephonyManager: java.lang.String getNetworkTypeName()>();

        specialinvoke $r5.<android.net.NetworkInfo: void <init>(int,int,java.lang.String,java.lang.String)>(i0, $i1, r1, $r8);

        r0.<android.net.MobileDataStateTracker: android.net.NetworkInfo mNetworkInfo> = $r5;

        $r9 = staticinvoke <android.net.MobileDataStateTracker: java.lang.String networkTypeToApnType(int)>(i0);

        r0.<android.net.MobileDataStateTracker: java.lang.String mApnType> = $r9;

        return;
    }

    public void startMonitoring(android.content.Context, android.os.Handler)
    {
        android.net.MobileDataStateTracker r0;
        android.content.Context r1, $r9, $r12;
        android.os.Handler r2;
        android.content.IntentFilter r3, $r7;
        android.telephony.TelephonyManager r4;
        android.net.MobileDataStateTracker$MdstHandler $r5;
        android.os.Looper $r6;
        android.net.MobileDataStateTracker$MobileDataStateReceiver $r8;
        com.android.internal.telephony.PhoneConstants$DataState $r11;
        java.lang.Object $r13;
        android.telephony.PhoneStateListener $r14;

        r0 := @this: android.net.MobileDataStateTracker;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Handler;

        r0.<android.net.MobileDataStateTracker: android.os.Handler mTarget> = r2;

        r0.<android.net.MobileDataStateTracker: android.content.Context mContext> = r1;

        $r5 = new android.net.MobileDataStateTracker$MdstHandler;

        $r6 = virtualinvoke r2.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke $r5.<android.net.MobileDataStateTracker$MdstHandler: void <init>(android.os.Looper,android.net.MobileDataStateTracker)>($r6, r0);

        r0.<android.net.MobileDataStateTracker: android.os.Handler mHandler> = $r5;

        $r7 = new android.content.IntentFilter;

        specialinvoke $r7.<android.content.IntentFilter: void <init>()>();

        r3 = $r7;

        virtualinvoke r3.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.ANY_DATA_STATE");

        virtualinvoke r3.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.DATA_CONNECTION_CONNECTED_TO_PROVISIONING_APN");

        virtualinvoke r3.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.DATA_CONNECTION_FAILED");

        $r9 = r0.<android.net.MobileDataStateTracker: android.content.Context mContext>;

        $r8 = new android.net.MobileDataStateTracker$MobileDataStateReceiver;

        specialinvoke $r8.<android.net.MobileDataStateTracker$MobileDataStateReceiver: void <init>(android.net.MobileDataStateTracker,android.net.MobileDataStateTracker$1)>(r0, null);

        virtualinvoke $r9.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r8, r3);

        $r11 = <com.android.internal.telephony.PhoneConstants$DataState: com.android.internal.telephony.PhoneConstants$DataState DISCONNECTED>;

        r0.<android.net.MobileDataStateTracker: com.android.internal.telephony.PhoneConstants$DataState mMobileDataState> = $r11;

        $r12 = r0.<android.net.MobileDataStateTracker: android.content.Context mContext>;

        $r13 = virtualinvoke $r12.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        r4 = (android.telephony.TelephonyManager) $r13;

        $r14 = r0.<android.net.MobileDataStateTracker: android.telephony.PhoneStateListener mPhoneStateListener>;

        virtualinvoke r4.<android.telephony.TelephonyManager: void listen(android.telephony.PhoneStateListener,int)>($r14, 256);

        return;
    }

    public boolean isPrivateDnsRouteSet()
    {
        android.net.MobileDataStateTracker r0;
        boolean $z0;

        r0 := @this: android.net.MobileDataStateTracker;

        $z0 = r0.<android.net.MobileDataStateTracker: boolean mPrivateDnsRouteSet>;

        return $z0;
    }

    public void privateDnsRouteSet(boolean)
    {
        android.net.MobileDataStateTracker r0;
        boolean z0;

        r0 := @this: android.net.MobileDataStateTracker;

        z0 := @parameter0: boolean;

        r0.<android.net.MobileDataStateTracker: boolean mPrivateDnsRouteSet> = z0;

        return;
    }

    public android.net.NetworkInfo getNetworkInfo()
    {
        android.net.MobileDataStateTracker r0;
        android.net.NetworkInfo $r1;

        r0 := @this: android.net.MobileDataStateTracker;

        $r1 = r0.<android.net.MobileDataStateTracker: android.net.NetworkInfo mNetworkInfo>;

        return $r1;
    }

    public boolean isDefaultRouteSet()
    {
        android.net.MobileDataStateTracker r0;
        boolean $z0;

        r0 := @this: android.net.MobileDataStateTracker;

        $z0 = r0.<android.net.MobileDataStateTracker: boolean mDefaultRouteSet>;

        return $z0;
    }

    public void defaultRouteSet(boolean)
    {
        android.net.MobileDataStateTracker r0;
        boolean z0;

        r0 := @this: android.net.MobileDataStateTracker;

        z0 := @parameter0: boolean;

        r0.<android.net.MobileDataStateTracker: boolean mDefaultRouteSet> = z0;

        return;
    }

    public void releaseWakeLock()
    {
        android.net.MobileDataStateTracker r0;

        r0 := @this: android.net.MobileDataStateTracker;

        return;
    }

    private void updateLinkProperitesAndCapatilities(android.content.Intent)
    {
        android.net.MobileDataStateTracker r0;
        android.content.Intent r1;
        android.os.Parcelable $r2, $r8;
        android.net.LinkProperties $r3, $r4, $r6, $r12;
        android.content.Context $r5;
        android.content.res.Resources $r7;
        int $i0;
        android.net.NetworkCapabilities $r9, $r10, $r11;

        r0 := @this: android.net.MobileDataStateTracker;

        r1 := @parameter0: android.content.Intent;

        $r2 = virtualinvoke r1.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("linkProperties");

        $r3 = (android.net.LinkProperties) $r2;

        r0.<android.net.MobileDataStateTracker: android.net.LinkProperties mLinkProperties> = $r3;

        $r4 = r0.<android.net.MobileDataStateTracker: android.net.LinkProperties mLinkProperties>;

        if $r4 != null goto label1;

        specialinvoke r0.<android.net.MobileDataStateTracker: void loge(java.lang.String)>("CONNECTED event did not supply link properties.");

        $r12 = new android.net.LinkProperties;

        specialinvoke $r12.<android.net.LinkProperties: void <init>()>();

        r0.<android.net.MobileDataStateTracker: android.net.LinkProperties mLinkProperties> = $r12;

     label1:
        $r6 = r0.<android.net.MobileDataStateTracker: android.net.LinkProperties mLinkProperties>;

        $r5 = r0.<android.net.MobileDataStateTracker: android.content.Context mContext>;

        $r7 = virtualinvoke $r5.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r7.<android.content.res.Resources: int getInteger(int)>(17694832);

        virtualinvoke $r6.<android.net.LinkProperties: void setMtu(int)>($i0);

        $r8 = virtualinvoke r1.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("networkCapabilities");

        $r9 = (android.net.NetworkCapabilities) $r8;

        r0.<android.net.MobileDataStateTracker: android.net.NetworkCapabilities mNetworkCapabilities> = $r9;

        $r10 = r0.<android.net.MobileDataStateTracker: android.net.NetworkCapabilities mNetworkCapabilities>;

        if $r10 != null goto label2;

        specialinvoke r0.<android.net.MobileDataStateTracker: void loge(java.lang.String)>("CONNECTED event did not supply network capabilities.");

        $r11 = new android.net.NetworkCapabilities;

        specialinvoke $r11.<android.net.NetworkCapabilities: void <init>()>();

        r0.<android.net.MobileDataStateTracker: android.net.NetworkCapabilities mNetworkCapabilities> = $r11;

     label2:
        return;
    }

    private void getPhoneService(boolean)
    {
        android.net.MobileDataStateTracker r0;
        boolean z0;
        com.android.internal.telephony.ITelephony $r1, $r3;
        android.os.IBinder $r2;

        r0 := @this: android.net.MobileDataStateTracker;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.net.MobileDataStateTracker: com.android.internal.telephony.ITelephony mPhoneService>;

        if $r1 == null goto label1;

        if z0 == 0 goto label2;

     label1:
        $r2 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("phone");

        $r3 = staticinvoke <com.android.internal.telephony.ITelephony$Stub: com.android.internal.telephony.ITelephony asInterface(android.os.IBinder)>($r2);

        r0.<android.net.MobileDataStateTracker: com.android.internal.telephony.ITelephony mPhoneService> = $r3;

     label2:
        return;
    }

    public boolean isAvailable()
    {
        android.net.MobileDataStateTracker r0;
        android.net.NetworkInfo $r1;
        boolean $z0;

        r0 := @this: android.net.MobileDataStateTracker;

        $r1 = r0.<android.net.MobileDataStateTracker: android.net.NetworkInfo mNetworkInfo>;

        $z0 = virtualinvoke $r1.<android.net.NetworkInfo: boolean isAvailable()>();

        return $z0;
    }

    public java.lang.String getTcpBufferSizesPropName()
    {
        android.net.MobileDataStateTracker r0;
        java.lang.String r1, $r8, $r12;
        android.telephony.TelephonyManager r2, $r3;
        android.content.Context $r4;
        int $i0, $i1;
        java.lang.StringBuilder $r5, $r6, $r7, $r9, $r10, $r11;

        r0 := @this: android.net.MobileDataStateTracker;

        r1 = "unknown";

        $r3 = new android.telephony.TelephonyManager;

        $r4 = r0.<android.net.MobileDataStateTracker: android.content.Context mContext>;

        specialinvoke $r3.<android.telephony.TelephonyManager: void <init>(android.content.Context)>($r4);

        r2 = $r3;

        $i0 = virtualinvoke r2.<android.telephony.TelephonyManager: int getNetworkType()>();

        tableswitch($i0)
        {
            case 1: goto label01;
            case 2: goto label02;
            case 3: goto label03;
            case 4: goto label08;
            case 5: goto label10;
            case 6: goto label11;
            case 7: goto label09;
            case 8: goto label04;
            case 9: goto label05;
            case 10: goto label06;
            case 11: goto label13;
            case 12: goto label12;
            case 13: goto label14;
            case 14: goto label15;
            case 15: goto label07;
            default: goto label16;
        };

     label01:
        r1 = "gprs";

        goto label17;

     label02:
        r1 = "edge";

        goto label17;

     label03:
        r1 = "umts";

        goto label17;

     label04:
        r1 = "hsdpa";

        goto label17;

     label05:
        r1 = "hsupa";

        goto label17;

     label06:
        r1 = "hspa";

        goto label17;

     label07:
        r1 = "hspap";

        goto label17;

     label08:
        r1 = "cdma";

        goto label17;

     label09:
        r1 = "1xrtt";

        goto label17;

     label10:
        r1 = "evdo";

        goto label17;

     label11:
        r1 = "evdo";

        goto label17;

     label12:
        r1 = "evdo";

        goto label17;

     label13:
        r1 = "iden";

        goto label17;

     label14:
        r1 = "lte";

        goto label17;

     label15:
        r1 = "ehrpd";

        goto label17;

     label16:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown network type: ");

        $i1 = virtualinvoke r2.<android.telephony.TelephonyManager: int getNetworkType()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.net.MobileDataStateTracker: void loge(java.lang.String)>($r12);

     label17:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("net.tcp.buffersize.");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public boolean teardown()
    {
        android.net.MobileDataStateTracker r0;
        java.lang.String $r1;
        int $i0;
        boolean $z0;

        r0 := @this: android.net.MobileDataStateTracker;

        virtualinvoke r0.<android.net.MobileDataStateTracker: void setTeardownRequested(boolean)>(1);

        $r1 = r0.<android.net.MobileDataStateTracker: java.lang.String mApnType>;

        $i0 = specialinvoke r0.<android.net.MobileDataStateTracker: int setEnableApn(java.lang.String,boolean)>($r1, 0);

        if $i0 == 3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isReady()
    {
        android.net.MobileDataStateTracker r0;
        com.android.internal.util.AsyncChannel $r1;
        boolean $z0;

        r0 := @this: android.net.MobileDataStateTracker;

        $r1 = r0.<android.net.MobileDataStateTracker: com.android.internal.util.AsyncChannel mDataConnectionTrackerAc>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void captivePortalCheckCompleted(boolean)
    {
        android.net.MobileDataStateTracker r0;
        boolean z0, $z1;
        java.util.concurrent.atomic.AtomicBoolean $r1;
        byte $b0;

        r0 := @this: android.net.MobileDataStateTracker;

        z0 := @parameter0: boolean;

        $r1 = r0.<android.net.MobileDataStateTracker: java.util.concurrent.atomic.AtomicBoolean mIsCaptivePortal>;

        $z1 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicBoolean: boolean getAndSet(boolean)>(z0);

        if $z1 == z0 goto label3;

        if z0 == 0 goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        virtualinvoke r0.<android.net.MobileDataStateTracker: void setEnableFailFastMobileData(int)>($b0);

     label3:
        return;
    }

    private void setDetailedState(android.net.NetworkInfo$DetailedState, java.lang.String, java.lang.String)
    {
        android.net.MobileDataStateTracker r0;
        android.net.NetworkInfo$DetailedState r1, $r7, $r16;
        java.lang.String r2, r3, r4;
        boolean z0, $z1;
        android.os.Message r5;
        android.net.NetworkInfo $r6, $r8, $r11, $r12, $r13, $r15;
        android.net.NetworkInfo$State $r9, $r10;
        android.os.Handler $r14;

        r0 := @this: android.net.MobileDataStateTracker;

        r1 := @parameter0: android.net.NetworkInfo$DetailedState;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r6 = r0.<android.net.MobileDataStateTracker: android.net.NetworkInfo mNetworkInfo>;

        $r7 = virtualinvoke $r6.<android.net.NetworkInfo: android.net.NetworkInfo$DetailedState getDetailedState()>();

        if r1 == $r7 goto label4;

        $r8 = r0.<android.net.MobileDataStateTracker: android.net.NetworkInfo mNetworkInfo>;

        $r9 = virtualinvoke $r8.<android.net.NetworkInfo: android.net.NetworkInfo$State getState()>();

        $r10 = <android.net.NetworkInfo$State: android.net.NetworkInfo$State CONNECTING>;

        if $r9 != $r10 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        $r11 = r0.<android.net.MobileDataStateTracker: android.net.NetworkInfo mNetworkInfo>;

        r4 = virtualinvoke $r11.<android.net.NetworkInfo: java.lang.String getReason()>();

        if z0 == 0 goto label3;

        $r16 = <android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState CONNECTED>;

        if r1 != $r16 goto label3;

        if r2 != null goto label3;

        if r4 == null goto label3;

        r2 = r4;

     label3:
        $r12 = r0.<android.net.MobileDataStateTracker: android.net.NetworkInfo mNetworkInfo>;

        virtualinvoke $r12.<android.net.NetworkInfo: void setDetailedState(android.net.NetworkInfo$DetailedState,java.lang.String,java.lang.String)>(r1, r2, r3);

        $r14 = r0.<android.net.MobileDataStateTracker: android.os.Handler mTarget>;

        $r13 = new android.net.NetworkInfo;

        $r15 = r0.<android.net.MobileDataStateTracker: android.net.NetworkInfo mNetworkInfo>;

        specialinvoke $r13.<android.net.NetworkInfo: void <init>(android.net.NetworkInfo)>($r15);

        r5 = virtualinvoke $r14.<android.os.Handler: android.os.Message obtainMessage(int,java.lang.Object)>(458752, $r13);

        virtualinvoke r5.<android.os.Message: void sendToTarget()>();

     label4:
        return;
    }

    public void setTeardownRequested(boolean)
    {
        android.net.MobileDataStateTracker r0;
        boolean z0;

        r0 := @this: android.net.MobileDataStateTracker;

        z0 := @parameter0: boolean;

        r0.<android.net.MobileDataStateTracker: boolean mTeardownRequested> = z0;

        return;
    }

    public boolean isTeardownRequested()
    {
        android.net.MobileDataStateTracker r0;
        boolean $z0;

        r0 := @this: android.net.MobileDataStateTracker;

        $z0 = r0.<android.net.MobileDataStateTracker: boolean mTeardownRequested>;

        return $z0;
    }

    public boolean reconnect()
    {
        android.net.MobileDataStateTracker r0;
        boolean z0;
        java.lang.String $r1;
        int $i0;
        android.net.NetworkInfo$DetailedState $r2;
        android.net.NetworkInfo $r3;

        r0 := @this: android.net.MobileDataStateTracker;

        z0 = 0;

        virtualinvoke r0.<android.net.MobileDataStateTracker: void setTeardownRequested(boolean)>(0);

        $r1 = r0.<android.net.MobileDataStateTracker: java.lang.String mApnType>;

        $i0 = specialinvoke r0.<android.net.MobileDataStateTracker: int setEnableApn(java.lang.String,boolean)>($r1, 1);

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        z0 = 1;

        goto label5;

     label2:
        $r3 = r0.<android.net.MobileDataStateTracker: android.net.NetworkInfo mNetworkInfo>;

        $r2 = <android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState IDLE>;

        virtualinvoke $r3.<android.net.NetworkInfo: void setDetailedState(android.net.NetworkInfo$DetailedState,java.lang.String,java.lang.String)>($r2, null, null);

        z0 = 1;

        goto label5;

     label3:
        goto label5;

     label4:
        specialinvoke r0.<android.net.MobileDataStateTracker: void loge(java.lang.String)>("Error in reconnect - unexpected response.");

     label5:
        return z0;
    }

    public boolean setRadio(boolean)
    {
        android.net.MobileDataStateTracker r0;
        boolean z0, $z1;
        int i0;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5, $r6;
        com.android.internal.telephony.ITelephony $r7, $r8;
        android.os.RemoteException $r9;

        r0 := @this: android.net.MobileDataStateTracker;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.net.MobileDataStateTracker: void getPhoneService(boolean)>(0);

        i0 = 0;

     label1:
        if i0 >= 2 goto label6;

        $r7 = r0.<android.net.MobileDataStateTracker: com.android.internal.telephony.ITelephony mPhoneService>;

        if $r7 != null goto label2;

        specialinvoke r0.<android.net.MobileDataStateTracker: void loge(java.lang.String)>("Ignoring mobile radio request because could not acquire PhoneService");

        goto label6;

     label2:
        $r8 = r0.<android.net.MobileDataStateTracker: com.android.internal.telephony.ITelephony mPhoneService>;

        $z1 = interfaceinvoke $r8.<com.android.internal.telephony.ITelephony: boolean setRadio(boolean)>(z0);

     label3:
        return $z1;

     label4:
        $r9 := @caughtexception;

        if i0 != 0 goto label5;

        specialinvoke r0.<android.net.MobileDataStateTracker: void getPhoneService(boolean)>(1);

     label5:
        i0 = i0 + 1;

        goto label1;

     label6:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not set radio power to ");

        if z0 == 0 goto label7;

        $r6 = "on";

        goto label8;

     label7:
        $r6 = "off";

     label8:
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.net.MobileDataStateTracker: void loge(java.lang.String)>($r5);

        return 0;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    public void setInternalDataEnable(boolean)
    {
        android.net.MobileDataStateTracker r0;
        boolean z0;
        com.android.internal.util.AsyncChannel r1;
        byte $b0;

        r0 := @this: android.net.MobileDataStateTracker;

        z0 := @parameter0: boolean;

        r1 = r0.<android.net.MobileDataStateTracker: com.android.internal.util.AsyncChannel mDataConnectionTrackerAc>;

        if r1 == null goto label3;

        if z0 == 0 goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        virtualinvoke r1.<com.android.internal.util.AsyncChannel: void sendMessage(int,int)>(270363, $b0);

     label3:
        return;
    }

    public void setUserDataEnable(boolean)
    {
        android.net.MobileDataStateTracker r0;
        boolean z0;
        com.android.internal.util.AsyncChannel r1;
        byte $b0;

        r0 := @this: android.net.MobileDataStateTracker;

        z0 := @parameter0: boolean;

        r1 = r0.<android.net.MobileDataStateTracker: com.android.internal.util.AsyncChannel mDataConnectionTrackerAc>;

        if r1 == null goto label3;

        if z0 == 0 goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        virtualinvoke r1.<com.android.internal.util.AsyncChannel: void sendMessage(int,int)>(270366, $b0);

        r0.<android.net.MobileDataStateTracker: boolean mUserDataEnabled> = z0;

     label3:
        return;
    }

    public void setPolicyDataEnable(boolean)
    {
        android.net.MobileDataStateTracker r0;
        boolean z0;
        com.android.internal.util.AsyncChannel r1;
        byte $b0;

        r0 := @this: android.net.MobileDataStateTracker;

        z0 := @parameter0: boolean;

        r1 = r0.<android.net.MobileDataStateTracker: com.android.internal.util.AsyncChannel mDataConnectionTrackerAc>;

        if r1 == null goto label3;

        if z0 == 0 goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        virtualinvoke r1.<com.android.internal.util.AsyncChannel: void sendMessage(int,int)>(270368, $b0);

        r0.<android.net.MobileDataStateTracker: boolean mPolicyDataEnabled> = z0;

     label3:
        return;
    }

    public void setEnableFailFastMobileData(int)
    {
        android.net.MobileDataStateTracker r0;
        int i0;
        com.android.internal.util.AsyncChannel r1;

        r0 := @this: android.net.MobileDataStateTracker;

        i0 := @parameter0: int;

        r1 = r0.<android.net.MobileDataStateTracker: com.android.internal.util.AsyncChannel mDataConnectionTrackerAc>;

        if r1 == null goto label1;

        virtualinvoke r1.<com.android.internal.util.AsyncChannel: void sendMessage(int,int)>(270372, i0);

     label1:
        return;
    }

    public void setDependencyMet(boolean)
    {
        android.net.MobileDataStateTracker r0;
        boolean z0;
        android.os.Bundle r1;
        android.os.Message r2;
        java.lang.String $r3, $r9;
        com.android.internal.util.AsyncChannel $r4;
        byte $b0;
        java.lang.NullPointerException $r5, r10;
        java.lang.StringBuilder $r6, $r7, $r8;

        r0 := @this: android.net.MobileDataStateTracker;

        z0 := @parameter0: boolean;

        $r3 = r0.<android.net.MobileDataStateTracker: java.lang.String mApnType>;

        r1 = staticinvoke <android.os.Bundle: android.os.Bundle forPair(java.lang.String,java.lang.String)>("apnType", $r3);

     label1:
        r2 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r2.<android.os.Message: int what> = 270367;

        if z0 == 0 goto label2;

        $b0 = 1;

        goto label3;

     label2:
        $b0 = 0;

     label3:
        r2.<android.os.Message: int arg1> = $b0;

        virtualinvoke r2.<android.os.Message: void setData(android.os.Bundle)>(r1);

        $r4 = r0.<android.net.MobileDataStateTracker: com.android.internal.util.AsyncChannel mDataConnectionTrackerAc>;

        virtualinvoke $r4.<com.android.internal.util.AsyncChannel: void sendMessage(android.os.Message)>(r2);

     label4:
        goto label6;

     label5:
        $r5 := @caughtexception;

        r10 = $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setDependencyMet: X mAc was null");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r10);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.net.MobileDataStateTracker: void loge(java.lang.String)>($r9);

     label6:
        return;

        catch java.lang.NullPointerException from label1 to label4 with label5;
    }

    public void enableMobileProvisioning(java.lang.String)
    {
        android.net.MobileDataStateTracker r0;
        java.lang.String r1;
        com.android.internal.util.AsyncChannel r2;
        android.os.Message r3;
        android.os.Bundle $r4;

        r0 := @this: android.net.MobileDataStateTracker;

        r1 := @parameter0: java.lang.String;

        r2 = r0.<android.net.MobileDataStateTracker: com.android.internal.util.AsyncChannel mDataConnectionTrackerAc>;

        if r2 == null goto label1;

        r3 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r3.<android.os.Message: int what> = 270373;

        $r4 = staticinvoke <android.os.Bundle: android.os.Bundle forPair(java.lang.String,java.lang.String)>("provisioningUrl", r1);

        virtualinvoke r3.<android.os.Message: void setData(android.os.Bundle)>($r4);

        virtualinvoke r2.<com.android.internal.util.AsyncChannel: void sendMessage(android.os.Message)>(r3);

     label1:
        return;
    }

    public boolean isProvisioningNetwork()
    {
        android.net.MobileDataStateTracker r0;
        boolean z0, $z1;
        android.os.Message r1, r2;
        java.lang.String $r3, $r10;
        android.os.Bundle $r4;
        com.android.internal.util.AsyncChannel $r5;
        int $i0;
        java.lang.NullPointerException $r6, r11;
        java.lang.StringBuilder $r7, $r8, $r9;

        r0 := @this: android.net.MobileDataStateTracker;

     label1:
        r1 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        r1.<android.os.Message: int what> = 270374;

        $r3 = r0.<android.net.MobileDataStateTracker: java.lang.String mApnType>;

        $r4 = staticinvoke <android.os.Bundle: android.os.Bundle forPair(java.lang.String,java.lang.String)>("apnType", $r3);

        virtualinvoke r1.<android.os.Message: void setData(android.os.Bundle)>($r4);

        $r5 = r0.<android.net.MobileDataStateTracker: com.android.internal.util.AsyncChannel mDataConnectionTrackerAc>;

        r2 = virtualinvoke $r5.<com.android.internal.util.AsyncChannel: android.os.Message sendMessageSynchronously(android.os.Message)>(r1);

        $i0 = r2.<android.os.Message: int arg1>;

        if $i0 != 1 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        z0 = $z1;

     label4:
        goto label6;

     label5:
        $r6 := @caughtexception;

        r11 = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isProvisioningNetwork: X ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.net.MobileDataStateTracker: void loge(java.lang.String)>($r10);

        z0 = 0;

     label6:
        return z0;

        catch java.lang.NullPointerException from label1 to label4 with label5;
    }

    public void addStackedLink(android.net.LinkProperties)
    {
        android.net.MobileDataStateTracker r0;
        android.net.LinkProperties r1, $r2;

        r0 := @this: android.net.MobileDataStateTracker;

        r1 := @parameter0: android.net.LinkProperties;

        $r2 = r0.<android.net.MobileDataStateTracker: android.net.LinkProperties mLinkProperties>;

        virtualinvoke $r2.<android.net.LinkProperties: boolean addStackedLink(android.net.LinkProperties)>(r1);

        return;
    }

    public void removeStackedLink(android.net.LinkProperties)
    {
        android.net.MobileDataStateTracker r0;
        android.net.LinkProperties r1, $r2;

        r0 := @this: android.net.MobileDataStateTracker;

        r1 := @parameter0: android.net.LinkProperties;

        $r2 = r0.<android.net.MobileDataStateTracker: android.net.LinkProperties mLinkProperties>;

        virtualinvoke $r2.<android.net.LinkProperties: boolean removeStackedLink(android.net.LinkProperties)>(r1);

        return;
    }

    public java.lang.String toString()
    {
        android.net.MobileDataStateTracker r0;
        java.io.CharArrayWriter r1, $r3;
        java.io.PrintWriter r2, $r4;
        com.android.internal.telephony.PhoneConstants$DataState $r5;
        boolean $z0, $z1;
        java.lang.String $r6;

        r0 := @this: android.net.MobileDataStateTracker;

        $r3 = new java.io.CharArrayWriter;

        specialinvoke $r3.<java.io.CharArrayWriter: void <init>()>();

        r1 = $r3;

        $r4 = new java.io.PrintWriter;

        specialinvoke $r4.<java.io.PrintWriter: void <init>(java.io.Writer)>(r1);

        r2 = $r4;

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("Mobile data state: ");

        $r5 = r0.<android.net.MobileDataStateTracker: com.android.internal.telephony.PhoneConstants$DataState mMobileDataState>;

        virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.Object)>($r5);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>("Data enabled: user=");

        $z0 = r0.<android.net.MobileDataStateTracker: boolean mUserDataEnabled>;

        virtualinvoke r2.<java.io.PrintWriter: void print(boolean)>($z0);

        virtualinvoke r2.<java.io.PrintWriter: void print(java.lang.String)>(", policy=");

        $z1 = r0.<android.net.MobileDataStateTracker: boolean mPolicyDataEnabled>;

        virtualinvoke r2.<java.io.PrintWriter: void println(boolean)>($z1);

        $r6 = virtualinvoke r1.<java.io.CharArrayWriter: java.lang.String toString()>();

        return $r6;
    }

    private int setEnableApn(java.lang.String, boolean)
    {
        android.net.MobileDataStateTracker r0;
        java.lang.String r1, $r8, $r9;
        boolean z0;
        int i0;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6, $r7;
        com.android.internal.telephony.ITelephony $r10;

        r0 := @this: android.net.MobileDataStateTracker;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        specialinvoke r0.<android.net.MobileDataStateTracker: void getPhoneService(boolean)>(0);

        i0 = 0;

     label1:
        if i0 >= 2 goto label3;

        $r10 = r0.<android.net.MobileDataStateTracker: com.android.internal.telephony.ITelephony mPhoneService>;

        if $r10 != null goto label2;

        specialinvoke r0.<android.net.MobileDataStateTracker: void loge(java.lang.String)>("Ignoring feature request because could not acquire PhoneService");

        goto label3;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not ");

        if z0 == 0 goto label4;

        $r9 = "enable";

        goto label5;

     label4:
        $r9 = "disable";

     label5:
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" APN type \"");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<android.net.MobileDataStateTracker: void loge(java.lang.String)>($r8);

        return 3;
    }

    public static java.lang.String networkTypeToApnType(int)
    {
        int i0;
        java.lang.StringBuilder $r0, $r1, $r2, $r3;
        java.lang.String $r4;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label01;
            case 1: goto label11;
            case 2: goto label02;
            case 3: goto label03;
            case 4: goto label04;
            case 5: goto label05;
            case 6: goto label11;
            case 7: goto label11;
            case 8: goto label11;
            case 9: goto label11;
            case 10: goto label06;
            case 11: goto label07;
            case 12: goto label08;
            case 13: goto label11;
            case 14: goto label09;
            case 15: goto label10;
            default: goto label11;
        };

     label01:
        return "default";

     label02:
        return "mms";

     label03:
        return "supl";

     label04:
        return "dun";

     label05:
        return "hipri";

     label06:
        return "fota";

     label07:
        return "ims";

     label08:
        return "cbs";

     label09:
        return "ia";

     label10:
        return "emergency";

     label11:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error mapping networkType ");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to apnType.");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.net.MobileDataStateTracker: void sloge(java.lang.String)>($r4);

        return null;
    }

    public android.net.LinkProperties getLinkProperties()
    {
        android.net.MobileDataStateTracker r0;
        android.net.LinkProperties $r1, $r2;

        r0 := @this: android.net.MobileDataStateTracker;

        $r1 = new android.net.LinkProperties;

        $r2 = r0.<android.net.MobileDataStateTracker: android.net.LinkProperties mLinkProperties>;

        specialinvoke $r1.<android.net.LinkProperties: void <init>(android.net.LinkProperties)>($r2);

        return $r1;
    }

    public void supplyMessenger(android.os.Messenger)
    {
        android.net.MobileDataStateTracker r0;
        android.os.Messenger r1;
        com.android.internal.util.AsyncChannel r2, $r3;
        android.os.Handler $r4;
        android.content.Context $r5;

        r0 := @this: android.net.MobileDataStateTracker;

        r1 := @parameter0: android.os.Messenger;

        $r3 = new com.android.internal.util.AsyncChannel;

        specialinvoke $r3.<com.android.internal.util.AsyncChannel: void <init>()>();

        r2 = $r3;

        $r5 = r0.<android.net.MobileDataStateTracker: android.content.Context mContext>;

        $r4 = r0.<android.net.MobileDataStateTracker: android.os.Handler mHandler>;

        virtualinvoke r2.<com.android.internal.util.AsyncChannel: void connect(android.content.Context,android.os.Handler,android.os.Messenger)>($r5, $r4, r1);

        return;
    }

    private void log(java.lang.String)
    {
        android.net.MobileDataStateTracker r0;
        java.lang.String r1, $r3, $r7;
        java.lang.StringBuilder $r2, $r4, $r5, $r6;

        r0 := @this: android.net.MobileDataStateTracker;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<android.net.MobileDataStateTracker: java.lang.String mApnType>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>("MobileDataStateTracker", $r7);

        return;
    }

    private void loge(java.lang.String)
    {
        android.net.MobileDataStateTracker r0;
        java.lang.String r1, $r3, $r7;
        java.lang.StringBuilder $r2, $r4, $r5, $r6;

        r0 := @this: android.net.MobileDataStateTracker;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r0.<android.net.MobileDataStateTracker: java.lang.String mApnType>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("MobileDataStateTracker", $r7);

        return;
    }

    private static void sloge(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("MobileDataStateTracker", r0);

        return;
    }

    public android.net.LinkQualityInfo getLinkQualityInfo()
    {
        android.net.MobileDataStateTracker r0;
        android.net.MobileLinkQualityInfo r1, $r5;
        android.net.MobileDataStateTracker$NetworkDataEntry r2;
        android.net.NetworkInfo $r3, $r4, $r6, $r8, $r9, $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        android.net.SamplingDataTracker $r7;
        android.telephony.SignalStrength $r11, $r12, r13;

        r0 := @this: android.net.MobileDataStateTracker;

        $r3 = r0.<android.net.MobileDataStateTracker: android.net.NetworkInfo mNetworkInfo>;

        if $r3 == null goto label1;

        $r4 = r0.<android.net.MobileDataStateTracker: android.net.NetworkInfo mNetworkInfo>;

        $i0 = virtualinvoke $r4.<android.net.NetworkInfo: int getType()>();

        if $i0 != -1 goto label2;

     label1:
        return null;

     label2:
        $r5 = new android.net.MobileLinkQualityInfo;

        specialinvoke $r5.<android.net.MobileLinkQualityInfo: void <init>()>();

        r1 = $r5;

        $r6 = r0.<android.net.MobileDataStateTracker: android.net.NetworkInfo mNetworkInfo>;

        $i1 = virtualinvoke $r6.<android.net.NetworkInfo: int getType()>();

        virtualinvoke r1.<android.net.MobileLinkQualityInfo: void setNetworkType(int)>($i1);

        $r7 = r0.<android.net.MobileDataStateTracker: android.net.SamplingDataTracker mSamplingDataTracker>;

        virtualinvoke $r7.<android.net.SamplingDataTracker: void setCommonLinkQualityInfoFields(android.net.LinkQualityInfo)>(r1);

        $r8 = r0.<android.net.MobileDataStateTracker: android.net.NetworkInfo mNetworkInfo>;

        $i2 = virtualinvoke $r8.<android.net.NetworkInfo: int getSubtype()>();

        if $i2 == 0 goto label4;

        $r9 = r0.<android.net.MobileDataStateTracker: android.net.NetworkInfo mNetworkInfo>;

        $i15 = virtualinvoke $r9.<android.net.NetworkInfo: int getSubtype()>();

        virtualinvoke r1.<android.net.MobileLinkQualityInfo: void setMobileNetworkType(int)>($i15);

        $r10 = r0.<android.net.MobileDataStateTracker: android.net.NetworkInfo mNetworkInfo>;

        $i16 = virtualinvoke $r10.<android.net.NetworkInfo: int getSubtype()>();

        r2 = staticinvoke <android.net.MobileDataStateTracker: android.net.MobileDataStateTracker$NetworkDataEntry getNetworkDataEntry(int)>($i16);

        if r2 == null goto label3;

        $i21 = r2.<android.net.MobileDataStateTracker$NetworkDataEntry: int downloadBandwidth>;

        virtualinvoke r1.<android.net.MobileLinkQualityInfo: void setTheoreticalRxBandwidth(int)>($i21);

        $i18 = r2.<android.net.MobileDataStateTracker$NetworkDataEntry: int uploadBandwidth>;

        virtualinvoke r1.<android.net.MobileLinkQualityInfo: void setTheoreticalRxBandwidth(int)>($i18);

        $i19 = r2.<android.net.MobileDataStateTracker$NetworkDataEntry: int latency>;

        virtualinvoke r1.<android.net.MobileLinkQualityInfo: void setTheoreticalLatency(int)>($i19);

     label3:
        $r11 = r0.<android.net.MobileDataStateTracker: android.telephony.SignalStrength mSignalStrength>;

        if $r11 == null goto label4;

        $i17 = virtualinvoke r1.<android.net.MobileLinkQualityInfo: int getMobileNetworkType()>();

        $r12 = r0.<android.net.MobileDataStateTracker: android.telephony.SignalStrength mSignalStrength>;

        $i20 = staticinvoke <android.net.MobileDataStateTracker: int getNormalizedSignalStrength(int,android.telephony.SignalStrength)>($i17, $r12);

        virtualinvoke r1.<android.net.MobileLinkQualityInfo: void setNormalizedSignalStrength(int)>($i20);

     label4:
        r13 = r0.<android.net.MobileDataStateTracker: android.telephony.SignalStrength mSignalStrength>;

        if r13 == null goto label5;

        $i3 = virtualinvoke r13.<android.telephony.SignalStrength: int getGsmSignalStrength()>();

        virtualinvoke r1.<android.net.MobileLinkQualityInfo: void setRssi(int)>($i3);

        $i4 = virtualinvoke r13.<android.telephony.SignalStrength: int getGsmBitErrorRate()>();

        virtualinvoke r1.<android.net.MobileLinkQualityInfo: void setGsmErrorRate(int)>($i4);

        $i5 = virtualinvoke r13.<android.telephony.SignalStrength: int getCdmaDbm()>();

        virtualinvoke r1.<android.net.MobileLinkQualityInfo: void setCdmaDbm(int)>($i5);

        $i6 = virtualinvoke r13.<android.telephony.SignalStrength: int getCdmaEcio()>();

        virtualinvoke r1.<android.net.MobileLinkQualityInfo: void setCdmaEcio(int)>($i6);

        $i8 = virtualinvoke r13.<android.telephony.SignalStrength: int getEvdoDbm()>();

        virtualinvoke r1.<android.net.MobileLinkQualityInfo: void setEvdoDbm(int)>($i8);

        $i7 = virtualinvoke r13.<android.telephony.SignalStrength: int getEvdoEcio()>();

        virtualinvoke r1.<android.net.MobileLinkQualityInfo: void setEvdoEcio(int)>($i7);

        $i10 = virtualinvoke r13.<android.telephony.SignalStrength: int getEvdoSnr()>();

        virtualinvoke r1.<android.net.MobileLinkQualityInfo: void setEvdoSnr(int)>($i10);

        $i9 = virtualinvoke r13.<android.telephony.SignalStrength: int getLteSignalStrength()>();

        virtualinvoke r1.<android.net.MobileLinkQualityInfo: void setLteSignalStrength(int)>($i9);

        $i12 = virtualinvoke r13.<android.telephony.SignalStrength: int getLteRsrp()>();

        virtualinvoke r1.<android.net.MobileLinkQualityInfo: void setLteRsrp(int)>($i12);

        $i11 = virtualinvoke r13.<android.telephony.SignalStrength: int getLteRsrq()>();

        virtualinvoke r1.<android.net.MobileLinkQualityInfo: void setLteRsrq(int)>($i11);

        $i14 = virtualinvoke r13.<android.telephony.SignalStrength: int getLteRssnr()>();

        virtualinvoke r1.<android.net.MobileLinkQualityInfo: void setLteRssnr(int)>($i14);

        $i13 = virtualinvoke r13.<android.telephony.SignalStrength: int getLteCqi()>();

        virtualinvoke r1.<android.net.MobileLinkQualityInfo: void setLteCqi(int)>($i13);

     label5:
        return r1;
    }

    private static android.net.MobileDataStateTracker$NetworkDataEntry getNetworkDataEntry(int)
    {
        int i0, i1, i2, $i4;
        android.net.MobileDataStateTracker$NetworkDataEntry[] r0;
        android.net.MobileDataStateTracker$NetworkDataEntry r1;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.String $r4, $r6;

        i0 := @parameter0: int;

        r0 = <android.net.MobileDataStateTracker: android.net.MobileDataStateTracker$NetworkDataEntry[] mTheoreticalBWTable>;

        i1 = lengthof r0;

        i2 = 0;

     label1:
        if i2 >= i1 goto label3;

        r1 = r0[i2];

        $i4 = r1.<android.net.MobileDataStateTracker$NetworkDataEntry: int networkType>;

        if $i4 != i0 goto label2;

        return r1;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find Theoretical BW entry for ");

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("MobileDataStateTracker", $r6);

        return null;
    }

    private static int getNormalizedSignalStrength(int, android.telephony.SignalStrength)
    {
        int i0, i1, $i2, $i3;
        android.telephony.SignalStrength r0;

        i0 := @parameter0: int;

        r0 := @parameter1: android.telephony.SignalStrength;

        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label1;
            case 3: goto label1;
            case 4: goto label2;
            case 5: goto label3;
            case 6: goto label3;
            case 7: goto label2;
            case 8: goto label1;
            case 9: goto label1;
            case 10: goto label1;
            case 11: goto label5;
            case 12: goto label3;
            case 13: goto label4;
            case 14: goto label5;
            case 15: goto label1;
            default: goto label5;
        };

     label1:
        i1 = virtualinvoke r0.<android.telephony.SignalStrength: int getGsmLevel()>();

        goto label6;

     label2:
        i1 = virtualinvoke r0.<android.telephony.SignalStrength: int getCdmaLevel()>();

        goto label6;

     label3:
        i1 = virtualinvoke r0.<android.telephony.SignalStrength: int getEvdoLevel()>();

        goto label6;

     label4:
        i1 = virtualinvoke r0.<android.telephony.SignalStrength: int getLteLevel()>();

        goto label6;

     label5:
        return 2147483647;

     label6:
        $i2 = i1 * 100;

        $i3 = $i2 / 5;

        return $i3;
    }

    public void startSampling(android.net.SamplingDataTracker$SamplingSnapshot)
    {
        android.net.MobileDataStateTracker r0;
        android.net.SamplingDataTracker$SamplingSnapshot r1;
        android.net.SamplingDataTracker $r2;

        r0 := @this: android.net.MobileDataStateTracker;

        r1 := @parameter0: android.net.SamplingDataTracker$SamplingSnapshot;

        $r2 = r0.<android.net.MobileDataStateTracker: android.net.SamplingDataTracker mSamplingDataTracker>;

        virtualinvoke $r2.<android.net.SamplingDataTracker: void startSampling(android.net.SamplingDataTracker$SamplingSnapshot)>(r1);

        return;
    }

    public void stopSampling(android.net.SamplingDataTracker$SamplingSnapshot)
    {
        android.net.MobileDataStateTracker r0;
        android.net.SamplingDataTracker$SamplingSnapshot r1;
        android.net.SamplingDataTracker $r2;

        r0 := @this: android.net.MobileDataStateTracker;

        r1 := @parameter0: android.net.SamplingDataTracker$SamplingSnapshot;

        $r2 = r0.<android.net.MobileDataStateTracker: android.net.SamplingDataTracker mSamplingDataTracker>;

        virtualinvoke $r2.<android.net.SamplingDataTracker: void stopSampling(android.net.SamplingDataTracker$SamplingSnapshot)>(r1);

        return;
    }

    static android.telephony.SignalStrength access$102(android.net.MobileDataStateTracker, android.telephony.SignalStrength)
    {
        android.net.MobileDataStateTracker r0;
        android.telephony.SignalStrength r1;

        r0 := @parameter0: android.net.MobileDataStateTracker;

        r1 := @parameter1: android.telephony.SignalStrength;

        r0.<android.net.MobileDataStateTracker: android.telephony.SignalStrength mSignalStrength> = r1;

        return r1;
    }

    static com.android.internal.util.AsyncChannel access$202(android.net.MobileDataStateTracker, com.android.internal.util.AsyncChannel)
    {
        android.net.MobileDataStateTracker r0;
        com.android.internal.util.AsyncChannel r1;

        r0 := @parameter0: android.net.MobileDataStateTracker;

        r1 := @parameter1: com.android.internal.util.AsyncChannel;

        r0.<android.net.MobileDataStateTracker: com.android.internal.util.AsyncChannel mDataConnectionTrackerAc> = r1;

        return r1;
    }

    static java.lang.String access$300(android.net.MobileDataStateTracker)
    {
        android.net.MobileDataStateTracker r0;
        java.lang.String $r1;

        r0 := @parameter0: android.net.MobileDataStateTracker;

        $r1 = r0.<android.net.MobileDataStateTracker: java.lang.String mApnType>;

        return $r1;
    }

    static com.android.internal.telephony.PhoneConstants$DataState access$402(android.net.MobileDataStateTracker, com.android.internal.telephony.PhoneConstants$DataState)
    {
        android.net.MobileDataStateTracker r0;
        com.android.internal.telephony.PhoneConstants$DataState r1;

        r0 := @parameter0: android.net.MobileDataStateTracker;

        r1 := @parameter1: com.android.internal.telephony.PhoneConstants$DataState;

        r0.<android.net.MobileDataStateTracker: com.android.internal.telephony.PhoneConstants$DataState mMobileDataState> = r1;

        return r1;
    }

    static void access$500(android.net.MobileDataStateTracker, android.content.Intent)
    {
        android.net.MobileDataStateTracker r0;
        android.content.Intent r1;

        r0 := @parameter0: android.net.MobileDataStateTracker;

        r1 := @parameter1: android.content.Intent;

        specialinvoke r0.<android.net.MobileDataStateTracker: void updateLinkProperitesAndCapatilities(android.content.Intent)>(r1);

        return;
    }

    static android.net.NetworkInfo access$600(android.net.MobileDataStateTracker)
    {
        android.net.MobileDataStateTracker r0;
        android.net.NetworkInfo $r1;

        r0 := @parameter0: android.net.MobileDataStateTracker;

        $r1 = r0.<android.net.MobileDataStateTracker: android.net.NetworkInfo mNetworkInfo>;

        return $r1;
    }

    static void access$700(android.net.MobileDataStateTracker, android.net.NetworkInfo$DetailedState, java.lang.String, java.lang.String)
    {
        android.net.MobileDataStateTracker r0;
        android.net.NetworkInfo$DetailedState r1;
        java.lang.String r2, r3;

        r0 := @parameter0: android.net.MobileDataStateTracker;

        r1 := @parameter1: android.net.NetworkInfo$DetailedState;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        specialinvoke r0.<android.net.MobileDataStateTracker: void setDetailedState(android.net.NetworkInfo$DetailedState,java.lang.String,java.lang.String)>(r1, r2, r3);

        return;
    }

    static android.os.Handler access$800(android.net.MobileDataStateTracker)
    {
        android.net.MobileDataStateTracker r0;
        android.os.Handler $r1;

        r0 := @parameter0: android.net.MobileDataStateTracker;

        $r1 = r0.<android.net.MobileDataStateTracker: android.os.Handler mTarget>;

        return $r1;
    }

    static com.android.internal.telephony.PhoneConstants$DataState access$400(android.net.MobileDataStateTracker)
    {
        android.net.MobileDataStateTracker r0;
        com.android.internal.telephony.PhoneConstants$DataState $r1;

        r0 := @parameter0: android.net.MobileDataStateTracker;

        $r1 = r0.<android.net.MobileDataStateTracker: com.android.internal.telephony.PhoneConstants$DataState mMobileDataState>;

        return $r1;
    }

    static android.net.SamplingDataTracker access$900(android.net.MobileDataStateTracker)
    {
        android.net.MobileDataStateTracker r0;
        android.net.SamplingDataTracker $r1;

        r0 := @parameter0: android.net.MobileDataStateTracker;

        $r1 = r0.<android.net.MobileDataStateTracker: android.net.SamplingDataTracker mSamplingDataTracker>;

        return $r1;
    }

    static android.net.LinkProperties access$1002(android.net.MobileDataStateTracker, android.net.LinkProperties)
    {
        android.net.MobileDataStateTracker r0;
        android.net.LinkProperties r1;

        r0 := @parameter0: android.net.MobileDataStateTracker;

        r1 := @parameter1: android.net.LinkProperties;

        r0.<android.net.MobileDataStateTracker: android.net.LinkProperties mLinkProperties> = r1;

        return r1;
    }

    static android.net.LinkProperties access$1000(android.net.MobileDataStateTracker)
    {
        android.net.MobileDataStateTracker r0;
        android.net.LinkProperties $r1;

        r0 := @parameter0: android.net.MobileDataStateTracker;

        $r1 = r0.<android.net.MobileDataStateTracker: android.net.LinkProperties mLinkProperties>;

        return $r1;
    }

    static void access$1100(android.net.MobileDataStateTracker, java.lang.String)
    {
        android.net.MobileDataStateTracker r0;
        java.lang.String r1;

        r0 := @parameter0: android.net.MobileDataStateTracker;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<android.net.MobileDataStateTracker: void loge(java.lang.String)>(r1);

        return;
    }

    static void <clinit>()
    {
        android.net.MobileDataStateTracker$NetworkDataEntry[] $r0;
        android.net.MobileDataStateTracker$NetworkDataEntry $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;

        <android.net.MobileDataStateTracker: int UNKNOWN> = 2147483647;

        <android.net.MobileDataStateTracker: boolean VDBG> = 0;

        <android.net.MobileDataStateTracker: boolean DBG> = 0;

        <android.net.MobileDataStateTracker: java.lang.String TAG> = "MobileDataStateTracker";

        $r0 = newarray (android.net.MobileDataStateTracker$NetworkDataEntry)[15];

        $r1 = new android.net.MobileDataStateTracker$NetworkDataEntry;

        specialinvoke $r1.<android.net.MobileDataStateTracker$NetworkDataEntry: void <init>(int,int,int,int)>(2, 237, 118, 2147483647);

        $r0[0] = $r1;

        $r2 = new android.net.MobileDataStateTracker$NetworkDataEntry;

        specialinvoke $r2.<android.net.MobileDataStateTracker$NetworkDataEntry: void <init>(int,int,int,int)>(1, 48, 40, 2147483647);

        $r0[1] = $r2;

        $r3 = new android.net.MobileDataStateTracker$NetworkDataEntry;

        specialinvoke $r3.<android.net.MobileDataStateTracker$NetworkDataEntry: void <init>(int,int,int,int)>(3, 384, 64, 2147483647);

        $r0[2] = $r3;

        $r4 = new android.net.MobileDataStateTracker$NetworkDataEntry;

        specialinvoke $r4.<android.net.MobileDataStateTracker$NetworkDataEntry: void <init>(int,int,int,int)>(8, 14400, 2147483647, 2147483647);

        $r0[3] = $r4;

        $r5 = new android.net.MobileDataStateTracker$NetworkDataEntry;

        specialinvoke $r5.<android.net.MobileDataStateTracker$NetworkDataEntry: void <init>(int,int,int,int)>(9, 14400, 5760, 2147483647);

        $r0[4] = $r5;

        $r6 = new android.net.MobileDataStateTracker$NetworkDataEntry;

        specialinvoke $r6.<android.net.MobileDataStateTracker$NetworkDataEntry: void <init>(int,int,int,int)>(10, 14400, 5760, 2147483647);

        $r0[5] = $r6;

        $r7 = new android.net.MobileDataStateTracker$NetworkDataEntry;

        specialinvoke $r7.<android.net.MobileDataStateTracker$NetworkDataEntry: void <init>(int,int,int,int)>(15, 21000, 5760, 2147483647);

        $r0[6] = $r7;

        $r8 = new android.net.MobileDataStateTracker$NetworkDataEntry;

        specialinvoke $r8.<android.net.MobileDataStateTracker$NetworkDataEntry: void <init>(int,int,int,int)>(4, 2147483647, 2147483647, 2147483647);

        $r0[7] = $r8;

        $r9 = new android.net.MobileDataStateTracker$NetworkDataEntry;

        specialinvoke $r9.<android.net.MobileDataStateTracker$NetworkDataEntry: void <init>(int,int,int,int)>(7, 2147483647, 2147483647, 2147483647);

        $r0[8] = $r9;

        $r10 = new android.net.MobileDataStateTracker$NetworkDataEntry;

        specialinvoke $r10.<android.net.MobileDataStateTracker$NetworkDataEntry: void <init>(int,int,int,int)>(5, 2468, 153, 2147483647);

        $r0[9] = $r10;

        $r11 = new android.net.MobileDataStateTracker$NetworkDataEntry;

        specialinvoke $r11.<android.net.MobileDataStateTracker$NetworkDataEntry: void <init>(int,int,int,int)>(6, 3072, 1800, 2147483647);

        $r0[10] = $r11;

        $r12 = new android.net.MobileDataStateTracker$NetworkDataEntry;

        specialinvoke $r12.<android.net.MobileDataStateTracker$NetworkDataEntry: void <init>(int,int,int,int)>(12, 14700, 1800, 2147483647);

        $r0[11] = $r12;

        $r13 = new android.net.MobileDataStateTracker$NetworkDataEntry;

        specialinvoke $r13.<android.net.MobileDataStateTracker$NetworkDataEntry: void <init>(int,int,int,int)>(11, 2147483647, 2147483647, 2147483647);

        $r0[12] = $r13;

        $r14 = new android.net.MobileDataStateTracker$NetworkDataEntry;

        specialinvoke $r14.<android.net.MobileDataStateTracker$NetworkDataEntry: void <init>(int,int,int,int)>(13, 100000, 50000, 2147483647);

        $r0[13] = $r14;

        $r15 = new android.net.MobileDataStateTracker$NetworkDataEntry;

        specialinvoke $r15.<android.net.MobileDataStateTracker$NetworkDataEntry: void <init>(int,int,int,int)>(14, 2147483647, 2147483647, 2147483647);

        $r0[14] = $r15;

        <android.net.MobileDataStateTracker: android.net.MobileDataStateTracker$NetworkDataEntry[] mTheoreticalBWTable> = $r0;

        return;
    }
}
