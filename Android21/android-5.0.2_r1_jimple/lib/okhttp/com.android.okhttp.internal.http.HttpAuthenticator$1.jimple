final class com.android.okhttp.internal.http.HttpAuthenticator$1 extends java.lang.Object implements com.android.okhttp.OkAuthenticator
{

    void <init>()
    {
        com.android.okhttp.internal.http.HttpAuthenticator$1 r0;

        r0 := @this: com.android.okhttp.internal.http.HttpAuthenticator$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.android.okhttp.OkAuthenticator$Credential authenticate(java.net.Proxy, java.net.URL, java.util.List) throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpAuthenticator$1 r0;
        java.net.Proxy r1;
        java.net.URL r2;
        java.util.List r3;
        int i0, i1, $i2;
        com.android.okhttp.OkAuthenticator$Challenge r4;
        java.net.PasswordAuthentication r5;
        java.lang.Object $r6;
        java.lang.String $r7, $r8, $r9, $r11, $r12, $r14, $r15, $r17;
        boolean $z0;
        java.net.InetAddress $r10;
        java.net.Authenticator$RequestorType $r13;
        char[] $r16;
        com.android.okhttp.OkAuthenticator$Credential $r18;

        r0 := @this: com.android.okhttp.internal.http.HttpAuthenticator$1;

        r1 := @parameter0: java.net.Proxy;

        r2 := @parameter1: java.net.URL;

        r3 := @parameter2: java.util.List;

        i0 = 0;

        i1 = interfaceinvoke r3.<java.util.List: int size()>();

     label1:
        if i0 >= i1 goto label4;

        $r6 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i0);

        r4 = (com.android.okhttp.OkAuthenticator$Challenge) $r6;

        $r7 = "Basic";

        $r8 = virtualinvoke r4.<com.android.okhttp.OkAuthenticator$Challenge: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r8);

        if $z0 != 0 goto label2;

        goto label3;

     label2:
        $r9 = virtualinvoke r2.<java.net.URL: java.lang.String getHost()>();

        $r10 = specialinvoke r0.<com.android.okhttp.internal.http.HttpAuthenticator$1: java.net.InetAddress getConnectToInetAddress(java.net.Proxy,java.net.URL)>(r1, r2);

        $i2 = virtualinvoke r2.<java.net.URL: int getPort()>();

        $r12 = virtualinvoke r2.<java.net.URL: java.lang.String getProtocol()>();

        $r11 = virtualinvoke r4.<com.android.okhttp.OkAuthenticator$Challenge: java.lang.String getRealm()>();

        $r14 = virtualinvoke r4.<com.android.okhttp.OkAuthenticator$Challenge: java.lang.String getScheme()>();

        $r13 = <java.net.Authenticator$RequestorType: java.net.Authenticator$RequestorType SERVER>;

        r5 = staticinvoke <java.net.Authenticator: java.net.PasswordAuthentication requestPasswordAuthentication(java.lang.String,java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String,java.net.URL,java.net.Authenticator$RequestorType)>($r9, $r10, $i2, $r12, $r11, $r14, r2, $r13);

        if r5 == null goto label3;

        $r15 = virtualinvoke r5.<java.net.PasswordAuthentication: java.lang.String getUserName()>();

        $r17 = new java.lang.String;

        $r16 = virtualinvoke r5.<java.net.PasswordAuthentication: char[] getPassword()>();

        specialinvoke $r17.<java.lang.String: void <init>(char[])>($r16);

        $r18 = staticinvoke <com.android.okhttp.OkAuthenticator$Credential: com.android.okhttp.OkAuthenticator$Credential basic(java.lang.String,java.lang.String)>($r15, $r17);

        return $r18;

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        return null;
    }

    public com.android.okhttp.OkAuthenticator$Credential authenticateProxy(java.net.Proxy, java.net.URL, java.util.List) throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpAuthenticator$1 r0;
        java.net.Proxy r1;
        java.net.URL r2;
        java.util.List r3;
        int i0, i1, $i2;
        com.android.okhttp.OkAuthenticator$Challenge r4;
        java.net.InetSocketAddress r5;
        java.net.PasswordAuthentication r6;
        java.lang.Object $r7;
        java.lang.String $r8, $r9, $r11, $r13, $r14, $r16, $r17, $r19;
        boolean $z0;
        java.net.SocketAddress $r10;
        java.net.InetAddress $r12;
        java.net.Authenticator$RequestorType $r15;
        char[] $r18;
        com.android.okhttp.OkAuthenticator$Credential $r20;

        r0 := @this: com.android.okhttp.internal.http.HttpAuthenticator$1;

        r1 := @parameter0: java.net.Proxy;

        r2 := @parameter1: java.net.URL;

        r3 := @parameter2: java.util.List;

        i0 = 0;

        i1 = interfaceinvoke r3.<java.util.List: int size()>();

     label1:
        if i0 >= i1 goto label4;

        $r7 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(i0);

        r4 = (com.android.okhttp.OkAuthenticator$Challenge) $r7;

        $r8 = "Basic";

        $r9 = virtualinvoke r4.<com.android.okhttp.OkAuthenticator$Challenge: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r9);

        if $z0 != 0 goto label2;

        goto label3;

     label2:
        $r10 = virtualinvoke r1.<java.net.Proxy: java.net.SocketAddress address()>();

        r5 = (java.net.InetSocketAddress) $r10;

        $r11 = virtualinvoke r5.<java.net.InetSocketAddress: java.lang.String getHostName()>();

        $r12 = specialinvoke r0.<com.android.okhttp.internal.http.HttpAuthenticator$1: java.net.InetAddress getConnectToInetAddress(java.net.Proxy,java.net.URL)>(r1, r2);

        $i2 = virtualinvoke r5.<java.net.InetSocketAddress: int getPort()>();

        $r14 = virtualinvoke r2.<java.net.URL: java.lang.String getProtocol()>();

        $r13 = virtualinvoke r4.<com.android.okhttp.OkAuthenticator$Challenge: java.lang.String getRealm()>();

        $r16 = virtualinvoke r4.<com.android.okhttp.OkAuthenticator$Challenge: java.lang.String getScheme()>();

        $r15 = <java.net.Authenticator$RequestorType: java.net.Authenticator$RequestorType PROXY>;

        r6 = staticinvoke <java.net.Authenticator: java.net.PasswordAuthentication requestPasswordAuthentication(java.lang.String,java.net.InetAddress,int,java.lang.String,java.lang.String,java.lang.String,java.net.URL,java.net.Authenticator$RequestorType)>($r11, $r12, $i2, $r14, $r13, $r16, r2, $r15);

        if r6 == null goto label3;

        $r17 = virtualinvoke r6.<java.net.PasswordAuthentication: java.lang.String getUserName()>();

        $r19 = new java.lang.String;

        $r18 = virtualinvoke r6.<java.net.PasswordAuthentication: char[] getPassword()>();

        specialinvoke $r19.<java.lang.String: void <init>(char[])>($r18);

        $r20 = staticinvoke <com.android.okhttp.OkAuthenticator$Credential: com.android.okhttp.OkAuthenticator$Credential basic(java.lang.String,java.lang.String)>($r17, $r19);

        return $r20;

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        return null;
    }

    private java.net.InetAddress getConnectToInetAddress(java.net.Proxy, java.net.URL) throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpAuthenticator$1 r0;
        java.net.Proxy r1;
        java.net.URL r2;
        java.lang.String $r3;
        java.net.InetAddress $r4;
        java.net.Proxy$Type $r5, $r6;
        java.net.SocketAddress $r7;
        java.net.InetSocketAddress $r8;

        r0 := @this: com.android.okhttp.internal.http.HttpAuthenticator$1;

        r1 := @parameter0: java.net.Proxy;

        r2 := @parameter1: java.net.URL;

        if r1 == null goto label1;

        $r5 = virtualinvoke r1.<java.net.Proxy: java.net.Proxy$Type type()>();

        $r6 = <java.net.Proxy$Type: java.net.Proxy$Type DIRECT>;

        if $r5 == $r6 goto label1;

        $r7 = virtualinvoke r1.<java.net.Proxy: java.net.SocketAddress address()>();

        $r8 = (java.net.InetSocketAddress) $r7;

        $r4 = virtualinvoke $r8.<java.net.InetSocketAddress: java.net.InetAddress getAddress()>();

        goto label2;

     label1:
        $r3 = virtualinvoke r2.<java.net.URL: java.lang.String getHost()>();

        $r4 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>($r3);

     label2:
        return $r4;
    }
}
