class com.android.okhttp.Response$ParsedHeaders extends java.lang.Object
{
    java.util.Date lastModified;
    private java.util.Set varyFields;

    private void <init>(com.android.okhttp.Headers)
    {
        com.android.okhttp.Response$ParsedHeaders r0;
        com.android.okhttp.Headers r1;
        int i0, i1, i2, $i3;
        java.lang.String r2, r3, r5, $r7, $r8, $r10;
        java.lang.String[] r4;
        java.util.Set $r6, $r9, $r11;
        boolean $z0, $z1, $z2;
        java.util.TreeSet $r12;
        java.util.Date $r13;
        java.util.Comparator $r14;

        r0 := @this: com.android.okhttp.Response$ParsedHeaders;

        r1 := @parameter0: com.android.okhttp.Headers;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r6 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        r0.<com.android.okhttp.Response$ParsedHeaders: java.util.Set varyFields> = $r6;

        i0 = 0;

     label1:
        $i3 = virtualinvoke r1.<com.android.okhttp.Headers: int size()>();

        if i0 >= $i3 goto label6;

        r2 = virtualinvoke r1.<com.android.okhttp.Headers: java.lang.String name(int)>(i0);

        r3 = virtualinvoke r1.<com.android.okhttp.Headers: java.lang.String value(int)>(i0);

        $r7 = "Last-Modified";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z0 == 0 goto label2;

        $r13 = staticinvoke <com.android.okhttp.internal.http.HttpDate: java.util.Date parse(java.lang.String)>(r3);

        r0.<com.android.okhttp.Response$ParsedHeaders: java.util.Date lastModified> = $r13;

        goto label5;

     label2:
        $r8 = "Vary";

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z1 == 0 goto label5;

        $r9 = r0.<com.android.okhttp.Response$ParsedHeaders: java.util.Set varyFields>;

        $z2 = interfaceinvoke $r9.<java.util.Set: boolean isEmpty()>();

        if $z2 == 0 goto label3;

        $r12 = new java.util.TreeSet;

        $r14 = <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER>;

        specialinvoke $r12.<java.util.TreeSet: void <init>(java.util.Comparator)>($r14);

        r0.<com.android.okhttp.Response$ParsedHeaders: java.util.Set varyFields> = $r12;

     label3:
        r4 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        i1 = lengthof r4;

        i2 = 0;

     label4:
        if i2 >= i1 goto label5;

        r5 = r4[i2];

        $r11 = r0.<com.android.okhttp.Response$ParsedHeaders: java.util.Set varyFields>;

        $r10 = virtualinvoke r5.<java.lang.String: java.lang.String trim()>();

        interfaceinvoke $r11.<java.util.Set: boolean add(java.lang.Object)>($r10);

        i2 = i2 + 1;

        goto label4;

     label5:
        i0 = i0 + 1;

        goto label1;

     label6:
        return;
    }

    static java.util.Set access$900(com.android.okhttp.Response$ParsedHeaders)
    {
        com.android.okhttp.Response$ParsedHeaders r0;
        java.util.Set $r1;

        r0 := @parameter0: com.android.okhttp.Response$ParsedHeaders;

        $r1 = r0.<com.android.okhttp.Response$ParsedHeaders: java.util.Set varyFields>;

        return $r1;
    }

    void <init>(com.android.okhttp.Headers, com.android.okhttp.Response$1)
    {
        com.android.okhttp.Response$ParsedHeaders r0;
        com.android.okhttp.Headers r1;
        com.android.okhttp.Response$1 r2;

        r0 := @this: com.android.okhttp.Response$ParsedHeaders;

        r1 := @parameter0: com.android.okhttp.Headers;

        r2 := @parameter1: com.android.okhttp.Response$1;

        specialinvoke r0.<com.android.okhttp.Response$ParsedHeaders: void <init>(com.android.okhttp.Headers)>(r1);

        return;
    }
}
