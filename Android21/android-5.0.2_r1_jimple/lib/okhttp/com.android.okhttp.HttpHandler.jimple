public class com.android.okhttp.HttpHandler extends java.net.URLStreamHandler
{
    private final com.android.okhttp.ConfigAwareConnectionPool configAwareConnectionPool;

    public void <init>()
    {
        com.android.okhttp.HttpHandler r0;
        com.android.okhttp.ConfigAwareConnectionPool $r1;

        r0 := @this: com.android.okhttp.HttpHandler;

        specialinvoke r0.<java.net.URLStreamHandler: void <init>()>();

        $r1 = staticinvoke <com.android.okhttp.ConfigAwareConnectionPool: com.android.okhttp.ConfigAwareConnectionPool getInstance()>();

        r0.<com.android.okhttp.HttpHandler: com.android.okhttp.ConfigAwareConnectionPool configAwareConnectionPool> = $r1;

        return;
    }

    protected java.net.URLConnection openConnection(java.net.URL) throws java.io.IOException
    {
        com.android.okhttp.HttpHandler r0;
        java.net.URL r1;
        com.android.okhttp.OkHttpClient $r2;
        java.net.HttpURLConnection $r3;

        r0 := @this: com.android.okhttp.HttpHandler;

        r1 := @parameter0: java.net.URL;

        $r2 = virtualinvoke r0.<com.android.okhttp.HttpHandler: com.android.okhttp.OkHttpClient newOkHttpClient(java.net.Proxy)>(null);

        $r3 = virtualinvoke $r2.<com.android.okhttp.OkHttpClient: java.net.HttpURLConnection open(java.net.URL)>(r1);

        return $r3;
    }

    protected java.net.URLConnection openConnection(java.net.URL, java.net.Proxy) throws java.io.IOException
    {
        com.android.okhttp.HttpHandler r0;
        java.net.URL r1;
        java.net.Proxy r2;
        java.lang.IllegalArgumentException $r3;
        com.android.okhttp.OkHttpClient $r4;
        java.net.HttpURLConnection $r5;

        r0 := @this: com.android.okhttp.HttpHandler;

        r1 := @parameter0: java.net.URL;

        r2 := @parameter1: java.net.Proxy;

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("url == null || proxy == null");

        throw $r3;

     label2:
        $r4 = virtualinvoke r0.<com.android.okhttp.HttpHandler: com.android.okhttp.OkHttpClient newOkHttpClient(java.net.Proxy)>(r2);

        $r5 = virtualinvoke $r4.<com.android.okhttp.OkHttpClient: java.net.HttpURLConnection open(java.net.URL)>(r1);

        return $r5;
    }

    protected int getDefaultPort()
    {
        com.android.okhttp.HttpHandler r0;

        r0 := @this: com.android.okhttp.HttpHandler;

        return 80;
    }

    protected com.android.okhttp.OkHttpClient newOkHttpClient(java.net.Proxy)
    {
        com.android.okhttp.HttpHandler r0;
        java.net.Proxy r1;
        com.android.okhttp.OkHttpClient r2;
        com.android.okhttp.ConfigAwareConnectionPool $r3;
        com.android.okhttp.ConnectionPool $r4;

        r0 := @this: com.android.okhttp.HttpHandler;

        r1 := @parameter0: java.net.Proxy;

        r2 = staticinvoke <com.android.okhttp.HttpHandler: com.android.okhttp.OkHttpClient createHttpOkHttpClient(java.net.Proxy)>(r1);

        $r3 = r0.<com.android.okhttp.HttpHandler: com.android.okhttp.ConfigAwareConnectionPool configAwareConnectionPool>;

        $r4 = virtualinvoke $r3.<com.android.okhttp.ConfigAwareConnectionPool: com.android.okhttp.ConnectionPool get()>();

        virtualinvoke r2.<com.android.okhttp.OkHttpClient: com.android.okhttp.OkHttpClient setConnectionPool(com.android.okhttp.ConnectionPool)>($r4);

        return r2;
    }

    public static com.android.okhttp.OkHttpClient createHttpOkHttpClient(java.net.Proxy)
    {
        java.net.Proxy r0;
        com.android.okhttp.OkHttpClient r1, $r3;
        java.net.ResponseCache r2;

        r0 := @parameter0: java.net.Proxy;

        $r3 = new com.android.okhttp.OkHttpClient;

        specialinvoke $r3.<com.android.okhttp.OkHttpClient: void <init>()>();

        r1 = $r3;

        virtualinvoke r1.<com.android.okhttp.OkHttpClient: com.android.okhttp.OkHttpClient setFollowProtocolRedirects(boolean)>(0);

        if r0 == null goto label1;

        virtualinvoke r1.<com.android.okhttp.OkHttpClient: com.android.okhttp.OkHttpClient setProxy(java.net.Proxy)>(r0);

     label1:
        r2 = staticinvoke <java.net.ResponseCache: java.net.ResponseCache getDefault()>();

        if r2 == null goto label2;

        virtualinvoke r1.<com.android.okhttp.OkHttpClient: com.android.okhttp.OkHttpClient setResponseCache(java.net.ResponseCache)>(r2);

     label2:
        return r1;
    }
}
