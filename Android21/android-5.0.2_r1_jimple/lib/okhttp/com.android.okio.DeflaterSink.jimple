public final class com.android.okio.DeflaterSink extends java.lang.Object implements com.android.okio.Sink
{
    private final com.android.okio.BufferedSink sink;
    private final java.util.zip.Deflater deflater;
    private boolean closed;

    public void <init>(com.android.okio.Sink, java.util.zip.Deflater)
    {
        com.android.okio.DeflaterSink r0;
        com.android.okio.Sink r1;
        java.util.zip.Deflater r2;
        com.android.okio.BufferedSink $r3;

        r0 := @this: com.android.okio.DeflaterSink;

        r1 := @parameter0: com.android.okio.Sink;

        r2 := @parameter1: java.util.zip.Deflater;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = staticinvoke <com.android.okio.Okio: com.android.okio.BufferedSink buffer(com.android.okio.Sink)>(r1);

        r0.<com.android.okio.DeflaterSink: com.android.okio.BufferedSink sink> = $r3;

        r0.<com.android.okio.DeflaterSink: java.util.zip.Deflater deflater> = r2;

        return;
    }

    public void write(com.android.okio.OkBuffer, long) throws java.io.IOException
    {
        com.android.okio.DeflaterSink r0;
        com.android.okio.OkBuffer r1;
        long l0, $l2, $l7, $l8, $l10, $l11, $l13, $l16;
        com.android.okio.Segment r2, $r6;
        int i1, $i4, $i5, $i6, $i9, $i12, $i14, $i15, $i17;
        byte $b3;
        byte[] $r3;
        java.util.zip.Deflater $r4;
        com.android.okio.SegmentPool $r5;

        r0 := @this: com.android.okio.DeflaterSink;

        r1 := @parameter0: com.android.okio.OkBuffer;

        l0 := @parameter1: long;

        $l2 = r1.<com.android.okio.OkBuffer: long size>;

        staticinvoke <com.android.okio.Util: void checkOffsetAndCount(long,long,long)>($l2, 0L, l0);

     label1:
        $b3 = l0 cmp 0L;

        if $b3 <= 0 goto label3;

        r2 = r1.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        $i5 = r2.<com.android.okio.Segment: int limit>;

        $i4 = r2.<com.android.okio.Segment: int pos>;

        $i6 = $i5 - $i4;

        $l7 = (long) $i6;

        $l8 = staticinvoke <java.lang.Math: long min(long,long)>(l0, $l7);

        i1 = (int) $l8;

        $r4 = r0.<com.android.okio.DeflaterSink: java.util.zip.Deflater deflater>;

        $r3 = r2.<com.android.okio.Segment: byte[] data>;

        $i9 = r2.<com.android.okio.Segment: int pos>;

        virtualinvoke $r4.<java.util.zip.Deflater: void setInput(byte[],int,int)>($r3, $i9, i1);

        specialinvoke r0.<com.android.okio.DeflaterSink: void deflate(boolean)>(0);

        $l10 = r1.<com.android.okio.OkBuffer: long size>;

        $l11 = (long) i1;

        $l13 = $l10 - $l11;

        r1.<com.android.okio.OkBuffer: long size> = $l13;

        $i12 = r2.<com.android.okio.Segment: int pos>;

        $i15 = $i12 + i1;

        r2.<com.android.okio.Segment: int pos> = $i15;

        $i17 = r2.<com.android.okio.Segment: int pos>;

        $i14 = r2.<com.android.okio.Segment: int limit>;

        if $i17 != $i14 goto label2;

        $r6 = virtualinvoke r2.<com.android.okio.Segment: com.android.okio.Segment pop()>();

        r1.<com.android.okio.OkBuffer: com.android.okio.Segment head> = $r6;

        $r5 = <com.android.okio.SegmentPool: com.android.okio.SegmentPool INSTANCE>;

        virtualinvoke $r5.<com.android.okio.SegmentPool: void recycle(com.android.okio.Segment)>(r2);

     label2:
        $l16 = (long) i1;

        l0 = l0 - $l16;

        goto label1;

     label3:
        return;
    }

    private void deflate(boolean) throws java.io.IOException
    {
        com.android.okio.DeflaterSink r0;
        boolean z0, $z1;
        com.android.okio.OkBuffer r1;
        com.android.okio.Segment r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i10, $i11, $i12;
        com.android.okio.BufferedSink $r3, $r7;
        byte[] $r4, $r10;
        java.util.zip.Deflater $r5, $r6, $r9;
        long $l7, $l8, $l9;

        r0 := @this: com.android.okio.DeflaterSink;

        z0 := @parameter0: boolean;

        $r3 = r0.<com.android.okio.DeflaterSink: com.android.okio.BufferedSink sink>;

        r1 = interfaceinvoke $r3.<com.android.okio.BufferedSink: com.android.okio.OkBuffer buffer()>();

     label1:
        r2 = virtualinvoke r1.<com.android.okio.OkBuffer: com.android.okio.Segment writableSegment(int)>(1);

        if z0 == 0 goto label2;

        $r9 = r0.<com.android.okio.DeflaterSink: java.util.zip.Deflater deflater>;

        $r10 = r2.<com.android.okio.Segment: byte[] data>;

        $i11 = r2.<com.android.okio.Segment: int limit>;

        $i10 = r2.<com.android.okio.Segment: int limit>;

        $i12 = 2048 - $i10;

        $i4 = virtualinvoke $r9.<java.util.zip.Deflater: int deflate(byte[],int,int,int)>($r10, $i11, $i12, 2);

        goto label3;

     label2:
        $r5 = r0.<com.android.okio.DeflaterSink: java.util.zip.Deflater deflater>;

        $r4 = r2.<com.android.okio.Segment: byte[] data>;

        $i3 = r2.<com.android.okio.Segment: int limit>;

        $i1 = r2.<com.android.okio.Segment: int limit>;

        $i2 = 2048 - $i1;

        $i4 = virtualinvoke $r5.<java.util.zip.Deflater: int deflate(byte[],int,int)>($r4, $i3, $i2);

     label3:
        i0 = $i4;

        if i0 <= 0 goto label4;

        $i6 = r2.<com.android.okio.Segment: int limit>;

        $i5 = $i6 + i0;

        r2.<com.android.okio.Segment: int limit> = $i5;

        $l7 = r1.<com.android.okio.OkBuffer: long size>;

        $l8 = (long) i0;

        $l9 = $l7 + $l8;

        r1.<com.android.okio.OkBuffer: long size> = $l9;

        $r7 = r0.<com.android.okio.DeflaterSink: com.android.okio.BufferedSink sink>;

        interfaceinvoke $r7.<com.android.okio.BufferedSink: com.android.okio.BufferedSink emitCompleteSegments()>();

        goto label5;

     label4:
        $r6 = r0.<com.android.okio.DeflaterSink: java.util.zip.Deflater deflater>;

        $z1 = virtualinvoke $r6.<java.util.zip.Deflater: boolean needsInput()>();

        if $z1 == 0 goto label5;

        return;

     label5:
        goto label1;
    }

    public void flush() throws java.io.IOException
    {
        com.android.okio.DeflaterSink r0;
        com.android.okio.BufferedSink $r1;

        r0 := @this: com.android.okio.DeflaterSink;

        specialinvoke r0.<com.android.okio.DeflaterSink: void deflate(boolean)>(1);

        $r1 = r0.<com.android.okio.DeflaterSink: com.android.okio.BufferedSink sink>;

        interfaceinvoke $r1.<com.android.okio.BufferedSink: void flush()>();

        return;
    }

    public void close() throws java.io.IOException
    {
        com.android.okio.DeflaterSink r0;
        java.lang.Throwable r1, r2, $r6, $r7, $r8, r9, r10;
        boolean $z0;
        java.util.zip.Deflater $r3, $r4;
        com.android.okio.BufferedSink $r5;

        r0 := @this: com.android.okio.DeflaterSink;

        $z0 = r0.<com.android.okio.DeflaterSink: boolean closed>;

        if $z0 == 0 goto label01;

        return;

     label01:
        r1 = null;

     label02:
        $r3 = r0.<com.android.okio.DeflaterSink: java.util.zip.Deflater deflater>;

        virtualinvoke $r3.<java.util.zip.Deflater: void finish()>();

        specialinvoke r0.<com.android.okio.DeflaterSink: void deflate(boolean)>(0);

     label03:
        goto label05;

     label04:
        $r6 := @caughtexception;

        r2 = $r6;

        r1 = r2;

     label05:
        $r4 = r0.<com.android.okio.DeflaterSink: java.util.zip.Deflater deflater>;

        virtualinvoke $r4.<java.util.zip.Deflater: void end()>();

     label06:
        goto label08;

     label07:
        $r8 := @caughtexception;

        r9 = $r8;

        if r1 != null goto label08;

        r1 = r9;

     label08:
        $r5 = r0.<com.android.okio.DeflaterSink: com.android.okio.BufferedSink sink>;

        interfaceinvoke $r5.<com.android.okio.BufferedSink: void close()>();

     label09:
        goto label11;

     label10:
        $r7 := @caughtexception;

        r10 = $r7;

        if r1 != null goto label11;

        r1 = r10;

     label11:
        r0.<com.android.okio.DeflaterSink: boolean closed> = 1;

        if r1 == null goto label12;

        staticinvoke <com.android.okio.Util: void sneakyRethrow(java.lang.Throwable)>(r1);

     label12:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label08 to label09 with label10;
    }

    public com.android.okio.Sink deadline(com.android.okio.Deadline)
    {
        com.android.okio.DeflaterSink r0;
        com.android.okio.Deadline r1;
        com.android.okio.BufferedSink $r2;

        r0 := @this: com.android.okio.DeflaterSink;

        r1 := @parameter0: com.android.okio.Deadline;

        $r2 = r0.<com.android.okio.DeflaterSink: com.android.okio.BufferedSink sink>;

        interfaceinvoke $r2.<com.android.okio.BufferedSink: com.android.okio.Sink deadline(com.android.okio.Deadline)>(r1);

        return r0;
    }

    public java.lang.String toString()
    {
        com.android.okio.DeflaterSink r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5;
        com.android.okio.BufferedSink $r3;
        java.lang.String $r6;

        r0 := @this: com.android.okio.DeflaterSink;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DeflaterSink(");

        $r3 = r0.<com.android.okio.DeflaterSink: com.android.okio.BufferedSink sink>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }
}
