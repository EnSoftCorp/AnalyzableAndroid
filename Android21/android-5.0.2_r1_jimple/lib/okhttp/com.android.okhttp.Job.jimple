final class com.android.okhttp.Job extends com.android.okhttp.internal.NamedRunnable
{
    private final com.android.okhttp.Dispatcher dispatcher;
    private final com.android.okhttp.OkHttpClient client;
    private final com.android.okhttp.Response$Receiver responseReceiver;
    private int redirectionCount;
    volatile boolean canceled;
    private com.android.okhttp.Request request;
    com.android.okhttp.internal.http.HttpEngine engine;

    public void <init>(com.android.okhttp.Dispatcher, com.android.okhttp.OkHttpClient, com.android.okhttp.Request, com.android.okhttp.Response$Receiver)
    {
        java.lang.String $r0;
        com.android.okhttp.Job r1;
        com.android.okhttp.Dispatcher r2;
        com.android.okhttp.OkHttpClient r3;
        com.android.okhttp.Request r4;
        com.android.okhttp.Response$Receiver r5;
        java.lang.Object[] $r6;

        r1 := @this: com.android.okhttp.Job;

        r2 := @parameter0: com.android.okhttp.Dispatcher;

        r3 := @parameter1: com.android.okhttp.OkHttpClient;

        r4 := @parameter2: com.android.okhttp.Request;

        r5 := @parameter3: com.android.okhttp.Response$Receiver;

        $r6 = newarray (java.lang.Object)[1];

        $r0 = virtualinvoke r4.<com.android.okhttp.Request: java.lang.String urlString()>();

        $r6[0] = $r0;

        specialinvoke r1.<com.android.okhttp.internal.NamedRunnable: void <init>(java.lang.String,java.lang.Object[])>("OkHttp %s", $r6);

        r1.<com.android.okhttp.Job: com.android.okhttp.Dispatcher dispatcher> = r2;

        r1.<com.android.okhttp.Job: com.android.okhttp.OkHttpClient client> = r3;

        r1.<com.android.okhttp.Job: com.android.okhttp.Request request> = r4;

        r1.<com.android.okhttp.Job: com.android.okhttp.Response$Receiver responseReceiver> = r5;

        return;
    }

    java.lang.String host()
    {
        com.android.okhttp.Job r0;
        com.android.okhttp.Request $r1;
        java.net.URL $r2;
        java.lang.String $r3;

        r0 := @this: com.android.okhttp.Job;

        $r1 = r0.<com.android.okhttp.Job: com.android.okhttp.Request request>;

        $r2 = virtualinvoke $r1.<com.android.okhttp.Request: java.net.URL url()>();

        $r3 = virtualinvoke $r2.<java.net.URL: java.lang.String getHost()>();

        return $r3;
    }

    com.android.okhttp.Request request()
    {
        com.android.okhttp.Job r0;
        com.android.okhttp.Request $r1;

        r0 := @this: com.android.okhttp.Job;

        $r1 = r0.<com.android.okhttp.Job: com.android.okhttp.Request request>;

        return $r1;
    }

    java.lang.Object tag()
    {
        com.android.okhttp.Job r0;
        com.android.okhttp.Request $r1;
        java.lang.Object $r2;

        r0 := @this: com.android.okhttp.Job;

        $r1 = r0.<com.android.okhttp.Job: com.android.okhttp.Request request>;

        $r2 = virtualinvoke $r1.<com.android.okhttp.Request: java.lang.Object tag()>();

        return $r2;
    }

    protected void execute()
    {
        com.android.okhttp.Job r0;
        com.android.okhttp.Response r1;
        java.lang.Throwable r2, $r18;
        com.android.okhttp.internal.http.HttpEngine $r3, $r13, $r17;
        com.android.okhttp.Dispatcher $r5, $r15, $r19;
        boolean $z0;
        com.android.okhttp.Response$Receiver $r6, $r9;
        java.io.IOException $r7, r21;
        com.android.okhttp.Failure$Builder $r8, $r11, $r12;
        com.android.okhttp.Request $r10;
        com.android.okhttp.Failure $r14;

        r0 := @this: com.android.okhttp.Job;

     label1:
        r1 = virtualinvoke r0.<com.android.okhttp.Job: com.android.okhttp.Response getResponse()>();

        if r1 == null goto label2;

        $z0 = r0.<com.android.okhttp.Job: boolean canceled>;

        if $z0 != 0 goto label2;

        $r6 = r0.<com.android.okhttp.Job: com.android.okhttp.Response$Receiver responseReceiver>;

        interfaceinvoke $r6.<com.android.okhttp.Response$Receiver: boolean onResponse(com.android.okhttp.Response)>(r1);

     label2:
        $r3 = r0.<com.android.okhttp.Job: com.android.okhttp.internal.http.HttpEngine engine>;

        virtualinvoke $r3.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection close()>();

        $r5 = r0.<com.android.okhttp.Job: com.android.okhttp.Dispatcher dispatcher>;

        virtualinvoke $r5.<com.android.okhttp.Dispatcher: void finished(com.android.okhttp.Job)>(r0);

        goto label7;

     label3:
        $r7 := @caughtexception;

        r21 = $r7;

        $r9 = r0.<com.android.okhttp.Job: com.android.okhttp.Response$Receiver responseReceiver>;

        $r8 = new com.android.okhttp.Failure$Builder;

        specialinvoke $r8.<com.android.okhttp.Failure$Builder: void <init>()>();

        $r10 = r0.<com.android.okhttp.Job: com.android.okhttp.Request request>;

        $r11 = virtualinvoke $r8.<com.android.okhttp.Failure$Builder: com.android.okhttp.Failure$Builder request(com.android.okhttp.Request)>($r10);

        $r12 = virtualinvoke $r11.<com.android.okhttp.Failure$Builder: com.android.okhttp.Failure$Builder exception(java.lang.Throwable)>(r21);

        $r14 = virtualinvoke $r12.<com.android.okhttp.Failure$Builder: com.android.okhttp.Failure build()>();

        interfaceinvoke $r9.<com.android.okhttp.Response$Receiver: void onFailure(com.android.okhttp.Failure)>($r14);

     label4:
        $r13 = r0.<com.android.okhttp.Job: com.android.okhttp.internal.http.HttpEngine engine>;

        virtualinvoke $r13.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection close()>();

        $r15 = r0.<com.android.okhttp.Job: com.android.okhttp.Dispatcher dispatcher>;

        virtualinvoke $r15.<com.android.okhttp.Dispatcher: void finished(com.android.okhttp.Job)>(r0);

        goto label7;

     label5:
        $r18 := @caughtexception;

        r2 = $r18;

     label6:
        $r17 = r0.<com.android.okhttp.Job: com.android.okhttp.internal.http.HttpEngine engine>;

        virtualinvoke $r17.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection close()>();

        $r19 = r0.<com.android.okhttp.Job: com.android.okhttp.Dispatcher dispatcher>;

        virtualinvoke $r19.<com.android.okhttp.Dispatcher: void finished(com.android.okhttp.Job)>(r0);

        throw r2;

     label7:
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    com.android.okhttp.Response getResponse() throws java.io.IOException
    {
        com.android.okhttp.Job r0;
        com.android.okhttp.Response r1, $r27, r47;
        com.android.okhttp.Request$Body r2;
        com.android.okhttp.MediaType r3;
        com.android.okhttp.Request$Builder r4;
        long l0;
        com.android.okhttp.Connection r5;
        com.android.okhttp.Request $r6, $r8, $r14, $r20, $r31, $r39, r48;
        com.android.okhttp.internal.http.HttpEngine $r7, $r10, $r11, $r12, $r13, $r15, $r18, $r21, $r22, $r23, $r28, $r40, r46;
        com.android.okhttp.OkHttpClient $r9, $r19;
        boolean $z0, $z1;
        com.android.okhttp.Response$Builder $r16, $r17, $r25, $r29, $r30;
        com.android.okio.Source $r24;
        com.android.okhttp.Job$RealResponseBody $r26;
        com.android.okio.Sink $r32;
        java.lang.String $r33, $r38;
        byte $b1;
        java.io.IOException $r41, r45;
        java.lang.IllegalStateException $r42;
        com.android.okio.BufferedSink r44;

        r0 := @this: com.android.okhttp.Job;

        r1 = null;

        $r6 = r0.<com.android.okhttp.Job: com.android.okhttp.Request request>;

        r2 = virtualinvoke $r6.<com.android.okhttp.Request: com.android.okhttp.Request$Body body()>();

        if r2 == null goto label04;

        r3 = virtualinvoke r2.<com.android.okhttp.Request$Body: com.android.okhttp.MediaType contentType()>();

        if r3 != null goto label01;

        $r42 = new java.lang.IllegalStateException;

        specialinvoke $r42.<java.lang.IllegalStateException: void <init>(java.lang.String)>("contentType == null");

        throw $r42;

     label01:
        $r31 = r0.<com.android.okhttp.Job: com.android.okhttp.Request request>;

        r4 = virtualinvoke $r31.<com.android.okhttp.Request: com.android.okhttp.Request$Builder newBuilder()>();

        $r33 = virtualinvoke r3.<com.android.okhttp.MediaType: java.lang.String toString()>();

        virtualinvoke r4.<com.android.okhttp.Request$Builder: com.android.okhttp.Request$Builder header(java.lang.String,java.lang.String)>("Content-Type", $r33);

        l0 = virtualinvoke r2.<com.android.okhttp.Request$Body: long contentLength()>();

        $b1 = l0 cmp -1L;

        if $b1 == 0 goto label02;

        $r38 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        virtualinvoke r4.<com.android.okhttp.Request$Builder: com.android.okhttp.Request$Builder header(java.lang.String,java.lang.String)>("Content-Length", $r38);

        virtualinvoke r4.<com.android.okhttp.Request$Builder: com.android.okhttp.Request$Builder removeHeader(java.lang.String)>("Transfer-Encoding");

        goto label03;

     label02:
        virtualinvoke r4.<com.android.okhttp.Request$Builder: com.android.okhttp.Request$Builder header(java.lang.String,java.lang.String)>("Transfer-Encoding", "chunked");

        virtualinvoke r4.<com.android.okhttp.Request$Builder: com.android.okhttp.Request$Builder removeHeader(java.lang.String)>("Content-Length");

     label03:
        $r39 = virtualinvoke r4.<com.android.okhttp.Request$Builder: com.android.okhttp.Request build()>();

        r0.<com.android.okhttp.Job: com.android.okhttp.Request request> = $r39;

     label04:
        $r7 = new com.android.okhttp.internal.http.HttpEngine;

        $r9 = r0.<com.android.okhttp.Job: com.android.okhttp.OkHttpClient client>;

        $r8 = r0.<com.android.okhttp.Job: com.android.okhttp.Request request>;

        specialinvoke $r7.<com.android.okhttp.internal.http.HttpEngine: void <init>(com.android.okhttp.OkHttpClient,com.android.okhttp.Request,boolean,com.android.okhttp.Connection,com.android.okhttp.internal.http.RouteSelector,com.android.okhttp.internal.http.RetryableSink,com.android.okhttp.Response)>($r9, $r8, 0, null, null, null, null);

        r0.<com.android.okhttp.Job: com.android.okhttp.internal.http.HttpEngine engine> = $r7;

     label05:
        $z0 = r0.<com.android.okhttp.Job: boolean canceled>;

        if $z0 == 0 goto label06;

        return null;

     label06:
        $r10 = r0.<com.android.okhttp.Job: com.android.okhttp.internal.http.HttpEngine engine>;

        virtualinvoke $r10.<com.android.okhttp.internal.http.HttpEngine: void sendRequest()>();

        if r2 == null goto label07;

        $r28 = r0.<com.android.okhttp.Job: com.android.okhttp.internal.http.HttpEngine engine>;

        $r32 = virtualinvoke $r28.<com.android.okhttp.internal.http.HttpEngine: com.android.okio.Sink getRequestBody()>();

        r44 = staticinvoke <com.android.okio.Okio: com.android.okio.BufferedSink buffer(com.android.okio.Sink)>($r32);

        virtualinvoke r2.<com.android.okhttp.Request$Body: void writeTo(com.android.okio.BufferedSink)>(r44);

        interfaceinvoke r44.<com.android.okio.BufferedSink: void flush()>();

     label07:
        $r11 = r0.<com.android.okhttp.Job: com.android.okhttp.internal.http.HttpEngine engine>;

        virtualinvoke $r11.<com.android.okhttp.internal.http.HttpEngine: void readResponse()>();

     label08:
        goto label11;

     label09:
        $r41 := @caughtexception;

        r45 = $r41;

        $r40 = r0.<com.android.okhttp.Job: com.android.okhttp.internal.http.HttpEngine engine>;

        r46 = virtualinvoke $r40.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.internal.http.HttpEngine recover(java.io.IOException)>(r45);

        if r46 == null goto label10;

        r0.<com.android.okhttp.Job: com.android.okhttp.internal.http.HttpEngine engine> = r46;

        goto label05;

     label10:
        throw r45;

     label11:
        $r12 = r0.<com.android.okhttp.Job: com.android.okhttp.internal.http.HttpEngine engine>;

        r47 = virtualinvoke $r12.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response getResponse()>();

        $r13 = r0.<com.android.okhttp.Job: com.android.okhttp.internal.http.HttpEngine engine>;

        r48 = specialinvoke r0.<com.android.okhttp.Job: com.android.okhttp.Request processResponse(com.android.okhttp.internal.http.HttpEngine,com.android.okhttp.Response)>($r13, r47);

        if r48 != null goto label12;

        $r21 = r0.<com.android.okhttp.Job: com.android.okhttp.internal.http.HttpEngine engine>;

        virtualinvoke $r21.<com.android.okhttp.internal.http.HttpEngine: void releaseConnection()>();

        $r25 = virtualinvoke r47.<com.android.okhttp.Response: com.android.okhttp.Response$Builder newBuilder()>();

        $r26 = new com.android.okhttp.Job$RealResponseBody;

        $r23 = r0.<com.android.okhttp.Job: com.android.okhttp.internal.http.HttpEngine engine>;

        $r24 = virtualinvoke $r23.<com.android.okhttp.internal.http.HttpEngine: com.android.okio.Source getResponseBody()>();

        specialinvoke $r26.<com.android.okhttp.Job$RealResponseBody: void <init>(com.android.okhttp.Response,com.android.okio.Source)>(r47, $r24);

        $r29 = virtualinvoke $r25.<com.android.okhttp.Response$Builder: com.android.okhttp.Response$Builder body(com.android.okhttp.Response$Body)>($r26);

        $r30 = virtualinvoke $r29.<com.android.okhttp.Response$Builder: com.android.okhttp.Response$Builder priorResponse(com.android.okhttp.Response)>(r1);

        $r27 = virtualinvoke $r30.<com.android.okhttp.Response$Builder: com.android.okhttp.Response build()>();

        return $r27;

     label12:
        $r14 = r0.<com.android.okhttp.Job: com.android.okhttp.Request request>;

        $z1 = staticinvoke <com.android.okhttp.Job: boolean sameConnection(com.android.okhttp.Request,com.android.okhttp.Request)>($r14, r48);

        if $z1 != 0 goto label13;

        $r22 = r0.<com.android.okhttp.Job: com.android.okhttp.internal.http.HttpEngine engine>;

        virtualinvoke $r22.<com.android.okhttp.internal.http.HttpEngine: void releaseConnection()>();

     label13:
        $r15 = r0.<com.android.okhttp.Job: com.android.okhttp.internal.http.HttpEngine engine>;

        r5 = virtualinvoke $r15.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection close()>();

        $r17 = virtualinvoke r47.<com.android.okhttp.Response: com.android.okhttp.Response$Builder newBuilder()>();

        $r16 = virtualinvoke $r17.<com.android.okhttp.Response$Builder: com.android.okhttp.Response$Builder priorResponse(com.android.okhttp.Response)>(r1);

        r1 = virtualinvoke $r16.<com.android.okhttp.Response$Builder: com.android.okhttp.Response build()>();

        r0.<com.android.okhttp.Job: com.android.okhttp.Request request> = r48;

        $r18 = new com.android.okhttp.internal.http.HttpEngine;

        $r19 = r0.<com.android.okhttp.Job: com.android.okhttp.OkHttpClient client>;

        $r20 = r0.<com.android.okhttp.Job: com.android.okhttp.Request request>;

        specialinvoke $r18.<com.android.okhttp.internal.http.HttpEngine: void <init>(com.android.okhttp.OkHttpClient,com.android.okhttp.Request,boolean,com.android.okhttp.Connection,com.android.okhttp.internal.http.RouteSelector,com.android.okhttp.internal.http.RetryableSink,com.android.okhttp.Response)>($r19, $r20, 0, r5, null, null, null);

        r0.<com.android.okhttp.Job: com.android.okhttp.internal.http.HttpEngine engine> = $r18;

        goto label05;

        catch java.io.IOException from label06 to label08 with label09;
    }

    private com.android.okhttp.Request processResponse(com.android.okhttp.internal.http.HttpEngine, com.android.okhttp.Response) throws java.io.IOException
    {
        com.android.okhttp.Job r0;
        com.android.okhttp.internal.http.HttpEngine r1;
        com.android.okhttp.Response r2;
        com.android.okhttp.Request r3, $r16, $r22, $r25;
        java.net.Proxy r4, $r10;
        int i0, $i1, $i2, $i3;
        java.lang.String r5, r6, $r20, $r23, $r29;
        java.net.URL r7, $r18, $r19;
        com.android.okhttp.Route $r8, $r31;
        com.android.okhttp.OkHttpClient $r9, $r14, $r17;
        java.net.Proxy$Type $r11, $r12;
        com.android.okhttp.OkAuthenticator $r13;
        java.net.ProtocolException $r15, $r26;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.android.okhttp.Request$Builder $r21, $r24;
        java.lang.StringBuilder $r27, $r28, $r30;

        r0 := @this: com.android.okhttp.Job;

        r1 := @parameter0: com.android.okhttp.internal.http.HttpEngine;

        r2 := @parameter1: com.android.okhttp.Response;

        r3 = virtualinvoke r2.<com.android.okhttp.Response: com.android.okhttp.Request request()>();

        $r8 = virtualinvoke r1.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Route getRoute()>();

        if $r8 == null goto label01;

        $r31 = virtualinvoke r1.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Route getRoute()>();

        $r10 = virtualinvoke $r31.<com.android.okhttp.Route: java.net.Proxy getProxy()>();

        goto label02;

     label01:
        $r9 = r0.<com.android.okhttp.Job: com.android.okhttp.OkHttpClient client>;

        $r10 = virtualinvoke $r9.<com.android.okhttp.OkHttpClient: java.net.Proxy getProxy()>();

     label02:
        r4 = $r10;

        i0 = virtualinvoke r2.<com.android.okhttp.Response: int code()>();

        lookupswitch(i0)
        {
            case 300: goto label05;
            case 301: goto label05;
            case 302: goto label05;
            case 303: goto label05;
            case 307: goto label05;
            case 401: goto label04;
            case 407: goto label03;
            default: goto label11;
        };

     label03:
        $r11 = virtualinvoke r4.<java.net.Proxy: java.net.Proxy$Type type()>();

        $r12 = <java.net.Proxy$Type: java.net.Proxy$Type HTTP>;

        if $r11 == $r12 goto label04;

        $r15 = new java.net.ProtocolException;

        specialinvoke $r15.<java.net.ProtocolException: void <init>(java.lang.String)>("Received HTTP_PROXY_AUTH (407) code while not using proxy");

        throw $r15;

     label04:
        $r14 = r0.<com.android.okhttp.Job: com.android.okhttp.OkHttpClient client>;

        $r13 = virtualinvoke $r14.<com.android.okhttp.OkHttpClient: com.android.okhttp.OkAuthenticator getAuthenticator()>();

        $r16 = staticinvoke <com.android.okhttp.internal.http.HttpAuthenticator: com.android.okhttp.Request processAuthHeader(com.android.okhttp.OkAuthenticator,com.android.okhttp.Response,java.net.Proxy)>($r13, r2, r4);

        return $r16;

     label05:
        $r17 = r0.<com.android.okhttp.Job: com.android.okhttp.OkHttpClient client>;

        $z0 = virtualinvoke $r17.<com.android.okhttp.OkHttpClient: boolean getFollowProtocolRedirects()>();

        if $z0 != 0 goto label06;

        return null;

     label06:
        $i2 = r0.<com.android.okhttp.Job: int redirectionCount>;

        $i1 = $i2 + 1;

        r0.<com.android.okhttp.Job: int redirectionCount> = $i1;

        if $i1 <= 20 goto label07;

        $r26 = new java.net.ProtocolException;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Too many redirects: ");

        $i3 = r0.<com.android.okhttp.Job: int redirectionCount>;

        $r28 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r26.<java.net.ProtocolException: void <init>(java.lang.String)>($r29);

        throw $r26;

     label07:
        r5 = virtualinvoke r3.<com.android.okhttp.Request: java.lang.String method()>();

        if i0 != 307 goto label08;

        $z3 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("GET");

        if $z3 != 0 goto label08;

        $z4 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("HEAD");

        if $z4 != 0 goto label08;

        return null;

     label08:
        r6 = virtualinvoke r2.<com.android.okhttp.Response: java.lang.String header(java.lang.String)>("Location");

        if r6 != null goto label09;

        return null;

     label09:
        $r19 = new java.net.URL;

        $r18 = virtualinvoke r3.<com.android.okhttp.Request: java.net.URL url()>();

        specialinvoke $r19.<java.net.URL: void <init>(java.net.URL,java.lang.String)>($r18, r6);

        r7 = $r19;

        $r20 = virtualinvoke r7.<java.net.URL: java.lang.String getProtocol()>();

        $z1 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>("https");

        if $z1 != 0 goto label10;

        $r23 = virtualinvoke r7.<java.net.URL: java.lang.String getProtocol()>();

        $z2 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>("http");

        if $z2 != 0 goto label10;

        return null;

     label10:
        $r22 = r0.<com.android.okhttp.Job: com.android.okhttp.Request request>;

        $r21 = virtualinvoke $r22.<com.android.okhttp.Request: com.android.okhttp.Request$Builder newBuilder()>();

        $r24 = virtualinvoke $r21.<com.android.okhttp.Request$Builder: com.android.okhttp.Request$Builder url(java.net.URL)>(r7);

        $r25 = virtualinvoke $r24.<com.android.okhttp.Request$Builder: com.android.okhttp.Request build()>();

        return $r25;

     label11:
        return null;
    }

    static boolean sameConnection(com.android.okhttp.Request, com.android.okhttp.Request)
    {
        com.android.okhttp.Request r0, r1;
        java.net.URL $r2, $r4, $r6, $r7, $r8, $r10;
        java.lang.String $r3, $r5, $r9, $r11;
        boolean $z0, $z1, $z2;
        int $i0, $i1;

        r0 := @parameter0: com.android.okhttp.Request;

        r1 := @parameter1: com.android.okhttp.Request;

        $r2 = virtualinvoke r0.<com.android.okhttp.Request: java.net.URL url()>();

        $r3 = virtualinvoke $r2.<java.net.URL: java.lang.String getHost()>();

        $r4 = virtualinvoke r1.<com.android.okhttp.Request: java.net.URL url()>();

        $r5 = virtualinvoke $r4.<java.net.URL: java.lang.String getHost()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label1;

        $r6 = virtualinvoke r0.<com.android.okhttp.Request: java.net.URL url()>();

        $i0 = staticinvoke <com.android.okhttp.internal.Util: int getEffectivePort(java.net.URL)>($r6);

        $r7 = virtualinvoke r1.<com.android.okhttp.Request: java.net.URL url()>();

        $i1 = staticinvoke <com.android.okhttp.internal.Util: int getEffectivePort(java.net.URL)>($r7);

        if $i0 != $i1 goto label1;

        $r8 = virtualinvoke r0.<com.android.okhttp.Request: java.net.URL url()>();

        $r9 = virtualinvoke $r8.<java.net.URL: java.lang.String getProtocol()>();

        $r10 = virtualinvoke r1.<com.android.okhttp.Request: java.net.URL url()>();

        $r11 = virtualinvoke $r10.<java.net.URL: java.lang.String getProtocol()>();

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }
}
