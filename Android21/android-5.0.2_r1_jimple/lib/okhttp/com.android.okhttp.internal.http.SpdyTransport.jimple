public final class com.android.okhttp.internal.http.SpdyTransport extends java.lang.Object implements com.android.okhttp.internal.http.Transport
{
    private static final java.util.List SPDY_3_PROHIBITED_HEADERS;
    private static final java.util.List HTTP_2_PROHIBITED_HEADERS;
    private final com.android.okhttp.internal.http.HttpEngine httpEngine;
    private final com.android.okhttp.internal.spdy.SpdyConnection spdyConnection;
    private com.android.okhttp.internal.spdy.SpdyStream stream;

    public void <init>(com.android.okhttp.internal.http.HttpEngine, com.android.okhttp.internal.spdy.SpdyConnection)
    {
        com.android.okhttp.internal.http.SpdyTransport r0;
        com.android.okhttp.internal.http.HttpEngine r1;
        com.android.okhttp.internal.spdy.SpdyConnection r2;

        r0 := @this: com.android.okhttp.internal.http.SpdyTransport;

        r1 := @parameter0: com.android.okhttp.internal.http.HttpEngine;

        r2 := @parameter1: com.android.okhttp.internal.spdy.SpdyConnection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.okhttp.internal.http.SpdyTransport: com.android.okhttp.internal.http.HttpEngine httpEngine> = r1;

        r0.<com.android.okhttp.internal.http.SpdyTransport: com.android.okhttp.internal.spdy.SpdyConnection spdyConnection> = r2;

        return;
    }

    public com.android.okio.Sink createRequestBody(com.android.okhttp.Request) throws java.io.IOException
    {
        com.android.okhttp.internal.http.SpdyTransport r0;
        com.android.okhttp.Request r1;
        com.android.okhttp.internal.spdy.SpdyStream $r2;
        com.android.okio.Sink $r3;

        r0 := @this: com.android.okhttp.internal.http.SpdyTransport;

        r1 := @parameter0: com.android.okhttp.Request;

        virtualinvoke r0.<com.android.okhttp.internal.http.SpdyTransport: void writeRequestHeaders(com.android.okhttp.Request)>(r1);

        $r2 = r0.<com.android.okhttp.internal.http.SpdyTransport: com.android.okhttp.internal.spdy.SpdyStream stream>;

        $r3 = virtualinvoke $r2.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okio.Sink getSink()>();

        return $r3;
    }

    public void writeRequestHeaders(com.android.okhttp.Request) throws java.io.IOException
    {
        com.android.okhttp.internal.http.SpdyTransport r0;
        com.android.okhttp.Request r1;
        boolean z0, z1;
        java.lang.String r2;
        com.android.okhttp.internal.spdy.SpdyStream $r3, $r11, $r15;
        com.android.okhttp.internal.http.HttpEngine $r4, $r5, $r6, $r14;
        com.android.okhttp.Connection $r7;
        int $i0, $i1;
        com.android.okhttp.internal.spdy.SpdyConnection $r8, $r9;
        com.android.okhttp.Protocol $r10;
        java.util.List $r12;
        com.android.okhttp.OkHttpClient $r13;
        long $l2;

        r0 := @this: com.android.okhttp.internal.http.SpdyTransport;

        r1 := @parameter0: com.android.okhttp.Request;

        $r3 = r0.<com.android.okhttp.internal.http.SpdyTransport: com.android.okhttp.internal.spdy.SpdyStream stream>;

        if $r3 == null goto label1;

        return;

     label1:
        $r4 = r0.<com.android.okhttp.internal.http.SpdyTransport: com.android.okhttp.internal.http.HttpEngine httpEngine>;

        virtualinvoke $r4.<com.android.okhttp.internal.http.HttpEngine: void writingRequestHeaders()>();

        $r5 = r0.<com.android.okhttp.internal.http.SpdyTransport: com.android.okhttp.internal.http.HttpEngine httpEngine>;

        z0 = virtualinvoke $r5.<com.android.okhttp.internal.http.HttpEngine: boolean hasRequestBody()>();

        z1 = 1;

        $r6 = r0.<com.android.okhttp.internal.http.SpdyTransport: com.android.okhttp.internal.http.HttpEngine httpEngine>;

        $r7 = virtualinvoke $r6.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection getConnection()>();

        $i0 = virtualinvoke $r7.<com.android.okhttp.Connection: int getHttpMinorVersion()>();

        r2 = staticinvoke <com.android.okhttp.internal.http.RequestLine: java.lang.String version(int)>($i0);

        $r9 = r0.<com.android.okhttp.internal.http.SpdyTransport: com.android.okhttp.internal.spdy.SpdyConnection spdyConnection>;

        $r8 = r0.<com.android.okhttp.internal.http.SpdyTransport: com.android.okhttp.internal.spdy.SpdyConnection spdyConnection>;

        $r10 = virtualinvoke $r8.<com.android.okhttp.internal.spdy.SpdyConnection: com.android.okhttp.Protocol getProtocol()>();

        $r12 = staticinvoke <com.android.okhttp.internal.http.SpdyTransport: java.util.List writeNameValueBlock(com.android.okhttp.Request,com.android.okhttp.Protocol,java.lang.String)>(r1, $r10, r2);

        $r11 = virtualinvoke $r9.<com.android.okhttp.internal.spdy.SpdyConnection: com.android.okhttp.internal.spdy.SpdyStream newStream(java.util.List,boolean,boolean)>($r12, z0, z1);

        r0.<com.android.okhttp.internal.http.SpdyTransport: com.android.okhttp.internal.spdy.SpdyStream stream> = $r11;

        $r15 = r0.<com.android.okhttp.internal.http.SpdyTransport: com.android.okhttp.internal.spdy.SpdyStream stream>;

        $r14 = r0.<com.android.okhttp.internal.http.SpdyTransport: com.android.okhttp.internal.http.HttpEngine httpEngine>;

        $r13 = $r14.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.OkHttpClient client>;

        $i1 = virtualinvoke $r13.<com.android.okhttp.OkHttpClient: int getReadTimeout()>();

        $l2 = (long) $i1;

        virtualinvoke $r15.<com.android.okhttp.internal.spdy.SpdyStream: void setReadTimeout(long)>($l2);

        return;
    }

    public void writeRequestBody(com.android.okhttp.internal.http.RetryableSink) throws java.io.IOException
    {
        com.android.okhttp.internal.http.SpdyTransport r0;
        com.android.okhttp.internal.http.RetryableSink r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: com.android.okhttp.internal.http.SpdyTransport;

        r1 := @parameter0: com.android.okhttp.internal.http.RetryableSink;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r2;
    }

    public void flushRequest() throws java.io.IOException
    {
        com.android.okhttp.internal.http.SpdyTransport r0;
        com.android.okhttp.internal.spdy.SpdyStream $r1;
        com.android.okio.Sink $r2;

        r0 := @this: com.android.okhttp.internal.http.SpdyTransport;

        $r1 = r0.<com.android.okhttp.internal.http.SpdyTransport: com.android.okhttp.internal.spdy.SpdyStream stream>;

        $r2 = virtualinvoke $r1.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okio.Sink getSink()>();

        interfaceinvoke $r2.<com.android.okio.Sink: void close()>();

        return;
    }

    public com.android.okhttp.Response$Builder readResponseHeaders() throws java.io.IOException
    {
        com.android.okhttp.internal.http.SpdyTransport r0;
        com.android.okhttp.internal.spdy.SpdyStream $r1;
        java.util.List $r2;
        com.android.okhttp.internal.spdy.SpdyConnection $r3;
        com.android.okhttp.Protocol $r4;
        com.android.okhttp.Response$Builder $r5;

        r0 := @this: com.android.okhttp.internal.http.SpdyTransport;

        $r1 = r0.<com.android.okhttp.internal.http.SpdyTransport: com.android.okhttp.internal.spdy.SpdyStream stream>;

        $r2 = virtualinvoke $r1.<com.android.okhttp.internal.spdy.SpdyStream: java.util.List getResponseHeaders()>();

        $r3 = r0.<com.android.okhttp.internal.http.SpdyTransport: com.android.okhttp.internal.spdy.SpdyConnection spdyConnection>;

        $r4 = virtualinvoke $r3.<com.android.okhttp.internal.spdy.SpdyConnection: com.android.okhttp.Protocol getProtocol()>();

        $r5 = staticinvoke <com.android.okhttp.internal.http.SpdyTransport: com.android.okhttp.Response$Builder readNameValueBlock(java.util.List,com.android.okhttp.Protocol)>($r2, $r4);

        return $r5;
    }

    public static java.util.List writeNameValueBlock(com.android.okhttp.Request, com.android.okhttp.Protocol, java.lang.String)
    {
        com.android.okhttp.Request r0;
        com.android.okhttp.Protocol r1, $r19, $r21;
        java.lang.String r2, r5, r8, r9, $r13, $r16, $r28, $r29, $r30, $r47;
        com.android.okhttp.Headers r3;
        java.util.ArrayList r4, $r10;
        java.util.LinkedHashSet r6, $r27;
        int i0, i1, $i2, $i3, $i4, $i5;
        com.android.okio.ByteString r7, $r11, $r14, $r22, $r24, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r46, $r49, $r51;
        com.android.okhttp.internal.spdy.Header $r12, $r15, $r23, $r26, $r39, $r41, $r43, $r45, $r48, $r50;
        java.net.URL $r17, $r18, $r25;
        java.lang.AssertionError $r20;
        java.util.Locale $r31;
        boolean $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        java.lang.Object $r40, $r44;

        r0 := @parameter0: com.android.okhttp.Request;

        r1 := @parameter1: com.android.okhttp.Protocol;

        r2 := @parameter2: java.lang.String;

        r3 = virtualinvoke r0.<com.android.okhttp.Request: com.android.okhttp.Headers headers()>();

        $r10 = new java.util.ArrayList;

        $i2 = virtualinvoke r3.<com.android.okhttp.Headers: int size()>();

        $i3 = $i2 + 10;

        specialinvoke $r10.<java.util.ArrayList: void <init>(int)>($i3);

        r4 = $r10;

        $r12 = new com.android.okhttp.internal.spdy.Header;

        $r11 = <com.android.okhttp.internal.spdy.Header: com.android.okio.ByteString TARGET_METHOD>;

        $r13 = virtualinvoke r0.<com.android.okhttp.Request: java.lang.String method()>();

        specialinvoke $r12.<com.android.okhttp.internal.spdy.Header: void <init>(com.android.okio.ByteString,java.lang.String)>($r11, $r13);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r12);

        $r15 = new com.android.okhttp.internal.spdy.Header;

        $r14 = <com.android.okhttp.internal.spdy.Header: com.android.okio.ByteString TARGET_PATH>;

        $r17 = virtualinvoke r0.<com.android.okhttp.Request: java.net.URL url()>();

        $r16 = staticinvoke <com.android.okhttp.internal.http.RequestLine: java.lang.String requestPath(java.net.URL)>($r17);

        specialinvoke $r15.<com.android.okhttp.internal.spdy.Header: void <init>(com.android.okio.ByteString,java.lang.String)>($r14, $r16);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r15);

        $r18 = virtualinvoke r0.<com.android.okhttp.Request: java.net.URL url()>();

        r5 = staticinvoke <com.android.okhttp.internal.http.HttpEngine: java.lang.String hostHeader(java.net.URL)>($r18);

        $r19 = <com.android.okhttp.Protocol: com.android.okhttp.Protocol SPDY_3>;

        if $r19 != r1 goto label01;

        $r50 = new com.android.okhttp.internal.spdy.Header;

        $r51 = <com.android.okhttp.internal.spdy.Header: com.android.okio.ByteString VERSION>;

        specialinvoke $r50.<com.android.okhttp.internal.spdy.Header: void <init>(com.android.okio.ByteString,java.lang.String)>($r51, r2);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r50);

        $r48 = new com.android.okhttp.internal.spdy.Header;

        $r49 = <com.android.okhttp.internal.spdy.Header: com.android.okio.ByteString TARGET_HOST>;

        specialinvoke $r48.<com.android.okhttp.internal.spdy.Header: void <init>(com.android.okio.ByteString,java.lang.String)>($r49, r5);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r48);

        goto label03;

     label01:
        $r21 = <com.android.okhttp.Protocol: com.android.okhttp.Protocol HTTP_2>;

        if $r21 != r1 goto label02;

        $r23 = new com.android.okhttp.internal.spdy.Header;

        $r22 = <com.android.okhttp.internal.spdy.Header: com.android.okio.ByteString TARGET_AUTHORITY>;

        specialinvoke $r23.<com.android.okhttp.internal.spdy.Header: void <init>(com.android.okio.ByteString,java.lang.String)>($r22, r5);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r23);

        goto label03;

     label02:
        $r20 = new java.lang.AssertionError;

        specialinvoke $r20.<java.lang.AssertionError: void <init>()>();

        throw $r20;

     label03:
        $r26 = new com.android.okhttp.internal.spdy.Header;

        $r24 = <com.android.okhttp.internal.spdy.Header: com.android.okio.ByteString TARGET_SCHEME>;

        $r25 = virtualinvoke r0.<com.android.okhttp.Request: java.net.URL url()>();

        $r28 = virtualinvoke $r25.<java.net.URL: java.lang.String getProtocol()>();

        specialinvoke $r26.<com.android.okhttp.internal.spdy.Header: void <init>(com.android.okio.ByteString,java.lang.String)>($r24, $r28);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r26);

        $r27 = new java.util.LinkedHashSet;

        specialinvoke $r27.<java.util.LinkedHashSet: void <init>()>();

        r6 = $r27;

        i0 = 0;

     label04:
        $i4 = virtualinvoke r3.<com.android.okhttp.Headers: int size()>();

        if i0 >= $i4 goto label11;

        $r30 = virtualinvoke r3.<com.android.okhttp.Headers: java.lang.String name(int)>(i0);

        $r31 = <java.util.Locale: java.util.Locale US>;

        $r29 = virtualinvoke $r30.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r31);

        r7 = staticinvoke <com.android.okio.ByteString: com.android.okio.ByteString encodeUtf8(java.lang.String)>($r29);

        r8 = virtualinvoke r3.<com.android.okhttp.Headers: java.lang.String value(int)>(i0);

        $z5 = staticinvoke <com.android.okhttp.internal.http.SpdyTransport: boolean isProhibitedHeader(com.android.okhttp.Protocol,com.android.okio.ByteString)>(r1, r7);

        if $z5 == 0 goto label05;

        goto label10;

     label05:
        $r32 = <com.android.okhttp.internal.spdy.Header: com.android.okio.ByteString TARGET_METHOD>;

        $z4 = virtualinvoke r7.<com.android.okio.ByteString: boolean equals(java.lang.Object)>($r32);

        if $z4 != 0 goto label10;

        $r34 = <com.android.okhttp.internal.spdy.Header: com.android.okio.ByteString TARGET_PATH>;

        $z7 = virtualinvoke r7.<com.android.okio.ByteString: boolean equals(java.lang.Object)>($r34);

        if $z7 != 0 goto label10;

        $r33 = <com.android.okhttp.internal.spdy.Header: com.android.okio.ByteString TARGET_SCHEME>;

        $z6 = virtualinvoke r7.<com.android.okio.ByteString: boolean equals(java.lang.Object)>($r33);

        if $z6 != 0 goto label10;

        $r36 = <com.android.okhttp.internal.spdy.Header: com.android.okio.ByteString TARGET_AUTHORITY>;

        $z9 = virtualinvoke r7.<com.android.okio.ByteString: boolean equals(java.lang.Object)>($r36);

        if $z9 != 0 goto label10;

        $r35 = <com.android.okhttp.internal.spdy.Header: com.android.okio.ByteString TARGET_HOST>;

        $z8 = virtualinvoke r7.<com.android.okio.ByteString: boolean equals(java.lang.Object)>($r35);

        if $z8 != 0 goto label10;

        $r37 = <com.android.okhttp.internal.spdy.Header: com.android.okio.ByteString VERSION>;

        $z11 = virtualinvoke r7.<com.android.okio.ByteString: boolean equals(java.lang.Object)>($r37);

        if $z11 == 0 goto label06;

        goto label10;

     label06:
        $z10 = interfaceinvoke r6.<java.util.Set: boolean add(java.lang.Object)>(r7);

        if $z10 == 0 goto label07;

        $r43 = new com.android.okhttp.internal.spdy.Header;

        specialinvoke $r43.<com.android.okhttp.internal.spdy.Header: void <init>(com.android.okio.ByteString,java.lang.String)>(r7, r8);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>($r43);

        goto label10;

     label07:
        i1 = 0;

     label08:
        $i5 = interfaceinvoke r4.<java.util.List: int size()>();

        if i1 >= $i5 goto label10;

        $r40 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i1);

        $r39 = (com.android.okhttp.internal.spdy.Header) $r40;

        $r38 = $r39.<com.android.okhttp.internal.spdy.Header: com.android.okio.ByteString name>;

        $z12 = virtualinvoke $r38.<com.android.okio.ByteString: boolean equals(java.lang.Object)>(r7);

        if $z12 == 0 goto label09;

        $r44 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i1);

        $r45 = (com.android.okhttp.internal.spdy.Header) $r44;

        $r46 = $r45.<com.android.okhttp.internal.spdy.Header: com.android.okio.ByteString value>;

        $r47 = virtualinvoke $r46.<com.android.okio.ByteString: java.lang.String utf8()>();

        r9 = staticinvoke <com.android.okhttp.internal.http.SpdyTransport: java.lang.String joinOnNull(java.lang.String,java.lang.String)>($r47, r8);

        $r41 = new com.android.okhttp.internal.spdy.Header;

        specialinvoke $r41.<com.android.okhttp.internal.spdy.Header: void <init>(com.android.okio.ByteString,java.lang.String)>(r7, r9);

        interfaceinvoke r4.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i1, $r41);

        goto label10;

     label09:
        i1 = i1 + 1;

        goto label08;

     label10:
        i0 = i0 + 1;

        goto label04;

     label11:
        return r4;
    }

    private static java.lang.String joinOnNull(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r5;
        java.lang.StringBuilder $r2, $r3, $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(r0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static com.android.okhttp.Response$Builder readNameValueBlock(java.util.List, com.android.okhttp.Protocol) throws java.io.IOException
    {
        java.util.List r0;
        com.android.okhttp.Protocol r1;
        java.lang.String r2, r3, r6, r7, $r10, $r11, $r18, $r31;
        com.android.okhttp.Headers$Builder r4, $r8;
        int i0, i1, i2, $i3, $i4;
        com.android.okio.ByteString r5, $r9, $r29, $r30, $r32;
        com.android.okhttp.Response$Builder $r13, $r21, $r23;
        java.lang.StringBuilder $r14, $r16, $r17, $r19;
        com.android.okhttp.internal.http.StatusLine $r15;
        com.android.okhttp.Headers $r20;
        java.net.ProtocolException $r22, $r25;
        java.lang.Object $r24, $r26;
        com.android.okhttp.internal.spdy.Header $r27, $r28;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: com.android.okhttp.Protocol;

        r2 = null;

        r3 = "HTTP/1.1";

        $r8 = new com.android.okhttp.Headers$Builder;

        specialinvoke $r8.<com.android.okhttp.Headers$Builder: void <init>()>();

        r4 = $r8;

        $r10 = <com.android.okhttp.internal.http.OkHeaders: java.lang.String SELECTED_PROTOCOL>;

        $r9 = r1.<com.android.okhttp.Protocol: com.android.okio.ByteString name>;

        $r11 = virtualinvoke $r9.<com.android.okio.ByteString: java.lang.String utf8()>();

        virtualinvoke r4.<com.android.okhttp.Headers$Builder: com.android.okhttp.Headers$Builder set(java.lang.String,java.lang.String)>($r10, $r11);

        i0 = 0;

     label01:
        $i3 = interfaceinvoke r0.<java.util.List: int size()>();

        if i0 >= $i3 goto label08;

        $r24 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i0);

        $r27 = (com.android.okhttp.internal.spdy.Header) $r24;

        r5 = $r27.<com.android.okhttp.internal.spdy.Header: com.android.okio.ByteString name>;

        $r26 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i0);

        $r28 = (com.android.okhttp.internal.spdy.Header) $r26;

        $r29 = $r28.<com.android.okhttp.internal.spdy.Header: com.android.okio.ByteString value>;

        r6 = virtualinvoke $r29.<com.android.okio.ByteString: java.lang.String utf8()>();

        i1 = 0;

     label02:
        $i4 = virtualinvoke r6.<java.lang.String: int length()>();

        if i1 >= $i4 goto label07;

        i2 = virtualinvoke r6.<java.lang.String: int indexOf(int,int)>(0, i1);

        if i2 != -1 goto label03;

        i2 = virtualinvoke r6.<java.lang.String: int length()>();

     label03:
        r7 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int,int)>(i1, i2);

        $r30 = <com.android.okhttp.internal.spdy.Header: com.android.okio.ByteString RESPONSE_STATUS>;

        $z0 = virtualinvoke r5.<com.android.okio.ByteString: boolean equals(java.lang.Object)>($r30);

        if $z0 == 0 goto label04;

        r2 = r7;

        goto label06;

     label04:
        $r32 = <com.android.okhttp.internal.spdy.Header: com.android.okio.ByteString VERSION>;

        $z2 = virtualinvoke r5.<com.android.okio.ByteString: boolean equals(java.lang.Object)>($r32);

        if $z2 == 0 goto label05;

        r3 = r7;

        goto label06;

     label05:
        $z1 = staticinvoke <com.android.okhttp.internal.http.SpdyTransport: boolean isProhibitedHeader(com.android.okhttp.Protocol,com.android.okio.ByteString)>(r1, r5);

        if $z1 != 0 goto label06;

        $r31 = virtualinvoke r5.<com.android.okio.ByteString: java.lang.String utf8()>();

        virtualinvoke r4.<com.android.okhttp.Headers$Builder: com.android.okhttp.Headers$Builder add(java.lang.String,java.lang.String)>($r31, r7);

     label06:
        i1 = i2 + 1;

        goto label02;

     label07:
        i0 = i0 + 1;

        goto label01;

     label08:
        if r2 != null goto label09;

        $r25 = new java.net.ProtocolException;

        specialinvoke $r25.<java.net.ProtocolException: void <init>(java.lang.String)>("Expected \':status\' header not present");

        throw $r25;

     label09:
        if r3 != null goto label10;

        $r22 = new java.net.ProtocolException;

        specialinvoke $r22.<java.net.ProtocolException: void <init>(java.lang.String)>("Expected \':version\' header not present");

        throw $r22;

     label10:
        $r13 = new com.android.okhttp.Response$Builder;

        specialinvoke $r13.<com.android.okhttp.Response$Builder: void <init>()>();

        $r15 = new com.android.okhttp.internal.http.StatusLine;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<com.android.okhttp.internal.http.StatusLine: void <init>(java.lang.String)>($r18);

        $r21 = virtualinvoke $r13.<com.android.okhttp.Response$Builder: com.android.okhttp.Response$Builder statusLine(com.android.okhttp.internal.http.StatusLine)>($r15);

        $r20 = virtualinvoke r4.<com.android.okhttp.Headers$Builder: com.android.okhttp.Headers build()>();

        $r23 = virtualinvoke $r21.<com.android.okhttp.Response$Builder: com.android.okhttp.Response$Builder headers(com.android.okhttp.Headers)>($r20);

        return $r23;
    }

    public void emptyTransferStream()
    {
        com.android.okhttp.internal.http.SpdyTransport r0;

        r0 := @this: com.android.okhttp.internal.http.SpdyTransport;

        return;
    }

    public com.android.okio.Source getTransferStream(java.net.CacheRequest) throws java.io.IOException
    {
        com.android.okhttp.internal.http.SpdyTransport r0;
        java.net.CacheRequest r1;
        com.android.okhttp.internal.http.SpdyTransport$SpdySource $r2;
        com.android.okhttp.internal.spdy.SpdyStream $r3;

        r0 := @this: com.android.okhttp.internal.http.SpdyTransport;

        r1 := @parameter0: java.net.CacheRequest;

        $r2 = new com.android.okhttp.internal.http.SpdyTransport$SpdySource;

        $r3 = r0.<com.android.okhttp.internal.http.SpdyTransport: com.android.okhttp.internal.spdy.SpdyStream stream>;

        specialinvoke $r2.<com.android.okhttp.internal.http.SpdyTransport$SpdySource: void <init>(com.android.okhttp.internal.spdy.SpdyStream,java.net.CacheRequest)>($r3, r1);

        return $r2;
    }

    public void releaseConnectionOnIdle()
    {
        com.android.okhttp.internal.http.SpdyTransport r0;

        r0 := @this: com.android.okhttp.internal.http.SpdyTransport;

        return;
    }

    public boolean canReuseConnection()
    {
        com.android.okhttp.internal.http.SpdyTransport r0;

        r0 := @this: com.android.okhttp.internal.http.SpdyTransport;

        return 1;
    }

    private static boolean isProhibitedHeader(com.android.okhttp.Protocol, com.android.okio.ByteString)
    {
        com.android.okhttp.Protocol r0, $r2, $r3;
        com.android.okio.ByteString r1;
        java.lang.AssertionError $r4;
        java.util.List $r5, $r6;
        boolean $z0, $z1;

        r0 := @parameter0: com.android.okhttp.Protocol;

        r1 := @parameter1: com.android.okio.ByteString;

        $r2 = <com.android.okhttp.Protocol: com.android.okhttp.Protocol SPDY_3>;

        if r0 != $r2 goto label1;

        $r6 = <com.android.okhttp.internal.http.SpdyTransport: java.util.List SPDY_3_PROHIBITED_HEADERS>;

        $z1 = interfaceinvoke $r6.<java.util.List: boolean contains(java.lang.Object)>(r1);

        return $z1;

     label1:
        $r3 = <com.android.okhttp.Protocol: com.android.okhttp.Protocol HTTP_2>;

        if r0 != $r3 goto label2;

        $r5 = <com.android.okhttp.internal.http.SpdyTransport: java.util.List HTTP_2_PROHIBITED_HEADERS>;

        $z0 = interfaceinvoke $r5.<java.util.List: boolean contains(java.lang.Object)>(r1);

        return $z0;

     label2:
        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>(r0);

        throw $r4;
    }

    static void <clinit>()
    {
        com.android.okio.ByteString[] $r0, $r7;
        com.android.okio.ByteString $r1, $r2, $r3, $r4, $r5, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r16;
        java.util.List $r6, $r15;

        $r0 = newarray (com.android.okio.ByteString)[5];

        $r1 = staticinvoke <com.android.okio.ByteString: com.android.okio.ByteString encodeUtf8(java.lang.String)>("connection");

        $r0[0] = $r1;

        $r2 = staticinvoke <com.android.okio.ByteString: com.android.okio.ByteString encodeUtf8(java.lang.String)>("host");

        $r0[1] = $r2;

        $r3 = staticinvoke <com.android.okio.ByteString: com.android.okio.ByteString encodeUtf8(java.lang.String)>("keep-alive");

        $r0[2] = $r3;

        $r4 = staticinvoke <com.android.okio.ByteString: com.android.okio.ByteString encodeUtf8(java.lang.String)>("proxy-connection");

        $r0[3] = $r4;

        $r5 = staticinvoke <com.android.okio.ByteString: com.android.okio.ByteString encodeUtf8(java.lang.String)>("transfer-encoding");

        $r0[4] = $r5;

        $r6 = staticinvoke <com.android.okhttp.internal.Util: java.util.List immutableList(java.lang.Object[])>($r0);

        <com.android.okhttp.internal.http.SpdyTransport: java.util.List SPDY_3_PROHIBITED_HEADERS> = $r6;

        $r7 = newarray (com.android.okio.ByteString)[8];

        $r8 = staticinvoke <com.android.okio.ByteString: com.android.okio.ByteString encodeUtf8(java.lang.String)>("connection");

        $r7[0] = $r8;

        $r9 = staticinvoke <com.android.okio.ByteString: com.android.okio.ByteString encodeUtf8(java.lang.String)>("host");

        $r7[1] = $r9;

        $r10 = staticinvoke <com.android.okio.ByteString: com.android.okio.ByteString encodeUtf8(java.lang.String)>("keep-alive");

        $r7[2] = $r10;

        $r11 = staticinvoke <com.android.okio.ByteString: com.android.okio.ByteString encodeUtf8(java.lang.String)>("proxy-connection");

        $r7[3] = $r11;

        $r12 = staticinvoke <com.android.okio.ByteString: com.android.okio.ByteString encodeUtf8(java.lang.String)>("te");

        $r7[4] = $r12;

        $r13 = staticinvoke <com.android.okio.ByteString: com.android.okio.ByteString encodeUtf8(java.lang.String)>("transfer-encoding");

        $r7[5] = $r13;

        $r14 = staticinvoke <com.android.okio.ByteString: com.android.okio.ByteString encodeUtf8(java.lang.String)>("encoding");

        $r7[6] = $r14;

        $r16 = staticinvoke <com.android.okio.ByteString: com.android.okio.ByteString encodeUtf8(java.lang.String)>("upgrade");

        $r7[7] = $r16;

        $r15 = staticinvoke <com.android.okhttp.internal.Util: java.util.List immutableList(java.lang.Object[])>($r7);

        <com.android.okhttp.internal.http.SpdyTransport: java.util.List HTTP_2_PROHIBITED_HEADERS> = $r15;

        return;
    }
}
