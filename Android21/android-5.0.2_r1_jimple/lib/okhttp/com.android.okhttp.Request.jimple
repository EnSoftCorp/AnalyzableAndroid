public final class com.android.okhttp.Request extends java.lang.Object
{
    private final java.net.URL url;
    private final java.lang.String method;
    private final com.android.okhttp.Headers headers;
    private final com.android.okhttp.Request$Body body;
    private final java.lang.Object tag;
    private volatile com.android.okhttp.Request$ParsedHeaders parsedHeaders;
    private volatile java.net.URI uri;
    private volatile com.android.okhttp.CacheControl cacheControl;

    private void <init>(com.android.okhttp.Request$Builder)
    {
        com.android.okhttp.Request r0;
        com.android.okhttp.Request$Builder r1;
        java.net.URL $r2;
        java.lang.String $r3;
        com.android.okhttp.Headers$Builder $r4;
        com.android.okhttp.Headers $r5;
        com.android.okhttp.Request$Body $r6;
        java.lang.Object $r7, $r8;

        r0 := @this: com.android.okhttp.Request;

        r1 := @parameter0: com.android.okhttp.Request$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.android.okhttp.Request$Builder: java.net.URL access$000(com.android.okhttp.Request$Builder)>(r1);

        r0.<com.android.okhttp.Request: java.net.URL url> = $r2;

        $r3 = staticinvoke <com.android.okhttp.Request$Builder: java.lang.String access$100(com.android.okhttp.Request$Builder)>(r1);

        r0.<com.android.okhttp.Request: java.lang.String method> = $r3;

        $r4 = staticinvoke <com.android.okhttp.Request$Builder: com.android.okhttp.Headers$Builder access$200(com.android.okhttp.Request$Builder)>(r1);

        $r5 = virtualinvoke $r4.<com.android.okhttp.Headers$Builder: com.android.okhttp.Headers build()>();

        r0.<com.android.okhttp.Request: com.android.okhttp.Headers headers> = $r5;

        $r6 = staticinvoke <com.android.okhttp.Request$Builder: com.android.okhttp.Request$Body access$300(com.android.okhttp.Request$Builder)>(r1);

        r0.<com.android.okhttp.Request: com.android.okhttp.Request$Body body> = $r6;

        $r7 = staticinvoke <com.android.okhttp.Request$Builder: java.lang.Object access$400(com.android.okhttp.Request$Builder)>(r1);

        if $r7 == null goto label1;

        $r8 = staticinvoke <com.android.okhttp.Request$Builder: java.lang.Object access$400(com.android.okhttp.Request$Builder)>(r1);

        goto label2;

     label1:
        $r8 = r0;

     label2:
        r0.<com.android.okhttp.Request: java.lang.Object tag> = $r8;

        return;
    }

    public java.net.URL url()
    {
        com.android.okhttp.Request r0;
        java.net.URL $r1;

        r0 := @this: com.android.okhttp.Request;

        $r1 = r0.<com.android.okhttp.Request: java.net.URL url>;

        return $r1;
    }

    public java.net.URI uri() throws java.io.IOException
    {
        com.android.okhttp.Request r0;
        java.net.URI r1, $r4;
        com.android.okhttp.internal.Platform $r2;
        java.net.URL $r3;
        java.net.URISyntaxException $r5, r8;
        java.io.IOException $r6;
        java.lang.String $r7;

        r0 := @this: com.android.okhttp.Request;

     label1:
        r1 = r0.<com.android.okhttp.Request: java.net.URI uri>;

        if r1 == null goto label2;

        $r4 = r1;

        goto label3;

     label2:
        $r2 = staticinvoke <com.android.okhttp.internal.Platform: com.android.okhttp.internal.Platform get()>();

        $r3 = r0.<com.android.okhttp.Request: java.net.URL url>;

        $r4 = virtualinvoke $r2.<com.android.okhttp.internal.Platform: java.net.URI toUriLenient(java.net.URL)>($r3);

        r0.<com.android.okhttp.Request: java.net.URI uri> = $r4;

     label3:
        return $r4;

     label4:
        $r5 := @caughtexception;

        r8 = $r5;

        $r6 = new java.io.IOException;

        $r7 = virtualinvoke r8.<java.net.URISyntaxException: java.lang.String getMessage()>();

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>($r7);

        throw $r6;

        catch java.net.URISyntaxException from label1 to label3 with label4;
    }

    public java.lang.String urlString()
    {
        com.android.okhttp.Request r0;
        java.net.URL $r1;
        java.lang.String $r2;

        r0 := @this: com.android.okhttp.Request;

        $r1 = r0.<com.android.okhttp.Request: java.net.URL url>;

        $r2 = virtualinvoke $r1.<java.net.URL: java.lang.String toString()>();

        return $r2;
    }

    public java.lang.String method()
    {
        com.android.okhttp.Request r0;
        java.lang.String $r1;

        r0 := @this: com.android.okhttp.Request;

        $r1 = r0.<com.android.okhttp.Request: java.lang.String method>;

        return $r1;
    }

    public com.android.okhttp.Headers headers()
    {
        com.android.okhttp.Request r0;
        com.android.okhttp.Headers $r1;

        r0 := @this: com.android.okhttp.Request;

        $r1 = r0.<com.android.okhttp.Request: com.android.okhttp.Headers headers>;

        return $r1;
    }

    public java.lang.String header(java.lang.String)
    {
        com.android.okhttp.Request r0;
        java.lang.String r1, $r3;
        com.android.okhttp.Headers $r2;

        r0 := @this: com.android.okhttp.Request;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.okhttp.Request: com.android.okhttp.Headers headers>;

        $r3 = virtualinvoke $r2.<com.android.okhttp.Headers: java.lang.String get(java.lang.String)>(r1);

        return $r3;
    }

    public java.util.List headers(java.lang.String)
    {
        com.android.okhttp.Request r0;
        java.lang.String r1;
        com.android.okhttp.Headers $r2;
        java.util.List $r3;

        r0 := @this: com.android.okhttp.Request;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.okhttp.Request: com.android.okhttp.Headers headers>;

        $r3 = virtualinvoke $r2.<com.android.okhttp.Headers: java.util.List values(java.lang.String)>(r1);

        return $r3;
    }

    public com.android.okhttp.Request$Body body()
    {
        com.android.okhttp.Request r0;
        com.android.okhttp.Request$Body $r1;

        r0 := @this: com.android.okhttp.Request;

        $r1 = r0.<com.android.okhttp.Request: com.android.okhttp.Request$Body body>;

        return $r1;
    }

    public java.lang.Object tag()
    {
        com.android.okhttp.Request r0;
        java.lang.Object $r1;

        r0 := @this: com.android.okhttp.Request;

        $r1 = r0.<com.android.okhttp.Request: java.lang.Object tag>;

        return $r1;
    }

    public com.android.okhttp.Request$Builder newBuilder()
    {
        com.android.okhttp.Request r0;
        com.android.okhttp.Request$Builder $r1;

        r0 := @this: com.android.okhttp.Request;

        $r1 = new com.android.okhttp.Request$Builder;

        specialinvoke $r1.<com.android.okhttp.Request$Builder: void <init>(com.android.okhttp.Request,com.android.okhttp.Request$1)>(r0, null);

        return $r1;
    }

    public com.android.okhttp.Headers getHeaders()
    {
        com.android.okhttp.Request r0;
        com.android.okhttp.Headers $r1;

        r0 := @this: com.android.okhttp.Request;

        $r1 = r0.<com.android.okhttp.Request: com.android.okhttp.Headers headers>;

        return $r1;
    }

    public java.lang.String getUserAgent()
    {
        com.android.okhttp.Request r0;
        com.android.okhttp.Request$ParsedHeaders $r1;
        java.lang.String $r2;

        r0 := @this: com.android.okhttp.Request;

        $r1 = specialinvoke r0.<com.android.okhttp.Request: com.android.okhttp.Request$ParsedHeaders parsedHeaders()>();

        $r2 = staticinvoke <com.android.okhttp.Request$ParsedHeaders: java.lang.String access$600(com.android.okhttp.Request$ParsedHeaders)>($r1);

        return $r2;
    }

    public java.lang.String getProxyAuthorization()
    {
        com.android.okhttp.Request r0;
        com.android.okhttp.Request$ParsedHeaders $r1;
        java.lang.String $r2;

        r0 := @this: com.android.okhttp.Request;

        $r1 = specialinvoke r0.<com.android.okhttp.Request: com.android.okhttp.Request$ParsedHeaders parsedHeaders()>();

        $r2 = staticinvoke <com.android.okhttp.Request$ParsedHeaders: java.lang.String access$700(com.android.okhttp.Request$ParsedHeaders)>($r1);

        return $r2;
    }

    private com.android.okhttp.Request$ParsedHeaders parsedHeaders()
    {
        com.android.okhttp.Request r0;
        com.android.okhttp.Request$ParsedHeaders r1, $r2;
        com.android.okhttp.Headers $r3;

        r0 := @this: com.android.okhttp.Request;

        r1 = r0.<com.android.okhttp.Request: com.android.okhttp.Request$ParsedHeaders parsedHeaders>;

        if r1 == null goto label1;

        $r2 = r1;

        goto label2;

     label1:
        $r2 = new com.android.okhttp.Request$ParsedHeaders;

        $r3 = r0.<com.android.okhttp.Request: com.android.okhttp.Headers headers>;

        specialinvoke $r2.<com.android.okhttp.Request$ParsedHeaders: void <init>(com.android.okhttp.Headers)>($r3);

        r0.<com.android.okhttp.Request: com.android.okhttp.Request$ParsedHeaders parsedHeaders> = $r2;

     label2:
        return $r2;
    }

    public com.android.okhttp.CacheControl cacheControl()
    {
        com.android.okhttp.Request r0;
        com.android.okhttp.CacheControl r1, $r3;
        com.android.okhttp.Headers $r2;

        r0 := @this: com.android.okhttp.Request;

        r1 = r0.<com.android.okhttp.Request: com.android.okhttp.CacheControl cacheControl>;

        if r1 == null goto label1;

        $r3 = r1;

        goto label2;

     label1:
        $r2 = r0.<com.android.okhttp.Request: com.android.okhttp.Headers headers>;

        $r3 = staticinvoke <com.android.okhttp.CacheControl: com.android.okhttp.CacheControl parse(com.android.okhttp.Headers)>($r2);

        r0.<com.android.okhttp.Request: com.android.okhttp.CacheControl cacheControl> = $r3;

     label2:
        return $r3;
    }

    public boolean isHttps()
    {
        com.android.okhttp.Request r0;
        java.net.URL $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: com.android.okhttp.Request;

        $r1 = virtualinvoke r0.<com.android.okhttp.Request: java.net.URL url()>();

        $r2 = virtualinvoke $r1.<java.net.URL: java.lang.String getProtocol()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("https");

        return $z0;
    }

    static java.net.URL access$800(com.android.okhttp.Request)
    {
        com.android.okhttp.Request r0;
        java.net.URL $r1;

        r0 := @parameter0: com.android.okhttp.Request;

        $r1 = r0.<com.android.okhttp.Request: java.net.URL url>;

        return $r1;
    }

    static java.lang.String access$900(com.android.okhttp.Request)
    {
        com.android.okhttp.Request r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.okhttp.Request;

        $r1 = r0.<com.android.okhttp.Request: java.lang.String method>;

        return $r1;
    }

    static com.android.okhttp.Request$Body access$1000(com.android.okhttp.Request)
    {
        com.android.okhttp.Request r0;
        com.android.okhttp.Request$Body $r1;

        r0 := @parameter0: com.android.okhttp.Request;

        $r1 = r0.<com.android.okhttp.Request: com.android.okhttp.Request$Body body>;

        return $r1;
    }

    static java.lang.Object access$1100(com.android.okhttp.Request)
    {
        com.android.okhttp.Request r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.okhttp.Request;

        $r1 = r0.<com.android.okhttp.Request: java.lang.Object tag>;

        return $r1;
    }

    static com.android.okhttp.Headers access$1200(com.android.okhttp.Request)
    {
        com.android.okhttp.Request r0;
        com.android.okhttp.Headers $r1;

        r0 := @parameter0: com.android.okhttp.Request;

        $r1 = r0.<com.android.okhttp.Request: com.android.okhttp.Headers headers>;

        return $r1;
    }

    void <init>(com.android.okhttp.Request$Builder, com.android.okhttp.Request$1)
    {
        com.android.okhttp.Request r0;
        com.android.okhttp.Request$Builder r1;
        com.android.okhttp.Request$1 r2;

        r0 := @this: com.android.okhttp.Request;

        r1 := @parameter0: com.android.okhttp.Request$Builder;

        r2 := @parameter1: com.android.okhttp.Request$1;

        specialinvoke r0.<com.android.okhttp.Request: void <init>(com.android.okhttp.Request$Builder)>(r1);

        return;
    }
}
