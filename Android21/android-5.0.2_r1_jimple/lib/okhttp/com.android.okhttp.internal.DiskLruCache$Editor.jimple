public final class com.android.okhttp.internal.DiskLruCache$Editor extends java.lang.Object
{
    private final com.android.okhttp.internal.DiskLruCache$Entry entry;
    private final boolean[] written;
    private boolean hasErrors;
    private boolean committed;
    final com.android.okhttp.internal.DiskLruCache this$0;

    private void <init>(com.android.okhttp.internal.DiskLruCache, com.android.okhttp.internal.DiskLruCache$Entry)
    {
        com.android.okhttp.internal.DiskLruCache$Editor r0;
        com.android.okhttp.internal.DiskLruCache r1;
        com.android.okhttp.internal.DiskLruCache$Entry r2;
        boolean $z0;
        int $i0;
        boolean[] $r3;

        r0 := @this: com.android.okhttp.internal.DiskLruCache$Editor;

        r1 := @parameter0: com.android.okhttp.internal.DiskLruCache;

        r2 := @parameter1: com.android.okhttp.internal.DiskLruCache$Entry;

        r0.<com.android.okhttp.internal.DiskLruCache$Editor: com.android.okhttp.internal.DiskLruCache this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.okhttp.internal.DiskLruCache$Editor: com.android.okhttp.internal.DiskLruCache$Entry entry> = r2;

        $z0 = staticinvoke <com.android.okhttp.internal.DiskLruCache$Entry: boolean access$600(com.android.okhttp.internal.DiskLruCache$Entry)>(r2);

        if $z0 == 0 goto label1;

        $r3 = null;

        goto label2;

     label1:
        $i0 = staticinvoke <com.android.okhttp.internal.DiskLruCache: int access$1800(com.android.okhttp.internal.DiskLruCache)>(r1);

        $r3 = newarray (boolean)[$i0];

     label2:
        r0.<com.android.okhttp.internal.DiskLruCache$Editor: boolean[] written> = $r3;

        return;
    }

    public java.io.InputStream newInputStream(int) throws java.io.IOException
    {
        com.android.okhttp.internal.DiskLruCache$Editor r0, $r6;
        int i0;
        com.android.okhttp.internal.DiskLruCache r1, $r4;
        java.lang.Throwable r3, $r13;
        com.android.okhttp.internal.DiskLruCache$Entry $r5, $r7, $r9;
        boolean $z0;
        java.io.FileInputStream $r8;
        java.io.File $r10;
        java.lang.IllegalStateException $r11;
        java.io.FileNotFoundException $r12;

        r0 := @this: com.android.okhttp.internal.DiskLruCache$Editor;

        i0 := @parameter0: int;

        $r4 = r0.<com.android.okhttp.internal.DiskLruCache$Editor: com.android.okhttp.internal.DiskLruCache this$0>;

        r1 = $r4;

        entermonitor $r4;

     label01:
        $r5 = r0.<com.android.okhttp.internal.DiskLruCache$Editor: com.android.okhttp.internal.DiskLruCache$Entry entry>;

        $r6 = staticinvoke <com.android.okhttp.internal.DiskLruCache$Entry: com.android.okhttp.internal.DiskLruCache$Editor access$700(com.android.okhttp.internal.DiskLruCache$Entry)>($r5);

        if $r6 == r0 goto label02;

        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>()>();

        throw $r11;

     label02:
        $r7 = r0.<com.android.okhttp.internal.DiskLruCache$Editor: com.android.okhttp.internal.DiskLruCache$Entry entry>;

        $z0 = staticinvoke <com.android.okhttp.internal.DiskLruCache$Entry: boolean access$600(com.android.okhttp.internal.DiskLruCache$Entry)>($r7);

        if $z0 != 0 goto label04;

        exitmonitor r1;

     label03:
        return null;

     label04:
        $r8 = new java.io.FileInputStream;

        $r9 = r0.<com.android.okhttp.internal.DiskLruCache$Editor: com.android.okhttp.internal.DiskLruCache$Entry entry>;

        $r10 = virtualinvoke $r9.<com.android.okhttp.internal.DiskLruCache$Entry: java.io.File getCleanFile(int)>(i0);

        specialinvoke $r8.<java.io.FileInputStream: void <init>(java.io.File)>($r10);

     label05:
        exitmonitor r1;

     label06:
        return $r8;

     label07:
        $r12 := @caughtexception;

        exitmonitor r1;

     label08:
        return null;

     label09:
        $r13 := @caughtexception;

        r3 = $r13;

        exitmonitor r1;

     label10:
        throw r3;

        catch java.io.FileNotFoundException from label04 to label05 with label07;
        catch java.lang.Throwable from label01 to label03 with label09;
        catch java.lang.Throwable from label04 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public java.lang.String getString(int) throws java.io.IOException
    {
        com.android.okhttp.internal.DiskLruCache$Editor r0;
        int i0;
        java.io.InputStream r1;
        java.lang.String $r2;

        r0 := @this: com.android.okhttp.internal.DiskLruCache$Editor;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<com.android.okhttp.internal.DiskLruCache$Editor: java.io.InputStream newInputStream(int)>(i0);

        if r1 == null goto label1;

        $r2 = staticinvoke <com.android.okhttp.internal.DiskLruCache: java.lang.String access$1700(java.io.InputStream)>(r1);

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public java.io.OutputStream newOutputStream(int) throws java.io.IOException
    {
        com.android.okhttp.internal.DiskLruCache$Editor r0, $r9;
        int i0;
        com.android.okhttp.internal.DiskLruCache r1, $r7, $r21;
        java.io.File r2, $r20;
        java.io.FileOutputStream r3, $r12, $r22;
        java.lang.Throwable r6, $r16;
        com.android.okhttp.internal.DiskLruCache$Entry $r8, $r10, $r11;
        boolean $z0;
        com.android.okhttp.internal.DiskLruCache$Editor$FaultHidingOutputStream $r13;
        java.lang.IllegalStateException $r14;
        boolean[] $r15;
        java.io.OutputStream $r17;
        java.io.FileNotFoundException $r18, $r19;

        r0 := @this: com.android.okhttp.internal.DiskLruCache$Editor;

        i0 := @parameter0: int;

        $r7 = r0.<com.android.okhttp.internal.DiskLruCache$Editor: com.android.okhttp.internal.DiskLruCache this$0>;

        r1 = $r7;

        entermonitor $r7;

     label01:
        $r8 = r0.<com.android.okhttp.internal.DiskLruCache$Editor: com.android.okhttp.internal.DiskLruCache$Entry entry>;

        $r9 = staticinvoke <com.android.okhttp.internal.DiskLruCache$Entry: com.android.okhttp.internal.DiskLruCache$Editor access$700(com.android.okhttp.internal.DiskLruCache$Entry)>($r8);

        if $r9 == r0 goto label02;

        $r14 = new java.lang.IllegalStateException;

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>()>();

        throw $r14;

     label02:
        $r10 = r0.<com.android.okhttp.internal.DiskLruCache$Editor: com.android.okhttp.internal.DiskLruCache$Entry entry>;

        $z0 = staticinvoke <com.android.okhttp.internal.DiskLruCache$Entry: boolean access$600(com.android.okhttp.internal.DiskLruCache$Entry)>($r10);

        if $z0 != 0 goto label03;

        $r15 = r0.<com.android.okhttp.internal.DiskLruCache$Editor: boolean[] written>;

        $r15[i0] = 1;

     label03:
        $r11 = r0.<com.android.okhttp.internal.DiskLruCache$Editor: com.android.okhttp.internal.DiskLruCache$Entry entry>;

        r2 = virtualinvoke $r11.<com.android.okhttp.internal.DiskLruCache$Entry: java.io.File getDirtyFile(int)>(i0);

     label04:
        $r12 = new java.io.FileOutputStream;

        specialinvoke $r12.<java.io.FileOutputStream: void <init>(java.io.File)>(r2);

        r3 = $r12;

     label05:
        goto label11;

     label06:
        $r19 := @caughtexception;

        $r21 = r0.<com.android.okhttp.internal.DiskLruCache$Editor: com.android.okhttp.internal.DiskLruCache this$0>;

        $r20 = staticinvoke <com.android.okhttp.internal.DiskLruCache: java.io.File access$1900(com.android.okhttp.internal.DiskLruCache)>($r21);

        virtualinvoke $r20.<java.io.File: boolean mkdirs()>();

     label07:
        $r22 = new java.io.FileOutputStream;

        specialinvoke $r22.<java.io.FileOutputStream: void <init>(java.io.File)>(r2);

        r3 = $r22;

     label08:
        goto label11;

     label09:
        $r18 := @caughtexception;

        $r17 = staticinvoke <com.android.okhttp.internal.DiskLruCache: java.io.OutputStream access$2000()>();

        exitmonitor r1;

     label10:
        return $r17;

     label11:
        $r13 = new com.android.okhttp.internal.DiskLruCache$Editor$FaultHidingOutputStream;

        specialinvoke $r13.<com.android.okhttp.internal.DiskLruCache$Editor$FaultHidingOutputStream: void <init>(com.android.okhttp.internal.DiskLruCache$Editor,java.io.OutputStream,com.android.okhttp.internal.DiskLruCache$1)>(r0, r3, null);

        exitmonitor r1;

     label12:
        return $r13;

     label13:
        $r16 := @caughtexception;

        r6 = $r16;

        exitmonitor r1;

     label14:
        throw r6;

        catch java.io.FileNotFoundException from label04 to label05 with label06;
        catch java.io.FileNotFoundException from label07 to label08 with label09;
        catch java.lang.Throwable from label01 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public void set(int, java.lang.String) throws java.io.IOException
    {
        com.android.okhttp.internal.DiskLruCache$Editor r0;
        int i0;
        java.lang.String r1;
        com.android.okio.BufferedSink r2;
        java.io.OutputStream $r3;
        com.android.okio.Sink $r4;

        r0 := @this: com.android.okhttp.internal.DiskLruCache$Editor;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<com.android.okhttp.internal.DiskLruCache$Editor: java.io.OutputStream newOutputStream(int)>(i0);

        $r4 = staticinvoke <com.android.okio.Okio: com.android.okio.Sink sink(java.io.OutputStream)>($r3);

        r2 = staticinvoke <com.android.okio.Okio: com.android.okio.BufferedSink buffer(com.android.okio.Sink)>($r4);

        interfaceinvoke r2.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeUtf8(java.lang.String)>(r1);

        interfaceinvoke r2.<com.android.okio.BufferedSink: void close()>();

        return;
    }

    public void commit() throws java.io.IOException
    {
        com.android.okhttp.internal.DiskLruCache$Editor r0;
        boolean $z0;
        com.android.okhttp.internal.DiskLruCache $r1, $r2, $r4;
        com.android.okhttp.internal.DiskLruCache$Entry $r3;
        java.lang.String $r5;

        r0 := @this: com.android.okhttp.internal.DiskLruCache$Editor;

        $z0 = r0.<com.android.okhttp.internal.DiskLruCache$Editor: boolean hasErrors>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.okhttp.internal.DiskLruCache$Editor: com.android.okhttp.internal.DiskLruCache this$0>;

        staticinvoke <com.android.okhttp.internal.DiskLruCache: void access$2200(com.android.okhttp.internal.DiskLruCache,com.android.okhttp.internal.DiskLruCache$Editor,boolean)>($r2, r0, 0);

        $r4 = r0.<com.android.okhttp.internal.DiskLruCache$Editor: com.android.okhttp.internal.DiskLruCache this$0>;

        $r3 = r0.<com.android.okhttp.internal.DiskLruCache$Editor: com.android.okhttp.internal.DiskLruCache$Entry entry>;

        $r5 = staticinvoke <com.android.okhttp.internal.DiskLruCache$Entry: java.lang.String access$1100(com.android.okhttp.internal.DiskLruCache$Entry)>($r3);

        virtualinvoke $r4.<com.android.okhttp.internal.DiskLruCache: boolean remove(java.lang.String)>($r5);

        goto label2;

     label1:
        $r1 = r0.<com.android.okhttp.internal.DiskLruCache$Editor: com.android.okhttp.internal.DiskLruCache this$0>;

        staticinvoke <com.android.okhttp.internal.DiskLruCache: void access$2200(com.android.okhttp.internal.DiskLruCache,com.android.okhttp.internal.DiskLruCache$Editor,boolean)>($r1, r0, 1);

     label2:
        r0.<com.android.okhttp.internal.DiskLruCache$Editor: boolean committed> = 1;

        return;
    }

    public void abort() throws java.io.IOException
    {
        com.android.okhttp.internal.DiskLruCache$Editor r0;
        com.android.okhttp.internal.DiskLruCache $r1;

        r0 := @this: com.android.okhttp.internal.DiskLruCache$Editor;

        $r1 = r0.<com.android.okhttp.internal.DiskLruCache$Editor: com.android.okhttp.internal.DiskLruCache this$0>;

        staticinvoke <com.android.okhttp.internal.DiskLruCache: void access$2200(com.android.okhttp.internal.DiskLruCache,com.android.okhttp.internal.DiskLruCache$Editor,boolean)>($r1, r0, 0);

        return;
    }

    public void abortUnlessCommitted()
    {
        com.android.okhttp.internal.DiskLruCache$Editor r0;
        boolean $z0;
        java.io.IOException $r2;

        r0 := @this: com.android.okhttp.internal.DiskLruCache$Editor;

        $z0 = r0.<com.android.okhttp.internal.DiskLruCache$Editor: boolean committed>;

        if $z0 != 0 goto label4;

     label1:
        virtualinvoke r0.<com.android.okhttp.internal.DiskLruCache$Editor: void abort()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    void <init>(com.android.okhttp.internal.DiskLruCache, com.android.okhttp.internal.DiskLruCache$Entry, com.android.okhttp.internal.DiskLruCache$1)
    {
        com.android.okhttp.internal.DiskLruCache$Editor r0;
        com.android.okhttp.internal.DiskLruCache r1;
        com.android.okhttp.internal.DiskLruCache$Entry r2;
        com.android.okhttp.internal.DiskLruCache$1 r3;

        r0 := @this: com.android.okhttp.internal.DiskLruCache$Editor;

        r1 := @parameter0: com.android.okhttp.internal.DiskLruCache;

        r2 := @parameter1: com.android.okhttp.internal.DiskLruCache$Entry;

        r3 := @parameter2: com.android.okhttp.internal.DiskLruCache$1;

        specialinvoke r0.<com.android.okhttp.internal.DiskLruCache$Editor: void <init>(com.android.okhttp.internal.DiskLruCache,com.android.okhttp.internal.DiskLruCache$Entry)>(r1, r2);

        return;
    }

    static com.android.okhttp.internal.DiskLruCache$Entry access$1400(com.android.okhttp.internal.DiskLruCache$Editor)
    {
        com.android.okhttp.internal.DiskLruCache$Editor r0;
        com.android.okhttp.internal.DiskLruCache$Entry $r1;

        r0 := @parameter0: com.android.okhttp.internal.DiskLruCache$Editor;

        $r1 = r0.<com.android.okhttp.internal.DiskLruCache$Editor: com.android.okhttp.internal.DiskLruCache$Entry entry>;

        return $r1;
    }

    static boolean[] access$1500(com.android.okhttp.internal.DiskLruCache$Editor)
    {
        com.android.okhttp.internal.DiskLruCache$Editor r0;
        boolean[] $r1;

        r0 := @parameter0: com.android.okhttp.internal.DiskLruCache$Editor;

        $r1 = r0.<com.android.okhttp.internal.DiskLruCache$Editor: boolean[] written>;

        return $r1;
    }

    static boolean access$2302(com.android.okhttp.internal.DiskLruCache$Editor, boolean)
    {
        com.android.okhttp.internal.DiskLruCache$Editor r0;
        boolean z0;

        r0 := @parameter0: com.android.okhttp.internal.DiskLruCache$Editor;

        z0 := @parameter1: boolean;

        r0.<com.android.okhttp.internal.DiskLruCache$Editor: boolean hasErrors> = z0;

        return z0;
    }
}
