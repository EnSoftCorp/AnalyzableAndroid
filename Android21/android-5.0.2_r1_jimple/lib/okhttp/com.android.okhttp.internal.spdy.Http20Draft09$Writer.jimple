final class com.android.okhttp.internal.spdy.Http20Draft09$Writer extends java.lang.Object implements com.android.okhttp.internal.spdy.FrameWriter
{
    private final com.android.okio.BufferedSink sink;
    private final boolean client;
    private final com.android.okio.OkBuffer hpackBuffer;
    private final com.android.okhttp.internal.spdy.HpackDraft05$Writer hpackWriter;
    private boolean closed;

    void <init>(com.android.okio.BufferedSink, boolean)
    {
        com.android.okhttp.internal.spdy.Http20Draft09$Writer r0;
        com.android.okio.BufferedSink r1;
        boolean z0;
        com.android.okio.OkBuffer $r2, $r4;
        com.android.okhttp.internal.spdy.HpackDraft05$Writer $r3;

        r0 := @this: com.android.okhttp.internal.spdy.Http20Draft09$Writer;

        r1 := @parameter0: com.android.okio.BufferedSink;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: com.android.okio.BufferedSink sink> = r1;

        r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: boolean client> = z0;

        $r2 = new com.android.okio.OkBuffer;

        specialinvoke $r2.<com.android.okio.OkBuffer: void <init>()>();

        r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: com.android.okio.OkBuffer hpackBuffer> = $r2;

        $r3 = new com.android.okhttp.internal.spdy.HpackDraft05$Writer;

        $r4 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: com.android.okio.OkBuffer hpackBuffer>;

        specialinvoke $r3.<com.android.okhttp.internal.spdy.HpackDraft05$Writer: void <init>(com.android.okio.OkBuffer)>($r4);

        r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: com.android.okhttp.internal.spdy.HpackDraft05$Writer hpackWriter> = $r3;

        return;
    }

    public synchronized void flush() throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.Http20Draft09$Writer r0;
        boolean $z0;
        com.android.okio.BufferedSink $r1;
        java.io.IOException $r2;

        r0 := @this: com.android.okhttp.internal.spdy.Http20Draft09$Writer;

        $z0 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: boolean closed>;

        if $z0 == 0 goto label1;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("closed");

        throw $r2;

     label1:
        $r1 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: com.android.okio.BufferedSink sink>;

        interfaceinvoke $r1.<com.android.okio.BufferedSink: void flush()>();

        return;
    }

    public synchronized void ackSettings() throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.Http20Draft09$Writer r0;
        byte b0, b1, b2, b3;
        boolean $z0;
        com.android.okio.BufferedSink $r1;
        java.io.IOException $r2;

        r0 := @this: com.android.okhttp.internal.spdy.Http20Draft09$Writer;

        $z0 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: boolean closed>;

        if $z0 == 0 goto label1;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("closed");

        throw $r2;

     label1:
        b0 = 0;

        b1 = 4;

        b2 = 1;

        b3 = 0;

        virtualinvoke r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: void frameHeader(int,byte,byte,int)>(b0, b1, b2, b3);

        $r1 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: com.android.okio.BufferedSink sink>;

        interfaceinvoke $r1.<com.android.okio.BufferedSink: void flush()>();

        return;
    }

    public synchronized void connectionHeader() throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.Http20Draft09$Writer r0;
        boolean $z0, $z1;
        com.android.okio.BufferedSink $r1, $r5;
        com.android.okio.ByteString $r2;
        byte[] $r3;
        java.io.IOException $r6;

        r0 := @this: com.android.okhttp.internal.spdy.Http20Draft09$Writer;

        $z0 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: boolean closed>;

        if $z0 == 0 goto label1;

        $r6 = new java.io.IOException;

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>("closed");

        throw $r6;

     label1:
        $z1 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: boolean client>;

        if $z1 != 0 goto label2;

        return;

     label2:
        $r1 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: com.android.okio.BufferedSink sink>;

        $r2 = staticinvoke <com.android.okhttp.internal.spdy.Http20Draft09: com.android.okio.ByteString access$000()>();

        $r3 = virtualinvoke $r2.<com.android.okio.ByteString: byte[] toByteArray()>();

        interfaceinvoke $r1.<com.android.okio.BufferedSink: com.android.okio.BufferedSink write(byte[])>($r3);

        $r5 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: com.android.okio.BufferedSink sink>;

        interfaceinvoke $r5.<com.android.okio.BufferedSink: void flush()>();

        return;
    }

    public synchronized void synStream(boolean, boolean, int, int, int, int, java.util.List) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.Http20Draft09$Writer r0;
        boolean z0, z1, $z2;
        int i0, i1, i2, i3;
        java.util.List r1;
        java.io.IOException $r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: com.android.okhttp.internal.spdy.Http20Draft09$Writer;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        r1 := @parameter6: java.util.List;

        if z1 == 0 goto label1;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r3;

     label1:
        $z2 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: boolean closed>;

        if $z2 == 0 goto label2;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("closed");

        throw $r2;

     label2:
        specialinvoke r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: void headers(boolean,int,int,java.util.List)>(z0, i0, i2, r1);

        return;
    }

    public synchronized void synReply(boolean, int, java.util.List) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.Http20Draft09$Writer r0;
        boolean z0, $z1;
        int i0;
        java.util.List r1;
        java.io.IOException $r2;

        r0 := @this: com.android.okhttp.internal.spdy.Http20Draft09$Writer;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: java.util.List;

        $z1 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: boolean closed>;

        if $z1 == 0 goto label1;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("closed");

        throw $r2;

     label1:
        specialinvoke r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: void headers(boolean,int,int,java.util.List)>(z0, i0, -1, r1);

        return;
    }

    public synchronized void headers(int, java.util.List) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.Http20Draft09$Writer r0;
        int i0;
        java.util.List r1;
        boolean $z0;
        java.io.IOException $r2;

        r0 := @this: com.android.okhttp.internal.spdy.Http20Draft09$Writer;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.List;

        $z0 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: boolean closed>;

        if $z0 == 0 goto label1;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("closed");

        throw $r2;

     label1:
        specialinvoke r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: void headers(boolean,int,int,java.util.List)>(0, i0, -1, r1);

        return;
    }

    public synchronized void pushPromise(int, int, java.util.List) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.Http20Draft09$Writer r0;
        int i0, i1, i2, $i9;
        java.util.List r1;
        byte b3, b4, $b6;
        boolean $z0;
        com.android.okio.OkBuffer $r2, $r4, $r6, $r8;
        long $l5, $l7, $l8, $l10;
        com.android.okhttp.internal.spdy.HpackDraft05$Writer $r3;
        com.android.okio.BufferedSink $r5, $r9;
        java.lang.IllegalStateException $r10;
        java.io.IOException $r11;

        r0 := @this: com.android.okhttp.internal.spdy.Http20Draft09$Writer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.util.List;

        $z0 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: boolean closed>;

        if $z0 == 0 goto label1;

        $r11 = new java.io.IOException;

        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>("closed");

        throw $r11;

     label1:
        $r2 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: com.android.okio.OkBuffer hpackBuffer>;

        $l5 = virtualinvoke $r2.<com.android.okio.OkBuffer: long size()>();

        $b6 = $l5 cmp 0L;

        if $b6 == 0 goto label2;

        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>()>();

        throw $r10;

     label2:
        $r3 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: com.android.okhttp.internal.spdy.HpackDraft05$Writer hpackWriter>;

        virtualinvoke $r3.<com.android.okhttp.internal.spdy.HpackDraft05$Writer: void writeHeaders(java.util.List)>(r1);

        $r4 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: com.android.okio.OkBuffer hpackBuffer>;

        $l7 = virtualinvoke $r4.<com.android.okio.OkBuffer: long size()>();

        $l8 = 4L + $l7;

        i2 = (int) $l8;

        b3 = 5;

        b4 = 4;

        virtualinvoke r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: void frameHeader(int,byte,byte,int)>(i2, b3, b4, i0);

        $r5 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: com.android.okio.BufferedSink sink>;

        $i9 = i1 & 2147483647;

        interfaceinvoke $r5.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>($i9);

        $r9 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: com.android.okio.BufferedSink sink>;

        $r8 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: com.android.okio.OkBuffer hpackBuffer>;

        $r6 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: com.android.okio.OkBuffer hpackBuffer>;

        $l10 = virtualinvoke $r6.<com.android.okio.OkBuffer: long size()>();

        interfaceinvoke $r9.<com.android.okio.BufferedSink: void write(com.android.okio.OkBuffer,long)>($r8, $l10);

        return;
    }

    private void headers(boolean, int, int, java.util.List) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.Http20Draft09$Writer r0;
        boolean z0, $z1;
        int i0, i1, i2, $i8;
        java.util.List r1;
        byte b3, b4, $b6, $b10, $b11;
        com.android.okio.OkBuffer $r2, $r4, $r5, $r6;
        long $l5, $l7, $l9;
        com.android.okhttp.internal.spdy.HpackDraft05$Writer $r3;
        com.android.okio.BufferedSink $r7, $r9;
        java.io.IOException $r10;
        java.lang.IllegalStateException $r11;

        r0 := @this: com.android.okhttp.internal.spdy.Http20Draft09$Writer;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: java.util.List;

        $z1 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: boolean closed>;

        if $z1 == 0 goto label1;

        $r10 = new java.io.IOException;

        specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String)>("closed");

        throw $r10;

     label1:
        $r2 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: com.android.okio.OkBuffer hpackBuffer>;

        $l5 = virtualinvoke $r2.<com.android.okio.OkBuffer: long size()>();

        $b6 = $l5 cmp 0L;

        if $b6 == 0 goto label2;

        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>()>();

        throw $r11;

     label2:
        $r3 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: com.android.okhttp.internal.spdy.HpackDraft05$Writer hpackWriter>;

        virtualinvoke $r3.<com.android.okhttp.internal.spdy.HpackDraft05$Writer: void writeHeaders(java.util.List)>(r1);

        $r4 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: com.android.okio.OkBuffer hpackBuffer>;

        $l7 = virtualinvoke $r4.<com.android.okio.OkBuffer: long size()>();

        i2 = (int) $l7;

        b3 = 1;

        b4 = 4;

        if z0 == 0 goto label3;

        $b10 = b4 | 1;

        b4 = (byte) $b10;

     label3:
        if i1 == -1 goto label4;

        $b11 = b4 | 8;

        b4 = (byte) $b11;

     label4:
        if i1 == -1 goto label5;

        i2 = i2 + 4;

     label5:
        virtualinvoke r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: void frameHeader(int,byte,byte,int)>(i2, b3, b4, i0);

        if i1 == -1 goto label6;

        $r9 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: com.android.okio.BufferedSink sink>;

        $i8 = i1 & 2147483647;

        interfaceinvoke $r9.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>($i8);

     label6:
        $r7 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: com.android.okio.BufferedSink sink>;

        $r6 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: com.android.okio.OkBuffer hpackBuffer>;

        $r5 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: com.android.okio.OkBuffer hpackBuffer>;

        $l9 = virtualinvoke $r5.<com.android.okio.OkBuffer: long size()>();

        interfaceinvoke $r7.<com.android.okio.BufferedSink: void write(com.android.okio.OkBuffer,long)>($r6, $l9);

        return;
    }

    public synchronized void rstStream(int, com.android.okhttp.internal.spdy.ErrorCode) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.Http20Draft09$Writer r0;
        int i0, $i4, $i5;
        com.android.okhttp.internal.spdy.ErrorCode r1;
        byte b1, b2, b3;
        boolean $z0;
        com.android.okio.BufferedSink $r2, $r4;
        java.lang.IllegalArgumentException $r5;
        java.io.IOException $r6;

        r0 := @this: com.android.okhttp.internal.spdy.Http20Draft09$Writer;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.okhttp.internal.spdy.ErrorCode;

        $z0 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: boolean closed>;

        if $z0 == 0 goto label1;

        $r6 = new java.io.IOException;

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>("closed");

        throw $r6;

     label1:
        $i4 = r1.<com.android.okhttp.internal.spdy.ErrorCode: int spdyRstCode>;

        if $i4 != -1 goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;

     label2:
        b1 = 4;

        b2 = 3;

        b3 = 0;

        virtualinvoke r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: void frameHeader(int,byte,byte,int)>(b1, b2, b3, i0);

        $r2 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: com.android.okio.BufferedSink sink>;

        $i5 = r1.<com.android.okhttp.internal.spdy.ErrorCode: int httpCode>;

        interfaceinvoke $r2.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>($i5);

        $r4 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: com.android.okio.BufferedSink sink>;

        interfaceinvoke $r4.<com.android.okio.BufferedSink: void flush()>();

        return;
    }

    public synchronized void data(boolean, int, com.android.okio.OkBuffer) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.Http20Draft09$Writer r0;
        boolean z0;
        int i0, $i2;
        com.android.okio.OkBuffer r1;
        long $l1;

        r0 := @this: com.android.okhttp.internal.spdy.Http20Draft09$Writer;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: com.android.okio.OkBuffer;

        $l1 = virtualinvoke r1.<com.android.okio.OkBuffer: long size()>();

        $i2 = (int) $l1;

        virtualinvoke r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: void data(boolean,int,com.android.okio.OkBuffer,int)>(z0, i0, r1, $i2);

        return;
    }

    public synchronized void data(boolean, int, com.android.okio.OkBuffer, int) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.Http20Draft09$Writer r0;
        boolean z0, $z1;
        int i0, i1;
        com.android.okio.OkBuffer r1;
        byte b2, $b3;
        java.io.IOException $r2;

        r0 := @this: com.android.okhttp.internal.spdy.Http20Draft09$Writer;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: com.android.okio.OkBuffer;

        i1 := @parameter3: int;

        $z1 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: boolean closed>;

        if $z1 == 0 goto label1;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("closed");

        throw $r2;

     label1:
        b2 = 0;

        if z0 == 0 goto label2;

        $b3 = b2 | 1;

        b2 = (byte) $b3;

     label2:
        virtualinvoke r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: void dataFrame(int,byte,com.android.okio.OkBuffer,int)>(i0, b2, r1, i1);

        return;
    }

    void dataFrame(int, byte, com.android.okio.OkBuffer, int) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.Http20Draft09$Writer r0;
        int i0, i2;
        byte b1, b3;
        com.android.okio.OkBuffer r1;
        long $l4;
        com.android.okio.BufferedSink $r2;

        r0 := @this: com.android.okhttp.internal.spdy.Http20Draft09$Writer;

        i0 := @parameter0: int;

        b1 := @parameter1: byte;

        r1 := @parameter2: com.android.okio.OkBuffer;

        i2 := @parameter3: int;

        b3 = 0;

        virtualinvoke r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: void frameHeader(int,byte,byte,int)>(i2, b3, b1, i0);

        if i2 <= 0 goto label1;

        $r2 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: com.android.okio.BufferedSink sink>;

        $l4 = (long) i2;

        interfaceinvoke $r2.<com.android.okio.BufferedSink: void write(com.android.okio.OkBuffer,long)>(r1, $l4);

     label1:
        return;
    }

    public synchronized void settings(com.android.okhttp.internal.spdy.Settings) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.Http20Draft09$Writer r0;
        com.android.okhttp.internal.spdy.Settings r1;
        int i0, i4, $i5, $i6, $i7;
        byte b1, b2, b3;
        boolean $z0, $z1;
        com.android.okio.BufferedSink $r2, $r3, $r5;
        java.io.IOException $r6;

        r0 := @this: com.android.okhttp.internal.spdy.Http20Draft09$Writer;

        r1 := @parameter0: com.android.okhttp.internal.spdy.Settings;

        $z0 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: boolean closed>;

        if $z0 == 0 goto label1;

        $r6 = new java.io.IOException;

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>("closed");

        throw $r6;

     label1:
        $i5 = virtualinvoke r1.<com.android.okhttp.internal.spdy.Settings: int size()>();

        i0 = $i5 * 8;

        b1 = 4;

        b2 = 0;

        b3 = 0;

        virtualinvoke r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: void frameHeader(int,byte,byte,int)>(i0, b1, b2, b3);

        i4 = 0;

     label2:
        if i4 >= 10 goto label5;

        $z1 = virtualinvoke r1.<com.android.okhttp.internal.spdy.Settings: boolean isSet(int)>(i4);

        if $z1 != 0 goto label3;

        goto label4;

     label3:
        $r3 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: com.android.okio.BufferedSink sink>;

        $i6 = i4 & 16777215;

        interfaceinvoke $r3.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>($i6);

        $r5 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: com.android.okio.BufferedSink sink>;

        $i7 = virtualinvoke r1.<com.android.okhttp.internal.spdy.Settings: int get(int)>(i4);

        interfaceinvoke $r5.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>($i7);

     label4:
        i4 = i4 + 1;

        goto label2;

     label5:
        $r2 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: com.android.okio.BufferedSink sink>;

        interfaceinvoke $r2.<com.android.okio.BufferedSink: void flush()>();

        return;
    }

    public synchronized void ping(boolean, int, int) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.Http20Draft09$Writer r0;
        boolean z0, $z1;
        int i0, i1;
        byte b2, b3, b4, b5, $b6;
        com.android.okio.BufferedSink $r1, $r3, $r5;
        java.io.IOException $r6;

        r0 := @this: com.android.okhttp.internal.spdy.Http20Draft09$Writer;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z1 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: boolean closed>;

        if $z1 == 0 goto label1;

        $r6 = new java.io.IOException;

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>("closed");

        throw $r6;

     label1:
        b2 = 8;

        b3 = 6;

        if z0 == 0 goto label2;

        $b6 = 1;

        goto label3;

     label2:
        $b6 = 0;

     label3:
        b4 = $b6;

        b5 = 0;

        virtualinvoke r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: void frameHeader(int,byte,byte,int)>(b2, b3, b4, b5);

        $r1 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: com.android.okio.BufferedSink sink>;

        interfaceinvoke $r1.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>(i0);

        $r3 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: com.android.okio.BufferedSink sink>;

        interfaceinvoke $r3.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>(i1);

        $r5 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: com.android.okio.BufferedSink sink>;

        interfaceinvoke $r5.<com.android.okio.BufferedSink: void flush()>();

        return;
    }

    public synchronized void goAway(int, com.android.okhttp.internal.spdy.ErrorCode, byte[]) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.Http20Draft09$Writer r0;
        int i0, i1, $i5, $i6, $i7, $i8;
        com.android.okhttp.internal.spdy.ErrorCode r1;
        byte[] r2;
        byte b2, b3, b4;
        boolean $z0;
        com.android.okio.BufferedSink $r3, $r5, $r7, $r9;
        java.lang.IllegalArgumentException $r10;
        java.lang.Object[] $r11;
        java.io.IOException $r12;

        r0 := @this: com.android.okhttp.internal.spdy.Http20Draft09$Writer;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.okhttp.internal.spdy.ErrorCode;

        r2 := @parameter2: byte[];

        $z0 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: boolean closed>;

        if $z0 == 0 goto label1;

        $r12 = new java.io.IOException;

        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>("closed");

        throw $r12;

     label1:
        $i5 = r1.<com.android.okhttp.internal.spdy.ErrorCode: int httpCode>;

        if $i5 != -1 goto label2;

        $r11 = newarray (java.lang.Object)[0];

        $r10 = staticinvoke <com.android.okhttp.internal.spdy.Http20Draft09: java.lang.IllegalArgumentException access$200(java.lang.String,java.lang.Object[])>("errorCode.httpCode == -1", $r11);

        throw $r10;

     label2:
        $i6 = lengthof r2;

        i1 = 8 + $i6;

        b2 = 7;

        b3 = 0;

        b4 = 0;

        virtualinvoke r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: void frameHeader(int,byte,byte,int)>(i1, b2, b3, b4);

        $r3 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: com.android.okio.BufferedSink sink>;

        interfaceinvoke $r3.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>(i0);

        $r5 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: com.android.okio.BufferedSink sink>;

        $i7 = r1.<com.android.okhttp.internal.spdy.ErrorCode: int httpCode>;

        interfaceinvoke $r5.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>($i7);

        $i8 = lengthof r2;

        if $i8 <= 0 goto label3;

        $r9 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: com.android.okio.BufferedSink sink>;

        interfaceinvoke $r9.<com.android.okio.BufferedSink: com.android.okio.BufferedSink write(byte[])>(r2);

     label3:
        $r7 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: com.android.okio.BufferedSink sink>;

        interfaceinvoke $r7.<com.android.okio.BufferedSink: void flush()>();

        return;
    }

    public synchronized void windowUpdate(int, long) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.Http20Draft09$Writer r0;
        int i0, $i7;
        long l1;
        byte b2, b3, b4, $b5, $b6;
        boolean $z0;
        java.lang.Object[] $r1;
        java.lang.Long $r2;
        java.lang.IllegalArgumentException $r3;
        com.android.okio.BufferedSink $r5, $r7;
        java.io.IOException $r6;

        r0 := @this: com.android.okhttp.internal.spdy.Http20Draft09$Writer;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $z0 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: boolean closed>;

        if $z0 == 0 goto label1;

        $r6 = new java.io.IOException;

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>("closed");

        throw $r6;

     label1:
        $b5 = l1 cmp 0L;

        if $b5 == 0 goto label2;

        $b6 = l1 cmp 2147483647L;

        if $b6 <= 0 goto label3;

     label2:
        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r1[0] = $r2;

        $r3 = staticinvoke <com.android.okhttp.internal.spdy.Http20Draft09: java.lang.IllegalArgumentException access$200(java.lang.String,java.lang.Object[])>("windowSizeIncrement == 0 || windowSizeIncrement > 0x7fffffffL: %s", $r1);

        throw $r3;

     label3:
        b2 = 4;

        b3 = 9;

        b4 = 0;

        virtualinvoke r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: void frameHeader(int,byte,byte,int)>(b2, b3, b4, i0);

        $r5 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: com.android.okio.BufferedSink sink>;

        $i7 = (int) l1;

        interfaceinvoke $r5.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>($i7);

        $r7 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: com.android.okio.BufferedSink sink>;

        interfaceinvoke $r7.<com.android.okio.BufferedSink: void flush()>();

        return;
    }

    public synchronized void close() throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.Http20Draft09$Writer r0;
        com.android.okio.BufferedSink $r1;

        r0 := @this: com.android.okhttp.internal.spdy.Http20Draft09$Writer;

        r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: boolean closed> = 1;

        $r1 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: com.android.okio.BufferedSink sink>;

        interfaceinvoke $r1.<com.android.okio.BufferedSink: void close()>();

        return;
    }

    void frameHeader(int, byte, byte, int) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.Http20Draft09$Writer r0;
        int i0, i3, $i4, $i5, $i7, $i8, $i10, $i11, $i12;
        byte b1, b2;
        short $s6, $s9;
        com.android.okio.BufferedSink $r1, $r4;
        java.lang.Object[] $r5, $r7;
        java.lang.Integer $r6, $r10;
        java.lang.IllegalArgumentException $r8, $r9;

        r0 := @this: com.android.okhttp.internal.spdy.Http20Draft09$Writer;

        i0 := @parameter0: int;

        b1 := @parameter1: byte;

        b2 := @parameter2: byte;

        i3 := @parameter3: int;

        if i0 <= 16383 goto label1;

        $r7 = newarray (java.lang.Object)[1];

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7[0] = $r10;

        $r9 = staticinvoke <com.android.okhttp.internal.spdy.Http20Draft09: java.lang.IllegalArgumentException access$200(java.lang.String,java.lang.Object[])>("FRAME_SIZE_ERROR length > 16383: %s", $r7);

        throw $r9;

     label1:
        $i4 = i3 & -2147483648;

        if $i4 == 0 goto label2;

        $r5 = newarray (java.lang.Object)[1];

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r5[0] = $r6;

        $r8 = staticinvoke <com.android.okhttp.internal.spdy.Http20Draft09: java.lang.IllegalArgumentException access$200(java.lang.String,java.lang.Object[])>("reserved bit set: %s", $r5);

        throw $r8;

     label2:
        $r1 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: com.android.okio.BufferedSink sink>;

        $i5 = i0 & 16383;

        $i8 = $i5 << 16;

        $s6 = b1 & 255;

        $i7 = $s6 << 8;

        $i10 = $i8 | $i7;

        $s9 = b2 & 255;

        $i11 = $i10 | $s9;

        interfaceinvoke $r1.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>($i11);

        $r4 = r0.<com.android.okhttp.internal.spdy.Http20Draft09$Writer: com.android.okio.BufferedSink sink>;

        $i12 = i3 & 2147483647;

        interfaceinvoke $r4.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>($i12);

        return;
    }
}
