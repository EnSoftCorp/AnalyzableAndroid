public class com.android.okhttp.Response$Builder extends java.lang.Object
{
    private com.android.okhttp.Request request;
    private com.android.okhttp.internal.http.StatusLine statusLine;
    private com.android.okhttp.Handshake handshake;
    private com.android.okhttp.Headers$Builder headers;
    private com.android.okhttp.Response$Body body;
    private com.android.okhttp.Response networkResponse;
    private com.android.okhttp.Response cacheResponse;
    private com.android.okhttp.Response priorResponse;

    public void <init>()
    {
        com.android.okhttp.Response$Builder r0;
        com.android.okhttp.Headers$Builder $r1;

        r0 := @this: com.android.okhttp.Response$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.android.okhttp.Headers$Builder;

        specialinvoke $r1.<com.android.okhttp.Headers$Builder: void <init>()>();

        r0.<com.android.okhttp.Response$Builder: com.android.okhttp.Headers$Builder headers> = $r1;

        return;
    }

    private void <init>(com.android.okhttp.Response)
    {
        com.android.okhttp.Response$Builder r0;
        com.android.okhttp.Response r1, $r8, $r9, $r10;
        com.android.okhttp.Request $r2;
        com.android.okhttp.internal.http.StatusLine $r3;
        com.android.okhttp.Handshake $r4;
        com.android.okhttp.Headers $r5;
        com.android.okhttp.Headers$Builder $r6;
        com.android.okhttp.Response$Body $r7;

        r0 := @this: com.android.okhttp.Response$Builder;

        r1 := @parameter0: com.android.okhttp.Response;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.android.okhttp.Response: com.android.okhttp.Request access$1100(com.android.okhttp.Response)>(r1);

        r0.<com.android.okhttp.Response$Builder: com.android.okhttp.Request request> = $r2;

        $r3 = staticinvoke <com.android.okhttp.Response: com.android.okhttp.internal.http.StatusLine access$1200(com.android.okhttp.Response)>(r1);

        r0.<com.android.okhttp.Response$Builder: com.android.okhttp.internal.http.StatusLine statusLine> = $r3;

        $r4 = staticinvoke <com.android.okhttp.Response: com.android.okhttp.Handshake access$1300(com.android.okhttp.Response)>(r1);

        r0.<com.android.okhttp.Response$Builder: com.android.okhttp.Handshake handshake> = $r4;

        $r5 = staticinvoke <com.android.okhttp.Response: com.android.okhttp.Headers access$1400(com.android.okhttp.Response)>(r1);

        $r6 = virtualinvoke $r5.<com.android.okhttp.Headers: com.android.okhttp.Headers$Builder newBuilder()>();

        r0.<com.android.okhttp.Response$Builder: com.android.okhttp.Headers$Builder headers> = $r6;

        $r7 = staticinvoke <com.android.okhttp.Response: com.android.okhttp.Response$Body access$1500(com.android.okhttp.Response)>(r1);

        r0.<com.android.okhttp.Response$Builder: com.android.okhttp.Response$Body body> = $r7;

        $r8 = staticinvoke <com.android.okhttp.Response: com.android.okhttp.Response access$1600(com.android.okhttp.Response)>(r1);

        r0.<com.android.okhttp.Response$Builder: com.android.okhttp.Response networkResponse> = $r8;

        $r9 = staticinvoke <com.android.okhttp.Response: com.android.okhttp.Response access$1700(com.android.okhttp.Response)>(r1);

        r0.<com.android.okhttp.Response$Builder: com.android.okhttp.Response cacheResponse> = $r9;

        $r10 = staticinvoke <com.android.okhttp.Response: com.android.okhttp.Response access$1800(com.android.okhttp.Response)>(r1);

        r0.<com.android.okhttp.Response$Builder: com.android.okhttp.Response priorResponse> = $r10;

        return;
    }

    public com.android.okhttp.Response$Builder request(com.android.okhttp.Request)
    {
        com.android.okhttp.Response$Builder r0;
        com.android.okhttp.Request r1;

        r0 := @this: com.android.okhttp.Response$Builder;

        r1 := @parameter0: com.android.okhttp.Request;

        r0.<com.android.okhttp.Response$Builder: com.android.okhttp.Request request> = r1;

        return r0;
    }

    public com.android.okhttp.Response$Builder statusLine(com.android.okhttp.internal.http.StatusLine)
    {
        com.android.okhttp.Response$Builder r0;
        com.android.okhttp.internal.http.StatusLine r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: com.android.okhttp.Response$Builder;

        r1 := @parameter0: com.android.okhttp.internal.http.StatusLine;

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("statusLine == null");

        throw $r2;

     label1:
        r0.<com.android.okhttp.Response$Builder: com.android.okhttp.internal.http.StatusLine statusLine> = r1;

        return r0;
    }

    public com.android.okhttp.Response$Builder statusLine(java.lang.String)
    {
        com.android.okhttp.Response$Builder r0, $r4;
        java.lang.String r1;
        java.io.IOException r2, $r5;
        com.android.okhttp.internal.http.StatusLine $r3;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: com.android.okhttp.Response$Builder;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = new com.android.okhttp.internal.http.StatusLine;

        specialinvoke $r3.<com.android.okhttp.internal.http.StatusLine: void <init>(java.lang.String)>(r1);

        $r4 = virtualinvoke r0.<com.android.okhttp.Response$Builder: com.android.okhttp.Response$Builder statusLine(com.android.okhttp.internal.http.StatusLine)>($r3);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>(r2);

        throw $r6;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public com.android.okhttp.Response$Builder handshake(com.android.okhttp.Handshake)
    {
        com.android.okhttp.Response$Builder r0;
        com.android.okhttp.Handshake r1;

        r0 := @this: com.android.okhttp.Response$Builder;

        r1 := @parameter0: com.android.okhttp.Handshake;

        r0.<com.android.okhttp.Response$Builder: com.android.okhttp.Handshake handshake> = r1;

        return r0;
    }

    public com.android.okhttp.Response$Builder header(java.lang.String, java.lang.String)
    {
        com.android.okhttp.Response$Builder r0;
        java.lang.String r1, r2;
        com.android.okhttp.Headers$Builder $r3;

        r0 := @this: com.android.okhttp.Response$Builder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.okhttp.Response$Builder: com.android.okhttp.Headers$Builder headers>;

        virtualinvoke $r3.<com.android.okhttp.Headers$Builder: com.android.okhttp.Headers$Builder set(java.lang.String,java.lang.String)>(r1, r2);

        return r0;
    }

    public com.android.okhttp.Response$Builder addHeader(java.lang.String, java.lang.String)
    {
        com.android.okhttp.Response$Builder r0;
        java.lang.String r1, r2;
        com.android.okhttp.Headers$Builder $r3;

        r0 := @this: com.android.okhttp.Response$Builder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.okhttp.Response$Builder: com.android.okhttp.Headers$Builder headers>;

        virtualinvoke $r3.<com.android.okhttp.Headers$Builder: com.android.okhttp.Headers$Builder add(java.lang.String,java.lang.String)>(r1, r2);

        return r0;
    }

    public com.android.okhttp.Response$Builder removeHeader(java.lang.String)
    {
        com.android.okhttp.Response$Builder r0;
        java.lang.String r1;
        com.android.okhttp.Headers$Builder $r2;

        r0 := @this: com.android.okhttp.Response$Builder;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.okhttp.Response$Builder: com.android.okhttp.Headers$Builder headers>;

        virtualinvoke $r2.<com.android.okhttp.Headers$Builder: com.android.okhttp.Headers$Builder removeAll(java.lang.String)>(r1);

        return r0;
    }

    public com.android.okhttp.Response$Builder headers(com.android.okhttp.Headers)
    {
        com.android.okhttp.Response$Builder r0;
        com.android.okhttp.Headers r1;
        com.android.okhttp.Headers$Builder $r2;

        r0 := @this: com.android.okhttp.Response$Builder;

        r1 := @parameter0: com.android.okhttp.Headers;

        $r2 = virtualinvoke r1.<com.android.okhttp.Headers: com.android.okhttp.Headers$Builder newBuilder()>();

        r0.<com.android.okhttp.Response$Builder: com.android.okhttp.Headers$Builder headers> = $r2;

        return r0;
    }

    public com.android.okhttp.Response$Builder body(com.android.okhttp.Response$Body)
    {
        com.android.okhttp.Response$Builder r0;
        com.android.okhttp.Response$Body r1;

        r0 := @this: com.android.okhttp.Response$Builder;

        r1 := @parameter0: com.android.okhttp.Response$Body;

        r0.<com.android.okhttp.Response$Builder: com.android.okhttp.Response$Body body> = r1;

        return r0;
    }

    public com.android.okhttp.Response$Builder setResponseSource(com.android.okhttp.ResponseSource)
    {
        com.android.okhttp.Response$Builder r0, $r9;
        com.android.okhttp.ResponseSource r1;
        java.lang.StringBuilder $r2, $r4, $r5, $r7;
        java.lang.String $r3, $r8;
        com.android.okhttp.internal.http.StatusLine $r6;
        int $i0;

        r0 := @this: com.android.okhttp.Response$Builder;

        r1 := @parameter0: com.android.okhttp.ResponseSource;

        $r3 = <com.android.okhttp.internal.http.OkHeaders: java.lang.String RESPONSE_SOURCE>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r6 = r0.<com.android.okhttp.Response$Builder: com.android.okhttp.internal.http.StatusLine statusLine>;

        $i0 = virtualinvoke $r6.<com.android.okhttp.internal.http.StatusLine: int code()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = virtualinvoke r0.<com.android.okhttp.Response$Builder: com.android.okhttp.Response$Builder header(java.lang.String,java.lang.String)>($r3, $r8);

        return $r9;
    }

    public com.android.okhttp.Response$Builder networkResponse(com.android.okhttp.Response)
    {
        com.android.okhttp.Response$Builder r0;
        com.android.okhttp.Response r1;

        r0 := @this: com.android.okhttp.Response$Builder;

        r1 := @parameter0: com.android.okhttp.Response;

        if r1 == null goto label1;

        specialinvoke r0.<com.android.okhttp.Response$Builder: void checkSupportResponse(java.lang.String,com.android.okhttp.Response)>("networkResponse", r1);

     label1:
        r0.<com.android.okhttp.Response$Builder: com.android.okhttp.Response networkResponse> = r1;

        return r0;
    }

    public com.android.okhttp.Response$Builder cacheResponse(com.android.okhttp.Response)
    {
        com.android.okhttp.Response$Builder r0;
        com.android.okhttp.Response r1;

        r0 := @this: com.android.okhttp.Response$Builder;

        r1 := @parameter0: com.android.okhttp.Response;

        if r1 == null goto label1;

        specialinvoke r0.<com.android.okhttp.Response$Builder: void checkSupportResponse(java.lang.String,com.android.okhttp.Response)>("cacheResponse", r1);

     label1:
        r0.<com.android.okhttp.Response$Builder: com.android.okhttp.Response cacheResponse> = r1;

        return r0;
    }

    private void checkSupportResponse(java.lang.String, com.android.okhttp.Response)
    {
        com.android.okhttp.Response$Builder r0;
        java.lang.String r1, $r11, $r17, $r20, $r26;
        com.android.okhttp.Response r2, $r4, $r5, $r6;
        com.android.okhttp.Response$Body $r3;
        java.lang.IllegalArgumentException $r7, $r12, $r16, $r23;
        java.lang.StringBuilder $r8, $r9, $r10, $r13, $r14, $r15, $r18, $r19, $r21, $r22, $r24, $r25;

        r0 := @this: com.android.okhttp.Response$Builder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.okhttp.Response;

        $r3 = staticinvoke <com.android.okhttp.Response: com.android.okhttp.Response$Body access$1500(com.android.okhttp.Response)>(r2);

        if $r3 == null goto label1;

        $r23 = new java.lang.IllegalArgumentException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".body != null");

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r26);

        throw $r23;

     label1:
        $r4 = staticinvoke <com.android.okhttp.Response: com.android.okhttp.Response access$1600(com.android.okhttp.Response)>(r2);

        if $r4 == null goto label2;

        $r16 = new java.lang.IllegalArgumentException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".networkResponse != null");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20);

        throw $r16;

     label2:
        $r5 = staticinvoke <com.android.okhttp.Response: com.android.okhttp.Response access$1700(com.android.okhttp.Response)>(r2);

        if $r5 == null goto label3;

        $r12 = new java.lang.IllegalArgumentException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".cacheResponse != null");

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r12;

     label3:
        $r6 = staticinvoke <com.android.okhttp.Response: com.android.okhttp.Response access$1800(com.android.okhttp.Response)>(r2);

        if $r6 == null goto label4;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".priorResponse != null");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label4:
        return;
    }

    public com.android.okhttp.Response$Builder priorResponse(com.android.okhttp.Response)
    {
        com.android.okhttp.Response$Builder r0;
        com.android.okhttp.Response r1;

        r0 := @this: com.android.okhttp.Response$Builder;

        r1 := @parameter0: com.android.okhttp.Response;

        r0.<com.android.okhttp.Response$Builder: com.android.okhttp.Response priorResponse> = r1;

        return r0;
    }

    public com.android.okhttp.Response build()
    {
        com.android.okhttp.Response$Builder r0;
        com.android.okhttp.Request $r1;
        com.android.okhttp.internal.http.StatusLine $r2;
        com.android.okhttp.Response $r3;
        java.lang.IllegalStateException $r4, $r5;

        r0 := @this: com.android.okhttp.Response$Builder;

        $r1 = r0.<com.android.okhttp.Response$Builder: com.android.okhttp.Request request>;

        if $r1 != null goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("request == null");

        throw $r5;

     label1:
        $r2 = r0.<com.android.okhttp.Response$Builder: com.android.okhttp.internal.http.StatusLine statusLine>;

        if $r2 != null goto label2;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("statusLine == null");

        throw $r4;

     label2:
        $r3 = new com.android.okhttp.Response;

        specialinvoke $r3.<com.android.okhttp.Response: void <init>(com.android.okhttp.Response$Builder,com.android.okhttp.Response$1)>(r0, null);

        return $r3;
    }

    static com.android.okhttp.Request access$000(com.android.okhttp.Response$Builder)
    {
        com.android.okhttp.Response$Builder r0;
        com.android.okhttp.Request $r1;

        r0 := @parameter0: com.android.okhttp.Response$Builder;

        $r1 = r0.<com.android.okhttp.Response$Builder: com.android.okhttp.Request request>;

        return $r1;
    }

    static com.android.okhttp.internal.http.StatusLine access$100(com.android.okhttp.Response$Builder)
    {
        com.android.okhttp.Response$Builder r0;
        com.android.okhttp.internal.http.StatusLine $r1;

        r0 := @parameter0: com.android.okhttp.Response$Builder;

        $r1 = r0.<com.android.okhttp.Response$Builder: com.android.okhttp.internal.http.StatusLine statusLine>;

        return $r1;
    }

    static com.android.okhttp.Handshake access$200(com.android.okhttp.Response$Builder)
    {
        com.android.okhttp.Response$Builder r0;
        com.android.okhttp.Handshake $r1;

        r0 := @parameter0: com.android.okhttp.Response$Builder;

        $r1 = r0.<com.android.okhttp.Response$Builder: com.android.okhttp.Handshake handshake>;

        return $r1;
    }

    static com.android.okhttp.Headers$Builder access$300(com.android.okhttp.Response$Builder)
    {
        com.android.okhttp.Response$Builder r0;
        com.android.okhttp.Headers$Builder $r1;

        r0 := @parameter0: com.android.okhttp.Response$Builder;

        $r1 = r0.<com.android.okhttp.Response$Builder: com.android.okhttp.Headers$Builder headers>;

        return $r1;
    }

    static com.android.okhttp.Response$Body access$400(com.android.okhttp.Response$Builder)
    {
        com.android.okhttp.Response$Builder r0;
        com.android.okhttp.Response$Body $r1;

        r0 := @parameter0: com.android.okhttp.Response$Builder;

        $r1 = r0.<com.android.okhttp.Response$Builder: com.android.okhttp.Response$Body body>;

        return $r1;
    }

    static com.android.okhttp.Response access$500(com.android.okhttp.Response$Builder)
    {
        com.android.okhttp.Response$Builder r0;
        com.android.okhttp.Response $r1;

        r0 := @parameter0: com.android.okhttp.Response$Builder;

        $r1 = r0.<com.android.okhttp.Response$Builder: com.android.okhttp.Response networkResponse>;

        return $r1;
    }

    static com.android.okhttp.Response access$600(com.android.okhttp.Response$Builder)
    {
        com.android.okhttp.Response$Builder r0;
        com.android.okhttp.Response $r1;

        r0 := @parameter0: com.android.okhttp.Response$Builder;

        $r1 = r0.<com.android.okhttp.Response$Builder: com.android.okhttp.Response cacheResponse>;

        return $r1;
    }

    static com.android.okhttp.Response access$700(com.android.okhttp.Response$Builder)
    {
        com.android.okhttp.Response$Builder r0;
        com.android.okhttp.Response $r1;

        r0 := @parameter0: com.android.okhttp.Response$Builder;

        $r1 = r0.<com.android.okhttp.Response$Builder: com.android.okhttp.Response priorResponse>;

        return $r1;
    }

    void <init>(com.android.okhttp.Response, com.android.okhttp.Response$1)
    {
        com.android.okhttp.Response$Builder r0;
        com.android.okhttp.Response r1;
        com.android.okhttp.Response$1 r2;

        r0 := @this: com.android.okhttp.Response$Builder;

        r1 := @parameter0: com.android.okhttp.Response;

        r2 := @parameter1: com.android.okhttp.Response$1;

        specialinvoke r0.<com.android.okhttp.Response$Builder: void <init>(com.android.okhttp.Response)>(r1);

        return;
    }
}
