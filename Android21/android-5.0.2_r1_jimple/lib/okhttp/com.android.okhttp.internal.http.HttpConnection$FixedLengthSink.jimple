final class com.android.okhttp.internal.http.HttpConnection$FixedLengthSink extends java.lang.Object implements com.android.okio.Sink
{
    private boolean closed;
    private long bytesRemaining;
    final com.android.okhttp.internal.http.HttpConnection this$0;

    private void <init>(com.android.okhttp.internal.http.HttpConnection, long)
    {
        com.android.okhttp.internal.http.HttpConnection$FixedLengthSink r0;
        com.android.okhttp.internal.http.HttpConnection r1;
        long l0;

        r0 := @this: com.android.okhttp.internal.http.HttpConnection$FixedLengthSink;

        r1 := @parameter0: com.android.okhttp.internal.http.HttpConnection;

        l0 := @parameter1: long;

        r0.<com.android.okhttp.internal.http.HttpConnection$FixedLengthSink: com.android.okhttp.internal.http.HttpConnection this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.okhttp.internal.http.HttpConnection$FixedLengthSink: long bytesRemaining> = l0;

        return;
    }

    public com.android.okio.Sink deadline(com.android.okio.Deadline)
    {
        com.android.okhttp.internal.http.HttpConnection$FixedLengthSink r0;
        com.android.okio.Deadline r1;

        r0 := @this: com.android.okhttp.internal.http.HttpConnection$FixedLengthSink;

        r1 := @parameter0: com.android.okio.Deadline;

        return r0;
    }

    public void write(com.android.okio.OkBuffer, long) throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpConnection$FixedLengthSink r0;
        com.android.okio.OkBuffer r1;
        long l0, $l1, $l2, $l4, $l5, $l6;
        boolean $z0;
        byte $b3;
        com.android.okhttp.internal.http.HttpConnection $r2;
        com.android.okio.BufferedSink $r3;
        java.net.ProtocolException $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r10;
        java.lang.String $r9;
        java.lang.IllegalStateException $r11;

        r0 := @this: com.android.okhttp.internal.http.HttpConnection$FixedLengthSink;

        r1 := @parameter0: com.android.okio.OkBuffer;

        l0 := @parameter1: long;

        $z0 = r0.<com.android.okhttp.internal.http.HttpConnection$FixedLengthSink: boolean closed>;

        if $z0 == 0 goto label1;

        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("closed");

        throw $r11;

     label1:
        $l1 = virtualinvoke r1.<com.android.okio.OkBuffer: long size()>();

        staticinvoke <com.android.okhttp.internal.Util: void checkOffsetAndCount(long,long,long)>($l1, 0L, l0);

        $l2 = r0.<com.android.okhttp.internal.http.HttpConnection$FixedLengthSink: long bytesRemaining>;

        $b3 = l0 cmp $l2;

        if $b3 <= 0 goto label2;

        $r4 = new java.net.ProtocolException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected ");

        $l6 = r0.<com.android.okhttp.internal.http.HttpConnection$FixedLengthSink: long bytesRemaining>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l6);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes but received ");

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.net.ProtocolException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label2:
        $r2 = r0.<com.android.okhttp.internal.http.HttpConnection$FixedLengthSink: com.android.okhttp.internal.http.HttpConnection this$0>;

        $r3 = staticinvoke <com.android.okhttp.internal.http.HttpConnection: com.android.okio.BufferedSink access$200(com.android.okhttp.internal.http.HttpConnection)>($r2);

        interfaceinvoke $r3.<com.android.okio.BufferedSink: void write(com.android.okio.OkBuffer,long)>(r1, l0);

        $l4 = r0.<com.android.okhttp.internal.http.HttpConnection$FixedLengthSink: long bytesRemaining>;

        $l5 = $l4 - l0;

        r0.<com.android.okhttp.internal.http.HttpConnection$FixedLengthSink: long bytesRemaining> = $l5;

        return;
    }

    public void flush() throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpConnection$FixedLengthSink r0;
        boolean $z0;
        com.android.okhttp.internal.http.HttpConnection $r1;
        com.android.okio.BufferedSink $r2;

        r0 := @this: com.android.okhttp.internal.http.HttpConnection$FixedLengthSink;

        $z0 = r0.<com.android.okhttp.internal.http.HttpConnection$FixedLengthSink: boolean closed>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = r0.<com.android.okhttp.internal.http.HttpConnection$FixedLengthSink: com.android.okhttp.internal.http.HttpConnection this$0>;

        $r2 = staticinvoke <com.android.okhttp.internal.http.HttpConnection: com.android.okio.BufferedSink access$200(com.android.okhttp.internal.http.HttpConnection)>($r1);

        interfaceinvoke $r2.<com.android.okio.BufferedSink: void flush()>();

        return;
    }

    public void close() throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpConnection$FixedLengthSink r0;
        boolean $z0;
        long $l0;
        byte $b1;
        com.android.okhttp.internal.http.HttpConnection $r1;
        java.net.ProtocolException $r2;

        r0 := @this: com.android.okhttp.internal.http.HttpConnection$FixedLengthSink;

        $z0 = r0.<com.android.okhttp.internal.http.HttpConnection$FixedLengthSink: boolean closed>;

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<com.android.okhttp.internal.http.HttpConnection$FixedLengthSink: boolean closed> = 1;

        $l0 = r0.<com.android.okhttp.internal.http.HttpConnection$FixedLengthSink: long bytesRemaining>;

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label2;

        $r2 = new java.net.ProtocolException;

        specialinvoke $r2.<java.net.ProtocolException: void <init>(java.lang.String)>("unexpected end of stream");

        throw $r2;

     label2:
        $r1 = r0.<com.android.okhttp.internal.http.HttpConnection$FixedLengthSink: com.android.okhttp.internal.http.HttpConnection this$0>;

        staticinvoke <com.android.okhttp.internal.http.HttpConnection: int access$302(com.android.okhttp.internal.http.HttpConnection,int)>($r1, 3);

        return;
    }

    void <init>(com.android.okhttp.internal.http.HttpConnection, long, com.android.okhttp.internal.http.HttpConnection$1)
    {
        com.android.okhttp.internal.http.HttpConnection$FixedLengthSink r0;
        com.android.okhttp.internal.http.HttpConnection r1;
        long l0;
        com.android.okhttp.internal.http.HttpConnection$1 r2;

        r0 := @this: com.android.okhttp.internal.http.HttpConnection$FixedLengthSink;

        r1 := @parameter0: com.android.okhttp.internal.http.HttpConnection;

        l0 := @parameter1: long;

        r2 := @parameter2: com.android.okhttp.internal.http.HttpConnection$1;

        specialinvoke r0.<com.android.okhttp.internal.http.HttpConnection$FixedLengthSink: void <init>(com.android.okhttp.internal.http.HttpConnection,long)>(r1, l0);

        return;
    }
}
