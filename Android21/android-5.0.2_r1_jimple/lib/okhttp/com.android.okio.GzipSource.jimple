public final class com.android.okio.GzipSource extends java.lang.Object implements com.android.okio.Source
{
    private static final byte FHCRC;
    private static final byte FEXTRA;
    private static final byte FNAME;
    private static final byte FCOMMENT;
    private static final byte SECTION_HEADER;
    private static final byte SECTION_BODY;
    private static final byte SECTION_TRAILER;
    private static final byte SECTION_DONE;
    private int section;
    private final com.android.okio.BufferedSource source;
    private final java.util.zip.Inflater inflater;
    private final com.android.okio.InflaterSource inflaterSource;
    private final java.util.zip.CRC32 crc;

    public void <init>(com.android.okio.Source) throws java.io.IOException
    {
        com.android.okio.GzipSource r0;
        com.android.okio.Source r1;
        java.util.zip.CRC32 $r2;
        java.util.zip.Inflater $r3, $r6;
        com.android.okio.BufferedSource $r4, $r7;
        com.android.okio.InflaterSource $r5;

        r0 := @this: com.android.okio.GzipSource;

        r1 := @parameter0: com.android.okio.Source;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.okio.GzipSource: int section> = 0;

        $r2 = new java.util.zip.CRC32;

        specialinvoke $r2.<java.util.zip.CRC32: void <init>()>();

        r0.<com.android.okio.GzipSource: java.util.zip.CRC32 crc> = $r2;

        $r3 = new java.util.zip.Inflater;

        specialinvoke $r3.<java.util.zip.Inflater: void <init>(boolean)>(1);

        r0.<com.android.okio.GzipSource: java.util.zip.Inflater inflater> = $r3;

        $r4 = staticinvoke <com.android.okio.Okio: com.android.okio.BufferedSource buffer(com.android.okio.Source)>(r1);

        r0.<com.android.okio.GzipSource: com.android.okio.BufferedSource source> = $r4;

        $r5 = new com.android.okio.InflaterSource;

        $r7 = r0.<com.android.okio.GzipSource: com.android.okio.BufferedSource source>;

        $r6 = r0.<com.android.okio.GzipSource: java.util.zip.Inflater inflater>;

        specialinvoke $r5.<com.android.okio.InflaterSource: void <init>(com.android.okio.BufferedSource,java.util.zip.Inflater)>($r7, $r6);

        r0.<com.android.okio.GzipSource: com.android.okio.InflaterSource inflaterSource> = $r5;

        return;
    }

    public long read(com.android.okio.OkBuffer, long) throws java.io.IOException
    {
        com.android.okio.GzipSource r0;
        com.android.okio.OkBuffer r1;
        long l0, l1, l2;
        byte $b3, $b4, $b8;
        int $i5, $i6, $i7;
        com.android.okio.BufferedSource $r2;
        boolean $z0;
        java.io.IOException $r3;
        com.android.okio.InflaterSource $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.lang.String $r8;

        r0 := @this: com.android.okio.GzipSource;

        r1 := @parameter0: com.android.okio.OkBuffer;

        l0 := @parameter1: long;

        $b3 = l0 cmp 0L;

        if $b3 >= 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("byteCount < 0: ");

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r5;

     label1:
        $b4 = l0 cmp 0L;

        if $b4 != 0 goto label2;

        return 0L;

     label2:
        $i5 = r0.<com.android.okio.GzipSource: int section>;

        if $i5 != 0 goto label3;

        specialinvoke r0.<com.android.okio.GzipSource: void consumeHeader()>();

        r0.<com.android.okio.GzipSource: int section> = 1;

     label3:
        $i6 = r0.<com.android.okio.GzipSource: int section>;

        if $i6 != 1 goto label5;

        l1 = r1.<com.android.okio.OkBuffer: long size>;

        $r4 = r0.<com.android.okio.GzipSource: com.android.okio.InflaterSource inflaterSource>;

        l2 = virtualinvoke $r4.<com.android.okio.InflaterSource: long read(com.android.okio.OkBuffer,long)>(r1, l0);

        $b8 = l2 cmp -1L;

        if $b8 == 0 goto label4;

        specialinvoke r0.<com.android.okio.GzipSource: void updateCrc(com.android.okio.OkBuffer,long,long)>(r1, l1, l2);

        return l2;

     label4:
        r0.<com.android.okio.GzipSource: int section> = 2;

     label5:
        $i7 = r0.<com.android.okio.GzipSource: int section>;

        if $i7 != 2 goto label6;

        specialinvoke r0.<com.android.okio.GzipSource: void consumeTrailer()>();

        r0.<com.android.okio.GzipSource: int section> = 3;

        $r2 = r0.<com.android.okio.GzipSource: com.android.okio.BufferedSource source>;

        $z0 = interfaceinvoke $r2.<com.android.okio.BufferedSource: boolean exhausted()>();

        if $z0 != 0 goto label6;

        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("gzip finished without exhausting source");

        throw $r3;

     label6:
        return -1L;
    }

    private void consumeHeader() throws java.io.IOException
    {
        com.android.okio.GzipSource r0;
        byte b0, $b4, $b5, $b6, $b7, $b8, $b9, $b10, $b11, $b16, $b20;
        boolean z0, $z1;
        short s1, s2, $s12, $s15;
        long l3, $l14, $l17, $l18, $l19, $l21, $l22, $l23, $l24, l25;
        com.android.okio.BufferedSource $r1, $r2, $r4, $r5, $r6, $r9, $r10, $r11, $r13, $r15, $r17, $r20, $r21, $r22, $r23, $r24, $r26, $r28;
        com.android.okio.OkBuffer $r3, $r14, $r18, $r19, $r25, $r27, $r29;
        java.util.zip.CRC32 $r7, $r8;
        int $i13;
        java.io.EOFException $r12, $r16;

        r0 := @this: com.android.okio.GzipSource;

        $r1 = r0.<com.android.okio.GzipSource: com.android.okio.BufferedSource source>;

        interfaceinvoke $r1.<com.android.okio.BufferedSource: void require(long)>(10L);

        $r2 = r0.<com.android.okio.GzipSource: com.android.okio.BufferedSource source>;

        $r3 = interfaceinvoke $r2.<com.android.okio.BufferedSource: com.android.okio.OkBuffer buffer()>();

        b0 = virtualinvoke $r3.<com.android.okio.OkBuffer: byte getByte(long)>(3L);

        $b4 = b0 >> 1;

        $b5 = $b4 & 1;

        if $b5 != 1 goto label01;

        $z1 = 1;

        goto label02;

     label01:
        $z1 = 0;

     label02:
        z0 = $z1;

        if z0 == 0 goto label03;

        $r28 = r0.<com.android.okio.GzipSource: com.android.okio.BufferedSource source>;

        $r27 = interfaceinvoke $r28.<com.android.okio.BufferedSource: com.android.okio.OkBuffer buffer()>();

        specialinvoke r0.<com.android.okio.GzipSource: void updateCrc(com.android.okio.OkBuffer,long,long)>($r27, 0L, 10L);

     label03:
        $r4 = r0.<com.android.okio.GzipSource: com.android.okio.BufferedSource source>;

        s1 = interfaceinvoke $r4.<com.android.okio.BufferedSource: short readShort()>();

        specialinvoke r0.<com.android.okio.GzipSource: void checkEqual(java.lang.String,int,int)>("ID1ID2", 8075, s1);

        $r5 = r0.<com.android.okio.GzipSource: com.android.okio.BufferedSource source>;

        interfaceinvoke $r5.<com.android.okio.BufferedSource: void skip(long)>(8L);

        $b7 = b0 >> 2;

        $b6 = $b7 & 1;

        if $b6 != 1 goto label06;

        $r21 = r0.<com.android.okio.GzipSource: com.android.okio.BufferedSource source>;

        interfaceinvoke $r21.<com.android.okio.BufferedSource: void require(long)>(2L);

        if z0 == 0 goto label04;

        $r24 = r0.<com.android.okio.GzipSource: com.android.okio.BufferedSource source>;

        $r29 = interfaceinvoke $r24.<com.android.okio.BufferedSource: com.android.okio.OkBuffer buffer()>();

        specialinvoke r0.<com.android.okio.GzipSource: void updateCrc(com.android.okio.OkBuffer,long,long)>($r29, 0L, 2L);

     label04:
        $r20 = r0.<com.android.okio.GzipSource: com.android.okio.BufferedSource source>;

        $r19 = interfaceinvoke $r20.<com.android.okio.BufferedSource: com.android.okio.OkBuffer buffer()>();

        s2 = virtualinvoke $r19.<com.android.okio.OkBuffer: short readShortLe()>();

        $r23 = r0.<com.android.okio.GzipSource: com.android.okio.BufferedSource source>;

        $l23 = (long) s2;

        interfaceinvoke $r23.<com.android.okio.BufferedSource: void require(long)>($l23);

        if z0 == 0 goto label05;

        $r26 = r0.<com.android.okio.GzipSource: com.android.okio.BufferedSource source>;

        $r25 = interfaceinvoke $r26.<com.android.okio.BufferedSource: com.android.okio.OkBuffer buffer()>();

        $l24 = (long) s2;

        specialinvoke r0.<com.android.okio.GzipSource: void updateCrc(com.android.okio.OkBuffer,long,long)>($r25, 0L, $l24);

     label05:
        $r22 = r0.<com.android.okio.GzipSource: com.android.okio.BufferedSource source>;

        $l22 = (long) s2;

        interfaceinvoke $r22.<com.android.okio.BufferedSource: void skip(long)>($l22);

     label06:
        $b9 = b0 >> 3;

        $b8 = $b9 & 1;

        if $b8 != 1 goto label09;

        $r13 = r0.<com.android.okio.GzipSource: com.android.okio.BufferedSource source>;

        l3 = interfaceinvoke $r13.<com.android.okio.BufferedSource: long indexOf(byte)>(0);

        $b20 = l3 cmp -1L;

        if $b20 != 0 goto label07;

        $r16 = new java.io.EOFException;

        specialinvoke $r16.<java.io.EOFException: void <init>()>();

        throw $r16;

     label07:
        if z0 == 0 goto label08;

        $r17 = r0.<com.android.okio.GzipSource: com.android.okio.BufferedSource source>;

        $r18 = interfaceinvoke $r17.<com.android.okio.BufferedSource: com.android.okio.OkBuffer buffer()>();

        $l21 = l3 + 1L;

        specialinvoke r0.<com.android.okio.GzipSource: void updateCrc(com.android.okio.OkBuffer,long,long)>($r18, 0L, $l21);

     label08:
        $r15 = r0.<com.android.okio.GzipSource: com.android.okio.BufferedSource source>;

        $l19 = l3 + 1L;

        interfaceinvoke $r15.<com.android.okio.BufferedSource: void skip(long)>($l19);

     label09:
        $b11 = b0 >> 4;

        $b10 = $b11 & 1;

        if $b10 != 1 goto label12;

        $r9 = r0.<com.android.okio.GzipSource: com.android.okio.BufferedSource source>;

        l25 = interfaceinvoke $r9.<com.android.okio.BufferedSource: long indexOf(byte)>(0);

        $b16 = l25 cmp -1L;

        if $b16 != 0 goto label10;

        $r12 = new java.io.EOFException;

        specialinvoke $r12.<java.io.EOFException: void <init>()>();

        throw $r12;

     label10:
        if z0 == 0 goto label11;

        $r11 = r0.<com.android.okio.GzipSource: com.android.okio.BufferedSource source>;

        $r14 = interfaceinvoke $r11.<com.android.okio.BufferedSource: com.android.okio.OkBuffer buffer()>();

        $l18 = l25 + 1L;

        specialinvoke r0.<com.android.okio.GzipSource: void updateCrc(com.android.okio.OkBuffer,long,long)>($r14, 0L, $l18);

     label11:
        $r10 = r0.<com.android.okio.GzipSource: com.android.okio.BufferedSource source>;

        $l17 = l25 + 1L;

        interfaceinvoke $r10.<com.android.okio.BufferedSource: void skip(long)>($l17);

     label12:
        if z0 == 0 goto label13;

        $r6 = r0.<com.android.okio.GzipSource: com.android.okio.BufferedSource source>;

        $s12 = interfaceinvoke $r6.<com.android.okio.BufferedSource: short readShortLe()>();

        $r7 = r0.<com.android.okio.GzipSource: java.util.zip.CRC32 crc>;

        $l14 = virtualinvoke $r7.<java.util.zip.CRC32: long getValue()>();

        $i13 = (int) $l14;

        $s15 = (short) $i13;

        specialinvoke r0.<com.android.okio.GzipSource: void checkEqual(java.lang.String,int,int)>("FHCRC", $s12, $s15);

        $r8 = r0.<com.android.okio.GzipSource: java.util.zip.CRC32 crc>;

        virtualinvoke $r8.<java.util.zip.CRC32: void reset()>();

     label13:
        return;
    }

    private void consumeTrailer() throws java.io.IOException
    {
        com.android.okio.GzipSource r0;
        com.android.okio.BufferedSource $r1, $r3;
        int $i0, $i2, $i3, $i4;
        java.util.zip.CRC32 $r2;
        long $l1;
        java.util.zip.Inflater $r4;

        r0 := @this: com.android.okio.GzipSource;

        $r1 = r0.<com.android.okio.GzipSource: com.android.okio.BufferedSource source>;

        $i0 = interfaceinvoke $r1.<com.android.okio.BufferedSource: int readIntLe()>();

        $r2 = r0.<com.android.okio.GzipSource: java.util.zip.CRC32 crc>;

        $l1 = virtualinvoke $r2.<java.util.zip.CRC32: long getValue()>();

        $i2 = (int) $l1;

        specialinvoke r0.<com.android.okio.GzipSource: void checkEqual(java.lang.String,int,int)>("CRC", $i0, $i2);

        $r3 = r0.<com.android.okio.GzipSource: com.android.okio.BufferedSource source>;

        $i3 = interfaceinvoke $r3.<com.android.okio.BufferedSource: int readIntLe()>();

        $r4 = r0.<com.android.okio.GzipSource: java.util.zip.Inflater inflater>;

        $i4 = virtualinvoke $r4.<java.util.zip.Inflater: int getTotalOut()>();

        specialinvoke r0.<com.android.okio.GzipSource: void checkEqual(java.lang.String,int,int)>("ISIZE", $i3, $i4);

        return;
    }

    public com.android.okio.Source deadline(com.android.okio.Deadline)
    {
        com.android.okio.GzipSource r0;
        com.android.okio.Deadline r1;
        com.android.okio.BufferedSource $r2;

        r0 := @this: com.android.okio.GzipSource;

        r1 := @parameter0: com.android.okio.Deadline;

        $r2 = r0.<com.android.okio.GzipSource: com.android.okio.BufferedSource source>;

        interfaceinvoke $r2.<com.android.okio.BufferedSource: com.android.okio.Source deadline(com.android.okio.Deadline)>(r1);

        return r0;
    }

    public void close() throws java.io.IOException
    {
        com.android.okio.GzipSource r0;
        com.android.okio.InflaterSource $r1;

        r0 := @this: com.android.okio.GzipSource;

        $r1 = r0.<com.android.okio.GzipSource: com.android.okio.InflaterSource inflaterSource>;

        virtualinvoke $r1.<com.android.okio.InflaterSource: void close()>();

        return;
    }

    private void updateCrc(com.android.okio.OkBuffer, long, long)
    {
        com.android.okio.GzipSource r0;
        com.android.okio.OkBuffer r1;
        long l0, l1, $l7, $l9, $l10, $l11, $l12, $l13, $l16, $l17;
        com.android.okio.Segment r2;
        int i2, i3, $i5, $i6, $i14, $i15;
        byte $b4, $b8;
        java.util.zip.CRC32 $r3;
        byte[] $r4;

        r0 := @this: com.android.okio.GzipSource;

        r1 := @parameter0: com.android.okio.OkBuffer;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r2 = r1.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

     label1:
        $b4 = l1 cmp 0L;

        if $b4 <= 0 goto label3;

        $i6 = r2.<com.android.okio.Segment: int limit>;

        $i5 = r2.<com.android.okio.Segment: int pos>;

        i2 = $i6 - $i5;

        $l7 = (long) i2;

        $b8 = l0 cmp $l7;

        if $b8 >= 0 goto label2;

        $l10 = (long) i2;

        $l12 = $l10 - l0;

        $l11 = staticinvoke <java.lang.Math: long min(long,long)>(l1, $l12);

        i3 = (int) $l11;

        $r3 = r0.<com.android.okio.GzipSource: java.util.zip.CRC32 crc>;

        $r4 = r2.<com.android.okio.Segment: byte[] data>;

        $i14 = r2.<com.android.okio.Segment: int pos>;

        $l13 = (long) $i14;

        $l16 = $l13 + l0;

        $i15 = (int) $l16;

        virtualinvoke $r3.<java.util.zip.CRC32: void update(byte[],int,int)>($r4, $i15, i3);

        $l17 = (long) i3;

        l1 = l1 - $l17;

     label2:
        $l9 = (long) i2;

        l0 = l0 - $l9;

        r2 = r2.<com.android.okio.Segment: com.android.okio.Segment next>;

        goto label1;

     label3:
        return;
    }

    private void checkEqual(java.lang.String, int, int) throws java.io.IOException
    {
        com.android.okio.GzipSource r0;
        java.lang.String r1, $r6;
        int i0, i1;
        java.io.IOException $r2;
        java.lang.Object[] $r3;
        java.lang.Integer $r4, $r5;

        r0 := @this: com.android.okio.GzipSource;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if i1 == i0 goto label1;

        $r2 = new java.io.IOException;

        $r3 = newarray (java.lang.Object)[3];

        $r3[0] = r1;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r3[1] = $r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3[2] = $r5;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s: actual 0x%08x != expected 0x%08x", $r3);

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label1:
        return;
    }

    public static void <clinit>()
    {
        <com.android.okio.GzipSource: byte SECTION_DONE> = 3;

        <com.android.okio.GzipSource: byte SECTION_TRAILER> = 2;

        <com.android.okio.GzipSource: byte SECTION_BODY> = 1;

        <com.android.okio.GzipSource: byte SECTION_HEADER> = 0;

        <com.android.okio.GzipSource: byte FCOMMENT> = 4;

        <com.android.okio.GzipSource: byte FNAME> = 3;

        <com.android.okio.GzipSource: byte FEXTRA> = 2;

        <com.android.okio.GzipSource: byte FHCRC> = 1;

        return;
    }
}
