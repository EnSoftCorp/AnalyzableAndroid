public final class com.android.okhttp.Handshake extends java.lang.Object
{
    private final java.lang.String cipherSuite;
    private final java.util.List peerCertificates;
    private final java.util.List localCertificates;

    private void <init>(java.lang.String, java.util.List, java.util.List)
    {
        com.android.okhttp.Handshake r0;
        java.lang.String r1;
        java.util.List r2, r3;

        r0 := @this: com.android.okhttp.Handshake;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.okhttp.Handshake: java.lang.String cipherSuite> = r1;

        r0.<com.android.okhttp.Handshake: java.util.List peerCertificates> = r2;

        r0.<com.android.okhttp.Handshake: java.util.List localCertificates> = r3;

        return;
    }

    public static com.android.okhttp.Handshake get(javax.net.ssl.SSLSession)
    {
        javax.net.ssl.SSLSession r0;
        java.lang.String r1;
        java.security.cert.Certificate[] r2, r4;
        java.util.List r5, $r6, $r7, r11;
        com.android.okhttp.Handshake $r8;
        java.lang.IllegalStateException $r9;
        javax.net.ssl.SSLPeerUnverifiedException $r10;

        r0 := @parameter0: javax.net.ssl.SSLSession;

        r1 = interfaceinvoke r0.<javax.net.ssl.SSLSession: java.lang.String getCipherSuite()>();

        if r1 != null goto label1;

        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("cipherSuite == null");

        throw $r9;

     label1:
        r2 = interfaceinvoke r0.<javax.net.ssl.SSLSession: java.security.cert.Certificate[] getPeerCertificates()>();

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        r2 = null;

     label4:
        if r2 == null goto label5;

        $r6 = staticinvoke <com.android.okhttp.internal.Util: java.util.List immutableList(java.lang.Object[])>(r2);

        goto label6;

     label5:
        $r6 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label6:
        r11 = $r6;

        r4 = interfaceinvoke r0.<javax.net.ssl.SSLSession: java.security.cert.Certificate[] getLocalCertificates()>();

        if r4 == null goto label7;

        $r7 = staticinvoke <com.android.okhttp.internal.Util: java.util.List immutableList(java.lang.Object[])>(r4);

        goto label8;

     label7:
        $r7 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label8:
        r5 = $r7;

        $r8 = new com.android.okhttp.Handshake;

        specialinvoke $r8.<com.android.okhttp.Handshake: void <init>(java.lang.String,java.util.List,java.util.List)>(r1, r11, r5);

        return $r8;

        catch javax.net.ssl.SSLPeerUnverifiedException from label1 to label2 with label3;
    }

    public static com.android.okhttp.Handshake get(java.lang.String, java.util.List, java.util.List)
    {
        java.lang.String r0;
        java.util.List r1, r2, $r4, $r5;
        com.android.okhttp.Handshake $r3;
        java.lang.IllegalArgumentException $r6;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.List;

        r2 := @parameter2: java.util.List;

        if r0 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("cipherSuite == null");

        throw $r6;

     label1:
        $r3 = new com.android.okhttp.Handshake;

        $r4 = staticinvoke <com.android.okhttp.internal.Util: java.util.List immutableList(java.util.List)>(r1);

        $r5 = staticinvoke <com.android.okhttp.internal.Util: java.util.List immutableList(java.util.List)>(r2);

        specialinvoke $r3.<com.android.okhttp.Handshake: void <init>(java.lang.String,java.util.List,java.util.List)>(r0, $r4, $r5);

        return $r3;
    }

    public java.lang.String cipherSuite()
    {
        com.android.okhttp.Handshake r0;
        java.lang.String $r1;

        r0 := @this: com.android.okhttp.Handshake;

        $r1 = r0.<com.android.okhttp.Handshake: java.lang.String cipherSuite>;

        return $r1;
    }

    public java.util.List peerCertificates()
    {
        com.android.okhttp.Handshake r0;
        java.util.List $r1;

        r0 := @this: com.android.okhttp.Handshake;

        $r1 = r0.<com.android.okhttp.Handshake: java.util.List peerCertificates>;

        return $r1;
    }

    public java.security.Principal peerPrincipal()
    {
        com.android.okhttp.Handshake r0;
        java.util.List $r1, $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.security.cert.X509Certificate $r4;
        javax.security.auth.x500.X500Principal $r5;

        r0 := @this: com.android.okhttp.Handshake;

        $r1 = r0.<com.android.okhttp.Handshake: java.util.List peerCertificates>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<com.android.okhttp.Handshake: java.util.List peerCertificates>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (java.security.cert.X509Certificate) $r3;

        $r5 = virtualinvoke $r4.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

        goto label2;

     label1:
        $r5 = null;

     label2:
        return $r5;
    }

    public java.util.List localCertificates()
    {
        com.android.okhttp.Handshake r0;
        java.util.List $r1;

        r0 := @this: com.android.okhttp.Handshake;

        $r1 = r0.<com.android.okhttp.Handshake: java.util.List localCertificates>;

        return $r1;
    }

    public java.security.Principal localPrincipal()
    {
        com.android.okhttp.Handshake r0;
        java.util.List $r1, $r2;
        boolean $z0;
        java.lang.Object $r3;
        java.security.cert.X509Certificate $r4;
        javax.security.auth.x500.X500Principal $r5;

        r0 := @this: com.android.okhttp.Handshake;

        $r1 = r0.<com.android.okhttp.Handshake: java.util.List localCertificates>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<com.android.okhttp.Handshake: java.util.List localCertificates>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (java.security.cert.X509Certificate) $r3;

        $r5 = virtualinvoke $r4.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

        goto label2;

     label1:
        $r5 = null;

     label2:
        return $r5;
    }

    public boolean equals(java.lang.Object)
    {
        com.android.okhttp.Handshake r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String $r3, $r4;
        java.util.List $r5, $r6, $r7, $r8;

        r0 := @this: com.android.okhttp.Handshake;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof com.android.okhttp.Handshake;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (com.android.okhttp.Handshake) r1;

        $r4 = r0.<com.android.okhttp.Handshake: java.lang.String cipherSuite>;

        $r3 = r2.<com.android.okhttp.Handshake: java.lang.String cipherSuite>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        $r6 = r0.<com.android.okhttp.Handshake: java.util.List peerCertificates>;

        $r5 = r2.<com.android.okhttp.Handshake: java.util.List peerCertificates>;

        $z2 = interfaceinvoke $r6.<java.util.List: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label2;

        $r8 = r0.<com.android.okhttp.Handshake: java.util.List localCertificates>;

        $r7 = r2.<com.android.okhttp.Handshake: java.util.List localCertificates>;

        $z3 = interfaceinvoke $r8.<java.util.List: boolean equals(java.lang.Object)>($r7);

        if $z3 == 0 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;
    }

    public int hashCode()
    {
        com.android.okhttp.Handshake r0;
        byte b0;
        java.lang.String $r1;
        int $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9;
        java.util.List $r2, $r3;

        r0 := @this: com.android.okhttp.Handshake;

        b0 = 17;

        $i1 = 31 * b0;

        $r1 = r0.<com.android.okhttp.Handshake: java.lang.String cipherSuite>;

        $i2 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        i7 = $i1 + $i2;

        $i3 = 31 * i7;

        $r2 = r0.<com.android.okhttp.Handshake: java.util.List peerCertificates>;

        $i4 = interfaceinvoke $r2.<java.util.List: int hashCode()>();

        i8 = $i3 + $i4;

        $i5 = 31 * i8;

        $r3 = r0.<com.android.okhttp.Handshake: java.util.List localCertificates>;

        $i6 = interfaceinvoke $r3.<java.util.List: int hashCode()>();

        i9 = $i5 + $i6;

        return i9;
    }
}
