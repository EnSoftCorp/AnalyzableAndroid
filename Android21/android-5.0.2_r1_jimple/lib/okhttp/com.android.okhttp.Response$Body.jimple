public abstract class com.android.okhttp.Response$Body extends java.lang.Object implements java.io.Closeable
{
    private java.io.Reader reader;
    private com.android.okio.Source source;

    public void <init>()
    {
        com.android.okhttp.Response$Body r0;

        r0 := @this: com.android.okhttp.Response$Body;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract boolean ready() throws java.io.IOException;

    public abstract com.android.okhttp.MediaType contentType();

    public abstract long contentLength();

    public abstract java.io.InputStream byteStream();

    public com.android.okio.Source source()
    {
        com.android.okhttp.Response$Body r0;
        com.android.okio.Source r1, $r3;
        java.io.InputStream $r2;

        r0 := @this: com.android.okhttp.Response$Body;

        r1 = r0.<com.android.okhttp.Response$Body: com.android.okio.Source source>;

        if r1 == null goto label1;

        $r3 = r1;

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<com.android.okhttp.Response$Body: java.io.InputStream byteStream()>();

        $r3 = staticinvoke <com.android.okio.Okio: com.android.okio.Source source(java.io.InputStream)>($r2);

        r0.<com.android.okhttp.Response$Body: com.android.okio.Source source> = $r3;

     label2:
        return $r3;
    }

    public final byte[] bytes() throws java.io.IOException
    {
        com.android.okhttp.Response$Body r0;
        long l0;
        byte[] r1, $r5;
        java.io.InputStream r2, $r4;
        byte $b1, $b2;
        java.io.ByteArrayOutputStream $r3, r12;
        int $i4, $i5;
        java.io.IOException $r6, $r8;
        java.lang.StringBuilder $r7, $r9, $r10;
        java.lang.String $r11;

        r0 := @this: com.android.okhttp.Response$Body;

        l0 = virtualinvoke r0.<com.android.okhttp.Response$Body: long contentLength()>();

        $b1 = l0 cmp 2147483647L;

        if $b1 <= 0 goto label1;

        $r8 = new java.io.IOException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot buffer entire body for content length: ");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>($r11);

        throw $r8;

     label1:
        $b2 = l0 cmp -1L;

        if $b2 == 0 goto label3;

        $i4 = (int) l0;

        r1 = newarray (byte)[$i4];

        r2 = virtualinvoke r0.<com.android.okhttp.Response$Body: java.io.InputStream byteStream()>();

        staticinvoke <com.android.okhttp.internal.Util: void readFully(java.io.InputStream,byte[])>(r2, r1);

        $i5 = virtualinvoke r2.<java.io.InputStream: int read()>();

        if $i5 == -1 goto label2;

        $r6 = new java.io.IOException;

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>("Content-Length and stream length disagree");

        throw $r6;

     label2:
        return r1;

     label3:
        $r3 = new java.io.ByteArrayOutputStream;

        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>();

        r12 = $r3;

        $r4 = virtualinvoke r0.<com.android.okhttp.Response$Body: java.io.InputStream byteStream()>();

        staticinvoke <com.android.okhttp.internal.Util: int copy(java.io.InputStream,java.io.OutputStream)>($r4, r12);

        $r5 = virtualinvoke r12.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r5;
    }

    public final java.io.Reader charStream()
    {
        com.android.okhttp.Response$Body r0;
        java.io.Reader r1, $r2;
        java.io.InputStream $r3;
        java.nio.charset.Charset $r4;
        java.io.InputStreamReader r5;

        r0 := @this: com.android.okhttp.Response$Body;

        r1 = r0.<com.android.okhttp.Response$Body: java.io.Reader reader>;

        if r1 == null goto label1;

        $r2 = r1;

        goto label2;

     label1:
        r5 = new java.io.InputStreamReader;

        $r2 = r5;

        $r3 = virtualinvoke r0.<com.android.okhttp.Response$Body: java.io.InputStream byteStream()>();

        $r4 = specialinvoke r0.<com.android.okhttp.Response$Body: java.nio.charset.Charset charset()>();

        specialinvoke r5.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>($r3, $r4);

        r0.<com.android.okhttp.Response$Body: java.io.Reader reader> = r5;

     label2:
        return $r2;
    }

    public final java.lang.String string() throws java.io.IOException
    {
        com.android.okhttp.Response$Body r0;
        java.lang.String $r1, $r4;
        byte[] $r2;
        java.nio.charset.Charset $r3;

        r0 := @this: com.android.okhttp.Response$Body;

        $r1 = new java.lang.String;

        $r2 = virtualinvoke r0.<com.android.okhttp.Response$Body: byte[] bytes()>();

        $r3 = specialinvoke r0.<com.android.okhttp.Response$Body: java.nio.charset.Charset charset()>();

        $r4 = virtualinvoke $r3.<java.nio.charset.Charset: java.lang.String name()>();

        specialinvoke $r1.<java.lang.String: void <init>(byte[],java.lang.String)>($r2, $r4);

        return $r1;
    }

    private java.nio.charset.Charset charset()
    {
        com.android.okhttp.Response$Body r0;
        com.android.okhttp.MediaType r1;
        java.nio.charset.Charset $r2, $r3;

        r0 := @this: com.android.okhttp.Response$Body;

        r1 = virtualinvoke r0.<com.android.okhttp.Response$Body: com.android.okhttp.MediaType contentType()>();

        if r1 == null goto label1;

        $r3 = <com.android.okhttp.internal.Util: java.nio.charset.Charset UTF_8>;

        $r2 = virtualinvoke r1.<com.android.okhttp.MediaType: java.nio.charset.Charset charset(java.nio.charset.Charset)>($r3);

        goto label2;

     label1:
        $r2 = <com.android.okhttp.internal.Util: java.nio.charset.Charset UTF_8>;

     label2:
        return $r2;
    }

    public void close() throws java.io.IOException
    {
        com.android.okhttp.Response$Body r0;
        java.io.InputStream $r1;

        r0 := @this: com.android.okhttp.Response$Body;

        $r1 = virtualinvoke r0.<com.android.okhttp.Response$Body: java.io.InputStream byteStream()>();

        virtualinvoke $r1.<java.io.InputStream: void close()>();

        return;
    }
}
