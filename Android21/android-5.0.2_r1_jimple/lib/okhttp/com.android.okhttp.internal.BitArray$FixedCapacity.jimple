public final class com.android.okhttp.internal.BitArray$FixedCapacity extends java.lang.Object implements com.android.okhttp.internal.BitArray
{
    long data;

    public void <init>()
    {
        com.android.okhttp.internal.BitArray$FixedCapacity r0;

        r0 := @this: com.android.okhttp.internal.BitArray$FixedCapacity;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.okhttp.internal.BitArray$FixedCapacity: long data> = 0L;

        return;
    }

    public void clear()
    {
        com.android.okhttp.internal.BitArray$FixedCapacity r0;

        r0 := @this: com.android.okhttp.internal.BitArray$FixedCapacity;

        r0.<com.android.okhttp.internal.BitArray$FixedCapacity: long data> = 0L;

        return;
    }

    public void set(int)
    {
        com.android.okhttp.internal.BitArray$FixedCapacity r0;
        int i0, $i2;
        long $l1, $l3, $l4;

        r0 := @this: com.android.okhttp.internal.BitArray$FixedCapacity;

        i0 := @parameter0: int;

        $l1 = r0.<com.android.okhttp.internal.BitArray$FixedCapacity: long data>;

        $i2 = staticinvoke <com.android.okhttp.internal.BitArray$FixedCapacity: int checkInput(int)>(i0);

        $l3 = 1L << $i2;

        $l4 = $l1 | $l3;

        r0.<com.android.okhttp.internal.BitArray$FixedCapacity: long data> = $l4;

        return;
    }

    public void toggle(int)
    {
        com.android.okhttp.internal.BitArray$FixedCapacity r0;
        int i0, $i2;
        long $l1, $l3, $l4;

        r0 := @this: com.android.okhttp.internal.BitArray$FixedCapacity;

        i0 := @parameter0: int;

        $l1 = r0.<com.android.okhttp.internal.BitArray$FixedCapacity: long data>;

        $i2 = staticinvoke <com.android.okhttp.internal.BitArray$FixedCapacity: int checkInput(int)>(i0);

        $l3 = 1L << $i2;

        $l4 = $l1 ^ $l3;

        r0.<com.android.okhttp.internal.BitArray$FixedCapacity: long data> = $l4;

        return;
    }

    public boolean get(int)
    {
        com.android.okhttp.internal.BitArray$FixedCapacity r0;
        int i0, $i2;
        long $l1, $l3, $l4;
        byte $b5;
        boolean $z0;

        r0 := @this: com.android.okhttp.internal.BitArray$FixedCapacity;

        i0 := @parameter0: int;

        $l1 = r0.<com.android.okhttp.internal.BitArray$FixedCapacity: long data>;

        $i2 = staticinvoke <com.android.okhttp.internal.BitArray$FixedCapacity: int checkInput(int)>(i0);

        $l3 = $l1 >> $i2;

        $l4 = $l3 & 1L;

        $b5 = $l4 cmp 1L;

        if $b5 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void shiftLeft(int)
    {
        com.android.okhttp.internal.BitArray$FixedCapacity r0;
        int i0, $i2;
        long $l1, $l3;

        r0 := @this: com.android.okhttp.internal.BitArray$FixedCapacity;

        i0 := @parameter0: int;

        $l1 = r0.<com.android.okhttp.internal.BitArray$FixedCapacity: long data>;

        $i2 = staticinvoke <com.android.okhttp.internal.BitArray$FixedCapacity: int checkInput(int)>(i0);

        $l3 = $l1 << $i2;

        r0.<com.android.okhttp.internal.BitArray$FixedCapacity: long data> = $l3;

        return;
    }

    public java.lang.String toString()
    {
        com.android.okhttp.internal.BitArray$FixedCapacity r0;
        long $l0;
        java.lang.String $r1;

        r0 := @this: com.android.okhttp.internal.BitArray$FixedCapacity;

        $l0 = r0.<com.android.okhttp.internal.BitArray$FixedCapacity: long data>;

        $r1 = staticinvoke <java.lang.Long: java.lang.String toBinaryString(long)>($l0);

        return $r1;
    }

    public com.android.okhttp.internal.BitArray toVariableCapacity()
    {
        com.android.okhttp.internal.BitArray$FixedCapacity r0;
        com.android.okhttp.internal.BitArray$VariableCapacity $r1;

        r0 := @this: com.android.okhttp.internal.BitArray$FixedCapacity;

        $r1 = new com.android.okhttp.internal.BitArray$VariableCapacity;

        specialinvoke $r1.<com.android.okhttp.internal.BitArray$VariableCapacity: void <init>(com.android.okhttp.internal.BitArray$FixedCapacity,com.android.okhttp.internal.BitArray$1)>(r0, null);

        return $r1;
    }

    private static int checkInput(int)
    {
        int i0;
        java.lang.IllegalArgumentException $r0;
        java.lang.Object[] $r1;
        java.lang.Integer $r2;
        java.lang.String $r3;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        if i0 <= 63 goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        $r1 = newarray (java.lang.Object)[1];

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r2;

        $r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("input must be between 0 and 63: %s", $r1);

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r0;

     label2:
        return i0;
    }
}
