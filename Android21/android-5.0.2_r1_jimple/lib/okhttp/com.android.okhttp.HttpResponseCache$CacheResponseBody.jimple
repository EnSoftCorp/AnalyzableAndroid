class com.android.okhttp.HttpResponseCache$CacheResponseBody extends com.android.okhttp.Response$Body
{
    private final com.android.okhttp.internal.DiskLruCache$Snapshot snapshot;
    private final java.io.InputStream bodyIn;
    private final java.lang.String contentType;
    private final java.lang.String contentLength;

    public void <init>(com.android.okhttp.internal.DiskLruCache$Snapshot, java.lang.String, java.lang.String)
    {
        com.android.okhttp.HttpResponseCache$CacheResponseBody r0;
        com.android.okhttp.internal.DiskLruCache$Snapshot r1;
        java.lang.String r2, r3;
        com.android.okhttp.HttpResponseCache$CacheResponseBody$1 $r4;
        java.io.InputStream $r5;

        r0 := @this: com.android.okhttp.HttpResponseCache$CacheResponseBody;

        r1 := @parameter0: com.android.okhttp.internal.DiskLruCache$Snapshot;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<com.android.okhttp.Response$Body: void <init>()>();

        r0.<com.android.okhttp.HttpResponseCache$CacheResponseBody: com.android.okhttp.internal.DiskLruCache$Snapshot snapshot> = r1;

        r0.<com.android.okhttp.HttpResponseCache$CacheResponseBody: java.lang.String contentType> = r2;

        r0.<com.android.okhttp.HttpResponseCache$CacheResponseBody: java.lang.String contentLength> = r3;

        $r4 = new com.android.okhttp.HttpResponseCache$CacheResponseBody$1;

        $r5 = virtualinvoke r1.<com.android.okhttp.internal.DiskLruCache$Snapshot: java.io.InputStream getInputStream(int)>(1);

        specialinvoke $r4.<com.android.okhttp.HttpResponseCache$CacheResponseBody$1: void <init>(com.android.okhttp.HttpResponseCache$CacheResponseBody,java.io.InputStream,com.android.okhttp.internal.DiskLruCache$Snapshot)>(r0, $r5, r1);

        r0.<com.android.okhttp.HttpResponseCache$CacheResponseBody: java.io.InputStream bodyIn> = $r4;

        return;
    }

    public boolean ready() throws java.io.IOException
    {
        com.android.okhttp.HttpResponseCache$CacheResponseBody r0;

        r0 := @this: com.android.okhttp.HttpResponseCache$CacheResponseBody;

        return 1;
    }

    public com.android.okhttp.MediaType contentType()
    {
        com.android.okhttp.HttpResponseCache$CacheResponseBody r0;
        java.lang.String $r1, $r2;
        com.android.okhttp.MediaType $r3;

        r0 := @this: com.android.okhttp.HttpResponseCache$CacheResponseBody;

        $r1 = r0.<com.android.okhttp.HttpResponseCache$CacheResponseBody: java.lang.String contentType>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.okhttp.HttpResponseCache$CacheResponseBody: java.lang.String contentType>;

        $r3 = staticinvoke <com.android.okhttp.MediaType: com.android.okhttp.MediaType parse(java.lang.String)>($r2);

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public long contentLength()
    {
        com.android.okhttp.HttpResponseCache$CacheResponseBody r0;
        java.lang.String $r2, $r3;
        long $l0;
        java.lang.NumberFormatException $r4;

        r0 := @this: com.android.okhttp.HttpResponseCache$CacheResponseBody;

     label1:
        $r2 = r0.<com.android.okhttp.HttpResponseCache$CacheResponseBody: java.lang.String contentLength>;

        if $r2 == null goto label2;

        $r3 = r0.<com.android.okhttp.HttpResponseCache$CacheResponseBody: java.lang.String contentLength>;

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r3);

        goto label3;

     label2:
        $l0 = -1L;

     label3:
        return $l0;

     label4:
        $r4 := @caughtexception;

        return -1L;

        catch java.lang.NumberFormatException from label1 to label3 with label4;
    }

    public java.io.InputStream byteStream()
    {
        com.android.okhttp.HttpResponseCache$CacheResponseBody r0;
        java.io.InputStream $r1;

        r0 := @this: com.android.okhttp.HttpResponseCache$CacheResponseBody;

        $r1 = r0.<com.android.okhttp.HttpResponseCache$CacheResponseBody: java.io.InputStream bodyIn>;

        return $r1;
    }

    static com.android.okhttp.internal.DiskLruCache$Snapshot access$000(com.android.okhttp.HttpResponseCache$CacheResponseBody)
    {
        com.android.okhttp.HttpResponseCache$CacheResponseBody r0;
        com.android.okhttp.internal.DiskLruCache$Snapshot $r1;

        r0 := @parameter0: com.android.okhttp.HttpResponseCache$CacheResponseBody;

        $r1 = r0.<com.android.okhttp.HttpResponseCache$CacheResponseBody: com.android.okhttp.internal.DiskLruCache$Snapshot snapshot>;

        return $r1;
    }
}
