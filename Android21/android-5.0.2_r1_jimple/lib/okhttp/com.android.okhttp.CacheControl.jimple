public final class com.android.okhttp.CacheControl extends java.lang.Object
{
    private final boolean noCache;
    private final boolean noStore;
    private final int maxAgeSeconds;
    private final int sMaxAgeSeconds;
    private final boolean isPublic;
    private final boolean mustRevalidate;
    private final int maxStaleSeconds;
    private final int minFreshSeconds;
    private final boolean onlyIfCached;

    private void <init>(boolean, boolean, int, int, boolean, boolean, int, int, boolean)
    {
        com.android.okhttp.CacheControl r0;
        boolean z0, z1, z2, z3, z4;
        int i0, i1, i2, i3;

        r0 := @this: com.android.okhttp.CacheControl;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        z2 := @parameter4: boolean;

        z3 := @parameter5: boolean;

        i2 := @parameter6: int;

        i3 := @parameter7: int;

        z4 := @parameter8: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.okhttp.CacheControl: boolean noCache> = z0;

        r0.<com.android.okhttp.CacheControl: boolean noStore> = z1;

        r0.<com.android.okhttp.CacheControl: int maxAgeSeconds> = i0;

        r0.<com.android.okhttp.CacheControl: int sMaxAgeSeconds> = i1;

        r0.<com.android.okhttp.CacheControl: boolean isPublic> = z2;

        r0.<com.android.okhttp.CacheControl: boolean mustRevalidate> = z3;

        r0.<com.android.okhttp.CacheControl: int maxStaleSeconds> = i2;

        r0.<com.android.okhttp.CacheControl: int minFreshSeconds> = i3;

        r0.<com.android.okhttp.CacheControl: boolean onlyIfCached> = z4;

        return;
    }

    public boolean noCache()
    {
        com.android.okhttp.CacheControl r0;
        boolean $z0;

        r0 := @this: com.android.okhttp.CacheControl;

        $z0 = r0.<com.android.okhttp.CacheControl: boolean noCache>;

        return $z0;
    }

    public boolean noStore()
    {
        com.android.okhttp.CacheControl r0;
        boolean $z0;

        r0 := @this: com.android.okhttp.CacheControl;

        $z0 = r0.<com.android.okhttp.CacheControl: boolean noStore>;

        return $z0;
    }

    public int maxAgeSeconds()
    {
        com.android.okhttp.CacheControl r0;
        int $i0;

        r0 := @this: com.android.okhttp.CacheControl;

        $i0 = r0.<com.android.okhttp.CacheControl: int maxAgeSeconds>;

        return $i0;
    }

    public int sMaxAgeSeconds()
    {
        com.android.okhttp.CacheControl r0;
        int $i0;

        r0 := @this: com.android.okhttp.CacheControl;

        $i0 = r0.<com.android.okhttp.CacheControl: int sMaxAgeSeconds>;

        return $i0;
    }

    public boolean isPublic()
    {
        com.android.okhttp.CacheControl r0;
        boolean $z0;

        r0 := @this: com.android.okhttp.CacheControl;

        $z0 = r0.<com.android.okhttp.CacheControl: boolean isPublic>;

        return $z0;
    }

    public boolean mustRevalidate()
    {
        com.android.okhttp.CacheControl r0;
        boolean $z0;

        r0 := @this: com.android.okhttp.CacheControl;

        $z0 = r0.<com.android.okhttp.CacheControl: boolean mustRevalidate>;

        return $z0;
    }

    public int maxStaleSeconds()
    {
        com.android.okhttp.CacheControl r0;
        int $i0;

        r0 := @this: com.android.okhttp.CacheControl;

        $i0 = r0.<com.android.okhttp.CacheControl: int maxStaleSeconds>;

        return $i0;
    }

    public int minFreshSeconds()
    {
        com.android.okhttp.CacheControl r0;
        int $i0;

        r0 := @this: com.android.okhttp.CacheControl;

        $i0 = r0.<com.android.okhttp.CacheControl: int minFreshSeconds>;

        return $i0;
    }

    public boolean onlyIfCached()
    {
        com.android.okhttp.CacheControl r0;
        boolean $z0;

        r0 := @this: com.android.okhttp.CacheControl;

        $z0 = r0.<com.android.okhttp.CacheControl: boolean onlyIfCached>;

        return $z0;
    }

    public static com.android.okhttp.CacheControl parse(com.android.okhttp.Headers)
    {
        com.android.okhttp.Headers r0;
        boolean z0, z1, z2, z3, z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        int i0, i1, i2, i3, i4, i5, i6, $i7, i8, $i9, $i10, $i13, i15, i16, i17, i18, i19, i20;
        java.lang.String r1, r2, r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        com.android.okhttp.CacheControl $r5;
        char $c11, $c12, $c14;

        r0 := @parameter0: com.android.okhttp.Headers;

        z0 = 0;

        z1 = 0;

        i0 = -1;

        i1 = -1;

        z2 = 0;

        z3 = 0;

        i2 = -1;

        i3 = -1;

        z4 = 0;

        i4 = 0;

     label01:
        $i7 = virtualinvoke r0.<com.android.okhttp.Headers: int size()>();

        if i4 >= $i7 goto label18;

        $r4 = virtualinvoke r0.<com.android.okhttp.Headers: java.lang.String name(int)>(i4);

        $z5 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Cache-Control");

        if $z5 != 0 goto label02;

        $r17 = virtualinvoke r0.<com.android.okhttp.Headers: java.lang.String name(int)>(i4);

        $z15 = virtualinvoke $r17.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Pragma");

        if $z15 != 0 goto label02;

        goto label17;

     label02:
        r1 = virtualinvoke r0.<com.android.okhttp.Headers: java.lang.String value(int)>(i4);

        i5 = 0;

     label03:
        $i9 = virtualinvoke r1.<java.lang.String: int length()>();

        if i5 >= $i9 goto label17;

        i6 = i5;

        i15 = staticinvoke <com.android.okhttp.internal.http.HeaderParser: int skipUntil(java.lang.String,int,java.lang.String)>(r1, i5, "=,;");

        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i6, i15);

        r2 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

        $i10 = virtualinvoke r1.<java.lang.String: int length()>();

        if i15 == $i10 goto label04;

        $c12 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i15);

        if $c12 == 44 goto label04;

        $c11 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i15);

        if $c11 != 59 goto label05;

     label04:
        i5 = i15 + 1;

        r3 = null;

        goto label07;

     label05:
        i16 = i15 + 1;

        i17 = staticinvoke <com.android.okhttp.internal.http.HeaderParser: int skipWhitespace(java.lang.String,int)>(r1, i16);

        $i13 = virtualinvoke r1.<java.lang.String: int length()>();

        if i17 >= $i13 goto label06;

        $c14 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i17);

        if $c14 != 34 goto label06;

        i18 = i17 + 1;

        i8 = i18;

        i19 = staticinvoke <com.android.okhttp.internal.http.HeaderParser: int skipUntil(java.lang.String,int,java.lang.String)>(r1, i18, "\"");

        r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i8, i19);

        i5 = i19 + 1;

        goto label07;

     label06:
        i20 = i17;

        i5 = staticinvoke <com.android.okhttp.internal.http.HeaderParser: int skipUntil(java.lang.String,int,java.lang.String)>(r1, i17, ",;");

        $r16 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i20, i5);

        r3 = virtualinvoke $r16.<java.lang.String: java.lang.String trim()>();

     label07:
        $r7 = "no-cache";

        $z6 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z6 == 0 goto label08;

        z0 = 1;

        goto label16;

     label08:
        $r8 = "no-store";

        $z7 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z7 == 0 goto label09;

        z1 = 1;

        goto label16;

     label09:
        $r9 = "max-age";

        $z9 = virtualinvoke $r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z9 == 0 goto label10;

        i0 = staticinvoke <com.android.okhttp.internal.http.HeaderParser: int parseSeconds(java.lang.String)>(r3);

        goto label16;

     label10:
        $r11 = "s-maxage";

        $z8 = virtualinvoke $r11.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z8 == 0 goto label11;

        i1 = staticinvoke <com.android.okhttp.internal.http.HeaderParser: int parseSeconds(java.lang.String)>(r3);

        goto label16;

     label11:
        $r10 = "public";

        $z11 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z11 == 0 goto label12;

        z2 = 1;

        goto label16;

     label12:
        $r13 = "must-revalidate";

        $z10 = virtualinvoke $r13.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z10 == 0 goto label13;

        z3 = 1;

        goto label16;

     label13:
        $r12 = "max-stale";

        $z13 = virtualinvoke $r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z13 == 0 goto label14;

        i2 = staticinvoke <com.android.okhttp.internal.http.HeaderParser: int parseSeconds(java.lang.String)>(r3);

        goto label16;

     label14:
        $r15 = "min-fresh";

        $z12 = virtualinvoke $r15.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z12 == 0 goto label15;

        i3 = staticinvoke <com.android.okhttp.internal.http.HeaderParser: int parseSeconds(java.lang.String)>(r3);

        goto label16;

     label15:
        $r14 = "only-if-cached";

        $z14 = virtualinvoke $r14.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z14 == 0 goto label16;

        z4 = 1;

     label16:
        goto label03;

     label17:
        i4 = i4 + 1;

        goto label01;

     label18:
        $r5 = new com.android.okhttp.CacheControl;

        specialinvoke $r5.<com.android.okhttp.CacheControl: void <init>(boolean,boolean,int,int,boolean,boolean,int,int,boolean)>(z0, z1, i0, i1, z2, z3, i2, i3, z4);

        return $r5;
    }
}
