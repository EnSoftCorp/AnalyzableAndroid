public final class com.android.okhttp.internal.http.RouteSelector extends java.lang.Object
{
    private static final int TLS_MODE_MODERN;
    private static final int TLS_MODE_COMPATIBLE;
    private static final int TLS_MODE_NULL;
    private final com.android.okhttp.Address address;
    private final java.net.URI uri;
    private final java.net.ProxySelector proxySelector;
    private final com.android.okhttp.ConnectionPool pool;
    private final com.android.okhttp.HostResolver hostResolver;
    private final com.android.okhttp.RouteDatabase routeDatabase;
    private java.net.Proxy lastProxy;
    private java.net.InetSocketAddress lastInetSocketAddress;
    private boolean hasNextProxy;
    private java.net.Proxy userSpecifiedProxy;
    private java.util.Iterator proxySelectorProxies;
    private java.net.InetAddress[] socketAddresses;
    private int nextSocketAddressIndex;
    private int socketPort;
    private int nextTlsMode;
    private final java.util.List postponedRoutes;

    public void <init>(com.android.okhttp.Address, java.net.URI, java.net.ProxySelector, com.android.okhttp.ConnectionPool, com.android.okhttp.HostResolver, com.android.okhttp.RouteDatabase)
    {
        com.android.okhttp.internal.http.RouteSelector r0;
        com.android.okhttp.Address r1;
        java.net.URI r2;
        java.net.ProxySelector r3;
        com.android.okhttp.ConnectionPool r4;
        com.android.okhttp.HostResolver r5;
        com.android.okhttp.RouteDatabase r6;
        java.util.LinkedList $r7;
        java.net.Proxy $r8;

        r0 := @this: com.android.okhttp.internal.http.RouteSelector;

        r1 := @parameter0: com.android.okhttp.Address;

        r2 := @parameter1: java.net.URI;

        r3 := @parameter2: java.net.ProxySelector;

        r4 := @parameter3: com.android.okhttp.ConnectionPool;

        r5 := @parameter4: com.android.okhttp.HostResolver;

        r6 := @parameter5: com.android.okhttp.RouteDatabase;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.okhttp.internal.http.RouteSelector: int nextTlsMode> = -1;

        r0.<com.android.okhttp.internal.http.RouteSelector: com.android.okhttp.Address address> = r1;

        r0.<com.android.okhttp.internal.http.RouteSelector: java.net.URI uri> = r2;

        r0.<com.android.okhttp.internal.http.RouteSelector: java.net.ProxySelector proxySelector> = r3;

        r0.<com.android.okhttp.internal.http.RouteSelector: com.android.okhttp.ConnectionPool pool> = r4;

        r0.<com.android.okhttp.internal.http.RouteSelector: com.android.okhttp.HostResolver hostResolver> = r5;

        r0.<com.android.okhttp.internal.http.RouteSelector: com.android.okhttp.RouteDatabase routeDatabase> = r6;

        $r7 = new java.util.LinkedList;

        specialinvoke $r7.<java.util.LinkedList: void <init>()>();

        r0.<com.android.okhttp.internal.http.RouteSelector: java.util.List postponedRoutes> = $r7;

        $r8 = virtualinvoke r1.<com.android.okhttp.Address: java.net.Proxy getProxy()>();

        specialinvoke r0.<com.android.okhttp.internal.http.RouteSelector: void resetNextProxy(java.net.URI,java.net.Proxy)>(r2, $r8);

        return;
    }

    public boolean hasNext()
    {
        com.android.okhttp.internal.http.RouteSelector r0;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: com.android.okhttp.internal.http.RouteSelector;

        $z0 = specialinvoke r0.<com.android.okhttp.internal.http.RouteSelector: boolean hasNextTlsMode()>();

        if $z0 != 0 goto label1;

        $z1 = specialinvoke r0.<com.android.okhttp.internal.http.RouteSelector: boolean hasNextInetSocketAddress()>();

        if $z1 != 0 goto label1;

        $z2 = specialinvoke r0.<com.android.okhttp.internal.http.RouteSelector: boolean hasNextProxy()>();

        if $z2 != 0 goto label1;

        $z3 = specialinvoke r0.<com.android.okhttp.internal.http.RouteSelector: boolean hasNextPostponed()>();

        if $z3 == 0 goto label2;

     label1:
        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;
    }

    public com.android.okhttp.Connection next(java.lang.String) throws java.io.IOException
    {
        com.android.okhttp.internal.http.RouteSelector r0;
        java.lang.String r1;
        com.android.okhttp.Connection r2, $r6, $r12, $r15, $r19;
        com.android.okhttp.Route r3, $r7, $r20;
        com.android.okhttp.Address $r4, $r10;
        com.android.okhttp.ConnectionPool $r5, $r14, $r21;
        boolean $z0, $z1, $z3, $z4, $z5, $z6, $z7, $z8, z9;
        int $i0;
        java.net.InetSocketAddress $r8, $r16;
        java.net.Proxy $r9, $r17, $r18;
        com.android.okhttp.RouteDatabase $r11;
        java.util.List $r13;
        java.util.NoSuchElementException $r22;

        r0 := @this: com.android.okhttp.internal.http.RouteSelector;

        r1 := @parameter0: java.lang.String;

     label01:
        $r5 = r0.<com.android.okhttp.internal.http.RouteSelector: com.android.okhttp.ConnectionPool pool>;

        $r4 = r0.<com.android.okhttp.internal.http.RouteSelector: com.android.okhttp.Address address>;

        $r6 = virtualinvoke $r5.<com.android.okhttp.ConnectionPool: com.android.okhttp.Connection get(com.android.okhttp.Address)>($r4);

        r2 = $r6;

        if $r6 == null goto label04;

        $z7 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("GET");

        if $z7 != 0 goto label02;

        $z8 = virtualinvoke r2.<com.android.okhttp.Connection: boolean isReadable()>();

        if $z8 == 0 goto label03;

     label02:
        return r2;

     label03:
        virtualinvoke r2.<com.android.okhttp.Connection: void close()>();

        goto label01;

     label04:
        $z0 = specialinvoke r0.<com.android.okhttp.internal.http.RouteSelector: boolean hasNextTlsMode()>();

        if $z0 != 0 goto label08;

        $z3 = specialinvoke r0.<com.android.okhttp.internal.http.RouteSelector: boolean hasNextInetSocketAddress()>();

        if $z3 != 0 goto label07;

        $z5 = specialinvoke r0.<com.android.okhttp.internal.http.RouteSelector: boolean hasNextProxy()>();

        if $z5 != 0 goto label06;

        $z6 = specialinvoke r0.<com.android.okhttp.internal.http.RouteSelector: boolean hasNextPostponed()>();

        if $z6 != 0 goto label05;

        $r22 = new java.util.NoSuchElementException;

        specialinvoke $r22.<java.util.NoSuchElementException: void <init>()>();

        throw $r22;

     label05:
        $r19 = new com.android.okhttp.Connection;

        $r21 = r0.<com.android.okhttp.internal.http.RouteSelector: com.android.okhttp.ConnectionPool pool>;

        $r20 = specialinvoke r0.<com.android.okhttp.internal.http.RouteSelector: com.android.okhttp.Route nextPostponed()>();

        specialinvoke $r19.<com.android.okhttp.Connection: void <init>(com.android.okhttp.ConnectionPool,com.android.okhttp.Route)>($r21, $r20);

        return $r19;

     label06:
        $r18 = specialinvoke r0.<com.android.okhttp.internal.http.RouteSelector: java.net.Proxy nextProxy()>();

        r0.<com.android.okhttp.internal.http.RouteSelector: java.net.Proxy lastProxy> = $r18;

        $r17 = r0.<com.android.okhttp.internal.http.RouteSelector: java.net.Proxy lastProxy>;

        specialinvoke r0.<com.android.okhttp.internal.http.RouteSelector: void resetNextInetSocketAddress(java.net.Proxy)>($r17);

     label07:
        $r16 = specialinvoke r0.<com.android.okhttp.internal.http.RouteSelector: java.net.InetSocketAddress nextInetSocketAddress()>();

        r0.<com.android.okhttp.internal.http.RouteSelector: java.net.InetSocketAddress lastInetSocketAddress> = $r16;

        specialinvoke r0.<com.android.okhttp.internal.http.RouteSelector: void resetNextTlsMode()>();

     label08:
        $i0 = specialinvoke r0.<com.android.okhttp.internal.http.RouteSelector: int nextTlsMode()>();

        if $i0 != 1 goto label09;

        $z4 = 1;

        goto label10;

     label09:
        $z4 = 0;

     label10:
        z9 = $z4;

        $r7 = new com.android.okhttp.Route;

        $r10 = r0.<com.android.okhttp.internal.http.RouteSelector: com.android.okhttp.Address address>;

        $r9 = r0.<com.android.okhttp.internal.http.RouteSelector: java.net.Proxy lastProxy>;

        $r8 = r0.<com.android.okhttp.internal.http.RouteSelector: java.net.InetSocketAddress lastInetSocketAddress>;

        specialinvoke $r7.<com.android.okhttp.Route: void <init>(com.android.okhttp.Address,java.net.Proxy,java.net.InetSocketAddress,boolean)>($r10, $r9, $r8, z9);

        r3 = $r7;

        $r11 = r0.<com.android.okhttp.internal.http.RouteSelector: com.android.okhttp.RouteDatabase routeDatabase>;

        $z1 = virtualinvoke $r11.<com.android.okhttp.RouteDatabase: boolean shouldPostpone(com.android.okhttp.Route)>(r3);

        if $z1 == 0 goto label11;

        $r13 = r0.<com.android.okhttp.internal.http.RouteSelector: java.util.List postponedRoutes>;

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>(r3);

        $r15 = virtualinvoke r0.<com.android.okhttp.internal.http.RouteSelector: com.android.okhttp.Connection next(java.lang.String)>(r1);

        return $r15;

     label11:
        $r12 = new com.android.okhttp.Connection;

        $r14 = r0.<com.android.okhttp.internal.http.RouteSelector: com.android.okhttp.ConnectionPool pool>;

        specialinvoke $r12.<com.android.okhttp.Connection: void <init>(com.android.okhttp.ConnectionPool,com.android.okhttp.Route)>($r14, r3);

        return $r12;
    }

    public void connectFailed(com.android.okhttp.Connection, java.io.IOException)
    {
        com.android.okhttp.internal.http.RouteSelector r0;
        com.android.okhttp.Connection r1;
        java.io.IOException r2;
        com.android.okhttp.Route r3, r4, $r10;
        boolean z0, $z1, $z2, $z3, $z4;
        int $i0, $i1;
        java.net.Proxy $r5, $r12, $r16;
        java.net.Proxy$Type $r6, $r7;
        com.android.okhttp.RouteDatabase $r8, $r13;
        java.net.InetSocketAddress $r9;
        com.android.okhttp.Address $r11;
        java.net.ProxySelector $r14, $r15;
        java.net.URI $r17;
        java.net.SocketAddress $r18;

        r0 := @this: com.android.okhttp.internal.http.RouteSelector;

        r1 := @parameter0: com.android.okhttp.Connection;

        r2 := @parameter1: java.io.IOException;

        $i0 = virtualinvoke r1.<com.android.okhttp.Connection: int recycleCount()>();

        if $i0 <= 0 goto label1;

        return;

     label1:
        r3 = virtualinvoke r1.<com.android.okhttp.Connection: com.android.okhttp.Route getRoute()>();

        $r5 = virtualinvoke r3.<com.android.okhttp.Route: java.net.Proxy getProxy()>();

        $r6 = virtualinvoke $r5.<java.net.Proxy: java.net.Proxy$Type type()>();

        $r7 = <java.net.Proxy$Type: java.net.Proxy$Type DIRECT>;

        if $r6 == $r7 goto label2;

        $r15 = r0.<com.android.okhttp.internal.http.RouteSelector: java.net.ProxySelector proxySelector>;

        if $r15 == null goto label2;

        $r14 = r0.<com.android.okhttp.internal.http.RouteSelector: java.net.ProxySelector proxySelector>;

        $r17 = r0.<com.android.okhttp.internal.http.RouteSelector: java.net.URI uri>;

        $r16 = virtualinvoke r3.<com.android.okhttp.Route: java.net.Proxy getProxy()>();

        $r18 = virtualinvoke $r16.<java.net.Proxy: java.net.SocketAddress address()>();

        virtualinvoke $r14.<java.net.ProxySelector: void connectFailed(java.net.URI,java.net.SocketAddress,java.io.IOException)>($r17, $r18, r2);

     label2:
        $r8 = r0.<com.android.okhttp.internal.http.RouteSelector: com.android.okhttp.RouteDatabase routeDatabase>;

        virtualinvoke $r8.<com.android.okhttp.RouteDatabase: void failed(com.android.okhttp.Route)>(r3);

        $z1 = specialinvoke r0.<com.android.okhttp.internal.http.RouteSelector: boolean hasNextTlsMode()>();

        if $z1 == 0 goto label5;

        $z2 = r2 instanceof javax.net.ssl.SSLHandshakeException;

        if $z2 != 0 goto label5;

        $z3 = r2 instanceof javax.net.ssl.SSLProtocolException;

        if $z3 != 0 goto label5;

        $i1 = specialinvoke r0.<com.android.okhttp.internal.http.RouteSelector: int nextTlsMode()>();

        if $i1 != 1 goto label3;

        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        z0 = $z4;

        $r10 = new com.android.okhttp.Route;

        $r11 = r0.<com.android.okhttp.internal.http.RouteSelector: com.android.okhttp.Address address>;

        $r12 = r0.<com.android.okhttp.internal.http.RouteSelector: java.net.Proxy lastProxy>;

        $r9 = r0.<com.android.okhttp.internal.http.RouteSelector: java.net.InetSocketAddress lastInetSocketAddress>;

        specialinvoke $r10.<com.android.okhttp.Route: void <init>(com.android.okhttp.Address,java.net.Proxy,java.net.InetSocketAddress,boolean)>($r11, $r12, $r9, z0);

        r4 = $r10;

        $r13 = r0.<com.android.okhttp.internal.http.RouteSelector: com.android.okhttp.RouteDatabase routeDatabase>;

        virtualinvoke $r13.<com.android.okhttp.RouteDatabase: void failed(com.android.okhttp.Route)>(r4);

     label5:
        return;
    }

    private void resetNextProxy(java.net.URI, java.net.Proxy)
    {
        com.android.okhttp.internal.http.RouteSelector r0;
        java.net.URI r1;
        java.net.Proxy r2;
        java.util.List r3;
        java.net.ProxySelector $r4;
        java.util.Iterator $r5;

        r0 := @this: com.android.okhttp.internal.http.RouteSelector;

        r1 := @parameter0: java.net.URI;

        r2 := @parameter1: java.net.Proxy;

        r0.<com.android.okhttp.internal.http.RouteSelector: boolean hasNextProxy> = 1;

        if r2 == null goto label1;

        r0.<com.android.okhttp.internal.http.RouteSelector: java.net.Proxy userSpecifiedProxy> = r2;

        goto label2;

     label1:
        $r4 = r0.<com.android.okhttp.internal.http.RouteSelector: java.net.ProxySelector proxySelector>;

        r3 = virtualinvoke $r4.<java.net.ProxySelector: java.util.List select(java.net.URI)>(r1);

        if r3 == null goto label2;

        $r5 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

        r0.<com.android.okhttp.internal.http.RouteSelector: java.util.Iterator proxySelectorProxies> = $r5;

     label2:
        return;
    }

    private boolean hasNextProxy()
    {
        com.android.okhttp.internal.http.RouteSelector r0;
        boolean $z0;

        r0 := @this: com.android.okhttp.internal.http.RouteSelector;

        $z0 = r0.<com.android.okhttp.internal.http.RouteSelector: boolean hasNextProxy>;

        return $z0;
    }

    private java.net.Proxy nextProxy()
    {
        com.android.okhttp.internal.http.RouteSelector r0;
        java.net.Proxy r1, $r2, $r4, $r10;
        java.util.Iterator $r3, $r5, $r6;
        boolean $z0;
        java.lang.Object $r7;
        java.net.Proxy$Type $r8, $r9;

        r0 := @this: com.android.okhttp.internal.http.RouteSelector;

        $r2 = r0.<com.android.okhttp.internal.http.RouteSelector: java.net.Proxy userSpecifiedProxy>;

        if $r2 == null goto label1;

        r0.<com.android.okhttp.internal.http.RouteSelector: boolean hasNextProxy> = 0;

        $r10 = r0.<com.android.okhttp.internal.http.RouteSelector: java.net.Proxy userSpecifiedProxy>;

        return $r10;

     label1:
        $r3 = r0.<com.android.okhttp.internal.http.RouteSelector: java.util.Iterator proxySelectorProxies>;

        if $r3 == null goto label4;

     label2:
        $r5 = r0.<com.android.okhttp.internal.http.RouteSelector: java.util.Iterator proxySelectorProxies>;

        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = r0.<com.android.okhttp.internal.http.RouteSelector: java.util.Iterator proxySelectorProxies>;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r1 = (java.net.Proxy) $r7;

        $r8 = virtualinvoke r1.<java.net.Proxy: java.net.Proxy$Type type()>();

        $r9 = <java.net.Proxy$Type: java.net.Proxy$Type DIRECT>;

        if $r8 == $r9 goto label3;

        return r1;

     label3:
        goto label2;

     label4:
        r0.<com.android.okhttp.internal.http.RouteSelector: boolean hasNextProxy> = 0;

        $r4 = <java.net.Proxy: java.net.Proxy NO_PROXY>;

        return $r4;
    }

    private void resetNextInetSocketAddress(java.net.Proxy) throws java.net.UnknownHostException
    {
        com.android.okhttp.internal.http.RouteSelector r0;
        java.net.Proxy r1;
        java.lang.String r2, $r15;
        java.net.SocketAddress r3;
        java.net.InetSocketAddress r4;
        java.net.Proxy$Type $r5, $r6;
        boolean $z0;
        int $i0, $i1;
        com.android.okhttp.HostResolver $r7;
        java.net.InetAddress[] $r8;
        java.lang.IllegalArgumentException $r9;
        java.lang.StringBuilder $r10, $r11, $r12;
        java.lang.Class $r13;
        java.net.URI $r14, $r16;

        r0 := @this: com.android.okhttp.internal.http.RouteSelector;

        r1 := @parameter0: java.net.Proxy;

        r0.<com.android.okhttp.internal.http.RouteSelector: java.net.InetAddress[] socketAddresses> = null;

        $r5 = virtualinvoke r1.<java.net.Proxy: java.net.Proxy$Type type()>();

        $r6 = <java.net.Proxy$Type: java.net.Proxy$Type DIRECT>;

        if $r5 != $r6 goto label1;

        $r14 = r0.<com.android.okhttp.internal.http.RouteSelector: java.net.URI uri>;

        r2 = virtualinvoke $r14.<java.net.URI: java.lang.String getHost()>();

        $r16 = r0.<com.android.okhttp.internal.http.RouteSelector: java.net.URI uri>;

        $i1 = staticinvoke <com.android.okhttp.internal.Util: int getEffectivePort(java.net.URI)>($r16);

        r0.<com.android.okhttp.internal.http.RouteSelector: int socketPort> = $i1;

        goto label3;

     label1:
        r3 = virtualinvoke r1.<java.net.Proxy: java.net.SocketAddress address()>();

        $z0 = r3 instanceof java.net.InetSocketAddress;

        if $z0 != 0 goto label2;

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Proxy.address() is not an InetSocketAddress: ");

        $r13 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r9;

     label2:
        r4 = (java.net.InetSocketAddress) r3;

        r2 = virtualinvoke r4.<java.net.InetSocketAddress: java.lang.String getHostName()>();

        $i0 = virtualinvoke r4.<java.net.InetSocketAddress: int getPort()>();

        r0.<com.android.okhttp.internal.http.RouteSelector: int socketPort> = $i0;

     label3:
        $r7 = r0.<com.android.okhttp.internal.http.RouteSelector: com.android.okhttp.HostResolver hostResolver>;

        $r8 = interfaceinvoke $r7.<com.android.okhttp.HostResolver: java.net.InetAddress[] getAllByName(java.lang.String)>(r2);

        r0.<com.android.okhttp.internal.http.RouteSelector: java.net.InetAddress[] socketAddresses> = $r8;

        r0.<com.android.okhttp.internal.http.RouteSelector: int nextSocketAddressIndex> = 0;

        return;
    }

    private boolean hasNextInetSocketAddress()
    {
        com.android.okhttp.internal.http.RouteSelector r0;
        java.net.InetAddress[] $r1;
        boolean $z0;

        r0 := @this: com.android.okhttp.internal.http.RouteSelector;

        $r1 = r0.<com.android.okhttp.internal.http.RouteSelector: java.net.InetAddress[] socketAddresses>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private java.net.InetSocketAddress nextInetSocketAddress() throws java.net.UnknownHostException
    {
        com.android.okhttp.internal.http.RouteSelector r0;
        java.net.InetSocketAddress r1, $r2;
        int $i0, $i1, $i2, $i3, $i4;
        java.net.InetAddress[] $r3, $r5;
        java.net.InetAddress $r4;

        r0 := @this: com.android.okhttp.internal.http.RouteSelector;

        $r2 = new java.net.InetSocketAddress;

        $r3 = r0.<com.android.okhttp.internal.http.RouteSelector: java.net.InetAddress[] socketAddresses>;

        $i0 = r0.<com.android.okhttp.internal.http.RouteSelector: int nextSocketAddressIndex>;

        $i1 = $i0 + 1;

        r0.<com.android.okhttp.internal.http.RouteSelector: int nextSocketAddressIndex> = $i1;

        $r4 = $r3[$i0];

        $i2 = r0.<com.android.okhttp.internal.http.RouteSelector: int socketPort>;

        specialinvoke $r2.<java.net.InetSocketAddress: void <init>(java.net.InetAddress,int)>($r4, $i2);

        r1 = $r2;

        $i4 = r0.<com.android.okhttp.internal.http.RouteSelector: int nextSocketAddressIndex>;

        $r5 = r0.<com.android.okhttp.internal.http.RouteSelector: java.net.InetAddress[] socketAddresses>;

        $i3 = lengthof $r5;

        if $i4 != $i3 goto label1;

        r0.<com.android.okhttp.internal.http.RouteSelector: java.net.InetAddress[] socketAddresses> = null;

        r0.<com.android.okhttp.internal.http.RouteSelector: int nextSocketAddressIndex> = 0;

     label1:
        return r1;
    }

    private void resetNextTlsMode()
    {
        com.android.okhttp.internal.http.RouteSelector r0;
        com.android.okhttp.Address $r1;
        javax.net.ssl.SSLSocketFactory $r2;
        byte $b0;

        r0 := @this: com.android.okhttp.internal.http.RouteSelector;

        $r1 = r0.<com.android.okhttp.internal.http.RouteSelector: com.android.okhttp.Address address>;

        $r2 = virtualinvoke $r1.<com.android.okhttp.Address: javax.net.ssl.SSLSocketFactory getSslSocketFactory()>();

        if $r2 == null goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        r0.<com.android.okhttp.internal.http.RouteSelector: int nextTlsMode> = $b0;

        return;
    }

    private boolean hasNextTlsMode()
    {
        com.android.okhttp.internal.http.RouteSelector r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.okhttp.internal.http.RouteSelector;

        $i0 = r0.<com.android.okhttp.internal.http.RouteSelector: int nextTlsMode>;

        if $i0 == -1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private int nextTlsMode()
    {
        com.android.okhttp.internal.http.RouteSelector r0;
        int $i0, $i1;
        java.lang.AssertionError $r1;

        r0 := @this: com.android.okhttp.internal.http.RouteSelector;

        $i0 = r0.<com.android.okhttp.internal.http.RouteSelector: int nextTlsMode>;

        if $i0 != 1 goto label1;

        r0.<com.android.okhttp.internal.http.RouteSelector: int nextTlsMode> = 0;

        return 1;

     label1:
        $i1 = r0.<com.android.okhttp.internal.http.RouteSelector: int nextTlsMode>;

        if $i1 != 0 goto label2;

        r0.<com.android.okhttp.internal.http.RouteSelector: int nextTlsMode> = -1;

        return 0;

     label2:
        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;
    }

    private boolean hasNextPostponed()
    {
        com.android.okhttp.internal.http.RouteSelector r0;
        java.util.List $r1;
        boolean $z0, $z1;

        r0 := @this: com.android.okhttp.internal.http.RouteSelector;

        $r1 = r0.<com.android.okhttp.internal.http.RouteSelector: java.util.List postponedRoutes>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private com.android.okhttp.Route nextPostponed()
    {
        com.android.okhttp.internal.http.RouteSelector r0;
        java.util.List $r1;
        java.lang.Object $r2;
        com.android.okhttp.Route $r3;

        r0 := @this: com.android.okhttp.internal.http.RouteSelector;

        $r1 = r0.<com.android.okhttp.internal.http.RouteSelector: java.util.List postponedRoutes>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>(0);

        $r3 = (com.android.okhttp.Route) $r2;

        return $r3;
    }

    public static void <clinit>()
    {
        <com.android.okhttp.internal.http.RouteSelector: int TLS_MODE_NULL> = -1;

        <com.android.okhttp.internal.http.RouteSelector: int TLS_MODE_COMPATIBLE> = 0;

        <com.android.okhttp.internal.http.RouteSelector: int TLS_MODE_MODERN> = 1;

        return;
    }
}
