final class com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink extends java.lang.Object implements com.android.okio.Sink
{
    private boolean closed;
    private boolean finished;
    static final boolean $assertionsDisabled;
    final com.android.okhttp.internal.spdy.SpdyStream this$0;

    void <init>(com.android.okhttp.internal.spdy.SpdyStream)
    {
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink r0;
        com.android.okhttp.internal.spdy.SpdyStream r1;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink;

        r1 := @parameter0: com.android.okhttp.internal.spdy.SpdyStream;

        r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink: com.android.okhttp.internal.spdy.SpdyStream this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void write(com.android.okio.OkBuffer, long) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink r0;
        com.android.okio.OkBuffer r1;
        long l0, l1, $l3, $l5, $l6, $l7;
        com.android.okhttp.internal.spdy.SpdyStream r2, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r14;
        java.lang.Throwable r4, $r18;
        boolean $z0, $z1;
        byte $b2, $b4;
        com.android.okhttp.internal.spdy.SpdyConnection $r12;
        int $i8;
        java.lang.InterruptedException $r15;
        java.lang.AssertionError $r16;
        java.io.InterruptedIOException $r17;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink;

        r1 := @parameter0: com.android.okio.OkBuffer;

        l0 := @parameter1: long;

        $z0 = <com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $r14 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        $z1 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>($r14);

        if $z1 == 0 goto label01;

        $r16 = new java.lang.AssertionError;

        specialinvoke $r16.<java.lang.AssertionError: void <init>()>();

        throw $r16;

     label01:
        $b2 = l0 cmp 0L;

        if $b2 <= 0 goto label10;

        $r5 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        r2 = $r5;

        entermonitor $r5;

     label02:
        $r6 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        $l3 = $r6.<com.android.okhttp.internal.spdy.SpdyStream: long bytesLeftInWriteWindow>;

        $b4 = $l3 cmp 0L;

        if $b4 > 0 goto label03;

        $r13 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        virtualinvoke $r13.<java.lang.Object: void wait()>();

        goto label02;

     label03:
        goto label05;

     label04:
        $r15 := @caughtexception;

        $r17 = new java.io.InterruptedIOException;

        specialinvoke $r17.<java.io.InterruptedIOException: void <init>()>();

        throw $r17;

     label05:
        $r7 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        staticinvoke <com.android.okhttp.internal.spdy.SpdyStream: void access$1000(com.android.okhttp.internal.spdy.SpdyStream)>($r7);

        $r8 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        $l5 = $r8.<com.android.okhttp.internal.spdy.SpdyStream: long bytesLeftInWriteWindow>;

        l1 = staticinvoke <java.lang.Math: long min(long,long)>($l5, l0);

        $r9 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        $l7 = $r9.<com.android.okhttp.internal.spdy.SpdyStream: long bytesLeftInWriteWindow>;

        $l6 = $l7 - l1;

        $r9.<com.android.okhttp.internal.spdy.SpdyStream: long bytesLeftInWriteWindow> = $l6;

        exitmonitor r2;

     label06:
        goto label09;

     label07:
        $r18 := @caughtexception;

        r4 = $r18;

        exitmonitor r2;

     label08:
        throw r4;

     label09:
        l0 = l0 - l1;

        $r10 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        $r12 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyConnection access$500(com.android.okhttp.internal.spdy.SpdyStream)>($r10);

        $r11 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        $i8 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream: int access$600(com.android.okhttp.internal.spdy.SpdyStream)>($r11);

        virtualinvoke $r12.<com.android.okhttp.internal.spdy.SpdyConnection: void writeData(int,boolean,com.android.okio.OkBuffer,long)>($i8, 0, r1, l1);

        goto label01;

     label10:
        return;

        catch java.lang.InterruptedException from label02 to label03 with label04;
        catch java.lang.Throwable from label02 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    public void flush() throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink r0;
        com.android.okhttp.internal.spdy.SpdyStream r1, $r3, $r4, $r5, $r7;
        java.lang.Throwable r2, $r9;
        boolean $z0, $z1;
        com.android.okhttp.internal.spdy.SpdyConnection $r6;
        java.lang.AssertionError $r8;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink;

        $z0 = <com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r7 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        $z1 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>($r7);

        if $z1 == 0 goto label1;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label1:
        $r3 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        r1 = $r3;

        entermonitor $r3;

     label2:
        $r4 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        staticinvoke <com.android.okhttp.internal.spdy.SpdyStream: void access$1000(com.android.okhttp.internal.spdy.SpdyStream)>($r4);

        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        r2 = $r9;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        $r5 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        $r6 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyConnection access$500(com.android.okhttp.internal.spdy.SpdyStream)>($r5);

        virtualinvoke $r6.<com.android.okhttp.internal.spdy.SpdyConnection: void flush()>();

        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public com.android.okio.Sink deadline(com.android.okio.Deadline)
    {
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink r0;
        com.android.okio.Deadline r1;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink;

        r1 := @parameter0: com.android.okio.Deadline;

        return r0;
    }

    public void close() throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink r0, $r6;
        com.android.okhttp.internal.spdy.SpdyStream r1, $r4, $r5, $r7, $r8, $r10, $r12, $r13, $r14, r18;
        java.lang.Throwable r2, r3, $r16, $r17;
        boolean $z0, $z1, $z2, $z3;
        com.android.okhttp.internal.spdy.SpdyConnection $r9, $r11;
        int $i0;
        java.lang.AssertionError $r15;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink;

        $z0 = <com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $r14 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        $z3 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>($r14);

        if $z3 == 0 goto label01;

        $r15 = new java.lang.AssertionError;

        specialinvoke $r15.<java.lang.AssertionError: void <init>()>();

        throw $r15;

     label01:
        $r4 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        r1 = $r4;

        entermonitor $r4;

     label02:
        $z1 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink: boolean closed>;

        if $z1 == 0 goto label04;

        exitmonitor r1;

     label03:
        return;

     label04:
        exitmonitor r1;

     label05:
        goto label08;

     label06:
        $r17 := @caughtexception;

        r2 = $r17;

        exitmonitor r1;

     label07:
        throw r2;

     label08:
        $r5 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        $r6 = $r5.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink sink>;

        $z2 = $r6.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink: boolean finished>;

        if $z2 != 0 goto label09;

        $r12 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        $r11 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyConnection access$500(com.android.okhttp.internal.spdy.SpdyStream)>($r12);

        $r13 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        $i0 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream: int access$600(com.android.okhttp.internal.spdy.SpdyStream)>($r13);

        virtualinvoke $r11.<com.android.okhttp.internal.spdy.SpdyConnection: void writeData(int,boolean,com.android.okio.OkBuffer,long)>($i0, 1, null, 0L);

     label09:
        $r7 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        r18 = $r7;

        entermonitor $r7;

     label10:
        r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink: boolean closed> = 1;

        exitmonitor r18;

     label11:
        goto label14;

     label12:
        $r16 := @caughtexception;

        r3 = $r16;

        exitmonitor r18;

     label13:
        throw r3;

     label14:
        $r8 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        $r9 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyConnection access$500(com.android.okhttp.internal.spdy.SpdyStream)>($r8);

        virtualinvoke $r9.<com.android.okhttp.internal.spdy.SpdyConnection: void flush()>();

        $r10 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink: com.android.okhttp.internal.spdy.SpdyStream this$0>;

        staticinvoke <com.android.okhttp.internal.spdy.SpdyStream: void access$900(com.android.okhttp.internal.spdy.SpdyStream)>($r10);

        return;

        catch java.lang.Throwable from label02 to label03 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    static boolean access$202(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink, boolean)
    {
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink r0;
        boolean z0;

        r0 := @parameter0: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink;

        z0 := @parameter1: boolean;

        r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink: boolean finished> = z0;

        return z0;
    }

    static boolean access$200(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink)
    {
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink r0;
        boolean $z0;

        r0 := @parameter0: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink;

        $z0 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink: boolean finished>;

        return $z0;
    }

    static boolean access$400(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink)
    {
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink r0;
        boolean $z0;

        r0 := @parameter0: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink;

        $z0 = r0.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink: boolean closed>;

        return $z0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "com/android/okhttp/internal/spdy/SpdyStream";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink: boolean $assertionsDisabled> = $z1;

        return;
    }
}
