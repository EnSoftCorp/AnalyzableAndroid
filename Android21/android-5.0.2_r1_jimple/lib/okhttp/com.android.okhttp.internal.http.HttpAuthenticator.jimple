public final class com.android.okhttp.internal.http.HttpAuthenticator extends java.lang.Object
{
    public static final com.android.okhttp.OkAuthenticator SYSTEM_DEFAULT;

    private void <init>()
    {
        com.android.okhttp.internal.http.HttpAuthenticator r0;

        r0 := @this: com.android.okhttp.internal.http.HttpAuthenticator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.android.okhttp.Request processAuthHeader(com.android.okhttp.OkAuthenticator, com.android.okhttp.Response, java.net.Proxy) throws java.io.IOException
    {
        com.android.okhttp.OkAuthenticator r0;
        com.android.okhttp.Response r1;
        java.net.Proxy r2;
        java.lang.String r3, r4, $r12;
        java.util.List r5;
        com.android.okhttp.Request r6, $r14;
        com.android.okhttp.OkAuthenticator$Credential r7, $r10;
        int $i0, $i1, $i2;
        java.lang.IllegalArgumentException $r8;
        com.android.okhttp.Headers $r9;
        boolean $z0;
        java.net.URL $r11, $r16;
        com.android.okhttp.Request$Builder $r13, $r15;

        r0 := @parameter0: com.android.okhttp.OkAuthenticator;

        r1 := @parameter1: com.android.okhttp.Response;

        r2 := @parameter2: java.net.Proxy;

        $i0 = virtualinvoke r1.<com.android.okhttp.Response: int code()>();

        if $i0 != 401 goto label1;

        r3 = "WWW-Authenticate";

        r4 = "Authorization";

        goto label3;

     label1:
        $i1 = virtualinvoke r1.<com.android.okhttp.Response: int code()>();

        if $i1 != 407 goto label2;

        r3 = "Proxy-Authenticate";

        r4 = "Proxy-Authorization";

        goto label3;

     label2:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r8;

     label3:
        $r9 = virtualinvoke r1.<com.android.okhttp.Response: com.android.okhttp.Headers headers()>();

        r5 = staticinvoke <com.android.okhttp.internal.http.HttpAuthenticator: java.util.List parseChallenges(com.android.okhttp.Headers,java.lang.String)>($r9, r3);

        $z0 = interfaceinvoke r5.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label4;

        return null;

     label4:
        r6 = virtualinvoke r1.<com.android.okhttp.Response: com.android.okhttp.Request request()>();

        $i2 = virtualinvoke r1.<com.android.okhttp.Response: int code()>();

        if $i2 != 407 goto label5;

        $r16 = virtualinvoke r6.<com.android.okhttp.Request: java.net.URL url()>();

        $r10 = interfaceinvoke r0.<com.android.okhttp.OkAuthenticator: com.android.okhttp.OkAuthenticator$Credential authenticateProxy(java.net.Proxy,java.net.URL,java.util.List)>(r2, $r16, r5);

        goto label6;

     label5:
        $r11 = virtualinvoke r6.<com.android.okhttp.Request: java.net.URL url()>();

        $r10 = interfaceinvoke r0.<com.android.okhttp.OkAuthenticator: com.android.okhttp.OkAuthenticator$Credential authenticate(java.net.Proxy,java.net.URL,java.util.List)>(r2, $r11, r5);

     label6:
        r7 = $r10;

        if r7 != null goto label7;

        return null;

     label7:
        $r13 = virtualinvoke r6.<com.android.okhttp.Request: com.android.okhttp.Request$Builder newBuilder()>();

        $r12 = virtualinvoke r7.<com.android.okhttp.OkAuthenticator$Credential: java.lang.String getHeaderValue()>();

        $r15 = virtualinvoke $r13.<com.android.okhttp.Request$Builder: com.android.okhttp.Request$Builder header(java.lang.String,java.lang.String)>(r4, $r12);

        $r14 = virtualinvoke $r15.<com.android.okhttp.Request$Builder: com.android.okhttp.Request build()>();

        return $r14;
    }

    private static java.util.List parseChallenges(com.android.okhttp.Headers, java.lang.String)
    {
        com.android.okhttp.Headers r0;
        java.lang.String r1, r3, r4, r5, $r7, $r8, $r9, $r10;
        java.util.ArrayList r2, $r6;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11, i12, i13, i14;
        boolean $z0, $z1;
        com.android.okhttp.OkAuthenticator$Challenge $r11;

        r0 := @parameter0: com.android.okhttp.Headers;

        r1 := @parameter1: java.lang.String;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r2 = $r6;

        i0 = 0;

     label1:
        $i4 = virtualinvoke r0.<com.android.okhttp.Headers: int size()>();

        if i0 >= $i4 goto label6;

        $r7 = virtualinvoke r0.<com.android.okhttp.Headers: java.lang.String name(int)>(i0);

        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r7);

        if $z0 != 0 goto label2;

        goto label5;

     label2:
        r3 = virtualinvoke r0.<com.android.okhttp.Headers: java.lang.String value(int)>(i0);

        i1 = 0;

     label3:
        $i5 = virtualinvoke r3.<java.lang.String: int length()>();

        if i1 >= $i5 goto label5;

        i2 = i1;

        i8 = staticinvoke <com.android.okhttp.internal.http.HeaderParser: int skipUntil(java.lang.String,int,java.lang.String)>(r3, i1, " ");

        $r8 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(i2, i8);

        r4 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();

        i9 = staticinvoke <com.android.okhttp.internal.http.HeaderParser: int skipWhitespace(java.lang.String,int)>(r3, i8);

        $r9 = "realm=\"";

        $i6 = virtualinvoke $r9.<java.lang.String: int length()>();

        $z1 = virtualinvoke r3.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, i9, "realm=\"", 0, $i6);

        if $z1 != 0 goto label4;

        goto label5;

     label4:
        $r10 = "realm=\"";

        $i7 = virtualinvoke $r10.<java.lang.String: int length()>();

        i10 = i9 + $i7;

        i3 = i10;

        i11 = staticinvoke <com.android.okhttp.internal.http.HeaderParser: int skipUntil(java.lang.String,int,java.lang.String)>(r3, i10, "\"");

        r5 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(i3, i11);

        i12 = i11 + 1;

        i13 = staticinvoke <com.android.okhttp.internal.http.HeaderParser: int skipUntil(java.lang.String,int,java.lang.String)>(r3, i12, ",");

        i14 = i13 + 1;

        i1 = staticinvoke <com.android.okhttp.internal.http.HeaderParser: int skipWhitespace(java.lang.String,int)>(r3, i14);

        $r11 = new com.android.okhttp.OkAuthenticator$Challenge;

        specialinvoke $r11.<com.android.okhttp.OkAuthenticator$Challenge: void <init>(java.lang.String,java.lang.String)>(r4, r5);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r11);

        goto label3;

     label5:
        i0 = i0 + 1;

        goto label1;

     label6:
        return r2;
    }

    static void <clinit>()
    {
        com.android.okhttp.internal.http.HttpAuthenticator$1 $r0;

        $r0 = new com.android.okhttp.internal.http.HttpAuthenticator$1;

        specialinvoke $r0.<com.android.okhttp.internal.http.HttpAuthenticator$1: void <init>()>();

        <com.android.okhttp.internal.http.HttpAuthenticator: com.android.okhttp.OkAuthenticator SYSTEM_DEFAULT> = $r0;

        return;
    }
}
