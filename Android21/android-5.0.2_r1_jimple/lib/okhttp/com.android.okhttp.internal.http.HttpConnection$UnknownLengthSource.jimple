class com.android.okhttp.internal.http.HttpConnection$UnknownLengthSource extends com.android.okhttp.internal.http.HttpConnection$AbstractSource implements com.android.okio.Source
{
    private boolean inputExhausted;
    final com.android.okhttp.internal.http.HttpConnection this$0;

    void <init>(com.android.okhttp.internal.http.HttpConnection, java.net.CacheRequest) throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpConnection$UnknownLengthSource r0;
        com.android.okhttp.internal.http.HttpConnection r1;
        java.net.CacheRequest r2;

        r0 := @this: com.android.okhttp.internal.http.HttpConnection$UnknownLengthSource;

        r1 := @parameter0: com.android.okhttp.internal.http.HttpConnection;

        r2 := @parameter1: java.net.CacheRequest;

        r0.<com.android.okhttp.internal.http.HttpConnection$UnknownLengthSource: com.android.okhttp.internal.http.HttpConnection this$0> = r1;

        specialinvoke r0.<com.android.okhttp.internal.http.HttpConnection$AbstractSource: void <init>(com.android.okhttp.internal.http.HttpConnection,java.net.CacheRequest)>(r1, r2);

        return;
    }

    public long read(com.android.okio.OkBuffer, long) throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpConnection$UnknownLengthSource r0;
        com.android.okio.OkBuffer r1;
        long l0, l1;
        byte $b2, $b3;
        boolean $z0, $z1;
        com.android.okhttp.internal.http.HttpConnection $r2;
        com.android.okio.BufferedSource $r3;
        java.lang.IllegalStateException $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: com.android.okhttp.internal.http.HttpConnection$UnknownLengthSource;

        r1 := @parameter0: com.android.okio.OkBuffer;

        l0 := @parameter1: long;

        $b2 = l0 cmp 0L;

        if $b2 >= 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("byteCount < 0: ");

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label1:
        $z0 = r0.<com.android.okhttp.internal.http.HttpConnection$UnknownLengthSource: boolean closed>;

        if $z0 == 0 goto label2;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("closed");

        throw $r4;

     label2:
        $z1 = r0.<com.android.okhttp.internal.http.HttpConnection$UnknownLengthSource: boolean inputExhausted>;

        if $z1 == 0 goto label3;

        return -1L;

     label3:
        $r2 = r0.<com.android.okhttp.internal.http.HttpConnection$UnknownLengthSource: com.android.okhttp.internal.http.HttpConnection this$0>;

        $r3 = staticinvoke <com.android.okhttp.internal.http.HttpConnection: com.android.okio.BufferedSource access$900(com.android.okhttp.internal.http.HttpConnection)>($r2);

        l1 = interfaceinvoke $r3.<com.android.okio.BufferedSource: long read(com.android.okio.OkBuffer,long)>(r1, l0);

        $b3 = l1 cmp -1L;

        if $b3 != 0 goto label4;

        r0.<com.android.okhttp.internal.http.HttpConnection$UnknownLengthSource: boolean inputExhausted> = 1;

        virtualinvoke r0.<com.android.okhttp.internal.http.HttpConnection$UnknownLengthSource: void endOfInput(boolean)>(0);

        return -1L;

     label4:
        virtualinvoke r0.<com.android.okhttp.internal.http.HttpConnection$UnknownLengthSource: void cacheWrite(com.android.okio.OkBuffer,long)>(r1, l1);

        return l1;
    }

    public com.android.okio.Source deadline(com.android.okio.Deadline)
    {
        com.android.okhttp.internal.http.HttpConnection$UnknownLengthSource r0;
        com.android.okio.Deadline r1;
        com.android.okhttp.internal.http.HttpConnection $r2;
        com.android.okio.BufferedSource $r3;

        r0 := @this: com.android.okhttp.internal.http.HttpConnection$UnknownLengthSource;

        r1 := @parameter0: com.android.okio.Deadline;

        $r2 = r0.<com.android.okhttp.internal.http.HttpConnection$UnknownLengthSource: com.android.okhttp.internal.http.HttpConnection this$0>;

        $r3 = staticinvoke <com.android.okhttp.internal.http.HttpConnection: com.android.okio.BufferedSource access$900(com.android.okhttp.internal.http.HttpConnection)>($r2);

        interfaceinvoke $r3.<com.android.okio.BufferedSource: com.android.okio.Source deadline(com.android.okio.Deadline)>(r1);

        return r0;
    }

    public void close() throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpConnection$UnknownLengthSource r0;
        boolean $z0, $z1;

        r0 := @this: com.android.okhttp.internal.http.HttpConnection$UnknownLengthSource;

        $z0 = r0.<com.android.okhttp.internal.http.HttpConnection$UnknownLengthSource: boolean closed>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $z1 = r0.<com.android.okhttp.internal.http.HttpConnection$UnknownLengthSource: boolean inputExhausted>;

        if $z1 != 0 goto label2;

        virtualinvoke r0.<com.android.okhttp.internal.http.HttpConnection$UnknownLengthSource: void unexpectedEndOfInput()>();

     label2:
        r0.<com.android.okhttp.internal.http.HttpConnection$UnknownLengthSource: boolean closed> = 1;

        return;
    }
}
