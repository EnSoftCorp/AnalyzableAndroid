final class com.android.okhttp.HttpResponseCache$Entry extends java.lang.Object
{
    private final java.lang.String url;
    private final com.android.okhttp.Headers varyHeaders;
    private final java.lang.String requestMethod;
    private final java.lang.String statusLine;
    private final com.android.okhttp.Headers responseHeaders;
    private final com.android.okhttp.Handshake handshake;

    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        com.android.okhttp.HttpResponseCache$Entry r0;
        java.io.InputStream r1;
        com.android.okio.BufferedSource r2;
        com.android.okhttp.Headers$Builder r3, $r11, $r14, r28;
        int i0, i1, i2, i3, $i4;
        java.lang.String r4, $r9, $r10, $r12, $r20, $r23, $r25, r29;
        java.util.List r5, r6;
        java.lang.Throwable r7, $r27;
        com.android.okio.Source $r8;
        com.android.okhttp.Headers $r13, $r15;
        boolean $z0;
        com.android.okhttp.Handshake $r16;
        java.lang.StringBuilder $r17, $r19, $r21, $r22;
        java.io.IOException $r18;

        r0 := @this: com.android.okhttp.HttpResponseCache$Entry;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

     label01:
        $r8 = staticinvoke <com.android.okio.Okio: com.android.okio.Source source(java.io.InputStream)>(r1);

        r2 = staticinvoke <com.android.okio.Okio: com.android.okio.BufferedSource buffer(com.android.okio.Source)>($r8);

        $r9 = interfaceinvoke r2.<com.android.okio.BufferedSource: java.lang.String readUtf8LineStrict()>();

        r0.<com.android.okhttp.HttpResponseCache$Entry: java.lang.String url> = $r9;

        $r10 = interfaceinvoke r2.<com.android.okio.BufferedSource: java.lang.String readUtf8LineStrict()>();

        r0.<com.android.okhttp.HttpResponseCache$Entry: java.lang.String requestMethod> = $r10;

        $r11 = new com.android.okhttp.Headers$Builder;

        specialinvoke $r11.<com.android.okhttp.Headers$Builder: void <init>()>();

        r3 = $r11;

        i0 = staticinvoke <com.android.okhttp.HttpResponseCache: int access$400(com.android.okio.BufferedSource)>(r2);

        i1 = 0;

     label02:
        if i1 >= i0 goto label03;

        $r23 = interfaceinvoke r2.<com.android.okio.BufferedSource: java.lang.String readUtf8LineStrict()>();

        virtualinvoke r3.<com.android.okhttp.Headers$Builder: com.android.okhttp.Headers$Builder addLine(java.lang.String)>($r23);

        i1 = i1 + 1;

        goto label02;

     label03:
        $r13 = virtualinvoke r3.<com.android.okhttp.Headers$Builder: com.android.okhttp.Headers build()>();

        r0.<com.android.okhttp.HttpResponseCache$Entry: com.android.okhttp.Headers varyHeaders> = $r13;

        $r12 = interfaceinvoke r2.<com.android.okio.BufferedSource: java.lang.String readUtf8LineStrict()>();

        r0.<com.android.okhttp.HttpResponseCache$Entry: java.lang.String statusLine> = $r12;

        $r14 = new com.android.okhttp.Headers$Builder;

        specialinvoke $r14.<com.android.okhttp.Headers$Builder: void <init>()>();

        r28 = $r14;

        i2 = staticinvoke <com.android.okhttp.HttpResponseCache: int access$400(com.android.okio.BufferedSource)>(r2);

        i3 = 0;

     label04:
        if i3 >= i2 goto label05;

        $r25 = interfaceinvoke r2.<com.android.okio.BufferedSource: java.lang.String readUtf8LineStrict()>();

        virtualinvoke r28.<com.android.okhttp.Headers$Builder: com.android.okhttp.Headers$Builder addLine(java.lang.String)>($r25);

        i3 = i3 + 1;

        goto label04;

     label05:
        $r15 = virtualinvoke r28.<com.android.okhttp.Headers$Builder: com.android.okhttp.Headers build()>();

        r0.<com.android.okhttp.HttpResponseCache$Entry: com.android.okhttp.Headers responseHeaders> = $r15;

        $z0 = specialinvoke r0.<com.android.okhttp.HttpResponseCache$Entry: boolean isHttps()>();

        if $z0 == 0 goto label07;

        r29 = interfaceinvoke r2.<com.android.okio.BufferedSource: java.lang.String readUtf8LineStrict()>();

        $i4 = virtualinvoke r29.<java.lang.String: int length()>();

        if $i4 <= 0 goto label06;

        $r18 = new java.io.IOException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected \"\" but was \"");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r29);

        $r19 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.io.IOException: void <init>(java.lang.String)>($r20);

        throw $r18;

     label06:
        r4 = interfaceinvoke r2.<com.android.okio.BufferedSource: java.lang.String readUtf8LineStrict()>();

        r5 = specialinvoke r0.<com.android.okhttp.HttpResponseCache$Entry: java.util.List readCertificateList(com.android.okio.BufferedSource)>(r2);

        r6 = specialinvoke r0.<com.android.okhttp.HttpResponseCache$Entry: java.util.List readCertificateList(com.android.okio.BufferedSource)>(r2);

        $r16 = staticinvoke <com.android.okhttp.Handshake: com.android.okhttp.Handshake get(java.lang.String,java.util.List,java.util.List)>(r4, r5, r6);

        r0.<com.android.okhttp.HttpResponseCache$Entry: com.android.okhttp.Handshake handshake> = $r16;

        goto label08;

     label07:
        r0.<com.android.okhttp.HttpResponseCache$Entry: com.android.okhttp.Handshake handshake> = null;

     label08:
        virtualinvoke r1.<java.io.InputStream: void close()>();

        goto label11;

     label09:
        $r27 := @caughtexception;

        r7 = $r27;

     label10:
        virtualinvoke r1.<java.io.InputStream: void close()>();

        throw r7;

     label11:
        return;

        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public void <init>(com.android.okhttp.Response)
    {
        com.android.okhttp.HttpResponseCache$Entry r0;
        com.android.okhttp.Response r1;
        com.android.okhttp.Request $r2, $r4, $r8;
        java.lang.String $r3, $r9, $r10;
        com.android.okhttp.Headers $r5, $r7, $r11;
        java.util.Set $r6;
        com.android.okhttp.Handshake $r12;

        r0 := @this: com.android.okhttp.HttpResponseCache$Entry;

        r1 := @parameter0: com.android.okhttp.Response;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<com.android.okhttp.Response: com.android.okhttp.Request request()>();

        $r3 = virtualinvoke $r2.<com.android.okhttp.Request: java.lang.String urlString()>();

        r0.<com.android.okhttp.HttpResponseCache$Entry: java.lang.String url> = $r3;

        $r4 = virtualinvoke r1.<com.android.okhttp.Response: com.android.okhttp.Request request()>();

        $r5 = virtualinvoke $r4.<com.android.okhttp.Request: com.android.okhttp.Headers headers()>();

        $r6 = virtualinvoke r1.<com.android.okhttp.Response: java.util.Set getVaryFields()>();

        $r7 = virtualinvoke $r5.<com.android.okhttp.Headers: com.android.okhttp.Headers getAll(java.util.Set)>($r6);

        r0.<com.android.okhttp.HttpResponseCache$Entry: com.android.okhttp.Headers varyHeaders> = $r7;

        $r8 = virtualinvoke r1.<com.android.okhttp.Response: com.android.okhttp.Request request()>();

        $r9 = virtualinvoke $r8.<com.android.okhttp.Request: java.lang.String method()>();

        r0.<com.android.okhttp.HttpResponseCache$Entry: java.lang.String requestMethod> = $r9;

        $r10 = virtualinvoke r1.<com.android.okhttp.Response: java.lang.String statusLine()>();

        r0.<com.android.okhttp.HttpResponseCache$Entry: java.lang.String statusLine> = $r10;

        $r11 = virtualinvoke r1.<com.android.okhttp.Response: com.android.okhttp.Headers headers()>();

        r0.<com.android.okhttp.HttpResponseCache$Entry: com.android.okhttp.Headers responseHeaders> = $r11;

        $r12 = virtualinvoke r1.<com.android.okhttp.Response: com.android.okhttp.Handshake handshake()>();

        r0.<com.android.okhttp.HttpResponseCache$Entry: com.android.okhttp.Handshake handshake> = $r12;

        return;
    }

    public void writeTo(com.android.okhttp.internal.DiskLruCache$Editor) throws java.io.IOException
    {
        com.android.okhttp.HttpResponseCache$Entry r0;
        com.android.okhttp.internal.DiskLruCache$Editor r1;
        java.io.OutputStream r2;
        java.io.BufferedWriter r3, $r4;
        int i0, $i1, $i2, $i3, $i4, i5;
        java.io.OutputStreamWriter $r5;
        java.nio.charset.Charset $r6;
        java.lang.StringBuilder $r7, $r9, $r10, $r12, $r14, $r15, $r16, $r19, $r22, $r25, $r26, $r27, $r30, $r31, $r34, $r35, $r37, $r38, $r47, $r51, $r52, $r53, $r55, $r56, $r59, $r60, $r63, $r64;
        java.lang.String $r8, $r11, $r13, $r17, $r20, $r21, $r24, $r29, $r32, $r33, $r40, $r44, $r45, $r49, $r54, $r58, $r62, $r65;
        com.android.okhttp.Headers $r18, $r23, $r28, $r36, $r46, $r50, $r57, $r61;
        boolean $z0;
        com.android.okhttp.Handshake $r39, $r41, $r43;
        java.util.List $r42, $r48;

        r0 := @this: com.android.okhttp.HttpResponseCache$Entry;

        r1 := @parameter0: com.android.okhttp.internal.DiskLruCache$Editor;

        r2 = virtualinvoke r1.<com.android.okhttp.internal.DiskLruCache$Editor: java.io.OutputStream newOutputStream(int)>(0);

        $r4 = new java.io.BufferedWriter;

        $r5 = new java.io.OutputStreamWriter;

        $r6 = <com.android.okhttp.internal.Util: java.nio.charset.Charset UTF_8>;

        specialinvoke $r5.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>(r2, $r6);

        specialinvoke $r4.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r5);

        r3 = $r4;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = r0.<com.android.okhttp.HttpResponseCache$Entry: java.lang.String url>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.Writer: void write(java.lang.String)>($r11);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = r0.<com.android.okhttp.HttpResponseCache$Entry: java.lang.String requestMethod>;

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.Writer: void write(java.lang.String)>($r17);

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = r0.<com.android.okhttp.HttpResponseCache$Entry: com.android.okhttp.Headers varyHeaders>;

        $i1 = virtualinvoke $r18.<com.android.okhttp.Headers: int size()>();

        $r20 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i1);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.Writer: void write(java.lang.String)>($r21);

        i0 = 0;

     label1:
        $r23 = r0.<com.android.okhttp.HttpResponseCache$Entry: com.android.okhttp.Headers varyHeaders>;

        $i2 = virtualinvoke $r23.<com.android.okhttp.Headers: int size()>();

        if i0 >= $i2 goto label2;

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r61 = r0.<com.android.okhttp.HttpResponseCache$Entry: com.android.okhttp.Headers varyHeaders>;

        $r62 = virtualinvoke $r61.<com.android.okhttp.Headers: java.lang.String name(int)>(i0);

        $r63 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r57 = r0.<com.android.okhttp.HttpResponseCache$Entry: com.android.okhttp.Headers varyHeaders>;

        $r58 = virtualinvoke $r57.<com.android.okhttp.Headers: java.lang.String value(int)>(i0);

        $r59 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r65 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.Writer: void write(java.lang.String)>($r65);

        i0 = i0 + 1;

        goto label1;

     label2:
        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r24 = r0.<com.android.okhttp.HttpResponseCache$Entry: java.lang.String statusLine>;

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.Writer: void write(java.lang.String)>($r29);

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r28 = r0.<com.android.okhttp.HttpResponseCache$Entry: com.android.okhttp.Headers responseHeaders>;

        $i3 = virtualinvoke $r28.<com.android.okhttp.Headers: int size()>();

        $r33 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i3);

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r31 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.Writer: void write(java.lang.String)>($r32);

        i5 = 0;

     label3:
        $r36 = r0.<com.android.okhttp.HttpResponseCache$Entry: com.android.okhttp.Headers responseHeaders>;

        $i4 = virtualinvoke $r36.<com.android.okhttp.Headers: int size()>();

        if i5 >= $i4 goto label4;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r46 = r0.<com.android.okhttp.HttpResponseCache$Entry: com.android.okhttp.Headers responseHeaders>;

        $r45 = virtualinvoke $r46.<com.android.okhttp.Headers: java.lang.String name(int)>(i5);

        $r52 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r51 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r50 = r0.<com.android.okhttp.HttpResponseCache$Entry: com.android.okhttp.Headers responseHeaders>;

        $r49 = virtualinvoke $r50.<com.android.okhttp.Headers: java.lang.String value(int)>(i5);

        $r56 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $r55 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r54 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.Writer: void write(java.lang.String)>($r54);

        i5 = i5 + 1;

        goto label3;

     label4:
        $z0 = specialinvoke r0.<com.android.okhttp.HttpResponseCache$Entry: boolean isHttps()>();

        if $z0 == 0 goto label5;

        virtualinvoke r3.<java.io.Writer: void write(int)>(10);

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r39 = r0.<com.android.okhttp.HttpResponseCache$Entry: com.android.okhttp.Handshake handshake>;

        $r40 = virtualinvoke $r39.<com.android.okhttp.Handshake: java.lang.String cipherSuite()>();

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r44 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r3.<java.io.Writer: void write(java.lang.String)>($r44);

        $r43 = r0.<com.android.okhttp.HttpResponseCache$Entry: com.android.okhttp.Handshake handshake>;

        $r42 = virtualinvoke $r43.<com.android.okhttp.Handshake: java.util.List peerCertificates()>();

        specialinvoke r0.<com.android.okhttp.HttpResponseCache$Entry: void writeCertArray(java.io.Writer,java.util.List)>(r3, $r42);

        $r41 = r0.<com.android.okhttp.HttpResponseCache$Entry: com.android.okhttp.Handshake handshake>;

        $r48 = virtualinvoke $r41.<com.android.okhttp.Handshake: java.util.List localCertificates()>();

        specialinvoke r0.<com.android.okhttp.HttpResponseCache$Entry: void writeCertArray(java.io.Writer,java.util.List)>(r3, $r48);

     label5:
        virtualinvoke r3.<java.io.Writer: void close()>();

        return;
    }

    private boolean isHttps()
    {
        com.android.okhttp.HttpResponseCache$Entry r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: com.android.okhttp.HttpResponseCache$Entry;

        $r1 = r0.<com.android.okhttp.HttpResponseCache$Entry: java.lang.String url>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("https://");

        return $z0;
    }

    private java.util.List readCertificateList(com.android.okio.BufferedSource) throws java.io.IOException
    {
        com.android.okhttp.HttpResponseCache$Entry r0;
        com.android.okio.BufferedSource r1;
        int i0, i1;
        java.security.cert.CertificateFactory r2;
        java.util.ArrayList r3, $r6;
        java.lang.String r4, $r13;
        byte[] r5;
        com.android.okio.ByteString $r7;
        java.io.ByteArrayInputStream $r8;
        java.security.cert.Certificate $r9;
        java.util.List $r10;
        java.io.IOException $r11;
        java.security.cert.CertificateException $r12, r14;

        r0 := @this: com.android.okhttp.HttpResponseCache$Entry;

        r1 := @parameter0: com.android.okio.BufferedSource;

        i0 = staticinvoke <com.android.okhttp.HttpResponseCache: int access$400(com.android.okio.BufferedSource)>(r1);

        if i0 != -1 goto label1;

        $r10 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r10;

     label1:
        r2 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>("X.509");

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>(i0);

        r3 = $r6;

        i1 = 0;

     label2:
        if i1 >= i0 goto label3;

        r4 = interfaceinvoke r1.<com.android.okio.BufferedSource: java.lang.String readUtf8LineStrict()>();

        $r7 = staticinvoke <com.android.okio.ByteString: com.android.okio.ByteString decodeBase64(java.lang.String)>(r4);

        r5 = virtualinvoke $r7.<com.android.okio.ByteString: byte[] toByteArray()>();

        $r8 = new java.io.ByteArrayInputStream;

        specialinvoke $r8.<java.io.ByteArrayInputStream: void <init>(byte[])>(r5);

        $r9 = virtualinvoke r2.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r8);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r9);

        i1 = i1 + 1;

        goto label2;

     label3:
        return r3;

     label4:
        $r12 := @caughtexception;

        r14 = $r12;

        $r11 = new java.io.IOException;

        $r13 = virtualinvoke r14.<java.security.cert.CertificateException: java.lang.String getMessage()>();

        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>($r13);

        throw $r11;

        catch java.security.cert.CertificateException from label1 to label3 with label4;
    }

    private void writeCertArray(java.io.Writer, java.util.List) throws java.io.IOException
    {
        com.android.okhttp.HttpResponseCache$Entry r0;
        java.io.Writer r1;
        java.util.List r2;
        int i0, i1, $i2;
        byte[] r3;
        java.lang.String r4, $r6, $r9, $r17, $r18;
        java.lang.StringBuilder $r5, $r7, $r8, $r13, $r14, $r15;
        java.lang.Object $r10;
        java.security.cert.Certificate $r11;
        com.android.okio.ByteString $r12;
        java.security.cert.CertificateEncodingException $r16, r20;
        java.io.IOException $r19;

        r0 := @this: com.android.okhttp.HttpResponseCache$Entry;

        r1 := @parameter0: java.io.Writer;

        r2 := @parameter1: java.util.List;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $i2 = interfaceinvoke r2.<java.util.List: int size()>();

        $r6 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r9);

        i0 = 0;

        i1 = interfaceinvoke r2.<java.util.List: int size()>();

     label2:
        if i0 >= i1 goto label3;

        $r10 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i0);

        $r11 = (java.security.cert.Certificate) $r10;

        r3 = virtualinvoke $r11.<java.security.cert.Certificate: byte[] getEncoded()>();

        $r12 = staticinvoke <com.android.okio.ByteString: com.android.okio.ByteString of(byte[])>(r3);

        r4 = virtualinvoke $r12.<com.android.okio.ByteString: java.lang.String base64()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r17);

        i0 = i0 + 1;

        goto label2;

     label3:
        goto label5;

     label4:
        $r16 := @caughtexception;

        r20 = $r16;

        $r19 = new java.io.IOException;

        $r18 = virtualinvoke r20.<java.security.cert.CertificateEncodingException: java.lang.String getMessage()>();

        specialinvoke $r19.<java.io.IOException: void <init>(java.lang.String)>($r18);

        throw $r19;

     label5:
        return;

        catch java.security.cert.CertificateEncodingException from label1 to label3 with label4;
    }

    public boolean matches(com.android.okhttp.Request, com.android.okhttp.Response)
    {
        com.android.okhttp.HttpResponseCache$Entry r0;
        com.android.okhttp.Request r1;
        com.android.okhttp.Response r2;
        java.lang.String $r3, $r4, $r5, $r6;
        boolean $z0, $z1, $z2, $z3;
        com.android.okhttp.Headers $r7;

        r0 := @this: com.android.okhttp.HttpResponseCache$Entry;

        r1 := @parameter0: com.android.okhttp.Request;

        r2 := @parameter1: com.android.okhttp.Response;

        $r3 = r0.<com.android.okhttp.HttpResponseCache$Entry: java.lang.String url>;

        $r4 = virtualinvoke r1.<com.android.okhttp.Request: java.lang.String urlString()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label1;

        $r5 = r0.<com.android.okhttp.HttpResponseCache$Entry: java.lang.String requestMethod>;

        $r6 = virtualinvoke r1.<com.android.okhttp.Request: java.lang.String method()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label1;

        $r7 = r0.<com.android.okhttp.HttpResponseCache$Entry: com.android.okhttp.Headers varyHeaders>;

        $z2 = virtualinvoke r2.<com.android.okhttp.Response: boolean varyMatches(com.android.okhttp.Headers,com.android.okhttp.Request)>($r7, r1);

        if $z2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }

    public com.android.okhttp.Response response(com.android.okhttp.Request, com.android.okhttp.internal.DiskLruCache$Snapshot)
    {
        com.android.okhttp.HttpResponseCache$Entry r0;
        com.android.okhttp.Request r1;
        com.android.okhttp.internal.DiskLruCache$Snapshot r2;
        java.lang.String r3, r4, $r9;
        com.android.okhttp.Headers $r5, $r6, $r11;
        com.android.okhttp.Response$Builder $r7, $r8, $r10, $r12, $r15, $r17;
        com.android.okhttp.HttpResponseCache$CacheResponseBody $r13;
        com.android.okhttp.Handshake $r14;
        com.android.okhttp.Response $r16;

        r0 := @this: com.android.okhttp.HttpResponseCache$Entry;

        r1 := @parameter0: com.android.okhttp.Request;

        r2 := @parameter1: com.android.okhttp.internal.DiskLruCache$Snapshot;

        $r5 = r0.<com.android.okhttp.HttpResponseCache$Entry: com.android.okhttp.Headers responseHeaders>;

        r3 = virtualinvoke $r5.<com.android.okhttp.Headers: java.lang.String get(java.lang.String)>("Content-Type");

        $r6 = r0.<com.android.okhttp.HttpResponseCache$Entry: com.android.okhttp.Headers responseHeaders>;

        r4 = virtualinvoke $r6.<com.android.okhttp.Headers: java.lang.String get(java.lang.String)>("Content-Length");

        $r7 = new com.android.okhttp.Response$Builder;

        specialinvoke $r7.<com.android.okhttp.Response$Builder: void <init>()>();

        $r8 = virtualinvoke $r7.<com.android.okhttp.Response$Builder: com.android.okhttp.Response$Builder request(com.android.okhttp.Request)>(r1);

        $r9 = r0.<com.android.okhttp.HttpResponseCache$Entry: java.lang.String statusLine>;

        $r10 = virtualinvoke $r8.<com.android.okhttp.Response$Builder: com.android.okhttp.Response$Builder statusLine(java.lang.String)>($r9);

        $r11 = r0.<com.android.okhttp.HttpResponseCache$Entry: com.android.okhttp.Headers responseHeaders>;

        $r12 = virtualinvoke $r10.<com.android.okhttp.Response$Builder: com.android.okhttp.Response$Builder headers(com.android.okhttp.Headers)>($r11);

        $r13 = new com.android.okhttp.HttpResponseCache$CacheResponseBody;

        specialinvoke $r13.<com.android.okhttp.HttpResponseCache$CacheResponseBody: void <init>(com.android.okhttp.internal.DiskLruCache$Snapshot,java.lang.String,java.lang.String)>(r2, r3, r4);

        $r15 = virtualinvoke $r12.<com.android.okhttp.Response$Builder: com.android.okhttp.Response$Builder body(com.android.okhttp.Response$Body)>($r13);

        $r14 = r0.<com.android.okhttp.HttpResponseCache$Entry: com.android.okhttp.Handshake handshake>;

        $r17 = virtualinvoke $r15.<com.android.okhttp.Response$Builder: com.android.okhttp.Response$Builder handshake(com.android.okhttp.Handshake)>($r14);

        $r16 = virtualinvoke $r17.<com.android.okhttp.Response$Builder: com.android.okhttp.Response build()>();

        return $r16;
    }
}
