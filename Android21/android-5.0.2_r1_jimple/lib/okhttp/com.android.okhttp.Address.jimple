public final class com.android.okhttp.Address extends java.lang.Object
{
    final java.net.Proxy proxy;
    final java.lang.String uriHost;
    final int uriPort;
    final javax.net.SocketFactory socketFactory;
    final javax.net.ssl.SSLSocketFactory sslSocketFactory;
    final javax.net.ssl.HostnameVerifier hostnameVerifier;
    final com.android.okhttp.OkAuthenticator authenticator;
    final java.util.List protocols;

    public void <init>(java.lang.String, int, javax.net.SocketFactory, javax.net.ssl.SSLSocketFactory, javax.net.ssl.HostnameVerifier, com.android.okhttp.OkAuthenticator, java.net.Proxy, java.util.List) throws java.net.UnknownHostException
    {
        com.android.okhttp.Address r0;
        java.lang.String r1, $r16;
        int i0;
        javax.net.SocketFactory r2;
        javax.net.ssl.SSLSocketFactory r3;
        javax.net.ssl.HostnameVerifier r4;
        com.android.okhttp.OkAuthenticator r5;
        java.net.Proxy r6;
        java.util.List r7, $r8;
        java.lang.IllegalArgumentException $r9, $r10, $r11;
        java.lang.StringBuilder $r12, $r13, $r14;
        java.lang.NullPointerException $r15;

        r0 := @this: com.android.okhttp.Address;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: javax.net.SocketFactory;

        r3 := @parameter3: javax.net.ssl.SSLSocketFactory;

        r4 := @parameter4: javax.net.ssl.HostnameVerifier;

        r5 := @parameter5: com.android.okhttp.OkAuthenticator;

        r6 := @parameter6: java.net.Proxy;

        r7 := @parameter7: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r15 = new java.lang.NullPointerException;

        specialinvoke $r15.<java.lang.NullPointerException: void <init>(java.lang.String)>("uriHost == null");

        throw $r15;

     label1:
        if i0 > 0 goto label2;

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("uriPort <= 0: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r11;

     label2:
        if r5 != null goto label3;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("authenticator == null");

        throw $r10;

     label3:
        if r7 != null goto label4;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("protocols == null");

        throw $r9;

     label4:
        r0.<com.android.okhttp.Address: java.net.Proxy proxy> = r6;

        r0.<com.android.okhttp.Address: java.lang.String uriHost> = r1;

        r0.<com.android.okhttp.Address: int uriPort> = i0;

        r0.<com.android.okhttp.Address: javax.net.SocketFactory socketFactory> = r2;

        r0.<com.android.okhttp.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory> = r3;

        r0.<com.android.okhttp.Address: javax.net.ssl.HostnameVerifier hostnameVerifier> = r4;

        r0.<com.android.okhttp.Address: com.android.okhttp.OkAuthenticator authenticator> = r5;

        $r8 = staticinvoke <com.android.okhttp.internal.Util: java.util.List immutableList(java.util.List)>(r7);

        r0.<com.android.okhttp.Address: java.util.List protocols> = $r8;

        return;
    }

    public java.lang.String getUriHost()
    {
        com.android.okhttp.Address r0;
        java.lang.String $r1;

        r0 := @this: com.android.okhttp.Address;

        $r1 = r0.<com.android.okhttp.Address: java.lang.String uriHost>;

        return $r1;
    }

    public int getUriPort()
    {
        com.android.okhttp.Address r0;
        int $i0;

        r0 := @this: com.android.okhttp.Address;

        $i0 = r0.<com.android.okhttp.Address: int uriPort>;

        return $i0;
    }

    public javax.net.SocketFactory getSocketFactory()
    {
        com.android.okhttp.Address r0;
        javax.net.SocketFactory $r1;

        r0 := @this: com.android.okhttp.Address;

        $r1 = r0.<com.android.okhttp.Address: javax.net.SocketFactory socketFactory>;

        return $r1;
    }

    public javax.net.ssl.SSLSocketFactory getSslSocketFactory()
    {
        com.android.okhttp.Address r0;
        javax.net.ssl.SSLSocketFactory $r1;

        r0 := @this: com.android.okhttp.Address;

        $r1 = r0.<com.android.okhttp.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory>;

        return $r1;
    }

    public javax.net.ssl.HostnameVerifier getHostnameVerifier()
    {
        com.android.okhttp.Address r0;
        javax.net.ssl.HostnameVerifier $r1;

        r0 := @this: com.android.okhttp.Address;

        $r1 = r0.<com.android.okhttp.Address: javax.net.ssl.HostnameVerifier hostnameVerifier>;

        return $r1;
    }

    public com.android.okhttp.OkAuthenticator getAuthenticator()
    {
        com.android.okhttp.Address r0;
        com.android.okhttp.OkAuthenticator $r1;

        r0 := @this: com.android.okhttp.Address;

        $r1 = r0.<com.android.okhttp.Address: com.android.okhttp.OkAuthenticator authenticator>;

        return $r1;
    }

    public java.util.List getProtocols()
    {
        com.android.okhttp.Address r0;
        java.util.List $r1;

        r0 := @this: com.android.okhttp.Address;

        $r1 = r0.<com.android.okhttp.Address: java.util.List protocols>;

        return $r1;
    }

    public java.net.Proxy getProxy()
    {
        com.android.okhttp.Address r0;
        java.net.Proxy $r1;

        r0 := @this: com.android.okhttp.Address;

        $r1 = r0.<com.android.okhttp.Address: java.net.Proxy proxy>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        com.android.okhttp.Address r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.net.Proxy $r3, $r4;
        java.lang.String $r5, $r6;
        int $i0, $i1;
        javax.net.ssl.SSLSocketFactory $r7, $r8;
        javax.net.ssl.HostnameVerifier $r9, $r10;
        com.android.okhttp.OkAuthenticator $r11, $r12;
        java.util.List $r13, $r14;

        r0 := @this: com.android.okhttp.Address;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof com.android.okhttp.Address;

        if $z0 == 0 goto label3;

        r2 = (com.android.okhttp.Address) r1;

        $r4 = r0.<com.android.okhttp.Address: java.net.Proxy proxy>;

        $r3 = r2.<com.android.okhttp.Address: java.net.Proxy proxy>;

        $z1 = staticinvoke <com.android.okhttp.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z1 == 0 goto label1;

        $r6 = r0.<com.android.okhttp.Address: java.lang.String uriHost>;

        $r5 = r2.<com.android.okhttp.Address: java.lang.String uriHost>;

        $z2 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label1;

        $i1 = r0.<com.android.okhttp.Address: int uriPort>;

        $i0 = r2.<com.android.okhttp.Address: int uriPort>;

        if $i1 != $i0 goto label1;

        $r8 = r0.<com.android.okhttp.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory>;

        $r7 = r2.<com.android.okhttp.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory>;

        $z3 = staticinvoke <com.android.okhttp.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r8, $r7);

        if $z3 == 0 goto label1;

        $r10 = r0.<com.android.okhttp.Address: javax.net.ssl.HostnameVerifier hostnameVerifier>;

        $r9 = r2.<com.android.okhttp.Address: javax.net.ssl.HostnameVerifier hostnameVerifier>;

        $z4 = staticinvoke <com.android.okhttp.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r10, $r9);

        if $z4 == 0 goto label1;

        $r11 = r0.<com.android.okhttp.Address: com.android.okhttp.OkAuthenticator authenticator>;

        $r12 = r2.<com.android.okhttp.Address: com.android.okhttp.OkAuthenticator authenticator>;

        $z5 = staticinvoke <com.android.okhttp.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r11, $r12);

        if $z5 == 0 goto label1;

        $r14 = r0.<com.android.okhttp.Address: java.util.List protocols>;

        $r13 = r2.<com.android.okhttp.Address: java.util.List protocols>;

        $z6 = staticinvoke <com.android.okhttp.internal.Util: boolean equal(java.lang.Object,java.lang.Object)>($r14, $r13);

        if $z6 == 0 goto label1;

        $z7 = 1;

        goto label2;

     label1:
        $z7 = 0;

     label2:
        return $z7;

     label3:
        return 0;
    }

    public int hashCode()
    {
        com.android.okhttp.Address r0;
        byte b0;
        java.lang.String $r1;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, i17, i18, i19, i20, i21;
        javax.net.ssl.SSLSocketFactory $r2, $r10;
        javax.net.ssl.HostnameVerifier $r3, $r9;
        com.android.okhttp.OkAuthenticator $r4, $r8;
        java.net.Proxy $r5, $r7;
        java.util.List $r6;

        r0 := @this: com.android.okhttp.Address;

        b0 = 17;

        $i1 = 31 * b0;

        $r1 = r0.<com.android.okhttp.Address: java.lang.String uriHost>;

        $i2 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        i15 = $i1 + $i2;

        $i4 = 31 * i15;

        $i3 = r0.<com.android.okhttp.Address: int uriPort>;

        i16 = $i4 + $i3;

        $i5 = 31 * i16;

        $r2 = r0.<com.android.okhttp.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory>;

        if $r2 == null goto label1;

        $r10 = r0.<com.android.okhttp.Address: javax.net.ssl.SSLSocketFactory sslSocketFactory>;

        $i14 = virtualinvoke $r10.<java.lang.Object: int hashCode()>();

        goto label2;

     label1:
        $i14 = 0;

     label2:
        i17 = $i5 + $i14;

        $i6 = 31 * i17;

        $r3 = r0.<com.android.okhttp.Address: javax.net.ssl.HostnameVerifier hostnameVerifier>;

        if $r3 == null goto label3;

        $r9 = r0.<com.android.okhttp.Address: javax.net.ssl.HostnameVerifier hostnameVerifier>;

        $i13 = virtualinvoke $r9.<java.lang.Object: int hashCode()>();

        goto label4;

     label3:
        $i13 = 0;

     label4:
        i18 = $i6 + $i13;

        $i7 = 31 * i18;

        $r4 = r0.<com.android.okhttp.Address: com.android.okhttp.OkAuthenticator authenticator>;

        if $r4 == null goto label5;

        $r8 = r0.<com.android.okhttp.Address: com.android.okhttp.OkAuthenticator authenticator>;

        $i12 = virtualinvoke $r8.<java.lang.Object: int hashCode()>();

        goto label6;

     label5:
        $i12 = 0;

     label6:
        i19 = $i7 + $i12;

        $i8 = 31 * i19;

        $r5 = r0.<com.android.okhttp.Address: java.net.Proxy proxy>;

        if $r5 == null goto label7;

        $r7 = r0.<com.android.okhttp.Address: java.net.Proxy proxy>;

        $i11 = virtualinvoke $r7.<java.net.Proxy: int hashCode()>();

        goto label8;

     label7:
        $i11 = 0;

     label8:
        i20 = $i8 + $i11;

        $i10 = 31 * i20;

        $r6 = r0.<com.android.okhttp.Address: java.util.List protocols>;

        $i9 = interfaceinvoke $r6.<java.util.List: int hashCode()>();

        i21 = $i10 + $i9;

        return i21;
    }
}
