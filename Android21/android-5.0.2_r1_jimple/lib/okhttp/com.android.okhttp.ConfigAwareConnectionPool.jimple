public class com.android.okhttp.ConfigAwareConnectionPool extends java.lang.Object
{
    private static final long CONNECTION_POOL_DEFAULT_KEEP_ALIVE_DURATION_MS;
    private static final int CONNECTION_POOL_MAX_IDLE_CONNECTIONS;
    private static final long CONNECTION_POOL_KEEP_ALIVE_DURATION_MS;
    private static final com.android.okhttp.ConfigAwareConnectionPool instance;
    private final libcore.net.event.NetworkEventDispatcher networkEventDispatcher;
    private boolean networkEventListenerRegistered;
    private com.android.okhttp.ConnectionPool connectionPool;

    protected void <init>(libcore.net.event.NetworkEventDispatcher)
    {
        com.android.okhttp.ConfigAwareConnectionPool r0;
        libcore.net.event.NetworkEventDispatcher r1;

        r0 := @this: com.android.okhttp.ConfigAwareConnectionPool;

        r1 := @parameter0: libcore.net.event.NetworkEventDispatcher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.okhttp.ConfigAwareConnectionPool: libcore.net.event.NetworkEventDispatcher networkEventDispatcher> = r1;

        return;
    }

    private void <init>()
    {
        com.android.okhttp.ConfigAwareConnectionPool r0;
        libcore.net.event.NetworkEventDispatcher $r1;

        r0 := @this: com.android.okhttp.ConfigAwareConnectionPool;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <libcore.net.event.NetworkEventDispatcher: libcore.net.event.NetworkEventDispatcher getInstance()>();

        r0.<com.android.okhttp.ConfigAwareConnectionPool: libcore.net.event.NetworkEventDispatcher networkEventDispatcher> = $r1;

        return;
    }

    public static com.android.okhttp.ConfigAwareConnectionPool getInstance()
    {
        com.android.okhttp.ConfigAwareConnectionPool $r0;

        $r0 = <com.android.okhttp.ConfigAwareConnectionPool: com.android.okhttp.ConfigAwareConnectionPool instance>;

        return $r0;
    }

    public synchronized com.android.okhttp.ConnectionPool get()
    {
        com.android.okhttp.ConfigAwareConnectionPool r0;
        com.android.okhttp.ConnectionPool $r1, $r2, $r3;
        boolean $z0;
        long $l0;
        int $i1;
        com.android.okhttp.ConfigAwareConnectionPool$1 $r4;
        libcore.net.event.NetworkEventDispatcher $r5;

        r0 := @this: com.android.okhttp.ConfigAwareConnectionPool;

        $r1 = r0.<com.android.okhttp.ConfigAwareConnectionPool: com.android.okhttp.ConnectionPool connectionPool>;

        if $r1 != null goto label2;

        $z0 = r0.<com.android.okhttp.ConfigAwareConnectionPool: boolean networkEventListenerRegistered>;

        if $z0 != 0 goto label1;

        $r5 = r0.<com.android.okhttp.ConfigAwareConnectionPool: libcore.net.event.NetworkEventDispatcher networkEventDispatcher>;

        $r4 = new com.android.okhttp.ConfigAwareConnectionPool$1;

        specialinvoke $r4.<com.android.okhttp.ConfigAwareConnectionPool$1: void <init>(com.android.okhttp.ConfigAwareConnectionPool)>(r0);

        virtualinvoke $r5.<libcore.net.event.NetworkEventDispatcher: void addListener(libcore.net.event.NetworkEventListener)>($r4);

        r0.<com.android.okhttp.ConfigAwareConnectionPool: boolean networkEventListenerRegistered> = 1;

     label1:
        $r3 = new com.android.okhttp.ConnectionPool;

        $i1 = <com.android.okhttp.ConfigAwareConnectionPool: int CONNECTION_POOL_MAX_IDLE_CONNECTIONS>;

        $l0 = <com.android.okhttp.ConfigAwareConnectionPool: long CONNECTION_POOL_KEEP_ALIVE_DURATION_MS>;

        specialinvoke $r3.<com.android.okhttp.ConnectionPool: void <init>(int,long)>($i1, $l0);

        r0.<com.android.okhttp.ConfigAwareConnectionPool: com.android.okhttp.ConnectionPool connectionPool> = $r3;

     label2:
        $r2 = r0.<com.android.okhttp.ConfigAwareConnectionPool: com.android.okhttp.ConnectionPool connectionPool>;

        return $r2;
    }

    static com.android.okhttp.ConnectionPool access$002(com.android.okhttp.ConfigAwareConnectionPool, com.android.okhttp.ConnectionPool)
    {
        com.android.okhttp.ConfigAwareConnectionPool r0;
        com.android.okhttp.ConnectionPool r1;

        r0 := @parameter0: com.android.okhttp.ConfigAwareConnectionPool;

        r1 := @parameter1: com.android.okhttp.ConnectionPool;

        r0.<com.android.okhttp.ConfigAwareConnectionPool: com.android.okhttp.ConnectionPool connectionPool> = r1;

        return r1;
    }

    static void <clinit>()
    {
        java.lang.String r0, r1, r2;
        com.android.okhttp.ConfigAwareConnectionPool $r3;
        int $i0;
        boolean $z0;
        long $l1;

        <com.android.okhttp.ConfigAwareConnectionPool: long CONNECTION_POOL_DEFAULT_KEEP_ALIVE_DURATION_MS> = 300000L;

        r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("http.keepAlive");

        r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("http.keepAliveDuration");

        r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("http.maxConnections");

        if r1 == null goto label1;

        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r1);

        goto label2;

     label1:
        $l1 = 300000L;

     label2:
        <com.android.okhttp.ConfigAwareConnectionPool: long CONNECTION_POOL_KEEP_ALIVE_DURATION_MS> = $l1;

        if r0 == null goto label3;

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(r0);

        if $z0 != 0 goto label3;

        <com.android.okhttp.ConfigAwareConnectionPool: int CONNECTION_POOL_MAX_IDLE_CONNECTIONS> = 0;

        goto label5;

     label3:
        if r2 == null goto label4;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

        <com.android.okhttp.ConfigAwareConnectionPool: int CONNECTION_POOL_MAX_IDLE_CONNECTIONS> = $i0;

        goto label5;

     label4:
        <com.android.okhttp.ConfigAwareConnectionPool: int CONNECTION_POOL_MAX_IDLE_CONNECTIONS> = 5;

     label5:
        $r3 = new com.android.okhttp.ConfigAwareConnectionPool;

        specialinvoke $r3.<com.android.okhttp.ConfigAwareConnectionPool: void <init>()>();

        <com.android.okhttp.ConfigAwareConnectionPool: com.android.okhttp.ConfigAwareConnectionPool instance> = $r3;

        return;
    }
}
