class com.android.okio.OkBuffer$1 extends java.io.OutputStream
{
    final com.android.okio.OkBuffer this$0;

    void <init>(com.android.okio.OkBuffer)
    {
        com.android.okio.OkBuffer$1 r0;
        com.android.okio.OkBuffer r1;

        r0 := @this: com.android.okio.OkBuffer$1;

        r1 := @parameter0: com.android.okio.OkBuffer;

        r0.<com.android.okio.OkBuffer$1: com.android.okio.OkBuffer this$0> = r1;

        specialinvoke r0.<java.io.OutputStream: void <init>()>();

        return;
    }

    public void write(int)
    {
        com.android.okio.OkBuffer$1 r0;
        int i0;
        byte $b1;
        com.android.okio.OkBuffer $r1;

        r0 := @this: com.android.okio.OkBuffer$1;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.okio.OkBuffer$1: com.android.okio.OkBuffer this$0>;

        $b1 = (byte) i0;

        virtualinvoke $r1.<com.android.okio.OkBuffer: com.android.okio.OkBuffer writeByte(int)>($b1);

        return;
    }

    public void write(byte[], int, int)
    {
        com.android.okio.OkBuffer$1 r0;
        byte[] r1;
        int i0, i1;
        com.android.okio.OkBuffer $r2;

        r0 := @this: com.android.okio.OkBuffer$1;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.okio.OkBuffer$1: com.android.okio.OkBuffer this$0>;

        virtualinvoke $r2.<com.android.okio.OkBuffer: com.android.okio.OkBuffer write(byte[],int,int)>(r1, i0, i1);

        return;
    }

    public void flush()
    {
        com.android.okio.OkBuffer$1 r0;

        r0 := @this: com.android.okio.OkBuffer$1;

        return;
    }

    public void close()
    {
        com.android.okio.OkBuffer$1 r0;

        r0 := @this: com.android.okio.OkBuffer$1;

        return;
    }

    public java.lang.String toString()
    {
        com.android.okio.OkBuffer$1 r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        java.lang.String $r4;

        r0 := @this: com.android.okio.OkBuffer$1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".outputStream()");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
}
