public class com.android.okhttp.internal.http.HttpEngine extends java.lang.Object
{
    final com.android.okhttp.OkHttpClient client;
    private com.android.okhttp.Connection connection;
    private com.android.okhttp.internal.http.RouteSelector routeSelector;
    private com.android.okhttp.Route route;
    private final com.android.okhttp.Response priorResponse;
    private com.android.okhttp.internal.http.Transport transport;
    long sentRequestMillis;
    private boolean transparentGzip;
    public final boolean bufferRequestBody;
    private final com.android.okhttp.Request userRequest;
    private com.android.okhttp.Request networkRequest;
    private com.android.okhttp.Response cacheResponse;
    private com.android.okhttp.Response networkResponse;
    private com.android.okhttp.Response userResponse;
    private com.android.okio.Sink requestBodyOut;
    private com.android.okio.BufferedSink bufferedRequestBody;
    private com.android.okhttp.ResponseSource responseSource;
    private com.android.okio.Source responseTransferSource;
    private com.android.okio.Source responseBody;
    private java.io.InputStream responseBodyBytes;
    private java.net.CacheRequest storeRequest;

    public void <init>(com.android.okhttp.OkHttpClient, com.android.okhttp.Request, boolean, com.android.okhttp.Connection, com.android.okhttp.internal.http.RouteSelector, com.android.okhttp.internal.http.RetryableSink, com.android.okhttp.Response)
    {
        com.android.okhttp.internal.http.HttpEngine r0;
        com.android.okhttp.OkHttpClient r1;
        com.android.okhttp.Request r2;
        boolean z0;
        com.android.okhttp.Connection r3;
        com.android.okhttp.internal.http.RouteSelector r4;
        com.android.okhttp.internal.http.RetryableSink r5;
        com.android.okhttp.Response r6;
        com.android.okhttp.Route $r7;

        r0 := @this: com.android.okhttp.internal.http.HttpEngine;

        r1 := @parameter0: com.android.okhttp.OkHttpClient;

        r2 := @parameter1: com.android.okhttp.Request;

        z0 := @parameter2: boolean;

        r3 := @parameter3: com.android.okhttp.Connection;

        r4 := @parameter4: com.android.okhttp.internal.http.RouteSelector;

        r5 := @parameter5: com.android.okhttp.internal.http.RetryableSink;

        r6 := @parameter6: com.android.okhttp.Response;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.okhttp.internal.http.HttpEngine: long sentRequestMillis> = -1L;

        r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.OkHttpClient client> = r1;

        r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Request userRequest> = r2;

        r0.<com.android.okhttp.internal.http.HttpEngine: boolean bufferRequestBody> = z0;

        r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection connection> = r3;

        r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.internal.http.RouteSelector routeSelector> = r4;

        r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okio.Sink requestBodyOut> = r5;

        r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response priorResponse> = r6;

        if r3 == null goto label1;

        virtualinvoke r3.<com.android.okhttp.Connection: void setOwner(java.lang.Object)>(r0);

        $r7 = virtualinvoke r3.<com.android.okhttp.Connection: com.android.okhttp.Route getRoute()>();

        r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Route route> = $r7;

        goto label2;

     label1:
        r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Route route> = null;

     label2:
        return;
    }

    public final void sendRequest() throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpEngine r0;
        com.android.okhttp.Request r1, $r7, $r10, $r12, $r16, $r46;
        com.android.okhttp.OkResponseCache r2;
        com.android.okhttp.Response r3, $r13, $r14, $r18, $r21, $r22, $r23, $r24, $r26, $r28, $r48, $r50;
        long l0;
        com.android.okhttp.internal.http.CacheStrategy r4;
        com.android.okhttp.ResponseSource $r5, $r11, $r44, $r45, $r49;
        com.android.okhttp.internal.http.Transport $r6, $r40, $r43;
        com.android.okhttp.OkHttpClient $r8, $r33;
        com.android.okhttp.internal.http.CacheStrategy$Factory $r9;
        com.android.okhttp.Connection $r15, $r31, $r35, $r36, $r37, $r41;
        com.android.okhttp.Response$Builder $r17, $r19, $r20, $r25;
        com.android.okhttp.Response$Body $r27, $r29, $r51;
        com.android.okhttp.ConnectionPool $r30;
        com.android.okio.Source $r32;
        java.lang.Object $r34, $r39;
        boolean $z0, $z1;
        com.android.okio.Sink $r38, $r42;
        java.lang.AssertionError $r47;
        java.lang.IllegalStateException $r52;

        r0 := @this: com.android.okhttp.internal.http.HttpEngine;

        $r5 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.ResponseSource responseSource>;

        if $r5 == null goto label01;

        return;

     label01:
        $r6 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.internal.http.Transport transport>;

        if $r6 == null goto label02;

        $r52 = new java.lang.IllegalStateException;

        specialinvoke $r52.<java.lang.IllegalStateException: void <init>()>();

        throw $r52;

     label02:
        $r7 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Request userRequest>;

        r1 = specialinvoke r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Request networkRequest(com.android.okhttp.Request)>($r7);

        $r8 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.OkHttpClient client>;

        r2 = virtualinvoke $r8.<com.android.okhttp.OkHttpClient: com.android.okhttp.OkResponseCache getOkResponseCache()>();

        if r2 == null goto label03;

        $r48 = interfaceinvoke r2.<com.android.okhttp.OkResponseCache: com.android.okhttp.Response get(com.android.okhttp.Request)>(r1);

        goto label04;

     label03:
        $r48 = null;

     label04:
        r3 = $r48;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r9 = new com.android.okhttp.internal.http.CacheStrategy$Factory;

        specialinvoke $r9.<com.android.okhttp.internal.http.CacheStrategy$Factory: void <init>(long,com.android.okhttp.Request,com.android.okhttp.Response)>(l0, r1, r3);

        r4 = virtualinvoke $r9.<com.android.okhttp.internal.http.CacheStrategy$Factory: com.android.okhttp.internal.http.CacheStrategy get()>();

        $r11 = r4.<com.android.okhttp.internal.http.CacheStrategy: com.android.okhttp.ResponseSource source>;

        r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.ResponseSource responseSource> = $r11;

        $r10 = r4.<com.android.okhttp.internal.http.CacheStrategy: com.android.okhttp.Request networkRequest>;

        r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Request networkRequest> = $r10;

        $r13 = r4.<com.android.okhttp.internal.http.CacheStrategy: com.android.okhttp.Response cacheResponse>;

        r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response cacheResponse> = $r13;

        if r2 == null goto label05;

        $r49 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.ResponseSource responseSource>;

        interfaceinvoke r2.<com.android.okhttp.OkResponseCache: void trackResponse(com.android.okhttp.ResponseSource)>($r49);

     label05:
        if r3 == null goto label07;

        $r44 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.ResponseSource responseSource>;

        $r45 = <com.android.okhttp.ResponseSource: com.android.okhttp.ResponseSource NONE>;

        if $r44 == $r45 goto label06;

        $r50 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response cacheResponse>;

        if $r50 != null goto label07;

     label06:
        $r51 = virtualinvoke r3.<com.android.okhttp.Response: com.android.okhttp.Response$Body body()>();

        staticinvoke <com.android.okhttp.internal.Util: void closeQuietly(java.io.Closeable)>($r51);

     label07:
        $r12 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Request networkRequest>;

        if $r12 == null goto label10;

        $r36 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection connection>;

        if $r36 != null goto label08;

        $r46 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Request networkRequest>;

        specialinvoke r0.<com.android.okhttp.internal.http.HttpEngine: void connect(com.android.okhttp.Request)>($r46);

     label08:
        $r37 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection connection>;

        $r34 = virtualinvoke $r37.<com.android.okhttp.Connection: java.lang.Object getOwner()>();

        if $r34 == r0 goto label09;

        $r41 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection connection>;

        $z1 = virtualinvoke $r41.<com.android.okhttp.Connection: boolean isSpdy()>();

        if $z1 != 0 goto label09;

        $r47 = new java.lang.AssertionError;

        specialinvoke $r47.<java.lang.AssertionError: void <init>()>();

        throw $r47;

     label09:
        $r35 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection connection>;

        $r39 = virtualinvoke $r35.<com.android.okhttp.Connection: java.lang.Object newTransport(com.android.okhttp.internal.http.HttpEngine)>(r0);

        $r40 = (com.android.okhttp.internal.http.Transport) $r39;

        r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.internal.http.Transport transport> = $r40;

        $z0 = virtualinvoke r0.<com.android.okhttp.internal.http.HttpEngine: boolean hasRequestBody()>();

        if $z0 == 0 goto label12;

        $r38 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okio.Sink requestBodyOut>;

        if $r38 != null goto label12;

        $r43 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.internal.http.Transport transport>;

        $r42 = interfaceinvoke $r43.<com.android.okhttp.internal.http.Transport: com.android.okio.Sink createRequestBody(com.android.okhttp.Request)>(r1);

        r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okio.Sink requestBodyOut> = $r42;

        goto label12;

     label10:
        $r15 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection connection>;

        if $r15 == null goto label11;

        $r33 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.OkHttpClient client>;

        $r30 = virtualinvoke $r33.<com.android.okhttp.OkHttpClient: com.android.okhttp.ConnectionPool getConnectionPool()>();

        $r31 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection connection>;

        virtualinvoke $r30.<com.android.okhttp.ConnectionPool: void recycle(com.android.okhttp.Connection)>($r31);

        r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection connection> = null;

     label11:
        $r14 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response cacheResponse>;

        $r17 = virtualinvoke $r14.<com.android.okhttp.Response: com.android.okhttp.Response$Builder newBuilder()>();

        $r16 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Request userRequest>;

        $r19 = virtualinvoke $r17.<com.android.okhttp.Response$Builder: com.android.okhttp.Response$Builder request(com.android.okhttp.Request)>($r16);

        $r18 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response priorResponse>;

        $r21 = staticinvoke <com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response stripBody(com.android.okhttp.Response)>($r18);

        $r20 = virtualinvoke $r19.<com.android.okhttp.Response$Builder: com.android.okhttp.Response$Builder priorResponse(com.android.okhttp.Response)>($r21);

        $r23 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response cacheResponse>;

        $r22 = staticinvoke <com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response stripBody(com.android.okhttp.Response)>($r23);

        $r25 = virtualinvoke $r20.<com.android.okhttp.Response$Builder: com.android.okhttp.Response$Builder cacheResponse(com.android.okhttp.Response)>($r22);

        $r24 = virtualinvoke $r25.<com.android.okhttp.Response$Builder: com.android.okhttp.Response build()>();

        r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response userResponse> = $r24;

        $r28 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response userResponse>;

        $r29 = virtualinvoke $r28.<com.android.okhttp.Response: com.android.okhttp.Response$Body body()>();

        if $r29 == null goto label12;

        $r26 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response userResponse>;

        $r27 = virtualinvoke $r26.<com.android.okhttp.Response: com.android.okhttp.Response$Body body()>();

        $r32 = virtualinvoke $r27.<com.android.okhttp.Response$Body: com.android.okio.Source source()>();

        specialinvoke r0.<com.android.okhttp.internal.http.HttpEngine: void initContentStream(com.android.okio.Source)>($r32);

     label12:
        return;
    }

    private static com.android.okhttp.Response stripBody(com.android.okhttp.Response)
    {
        com.android.okhttp.Response r0, $r4;
        com.android.okhttp.Response$Body $r1;
        com.android.okhttp.Response$Builder $r2, $r3;

        r0 := @parameter0: com.android.okhttp.Response;

        if r0 == null goto label1;

        $r1 = virtualinvoke r0.<com.android.okhttp.Response: com.android.okhttp.Response$Body body()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<com.android.okhttp.Response: com.android.okhttp.Response$Builder newBuilder()>();

        $r3 = virtualinvoke $r2.<com.android.okhttp.Response$Builder: com.android.okhttp.Response$Builder body(com.android.okhttp.Response$Body)>(null);

        $r4 = virtualinvoke $r3.<com.android.okhttp.Response$Builder: com.android.okhttp.Response build()>();

        goto label2;

     label1:
        $r4 = r0;

     label2:
        return $r4;
    }

    private void connect(com.android.okhttp.Request) throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpEngine r0;
        com.android.okhttp.Request r1;
        java.lang.String r2, $r9, $r34;
        javax.net.ssl.SSLSocketFactory r3;
        javax.net.ssl.HostnameVerifier r4;
        com.android.okhttp.Address r5, $r33;
        com.android.okhttp.Connection $r6, $r10, $r11, $r12, $r13, $r15, $r16, $r19, $r21, $r24, $r27;
        com.android.okhttp.internal.http.RouteSelector $r7, $r8, $r43;
        boolean $z0, $z1, $z2, $z3;
        com.android.okhttp.Route $r14, $r28;
        com.android.okhttp.OkHttpClient $r17, $r18, $r20, $r23, $r29, $r35, $r39, $r41, $r45, $r47, $r49, $r51, $r53, $r55, $r56;
        int $i0, $i1, $i2, $i3, $i4;
        com.android.okhttp.TunnelRequest $r22;
        com.android.okhttp.RouteDatabase $r25, $r50;
        com.android.okhttp.ConnectionPool $r26, $r46;
        java.net.UnknownHostException $r30;
        java.net.URL $r31, $r32, $r37;
        javax.net.SocketFactory $r36;
        java.net.Proxy $r38;
        com.android.okhttp.OkAuthenticator $r40;
        java.net.URI $r42;
        java.util.List $r44;
        java.net.ProxySelector $r48;
        com.android.okhttp.HostResolver $r52;
        java.lang.IllegalStateException $r54;

        r0 := @this: com.android.okhttp.internal.http.HttpEngine;

        r1 := @parameter0: com.android.okhttp.Request;

        $r6 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection connection>;

        if $r6 == null goto label1;

        $r54 = new java.lang.IllegalStateException;

        specialinvoke $r54.<java.lang.IllegalStateException: void <init>()>();

        throw $r54;

     label1:
        $r7 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.internal.http.RouteSelector routeSelector>;

        if $r7 != null goto label5;

        $r32 = virtualinvoke r1.<com.android.okhttp.Request: java.net.URL url()>();

        r2 = virtualinvoke $r32.<java.net.URL: java.lang.String getHost()>();

        if r2 == null goto label2;

        $i3 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i3 != 0 goto label3;

     label2:
        $r30 = new java.net.UnknownHostException;

        $r31 = virtualinvoke r1.<com.android.okhttp.Request: java.net.URL url()>();

        $r34 = virtualinvoke $r31.<java.net.URL: java.lang.String toString()>();

        specialinvoke $r30.<java.net.UnknownHostException: void <init>(java.lang.String)>($r34);

        throw $r30;

     label3:
        r3 = null;

        r4 = null;

        $z3 = virtualinvoke r1.<com.android.okhttp.Request: boolean isHttps()>();

        if $z3 == 0 goto label4;

        $r55 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.OkHttpClient client>;

        r3 = virtualinvoke $r55.<com.android.okhttp.OkHttpClient: javax.net.ssl.SSLSocketFactory getSslSocketFactory()>();

        $r56 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.OkHttpClient client>;

        r4 = virtualinvoke $r56.<com.android.okhttp.OkHttpClient: javax.net.ssl.HostnameVerifier getHostnameVerifier()>();

     label4:
        $r33 = new com.android.okhttp.Address;

        $r37 = virtualinvoke r1.<com.android.okhttp.Request: java.net.URL url()>();

        $i4 = staticinvoke <com.android.okhttp.internal.Util: int getEffectivePort(java.net.URL)>($r37);

        $r35 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.OkHttpClient client>;

        $r36 = virtualinvoke $r35.<com.android.okhttp.OkHttpClient: javax.net.SocketFactory getSocketFactory()>();

        $r41 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.OkHttpClient client>;

        $r40 = virtualinvoke $r41.<com.android.okhttp.OkHttpClient: com.android.okhttp.OkAuthenticator getAuthenticator()>();

        $r39 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.OkHttpClient client>;

        $r38 = virtualinvoke $r39.<com.android.okhttp.OkHttpClient: java.net.Proxy getProxy()>();

        $r45 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.OkHttpClient client>;

        $r44 = virtualinvoke $r45.<com.android.okhttp.OkHttpClient: java.util.List getProtocols()>();

        specialinvoke $r33.<com.android.okhttp.Address: void <init>(java.lang.String,int,javax.net.SocketFactory,javax.net.ssl.SSLSocketFactory,javax.net.ssl.HostnameVerifier,com.android.okhttp.OkAuthenticator,java.net.Proxy,java.util.List)>(r2, $i4, $r36, r3, r4, $r40, $r38, $r44);

        r5 = $r33;

        $r43 = new com.android.okhttp.internal.http.RouteSelector;

        $r42 = virtualinvoke r1.<com.android.okhttp.Request: java.net.URI uri()>();

        $r49 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.OkHttpClient client>;

        $r48 = virtualinvoke $r49.<com.android.okhttp.OkHttpClient: java.net.ProxySelector getProxySelector()>();

        $r47 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.OkHttpClient client>;

        $r46 = virtualinvoke $r47.<com.android.okhttp.OkHttpClient: com.android.okhttp.ConnectionPool getConnectionPool()>();

        $r53 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.OkHttpClient client>;

        $r52 = virtualinvoke $r53.<com.android.okhttp.OkHttpClient: com.android.okhttp.HostResolver getHostResolver()>();

        $r51 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.OkHttpClient client>;

        $r50 = virtualinvoke $r51.<com.android.okhttp.OkHttpClient: com.android.okhttp.RouteDatabase getRoutesDatabase()>();

        specialinvoke $r43.<com.android.okhttp.internal.http.RouteSelector: void <init>(com.android.okhttp.Address,java.net.URI,java.net.ProxySelector,com.android.okhttp.ConnectionPool,com.android.okhttp.HostResolver,com.android.okhttp.RouteDatabase)>(r5, $r42, $r48, $r46, $r52, $r50);

        r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.internal.http.RouteSelector routeSelector> = $r43;

     label5:
        $r8 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.internal.http.RouteSelector routeSelector>;

        $r9 = virtualinvoke r1.<com.android.okhttp.Request: java.lang.String method()>();

        $r10 = virtualinvoke $r8.<com.android.okhttp.internal.http.RouteSelector: com.android.okhttp.Connection next(java.lang.String)>($r9);

        r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection connection> = $r10;

        $r11 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection connection>;

        virtualinvoke $r11.<com.android.okhttp.Connection: void setOwner(java.lang.Object)>(r0);

        $r12 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection connection>;

        $z0 = virtualinvoke $r12.<com.android.okhttp.Connection: boolean isConnected()>();

        if $z0 != 0 goto label7;

        $r19 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection connection>;

        $r18 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.OkHttpClient client>;

        $i1 = virtualinvoke $r18.<com.android.okhttp.OkHttpClient: int getConnectTimeout()>();

        $r20 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.OkHttpClient client>;

        $i2 = virtualinvoke $r20.<com.android.okhttp.OkHttpClient: int getReadTimeout()>();

        $r22 = specialinvoke r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.TunnelRequest getTunnelConfig()>();

        virtualinvoke $r19.<com.android.okhttp.Connection: void connect(int,int,com.android.okhttp.TunnelRequest)>($i1, $i2, $r22);

        $r21 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection connection>;

        $z2 = virtualinvoke $r21.<com.android.okhttp.Connection: boolean isSpdy()>();

        if $z2 == 0 goto label6;

        $r29 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.OkHttpClient client>;

        $r26 = virtualinvoke $r29.<com.android.okhttp.OkHttpClient: com.android.okhttp.ConnectionPool getConnectionPool()>();

        $r27 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection connection>;

        virtualinvoke $r26.<com.android.okhttp.ConnectionPool: void share(com.android.okhttp.Connection)>($r27);

     label6:
        $r23 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.OkHttpClient client>;

        $r25 = virtualinvoke $r23.<com.android.okhttp.OkHttpClient: com.android.okhttp.RouteDatabase getRoutesDatabase()>();

        $r24 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection connection>;

        $r28 = virtualinvoke $r24.<com.android.okhttp.Connection: com.android.okhttp.Route getRoute()>();

        virtualinvoke $r25.<com.android.okhttp.RouteDatabase: void connected(com.android.okhttp.Route)>($r28);

        goto label8;

     label7:
        $r13 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection connection>;

        $z1 = virtualinvoke $r13.<com.android.okhttp.Connection: boolean isSpdy()>();

        if $z1 != 0 goto label8;

        $r16 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection connection>;

        $r17 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.OkHttpClient client>;

        $i0 = virtualinvoke $r17.<com.android.okhttp.OkHttpClient: int getReadTimeout()>();

        virtualinvoke $r16.<com.android.okhttp.Connection: void updateReadTimeout(int)>($i0);

     label8:
        $r15 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection connection>;

        $r14 = virtualinvoke $r15.<com.android.okhttp.Connection: com.android.okhttp.Route getRoute()>();

        r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Route route> = $r14;

        return;
    }

    public void writingRequestHeaders()
    {
        com.android.okhttp.internal.http.HttpEngine r0;
        long $l0, $l2;
        byte $b1;
        java.lang.IllegalStateException $r1;

        r0 := @this: com.android.okhttp.internal.http.HttpEngine;

        $l0 = r0.<com.android.okhttp.internal.http.HttpEngine: long sentRequestMillis>;

        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>()>();

        throw $r1;

     label1:
        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.okhttp.internal.http.HttpEngine: long sentRequestMillis> = $l2;

        return;
    }

    boolean hasRequestBody()
    {
        com.android.okhttp.internal.http.HttpEngine r0;
        com.android.okhttp.Request $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: com.android.okhttp.internal.http.HttpEngine;

        $r1 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Request userRequest>;

        $r2 = virtualinvoke $r1.<com.android.okhttp.Request: java.lang.String method()>();

        $z0 = staticinvoke <com.android.okhttp.internal.http.HttpMethod: boolean hasRequestBody(java.lang.String)>($r2);

        return $z0;
    }

    public final com.android.okio.Sink getRequestBody()
    {
        com.android.okhttp.internal.http.HttpEngine r0;
        com.android.okhttp.ResponseSource $r1;
        com.android.okio.Sink $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: com.android.okhttp.internal.http.HttpEngine;

        $r1 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.ResponseSource responseSource>;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>()>();

        throw $r3;

     label1:
        $r2 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okio.Sink requestBodyOut>;

        return $r2;
    }

    public final com.android.okio.BufferedSink getBufferedRequestBody()
    {
        com.android.okhttp.internal.http.HttpEngine r0;
        com.android.okio.BufferedSink r1, $r3;
        com.android.okio.Sink r2;

        r0 := @this: com.android.okhttp.internal.http.HttpEngine;

        r1 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okio.BufferedSink bufferedRequestBody>;

        if r1 == null goto label1;

        return r1;

     label1:
        r2 = virtualinvoke r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okio.Sink getRequestBody()>();

        if r2 == null goto label2;

        $r3 = staticinvoke <com.android.okio.Okio: com.android.okio.BufferedSink buffer(com.android.okio.Sink)>(r2);

        r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okio.BufferedSink bufferedRequestBody> = $r3;

        goto label3;

     label2:
        $r3 = null;

     label3:
        return $r3;
    }

    public final boolean hasResponse()
    {
        com.android.okhttp.internal.http.HttpEngine r0;
        com.android.okhttp.Response $r1;
        boolean $z0;

        r0 := @this: com.android.okhttp.internal.http.HttpEngine;

        $r1 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response userResponse>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final com.android.okhttp.Request getRequest()
    {
        com.android.okhttp.internal.http.HttpEngine r0;
        com.android.okhttp.Request $r1;

        r0 := @this: com.android.okhttp.internal.http.HttpEngine;

        $r1 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Request userRequest>;

        return $r1;
    }

    public final com.android.okhttp.Response getResponse()
    {
        com.android.okhttp.internal.http.HttpEngine r0;
        com.android.okhttp.Response $r1, $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: com.android.okhttp.internal.http.HttpEngine;

        $r1 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response userResponse>;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>()>();

        throw $r3;

     label1:
        $r2 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response userResponse>;

        return $r2;
    }

    public final com.android.okio.Source getResponseBody()
    {
        com.android.okhttp.internal.http.HttpEngine r0;
        com.android.okhttp.Response $r1;
        com.android.okio.Source $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: com.android.okhttp.internal.http.HttpEngine;

        $r1 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response userResponse>;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>()>();

        throw $r3;

     label1:
        $r2 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okio.Source responseBody>;

        return $r2;
    }

    public final java.io.InputStream getResponseBodyBytes()
    {
        com.android.okhttp.internal.http.HttpEngine r0;
        java.io.InputStream r1, $r4;
        com.android.okio.Source $r2;
        com.android.okio.BufferedSource $r3;

        r0 := @this: com.android.okhttp.internal.http.HttpEngine;

        r1 = r0.<com.android.okhttp.internal.http.HttpEngine: java.io.InputStream responseBodyBytes>;

        if r1 == null goto label1;

        $r4 = r1;

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okio.Source getResponseBody()>();

        $r3 = staticinvoke <com.android.okio.Okio: com.android.okio.BufferedSource buffer(com.android.okio.Source)>($r2);

        $r4 = interfaceinvoke $r3.<com.android.okio.BufferedSource: java.io.InputStream inputStream()>();

        r0.<com.android.okhttp.internal.http.HttpEngine: java.io.InputStream responseBodyBytes> = $r4;

     label2:
        return $r4;
    }

    public final com.android.okhttp.Connection getConnection()
    {
        com.android.okhttp.internal.http.HttpEngine r0;
        com.android.okhttp.Connection $r1;

        r0 := @this: com.android.okhttp.internal.http.HttpEngine;

        $r1 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection connection>;

        return $r1;
    }

    public com.android.okhttp.internal.http.HttpEngine recover(java.io.IOException)
    {
        com.android.okhttp.internal.http.HttpEngine r0, $r7;
        java.io.IOException r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        com.android.okhttp.Connection r2, $r16, $r17, $r18;
        com.android.okhttp.internal.http.RouteSelector $r3, $r5, $r6, $r11, $r14, $r19;
        com.android.okio.Sink $r4, $r8, $r15;
        com.android.okhttp.Response $r9;
        com.android.okhttp.internal.http.RetryableSink $r10;
        com.android.okhttp.OkHttpClient $r12;
        com.android.okhttp.Request $r13;

        r0 := @this: com.android.okhttp.internal.http.HttpEngine;

        r1 := @parameter0: java.io.IOException;

        $r3 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.internal.http.RouteSelector routeSelector>;

        if $r3 == null goto label1;

        $r18 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection connection>;

        if $r18 == null goto label1;

        $r19 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.internal.http.RouteSelector routeSelector>;

        $r17 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection connection>;

        virtualinvoke $r19.<com.android.okhttp.internal.http.RouteSelector: void connectFailed(com.android.okhttp.Connection,java.io.IOException)>($r17, r1);

     label1:
        $r4 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okio.Sink requestBodyOut>;

        if $r4 == null goto label2;

        $r15 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okio.Sink requestBodyOut>;

        $z5 = $r15 instanceof com.android.okhttp.internal.http.RetryableSink;

        if $z5 == 0 goto label3;

     label2:
        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        z0 = $z4;

        $r5 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.internal.http.RouteSelector routeSelector>;

        if $r5 != null goto label5;

        $r16 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection connection>;

        if $r16 == null goto label7;

     label5:
        $r6 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.internal.http.RouteSelector routeSelector>;

        if $r6 == null goto label6;

        $r14 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.internal.http.RouteSelector routeSelector>;

        $z3 = virtualinvoke $r14.<com.android.okhttp.internal.http.RouteSelector: boolean hasNext()>();

        if $z3 == 0 goto label7;

     label6:
        $z1 = specialinvoke r0.<com.android.okhttp.internal.http.HttpEngine: boolean isRecoverable(java.io.IOException)>(r1);

        if $z1 == 0 goto label7;

        if z0 != 0 goto label8;

     label7:
        return null;

     label8:
        r2 = virtualinvoke r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection close()>();

        $r7 = new com.android.okhttp.internal.http.HttpEngine;

        $r12 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.OkHttpClient client>;

        $r13 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Request userRequest>;

        $z2 = r0.<com.android.okhttp.internal.http.HttpEngine: boolean bufferRequestBody>;

        $r11 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.internal.http.RouteSelector routeSelector>;

        $r8 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okio.Sink requestBodyOut>;

        $r10 = (com.android.okhttp.internal.http.RetryableSink) $r8;

        $r9 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response priorResponse>;

        specialinvoke $r7.<com.android.okhttp.internal.http.HttpEngine: void <init>(com.android.okhttp.OkHttpClient,com.android.okhttp.Request,boolean,com.android.okhttp.Connection,com.android.okhttp.internal.http.RouteSelector,com.android.okhttp.internal.http.RetryableSink,com.android.okhttp.Response)>($r12, $r13, $z2, r2, $r11, $r10, $r9);

        return $r7;
    }

    private boolean isRecoverable(java.io.IOException)
    {
        com.android.okhttp.internal.http.HttpEngine r0;
        java.io.IOException r1;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        java.lang.Throwable $r2;

        r0 := @this: com.android.okhttp.internal.http.HttpEngine;

        r1 := @parameter0: java.io.IOException;

        $z2 = r1 instanceof javax.net.ssl.SSLHandshakeException;

        if $z2 == 0 goto label1;

        $r2 = virtualinvoke r1.<java.io.IOException: java.lang.Throwable getCause()>();

        $z4 = $r2 instanceof java.security.cert.CertificateException;

        if $z4 == 0 goto label1;

        $z5 = 1;

        goto label2;

     label1:
        $z5 = 0;

     label2:
        z0 = $z5;

        z1 = r1 instanceof java.net.ProtocolException;

        if z0 != 0 goto label3;

        if z1 != 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;
    }

    public com.android.okhttp.Route getRoute()
    {
        com.android.okhttp.internal.http.HttpEngine r0;
        com.android.okhttp.Route $r1;

        r0 := @this: com.android.okhttp.internal.http.HttpEngine;

        $r1 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Route route>;

        return $r1;
    }

    private void maybeCache() throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpEngine r0;
        com.android.okhttp.OkResponseCache r1;
        com.android.okhttp.OkHttpClient $r2;
        com.android.okhttp.Request $r3, $r8;
        com.android.okhttp.Response $r4, $r5, $r6;
        boolean $z0;
        java.net.CacheRequest $r7;

        r0 := @this: com.android.okhttp.internal.http.HttpEngine;

        $r2 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.OkHttpClient client>;

        r1 = virtualinvoke $r2.<com.android.okhttp.OkHttpClient: com.android.okhttp.OkResponseCache getOkResponseCache()>();

        if r1 != null goto label1;

        return;

     label1:
        $r4 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response userResponse>;

        $r3 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Request networkRequest>;

        $z0 = staticinvoke <com.android.okhttp.internal.http.CacheStrategy: boolean isCacheable(com.android.okhttp.Response,com.android.okhttp.Request)>($r4, $r3);

        if $z0 != 0 goto label2;

        $r8 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Request networkRequest>;

        interfaceinvoke r1.<com.android.okhttp.OkResponseCache: boolean maybeRemove(com.android.okhttp.Request)>($r8);

        return;

     label2:
        $r5 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response userResponse>;

        $r6 = staticinvoke <com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response stripBody(com.android.okhttp.Response)>($r5);

        $r7 = interfaceinvoke r1.<com.android.okhttp.OkResponseCache: java.net.CacheRequest put(com.android.okhttp.Response)>($r6);

        r0.<com.android.okhttp.internal.http.HttpEngine: java.net.CacheRequest storeRequest> = $r7;

        return;
    }

    public final void releaseConnection() throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpEngine r0;
        com.android.okhttp.internal.http.Transport $r1, $r3;
        com.android.okhttp.Connection $r2;

        r0 := @this: com.android.okhttp.internal.http.HttpEngine;

        $r1 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.internal.http.Transport transport>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection connection>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.internal.http.Transport transport>;

        interfaceinvoke $r3.<com.android.okhttp.internal.http.Transport: void releaseConnectionOnIdle()>();

     label1:
        r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection connection> = null;

        return;
    }

    public final com.android.okhttp.Connection close()
    {
        com.android.okhttp.internal.http.HttpEngine r0;
        com.android.okhttp.Connection r1, $r8, $r9, $r11, $r12;
        com.android.okio.BufferedSink $r2, $r14;
        com.android.okio.Sink $r3, $r13;
        com.android.okio.Source $r4, $r5;
        java.io.InputStream $r6;
        com.android.okhttp.internal.http.Transport $r7, $r10;
        boolean $z0, $z1;

        r0 := @this: com.android.okhttp.internal.http.HttpEngine;

        $r2 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okio.BufferedSink bufferedRequestBody>;

        if $r2 == null goto label1;

        $r14 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okio.BufferedSink bufferedRequestBody>;

        staticinvoke <com.android.okhttp.internal.Util: void closeQuietly(java.io.Closeable)>($r14);

        goto label2;

     label1:
        $r3 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okio.Sink requestBodyOut>;

        if $r3 == null goto label2;

        $r13 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okio.Sink requestBodyOut>;

        staticinvoke <com.android.okhttp.internal.Util: void closeQuietly(java.io.Closeable)>($r13);

     label2:
        $r4 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okio.Source responseBody>;

        if $r4 != null goto label3;

        $r12 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection connection>;

        staticinvoke <com.android.okhttp.internal.Util: void closeQuietly(java.io.Closeable)>($r12);

        r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection connection> = null;

        return null;

     label3:
        $r5 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okio.Source responseBody>;

        staticinvoke <com.android.okhttp.internal.Util: void closeQuietly(java.io.Closeable)>($r5);

        $r6 = r0.<com.android.okhttp.internal.http.HttpEngine: java.io.InputStream responseBodyBytes>;

        staticinvoke <com.android.okhttp.internal.Util: void closeQuietly(java.io.Closeable)>($r6);

        $r7 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.internal.http.Transport transport>;

        if $r7 == null goto label4;

        $r10 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.internal.http.Transport transport>;

        $z1 = interfaceinvoke $r10.<com.android.okhttp.internal.http.Transport: boolean canReuseConnection()>();

        if $z1 != 0 goto label4;

        $r11 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection connection>;

        staticinvoke <com.android.okhttp.internal.Util: void closeQuietly(java.io.Closeable)>($r11);

        r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection connection> = null;

        return null;

     label4:
        $r8 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection connection>;

        if $r8 == null goto label5;

        $r9 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection connection>;

        $z0 = virtualinvoke $r9.<com.android.okhttp.Connection: boolean clearOwner()>();

        if $z0 != 0 goto label5;

        r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection connection> = null;

     label5:
        r1 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection connection>;

        r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection connection> = null;

        return r1;
    }

    private void initContentStream(com.android.okio.Source) throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpEngine r0;
        com.android.okio.Source r1;
        boolean $z0, $z1;
        com.android.okhttp.Response $r2, $r5, $r9;
        java.lang.String $r3, $r4;
        com.android.okhttp.Response$Builder $r6, $r7, $r8;
        com.android.okio.GzipSource $r10;

        r0 := @this: com.android.okhttp.internal.http.HttpEngine;

        r1 := @parameter0: com.android.okio.Source;

        r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okio.Source responseTransferSource> = r1;

        $z0 = r0.<com.android.okhttp.internal.http.HttpEngine: boolean transparentGzip>;

        if $z0 == 0 goto label1;

        $r3 = "gzip";

        $r2 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response userResponse>;

        $r4 = virtualinvoke $r2.<com.android.okhttp.Response: java.lang.String header(java.lang.String)>("Content-Encoding");

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4);

        if $z1 == 0 goto label1;

        $r5 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response userResponse>;

        $r6 = virtualinvoke $r5.<com.android.okhttp.Response: com.android.okhttp.Response$Builder newBuilder()>();

        $r7 = virtualinvoke $r6.<com.android.okhttp.Response$Builder: com.android.okhttp.Response$Builder removeHeader(java.lang.String)>("Content-Encoding");

        $r8 = virtualinvoke $r7.<com.android.okhttp.Response$Builder: com.android.okhttp.Response$Builder removeHeader(java.lang.String)>("Content-Length");

        $r9 = virtualinvoke $r8.<com.android.okhttp.Response$Builder: com.android.okhttp.Response build()>();

        r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response userResponse> = $r9;

        $r10 = new com.android.okio.GzipSource;

        specialinvoke $r10.<com.android.okio.GzipSource: void <init>(com.android.okio.Source)>(r1);

        r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okio.Source responseBody> = $r10;

        goto label2;

     label1:
        r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okio.Source responseBody> = r1;

     label2:
        return;
    }

    public final boolean hasResponseBody()
    {
        com.android.okhttp.internal.http.HttpEngine r0;
        int i0;
        com.android.okhttp.Request $r1;
        java.lang.String $r2, $r6, $r7;
        boolean $z0, $z1;
        com.android.okhttp.Response $r3, $r4, $r5;
        long $l1;
        byte $b2;

        r0 := @this: com.android.okhttp.internal.http.HttpEngine;

        $r1 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Request userRequest>;

        $r2 = virtualinvoke $r1.<com.android.okhttp.Request: java.lang.String method()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("HEAD");

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r3 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response userResponse>;

        i0 = virtualinvoke $r3.<com.android.okhttp.Response: int code()>();

        if i0 < 100 goto label2;

        if i0 < 200 goto label3;

     label2:
        if i0 == 204 goto label3;

        if i0 == 304 goto label3;

        return 1;

     label3:
        $r4 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response networkResponse>;

        $l1 = staticinvoke <com.android.okhttp.internal.http.OkHeaders: long contentLength(com.android.okhttp.Response)>($r4);

        $b2 = $l1 cmp -1L;

        if $b2 != 0 goto label4;

        $r6 = "chunked";

        $r5 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response networkResponse>;

        $r7 = virtualinvoke $r5.<com.android.okhttp.Response: java.lang.String header(java.lang.String)>("Transfer-Encoding");

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r7);

        if $z1 == 0 goto label5;

     label4:
        return 1;

     label5:
        return 0;
    }

    private com.android.okhttp.Request networkRequest(com.android.okhttp.Request) throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpEngine r0;
        com.android.okhttp.Request r1, $r12, $r14;
        com.android.okhttp.Request$Builder r2;
        java.net.CookieHandler r3;
        java.util.Map r4, r5;
        java.lang.String $r6, $r7, $r9, $r10, $r16, $r21, $r23;
        com.android.okhttp.Connection $r8, $r19;
        boolean $z0;
        com.android.okhttp.OkHttpClient $r11;
        com.android.okhttp.Headers $r13;
        java.net.URI $r15;
        int $i0;
        java.net.URL $r22;

        r0 := @this: com.android.okhttp.internal.http.HttpEngine;

        r1 := @parameter0: com.android.okhttp.Request;

        r2 = virtualinvoke r1.<com.android.okhttp.Request: com.android.okhttp.Request$Builder newBuilder()>();

        $r6 = virtualinvoke r1.<com.android.okhttp.Request: java.lang.String getUserAgent()>();

        if $r6 != null goto label1;

        $r23 = staticinvoke <com.android.okhttp.internal.http.HttpEngine: java.lang.String getDefaultUserAgent()>();

        virtualinvoke r2.<com.android.okhttp.Request$Builder: com.android.okhttp.Request$Builder setUserAgent(java.lang.String)>($r23);

     label1:
        $r7 = virtualinvoke r1.<com.android.okhttp.Request: java.lang.String header(java.lang.String)>("Host");

        if $r7 != null goto label2;

        $r22 = virtualinvoke r1.<com.android.okhttp.Request: java.net.URL url()>();

        $r21 = staticinvoke <com.android.okhttp.internal.http.HttpEngine: java.lang.String hostHeader(java.net.URL)>($r22);

        virtualinvoke r2.<com.android.okhttp.Request$Builder: com.android.okhttp.Request$Builder header(java.lang.String,java.lang.String)>("Host", $r21);

     label2:
        $r8 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection connection>;

        if $r8 == null goto label3;

        $r19 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection connection>;

        $i0 = virtualinvoke $r19.<com.android.okhttp.Connection: int getHttpMinorVersion()>();

        if $i0 == 0 goto label4;

     label3:
        $r9 = virtualinvoke r1.<com.android.okhttp.Request: java.lang.String header(java.lang.String)>("Connection");

        if $r9 != null goto label4;

        virtualinvoke r2.<com.android.okhttp.Request$Builder: com.android.okhttp.Request$Builder header(java.lang.String,java.lang.String)>("Connection", "Keep-Alive");

     label4:
        $r10 = virtualinvoke r1.<com.android.okhttp.Request: java.lang.String header(java.lang.String)>("Accept-Encoding");

        if $r10 != null goto label5;

        r0.<com.android.okhttp.internal.http.HttpEngine: boolean transparentGzip> = 1;

        virtualinvoke r2.<com.android.okhttp.Request$Builder: com.android.okhttp.Request$Builder header(java.lang.String,java.lang.String)>("Accept-Encoding", "gzip");

     label5:
        $z0 = virtualinvoke r0.<com.android.okhttp.internal.http.HttpEngine: boolean hasRequestBody()>();

        if $z0 == 0 goto label6;

        $r16 = virtualinvoke r1.<com.android.okhttp.Request: java.lang.String header(java.lang.String)>("Content-Type");

        if $r16 != null goto label6;

        virtualinvoke r2.<com.android.okhttp.Request$Builder: com.android.okhttp.Request$Builder header(java.lang.String,java.lang.String)>("Content-Type", "application/x-www-form-urlencoded");

     label6:
        $r11 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.OkHttpClient client>;

        r3 = virtualinvoke $r11.<com.android.okhttp.OkHttpClient: java.net.CookieHandler getCookieHandler()>();

        if r3 == null goto label7;

        $r14 = virtualinvoke r2.<com.android.okhttp.Request$Builder: com.android.okhttp.Request build()>();

        $r13 = virtualinvoke $r14.<com.android.okhttp.Request: com.android.okhttp.Headers headers()>();

        r4 = staticinvoke <com.android.okhttp.internal.http.OkHeaders: java.util.Map toMultimap(com.android.okhttp.Headers,java.lang.String)>($r13, null);

        $r15 = virtualinvoke r1.<com.android.okhttp.Request: java.net.URI uri()>();

        r5 = virtualinvoke r3.<java.net.CookieHandler: java.util.Map get(java.net.URI,java.util.Map)>($r15, r4);

        staticinvoke <com.android.okhttp.internal.http.OkHeaders: void addCookies(com.android.okhttp.Request$Builder,java.util.Map)>(r2, r5);

     label7:
        $r12 = virtualinvoke r2.<com.android.okhttp.Request$Builder: com.android.okhttp.Request build()>();

        return $r12;
    }

    public static java.lang.String getDefaultUserAgent()
    {
        java.lang.String r0, $r3, $r5;
        java.lang.StringBuilder $r1, $r2, $r4;

        r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("http.agent");

        if r0 == null goto label1;

        $r5 = r0;

        goto label2;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Java");

        $r3 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.version");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return $r5;
    }

    public static java.lang.String hostHeader(java.net.URL)
    {
        java.net.URL r0;
        int $i0, $i1, $i2;
        java.lang.String $r1, $r2, $r4;
        java.lang.StringBuilder $r3, $r5, $r6, $r7;

        r0 := @parameter0: java.net.URL;

        $i0 = staticinvoke <com.android.okhttp.internal.Util: int getEffectivePort(java.net.URL)>(r0);

        $r1 = virtualinvoke r0.<java.net.URL: java.lang.String getProtocol()>();

        $i1 = staticinvoke <com.android.okhttp.internal.Util: int getDefaultPort(java.lang.String)>($r1);

        if $i0 == $i1 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke r0.<java.net.URL: java.lang.String getHost()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $i2 = virtualinvoke r0.<java.net.URL: int getPort()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<java.net.URL: java.lang.String getHost()>();

     label2:
        return $r2;
    }

    public final void readResponse() throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpEngine r0;
        long l0, $l1, $l3, $l4, $l6, $l9;
        com.android.okhttp.OkResponseCache r1;
        com.android.okhttp.Response $r2, $r22, $r25, $r28, $r32, $r33, $r36, $r38, $r39, $r40, $r41, $r43, $r48, $r53, $r54, $r55, $r56, $r58, $r59, $r64, $r65, $r68, $r73, $r74, $r75, $r76, $r79, $r82, $r83, $r85, $r105;
        com.android.okhttp.Request $r3, $r4, $r10, $r30, $r61, $r87, $r96, $r99, $r103;
        com.android.okio.BufferedSink $r5, $r80, $r86, $r98, $r106;
        byte $b2, $b7, $b8;
        com.android.okio.Sink $r6, $r90, $r91, $r92, $r93, $r95;
        com.android.okhttp.internal.http.Transport $r7, $r8, $r46, $r51, $r72, $r89, $r97;
        com.android.okhttp.Response$Builder $r9, $r11, $r14, $r18, $r21, $r23, $r29, $r34, $r35, $r37, $r42, $r57, $r60, $r62, $r63, $r66, $r77;
        com.android.okhttp.Handshake $r12;
        com.android.okhttp.Connection $r13, $r24;
        java.lang.String $r15, $r16, $r17, $r19, $r101;
        com.android.okhttp.ResponseSource $r20, $r27, $r31;
        com.android.okhttp.Headers $r26, $r67, $r69, $r70;
        int $i5;
        boolean $z0, $z1, $z2, $z3;
        java.net.CacheRequest $r44, $r47;
        com.android.okio.Source $r45, $r49, $r50, $r81;
        com.android.okhttp.Response$Body $r52, $r78, $r84;
        com.android.okhttp.OkHttpClient $r71;
        com.android.okhttp.internal.http.RetryableSink $r88, $r94;
        com.android.okhttp.Request$Builder $r100, $r102;
        java.lang.IllegalStateException $r104;
        com.android.okio.OkBuffer $r107;

        r0 := @this: com.android.okhttp.internal.http.HttpEngine;

        $r2 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response userResponse>;

        if $r2 == null goto label01;

        return;

     label01:
        $r3 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Request networkRequest>;

        if $r3 != null goto label02;

        $r105 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response cacheResponse>;

        if $r105 != null goto label02;

        $r104 = new java.lang.IllegalStateException;

        specialinvoke $r104.<java.lang.IllegalStateException: void <init>(java.lang.String)>("call sendRequest() first!");

        throw $r104;

     label02:
        $r4 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Request networkRequest>;

        if $r4 != null goto label03;

        return;

     label03:
        $r5 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okio.BufferedSink bufferedRequestBody>;

        if $r5 == null goto label04;

        $r98 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okio.BufferedSink bufferedRequestBody>;

        $r107 = interfaceinvoke $r98.<com.android.okio.BufferedSink: com.android.okio.OkBuffer buffer()>();

        $l9 = virtualinvoke $r107.<com.android.okio.OkBuffer: long size()>();

        $b8 = $l9 cmp 0L;

        if $b8 <= 0 goto label04;

        $r106 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okio.BufferedSink bufferedRequestBody>;

        interfaceinvoke $r106.<com.android.okio.BufferedSink: void flush()>();

     label04:
        $l1 = r0.<com.android.okhttp.internal.http.HttpEngine: long sentRequestMillis>;

        $b2 = $l1 cmp -1L;

        if $b2 != 0 goto label06;

        $r87 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Request networkRequest>;

        $l6 = staticinvoke <com.android.okhttp.internal.http.OkHeaders: long contentLength(com.android.okhttp.Request)>($r87);

        $b7 = $l6 cmp -1L;

        if $b7 != 0 goto label05;

        $r95 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okio.Sink requestBodyOut>;

        $z3 = $r95 instanceof com.android.okhttp.internal.http.RetryableSink;

        if $z3 == 0 goto label05;

        $r93 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okio.Sink requestBodyOut>;

        $r94 = (com.android.okhttp.internal.http.RetryableSink) $r93;

        l0 = virtualinvoke $r94.<com.android.okhttp.internal.http.RetryableSink: long contentLength()>();

        $r103 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Request networkRequest>;

        $r102 = virtualinvoke $r103.<com.android.okhttp.Request: com.android.okhttp.Request$Builder newBuilder()>();

        $r101 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        $r100 = virtualinvoke $r102.<com.android.okhttp.Request$Builder: com.android.okhttp.Request$Builder header(java.lang.String,java.lang.String)>("Content-Length", $r101);

        $r99 = virtualinvoke $r100.<com.android.okhttp.Request$Builder: com.android.okhttp.Request build()>();

        r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Request networkRequest> = $r99;

     label05:
        $r97 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.internal.http.Transport transport>;

        $r96 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Request networkRequest>;

        interfaceinvoke $r97.<com.android.okhttp.internal.http.Transport: void writeRequestHeaders(com.android.okhttp.Request)>($r96);

     label06:
        $r6 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okio.Sink requestBodyOut>;

        if $r6 == null goto label09;

        $r80 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okio.BufferedSink bufferedRequestBody>;

        if $r80 == null goto label07;

        $r86 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okio.BufferedSink bufferedRequestBody>;

        interfaceinvoke $r86.<com.android.okio.BufferedSink: void close()>();

        goto label08;

     label07:
        $r91 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okio.Sink requestBodyOut>;

        interfaceinvoke $r91.<com.android.okio.Sink: void close()>();

     label08:
        $r92 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okio.Sink requestBodyOut>;

        $z2 = $r92 instanceof com.android.okhttp.internal.http.RetryableSink;

        if $z2 == 0 goto label09;

        $r89 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.internal.http.Transport transport>;

        $r90 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okio.Sink requestBodyOut>;

        $r88 = (com.android.okhttp.internal.http.RetryableSink) $r90;

        interfaceinvoke $r89.<com.android.okhttp.internal.http.Transport: void writeRequestBody(com.android.okhttp.internal.http.RetryableSink)>($r88);

     label09:
        $r7 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.internal.http.Transport transport>;

        interfaceinvoke $r7.<com.android.okhttp.internal.http.Transport: void flushRequest()>();

        $r8 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.internal.http.Transport transport>;

        $r9 = interfaceinvoke $r8.<com.android.okhttp.internal.http.Transport: com.android.okhttp.Response$Builder readResponseHeaders()>();

        $r10 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Request networkRequest>;

        $r11 = virtualinvoke $r9.<com.android.okhttp.Response$Builder: com.android.okhttp.Response$Builder request(com.android.okhttp.Request)>($r10);

        $r13 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection connection>;

        $r12 = virtualinvoke $r13.<com.android.okhttp.Connection: com.android.okhttp.Handshake getHandshake()>();

        $r14 = virtualinvoke $r11.<com.android.okhttp.Response$Builder: com.android.okhttp.Response$Builder handshake(com.android.okhttp.Handshake)>($r12);

        $r16 = <com.android.okhttp.internal.http.OkHeaders: java.lang.String SENT_MILLIS>;

        $l3 = r0.<com.android.okhttp.internal.http.HttpEngine: long sentRequestMillis>;

        $r15 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l3);

        $r18 = virtualinvoke $r14.<com.android.okhttp.Response$Builder: com.android.okhttp.Response$Builder header(java.lang.String,java.lang.String)>($r16, $r15);

        $r17 = <com.android.okhttp.internal.http.OkHeaders: java.lang.String RECEIVED_MILLIS>;

        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r19 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l4);

        $r21 = virtualinvoke $r18.<com.android.okhttp.Response$Builder: com.android.okhttp.Response$Builder header(java.lang.String,java.lang.String)>($r17, $r19);

        $r20 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.ResponseSource responseSource>;

        $r23 = virtualinvoke $r21.<com.android.okhttp.Response$Builder: com.android.okhttp.Response$Builder setResponseSource(com.android.okhttp.ResponseSource)>($r20);

        $r22 = virtualinvoke $r23.<com.android.okhttp.Response$Builder: com.android.okhttp.Response build()>();

        r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response networkResponse> = $r22;

        $r24 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection connection>;

        $r25 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response networkResponse>;

        $i5 = virtualinvoke $r25.<com.android.okhttp.Response: int httpMinorVersion()>();

        virtualinvoke $r24.<com.android.okhttp.Connection: void setHttpMinorVersion(int)>($i5);

        $r28 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response networkResponse>;

        $r26 = virtualinvoke $r28.<com.android.okhttp.Response: com.android.okhttp.Headers headers()>();

        virtualinvoke r0.<com.android.okhttp.internal.http.HttpEngine: void receiveHeaders(com.android.okhttp.Headers)>($r26);

        $r31 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.ResponseSource responseSource>;

        $r27 = <com.android.okhttp.ResponseSource: com.android.okhttp.ResponseSource CONDITIONAL_CACHE>;

        if $r31 != $r27 goto label12;

        $r54 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response cacheResponse>;

        $r48 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response networkResponse>;

        $z1 = virtualinvoke $r54.<com.android.okhttp.Response: boolean validate(com.android.okhttp.Response)>($r48);

        if $z1 == 0 goto label11;

        $r59 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response cacheResponse>;

        $r60 = virtualinvoke $r59.<com.android.okhttp.Response: com.android.okhttp.Response$Builder newBuilder()>();

        $r61 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Request userRequest>;

        $r62 = virtualinvoke $r60.<com.android.okhttp.Response$Builder: com.android.okhttp.Response$Builder request(com.android.okhttp.Request)>($r61);

        $r55 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response priorResponse>;

        $r56 = staticinvoke <com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response stripBody(com.android.okhttp.Response)>($r55);

        $r57 = virtualinvoke $r62.<com.android.okhttp.Response$Builder: com.android.okhttp.Response$Builder priorResponse(com.android.okhttp.Response)>($r56);

        $r58 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response cacheResponse>;

        $r67 = virtualinvoke $r58.<com.android.okhttp.Response: com.android.okhttp.Headers headers()>();

        $r68 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response networkResponse>;

        $r69 = virtualinvoke $r68.<com.android.okhttp.Response: com.android.okhttp.Headers headers()>();

        $r70 = staticinvoke <com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Headers combine(com.android.okhttp.Headers,com.android.okhttp.Headers)>($r67, $r69);

        $r63 = virtualinvoke $r57.<com.android.okhttp.Response$Builder: com.android.okhttp.Response$Builder headers(com.android.okhttp.Headers)>($r70);

        $r64 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response cacheResponse>;

        $r65 = staticinvoke <com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response stripBody(com.android.okhttp.Response)>($r64);

        $r66 = virtualinvoke $r63.<com.android.okhttp.Response$Builder: com.android.okhttp.Response$Builder cacheResponse(com.android.okhttp.Response)>($r65);

        $r75 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response networkResponse>;

        $r74 = staticinvoke <com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response stripBody(com.android.okhttp.Response)>($r75);

        $r77 = virtualinvoke $r66.<com.android.okhttp.Response$Builder: com.android.okhttp.Response$Builder networkResponse(com.android.okhttp.Response)>($r74);

        $r76 = virtualinvoke $r77.<com.android.okhttp.Response$Builder: com.android.okhttp.Response build()>();

        r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response userResponse> = $r76;

        $r72 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.internal.http.Transport transport>;

        interfaceinvoke $r72.<com.android.okhttp.internal.http.Transport: void emptyTransferStream()>();

        virtualinvoke r0.<com.android.okhttp.internal.http.HttpEngine: void releaseConnection()>();

        $r71 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.OkHttpClient client>;

        r1 = virtualinvoke $r71.<com.android.okhttp.OkHttpClient: com.android.okhttp.OkResponseCache getOkResponseCache()>();

        interfaceinvoke r1.<com.android.okhttp.OkResponseCache: void trackConditionalCacheHit()>();

        $r83 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response cacheResponse>;

        $r73 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response userResponse>;

        $r82 = staticinvoke <com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response stripBody(com.android.okhttp.Response)>($r73);

        interfaceinvoke r1.<com.android.okhttp.OkResponseCache: void update(com.android.okhttp.Response,com.android.okhttp.Response)>($r83, $r82);

        $r85 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response cacheResponse>;

        $r84 = virtualinvoke $r85.<com.android.okhttp.Response: com.android.okhttp.Response$Body body()>();

        if $r84 == null goto label10;

        $r79 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response cacheResponse>;

        $r78 = virtualinvoke $r79.<com.android.okhttp.Response: com.android.okhttp.Response$Body body()>();

        $r81 = virtualinvoke $r78.<com.android.okhttp.Response$Body: com.android.okio.Source source()>();

        specialinvoke r0.<com.android.okhttp.internal.http.HttpEngine: void initContentStream(com.android.okio.Source)>($r81);

     label10:
        return;

     label11:
        $r53 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response cacheResponse>;

        $r52 = virtualinvoke $r53.<com.android.okhttp.Response: com.android.okhttp.Response$Body body()>();

        staticinvoke <com.android.okhttp.internal.Util: void closeQuietly(java.io.Closeable)>($r52);

     label12:
        $r32 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response networkResponse>;

        $r29 = virtualinvoke $r32.<com.android.okhttp.Response: com.android.okhttp.Response$Builder newBuilder()>();

        $r30 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Request userRequest>;

        $r35 = virtualinvoke $r29.<com.android.okhttp.Response$Builder: com.android.okhttp.Response$Builder request(com.android.okhttp.Request)>($r30);

        $r36 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response priorResponse>;

        $r33 = staticinvoke <com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response stripBody(com.android.okhttp.Response)>($r36);

        $r34 = virtualinvoke $r35.<com.android.okhttp.Response$Builder: com.android.okhttp.Response$Builder priorResponse(com.android.okhttp.Response)>($r33);

        $r39 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response cacheResponse>;

        $r40 = staticinvoke <com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response stripBody(com.android.okhttp.Response)>($r39);

        $r37 = virtualinvoke $r34.<com.android.okhttp.Response$Builder: com.android.okhttp.Response$Builder cacheResponse(com.android.okhttp.Response)>($r40);

        $r38 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response networkResponse>;

        $r43 = staticinvoke <com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response stripBody(com.android.okhttp.Response)>($r38);

        $r42 = virtualinvoke $r37.<com.android.okhttp.Response$Builder: com.android.okhttp.Response$Builder networkResponse(com.android.okhttp.Response)>($r43);

        $r41 = virtualinvoke $r42.<com.android.okhttp.Response$Builder: com.android.okhttp.Response build()>();

        r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response userResponse> = $r41;

        $z0 = virtualinvoke r0.<com.android.okhttp.internal.http.HttpEngine: boolean hasResponseBody()>();

        if $z0 != 0 goto label13;

        $r51 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.internal.http.Transport transport>;

        $r44 = r0.<com.android.okhttp.internal.http.HttpEngine: java.net.CacheRequest storeRequest>;

        $r50 = interfaceinvoke $r51.<com.android.okhttp.internal.http.Transport: com.android.okio.Source getTransferStream(java.net.CacheRequest)>($r44);

        r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okio.Source responseTransferSource> = $r50;

        $r49 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okio.Source responseTransferSource>;

        r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okio.Source responseBody> = $r49;

        return;

     label13:
        specialinvoke r0.<com.android.okhttp.internal.http.HttpEngine: void maybeCache()>();

        $r46 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.internal.http.Transport transport>;

        $r47 = r0.<com.android.okhttp.internal.http.HttpEngine: java.net.CacheRequest storeRequest>;

        $r45 = interfaceinvoke $r46.<com.android.okhttp.internal.http.Transport: com.android.okio.Source getTransferStream(java.net.CacheRequest)>($r47);

        specialinvoke r0.<com.android.okhttp.internal.http.HttpEngine: void initContentStream(com.android.okio.Source)>($r45);

        return;
    }

    private static com.android.okhttp.Headers combine(com.android.okhttp.Headers, com.android.okhttp.Headers) throws java.io.IOException
    {
        com.android.okhttp.Headers r0, r1, $r6;
        com.android.okhttp.Headers$Builder r2, $r5;
        int i0, $i1, $i2, i3;
        java.lang.String r3, r4, $r7, $r9, $r11, r12;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: com.android.okhttp.Headers;

        r1 := @parameter1: com.android.okhttp.Headers;

        $r5 = new com.android.okhttp.Headers$Builder;

        specialinvoke $r5.<com.android.okhttp.Headers$Builder: void <init>()>();

        r2 = $r5;

        i0 = 0;

     label1:
        $i1 = virtualinvoke r0.<com.android.okhttp.Headers: int size()>();

        if i0 >= $i1 goto label5;

        r3 = virtualinvoke r0.<com.android.okhttp.Headers: java.lang.String name(int)>(i0);

        r4 = virtualinvoke r0.<com.android.okhttp.Headers: java.lang.String value(int)>(i0);

        $r9 = "Warning";

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z1 == 0 goto label2;

        $z3 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("1");

        if $z3 == 0 goto label2;

        goto label4;

     label2:
        $z2 = staticinvoke <com.android.okhttp.internal.http.HttpEngine: boolean isEndToEnd(java.lang.String)>(r3);

        if $z2 == 0 goto label3;

        $r11 = virtualinvoke r1.<com.android.okhttp.Headers: java.lang.String get(java.lang.String)>(r3);

        if $r11 != null goto label4;

     label3:
        virtualinvoke r2.<com.android.okhttp.Headers$Builder: com.android.okhttp.Headers$Builder add(java.lang.String,java.lang.String)>(r3, r4);

     label4:
        i0 = i0 + 1;

        goto label1;

     label5:
        i3 = 0;

     label6:
        $i2 = virtualinvoke r1.<com.android.okhttp.Headers: int size()>();

        if i3 >= $i2 goto label8;

        r12 = virtualinvoke r1.<com.android.okhttp.Headers: java.lang.String name(int)>(i3);

        $z0 = staticinvoke <com.android.okhttp.internal.http.HttpEngine: boolean isEndToEnd(java.lang.String)>(r12);

        if $z0 == 0 goto label7;

        $r7 = virtualinvoke r1.<com.android.okhttp.Headers: java.lang.String value(int)>(i3);

        virtualinvoke r2.<com.android.okhttp.Headers$Builder: com.android.okhttp.Headers$Builder add(java.lang.String,java.lang.String)>(r12, $r7);

     label7:
        i3 = i3 + 1;

        goto label6;

     label8:
        $r6 = virtualinvoke r2.<com.android.okhttp.Headers$Builder: com.android.okhttp.Headers build()>();

        return $r6;
    }

    private static boolean isEndToEnd(java.lang.String)
    {
        java.lang.String r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;

        r0 := @parameter0: java.lang.String;

        $r1 = "Connection";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z0 != 0 goto label1;

        $r2 = "Keep-Alive";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z1 != 0 goto label1;

        $r3 = "Proxy-Authenticate";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z2 != 0 goto label1;

        $r4 = "Proxy-Authorization";

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z3 != 0 goto label1;

        $r5 = "TE";

        $z4 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z4 != 0 goto label1;

        $r6 = "Trailers";

        $z5 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z5 != 0 goto label1;

        $r7 = "Transfer-Encoding";

        $z6 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z6 != 0 goto label1;

        $r8 = "Upgrade";

        $z8 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r0);

        if $z8 != 0 goto label1;

        $z7 = 1;

        goto label2;

     label1:
        $z7 = 0;

     label2:
        return $z7;
    }

    private com.android.okhttp.TunnelRequest getTunnelConfig()
    {
        com.android.okhttp.internal.http.HttpEngine r0;
        java.lang.String r1, $r7, $r9;
        java.net.URL r2;
        com.android.okhttp.Request $r3, $r4, $r5, $r8;
        boolean $z0;
        com.android.okhttp.TunnelRequest $r6;
        int $i0;

        r0 := @this: com.android.okhttp.internal.http.HttpEngine;

        $r3 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Request userRequest>;

        $z0 = virtualinvoke $r3.<com.android.okhttp.Request: boolean isHttps()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r4 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Request userRequest>;

        r1 = virtualinvoke $r4.<com.android.okhttp.Request: java.lang.String getUserAgent()>();

        if r1 != null goto label2;

        r1 = staticinvoke <com.android.okhttp.internal.http.HttpEngine: java.lang.String getDefaultUserAgent()>();

     label2:
        $r5 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Request userRequest>;

        r2 = virtualinvoke $r5.<com.android.okhttp.Request: java.net.URL url()>();

        $r6 = new com.android.okhttp.TunnelRequest;

        $r7 = virtualinvoke r2.<java.net.URL: java.lang.String getHost()>();

        $i0 = staticinvoke <com.android.okhttp.internal.Util: int getEffectivePort(java.net.URL)>(r2);

        $r8 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Request userRequest>;

        $r9 = virtualinvoke $r8.<com.android.okhttp.Request: java.lang.String getProxyAuthorization()>();

        specialinvoke $r6.<com.android.okhttp.TunnelRequest: void <init>(java.lang.String,int,java.lang.String,java.lang.String)>($r7, $i0, r1, $r9);

        return $r6;
    }

    public void receiveHeaders(com.android.okhttp.Headers) throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpEngine r0;
        com.android.okhttp.Headers r1;
        java.net.CookieHandler r2;
        com.android.okhttp.OkHttpClient $r3;
        com.android.okhttp.Request $r4;
        java.net.URI $r5;
        java.util.Map $r6;

        r0 := @this: com.android.okhttp.internal.http.HttpEngine;

        r1 := @parameter0: com.android.okhttp.Headers;

        $r3 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.OkHttpClient client>;

        r2 = virtualinvoke $r3.<com.android.okhttp.OkHttpClient: java.net.CookieHandler getCookieHandler()>();

        if r2 == null goto label1;

        $r4 = r0.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Request userRequest>;

        $r5 = virtualinvoke $r4.<com.android.okhttp.Request: java.net.URI uri()>();

        $r6 = staticinvoke <com.android.okhttp.internal.http.OkHeaders: java.util.Map toMultimap(com.android.okhttp.Headers,java.lang.String)>(r1, null);

        virtualinvoke r2.<java.net.CookieHandler: void put(java.net.URI,java.util.Map)>($r5, $r6);

     label1:
        return;
    }
}
