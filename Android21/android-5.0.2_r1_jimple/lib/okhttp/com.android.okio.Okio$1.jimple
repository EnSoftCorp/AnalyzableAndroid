final class com.android.okio.Okio$1 extends java.lang.Object implements com.android.okio.Sink
{
    private com.android.okio.Deadline deadline;
    final java.io.OutputStream val$out;

    void <init>(java.io.OutputStream)
    {
        com.android.okio.Okio$1 r0;
        java.io.OutputStream r1;
        com.android.okio.Deadline $r2;

        r0 := @this: com.android.okio.Okio$1;

        r1 := @parameter0: java.io.OutputStream;

        r0.<com.android.okio.Okio$1: java.io.OutputStream val$out> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <com.android.okio.Deadline: com.android.okio.Deadline NONE>;

        r0.<com.android.okio.Okio$1: com.android.okio.Deadline deadline> = $r2;

        return;
    }

    public void write(com.android.okio.OkBuffer, long) throws java.io.IOException
    {
        com.android.okio.Okio$1 r0;
        com.android.okio.OkBuffer r1;
        long l0, $l2, $l7, $l8, $l11, $l13, $l14, $l16;
        com.android.okio.Segment r2, $r6;
        int i1, $i4, $i5, $i6, $i9, $i10, $i12, $i15, $i17;
        byte $b3;
        com.android.okio.Deadline $r3;
        byte[] $r4;
        java.io.OutputStream $r5;
        com.android.okio.SegmentPool $r7;

        r0 := @this: com.android.okio.Okio$1;

        r1 := @parameter0: com.android.okio.OkBuffer;

        l0 := @parameter1: long;

        $l2 = r1.<com.android.okio.OkBuffer: long size>;

        staticinvoke <com.android.okio.Util: void checkOffsetAndCount(long,long,long)>($l2, 0L, l0);

     label1:
        $b3 = l0 cmp 0L;

        if $b3 <= 0 goto label3;

        $r3 = r0.<com.android.okio.Okio$1: com.android.okio.Deadline deadline>;

        virtualinvoke $r3.<com.android.okio.Deadline: void throwIfReached()>();

        r2 = r1.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        $i5 = r2.<com.android.okio.Segment: int limit>;

        $i4 = r2.<com.android.okio.Segment: int pos>;

        $i6 = $i5 - $i4;

        $l7 = (long) $i6;

        $l8 = staticinvoke <java.lang.Math: long min(long,long)>(l0, $l7);

        i1 = (int) $l8;

        $r5 = r0.<com.android.okio.Okio$1: java.io.OutputStream val$out>;

        $r4 = r2.<com.android.okio.Segment: byte[] data>;

        $i9 = r2.<com.android.okio.Segment: int pos>;

        virtualinvoke $r5.<java.io.OutputStream: void write(byte[],int,int)>($r4, $i9, i1);

        $i10 = r2.<com.android.okio.Segment: int pos>;

        $i12 = $i10 + i1;

        r2.<com.android.okio.Segment: int pos> = $i12;

        $l11 = (long) i1;

        l0 = l0 - $l11;

        $l13 = r1.<com.android.okio.OkBuffer: long size>;

        $l14 = (long) i1;

        $l16 = $l13 - $l14;

        r1.<com.android.okio.OkBuffer: long size> = $l16;

        $i17 = r2.<com.android.okio.Segment: int pos>;

        $i15 = r2.<com.android.okio.Segment: int limit>;

        if $i17 != $i15 goto label2;

        $r6 = virtualinvoke r2.<com.android.okio.Segment: com.android.okio.Segment pop()>();

        r1.<com.android.okio.OkBuffer: com.android.okio.Segment head> = $r6;

        $r7 = <com.android.okio.SegmentPool: com.android.okio.SegmentPool INSTANCE>;

        virtualinvoke $r7.<com.android.okio.SegmentPool: void recycle(com.android.okio.Segment)>(r2);

     label2:
        goto label1;

     label3:
        return;
    }

    public void flush() throws java.io.IOException
    {
        com.android.okio.Okio$1 r0;
        java.io.OutputStream $r1;

        r0 := @this: com.android.okio.Okio$1;

        $r1 = r0.<com.android.okio.Okio$1: java.io.OutputStream val$out>;

        virtualinvoke $r1.<java.io.OutputStream: void flush()>();

        return;
    }

    public void close() throws java.io.IOException
    {
        com.android.okio.Okio$1 r0;
        java.io.OutputStream $r1;

        r0 := @this: com.android.okio.Okio$1;

        $r1 = r0.<com.android.okio.Okio$1: java.io.OutputStream val$out>;

        virtualinvoke $r1.<java.io.OutputStream: void close()>();

        return;
    }

    public com.android.okio.Sink deadline(com.android.okio.Deadline)
    {
        com.android.okio.Okio$1 r0;
        com.android.okio.Deadline r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: com.android.okio.Okio$1;

        r1 := @parameter0: com.android.okio.Deadline;

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("deadline == null");

        throw $r2;

     label1:
        r0.<com.android.okio.Okio$1: com.android.okio.Deadline deadline> = r1;

        return r0;
    }

    public java.lang.String toString()
    {
        com.android.okio.Okio$1 r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5;
        java.io.OutputStream $r3;
        java.lang.String $r6;

        r0 := @this: com.android.okio.Okio$1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sink(");

        $r3 = r0.<com.android.okio.Okio$1: java.io.OutputStream val$out>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }
}
