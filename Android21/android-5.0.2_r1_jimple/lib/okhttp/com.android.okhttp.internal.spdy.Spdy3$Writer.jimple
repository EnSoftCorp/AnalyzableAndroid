final class com.android.okhttp.internal.spdy.Spdy3$Writer extends java.lang.Object implements com.android.okhttp.internal.spdy.FrameWriter
{
    private final com.android.okio.BufferedSink sink;
    private final com.android.okio.OkBuffer headerBlockBuffer;
    private final com.android.okio.BufferedSink headerBlockOut;
    private final boolean client;
    private boolean closed;

    void <init>(com.android.okio.BufferedSink, boolean)
    {
        com.android.okhttp.internal.spdy.Spdy3$Writer r0;
        com.android.okio.BufferedSink r1, $r8;
        boolean z0;
        java.util.zip.Deflater r2, $r3;
        byte[] $r4;
        com.android.okio.OkBuffer $r5, $r7;
        com.android.okio.DeflaterSink $r6;

        r0 := @this: com.android.okhttp.internal.spdy.Spdy3$Writer;

        r1 := @parameter0: com.android.okio.BufferedSink;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink> = r1;

        r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: boolean client> = z0;

        $r3 = new java.util.zip.Deflater;

        specialinvoke $r3.<java.util.zip.Deflater: void <init>()>();

        r2 = $r3;

        $r4 = <com.android.okhttp.internal.spdy.Spdy3: byte[] DICTIONARY>;

        virtualinvoke r2.<java.util.zip.Deflater: void setDictionary(byte[])>($r4);

        $r5 = new com.android.okio.OkBuffer;

        specialinvoke $r5.<com.android.okio.OkBuffer: void <init>()>();

        r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.OkBuffer headerBlockBuffer> = $r5;

        $r6 = new com.android.okio.DeflaterSink;

        $r7 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.OkBuffer headerBlockBuffer>;

        specialinvoke $r6.<com.android.okio.DeflaterSink: void <init>(com.android.okio.Sink,java.util.zip.Deflater)>($r7, r2);

        $r8 = staticinvoke <com.android.okio.Okio: com.android.okio.BufferedSink buffer(com.android.okio.Sink)>($r6);

        r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink headerBlockOut> = $r8;

        return;
    }

    public void ackSettings()
    {
        com.android.okhttp.internal.spdy.Spdy3$Writer r0;

        r0 := @this: com.android.okhttp.internal.spdy.Spdy3$Writer;

        return;
    }

    public void pushPromise(int, int, java.util.List) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.Spdy3$Writer r0;
        int i0, i1;
        java.util.List r1;

        r0 := @this: com.android.okhttp.internal.spdy.Spdy3$Writer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.util.List;

        return;
    }

    public synchronized void connectionHeader()
    {
        com.android.okhttp.internal.spdy.Spdy3$Writer r0;

        r0 := @this: com.android.okhttp.internal.spdy.Spdy3$Writer;

        return;
    }

    public synchronized void flush() throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.Spdy3$Writer r0;
        boolean $z0;
        com.android.okio.BufferedSink $r1;
        java.io.IOException $r2;

        r0 := @this: com.android.okhttp.internal.spdy.Spdy3$Writer;

        $z0 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: boolean closed>;

        if $z0 == 0 goto label1;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("closed");

        throw $r2;

     label1:
        $r1 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        interfaceinvoke $r1.<com.android.okio.BufferedSink: void flush()>();

        return;
    }

    public synchronized void synStream(boolean, boolean, int, int, int, int, java.util.List) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.Spdy3$Writer r0;
        boolean z0, z1, $z2;
        int i0, i1, i2, i3, i4, $i11, $i13, $i14, $i15, $i16, $i17, $i19, $i20, $i21, $i22, $i23, $i24;
        java.util.List r1;
        char c5, $c9;
        short s6, $s12, $s25, $s27;
        byte b7, $b18;
        com.android.okio.OkBuffer $r2, $r11, $r16;
        long $l8, $l10, $l26;
        com.android.okio.BufferedSink $r3, $r5, $r8, $r9, $r12, $r13, $r15;
        java.io.IOException $r17;

        r0 := @this: com.android.okhttp.internal.spdy.Spdy3$Writer;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        r1 := @parameter6: java.util.List;

        $z2 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: boolean closed>;

        if $z2 == 0 goto label1;

        $r17 = new java.io.IOException;

        specialinvoke $r17.<java.io.IOException: void <init>(java.lang.String)>("closed");

        throw $r17;

     label1:
        specialinvoke r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: void writeNameValueBlockToBuffer(java.util.List)>(r1);

        $r2 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.OkBuffer headerBlockBuffer>;

        $l8 = virtualinvoke $r2.<com.android.okio.OkBuffer: long size()>();

        $l10 = 10L + $l8;

        i4 = (int) $l10;

        c5 = 1;

        if z0 == 0 goto label2;

        $s27 = 1;

        goto label3;

     label2:
        $s27 = 0;

     label3:
        if z1 == 0 goto label4;

        $s25 = 2;

        goto label5;

     label4:
        $s25 = 0;

     label5:
        s6 = $s27 | $s25;

        b7 = 0;

        $r3 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        $c9 = c5 & 65535;

        $i11 = -2147287040 | $c9;

        interfaceinvoke $r3.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>($i11);

        $r5 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        $s12 = s6 & 255;

        $i13 = $s12 << 24;

        $i14 = i4 & 16777215;

        $i15 = $i13 | $i14;

        interfaceinvoke $r5.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>($i15);

        $r8 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        $i16 = i0 & 2147483647;

        interfaceinvoke $r8.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>($i16);

        $r9 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        $i17 = i1 & 2147483647;

        interfaceinvoke $r9.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>($i17);

        $r13 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        $i20 = i2 & 7;

        $i23 = $i20 << 13;

        $b18 = b7 & 31;

        $i19 = $b18 << 8;

        $i21 = $i23 | $i19;

        $i24 = i3 & 255;

        $i22 = $i21 | $i24;

        interfaceinvoke $r13.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeShort(int)>($i22);

        $r12 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        $r16 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.OkBuffer headerBlockBuffer>;

        $r11 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.OkBuffer headerBlockBuffer>;

        $l26 = virtualinvoke $r11.<com.android.okio.OkBuffer: long size()>();

        interfaceinvoke $r12.<com.android.okio.BufferedSink: void write(com.android.okio.OkBuffer,long)>($r16, $l26);

        $r15 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        interfaceinvoke $r15.<com.android.okio.BufferedSink: void flush()>();

        return;
    }

    public synchronized void synReply(boolean, int, java.util.List) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.Spdy3$Writer r0;
        boolean z0, $z1;
        int i0, i3, $i7, $i9, $i10, $i11, $i12;
        java.util.List r1;
        char c1, $c6;
        short s2, $s8, $s14;
        com.android.okio.OkBuffer $r2, $r10, $r11;
        long $l4, $l5, $l13;
        com.android.okio.BufferedSink $r3, $r5, $r8, $r9, $r12;
        java.io.IOException $r13;

        r0 := @this: com.android.okhttp.internal.spdy.Spdy3$Writer;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: java.util.List;

        $z1 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: boolean closed>;

        if $z1 == 0 goto label1;

        $r13 = new java.io.IOException;

        specialinvoke $r13.<java.io.IOException: void <init>(java.lang.String)>("closed");

        throw $r13;

     label1:
        specialinvoke r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: void writeNameValueBlockToBuffer(java.util.List)>(r1);

        c1 = 2;

        if z0 == 0 goto label2;

        $s14 = 1;

        goto label3;

     label2:
        $s14 = 0;

     label3:
        s2 = $s14;

        $r2 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.OkBuffer headerBlockBuffer>;

        $l4 = virtualinvoke $r2.<com.android.okio.OkBuffer: long size()>();

        $l5 = $l4 + 4L;

        i3 = (int) $l5;

        $r3 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        $c6 = c1 & 65535;

        $i7 = -2147287040 | $c6;

        interfaceinvoke $r3.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>($i7);

        $r5 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        $s8 = s2 & 255;

        $i9 = $s8 << 24;

        $i10 = i3 & 16777215;

        $i11 = $i9 | $i10;

        interfaceinvoke $r5.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>($i11);

        $r8 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        $i12 = i0 & 2147483647;

        interfaceinvoke $r8.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>($i12);

        $r9 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        $r11 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.OkBuffer headerBlockBuffer>;

        $r10 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.OkBuffer headerBlockBuffer>;

        $l13 = virtualinvoke $r10.<com.android.okio.OkBuffer: long size()>();

        interfaceinvoke $r9.<com.android.okio.BufferedSink: void write(com.android.okio.OkBuffer,long)>($r11, $l13);

        $r12 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        interfaceinvoke $r12.<com.android.okio.BufferedSink: void flush()>();

        return;
    }

    public synchronized void headers(int, java.util.List) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.Spdy3$Writer r0;
        int i0, i3, $i7, $i9, $i10, $i11, $i12;
        java.util.List r1;
        short s1, $s8;
        char c2, $c6;
        boolean $z0;
        com.android.okio.OkBuffer $r2, $r8, $r10;
        long $l4, $l5, $l13;
        com.android.okio.BufferedSink $r3, $r6, $r7, $r11;
        java.io.IOException $r12;

        r0 := @this: com.android.okhttp.internal.spdy.Spdy3$Writer;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.List;

        $z0 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: boolean closed>;

        if $z0 == 0 goto label1;

        $r12 = new java.io.IOException;

        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>("closed");

        throw $r12;

     label1:
        specialinvoke r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: void writeNameValueBlockToBuffer(java.util.List)>(r1);

        s1 = 0;

        c2 = 8;

        $r2 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.OkBuffer headerBlockBuffer>;

        $l4 = virtualinvoke $r2.<com.android.okio.OkBuffer: long size()>();

        $l5 = $l4 + 4L;

        i3 = (int) $l5;

        $r3 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        $c6 = c2 & 65535;

        $i7 = -2147287040 | $c6;

        interfaceinvoke $r3.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>($i7);

        $r6 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        $s8 = s1 & 255;

        $i11 = $s8 << 24;

        $i9 = i3 & 16777215;

        $i10 = $i11 | $i9;

        interfaceinvoke $r6.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>($i10);

        $r7 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        $i12 = i0 & 2147483647;

        interfaceinvoke $r7.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>($i12);

        $r11 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        $r10 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.OkBuffer headerBlockBuffer>;

        $r8 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.OkBuffer headerBlockBuffer>;

        $l13 = virtualinvoke $r8.<com.android.okio.OkBuffer: long size()>();

        interfaceinvoke $r11.<com.android.okio.BufferedSink: void write(com.android.okio.OkBuffer,long)>($r10, $l13);

        return;
    }

    public synchronized void rstStream(int, com.android.okhttp.internal.spdy.ErrorCode) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.Spdy3$Writer r0;
        int i0, $i4, $i6, $i8, $i9, $i10, $i11, $i12;
        com.android.okhttp.internal.spdy.ErrorCode r1;
        short s1, $s7;
        char c2, $c5;
        byte b3;
        boolean $z0;
        com.android.okio.BufferedSink $r2, $r5, $r6, $r9, $r11;
        java.lang.IllegalArgumentException $r10;
        java.io.IOException $r12;

        r0 := @this: com.android.okhttp.internal.spdy.Spdy3$Writer;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.okhttp.internal.spdy.ErrorCode;

        $z0 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: boolean closed>;

        if $z0 == 0 goto label1;

        $r12 = new java.io.IOException;

        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>("closed");

        throw $r12;

     label1:
        $i4 = r1.<com.android.okhttp.internal.spdy.ErrorCode: int spdyRstCode>;

        if $i4 != -1 goto label2;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r10;

     label2:
        s1 = 0;

        c2 = 3;

        b3 = 8;

        $r2 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        $c5 = c2 & 65535;

        $i6 = -2147287040 | $c5;

        interfaceinvoke $r2.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>($i6);

        $r5 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        $s7 = s1 & 255;

        $i9 = $s7 << 24;

        $i8 = b3 & 16777215;

        $i10 = $i9 | $i8;

        interfaceinvoke $r5.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>($i10);

        $r6 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        $i11 = i0 & 2147483647;

        interfaceinvoke $r6.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>($i11);

        $r9 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        $i12 = r1.<com.android.okhttp.internal.spdy.ErrorCode: int spdyRstCode>;

        interfaceinvoke $r9.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>($i12);

        $r11 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        interfaceinvoke $r11.<com.android.okio.BufferedSink: void flush()>();

        return;
    }

    public synchronized void data(boolean, int, com.android.okio.OkBuffer) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.Spdy3$Writer r0;
        boolean z0;
        int i0, $i2;
        com.android.okio.OkBuffer r1;
        long $l1;

        r0 := @this: com.android.okhttp.internal.spdy.Spdy3$Writer;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: com.android.okio.OkBuffer;

        $l1 = virtualinvoke r1.<com.android.okio.OkBuffer: long size()>();

        $i2 = (int) $l1;

        virtualinvoke r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: void data(boolean,int,com.android.okio.OkBuffer,int)>(z0, i0, r1, $i2);

        return;
    }

    public synchronized void data(boolean, int, com.android.okio.OkBuffer, int) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.Spdy3$Writer r0;
        boolean z0;
        int i0, i1;
        com.android.okio.OkBuffer r1;
        byte b2, $b3;

        r0 := @this: com.android.okhttp.internal.spdy.Spdy3$Writer;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: com.android.okio.OkBuffer;

        i1 := @parameter3: int;

        if z0 == 0 goto label1;

        $b3 = 1;

        goto label2;

     label1:
        $b3 = 0;

     label2:
        b2 = $b3;

        virtualinvoke r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: void sendDataFrame(int,int,com.android.okio.OkBuffer,int)>(i0, b2, r1, i1);

        return;
    }

    void sendDataFrame(int, int, com.android.okio.OkBuffer, int) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.Spdy3$Writer r0;
        int i0, i1, i2, $i5, $i6, $i7, $i8, $i9;
        com.android.okio.OkBuffer r1;
        boolean $z0;
        long $l3, $l10;
        byte $b4;
        com.android.okio.BufferedSink $r2, $r4, $r7;
        java.lang.IllegalArgumentException $r6;
        java.lang.StringBuilder $r8, $r9, $r11;
        java.lang.String $r10;
        java.io.IOException $r12;

        r0 := @this: com.android.okhttp.internal.spdy.Spdy3$Writer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: com.android.okio.OkBuffer;

        i2 := @parameter3: int;

        $z0 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: boolean closed>;

        if $z0 == 0 goto label1;

        $r12 = new java.io.IOException;

        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>("closed");

        throw $r12;

     label1:
        $l3 = (long) i2;

        $b4 = $l3 cmp 16777215L;

        if $b4 <= 0 goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FRAME_TOO_LARGE max size is 16Mib: ");

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label2:
        $r2 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        $i5 = i0 & 2147483647;

        interfaceinvoke $r2.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>($i5);

        $r4 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        $i6 = i1 & 255;

        $i8 = $i6 << 24;

        $i7 = i2 & 16777215;

        $i9 = $i8 | $i7;

        interfaceinvoke $r4.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>($i9);

        if i2 <= 0 goto label3;

        $r7 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        $l10 = (long) i2;

        interfaceinvoke $r7.<com.android.okio.BufferedSink: void write(com.android.okio.OkBuffer,long)>(r1, $l10);

     label3:
        return;
    }

    private void writeNameValueBlockToBuffer(java.util.List) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.Spdy3$Writer r0;
        java.util.List r1;
        int i0, i1, $i4, $i5, $i6;
        com.android.okio.ByteString r2, r3;
        com.android.okio.OkBuffer $r4;
        long $l2;
        byte $b3;
        com.android.okio.BufferedSink $r5, $r7, $r10, $r11, $r15, $r19;
        java.lang.Object $r8, $r13;
        com.android.okhttp.internal.spdy.Header $r9, $r16;
        java.lang.IllegalStateException $r20;

        r0 := @this: com.android.okhttp.internal.spdy.Spdy3$Writer;

        r1 := @parameter0: java.util.List;

        $r4 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.OkBuffer headerBlockBuffer>;

        $l2 = virtualinvoke $r4.<com.android.okio.OkBuffer: long size()>();

        $b3 = $l2 cmp 0L;

        if $b3 == 0 goto label1;

        $r20 = new java.lang.IllegalStateException;

        specialinvoke $r20.<java.lang.IllegalStateException: void <init>()>();

        throw $r20;

     label1:
        $r5 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink headerBlockOut>;

        $i4 = interfaceinvoke r1.<java.util.List: int size()>();

        interfaceinvoke $r5.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>($i4);

        i0 = 0;

        i1 = interfaceinvoke r1.<java.util.List: int size()>();

     label2:
        if i0 >= i1 goto label3;

        $r8 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r9 = (com.android.okhttp.internal.spdy.Header) $r8;

        r2 = $r9.<com.android.okhttp.internal.spdy.Header: com.android.okio.ByteString name>;

        $r10 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink headerBlockOut>;

        $i5 = virtualinvoke r2.<com.android.okio.ByteString: int size()>();

        interfaceinvoke $r10.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>($i5);

        $r11 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink headerBlockOut>;

        interfaceinvoke $r11.<com.android.okio.BufferedSink: com.android.okio.BufferedSink write(com.android.okio.ByteString)>(r2);

        $r13 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r16 = (com.android.okhttp.internal.spdy.Header) $r13;

        r3 = $r16.<com.android.okhttp.internal.spdy.Header: com.android.okio.ByteString value>;

        $r15 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink headerBlockOut>;

        $i6 = virtualinvoke r3.<com.android.okio.ByteString: int size()>();

        interfaceinvoke $r15.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>($i6);

        $r19 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink headerBlockOut>;

        interfaceinvoke $r19.<com.android.okio.BufferedSink: com.android.okio.BufferedSink write(com.android.okio.ByteString)>(r3);

        i0 = i0 + 1;

        goto label2;

     label3:
        $r7 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink headerBlockOut>;

        interfaceinvoke $r7.<com.android.okio.BufferedSink: void flush()>();

        return;
    }

    public synchronized void settings(com.android.okhttp.internal.spdy.Settings) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.Spdy3$Writer r0;
        com.android.okhttp.internal.spdy.Settings r1;
        char c0, $c7;
        short s1, $s9;
        int i2, i3, i4, i5, $i6, $i8, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        boolean $z0, $z1;
        com.android.okio.BufferedSink $r2, $r4, $r5, $r7, $r10, $r13;
        java.io.IOException $r12;

        r0 := @this: com.android.okhttp.internal.spdy.Spdy3$Writer;

        r1 := @parameter0: com.android.okhttp.internal.spdy.Settings;

        $z0 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: boolean closed>;

        if $z0 == 0 goto label1;

        $r12 = new java.io.IOException;

        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>("closed");

        throw $r12;

     label1:
        c0 = 4;

        s1 = 0;

        i2 = virtualinvoke r1.<com.android.okhttp.internal.spdy.Settings: int size()>();

        $i6 = i2 * 8;

        i3 = 4 + $i6;

        $r2 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        $c7 = c0 & 65535;

        $i8 = -2147287040 | $c7;

        interfaceinvoke $r2.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>($i8);

        $r4 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        $s9 = s1 & 255;

        $i10 = $s9 << 24;

        $i11 = i3 & 16777215;

        $i12 = $i10 | $i11;

        interfaceinvoke $r4.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>($i12);

        $r5 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        interfaceinvoke $r5.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>(i2);

        i4 = 0;

     label2:
        if i4 > 10 goto label5;

        $z1 = virtualinvoke r1.<com.android.okhttp.internal.spdy.Settings: boolean isSet(int)>(i4);

        if $z1 != 0 goto label3;

        goto label4;

     label3:
        i5 = virtualinvoke r1.<com.android.okhttp.internal.spdy.Settings: int flags(int)>(i4);

        $r10 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        $i14 = i5 & 255;

        $i16 = $i14 << 24;

        $i13 = i4 & 16777215;

        $i15 = $i16 | $i13;

        interfaceinvoke $r10.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>($i15);

        $r13 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        $i17 = virtualinvoke r1.<com.android.okhttp.internal.spdy.Settings: int get(int)>(i4);

        interfaceinvoke $r13.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>($i17);

     label4:
        i4 = i4 + 1;

        goto label2;

     label5:
        $r7 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        interfaceinvoke $r7.<com.android.okio.BufferedSink: void flush()>();

        return;
    }

    public synchronized void ping(boolean, int, int) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.Spdy3$Writer r0;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        int i0, i1, $i5, $i7, $i9, $i10, $i11;
        char c2, $c6;
        short s3, $s8;
        byte b4;
        com.android.okio.BufferedSink $r1, $r3, $r4, $r6;
        java.lang.IllegalArgumentException $r8;
        java.io.IOException $r9;

        r0 := @this: com.android.okhttp.internal.spdy.Spdy3$Writer;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z2 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: boolean closed>;

        if $z2 == 0 goto label1;

        $r9 = new java.io.IOException;

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>("closed");

        throw $r9;

     label1:
        $z3 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: boolean client>;

        $i5 = i0 & 1;

        if $i5 != 1 goto label2;

        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        if $z3 == $z5 goto label4;

        $z4 = 1;

        goto label5;

     label4:
        $z4 = 0;

     label5:
        z1 = $z4;

        if z0 == z1 goto label6;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("payload != reply");

        throw $r8;

     label6:
        c2 = 6;

        s3 = 0;

        b4 = 4;

        $r1 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        $c6 = c2 & 65535;

        $i7 = -2147287040 | $c6;

        interfaceinvoke $r1.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>($i7);

        $r3 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        $s8 = s3 & 255;

        $i9 = $s8 << 24;

        $i10 = b4 & 16777215;

        $i11 = $i9 | $i10;

        interfaceinvoke $r3.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>($i11);

        $r4 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        interfaceinvoke $r4.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>(i0);

        $r6 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        interfaceinvoke $r6.<com.android.okio.BufferedSink: void flush()>();

        return;
    }

    public synchronized void goAway(int, com.android.okhttp.internal.spdy.ErrorCode, byte[]) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.Spdy3$Writer r0;
        int i0, $i4, $i6, $i8, $i9, $i10, $i11;
        com.android.okhttp.internal.spdy.ErrorCode r1;
        byte[] r2;
        char c1, $c5;
        short s2, $s7;
        byte b3;
        boolean $z0;
        com.android.okio.BufferedSink $r3, $r5, $r6, $r10, $r12;
        java.lang.IllegalArgumentException $r11;
        java.io.IOException $r13;

        r0 := @this: com.android.okhttp.internal.spdy.Spdy3$Writer;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.okhttp.internal.spdy.ErrorCode;

        r2 := @parameter2: byte[];

        $z0 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: boolean closed>;

        if $z0 == 0 goto label1;

        $r13 = new java.io.IOException;

        specialinvoke $r13.<java.io.IOException: void <init>(java.lang.String)>("closed");

        throw $r13;

     label1:
        $i4 = r1.<com.android.okhttp.internal.spdy.ErrorCode: int spdyGoAwayCode>;

        if $i4 != -1 goto label2;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("errorCode.spdyGoAwayCode == -1");

        throw $r11;

     label2:
        c1 = 7;

        s2 = 0;

        b3 = 8;

        $r3 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        $c5 = c1 & 65535;

        $i6 = -2147287040 | $c5;

        interfaceinvoke $r3.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>($i6);

        $r5 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        $s7 = s2 & 255;

        $i9 = $s7 << 24;

        $i8 = b3 & 16777215;

        $i10 = $i9 | $i8;

        interfaceinvoke $r5.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>($i10);

        $r6 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        interfaceinvoke $r6.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>(i0);

        $r10 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        $i11 = r1.<com.android.okhttp.internal.spdy.ErrorCode: int spdyGoAwayCode>;

        interfaceinvoke $r10.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>($i11);

        $r12 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        interfaceinvoke $r12.<com.android.okio.BufferedSink: void flush()>();

        return;
    }

    public synchronized void windowUpdate(int, long) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.Spdy3$Writer r0;
        int i0, $i8, $i10, $i11, $i12, $i13;
        long l1;
        char c2, $c7;
        short s3, $s9;
        byte b4, $b5, $b6;
        boolean $z0;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;
        com.android.okio.BufferedSink $r6, $r8, $r9, $r13, $r15;
        java.io.IOException $r14;

        r0 := @this: com.android.okhttp.internal.spdy.Spdy3$Writer;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        $z0 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: boolean closed>;

        if $z0 == 0 goto label1;

        $r14 = new java.io.IOException;

        specialinvoke $r14.<java.io.IOException: void <init>(java.lang.String)>("closed");

        throw $r14;

     label1:
        $b5 = l1 cmp 0L;

        if $b5 == 0 goto label2;

        $b6 = l1 cmp 2147483647L;

        if $b6 <= 0 goto label3;

     label2:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("windowSizeIncrement must be between 1 and 0x7fffffff: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label3:
        c2 = 9;

        s3 = 0;

        b4 = 8;

        $r6 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        $c7 = c2 & 65535;

        $i8 = -2147287040 | $c7;

        interfaceinvoke $r6.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>($i8);

        $r8 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        $s9 = s3 & 255;

        $i10 = $s9 << 24;

        $i11 = b4 & 16777215;

        $i12 = $i10 | $i11;

        interfaceinvoke $r8.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>($i12);

        $r9 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        interfaceinvoke $r9.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>(i0);

        $r13 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        $i13 = (int) l1;

        interfaceinvoke $r13.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeInt(int)>($i13);

        $r15 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        interfaceinvoke $r15.<com.android.okio.BufferedSink: void flush()>();

        return;
    }

    public synchronized void close() throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.Spdy3$Writer r0;
        com.android.okio.BufferedSink $r1, $r2;

        r0 := @this: com.android.okhttp.internal.spdy.Spdy3$Writer;

        r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: boolean closed> = 1;

        $r2 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink sink>;

        $r1 = r0.<com.android.okhttp.internal.spdy.Spdy3$Writer: com.android.okio.BufferedSink headerBlockOut>;

        staticinvoke <com.android.okhttp.internal.Util: void closeAll(java.io.Closeable,java.io.Closeable)>($r2, $r1);

        return;
    }
}
