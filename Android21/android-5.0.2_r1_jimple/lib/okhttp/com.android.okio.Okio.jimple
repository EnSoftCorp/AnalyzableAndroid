public final class com.android.okio.Okio extends java.lang.Object
{

    private void <init>()
    {
        com.android.okio.Okio r0;

        r0 := @this: com.android.okio.Okio;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.android.okio.BufferedSource buffer(com.android.okio.Source)
    {
        com.android.okio.Source r0;
        com.android.okio.RealBufferedSource $r1;

        r0 := @parameter0: com.android.okio.Source;

        $r1 = new com.android.okio.RealBufferedSource;

        specialinvoke $r1.<com.android.okio.RealBufferedSource: void <init>(com.android.okio.Source)>(r0);

        return $r1;
    }

    public static com.android.okio.BufferedSink buffer(com.android.okio.Sink)
    {
        com.android.okio.Sink r0;
        com.android.okio.RealBufferedSink $r1;

        r0 := @parameter0: com.android.okio.Sink;

        $r1 = new com.android.okio.RealBufferedSink;

        specialinvoke $r1.<com.android.okio.RealBufferedSink: void <init>(com.android.okio.Sink)>(r0);

        return $r1;
    }

    public static void copy(com.android.okio.OkBuffer, long, long, java.io.OutputStream) throws java.io.IOException
    {
        com.android.okio.OkBuffer r0;
        long l0, l1, $l4, $l8, $l11, $l14, $l15, $l17, $l19, $l22;
        java.io.OutputStream r1;
        com.android.okio.Segment r2;
        int i2, i3, $i5, $i6, $i7, $i12, $i13, $i16, $i18, $i20, $i21;
        byte $b9, $b10;
        byte[] $r3;

        r0 := @parameter0: com.android.okio.OkBuffer;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r1 := @parameter3: java.io.OutputStream;

        $l4 = r0.<com.android.okio.OkBuffer: long size>;

        staticinvoke <com.android.okio.Util: void checkOffsetAndCount(long,long,long)>($l4, l0, l1);

        r2 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

     label1:
        $i6 = r2.<com.android.okio.Segment: int limit>;

        $i5 = r2.<com.android.okio.Segment: int pos>;

        $i7 = $i6 - $i5;

        $l8 = (long) $i7;

        $b9 = l0 cmp $l8;

        if $b9 < 0 goto label2;

        $i21 = r2.<com.android.okio.Segment: int limit>;

        $i18 = r2.<com.android.okio.Segment: int pos>;

        $i20 = $i21 - $i18;

        $l22 = (long) $i20;

        l0 = l0 - $l22;

        r2 = r2.<com.android.okio.Segment: com.android.okio.Segment next>;

        goto label1;

     label2:
        $b10 = l1 cmp 0L;

        if $b10 <= 0 goto label3;

        $i12 = r2.<com.android.okio.Segment: int pos>;

        $l11 = (long) $i12;

        $l14 = $l11 + l0;

        i2 = (int) $l14;

        $i13 = r2.<com.android.okio.Segment: int limit>;

        $i16 = $i13 - i2;

        $l15 = (long) $i16;

        $l17 = staticinvoke <java.lang.Math: long min(long,long)>($l15, l1);

        i3 = (int) $l17;

        $r3 = r2.<com.android.okio.Segment: byte[] data>;

        virtualinvoke r1.<java.io.OutputStream: void write(byte[],int,int)>($r3, i2, i3);

        $l19 = (long) i3;

        l1 = l1 - $l19;

        l0 = 0L;

        goto label2;

     label3:
        return;
    }

    public static com.android.okio.Sink sink(java.io.OutputStream)
    {
        java.io.OutputStream r0;
        com.android.okio.Okio$1 $r1;

        r0 := @parameter0: java.io.OutputStream;

        $r1 = new com.android.okio.Okio$1;

        specialinvoke $r1.<com.android.okio.Okio$1: void <init>(java.io.OutputStream)>(r0);

        return $r1;
    }

    public static com.android.okio.Source source(java.io.InputStream)
    {
        java.io.InputStream r0;
        com.android.okio.Okio$2 $r1;

        r0 := @parameter0: java.io.InputStream;

        $r1 = new com.android.okio.Okio$2;

        specialinvoke $r1.<com.android.okio.Okio$2: void <init>(java.io.InputStream)>(r0);

        return $r1;
    }
}
