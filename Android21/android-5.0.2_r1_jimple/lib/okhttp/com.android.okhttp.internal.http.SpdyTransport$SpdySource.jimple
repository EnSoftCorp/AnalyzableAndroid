class com.android.okhttp.internal.http.SpdyTransport$SpdySource extends java.lang.Object implements com.android.okio.Source
{
    private final com.android.okhttp.internal.spdy.SpdyStream stream;
    private final com.android.okio.Source source;
    private final java.net.CacheRequest cacheRequest;
    private final java.io.OutputStream cacheBody;
    private boolean inputExhausted;
    private boolean closed;

    void <init>(com.android.okhttp.internal.spdy.SpdyStream, java.net.CacheRequest) throws java.io.IOException
    {
        com.android.okhttp.internal.http.SpdyTransport$SpdySource r0;
        com.android.okhttp.internal.spdy.SpdyStream r1;
        java.net.CacheRequest r2;
        java.io.OutputStream r3, $r5;
        com.android.okio.Source $r4;

        r0 := @this: com.android.okhttp.internal.http.SpdyTransport$SpdySource;

        r1 := @parameter0: com.android.okhttp.internal.spdy.SpdyStream;

        r2 := @parameter1: java.net.CacheRequest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.okhttp.internal.http.SpdyTransport$SpdySource: com.android.okhttp.internal.spdy.SpdyStream stream> = r1;

        $r4 = virtualinvoke r1.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okio.Source getSource()>();

        r0.<com.android.okhttp.internal.http.SpdyTransport$SpdySource: com.android.okio.Source source> = $r4;

        if r2 == null goto label1;

        $r5 = virtualinvoke r2.<java.net.CacheRequest: java.io.OutputStream getBody()>();

        goto label2;

     label1:
        $r5 = null;

     label2:
        r3 = $r5;

        if r3 != null goto label3;

        r2 = null;

     label3:
        r0.<com.android.okhttp.internal.http.SpdyTransport$SpdySource: java.io.OutputStream cacheBody> = r3;

        r0.<com.android.okhttp.internal.http.SpdyTransport$SpdySource: java.net.CacheRequest cacheRequest> = r2;

        return;
    }

    public long read(com.android.okio.OkBuffer, long) throws java.io.IOException
    {
        com.android.okhttp.internal.http.SpdyTransport$SpdySource r0;
        com.android.okio.OkBuffer r1;
        long l0, l1, $l4, $l5;
        byte $b2, $b3;
        boolean $z0, $z1;
        com.android.okio.Source $r2;
        java.io.OutputStream $r3, $r4, $r5;
        java.net.CacheRequest $r6;
        java.lang.IllegalArgumentException $r7;
        java.lang.IllegalStateException $r8;
        java.lang.StringBuilder $r9, $r10, $r12;
        java.lang.String $r11;

        r0 := @this: com.android.okhttp.internal.http.SpdyTransport$SpdySource;

        r1 := @parameter0: com.android.okio.OkBuffer;

        l0 := @parameter1: long;

        $b2 = l0 cmp 0L;

        if $b2 >= 0 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("byteCount < 0: ");

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label1:
        $z0 = r0.<com.android.okhttp.internal.http.SpdyTransport$SpdySource: boolean closed>;

        if $z0 == 0 goto label2;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("closed");

        throw $r8;

     label2:
        $z1 = r0.<com.android.okhttp.internal.http.SpdyTransport$SpdySource: boolean inputExhausted>;

        if $z1 == 0 goto label3;

        return -1L;

     label3:
        $r2 = r0.<com.android.okhttp.internal.http.SpdyTransport$SpdySource: com.android.okio.Source source>;

        l1 = interfaceinvoke $r2.<com.android.okio.Source: long read(com.android.okio.OkBuffer,long)>(r1, l0);

        $b3 = l1 cmp -1L;

        if $b3 != 0 goto label5;

        r0.<com.android.okhttp.internal.http.SpdyTransport$SpdySource: boolean inputExhausted> = 1;

        $r6 = r0.<com.android.okhttp.internal.http.SpdyTransport$SpdySource: java.net.CacheRequest cacheRequest>;

        if $r6 == null goto label4;

        $r5 = r0.<com.android.okhttp.internal.http.SpdyTransport$SpdySource: java.io.OutputStream cacheBody>;

        virtualinvoke $r5.<java.io.OutputStream: void close()>();

     label4:
        return -1L;

     label5:
        $r3 = r0.<com.android.okhttp.internal.http.SpdyTransport$SpdySource: java.io.OutputStream cacheBody>;

        if $r3 == null goto label6;

        $l4 = virtualinvoke r1.<com.android.okio.OkBuffer: long size()>();

        $l5 = $l4 - l1;

        $r4 = r0.<com.android.okhttp.internal.http.SpdyTransport$SpdySource: java.io.OutputStream cacheBody>;

        staticinvoke <com.android.okio.Okio: void copy(com.android.okio.OkBuffer,long,long,java.io.OutputStream)>(r1, $l5, l1, $r4);

     label6:
        return l1;
    }

    public com.android.okio.Source deadline(com.android.okio.Deadline)
    {
        com.android.okhttp.internal.http.SpdyTransport$SpdySource r0;
        com.android.okio.Deadline r1;
        com.android.okio.Source $r2;

        r0 := @this: com.android.okhttp.internal.http.SpdyTransport$SpdySource;

        r1 := @parameter0: com.android.okio.Deadline;

        $r2 = r0.<com.android.okhttp.internal.http.SpdyTransport$SpdySource: com.android.okio.Source source>;

        interfaceinvoke $r2.<com.android.okio.Source: com.android.okio.Source deadline(com.android.okio.Deadline)>(r1);

        return r0;
    }

    public void close() throws java.io.IOException
    {
        com.android.okhttp.internal.http.SpdyTransport$SpdySource r0;
        boolean $z0, $z1, $z2;
        com.android.okhttp.internal.spdy.ErrorCode $r1;
        com.android.okhttp.internal.spdy.SpdyStream $r2;
        java.net.CacheRequest $r3, $r4;
        java.io.OutputStream $r5;

        r0 := @this: com.android.okhttp.internal.http.SpdyTransport$SpdySource;

        $z0 = r0.<com.android.okhttp.internal.http.SpdyTransport$SpdySource: boolean closed>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $z1 = r0.<com.android.okhttp.internal.http.SpdyTransport$SpdySource: boolean inputExhausted>;

        if $z1 != 0 goto label2;

        $r5 = r0.<com.android.okhttp.internal.http.SpdyTransport$SpdySource: java.io.OutputStream cacheBody>;

        if $r5 == null goto label2;

        specialinvoke r0.<com.android.okhttp.internal.http.SpdyTransport$SpdySource: boolean discardStream()>();

     label2:
        r0.<com.android.okhttp.internal.http.SpdyTransport$SpdySource: boolean closed> = 1;

        $z2 = r0.<com.android.okhttp.internal.http.SpdyTransport$SpdySource: boolean inputExhausted>;

        if $z2 != 0 goto label3;

        $r2 = r0.<com.android.okhttp.internal.http.SpdyTransport$SpdySource: com.android.okhttp.internal.spdy.SpdyStream stream>;

        $r1 = <com.android.okhttp.internal.spdy.ErrorCode: com.android.okhttp.internal.spdy.ErrorCode CANCEL>;

        virtualinvoke $r2.<com.android.okhttp.internal.spdy.SpdyStream: void closeLater(com.android.okhttp.internal.spdy.ErrorCode)>($r1);

        $r3 = r0.<com.android.okhttp.internal.http.SpdyTransport$SpdySource: java.net.CacheRequest cacheRequest>;

        if $r3 == null goto label3;

        $r4 = r0.<com.android.okhttp.internal.http.SpdyTransport$SpdySource: java.net.CacheRequest cacheRequest>;

        virtualinvoke $r4.<java.net.CacheRequest: void abort()>();

     label3:
        return;
    }

    private boolean discardStream()
    {
        com.android.okhttp.internal.http.SpdyTransport$SpdySource r0;
        long l0;
        boolean z0;
        java.lang.Throwable r1, $r8;
        com.android.okhttp.internal.spdy.SpdyStream $r3, $r4, $r5, $r6, $r9;
        java.io.IOException $r7;

        r0 := @this: com.android.okhttp.internal.http.SpdyTransport$SpdySource;

     label1:
        $r3 = r0.<com.android.okhttp.internal.http.SpdyTransport$SpdySource: com.android.okhttp.internal.spdy.SpdyStream stream>;

        l0 = virtualinvoke $r3.<com.android.okhttp.internal.spdy.SpdyStream: long getReadTimeoutMillis()>();

        $r4 = r0.<com.android.okhttp.internal.http.SpdyTransport$SpdySource: com.android.okhttp.internal.spdy.SpdyStream stream>;

        virtualinvoke $r4.<com.android.okhttp.internal.spdy.SpdyStream: void setReadTimeout(long)>(l0);

        $r5 = r0.<com.android.okhttp.internal.http.SpdyTransport$SpdySource: com.android.okhttp.internal.spdy.SpdyStream stream>;

        virtualinvoke $r5.<com.android.okhttp.internal.spdy.SpdyStream: void setReadTimeout(long)>(100L);

     label2:
        staticinvoke <com.android.okhttp.internal.Util: boolean skipAll(com.android.okio.Source,int)>(r0, 100);

        z0 = 1;

     label3:
        $r6 = r0.<com.android.okhttp.internal.http.SpdyTransport$SpdySource: com.android.okhttp.internal.spdy.SpdyStream stream>;

        virtualinvoke $r6.<com.android.okhttp.internal.spdy.SpdyStream: void setReadTimeout(long)>(l0);

     label4:
        return z0;

     label5:
        $r8 := @caughtexception;

        r1 = $r8;

     label6:
        $r9 = r0.<com.android.okhttp.internal.http.SpdyTransport$SpdySource: com.android.okhttp.internal.spdy.SpdyStream stream>;

        virtualinvoke $r9.<com.android.okhttp.internal.spdy.SpdyStream: void setReadTimeout(long)>(l0);

        throw r1;

     label7:
        $r7 := @caughtexception;

        return 0;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
        catch java.io.IOException from label1 to label4 with label7;
        catch java.io.IOException from label5 to label7 with label7;
    }
}
