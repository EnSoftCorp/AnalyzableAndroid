final class com.android.okhttp.Request$Body$2 extends com.android.okhttp.Request$Body
{
    final com.android.okhttp.MediaType val$contentType;
    final java.io.File val$file;

    void <init>(com.android.okhttp.MediaType, java.io.File)
    {
        com.android.okhttp.Request$Body$2 r0;
        com.android.okhttp.MediaType r1;
        java.io.File r2;

        r0 := @this: com.android.okhttp.Request$Body$2;

        r1 := @parameter0: com.android.okhttp.MediaType;

        r2 := @parameter1: java.io.File;

        r0.<com.android.okhttp.Request$Body$2: com.android.okhttp.MediaType val$contentType> = r1;

        r0.<com.android.okhttp.Request$Body$2: java.io.File val$file> = r2;

        specialinvoke r0.<com.android.okhttp.Request$Body: void <init>()>();

        return;
    }

    public com.android.okhttp.MediaType contentType()
    {
        com.android.okhttp.Request$Body$2 r0;
        com.android.okhttp.MediaType $r1;

        r0 := @this: com.android.okhttp.Request$Body$2;

        $r1 = r0.<com.android.okhttp.Request$Body$2: com.android.okhttp.MediaType val$contentType>;

        return $r1;
    }

    public long contentLength()
    {
        com.android.okhttp.Request$Body$2 r0;
        java.io.File $r1;
        long $l0;

        r0 := @this: com.android.okhttp.Request$Body$2;

        $r1 = r0.<com.android.okhttp.Request$Body$2: java.io.File val$file>;

        $l0 = virtualinvoke $r1.<java.io.File: long length()>();

        return $l0;
    }

    public void writeTo(com.android.okio.BufferedSink) throws java.io.IOException
    {
        com.android.okhttp.Request$Body$2 r0;
        com.android.okio.BufferedSink r1;
        long l0, $l3;
        java.io.FileInputStream r2, $r5;
        byte[] r3;
        int i1, $i4, $i5;
        java.lang.Throwable r4, $r8;
        byte $b2;
        java.io.File $r6;

        r0 := @this: com.android.okhttp.Request$Body$2;

        r1 := @parameter0: com.android.okio.BufferedSink;

        l0 = virtualinvoke r0.<com.android.okhttp.Request$Body$2: long contentLength()>();

        $b2 = l0 cmp 0L;

        if $b2 != 0 goto label1;

        return;

     label1:
        r2 = null;

     label2:
        $r5 = new java.io.FileInputStream;

        $r6 = r0.<com.android.okhttp.Request$Body$2: java.io.File val$file>;

        specialinvoke $r5.<java.io.FileInputStream: void <init>(java.io.File)>($r6);

        r2 = $r5;

        $l3 = staticinvoke <java.lang.Math: long min(long,long)>(8192L, l0);

        $i4 = (int) $l3;

        r3 = newarray (byte)[$i4];

     label3:
        $i5 = virtualinvoke r2.<java.io.InputStream: int read(byte[])>(r3);

        i1 = $i5;

        if $i5 == -1 goto label4;

        interfaceinvoke r1.<com.android.okio.BufferedSink: com.android.okio.BufferedSink write(byte[],int,int)>(r3, 0, i1);

        goto label3;

     label4:
        staticinvoke <com.android.okhttp.internal.Util: void closeQuietly(java.io.Closeable)>(r2);

        goto label7;

     label5:
        $r8 := @caughtexception;

        r4 = $r8;

     label6:
        staticinvoke <com.android.okhttp.internal.Util: void closeQuietly(java.io.Closeable)>(r2);

        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }
}
