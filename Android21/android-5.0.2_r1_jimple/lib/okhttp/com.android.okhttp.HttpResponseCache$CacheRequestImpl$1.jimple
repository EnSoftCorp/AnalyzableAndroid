class com.android.okhttp.HttpResponseCache$CacheRequestImpl$1 extends java.io.FilterOutputStream
{
    final com.android.okhttp.HttpResponseCache val$this$0;
    final com.android.okhttp.internal.DiskLruCache$Editor val$editor;
    final com.android.okhttp.HttpResponseCache$CacheRequestImpl this$1;

    void <init>(com.android.okhttp.HttpResponseCache$CacheRequestImpl, java.io.OutputStream, com.android.okhttp.HttpResponseCache, com.android.okhttp.internal.DiskLruCache$Editor)
    {
        com.android.okhttp.HttpResponseCache$CacheRequestImpl$1 r0;
        com.android.okhttp.HttpResponseCache$CacheRequestImpl r1;
        java.io.OutputStream r2;
        com.android.okhttp.HttpResponseCache r3;
        com.android.okhttp.internal.DiskLruCache$Editor r4;

        r0 := @this: com.android.okhttp.HttpResponseCache$CacheRequestImpl$1;

        r1 := @parameter0: com.android.okhttp.HttpResponseCache$CacheRequestImpl;

        r2 := @parameter1: java.io.OutputStream;

        r3 := @parameter2: com.android.okhttp.HttpResponseCache;

        r4 := @parameter3: com.android.okhttp.internal.DiskLruCache$Editor;

        r0.<com.android.okhttp.HttpResponseCache$CacheRequestImpl$1: com.android.okhttp.HttpResponseCache$CacheRequestImpl this$1> = r1;

        r0.<com.android.okhttp.HttpResponseCache$CacheRequestImpl$1: com.android.okhttp.HttpResponseCache val$this$0> = r3;

        r0.<com.android.okhttp.HttpResponseCache$CacheRequestImpl$1: com.android.okhttp.internal.DiskLruCache$Editor val$editor> = r4;

        specialinvoke r0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>(r2);

        return;
    }

    public void close() throws java.io.IOException
    {
        com.android.okhttp.HttpResponseCache$CacheRequestImpl$1 r0;
        com.android.okhttp.HttpResponseCache r1, $r4, $r8;
        java.lang.Throwable r2, $r10;
        com.android.okhttp.HttpResponseCache$CacheRequestImpl $r3, $r5, $r6, $r7;
        boolean $z0;
        com.android.okhttp.internal.DiskLruCache$Editor $r9;

        r0 := @this: com.android.okhttp.HttpResponseCache$CacheRequestImpl$1;

        $r3 = r0.<com.android.okhttp.HttpResponseCache$CacheRequestImpl$1: com.android.okhttp.HttpResponseCache$CacheRequestImpl this$1>;

        $r4 = $r3.<com.android.okhttp.HttpResponseCache$CacheRequestImpl: com.android.okhttp.HttpResponseCache this$0>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.okhttp.HttpResponseCache$CacheRequestImpl$1: com.android.okhttp.HttpResponseCache$CacheRequestImpl this$1>;

        $z0 = staticinvoke <com.android.okhttp.HttpResponseCache$CacheRequestImpl: boolean access$100(com.android.okhttp.HttpResponseCache$CacheRequestImpl)>($r5);

        if $z0 == 0 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        $r6 = r0.<com.android.okhttp.HttpResponseCache$CacheRequestImpl$1: com.android.okhttp.HttpResponseCache$CacheRequestImpl this$1>;

        staticinvoke <com.android.okhttp.HttpResponseCache$CacheRequestImpl: boolean access$102(com.android.okhttp.HttpResponseCache$CacheRequestImpl,boolean)>($r6, 1);

        $r7 = r0.<com.android.okhttp.HttpResponseCache$CacheRequestImpl$1: com.android.okhttp.HttpResponseCache$CacheRequestImpl this$1>;

        $r8 = $r7.<com.android.okhttp.HttpResponseCache$CacheRequestImpl: com.android.okhttp.HttpResponseCache this$0>;

        staticinvoke <com.android.okhttp.HttpResponseCache: int access$208(com.android.okhttp.HttpResponseCache)>($r8);

        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r10 := @caughtexception;

        r2 = $r10;

        exitmonitor r1;

     label6:
        throw r2;

     label7:
        specialinvoke r0.<java.io.FilterOutputStream: void close()>();

        $r9 = r0.<com.android.okhttp.HttpResponseCache$CacheRequestImpl$1: com.android.okhttp.internal.DiskLruCache$Editor val$editor>;

        virtualinvoke $r9.<com.android.okhttp.internal.DiskLruCache$Editor: void commit()>();

        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        com.android.okhttp.HttpResponseCache$CacheRequestImpl$1 r0;
        byte[] r1;
        int i0, i1;
        java.io.OutputStream $r2;

        r0 := @this: com.android.okhttp.HttpResponseCache$CacheRequestImpl$1;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.okhttp.HttpResponseCache$CacheRequestImpl$1: java.io.OutputStream out>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>(r1, i0, i1);

        return;
    }
}
