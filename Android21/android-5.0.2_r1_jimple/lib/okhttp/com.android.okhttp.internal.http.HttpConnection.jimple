public final class com.android.okhttp.internal.http.HttpConnection extends java.lang.Object
{
    private static final int STATE_IDLE;
    private static final int STATE_OPEN_REQUEST_BODY;
    private static final int STATE_WRITING_REQUEST_BODY;
    private static final int STATE_READ_RESPONSE_HEADERS;
    private static final int STATE_OPEN_RESPONSE_BODY;
    private static final int STATE_READING_RESPONSE_BODY;
    private static final int STATE_CLOSED;
    private static final int ON_IDLE_HOLD;
    private static final int ON_IDLE_POOL;
    private static final int ON_IDLE_CLOSE;
    private final com.android.okhttp.ConnectionPool pool;
    private final com.android.okhttp.Connection connection;
    private final java.net.Socket socket;
    private final com.android.okio.BufferedSource source;
    private final com.android.okio.BufferedSink sink;
    private int state;
    private int onIdle;
    private static final java.lang.String CRLF;
    private static final byte[] HEX_DIGITS;
    private static final byte[] FINAL_CHUNK;

    public void <init>(com.android.okhttp.ConnectionPool, com.android.okhttp.Connection, java.net.Socket) throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpConnection r0;
        com.android.okhttp.ConnectionPool r1;
        com.android.okhttp.Connection r2;
        java.net.Socket r3;
        java.io.InputStream $r4;
        com.android.okio.Source $r5;
        com.android.okio.BufferedSource $r6;
        java.io.OutputStream $r7;
        com.android.okio.Sink $r8;
        com.android.okio.BufferedSink $r9;

        r0 := @this: com.android.okhttp.internal.http.HttpConnection;

        r1 := @parameter0: com.android.okhttp.ConnectionPool;

        r2 := @parameter1: com.android.okhttp.Connection;

        r3 := @parameter2: java.net.Socket;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.okhttp.internal.http.HttpConnection: int state> = 0;

        r0.<com.android.okhttp.internal.http.HttpConnection: int onIdle> = 0;

        r0.<com.android.okhttp.internal.http.HttpConnection: com.android.okhttp.ConnectionPool pool> = r1;

        r0.<com.android.okhttp.internal.http.HttpConnection: com.android.okhttp.Connection connection> = r2;

        r0.<com.android.okhttp.internal.http.HttpConnection: java.net.Socket socket> = r3;

        $r4 = virtualinvoke r3.<java.net.Socket: java.io.InputStream getInputStream()>();

        $r5 = staticinvoke <com.android.okio.Okio: com.android.okio.Source source(java.io.InputStream)>($r4);

        $r6 = staticinvoke <com.android.okio.Okio: com.android.okio.BufferedSource buffer(com.android.okio.Source)>($r5);

        r0.<com.android.okhttp.internal.http.HttpConnection: com.android.okio.BufferedSource source> = $r6;

        $r7 = virtualinvoke r3.<java.net.Socket: java.io.OutputStream getOutputStream()>();

        $r8 = staticinvoke <com.android.okio.Okio: com.android.okio.Sink sink(java.io.OutputStream)>($r7);

        $r9 = staticinvoke <com.android.okio.Okio: com.android.okio.BufferedSink buffer(com.android.okio.Sink)>($r8);

        r0.<com.android.okhttp.internal.http.HttpConnection: com.android.okio.BufferedSink sink> = $r9;

        return;
    }

    public void poolOnIdle()
    {
        com.android.okhttp.internal.http.HttpConnection r0;
        int $i0;
        com.android.okhttp.Connection $r1;
        com.android.okhttp.ConnectionPool $r2;

        r0 := @this: com.android.okhttp.internal.http.HttpConnection;

        r0.<com.android.okhttp.internal.http.HttpConnection: int onIdle> = 1;

        $i0 = r0.<com.android.okhttp.internal.http.HttpConnection: int state>;

        if $i0 != 0 goto label1;

        r0.<com.android.okhttp.internal.http.HttpConnection: int onIdle> = 0;

        $r2 = r0.<com.android.okhttp.internal.http.HttpConnection: com.android.okhttp.ConnectionPool pool>;

        $r1 = r0.<com.android.okhttp.internal.http.HttpConnection: com.android.okhttp.Connection connection>;

        virtualinvoke $r2.<com.android.okhttp.ConnectionPool: void recycle(com.android.okhttp.Connection)>($r1);

     label1:
        return;
    }

    public void closeOnIdle() throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpConnection r0;
        int $i0;
        com.android.okhttp.Connection $r1;

        r0 := @this: com.android.okhttp.internal.http.HttpConnection;

        r0.<com.android.okhttp.internal.http.HttpConnection: int onIdle> = 2;

        $i0 = r0.<com.android.okhttp.internal.http.HttpConnection: int state>;

        if $i0 != 0 goto label1;

        r0.<com.android.okhttp.internal.http.HttpConnection: int state> = 6;

        $r1 = r0.<com.android.okhttp.internal.http.HttpConnection: com.android.okhttp.Connection connection>;

        virtualinvoke $r1.<com.android.okhttp.Connection: void close()>();

     label1:
        return;
    }

    public boolean isClosed()
    {
        com.android.okhttp.internal.http.HttpConnection r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.okhttp.internal.http.HttpConnection;

        $i0 = r0.<com.android.okhttp.internal.http.HttpConnection: int state>;

        if $i0 != 6 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void flush() throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpConnection r0;
        com.android.okio.BufferedSink $r1;

        r0 := @this: com.android.okhttp.internal.http.HttpConnection;

        $r1 = r0.<com.android.okhttp.internal.http.HttpConnection: com.android.okio.BufferedSink sink>;

        interfaceinvoke $r1.<com.android.okio.BufferedSink: void flush()>();

        return;
    }

    public long bufferSize()
    {
        com.android.okhttp.internal.http.HttpConnection r0;
        com.android.okio.BufferedSource $r1;
        com.android.okio.OkBuffer $r2;
        long $l0;

        r0 := @this: com.android.okhttp.internal.http.HttpConnection;

        $r1 = r0.<com.android.okhttp.internal.http.HttpConnection: com.android.okio.BufferedSource source>;

        $r2 = interfaceinvoke $r1.<com.android.okio.BufferedSource: com.android.okio.OkBuffer buffer()>();

        $l0 = virtualinvoke $r2.<com.android.okio.OkBuffer: long size()>();

        return $l0;
    }

    public boolean isReadable()
    {
        com.android.okhttp.internal.http.HttpConnection r0;
        int i0;
        boolean z0, $z1, z2;
        java.lang.Throwable r1, $r7;
        java.net.Socket $r2, $r3, $r5, $r6, $r8;
        com.android.okio.BufferedSource $r4;
        java.net.SocketTimeoutException $r9;
        java.io.IOException $r10;

        r0 := @this: com.android.okhttp.internal.http.HttpConnection;

     label01:
        $r2 = r0.<com.android.okhttp.internal.http.HttpConnection: java.net.Socket socket>;

        i0 = virtualinvoke $r2.<java.net.Socket: int getSoTimeout()>();

     label02:
        $r3 = r0.<com.android.okhttp.internal.http.HttpConnection: java.net.Socket socket>;

        virtualinvoke $r3.<java.net.Socket: void setSoTimeout(int)>(1);

        $r4 = r0.<com.android.okhttp.internal.http.HttpConnection: com.android.okio.BufferedSource source>;

        $z1 = interfaceinvoke $r4.<com.android.okio.BufferedSource: boolean exhausted()>();

        if $z1 == 0 goto label05;

        z0 = 0;

     label03:
        $r6 = r0.<com.android.okhttp.internal.http.HttpConnection: java.net.Socket socket>;

        virtualinvoke $r6.<java.net.Socket: void setSoTimeout(int)>(i0);

     label04:
        return z0;

     label05:
        z2 = 1;

     label06:
        $r5 = r0.<com.android.okhttp.internal.http.HttpConnection: java.net.Socket socket>;

        virtualinvoke $r5.<java.net.Socket: void setSoTimeout(int)>(i0);

     label07:
        return z2;

     label08:
        $r7 := @caughtexception;

        r1 = $r7;

     label09:
        $r8 = r0.<com.android.okhttp.internal.http.HttpConnection: java.net.Socket socket>;

        virtualinvoke $r8.<java.net.Socket: void setSoTimeout(int)>(i0);

        throw r1;

     label10:
        $r9 := @caughtexception;

        return 1;

     label11:
        $r10 := @caughtexception;

        return 0;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
        catch java.net.SocketTimeoutException from label01 to label04 with label10;
        catch java.net.SocketTimeoutException from label05 to label07 with label10;
        catch java.net.SocketTimeoutException from label08 to label10 with label10;
        catch java.io.IOException from label01 to label04 with label11;
        catch java.io.IOException from label05 to label07 with label11;
        catch java.io.IOException from label08 to label10 with label11;
    }

    public void writeRequest(com.android.okhttp.Headers, java.lang.String) throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpConnection r0;
        com.android.okhttp.Headers r1;
        java.lang.String r2, $r9, $r12, $r18;
        int i0, $i1, $i2, $i3;
        com.android.okio.BufferedSink $r3, $r4, $r6, $r8, $r10, $r11, $r14;
        java.lang.StringBuilder $r15, $r17, $r19;
        java.lang.IllegalStateException $r16;

        r0 := @this: com.android.okhttp.internal.http.HttpConnection;

        r1 := @parameter0: com.android.okhttp.Headers;

        r2 := @parameter1: java.lang.String;

        $i1 = r0.<com.android.okhttp.internal.http.HttpConnection: int state>;

        if $i1 == 0 goto label1;

        $r16 = new java.lang.IllegalStateException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("state: ");

        $i3 = r0.<com.android.okhttp.internal.http.HttpConnection: int state>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r18);

        throw $r16;

     label1:
        $r3 = r0.<com.android.okhttp.internal.http.HttpConnection: com.android.okio.BufferedSink sink>;

        $r4 = interfaceinvoke $r3.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeUtf8(java.lang.String)>(r2);

        interfaceinvoke $r4.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeUtf8(java.lang.String)>("\r\n");

        i0 = 0;

     label2:
        $i2 = virtualinvoke r1.<com.android.okhttp.Headers: int size()>();

        if i0 >= $i2 goto label3;

        $r8 = r0.<com.android.okhttp.internal.http.HttpConnection: com.android.okio.BufferedSink sink>;

        $r9 = virtualinvoke r1.<com.android.okhttp.Headers: java.lang.String name(int)>(i0);

        $r10 = interfaceinvoke $r8.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeUtf8(java.lang.String)>($r9);

        $r11 = interfaceinvoke $r10.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeUtf8(java.lang.String)>(": ");

        $r12 = virtualinvoke r1.<com.android.okhttp.Headers: java.lang.String value(int)>(i0);

        $r14 = interfaceinvoke $r11.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeUtf8(java.lang.String)>($r12);

        interfaceinvoke $r14.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeUtf8(java.lang.String)>("\r\n");

        i0 = i0 + 1;

        goto label2;

     label3:
        $r6 = r0.<com.android.okhttp.internal.http.HttpConnection: com.android.okio.BufferedSink sink>;

        interfaceinvoke $r6.<com.android.okio.BufferedSink: com.android.okio.BufferedSink writeUtf8(java.lang.String)>("\r\n");

        r0.<com.android.okhttp.internal.http.HttpConnection: int state> = 1;

        return;
    }

    public com.android.okhttp.Response$Builder readResponse() throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpConnection r0;
        java.lang.String r1, $r11, $r12, $r20;
        com.android.okhttp.internal.http.StatusLine r2, $r6;
        com.android.okhttp.Response$Builder r3, $r7, $r8;
        com.android.okhttp.Headers$Builder r4, $r14;
        int $i0, $i1, $i2, $i3;
        com.android.okio.BufferedSource $r5;
        com.android.okhttp.Protocol $r9;
        com.android.okio.ByteString $r10;
        com.android.okhttp.Headers $r13;
        java.lang.IllegalStateException $r16;
        java.lang.StringBuilder $r17, $r18, $r19;

        r0 := @this: com.android.okhttp.internal.http.HttpConnection;

        $i0 = r0.<com.android.okhttp.internal.http.HttpConnection: int state>;

        if $i0 == 1 goto label1;

        $i2 = r0.<com.android.okhttp.internal.http.HttpConnection: int state>;

        if $i2 == 3 goto label1;

        $r16 = new java.lang.IllegalStateException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("state: ");

        $i3 = r0.<com.android.okhttp.internal.http.HttpConnection: int state>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r20);

        throw $r16;

     label1:
        $r5 = r0.<com.android.okhttp.internal.http.HttpConnection: com.android.okio.BufferedSource source>;

        r1 = interfaceinvoke $r5.<com.android.okio.BufferedSource: java.lang.String readUtf8LineStrict()>();

        $r6 = new com.android.okhttp.internal.http.StatusLine;

        specialinvoke $r6.<com.android.okhttp.internal.http.StatusLine: void <init>(java.lang.String)>(r1);

        r2 = $r6;

        $r7 = new com.android.okhttp.Response$Builder;

        specialinvoke $r7.<com.android.okhttp.Response$Builder: void <init>()>();

        $r8 = virtualinvoke $r7.<com.android.okhttp.Response$Builder: com.android.okhttp.Response$Builder statusLine(com.android.okhttp.internal.http.StatusLine)>(r2);

        $r11 = <com.android.okhttp.internal.http.OkHeaders: java.lang.String SELECTED_PROTOCOL>;

        $r9 = <com.android.okhttp.Protocol: com.android.okhttp.Protocol HTTP_11>;

        $r10 = $r9.<com.android.okhttp.Protocol: com.android.okio.ByteString name>;

        $r12 = virtualinvoke $r10.<com.android.okio.ByteString: java.lang.String utf8()>();

        r3 = virtualinvoke $r8.<com.android.okhttp.Response$Builder: com.android.okhttp.Response$Builder header(java.lang.String,java.lang.String)>($r11, $r12);

        $r14 = new com.android.okhttp.Headers$Builder;

        specialinvoke $r14.<com.android.okhttp.Headers$Builder: void <init>()>();

        r4 = $r14;

        virtualinvoke r0.<com.android.okhttp.internal.http.HttpConnection: void readHeaders(com.android.okhttp.Headers$Builder)>(r4);

        $r13 = virtualinvoke r4.<com.android.okhttp.Headers$Builder: com.android.okhttp.Headers build()>();

        virtualinvoke r3.<com.android.okhttp.Response$Builder: com.android.okhttp.Response$Builder headers(com.android.okhttp.Headers)>($r13);

        $i1 = virtualinvoke r2.<com.android.okhttp.internal.http.StatusLine: int code()>();

        if $i1 == 100 goto label2;

        r0.<com.android.okhttp.internal.http.HttpConnection: int state> = 4;

        return r3;

     label2:
        goto label1;
    }

    public void readHeaders(com.android.okhttp.Headers$Builder) throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpConnection r0;
        com.android.okhttp.Headers$Builder r1;
        java.lang.String r2, $r4;
        com.android.okio.BufferedSource $r3;
        int $i0;

        r0 := @this: com.android.okhttp.internal.http.HttpConnection;

        r1 := @parameter0: com.android.okhttp.Headers$Builder;

     label1:
        $r3 = r0.<com.android.okhttp.internal.http.HttpConnection: com.android.okio.BufferedSource source>;

        $r4 = interfaceinvoke $r3.<com.android.okio.BufferedSource: java.lang.String readUtf8LineStrict()>();

        r2 = $r4;

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i0 == 0 goto label2;

        virtualinvoke r1.<com.android.okhttp.Headers$Builder: com.android.okhttp.Headers$Builder addLine(java.lang.String)>(r2);

        goto label1;

     label2:
        return;
    }

    public boolean discard(com.android.okio.Source, int)
    {
        com.android.okhttp.internal.http.HttpConnection r0;
        com.android.okio.Source r1;
        int i0, i1;
        boolean z0;
        java.lang.Throwable r2, $r6;
        java.net.Socket $r3, $r4, $r5, $r7;
        java.io.IOException $r8;

        r0 := @this: com.android.okhttp.internal.http.HttpConnection;

        r1 := @parameter0: com.android.okio.Source;

        i0 := @parameter1: int;

     label1:
        $r3 = r0.<com.android.okhttp.internal.http.HttpConnection: java.net.Socket socket>;

        i1 = virtualinvoke $r3.<java.net.Socket: int getSoTimeout()>();

        $r4 = r0.<com.android.okhttp.internal.http.HttpConnection: java.net.Socket socket>;

        virtualinvoke $r4.<java.net.Socket: void setSoTimeout(int)>(i0);

     label2:
        z0 = staticinvoke <com.android.okhttp.internal.Util: boolean skipAll(com.android.okio.Source,int)>(r1, i0);

     label3:
        $r5 = r0.<com.android.okhttp.internal.http.HttpConnection: java.net.Socket socket>;

        virtualinvoke $r5.<java.net.Socket: void setSoTimeout(int)>(i1);

     label4:
        return z0;

     label5:
        $r6 := @caughtexception;

        r2 = $r6;

     label6:
        $r7 = r0.<com.android.okhttp.internal.http.HttpConnection: java.net.Socket socket>;

        virtualinvoke $r7.<java.net.Socket: void setSoTimeout(int)>(i1);

        throw r2;

     label7:
        $r8 := @caughtexception;

        return 0;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
        catch java.io.IOException from label1 to label4 with label7;
        catch java.io.IOException from label5 to label7 with label7;
    }

    public com.android.okio.Sink newChunkedSink()
    {
        com.android.okhttp.internal.http.HttpConnection r0;
        int $i0, $i1;
        com.android.okhttp.internal.http.HttpConnection$ChunkedSink $r1;
        java.lang.IllegalStateException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: com.android.okhttp.internal.http.HttpConnection;

        $i0 = r0.<com.android.okhttp.internal.http.HttpConnection: int state>;

        if $i0 == 1 goto label1;

        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("state: ");

        $i1 = r0.<com.android.okhttp.internal.http.HttpConnection: int state>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label1:
        r0.<com.android.okhttp.internal.http.HttpConnection: int state> = 2;

        $r1 = new com.android.okhttp.internal.http.HttpConnection$ChunkedSink;

        specialinvoke $r1.<com.android.okhttp.internal.http.HttpConnection$ChunkedSink: void <init>(com.android.okhttp.internal.http.HttpConnection,com.android.okhttp.internal.http.HttpConnection$1)>(r0, null);

        return $r1;
    }

    public com.android.okio.Sink newFixedLengthSink(long)
    {
        com.android.okhttp.internal.http.HttpConnection r0;
        long l0;
        int $i1, $i2;
        com.android.okhttp.internal.http.HttpConnection$FixedLengthSink $r1;
        java.lang.IllegalStateException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: com.android.okhttp.internal.http.HttpConnection;

        l0 := @parameter0: long;

        $i1 = r0.<com.android.okhttp.internal.http.HttpConnection: int state>;

        if $i1 == 1 goto label1;

        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("state: ");

        $i2 = r0.<com.android.okhttp.internal.http.HttpConnection: int state>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label1:
        r0.<com.android.okhttp.internal.http.HttpConnection: int state> = 2;

        $r1 = new com.android.okhttp.internal.http.HttpConnection$FixedLengthSink;

        specialinvoke $r1.<com.android.okhttp.internal.http.HttpConnection$FixedLengthSink: void <init>(com.android.okhttp.internal.http.HttpConnection,long,com.android.okhttp.internal.http.HttpConnection$1)>(r0, l0, null);

        return $r1;
    }

    public void writeRequestBody(com.android.okhttp.internal.http.RetryableSink) throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpConnection r0;
        com.android.okhttp.internal.http.RetryableSink r1;
        int $i0, $i1;
        com.android.okio.BufferedSink $r2;
        java.lang.IllegalStateException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: com.android.okhttp.internal.http.HttpConnection;

        r1 := @parameter0: com.android.okhttp.internal.http.RetryableSink;

        $i0 = r0.<com.android.okhttp.internal.http.HttpConnection: int state>;

        if $i0 == 1 goto label1;

        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("state: ");

        $i1 = r0.<com.android.okhttp.internal.http.HttpConnection: int state>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label1:
        r0.<com.android.okhttp.internal.http.HttpConnection: int state> = 3;

        $r2 = r0.<com.android.okhttp.internal.http.HttpConnection: com.android.okio.BufferedSink sink>;

        virtualinvoke r1.<com.android.okhttp.internal.http.RetryableSink: void writeToSocket(com.android.okio.BufferedSink)>($r2);

        return;
    }

    public com.android.okio.Source newFixedLengthSource(java.net.CacheRequest, long) throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpConnection r0;
        java.net.CacheRequest r1;
        long l0;
        int $i1, $i2;
        com.android.okhttp.internal.http.HttpConnection$FixedLengthSource $r2;
        java.lang.IllegalStateException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: com.android.okhttp.internal.http.HttpConnection;

        r1 := @parameter0: java.net.CacheRequest;

        l0 := @parameter1: long;

        $i1 = r0.<com.android.okhttp.internal.http.HttpConnection: int state>;

        if $i1 == 4 goto label1;

        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("state: ");

        $i2 = r0.<com.android.okhttp.internal.http.HttpConnection: int state>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label1:
        r0.<com.android.okhttp.internal.http.HttpConnection: int state> = 5;

        $r2 = new com.android.okhttp.internal.http.HttpConnection$FixedLengthSource;

        specialinvoke $r2.<com.android.okhttp.internal.http.HttpConnection$FixedLengthSource: void <init>(com.android.okhttp.internal.http.HttpConnection,java.net.CacheRequest,long)>(r0, r1, l0);

        return $r2;
    }

    public void emptyResponseBody() throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpConnection r0;

        r0 := @this: com.android.okhttp.internal.http.HttpConnection;

        virtualinvoke r0.<com.android.okhttp.internal.http.HttpConnection: com.android.okio.Source newFixedLengthSource(java.net.CacheRequest,long)>(null, 0L);

        return;
    }

    public com.android.okio.Source newChunkedSource(java.net.CacheRequest, com.android.okhttp.internal.http.HttpEngine) throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpConnection r0;
        java.net.CacheRequest r1;
        com.android.okhttp.internal.http.HttpEngine r2;
        int $i0, $i1;
        com.android.okhttp.internal.http.HttpConnection$ChunkedSource $r3;
        java.lang.IllegalStateException $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: com.android.okhttp.internal.http.HttpConnection;

        r1 := @parameter0: java.net.CacheRequest;

        r2 := @parameter1: com.android.okhttp.internal.http.HttpEngine;

        $i0 = r0.<com.android.okhttp.internal.http.HttpConnection: int state>;

        if $i0 == 4 goto label1;

        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("state: ");

        $i1 = r0.<com.android.okhttp.internal.http.HttpConnection: int state>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label1:
        r0.<com.android.okhttp.internal.http.HttpConnection: int state> = 5;

        $r3 = new com.android.okhttp.internal.http.HttpConnection$ChunkedSource;

        specialinvoke $r3.<com.android.okhttp.internal.http.HttpConnection$ChunkedSource: void <init>(com.android.okhttp.internal.http.HttpConnection,java.net.CacheRequest,com.android.okhttp.internal.http.HttpEngine)>(r0, r1, r2);

        return $r3;
    }

    public com.android.okio.Source newUnknownLengthSource(java.net.CacheRequest) throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpConnection r0;
        java.net.CacheRequest r1;
        int $i0, $i1;
        com.android.okhttp.internal.http.HttpConnection$UnknownLengthSource $r2;
        java.lang.IllegalStateException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: com.android.okhttp.internal.http.HttpConnection;

        r1 := @parameter0: java.net.CacheRequest;

        $i0 = r0.<com.android.okhttp.internal.http.HttpConnection: int state>;

        if $i0 == 4 goto label1;

        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("state: ");

        $i1 = r0.<com.android.okhttp.internal.http.HttpConnection: int state>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label1:
        r0.<com.android.okhttp.internal.http.HttpConnection: int state> = 5;

        $r2 = new com.android.okhttp.internal.http.HttpConnection$UnknownLengthSource;

        specialinvoke $r2.<com.android.okhttp.internal.http.HttpConnection$UnknownLengthSource: void <init>(com.android.okhttp.internal.http.HttpConnection,java.net.CacheRequest)>(r0, r1);

        return $r2;
    }

    static com.android.okio.BufferedSink access$200(com.android.okhttp.internal.http.HttpConnection)
    {
        com.android.okhttp.internal.http.HttpConnection r0;
        com.android.okio.BufferedSink $r1;

        r0 := @parameter0: com.android.okhttp.internal.http.HttpConnection;

        $r1 = r0.<com.android.okhttp.internal.http.HttpConnection: com.android.okio.BufferedSink sink>;

        return $r1;
    }

    static int access$302(com.android.okhttp.internal.http.HttpConnection, int)
    {
        com.android.okhttp.internal.http.HttpConnection r0;
        int i0;

        r0 := @parameter0: com.android.okhttp.internal.http.HttpConnection;

        i0 := @parameter1: int;

        r0.<com.android.okhttp.internal.http.HttpConnection: int state> = i0;

        return i0;
    }

    static byte[] access$400()
    {
        byte[] $r0;

        $r0 = <com.android.okhttp.internal.http.HttpConnection: byte[] FINAL_CHUNK>;

        return $r0;
    }

    static byte[] access$500()
    {
        byte[] $r0;

        $r0 = <com.android.okhttp.internal.http.HttpConnection: byte[] HEX_DIGITS>;

        return $r0;
    }

    static int access$300(com.android.okhttp.internal.http.HttpConnection)
    {
        com.android.okhttp.internal.http.HttpConnection r0;
        int $i0;

        r0 := @parameter0: com.android.okhttp.internal.http.HttpConnection;

        $i0 = r0.<com.android.okhttp.internal.http.HttpConnection: int state>;

        return $i0;
    }

    static int access$600(com.android.okhttp.internal.http.HttpConnection)
    {
        com.android.okhttp.internal.http.HttpConnection r0;
        int $i0;

        r0 := @parameter0: com.android.okhttp.internal.http.HttpConnection;

        $i0 = r0.<com.android.okhttp.internal.http.HttpConnection: int onIdle>;

        return $i0;
    }

    static int access$602(com.android.okhttp.internal.http.HttpConnection, int)
    {
        com.android.okhttp.internal.http.HttpConnection r0;
        int i0;

        r0 := @parameter0: com.android.okhttp.internal.http.HttpConnection;

        i0 := @parameter1: int;

        r0.<com.android.okhttp.internal.http.HttpConnection: int onIdle> = i0;

        return i0;
    }

    static com.android.okhttp.Connection access$700(com.android.okhttp.internal.http.HttpConnection)
    {
        com.android.okhttp.internal.http.HttpConnection r0;
        com.android.okhttp.Connection $r1;

        r0 := @parameter0: com.android.okhttp.internal.http.HttpConnection;

        $r1 = r0.<com.android.okhttp.internal.http.HttpConnection: com.android.okhttp.Connection connection>;

        return $r1;
    }

    static com.android.okhttp.ConnectionPool access$800(com.android.okhttp.internal.http.HttpConnection)
    {
        com.android.okhttp.internal.http.HttpConnection r0;
        com.android.okhttp.ConnectionPool $r1;

        r0 := @parameter0: com.android.okhttp.internal.http.HttpConnection;

        $r1 = r0.<com.android.okhttp.internal.http.HttpConnection: com.android.okhttp.ConnectionPool pool>;

        return $r1;
    }

    static com.android.okio.BufferedSource access$900(com.android.okhttp.internal.http.HttpConnection)
    {
        com.android.okhttp.internal.http.HttpConnection r0;
        com.android.okio.BufferedSource $r1;

        r0 := @parameter0: com.android.okhttp.internal.http.HttpConnection;

        $r1 = r0.<com.android.okhttp.internal.http.HttpConnection: com.android.okio.BufferedSource source>;

        return $r1;
    }

    static void <clinit>()
    {
        byte[] $r0, $r1;

        <com.android.okhttp.internal.http.HttpConnection: java.lang.String CRLF> = "\r\n";

        <com.android.okhttp.internal.http.HttpConnection: int ON_IDLE_CLOSE> = 2;

        <com.android.okhttp.internal.http.HttpConnection: int ON_IDLE_POOL> = 1;

        <com.android.okhttp.internal.http.HttpConnection: int ON_IDLE_HOLD> = 0;

        <com.android.okhttp.internal.http.HttpConnection: int STATE_CLOSED> = 6;

        <com.android.okhttp.internal.http.HttpConnection: int STATE_READING_RESPONSE_BODY> = 5;

        <com.android.okhttp.internal.http.HttpConnection: int STATE_OPEN_RESPONSE_BODY> = 4;

        <com.android.okhttp.internal.http.HttpConnection: int STATE_READ_RESPONSE_HEADERS> = 3;

        <com.android.okhttp.internal.http.HttpConnection: int STATE_WRITING_REQUEST_BODY> = 2;

        <com.android.okhttp.internal.http.HttpConnection: int STATE_OPEN_REQUEST_BODY> = 1;

        <com.android.okhttp.internal.http.HttpConnection: int STATE_IDLE> = 0;

        $r0 = newarray (byte)[16];

        $r0[0] = 48;

        $r0[1] = 49;

        $r0[2] = 50;

        $r0[3] = 51;

        $r0[4] = 52;

        $r0[5] = 53;

        $r0[6] = 54;

        $r0[7] = 55;

        $r0[8] = 56;

        $r0[9] = 57;

        $r0[10] = 97;

        $r0[11] = 98;

        $r0[12] = 99;

        $r0[13] = 100;

        $r0[14] = 101;

        $r0[15] = 102;

        <com.android.okhttp.internal.http.HttpConnection: byte[] HEX_DIGITS> = $r0;

        $r1 = newarray (byte)[5];

        $r1[0] = 48;

        $r1[1] = 13;

        $r1[2] = 10;

        $r1[3] = 13;

        $r1[4] = 10;

        <com.android.okhttp.internal.http.HttpConnection: byte[] FINAL_CHUNK> = $r1;

        return;
    }
}
