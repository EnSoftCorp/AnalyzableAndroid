public class com.android.okhttp.Headers$Builder extends java.lang.Object
{
    private final java.util.List namesAndValues;

    public void <init>()
    {
        com.android.okhttp.Headers$Builder r0;
        java.util.ArrayList $r1;

        r0 := @this: com.android.okhttp.Headers$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(20);

        r0.<com.android.okhttp.Headers$Builder: java.util.List namesAndValues> = $r1;

        return;
    }

    public com.android.okhttp.Headers$Builder addLine(java.lang.String)
    {
        com.android.okhttp.Headers$Builder r0, $r2, $r4, $r7;
        java.lang.String r1, $r3, $r5, $r6;
        int i0, $i1;
        boolean $z0;

        r0 := @this: com.android.okhttp.Headers$Builder;

        r1 := @parameter0: java.lang.String;

        i0 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String,int)>(":", 1);

        if i0 == -1 goto label1;

        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $i1 = i0 + 1;

        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i1);

        $r7 = specialinvoke r0.<com.android.okhttp.Headers$Builder: com.android.okhttp.Headers$Builder addLenient(java.lang.String,java.lang.String)>($r5, $r6);

        return $r7;

     label1:
        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>(":");

        if $z0 == 0 goto label2;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(1);

        $r4 = specialinvoke r0.<com.android.okhttp.Headers$Builder: com.android.okhttp.Headers$Builder addLenient(java.lang.String,java.lang.String)>("", $r3);

        return $r4;

     label2:
        $r2 = specialinvoke r0.<com.android.okhttp.Headers$Builder: com.android.okhttp.Headers$Builder addLenient(java.lang.String,java.lang.String)>("", r1);

        return $r2;
    }

    public com.android.okhttp.Headers$Builder add(java.lang.String, java.lang.String)
    {
        com.android.okhttp.Headers$Builder r0, $r10;
        java.lang.String r1, r2, $r9;
        int $i0, $i1, $i2;
        java.lang.IllegalArgumentException $r3, $r11, $r12;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8;

        r0 := @this: com.android.okhttp.Headers$Builder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        if r1 != null goto label1;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("fieldname == null");

        throw $r12;

     label1:
        if r2 != null goto label2;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("value == null");

        throw $r11;

     label2:
        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 == 0 goto label3;

        $i1 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(0);

        if $i1 != -1 goto label3;

        $i2 = virtualinvoke r2.<java.lang.String: int indexOf(int)>(0);

        if $i2 == -1 goto label4;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected header: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r3;

     label4:
        $r10 = specialinvoke r0.<com.android.okhttp.Headers$Builder: com.android.okhttp.Headers$Builder addLenient(java.lang.String,java.lang.String)>(r1, r2);

        return $r10;
    }

    private com.android.okhttp.Headers$Builder addLenient(java.lang.String, java.lang.String)
    {
        com.android.okhttp.Headers$Builder r0;
        java.lang.String r1, r2, $r5;
        java.util.List $r3, $r4;

        r0 := @this: com.android.okhttp.Headers$Builder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.okhttp.Headers$Builder: java.util.List namesAndValues>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r1);

        $r4 = r0.<com.android.okhttp.Headers$Builder: java.util.List namesAndValues>;

        $r5 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>();

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r5);

        return r0;
    }

    public com.android.okhttp.Headers$Builder removeAll(java.lang.String)
    {
        com.android.okhttp.Headers$Builder r0;
        java.lang.String r1, $r5;
        int i0, $i1;
        java.util.List $r2, $r3, $r6, $r8;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: com.android.okhttp.Headers$Builder;

        r1 := @parameter0: java.lang.String;

        i0 = 0;

     label1:
        $r2 = r0.<com.android.okhttp.Headers$Builder: java.util.List namesAndValues>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i0 >= $i1 goto label3;

        $r3 = r0.<com.android.okhttp.Headers$Builder: java.util.List namesAndValues>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i0);

        $r5 = (java.lang.String) $r4;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r5);

        if $z0 == 0 goto label2;

        $r6 = r0.<com.android.okhttp.Headers$Builder: java.util.List namesAndValues>;

        interfaceinvoke $r6.<java.util.List: java.lang.Object remove(int)>(i0);

        $r8 = r0.<com.android.okhttp.Headers$Builder: java.util.List namesAndValues>;

        interfaceinvoke $r8.<java.util.List: java.lang.Object remove(int)>(i0);

     label2:
        i0 = i0 + 2;

        goto label1;

     label3:
        return r0;
    }

    public com.android.okhttp.Headers$Builder set(java.lang.String, java.lang.String)
    {
        com.android.okhttp.Headers$Builder r0;
        java.lang.String r1, r2;

        r0 := @this: com.android.okhttp.Headers$Builder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.okhttp.Headers$Builder: com.android.okhttp.Headers$Builder removeAll(java.lang.String)>(r1);

        virtualinvoke r0.<com.android.okhttp.Headers$Builder: com.android.okhttp.Headers$Builder add(java.lang.String,java.lang.String)>(r1, r2);

        return r0;
    }

    public java.lang.String get(java.lang.String)
    {
        com.android.okhttp.Headers$Builder r0;
        java.lang.String r1, $r5, $r8;
        int i0, $i1, $i2;
        java.util.List $r2, $r3, $r6;
        java.lang.Object $r4, $r7;
        boolean $z0;

        r0 := @this: com.android.okhttp.Headers$Builder;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.okhttp.Headers$Builder: java.util.List namesAndValues>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        i0 = $i1 - 2;

     label1:
        if i0 < 0 goto label3;

        $r3 = r0.<com.android.okhttp.Headers$Builder: java.util.List namesAndValues>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i0);

        $r5 = (java.lang.String) $r4;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r5);

        if $z0 == 0 goto label2;

        $r6 = r0.<com.android.okhttp.Headers$Builder: java.util.List namesAndValues>;

        $i2 = i0 + 1;

        $r7 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>($i2);

        $r8 = (java.lang.String) $r7;

        return $r8;

     label2:
        i0 = i0 + -2;

        goto label1;

     label3:
        return null;
    }

    public com.android.okhttp.Headers build()
    {
        com.android.okhttp.Headers$Builder r0;
        com.android.okhttp.Headers $r1;

        r0 := @this: com.android.okhttp.Headers$Builder;

        $r1 = new com.android.okhttp.Headers;

        specialinvoke $r1.<com.android.okhttp.Headers: void <init>(com.android.okhttp.Headers$Builder,com.android.okhttp.Headers$1)>(r0, null);

        return $r1;
    }

    static java.util.List access$000(com.android.okhttp.Headers$Builder)
    {
        com.android.okhttp.Headers$Builder r0;
        java.util.List $r1;

        r0 := @parameter0: com.android.okhttp.Headers$Builder;

        $r1 = r0.<com.android.okhttp.Headers$Builder: java.util.List namesAndValues>;

        return $r1;
    }
}
