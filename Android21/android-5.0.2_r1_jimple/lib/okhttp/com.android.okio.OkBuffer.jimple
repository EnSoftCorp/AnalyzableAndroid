public final class com.android.okio.OkBuffer extends java.lang.Object implements com.android.okio.BufferedSource, com.android.okio.BufferedSink, java.lang.Cloneable
{
    com.android.okio.Segment head;
    long size;

    public void <init>()
    {
        com.android.okio.OkBuffer r0;

        r0 := @this: com.android.okio.OkBuffer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public long size()
    {
        com.android.okio.OkBuffer r0;
        long $l0;

        r0 := @this: com.android.okio.OkBuffer;

        $l0 = r0.<com.android.okio.OkBuffer: long size>;

        return $l0;
    }

    public com.android.okio.OkBuffer buffer()
    {
        com.android.okio.OkBuffer r0;

        r0 := @this: com.android.okio.OkBuffer;

        return r0;
    }

    public java.io.OutputStream outputStream()
    {
        com.android.okio.OkBuffer r0;
        com.android.okio.OkBuffer$1 $r1;

        r0 := @this: com.android.okio.OkBuffer;

        $r1 = new com.android.okio.OkBuffer$1;

        specialinvoke $r1.<com.android.okio.OkBuffer$1: void <init>(com.android.okio.OkBuffer)>(r0);

        return $r1;
    }

    public com.android.okio.OkBuffer emitCompleteSegments()
    {
        com.android.okio.OkBuffer r0;

        r0 := @this: com.android.okio.OkBuffer;

        return r0;
    }

    public boolean exhausted()
    {
        com.android.okio.OkBuffer r0;
        long $l0;
        byte $b1;
        boolean $z0;

        r0 := @this: com.android.okio.OkBuffer;

        $l0 = r0.<com.android.okio.OkBuffer: long size>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void require(long) throws java.io.EOFException
    {
        com.android.okio.OkBuffer r0;
        long l0, $l1;
        byte $b2;
        java.io.EOFException $r1;

        r0 := @this: com.android.okio.OkBuffer;

        l0 := @parameter0: long;

        $l1 = r0.<com.android.okio.OkBuffer: long size>;

        $b2 = $l1 cmp l0;

        if $b2 >= 0 goto label1;

        $r1 = new java.io.EOFException;

        specialinvoke $r1.<java.io.EOFException: void <init>()>();

        throw $r1;

     label1:
        return;
    }

    public java.io.InputStream inputStream()
    {
        com.android.okio.OkBuffer r0;
        com.android.okio.OkBuffer$2 $r1;

        r0 := @this: com.android.okio.OkBuffer;

        $r1 = new com.android.okio.OkBuffer$2;

        specialinvoke $r1.<com.android.okio.OkBuffer$2: void <init>(com.android.okio.OkBuffer)>(r0);

        return $r1;
    }

    public long completeSegmentByteCount()
    {
        com.android.okio.OkBuffer r0;
        long l0, $l6;
        com.android.okio.Segment r1, $r2;
        byte $b1;
        int $i2, $i3, $i4, $i5;

        r0 := @this: com.android.okio.OkBuffer;

        l0 = r0.<com.android.okio.OkBuffer: long size>;

        $b1 = l0 cmp 0L;

        if $b1 != 0 goto label1;

        return 0L;

     label1:
        $r2 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        r1 = $r2.<com.android.okio.Segment: com.android.okio.Segment prev>;

        $i2 = r1.<com.android.okio.Segment: int limit>;

        if $i2 >= 2048 goto label2;

        $i4 = r1.<com.android.okio.Segment: int limit>;

        $i3 = r1.<com.android.okio.Segment: int pos>;

        $i5 = $i4 - $i3;

        $l6 = (long) $i5;

        l0 = l0 - $l6;

     label2:
        return l0;
    }

    public byte readByte()
    {
        com.android.okio.OkBuffer r0;
        com.android.okio.Segment r1, $r3;
        int i0, i1, i7;
        byte[] r2;
        byte b2, $b4;
        long $l3, $l5, $l6;
        com.android.okio.SegmentPool $r4;
        java.lang.IllegalStateException $r5;

        r0 := @this: com.android.okio.OkBuffer;

        $l3 = r0.<com.android.okio.OkBuffer: long size>;

        $b4 = $l3 cmp 0L;

        if $b4 != 0 goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("size == 0");

        throw $r5;

     label1:
        r1 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        i0 = r1.<com.android.okio.Segment: int pos>;

        i1 = r1.<com.android.okio.Segment: int limit>;

        r2 = r1.<com.android.okio.Segment: byte[] data>;

        i7 = i0 + 1;

        b2 = r2[i0];

        $l5 = r0.<com.android.okio.OkBuffer: long size>;

        $l6 = $l5 - 1L;

        r0.<com.android.okio.OkBuffer: long size> = $l6;

        if i7 != i1 goto label2;

        $r3 = virtualinvoke r1.<com.android.okio.Segment: com.android.okio.Segment pop()>();

        r0.<com.android.okio.OkBuffer: com.android.okio.Segment head> = $r3;

        $r4 = <com.android.okio.SegmentPool: com.android.okio.SegmentPool INSTANCE>;

        virtualinvoke $r4.<com.android.okio.SegmentPool: void recycle(com.android.okio.Segment)>(r1);

        goto label3;

     label2:
        r1.<com.android.okio.Segment: int pos> = i7;

     label3:
        return b2;
    }

    public byte getByte(long)
    {
        com.android.okio.OkBuffer r0;
        long l0, $l2, $l5, $l7;
        com.android.okio.Segment r1;
        int i1, $i3, $i4, $i8, $i9, $i10;
        byte $b6, $b11;
        byte[] $r2;

        r0 := @this: com.android.okio.OkBuffer;

        l0 := @parameter0: long;

        $l2 = r0.<com.android.okio.OkBuffer: long size>;

        staticinvoke <com.android.okio.Util: void checkOffsetAndCount(long,long,long)>($l2, l0, 1L);

        r1 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

     label1:
        $i4 = r1.<com.android.okio.Segment: int limit>;

        $i3 = r1.<com.android.okio.Segment: int pos>;

        i1 = $i4 - $i3;

        $l5 = (long) i1;

        $b6 = l0 cmp $l5;

        if $b6 >= 0 goto label2;

        $r2 = r1.<com.android.okio.Segment: byte[] data>;

        $i9 = r1.<com.android.okio.Segment: int pos>;

        $i8 = (int) l0;

        $i10 = $i9 + $i8;

        $b11 = $r2[$i10];

        return $b11;

     label2:
        $l7 = (long) i1;

        l0 = l0 - $l7;

        r1 = r1.<com.android.okio.Segment: com.android.okio.Segment next>;

        goto label1;
    }

    public short readShort()
    {
        com.android.okio.OkBuffer r0;
        com.android.okio.Segment r1, $r2;
        int i0, i1, i2, i3, $i6, $i11, $i16, i22, i23;
        long $l4, $l12, $l13, $l21;
        byte $b5, $b7, $b9, $b15, $b19;
        short $s8, $s10, $s14, $s17, $s18, $s20, s24;
        com.android.okio.SegmentPool $r3;
        java.lang.IllegalStateException $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;
        byte[] r9;

        r0 := @this: com.android.okio.OkBuffer;

        $l4 = r0.<com.android.okio.OkBuffer: long size>;

        $b5 = $l4 cmp 2L;

        if $b5 >= 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("size < 2: ");

        $l21 = r0.<com.android.okio.OkBuffer: long size>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l21);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label1:
        r1 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        i0 = r1.<com.android.okio.Segment: int pos>;

        i1 = r1.<com.android.okio.Segment: int limit>;

        $i6 = i1 - i0;

        if $i6 >= 2 goto label2;

        $b15 = virtualinvoke r0.<com.android.okio.OkBuffer: byte readByte()>();

        $s17 = $b15 & 255;

        $i16 = $s17 << 8;

        $b19 = virtualinvoke r0.<com.android.okio.OkBuffer: byte readByte()>();

        $s18 = $b19 & 255;

        i2 = $i16 | $s18;

        $s20 = (short) i2;

        return $s20;

     label2:
        r9 = r1.<com.android.okio.Segment: byte[] data>;

        i22 = i0 + 1;

        $b7 = r9[i0];

        $s8 = $b7 & 255;

        $i11 = $s8 << 8;

        i23 = i22 + 1;

        $b9 = r9[i22];

        $s10 = $b9 & 255;

        i3 = $i11 | $s10;

        $l13 = r0.<com.android.okio.OkBuffer: long size>;

        $l12 = $l13 - 2L;

        r0.<com.android.okio.OkBuffer: long size> = $l12;

        if i23 != i1 goto label3;

        $r2 = virtualinvoke r1.<com.android.okio.Segment: com.android.okio.Segment pop()>();

        r0.<com.android.okio.OkBuffer: com.android.okio.Segment head> = $r2;

        $r3 = <com.android.okio.SegmentPool: com.android.okio.SegmentPool INSTANCE>;

        virtualinvoke $r3.<com.android.okio.SegmentPool: void recycle(com.android.okio.Segment)>(r1);

        s24 = (short) i3;

        return s24;

     label3:
        r1.<com.android.okio.Segment: int pos> = i23;

        $s14 = (short) i3;

        return $s14;
    }

    public int readInt()
    {
        com.android.okio.OkBuffer r0;
        com.android.okio.Segment r1, $r4;
        int i0, i1, i2, $i5, $i10, $i11, $i14, $i15, $i17, $i24, $i25, $i28, $i29, $i32, $i33, i36, i37, i38, i39;
        byte[] r2;
        long $l3, $l19, $l20, $l35;
        byte $b4, $b6, $b8, $b13, $b16, $b22, $b26, $b30, $b34;
        short $s7, $s9, $s12, $s18, $s21, $s23, $s27, $s31;
        com.android.okio.SegmentPool $r3;
        java.lang.StringBuilder $r5, $r7, $r9;
        java.lang.IllegalStateException $r6;
        java.lang.String $r8;

        r0 := @this: com.android.okio.OkBuffer;

        $l3 = r0.<com.android.okio.OkBuffer: long size>;

        $b4 = $l3 cmp 4L;

        if $b4 >= 0 goto label1;

        $r6 = new java.lang.IllegalStateException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("size < 4: ");

        $l35 = r0.<com.android.okio.OkBuffer: long size>;

        $r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l35);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r6;

     label1:
        r1 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        i0 = r1.<com.android.okio.Segment: int pos>;

        i1 = r1.<com.android.okio.Segment: int limit>;

        $i5 = i1 - i0;

        if $i5 >= 4 goto label2;

        $b22 = virtualinvoke r0.<com.android.okio.OkBuffer: byte readByte()>();

        $s21 = $b22 & 255;

        $i25 = $s21 << 24;

        $b26 = virtualinvoke r0.<com.android.okio.OkBuffer: byte readByte()>();

        $s23 = $b26 & 255;

        $i24 = $s23 << 16;

        $i29 = $i25 | $i24;

        $b30 = virtualinvoke r0.<com.android.okio.OkBuffer: byte readByte()>();

        $s27 = $b30 & 255;

        $i28 = $s27 << 8;

        $i33 = $i29 | $i28;

        $b34 = virtualinvoke r0.<com.android.okio.OkBuffer: byte readByte()>();

        $s31 = $b34 & 255;

        $i32 = $i33 | $s31;

        return $i32;

     label2:
        r2 = r1.<com.android.okio.Segment: byte[] data>;

        i36 = i0 + 1;

        $b6 = r2[i0];

        $s7 = $b6 & 255;

        $i11 = $s7 << 24;

        i37 = i36 + 1;

        $b8 = r2[i36];

        $s9 = $b8 & 255;

        $i10 = $s9 << 16;

        $i14 = $i11 | $i10;

        i38 = i37 + 1;

        $b13 = r2[i37];

        $s12 = $b13 & 255;

        $i15 = $s12 << 8;

        $i17 = $i14 | $i15;

        i39 = i38 + 1;

        $b16 = r2[i38];

        $s18 = $b16 & 255;

        i2 = $i17 | $s18;

        $l20 = r0.<com.android.okio.OkBuffer: long size>;

        $l19 = $l20 - 4L;

        r0.<com.android.okio.OkBuffer: long size> = $l19;

        if i39 != i1 goto label3;

        $r4 = virtualinvoke r1.<com.android.okio.Segment: com.android.okio.Segment pop()>();

        r0.<com.android.okio.OkBuffer: com.android.okio.Segment head> = $r4;

        $r3 = <com.android.okio.SegmentPool: com.android.okio.SegmentPool INSTANCE>;

        virtualinvoke $r3.<com.android.okio.SegmentPool: void recycle(com.android.okio.Segment)>(r1);

        goto label4;

     label3:
        r1.<com.android.okio.Segment: int pos> = i39;

     label4:
        return i2;
    }

    public long readLong()
    {
        com.android.okio.OkBuffer r0;
        com.android.okio.Segment r1, $r4;
        int i0, i1, $i5, $i44, $i46, i54, i55, i56, i57, i58, i59, i60, i61;
        byte[] r2;
        long l2, $l3, $l7, $l8, $l10, $l11, $l12, $l13, $l15, $l16, $l17, $l18, $l20, $l21, $l22, $l23, $l24, $l25, $l28, $l29, $l30, $l31, $l32, $l33, $l34, $l35, $l38, $l39, $l40, $l41, $l42, $l43, $l45, $l47, $l48, $l49, $l50, $l51, $l52, $l53;
        byte $b4, $b6, $b9, $b14, $b19, $b26, $b27, $b36, $b37;
        com.android.okio.SegmentPool $r3;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.IllegalStateException $r8;
        java.lang.String $r9;

        r0 := @this: com.android.okio.OkBuffer;

        $l3 = r0.<com.android.okio.OkBuffer: long size>;

        $b4 = $l3 cmp 8L;

        if $b4 >= 0 goto label1;

        $r8 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("size < 8: ");

        $l50 = r0.<com.android.okio.OkBuffer: long size>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l50);

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r8;

     label1:
        r1 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        i0 = r1.<com.android.okio.Segment: int pos>;

        i1 = r1.<com.android.okio.Segment: int limit>;

        $i5 = i1 - i0;

        if $i5 >= 8 goto label2;

        $i44 = virtualinvoke r0.<com.android.okio.OkBuffer: int readInt()>();

        $l49 = (long) $i44;

        $l48 = $l49 & 4294967295L;

        $l47 = $l48 << 32;

        $i46 = virtualinvoke r0.<com.android.okio.OkBuffer: int readInt()>();

        $l51 = (long) $i46;

        $l52 = $l51 & 4294967295L;

        $l53 = $l47 | $l52;

        return $l53;

     label2:
        r2 = r1.<com.android.okio.Segment: byte[] data>;

        i54 = i0 + 1;

        $b6 = r2[i0];

        $l7 = (long) $b6;

        $l8 = $l7 & 255L;

        $l12 = $l8 << 56;

        i55 = i54 + 1;

        $b9 = r2[i54];

        $l11 = (long) $b9;

        $l10 = $l11 & 255L;

        $l13 = $l10 << 48;

        $l17 = $l12 | $l13;

        i56 = i55 + 1;

        $b14 = r2[i55];

        $l16 = (long) $b14;

        $l15 = $l16 & 255L;

        $l18 = $l15 << 40;

        $l22 = $l17 | $l18;

        i57 = i56 + 1;

        $b19 = r2[i56];

        $l21 = (long) $b19;

        $l20 = $l21 & 255L;

        $l23 = $l20 << 32;

        $l29 = $l22 | $l23;

        i58 = i57 + 1;

        $b26 = r2[i57];

        $l24 = (long) $b26;

        $l25 = $l24 & 255L;

        $l28 = $l25 << 24;

        $l31 = $l29 | $l28;

        i59 = i58 + 1;

        $b27 = r2[i58];

        $l32 = (long) $b27;

        $l33 = $l32 & 255L;

        $l30 = $l33 << 16;

        $l38 = $l31 | $l30;

        i60 = i59 + 1;

        $b36 = r2[i59];

        $l34 = (long) $b36;

        $l35 = $l34 & 255L;

        $l39 = $l35 << 8;

        $l41 = $l38 | $l39;

        i61 = i60 + 1;

        $b37 = r2[i60];

        $l43 = (long) $b37;

        $l42 = $l43 & 255L;

        l2 = $l41 | $l42;

        $l40 = r0.<com.android.okio.OkBuffer: long size>;

        $l45 = $l40 - 8L;

        r0.<com.android.okio.OkBuffer: long size> = $l45;

        if i61 != i1 goto label3;

        $r4 = virtualinvoke r1.<com.android.okio.Segment: com.android.okio.Segment pop()>();

        r0.<com.android.okio.OkBuffer: com.android.okio.Segment head> = $r4;

        $r3 = <com.android.okio.SegmentPool: com.android.okio.SegmentPool INSTANCE>;

        virtualinvoke $r3.<com.android.okio.SegmentPool: void recycle(com.android.okio.Segment)>(r1);

        goto label4;

     label3:
        r1.<com.android.okio.Segment: int pos> = i61;

     label4:
        return l2;
    }

    public short readShortLe()
    {
        com.android.okio.OkBuffer r0;
        short $s0, $s1;

        r0 := @this: com.android.okio.OkBuffer;

        $s0 = virtualinvoke r0.<com.android.okio.OkBuffer: short readShort()>();

        $s1 = staticinvoke <com.android.okio.Util: short reverseBytesShort(short)>($s0);

        return $s1;
    }

    public int readIntLe()
    {
        com.android.okio.OkBuffer r0;
        int $i0, $i1;

        r0 := @this: com.android.okio.OkBuffer;

        $i0 = virtualinvoke r0.<com.android.okio.OkBuffer: int readInt()>();

        $i1 = staticinvoke <com.android.okio.Util: int reverseBytesInt(int)>($i0);

        return $i1;
    }

    public long readLongLe()
    {
        com.android.okio.OkBuffer r0;
        long $l0, $l1;

        r0 := @this: com.android.okio.OkBuffer;

        $l0 = virtualinvoke r0.<com.android.okio.OkBuffer: long readLong()>();

        $l1 = staticinvoke <com.android.okio.Util: long reverseBytesLong(long)>($l0);

        return $l1;
    }

    public com.android.okio.ByteString readByteString(long)
    {
        com.android.okio.OkBuffer r0;
        long l0;
        com.android.okio.ByteString $r1;
        byte[] $r2;

        r0 := @this: com.android.okio.OkBuffer;

        l0 := @parameter0: long;

        $r1 = new com.android.okio.ByteString;

        $r2 = specialinvoke r0.<com.android.okio.OkBuffer: byte[] readBytes(long)>(l0);

        specialinvoke $r1.<com.android.okio.ByteString: void <init>(byte[])>($r2);

        return $r1;
    }

    public java.lang.String readUtf8(long)
    {
        com.android.okio.OkBuffer r0;
        long l0, $l1, $l5, $l7, $l8, $l13, $l14, $l15, $l18;
        com.android.okio.Segment r1, $r6;
        java.lang.String r2, $r3, $r7, $r15;
        byte $b2, $b3, $b9;
        int $i4, $i6, $i10, $i11, $i12, $i16, $i17, $i19;
        java.nio.charset.Charset $r4, $r9;
        byte[] $r5, $r10;
        com.android.okio.SegmentPool $r8;
        java.lang.StringBuilder $r11, $r12, $r14;
        java.lang.IllegalArgumentException $r13;

        r0 := @this: com.android.okio.OkBuffer;

        l0 := @parameter0: long;

        $l1 = r0.<com.android.okio.OkBuffer: long size>;

        staticinvoke <com.android.okio.Util: void checkOffsetAndCount(long,long,long)>($l1, 0L, l0);

        $b2 = l0 cmp 2147483647L;

        if $b2 <= 0 goto label1;

        $r13 = new java.lang.IllegalArgumentException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("byteCount > Integer.MAX_VALUE: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r13;

     label1:
        $b3 = l0 cmp 0L;

        if $b3 != 0 goto label2;

        return "";

     label2:
        r1 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        $i4 = r1.<com.android.okio.Segment: int pos>;

        $l5 = (long) $i4;

        $l8 = $l5 + l0;

        $i6 = r1.<com.android.okio.Segment: int limit>;

        $l7 = (long) $i6;

        $b9 = $l8 cmp $l7;

        if $b9 <= 0 goto label3;

        $r7 = new java.lang.String;

        $r10 = specialinvoke r0.<com.android.okio.OkBuffer: byte[] readBytes(long)>(l0);

        $r9 = <com.android.okio.Util: java.nio.charset.Charset UTF_8>;

        specialinvoke $r7.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>($r10, $r9);

        return $r7;

     label3:
        $r3 = new java.lang.String;

        $r5 = r1.<com.android.okio.Segment: byte[] data>;

        $i10 = r1.<com.android.okio.Segment: int pos>;

        $i11 = (int) l0;

        $r4 = <com.android.okio.Util: java.nio.charset.Charset UTF_8>;

        specialinvoke $r3.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>($r5, $i10, $i11, $r4);

        r2 = $r3;

        $i12 = r1.<com.android.okio.Segment: int pos>;

        $l14 = (long) $i12;

        $l13 = $l14 + l0;

        $i16 = (int) $l13;

        r1.<com.android.okio.Segment: int pos> = $i16;

        $l15 = r0.<com.android.okio.OkBuffer: long size>;

        $l18 = $l15 - l0;

        r0.<com.android.okio.OkBuffer: long size> = $l18;

        $i19 = r1.<com.android.okio.Segment: int pos>;

        $i17 = r1.<com.android.okio.Segment: int limit>;

        if $i19 != $i17 goto label4;

        $r6 = virtualinvoke r1.<com.android.okio.Segment: com.android.okio.Segment pop()>();

        r0.<com.android.okio.OkBuffer: com.android.okio.Segment head> = $r6;

        $r8 = <com.android.okio.SegmentPool: com.android.okio.SegmentPool INSTANCE>;

        virtualinvoke $r8.<com.android.okio.SegmentPool: void recycle(com.android.okio.Segment)>(r1);

     label4:
        return r2;
    }

    public java.lang.String readUtf8Line() throws java.io.IOException
    {
        com.android.okio.OkBuffer r0;
        long l0, $l2, $l4;
        byte $b1, $b3;
        java.lang.String $r1, $r2;

        r0 := @this: com.android.okio.OkBuffer;

        l0 = virtualinvoke r0.<com.android.okio.OkBuffer: long indexOf(byte)>(10);

        $b1 = l0 cmp -1L;

        if $b1 != 0 goto label3;

        $l2 = r0.<com.android.okio.OkBuffer: long size>;

        $b3 = $l2 cmp 0L;

        if $b3 == 0 goto label1;

        $l4 = r0.<com.android.okio.OkBuffer: long size>;

        $r2 = virtualinvoke r0.<com.android.okio.OkBuffer: java.lang.String readUtf8(long)>($l4);

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;

     label3:
        $r1 = virtualinvoke r0.<com.android.okio.OkBuffer: java.lang.String readUtf8Line(long)>(l0);

        return $r1;
    }

    public java.lang.String readUtf8LineStrict() throws java.io.IOException
    {
        com.android.okio.OkBuffer r0;
        long l0;
        byte $b1;
        java.lang.String $r1;
        java.io.EOFException $r2;

        r0 := @this: com.android.okio.OkBuffer;

        l0 = virtualinvoke r0.<com.android.okio.OkBuffer: long indexOf(byte)>(10);

        $b1 = l0 cmp -1L;

        if $b1 != 0 goto label1;

        $r2 = new java.io.EOFException;

        specialinvoke $r2.<java.io.EOFException: void <init>()>();

        throw $r2;

     label1:
        $r1 = virtualinvoke r0.<com.android.okio.OkBuffer: java.lang.String readUtf8Line(long)>(l0);

        return $r1;
    }

    java.lang.String readUtf8Line(long)
    {
        com.android.okio.OkBuffer r0;
        long l0, $l2, $l4;
        java.lang.String r1, r2;
        byte $b1, $b3;

        r0 := @this: com.android.okio.OkBuffer;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 <= 0 goto label1;

        $l2 = l0 - 1L;

        $b3 = virtualinvoke r0.<com.android.okio.OkBuffer: byte getByte(long)>($l2);

        if $b3 != 13 goto label1;

        $l4 = l0 - 1L;

        r1 = virtualinvoke r0.<com.android.okio.OkBuffer: java.lang.String readUtf8(long)>($l4);

        virtualinvoke r0.<com.android.okio.OkBuffer: void skip(long)>(2L);

        return r1;

     label1:
        r2 = virtualinvoke r0.<com.android.okio.OkBuffer: java.lang.String readUtf8(long)>(l0);

        virtualinvoke r0.<com.android.okio.OkBuffer: void skip(long)>(1L);

        return r2;
    }

    private byte[] readBytes(long)
    {
        com.android.okio.OkBuffer r0;
        long l0, $l3, $l6, $l8, $l9, $l10, $l14, $l15, $l16;
        int i1, i2, $i5, $i11, $i12, $i13, $i17, $i18, $i19, $i20, $i21;
        byte[] r1, $r8;
        com.android.okio.Segment r2, $r3, $r4, $r5, $r6, $r7, $r9, $r10, $r11;
        byte $b4, $b7;
        com.android.okio.SegmentPool $r12;
        java.lang.StringBuilder $r13, $r14, $r16;
        java.lang.IllegalArgumentException $r15;
        java.lang.String $r17;

        r0 := @this: com.android.okio.OkBuffer;

        l0 := @parameter0: long;

        $l3 = r0.<com.android.okio.OkBuffer: long size>;

        staticinvoke <com.android.okio.Util: void checkOffsetAndCount(long,long,long)>($l3, 0L, l0);

        $b4 = l0 cmp 2147483647L;

        if $b4 <= 0 goto label1;

        $r15 = new java.lang.IllegalArgumentException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("byteCount > Integer.MAX_VALUE: ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r15;

     label1:
        i1 = 0;

        $i5 = (int) l0;

        r1 = newarray (byte)[$i5];

     label2:
        $l6 = (long) i1;

        $b7 = $l6 cmp l0;

        if $b7 >= 0 goto label4;

        $l10 = (long) i1;

        $l14 = l0 - $l10;

        $r3 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        $i13 = $r3.<com.android.okio.Segment: int limit>;

        $r4 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        $i11 = $r4.<com.android.okio.Segment: int pos>;

        $i12 = $i13 - $i11;

        $l15 = (long) $i12;

        $l16 = staticinvoke <java.lang.Math: long min(long,long)>($l14, $l15);

        i2 = (int) $l16;

        $r5 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        $r8 = $r5.<com.android.okio.Segment: byte[] data>;

        $r6 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        $i17 = $r6.<com.android.okio.Segment: int pos>;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r8, $i17, r1, i1, i2);

        i1 = i1 + i2;

        $r7 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        $i19 = $r7.<com.android.okio.Segment: int pos>;

        $i18 = $i19 + i2;

        $r7.<com.android.okio.Segment: int pos> = $i18;

        $r10 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        $i21 = $r10.<com.android.okio.Segment: int pos>;

        $r9 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        $i20 = $r9.<com.android.okio.Segment: int limit>;

        if $i21 != $i20 goto label3;

        r2 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        $r11 = virtualinvoke r2.<com.android.okio.Segment: com.android.okio.Segment pop()>();

        r0.<com.android.okio.OkBuffer: com.android.okio.Segment head> = $r11;

        $r12 = <com.android.okio.SegmentPool: com.android.okio.SegmentPool INSTANCE>;

        virtualinvoke $r12.<com.android.okio.SegmentPool: void recycle(com.android.okio.Segment)>(r2);

     label3:
        goto label2;

     label4:
        $l8 = r0.<com.android.okio.OkBuffer: long size>;

        $l9 = $l8 - l0;

        r0.<com.android.okio.OkBuffer: long size> = $l9;

        return r1;
    }

    int read(byte[], int, int)
    {
        com.android.okio.OkBuffer r0;
        byte[] r1, $r3;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i11, $i13;
        com.android.okio.Segment r2, $r4;
        long $l9, $l10, $l12;
        com.android.okio.SegmentPool $r5;

        r0 := @this: com.android.okio.OkBuffer;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        if r2 != null goto label1;

        return -1;

     label1:
        $i4 = r2.<com.android.okio.Segment: int limit>;

        $i3 = r2.<com.android.okio.Segment: int pos>;

        $i5 = $i4 - $i3;

        i2 = staticinvoke <java.lang.Math: int min(int,int)>(i1, $i5);

        $r3 = r2.<com.android.okio.Segment: byte[] data>;

        $i6 = r2.<com.android.okio.Segment: int pos>;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>($r3, $i6, r1, i0, i2);

        $i7 = r2.<com.android.okio.Segment: int pos>;

        $i8 = $i7 + i2;

        r2.<com.android.okio.Segment: int pos> = $i8;

        $l10 = r0.<com.android.okio.OkBuffer: long size>;

        $l9 = (long) i2;

        $l12 = $l10 - $l9;

        r0.<com.android.okio.OkBuffer: long size> = $l12;

        $i13 = r2.<com.android.okio.Segment: int pos>;

        $i11 = r2.<com.android.okio.Segment: int limit>;

        if $i13 != $i11 goto label2;

        $r4 = virtualinvoke r2.<com.android.okio.Segment: com.android.okio.Segment pop()>();

        r0.<com.android.okio.OkBuffer: com.android.okio.Segment head> = $r4;

        $r5 = <com.android.okio.SegmentPool: com.android.okio.SegmentPool INSTANCE>;

        virtualinvoke $r5.<com.android.okio.SegmentPool: void recycle(com.android.okio.Segment)>(r2);

     label2:
        return i2;
    }

    public void clear()
    {
        com.android.okio.OkBuffer r0;
        long $l0;

        r0 := @this: com.android.okio.OkBuffer;

        $l0 = r0.<com.android.okio.OkBuffer: long size>;

        virtualinvoke r0.<com.android.okio.OkBuffer: void skip(long)>($l0);

        return;
    }

    public void skip(long)
    {
        com.android.okio.OkBuffer r0;
        long l0, $l2, $l3, $l4, $l9, $l10, $l11;
        int i1, $i6, $i7, $i8, $i12, $i13, $i14, $i15;
        com.android.okio.Segment r1, $r2, $r3, $r4, $r5, $r6, $r8;
        byte $b5;
        com.android.okio.SegmentPool $r7;

        r0 := @this: com.android.okio.OkBuffer;

        l0 := @parameter0: long;

        $l2 = r0.<com.android.okio.OkBuffer: long size>;

        staticinvoke <com.android.okio.Util: void checkOffsetAndCount(long,long,long)>($l2, 0L, l0);

        $l3 = r0.<com.android.okio.OkBuffer: long size>;

        $l4 = $l3 - l0;

        r0.<com.android.okio.OkBuffer: long size> = $l4;

     label1:
        $b5 = l0 cmp 0L;

        if $b5 <= 0 goto label3;

        $r2 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        $i7 = $r2.<com.android.okio.Segment: int limit>;

        $r3 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        $i6 = $r3.<com.android.okio.Segment: int pos>;

        $i8 = $i7 - $i6;

        $l9 = (long) $i8;

        $l10 = staticinvoke <java.lang.Math: long min(long,long)>(l0, $l9);

        i1 = (int) $l10;

        $l11 = (long) i1;

        l0 = l0 - $l11;

        $r4 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        $i13 = $r4.<com.android.okio.Segment: int pos>;

        $i12 = $i13 + i1;

        $r4.<com.android.okio.Segment: int pos> = $i12;

        $r6 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        $i14 = $r6.<com.android.okio.Segment: int pos>;

        $r5 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        $i15 = $r5.<com.android.okio.Segment: int limit>;

        if $i14 != $i15 goto label2;

        r1 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        $r8 = virtualinvoke r1.<com.android.okio.Segment: com.android.okio.Segment pop()>();

        r0.<com.android.okio.OkBuffer: com.android.okio.Segment head> = $r8;

        $r7 = <com.android.okio.SegmentPool: com.android.okio.SegmentPool INSTANCE>;

        virtualinvoke $r7.<com.android.okio.SegmentPool: void recycle(com.android.okio.Segment)>(r1);

     label2:
        goto label1;

     label3:
        return;
    }

    public com.android.okio.OkBuffer write(com.android.okio.ByteString)
    {
        com.android.okio.OkBuffer r0, $r4;
        com.android.okio.ByteString r1;
        byte[] $r2, $r3;
        int $i0;

        r0 := @this: com.android.okio.OkBuffer;

        r1 := @parameter0: com.android.okio.ByteString;

        $r3 = r1.<com.android.okio.ByteString: byte[] data>;

        $r2 = r1.<com.android.okio.ByteString: byte[] data>;

        $i0 = lengthof $r2;

        $r4 = virtualinvoke r0.<com.android.okio.OkBuffer: com.android.okio.OkBuffer write(byte[],int,int)>($r3, 0, $i0);

        return $r4;
    }

    public com.android.okio.OkBuffer writeUtf8(java.lang.String)
    {
        com.android.okio.OkBuffer r0, $r4;
        java.lang.String r1;
        byte[] r2;
        java.nio.charset.Charset $r3;
        int $i0;

        r0 := @this: com.android.okio.OkBuffer;

        r1 := @parameter0: java.lang.String;

        $r3 = <com.android.okio.Util: java.nio.charset.Charset UTF_8>;

        r2 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r3);

        $i0 = lengthof r2;

        $r4 = virtualinvoke r0.<com.android.okio.OkBuffer: com.android.okio.OkBuffer write(byte[],int,int)>(r2, 0, $i0);

        return $r4;
    }

    public com.android.okio.OkBuffer write(byte[])
    {
        com.android.okio.OkBuffer r0, $r2;
        byte[] r1;
        int $i0;

        r0 := @this: com.android.okio.OkBuffer;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        $r2 = virtualinvoke r0.<com.android.okio.OkBuffer: com.android.okio.OkBuffer write(byte[],int,int)>(r1, 0, $i0);

        return $r2;
    }

    public com.android.okio.OkBuffer write(byte[], int, int)
    {
        com.android.okio.OkBuffer r0;
        byte[] r1, $r3;
        int i0, i1, i2, i3, $i7, $i8, $i9, $i10, $i11, $i12;
        com.android.okio.Segment r2;
        long $l4, $l5, $l6;

        r0 := @this: com.android.okio.OkBuffer;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = i0 + i1;

     label1:
        if i0 >= i2 goto label2;

        r2 = virtualinvoke r0.<com.android.okio.OkBuffer: com.android.okio.Segment writableSegment(int)>(1);

        $i9 = i2 - i0;

        $i7 = r2.<com.android.okio.Segment: int limit>;

        $i8 = 2048 - $i7;

        i3 = staticinvoke <java.lang.Math: int min(int,int)>($i9, $i8);

        $r3 = r2.<com.android.okio.Segment: byte[] data>;

        $i10 = r2.<com.android.okio.Segment: int limit>;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r1, i0, $r3, $i10, i3);

        i0 = i0 + i3;

        $i11 = r2.<com.android.okio.Segment: int limit>;

        $i12 = $i11 + i3;

        r2.<com.android.okio.Segment: int limit> = $i12;

        goto label1;

     label2:
        $l5 = r0.<com.android.okio.OkBuffer: long size>;

        $l4 = (long) i1;

        $l6 = $l5 + $l4;

        r0.<com.android.okio.OkBuffer: long size> = $l6;

        return r0;
    }

    public com.android.okio.OkBuffer writeByte(int)
    {
        com.android.okio.OkBuffer r0;
        int i0, $i1, $i2;
        com.android.okio.Segment r1;
        byte[] $r2;
        byte $b3;
        long $l4, $l5;

        r0 := @this: com.android.okio.OkBuffer;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<com.android.okio.OkBuffer: com.android.okio.Segment writableSegment(int)>(1);

        $r2 = r1.<com.android.okio.Segment: byte[] data>;

        $i1 = r1.<com.android.okio.Segment: int limit>;

        $i2 = $i1 + 1;

        r1.<com.android.okio.Segment: int limit> = $i2;

        $b3 = (byte) i0;

        $r2[$i1] = $b3;

        $l4 = r0.<com.android.okio.OkBuffer: long size>;

        $l5 = $l4 + 1L;

        r0.<com.android.okio.OkBuffer: long size> = $l5;

        return r0;
    }

    public com.android.okio.OkBuffer writeShort(int)
    {
        com.android.okio.OkBuffer r0;
        int i0, i1, $i2, $i3, $i5, i9, i10;
        com.android.okio.Segment r1;
        byte[] r2;
        byte $b4, $b6;
        long $l7, $l8;

        r0 := @this: com.android.okio.OkBuffer;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<com.android.okio.OkBuffer: com.android.okio.Segment writableSegment(int)>(2);

        r2 = r1.<com.android.okio.Segment: byte[] data>;

        i1 = r1.<com.android.okio.Segment: int limit>;

        i9 = i1 + 1;

        $i2 = i0 >>> 8;

        $i3 = $i2 & 255;

        $b4 = (byte) $i3;

        r2[i1] = $b4;

        i10 = i9 + 1;

        $i5 = i0 & 255;

        $b6 = (byte) $i5;

        r2[i9] = $b6;

        r1.<com.android.okio.Segment: int limit> = i10;

        $l7 = r0.<com.android.okio.OkBuffer: long size>;

        $l8 = $l7 + 2L;

        r0.<com.android.okio.OkBuffer: long size> = $l8;

        return r0;
    }

    public com.android.okio.BufferedSink writeShortLe(int)
    {
        com.android.okio.OkBuffer r0, $r1;
        int i0;
        short $s1, $s2;

        r0 := @this: com.android.okio.OkBuffer;

        i0 := @parameter0: int;

        $s1 = (short) i0;

        $s2 = staticinvoke <com.android.okio.Util: short reverseBytesShort(short)>($s1);

        $r1 = virtualinvoke r0.<com.android.okio.OkBuffer: com.android.okio.OkBuffer writeShort(int)>($s2);

        return $r1;
    }

    public com.android.okio.OkBuffer writeInt(int)
    {
        com.android.okio.OkBuffer r0;
        int i0, i1, $i2, $i3, $i5, $i6, $i8, $i10, $i11, i15, i16, i17, i18;
        com.android.okio.Segment r1;
        byte[] r2;
        byte $b4, $b7, $b9, $b13;
        long $l12, $l14;

        r0 := @this: com.android.okio.OkBuffer;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<com.android.okio.OkBuffer: com.android.okio.Segment writableSegment(int)>(4);

        r2 = r1.<com.android.okio.Segment: byte[] data>;

        i1 = r1.<com.android.okio.Segment: int limit>;

        i15 = i1 + 1;

        $i2 = i0 >>> 24;

        $i3 = $i2 & 255;

        $b4 = (byte) $i3;

        r2[i1] = $b4;

        i16 = i15 + 1;

        $i5 = i0 >>> 16;

        $i6 = $i5 & 255;

        $b7 = (byte) $i6;

        r2[i15] = $b7;

        i17 = i16 + 1;

        $i8 = i0 >>> 8;

        $i10 = $i8 & 255;

        $b9 = (byte) $i10;

        r2[i16] = $b9;

        i18 = i17 + 1;

        $i11 = i0 & 255;

        $b13 = (byte) $i11;

        r2[i17] = $b13;

        r1.<com.android.okio.Segment: int limit> = i18;

        $l12 = r0.<com.android.okio.OkBuffer: long size>;

        $l14 = $l12 + 4L;

        r0.<com.android.okio.OkBuffer: long size> = $l14;

        return r0;
    }

    public com.android.okio.BufferedSink writeIntLe(int)
    {
        com.android.okio.OkBuffer r0, $r1;
        int i0, $i1;

        r0 := @this: com.android.okio.OkBuffer;

        i0 := @parameter0: int;

        $i1 = staticinvoke <com.android.okio.Util: int reverseBytesInt(int)>(i0);

        $r1 = virtualinvoke r0.<com.android.okio.OkBuffer: com.android.okio.OkBuffer writeInt(int)>($i1);

        return $r1;
    }

    public com.android.okio.OkBuffer writeLong(long)
    {
        com.android.okio.OkBuffer r0;
        long l0, $l2, $l3, $l6, $l7, $l10, $l11, $l14, $l16, $l18, $l19, $l22, $l24, $l25, $l26, $l28, $l31, $l32;
        com.android.okio.Segment r1;
        byte[] r2;
        int i1, $i4, $i8, $i13, $i15, $i21, $i23, $i29, $i33, i35, i36, i37, i38, i39, i40, i41, i42;
        byte $b5, $b9, $b12, $b17, $b20, $b27, $b30, $b34;

        r0 := @this: com.android.okio.OkBuffer;

        l0 := @parameter0: long;

        r1 = virtualinvoke r0.<com.android.okio.OkBuffer: com.android.okio.Segment writableSegment(int)>(8);

        r2 = r1.<com.android.okio.Segment: byte[] data>;

        i1 = r1.<com.android.okio.Segment: int limit>;

        i35 = i1 + 1;

        $l2 = l0 >>> 56;

        $l3 = $l2 & 255L;

        $i4 = (int) $l3;

        $b5 = (byte) $i4;

        r2[i1] = $b5;

        i36 = i35 + 1;

        $l6 = l0 >>> 48;

        $l7 = $l6 & 255L;

        $i8 = (int) $l7;

        $b9 = (byte) $i8;

        r2[i35] = $b9;

        i37 = i36 + 1;

        $l11 = l0 >>> 40;

        $l10 = $l11 & 255L;

        $i13 = (int) $l10;

        $b12 = (byte) $i13;

        r2[i36] = $b12;

        i38 = i37 + 1;

        $l14 = l0 >>> 32;

        $l16 = $l14 & 255L;

        $i15 = (int) $l16;

        $b17 = (byte) $i15;

        r2[i37] = $b17;

        i39 = i38 + 1;

        $l19 = l0 >>> 24;

        $l18 = $l19 & 255L;

        $i21 = (int) $l18;

        $b20 = (byte) $i21;

        r2[i38] = $b20;

        i40 = i39 + 1;

        $l24 = l0 >>> 16;

        $l22 = $l24 & 255L;

        $i23 = (int) $l22;

        $b27 = (byte) $i23;

        r2[i39] = $b27;

        i41 = i40 + 1;

        $l25 = l0 >>> 8;

        $l26 = $l25 & 255L;

        $i29 = (int) $l26;

        $b30 = (byte) $i29;

        r2[i40] = $b30;

        i42 = i41 + 1;

        $l28 = l0 & 255L;

        $i33 = (int) $l28;

        $b34 = (byte) $i33;

        r2[i41] = $b34;

        r1.<com.android.okio.Segment: int limit> = i42;

        $l31 = r0.<com.android.okio.OkBuffer: long size>;

        $l32 = $l31 + 8L;

        r0.<com.android.okio.OkBuffer: long size> = $l32;

        return r0;
    }

    public com.android.okio.BufferedSink writeLongLe(long)
    {
        com.android.okio.OkBuffer r0, $r1;
        long l0, $l1;

        r0 := @this: com.android.okio.OkBuffer;

        l0 := @parameter0: long;

        $l1 = staticinvoke <com.android.okio.Util: long reverseBytesLong(long)>(l0);

        $r1 = virtualinvoke r0.<com.android.okio.OkBuffer: com.android.okio.OkBuffer writeLong(long)>($l1);

        return $r1;
    }

    com.android.okio.Segment writableSegment(int)
    {
        com.android.okio.OkBuffer r0;
        int i0, $i1, $i2;
        com.android.okio.Segment r1, $r3, $r4, $r6, $r8, $r9, $r10, $r11;
        java.lang.IllegalArgumentException $r2;
        com.android.okio.SegmentPool $r5, $r7;

        r0 := @this: com.android.okio.OkBuffer;

        i0 := @parameter0: int;

        if i0 < 1 goto label1;

        if i0 <= 2048 goto label2;

     label1:
        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label2:
        $r3 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        if $r3 != null goto label3;

        $r7 = <com.android.okio.SegmentPool: com.android.okio.SegmentPool INSTANCE>;

        $r8 = virtualinvoke $r7.<com.android.okio.SegmentPool: com.android.okio.Segment take()>();

        r0.<com.android.okio.OkBuffer: com.android.okio.Segment head> = $r8;

        $r11 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        $r10 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        $r9 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        $r10.<com.android.okio.Segment: com.android.okio.Segment prev> = $r9;

        $r11.<com.android.okio.Segment: com.android.okio.Segment next> = $r9;

        return $r9;

     label3:
        $r4 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        r1 = $r4.<com.android.okio.Segment: com.android.okio.Segment prev>;

        $i1 = r1.<com.android.okio.Segment: int limit>;

        $i2 = $i1 + i0;

        if $i2 <= 2048 goto label4;

        $r5 = <com.android.okio.SegmentPool: com.android.okio.SegmentPool INSTANCE>;

        $r6 = virtualinvoke $r5.<com.android.okio.SegmentPool: com.android.okio.Segment take()>();

        r1 = virtualinvoke r1.<com.android.okio.Segment: com.android.okio.Segment push(com.android.okio.Segment)>($r6);

     label4:
        return r1;
    }

    public void write(com.android.okio.OkBuffer, long)
    {
        com.android.okio.OkBuffer r0, r1;
        long l0, l1, $l2, $l7, $l12, $l13, $l14, $l15, $l18, $l19, $l22, $l25, $l26, $l27;
        com.android.okio.Segment r2, r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r18, r19, r20;
        byte $b3, $b9, $b23;
        int $i4, $i5, $i6, $i8, $i10, $i11, $i16, $i17, $i20, $i21, $i24;
        java.lang.IllegalArgumentException $r17;

        r0 := @this: com.android.okio.OkBuffer;

        r1 := @parameter0: com.android.okio.OkBuffer;

        l0 := @parameter1: long;

        if r1 != r0 goto label01;

        $r17 = new java.lang.IllegalArgumentException;

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("source == this");

        throw $r17;

     label01:
        $l2 = r1.<com.android.okio.OkBuffer: long size>;

        staticinvoke <com.android.okio.Util: void checkOffsetAndCount(long,long,long)>($l2, 0L, l0);

     label02:
        $b3 = l0 cmp 0L;

        if $b3 <= 0 goto label10;

        $r4 = r1.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        $i5 = $r4.<com.android.okio.Segment: int limit>;

        $r5 = r1.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        $i4 = $r5.<com.android.okio.Segment: int pos>;

        $i6 = $i5 - $i4;

        $l7 = (long) $i6;

        $b9 = l0 cmp $l7;

        if $b9 >= 0 goto label07;

        $r11 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        if $r11 == null goto label03;

        $r16 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        $r18 = $r16.<com.android.okio.Segment: com.android.okio.Segment prev>;

        goto label04;

     label03:
        $r18 = null;

     label04:
        r2 = $r18;

        if r2 == null goto label05;

        $i20 = r2.<com.android.okio.Segment: int limit>;

        $i16 = r2.<com.android.okio.Segment: int pos>;

        $i21 = $i20 - $i16;

        $l18 = (long) $i21;

        $l19 = l0 + $l18;

        $b23 = $l19 cmp 2048L;

        if $b23 <= 0 goto label06;

     label05:
        $r14 = r1.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        $i17 = (int) l0;

        $r13 = virtualinvoke $r14.<com.android.okio.Segment: com.android.okio.Segment split(int)>($i17);

        r1.<com.android.okio.OkBuffer: com.android.okio.Segment head> = $r13;

        goto label07;

     label06:
        $r15 = r1.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        $i24 = (int) l0;

        virtualinvoke $r15.<com.android.okio.Segment: void writeTo(com.android.okio.Segment,int)>(r2, $i24);

        $l22 = r1.<com.android.okio.OkBuffer: long size>;

        $l26 = $l22 - l0;

        r1.<com.android.okio.OkBuffer: long size> = $l26;

        $l27 = r0.<com.android.okio.OkBuffer: long size>;

        $l25 = $l27 + l0;

        r0.<com.android.okio.OkBuffer: long size> = $l25;

        return;

     label07:
        r19 = r1.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        $i11 = r19.<com.android.okio.Segment: int limit>;

        $i8 = r19.<com.android.okio.Segment: int pos>;

        $i10 = $i11 - $i8;

        l1 = (long) $i10;

        $r7 = virtualinvoke r19.<com.android.okio.Segment: com.android.okio.Segment pop()>();

        r1.<com.android.okio.OkBuffer: com.android.okio.Segment head> = $r7;

        $r6 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        if $r6 != null goto label08;

        r0.<com.android.okio.OkBuffer: com.android.okio.Segment head> = r19;

        $r12 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        $r9 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        $r10 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        $r9.<com.android.okio.Segment: com.android.okio.Segment prev> = $r10;

        $r12.<com.android.okio.Segment: com.android.okio.Segment next> = $r10;

        goto label09;

     label08:
        $r8 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        r3 = $r8.<com.android.okio.Segment: com.android.okio.Segment prev>;

        r20 = virtualinvoke r3.<com.android.okio.Segment: com.android.okio.Segment push(com.android.okio.Segment)>(r19);

        virtualinvoke r20.<com.android.okio.Segment: void compact()>();

     label09:
        $l13 = r1.<com.android.okio.OkBuffer: long size>;

        $l12 = $l13 - l1;

        r1.<com.android.okio.OkBuffer: long size> = $l12;

        $l15 = r0.<com.android.okio.OkBuffer: long size>;

        $l14 = $l15 + l1;

        r0.<com.android.okio.OkBuffer: long size> = $l14;

        l0 = l0 - l1;

        goto label02;

     label10:
        return;
    }

    public long read(com.android.okio.OkBuffer, long)
    {
        com.android.okio.OkBuffer r0, r1;
        long l0, $l1, $l3;
        byte $b2, $b4;

        r0 := @this: com.android.okio.OkBuffer;

        r1 := @parameter0: com.android.okio.OkBuffer;

        l0 := @parameter1: long;

        $l1 = r0.<com.android.okio.OkBuffer: long size>;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label1;

        return -1L;

     label1:
        $l3 = r0.<com.android.okio.OkBuffer: long size>;

        $b4 = l0 cmp $l3;

        if $b4 <= 0 goto label2;

        l0 = r0.<com.android.okio.OkBuffer: long size>;

     label2:
        virtualinvoke r1.<com.android.okio.OkBuffer: void write(com.android.okio.OkBuffer,long)>(r0, l0);

        return l0;
    }

    public com.android.okio.OkBuffer deadline(com.android.okio.Deadline)
    {
        com.android.okio.OkBuffer r0;
        com.android.okio.Deadline r1;

        r0 := @this: com.android.okio.OkBuffer;

        r1 := @parameter0: com.android.okio.Deadline;

        return r0;
    }

    public long indexOf(byte)
    {
        com.android.okio.OkBuffer r0;
        byte b0;
        long $l1;

        r0 := @this: com.android.okio.OkBuffer;

        b0 := @parameter0: byte;

        $l1 = virtualinvoke r0.<com.android.okio.OkBuffer: long indexOf(byte,long)>(b0, 0L);

        return $l1;
    }

    public long indexOf(byte, long)
    {
        com.android.okio.OkBuffer r0;
        byte b0, $b10, $b14, $b17;
        long l1, l2, l4, l5, $l8, $l12, $l13, $l18, $l19, $l20, $l21;
        com.android.okio.Segment r1, $r3;
        int i3, $i6, $i7, $i9, $i11, $i15, $i16;
        byte[] r2;

        r0 := @this: com.android.okio.OkBuffer;

        b0 := @parameter0: byte;

        l1 := @parameter1: long;

        r1 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        if r1 != null goto label1;

        return -1L;

     label1:
        l2 = 0L;

     label2:
        $i7 = r1.<com.android.okio.Segment: int limit>;

        $i6 = r1.<com.android.okio.Segment: int pos>;

        i3 = $i7 - $i6;

        $l8 = (long) i3;

        $b10 = l1 cmp $l8;

        if $b10 <= 0 goto label3;

        $l20 = (long) i3;

        l1 = l1 - $l20;

        goto label7;

     label3:
        r2 = r1.<com.android.okio.Segment: byte[] data>;

        $i9 = r1.<com.android.okio.Segment: int pos>;

        $l12 = (long) $i9;

        l4 = $l12 + l1;

        $i11 = r1.<com.android.okio.Segment: int limit>;

        l5 = (long) $i11;

     label4:
        $b14 = l4 cmp l5;

        if $b14 >= 0 goto label6;

        $i15 = (int) l4;

        $b17 = r2[$i15];

        if $b17 != b0 goto label5;

        $l18 = l2 + l4;

        $i16 = r1.<com.android.okio.Segment: int pos>;

        $l19 = (long) $i16;

        $l21 = $l18 - $l19;

        return $l21;

     label5:
        l4 = l4 + 1L;

        goto label4;

     label6:
        l1 = 0L;

     label7:
        $l13 = (long) i3;

        l2 = l2 + $l13;

        r1 = r1.<com.android.okio.Segment: com.android.okio.Segment next>;

        $r3 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        if r1 != $r3 goto label2;

        return -1L;
    }

    public void flush()
    {
        com.android.okio.OkBuffer r0;

        r0 := @this: com.android.okio.OkBuffer;

        return;
    }

    public void close()
    {
        com.android.okio.OkBuffer r0;

        r0 := @this: com.android.okio.OkBuffer;

        return;
    }

    java.util.List segmentSizes()
    {
        com.android.okio.OkBuffer r0;
        java.util.ArrayList r1, $r4;
        com.android.okio.Segment r2, $r3, $r5, $r6, $r8, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Integer $r7, $r10;
        java.util.List $r11;

        r0 := @this: com.android.okio.OkBuffer;

        $r3 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        if $r3 != null goto label1;

        $r11 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r11;

     label1:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r1 = $r4;

        $r5 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        $i1 = $r5.<com.android.okio.Segment: int limit>;

        $r6 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        $i0 = $r6.<com.android.okio.Segment: int pos>;

        $i2 = $i1 - $i0;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r8 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        r2 = $r8.<com.android.okio.Segment: com.android.okio.Segment next>;

     label2:
        $r9 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        if r2 == $r9 goto label3;

        $i4 = r2.<com.android.okio.Segment: int limit>;

        $i3 = r2.<com.android.okio.Segment: int pos>;

        $i5 = $i4 - $i3;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>($r10);

        r2 = r2.<com.android.okio.Segment: com.android.okio.Segment next>;

        goto label2;

     label3:
        return r1;
    }

    public boolean equals(java.lang.Object)
    {
        com.android.okio.OkBuffer r0, r2;
        java.lang.Object r1;
        com.android.okio.Segment r3, r4;
        int i0, i1, i4, $i12, $i13, $i14, $i15, $i17, $i18, $i20, $i21, $i22;
        long l2, l3, $l5, $l6, $l9, $l11, $l16;
        boolean $z0;
        byte $b7, $b8, $b10, $b19, $b23, $b24;
        byte[] $r5, $r6;

        r0 := @this: com.android.okio.OkBuffer;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof com.android.okio.OkBuffer;

        if $z0 != 0 goto label01;

        return 0;

     label01:
        r2 = (com.android.okio.OkBuffer) r1;

        $l6 = r0.<com.android.okio.OkBuffer: long size>;

        $l5 = r2.<com.android.okio.OkBuffer: long size>;

        $b7 = $l6 cmp $l5;

        if $b7 == 0 goto label02;

        return 0;

     label02:
        $l9 = r0.<com.android.okio.OkBuffer: long size>;

        $b8 = $l9 cmp 0L;

        if $b8 != 0 goto label03;

        return 1;

     label03:
        r3 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        r4 = r2.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        i0 = r3.<com.android.okio.Segment: int pos>;

        i1 = r4.<com.android.okio.Segment: int pos>;

        l2 = 0L;

     label04:
        $l11 = r0.<com.android.okio.OkBuffer: long size>;

        $b10 = l2 cmp $l11;

        if $b10 >= 0 goto label10;

        $i13 = r3.<com.android.okio.Segment: int limit>;

        $i14 = $i13 - i0;

        $i12 = r4.<com.android.okio.Segment: int limit>;

        $i15 = $i12 - i1;

        $i17 = staticinvoke <java.lang.Math: int min(int,int)>($i14, $i15);

        l3 = (long) $i17;

        i4 = 0;

     label05:
        $l16 = (long) i4;

        $b19 = $l16 cmp l3;

        if $b19 >= 0 goto label07;

        $r5 = r3.<com.android.okio.Segment: byte[] data>;

        $i20 = i0;

        i0 = i0 + 1;

        $b23 = $r5[$i20];

        $r6 = r4.<com.android.okio.Segment: byte[] data>;

        $i22 = i1;

        i1 = i1 + 1;

        $b24 = $r6[$i22];

        if $b23 == $b24 goto label06;

        return 0;

     label06:
        i4 = i4 + 1;

        goto label05;

     label07:
        $i18 = r3.<com.android.okio.Segment: int limit>;

        if i0 != $i18 goto label08;

        r3 = r3.<com.android.okio.Segment: com.android.okio.Segment next>;

        i0 = r3.<com.android.okio.Segment: int pos>;

     label08:
        $i21 = r4.<com.android.okio.Segment: int limit>;

        if i1 != $i21 goto label09;

        r4 = r4.<com.android.okio.Segment: com.android.okio.Segment next>;

        i1 = r4.<com.android.okio.Segment: int pos>;

     label09:
        l2 = l2 + l3;

        goto label04;

     label10:
        return 1;
    }

    public int hashCode()
    {
        com.android.okio.OkBuffer r0;
        com.android.okio.Segment r1, $r2;
        int i0, i1, i2, $i4;
        byte[] $r3;
        byte $b3;

        r0 := @this: com.android.okio.OkBuffer;

        r1 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        if r1 != null goto label1;

        return 0;

     label1:
        i0 = 1;

     label2:
        i1 = r1.<com.android.okio.Segment: int pos>;

        i2 = r1.<com.android.okio.Segment: int limit>;

     label3:
        if i1 >= i2 goto label4;

        $i4 = 31 * i0;

        $r3 = r1.<com.android.okio.Segment: byte[] data>;

        $b3 = $r3[i1];

        i0 = $i4 + $b3;

        i1 = i1 + 1;

        goto label3;

     label4:
        r1 = r1.<com.android.okio.Segment: com.android.okio.Segment next>;

        $r2 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        if r1 != $r2 goto label2;

        return i0;
    }

    public java.lang.String toString()
    {
        com.android.okio.OkBuffer r0, $r16;
        com.android.okio.ByteString r1, $r14;
        com.android.okio.Segment r2, $r3, $r4, $r5, $r6, $r7, $r10;
        long $l0, $l2, $l8, $l12, $l14;
        byte $b1, $b3;
        int $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i13;
        byte[] $r8, $r12, $r17;
        java.lang.Object[] $r9, $r18;
        java.lang.Long $r11, $r20;
        java.lang.String $r13, $r15, $r19, $r22;
        java.lang.AssertionError $r21;
        java.security.NoSuchAlgorithmException $r23;
        java.security.MessageDigest r24;

        r0 := @this: com.android.okio.OkBuffer;

        $l0 = r0.<com.android.okio.OkBuffer: long size>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        return "OkBuffer[size=0]";

     label1:
        $l2 = r0.<com.android.okio.OkBuffer: long size>;

        $b3 = $l2 cmp 16L;

        if $b3 > 0 goto label2;

        $r16 = virtualinvoke r0.<com.android.okio.OkBuffer: com.android.okio.OkBuffer clone()>();

        $l12 = r0.<com.android.okio.OkBuffer: long size>;

        r1 = virtualinvoke $r16.<com.android.okio.OkBuffer: com.android.okio.ByteString readByteString(long)>($l12);

        $r18 = newarray (java.lang.Object)[2];

        $l14 = r0.<com.android.okio.OkBuffer: long size>;

        $r20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l14);

        $r18[0] = $r20;

        $r19 = virtualinvoke r1.<com.android.okio.ByteString: java.lang.String hex()>();

        $r18[1] = $r19;

        $r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("OkBuffer[size=%s data=%s]", $r18);

        return $r22;

     label2:
        r24 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("MD5");

        $r3 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        $r8 = $r3.<com.android.okio.Segment: byte[] data>;

        $r4 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        $i7 = $r4.<com.android.okio.Segment: int pos>;

        $r5 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        $i5 = $r5.<com.android.okio.Segment: int limit>;

        $r6 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        $i4 = $r6.<com.android.okio.Segment: int pos>;

        $i6 = $i5 - $i4;

        virtualinvoke r24.<java.security.MessageDigest: void update(byte[],int,int)>($r8, $i7, $i6);

        $r7 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        r2 = $r7.<com.android.okio.Segment: com.android.okio.Segment next>;

     label3:
        $r10 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        if r2 == $r10 goto label4;

        $r17 = r2.<com.android.okio.Segment: byte[] data>;

        $i13 = r2.<com.android.okio.Segment: int pos>;

        $i11 = r2.<com.android.okio.Segment: int limit>;

        $i9 = r2.<com.android.okio.Segment: int pos>;

        $i10 = $i11 - $i9;

        virtualinvoke r24.<java.security.MessageDigest: void update(byte[],int,int)>($r17, $i13, $i10);

        r2 = r2.<com.android.okio.Segment: com.android.okio.Segment next>;

        goto label3;

     label4:
        $r9 = newarray (java.lang.Object)[2];

        $l8 = r0.<com.android.okio.OkBuffer: long size>;

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l8);

        $r9[0] = $r11;

        $r12 = virtualinvoke r24.<java.security.MessageDigest: byte[] digest()>();

        $r14 = staticinvoke <com.android.okio.ByteString: com.android.okio.ByteString of(byte[])>($r12);

        $r13 = virtualinvoke $r14.<com.android.okio.ByteString: java.lang.String hex()>();

        $r9[1] = $r13;

        $r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("OkBuffer[size=%s md5=%s]", $r9);

     label5:
        return $r15;

     label6:
        $r23 := @caughtexception;

        $r21 = new java.lang.AssertionError;

        specialinvoke $r21.<java.lang.AssertionError: void <init>()>();

        throw $r21;

        catch java.security.NoSuchAlgorithmException from label2 to label5 with label6;
    }

    public com.android.okio.OkBuffer clone()
    {
        com.android.okio.OkBuffer r0, r1, $r3;
        com.android.okio.Segment r2, $r4, $r5, $r6, $r7, $r10, $r11;
        long $l0;
        byte $b1;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        byte[] $r8, $r13;

        r0 := @this: com.android.okio.OkBuffer;

        $r3 = new com.android.okio.OkBuffer;

        specialinvoke $r3.<com.android.okio.OkBuffer: void <init>()>();

        r1 = $r3;

        $l0 = virtualinvoke r0.<com.android.okio.OkBuffer: long size()>();

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        return r1;

     label1:
        $r4 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        $r8 = $r4.<com.android.okio.Segment: byte[] data>;

        $r5 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        $i5 = $r5.<com.android.okio.Segment: int pos>;

        $r6 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        $i3 = $r6.<com.android.okio.Segment: int limit>;

        $r7 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        $i2 = $r7.<com.android.okio.Segment: int pos>;

        $i4 = $i3 - $i2;

        virtualinvoke r1.<com.android.okio.OkBuffer: com.android.okio.OkBuffer write(byte[],int,int)>($r8, $i5, $i4);

        $r11 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        r2 = $r11.<com.android.okio.Segment: com.android.okio.Segment next>;

     label2:
        $r10 = r0.<com.android.okio.OkBuffer: com.android.okio.Segment head>;

        if r2 == $r10 goto label3;

        $r13 = r2.<com.android.okio.Segment: byte[] data>;

        $i8 = r2.<com.android.okio.Segment: int pos>;

        $i6 = r2.<com.android.okio.Segment: int limit>;

        $i7 = r2.<com.android.okio.Segment: int pos>;

        $i9 = $i6 - $i7;

        virtualinvoke r1.<com.android.okio.OkBuffer: com.android.okio.OkBuffer write(byte[],int,int)>($r13, $i8, $i9);

        r2 = r2.<com.android.okio.Segment: com.android.okio.Segment next>;

        goto label2;

     label3:
        return r1;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        com.android.okio.OkBuffer r0, $r1;

        r0 := @this: com.android.okio.OkBuffer;

        $r1 = virtualinvoke r0.<com.android.okio.OkBuffer: com.android.okio.OkBuffer clone()>();

        return $r1;
    }

    public volatile com.android.okio.Source deadline(com.android.okio.Deadline)
    {
        com.android.okio.OkBuffer r0, $r2;
        com.android.okio.Deadline r1;

        r0 := @this: com.android.okio.OkBuffer;

        r1 := @parameter0: com.android.okio.Deadline;

        $r2 = virtualinvoke r0.<com.android.okio.OkBuffer: com.android.okio.OkBuffer deadline(com.android.okio.Deadline)>(r1);

        return $r2;
    }

    public volatile com.android.okio.BufferedSink emitCompleteSegments() throws java.io.IOException
    {
        com.android.okio.OkBuffer r0, $r1;

        r0 := @this: com.android.okio.OkBuffer;

        $r1 = virtualinvoke r0.<com.android.okio.OkBuffer: com.android.okio.OkBuffer emitCompleteSegments()>();

        return $r1;
    }

    public volatile com.android.okio.BufferedSink writeLong(long) throws java.io.IOException
    {
        com.android.okio.OkBuffer r0, $r1;
        long l0;

        r0 := @this: com.android.okio.OkBuffer;

        l0 := @parameter0: long;

        $r1 = virtualinvoke r0.<com.android.okio.OkBuffer: com.android.okio.OkBuffer writeLong(long)>(l0);

        return $r1;
    }

    public volatile com.android.okio.BufferedSink writeInt(int) throws java.io.IOException
    {
        com.android.okio.OkBuffer r0, $r1;
        int i0;

        r0 := @this: com.android.okio.OkBuffer;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.okio.OkBuffer: com.android.okio.OkBuffer writeInt(int)>(i0);

        return $r1;
    }

    public volatile com.android.okio.BufferedSink writeShort(int) throws java.io.IOException
    {
        com.android.okio.OkBuffer r0, $r1;
        int i0;

        r0 := @this: com.android.okio.OkBuffer;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.okio.OkBuffer: com.android.okio.OkBuffer writeShort(int)>(i0);

        return $r1;
    }

    public volatile com.android.okio.BufferedSink writeByte(int) throws java.io.IOException
    {
        com.android.okio.OkBuffer r0, $r1;
        int i0;

        r0 := @this: com.android.okio.OkBuffer;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.okio.OkBuffer: com.android.okio.OkBuffer writeByte(int)>(i0);

        return $r1;
    }

    public volatile com.android.okio.BufferedSink writeUtf8(java.lang.String) throws java.io.IOException
    {
        com.android.okio.OkBuffer r0, $r2;
        java.lang.String r1;

        r0 := @this: com.android.okio.OkBuffer;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.android.okio.OkBuffer: com.android.okio.OkBuffer writeUtf8(java.lang.String)>(r1);

        return $r2;
    }

    public volatile com.android.okio.BufferedSink write(byte[], int, int) throws java.io.IOException
    {
        com.android.okio.OkBuffer r0, $r2;
        byte[] r1;
        int i0, i1;

        r0 := @this: com.android.okio.OkBuffer;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = virtualinvoke r0.<com.android.okio.OkBuffer: com.android.okio.OkBuffer write(byte[],int,int)>(r1, i0, i1);

        return $r2;
    }

    public volatile com.android.okio.BufferedSink write(byte[]) throws java.io.IOException
    {
        com.android.okio.OkBuffer r0, $r2;
        byte[] r1;

        r0 := @this: com.android.okio.OkBuffer;

        r1 := @parameter0: byte[];

        $r2 = virtualinvoke r0.<com.android.okio.OkBuffer: com.android.okio.OkBuffer write(byte[])>(r1);

        return $r2;
    }

    public volatile com.android.okio.BufferedSink write(com.android.okio.ByteString) throws java.io.IOException
    {
        com.android.okio.OkBuffer r0, $r2;
        com.android.okio.ByteString r1;

        r0 := @this: com.android.okio.OkBuffer;

        r1 := @parameter0: com.android.okio.ByteString;

        $r2 = virtualinvoke r0.<com.android.okio.OkBuffer: com.android.okio.OkBuffer write(com.android.okio.ByteString)>(r1);

        return $r2;
    }

    public volatile com.android.okio.Sink deadline(com.android.okio.Deadline)
    {
        com.android.okio.OkBuffer r0, $r2;
        com.android.okio.Deadline r1;

        r0 := @this: com.android.okio.OkBuffer;

        r1 := @parameter0: com.android.okio.Deadline;

        $r2 = virtualinvoke r0.<com.android.okio.OkBuffer: com.android.okio.OkBuffer deadline(com.android.okio.Deadline)>(r1);

        return $r2;
    }
}
