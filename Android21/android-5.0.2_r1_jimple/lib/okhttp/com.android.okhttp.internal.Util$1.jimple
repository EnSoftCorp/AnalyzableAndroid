final class com.android.okhttp.internal.Util$1 extends java.lang.Object implements java.util.concurrent.ThreadFactory
{
    final java.lang.String val$name;
    final boolean val$daemon;

    void <init>(java.lang.String, boolean)
    {
        com.android.okhttp.internal.Util$1 r0;
        java.lang.String r1;
        boolean z0;

        r0 := @this: com.android.okhttp.internal.Util$1;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r0.<com.android.okhttp.internal.Util$1: java.lang.String val$name> = r1;

        r0.<com.android.okhttp.internal.Util$1: boolean val$daemon> = z0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Thread newThread(java.lang.Runnable)
    {
        com.android.okhttp.internal.Util$1 r0;
        java.lang.Runnable r1;
        java.lang.Thread r2, $r3;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: com.android.okhttp.internal.Util$1;

        r1 := @parameter0: java.lang.Runnable;

        $r3 = new java.lang.Thread;

        $r4 = r0.<com.android.okhttp.internal.Util$1: java.lang.String val$name>;

        specialinvoke $r3.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>(r1, $r4);

        r2 = $r3;

        $z0 = r0.<com.android.okhttp.internal.Util$1: boolean val$daemon>;

        virtualinvoke r2.<java.lang.Thread: void setDaemon(boolean)>($z0);

        return r2;
    }
}
