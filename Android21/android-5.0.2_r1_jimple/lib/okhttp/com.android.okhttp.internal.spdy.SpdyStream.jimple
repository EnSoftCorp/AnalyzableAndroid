public final class com.android.okhttp.internal.spdy.SpdyStream extends java.lang.Object
{
    long unacknowledgedBytesRead;
    long bytesLeftInWriteWindow;
    private final int id;
    private final com.android.okhttp.internal.spdy.SpdyConnection connection;
    private final int priority;
    private long readTimeoutMillis;
    private final java.util.List requestHeaders;
    private java.util.List responseHeaders;
    private final com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource source;
    final com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink sink;
    private com.android.okhttp.internal.spdy.ErrorCode errorCode;
    static final boolean $assertionsDisabled;

    void <init>(int, com.android.okhttp.internal.spdy.SpdyConnection, boolean, boolean, int, java.util.List)
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        int i0, i1, $i2, $i4;
        com.android.okhttp.internal.spdy.SpdyConnection r1;
        boolean z0, z1;
        java.util.List r2;
        com.android.okhttp.internal.spdy.Settings $r3, $r5;
        long $l3, $l5;
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource $r4, $r7;
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink $r6, $r8;
        java.lang.NullPointerException $r9, $r10;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.okhttp.internal.spdy.SpdyConnection;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        i1 := @parameter4: int;

        r2 := @parameter5: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.okhttp.internal.spdy.SpdyStream: long unacknowledgedBytesRead> = 0L;

        r0.<com.android.okhttp.internal.spdy.SpdyStream: long readTimeoutMillis> = 0L;

        r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.ErrorCode errorCode> = null;

        if r1 != null goto label1;

        $r10 = new java.lang.NullPointerException;

        specialinvoke $r10.<java.lang.NullPointerException: void <init>(java.lang.String)>("connection == null");

        throw $r10;

     label1:
        if r2 != null goto label2;

        $r9 = new java.lang.NullPointerException;

        specialinvoke $r9.<java.lang.NullPointerException: void <init>(java.lang.String)>("requestHeaders == null");

        throw $r9;

     label2:
        r0.<com.android.okhttp.internal.spdy.SpdyStream: int id> = i0;

        r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyConnection connection> = r1;

        $r3 = r1.<com.android.okhttp.internal.spdy.SpdyConnection: com.android.okhttp.internal.spdy.Settings peerSettings>;

        $i2 = virtualinvoke $r3.<com.android.okhttp.internal.spdy.Settings: int getInitialWindowSize(int)>(65536);

        $l3 = (long) $i2;

        r0.<com.android.okhttp.internal.spdy.SpdyStream: long bytesLeftInWriteWindow> = $l3;

        $r4 = new com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource;

        $r5 = r1.<com.android.okhttp.internal.spdy.SpdyConnection: com.android.okhttp.internal.spdy.Settings okHttpSettings>;

        $i4 = virtualinvoke $r5.<com.android.okhttp.internal.spdy.Settings: int getInitialWindowSize(int)>(65536);

        $l5 = (long) $i4;

        specialinvoke $r4.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource: void <init>(com.android.okhttp.internal.spdy.SpdyStream,long,com.android.okhttp.internal.spdy.SpdyStream$1)>(r0, $l5, null);

        r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource source> = $r4;

        $r6 = new com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink;

        specialinvoke $r6.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink: void <init>(com.android.okhttp.internal.spdy.SpdyStream)>(r0);

        r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink sink> = $r6;

        $r7 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource source>;

        staticinvoke <com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource: boolean access$102(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource,boolean)>($r7, z1);

        $r8 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink sink>;

        staticinvoke <com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink: boolean access$202(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink,boolean)>($r8, z0);

        r0.<com.android.okhttp.internal.spdy.SpdyStream: int priority> = i1;

        r0.<com.android.okhttp.internal.spdy.SpdyStream: java.util.List requestHeaders> = r2;

        return;
    }

    public int getId()
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        int $i0;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        $i0 = r0.<com.android.okhttp.internal.spdy.SpdyStream: int id>;

        return $i0;
    }

    public synchronized boolean isOpen()
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        com.android.okhttp.internal.spdy.ErrorCode $r1;
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource $r2, $r6;
        boolean $z0, $z1, $z2, $z3;
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink $r3, $r5;
        java.util.List $r4;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        $r1 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.ErrorCode errorCode>;

        if $r1 == null goto label1;

        return 0;

     label1:
        $r2 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource source>;

        $z0 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource: boolean access$100(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource)>($r2);

        if $z0 != 0 goto label2;

        $r6 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource source>;

        $z3 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource: boolean access$300(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource)>($r6);

        if $z3 == 0 goto label4;

     label2:
        $r3 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink sink>;

        $z1 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink: boolean access$200(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink)>($r3);

        if $z1 != 0 goto label3;

        $r5 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink sink>;

        $z2 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink: boolean access$400(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink)>($r5);

        if $z2 == 0 goto label4;

     label3:
        $r4 = r0.<com.android.okhttp.internal.spdy.SpdyStream: java.util.List responseHeaders>;

        if $r4 == null goto label4;

        return 0;

     label4:
        return 1;
    }

    public boolean isLocallyInitiated()
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        boolean z0, $z1, $z2, $z3;
        int $i0, $i1;
        com.android.okhttp.internal.spdy.SpdyConnection $r1;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        $i0 = r0.<com.android.okhttp.internal.spdy.SpdyStream: int id>;

        $i1 = $i0 & 1;

        if $i1 != 1 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        z0 = $z3;

        $r1 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyConnection connection>;

        $z1 = $r1.<com.android.okhttp.internal.spdy.SpdyConnection: boolean client>;

        if $z1 != z0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;
    }

    public com.android.okhttp.internal.spdy.SpdyConnection getConnection()
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        com.android.okhttp.internal.spdy.SpdyConnection $r1;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        $r1 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyConnection connection>;

        return $r1;
    }

    public java.util.List getRequestHeaders()
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        java.util.List $r1;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        $r1 = r0.<com.android.okhttp.internal.spdy.SpdyStream: java.util.List requestHeaders>;

        return $r1;
    }

    public synchronized java.util.List getResponseHeaders() throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        long l0, l1, $l2, $l4, $l7, $l8, $l9, $l10, $l11, $l12;
        java.lang.InterruptedException r1, $r20;
        java.io.InterruptedIOException r2, $r18;
        byte $b3, $b5, $b6;
        java.util.List $r3, $r4, $r10;
        java.io.IOException $r5;
        java.lang.StringBuilder $r6, $r7, $r9, $r13, $r15, $r17;
        com.android.okhttp.internal.spdy.ErrorCode $r8, $r12;
        java.lang.String $r11, $r16;
        java.net.SocketTimeoutException $r14;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        l0 = 0L;

        l1 = 0L;

        $l2 = r0.<com.android.okhttp.internal.spdy.SpdyStream: long readTimeoutMillis>;

        $b3 = $l2 cmp 0L;

        if $b3 == 0 goto label1;

        $l12 = staticinvoke <java.lang.System: long nanoTime()>();

        l1 = $l12 / 1000000L;

        l0 = r0.<com.android.okhttp.internal.spdy.SpdyStream: long readTimeoutMillis>;

     label1:
        $r3 = r0.<com.android.okhttp.internal.spdy.SpdyStream: java.util.List responseHeaders>;

        if $r3 != null goto label4;

        $r12 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.ErrorCode errorCode>;

        if $r12 != null goto label4;

        $l4 = r0.<com.android.okhttp.internal.spdy.SpdyStream: long readTimeoutMillis>;

        $b6 = $l4 cmp 0L;

        if $b6 != 0 goto label2;

        virtualinvoke r0.<java.lang.Object: void wait()>();

        goto label1;

     label2:
        $b5 = l0 cmp 0L;

        if $b5 <= 0 goto label3;

        virtualinvoke r0.<java.lang.Object: void wait(long)>(l0);

        $l9 = r0.<com.android.okhttp.internal.spdy.SpdyStream: long readTimeoutMillis>;

        $l8 = l1 + $l9;

        $l11 = staticinvoke <java.lang.System: long nanoTime()>();

        $l10 = $l11 / 1000000L;

        l0 = $l8 - $l10;

        goto label1;

     label3:
        $r14 = new java.net.SocketTimeoutException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Read response header timeout. readTimeoutMillis: ");

        $l7 = r0.<com.android.okhttp.internal.spdy.SpdyStream: long readTimeoutMillis>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.net.SocketTimeoutException: void <init>(java.lang.String)>($r16);

        throw $r14;

     label4:
        $r4 = r0.<com.android.okhttp.internal.spdy.SpdyStream: java.util.List responseHeaders>;

        if $r4 == null goto label6;

        $r10 = r0.<com.android.okhttp.internal.spdy.SpdyStream: java.util.List responseHeaders>;

     label5:
        return $r10;

     label6:
        $r5 = new java.io.IOException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stream was reset: ");

        $r8 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.ErrorCode errorCode>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r11);

        throw $r5;

     label7:
        $r20 := @caughtexception;

        r1 = $r20;

        $r18 = new java.io.InterruptedIOException;

        specialinvoke $r18.<java.io.InterruptedIOException: void <init>()>();

        r2 = $r18;

        virtualinvoke r2.<java.io.InterruptedIOException: java.lang.Throwable initCause(java.lang.Throwable)>(r1);

        throw r2;

        catch java.lang.InterruptedException from label1 to label5 with label7;
        catch java.lang.InterruptedException from label6 to label7 with label7;
    }

    public synchronized com.android.okhttp.internal.spdy.ErrorCode getErrorCode()
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        com.android.okhttp.internal.spdy.ErrorCode $r1;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        $r1 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.ErrorCode errorCode>;

        return $r1;
    }

    public void reply(java.util.List, boolean) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyStream r0, r2;
        java.util.List r1, $r5;
        boolean z0, z1, $z2, $z4;
        java.lang.Throwable r3, $r11;
        int $i0;
        com.android.okhttp.internal.spdy.SpdyConnection $r6, $r7;
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink $r8;
        java.lang.IllegalStateException $r9;
        java.lang.NullPointerException $r10;
        java.lang.AssertionError $r12;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        r1 := @parameter0: java.util.List;

        z0 := @parameter1: boolean;

        $z2 = <com.android.okhttp.internal.spdy.SpdyStream: boolean $assertionsDisabled>;

        if $z2 != 0 goto label01;

        $z4 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>(r0);

        if $z4 == 0 goto label01;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>()>();

        throw $r12;

     label01:
        z1 = 0;

        r2 = r0;

        entermonitor r0;

     label02:
        if r1 != null goto label03;

        $r10 = new java.lang.NullPointerException;

        specialinvoke $r10.<java.lang.NullPointerException: void <init>(java.lang.String)>("responseHeaders == null");

        throw $r10;

     label03:
        $r5 = r0.<com.android.okhttp.internal.spdy.SpdyStream: java.util.List responseHeaders>;

        if $r5 == null goto label04;

        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("reply already sent");

        throw $r9;

     label04:
        r0.<com.android.okhttp.internal.spdy.SpdyStream: java.util.List responseHeaders> = r1;

        if z0 != 0 goto label05;

        $r8 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink sink>;

        staticinvoke <com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink: boolean access$202(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink,boolean)>($r8, 1);

        z1 = 1;

     label05:
        exitmonitor r2;

     label06:
        goto label09;

     label07:
        $r11 := @caughtexception;

        r3 = $r11;

        exitmonitor r2;

     label08:
        throw r3;

     label09:
        $r6 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyConnection connection>;

        $i0 = r0.<com.android.okhttp.internal.spdy.SpdyStream: int id>;

        virtualinvoke $r6.<com.android.okhttp.internal.spdy.SpdyConnection: void writeSynReply(int,boolean,java.util.List)>($i0, z1, r1);

        if z1 == 0 goto label10;

        $r7 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyConnection connection>;

        virtualinvoke $r7.<com.android.okhttp.internal.spdy.SpdyConnection: void flush()>();

     label10:
        return;

        catch java.lang.Throwable from label02 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    public void setReadTimeout(long)
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        long l0;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        l0 := @parameter0: long;

        r0.<com.android.okhttp.internal.spdy.SpdyStream: long readTimeoutMillis> = l0;

        return;
    }

    public long getReadTimeoutMillis()
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        long $l0;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        $l0 = r0.<com.android.okhttp.internal.spdy.SpdyStream: long readTimeoutMillis>;

        return $l0;
    }

    public com.android.okio.Source getSource()
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource $r1;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        $r1 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource source>;

        return $r1;
    }

    public com.android.okio.Sink getSink()
    {
        com.android.okhttp.internal.spdy.SpdyStream r0, r1;
        java.lang.Throwable r2, $r7;
        java.util.List $r4;
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink $r5;
        boolean $z0;
        java.lang.IllegalStateException $r6;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        r1 = r0;

        entermonitor r0;

     label1:
        $r4 = r0.<com.android.okhttp.internal.spdy.SpdyStream: java.util.List responseHeaders>;

        if $r4 != null goto label2;

        $z0 = virtualinvoke r0.<com.android.okhttp.internal.spdy.SpdyStream: boolean isLocallyInitiated()>();

        if $z0 != 0 goto label2;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("reply before requesting the sink");

        throw $r6;

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        $r5 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink sink>;

        return $r5;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void close(com.android.okhttp.internal.spdy.ErrorCode) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        com.android.okhttp.internal.spdy.ErrorCode r1;
        boolean $z0;
        int $i0;
        com.android.okhttp.internal.spdy.SpdyConnection $r2;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        r1 := @parameter0: com.android.okhttp.internal.spdy.ErrorCode;

        $z0 = specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyStream: boolean closeInternal(com.android.okhttp.internal.spdy.ErrorCode)>(r1);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyConnection connection>;

        $i0 = r0.<com.android.okhttp.internal.spdy.SpdyStream: int id>;

        virtualinvoke $r2.<com.android.okhttp.internal.spdy.SpdyConnection: void writeSynReset(int,com.android.okhttp.internal.spdy.ErrorCode)>($i0, r1);

        return;
    }

    public void closeLater(com.android.okhttp.internal.spdy.ErrorCode)
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        com.android.okhttp.internal.spdy.ErrorCode r1;
        boolean $z0;
        int $i0;
        com.android.okhttp.internal.spdy.SpdyConnection $r2;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        r1 := @parameter0: com.android.okhttp.internal.spdy.ErrorCode;

        $z0 = specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyStream: boolean closeInternal(com.android.okhttp.internal.spdy.ErrorCode)>(r1);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyConnection connection>;

        $i0 = r0.<com.android.okhttp.internal.spdy.SpdyStream: int id>;

        virtualinvoke $r2.<com.android.okhttp.internal.spdy.SpdyConnection: void writeSynResetLater(int,com.android.okhttp.internal.spdy.ErrorCode)>($i0, r1);

        return;
    }

    private boolean closeInternal(com.android.okhttp.internal.spdy.ErrorCode)
    {
        com.android.okhttp.internal.spdy.SpdyStream r0, r2;
        com.android.okhttp.internal.spdy.ErrorCode r1, $r5;
        java.lang.Throwable r3, $r10;
        boolean $z0, $z1, $z2, $z3;
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource $r6;
        int $i0;
        com.android.okhttp.internal.spdy.SpdyConnection $r7;
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink $r9;
        java.lang.AssertionError $r11;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        r1 := @parameter0: com.android.okhttp.internal.spdy.ErrorCode;

        $z0 = <com.android.okhttp.internal.spdy.SpdyStream: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $z3 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>(r0);

        if $z3 == 0 goto label01;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label01:
        r2 = r0;

        entermonitor r0;

     label02:
        $r5 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.ErrorCode errorCode>;

        if $r5 == null goto label04;

        exitmonitor r2;

     label03:
        return 0;

     label04:
        $r6 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource source>;

        $z1 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource: boolean access$100(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource)>($r6);

        if $z1 == 0 goto label06;

        $r9 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink sink>;

        $z2 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink: boolean access$200(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink)>($r9);

        if $z2 == 0 goto label06;

        exitmonitor r2;

     label05:
        return 0;

     label06:
        r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.ErrorCode errorCode> = r1;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r2;

     label07:
        goto label10;

     label08:
        $r10 := @caughtexception;

        r3 = $r10;

        exitmonitor r2;

     label09:
        throw r3;

     label10:
        $r7 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyConnection connection>;

        $i0 = r0.<com.android.okhttp.internal.spdy.SpdyStream: int id>;

        virtualinvoke $r7.<com.android.okhttp.internal.spdy.SpdyConnection: com.android.okhttp.internal.spdy.SpdyStream removeStream(int)>($i0);

        return 1;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    void receiveHeaders(java.util.List, com.android.okhttp.internal.spdy.HeadersMode)
    {
        com.android.okhttp.internal.spdy.SpdyStream r0, r4;
        java.util.List r1, $r8, $r10;
        com.android.okhttp.internal.spdy.HeadersMode r2;
        com.android.okhttp.internal.spdy.ErrorCode r3;
        boolean z0, $z1, $z2, $z5, $z6;
        java.util.ArrayList r5, $r9;
        java.lang.Throwable r6, $r14;
        int $i0;
        com.android.okhttp.internal.spdy.SpdyConnection $r12;
        java.lang.AssertionError $r13;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        r1 := @parameter0: java.util.List;

        r2 := @parameter1: com.android.okhttp.internal.spdy.HeadersMode;

        $z1 = <com.android.okhttp.internal.spdy.SpdyStream: boolean $assertionsDisabled>;

        if $z1 != 0 goto label01;

        $z6 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>(r0);

        if $z6 == 0 goto label01;

        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>()>();

        throw $r13;

     label01:
        r3 = null;

        z0 = 1;

        r4 = r0;

        entermonitor r0;

     label02:
        $r8 = r0.<com.android.okhttp.internal.spdy.SpdyStream: java.util.List responseHeaders>;

        if $r8 != null goto label04;

        $z5 = virtualinvoke r2.<com.android.okhttp.internal.spdy.HeadersMode: boolean failIfHeadersAbsent()>();

        if $z5 == 0 goto label03;

        r3 = <com.android.okhttp.internal.spdy.ErrorCode: com.android.okhttp.internal.spdy.ErrorCode PROTOCOL_ERROR>;

        goto label06;

     label03:
        r0.<com.android.okhttp.internal.spdy.SpdyStream: java.util.List responseHeaders> = r1;

        z0 = virtualinvoke r0.<com.android.okhttp.internal.spdy.SpdyStream: boolean isOpen()>();

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        goto label06;

     label04:
        $z2 = virtualinvoke r2.<com.android.okhttp.internal.spdy.HeadersMode: boolean failIfHeadersPresent()>();

        if $z2 == 0 goto label05;

        r3 = <com.android.okhttp.internal.spdy.ErrorCode: com.android.okhttp.internal.spdy.ErrorCode STREAM_IN_USE>;

        goto label06;

     label05:
        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r5 = $r9;

        $r10 = r0.<com.android.okhttp.internal.spdy.SpdyStream: java.util.List responseHeaders>;

        interfaceinvoke r5.<java.util.List: boolean addAll(java.util.Collection)>($r10);

        interfaceinvoke r5.<java.util.List: boolean addAll(java.util.Collection)>(r1);

        r0.<com.android.okhttp.internal.spdy.SpdyStream: java.util.List responseHeaders> = r5;

     label06:
        exitmonitor r4;

     label07:
        goto label10;

     label08:
        $r14 := @caughtexception;

        r6 = $r14;

        exitmonitor r4;

     label09:
        throw r6;

     label10:
        if r3 == null goto label11;

        virtualinvoke r0.<com.android.okhttp.internal.spdy.SpdyStream: void closeLater(com.android.okhttp.internal.spdy.ErrorCode)>(r3);

        goto label12;

     label11:
        if z0 != 0 goto label12;

        $r12 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyConnection connection>;

        $i0 = r0.<com.android.okhttp.internal.spdy.SpdyStream: int id>;

        virtualinvoke $r12.<com.android.okhttp.internal.spdy.SpdyConnection: com.android.okhttp.internal.spdy.SpdyStream removeStream(int)>($i0);

     label12:
        return;

        catch java.lang.Throwable from label02 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    void receiveData(com.android.okio.BufferedSource, int) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        com.android.okio.BufferedSource r1;
        int i0;
        boolean $z0, $z1;
        long $l1;
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource $r2;
        java.lang.AssertionError $r3;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        r1 := @parameter0: com.android.okio.BufferedSource;

        i0 := @parameter1: int;

        $z0 = <com.android.okhttp.internal.spdy.SpdyStream: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>(r0);

        if $z1 == 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $r2 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource source>;

        $l1 = (long) i0;

        virtualinvoke $r2.<com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource: void receive(com.android.okio.BufferedSource,long)>(r1, $l1);

        return;
    }

    void receiveFin()
    {
        com.android.okhttp.internal.spdy.SpdyStream r0, r1;
        boolean z0, $z1, $z3;
        java.lang.Throwable r2, $r8;
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource $r4;
        int $i0;
        com.android.okhttp.internal.spdy.SpdyConnection $r5;
        java.lang.AssertionError $r7;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        $z1 = <com.android.okhttp.internal.spdy.SpdyStream: boolean $assertionsDisabled>;

        if $z1 != 0 goto label1;

        $z3 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>(r0);

        if $z3 == 0 goto label1;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label1:
        r1 = r0;

        entermonitor r0;

     label2:
        $r4 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource source>;

        staticinvoke <com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource: boolean access$102(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource,boolean)>($r4, 1);

        z0 = virtualinvoke r0.<com.android.okhttp.internal.spdy.SpdyStream: boolean isOpen()>();

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r8 := @caughtexception;

        r2 = $r8;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        if z0 != 0 goto label7;

        $r5 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyConnection connection>;

        $i0 = r0.<com.android.okhttp.internal.spdy.SpdyStream: int id>;

        virtualinvoke $r5.<com.android.okhttp.internal.spdy.SpdyConnection: com.android.okhttp.internal.spdy.SpdyStream removeStream(int)>($i0);

     label7:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    synchronized void receiveRstStream(com.android.okhttp.internal.spdy.ErrorCode)
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        com.android.okhttp.internal.spdy.ErrorCode r1, $r2;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        r1 := @parameter0: com.android.okhttp.internal.spdy.ErrorCode;

        $r2 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.ErrorCode errorCode>;

        if $r2 != null goto label1;

        r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.ErrorCode errorCode> = r1;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

     label1:
        return;
    }

    int getPriority()
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        int $i0;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        $i0 = r0.<com.android.okhttp.internal.spdy.SpdyStream: int priority>;

        return $i0;
    }

    private void cancelStreamIfNecessary() throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyStream r0, r1;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.lang.Throwable r2, $r12;
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource $r4, $r8;
        int $i0;
        com.android.okhttp.internal.spdy.SpdyConnection $r5;
        com.android.okhttp.internal.spdy.ErrorCode $r7;
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink $r9, $r10;
        java.lang.AssertionError $r11;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        $z2 = <com.android.okhttp.internal.spdy.SpdyStream: boolean $assertionsDisabled>;

        if $z2 != 0 goto label01;

        $z8 = staticinvoke <java.lang.Thread: boolean holdsLock(java.lang.Object)>(r0);

        if $z8 == 0 goto label01;

        $r11 = new java.lang.AssertionError;

        specialinvoke $r11.<java.lang.AssertionError: void <init>()>();

        throw $r11;

     label01:
        r1 = r0;

        entermonitor r0;

     label02:
        $r4 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource source>;

        $z3 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource: boolean access$100(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource)>($r4);

        if $z3 != 0 goto label04;

        $r8 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource source>;

        $z4 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource: boolean access$300(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSource)>($r8);

        if $z4 == 0 goto label04;

        $r9 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink sink>;

        $z6 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink: boolean access$200(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink)>($r9);

        if $z6 != 0 goto label03;

        $r10 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink sink>;

        $z7 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink: boolean access$400(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink)>($r10);

        if $z7 == 0 goto label04;

     label03:
        $z5 = 1;

        goto label05;

     label04:
        $z5 = 0;

     label05:
        z0 = $z5;

        z1 = virtualinvoke r0.<com.android.okhttp.internal.spdy.SpdyStream: boolean isOpen()>();

        exitmonitor r1;

     label06:
        goto label09;

     label07:
        $r12 := @caughtexception;

        r2 = $r12;

        exitmonitor r1;

     label08:
        throw r2;

     label09:
        if z0 == 0 goto label10;

        $r7 = <com.android.okhttp.internal.spdy.ErrorCode: com.android.okhttp.internal.spdy.ErrorCode CANCEL>;

        virtualinvoke r0.<com.android.okhttp.internal.spdy.SpdyStream: void close(com.android.okhttp.internal.spdy.ErrorCode)>($r7);

        goto label11;

     label10:
        if z1 != 0 goto label11;

        $r5 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyConnection connection>;

        $i0 = r0.<com.android.okhttp.internal.spdy.SpdyStream: int id>;

        virtualinvoke $r5.<com.android.okhttp.internal.spdy.SpdyConnection: com.android.okhttp.internal.spdy.SpdyStream removeStream(int)>($i0);

     label11:
        return;

        catch java.lang.Throwable from label02 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    void addBytesToWriteWindow(long)
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        long l0, $l1, $l2;
        byte $b3;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        l0 := @parameter0: long;

        $l1 = r0.<com.android.okhttp.internal.spdy.SpdyStream: long bytesLeftInWriteWindow>;

        $l2 = $l1 + l0;

        r0.<com.android.okhttp.internal.spdy.SpdyStream: long bytesLeftInWriteWindow> = $l2;

        $b3 = l0 cmp 0L;

        if $b3 <= 0 goto label1;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

     label1:
        return;
    }

    private void checkOutNotClosed() throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink $r1, $r2;
        boolean $z0, $z1;
        com.android.okhttp.internal.spdy.ErrorCode $r3, $r7;
        java.io.IOException $r4, $r10, $r11;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.lang.String $r9;

        r0 := @this: com.android.okhttp.internal.spdy.SpdyStream;

        $r1 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink sink>;

        $z0 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink: boolean access$400(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink)>($r1);

        if $z0 == 0 goto label1;

        $r11 = new java.io.IOException;

        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>("stream closed");

        throw $r11;

     label1:
        $r2 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink sink>;

        $z1 = staticinvoke <com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink: boolean access$200(com.android.okhttp.internal.spdy.SpdyStream$SpdyDataSink)>($r2);

        if $z1 == 0 goto label2;

        $r10 = new java.io.IOException;

        specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String)>("stream finished");

        throw $r10;

     label2:
        $r3 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.ErrorCode errorCode>;

        if $r3 == null goto label3;

        $r4 = new java.io.IOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stream was reset: ");

        $r7 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.ErrorCode errorCode>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label3:
        return;
    }

    static com.android.okhttp.internal.spdy.SpdyConnection access$500(com.android.okhttp.internal.spdy.SpdyStream)
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        com.android.okhttp.internal.spdy.SpdyConnection $r1;

        r0 := @parameter0: com.android.okhttp.internal.spdy.SpdyStream;

        $r1 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.SpdyConnection connection>;

        return $r1;
    }

    static int access$600(com.android.okhttp.internal.spdy.SpdyStream)
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        int $i0;

        r0 := @parameter0: com.android.okhttp.internal.spdy.SpdyStream;

        $i0 = r0.<com.android.okhttp.internal.spdy.SpdyStream: int id>;

        return $i0;
    }

    static long access$700(com.android.okhttp.internal.spdy.SpdyStream)
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        long $l0;

        r0 := @parameter0: com.android.okhttp.internal.spdy.SpdyStream;

        $l0 = r0.<com.android.okhttp.internal.spdy.SpdyStream: long readTimeoutMillis>;

        return $l0;
    }

    static com.android.okhttp.internal.spdy.ErrorCode access$800(com.android.okhttp.internal.spdy.SpdyStream)
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;
        com.android.okhttp.internal.spdy.ErrorCode $r1;

        r0 := @parameter0: com.android.okhttp.internal.spdy.SpdyStream;

        $r1 = r0.<com.android.okhttp.internal.spdy.SpdyStream: com.android.okhttp.internal.spdy.ErrorCode errorCode>;

        return $r1;
    }

    static void access$900(com.android.okhttp.internal.spdy.SpdyStream) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;

        r0 := @parameter0: com.android.okhttp.internal.spdy.SpdyStream;

        specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyStream: void cancelStreamIfNecessary()>();

        return;
    }

    static void access$1000(com.android.okhttp.internal.spdy.SpdyStream) throws java.io.IOException
    {
        com.android.okhttp.internal.spdy.SpdyStream r0;

        r0 := @parameter0: com.android.okhttp.internal.spdy.SpdyStream;

        specialinvoke r0.<com.android.okhttp.internal.spdy.SpdyStream: void checkOutNotClosed()>();

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "com/android/okhttp/internal/spdy/SpdyStream";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.android.okhttp.internal.spdy.SpdyStream: boolean $assertionsDisabled> = $z1;

        return;
    }
}
