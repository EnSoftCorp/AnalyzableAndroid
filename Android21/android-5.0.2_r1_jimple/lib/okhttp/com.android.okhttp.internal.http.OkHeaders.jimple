public final class com.android.okhttp.internal.http.OkHeaders extends java.lang.Object
{
    private static final java.util.Comparator FIELD_NAME_COMPARATOR;
    static final java.lang.String PREFIX;
    public static final java.lang.String SENT_MILLIS;
    public static final java.lang.String RECEIVED_MILLIS;
    public static final java.lang.String RESPONSE_SOURCE;
    public static final java.lang.String SELECTED_PROTOCOL;

    private void <init>()
    {
        com.android.okhttp.internal.http.OkHeaders r0;

        r0 := @this: com.android.okhttp.internal.http.OkHeaders;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static long contentLength(com.android.okhttp.Request)
    {
        com.android.okhttp.Request r0;
        com.android.okhttp.Headers $r1;
        long $l0;

        r0 := @parameter0: com.android.okhttp.Request;

        $r1 = virtualinvoke r0.<com.android.okhttp.Request: com.android.okhttp.Headers headers()>();

        $l0 = staticinvoke <com.android.okhttp.internal.http.OkHeaders: long contentLength(com.android.okhttp.Headers)>($r1);

        return $l0;
    }

    public static long contentLength(com.android.okhttp.Response)
    {
        com.android.okhttp.Response r0;
        com.android.okhttp.Headers $r1;
        long $l0;

        r0 := @parameter0: com.android.okhttp.Response;

        $r1 = virtualinvoke r0.<com.android.okhttp.Response: com.android.okhttp.Headers headers()>();

        $l0 = staticinvoke <com.android.okhttp.internal.http.OkHeaders: long contentLength(com.android.okhttp.Headers)>($r1);

        return $l0;
    }

    public static long contentLength(com.android.okhttp.Headers)
    {
        com.android.okhttp.Headers r0;
        java.lang.String $r1;
        long $l0;

        r0 := @parameter0: com.android.okhttp.Headers;

        $r1 = virtualinvoke r0.<com.android.okhttp.Headers: java.lang.String get(java.lang.String)>("Content-Length");

        $l0 = staticinvoke <com.android.okhttp.internal.http.OkHeaders: long stringToLong(java.lang.String)>($r1);

        return $l0;
    }

    private static long stringToLong(java.lang.String)
    {
        java.lang.String r0;
        long $l0;
        java.lang.NumberFormatException $r2;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return -1L;

     label1:
        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r0);

     label2:
        return $l0;

     label3:
        $r2 := @caughtexception;

        return -1L;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static java.util.Map toMultimap(com.android.okhttp.Headers, java.lang.String)
    {
        com.android.okhttp.Headers r0;
        java.lang.String r1, r3, r4;
        java.util.TreeMap r2, $r7;
        int i0, $i1;
        java.util.ArrayList r5, $r14;
        java.util.List r6, $r10, $r11, $r15;
        java.util.Comparator $r8;
        java.util.Map $r9;
        java.lang.Object $r13;

        r0 := @parameter0: com.android.okhttp.Headers;

        r1 := @parameter1: java.lang.String;

        $r7 = new java.util.TreeMap;

        $r8 = <com.android.okhttp.internal.http.OkHeaders: java.util.Comparator FIELD_NAME_COMPARATOR>;

        specialinvoke $r7.<java.util.TreeMap: void <init>(java.util.Comparator)>($r8);

        r2 = $r7;

        i0 = 0;

     label1:
        $i1 = virtualinvoke r0.<com.android.okhttp.Headers: int size()>();

        if i0 >= $i1 goto label3;

        r3 = virtualinvoke r0.<com.android.okhttp.Headers: java.lang.String name(int)>(i0);

        r4 = virtualinvoke r0.<com.android.okhttp.Headers: java.lang.String value(int)>(i0);

        $r14 = new java.util.ArrayList;

        specialinvoke $r14.<java.util.ArrayList: void <init>()>();

        r5 = $r14;

        $r13 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r6 = (java.util.List) $r13;

        if r6 == null goto label2;

        interfaceinvoke r5.<java.util.List: boolean addAll(java.util.Collection)>(r6);

     label2:
        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r4);

        $r15 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r5);

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r15);

        i0 = i0 + 1;

        goto label1;

     label3:
        if r1 == null goto label4;

        $r10 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r1);

        $r11 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r10);

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(null, $r11);

     label4:
        $r9 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(r2);

        return $r9;
    }

    public static void addCookies(com.android.okhttp.Request$Builder, java.util.Map)
    {
        com.android.okhttp.Request$Builder r0;
        java.util.Map r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        java.lang.String r4, $r8, $r12, $r14;
        java.util.Set $r5;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r6, $r7, $r9, $r11;
        java.util.List $r10, $r13;

        r0 := @parameter0: com.android.okhttp.Request$Builder;

        r1 := @parameter1: java.util.Map;

        $r5 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r6;

        $r7 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        r4 = (java.lang.String) $r7;

        $r8 = "Cookie";

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r4);

        if $z1 != 0 goto label2;

        $r14 = "Cookie2";

        $z3 = virtualinvoke $r14.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r4);

        if $z3 == 0 goto label3;

     label2:
        $r9 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r10 = (java.util.List) $r9;

        $z2 = interfaceinvoke $r10.<java.util.List: boolean isEmpty()>();

        if $z2 != 0 goto label3;

        $r11 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = (java.util.List) $r11;

        $r12 = staticinvoke <com.android.okhttp.internal.http.OkHeaders: java.lang.String buildCookieHeader(java.util.List)>($r13);

        virtualinvoke r0.<com.android.okhttp.Request$Builder: com.android.okhttp.Request$Builder addHeader(java.lang.String,java.lang.String)>(r4, $r12);

     label3:
        goto label1;

     label4:
        return;
    }

    private static java.lang.String buildCookieHeader(java.util.List)
    {
        java.util.List r0;
        java.lang.StringBuilder r1, $r2;
        int i0, $i1, $i2;
        java.lang.String $r3, $r5, $r9;
        java.lang.Object $r4, $r8;

        r0 := @parameter0: java.util.List;

        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i1 != 1 goto label1;

        $r8 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        $r9 = (java.lang.String) $r8;

        return $r9;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        i0 = 0;

     label2:
        $i2 = interfaceinvoke r0.<java.util.List: int size()>();

        if i0 >= $i2 goto label4;

        if i0 <= 0 goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

     label3:
        $r4 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i0);

        $r5 = (java.lang.String) $r4;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        i0 = i0 + 1;

        goto label2;

     label4:
        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    static void <clinit>()
    {
        com.android.okhttp.internal.http.OkHeaders$1 $r0;
        com.android.okhttp.internal.Platform $r1;
        java.lang.String $r2, $r4, $r7, $r9, $r12, $r14, $r16, $r18, $r22;
        java.lang.StringBuilder $r3, $r5, $r6, $r8, $r10, $r11, $r13, $r15, $r17, $r19, $r20, $r21;

        $r0 = new com.android.okhttp.internal.http.OkHeaders$1;

        specialinvoke $r0.<com.android.okhttp.internal.http.OkHeaders$1: void <init>()>();

        <com.android.okhttp.internal.http.OkHeaders: java.util.Comparator FIELD_NAME_COMPARATOR> = $r0;

        $r1 = staticinvoke <com.android.okhttp.internal.Platform: com.android.okhttp.internal.Platform get()>();

        $r2 = virtualinvoke $r1.<com.android.okhttp.internal.Platform: java.lang.String getPrefix()>();

        <com.android.okhttp.internal.http.OkHeaders: java.lang.String PREFIX> = $r2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = <com.android.okhttp.internal.http.OkHeaders: java.lang.String PREFIX>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-Sent-Millis");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.android.okhttp.internal.http.OkHeaders: java.lang.String SENT_MILLIS> = $r7;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = <com.android.okhttp.internal.http.OkHeaders: java.lang.String PREFIX>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-Received-Millis");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.android.okhttp.internal.http.OkHeaders: java.lang.String RECEIVED_MILLIS> = $r12;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = <com.android.okhttp.internal.http.OkHeaders: java.lang.String PREFIX>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-Response-Source");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.android.okhttp.internal.http.OkHeaders: java.lang.String RESPONSE_SOURCE> = $r16;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r18 = <com.android.okhttp.internal.http.OkHeaders: java.lang.String PREFIX>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-Selected-Protocol");

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.android.okhttp.internal.http.OkHeaders: java.lang.String SELECTED_PROTOCOL> = $r22;

        return;
    }
}
