class com.android.okhttp.OkHttpClient$1 extends java.net.URLStreamHandler
{
    final java.lang.String val$protocol;
    final com.android.okhttp.OkHttpClient this$0;

    void <init>(com.android.okhttp.OkHttpClient, java.lang.String)
    {
        com.android.okhttp.OkHttpClient$1 r0;
        com.android.okhttp.OkHttpClient r1;
        java.lang.String r2;

        r0 := @this: com.android.okhttp.OkHttpClient$1;

        r1 := @parameter0: com.android.okhttp.OkHttpClient;

        r2 := @parameter1: java.lang.String;

        r0.<com.android.okhttp.OkHttpClient$1: com.android.okhttp.OkHttpClient this$0> = r1;

        r0.<com.android.okhttp.OkHttpClient$1: java.lang.String val$protocol> = r2;

        specialinvoke r0.<java.net.URLStreamHandler: void <init>()>();

        return;
    }

    protected java.net.URLConnection openConnection(java.net.URL)
    {
        com.android.okhttp.OkHttpClient$1 r0;
        java.net.URL r1;
        com.android.okhttp.OkHttpClient $r2;
        java.net.HttpURLConnection $r3;

        r0 := @this: com.android.okhttp.OkHttpClient$1;

        r1 := @parameter0: java.net.URL;

        $r2 = r0.<com.android.okhttp.OkHttpClient$1: com.android.okhttp.OkHttpClient this$0>;

        $r3 = virtualinvoke $r2.<com.android.okhttp.OkHttpClient: java.net.HttpURLConnection open(java.net.URL)>(r1);

        return $r3;
    }

    protected java.net.URLConnection openConnection(java.net.URL, java.net.Proxy)
    {
        com.android.okhttp.OkHttpClient$1 r0;
        java.net.URL r1;
        java.net.Proxy r2;
        com.android.okhttp.OkHttpClient $r3;
        java.net.HttpURLConnection $r4;

        r0 := @this: com.android.okhttp.OkHttpClient$1;

        r1 := @parameter0: java.net.URL;

        r2 := @parameter1: java.net.Proxy;

        $r3 = r0.<com.android.okhttp.OkHttpClient$1: com.android.okhttp.OkHttpClient this$0>;

        $r4 = virtualinvoke $r3.<com.android.okhttp.OkHttpClient: java.net.HttpURLConnection open(java.net.URL,java.net.Proxy)>(r1, r2);

        return $r4;
    }

    protected int getDefaultPort()
    {
        com.android.okhttp.OkHttpClient$1 r0;
        java.lang.String $r1, $r2;
        boolean $z0, $z1;
        java.lang.AssertionError $r3;

        r0 := @this: com.android.okhttp.OkHttpClient$1;

        $r1 = r0.<com.android.okhttp.OkHttpClient$1: java.lang.String val$protocol>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("http");

        if $z0 == 0 goto label1;

        return 80;

     label1:
        $r2 = r0.<com.android.okhttp.OkHttpClient$1: java.lang.String val$protocol>;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("https");

        if $z1 == 0 goto label2;

        return 443;

     label2:
        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;
    }
}
