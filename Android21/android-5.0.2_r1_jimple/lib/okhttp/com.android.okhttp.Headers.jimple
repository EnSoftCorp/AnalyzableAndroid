public final class com.android.okhttp.Headers extends java.lang.Object
{
    private final java.lang.String[] namesAndValues;

    private void <init>(com.android.okhttp.Headers$Builder)
    {
        com.android.okhttp.Headers r0;
        com.android.okhttp.Headers$Builder r1;
        java.util.List $r2, $r3;
        int $i0;
        java.lang.String[] $r4, $r6;
        java.lang.Object[] $r5;

        r0 := @this: com.android.okhttp.Headers;

        r1 := @parameter0: com.android.okhttp.Headers$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.android.okhttp.Headers$Builder: java.util.List access$000(com.android.okhttp.Headers$Builder)>(r1);

        $r3 = staticinvoke <com.android.okhttp.Headers$Builder: java.util.List access$000(com.android.okhttp.Headers$Builder)>(r1);

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        $r4 = newarray (java.lang.String)[$i0];

        $r5 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (java.lang.String[]) $r5;

        r0.<com.android.okhttp.Headers: java.lang.String[] namesAndValues> = $r6;

        return;
    }

    public java.lang.String get(java.lang.String)
    {
        com.android.okhttp.Headers r0;
        java.lang.String r1, $r3;
        java.lang.String[] $r2;

        r0 := @this: com.android.okhttp.Headers;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.okhttp.Headers: java.lang.String[] namesAndValues>;

        $r3 = staticinvoke <com.android.okhttp.Headers: java.lang.String get(java.lang.String[],java.lang.String)>($r2, r1);

        return $r3;
    }

    public int size()
    {
        com.android.okhttp.Headers r0;
        java.lang.String[] $r1;
        int $i0, $i1;

        r0 := @this: com.android.okhttp.Headers;

        $r1 = r0.<com.android.okhttp.Headers: java.lang.String[] namesAndValues>;

        $i0 = lengthof $r1;

        $i1 = $i0 / 2;

        return $i1;
    }

    public java.lang.String name(int)
    {
        com.android.okhttp.Headers r0;
        int i0, i1, $i2;
        java.lang.String[] $r1, $r2;
        java.lang.String $r3;

        r0 := @this: com.android.okhttp.Headers;

        i0 := @parameter0: int;

        i1 = i0 * 2;

        if i1 < 0 goto label1;

        $r1 = r0.<com.android.okhttp.Headers: java.lang.String[] namesAndValues>;

        $i2 = lengthof $r1;

        if i1 < $i2 goto label2;

     label1:
        return null;

     label2:
        $r2 = r0.<com.android.okhttp.Headers: java.lang.String[] namesAndValues>;

        $r3 = $r2[i1];

        return $r3;
    }

    public java.lang.String value(int)
    {
        com.android.okhttp.Headers r0;
        int i0, i1, $i2, $i3;
        java.lang.String[] $r1, $r2;
        java.lang.String $r3;

        r0 := @this: com.android.okhttp.Headers;

        i0 := @parameter0: int;

        $i2 = i0 * 2;

        i1 = $i2 + 1;

        if i1 < 0 goto label1;

        $r1 = r0.<com.android.okhttp.Headers: java.lang.String[] namesAndValues>;

        $i3 = lengthof $r1;

        if i1 < $i3 goto label2;

     label1:
        return null;

     label2:
        $r2 = r0.<com.android.okhttp.Headers: java.lang.String[] namesAndValues>;

        $r3 = $r2[i1];

        return $r3;
    }

    public java.util.Set names()
    {
        com.android.okhttp.Headers r0;
        java.util.TreeSet r1, $r2;
        int i0, $i1;
        java.util.Comparator $r3;
        java.util.Set $r4;
        java.lang.String $r5;

        r0 := @this: com.android.okhttp.Headers;

        $r2 = new java.util.TreeSet;

        $r3 = <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER>;

        specialinvoke $r2.<java.util.TreeSet: void <init>(java.util.Comparator)>($r3);

        r1 = $r2;

        i0 = 0;

     label1:
        $i1 = virtualinvoke r0.<com.android.okhttp.Headers: int size()>();

        if i0 >= $i1 goto label2;

        $r5 = virtualinvoke r0.<com.android.okhttp.Headers: java.lang.String name(int)>(i0);

        virtualinvoke r1.<java.util.TreeSet: boolean add(java.lang.Object)>($r5);

        i0 = i0 + 1;

        goto label1;

     label2:
        $r4 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>(r1);

        return $r4;
    }

    public java.util.List values(java.lang.String)
    {
        com.android.okhttp.Headers r0;
        java.lang.String r1, $r4, $r5;
        java.util.ArrayList r2, $r6;
        int i0, $i1;
        java.util.List $r3;
        boolean $z0;

        r0 := @this: com.android.okhttp.Headers;

        r1 := @parameter0: java.lang.String;

        r2 = null;

        i0 = 0;

     label1:
        $i1 = virtualinvoke r0.<com.android.okhttp.Headers: int size()>();

        if i0 >= $i1 goto label4;

        $r4 = virtualinvoke r0.<com.android.okhttp.Headers: java.lang.String name(int)>(i0);

        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4);

        if $z0 == 0 goto label3;

        if r2 != null goto label2;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>(2);

        r2 = $r6;

     label2:
        $r5 = virtualinvoke r0.<com.android.okhttp.Headers: java.lang.String value(int)>(i0);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r5);

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        if r2 == null goto label5;

        $r3 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(r2);

        goto label6;

     label5:
        $r3 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label6:
        return $r3;
    }

    public com.android.okhttp.Headers getAll(java.util.Set)
    {
        com.android.okhttp.Headers r0, $r6;
        java.util.Set r1;
        com.android.okhttp.Headers$Builder r2, $r4;
        int i0, $i1, $i2;
        java.lang.String r3, $r9;
        java.lang.String[] $r5, $r7, $r8;
        boolean $z0;

        r0 := @this: com.android.okhttp.Headers;

        r1 := @parameter0: java.util.Set;

        $r4 = new com.android.okhttp.Headers$Builder;

        specialinvoke $r4.<com.android.okhttp.Headers$Builder: void <init>()>();

        r2 = $r4;

        i0 = 0;

     label1:
        $r5 = r0.<com.android.okhttp.Headers: java.lang.String[] namesAndValues>;

        $i1 = lengthof $r5;

        if i0 >= $i1 goto label3;

        $r7 = r0.<com.android.okhttp.Headers: java.lang.String[] namesAndValues>;

        r3 = $r7[i0];

        $z0 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>(r3);

        if $z0 == 0 goto label2;

        $r8 = r0.<com.android.okhttp.Headers: java.lang.String[] namesAndValues>;

        $i2 = i0 + 1;

        $r9 = $r8[$i2];

        virtualinvoke r2.<com.android.okhttp.Headers$Builder: com.android.okhttp.Headers$Builder add(java.lang.String,java.lang.String)>(r3, $r9);

     label2:
        i0 = i0 + 2;

        goto label1;

     label3:
        $r6 = virtualinvoke r2.<com.android.okhttp.Headers$Builder: com.android.okhttp.Headers build()>();

        return $r6;
    }

    public com.android.okhttp.Headers$Builder newBuilder()
    {
        com.android.okhttp.Headers r0;
        com.android.okhttp.Headers$Builder r1, $r2;
        java.util.List $r3, $r5;
        java.lang.String[] $r4;

        r0 := @this: com.android.okhttp.Headers;

        $r2 = new com.android.okhttp.Headers$Builder;

        specialinvoke $r2.<com.android.okhttp.Headers$Builder: void <init>()>();

        r1 = $r2;

        $r3 = staticinvoke <com.android.okhttp.Headers$Builder: java.util.List access$000(com.android.okhttp.Headers$Builder)>(r1);

        $r4 = r0.<com.android.okhttp.Headers: java.lang.String[] namesAndValues>;

        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r4);

        interfaceinvoke $r3.<java.util.List: boolean addAll(java.util.Collection)>($r5);

        return r1;
    }

    public java.lang.String toString()
    {
        com.android.okhttp.Headers r0;
        java.lang.StringBuilder r1, $r2, $r5, $r6, $r8;
        int i0, $i1;
        java.lang.String $r3, $r4, $r7;

        r0 := @this: com.android.okhttp.Headers;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        i0 = 0;

     label1:
        $i1 = virtualinvoke r0.<com.android.okhttp.Headers: int size()>();

        if i0 >= $i1 goto label2;

        $r4 = virtualinvoke r0.<com.android.okhttp.Headers: java.lang.String name(int)>(i0);

        $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r7 = virtualinvoke r0.<com.android.okhttp.Headers: java.lang.String value(int)>(i0);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        i0 = i0 + 1;

        goto label1;

     label2:
        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    private static java.lang.String get(java.lang.String[], java.lang.String)
    {
        java.lang.String[] r0;
        java.lang.String r1, $r2, $r3;
        int i0, $i1, $i2;
        boolean $z0;

        r0 := @parameter0: java.lang.String[];

        r1 := @parameter1: java.lang.String;

        $i1 = lengthof r0;

        i0 = $i1 - 2;

     label1:
        if i0 < 0 goto label3;

        $r2 = r0[i0];

        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r2);

        if $z0 == 0 goto label2;

        $i2 = i0 + 1;

        $r3 = r0[$i2];

        return $r3;

     label2:
        i0 = i0 + -2;

        goto label1;

     label3:
        return null;
    }

    void <init>(com.android.okhttp.Headers$Builder, com.android.okhttp.Headers$1)
    {
        com.android.okhttp.Headers r0;
        com.android.okhttp.Headers$Builder r1;
        com.android.okhttp.Headers$1 r2;

        r0 := @this: com.android.okhttp.Headers;

        r1 := @parameter0: com.android.okhttp.Headers$Builder;

        r2 := @parameter1: com.android.okhttp.Headers$1;

        specialinvoke r0.<com.android.okhttp.Headers: void <init>(com.android.okhttp.Headers$Builder)>(r1);

        return;
    }
}
