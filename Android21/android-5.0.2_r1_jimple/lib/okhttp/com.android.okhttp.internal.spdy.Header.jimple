public final class com.android.okhttp.internal.spdy.Header extends java.lang.Object
{
    public static final com.android.okio.ByteString RESPONSE_STATUS;
    public static final com.android.okio.ByteString TARGET_METHOD;
    public static final com.android.okio.ByteString TARGET_PATH;
    public static final com.android.okio.ByteString TARGET_SCHEME;
    public static final com.android.okio.ByteString TARGET_AUTHORITY;
    public static final com.android.okio.ByteString TARGET_HOST;
    public static final com.android.okio.ByteString VERSION;
    public final com.android.okio.ByteString name;
    public final com.android.okio.ByteString value;
    final int hpackSize;

    public void <init>(java.lang.String, java.lang.String)
    {
        com.android.okhttp.internal.spdy.Header r0;
        java.lang.String r1, r2;
        com.android.okio.ByteString $r3, $r4;

        r0 := @this: com.android.okhttp.internal.spdy.Header;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = staticinvoke <com.android.okio.ByteString: com.android.okio.ByteString encodeUtf8(java.lang.String)>(r1);

        $r4 = staticinvoke <com.android.okio.ByteString: com.android.okio.ByteString encodeUtf8(java.lang.String)>(r2);

        specialinvoke r0.<com.android.okhttp.internal.spdy.Header: void <init>(com.android.okio.ByteString,com.android.okio.ByteString)>($r3, $r4);

        return;
    }

    public void <init>(com.android.okio.ByteString, java.lang.String)
    {
        com.android.okhttp.internal.spdy.Header r0;
        com.android.okio.ByteString r1, $r3;
        java.lang.String r2;

        r0 := @this: com.android.okhttp.internal.spdy.Header;

        r1 := @parameter0: com.android.okio.ByteString;

        r2 := @parameter1: java.lang.String;

        $r3 = staticinvoke <com.android.okio.ByteString: com.android.okio.ByteString encodeUtf8(java.lang.String)>(r2);

        specialinvoke r0.<com.android.okhttp.internal.spdy.Header: void <init>(com.android.okio.ByteString,com.android.okio.ByteString)>(r1, $r3);

        return;
    }

    public void <init>(com.android.okio.ByteString, com.android.okio.ByteString)
    {
        com.android.okhttp.internal.spdy.Header r0;
        com.android.okio.ByteString r1, r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.android.okhttp.internal.spdy.Header;

        r1 := @parameter0: com.android.okio.ByteString;

        r2 := @parameter1: com.android.okio.ByteString;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.okhttp.internal.spdy.Header: com.android.okio.ByteString name> = r1;

        r0.<com.android.okhttp.internal.spdy.Header: com.android.okio.ByteString value> = r2;

        $i0 = virtualinvoke r1.<com.android.okio.ByteString: int size()>();

        $i1 = 32 + $i0;

        $i2 = virtualinvoke r2.<com.android.okio.ByteString: int size()>();

        $i3 = $i1 + $i2;

        r0.<com.android.okhttp.internal.spdy.Header: int hpackSize> = $i3;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        com.android.okhttp.internal.spdy.Header r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3;
        com.android.okio.ByteString $r3, $r4, $r5, $r6;

        r0 := @this: com.android.okhttp.internal.spdy.Header;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof com.android.okhttp.internal.spdy.Header;

        if $z0 == 0 goto label3;

        r2 = (com.android.okhttp.internal.spdy.Header) r1;

        $r4 = r0.<com.android.okhttp.internal.spdy.Header: com.android.okio.ByteString name>;

        $r3 = r2.<com.android.okhttp.internal.spdy.Header: com.android.okio.ByteString name>;

        $z1 = virtualinvoke $r4.<com.android.okio.ByteString: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label1;

        $r6 = r0.<com.android.okhttp.internal.spdy.Header: com.android.okio.ByteString value>;

        $r5 = r2.<com.android.okhttp.internal.spdy.Header: com.android.okio.ByteString value>;

        $z2 = virtualinvoke $r6.<com.android.okio.ByteString: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;

     label3:
        return 0;
    }

    public int hashCode()
    {
        com.android.okhttp.internal.spdy.Header r0;
        byte b0;
        com.android.okio.ByteString $r1, $r2;
        int $i1, $i2, $i3, $i4, i5, i6;

        r0 := @this: com.android.okhttp.internal.spdy.Header;

        b0 = 17;

        $i1 = 31 * b0;

        $r1 = r0.<com.android.okhttp.internal.spdy.Header: com.android.okio.ByteString name>;

        $i2 = virtualinvoke $r1.<com.android.okio.ByteString: int hashCode()>();

        i5 = $i1 + $i2;

        $i3 = 31 * i5;

        $r2 = r0.<com.android.okhttp.internal.spdy.Header: com.android.okio.ByteString value>;

        $i4 = virtualinvoke $r2.<com.android.okio.ByteString: int hashCode()>();

        i6 = $i3 + $i4;

        return i6;
    }

    public java.lang.String toString()
    {
        com.android.okhttp.internal.spdy.Header r0;
        java.lang.Object[] $r1;
        com.android.okio.ByteString $r2, $r4;
        java.lang.String $r3, $r5, $r6;

        r0 := @this: com.android.okhttp.internal.spdy.Header;

        $r1 = newarray (java.lang.Object)[2];

        $r2 = r0.<com.android.okhttp.internal.spdy.Header: com.android.okio.ByteString name>;

        $r3 = virtualinvoke $r2.<com.android.okio.ByteString: java.lang.String utf8()>();

        $r1[0] = $r3;

        $r4 = r0.<com.android.okhttp.internal.spdy.Header: com.android.okio.ByteString value>;

        $r5 = virtualinvoke $r4.<com.android.okio.ByteString: java.lang.String utf8()>();

        $r1[1] = $r5;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s: %s", $r1);

        return $r6;
    }

    static void <clinit>()
    {
        com.android.okio.ByteString $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        $r0 = staticinvoke <com.android.okio.ByteString: com.android.okio.ByteString encodeUtf8(java.lang.String)>(":status");

        <com.android.okhttp.internal.spdy.Header: com.android.okio.ByteString RESPONSE_STATUS> = $r0;

        $r1 = staticinvoke <com.android.okio.ByteString: com.android.okio.ByteString encodeUtf8(java.lang.String)>(":method");

        <com.android.okhttp.internal.spdy.Header: com.android.okio.ByteString TARGET_METHOD> = $r1;

        $r2 = staticinvoke <com.android.okio.ByteString: com.android.okio.ByteString encodeUtf8(java.lang.String)>(":path");

        <com.android.okhttp.internal.spdy.Header: com.android.okio.ByteString TARGET_PATH> = $r2;

        $r3 = staticinvoke <com.android.okio.ByteString: com.android.okio.ByteString encodeUtf8(java.lang.String)>(":scheme");

        <com.android.okhttp.internal.spdy.Header: com.android.okio.ByteString TARGET_SCHEME> = $r3;

        $r4 = staticinvoke <com.android.okio.ByteString: com.android.okio.ByteString encodeUtf8(java.lang.String)>(":authority");

        <com.android.okhttp.internal.spdy.Header: com.android.okio.ByteString TARGET_AUTHORITY> = $r4;

        $r5 = staticinvoke <com.android.okio.ByteString: com.android.okio.ByteString encodeUtf8(java.lang.String)>(":host");

        <com.android.okhttp.internal.spdy.Header: com.android.okio.ByteString TARGET_HOST> = $r5;

        $r6 = staticinvoke <com.android.okio.ByteString: com.android.okio.ByteString encodeUtf8(java.lang.String)>(":version");

        <com.android.okhttp.internal.spdy.Header: com.android.okio.ByteString VERSION> = $r6;

        return;
    }
}
