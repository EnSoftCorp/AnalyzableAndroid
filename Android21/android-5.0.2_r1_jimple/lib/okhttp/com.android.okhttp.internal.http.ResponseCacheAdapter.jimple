public class com.android.okhttp.internal.http.ResponseCacheAdapter extends java.lang.Object implements com.android.okhttp.OkResponseCache
{
    private final java.net.ResponseCache delegate;

    public void <init>(java.net.ResponseCache)
    {
        com.android.okhttp.internal.http.ResponseCacheAdapter r0;
        java.net.ResponseCache r1;

        r0 := @this: com.android.okhttp.internal.http.ResponseCacheAdapter;

        r1 := @parameter0: java.net.ResponseCache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.okhttp.internal.http.ResponseCacheAdapter: java.net.ResponseCache delegate> = r1;

        return;
    }

    public java.net.ResponseCache getDelegate()
    {
        com.android.okhttp.internal.http.ResponseCacheAdapter r0;
        java.net.ResponseCache $r1;

        r0 := @this: com.android.okhttp.internal.http.ResponseCacheAdapter;

        $r1 = r0.<com.android.okhttp.internal.http.ResponseCacheAdapter: java.net.ResponseCache delegate>;

        return $r1;
    }

    public com.android.okhttp.Response get(com.android.okhttp.Request) throws java.io.IOException
    {
        com.android.okhttp.internal.http.ResponseCacheAdapter r0;
        com.android.okhttp.Request r1;
        java.net.CacheResponse r2;
        com.android.okhttp.Response $r3;

        r0 := @this: com.android.okhttp.internal.http.ResponseCacheAdapter;

        r1 := @parameter0: com.android.okhttp.Request;

        r2 = specialinvoke r0.<com.android.okhttp.internal.http.ResponseCacheAdapter: java.net.CacheResponse getJavaCachedResponse(com.android.okhttp.Request)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        $r3 = staticinvoke <com.android.okhttp.internal.http.JavaApiConverter: com.android.okhttp.Response createOkResponse(com.android.okhttp.Request,java.net.CacheResponse)>(r1, r2);

        return $r3;
    }

    public java.net.CacheRequest put(com.android.okhttp.Response) throws java.io.IOException
    {
        com.android.okhttp.internal.http.ResponseCacheAdapter r0;
        com.android.okhttp.Response r1;
        java.net.URI r2;
        java.net.HttpURLConnection r3;
        com.android.okhttp.Request $r4;
        java.net.ResponseCache $r5;
        java.net.CacheRequest $r6;

        r0 := @this: com.android.okhttp.internal.http.ResponseCacheAdapter;

        r1 := @parameter0: com.android.okhttp.Response;

        $r4 = virtualinvoke r1.<com.android.okhttp.Response: com.android.okhttp.Request request()>();

        r2 = virtualinvoke $r4.<com.android.okhttp.Request: java.net.URI uri()>();

        r3 = staticinvoke <com.android.okhttp.internal.http.JavaApiConverter: java.net.HttpURLConnection createJavaUrlConnection(com.android.okhttp.Response)>(r1);

        $r5 = r0.<com.android.okhttp.internal.http.ResponseCacheAdapter: java.net.ResponseCache delegate>;

        $r6 = virtualinvoke $r5.<java.net.ResponseCache: java.net.CacheRequest put(java.net.URI,java.net.URLConnection)>(r2, r3);

        return $r6;
    }

    public boolean maybeRemove(com.android.okhttp.Request) throws java.io.IOException
    {
        com.android.okhttp.internal.http.ResponseCacheAdapter r0;
        com.android.okhttp.Request r1;

        r0 := @this: com.android.okhttp.internal.http.ResponseCacheAdapter;

        r1 := @parameter0: com.android.okhttp.Request;

        return 0;
    }

    public void update(com.android.okhttp.Response, com.android.okhttp.Response) throws java.io.IOException
    {
        com.android.okhttp.internal.http.ResponseCacheAdapter r0;
        com.android.okhttp.Response r1, r2;

        r0 := @this: com.android.okhttp.internal.http.ResponseCacheAdapter;

        r1 := @parameter0: com.android.okhttp.Response;

        r2 := @parameter1: com.android.okhttp.Response;

        return;
    }

    public void trackConditionalCacheHit()
    {
        com.android.okhttp.internal.http.ResponseCacheAdapter r0;

        r0 := @this: com.android.okhttp.internal.http.ResponseCacheAdapter;

        return;
    }

    public void trackResponse(com.android.okhttp.ResponseSource)
    {
        com.android.okhttp.internal.http.ResponseCacheAdapter r0;
        com.android.okhttp.ResponseSource r1;

        r0 := @this: com.android.okhttp.internal.http.ResponseCacheAdapter;

        r1 := @parameter0: com.android.okhttp.ResponseSource;

        return;
    }

    private java.net.CacheResponse getJavaCachedResponse(com.android.okhttp.Request) throws java.io.IOException
    {
        com.android.okhttp.internal.http.ResponseCacheAdapter r0;
        com.android.okhttp.Request r1;
        java.util.Map r2;
        java.net.ResponseCache $r3;
        java.net.URI $r4;
        java.lang.String $r5;
        java.net.CacheResponse $r6;

        r0 := @this: com.android.okhttp.internal.http.ResponseCacheAdapter;

        r1 := @parameter0: com.android.okhttp.Request;

        r2 = staticinvoke <com.android.okhttp.internal.http.JavaApiConverter: java.util.Map extractJavaHeaders(com.android.okhttp.Request)>(r1);

        $r3 = r0.<com.android.okhttp.internal.http.ResponseCacheAdapter: java.net.ResponseCache delegate>;

        $r4 = virtualinvoke r1.<com.android.okhttp.Request: java.net.URI uri()>();

        $r5 = virtualinvoke r1.<com.android.okhttp.Request: java.lang.String method()>();

        $r6 = virtualinvoke $r3.<java.net.ResponseCache: java.net.CacheResponse get(java.net.URI,java.lang.String,java.util.Map)>($r4, $r5, r2);

        return $r6;
    }
}
