public final class com.android.okhttp.internal.http.HeaderParser extends java.lang.Object
{

    public static int skipUntil(java.lang.String, int, java.lang.String)
    {
        java.lang.String r0, r1;
        int i0, $i1, $i3;
        char $c2;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

     label1:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if i0 >= $i1 goto label3;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        $i3 = virtualinvoke r1.<java.lang.String: int indexOf(int)>($c2);

        if $i3 == -1 goto label2;

        goto label3;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return i0;
    }

    public static int skipWhitespace(java.lang.String, int)
    {
        java.lang.String r0;
        int i0, $i2;
        char c1;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

     label1:
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if i0 >= $i2 goto label3;

        c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        if c1 == 32 goto label2;

        if c1 == 9 goto label2;

        goto label3;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return i0;
    }

    public static int parseSeconds(java.lang.String)
    {
        java.lang.String r0;
        long l0;
        byte $b1, $b2;
        int $i3;
        java.lang.NumberFormatException $r2;

        r0 := @parameter0: java.lang.String;

     label1:
        l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r0);

        $b1 = l0 cmp 2147483647L;

        if $b1 <= 0 goto label3;

     label2:
        return 2147483647;

     label3:
        $b2 = l0 cmp 0L;

        if $b2 >= 0 goto label5;

     label4:
        return 0;

     label5:
        $i3 = (int) l0;

     label6:
        return $i3;

     label7:
        $r2 := @caughtexception;

        return -1;

        catch java.lang.NumberFormatException from label1 to label2 with label7;
        catch java.lang.NumberFormatException from label3 to label4 with label7;
        catch java.lang.NumberFormatException from label5 to label6 with label7;
    }

    private void <init>()
    {
        com.android.okhttp.internal.http.HeaderParser r0;

        r0 := @this: com.android.okhttp.internal.http.HeaderParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }
}
