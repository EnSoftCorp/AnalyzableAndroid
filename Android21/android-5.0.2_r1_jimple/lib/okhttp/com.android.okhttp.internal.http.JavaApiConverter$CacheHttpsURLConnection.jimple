final class com.android.okhttp.internal.http.JavaApiConverter$CacheHttpsURLConnection extends com.android.okhttp.internal.http.DelegatingHttpsURLConnection
{
    private final com.android.okhttp.internal.http.JavaApiConverter$CacheHttpURLConnection delegate;

    public void <init>(com.android.okhttp.internal.http.JavaApiConverter$CacheHttpURLConnection)
    {
        com.android.okhttp.internal.http.JavaApiConverter$CacheHttpsURLConnection r0;
        com.android.okhttp.internal.http.JavaApiConverter$CacheHttpURLConnection r1;

        r0 := @this: com.android.okhttp.internal.http.JavaApiConverter$CacheHttpsURLConnection;

        r1 := @parameter0: com.android.okhttp.internal.http.JavaApiConverter$CacheHttpURLConnection;

        specialinvoke r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: void <init>(java.net.HttpURLConnection)>(r1);

        r0.<com.android.okhttp.internal.http.JavaApiConverter$CacheHttpsURLConnection: com.android.okhttp.internal.http.JavaApiConverter$CacheHttpURLConnection delegate> = r1;

        return;
    }

    protected com.android.okhttp.Handshake handshake()
    {
        com.android.okhttp.internal.http.JavaApiConverter$CacheHttpsURLConnection r0;
        com.android.okhttp.internal.http.JavaApiConverter$CacheHttpURLConnection $r1;
        com.android.okhttp.Response $r2;
        com.android.okhttp.Handshake $r3;

        r0 := @this: com.android.okhttp.internal.http.JavaApiConverter$CacheHttpsURLConnection;

        $r1 = r0.<com.android.okhttp.internal.http.JavaApiConverter$CacheHttpsURLConnection: com.android.okhttp.internal.http.JavaApiConverter$CacheHttpURLConnection delegate>;

        $r2 = staticinvoke <com.android.okhttp.internal.http.JavaApiConverter$CacheHttpURLConnection: com.android.okhttp.Response access$300(com.android.okhttp.internal.http.JavaApiConverter$CacheHttpURLConnection)>($r1);

        $r3 = virtualinvoke $r2.<com.android.okhttp.Response: com.android.okhttp.Handshake handshake()>();

        return $r3;
    }

    public void setHostnameVerifier(javax.net.ssl.HostnameVerifier)
    {
        com.android.okhttp.internal.http.JavaApiConverter$CacheHttpsURLConnection r0;
        javax.net.ssl.HostnameVerifier r1;
        java.lang.RuntimeException $r2;

        r0 := @this: com.android.okhttp.internal.http.JavaApiConverter$CacheHttpsURLConnection;

        r1 := @parameter0: javax.net.ssl.HostnameVerifier;

        $r2 = staticinvoke <com.android.okhttp.internal.http.JavaApiConverter: java.lang.RuntimeException access$000()>();

        throw $r2;
    }

    public javax.net.ssl.HostnameVerifier getHostnameVerifier()
    {
        com.android.okhttp.internal.http.JavaApiConverter$CacheHttpsURLConnection r0;
        java.lang.RuntimeException $r1;

        r0 := @this: com.android.okhttp.internal.http.JavaApiConverter$CacheHttpsURLConnection;

        $r1 = staticinvoke <com.android.okhttp.internal.http.JavaApiConverter: java.lang.RuntimeException access$400()>();

        throw $r1;
    }

    public void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)
    {
        com.android.okhttp.internal.http.JavaApiConverter$CacheHttpsURLConnection r0;
        javax.net.ssl.SSLSocketFactory r1;
        java.lang.RuntimeException $r2;

        r0 := @this: com.android.okhttp.internal.http.JavaApiConverter$CacheHttpsURLConnection;

        r1 := @parameter0: javax.net.ssl.SSLSocketFactory;

        $r2 = staticinvoke <com.android.okhttp.internal.http.JavaApiConverter: java.lang.RuntimeException access$000()>();

        throw $r2;
    }

    public javax.net.ssl.SSLSocketFactory getSSLSocketFactory()
    {
        com.android.okhttp.internal.http.JavaApiConverter$CacheHttpsURLConnection r0;
        java.lang.RuntimeException $r1;

        r0 := @this: com.android.okhttp.internal.http.JavaApiConverter$CacheHttpsURLConnection;

        $r1 = staticinvoke <com.android.okhttp.internal.http.JavaApiConverter: java.lang.RuntimeException access$400()>();

        throw $r1;
    }

    public void setFixedLengthStreamingMode(long)
    {
        com.android.okhttp.internal.http.JavaApiConverter$CacheHttpsURLConnection r0;
        long l0;
        com.android.okhttp.internal.http.JavaApiConverter$CacheHttpURLConnection $r1;

        r0 := @this: com.android.okhttp.internal.http.JavaApiConverter$CacheHttpsURLConnection;

        l0 := @parameter0: long;

        $r1 = r0.<com.android.okhttp.internal.http.JavaApiConverter$CacheHttpsURLConnection: com.android.okhttp.internal.http.JavaApiConverter$CacheHttpURLConnection delegate>;

        virtualinvoke $r1.<com.android.okhttp.internal.http.JavaApiConverter$CacheHttpURLConnection: void setFixedLengthStreamingMode(long)>(l0);

        return;
    }
}
