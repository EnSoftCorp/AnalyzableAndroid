public class com.android.okhttp.internal.http.HttpURLConnectionImpl extends java.net.HttpURLConnection
{
    public static final int MAX_REDIRECTS;
    final com.android.okhttp.OkHttpClient client;
    private com.android.okhttp.Headers$Builder requestHeaders;
    private long fixedContentLength;
    private int redirectionCount;
    protected java.io.IOException httpEngineFailure;
    protected com.android.okhttp.internal.http.HttpEngine httpEngine;
    private com.android.okhttp.Route route;
    com.android.okhttp.Handshake handshake;

    public void <init>(java.net.URL, com.android.okhttp.OkHttpClient)
    {
        com.android.okhttp.internal.http.HttpURLConnectionImpl r0;
        java.net.URL r1;
        com.android.okhttp.OkHttpClient r2;
        com.android.okhttp.Headers$Builder $r3;

        r0 := @this: com.android.okhttp.internal.http.HttpURLConnectionImpl;

        r1 := @parameter0: java.net.URL;

        r2 := @parameter1: com.android.okhttp.OkHttpClient;

        specialinvoke r0.<java.net.HttpURLConnection: void <init>(java.net.URL)>(r1);

        $r3 = new com.android.okhttp.Headers$Builder;

        specialinvoke $r3.<com.android.okhttp.Headers$Builder: void <init>()>();

        r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.Headers$Builder requestHeaders> = $r3;

        r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: long fixedContentLength> = -1L;

        r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.OkHttpClient client> = r2;

        return;
    }

    public final void connect() throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpURLConnectionImpl r0;
        boolean z0;

        r0 := @this: com.android.okhttp.internal.http.HttpURLConnectionImpl;

        specialinvoke r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: void initHttpEngine()>();

     label1:
        z0 = specialinvoke r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: boolean execute(boolean)>(0);

        if z0 == 0 goto label1;

        return;
    }

    public final void disconnect()
    {
        com.android.okhttp.internal.http.HttpURLConnectionImpl r0;
        com.android.okhttp.internal.http.HttpEngine $r1, $r2;

        r0 := @this: com.android.okhttp.internal.http.HttpURLConnectionImpl;

        $r1 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.internal.http.HttpEngine httpEngine>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.internal.http.HttpEngine httpEngine>;

        virtualinvoke $r2.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection close()>();

     label1:
        return;
    }

    public final java.io.InputStream getErrorStream()
    {
        com.android.okhttp.internal.http.HttpURLConnectionImpl r0;
        com.android.okhttp.internal.http.HttpEngine r1;
        boolean $z0;
        com.android.okhttp.Response $r2;
        int $i0;
        java.io.InputStream $r3;
        java.io.IOException $r4;

        r0 := @this: com.android.okhttp.internal.http.HttpURLConnectionImpl;

     label1:
        r1 = specialinvoke r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.internal.http.HttpEngine getResponse()>();

        $z0 = virtualinvoke r1.<com.android.okhttp.internal.http.HttpEngine: boolean hasResponseBody()>();

        if $z0 == 0 goto label3;

        $r2 = virtualinvoke r1.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response getResponse()>();

        $i0 = virtualinvoke $r2.<com.android.okhttp.Response: int code()>();

        if $i0 < 400 goto label3;

        $r3 = virtualinvoke r1.<com.android.okhttp.internal.http.HttpEngine: java.io.InputStream getResponseBodyBytes()>();

     label2:
        return $r3;

     label3:
        return null;

     label4:
        $r4 := @caughtexception;

        return null;

        catch java.io.IOException from label1 to label2 with label4;
    }

    public final java.lang.String getHeaderField(int)
    {
        com.android.okhttp.internal.http.HttpURLConnectionImpl r0;
        int i0;
        com.android.okhttp.internal.http.HttpEngine $r2;
        com.android.okhttp.Response $r3;
        com.android.okhttp.Headers $r4;
        java.lang.String $r5;
        java.io.IOException $r6;

        r0 := @this: com.android.okhttp.internal.http.HttpURLConnectionImpl;

        i0 := @parameter0: int;

     label1:
        $r2 = specialinvoke r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.internal.http.HttpEngine getResponse()>();

        $r3 = virtualinvoke $r2.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response getResponse()>();

        $r4 = virtualinvoke $r3.<com.android.okhttp.Response: com.android.okhttp.Headers headers()>();

        $r5 = virtualinvoke $r4.<com.android.okhttp.Headers: java.lang.String value(int)>(i0);

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        return null;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public final java.lang.String getHeaderField(java.lang.String)
    {
        com.android.okhttp.internal.http.HttpURLConnectionImpl r0;
        java.lang.String r1, $r5;
        com.android.okhttp.Response r2;
        com.android.okhttp.internal.http.HttpEngine $r3;
        com.android.okhttp.Headers $r4;
        java.io.IOException $r6;

        r0 := @this: com.android.okhttp.internal.http.HttpURLConnectionImpl;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = specialinvoke r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.internal.http.HttpEngine getResponse()>();

        r2 = virtualinvoke $r3.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response getResponse()>();

        if r1 != null goto label2;

        $r5 = virtualinvoke r2.<com.android.okhttp.Response: java.lang.String statusLine()>();

        goto label3;

     label2:
        $r4 = virtualinvoke r2.<com.android.okhttp.Response: com.android.okhttp.Headers headers()>();

        $r5 = virtualinvoke $r4.<com.android.okhttp.Headers: java.lang.String get(java.lang.String)>(r1);

     label3:
        return $r5;

     label4:
        $r6 := @caughtexception;

        return null;

        catch java.io.IOException from label1 to label3 with label4;
    }

    public final java.lang.String getHeaderFieldKey(int)
    {
        com.android.okhttp.internal.http.HttpURLConnectionImpl r0;
        int i0;
        com.android.okhttp.internal.http.HttpEngine $r2;
        com.android.okhttp.Response $r3;
        com.android.okhttp.Headers $r4;
        java.lang.String $r5;
        java.io.IOException $r6;

        r0 := @this: com.android.okhttp.internal.http.HttpURLConnectionImpl;

        i0 := @parameter0: int;

     label1:
        $r2 = specialinvoke r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.internal.http.HttpEngine getResponse()>();

        $r3 = virtualinvoke $r2.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response getResponse()>();

        $r4 = virtualinvoke $r3.<com.android.okhttp.Response: com.android.okhttp.Headers headers()>();

        $r5 = virtualinvoke $r4.<com.android.okhttp.Headers: java.lang.String name(int)>(i0);

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        return null;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public final java.util.Map getHeaderFields()
    {
        com.android.okhttp.internal.http.HttpURLConnectionImpl r0;
        com.android.okhttp.Response r1;
        com.android.okhttp.internal.http.HttpEngine $r2;
        com.android.okhttp.Headers $r3;
        java.lang.String $r4;
        java.util.Map $r5, $r7;
        java.io.IOException $r6;

        r0 := @this: com.android.okhttp.internal.http.HttpURLConnectionImpl;

     label1:
        $r2 = specialinvoke r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.internal.http.HttpEngine getResponse()>();

        r1 = virtualinvoke $r2.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response getResponse()>();

        $r3 = virtualinvoke r1.<com.android.okhttp.Response: com.android.okhttp.Headers headers()>();

        $r4 = virtualinvoke r1.<com.android.okhttp.Response: java.lang.String statusLine()>();

        $r5 = staticinvoke <com.android.okhttp.internal.http.OkHeaders: java.util.Map toMultimap(com.android.okhttp.Headers,java.lang.String)>($r3, $r4);

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        $r7 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        return $r7;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public final java.util.Map getRequestProperties()
    {
        com.android.okhttp.internal.http.HttpURLConnectionImpl r0;
        boolean $z0;
        com.android.okhttp.Headers$Builder $r1;
        com.android.okhttp.Headers $r2;
        java.util.Map $r3;
        java.lang.IllegalStateException $r4;

        r0 := @this: com.android.okhttp.internal.http.HttpURLConnectionImpl;

        $z0 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: boolean connected>;

        if $z0 == 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot access request header fields after connection is set");

        throw $r4;

     label1:
        $r1 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.Headers$Builder requestHeaders>;

        $r2 = virtualinvoke $r1.<com.android.okhttp.Headers$Builder: com.android.okhttp.Headers build()>();

        $r3 = staticinvoke <com.android.okhttp.internal.http.OkHeaders: java.util.Map toMultimap(com.android.okhttp.Headers,java.lang.String)>($r2, null);

        return $r3;
    }

    public final java.io.InputStream getInputStream() throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpURLConnectionImpl r0;
        com.android.okhttp.internal.http.HttpEngine r1;
        java.io.InputStream r2;
        boolean $z0;
        int $i0, $i1;
        java.net.ProtocolException $r3, $r11;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7, $r10;
        java.io.FileNotFoundException $r8;
        java.net.URL $r9;

        r0 := @this: com.android.okhttp.internal.http.HttpURLConnectionImpl;

        $z0 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: boolean doInput>;

        if $z0 != 0 goto label1;

        $r11 = new java.net.ProtocolException;

        specialinvoke $r11.<java.net.ProtocolException: void <init>(java.lang.String)>("This protocol does not support input");

        throw $r11;

     label1:
        r1 = specialinvoke r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.internal.http.HttpEngine getResponse()>();

        $i0 = virtualinvoke r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: int getResponseCode()>();

        if $i0 < 400 goto label2;

        $r8 = new java.io.FileNotFoundException;

        $r9 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: java.net.URL url>;

        $r10 = virtualinvoke $r9.<java.net.URL: java.lang.String toString()>();

        specialinvoke $r8.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r10);

        throw $r8;

     label2:
        r2 = virtualinvoke r1.<com.android.okhttp.internal.http.HttpEngine: java.io.InputStream getResponseBodyBytes()>();

        if r2 != null goto label3;

        $r3 = new java.net.ProtocolException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No response body exists; responseCode=");

        $i1 = virtualinvoke r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: int getResponseCode()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.net.ProtocolException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label3:
        return r2;
    }

    public final java.io.OutputStream getOutputStream() throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpURLConnectionImpl r0;
        com.android.okio.BufferedSink r1;
        com.android.okhttp.internal.http.HttpEngine $r2, $r3;
        boolean $z0;
        java.io.OutputStream $r4;
        java.net.ProtocolException $r5, $r6;
        java.lang.StringBuilder $r7, $r8, $r10;
        java.lang.String $r9, $r11;

        r0 := @this: com.android.okhttp.internal.http.HttpURLConnectionImpl;

        virtualinvoke r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: void connect()>();

        $r2 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.internal.http.HttpEngine httpEngine>;

        r1 = virtualinvoke $r2.<com.android.okhttp.internal.http.HttpEngine: com.android.okio.BufferedSink getBufferedRequestBody()>();

        if r1 != null goto label1;

        $r6 = new java.net.ProtocolException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("method does not support a request body: ");

        $r9 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: java.lang.String method>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.net.ProtocolException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label1:
        $r3 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.internal.http.HttpEngine httpEngine>;

        $z0 = virtualinvoke $r3.<com.android.okhttp.internal.http.HttpEngine: boolean hasResponse()>();

        if $z0 == 0 goto label2;

        $r5 = new java.net.ProtocolException;

        specialinvoke $r5.<java.net.ProtocolException: void <init>(java.lang.String)>("cannot write request body after response has been read");

        throw $r5;

     label2:
        $r4 = interfaceinvoke r1.<com.android.okio.BufferedSink: java.io.OutputStream outputStream()>();

        return $r4;
    }

    public final java.security.Permission getPermission() throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpURLConnectionImpl r0;
        java.lang.String r1, $r10;
        int i0;
        java.net.InetSocketAddress r2;
        java.net.URL $r3, $r4;
        boolean $z0;
        java.net.SocketPermission $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;
        com.android.okhttp.OkHttpClient $r11;
        java.net.SocketAddress $r12;
        java.net.Proxy $r13;

        r0 := @this: com.android.okhttp.internal.http.HttpURLConnectionImpl;

        $r3 = virtualinvoke r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: java.net.URL getURL()>();

        r1 = virtualinvoke $r3.<java.net.URL: java.lang.String getHost()>();

        $r4 = virtualinvoke r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: java.net.URL getURL()>();

        i0 = staticinvoke <com.android.okhttp.internal.Util: int getEffectivePort(java.net.URL)>($r4);

        $z0 = virtualinvoke r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: boolean usingProxy()>();

        if $z0 == 0 goto label1;

        $r11 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.OkHttpClient client>;

        $r13 = virtualinvoke $r11.<com.android.okhttp.OkHttpClient: java.net.Proxy getProxy()>();

        $r12 = virtualinvoke $r13.<java.net.Proxy: java.net.SocketAddress address()>();

        r2 = (java.net.InetSocketAddress) $r12;

        r1 = virtualinvoke r2.<java.net.InetSocketAddress: java.lang.String getHostName()>();

        i0 = virtualinvoke r2.<java.net.InetSocketAddress: int getPort()>();

     label1:
        $r5 = new java.net.SocketPermission;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.net.SocketPermission: void <init>(java.lang.String,java.lang.String)>($r10, "connect, resolve");

        return $r5;
    }

    public final java.lang.String getRequestProperty(java.lang.String)
    {
        com.android.okhttp.internal.http.HttpURLConnectionImpl r0;
        java.lang.String r1, $r3;
        com.android.okhttp.Headers$Builder $r2;

        r0 := @this: com.android.okhttp.internal.http.HttpURLConnectionImpl;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.Headers$Builder requestHeaders>;

        $r3 = virtualinvoke $r2.<com.android.okhttp.Headers$Builder: java.lang.String get(java.lang.String)>(r1);

        return $r3;
    }

    public void setConnectTimeout(int)
    {
        com.android.okhttp.internal.http.HttpURLConnectionImpl r0;
        int i0;
        java.util.concurrent.TimeUnit $r1;
        long $l1;
        com.android.okhttp.OkHttpClient $r2;

        r0 := @this: com.android.okhttp.internal.http.HttpURLConnectionImpl;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.OkHttpClient client>;

        $l1 = (long) i0;

        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        virtualinvoke $r2.<com.android.okhttp.OkHttpClient: void setConnectTimeout(long,java.util.concurrent.TimeUnit)>($l1, $r1);

        return;
    }

    public int getConnectTimeout()
    {
        com.android.okhttp.internal.http.HttpURLConnectionImpl r0;
        com.android.okhttp.OkHttpClient $r1;
        int $i0;

        r0 := @this: com.android.okhttp.internal.http.HttpURLConnectionImpl;

        $r1 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.OkHttpClient client>;

        $i0 = virtualinvoke $r1.<com.android.okhttp.OkHttpClient: int getConnectTimeout()>();

        return $i0;
    }

    public void setReadTimeout(int)
    {
        com.android.okhttp.internal.http.HttpURLConnectionImpl r0;
        int i0;
        java.util.concurrent.TimeUnit $r1;
        long $l1;
        com.android.okhttp.OkHttpClient $r2;

        r0 := @this: com.android.okhttp.internal.http.HttpURLConnectionImpl;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.OkHttpClient client>;

        $l1 = (long) i0;

        $r1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        virtualinvoke $r2.<com.android.okhttp.OkHttpClient: void setReadTimeout(long,java.util.concurrent.TimeUnit)>($l1, $r1);

        return;
    }

    public int getReadTimeout()
    {
        com.android.okhttp.internal.http.HttpURLConnectionImpl r0;
        com.android.okhttp.OkHttpClient $r1;
        int $i0;

        r0 := @this: com.android.okhttp.internal.http.HttpURLConnectionImpl;

        $r1 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.OkHttpClient client>;

        $i0 = virtualinvoke $r1.<com.android.okhttp.OkHttpClient: int getReadTimeout()>();

        return $i0;
    }

    private void initHttpEngine() throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpURLConnectionImpl r0;
        java.io.IOException r1, $r2, $r13, $r15;
        com.android.okhttp.internal.http.HttpEngine $r3, $r5;
        boolean $z0, $z1, $z2;
        java.lang.String $r4, $r6, $r7, $r10, $r14;
        java.net.ProtocolException $r8;
        java.lang.StringBuilder $r9, $r11, $r12;

        r0 := @this: com.android.okhttp.internal.http.HttpURLConnectionImpl;

        $r2 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: java.io.IOException httpEngineFailure>;

        if $r2 == null goto label1;

        $r13 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: java.io.IOException httpEngineFailure>;

        throw $r13;

     label1:
        $r3 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.internal.http.HttpEngine httpEngine>;

        if $r3 == null goto label2;

        return;

     label2:
        r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: boolean connected> = 1;

     label3:
        $z0 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: boolean doOutput>;

        if $z0 == 0 goto label5;

        $r6 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: java.lang.String method>;

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>("GET");

        if $z1 == 0 goto label4;

        r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: java.lang.String method> = "POST";

        goto label5;

     label4:
        $r7 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: java.lang.String method>;

        $z2 = staticinvoke <com.android.okhttp.internal.http.HttpMethod: boolean hasRequestBody(java.lang.String)>($r7);

        if $z2 != 0 goto label5;

        $r8 = new java.net.ProtocolException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: java.lang.String method>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not support writing");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.net.ProtocolException: void <init>(java.lang.String)>($r14);

        throw $r8;

     label5:
        $r4 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: java.lang.String method>;

        $r5 = specialinvoke r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.internal.http.HttpEngine newHttpEngine(java.lang.String,com.android.okhttp.Connection,com.android.okhttp.internal.http.RetryableSink,com.android.okhttp.Response)>($r4, null, null, null);

        r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.internal.http.HttpEngine httpEngine> = $r5;

     label6:
        goto label8;

     label7:
        $r15 := @caughtexception;

        r1 = $r15;

        r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: java.io.IOException httpEngineFailure> = r1;

        throw r1;

     label8:
        return;

        catch java.io.IOException from label3 to label6 with label7;
    }

    private com.android.okhttp.internal.http.HttpEngine newHttpEngine(java.lang.String, com.android.okhttp.Connection, com.android.okhttp.internal.http.RetryableSink, com.android.okhttp.Response)
    {
        com.android.okhttp.internal.http.HttpURLConnectionImpl r0;
        java.lang.String r1, $r18, $r19, $r22;
        com.android.okhttp.Connection r2;
        com.android.okhttp.internal.http.RetryableSink r3;
        com.android.okhttp.Response r4;
        com.android.okhttp.Request$Builder r5, $r9, $r11;
        com.android.okhttp.Headers r6;
        int i0, $i1, $i3;
        com.android.okhttp.Request r7;
        com.android.okhttp.OkHttpClient r8, $r15, $r16;
        java.net.URL $r10;
        com.android.okhttp.Headers$Builder $r12;
        boolean $z0, $z1, z2;
        com.android.okhttp.OkResponseCache $r13;
        com.android.okhttp.internal.http.HttpEngine $r14;
        long $l2, $l5;
        byte $b4;

        r0 := @this: com.android.okhttp.internal.http.HttpURLConnectionImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.okhttp.Connection;

        r3 := @parameter2: com.android.okhttp.internal.http.RetryableSink;

        r4 := @parameter3: com.android.okhttp.Response;

        $r9 = new com.android.okhttp.Request$Builder;

        specialinvoke $r9.<com.android.okhttp.Request$Builder: void <init>()>();

        $r10 = virtualinvoke r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: java.net.URL getURL()>();

        $r11 = virtualinvoke $r9.<com.android.okhttp.Request$Builder: com.android.okhttp.Request$Builder url(java.net.URL)>($r10);

        r5 = virtualinvoke $r11.<com.android.okhttp.Request$Builder: com.android.okhttp.Request$Builder method(java.lang.String,com.android.okhttp.Request$Body)>(r1, null);

        $r12 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.Headers$Builder requestHeaders>;

        r6 = virtualinvoke $r12.<com.android.okhttp.Headers$Builder: com.android.okhttp.Headers build()>();

        i0 = 0;

     label1:
        $i1 = virtualinvoke r6.<com.android.okhttp.Headers: int size()>();

        if i0 >= $i1 goto label2;

        $r22 = virtualinvoke r6.<com.android.okhttp.Headers: java.lang.String name(int)>(i0);

        $r19 = virtualinvoke r6.<com.android.okhttp.Headers: java.lang.String value(int)>(i0);

        virtualinvoke r5.<com.android.okhttp.Request$Builder: com.android.okhttp.Request$Builder addHeader(java.lang.String,java.lang.String)>($r22, $r19);

        i0 = i0 + 1;

        goto label1;

     label2:
        z2 = 0;

        $z0 = staticinvoke <com.android.okhttp.internal.http.HttpMethod: boolean hasRequestBody(java.lang.String)>(r1);

        if $z0 == 0 goto label5;

        $l2 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: long fixedContentLength>;

        $b4 = $l2 cmp -1L;

        if $b4 == 0 goto label3;

        $l5 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: long fixedContentLength>;

        $r18 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l5);

        virtualinvoke r5.<com.android.okhttp.Request$Builder: com.android.okhttp.Request$Builder header(java.lang.String,java.lang.String)>("Content-Length", $r18);

        goto label5;

     label3:
        $i3 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: int chunkLength>;

        if $i3 <= 0 goto label4;

        virtualinvoke r5.<com.android.okhttp.Request$Builder: com.android.okhttp.Request$Builder header(java.lang.String,java.lang.String)>("Transfer-Encoding", "chunked");

        goto label5;

     label4:
        z2 = 1;

     label5:
        r7 = virtualinvoke r5.<com.android.okhttp.Request$Builder: com.android.okhttp.Request build()>();

        r8 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.OkHttpClient client>;

        $r13 = virtualinvoke r8.<com.android.okhttp.OkHttpClient: com.android.okhttp.OkResponseCache getOkResponseCache()>();

        if $r13 == null goto label6;

        $z1 = virtualinvoke r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: boolean getUseCaches()>();

        if $z1 != 0 goto label6;

        $r16 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.OkHttpClient client>;

        $r15 = virtualinvoke $r16.<com.android.okhttp.OkHttpClient: com.android.okhttp.OkHttpClient clone()>();

        r8 = virtualinvoke $r15.<com.android.okhttp.OkHttpClient: com.android.okhttp.OkHttpClient setOkResponseCache(com.android.okhttp.OkResponseCache)>(null);

     label6:
        $r14 = new com.android.okhttp.internal.http.HttpEngine;

        specialinvoke $r14.<com.android.okhttp.internal.http.HttpEngine: void <init>(com.android.okhttp.OkHttpClient,com.android.okhttp.Request,boolean,com.android.okhttp.Connection,com.android.okhttp.internal.http.RouteSelector,com.android.okhttp.internal.http.RetryableSink,com.android.okhttp.Response)>(r8, r7, z2, r2, null, r3, r4);

        return $r14;
    }

    private com.android.okhttp.internal.http.HttpEngine getResponse() throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpURLConnectionImpl r0;
        com.android.okhttp.Response r1, $r10;
        com.android.okhttp.internal.http.HttpURLConnectionImpl$Retry r2, $r8, $r13;
        java.lang.String r3;
        com.android.okio.Sink r4;
        int i0;
        com.android.okhttp.Connection r5;
        com.android.okhttp.internal.http.HttpEngine $r6, $r7, $r9, $r11, $r15, $r16, $r18, $r19, $r21, $r22;
        boolean $z0, $z1, $z2;
        com.android.okhttp.Headers$Builder $r12;
        com.android.okhttp.internal.http.RetryableSink $r17;
        java.net.HttpRetryException $r20;

        r0 := @this: com.android.okhttp.internal.http.HttpURLConnectionImpl;

        specialinvoke r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: void initHttpEngine()>();

        $r6 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.internal.http.HttpEngine httpEngine>;

        $z0 = virtualinvoke $r6.<com.android.okhttp.internal.http.HttpEngine: boolean hasResponse()>();

        if $z0 == 0 goto label1;

        $r21 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.internal.http.HttpEngine httpEngine>;

        return $r21;

     label1:
        $z1 = specialinvoke r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: boolean execute(boolean)>(1);

        if $z1 != 0 goto label2;

        goto label1;

     label2:
        $r7 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.internal.http.HttpEngine httpEngine>;

        r1 = virtualinvoke $r7.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response getResponse()>();

        r2 = specialinvoke r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.internal.http.HttpURLConnectionImpl$Retry processResponseHeaders()>();

        $r8 = <com.android.okhttp.internal.http.HttpURLConnectionImpl$Retry: com.android.okhttp.internal.http.HttpURLConnectionImpl$Retry NONE>;

        if r2 != $r8 goto label3;

        $r19 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.internal.http.HttpEngine httpEngine>;

        virtualinvoke $r19.<com.android.okhttp.internal.http.HttpEngine: void releaseConnection()>();

        $r22 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.internal.http.HttpEngine httpEngine>;

        return $r22;

     label3:
        r3 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: java.lang.String method>;

        $r9 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.internal.http.HttpEngine httpEngine>;

        r4 = virtualinvoke $r9.<com.android.okhttp.internal.http.HttpEngine: com.android.okio.Sink getRequestBody()>();

        $r11 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.internal.http.HttpEngine httpEngine>;

        $r10 = virtualinvoke $r11.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response getResponse()>();

        i0 = virtualinvoke $r10.<com.android.okhttp.Response: int code()>();

        if i0 == 300 goto label4;

        if i0 == 301 goto label4;

        if i0 == 302 goto label4;

        if i0 != 303 goto label5;

     label4:
        r3 = "GET";

        $r12 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.Headers$Builder requestHeaders>;

        virtualinvoke $r12.<com.android.okhttp.Headers$Builder: com.android.okhttp.Headers$Builder removeAll(java.lang.String)>("Content-Length");

        r4 = null;

     label5:
        if r4 == null goto label6;

        $z2 = r4 instanceof com.android.okhttp.internal.http.RetryableSink;

        if $z2 != 0 goto label6;

        $r20 = new java.net.HttpRetryException;

        specialinvoke $r20.<java.net.HttpRetryException: void <init>(java.lang.String,int)>("Cannot retry streamed HTTP body", i0);

        throw $r20;

     label6:
        $r13 = <com.android.okhttp.internal.http.HttpURLConnectionImpl$Retry: com.android.okhttp.internal.http.HttpURLConnectionImpl$Retry DIFFERENT_CONNECTION>;

        if r2 != $r13 goto label7;

        $r18 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.internal.http.HttpEngine httpEngine>;

        virtualinvoke $r18.<com.android.okhttp.internal.http.HttpEngine: void releaseConnection()>();

     label7:
        $r15 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.internal.http.HttpEngine httpEngine>;

        r5 = virtualinvoke $r15.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection close()>();

        $r17 = (com.android.okhttp.internal.http.RetryableSink) r4;

        $r16 = specialinvoke r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.internal.http.HttpEngine newHttpEngine(java.lang.String,com.android.okhttp.Connection,com.android.okhttp.internal.http.RetryableSink,com.android.okhttp.Response)>(r3, r5, $r17, r1);

        r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.internal.http.HttpEngine httpEngine> = $r16;

        goto label1;
    }

    private boolean execute(boolean) throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpURLConnectionImpl r0;
        boolean z0;
        java.io.IOException r1, $r12;
        com.android.okhttp.internal.http.HttpEngine r2, $r3, $r4, $r6, $r8, $r9, $r13;
        com.android.okhttp.Route $r5;
        com.android.okhttp.Connection $r7, $r10;
        com.android.okhttp.Handshake $r11;

        r0 := @this: com.android.okhttp.internal.http.HttpURLConnectionImpl;

        z0 := @parameter0: boolean;

     label1:
        $r3 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.internal.http.HttpEngine httpEngine>;

        virtualinvoke $r3.<com.android.okhttp.internal.http.HttpEngine: void sendRequest()>();

        $r4 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.internal.http.HttpEngine httpEngine>;

        $r5 = virtualinvoke $r4.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Route getRoute()>();

        r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.Route route> = $r5;

        $r6 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.internal.http.HttpEngine httpEngine>;

        $r7 = virtualinvoke $r6.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection getConnection()>();

        if $r7 == null goto label2;

        $r9 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.internal.http.HttpEngine httpEngine>;

        $r10 = virtualinvoke $r9.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection getConnection()>();

        $r11 = virtualinvoke $r10.<com.android.okhttp.Connection: com.android.okhttp.Handshake getHandshake()>();

        goto label3;

     label2:
        $r11 = null;

     label3:
        r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.Handshake handshake> = $r11;

        if z0 == 0 goto label4;

        $r8 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.internal.http.HttpEngine httpEngine>;

        virtualinvoke $r8.<com.android.okhttp.internal.http.HttpEngine: void readResponse()>();

     label4:
        return 1;

     label5:
        $r12 := @caughtexception;

        r1 = $r12;

        $r13 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.internal.http.HttpEngine httpEngine>;

        r2 = virtualinvoke $r13.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.internal.http.HttpEngine recover(java.io.IOException)>(r1);

        if r2 == null goto label6;

        r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.internal.http.HttpEngine httpEngine> = r2;

        return 0;

     label6:
        r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: java.io.IOException httpEngineFailure> = r1;

        throw r1;

        catch java.io.IOException from label1 to label4 with label5;
    }

    private com.android.okhttp.internal.http.HttpURLConnectionImpl$Retry processResponseHeaders() throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpURLConnectionImpl r0;
        com.android.okhttp.Connection r1;
        java.net.Proxy r2, $r8;
        int i0, $i1, $i2, $i3, $i4, $i5;
        com.android.okhttp.Request r3;
        java.lang.String r4, $r21, $r23, $r24, $r26, $r28, $r35, $r37, $r38, $r48;
        java.net.URL r5, $r20, $r22, $r25, $r27, $r31, $r36;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        com.android.okhttp.internal.http.HttpEngine $r6, $r12;
        com.android.okhttp.OkHttpClient $r7, $r10, $r33;
        java.net.Proxy$Type $r9, $r11;
        com.android.okhttp.OkAuthenticator $r13;
        com.android.okhttp.Response $r14;
        com.android.okhttp.Headers$Builder $r15;
        com.android.okhttp.Headers $r16;
        com.android.okhttp.internal.http.HttpURLConnectionImpl$Retry $r17, $r18, $r29, $r30, $r32, $r34, $r39, $r42, $r43, $r44;
        java.net.ProtocolException $r19, $r41;
        java.lang.StringBuilder $r40, $r46, $r47;
        com.android.okhttp.Route $r45;

        r0 := @this: com.android.okhttp.internal.http.HttpURLConnectionImpl;

        $r6 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.internal.http.HttpEngine httpEngine>;

        r1 = virtualinvoke $r6.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Connection getConnection()>();

        if r1 == null goto label01;

        $r45 = virtualinvoke r1.<com.android.okhttp.Connection: com.android.okhttp.Route getRoute()>();

        $r8 = virtualinvoke $r45.<com.android.okhttp.Route: java.net.Proxy getProxy()>();

        goto label02;

     label01:
        $r7 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.OkHttpClient client>;

        $r8 = virtualinvoke $r7.<com.android.okhttp.OkHttpClient: java.net.Proxy getProxy()>();

     label02:
        r2 = $r8;

        i0 = virtualinvoke r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: int getResponseCode()>();

        lookupswitch(i0)
        {
            case 300: goto label06;
            case 301: goto label06;
            case 302: goto label06;
            case 303: goto label06;
            case 307: goto label06;
            case 401: goto label04;
            case 407: goto label03;
            default: goto label16;
        };

     label03:
        $r9 = virtualinvoke r2.<java.net.Proxy: java.net.Proxy$Type type()>();

        $r11 = <java.net.Proxy$Type: java.net.Proxy$Type HTTP>;

        if $r9 == $r11 goto label04;

        $r19 = new java.net.ProtocolException;

        specialinvoke $r19.<java.net.ProtocolException: void <init>(java.lang.String)>("Received HTTP_PROXY_AUTH (407) code while not using proxy");

        throw $r19;

     label04:
        $r10 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.OkHttpClient client>;

        $r13 = virtualinvoke $r10.<com.android.okhttp.OkHttpClient: com.android.okhttp.OkAuthenticator getAuthenticator()>();

        $r12 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.internal.http.HttpEngine httpEngine>;

        $r14 = virtualinvoke $r12.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response getResponse()>();

        r3 = staticinvoke <com.android.okhttp.internal.http.HttpAuthenticator: com.android.okhttp.Request processAuthHeader(com.android.okhttp.OkAuthenticator,com.android.okhttp.Response,java.net.Proxy)>($r13, $r14, r2);

        if r3 != null goto label05;

        $r17 = <com.android.okhttp.internal.http.HttpURLConnectionImpl$Retry: com.android.okhttp.internal.http.HttpURLConnectionImpl$Retry NONE>;

        return $r17;

     label05:
        $r16 = virtualinvoke r3.<com.android.okhttp.Request: com.android.okhttp.Headers getHeaders()>();

        $r15 = virtualinvoke $r16.<com.android.okhttp.Headers: com.android.okhttp.Headers$Builder newBuilder()>();

        r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.Headers$Builder requestHeaders> = $r15;

        $r18 = <com.android.okhttp.internal.http.HttpURLConnectionImpl$Retry: com.android.okhttp.internal.http.HttpURLConnectionImpl$Retry SAME_CONNECTION>;

        return $r18;

     label06:
        $z3 = virtualinvoke r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: boolean getInstanceFollowRedirects()>();

        if $z3 != 0 goto label07;

        $r43 = <com.android.okhttp.internal.http.HttpURLConnectionImpl$Retry: com.android.okhttp.internal.http.HttpURLConnectionImpl$Retry NONE>;

        return $r43;

     label07:
        $i2 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: int redirectionCount>;

        $i1 = $i2 + 1;

        r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: int redirectionCount> = $i1;

        if $i1 <= 20 goto label08;

        $r41 = new java.net.ProtocolException;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Too many redirects: ");

        $i5 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: int redirectionCount>;

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r41.<java.net.ProtocolException: void <init>(java.lang.String)>($r48);

        throw $r41;

     label08:
        if i0 != 307 goto label09;

        $r38 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: java.lang.String method>;

        $z8 = virtualinvoke $r38.<java.lang.String: boolean equals(java.lang.Object)>("GET");

        if $z8 != 0 goto label09;

        $r37 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: java.lang.String method>;

        $z9 = virtualinvoke $r37.<java.lang.String: boolean equals(java.lang.Object)>("HEAD");

        if $z9 != 0 goto label09;

        $r42 = <com.android.okhttp.internal.http.HttpURLConnectionImpl$Retry: com.android.okhttp.internal.http.HttpURLConnectionImpl$Retry NONE>;

        return $r42;

     label09:
        r4 = virtualinvoke r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: java.lang.String getHeaderField(java.lang.String)>("Location");

        if r4 != null goto label10;

        $r39 = <com.android.okhttp.internal.http.HttpURLConnectionImpl$Retry: com.android.okhttp.internal.http.HttpURLConnectionImpl$Retry NONE>;

        return $r39;

     label10:
        r5 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: java.net.URL url>;

        $r20 = new java.net.URL;

        specialinvoke $r20.<java.net.URL: void <init>(java.net.URL,java.lang.String)>(r5, r4);

        r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: java.net.URL url> = $r20;

        $r22 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: java.net.URL url>;

        $r23 = virtualinvoke $r22.<java.net.URL: java.lang.String getProtocol()>();

        $z4 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>("https");

        if $z4 != 0 goto label11;

        $r36 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: java.net.URL url>;

        $r35 = virtualinvoke $r36.<java.net.URL: java.lang.String getProtocol()>();

        $z7 = virtualinvoke $r35.<java.lang.String: boolean equals(java.lang.Object)>("http");

        if $z7 != 0 goto label11;

        $r34 = <com.android.okhttp.internal.http.HttpURLConnectionImpl$Retry: com.android.okhttp.internal.http.HttpURLConnectionImpl$Retry NONE>;

        return $r34;

     label11:
        $r21 = virtualinvoke r5.<java.net.URL: java.lang.String getProtocol()>();

        $r25 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: java.net.URL url>;

        $r26 = virtualinvoke $r25.<java.net.URL: java.lang.String getProtocol()>();

        z0 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>($r26);

        if z0 != 0 goto label12;

        $r33 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.OkHttpClient client>;

        $z5 = virtualinvoke $r33.<com.android.okhttp.OkHttpClient: boolean getFollowProtocolRedirects()>();

        if $z5 != 0 goto label12;

        $r32 = <com.android.okhttp.internal.http.HttpURLConnectionImpl$Retry: com.android.okhttp.internal.http.HttpURLConnectionImpl$Retry NONE>;

        return $r32;

     label12:
        $r24 = virtualinvoke r5.<java.net.URL: java.lang.String getHost()>();

        $r27 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: java.net.URL url>;

        $r28 = virtualinvoke $r27.<java.net.URL: java.lang.String getHost()>();

        z1 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>($r28);

        $i3 = staticinvoke <com.android.okhttp.internal.Util: int getEffectivePort(java.net.URL)>(r5);

        $r31 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: java.net.URL url>;

        $i4 = staticinvoke <com.android.okhttp.internal.Util: int getEffectivePort(java.net.URL)>($r31);

        if $i3 != $i4 goto label13;

        $z6 = 1;

        goto label14;

     label13:
        $z6 = 0;

     label14:
        z2 = $z6;

        if z1 == 0 goto label15;

        if z2 == 0 goto label15;

        if z0 == 0 goto label15;

        $r30 = <com.android.okhttp.internal.http.HttpURLConnectionImpl$Retry: com.android.okhttp.internal.http.HttpURLConnectionImpl$Retry SAME_CONNECTION>;

        return $r30;

     label15:
        $r29 = <com.android.okhttp.internal.http.HttpURLConnectionImpl$Retry: com.android.okhttp.internal.http.HttpURLConnectionImpl$Retry DIFFERENT_CONNECTION>;

        return $r29;

     label16:
        $r44 = <com.android.okhttp.internal.http.HttpURLConnectionImpl$Retry: com.android.okhttp.internal.http.HttpURLConnectionImpl$Retry NONE>;

        return $r44;
    }

    public final boolean usingProxy()
    {
        com.android.okhttp.internal.http.HttpURLConnectionImpl r0;
        java.net.Proxy r1, $r4;
        com.android.okhttp.Route $r2, $r7;
        com.android.okhttp.OkHttpClient $r3;
        java.net.Proxy$Type $r5, $r6;
        boolean $z0;

        r0 := @this: com.android.okhttp.internal.http.HttpURLConnectionImpl;

        $r2 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.Route route>;

        if $r2 == null goto label1;

        $r7 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.Route route>;

        $r4 = virtualinvoke $r7.<com.android.okhttp.Route: java.net.Proxy getProxy()>();

        goto label2;

     label1:
        $r3 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.OkHttpClient client>;

        $r4 = virtualinvoke $r3.<com.android.okhttp.OkHttpClient: java.net.Proxy getProxy()>();

     label2:
        r1 = $r4;

        if r1 == null goto label3;

        $r5 = virtualinvoke r1.<java.net.Proxy: java.net.Proxy$Type type()>();

        $r6 = <java.net.Proxy$Type: java.net.Proxy$Type DIRECT>;

        if $r5 == $r6 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    public java.lang.String getResponseMessage() throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpURLConnectionImpl r0;
        com.android.okhttp.internal.http.HttpEngine $r1;
        com.android.okhttp.Response $r2;
        java.lang.String $r3;

        r0 := @this: com.android.okhttp.internal.http.HttpURLConnectionImpl;

        $r1 = specialinvoke r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.internal.http.HttpEngine getResponse()>();

        $r2 = virtualinvoke $r1.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response getResponse()>();

        $r3 = virtualinvoke $r2.<com.android.okhttp.Response: java.lang.String statusMessage()>();

        return $r3;
    }

    public final int getResponseCode() throws java.io.IOException
    {
        com.android.okhttp.internal.http.HttpURLConnectionImpl r0;
        com.android.okhttp.internal.http.HttpEngine $r1;
        com.android.okhttp.Response $r2;
        int $i0;

        r0 := @this: com.android.okhttp.internal.http.HttpURLConnectionImpl;

        $r1 = specialinvoke r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.internal.http.HttpEngine getResponse()>();

        $r2 = virtualinvoke $r1.<com.android.okhttp.internal.http.HttpEngine: com.android.okhttp.Response getResponse()>();

        $i0 = virtualinvoke $r2.<com.android.okhttp.Response: int code()>();

        return $i0;
    }

    public final void setRequestProperty(java.lang.String, java.lang.String)
    {
        com.android.okhttp.internal.http.HttpURLConnectionImpl r0;
        java.lang.String r1, r2, $r3, $r4, $r12;
        boolean $z0, $z1, $z2;
        com.android.okhttp.Headers$Builder $r5;
        com.android.okhttp.internal.Platform $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r11;
        java.lang.IllegalStateException $r13;
        java.lang.NullPointerException $r14;

        r0 := @this: com.android.okhttp.internal.http.HttpURLConnectionImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: boolean connected>;

        if $z0 == 0 goto label1;

        $r13 = new java.lang.IllegalStateException;

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot set request property after connection is made");

        throw $r13;

     label1:
        if r1 != null goto label2;

        $r14 = new java.lang.NullPointerException;

        specialinvoke $r14.<java.lang.NullPointerException: void <init>(java.lang.String)>("field == null");

        throw $r14;

     label2:
        if r2 != null goto label3;

        $r7 = staticinvoke <com.android.okhttp.internal.Platform: com.android.okhttp.internal.Platform get()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring header ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because its value was null.");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<com.android.okhttp.internal.Platform: void logW(java.lang.String)>($r12);

        return;

     label3:
        $r3 = "X-Android-Transports";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 != 0 goto label4;

        $r4 = "X-Android-Protocols";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label5;

     label4:
        specialinvoke r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: void setProtocols(java.lang.String,boolean)>(r2, 0);

        goto label6;

     label5:
        $r5 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.Headers$Builder requestHeaders>;

        virtualinvoke $r5.<com.android.okhttp.Headers$Builder: com.android.okhttp.Headers$Builder set(java.lang.String,java.lang.String)>(r1, r2);

     label6:
        return;
    }

    public void setIfModifiedSince(long)
    {
        com.android.okhttp.internal.http.HttpURLConnectionImpl r0;
        long l0, $l1, $l3;
        byte $b2;
        com.android.okhttp.Headers$Builder $r1, $r4;
        java.util.Date $r3;
        java.lang.String $r5;

        r0 := @this: com.android.okhttp.internal.http.HttpURLConnectionImpl;

        l0 := @parameter0: long;

        specialinvoke r0.<java.net.HttpURLConnection: void setIfModifiedSince(long)>(l0);

        $l1 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: long ifModifiedSince>;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label1;

        $r4 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.Headers$Builder requestHeaders>;

        $r3 = new java.util.Date;

        $l3 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: long ifModifiedSince>;

        specialinvoke $r3.<java.util.Date: void <init>(long)>($l3);

        $r5 = staticinvoke <com.android.okhttp.internal.http.HttpDate: java.lang.String format(java.util.Date)>($r3);

        virtualinvoke $r4.<com.android.okhttp.Headers$Builder: com.android.okhttp.Headers$Builder set(java.lang.String,java.lang.String)>("If-Modified-Since", $r5);

        goto label2;

     label1:
        $r1 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.Headers$Builder requestHeaders>;

        virtualinvoke $r1.<com.android.okhttp.Headers$Builder: com.android.okhttp.Headers$Builder removeAll(java.lang.String)>("If-Modified-Since");

     label2:
        return;
    }

    public final void addRequestProperty(java.lang.String, java.lang.String)
    {
        com.android.okhttp.internal.http.HttpURLConnectionImpl r0;
        java.lang.String r1, r2, $r3, $r4, $r12;
        boolean $z0, $z1, $z2;
        com.android.okhttp.Headers$Builder $r5;
        com.android.okhttp.internal.Platform $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r11;
        java.lang.IllegalStateException $r13;
        java.lang.NullPointerException $r14;

        r0 := @this: com.android.okhttp.internal.http.HttpURLConnectionImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: boolean connected>;

        if $z0 == 0 goto label1;

        $r13 = new java.lang.IllegalStateException;

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot add request property after connection is made");

        throw $r13;

     label1:
        if r1 != null goto label2;

        $r14 = new java.lang.NullPointerException;

        specialinvoke $r14.<java.lang.NullPointerException: void <init>(java.lang.String)>("field == null");

        throw $r14;

     label2:
        if r2 != null goto label3;

        $r7 = staticinvoke <com.android.okhttp.internal.Platform: com.android.okhttp.internal.Platform get()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring header ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" because its value was null.");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<com.android.okhttp.internal.Platform: void logW(java.lang.String)>($r12);

        return;

     label3:
        $r3 = "X-Android-Transports";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 != 0 goto label4;

        $r4 = "X-Android-Protocols";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z2 == 0 goto label5;

     label4:
        specialinvoke r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: void setProtocols(java.lang.String,boolean)>(r2, 1);

        goto label6;

     label5:
        $r5 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.Headers$Builder requestHeaders>;

        virtualinvoke $r5.<com.android.okhttp.Headers$Builder: com.android.okhttp.Headers$Builder add(java.lang.String,java.lang.String)>(r1, r2);

     label6:
        return;
    }

    private void setProtocols(java.lang.String, boolean)
    {
        com.android.okhttp.internal.http.HttpURLConnectionImpl r0;
        java.lang.String r1, r4;
        boolean z0;
        java.util.ArrayList r2, $r6;
        java.lang.String[] r3;
        int i0, i1;
        java.io.IOException r5, $r13;
        com.android.okhttp.OkHttpClient $r7, $r12;
        com.android.okio.ByteString $r9;
        com.android.okhttp.Protocol $r10;
        java.util.List $r11;
        java.lang.IllegalStateException $r14;

        r0 := @this: com.android.okhttp.internal.http.HttpURLConnectionImpl;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r2 = $r6;

        if z0 == 0 goto label1;

        $r12 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.OkHttpClient client>;

        $r11 = virtualinvoke $r12.<com.android.okhttp.OkHttpClient: java.util.List getProtocols()>();

        interfaceinvoke r2.<java.util.List: boolean addAll(java.util.Collection)>($r11);

     label1:
        r3 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String,int)>(",", -1);

        i0 = lengthof r3;

        i1 = 0;

     label2:
        if i1 >= i0 goto label7;

        r4 = r3[i1];

     label3:
        $r9 = staticinvoke <com.android.okio.ByteString: com.android.okio.ByteString encodeUtf8(java.lang.String)>(r4);

        $r10 = staticinvoke <com.android.okhttp.Protocol: com.android.okhttp.Protocol find(com.android.okio.ByteString)>($r9);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r10);

     label4:
        goto label6;

     label5:
        $r13 := @caughtexception;

        r5 = $r13;

        $r14 = new java.lang.IllegalStateException;

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>(r5);

        throw $r14;

     label6:
        i1 = i1 + 1;

        goto label2;

     label7:
        $r7 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: com.android.okhttp.OkHttpClient client>;

        virtualinvoke $r7.<com.android.okhttp.OkHttpClient: com.android.okhttp.OkHttpClient setProtocols(java.util.List)>(r2);

        return;

        catch java.io.IOException from label3 to label4 with label5;
    }

    public void setRequestMethod(java.lang.String) throws java.net.ProtocolException
    {
        com.android.okhttp.internal.http.HttpURLConnectionImpl r0;
        java.lang.String r1, $r10;
        java.util.Set $r2, $r6;
        boolean $z0;
        java.net.ProtocolException $r3;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r9;

        r0 := @this: com.android.okhttp.internal.http.HttpURLConnectionImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = <com.android.okhttp.internal.http.HttpMethod: java.util.Set METHODS>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r3 = new java.net.ProtocolException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected one of ");

        $r6 = <com.android.okhttp.internal.http.HttpMethod: java.util.Set METHODS>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but was ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.net.ProtocolException: void <init>(java.lang.String)>($r10);

        throw $r3;

     label1:
        r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: java.lang.String method> = r1;

        return;
    }

    public void setFixedLengthStreamingMode(int)
    {
        com.android.okhttp.internal.http.HttpURLConnectionImpl r0;
        int i0;
        long $l1;

        r0 := @this: com.android.okhttp.internal.http.HttpURLConnectionImpl;

        i0 := @parameter0: int;

        $l1 = (long) i0;

        virtualinvoke r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: void setFixedLengthStreamingMode(long)>($l1);

        return;
    }

    public void setFixedLengthStreamingMode(long)
    {
        com.android.okhttp.internal.http.HttpURLConnectionImpl r0;
        long l0, $l3;
        boolean $z0;
        int $i1, $i4;
        byte $b2;
        java.lang.IllegalArgumentException $r1;
        java.lang.IllegalStateException $r2, $r3;

        r0 := @this: com.android.okhttp.internal.http.HttpURLConnectionImpl;

        l0 := @parameter0: long;

        $z0 = r0.<java.net.HttpURLConnection: boolean connected>;

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already connected");

        throw $r3;

     label1:
        $i1 = r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: int chunkLength>;

        if $i1 <= 0 goto label2;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already in chunked mode");

        throw $r2;

     label2:
        $b2 = l0 cmp 0L;

        if $b2 >= 0 goto label3;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("contentLength < 0");

        throw $r1;

     label3:
        r0.<com.android.okhttp.internal.http.HttpURLConnectionImpl: long fixedContentLength> = l0;

        $l3 = staticinvoke <java.lang.Math: long min(long,long)>(l0, 2147483647L);

        $i4 = (int) $l3;

        r0.<java.net.HttpURLConnection: int fixedContentLength> = $i4;

        return;
    }

    public static void <clinit>()
    {
        <com.android.okhttp.internal.http.HttpURLConnectionImpl: int MAX_REDIRECTS> = 20;

        return;
    }
}
