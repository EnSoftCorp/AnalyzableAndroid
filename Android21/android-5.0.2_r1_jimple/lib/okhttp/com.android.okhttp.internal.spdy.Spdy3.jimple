final class com.android.okhttp.internal.spdy.Spdy3 extends java.lang.Object implements com.android.okhttp.internal.spdy.Variant
{
    static final int TYPE_DATA;
    static final int TYPE_SYN_STREAM;
    static final int TYPE_SYN_REPLY;
    static final int TYPE_RST_STREAM;
    static final int TYPE_SETTINGS;
    static final int TYPE_PING;
    static final int TYPE_GOAWAY;
    static final int TYPE_HEADERS;
    static final int TYPE_WINDOW_UPDATE;
    static final int FLAG_FIN;
    static final int FLAG_UNIDIRECTIONAL;
    static final int VERSION;
    static final byte[] DICTIONARY;

    void <init>()
    {
        com.android.okhttp.internal.spdy.Spdy3 r0;

        r0 := @this: com.android.okhttp.internal.spdy.Spdy3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.android.okhttp.Protocol getProtocol()
    {
        com.android.okhttp.internal.spdy.Spdy3 r0;
        com.android.okhttp.Protocol $r1;

        r0 := @this: com.android.okhttp.internal.spdy.Spdy3;

        $r1 = <com.android.okhttp.Protocol: com.android.okhttp.Protocol SPDY_3>;

        return $r1;
    }

    public com.android.okhttp.internal.spdy.FrameReader newReader(com.android.okio.BufferedSource, boolean)
    {
        com.android.okhttp.internal.spdy.Spdy3 r0;
        com.android.okio.BufferedSource r1;
        boolean z0;
        com.android.okhttp.internal.spdy.Spdy3$Reader $r2;

        r0 := @this: com.android.okhttp.internal.spdy.Spdy3;

        r1 := @parameter0: com.android.okio.BufferedSource;

        z0 := @parameter1: boolean;

        $r2 = new com.android.okhttp.internal.spdy.Spdy3$Reader;

        specialinvoke $r2.<com.android.okhttp.internal.spdy.Spdy3$Reader: void <init>(com.android.okio.BufferedSource,boolean)>(r1, z0);

        return $r2;
    }

    public com.android.okhttp.internal.spdy.FrameWriter newWriter(com.android.okio.BufferedSink, boolean)
    {
        com.android.okhttp.internal.spdy.Spdy3 r0;
        com.android.okio.BufferedSink r1;
        boolean z0;
        com.android.okhttp.internal.spdy.Spdy3$Writer $r2;

        r0 := @this: com.android.okhttp.internal.spdy.Spdy3;

        r1 := @parameter0: com.android.okio.BufferedSink;

        z0 := @parameter1: boolean;

        $r2 = new com.android.okhttp.internal.spdy.Spdy3$Writer;

        specialinvoke $r2.<com.android.okhttp.internal.spdy.Spdy3$Writer: void <init>(com.android.okio.BufferedSink,boolean)>(r1, z0);

        return $r2;
    }

    public int maxFrameSize()
    {
        com.android.okhttp.internal.spdy.Spdy3 r0;

        r0 := @this: com.android.okhttp.internal.spdy.Spdy3;

        return 16383;
    }

    static void <clinit>()
    {
        java.nio.charset.Charset $r1;
        java.lang.String $r2, $r3;
        byte[] $r4;
        java.io.UnsupportedEncodingException $r5;
        java.lang.AssertionError $r6;

        <com.android.okhttp.internal.spdy.Spdy3: int VERSION> = 3;

        <com.android.okhttp.internal.spdy.Spdy3: int FLAG_UNIDIRECTIONAL> = 2;

        <com.android.okhttp.internal.spdy.Spdy3: int FLAG_FIN> = 1;

        <com.android.okhttp.internal.spdy.Spdy3: int TYPE_WINDOW_UPDATE> = 9;

        <com.android.okhttp.internal.spdy.Spdy3: int TYPE_HEADERS> = 8;

        <com.android.okhttp.internal.spdy.Spdy3: int TYPE_GOAWAY> = 7;

        <com.android.okhttp.internal.spdy.Spdy3: int TYPE_PING> = 6;

        <com.android.okhttp.internal.spdy.Spdy3: int TYPE_SETTINGS> = 4;

        <com.android.okhttp.internal.spdy.Spdy3: int TYPE_RST_STREAM> = 3;

        <com.android.okhttp.internal.spdy.Spdy3: int TYPE_SYN_REPLY> = 2;

        <com.android.okhttp.internal.spdy.Spdy3: int TYPE_SYN_STREAM> = 1;

        <com.android.okhttp.internal.spdy.Spdy3: int TYPE_DATA> = 0;

     label1:
        $r2 = "\u0000\u0000\u0000\u0007options\u0000\u0000\u0000\u0004head\u0000\u0000\u0000\u0004post\u0000\u0000\u0000\u0003put\u0000\u0000\u0000\u0006delete\u0000\u0000\u0000\u0005trace\u0000\u0000\u0000\u0006accept\u0000\u0000\u0000\u000eaccept-charset\u0000\u0000\u0000\u000faccept-encoding\u0000\u0000\u0000\u000faccept-language\u0000\u0000\u0000\raccept-ranges\u0000\u0000\u0000\u0003age\u0000\u0000\u0000\u0005allow\u0000\u0000\u0000\rauthorization\u0000\u0000\u0000\rcache-control\u0000\u0000\u0000\nconnection\u0000\u0000\u0000\fcontent-base\u0000\u0000\u0000\u0010content-encoding\u0000\u0000\u0000\u0010content-language\u0000\u0000\u0000\u000econtent-length\u0000\u0000\u0000\u0010content-location\u0000\u0000\u0000\u000bcontent-md5\u0000\u0000\u0000\rcontent-range\u0000\u0000\u0000\fcontent-type\u0000\u0000\u0000\u0004date\u0000\u0000\u0000\u0004etag\u0000\u0000\u0000\u0006expect\u0000\u0000\u0000\u0007expires\u0000\u0000\u0000\u0004from\u0000\u0000\u0000\u0004host\u0000\u0000\u0000\u0008if-match\u0000\u0000\u0000\u0011if-modified-since\u0000\u0000\u0000\rif-none-match\u0000\u0000\u0000\u0008if-range\u0000\u0000\u0000\u0013if-unmodified-since\u0000\u0000\u0000\rlast-modified\u0000\u0000\u0000\u0008location\u0000\u0000\u0000\fmax-forwards\u0000\u0000\u0000\u0006pragma\u0000\u0000\u0000\u0012proxy-authenticate\u0000\u0000\u0000\u0013proxy-authorization\u0000\u0000\u0000\u0005range\u0000\u0000\u0000\u0007referer\u0000\u0000\u0000\u000bretry-after\u0000\u0000\u0000\u0006server\u0000\u0000\u0000\u0002te\u0000\u0000\u0000\u0007trailer\u0000\u0000\u0000\u0011transfer-encoding\u0000\u0000\u0000\u0007upgrade\u0000\u0000\u0000\nuser-agent\u0000\u0000\u0000\u0004vary\u0000\u0000\u0000\u0003via\u0000\u0000\u0000\u0007warning\u0000\u0000\u0000\u0010www-authenticate\u0000\u0000\u0000\u0006method\u0000\u0000\u0000\u0003get\u0000\u0000\u0000\u0006status\u0000\u0000\u0000\u0006200 OK\u0000\u0000\u0000\u0007version\u0000\u0000\u0000\u0008HTTP/1.1\u0000\u0000\u0000\u0003url\u0000\u0000\u0000\u0006public\u0000\u0000\u0000\nset-cookie\u0000\u0000\u0000\nkeep-alive\u0000\u0000\u0000\u0006origin100101201202205206300302303304305306307402405406407408409410411412413414415416417502504505203 Non-Authoritative Information204 No Content301 Moved Permanently400 Bad Request401 Unauthorized403 Forbidden404 Not Found500 Internal Server Error501 Not Implemented503 Service UnavailableJan Feb Mar Apr May Jun Jul Aug Sept Oct Nov Dec 00:00:00 Mon, Tue, Wed, Thu, Fri, Sat, Sun, GMTchunked,text/html,image/png,image/jpg,image/gif,application/xml,application/xhtml+xml,text/plain,text/javascript,publicprivatemax-age=gzip,deflate,sdchcharset=utf-8charset=iso-8859-1,utf-,*,enq=0.";

        $r1 = <com.android.okhttp.internal.Util: java.nio.charset.Charset UTF_8>;

        $r3 = virtualinvoke $r1.<java.nio.charset.Charset: java.lang.String name()>();

        $r4 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>($r3);

        <com.android.okhttp.internal.spdy.Spdy3: byte[] DICTIONARY> = $r4;

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label4:
        return;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }
}
