abstract class com.android.okhttp.internal.http.DelegatingHttpsURLConnection extends javax.net.ssl.HttpsURLConnection
{
    private final java.net.HttpURLConnection delegate;

    public void <init>(java.net.HttpURLConnection)
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        java.net.HttpURLConnection r1;
        java.net.URL $r2;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        r1 := @parameter0: java.net.HttpURLConnection;

        $r2 = virtualinvoke r1.<java.net.HttpURLConnection: java.net.URL getURL()>();

        specialinvoke r0.<javax.net.ssl.HttpsURLConnection: void <init>(java.net.URL)>($r2);

        r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate> = r1;

        return;
    }

    protected abstract com.android.okhttp.Handshake handshake();

    public abstract void setHostnameVerifier(javax.net.ssl.HostnameVerifier);

    public abstract javax.net.ssl.HostnameVerifier getHostnameVerifier();

    public abstract void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory);

    public abstract javax.net.ssl.SSLSocketFactory getSSLSocketFactory();

    public java.lang.String getCipherSuite()
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        com.android.okhttp.Handshake r1;
        java.lang.String $r2;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        r1 = virtualinvoke r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: com.android.okhttp.Handshake handshake()>();

        if r1 == null goto label1;

        $r2 = virtualinvoke r1.<com.android.okhttp.Handshake: java.lang.String cipherSuite()>();

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public java.security.cert.Certificate[] getLocalCertificates()
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        com.android.okhttp.Handshake r1;
        java.util.List r2;
        boolean $z0;
        int $i0;
        java.security.cert.Certificate[] $r3, $r5;
        java.lang.Object[] $r4;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        r1 = virtualinvoke r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: com.android.okhttp.Handshake handshake()>();

        if r1 != null goto label1;

        return null;

     label1:
        r2 = virtualinvoke r1.<com.android.okhttp.Handshake: java.util.List localCertificates()>();

        $z0 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        $r3 = newarray (java.security.cert.Certificate)[$i0];

        $r4 = interfaceinvoke r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (java.security.cert.Certificate[]) $r4;

        goto label3;

     label2:
        $r5 = null;

     label3:
        return $r5;
    }

    public java.security.cert.Certificate[] getServerCertificates() throws javax.net.ssl.SSLPeerUnverifiedException
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        com.android.okhttp.Handshake r1;
        java.util.List r2;
        boolean $z0;
        int $i0;
        java.security.cert.Certificate[] $r3, $r5;
        java.lang.Object[] $r4;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        r1 = virtualinvoke r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: com.android.okhttp.Handshake handshake()>();

        if r1 != null goto label1;

        return null;

     label1:
        r2 = virtualinvoke r1.<com.android.okhttp.Handshake: java.util.List peerCertificates()>();

        $z0 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        $r3 = newarray (java.security.cert.Certificate)[$i0];

        $r4 = interfaceinvoke r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (java.security.cert.Certificate[]) $r4;

        goto label3;

     label2:
        $r5 = null;

     label3:
        return $r5;
    }

    public java.security.Principal getPeerPrincipal() throws javax.net.ssl.SSLPeerUnverifiedException
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        com.android.okhttp.Handshake r1;
        java.security.Principal $r2;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        r1 = virtualinvoke r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: com.android.okhttp.Handshake handshake()>();

        if r1 == null goto label1;

        $r2 = virtualinvoke r1.<com.android.okhttp.Handshake: java.security.Principal peerPrincipal()>();

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public java.security.Principal getLocalPrincipal()
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        com.android.okhttp.Handshake r1;
        java.security.Principal $r2;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        r1 = virtualinvoke r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: com.android.okhttp.Handshake handshake()>();

        if r1 == null goto label1;

        $r2 = virtualinvoke r1.<com.android.okhttp.Handshake: java.security.Principal localPrincipal()>();

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public void connect() throws java.io.IOException
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        java.net.HttpURLConnection $r1;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: boolean connected> = 1;

        $r1 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        virtualinvoke $r1.<java.net.HttpURLConnection: void connect()>();

        return;
    }

    public void disconnect()
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        java.net.HttpURLConnection $r1;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        $r1 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        virtualinvoke $r1.<java.net.HttpURLConnection: void disconnect()>();

        return;
    }

    public java.io.InputStream getErrorStream()
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        java.net.HttpURLConnection $r1;
        java.io.InputStream $r2;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        $r1 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        $r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>();

        return $r2;
    }

    public java.lang.String getRequestMethod()
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        java.net.HttpURLConnection $r1;
        java.lang.String $r2;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        $r1 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        $r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>();

        return $r2;
    }

    public int getResponseCode() throws java.io.IOException
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        java.net.HttpURLConnection $r1;
        int $i0;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        $r1 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        $i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getResponseCode()>();

        return $i0;
    }

    public java.lang.String getResponseMessage() throws java.io.IOException
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        java.net.HttpURLConnection $r1;
        java.lang.String $r2;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        $r1 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        $r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getResponseMessage()>();

        return $r2;
    }

    public void setRequestMethod(java.lang.String) throws java.net.ProtocolException
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        java.lang.String r1;
        java.net.HttpURLConnection $r2;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        virtualinvoke $r2.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>(r1);

        return;
    }

    public boolean usingProxy()
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        java.net.HttpURLConnection $r1;
        boolean $z0;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        $r1 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        $z0 = virtualinvoke $r1.<java.net.HttpURLConnection: boolean usingProxy()>();

        return $z0;
    }

    public boolean getInstanceFollowRedirects()
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        java.net.HttpURLConnection $r1;
        boolean $z0;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        $r1 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        $z0 = virtualinvoke $r1.<java.net.HttpURLConnection: boolean getInstanceFollowRedirects()>();

        return $z0;
    }

    public void setInstanceFollowRedirects(boolean)
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        boolean z0;
        java.net.HttpURLConnection $r1;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        virtualinvoke $r1.<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>(z0);

        return;
    }

    public boolean getAllowUserInteraction()
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        java.net.HttpURLConnection $r1;
        boolean $z0;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        $r1 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        $z0 = virtualinvoke $r1.<java.net.HttpURLConnection: boolean getAllowUserInteraction()>();

        return $z0;
    }

    public java.lang.Object getContent() throws java.io.IOException
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        java.net.HttpURLConnection $r1;
        java.lang.Object $r2;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        $r1 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        $r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.Object getContent()>();

        return $r2;
    }

    public java.lang.Object getContent(java.lang.Class[]) throws java.io.IOException
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        java.lang.Class[] r1;
        java.net.HttpURLConnection $r2;
        java.lang.Object $r3;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        r1 := @parameter0: java.lang.Class[];

        $r2 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        $r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.Object getContent(java.lang.Class[])>(r1);

        return $r3;
    }

    public java.lang.String getContentEncoding()
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        java.net.HttpURLConnection $r1;
        java.lang.String $r2;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        $r1 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        $r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getContentEncoding()>();

        return $r2;
    }

    public int getContentLength()
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        java.net.HttpURLConnection $r1;
        int $i0;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        $r1 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        $i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getContentLength()>();

        return $i0;
    }

    public java.lang.String getContentType()
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        java.net.HttpURLConnection $r1;
        java.lang.String $r2;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        $r1 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        $r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getContentType()>();

        return $r2;
    }

    public long getDate()
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        java.net.HttpURLConnection $r1;
        long $l0;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        $r1 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        $l0 = virtualinvoke $r1.<java.net.HttpURLConnection: long getDate()>();

        return $l0;
    }

    public boolean getDefaultUseCaches()
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        java.net.HttpURLConnection $r1;
        boolean $z0;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        $r1 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        $z0 = virtualinvoke $r1.<java.net.HttpURLConnection: boolean getDefaultUseCaches()>();

        return $z0;
    }

    public boolean getDoInput()
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        java.net.HttpURLConnection $r1;
        boolean $z0;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        $r1 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        $z0 = virtualinvoke $r1.<java.net.HttpURLConnection: boolean getDoInput()>();

        return $z0;
    }

    public boolean getDoOutput()
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        java.net.HttpURLConnection $r1;
        boolean $z0;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        $r1 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        $z0 = virtualinvoke $r1.<java.net.HttpURLConnection: boolean getDoOutput()>();

        return $z0;
    }

    public long getExpiration()
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        java.net.HttpURLConnection $r1;
        long $l0;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        $r1 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        $l0 = virtualinvoke $r1.<java.net.HttpURLConnection: long getExpiration()>();

        return $l0;
    }

    public java.lang.String getHeaderField(int)
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        int i0;
        java.net.HttpURLConnection $r1;
        java.lang.String $r2;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        $r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderField(int)>(i0);

        return $r2;
    }

    public java.util.Map getHeaderFields()
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        java.net.HttpURLConnection $r1;
        java.util.Map $r2;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        $r1 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        $r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.util.Map getHeaderFields()>();

        return $r2;
    }

    public java.util.Map getRequestProperties()
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        java.net.HttpURLConnection $r1;
        java.util.Map $r2;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        $r1 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        $r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.util.Map getRequestProperties()>();

        return $r2;
    }

    public void addRequestProperty(java.lang.String, java.lang.String)
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        java.lang.String r1, r2;
        java.net.HttpURLConnection $r3;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        virtualinvoke $r3.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public java.lang.String getHeaderField(java.lang.String)
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        java.lang.String r1, $r3;
        java.net.HttpURLConnection $r2;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        $r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getHeaderField(java.lang.String)>(r1);

        return $r3;
    }

    public long getHeaderFieldDate(java.lang.String, long)
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        java.lang.String r1;
        long l0, $l1;
        java.net.HttpURLConnection $r2;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r2 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        $l1 = virtualinvoke $r2.<java.net.HttpURLConnection: long getHeaderFieldDate(java.lang.String,long)>(r1, l0);

        return $l1;
    }

    public int getHeaderFieldInt(java.lang.String, int)
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        java.lang.String r1;
        int i0, $i1;
        java.net.HttpURLConnection $r2;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        $i1 = virtualinvoke $r2.<java.net.HttpURLConnection: int getHeaderFieldInt(java.lang.String,int)>(r1, i0);

        return $i1;
    }

    public java.lang.String getHeaderFieldKey(int)
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        int i0;
        java.net.HttpURLConnection $r1;
        java.lang.String $r2;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        $r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String getHeaderFieldKey(int)>(i0);

        return $r2;
    }

    public long getIfModifiedSince()
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        java.net.HttpURLConnection $r1;
        long $l0;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        $r1 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        $l0 = virtualinvoke $r1.<java.net.HttpURLConnection: long getIfModifiedSince()>();

        return $l0;
    }

    public java.io.InputStream getInputStream() throws java.io.IOException
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        java.net.HttpURLConnection $r1;
        java.io.InputStream $r2;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        $r1 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        $r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

        return $r2;
    }

    public long getLastModified()
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        java.net.HttpURLConnection $r1;
        long $l0;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        $r1 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        $l0 = virtualinvoke $r1.<java.net.HttpURLConnection: long getLastModified()>();

        return $l0;
    }

    public java.io.OutputStream getOutputStream() throws java.io.IOException
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        java.net.HttpURLConnection $r1;
        java.io.OutputStream $r2;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        $r1 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        $r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        return $r2;
    }

    public java.security.Permission getPermission() throws java.io.IOException
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        java.net.HttpURLConnection $r1;
        java.security.Permission $r2;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        $r1 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        $r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.security.Permission getPermission()>();

        return $r2;
    }

    public java.lang.String getRequestProperty(java.lang.String)
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        java.lang.String r1, $r3;
        java.net.HttpURLConnection $r2;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        $r3 = virtualinvoke $r2.<java.net.HttpURLConnection: java.lang.String getRequestProperty(java.lang.String)>(r1);

        return $r3;
    }

    public java.net.URL getURL()
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        java.net.HttpURLConnection $r1;
        java.net.URL $r2;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        $r1 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        $r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.net.URL getURL()>();

        return $r2;
    }

    public boolean getUseCaches()
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        java.net.HttpURLConnection $r1;
        boolean $z0;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        $r1 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        $z0 = virtualinvoke $r1.<java.net.HttpURLConnection: boolean getUseCaches()>();

        return $z0;
    }

    public void setAllowUserInteraction(boolean)
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        boolean z0;
        java.net.HttpURLConnection $r1;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        virtualinvoke $r1.<java.net.HttpURLConnection: void setAllowUserInteraction(boolean)>(z0);

        return;
    }

    public void setDefaultUseCaches(boolean)
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        boolean z0;
        java.net.HttpURLConnection $r1;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        virtualinvoke $r1.<java.net.HttpURLConnection: void setDefaultUseCaches(boolean)>(z0);

        return;
    }

    public void setDoInput(boolean)
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        boolean z0;
        java.net.HttpURLConnection $r1;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        virtualinvoke $r1.<java.net.HttpURLConnection: void setDoInput(boolean)>(z0);

        return;
    }

    public void setDoOutput(boolean)
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        boolean z0;
        java.net.HttpURLConnection $r1;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        virtualinvoke $r1.<java.net.HttpURLConnection: void setDoOutput(boolean)>(z0);

        return;
    }

    public void setIfModifiedSince(long)
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        long l0;
        java.net.HttpURLConnection $r1;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        l0 := @parameter0: long;

        $r1 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        virtualinvoke $r1.<java.net.HttpURLConnection: void setIfModifiedSince(long)>(l0);

        return;
    }

    public void setRequestProperty(java.lang.String, java.lang.String)
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        java.lang.String r1, r2;
        java.net.HttpURLConnection $r3;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        virtualinvoke $r3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    public void setUseCaches(boolean)
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        boolean z0;
        java.net.HttpURLConnection $r1;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        virtualinvoke $r1.<java.net.HttpURLConnection: void setUseCaches(boolean)>(z0);

        return;
    }

    public void setConnectTimeout(int)
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        int i0;
        java.net.HttpURLConnection $r1;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        virtualinvoke $r1.<java.net.HttpURLConnection: void setConnectTimeout(int)>(i0);

        return;
    }

    public int getConnectTimeout()
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        java.net.HttpURLConnection $r1;
        int $i0;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        $r1 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        $i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getConnectTimeout()>();

        return $i0;
    }

    public void setReadTimeout(int)
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        int i0;
        java.net.HttpURLConnection $r1;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        virtualinvoke $r1.<java.net.HttpURLConnection: void setReadTimeout(int)>(i0);

        return;
    }

    public int getReadTimeout()
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        java.net.HttpURLConnection $r1;
        int $i0;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        $r1 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        $i0 = virtualinvoke $r1.<java.net.HttpURLConnection: int getReadTimeout()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        java.net.HttpURLConnection $r1;
        java.lang.String $r2;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        $r1 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        $r2 = virtualinvoke $r1.<java.net.HttpURLConnection: java.lang.String toString()>();

        return $r2;
    }

    public void setFixedLengthStreamingMode(int)
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        int i0;
        java.net.HttpURLConnection $r1;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        virtualinvoke $r1.<java.net.HttpURLConnection: void setFixedLengthStreamingMode(int)>(i0);

        return;
    }

    public void setChunkedStreamingMode(int)
    {
        com.android.okhttp.internal.http.DelegatingHttpsURLConnection r0;
        int i0;
        java.net.HttpURLConnection $r1;

        r0 := @this: com.android.okhttp.internal.http.DelegatingHttpsURLConnection;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.okhttp.internal.http.DelegatingHttpsURLConnection: java.net.HttpURLConnection delegate>;

        virtualinvoke $r1.<java.net.HttpURLConnection: void setChunkedStreamingMode(int)>(i0);

        return;
    }
}
