public class android.net.rtp.AudioStream extends android.net.rtp.RtpStream
{
    private android.net.rtp.AudioCodec mCodec;
    private int mDtmfType;
    private android.net.rtp.AudioGroup mGroup;

    public void <init>(java.net.InetAddress) throws java.net.SocketException
    {
        android.net.rtp.AudioStream r0;
        java.net.InetAddress r1;

        r0 := @this: android.net.rtp.AudioStream;

        r1 := @parameter0: java.net.InetAddress;

        specialinvoke r0.<android.net.rtp.RtpStream: void <init>(java.net.InetAddress)>(r1);

        r0.<android.net.rtp.AudioStream: int mDtmfType> = -1;

        return;
    }

    public final boolean isBusy()
    {
        android.net.rtp.AudioStream r0;
        android.net.rtp.AudioGroup $r1;
        boolean $z0;

        r0 := @this: android.net.rtp.AudioStream;

        $r1 = r0.<android.net.rtp.AudioStream: android.net.rtp.AudioGroup mGroup>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public android.net.rtp.AudioGroup getGroup()
    {
        android.net.rtp.AudioStream r0;
        android.net.rtp.AudioGroup $r1;

        r0 := @this: android.net.rtp.AudioStream;

        $r1 = r0.<android.net.rtp.AudioStream: android.net.rtp.AudioGroup mGroup>;

        return $r1;
    }

    public void join(android.net.rtp.AudioGroup)
    {
        android.net.rtp.AudioStream r0, r2;
        android.net.rtp.AudioGroup r1, $r5, $r6, $r7;
        java.lang.Throwable r3, $r8;

        r0 := @this: android.net.rtp.AudioStream;

        r1 := @parameter0: android.net.rtp.AudioGroup;

        r2 = r0;

        entermonitor r0;

     label1:
        $r5 = r0.<android.net.rtp.AudioStream: android.net.rtp.AudioGroup mGroup>;

        if $r5 != r1 goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        $r6 = r0.<android.net.rtp.AudioStream: android.net.rtp.AudioGroup mGroup>;

        if $r6 == null goto label4;

        $r7 = r0.<android.net.rtp.AudioStream: android.net.rtp.AudioGroup mGroup>;

        virtualinvoke $r7.<android.net.rtp.AudioGroup: void remove(android.net.rtp.AudioStream)>(r0);

        r0.<android.net.rtp.AudioStream: android.net.rtp.AudioGroup mGroup> = null;

     label4:
        if r1 == null goto label5;

        virtualinvoke r1.<android.net.rtp.AudioGroup: void add(android.net.rtp.AudioStream)>(r0);

        r0.<android.net.rtp.AudioStream: android.net.rtp.AudioGroup mGroup> = r1;

     label5:
        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label8:
        throw r3;

     label9:
        return;

        catch java.lang.Throwable from label1 to label2 with label7;
        catch java.lang.Throwable from label3 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public android.net.rtp.AudioCodec getCodec()
    {
        android.net.rtp.AudioStream r0;
        android.net.rtp.AudioCodec $r1;

        r0 := @this: android.net.rtp.AudioStream;

        $r1 = r0.<android.net.rtp.AudioStream: android.net.rtp.AudioCodec mCodec>;

        return $r1;
    }

    public void setCodec(android.net.rtp.AudioCodec)
    {
        android.net.rtp.AudioStream r0;
        android.net.rtp.AudioCodec r1;
        boolean $z0;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: android.net.rtp.AudioStream;

        r1 := @parameter0: android.net.rtp.AudioCodec;

        $z0 = virtualinvoke r0.<android.net.rtp.AudioStream: boolean isBusy()>();

        if $z0 == 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Busy");

        throw $r3;

     label1:
        $i1 = r1.<android.net.rtp.AudioCodec: int type>;

        $i0 = r0.<android.net.rtp.AudioStream: int mDtmfType>;

        if $i1 != $i0 goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The type is used by DTMF");

        throw $r2;

     label2:
        r0.<android.net.rtp.AudioStream: android.net.rtp.AudioCodec mCodec> = r1;

        return;
    }

    public int getDtmfType()
    {
        android.net.rtp.AudioStream r0;
        int $i0;

        r0 := @this: android.net.rtp.AudioStream;

        $i0 = r0.<android.net.rtp.AudioStream: int mDtmfType>;

        return $i0;
    }

    public void setDtmfType(int)
    {
        android.net.rtp.AudioStream r0;
        int i0, $i1;
        boolean $z0;
        java.lang.IllegalArgumentException $r1, $r4;
        android.net.rtp.AudioCodec $r2, $r3;
        java.lang.IllegalStateException $r5;

        r0 := @this: android.net.rtp.AudioStream;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<android.net.rtp.AudioStream: boolean isBusy()>();

        if $z0 == 0 goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Busy");

        throw $r5;

     label1:
        if i0 == -1 goto label4;

        if i0 < 96 goto label2;

        if i0 <= 127 goto label3;

     label2:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid type");

        throw $r1;

     label3:
        $r2 = r0.<android.net.rtp.AudioStream: android.net.rtp.AudioCodec mCodec>;

        if $r2 == null goto label4;

        $r3 = r0.<android.net.rtp.AudioStream: android.net.rtp.AudioCodec mCodec>;

        $i1 = $r3.<android.net.rtp.AudioCodec: int type>;

        if i0 != $i1 goto label4;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The type is used by codec");

        throw $r4;

     label4:
        r0.<android.net.rtp.AudioStream: int mDtmfType> = i0;

        return;
    }
}
