class android.net.sip.ISipSessionListener$Stub$Proxy extends java.lang.Object implements android.net.sip.ISipSessionListener
{
    private android.os.IBinder mRemote;

    void <init>(android.os.IBinder)
    {
        android.net.sip.ISipSessionListener$Stub$Proxy r0;
        android.os.IBinder r1;

        r0 := @this: android.net.sip.ISipSessionListener$Stub$Proxy;

        r1 := @parameter0: android.os.IBinder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.sip.ISipSessionListener$Stub$Proxy: android.os.IBinder mRemote> = r1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        android.net.sip.ISipSessionListener$Stub$Proxy r0;
        android.os.IBinder $r1;

        r0 := @this: android.net.sip.ISipSessionListener$Stub$Proxy;

        $r1 = r0.<android.net.sip.ISipSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        return $r1;
    }

    public java.lang.String getInterfaceDescriptor()
    {
        android.net.sip.ISipSessionListener$Stub$Proxy r0;

        r0 := @this: android.net.sip.ISipSessionListener$Stub$Proxy;

        return "android.net.sip.ISipSessionListener";
    }

    public void onCalling(android.net.sip.ISipSession) throws android.os.RemoteException
    {
        android.net.sip.ISipSessionListener$Stub$Proxy r0;
        android.net.sip.ISipSession r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r7;
        android.os.IBinder $r5, $r6;

        r0 := @this: android.net.sip.ISipSessionListener$Stub$Proxy;

        r1 := @parameter0: android.net.sip.ISipSession;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.sip.ISipSessionListener");

        if r1 == null goto label2;

        $r6 = interfaceinvoke r1.<android.net.sip.ISipSession: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r6 = null;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r6);

        $r5 = r0.<android.net.sip.ISipSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(1, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r7 := @caughtexception;

        r4 = $r7;

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void onRinging(android.net.sip.ISipSession, android.net.sip.SipProfile, java.lang.String) throws android.os.RemoteException
    {
        android.net.sip.ISipSessionListener$Stub$Proxy r0;
        android.net.sip.ISipSession r1;
        android.net.sip.SipProfile r2;
        java.lang.String r3;
        android.os.Parcel r4, r5;
        java.lang.Throwable r6, $r9;
        android.os.IBinder $r7, $r8;

        r0 := @this: android.net.sip.ISipSessionListener$Stub$Proxy;

        r1 := @parameter0: android.net.sip.ISipSession;

        r2 := @parameter1: android.net.sip.SipProfile;

        r3 := @parameter2: java.lang.String;

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r5 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r4.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.sip.ISipSessionListener");

        if r1 == null goto label2;

        $r8 = interfaceinvoke r1.<android.net.sip.ISipSession: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r8 = null;

     label3:
        virtualinvoke r4.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r8);

        if r2 == null goto label4;

        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(1);

        virtualinvoke r2.<android.net.sip.SipProfile: void writeToParcel(android.os.Parcel,int)>(r4, 0);

        goto label5;

     label4:
        virtualinvoke r4.<android.os.Parcel: void writeInt(int)>(0);

     label5:
        virtualinvoke r4.<android.os.Parcel: void writeString(java.lang.String)>(r3);

        $r7 = r0.<android.net.sip.ISipSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r7.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(2, r4, r5, 0);

        virtualinvoke r5.<android.os.Parcel: void readException()>();

     label6:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        goto label9;

     label7:
        $r9 := @caughtexception;

        r6 = $r9;

     label8:
        virtualinvoke r5.<android.os.Parcel: void recycle()>();

        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        throw r6;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void onRingingBack(android.net.sip.ISipSession) throws android.os.RemoteException
    {
        android.net.sip.ISipSessionListener$Stub$Proxy r0;
        android.net.sip.ISipSession r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r7;
        android.os.IBinder $r5, $r6;

        r0 := @this: android.net.sip.ISipSessionListener$Stub$Proxy;

        r1 := @parameter0: android.net.sip.ISipSession;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.sip.ISipSessionListener");

        if r1 == null goto label2;

        $r6 = interfaceinvoke r1.<android.net.sip.ISipSession: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r6 = null;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r6);

        $r5 = r0.<android.net.sip.ISipSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(3, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r7 := @caughtexception;

        r4 = $r7;

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void onCallEstablished(android.net.sip.ISipSession, java.lang.String) throws android.os.RemoteException
    {
        android.net.sip.ISipSessionListener$Stub$Proxy r0;
        android.net.sip.ISipSession r1;
        java.lang.String r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r8;
        android.os.IBinder $r6, $r7;

        r0 := @this: android.net.sip.ISipSessionListener$Stub$Proxy;

        r1 := @parameter0: android.net.sip.ISipSession;

        r2 := @parameter1: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.sip.ISipSessionListener");

        if r1 == null goto label2;

        $r7 = interfaceinvoke r1.<android.net.sip.ISipSession: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r7 = null;

     label3:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r7);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r6 = r0.<android.net.sip.ISipSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(4, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r8 := @caughtexception;

        r5 = $r8;

     label6:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void onCallEnded(android.net.sip.ISipSession) throws android.os.RemoteException
    {
        android.net.sip.ISipSessionListener$Stub$Proxy r0;
        android.net.sip.ISipSession r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r7;
        android.os.IBinder $r5, $r6;

        r0 := @this: android.net.sip.ISipSessionListener$Stub$Proxy;

        r1 := @parameter0: android.net.sip.ISipSession;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.sip.ISipSessionListener");

        if r1 == null goto label2;

        $r6 = interfaceinvoke r1.<android.net.sip.ISipSession: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r6 = null;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r6);

        $r5 = r0.<android.net.sip.ISipSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(5, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r7 := @caughtexception;

        r4 = $r7;

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void onCallBusy(android.net.sip.ISipSession) throws android.os.RemoteException
    {
        android.net.sip.ISipSessionListener$Stub$Proxy r0;
        android.net.sip.ISipSession r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r7;
        android.os.IBinder $r5, $r6;

        r0 := @this: android.net.sip.ISipSessionListener$Stub$Proxy;

        r1 := @parameter0: android.net.sip.ISipSession;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.sip.ISipSessionListener");

        if r1 == null goto label2;

        $r6 = interfaceinvoke r1.<android.net.sip.ISipSession: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r6 = null;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r6);

        $r5 = r0.<android.net.sip.ISipSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(6, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r7 := @caughtexception;

        r4 = $r7;

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void onCallTransferring(android.net.sip.ISipSession, java.lang.String) throws android.os.RemoteException
    {
        android.net.sip.ISipSessionListener$Stub$Proxy r0;
        android.net.sip.ISipSession r1;
        java.lang.String r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r8;
        android.os.IBinder $r6, $r7;

        r0 := @this: android.net.sip.ISipSessionListener$Stub$Proxy;

        r1 := @parameter0: android.net.sip.ISipSession;

        r2 := @parameter1: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.sip.ISipSessionListener");

        if r1 == null goto label2;

        $r7 = interfaceinvoke r1.<android.net.sip.ISipSession: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r7 = null;

     label3:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r7);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r6 = r0.<android.net.sip.ISipSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(7, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r8 := @caughtexception;

        r5 = $r8;

     label6:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void onError(android.net.sip.ISipSession, int, java.lang.String) throws android.os.RemoteException
    {
        android.net.sip.ISipSessionListener$Stub$Proxy r0;
        android.net.sip.ISipSession r1;
        int i0;
        java.lang.String r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r8;
        android.os.IBinder $r6, $r7;

        r0 := @this: android.net.sip.ISipSessionListener$Stub$Proxy;

        r1 := @parameter0: android.net.sip.ISipSession;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.sip.ISipSessionListener");

        if r1 == null goto label2;

        $r7 = interfaceinvoke r1.<android.net.sip.ISipSession: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r7 = null;

     label3:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r7);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r6 = r0.<android.net.sip.ISipSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(8, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r8 := @caughtexception;

        r5 = $r8;

     label6:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void onCallChangeFailed(android.net.sip.ISipSession, int, java.lang.String) throws android.os.RemoteException
    {
        android.net.sip.ISipSessionListener$Stub$Proxy r0;
        android.net.sip.ISipSession r1;
        int i0;
        java.lang.String r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r8;
        android.os.IBinder $r6, $r7;

        r0 := @this: android.net.sip.ISipSessionListener$Stub$Proxy;

        r1 := @parameter0: android.net.sip.ISipSession;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.sip.ISipSessionListener");

        if r1 == null goto label2;

        $r7 = interfaceinvoke r1.<android.net.sip.ISipSession: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r7 = null;

     label3:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r7);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r6 = r0.<android.net.sip.ISipSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(9, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r8 := @caughtexception;

        r5 = $r8;

     label6:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void onRegistering(android.net.sip.ISipSession) throws android.os.RemoteException
    {
        android.net.sip.ISipSessionListener$Stub$Proxy r0;
        android.net.sip.ISipSession r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r7;
        android.os.IBinder $r5, $r6;

        r0 := @this: android.net.sip.ISipSessionListener$Stub$Proxy;

        r1 := @parameter0: android.net.sip.ISipSession;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.sip.ISipSessionListener");

        if r1 == null goto label2;

        $r6 = interfaceinvoke r1.<android.net.sip.ISipSession: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r6 = null;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r6);

        $r5 = r0.<android.net.sip.ISipSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(10, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r7 := @caughtexception;

        r4 = $r7;

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void onRegistrationDone(android.net.sip.ISipSession, int) throws android.os.RemoteException
    {
        android.net.sip.ISipSessionListener$Stub$Proxy r0;
        android.net.sip.ISipSession r1;
        int i0;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r7;
        android.os.IBinder $r5, $r6;

        r0 := @this: android.net.sip.ISipSessionListener$Stub$Proxy;

        r1 := @parameter0: android.net.sip.ISipSession;

        i0 := @parameter1: int;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.sip.ISipSessionListener");

        if r1 == null goto label2;

        $r6 = interfaceinvoke r1.<android.net.sip.ISipSession: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r6 = null;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r6);

        virtualinvoke r2.<android.os.Parcel: void writeInt(int)>(i0);

        $r5 = r0.<android.net.sip.ISipSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(11, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r7 := @caughtexception;

        r4 = $r7;

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void onRegistrationFailed(android.net.sip.ISipSession, int, java.lang.String) throws android.os.RemoteException
    {
        android.net.sip.ISipSessionListener$Stub$Proxy r0;
        android.net.sip.ISipSession r1;
        int i0;
        java.lang.String r2;
        android.os.Parcel r3, r4;
        java.lang.Throwable r5, $r8;
        android.os.IBinder $r6, $r7;

        r0 := @this: android.net.sip.ISipSessionListener$Stub$Proxy;

        r1 := @parameter0: android.net.sip.ISipSession;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r4 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r3.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.sip.ISipSessionListener");

        if r1 == null goto label2;

        $r7 = interfaceinvoke r1.<android.net.sip.ISipSession: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r7 = null;

     label3:
        virtualinvoke r3.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r7);

        virtualinvoke r3.<android.os.Parcel: void writeInt(int)>(i0);

        virtualinvoke r3.<android.os.Parcel: void writeString(java.lang.String)>(r2);

        $r6 = r0.<android.net.sip.ISipSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r6.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(12, r3, r4, 0);

        virtualinvoke r4.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r8 := @caughtexception;

        r5 = $r8;

     label6:
        virtualinvoke r4.<android.os.Parcel: void recycle()>();

        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        throw r5;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void onRegistrationTimeout(android.net.sip.ISipSession) throws android.os.RemoteException
    {
        android.net.sip.ISipSessionListener$Stub$Proxy r0;
        android.net.sip.ISipSession r1;
        android.os.Parcel r2, r3;
        java.lang.Throwable r4, $r7;
        android.os.IBinder $r5, $r6;

        r0 := @this: android.net.sip.ISipSessionListener$Stub$Proxy;

        r1 := @parameter0: android.net.sip.ISipSession;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r2.<android.os.Parcel: void writeInterfaceToken(java.lang.String)>("android.net.sip.ISipSessionListener");

        if r1 == null goto label2;

        $r6 = interfaceinvoke r1.<android.net.sip.ISipSession: android.os.IBinder asBinder()>();

        goto label3;

     label2:
        $r6 = null;

     label3:
        virtualinvoke r2.<android.os.Parcel: void writeStrongBinder(android.os.IBinder)>($r6);

        $r5 = r0.<android.net.sip.ISipSessionListener$Stub$Proxy: android.os.IBinder mRemote>;

        interfaceinvoke $r5.<android.os.IBinder: boolean transact(int,android.os.Parcel,android.os.Parcel,int)>(13, r2, r3, 0);

        virtualinvoke r3.<android.os.Parcel: void readException()>();

     label4:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r7 := @caughtexception;

        r4 = $r7;

     label6:
        virtualinvoke r3.<android.os.Parcel: void recycle()>();

        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }
}
