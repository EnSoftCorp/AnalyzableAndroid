class com.android.server.sip.SipService$SipAutoReg extends android.net.sip.SipSessionAdapter implements java.lang.Runnable, com.android.server.sip.SipSessionGroup$KeepAliveProcessCallback
{
    private java.lang.String SAR_TAG;
    private static final boolean SAR_DBG;
    private static final int MIN_KEEPALIVE_SUCCESS_COUNT;
    private com.android.server.sip.SipSessionGroup$SipSessionImpl mSession;
    private com.android.server.sip.SipSessionGroup$SipSessionImpl mKeepAliveSession;
    private com.android.server.sip.SipSessionListenerProxy mProxy;
    private int mBackoff;
    private boolean mRegistered;
    private long mExpiryTime;
    private int mErrorCode;
    private java.lang.String mErrorMessage;
    private boolean mRunning;
    private int mKeepAliveSuccessCount;
    final com.android.server.sip.SipService this$0;

    private void <init>(com.android.server.sip.SipService)
    {
        com.android.server.sip.SipService$SipAutoReg r0;
        com.android.server.sip.SipService r1;
        com.android.server.sip.SipSessionListenerProxy $r2;

        r0 := @this: com.android.server.sip.SipService$SipAutoReg;

        r1 := @parameter0: com.android.server.sip.SipService;

        r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipService this$0> = r1;

        specialinvoke r0.<android.net.sip.SipSessionAdapter: void <init>()>();

        $r2 = new com.android.server.sip.SipSessionListenerProxy;

        specialinvoke $r2.<com.android.server.sip.SipSessionListenerProxy: void <init>()>();

        r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionListenerProxy mProxy> = $r2;

        r0.<com.android.server.sip.SipService$SipAutoReg: int mBackoff> = 1;

        r0.<com.android.server.sip.SipService$SipAutoReg: boolean mRunning> = 0;

        r0.<com.android.server.sip.SipService$SipAutoReg: int mKeepAliveSuccessCount> = 0;

        return;
    }

    public void start(com.android.server.sip.SipSessionGroup)
    {
        com.android.server.sip.SipService$SipAutoReg r0;
        com.android.server.sip.SipSessionGroup r1;
        boolean $z0;
        android.net.sip.ISipSession $r2;
        com.android.server.sip.SipSessionGroup$SipSessionImpl $r3, $r4, $r7, $r8, $r11;
        com.android.server.sip.SipService $r5;
        com.android.server.sip.SipWakeLock $r6;
        java.lang.StringBuilder $r9, $r10, $r14, $r15, $r17, $r18;
        android.net.sip.SipProfile $r12;
        java.lang.String $r13, $r16, $r19;

        r0 := @this: com.android.server.sip.SipService$SipAutoReg;

        r1 := @parameter0: com.android.server.sip.SipSessionGroup;

        $z0 = r0.<com.android.server.sip.SipService$SipAutoReg: boolean mRunning>;

        if $z0 != 0 goto label2;

        r0.<com.android.server.sip.SipService$SipAutoReg: boolean mRunning> = 1;

        r0.<com.android.server.sip.SipService$SipAutoReg: int mBackoff> = 1;

        $r2 = virtualinvoke r1.<com.android.server.sip.SipSessionGroup: android.net.sip.ISipSession createSession(android.net.sip.ISipSessionListener)>(r0);

        $r3 = (com.android.server.sip.SipSessionGroup$SipSessionImpl) $r2;

        r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionGroup$SipSessionImpl mSession> = $r3;

        $r4 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionGroup$SipSessionImpl mSession>;

        if $r4 != null goto label1;

        return;

     label1:
        $r5 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipService this$0>;

        $r6 = staticinvoke <com.android.server.sip.SipService: com.android.server.sip.SipWakeLock access$300(com.android.server.sip.SipService)>($r5);

        $r7 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionGroup$SipSessionImpl mSession>;

        virtualinvoke $r6.<com.android.server.sip.SipWakeLock: void acquire(java.lang.Object)>($r7);

        $r8 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionGroup$SipSessionImpl mSession>;

        virtualinvoke $r8.<com.android.server.sip.SipSessionGroup$SipSessionImpl: void unregister()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SipAutoReg:");

        $r11 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionGroup$SipSessionImpl mSession>;

        $r12 = virtualinvoke $r11.<com.android.server.sip.SipSessionGroup$SipSessionImpl: android.net.sip.SipProfile getLocalProfile()>();

        $r13 = virtualinvoke $r12.<android.net.sip.SipProfile: java.lang.String getUriString()>();

        $r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.server.sip.SipService$SipAutoReg: java.lang.String SAR_TAG> = $r16;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("start: group=");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.sip.SipService$SipAutoReg: void log(java.lang.String)>($r19);

     label2:
        return;
    }

    private void startKeepAliveProcess(int)
    {
        com.android.server.sip.SipService$SipAutoReg r0;
        int i0;
        javax.sip.SipException r1, $r11;
        java.lang.StringBuilder $r2, $r3, $r4, $r12, $r13, $r14;
        java.lang.String $r5, $r15;
        com.android.server.sip.SipSessionGroup$SipSessionImpl $r6, $r7, $r8, $r9, $r10;

        r0 := @this: com.android.server.sip.SipService$SipAutoReg;

        i0 := @parameter0: int;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startKeepAliveProcess: interval=");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.sip.SipService$SipAutoReg: void log(java.lang.String)>($r5);

        $r6 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionGroup$SipSessionImpl mKeepAliveSession>;

        if $r6 != null goto label1;

        $r9 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionGroup$SipSessionImpl mSession>;

        $r10 = virtualinvoke $r9.<com.android.server.sip.SipSessionGroup$SipSessionImpl: com.android.server.sip.SipSessionGroup$SipSessionImpl duplicate()>();

        r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionGroup$SipSessionImpl mKeepAliveSession> = $r10;

        goto label2;

     label1:
        $r7 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionGroup$SipSessionImpl mKeepAliveSession>;

        virtualinvoke $r7.<com.android.server.sip.SipSessionGroup$SipSessionImpl: void stopKeepAliveProcess()>();

     label2:
        $r8 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionGroup$SipSessionImpl mKeepAliveSession>;

        virtualinvoke $r8.<com.android.server.sip.SipSessionGroup$SipSessionImpl: void startKeepAliveProcess(int,com.android.server.sip.SipSessionGroup$KeepAliveProcessCallback)>(i0, r0);

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

        r1 = $r11;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("startKeepAliveProcess: interval=");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.sip.SipService$SipAutoReg: void loge(java.lang.String,java.lang.Throwable)>($r15, r1);

     label5:
        return;

        catch javax.sip.SipException from label2 to label3 with label4;
    }

    private void stopKeepAliveProcess()
    {
        com.android.server.sip.SipService$SipAutoReg r0;
        com.android.server.sip.SipSessionGroup$SipSessionImpl $r1, $r2;

        r0 := @this: com.android.server.sip.SipService$SipAutoReg;

        $r1 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionGroup$SipSessionImpl mKeepAliveSession>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionGroup$SipSessionImpl mKeepAliveSession>;

        virtualinvoke $r2.<com.android.server.sip.SipSessionGroup$SipSessionImpl: void stopKeepAliveProcess()>();

        r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionGroup$SipSessionImpl mKeepAliveSession> = null;

     label1:
        r0.<com.android.server.sip.SipService$SipAutoReg: int mKeepAliveSuccessCount> = 0;

        return;
    }

    public void onResponse(boolean)
    {
        com.android.server.sip.SipService$SipAutoReg r0;
        boolean z0, $z1;
        com.android.server.sip.SipService r1, $r3, $r5, $r7, $r11, $r23;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.Throwable r2, $r27;
        com.android.server.sip.SipSessionGroup$SipSessionImpl $r4, $r9, $r10, $r26;
        android.net.sip.SipProfile $r6, $r24;
        com.android.server.sip.SipWakeLock $r8;
        java.lang.StringBuilder $r12, $r13, $r14, $r15, $r17, $r18, $r19, $r20, $r21, $r22;
        java.lang.String $r16, $r25;

        r0 := @this: com.android.server.sip.SipService$SipAutoReg;

        z0 := @parameter0: boolean;

        $r3 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipService this$0>;

        r1 = $r3;

        entermonitor $r3;

     label01:
        if z0 == 0 goto label04;

        $r11 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipService this$0>;

        i0 = staticinvoke <com.android.server.sip.SipService: int access$1200(com.android.server.sip.SipService)>($r11);

        $i3 = r0.<com.android.server.sip.SipService$SipAutoReg: int mKeepAliveSuccessCount>;

        if $i3 >= 10 goto label02;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onResponse: keepalive doesn\'t work with interval ");

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", past success count=");

        $i7 = r0.<com.android.server.sip.SipService$SipAutoReg: int mKeepAliveSuccessCount>;

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r25 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.sip.SipService$SipAutoReg: void log(java.lang.String)>($r25);

        if i0 <= 10 goto label03;

        $r23 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipService this$0>;

        $r26 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionGroup$SipSessionImpl mSession>;

        $r24 = virtualinvoke $r26.<com.android.server.sip.SipSessionGroup$SipSessionImpl: android.net.sip.SipProfile getLocalProfile()>();

        staticinvoke <com.android.server.sip.SipService: void access$1300(com.android.server.sip.SipService,android.net.sip.SipProfile,int)>($r23, $r24, i0);

        r0.<com.android.server.sip.SipService$SipAutoReg: int mKeepAliveSuccessCount> = 0;

        goto label03;

     label02:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("keep keepalive going with interval ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", past success count=");

        $i4 = r0.<com.android.server.sip.SipService$SipAutoReg: int mKeepAliveSuccessCount>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.sip.SipService$SipAutoReg: void log(java.lang.String)>($r16);

        $i6 = r0.<com.android.server.sip.SipService$SipAutoReg: int mKeepAliveSuccessCount>;

        $i5 = $i6 / 2;

        r0.<com.android.server.sip.SipService$SipAutoReg: int mKeepAliveSuccessCount> = $i5;

     label03:
        goto label05;

     label04:
        $r5 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipService this$0>;

        $r4 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionGroup$SipSessionImpl mSession>;

        $r6 = virtualinvoke $r4.<com.android.server.sip.SipSessionGroup$SipSessionImpl: android.net.sip.SipProfile getLocalProfile()>();

        staticinvoke <com.android.server.sip.SipService: void access$1400(com.android.server.sip.SipService,android.net.sip.SipProfile)>($r5, $r6);

        $i1 = r0.<com.android.server.sip.SipService$SipAutoReg: int mKeepAliveSuccessCount>;

        $i2 = $i1 + 1;

        r0.<com.android.server.sip.SipService$SipAutoReg: int mKeepAliveSuccessCount> = $i2;

     label05:
        $z1 = r0.<com.android.server.sip.SipService$SipAutoReg: boolean mRunning>;

        if $z1 == 0 goto label06;

        if z0 != 0 goto label08;

     label06:
        exitmonitor r1;

     label07:
        return;

     label08:
        r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionGroup$SipSessionImpl mKeepAliveSession> = null;

        $r7 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipService this$0>;

        $r8 = staticinvoke <com.android.server.sip.SipService: com.android.server.sip.SipWakeLock access$300(com.android.server.sip.SipService)>($r7);

        $r9 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionGroup$SipSessionImpl mSession>;

        virtualinvoke $r8.<com.android.server.sip.SipWakeLock: void acquire(java.lang.Object)>($r9);

        $r10 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionGroup$SipSessionImpl mSession>;

        virtualinvoke $r10.<com.android.server.sip.SipSessionGroup$SipSessionImpl: void register(int)>(3600);

        exitmonitor r1;

     label09:
        goto label12;

     label10:
        $r27 := @caughtexception;

        r2 = $r27;

        exitmonitor r1;

     label11:
        throw r2;

     label12:
        return;

        catch java.lang.Throwable from label01 to label07 with label10;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void onError(int, java.lang.String)
    {
        com.android.server.sip.SipService$SipAutoReg r0;
        int i0;
        java.lang.String r1, $r7;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6;

        r0 := @this: com.android.server.sip.SipService$SipAutoReg;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onError: errorCode=");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" desc=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.sip.SipService$SipAutoReg: void loge(java.lang.String)>($r7);

        virtualinvoke r0.<com.android.server.sip.SipService$SipAutoReg: void onResponse(boolean)>(1);

        return;
    }

    public void stop()
    {
        com.android.server.sip.SipService$SipAutoReg r0;
        boolean $z0, $z1;
        com.android.server.sip.SipService $r1, $r5, $r10;
        com.android.server.sip.SipWakeLock $r2;
        com.android.server.sip.SipSessionGroup$SipSessionImpl $r3, $r4, $r9, $r11;
        com.android.server.sip.SipWakeupTimer $r6;
        com.android.server.sip.SipSessionListenerProxy $r7;
        android.net.sip.ISipSessionListener $r8;
        int $i0;

        r0 := @this: com.android.server.sip.SipService$SipAutoReg;

        $z0 = r0.<com.android.server.sip.SipService$SipAutoReg: boolean mRunning>;

        if $z0 != 0 goto label1;

        return;

     label1:
        r0.<com.android.server.sip.SipService$SipAutoReg: boolean mRunning> = 0;

        $r1 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipService this$0>;

        $r2 = staticinvoke <com.android.server.sip.SipService: com.android.server.sip.SipWakeLock access$300(com.android.server.sip.SipService)>($r1);

        $r3 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionGroup$SipSessionImpl mSession>;

        virtualinvoke $r2.<com.android.server.sip.SipWakeLock: void release(java.lang.Object)>($r3);

        $r4 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionGroup$SipSessionImpl mSession>;

        if $r4 == null goto label2;

        $r9 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionGroup$SipSessionImpl mSession>;

        virtualinvoke $r9.<com.android.server.sip.SipSessionGroup$SipSessionImpl: void setListener(android.net.sip.ISipSessionListener)>(null);

        $r10 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipService this$0>;

        $i0 = staticinvoke <com.android.server.sip.SipService: int access$400(com.android.server.sip.SipService)>($r10);

        if $i0 == -1 goto label2;

        $z1 = r0.<com.android.server.sip.SipService$SipAutoReg: boolean mRegistered>;

        if $z1 == 0 goto label2;

        $r11 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionGroup$SipSessionImpl mSession>;

        virtualinvoke $r11.<com.android.server.sip.SipSessionGroup$SipSessionImpl: void unregister()>();

     label2:
        $r5 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipService this$0>;

        $r6 = staticinvoke <com.android.server.sip.SipService: com.android.server.sip.SipWakeupTimer access$200(com.android.server.sip.SipService)>($r5);

        virtualinvoke $r6.<com.android.server.sip.SipWakeupTimer: void cancel(java.lang.Runnable)>(r0);

        specialinvoke r0.<com.android.server.sip.SipService$SipAutoReg: void stopKeepAliveProcess()>();

        r0.<com.android.server.sip.SipService$SipAutoReg: boolean mRegistered> = 0;

        $r7 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionListenerProxy mProxy>;

        $r8 = virtualinvoke $r7.<com.android.server.sip.SipSessionListenerProxy: android.net.sip.ISipSessionListener getListener()>();

        virtualinvoke r0.<com.android.server.sip.SipService$SipAutoReg: void setListener(android.net.sip.ISipSessionListener)>($r8);

        return;
    }

    public void onKeepAliveIntervalChanged()
    {
        com.android.server.sip.SipService$SipAutoReg r0;
        int i0;
        com.android.server.sip.SipSessionGroup$SipSessionImpl $r1;
        com.android.server.sip.SipService $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: com.android.server.sip.SipService$SipAutoReg;

        $r1 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionGroup$SipSessionImpl mKeepAliveSession>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipService this$0>;

        i0 = staticinvoke <com.android.server.sip.SipService: int access$1200(com.android.server.sip.SipService)>($r2);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onKeepAliveIntervalChanged: interval=");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.sip.SipService$SipAutoReg: void log(java.lang.String)>($r6);

        r0.<com.android.server.sip.SipService$SipAutoReg: int mKeepAliveSuccessCount> = 0;

        specialinvoke r0.<com.android.server.sip.SipService$SipAutoReg: void startKeepAliveProcess(int)>(i0);

     label1:
        return;
    }

    public void setListener(android.net.sip.ISipSessionListener)
    {
        com.android.server.sip.SipService$SipAutoReg r0;
        android.net.sip.ISipSessionListener r1;
        com.android.server.sip.SipService r2, $r4, $r10;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Throwable r3, $r24, $r26, r27;
        com.android.server.sip.SipSessionListenerProxy $r5, $r9, $r11, $r16, $r17, $r19, $r22, $r23;
        com.android.server.sip.SipSessionGroup$SipSessionImpl $r6, $r7, $r8, $r12, $r13, $r15, $r20, $r21, $r25;
        boolean $z0, $z1;
        java.lang.String $r14, $r18;
        long $l7, $l8, $l9;

        r0 := @this: com.android.server.sip.SipService$SipAutoReg;

        r1 := @parameter0: android.net.sip.ISipSessionListener;

        $r4 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipService this$0>;

        r2 = $r4;

        entermonitor $r4;

     label01:
        $r5 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionListenerProxy mProxy>;

        virtualinvoke $r5.<com.android.server.sip.SipSessionListenerProxy: void setListener(android.net.sip.ISipSessionListener)>(r1);

     label02:
        $r6 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionGroup$SipSessionImpl mSession>;

        if $r6 != null goto label03;

        $i2 = 0;

        goto label04;

     label03:
        $r7 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionGroup$SipSessionImpl mSession>;

        $i2 = virtualinvoke $r7.<com.android.server.sip.SipSessionGroup$SipSessionImpl: int getState()>();

     label04:
        i0 = $i2;

        if i0 == 1 goto label05;

        if i0 != 2 goto label06;

     label05:
        $r9 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionListenerProxy mProxy>;

        $r8 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionGroup$SipSessionImpl mSession>;

        virtualinvoke $r9.<com.android.server.sip.SipSessionListenerProxy: void onRegistering(android.net.sip.ISipSession)>($r8);

        goto label12;

     label06:
        $z0 = r0.<com.android.server.sip.SipService$SipAutoReg: boolean mRegistered>;

        if $z0 == 0 goto label07;

        $l7 = r0.<com.android.server.sip.SipService$SipAutoReg: long mExpiryTime>;

        $l8 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l9 = $l7 - $l8;

        i1 = (int) $l9;

        $r23 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionListenerProxy mProxy>;

        $r25 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionGroup$SipSessionImpl mSession>;

        virtualinvoke $r23.<com.android.server.sip.SipSessionListenerProxy: void onRegistrationDone(android.net.sip.ISipSession,int)>($r25, i1);

        goto label12;

     label07:
        $i3 = r0.<com.android.server.sip.SipService$SipAutoReg: int mErrorCode>;

        if $i3 == 0 goto label09;

        $i5 = r0.<com.android.server.sip.SipService$SipAutoReg: int mErrorCode>;

        if $i5 != -5 goto label08;

        $r22 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionListenerProxy mProxy>;

        $r21 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionGroup$SipSessionImpl mSession>;

        virtualinvoke $r22.<com.android.server.sip.SipSessionListenerProxy: void onRegistrationTimeout(android.net.sip.ISipSession)>($r21);

        goto label12;

     label08:
        $r19 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionListenerProxy mProxy>;

        $r20 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionGroup$SipSessionImpl mSession>;

        $i6 = r0.<com.android.server.sip.SipService$SipAutoReg: int mErrorCode>;

        $r18 = r0.<com.android.server.sip.SipService$SipAutoReg: java.lang.String mErrorMessage>;

        virtualinvoke $r19.<com.android.server.sip.SipSessionListenerProxy: void onRegistrationFailed(android.net.sip.ISipSession,int,java.lang.String)>($r20, $i6, $r18);

        goto label12;

     label09:
        $r10 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipService this$0>;

        $i4 = staticinvoke <com.android.server.sip.SipService: int access$400(com.android.server.sip.SipService)>($r10);

        if $i4 != -1 goto label10;

        $r17 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionListenerProxy mProxy>;

        $r15 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionGroup$SipSessionImpl mSession>;

        virtualinvoke $r17.<com.android.server.sip.SipSessionListenerProxy: void onRegistrationFailed(android.net.sip.ISipSession,int,java.lang.String)>($r15, -10, "no data connection");

        goto label12;

     label10:
        $z1 = r0.<com.android.server.sip.SipService$SipAutoReg: boolean mRunning>;

        if $z1 != 0 goto label11;

        $r16 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionListenerProxy mProxy>;

        $r13 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionGroup$SipSessionImpl mSession>;

        virtualinvoke $r16.<com.android.server.sip.SipSessionListenerProxy: void onRegistrationFailed(android.net.sip.ISipSession,int,java.lang.String)>($r13, -4, "registration not running");

        goto label12;

     label11:
        $r11 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionListenerProxy mProxy>;

        $r12 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionGroup$SipSessionImpl mSession>;

        $r14 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        virtualinvoke $r11.<com.android.server.sip.SipSessionListenerProxy: void onRegistrationFailed(android.net.sip.ISipSession,int,java.lang.String)>($r12, -9, $r14);

     label12:
        goto label14;

     label13:
        $r26 := @caughtexception;

        r27 = $r26;

        specialinvoke r0.<com.android.server.sip.SipService$SipAutoReg: void loge(java.lang.String,java.lang.Throwable)>("setListener: ", r27);

     label14:
        exitmonitor r2;

     label15:
        goto label18;

     label16:
        $r24 := @caughtexception;

        r3 = $r24;

        exitmonitor r2;

     label17:
        throw r3;

     label18:
        return;

        catch java.lang.Throwable from label02 to label12 with label13;
        catch java.lang.Throwable from label01 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    public boolean isRegistered()
    {
        com.android.server.sip.SipService$SipAutoReg r0;
        boolean $z0;

        r0 := @this: com.android.server.sip.SipService$SipAutoReg;

        $z0 = r0.<com.android.server.sip.SipService$SipAutoReg: boolean mRegistered>;

        return $z0;
    }

    public void run()
    {
        com.android.server.sip.SipService$SipAutoReg r0;
        com.android.server.sip.SipService r1, $r3, $r4, $r5;
        java.lang.Throwable r2, $r9;
        boolean $z0;
        int $i0;
        com.android.server.sip.SipWakeLock $r6;
        com.android.server.sip.SipSessionGroup$SipSessionImpl $r7, $r8;

        r0 := @this: com.android.server.sip.SipService$SipAutoReg;

        $r3 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipService this$0>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $z0 = r0.<com.android.server.sip.SipService$SipAutoReg: boolean mRunning>;

        if $z0 != 0 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        r0.<com.android.server.sip.SipService$SipAutoReg: int mErrorCode> = 0;

        r0.<com.android.server.sip.SipService$SipAutoReg: java.lang.String mErrorMessage> = null;

        specialinvoke r0.<com.android.server.sip.SipService$SipAutoReg: void log(java.lang.String)>("run: registering");

        $r4 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipService this$0>;

        $i0 = staticinvoke <com.android.server.sip.SipService: int access$400(com.android.server.sip.SipService)>($r4);

        if $i0 == -1 goto label4;

        $r5 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipService this$0>;

        $r6 = staticinvoke <com.android.server.sip.SipService: com.android.server.sip.SipWakeLock access$300(com.android.server.sip.SipService)>($r5);

        $r7 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionGroup$SipSessionImpl mSession>;

        virtualinvoke $r6.<com.android.server.sip.SipWakeLock: void acquire(java.lang.Object)>($r7);

        $r8 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionGroup$SipSessionImpl mSession>;

        virtualinvoke $r8.<com.android.server.sip.SipSessionGroup$SipSessionImpl: void register(int)>(3600);

     label4:
        exitmonitor r1;

     label5:
        goto label8;

     label6:
        $r9 := @caughtexception;

        r2 = $r9;

        exitmonitor r1;

     label7:
        throw r2;

     label8:
        return;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private void restart(int)
    {
        com.android.server.sip.SipService$SipAutoReg r0;
        int i0, $i1;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;
        java.lang.String $r5;
        com.android.server.sip.SipService $r6, $r8;
        com.android.server.sip.SipWakeupTimer $r7, $r9;

        r0 := @this: com.android.server.sip.SipService$SipAutoReg;

        i0 := @parameter0: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("restart: duration=");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("s later.");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.sip.SipService$SipAutoReg: void log(java.lang.String)>($r5);

        $r6 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipService this$0>;

        $r7 = staticinvoke <com.android.server.sip.SipService: com.android.server.sip.SipWakeupTimer access$200(com.android.server.sip.SipService)>($r6);

        virtualinvoke $r7.<com.android.server.sip.SipWakeupTimer: void cancel(java.lang.Runnable)>(r0);

        $r8 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipService this$0>;

        $r9 = staticinvoke <com.android.server.sip.SipService: com.android.server.sip.SipWakeupTimer access$200(com.android.server.sip.SipService)>($r8);

        $i1 = i0 * 1000;

        virtualinvoke $r9.<com.android.server.sip.SipWakeupTimer: void set(int,java.lang.Runnable)>($i1, r0);

        return;
    }

    private int backoffDuration()
    {
        com.android.server.sip.SipService$SipAutoReg r0;
        int i0, $i1, $i2, $i3;

        r0 := @this: com.android.server.sip.SipService$SipAutoReg;

        $i1 = r0.<com.android.server.sip.SipService$SipAutoReg: int mBackoff>;

        i0 = 10 * $i1;

        if i0 <= 3600 goto label1;

        i0 = 3600;

        goto label2;

     label1:
        $i2 = r0.<com.android.server.sip.SipService$SipAutoReg: int mBackoff>;

        $i3 = $i2 * 2;

        r0.<com.android.server.sip.SipService$SipAutoReg: int mBackoff> = $i3;

     label2:
        return i0;
    }

    public void onRegistering(android.net.sip.ISipSession)
    {
        com.android.server.sip.SipService$SipAutoReg r0;
        android.net.sip.ISipSession r1;
        com.android.server.sip.SipService r2, $r8;
        java.lang.Throwable r3, $r10;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;
        boolean $z0;
        com.android.server.sip.SipSessionListenerProxy $r9;

        r0 := @this: com.android.server.sip.SipService$SipAutoReg;

        r1 := @parameter0: android.net.sip.ISipSession;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onRegistering: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.sip.SipService$SipAutoReg: void log(java.lang.String)>($r7);

        $r8 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipService this$0>;

        r2 = $r8;

        entermonitor $r8;

     label1:
        $z0 = specialinvoke r0.<com.android.server.sip.SipService$SipAutoReg: boolean notCurrentSession(android.net.sip.ISipSession)>(r1);

        if $z0 == 0 goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        r0.<com.android.server.sip.SipService$SipAutoReg: boolean mRegistered> = 0;

        $r9 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionListenerProxy mProxy>;

        virtualinvoke $r9.<com.android.server.sip.SipSessionListenerProxy: void onRegistering(android.net.sip.ISipSession)>(r1);

        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r10 := @caughtexception;

        r3 = $r10;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private boolean notCurrentSession(android.net.sip.ISipSession)
    {
        com.android.server.sip.SipService$SipAutoReg r0;
        android.net.sip.ISipSession r1;
        com.android.server.sip.SipSessionGroup$SipSessionImpl $r2, $r3;
        boolean $z0, $z1;
        com.android.server.sip.SipService $r4;
        com.android.server.sip.SipWakeLock $r5;

        r0 := @this: com.android.server.sip.SipService$SipAutoReg;

        r1 := @parameter0: android.net.sip.ISipSession;

        $r2 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionGroup$SipSessionImpl mSession>;

        if r1 == $r2 goto label1;

        $r3 = (com.android.server.sip.SipSessionGroup$SipSessionImpl) r1;

        virtualinvoke $r3.<com.android.server.sip.SipSessionGroup$SipSessionImpl: void setListener(android.net.sip.ISipSessionListener)>(null);

        $r4 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipService this$0>;

        $r5 = staticinvoke <com.android.server.sip.SipService: com.android.server.sip.SipWakeLock access$300(com.android.server.sip.SipService)>($r4);

        virtualinvoke $r5.<com.android.server.sip.SipWakeLock: void release(java.lang.Object)>(r1);

        return 1;

     label1:
        $z0 = r0.<com.android.server.sip.SipService$SipAutoReg: boolean mRunning>;

        if $z0 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public void onRegistrationDone(android.net.sip.ISipSession, int)
    {
        com.android.server.sip.SipService$SipAutoReg r0;
        android.net.sip.ISipSession r1;
        int i0, $i2, $i5, i6;
        com.android.server.sip.SipService r2, $r9, $r11, $r15, $r16, $r18;
        android.net.sip.SipProfile r3;
        java.lang.Throwable r4, $r19;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8, $r17;
        boolean $z0, $z1, $z2, $z3;
        com.android.server.sip.SipSessionListenerProxy $r10;
        long $l1, $l3, $l4;
        com.android.server.sip.SipSessionGroup$SipSessionImpl $r12, $r14;
        com.android.server.sip.SipWakeLock $r13;

        r0 := @this: com.android.server.sip.SipService$SipAutoReg;

        r1 := @parameter0: android.net.sip.ISipSession;

        i0 := @parameter1: int;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onRegistrationDone: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.sip.SipService$SipAutoReg: void log(java.lang.String)>($r8);

        $r9 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipService this$0>;

        r2 = $r9;

        entermonitor $r9;

     label01:
        $z0 = specialinvoke r0.<com.android.server.sip.SipService$SipAutoReg: boolean notCurrentSession(android.net.sip.ISipSession)>(r1);

        if $z0 == 0 goto label03;

        exitmonitor r2;

     label02:
        return;

     label03:
        $r10 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionListenerProxy mProxy>;

        virtualinvoke $r10.<com.android.server.sip.SipSessionListenerProxy: void onRegistrationDone(android.net.sip.ISipSession,int)>(r1, i0);

        if i0 <= 0 goto label07;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $i2 = i0 * 1000;

        $l4 = (long) $i2;

        $l3 = $l1 + $l4;

        r0.<com.android.server.sip.SipService$SipAutoReg: long mExpiryTime> = $l3;

        $z1 = r0.<com.android.server.sip.SipService$SipAutoReg: boolean mRegistered>;

        if $z1 != 0 goto label06;

        r0.<com.android.server.sip.SipService$SipAutoReg: boolean mRegistered> = 1;

        i6 = i0 + -60;

        if i6 >= 60 goto label04;

        i6 = 60;

     label04:
        specialinvoke r0.<com.android.server.sip.SipService$SipAutoReg: void restart(int)>(i6);

        $r12 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionGroup$SipSessionImpl mSession>;

        r3 = virtualinvoke $r12.<com.android.server.sip.SipSessionGroup$SipSessionImpl: android.net.sip.SipProfile getLocalProfile()>();

        $r14 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionGroup$SipSessionImpl mKeepAliveSession>;

        if $r14 != null goto label06;

        $r15 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipService this$0>;

        $r16 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipService this$0>;

        $r17 = staticinvoke <com.android.server.sip.SipService: java.lang.String access$1500(com.android.server.sip.SipService)>($r16);

        $z2 = staticinvoke <com.android.server.sip.SipService: boolean access$1600(com.android.server.sip.SipService,java.lang.String)>($r15, $r17);

        if $z2 != 0 goto label05;

        $z3 = virtualinvoke r3.<android.net.sip.SipProfile: boolean getSendKeepAlive()>();

        if $z3 == 0 goto label06;

     label05:
        $r18 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipService this$0>;

        $i5 = staticinvoke <com.android.server.sip.SipService: int access$1200(com.android.server.sip.SipService)>($r18);

        specialinvoke r0.<com.android.server.sip.SipService$SipAutoReg: void startKeepAliveProcess(int)>($i5);

     label06:
        $r11 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipService this$0>;

        $r13 = staticinvoke <com.android.server.sip.SipService: com.android.server.sip.SipWakeLock access$300(com.android.server.sip.SipService)>($r11);

        virtualinvoke $r13.<com.android.server.sip.SipWakeLock: void release(java.lang.Object)>(r1);

        goto label08;

     label07:
        r0.<com.android.server.sip.SipService$SipAutoReg: boolean mRegistered> = 0;

        r0.<com.android.server.sip.SipService$SipAutoReg: long mExpiryTime> = -1L;

        specialinvoke r0.<com.android.server.sip.SipService$SipAutoReg: void log(java.lang.String)>("Refresh registration immediately");

        virtualinvoke r0.<com.android.server.sip.SipService$SipAutoReg: void run()>();

     label08:
        exitmonitor r2;

     label09:
        goto label12;

     label10:
        $r19 := @caughtexception;

        r4 = $r19;

        exitmonitor r2;

     label11:
        throw r4;

     label12:
        return;

        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void onRegistrationFailed(android.net.sip.ISipSession, int, java.lang.String)
    {
        com.android.server.sip.SipService$SipAutoReg r0;
        android.net.sip.ISipSession r1;
        int i0;
        java.lang.String r2, $r9, $r13;
        com.android.server.sip.SipService r3, $r14, $r17;
        java.lang.Throwable r4, $r18;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r10, $r11, $r12;
        com.android.server.sip.SipSessionListenerProxy $r15;
        boolean $z0;
        com.android.server.sip.SipWakeLock $r16;

        r0 := @this: com.android.server.sip.SipService$SipAutoReg;

        r1 := @parameter0: android.net.sip.ISipSession;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onRegistrationFailed: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r9 = staticinvoke <android.net.sip.SipErrorCode: java.lang.String toString(int)>(i0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.sip.SipService$SipAutoReg: void log(java.lang.String)>($r13);

        $r14 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipService this$0>;

        r3 = $r14;

        entermonitor $r14;

     label01:
        $z0 = specialinvoke r0.<com.android.server.sip.SipService$SipAutoReg: boolean notCurrentSession(android.net.sip.ISipSession)>(r1);

        if $z0 == 0 goto label03;

        exitmonitor r3;

     label02:
        return;

     label03:
        lookupswitch(i0)
        {
            case -12: goto label04;
            case -8: goto label04;
            default: goto label05;
        };

     label04:
        specialinvoke r0.<com.android.server.sip.SipService$SipAutoReg: void log(java.lang.String)>("   pause auto-registration");

        virtualinvoke r0.<com.android.server.sip.SipService$SipAutoReg: void stop()>();

        goto label06;

     label05:
        specialinvoke r0.<com.android.server.sip.SipService$SipAutoReg: void restartLater()>();

     label06:
        r0.<com.android.server.sip.SipService$SipAutoReg: int mErrorCode> = i0;

        r0.<com.android.server.sip.SipService$SipAutoReg: java.lang.String mErrorMessage> = r2;

        $r15 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionListenerProxy mProxy>;

        virtualinvoke $r15.<com.android.server.sip.SipSessionListenerProxy: void onRegistrationFailed(android.net.sip.ISipSession,int,java.lang.String)>(r1, i0, r2);

        $r17 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipService this$0>;

        $r16 = staticinvoke <com.android.server.sip.SipService: com.android.server.sip.SipWakeLock access$300(com.android.server.sip.SipService)>($r17);

        virtualinvoke $r16.<com.android.server.sip.SipWakeLock: void release(java.lang.Object)>(r1);

        exitmonitor r3;

     label07:
        goto label10;

     label08:
        $r18 := @caughtexception;

        r4 = $r18;

        exitmonitor r3;

     label09:
        throw r4;

     label10:
        return;

        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void onRegistrationTimeout(android.net.sip.ISipSession)
    {
        com.android.server.sip.SipService$SipAutoReg r0;
        android.net.sip.ISipSession r1;
        com.android.server.sip.SipService r2, $r8, $r10;
        java.lang.Throwable r3, $r12;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;
        boolean $z0;
        com.android.server.sip.SipSessionListenerProxy $r9;
        com.android.server.sip.SipWakeLock $r11;

        r0 := @this: com.android.server.sip.SipService$SipAutoReg;

        r1 := @parameter0: android.net.sip.ISipSession;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onRegistrationTimeout: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.server.sip.SipService$SipAutoReg: void log(java.lang.String)>($r7);

        $r8 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipService this$0>;

        r2 = $r8;

        entermonitor $r8;

     label1:
        $z0 = specialinvoke r0.<com.android.server.sip.SipService$SipAutoReg: boolean notCurrentSession(android.net.sip.ISipSession)>(r1);

        if $z0 == 0 goto label3;

        exitmonitor r2;

     label2:
        return;

     label3:
        r0.<com.android.server.sip.SipService$SipAutoReg: int mErrorCode> = -5;

        $r9 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipSessionListenerProxy mProxy>;

        virtualinvoke $r9.<com.android.server.sip.SipSessionListenerProxy: void onRegistrationTimeout(android.net.sip.ISipSession)>(r1);

        specialinvoke r0.<com.android.server.sip.SipService$SipAutoReg: void restartLater()>();

        $r10 = r0.<com.android.server.sip.SipService$SipAutoReg: com.android.server.sip.SipService this$0>;

        $r11 = staticinvoke <com.android.server.sip.SipService: com.android.server.sip.SipWakeLock access$300(com.android.server.sip.SipService)>($r10);

        virtualinvoke $r11.<com.android.server.sip.SipWakeLock: void release(java.lang.Object)>(r1);

        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r12 := @caughtexception;

        r3 = $r12;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private void restartLater()
    {
        com.android.server.sip.SipService$SipAutoReg r0;
        int $i0;

        r0 := @this: com.android.server.sip.SipService$SipAutoReg;

        specialinvoke r0.<com.android.server.sip.SipService$SipAutoReg: void loge(java.lang.String)>("restartLater");

        r0.<com.android.server.sip.SipService$SipAutoReg: boolean mRegistered> = 0;

        $i0 = specialinvoke r0.<com.android.server.sip.SipService$SipAutoReg: int backoffDuration()>();

        specialinvoke r0.<com.android.server.sip.SipService$SipAutoReg: void restart(int)>($i0);

        return;
    }

    private void log(java.lang.String)
    {
        com.android.server.sip.SipService$SipAutoReg r0;
        java.lang.String r1, $r2;

        r0 := @this: com.android.server.sip.SipService$SipAutoReg;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.sip.SipService$SipAutoReg: java.lang.String SAR_TAG>;

        staticinvoke <android.telephony.Rlog: int d(java.lang.String,java.lang.String)>($r2, r1);

        return;
    }

    private void loge(java.lang.String)
    {
        com.android.server.sip.SipService$SipAutoReg r0;
        java.lang.String r1, $r2;

        r0 := @this: com.android.server.sip.SipService$SipAutoReg;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.server.sip.SipService$SipAutoReg: java.lang.String SAR_TAG>;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String)>($r2, r1);

        return;
    }

    private void loge(java.lang.String, java.lang.Throwable)
    {
        com.android.server.sip.SipService$SipAutoReg r0;
        java.lang.String r1, $r3;
        java.lang.Throwable r2;

        r0 := @this: com.android.server.sip.SipService$SipAutoReg;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        $r3 = r0.<com.android.server.sip.SipService$SipAutoReg: java.lang.String SAR_TAG>;

        staticinvoke <android.telephony.Rlog: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r3, r1, r2);

        return;
    }

    void <init>(com.android.server.sip.SipService, com.android.server.sip.SipService$1)
    {
        com.android.server.sip.SipService$SipAutoReg r0;
        com.android.server.sip.SipService r1;
        com.android.server.sip.SipService$1 r2;

        r0 := @this: com.android.server.sip.SipService$SipAutoReg;

        r1 := @parameter0: com.android.server.sip.SipService;

        r2 := @parameter1: com.android.server.sip.SipService$1;

        specialinvoke r0.<com.android.server.sip.SipService$SipAutoReg: void <init>(com.android.server.sip.SipService)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <com.android.server.sip.SipService$SipAutoReg: int MIN_KEEPALIVE_SUCCESS_COUNT> = 10;

        <com.android.server.sip.SipService$SipAutoReg: boolean SAR_DBG> = 1;

        return;
    }
}
