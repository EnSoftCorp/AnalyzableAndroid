public class android.net.rtp.AudioCodec extends java.lang.Object
{
    public final int type;
    public final java.lang.String rtpmap;
    public final java.lang.String fmtp;
    public static final android.net.rtp.AudioCodec PCMU;
    public static final android.net.rtp.AudioCodec PCMA;
    public static final android.net.rtp.AudioCodec GSM;
    public static final android.net.rtp.AudioCodec GSM_EFR;
    public static final android.net.rtp.AudioCodec AMR;
    private static final android.net.rtp.AudioCodec[] sCodecs;

    private void <init>(int, java.lang.String, java.lang.String)
    {
        android.net.rtp.AudioCodec r0;
        int i0;
        java.lang.String r1, r2;

        r0 := @this: android.net.rtp.AudioCodec;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.net.rtp.AudioCodec: int type> = i0;

        r0.<android.net.rtp.AudioCodec: java.lang.String rtpmap> = r1;

        r0.<android.net.rtp.AudioCodec: java.lang.String fmtp> = r2;

        return;
    }

    public static android.net.rtp.AudioCodec[] getCodecs()
    {
        android.net.rtp.AudioCodec[] $r0, $r1, $r3;
        int $i0;
        java.lang.Object[] $r2;

        $r1 = <android.net.rtp.AudioCodec: android.net.rtp.AudioCodec[] sCodecs>;

        $r0 = <android.net.rtp.AudioCodec: android.net.rtp.AudioCodec[] sCodecs>;

        $i0 = lengthof $r0;

        $r2 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r1, $i0);

        $r3 = (android.net.rtp.AudioCodec[]) $r2;

        return $r3;
    }

    public static android.net.rtp.AudioCodec getCodec(int, java.lang.String, java.lang.String)
    {
        int i0, i1, i2, $i3, $i4, $i5, i6, i7;
        java.lang.String r0, r1, r3, r6, $r9, $r10, $r11, r14;
        android.net.rtp.AudioCodec r2, r5, $r7, $r8, r13;
        android.net.rtp.AudioCodec[] r4, r12;
        boolean $z0, $z1, $z2, $z3, $z4;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        if i0 < 0 goto label01;

        if i0 <= 127 goto label02;

     label01:
        return null;

     label02:
        r2 = null;

        if r0 == null goto label07;

        $r9 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        r3 = virtualinvoke $r9.<java.lang.String: java.lang.String toUpperCase()>();

        r4 = <android.net.rtp.AudioCodec: android.net.rtp.AudioCodec[] sCodecs>;

        i1 = lengthof r4;

        i2 = 0;

     label03:
        if i2 >= i1 goto label06;

        r5 = r4[i2];

        $r10 = r5.<android.net.rtp.AudioCodec: java.lang.String rtpmap>;

        $z3 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>($r10);

        if $z3 == 0 goto label05;

        $r11 = r5.<android.net.rtp.AudioCodec: java.lang.String rtpmap>;

        $i4 = virtualinvoke $r11.<java.lang.String: int length()>();

        r6 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>($i4);

        $i5 = virtualinvoke r6.<java.lang.String: int length()>();

        if $i5 == 0 goto label04;

        $z4 = virtualinvoke r6.<java.lang.String: boolean equals(java.lang.Object)>("/1");

        if $z4 == 0 goto label06;

     label04:
        r2 = r5;

        goto label06;

     label05:
        i2 = i2 + 1;

        goto label03;

     label06:
        goto label10;

     label07:
        if i0 >= 96 goto label10;

        r12 = <android.net.rtp.AudioCodec: android.net.rtp.AudioCodec[] sCodecs>;

        i6 = lengthof r12;

        i7 = 0;

     label08:
        if i7 >= i6 goto label10;

        r13 = r12[i7];

        $i3 = r13.<android.net.rtp.AudioCodec: int type>;

        if i0 != $i3 goto label09;

        r2 = r13;

        r0 = r13.<android.net.rtp.AudioCodec: java.lang.String rtpmap>;

        goto label10;

     label09:
        i7 = i7 + 1;

        goto label08;

     label10:
        if r2 != null goto label11;

        return null;

     label11:
        $r7 = <android.net.rtp.AudioCodec: android.net.rtp.AudioCodec AMR>;

        if r2 != $r7 goto label13;

        if r1 == null goto label13;

        r14 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = virtualinvoke r14.<java.lang.String: boolean contains(java.lang.CharSequence)>("crc=1");

        if $z0 != 0 goto label12;

        $z1 = virtualinvoke r14.<java.lang.String: boolean contains(java.lang.CharSequence)>("robust-sorting=1");

        if $z1 != 0 goto label12;

        $z2 = virtualinvoke r14.<java.lang.String: boolean contains(java.lang.CharSequence)>("interleaving=");

        if $z2 == 0 goto label13;

     label12:
        return null;

     label13:
        $r8 = new android.net.rtp.AudioCodec;

        specialinvoke $r8.<android.net.rtp.AudioCodec: void <init>(int,java.lang.String,java.lang.String)>(i0, r0, r1);

        return $r8;
    }

    static void <clinit>()
    {
        android.net.rtp.AudioCodec $r0, $r1, $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10;
        android.net.rtp.AudioCodec[] $r5;

        $r0 = new android.net.rtp.AudioCodec;

        specialinvoke $r0.<android.net.rtp.AudioCodec: void <init>(int,java.lang.String,java.lang.String)>(0, "PCMU/8000", null);

        <android.net.rtp.AudioCodec: android.net.rtp.AudioCodec PCMU> = $r0;

        $r1 = new android.net.rtp.AudioCodec;

        specialinvoke $r1.<android.net.rtp.AudioCodec: void <init>(int,java.lang.String,java.lang.String)>(8, "PCMA/8000", null);

        <android.net.rtp.AudioCodec: android.net.rtp.AudioCodec PCMA> = $r1;

        $r2 = new android.net.rtp.AudioCodec;

        specialinvoke $r2.<android.net.rtp.AudioCodec: void <init>(int,java.lang.String,java.lang.String)>(3, "GSM/8000", null);

        <android.net.rtp.AudioCodec: android.net.rtp.AudioCodec GSM> = $r2;

        $r3 = new android.net.rtp.AudioCodec;

        specialinvoke $r3.<android.net.rtp.AudioCodec: void <init>(int,java.lang.String,java.lang.String)>(96, "GSM-EFR/8000", null);

        <android.net.rtp.AudioCodec: android.net.rtp.AudioCodec GSM_EFR> = $r3;

        $r4 = new android.net.rtp.AudioCodec;

        specialinvoke $r4.<android.net.rtp.AudioCodec: void <init>(int,java.lang.String,java.lang.String)>(97, "AMR/8000", null);

        <android.net.rtp.AudioCodec: android.net.rtp.AudioCodec AMR> = $r4;

        $r5 = newarray (android.net.rtp.AudioCodec)[5];

        $r6 = <android.net.rtp.AudioCodec: android.net.rtp.AudioCodec GSM_EFR>;

        $r5[0] = $r6;

        $r7 = <android.net.rtp.AudioCodec: android.net.rtp.AudioCodec AMR>;

        $r5[1] = $r7;

        $r8 = <android.net.rtp.AudioCodec: android.net.rtp.AudioCodec GSM>;

        $r5[2] = $r8;

        $r9 = <android.net.rtp.AudioCodec: android.net.rtp.AudioCodec PCMU>;

        $r5[3] = $r9;

        $r10 = <android.net.rtp.AudioCodec: android.net.rtp.AudioCodec PCMA>;

        $r5[4] = $r10;

        <android.net.rtp.AudioCodec: android.net.rtp.AudioCodec[] sCodecs> = $r5;

        return;
    }
}
