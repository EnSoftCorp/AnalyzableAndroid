class com.android.server.sip.SipService$MyExecutor extends android.os.Handler implements java.util.concurrent.Executor
{
    final com.android.server.sip.SipService this$0;

    void <init>(com.android.server.sip.SipService)
    {
        com.android.server.sip.SipService$MyExecutor r0;
        com.android.server.sip.SipService r1;
        android.os.Looper $r2;

        r0 := @this: com.android.server.sip.SipService$MyExecutor;

        r1 := @parameter0: com.android.server.sip.SipService;

        r0.<com.android.server.sip.SipService$MyExecutor: com.android.server.sip.SipService this$0> = r1;

        $r2 = staticinvoke <com.android.server.sip.SipService: android.os.Looper access$1800()>();

        specialinvoke r0.<android.os.Handler: void <init>(android.os.Looper)>($r2);

        return;
    }

    public void execute(java.lang.Runnable)
    {
        com.android.server.sip.SipService$MyExecutor r0;
        java.lang.Runnable r1;
        com.android.server.sip.SipService $r2;
        com.android.server.sip.SipWakeLock $r3;
        android.os.Message $r4;

        r0 := @this: com.android.server.sip.SipService$MyExecutor;

        r1 := @parameter0: java.lang.Runnable;

        $r2 = r0.<com.android.server.sip.SipService$MyExecutor: com.android.server.sip.SipService this$0>;

        $r3 = staticinvoke <com.android.server.sip.SipService: com.android.server.sip.SipWakeLock access$300(com.android.server.sip.SipService)>($r2);

        virtualinvoke $r3.<com.android.server.sip.SipWakeLock: void acquire(java.lang.Object)>(r1);

        $r4 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int,java.lang.Object)>(r0, 0, r1);

        virtualinvoke $r4.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.server.sip.SipService$MyExecutor r0;
        android.os.Message r1;
        java.lang.Object $r2, $r8;
        boolean $z0;
        java.lang.StringBuilder $r3, $r5, $r6;
        com.android.server.sip.SipService $r4;
        java.lang.String $r7;
        java.lang.Runnable $r9;

        r0 := @this: com.android.server.sip.SipService$MyExecutor;

        r1 := @parameter0: android.os.Message;

        $r2 = r1.<android.os.Message: java.lang.Object obj>;

        $z0 = $r2 instanceof java.lang.Runnable;

        if $z0 == 0 goto label1;

        $r8 = r1.<android.os.Message: java.lang.Object obj>;

        $r9 = (java.lang.Runnable) $r8;

        specialinvoke r0.<com.android.server.sip.SipService$MyExecutor: void executeInternal(java.lang.Runnable)>($r9);

        goto label2;

     label1:
        $r4 = r0.<com.android.server.sip.SipService$MyExecutor: com.android.server.sip.SipService this$0>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleMessage: not Runnable ignore msg=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.sip.SipService: void access$1900(com.android.server.sip.SipService,java.lang.String)>($r4, $r7);

     label2:
        return;
    }

    private void executeInternal(java.lang.Runnable)
    {
        com.android.server.sip.SipService$MyExecutor r0;
        java.lang.Runnable r1;
        java.lang.Throwable r2, r3, $r6, $r9;
        com.android.server.sip.SipService $r4, $r7, $r11, $r15;
        com.android.server.sip.SipWakeLock $r5, $r8, $r16;
        java.lang.StringBuilder $r10, $r12, $r13;
        java.lang.String $r14;

        r0 := @this: com.android.server.sip.SipService$MyExecutor;

        r1 := @parameter0: java.lang.Runnable;

     label1:
        interfaceinvoke r1.<java.lang.Runnable: void run()>();

     label2:
        $r4 = r0.<com.android.server.sip.SipService$MyExecutor: com.android.server.sip.SipService this$0>;

        $r5 = staticinvoke <com.android.server.sip.SipService: com.android.server.sip.SipWakeLock access$300(com.android.server.sip.SipService)>($r4);

        virtualinvoke $r5.<com.android.server.sip.SipWakeLock: void release(java.lang.Object)>(r1);

        goto label7;

     label3:
        $r9 := @caughtexception;

        r2 = $r9;

        $r11 = r0.<com.android.server.sip.SipService$MyExecutor: com.android.server.sip.SipService this$0>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("run task: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.server.sip.SipService: void access$2000(com.android.server.sip.SipService,java.lang.String,java.lang.Throwable)>($r11, $r14, r2);

     label4:
        $r15 = r0.<com.android.server.sip.SipService$MyExecutor: com.android.server.sip.SipService this$0>;

        $r16 = staticinvoke <com.android.server.sip.SipService: com.android.server.sip.SipWakeLock access$300(com.android.server.sip.SipService)>($r15);

        virtualinvoke $r16.<com.android.server.sip.SipWakeLock: void release(java.lang.Object)>(r1);

        goto label7;

     label5:
        $r6 := @caughtexception;

        r3 = $r6;

     label6:
        $r7 = r0.<com.android.server.sip.SipService$MyExecutor: com.android.server.sip.SipService this$0>;

        $r8 = staticinvoke <com.android.server.sip.SipService: com.android.server.sip.SipWakeLock access$300(com.android.server.sip.SipService)>($r7);

        virtualinvoke $r8.<com.android.server.sip.SipWakeLock: void release(java.lang.Object)>(r1);

        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }
}
