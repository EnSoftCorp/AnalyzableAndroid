public class com.android.camera.app.MemoryManagerImpl extends java.lang.Object implements com.android.camera.app.MemoryManager, com.android.camera.app.MediaSaver$QueueListener, android.content.ComponentCallbacks2
{
    private static final com.android.camera.debug.Log$Tag TAG;
    private static final float MAX_MEM_ALLOWED;
    private static final int[] sCriticalStates;
    private final java.util.LinkedList mListeners;
    private final int mMaxAllowedNativeMemory;
    private final com.android.camera.app.MemoryQuery mMemoryQuery;

    public static com.android.camera.app.MemoryManagerImpl create(android.content.Context, com.android.camera.app.MediaSaver)
    {
        android.content.Context r0;
        com.android.camera.app.MediaSaver r1;
        android.app.ActivityManager r2;
        int i0;
        com.android.camera.app.MemoryQuery r3, $r6;
        com.android.camera.app.MemoryManagerImpl r4, $r7;
        java.lang.Object $r5;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.camera.app.MediaSaver;

        $r5 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("activity");

        r2 = (android.app.ActivityManager) $r5;

        i0 = staticinvoke <com.android.camera.app.MemoryManagerImpl: int getMaxAllowedNativeMemory(android.content.Context)>(r0);

        $r6 = new com.android.camera.app.MemoryQuery;

        specialinvoke $r6.<com.android.camera.app.MemoryQuery: void <init>(android.app.ActivityManager)>(r2);

        r3 = $r6;

        $r7 = new com.android.camera.app.MemoryManagerImpl;

        specialinvoke $r7.<com.android.camera.app.MemoryManagerImpl: void <init>(int,com.android.camera.app.MemoryQuery)>(i0, r3);

        r4 = $r7;

        virtualinvoke r0.<android.content.Context: void registerComponentCallbacks(android.content.ComponentCallbacks)>(r4);

        interfaceinvoke r1.<com.android.camera.app.MediaSaver: void setQueueListener(com.android.camera.app.MediaSaver$QueueListener)>(r4);

        return r4;
    }

    private void <init>(int, com.android.camera.app.MemoryQuery)
    {
        com.android.camera.app.MemoryManagerImpl r0;
        int i0, $i1;
        com.android.camera.app.MemoryQuery r1;
        java.util.LinkedList $r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r7;
        com.android.camera.debug.Log$Tag $r4;
        java.lang.String $r8;

        r0 := @this: com.android.camera.app.MemoryManagerImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.camera.app.MemoryQuery;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        r0.<com.android.camera.app.MemoryManagerImpl: java.util.LinkedList mListeners> = $r2;

        r0.<com.android.camera.app.MemoryManagerImpl: int mMaxAllowedNativeMemory> = i0;

        r0.<com.android.camera.app.MemoryManagerImpl: com.android.camera.app.MemoryQuery mMemoryQuery> = r1;

        $r4 = <com.android.camera.app.MemoryManagerImpl: com.android.camera.debug.Log$Tag TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Max native memory: ");

        $i1 = r0.<com.android.camera.app.MemoryManagerImpl: int mMaxAllowedNativeMemory>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" MB");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void d(com.android.camera.debug.Log$Tag,java.lang.String)>($r4, $r8);

        return;
    }

    public void addListener(com.android.camera.app.MemoryManager$MemoryListener)
    {
        com.android.camera.app.MemoryManagerImpl r0;
        com.android.camera.app.MemoryManager$MemoryListener r1;
        java.util.LinkedList r2, $r4, $r5, $r7;
        java.lang.Throwable r3, $r8;
        boolean $z0;
        com.android.camera.debug.Log$Tag $r6;

        r0 := @this: com.android.camera.app.MemoryManagerImpl;

        r1 := @parameter0: com.android.camera.app.MemoryManager$MemoryListener;

        $r4 = r0.<com.android.camera.app.MemoryManagerImpl: java.util.LinkedList mListeners>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.camera.app.MemoryManagerImpl: java.util.LinkedList mListeners>;

        $z0 = virtualinvoke $r5.<java.util.LinkedList: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label2;

        $r7 = r0.<com.android.camera.app.MemoryManagerImpl: java.util.LinkedList mListeners>;

        virtualinvoke $r7.<java.util.LinkedList: boolean add(java.lang.Object)>(r1);

        goto label3;

     label2:
        $r6 = <com.android.camera.app.MemoryManagerImpl: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void w(com.android.camera.debug.Log$Tag,java.lang.String)>($r6, "Listener already added.");

     label3:
        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void removeListener(com.android.camera.app.MemoryManager$MemoryListener)
    {
        com.android.camera.app.MemoryManagerImpl r0;
        com.android.camera.app.MemoryManager$MemoryListener r1;
        java.util.LinkedList r2, $r4, $r5, $r7;
        java.lang.Throwable r3, $r8;
        boolean $z0;
        com.android.camera.debug.Log$Tag $r6;

        r0 := @this: com.android.camera.app.MemoryManagerImpl;

        r1 := @parameter0: com.android.camera.app.MemoryManager$MemoryListener;

        $r4 = r0.<com.android.camera.app.MemoryManagerImpl: java.util.LinkedList mListeners>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.camera.app.MemoryManagerImpl: java.util.LinkedList mListeners>;

        $z0 = virtualinvoke $r5.<java.util.LinkedList: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r7 = r0.<com.android.camera.app.MemoryManagerImpl: java.util.LinkedList mListeners>;

        virtualinvoke $r7.<java.util.LinkedList: boolean remove(java.lang.Object)>(r1);

        goto label3;

     label2:
        $r6 = <com.android.camera.app.MemoryManagerImpl: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void w(com.android.camera.debug.Log$Tag,java.lang.String)>($r6, "Cannot remove listener that was never added.");

     label3:
        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        com.android.camera.app.MemoryManagerImpl r0;
        android.content.res.Configuration r1;

        r0 := @this: com.android.camera.app.MemoryManagerImpl;

        r1 := @parameter0: android.content.res.Configuration;

        return;
    }

    public void onLowMemory()
    {
        com.android.camera.app.MemoryManagerImpl r0;

        r0 := @this: com.android.camera.app.MemoryManagerImpl;

        specialinvoke r0.<com.android.camera.app.MemoryManagerImpl: void notifyLowMemory()>();

        return;
    }

    public void onTrimMemory(int)
    {
        com.android.camera.app.MemoryManagerImpl r0;
        int i0, i1, $i2, $i3;
        int[] $r1, $r2;

        r0 := @this: com.android.camera.app.MemoryManagerImpl;

        i0 := @parameter0: int;

        i1 = 0;

     label1:
        $r1 = <com.android.camera.app.MemoryManagerImpl: int[] sCriticalStates>;

        $i2 = lengthof $r1;

        if i1 >= $i2 goto label3;

        $r2 = <com.android.camera.app.MemoryManagerImpl: int[] sCriticalStates>;

        $i3 = $r2[i1];

        if i0 != $i3 goto label2;

        specialinvoke r0.<com.android.camera.app.MemoryManagerImpl: void notifyLowMemory()>();

        return;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public void onQueueStatus(boolean)
    {
        com.android.camera.app.MemoryManagerImpl r0;
        boolean z0;
        byte $b0;

        r0 := @this: com.android.camera.app.MemoryManagerImpl;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $b0 = 1;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        specialinvoke r0.<com.android.camera.app.MemoryManagerImpl: void notifyCaptureStateUpdate(int)>($b0);

        return;
    }

    public int getMaxAllowedNativeMemoryAllocation()
    {
        com.android.camera.app.MemoryManagerImpl r0;
        int $i0;

        r0 := @this: com.android.camera.app.MemoryManagerImpl;

        $i0 = r0.<com.android.camera.app.MemoryManagerImpl: int mMaxAllowedNativeMemory>;

        return $i0;
    }

    public java.util.HashMap queryMemory()
    {
        com.android.camera.app.MemoryManagerImpl r0;
        com.android.camera.app.MemoryQuery $r1;
        java.util.HashMap $r2;

        r0 := @this: com.android.camera.app.MemoryManagerImpl;

        $r1 = r0.<com.android.camera.app.MemoryManagerImpl: com.android.camera.app.MemoryQuery mMemoryQuery>;

        $r2 = virtualinvoke $r1.<com.android.camera.app.MemoryQuery: java.util.HashMap queryMemory()>();

        return $r2;
    }

    private static int getMaxAllowedNativeMemory(android.content.Context)
    {
        android.content.Context r0;
        int i0, $i1, $i2, $i3, $i4;
        android.app.ActivityManager r1;
        java.lang.Object $r2;
        float $f0, $f1;
        java.lang.StringBuilder $r3, $r5, $r6;
        com.android.camera.debug.Log$Tag $r4;
        java.lang.String $r7;

        r0 := @parameter0: android.content.Context;

        i0 = staticinvoke <com.android.camera.util.GservicesHelper: int getMaxAllowedNativeMemoryMb(android.content.Context)>(r0);

        if i0 <= 0 goto label1;

        $r4 = <com.android.camera.app.MemoryManagerImpl: com.android.camera.debug.Log$Tag TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Max native memory overridden: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void d(com.android.camera.debug.Log$Tag,java.lang.String)>($r4, $r7);

        return i0;

     label1:
        $r2 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("activity");

        r1 = (android.app.ActivityManager) $r2;

        $i1 = virtualinvoke r1.<android.app.ActivityManager: int getMemoryClass()>();

        $i2 = virtualinvoke r1.<android.app.ActivityManager: int getLargeMemoryClass()>();

        $i3 = staticinvoke <java.lang.Math: int max(int,int)>($i1, $i2);

        $f0 = (float) $i3;

        $f1 = $f0 * 0.7F;

        $i4 = (int) $f1;

        return $i4;
    }

    private void notifyLowMemory()
    {
        com.android.camera.app.MemoryManagerImpl r0;
        java.util.LinkedList r1, $r5, $r6;
        java.util.Iterator r2;
        com.android.camera.app.MemoryManager$MemoryListener r3;
        java.lang.Throwable r4, $r8;
        boolean $z0;
        java.lang.Object $r7;

        r0 := @this: com.android.camera.app.MemoryManagerImpl;

        $r5 = r0.<com.android.camera.app.MemoryManagerImpl: java.util.LinkedList mListeners>;

        r1 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<com.android.camera.app.MemoryManagerImpl: java.util.LinkedList mListeners>;

        r2 = virtualinvoke $r6.<java.util.LinkedList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.camera.app.MemoryManager$MemoryListener) $r7;

        interfaceinvoke r3.<com.android.camera.app.MemoryManager$MemoryListener: void onLowMemory()>();

        goto label2;

     label3:
        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r8 := @caughtexception;

        r4 = $r8;

        exitmonitor r1;

     label6:
        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private void notifyCaptureStateUpdate(int)
    {
        com.android.camera.app.MemoryManagerImpl r0;
        int i0;
        java.util.LinkedList r1, $r5, $r6;
        java.util.Iterator r2;
        com.android.camera.app.MemoryManager$MemoryListener r3;
        java.lang.Throwable r4, $r8;
        boolean $z0;
        java.lang.Object $r7;

        r0 := @this: com.android.camera.app.MemoryManagerImpl;

        i0 := @parameter0: int;

        $r5 = r0.<com.android.camera.app.MemoryManagerImpl: java.util.LinkedList mListeners>;

        r1 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<com.android.camera.app.MemoryManagerImpl: java.util.LinkedList mListeners>;

        r2 = virtualinvoke $r6.<java.util.LinkedList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.camera.app.MemoryManager$MemoryListener) $r7;

        interfaceinvoke r3.<com.android.camera.app.MemoryManager$MemoryListener: void onMemoryStateChanged(int)>(i0);

        goto label2;

     label3:
        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r8 := @caughtexception;

        r4 = $r8;

        exitmonitor r1;

     label6:
        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    static void <clinit>()
    {
        com.android.camera.debug.Log$Tag $r0;
        int[] $r1;

        <com.android.camera.app.MemoryManagerImpl: float MAX_MEM_ALLOWED> = 0.7F;

        $r0 = new com.android.camera.debug.Log$Tag;

        specialinvoke $r0.<com.android.camera.debug.Log$Tag: void <init>(java.lang.String)>("MemoryManagerImpl");

        <com.android.camera.app.MemoryManagerImpl: com.android.camera.debug.Log$Tag TAG> = $r0;

        $r1 = newarray (int)[2];

        $r1[0] = 80;

        $r1[1] = 15;

        <com.android.camera.app.MemoryManagerImpl: int[] sCriticalStates> = $r1;

        return;
    }
}
