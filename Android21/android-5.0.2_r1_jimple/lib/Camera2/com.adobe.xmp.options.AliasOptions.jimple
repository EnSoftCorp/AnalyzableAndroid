public final class com.adobe.xmp.options.AliasOptions extends com.adobe.xmp.options.Options
{
    public static final int PROP_DIRECT;
    public static final int PROP_ARRAY;
    public static final int PROP_ARRAY_ORDERED;
    public static final int PROP_ARRAY_ALTERNATE;
    public static final int PROP_ARRAY_ALT_TEXT;

    public void <init>()
    {
        com.adobe.xmp.options.AliasOptions r0;

        r0 := @this: com.adobe.xmp.options.AliasOptions;

        specialinvoke r0.<com.adobe.xmp.options.Options: void <init>()>();

        return;
    }

    public void <init>(int) throws com.adobe.xmp.XMPException
    {
        com.adobe.xmp.options.AliasOptions r0;
        int i0;

        r0 := @this: com.adobe.xmp.options.AliasOptions;

        i0 := @parameter0: int;

        specialinvoke r0.<com.adobe.xmp.options.Options: void <init>(int)>(i0);

        return;
    }

    public boolean isSimple()
    {
        com.adobe.xmp.options.AliasOptions r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.adobe.xmp.options.AliasOptions;

        $i0 = virtualinvoke r0.<com.adobe.xmp.options.AliasOptions: int getOptions()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isArray()
    {
        com.adobe.xmp.options.AliasOptions r0;
        boolean $z0;

        r0 := @this: com.adobe.xmp.options.AliasOptions;

        $z0 = virtualinvoke r0.<com.adobe.xmp.options.AliasOptions: boolean getOption(int)>(512);

        return $z0;
    }

    public com.adobe.xmp.options.AliasOptions setArray(boolean)
    {
        com.adobe.xmp.options.AliasOptions r0;
        boolean z0;

        r0 := @this: com.adobe.xmp.options.AliasOptions;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.adobe.xmp.options.AliasOptions: void setOption(int,boolean)>(512, z0);

        return r0;
    }

    public boolean isArrayOrdered()
    {
        com.adobe.xmp.options.AliasOptions r0;
        boolean $z0;

        r0 := @this: com.adobe.xmp.options.AliasOptions;

        $z0 = virtualinvoke r0.<com.adobe.xmp.options.AliasOptions: boolean getOption(int)>(1024);

        return $z0;
    }

    public com.adobe.xmp.options.AliasOptions setArrayOrdered(boolean)
    {
        com.adobe.xmp.options.AliasOptions r0;
        boolean z0;

        r0 := @this: com.adobe.xmp.options.AliasOptions;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.adobe.xmp.options.AliasOptions: void setOption(int,boolean)>(1536, z0);

        return r0;
    }

    public boolean isArrayAlternate()
    {
        com.adobe.xmp.options.AliasOptions r0;
        boolean $z0;

        r0 := @this: com.adobe.xmp.options.AliasOptions;

        $z0 = virtualinvoke r0.<com.adobe.xmp.options.AliasOptions: boolean getOption(int)>(2048);

        return $z0;
    }

    public com.adobe.xmp.options.AliasOptions setArrayAlternate(boolean)
    {
        com.adobe.xmp.options.AliasOptions r0;
        boolean z0;

        r0 := @this: com.adobe.xmp.options.AliasOptions;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.adobe.xmp.options.AliasOptions: void setOption(int,boolean)>(3584, z0);

        return r0;
    }

    public boolean isArrayAltText()
    {
        com.adobe.xmp.options.AliasOptions r0;
        boolean $z0;

        r0 := @this: com.adobe.xmp.options.AliasOptions;

        $z0 = virtualinvoke r0.<com.adobe.xmp.options.AliasOptions: boolean getOption(int)>(4096);

        return $z0;
    }

    public com.adobe.xmp.options.AliasOptions setArrayAltText(boolean)
    {
        com.adobe.xmp.options.AliasOptions r0;
        boolean z0;

        r0 := @this: com.adobe.xmp.options.AliasOptions;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.adobe.xmp.options.AliasOptions: void setOption(int,boolean)>(7680, z0);

        return r0;
    }

    public com.adobe.xmp.options.PropertyOptions toPropertyOptions() throws com.adobe.xmp.XMPException
    {
        com.adobe.xmp.options.AliasOptions r0;
        com.adobe.xmp.options.PropertyOptions $r1;
        int $i0;

        r0 := @this: com.adobe.xmp.options.AliasOptions;

        $r1 = new com.adobe.xmp.options.PropertyOptions;

        $i0 = virtualinvoke r0.<com.adobe.xmp.options.AliasOptions: int getOptions()>();

        specialinvoke $r1.<com.adobe.xmp.options.PropertyOptions: void <init>(int)>($i0);

        return $r1;
    }

    protected java.lang.String defineOptionName(int)
    {
        com.adobe.xmp.options.AliasOptions r0;
        int i0;

        r0 := @this: com.adobe.xmp.options.AliasOptions;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 0: goto label1;
            case 512: goto label2;
            case 1024: goto label3;
            case 2048: goto label4;
            case 4096: goto label5;
            default: goto label6;
        };

     label1:
        return "PROP_DIRECT";

     label2:
        return "ARRAY";

     label3:
        return "ARRAY_ORDERED";

     label4:
        return "ARRAY_ALTERNATE";

     label5:
        return "ARRAY_ALT_TEXT";

     label6:
        return null;
    }

    protected int getValidOptions()
    {
        com.adobe.xmp.options.AliasOptions r0;

        r0 := @this: com.adobe.xmp.options.AliasOptions;

        return 7680;
    }

    public static void <clinit>()
    {
        <com.adobe.xmp.options.AliasOptions: int PROP_ARRAY_ALT_TEXT> = 4096;

        <com.adobe.xmp.options.AliasOptions: int PROP_ARRAY_ALTERNATE> = 2048;

        <com.adobe.xmp.options.AliasOptions: int PROP_ARRAY_ORDERED> = 1024;

        <com.adobe.xmp.options.AliasOptions: int PROP_ARRAY> = 512;

        <com.adobe.xmp.options.AliasOptions: int PROP_DIRECT> = 0;

        return;
    }
}
