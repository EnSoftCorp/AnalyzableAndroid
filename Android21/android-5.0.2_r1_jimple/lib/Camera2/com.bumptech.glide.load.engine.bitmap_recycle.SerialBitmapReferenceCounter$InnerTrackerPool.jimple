class com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTrackerPool extends java.lang.Object
{
    private java.util.LinkedList pool;

    private void <init>()
    {
        com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTrackerPool r0;
        java.util.LinkedList $r1;

        r0 := @this: com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTrackerPool;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTrackerPool: java.util.LinkedList pool> = $r1;

        return;
    }

    public com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTracker get()
    {
        com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTrackerPool r0;
        com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTracker r1, $r4;
        java.util.LinkedList $r2;
        java.lang.Object $r3;

        r0 := @this: com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTrackerPool;

        $r2 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTrackerPool: java.util.LinkedList pool>;

        $r3 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object poll()>();

        r1 = (com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTracker) $r3;

        if r1 != null goto label1;

        $r4 = new com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTracker;

        specialinvoke $r4.<com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTracker: void <init>(com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$1)>(null);

        r1 = $r4;

     label1:
        return r1;
    }

    public void release(com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTracker)
    {
        com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTrackerPool r0;
        com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTracker r1;
        java.util.LinkedList $r2;

        r0 := @this: com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTrackerPool;

        r1 := @parameter0: com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTracker;

        $r2 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTrackerPool: java.util.LinkedList pool>;

        virtualinvoke $r2.<java.util.LinkedList: boolean offer(java.lang.Object)>(r1);

        return;
    }

    void <init>(com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$1)
    {
        com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTrackerPool r0;
        com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$1 r1;

        r0 := @this: com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTrackerPool;

        r1 := @parameter0: com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$1;

        specialinvoke r0.<com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTrackerPool: void <init>()>();

        return;
    }
}
