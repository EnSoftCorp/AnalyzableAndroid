public class com.android.camera.app.CameraAppUI extends java.lang.Object implements com.android.camera.ui.ModeListView$ModeSwitchListener, android.view.TextureView$SurfaceTextureListener, com.android.camera.ui.ModeListView$ModeListOpenListener, com.android.camera.settings.SettingsManager$OnSettingChangedListener, com.android.camera.ShutterButton$OnShutterButtonListener
{
    private static final com.android.camera.debug.Log$Tag TAG;
    private final com.android.camera.app.AppController mController;
    private final boolean mIsCaptureIntent;
    private final com.android.camera.AnimationManager mAnimationManager;
    private static final int IDLE;
    private static final int SWIPE_UP;
    private static final int SWIPE_DOWN;
    private static final int SWIPE_LEFT;
    private static final int SWIPE_RIGHT;
    private boolean mSwipeEnabled;
    private android.graphics.SurfaceTexture mSurface;
    private int mSurfaceWidth;
    private int mSurfaceHeight;
    private final int mSlop;
    private static final int SWIPE_TIME_OUT_MS;
    private static final int COVER_HIDDEN;
    private static final int COVER_SHOWN;
    private static final int COVER_WILL_HIDE_AT_NEXT_FRAME;
    private static final int COVER_WILL_HIDE_AT_NEXT_TEXTURE_UPDATE;
    private static final int DOWN_SAMPLE_RATE_FOR_SCREENSHOT;
    private final android.widget.FrameLayout mCameraRootView;
    private final com.android.camera.ui.ModeTransitionView mModeTransitionView;
    private final com.android.camera.ui.MainActivityLayout mAppRootView;
    private final com.android.camera.ui.ModeListView mModeListView;
    private final com.android.camera.widget.FilmstripLayout mFilmstripLayout;
    private android.view.TextureView mTextureView;
    private android.widget.FrameLayout mModuleUI;
    private com.android.camera.ShutterButton mShutterButton;
    private android.view.View mLetterBoxer1;
    private android.view.View mLetterBoxer2;
    private com.android.camera.ui.BottomBar mBottomBar;
    private com.android.camera.widget.ModeOptionsOverlay mModeOptionsOverlay;
    private com.android.camera.widget.IndicatorIconController mIndicatorIconController;
    private android.view.View mFocusOverlay;
    private android.widget.FrameLayout mTutorialsPlaceHolderWrapper;
    private com.android.camera.ui.BottomBarModeOptionsWrapper mIndicatorBottomBarWrapper;
    private com.android.camera.TextureViewHelper mTextureViewHelper;
    private final android.view.GestureDetector mGestureDetector;
    private android.hardware.display.DisplayManager$DisplayListener mDisplayListener;
    private int mLastRotation;
    private int mSwipeState;
    private com.android.camera.ui.PreviewOverlay mPreviewOverlay;
    private com.android.camera.ui.GridLines mGridLines;
    private com.android.camera.ui.CaptureAnimationOverlay mCaptureOverlay;
    private com.android.camera.ui.PreviewStatusListener mPreviewStatusListener;
    private int mModeCoverState;
    private final com.android.camera.app.FilmstripBottomPanel mFilmstripBottomControls;
    private final com.android.camera.filmstrip.FilmstripContentPanel mFilmstripPanel;
    private java.lang.Runnable mHideCoverRunnable;
    private final android.view.View$OnLayoutChangeListener mPreviewLayoutChangeListener;
    private android.view.View mModeOptionsToggle;
    private final com.android.camera.widget.PeekView mPeekView;
    private final com.android.camera.CaptureLayoutHelper mCaptureLayoutHelper;
    private boolean mAccessibilityEnabled;
    private final android.view.View mAccessibilityAffordances;
    private final com.android.camera.app.CameraAppUI$CameraModuleScreenShotProvider mCameraModuleScreenShotProvider;
    private long mCoverHiddenTime;

    public long getCoverHiddenTime()
    {
        com.android.camera.app.CameraAppUI r0;
        long $l0;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $l0 = r0.<com.android.camera.app.CameraAppUI: long mCoverHiddenTime>;

        return $l0;
    }

    public void clearPreviewTransform()
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.TextureViewHelper $r1;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.TextureViewHelper mTextureViewHelper>;

        virtualinvoke $r1.<com.android.camera.TextureViewHelper: void clearTransform()>();

        return;
    }

    public void updatePreviewAspectRatio(float)
    {
        com.android.camera.app.CameraAppUI r0;
        float f0;
        com.android.camera.TextureViewHelper $r1;

        r0 := @this: com.android.camera.app.CameraAppUI;

        f0 := @parameter0: float;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.TextureViewHelper mTextureViewHelper>;

        virtualinvoke $r1.<com.android.camera.TextureViewHelper: void updateAspectRatio(float)>(f0);

        return;
    }

    public void setDefaultBufferSizeToViewDimens()
    {
        com.android.camera.app.CameraAppUI r0;
        android.graphics.SurfaceTexture $r1, $r5;
        com.android.camera.debug.Log$Tag $r2;
        android.view.TextureView $r3, $r4, $r6;
        int $i0, $i1;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: android.graphics.SurfaceTexture mSurface>;

        if $r1 == null goto label1;

        $r3 = r0.<com.android.camera.app.CameraAppUI: android.view.TextureView mTextureView>;

        if $r3 != null goto label2;

     label1:
        $r2 = <com.android.camera.app.CameraAppUI: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void w(com.android.camera.debug.Log$Tag,java.lang.String)>($r2, "Could not set SurfaceTexture default buffer dimensions, not yet setup");

        return;

     label2:
        $r5 = r0.<com.android.camera.app.CameraAppUI: android.graphics.SurfaceTexture mSurface>;

        $r4 = r0.<com.android.camera.app.CameraAppUI: android.view.TextureView mTextureView>;

        $i0 = virtualinvoke $r4.<android.view.TextureView: int getWidth()>();

        $r6 = r0.<com.android.camera.app.CameraAppUI: android.view.TextureView mTextureView>;

        $i1 = virtualinvoke $r6.<android.view.TextureView: int getHeight()>();

        virtualinvoke $r5.<android.graphics.SurfaceTexture: void setDefaultBufferSize(int,int)>($i0, $i1);

        return;
    }

    public void updatePreviewTransformFullscreen(android.graphics.Matrix, float)
    {
        com.android.camera.app.CameraAppUI r0;
        android.graphics.Matrix r1;
        float f0;
        com.android.camera.TextureViewHelper $r2;

        r0 := @this: com.android.camera.app.CameraAppUI;

        r1 := @parameter0: android.graphics.Matrix;

        f0 := @parameter1: float;

        $r2 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.TextureViewHelper mTextureViewHelper>;

        virtualinvoke $r2.<com.android.camera.TextureViewHelper: void updateTransformFullScreen(android.graphics.Matrix,float)>(r1, f0);

        return;
    }

    public android.graphics.RectF getFullscreenRect()
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.TextureViewHelper $r1;
        android.graphics.RectF $r2;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.TextureViewHelper mTextureViewHelper>;

        $r2 = virtualinvoke $r1.<com.android.camera.TextureViewHelper: android.graphics.RectF getFullscreenRect()>();

        return $r2;
    }

    public void updatePreviewTransform(android.graphics.Matrix)
    {
        com.android.camera.app.CameraAppUI r0;
        android.graphics.Matrix r1;
        com.android.camera.TextureViewHelper $r2;

        r0 := @this: com.android.camera.app.CameraAppUI;

        r1 := @parameter0: android.graphics.Matrix;

        $r2 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.TextureViewHelper mTextureViewHelper>;

        virtualinvoke $r2.<com.android.camera.TextureViewHelper: void updateTransform(android.graphics.Matrix)>(r1);

        return;
    }

    public void <init>(com.android.camera.app.AppController, com.android.camera.ui.MainActivityLayout, boolean)
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.app.AppController r1, $r48;
        com.android.camera.ui.MainActivityLayout r2, $r14, $r18, $r19, $r34, $r37, $r38, $r41;
        boolean z0, z1;
        android.content.res.Resources r3;
        android.view.View r4, $r9, $r11, $r13, $r17, $r22, $r28, $r35, $r39, r52;
        com.android.camera.app.CameraAppUI$1 $r5;
        com.android.camera.app.CameraAppUI$2 $r6;
        android.content.Context $r7, $r23, $r25;
        android.view.ViewConfiguration $r8;
        int $i0, $i1, $i2, $i3;
        com.android.camera.widget.FilmstripLayout $r10;
        android.widget.FrameLayout $r12;
        com.android.camera.app.FilmstripBottomPanel $r15;
        com.android.camera.ui.ModeTransitionView $r16;
        android.view.ViewGroup $r20;
        com.android.camera.filmstrip.FilmstripContentPanel $r21;
        android.view.GestureDetector $r24;
        com.android.camera.app.CameraAppUI$MyGestureListener $r26;
        com.android.camera.CaptureLayoutHelper $r27, $r33, $r50;
        com.android.camera.debug.Log$Tag $r29;
        com.android.camera.AnimationManager $r30;
        com.android.camera.ui.ModeListView $r31, $r32, $r43, $r45, $r46, $r49, $r51;
        com.android.camera.widget.PeekView $r36;
        com.android.camera.app.CameraAppUI$4 $r40;
        com.android.camera.app.CameraAppUI$3 $r42;
        com.android.camera.app.CameraAppUI$CameraModuleScreenShotProvider $r44;
        com.android.camera.settings.SettingsManager $r47;

        r0 := @this: com.android.camera.app.CameraAppUI;

        r1 := @parameter0: com.android.camera.app.AppController;

        r2 := @parameter1: com.android.camera.ui.MainActivityLayout;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.camera.app.CameraAppUI: boolean mSwipeEnabled> = 1;

        r0.<com.android.camera.app.CameraAppUI: int mSwipeState> = 0;

        r0.<com.android.camera.app.CameraAppUI: int mModeCoverState> = 0;

        $r5 = new com.android.camera.app.CameraAppUI$1;

        specialinvoke $r5.<com.android.camera.app.CameraAppUI$1: void <init>(com.android.camera.app.CameraAppUI)>(r0);

        r0.<com.android.camera.app.CameraAppUI: android.view.View$OnLayoutChangeListener mPreviewLayoutChangeListener> = $r5;

        $r6 = new com.android.camera.app.CameraAppUI$2;

        specialinvoke $r6.<com.android.camera.app.CameraAppUI$2: void <init>(com.android.camera.app.CameraAppUI)>(r0);

        r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.CameraAppUI$CameraModuleScreenShotProvider mCameraModuleScreenShotProvider> = $r6;

        r0.<com.android.camera.app.CameraAppUI: long mCoverHiddenTime> = -1L;

        $r7 = interfaceinvoke r1.<com.android.camera.app.AppController: android.content.Context getAndroidContext()>();

        $r8 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>($r7);

        $i0 = virtualinvoke $r8.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        r0.<com.android.camera.app.CameraAppUI: int mSlop> = $i0;

        r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController> = r1;

        r0.<com.android.camera.app.CameraAppUI: boolean mIsCaptureIntent> = z0;

        r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.MainActivityLayout mAppRootView> = r2;

        $r9 = virtualinvoke r2.<com.android.camera.ui.MainActivityLayout: android.view.View findViewById(int)>(2131623970);

        $r10 = (com.android.camera.widget.FilmstripLayout) $r9;

        r0.<com.android.camera.app.CameraAppUI: com.android.camera.widget.FilmstripLayout mFilmstripLayout> = $r10;

        $r11 = virtualinvoke r2.<com.android.camera.ui.MainActivityLayout: android.view.View findViewById(int)>(2131623954);

        $r12 = (android.widget.FrameLayout) $r11;

        r0.<com.android.camera.app.CameraAppUI: android.widget.FrameLayout mCameraRootView> = $r12;

        $r14 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.MainActivityLayout mAppRootView>;

        $r13 = virtualinvoke $r14.<com.android.camera.ui.MainActivityLayout: android.view.View findViewById(int)>(2131623943);

        $r16 = (com.android.camera.ui.ModeTransitionView) $r13;

        r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.ModeTransitionView mModeTransitionView> = $r16;

        $r15 = new com.android.camera.app.FilmstripBottomPanel;

        $r18 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.MainActivityLayout mAppRootView>;

        $r17 = virtualinvoke $r18.<com.android.camera.ui.MainActivityLayout: android.view.View findViewById(int)>(2131623977);

        $r20 = (android.view.ViewGroup) $r17;

        specialinvoke $r15.<com.android.camera.app.FilmstripBottomPanel: void <init>(com.android.camera.app.AppController,android.view.ViewGroup)>(r1, $r20);

        r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.FilmstripBottomPanel mFilmstripBottomControls> = $r15;

        $r19 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.MainActivityLayout mAppRootView>;

        $r22 = virtualinvoke $r19.<com.android.camera.ui.MainActivityLayout: android.view.View findViewById(int)>(2131623970);

        $r21 = (com.android.camera.filmstrip.FilmstripContentPanel) $r22;

        r0.<com.android.camera.app.CameraAppUI: com.android.camera.filmstrip.FilmstripContentPanel mFilmstripPanel> = $r21;

        $r24 = new android.view.GestureDetector;

        $r23 = interfaceinvoke r1.<com.android.camera.app.AppController: android.content.Context getAndroidContext()>();

        $r26 = new com.android.camera.app.CameraAppUI$MyGestureListener;

        specialinvoke $r26.<com.android.camera.app.CameraAppUI$MyGestureListener: void <init>(com.android.camera.app.CameraAppUI,com.android.camera.app.CameraAppUI$1)>(r0, null);

        specialinvoke $r24.<android.view.GestureDetector: void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener)>($r23, $r26);

        r0.<com.android.camera.app.CameraAppUI: android.view.GestureDetector mGestureDetector> = $r24;

        $r25 = interfaceinvoke r1.<com.android.camera.app.AppController: android.content.Context getAndroidContext()>();

        r3 = virtualinvoke $r25.<android.content.Context: android.content.res.Resources getResources()>();

        $r27 = new com.android.camera.CaptureLayoutHelper;

        $i2 = virtualinvoke r3.<android.content.res.Resources: int getDimensionPixelSize(int)>(2131558535);

        $i3 = virtualinvoke r3.<android.content.res.Resources: int getDimensionPixelSize(int)>(2131558536);

        $i1 = virtualinvoke r3.<android.content.res.Resources: int getDimensionPixelSize(int)>(2131558537);

        specialinvoke $r27.<com.android.camera.CaptureLayoutHelper: void <init>(int,int,int)>($i2, $i3, $i1);

        r0.<com.android.camera.app.CameraAppUI: com.android.camera.CaptureLayoutHelper mCaptureLayoutHelper> = $r27;

        $r28 = virtualinvoke r2.<com.android.camera.ui.MainActivityLayout: android.view.View findViewById(int)>(2131624002);

        $r31 = (com.android.camera.ui.ModeListView) $r28;

        r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.ModeListView mModeListView> = $r31;

        $r32 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.ModeListView mModeListView>;

        if $r32 == null goto label1;

        $r46 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.ModeListView mModeListView>;

        virtualinvoke $r46.<com.android.camera.ui.ModeListView: void setModeSwitchListener(com.android.camera.ui.ModeListView$ModeSwitchListener)>(r0);

        $r45 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.ModeListView mModeListView>;

        virtualinvoke $r45.<com.android.camera.ui.ModeListView: void setModeListOpenListener(com.android.camera.ui.ModeListView$ModeListOpenListener)>(r0);

        $r43 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.ModeListView mModeListView>;

        $r44 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.CameraAppUI$CameraModuleScreenShotProvider mCameraModuleScreenShotProvider>;

        virtualinvoke $r43.<com.android.camera.ui.ModeListView: void setCameraModuleScreenShotProvider(com.android.camera.app.CameraAppUI$CameraModuleScreenShotProvider)>($r44);

        $r49 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.ModeListView mModeListView>;

        $r50 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.CaptureLayoutHelper mCaptureLayoutHelper>;

        virtualinvoke $r49.<com.android.camera.ui.ModeListView: void setCaptureLayoutHelper(com.android.camera.CaptureLayoutHelper)>($r50);

        $r48 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        $r47 = interfaceinvoke $r48.<com.android.camera.app.AppController: com.android.camera.settings.SettingsManager getSettingsManager()>();

        z1 = virtualinvoke $r47.<com.android.camera.settings.SettingsManager: boolean getBoolean(java.lang.String,java.lang.String)>("default_scope", "pref_should_show_settings_button_cling");

        $r51 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.ModeListView mModeListView>;

        virtualinvoke $r51.<com.android.camera.ui.ModeListView: void setShouldShowSettingsCling(boolean)>(z1);

        goto label2;

     label1:
        $r29 = <com.android.camera.app.CameraAppUI: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void e(com.android.camera.debug.Log$Tag,java.lang.String)>($r29, "Cannot find mode list in the view hierarchy");

     label2:
        $r30 = new com.android.camera.AnimationManager;

        specialinvoke $r30.<com.android.camera.AnimationManager: void <init>()>();

        r0.<com.android.camera.app.CameraAppUI: com.android.camera.AnimationManager mAnimationManager> = $r30;

        $r35 = virtualinvoke r2.<com.android.camera.ui.MainActivityLayout: android.view.View findViewById(int)>(2131623942);

        $r36 = (com.android.camera.widget.PeekView) $r35;

        r0.<com.android.camera.app.CameraAppUI: com.android.camera.widget.PeekView mPeekView> = $r36;

        $r34 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.MainActivityLayout mAppRootView>;

        $r33 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.CaptureLayoutHelper mCaptureLayoutHelper>;

        virtualinvoke $r34.<com.android.camera.ui.MainActivityLayout: void setNonDecorWindowSizeChangedListener(com.android.camera.app.CameraAppUI$NonDecorWindowSizeChangedListener)>($r33);

        specialinvoke r0.<com.android.camera.app.CameraAppUI: void initDisplayListener()>();

        $r38 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.MainActivityLayout mAppRootView>;

        $r39 = virtualinvoke $r38.<com.android.camera.ui.MainActivityLayout: android.view.View findViewById(int)>(2131623964);

        r0.<com.android.camera.app.CameraAppUI: android.view.View mAccessibilityAffordances> = $r39;

        $r37 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.MainActivityLayout mAppRootView>;

        r52 = virtualinvoke $r37.<com.android.camera.ui.MainActivityLayout: android.view.View findViewById(int)>(2131623965);

        $r42 = new com.android.camera.app.CameraAppUI$3;

        specialinvoke $r42.<com.android.camera.app.CameraAppUI$3: void <init>(com.android.camera.app.CameraAppUI)>(r0);

        virtualinvoke r52.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>($r42);

        $r41 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.MainActivityLayout mAppRootView>;

        r4 = virtualinvoke $r41.<com.android.camera.ui.MainActivityLayout: android.view.View findViewById(int)>(2131623966);

        $r40 = new com.android.camera.app.CameraAppUI$4;

        specialinvoke $r40.<com.android.camera.app.CameraAppUI$4: void <init>(com.android.camera.app.CameraAppUI)>(r0);

        virtualinvoke r4.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>($r40);

        return;
    }

    public void freezeScreenUntilPreviewReady()
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.debug.Log$Tag $r1;
        com.android.camera.app.CameraAppUI$CameraModuleScreenShotProvider $r2;
        com.android.camera.ui.ModeTransitionView $r3;
        android.graphics.Bitmap $r4;
        com.android.camera.app.CameraAppUI$5 $r5;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r1 = <com.android.camera.app.CameraAppUI: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void v(com.android.camera.debug.Log$Tag,java.lang.String)>($r1, "freezeScreenUntilPreviewReady");

        $r3 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.ModeTransitionView mModeTransitionView>;

        $r2 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.CameraAppUI$CameraModuleScreenShotProvider mCameraModuleScreenShotProvider>;

        $r4 = interfaceinvoke $r2.<com.android.camera.app.CameraAppUI$CameraModuleScreenShotProvider: android.graphics.Bitmap getScreenShot(int)>(2);

        virtualinvoke $r3.<com.android.camera.ui.ModeTransitionView: void setupModeCover(android.graphics.Bitmap)>($r4);

        $r5 = new com.android.camera.app.CameraAppUI$5;

        specialinvoke $r5.<com.android.camera.app.CameraAppUI$5: void <init>(com.android.camera.app.CameraAppUI)>(r0);

        r0.<com.android.camera.app.CameraAppUI: java.lang.Runnable mHideCoverRunnable> = $r5;

        r0.<com.android.camera.app.CameraAppUI: int mModeCoverState> = 1;

        return;
    }

    public void setupClingForViewer(int)
    {
        com.android.camera.app.CameraAppUI r0;
        int i0, i1;
        android.widget.FrameLayout r1;
        android.view.LayoutInflater r2;
        com.android.camera.widget.Cling r3;
        com.android.camera.ui.MainActivityLayout $r4;
        android.view.View $r5, $r9;
        com.android.camera.app.AppController $r6, $r10, $r15;
        android.content.Context $r7, $r11, $r14;
        java.lang.Object $r8;
        android.content.res.Resources $r12, $r16;
        java.lang.String $r13;
        com.android.camera.app.FilmstripBottomPanel $r17;

        r0 := @this: com.android.camera.app.CameraAppUI;

        i0 := @parameter0: int;

        if i0 != 2 goto label1;

        $r4 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.MainActivityLayout mAppRootView>;

        $r5 = virtualinvoke $r4.<com.android.camera.ui.MainActivityLayout: android.view.View findViewById(int)>(2131623971);

        r1 = (android.widget.FrameLayout) $r5;

        if r1 == null goto label1;

        $r6 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        $r7 = interfaceinvoke $r6.<com.android.camera.app.AppController: android.content.Context getAndroidContext()>();

        $r8 = virtualinvoke $r7.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");

        r2 = (android.view.LayoutInflater) $r8;

        $r9 = virtualinvoke r2.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>(2130968585, null, 0);

        r3 = (com.android.camera.widget.Cling) $r9;

        $r10 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        $r11 = interfaceinvoke $r10.<com.android.camera.app.AppController: android.content.Context getAndroidContext()>();

        $r12 = virtualinvoke $r11.<android.content.Context: android.content.res.Resources getResources()>();

        $r13 = virtualinvoke $r12.<android.content.res.Resources: java.lang.String getString(int)>(2131231100);

        virtualinvoke r3.<com.android.camera.widget.Cling: void setText(java.lang.CharSequence)>($r13);

        $r15 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        $r14 = interfaceinvoke $r15.<com.android.camera.app.AppController: android.content.Context getAndroidContext()>();

        $r16 = virtualinvoke $r14.<android.content.Context: android.content.res.Resources getResources()>();

        i1 = virtualinvoke $r16.<android.content.res.Resources: int getDimensionPixelSize(int)>(2131558559);

        virtualinvoke r1.<android.widget.FrameLayout: void addView(android.view.View,int,int)>(r3, i1, -2);

        $r17 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.FilmstripBottomPanel mFilmstripBottomControls>;

        virtualinvoke $r17.<com.android.camera.app.FilmstripBottomPanel: void setClingForViewer(int,com.android.camera.widget.Cling)>(i0, r3);

     label1:
        return;
    }

    public void clearClingForViewer(int)
    {
        com.android.camera.app.CameraAppUI r0;
        int i0;
        com.android.camera.widget.Cling r1;
        com.android.camera.app.FilmstripBottomPanel $r2, $r3;
        com.android.camera.ui.MainActivityLayout $r4;

        r0 := @this: com.android.camera.app.CameraAppUI;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.FilmstripBottomPanel mFilmstripBottomControls>;

        r1 = virtualinvoke $r2.<com.android.camera.app.FilmstripBottomPanel: com.android.camera.widget.Cling getClingForViewer(int)>(i0);

        if r1 != null goto label1;

        return;

     label1:
        $r3 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.FilmstripBottomPanel mFilmstripBottomControls>;

        virtualinvoke $r3.<com.android.camera.app.FilmstripBottomPanel: void clearClingForViewer(int)>(i0);

        virtualinvoke r1.<com.android.camera.widget.Cling: void setVisibility(int)>(8);

        $r4 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.MainActivityLayout mAppRootView>;

        virtualinvoke $r4.<com.android.camera.ui.MainActivityLayout: void removeView(android.view.View)>(r1);

        return;
    }

    public void setSwipeEnabled(boolean)
    {
        com.android.camera.app.CameraAppUI r0;
        boolean z0;
        com.android.camera.ui.MainActivityLayout $r1;

        r0 := @this: com.android.camera.app.CameraAppUI;

        z0 := @parameter0: boolean;

        r0.<com.android.camera.app.CameraAppUI: boolean mSwipeEnabled> = z0;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.MainActivityLayout mAppRootView>;

        virtualinvoke $r1.<com.android.camera.ui.MainActivityLayout: void setSwipeEnabled(boolean)>(z0);

        return;
    }

    public void onDestroy()
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.app.AppController $r1;
        android.content.Context $r2;
        java.lang.Object $r3;
        android.hardware.display.DisplayManager$DisplayListener $r4;
        android.hardware.display.DisplayManager $r5;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        $r2 = interfaceinvoke $r1.<com.android.camera.app.AppController: android.content.Context getAndroidContext()>();

        $r3 = virtualinvoke $r2.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("display");

        $r5 = (android.hardware.display.DisplayManager) $r3;

        $r4 = r0.<com.android.camera.app.CameraAppUI: android.hardware.display.DisplayManager$DisplayListener mDisplayListener>;

        virtualinvoke $r5.<android.hardware.display.DisplayManager: void unregisterDisplayListener(android.hardware.display.DisplayManager$DisplayListener)>($r4);

        return;
    }

    private void initDisplayListener()
    {
        com.android.camera.app.CameraAppUI r0;
        boolean $z0;
        com.android.camera.app.AppController $r1, $r4;
        android.content.Context $r2, $r5;
        int $i0;
        com.android.camera.app.CameraAppUI$6 $r3;
        java.lang.Object $r6;
        android.hardware.display.DisplayManager$DisplayListener $r7;
        android.hardware.display.DisplayManager $r8;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $z0 = <com.android.camera.util.ApiHelper: boolean HAS_DISPLAY_LISTENER>;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        $r2 = interfaceinvoke $r1.<com.android.camera.app.AppController: android.content.Context getAndroidContext()>();

        $i0 = staticinvoke <com.android.camera.util.CameraUtil: int getDisplayRotation(android.content.Context)>($r2);

        r0.<com.android.camera.app.CameraAppUI: int mLastRotation> = $i0;

        $r3 = new com.android.camera.app.CameraAppUI$6;

        specialinvoke $r3.<com.android.camera.app.CameraAppUI$6: void <init>(com.android.camera.app.CameraAppUI)>(r0);

        r0.<com.android.camera.app.CameraAppUI: android.hardware.display.DisplayManager$DisplayListener mDisplayListener> = $r3;

        $r4 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        $r5 = interfaceinvoke $r4.<com.android.camera.app.AppController: android.content.Context getAndroidContext()>();

        $r6 = virtualinvoke $r5.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("display");

        $r8 = (android.hardware.display.DisplayManager) $r6;

        $r7 = r0.<com.android.camera.app.CameraAppUI: android.hardware.display.DisplayManager$DisplayListener mDisplayListener>;

        virtualinvoke $r8.<android.hardware.display.DisplayManager: void registerDisplayListener(android.hardware.display.DisplayManager$DisplayListener,android.os.Handler)>($r7, null);

     label1:
        return;
    }

    private void onSwipeDetected(int)
    {
        com.android.camera.app.CameraAppUI r0;
        int i0, i1, i2;
        com.android.camera.app.AppController $r2, $r3, $r6;
        com.android.camera.ui.ModeTransitionView $r4;
        com.android.camera.ui.MainActivityLayout $r5, $r11, $r12;
        android.content.Context $r7;
        com.android.camera.ui.ModeListView $r8;
        com.android.camera.app.CameraAppUI$7 $r9;
        com.android.camera.widget.FilmstripLayout $r10;

        r0 := @this: com.android.camera.app.CameraAppUI;

        i0 := @parameter0: int;

        if i0 == 1 goto label1;

        if i0 != 2 goto label3;

     label1:
        $r2 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        i1 = interfaceinvoke $r2.<com.android.camera.app.AppController: int getCurrentModuleIndex()>();

        $r3 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        i2 = interfaceinvoke $r3.<com.android.camera.app.AppController: int getQuickSwitchToModuleId(int)>(i1);

        if i1 == i2 goto label2;

        $r5 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.MainActivityLayout mAppRootView>;

        $r4 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.ModeTransitionView mModeTransitionView>;

        virtualinvoke $r5.<com.android.camera.ui.MainActivityLayout: void redirectTouchEventsTo(android.view.View)>($r4);

        $r6 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        $r7 = interfaceinvoke $r6.<com.android.camera.app.AppController: android.content.Context getAndroidContext()>();

        staticinvoke <com.android.camera.util.CameraUtil: int getCameraModeCoverIconResId(int,android.content.Context)>(i2, $r7);

        $r9 = new com.android.camera.app.CameraAppUI$7;

        specialinvoke $r9.<com.android.camera.app.CameraAppUI$7: void <init>(com.android.camera.app.CameraAppUI,int)>(r0, i2);

     label2:
        goto label5;

     label3:
        if i0 != 3 goto label4;

        $r12 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.MainActivityLayout mAppRootView>;

        $r10 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.widget.FilmstripLayout mFilmstripLayout>;

        virtualinvoke $r12.<com.android.camera.ui.MainActivityLayout: void redirectTouchEventsTo(android.view.View)>($r10);

        goto label5;

     label4:
        if i0 != 4 goto label5;

        $r11 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.MainActivityLayout mAppRootView>;

        $r8 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.ModeListView mModeListView>;

        virtualinvoke $r11.<com.android.camera.ui.MainActivityLayout: void redirectTouchEventsTo(android.view.View)>($r8);

     label5:
        return;
    }

    public void resume()
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.filmstrip.FilmstripContentPanel $r1;
        boolean $z0, $z1;
        android.view.View $r2;
        byte $b0;

        r0 := @this: com.android.camera.app.CameraAppUI;

        specialinvoke r0.<com.android.camera.app.CameraAppUI: void showModeCoverUntilPreviewReady()>();

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.filmstrip.FilmstripContentPanel mFilmstripPanel>;

        interfaceinvoke $r1.<com.android.camera.filmstrip.FilmstripContentPanel: void hide()>();

        $z0 = specialinvoke r0.<com.android.camera.app.CameraAppUI: boolean isSpokenFeedbackAccessibilityEnabled()>();

        r0.<com.android.camera.app.CameraAppUI: boolean mAccessibilityEnabled> = $z0;

        $r2 = r0.<com.android.camera.app.CameraAppUI: android.view.View mAccessibilityAffordances>;

        $z1 = r0.<com.android.camera.app.CameraAppUI: boolean mAccessibilityEnabled>;

        if $z1 == 0 goto label1;

        $b0 = 0;

        goto label2;

     label1:
        $b0 = 8;

     label2:
        virtualinvoke $r2.<android.view.View: void setVisibility(int)>($b0);

        return;
    }

    private boolean isSpokenFeedbackAccessibilityEnabled()
    {
        com.android.camera.app.CameraAppUI r0;
        android.view.accessibility.AccessibilityManager r1;
        java.util.List r2;
        com.android.camera.app.AppController $r3;
        android.content.Context $r4;
        java.lang.Object $r5;
        boolean $z0, $z1;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r3 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        $r4 = interfaceinvoke $r3.<com.android.camera.app.AppController: android.content.Context getAndroidContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("accessibility");

        r1 = (android.view.accessibility.AccessibilityManager) $r5;

        r2 = virtualinvoke r1.<android.view.accessibility.AccessibilityManager: java.util.List getEnabledAccessibilityServiceList(int)>(1);

        if r2 == null goto label1;

        $z0 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void openModeList()
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.widget.ModeOptionsOverlay $r1;
        com.android.camera.ui.ModeListView $r2;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.widget.ModeOptionsOverlay mModeOptionsOverlay>;

        virtualinvoke $r1.<com.android.camera.widget.ModeOptionsOverlay: void closeModeOptions()>();

        $r2 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.ModeListView mModeListView>;

        virtualinvoke $r2.<com.android.camera.ui.ModeListView: boolean onMenuPressed()>();

        return;
    }

    private void showModeCoverUntilPreviewReady()
    {
        com.android.camera.app.CameraAppUI r0;
        int i0, i1, i2;
        com.android.camera.app.AppController $r1, $r2;
        android.content.Context $r3;
        com.android.camera.ui.ModeTransitionView $r4;
        com.android.camera.app.CameraAppUI$8 $r5;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        i0 = interfaceinvoke $r1.<com.android.camera.app.AppController: int getCurrentModuleIndex()>();

        i1 = 2131492919;

        $r2 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        $r3 = interfaceinvoke $r2.<com.android.camera.app.AppController: android.content.Context getAndroidContext()>();

        i2 = staticinvoke <com.android.camera.util.CameraUtil: int getCameraModeCoverIconResId(int,android.content.Context)>(i0, $r3);

        $r4 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.ModeTransitionView mModeTransitionView>;

        virtualinvoke $r4.<com.android.camera.ui.ModeTransitionView: void setupModeCover(int,int)>(i1, i2);

        $r5 = new com.android.camera.app.CameraAppUI$8;

        specialinvoke $r5.<com.android.camera.app.CameraAppUI$8: void <init>(com.android.camera.app.CameraAppUI)>(r0);

        r0.<com.android.camera.app.CameraAppUI: java.lang.Runnable mHideCoverRunnable> = $r5;

        r0.<com.android.camera.app.CameraAppUI: int mModeCoverState> = 1;

        return;
    }

    private void showShimmyDelayed()
    {
        com.android.camera.app.CameraAppUI r0;
        boolean $z0;
        com.android.camera.ui.ModeListView $r1;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $z0 = r0.<com.android.camera.app.CameraAppUI: boolean mIsCaptureIntent>;

        if $z0 != 0 goto label1;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.ModeListView mModeListView>;

        virtualinvoke $r1.<com.android.camera.ui.ModeListView: void showModeSwitcherHint()>();

     label1:
        return;
    }

    private void hideModeCover()
    {
        com.android.camera.app.CameraAppUI r0;
        java.lang.Runnable $r1, $r2;
        long $l0, $l2;
        byte $b1;
        com.android.camera.ui.MainActivityLayout $r3;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: java.lang.Runnable mHideCoverRunnable>;

        if $r1 == null goto label1;

        $r3 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.MainActivityLayout mAppRootView>;

        $r2 = r0.<com.android.camera.app.CameraAppUI: java.lang.Runnable mHideCoverRunnable>;

        virtualinvoke $r3.<com.android.camera.ui.MainActivityLayout: boolean post(java.lang.Runnable)>($r2);

        r0.<com.android.camera.app.CameraAppUI: java.lang.Runnable mHideCoverRunnable> = null;

     label1:
        r0.<com.android.camera.app.CameraAppUI: int mModeCoverState> = 0;

        $l0 = r0.<com.android.camera.app.CameraAppUI: long mCoverHiddenTime>;

        $b1 = $l0 cmp 0L;

        if $b1 >= 0 goto label2;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.camera.app.CameraAppUI: long mCoverHiddenTime> = $l2;

     label2:
        return;
    }

    public void onPreviewVisiblityChanged(int)
    {
        com.android.camera.app.CameraAppUI r0;
        int i0;
        boolean $z0;
        android.view.View $r1, $r2, $r3;

        r0 := @this: com.android.camera.app.CameraAppUI;

        i0 := @parameter0: int;

        if i0 != 2 goto label1;

        virtualinvoke r0.<com.android.camera.app.CameraAppUI: void setIndicatorBottomBarWrapperVisible(boolean)>(0);

        $r3 = r0.<com.android.camera.app.CameraAppUI: android.view.View mAccessibilityAffordances>;

        virtualinvoke $r3.<android.view.View: void setVisibility(int)>(8);

        goto label3;

     label1:
        virtualinvoke r0.<com.android.camera.app.CameraAppUI: void setIndicatorBottomBarWrapperVisible(boolean)>(1);

        $z0 = r0.<com.android.camera.app.CameraAppUI: boolean mAccessibilityEnabled>;

        if $z0 == 0 goto label2;

        $r2 = r0.<com.android.camera.app.CameraAppUI: android.view.View mAccessibilityAffordances>;

        virtualinvoke $r2.<android.view.View: void setVisibility(int)>(0);

        goto label3;

     label2:
        $r1 = r0.<com.android.camera.app.CameraAppUI: android.view.View mAccessibilityAffordances>;

        virtualinvoke $r1.<android.view.View: void setVisibility(int)>(8);

     label3:
        return;
    }

    public void pausePreviewRendering()
    {
        com.android.camera.app.CameraAppUI r0;
        android.view.TextureView $r1;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: android.view.TextureView mTextureView>;

        virtualinvoke $r1.<android.view.TextureView: void setVisibility(int)>(4);

        return;
    }

    public void resumePreviewRendering()
    {
        com.android.camera.app.CameraAppUI r0;
        android.view.TextureView $r1;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: android.view.TextureView mTextureView>;

        virtualinvoke $r1.<android.view.TextureView: void setVisibility(int)>(0);

        return;
    }

    public android.graphics.Matrix getPreviewTransform(android.graphics.Matrix)
    {
        com.android.camera.app.CameraAppUI r0;
        android.graphics.Matrix r1, $r3;
        android.view.TextureView $r2;

        r0 := @this: com.android.camera.app.CameraAppUI;

        r1 := @parameter0: android.graphics.Matrix;

        $r2 = r0.<com.android.camera.app.CameraAppUI: android.view.TextureView mTextureView>;

        $r3 = virtualinvoke $r2.<android.view.TextureView: android.graphics.Matrix getTransform(android.graphics.Matrix)>(r1);

        return $r3;
    }

    public void onOpenFullScreen()
    {
        com.android.camera.app.CameraAppUI r0;

        r0 := @this: com.android.camera.app.CameraAppUI;

        return;
    }

    public void onModeListOpenProgress(float)
    {
        com.android.camera.app.CameraAppUI r0;
        float f0, f1, $f2, $f3, $f4, $f5, f6;
        com.android.camera.util.Gusterpolator $r1;
        android.view.View $r2;
        com.android.camera.ShutterButton $r3;

        r0 := @this: com.android.camera.app.CameraAppUI;

        f0 := @parameter0: float;

        f6 = 1.0F - f0;

        $r1 = <com.android.camera.util.Gusterpolator: com.android.camera.util.Gusterpolator INSTANCE>;

        f1 = virtualinvoke $r1.<com.android.camera.util.Gusterpolator: float getInterpolation(float)>(f6);

        $r2 = r0.<com.android.camera.app.CameraAppUI: android.view.View mModeOptionsToggle>;

        virtualinvoke $r2.<android.view.View: void setAlpha(float)>(f1);

        $r3 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ShutterButton mShutterButton>;

        $f4 = f6 * 1.0F;

        $f2 = 1.0F - f6;

        $f3 = $f2 * 0.2F;

        $f5 = $f4 + $f3;

        virtualinvoke $r3.<com.android.camera.ShutterButton: void setAlpha(float)>($f5);

        return;
    }

    public void onModeListClosed()
    {
        com.android.camera.app.CameraAppUI r0;
        android.view.View $r1;
        com.android.camera.ShutterButton $r2;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: android.view.View mModeOptionsToggle>;

        virtualinvoke $r1.<android.view.View: void setAlpha(float)>(1.0F);

        $r2 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ShutterButton mShutterButton>;

        virtualinvoke $r2.<com.android.camera.ShutterButton: void setAlpha(float)>(1.0F);

        return;
    }

    public boolean onBackPressed()
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.widget.FilmstripLayout $r1, $r3;
        int $i0;
        com.android.camera.ui.ModeListView $r2;
        boolean $z0, $z1;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.widget.FilmstripLayout mFilmstripLayout>;

        $i0 = virtualinvoke $r1.<com.android.camera.widget.FilmstripLayout: int getVisibility()>();

        if $i0 != 0 goto label1;

        $r3 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.widget.FilmstripLayout mFilmstripLayout>;

        $z1 = virtualinvoke $r3.<com.android.camera.widget.FilmstripLayout: boolean onBackPressed()>();

        return $z1;

     label1:
        $r2 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.ModeListView mModeListView>;

        $z0 = virtualinvoke $r2.<com.android.camera.ui.ModeListView: boolean onBackPressed()>();

        return $z0;
    }

    public void setPreviewStatusListener(com.android.camera.ui.PreviewStatusListener)
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.ui.PreviewStatusListener r1, $r2;

        r0 := @this: com.android.camera.app.CameraAppUI;

        r1 := @parameter0: com.android.camera.ui.PreviewStatusListener;

        r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.PreviewStatusListener mPreviewStatusListener> = r1;

        $r2 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.PreviewStatusListener mPreviewStatusListener>;

        if $r2 == null goto label1;

        specialinvoke r0.<com.android.camera.app.CameraAppUI: void onPreviewListenerChanged()>();

     label1:
        return;
    }

    private void onPreviewListenerChanged()
    {
        com.android.camera.app.CameraAppUI r0;
        android.view.GestureDetector$OnGestureListener r1;
        android.view.View$OnTouchListener r2;
        com.android.camera.ui.PreviewStatusListener $r3, $r4, $r5;
        com.android.camera.TextureViewHelper $r6;
        boolean $z0;
        com.android.camera.ui.PreviewOverlay $r7, $r8;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r3 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.PreviewStatusListener mPreviewStatusListener>;

        r1 = interfaceinvoke $r3.<com.android.camera.ui.PreviewStatusListener: android.view.GestureDetector$OnGestureListener getGestureListener()>();

        if r1 == null goto label1;

        $r8 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.PreviewOverlay mPreviewOverlay>;

        virtualinvoke $r8.<com.android.camera.ui.PreviewOverlay: void setGestureListener(android.view.GestureDetector$OnGestureListener)>(r1);

     label1:
        $r4 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.PreviewStatusListener mPreviewStatusListener>;

        r2 = interfaceinvoke $r4.<com.android.camera.ui.PreviewStatusListener: android.view.View$OnTouchListener getTouchListener()>();

        if r2 == null goto label2;

        $r7 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.PreviewOverlay mPreviewOverlay>;

        virtualinvoke $r7.<com.android.camera.ui.PreviewOverlay: void setTouchListener(android.view.View$OnTouchListener)>(r2);

     label2:
        $r6 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.TextureViewHelper mTextureViewHelper>;

        $r5 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.PreviewStatusListener mPreviewStatusListener>;

        $z0 = interfaceinvoke $r5.<com.android.camera.ui.PreviewStatusListener: boolean shouldAutoAdjustTransformMatrixOnLayout()>();

        virtualinvoke $r6.<com.android.camera.TextureViewHelper: void setAutoAdjustTransform(boolean)>($z0);

        return;
    }

    public void onChangeCamera()
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.module.ModuleController r1;
        com.android.camera.app.AppController $r2;
        com.android.camera.hardware.HardwareSpec $r3;
        com.android.camera.app.CameraAppUI$BottomBarUISpec $r4;
        com.android.camera.widget.IndicatorIconController $r5, $r6;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r2 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        r1 = interfaceinvoke $r2.<com.android.camera.app.AppController: com.android.camera.module.ModuleController getCurrentModuleController()>();

        $r3 = interfaceinvoke r1.<com.android.camera.module.ModuleController: com.android.camera.hardware.HardwareSpec getHardwareSpec()>();

        $r4 = interfaceinvoke r1.<com.android.camera.module.ModuleController: com.android.camera.app.CameraAppUI$BottomBarUISpec getBottomBarSpec()>();

        virtualinvoke r0.<com.android.camera.app.CameraAppUI: void applyModuleSpecs(com.android.camera.hardware.HardwareSpec,com.android.camera.app.CameraAppUI$BottomBarUISpec)>($r3, $r4);

        $r5 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.widget.IndicatorIconController mIndicatorIconController>;

        if $r5 == null goto label1;

        $r6 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.widget.IndicatorIconController mIndicatorIconController>;

        virtualinvoke $r6.<com.android.camera.widget.IndicatorIconController: void syncIndicators()>();

     label1:
        return;
    }

    public void addPreviewAreaChangedListener(com.android.camera.ui.PreviewStatusListener$PreviewAreaChangedListener)
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.ui.PreviewStatusListener$PreviewAreaChangedListener r1;
        com.android.camera.TextureViewHelper $r2;

        r0 := @this: com.android.camera.app.CameraAppUI;

        r1 := @parameter0: com.android.camera.ui.PreviewStatusListener$PreviewAreaChangedListener;

        $r2 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.TextureViewHelper mTextureViewHelper>;

        virtualinvoke $r2.<com.android.camera.TextureViewHelper: void addPreviewAreaSizeChangedListener(com.android.camera.ui.PreviewStatusListener$PreviewAreaChangedListener)>(r1);

        return;
    }

    public void removePreviewAreaChangedListener(com.android.camera.ui.PreviewStatusListener$PreviewAreaChangedListener)
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.ui.PreviewStatusListener$PreviewAreaChangedListener r1;
        com.android.camera.TextureViewHelper $r2;

        r0 := @this: com.android.camera.app.CameraAppUI;

        r1 := @parameter0: com.android.camera.ui.PreviewStatusListener$PreviewAreaChangedListener;

        $r2 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.TextureViewHelper mTextureViewHelper>;

        virtualinvoke $r2.<com.android.camera.TextureViewHelper: void removePreviewAreaSizeChangedListener(com.android.camera.ui.PreviewStatusListener$PreviewAreaChangedListener)>(r1);

        return;
    }

    public void prepareModuleUI()
    {
        com.android.camera.app.CameraAppUI r0;
        int i0, $i1;
        com.android.camera.app.AppController $r1, $r10, $r19, $r29, $r32, $r34, $r62, $r67, $r73, $r87;
        com.android.camera.settings.SettingsManager $r2, $r74;
        android.widget.FrameLayout $r3, $r5, $r6, $r18, $r24, $r35, $r37, $r41, $r43, $r45, $r54, $r61, $r70, $r72, $r76, $r81;
        android.view.View $r4, $r7, $r17, $r27, $r36, $r38, $r42, $r44, $r52, $r53, $r69, $r71, $r82, $r83;
        android.view.TextureView $r8, $r11;
        com.android.camera.TextureViewHelper $r9, $r14, $r15, $r46, $r58, $r65, $r86, $r90, $r92;
        com.android.camera.CaptureLayoutHelper $r12, $r23, $r30, $r77;
        com.android.camera.app.CameraProvider $r13;
        android.view.View$OnLayoutChangeListener $r16;
        com.android.camera.ui.BottomBar $r20, $r25;
        android.content.res.Resources $r21;
        android.content.Context $r22;
        com.android.camera.widget.ModeOptionsOverlay $r26, $r31, $r40, $r56;
        com.android.camera.module.ModuleController $r28, $r39;
        com.android.camera.ShutterButton $r33;
        com.android.camera.ui.GridLines $r47, $r48;
        com.android.camera.ui.PreviewOverlay $r49, $r51, $r55, $r59;
        com.android.camera.app.CameraAppUI$MyTouchListener $r50;
        com.android.camera.ui.CaptureAnimationOverlay $r57, $r60;
        com.android.camera.ButtonManager $r63, $r68;
        com.android.camera.widget.IndicatorIconController $r64, $r66, $r75, $r85;
        com.android.camera.ui.BottomBarModeOptionsWrapper $r78, $r80;
        com.android.camera.app.CameraAppUI$9 $r79;
        com.android.camera.ui.MainActivityLayout $r84, $r88;
        com.android.camera.ui.ModeListView $r89;
        com.android.camera.app.CameraAppUI$10 $r91;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        $r2 = interfaceinvoke $r1.<com.android.camera.app.AppController: com.android.camera.settings.SettingsManager getSettingsManager()>();

        virtualinvoke $r2.<com.android.camera.settings.SettingsManager: void addListener(com.android.camera.settings.SettingsManager$OnSettingChangedListener)>(r0);

        $r3 = r0.<com.android.camera.app.CameraAppUI: android.widget.FrameLayout mCameraRootView>;

        $r4 = virtualinvoke $r3.<android.widget.FrameLayout: android.view.View findViewById(int)>(2131623962);

        $r5 = (android.widget.FrameLayout) $r4;

        r0.<com.android.camera.app.CameraAppUI: android.widget.FrameLayout mModuleUI> = $r5;

        $r6 = r0.<com.android.camera.app.CameraAppUI: android.widget.FrameLayout mCameraRootView>;

        $r7 = virtualinvoke $r6.<android.widget.FrameLayout: android.view.View findViewById(int)>(2131623955);

        $r8 = (android.view.TextureView) $r7;

        r0.<com.android.camera.app.CameraAppUI: android.view.TextureView mTextureView> = $r8;

        $r9 = new com.android.camera.TextureViewHelper;

        $r11 = r0.<com.android.camera.app.CameraAppUI: android.view.TextureView mTextureView>;

        $r12 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.CaptureLayoutHelper mCaptureLayoutHelper>;

        $r10 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        $r13 = interfaceinvoke $r10.<com.android.camera.app.AppController: com.android.camera.app.CameraProvider getCameraProvider()>();

        specialinvoke $r9.<com.android.camera.TextureViewHelper: void <init>(android.view.TextureView,com.android.camera.CaptureLayoutHelper,com.android.camera.app.CameraProvider)>($r11, $r12, $r13);

        r0.<com.android.camera.app.CameraAppUI: com.android.camera.TextureViewHelper mTextureViewHelper> = $r9;

        $r14 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.TextureViewHelper mTextureViewHelper>;

        virtualinvoke $r14.<com.android.camera.TextureViewHelper: void setSurfaceTextureListener(android.view.TextureView$SurfaceTextureListener)>(r0);

        $r15 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.TextureViewHelper mTextureViewHelper>;

        $r16 = r0.<com.android.camera.app.CameraAppUI: android.view.View$OnLayoutChangeListener mPreviewLayoutChangeListener>;

        virtualinvoke $r15.<com.android.camera.TextureViewHelper: void setOnLayoutChangeListener(android.view.View$OnLayoutChangeListener)>($r16);

        $r18 = r0.<com.android.camera.app.CameraAppUI: android.widget.FrameLayout mCameraRootView>;

        $r17 = virtualinvoke $r18.<android.widget.FrameLayout: android.view.View findViewById(int)>(2131624021);

        $r20 = (com.android.camera.ui.BottomBar) $r17;

        r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.BottomBar mBottomBar> = $r20;

        $r19 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        $r22 = interfaceinvoke $r19.<com.android.camera.app.AppController: android.content.Context getAndroidContext()>();

        $r21 = virtualinvoke $r22.<android.content.Context: android.content.res.Resources getResources()>();

        i0 = virtualinvoke $r21.<android.content.res.Resources: int getColor(int)>(2131492920);

        virtualinvoke r0.<com.android.camera.app.CameraAppUI: void setBottomBarColor(int)>(i0);

        specialinvoke r0.<com.android.camera.app.CameraAppUI: void updateModeSpecificUIColors()>();

        $r25 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.BottomBar mBottomBar>;

        $r23 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.CaptureLayoutHelper mCaptureLayoutHelper>;

        virtualinvoke $r25.<com.android.camera.ui.BottomBar: void setCaptureLayoutHelper(com.android.camera.CaptureLayoutHelper)>($r23);

        $r24 = r0.<com.android.camera.app.CameraAppUI: android.widget.FrameLayout mCameraRootView>;

        $r27 = virtualinvoke $r24.<android.widget.FrameLayout: android.view.View findViewById(int)>(2131624022);

        $r26 = (com.android.camera.widget.ModeOptionsOverlay) $r27;

        r0.<com.android.camera.app.CameraAppUI: com.android.camera.widget.ModeOptionsOverlay mModeOptionsOverlay> = $r26;

        $r29 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        $r28 = interfaceinvoke $r29.<com.android.camera.app.AppController: com.android.camera.module.ModuleController getCurrentModuleController()>();

        $r32 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        $i1 = interfaceinvoke $r32.<com.android.camera.app.AppController: int getCurrentModuleIndex()>();

        virtualinvoke r0.<com.android.camera.app.CameraAppUI: void resetBottomControls(com.android.camera.module.ModuleController,int)>($r28, $i1);

        $r31 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.widget.ModeOptionsOverlay mModeOptionsOverlay>;

        $r30 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.CaptureLayoutHelper mCaptureLayoutHelper>;

        virtualinvoke $r31.<com.android.camera.widget.ModeOptionsOverlay: void setCaptureLayoutHelper(com.android.camera.CaptureLayoutHelper)>($r30);

        $r35 = r0.<com.android.camera.app.CameraAppUI: android.widget.FrameLayout mCameraRootView>;

        $r36 = virtualinvoke $r35.<android.widget.FrameLayout: android.view.View findViewById(int)>(2131623951);

        $r33 = (com.android.camera.ShutterButton) $r36;

        r0.<com.android.camera.app.CameraAppUI: com.android.camera.ShutterButton mShutterButton> = $r33;

        $r34 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        $r39 = interfaceinvoke $r34.<com.android.camera.app.AppController: com.android.camera.module.ModuleController getCurrentModuleController()>();

        virtualinvoke r0.<com.android.camera.app.CameraAppUI: void addShutterListener(com.android.camera.ShutterButton$OnShutterButtonListener)>($r39);

        $r40 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.widget.ModeOptionsOverlay mModeOptionsOverlay>;

        virtualinvoke r0.<com.android.camera.app.CameraAppUI: void addShutterListener(com.android.camera.ShutterButton$OnShutterButtonListener)>($r40);

        virtualinvoke r0.<com.android.camera.app.CameraAppUI: void addShutterListener(com.android.camera.ShutterButton$OnShutterButtonListener)>(r0);

        $r37 = r0.<com.android.camera.app.CameraAppUI: android.widget.FrameLayout mCameraRootView>;

        $r38 = virtualinvoke $r37.<android.widget.FrameLayout: android.view.View findViewById(int)>(2131623967);

        r0.<com.android.camera.app.CameraAppUI: android.view.View mLetterBoxer1> = $r38;

        $r43 = r0.<com.android.camera.app.CameraAppUI: android.widget.FrameLayout mCameraRootView>;

        $r44 = virtualinvoke $r43.<android.widget.FrameLayout: android.view.View findViewById(int)>(2131623968);

        r0.<com.android.camera.app.CameraAppUI: android.view.View mLetterBoxer2> = $r44;

        $r41 = r0.<com.android.camera.app.CameraAppUI: android.widget.FrameLayout mCameraRootView>;

        $r42 = virtualinvoke $r41.<android.widget.FrameLayout: android.view.View findViewById(int)>(2131623960);

        $r48 = (com.android.camera.ui.GridLines) $r42;

        r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.GridLines mGridLines> = $r48;

        $r46 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.TextureViewHelper mTextureViewHelper>;

        $r47 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.GridLines mGridLines>;

        virtualinvoke $r46.<com.android.camera.TextureViewHelper: void addPreviewAreaSizeChangedListener(com.android.camera.ui.PreviewStatusListener$PreviewAreaChangedListener)>($r47);

        $r45 = r0.<com.android.camera.app.CameraAppUI: android.widget.FrameLayout mCameraRootView>;

        $r52 = virtualinvoke $r45.<android.widget.FrameLayout: android.view.View findViewById(int)>(2131623958);

        $r51 = (com.android.camera.ui.PreviewOverlay) $r52;

        r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.PreviewOverlay mPreviewOverlay> = $r51;

        $r49 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.PreviewOverlay mPreviewOverlay>;

        $r50 = new com.android.camera.app.CameraAppUI$MyTouchListener;

        specialinvoke $r50.<com.android.camera.app.CameraAppUI$MyTouchListener: void <init>(com.android.camera.app.CameraAppUI,com.android.camera.app.CameraAppUI$1)>(r0, null);

        virtualinvoke $r49.<com.android.camera.ui.PreviewOverlay: void setOnTouchListener(android.view.View$OnTouchListener)>($r50);

        $r55 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.PreviewOverlay mPreviewOverlay>;

        $r56 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.widget.ModeOptionsOverlay mModeOptionsOverlay>;

        virtualinvoke $r55.<com.android.camera.ui.PreviewOverlay: void setOnPreviewTouchedListener(com.android.camera.ui.PreviewOverlay$OnPreviewTouchedListener)>($r56);

        $r54 = r0.<com.android.camera.app.CameraAppUI: android.widget.FrameLayout mCameraRootView>;

        $r53 = virtualinvoke $r54.<android.widget.FrameLayout: android.view.View findViewById(int)>(2131623957);

        $r60 = (com.android.camera.ui.CaptureAnimationOverlay) $r53;

        r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.CaptureAnimationOverlay mCaptureOverlay> = $r60;

        $r58 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.TextureViewHelper mTextureViewHelper>;

        $r59 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.PreviewOverlay mPreviewOverlay>;

        virtualinvoke $r58.<com.android.camera.TextureViewHelper: void addPreviewAreaSizeChangedListener(com.android.camera.ui.PreviewStatusListener$PreviewAreaChangedListener)>($r59);

        $r65 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.TextureViewHelper mTextureViewHelper>;

        $r57 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.CaptureAnimationOverlay mCaptureOverlay>;

        virtualinvoke $r65.<com.android.camera.TextureViewHelper: void addPreviewAreaSizeChangedListener(com.android.camera.ui.PreviewStatusListener$PreviewAreaChangedListener)>($r57);

        $r66 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.widget.IndicatorIconController mIndicatorIconController>;

        if $r66 != null goto label1;

        $r85 = new com.android.camera.widget.IndicatorIconController;

        $r87 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        $r88 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.MainActivityLayout mAppRootView>;

        specialinvoke $r85.<com.android.camera.widget.IndicatorIconController: void <init>(com.android.camera.app.AppController,android.view.View)>($r87, $r88);

        r0.<com.android.camera.app.CameraAppUI: com.android.camera.widget.IndicatorIconController mIndicatorIconController> = $r85;

     label1:
        $r67 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        $r68 = interfaceinvoke $r67.<com.android.camera.app.AppController: com.android.camera.ButtonManager getButtonManager()>();

        $r61 = r0.<com.android.camera.app.CameraAppUI: android.widget.FrameLayout mCameraRootView>;

        virtualinvoke $r68.<com.android.camera.ButtonManager: void load(android.view.View)>($r61);

        $r62 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        $r63 = interfaceinvoke $r62.<com.android.camera.app.AppController: com.android.camera.ButtonManager getButtonManager()>();

        $r64 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.widget.IndicatorIconController mIndicatorIconController>;

        virtualinvoke $r63.<com.android.camera.ButtonManager: void setListener(com.android.camera.ButtonManager$ButtonStatusListener)>($r64);

        $r73 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        $r74 = interfaceinvoke $r73.<com.android.camera.app.AppController: com.android.camera.settings.SettingsManager getSettingsManager()>();

        $r75 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.widget.IndicatorIconController mIndicatorIconController>;

        virtualinvoke $r74.<com.android.camera.settings.SettingsManager: void addListener(com.android.camera.settings.SettingsManager$OnSettingChangedListener)>($r75);

        $r76 = r0.<com.android.camera.app.CameraAppUI: android.widget.FrameLayout mCameraRootView>;

        $r69 = virtualinvoke $r76.<android.widget.FrameLayout: android.view.View findViewById(int)>(2131623991);

        r0.<com.android.camera.app.CameraAppUI: android.view.View mModeOptionsToggle> = $r69;

        $r70 = r0.<com.android.camera.app.CameraAppUI: android.widget.FrameLayout mCameraRootView>;

        $r71 = virtualinvoke $r70.<android.widget.FrameLayout: android.view.View findViewById(int)>(2131623956);

        r0.<com.android.camera.app.CameraAppUI: android.view.View mFocusOverlay> = $r71;

        $r72 = r0.<com.android.camera.app.CameraAppUI: android.widget.FrameLayout mCameraRootView>;

        $r82 = virtualinvoke $r72.<android.widget.FrameLayout: android.view.View findViewById(int)>(2131623963);

        $r81 = (android.widget.FrameLayout) $r82;

        r0.<com.android.camera.app.CameraAppUI: android.widget.FrameLayout mTutorialsPlaceHolderWrapper> = $r81;

        $r84 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.MainActivityLayout mAppRootView>;

        $r83 = virtualinvoke $r84.<com.android.camera.ui.MainActivityLayout: android.view.View findViewById(int)>(2131624020);

        $r78 = (com.android.camera.ui.BottomBarModeOptionsWrapper) $r83;

        r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.BottomBarModeOptionsWrapper mIndicatorBottomBarWrapper> = $r78;

        $r80 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.BottomBarModeOptionsWrapper mIndicatorBottomBarWrapper>;

        $r77 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.CaptureLayoutHelper mCaptureLayoutHelper>;

        virtualinvoke $r80.<com.android.camera.ui.BottomBarModeOptionsWrapper: void setCaptureLayoutHelper(com.android.camera.CaptureLayoutHelper)>($r77);

        $r90 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.TextureViewHelper mTextureViewHelper>;

        $r79 = new com.android.camera.app.CameraAppUI$9;

        specialinvoke $r79.<com.android.camera.app.CameraAppUI$9: void <init>(com.android.camera.app.CameraAppUI)>(r0);

        virtualinvoke $r90.<com.android.camera.TextureViewHelper: void addPreviewAreaSizeChangedListener(com.android.camera.ui.PreviewStatusListener$PreviewAreaChangedListener)>($r79);

        $r92 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.TextureViewHelper mTextureViewHelper>;

        $r89 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.ModeListView mModeListView>;

        virtualinvoke $r92.<com.android.camera.TextureViewHelper: void addPreviewAreaSizeChangedListener(com.android.camera.ui.PreviewStatusListener$PreviewAreaChangedListener)>($r89);

        $r86 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.TextureViewHelper mTextureViewHelper>;

        $r91 = new com.android.camera.app.CameraAppUI$10;

        specialinvoke $r91.<com.android.camera.app.CameraAppUI$10: void <init>(com.android.camera.app.CameraAppUI)>(r0);

        virtualinvoke $r86.<com.android.camera.TextureViewHelper: void addAspectRatioChangedListener(com.android.camera.ui.PreviewStatusListener$PreviewAspectRatioChangedListener)>($r91);

        return;
    }

    public android.widget.FrameLayout getModuleRootView()
    {
        com.android.camera.app.CameraAppUI r0;
        android.widget.FrameLayout $r1;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: android.widget.FrameLayout mCameraRootView>;

        return $r1;
    }

    public void clearModuleUI()
    {
        com.android.camera.app.CameraAppUI r0;
        android.widget.FrameLayout $r1, $r4, $r5, $r8;
        com.android.camera.app.AppController $r2;
        com.android.camera.module.ModuleController $r3;
        com.android.camera.ui.PreviewOverlay $r6;
        android.view.View $r7;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: android.widget.FrameLayout mModuleUI>;

        if $r1 == null goto label1;

        $r8 = r0.<com.android.camera.app.CameraAppUI: android.widget.FrameLayout mModuleUI>;

        virtualinvoke $r8.<android.widget.FrameLayout: void removeAllViews()>();

     label1:
        $r2 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        $r3 = interfaceinvoke $r2.<com.android.camera.app.AppController: com.android.camera.module.ModuleController getCurrentModuleController()>();

        virtualinvoke r0.<com.android.camera.app.CameraAppUI: void removeShutterListener(com.android.camera.ShutterButton$OnShutterButtonListener)>($r3);

        $r4 = r0.<com.android.camera.app.CameraAppUI: android.widget.FrameLayout mTutorialsPlaceHolderWrapper>;

        virtualinvoke $r4.<android.widget.FrameLayout: void removeAllViews()>();

        $r5 = r0.<com.android.camera.app.CameraAppUI: android.widget.FrameLayout mTutorialsPlaceHolderWrapper>;

        virtualinvoke $r5.<android.widget.FrameLayout: void setVisibility(int)>(8);

        virtualinvoke r0.<com.android.camera.app.CameraAppUI: void setShutterButtonEnabled(boolean)>(1);

        r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.PreviewStatusListener mPreviewStatusListener> = null;

        $r6 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.PreviewOverlay mPreviewOverlay>;

        virtualinvoke $r6.<com.android.camera.ui.PreviewOverlay: void reset()>();

        $r7 = r0.<com.android.camera.app.CameraAppUI: android.view.View mFocusOverlay>;

        virtualinvoke $r7.<android.view.View: void setVisibility(int)>(4);

        return;
    }

    public void onPreviewReadyToStart()
    {
        com.android.camera.app.CameraAppUI r0;
        int $i0;
        com.android.camera.app.AppController $r1;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $i0 = r0.<com.android.camera.app.CameraAppUI: int mModeCoverState>;

        if $i0 != 1 goto label1;

        r0.<com.android.camera.app.CameraAppUI: int mModeCoverState> = 2;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        interfaceinvoke $r1.<com.android.camera.app.AppController: void setupOneShotPreviewListener()>();

     label1:
        return;
    }

    public void onPreviewStarted()
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.debug.Log$Tag $r1;
        int $i0;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r1 = <com.android.camera.app.CameraAppUI: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void v(com.android.camera.debug.Log$Tag,java.lang.String)>($r1, "onPreviewStarted");

        $i0 = r0.<com.android.camera.app.CameraAppUI: int mModeCoverState>;

        if $i0 != 1 goto label1;

        r0.<com.android.camera.app.CameraAppUI: int mModeCoverState> = 3;

     label1:
        virtualinvoke r0.<com.android.camera.app.CameraAppUI: void enableModeOptions()>();

        return;
    }

    public void onNewPreviewFrame()
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.debug.Log$Tag $r1;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r1 = <com.android.camera.app.CameraAppUI: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void v(com.android.camera.debug.Log$Tag,java.lang.String)>($r1, "onNewPreviewFrame");

        staticinvoke <android.util.CameraPerformanceTracker: void onEvent(int)>(5);

        specialinvoke r0.<com.android.camera.app.CameraAppUI: void hideModeCover()>();

        return;
    }

    public void enableModeOptions()
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.widget.ModeOptionsOverlay $r1;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.widget.ModeOptionsOverlay mModeOptionsOverlay>;

        virtualinvoke $r1.<com.android.camera.widget.ModeOptionsOverlay: void setToggleClickable(boolean)>(1);

        return;
    }

    public void onShutterButtonClick()
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.widget.ModeOptionsOverlay $r1;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.widget.ModeOptionsOverlay mModeOptionsOverlay>;

        virtualinvoke $r1.<com.android.camera.widget.ModeOptionsOverlay: void setToggleClickable(boolean)>(0);

        return;
    }

    public void onShutterCoordinate(com.android.camera.ui.TouchCoordinate)
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.ui.TouchCoordinate r1;

        r0 := @this: com.android.camera.app.CameraAppUI;

        r1 := @parameter0: com.android.camera.ui.TouchCoordinate;

        return;
    }

    public void onShutterButtonFocus(boolean)
    {
        com.android.camera.app.CameraAppUI r0;
        boolean z0;

        r0 := @this: com.android.camera.app.CameraAppUI;

        z0 := @parameter0: boolean;

        return;
    }

    public void onModeSelected(int)
    {
        com.android.camera.app.CameraAppUI r0;
        int i0, i1, i2;
        com.android.camera.app.CameraAppUI$11 $r1;
        com.android.camera.ShutterButton $r2;
        com.android.camera.app.AppController $r3, $r4, $r5;

        r0 := @this: com.android.camera.app.CameraAppUI;

        i0 := @parameter0: int;

        $r1 = new com.android.camera.app.CameraAppUI$11;

        specialinvoke $r1.<com.android.camera.app.CameraAppUI$11: void <init>(com.android.camera.app.CameraAppUI)>(r0);

        r0.<com.android.camera.app.CameraAppUI: java.lang.Runnable mHideCoverRunnable> = $r1;

        $r2 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ShutterButton mShutterButton>;

        virtualinvoke $r2.<com.android.camera.ShutterButton: void setAlpha(float)>(1.0F);

        r0.<com.android.camera.app.CameraAppUI: int mModeCoverState> = 1;

        $r3 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        i1 = interfaceinvoke $r3.<com.android.camera.app.AppController: int getCurrentModuleIndex()>();

        $r4 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        interfaceinvoke $r4.<com.android.camera.app.AppController: void onModeSelected(int)>(i0);

        $r5 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        i2 = interfaceinvoke $r5.<com.android.camera.app.AppController: int getCurrentModuleIndex()>();

        if i1 != i2 goto label1;

        specialinvoke r0.<com.android.camera.app.CameraAppUI: void hideModeCover()>();

     label1:
        specialinvoke r0.<com.android.camera.app.CameraAppUI: void updateModeSpecificUIColors()>();

        return;
    }

    private void updateModeSpecificUIColors()
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.app.AppController $r1;
        int $i0;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        $i0 = interfaceinvoke $r1.<com.android.camera.app.AppController: int getCurrentModuleIndex()>();

        virtualinvoke r0.<com.android.camera.app.CameraAppUI: void setBottomBarColorsForModeIndex(int)>($i0);

        return;
    }

    public void onSettingsSelected()
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.app.AppController $r1, $r4;
        com.android.camera.settings.SettingsManager $r2;
        com.android.camera.ui.ModeListView $r3;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        $r2 = interfaceinvoke $r1.<com.android.camera.app.AppController: com.android.camera.settings.SettingsManager getSettingsManager()>();

        virtualinvoke $r2.<com.android.camera.settings.SettingsManager: void set(java.lang.String,java.lang.String,boolean)>("default_scope", "pref_should_show_settings_button_cling", 0);

        $r3 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.ModeListView mModeListView>;

        virtualinvoke $r3.<com.android.camera.ui.ModeListView: void setShouldShowSettingsCling(boolean)>(0);

        $r4 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        interfaceinvoke $r4.<com.android.camera.app.AppController: void onSettingsSelected()>();

        return;
    }

    public int getCurrentModeIndex()
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.app.AppController $r1;
        int $i0;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        $i0 = interfaceinvoke $r1.<com.android.camera.app.AppController: int getCurrentModuleIndex()>();

        return $i0;
    }

    public void startPeekAnimation(android.graphics.Bitmap, boolean, java.lang.String)
    {
        com.android.camera.app.CameraAppUI r0;
        android.graphics.Bitmap r1;
        boolean z0;
        java.lang.String r2;
        com.android.camera.widget.FilmstripLayout $r3;
        int $i0;
        com.android.camera.widget.PeekView $r4;

        r0 := @this: com.android.camera.app.CameraAppUI;

        r1 := @parameter0: android.graphics.Bitmap;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.String;

        $r3 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.widget.FilmstripLayout mFilmstripLayout>;

        $i0 = virtualinvoke $r3.<com.android.camera.widget.FilmstripLayout: int getVisibility()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        $r4 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.widget.PeekView mPeekView>;

        virtualinvoke $r4.<com.android.camera.widget.PeekView: void startPeekAnimation(android.graphics.Bitmap,boolean,java.lang.String)>(r1, z0, r2);

        return;
    }

    public void startPreCaptureAnimation(boolean)
    {
        com.android.camera.app.CameraAppUI r0;
        boolean z0;
        com.android.camera.ui.CaptureAnimationOverlay $r1;

        r0 := @this: com.android.camera.app.CameraAppUI;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.CaptureAnimationOverlay mCaptureOverlay>;

        virtualinvoke $r1.<com.android.camera.ui.CaptureAnimationOverlay: void startFlashAnimation(boolean)>(z0);

        return;
    }

    public void cancelPreCaptureAnimation()
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.AnimationManager $r1;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.AnimationManager mAnimationManager>;

        virtualinvoke $r1.<com.android.camera.AnimationManager: void cancelAnimations()>();

        return;
    }

    public void cancelPostCaptureAnimation()
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.AnimationManager $r1;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.AnimationManager mAnimationManager>;

        virtualinvoke $r1.<com.android.camera.AnimationManager: void cancelAnimations()>();

        return;
    }

    public com.android.camera.filmstrip.FilmstripContentPanel getFilmstripContentPanel()
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.filmstrip.FilmstripContentPanel $r1;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.filmstrip.FilmstripContentPanel mFilmstripPanel>;

        return $r1;
    }

    public com.android.camera.app.CameraAppUI$BottomPanel getFilmstripBottomControls()
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.app.FilmstripBottomPanel $r1;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.FilmstripBottomPanel mFilmstripBottomControls>;

        return $r1;
    }

    public void showBottomControls()
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.app.FilmstripBottomPanel $r1;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.FilmstripBottomPanel mFilmstripBottomControls>;

        virtualinvoke $r1.<com.android.camera.app.FilmstripBottomPanel: void show()>();

        return;
    }

    public void hideBottomControls()
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.app.FilmstripBottomPanel $r1;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.FilmstripBottomPanel mFilmstripBottomControls>;

        virtualinvoke $r1.<com.android.camera.app.FilmstripBottomPanel: void hide()>();

        return;
    }

    public void setFilmstripBottomControlsListener(com.android.camera.app.CameraAppUI$BottomPanel$Listener)
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.app.CameraAppUI$BottomPanel$Listener r1;
        com.android.camera.app.FilmstripBottomPanel $r2;

        r0 := @this: com.android.camera.app.CameraAppUI;

        r1 := @parameter0: com.android.camera.app.CameraAppUI$BottomPanel$Listener;

        $r2 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.FilmstripBottomPanel mFilmstripBottomControls>;

        virtualinvoke $r2.<com.android.camera.app.FilmstripBottomPanel: void setListener(com.android.camera.app.CameraAppUI$BottomPanel$Listener)>(r1);

        return;
    }

    public android.graphics.SurfaceTexture getSurfaceTexture()
    {
        com.android.camera.app.CameraAppUI r0;
        android.graphics.SurfaceTexture $r1;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: android.graphics.SurfaceTexture mSurface>;

        return $r1;
    }

    public int getSurfaceWidth()
    {
        com.android.camera.app.CameraAppUI r0;
        int $i0;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $i0 = r0.<com.android.camera.app.CameraAppUI: int mSurfaceWidth>;

        return $i0;
    }

    public int getSurfaceHeight()
    {
        com.android.camera.app.CameraAppUI r0;
        int $i0;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $i0 = r0.<com.android.camera.app.CameraAppUI: int mSurfaceHeight>;

        return $i0;
    }

    public void onSurfaceTextureAvailable(android.graphics.SurfaceTexture, int, int)
    {
        com.android.camera.app.CameraAppUI r0;
        android.graphics.SurfaceTexture r1;
        int i0, i1;
        com.android.camera.debug.Log$Tag $r2;
        com.android.camera.ui.PreviewStatusListener $r3, $r4;

        r0 := @this: com.android.camera.app.CameraAppUI;

        r1 := @parameter0: android.graphics.SurfaceTexture;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0.<com.android.camera.app.CameraAppUI: android.graphics.SurfaceTexture mSurface> = r1;

        r0.<com.android.camera.app.CameraAppUI: int mSurfaceWidth> = i0;

        r0.<com.android.camera.app.CameraAppUI: int mSurfaceHeight> = i1;

        $r2 = <com.android.camera.app.CameraAppUI: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void v(com.android.camera.debug.Log$Tag,java.lang.String)>($r2, "SurfaceTexture is available");

        $r3 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.PreviewStatusListener mPreviewStatusListener>;

        if $r3 == null goto label1;

        $r4 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.PreviewStatusListener mPreviewStatusListener>;

        interfaceinvoke $r4.<com.android.camera.ui.PreviewStatusListener: void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int)>(r1, i0, i1);

     label1:
        virtualinvoke r0.<com.android.camera.app.CameraAppUI: void enableModeOptions()>();

        return;
    }

    public void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture, int, int)
    {
        com.android.camera.app.CameraAppUI r0;
        android.graphics.SurfaceTexture r1;
        int i0, i1;
        com.android.camera.ui.PreviewStatusListener $r2, $r3;

        r0 := @this: com.android.camera.app.CameraAppUI;

        r1 := @parameter0: android.graphics.SurfaceTexture;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0.<com.android.camera.app.CameraAppUI: android.graphics.SurfaceTexture mSurface> = r1;

        r0.<com.android.camera.app.CameraAppUI: int mSurfaceWidth> = i0;

        r0.<com.android.camera.app.CameraAppUI: int mSurfaceHeight> = i1;

        $r2 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.PreviewStatusListener mPreviewStatusListener>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.PreviewStatusListener mPreviewStatusListener>;

        interfaceinvoke $r3.<com.android.camera.ui.PreviewStatusListener: void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int)>(r1, i0, i1);

     label1:
        return;
    }

    public boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture)
    {
        com.android.camera.app.CameraAppUI r0;
        android.graphics.SurfaceTexture r1;
        com.android.camera.debug.Log$Tag $r2;
        com.android.camera.ui.PreviewStatusListener $r3, $r4;
        boolean $z0;

        r0 := @this: com.android.camera.app.CameraAppUI;

        r1 := @parameter0: android.graphics.SurfaceTexture;

        r0.<com.android.camera.app.CameraAppUI: android.graphics.SurfaceTexture mSurface> = null;

        $r2 = <com.android.camera.app.CameraAppUI: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void v(com.android.camera.debug.Log$Tag,java.lang.String)>($r2, "SurfaceTexture is destroyed");

        $r3 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.PreviewStatusListener mPreviewStatusListener>;

        if $r3 == null goto label1;

        $r4 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.PreviewStatusListener mPreviewStatusListener>;

        $z0 = interfaceinvoke $r4.<com.android.camera.ui.PreviewStatusListener: boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture)>(r1);

        return $z0;

     label1:
        return 0;
    }

    public void onSurfaceTextureUpdated(android.graphics.SurfaceTexture)
    {
        com.android.camera.app.CameraAppUI r0;
        android.graphics.SurfaceTexture r1;
        com.android.camera.ui.PreviewStatusListener $r2, $r4;
        int $i0;
        com.android.camera.debug.Log$Tag $r3;

        r0 := @this: com.android.camera.app.CameraAppUI;

        r1 := @parameter0: android.graphics.SurfaceTexture;

        r0.<com.android.camera.app.CameraAppUI: android.graphics.SurfaceTexture mSurface> = r1;

        $r2 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.PreviewStatusListener mPreviewStatusListener>;

        if $r2 == null goto label1;

        $r4 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.PreviewStatusListener mPreviewStatusListener>;

        interfaceinvoke $r4.<com.android.camera.ui.PreviewStatusListener: void onSurfaceTextureUpdated(android.graphics.SurfaceTexture)>(r1);

     label1:
        $i0 = r0.<com.android.camera.app.CameraAppUI: int mModeCoverState>;

        if $i0 != 3 goto label2;

        $r3 = <com.android.camera.app.CameraAppUI: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void v(com.android.camera.debug.Log$Tag,java.lang.String)>($r3, "hiding cover via onSurfaceTextureUpdated");

        staticinvoke <android.util.CameraPerformanceTracker: void onEvent(int)>(5);

        specialinvoke r0.<com.android.camera.app.CameraAppUI: void hideModeCover()>();

     label2:
        return;
    }

    public void showGridLines()
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.ui.GridLines $r1, $r2;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.GridLines mGridLines>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.GridLines mGridLines>;

        virtualinvoke $r2.<com.android.camera.ui.GridLines: void setVisibility(int)>(0);

     label1:
        return;
    }

    public void hideGridLines()
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.ui.GridLines $r1, $r2;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.GridLines mGridLines>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.GridLines mGridLines>;

        virtualinvoke $r2.<com.android.camera.ui.GridLines: void setVisibility(int)>(4);

     label1:
        return;
    }

    public com.android.camera.ButtonManager$ButtonCallback getGridLinesCallback()
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.app.CameraAppUI$12 $r1;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r1 = new com.android.camera.app.CameraAppUI$12;

        specialinvoke $r1.<com.android.camera.app.CameraAppUI$12: void <init>(com.android.camera.app.CameraAppUI)>(r0);

        return $r1;
    }

    public void showModeOptions()
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.widget.ModeOptionsOverlay $r1;

        r0 := @this: com.android.camera.app.CameraAppUI;

        virtualinvoke r0.<com.android.camera.app.CameraAppUI: void enableModeOptions()>();

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.widget.ModeOptionsOverlay mModeOptionsOverlay>;

        virtualinvoke $r1.<com.android.camera.widget.ModeOptionsOverlay: void setVisibility(int)>(0);

        return;
    }

    public void hideModeOptions()
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.widget.ModeOptionsOverlay $r1;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.widget.ModeOptionsOverlay mModeOptionsOverlay>;

        virtualinvoke $r1.<com.android.camera.widget.ModeOptionsOverlay: void setVisibility(int)>(4);

        return;
    }

    public void resetBottomControls(com.android.camera.module.ModuleController, int)
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.module.ModuleController r1;
        int i0;
        boolean $z0;
        com.android.camera.CaptureLayoutHelper $r2, $r3;

        r0 := @this: com.android.camera.app.CameraAppUI;

        r1 := @parameter0: com.android.camera.module.ModuleController;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.camera.app.CameraAppUI: boolean areBottomControlsUsed(com.android.camera.module.ModuleController)>(r1);

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.android.camera.app.CameraAppUI: void setBottomBarShutterIcon(int)>(i0);

        $r3 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.CaptureLayoutHelper mCaptureLayoutHelper>;

        virtualinvoke $r3.<com.android.camera.CaptureLayoutHelper: void setShowBottomBar(boolean)>(1);

        goto label2;

     label1:
        $r2 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.CaptureLayoutHelper mCaptureLayoutHelper>;

        virtualinvoke $r2.<com.android.camera.CaptureLayoutHelper: void setShowBottomBar(boolean)>(0);

     label2:
        return;
    }

    private boolean areBottomControlsUsed(com.android.camera.module.ModuleController)
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.module.ModuleController r1;
        boolean $z0;

        r0 := @this: com.android.camera.app.CameraAppUI;

        r1 := @parameter0: com.android.camera.module.ModuleController;

        $z0 = interfaceinvoke r1.<com.android.camera.module.ModuleController: boolean isUsingBottomBar()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.android.camera.app.CameraAppUI: void showBottomBar()>();

        virtualinvoke r0.<com.android.camera.app.CameraAppUI: void showModeOptions()>();

        return 1;

     label1:
        virtualinvoke r0.<com.android.camera.app.CameraAppUI: void hideBottomBar()>();

        virtualinvoke r0.<com.android.camera.app.CameraAppUI: void hideModeOptions()>();

        return 0;
    }

    public void showBottomBar()
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.ui.BottomBar $r1;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.BottomBar mBottomBar>;

        virtualinvoke $r1.<com.android.camera.ui.BottomBar: void setVisibility(int)>(0);

        return;
    }

    public void hideBottomBar()
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.ui.BottomBar $r1;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.BottomBar mBottomBar>;

        virtualinvoke $r1.<com.android.camera.ui.BottomBar: void setVisibility(int)>(4);

        return;
    }

    public void setBottomBarColor(int)
    {
        com.android.camera.app.CameraAppUI r0;
        int i0;
        com.android.camera.ui.BottomBar $r1;

        r0 := @this: com.android.camera.app.CameraAppUI;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.BottomBar mBottomBar>;

        virtualinvoke $r1.<com.android.camera.ui.BottomBar: void setBackgroundColor(int)>(i0);

        return;
    }

    public void setBottomBarColorsForModeIndex(int)
    {
        com.android.camera.app.CameraAppUI r0;
        int i0;
        com.android.camera.ui.BottomBar $r1;

        r0 := @this: com.android.camera.app.CameraAppUI;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.BottomBar mBottomBar>;

        virtualinvoke $r1.<com.android.camera.ui.BottomBar: void setColorsForModeIndex(int)>(i0);

        return;
    }

    public void setBottomBarShutterIcon(int)
    {
        com.android.camera.app.CameraAppUI r0;
        int i0, i1;
        com.android.camera.app.AppController $r1;
        android.content.Context $r2;
        com.android.camera.ui.BottomBar $r3;

        r0 := @this: com.android.camera.app.CameraAppUI;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        $r2 = interfaceinvoke $r1.<com.android.camera.app.AppController: android.content.Context getAndroidContext()>();

        i1 = staticinvoke <com.android.camera.util.CameraUtil: int getCameraShutterIconId(int,android.content.Context)>(i0, $r2);

        $r3 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.BottomBar mBottomBar>;

        virtualinvoke $r3.<com.android.camera.ui.BottomBar: void setShutterButtonIcon(int)>(i1);

        return;
    }

    public void animateBottomBarToVideoStop(int)
    {
        com.android.camera.app.CameraAppUI r0;
        int i0;
        com.android.camera.ui.BottomBar $r1;

        r0 := @this: com.android.camera.app.CameraAppUI;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.BottomBar mBottomBar>;

        virtualinvoke $r1.<com.android.camera.ui.BottomBar: void animateToVideoStop(int)>(i0);

        return;
    }

    public void animateBottomBarToFullSize(int)
    {
        com.android.camera.app.CameraAppUI r0;
        int i0;
        com.android.camera.ui.BottomBar $r1;

        r0 := @this: com.android.camera.app.CameraAppUI;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.BottomBar mBottomBar>;

        virtualinvoke $r1.<com.android.camera.ui.BottomBar: void animateToFullSize(int)>(i0);

        return;
    }

    public void setShutterButtonEnabled(boolean)
    {
        com.android.camera.app.CameraAppUI r0;
        boolean z0;
        com.android.camera.app.CameraAppUI$13 $r1;
        com.android.camera.ui.BottomBar $r2;

        r0 := @this: com.android.camera.app.CameraAppUI;

        z0 := @parameter0: boolean;

        $r2 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.BottomBar mBottomBar>;

        $r1 = new com.android.camera.app.CameraAppUI$13;

        specialinvoke $r1.<com.android.camera.app.CameraAppUI$13: void <init>(com.android.camera.app.CameraAppUI,boolean)>(r0, z0);

        virtualinvoke $r2.<com.android.camera.ui.BottomBar: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    public void setShutterButtonImportantToA11y(boolean)
    {
        com.android.camera.app.CameraAppUI r0;
        boolean z0;
        com.android.camera.ui.BottomBar $r1;

        r0 := @this: com.android.camera.app.CameraAppUI;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.BottomBar mBottomBar>;

        virtualinvoke $r1.<com.android.camera.ui.BottomBar: void setShutterButtonImportantToA11y(boolean)>(z0);

        return;
    }

    public boolean isShutterButtonEnabled()
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.ui.BottomBar $r1;
        boolean $z0;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.BottomBar mBottomBar>;

        $z0 = virtualinvoke $r1.<com.android.camera.ui.BottomBar: boolean isShutterButtonEnabled()>();

        return $z0;
    }

    public void setIndicatorBottomBarWrapperVisible(boolean)
    {
        com.android.camera.app.CameraAppUI r0;
        boolean z0;
        com.android.camera.ui.BottomBarModeOptionsWrapper $r1;
        byte $b0;

        r0 := @this: com.android.camera.app.CameraAppUI;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.BottomBarModeOptionsWrapper mIndicatorBottomBarWrapper>;

        if z0 == 0 goto label1;

        $b0 = 0;

        goto label2;

     label1:
        $b0 = 4;

     label2:
        virtualinvoke $r1.<com.android.camera.ui.BottomBarModeOptionsWrapper: void setVisibility(int)>($b0);

        return;
    }

    public void setBottomBarVisible(boolean)
    {
        com.android.camera.app.CameraAppUI r0;
        boolean z0;
        com.android.camera.ui.BottomBar $r1;
        byte $b0;

        r0 := @this: com.android.camera.app.CameraAppUI;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.BottomBar mBottomBar>;

        if z0 == 0 goto label1;

        $b0 = 0;

        goto label2;

     label1:
        $b0 = 4;

     label2:
        virtualinvoke $r1.<com.android.camera.ui.BottomBar: void setVisibility(int)>($b0);

        return;
    }

    public void addShutterListener(com.android.camera.ShutterButton$OnShutterButtonListener)
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.ShutterButton$OnShutterButtonListener r1;
        com.android.camera.ShutterButton $r2;

        r0 := @this: com.android.camera.app.CameraAppUI;

        r1 := @parameter0: com.android.camera.ShutterButton$OnShutterButtonListener;

        $r2 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ShutterButton mShutterButton>;

        virtualinvoke $r2.<com.android.camera.ShutterButton: void addOnShutterButtonListener(com.android.camera.ShutterButton$OnShutterButtonListener)>(r1);

        return;
    }

    public void addLetterboxing(int)
    {
        com.android.camera.app.CameraAppUI r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.widget.FrameLayout$LayoutParams r1, r2;
        android.view.View $r3, $r5, $r10, $r12, $r15, $r16;
        android.view.ViewGroup$LayoutParams $r4, $r6;
        android.widget.FrameLayout $r7, $r8, $r9, $r11, $r13, $r14;

        r0 := @this: com.android.camera.app.CameraAppUI;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.camera.app.CameraAppUI: android.view.View mLetterBoxer1>;

        $r4 = virtualinvoke $r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r1 = (android.widget.FrameLayout$LayoutParams) $r4;

        $r5 = r0.<com.android.camera.app.CameraAppUI: android.view.View mLetterBoxer2>;

        $r6 = virtualinvoke $r5.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.widget.FrameLayout$LayoutParams) $r6;

        $r7 = r0.<com.android.camera.app.CameraAppUI: android.widget.FrameLayout mCameraRootView>;

        $i1 = virtualinvoke $r7.<android.widget.FrameLayout: int getWidth()>();

        $r8 = r0.<com.android.camera.app.CameraAppUI: android.widget.FrameLayout mCameraRootView>;

        $i2 = virtualinvoke $r8.<android.widget.FrameLayout: int getHeight()>();

        if $i1 >= $i2 goto label1;

        r1.<android.widget.FrameLayout$LayoutParams: int width> = i0;

        $r13 = r0.<com.android.camera.app.CameraAppUI: android.widget.FrameLayout mCameraRootView>;

        $i5 = virtualinvoke $r13.<android.widget.FrameLayout: int getHeight()>();

        r1.<android.widget.FrameLayout$LayoutParams: int height> = $i5;

        r1.<android.widget.FrameLayout$LayoutParams: int gravity> = 3;

        $r15 = r0.<com.android.camera.app.CameraAppUI: android.view.View mLetterBoxer1>;

        virtualinvoke $r15.<android.view.View: void setVisibility(int)>(0);

        r2.<android.widget.FrameLayout$LayoutParams: int width> = i0;

        $r14 = r0.<com.android.camera.app.CameraAppUI: android.widget.FrameLayout mCameraRootView>;

        $i6 = virtualinvoke $r14.<android.widget.FrameLayout: int getHeight()>();

        r2.<android.widget.FrameLayout$LayoutParams: int height> = $i6;

        r2.<android.widget.FrameLayout$LayoutParams: int gravity> = 5;

        $r16 = r0.<com.android.camera.app.CameraAppUI: android.view.View mLetterBoxer2>;

        virtualinvoke $r16.<android.view.View: void setVisibility(int)>(0);

        goto label2;

     label1:
        r1.<android.widget.FrameLayout$LayoutParams: int height> = i0;

        $r9 = r0.<com.android.camera.app.CameraAppUI: android.widget.FrameLayout mCameraRootView>;

        $i3 = virtualinvoke $r9.<android.widget.FrameLayout: int getWidth()>();

        r1.<android.widget.FrameLayout$LayoutParams: int width> = $i3;

        r1.<android.widget.FrameLayout$LayoutParams: int gravity> = 48;

        $r10 = r0.<com.android.camera.app.CameraAppUI: android.view.View mLetterBoxer1>;

        virtualinvoke $r10.<android.view.View: void setVisibility(int)>(0);

        r2.<android.widget.FrameLayout$LayoutParams: int height> = i0;

        $r11 = r0.<com.android.camera.app.CameraAppUI: android.widget.FrameLayout mCameraRootView>;

        $i4 = virtualinvoke $r11.<android.widget.FrameLayout: int getWidth()>();

        r2.<android.widget.FrameLayout$LayoutParams: int width> = $i4;

        r2.<android.widget.FrameLayout$LayoutParams: int gravity> = 80;

        $r12 = r0.<com.android.camera.app.CameraAppUI: android.view.View mLetterBoxer2>;

        virtualinvoke $r12.<android.view.View: void setVisibility(int)>(0);

     label2:
        return;
    }

    public void hideLetterboxing()
    {
        com.android.camera.app.CameraAppUI r0;
        android.view.View $r1, $r2;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: android.view.View mLetterBoxer1>;

        virtualinvoke $r1.<android.view.View: void setVisibility(int)>(8);

        $r2 = r0.<com.android.camera.app.CameraAppUI: android.view.View mLetterBoxer2>;

        virtualinvoke $r2.<android.view.View: void setVisibility(int)>(8);

        return;
    }

    public void removeShutterListener(com.android.camera.ShutterButton$OnShutterButtonListener)
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.ShutterButton$OnShutterButtonListener r1;
        com.android.camera.ShutterButton $r2;

        r0 := @this: com.android.camera.app.CameraAppUI;

        r1 := @parameter0: com.android.camera.ShutterButton$OnShutterButtonListener;

        $r2 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ShutterButton mShutterButton>;

        virtualinvoke $r2.<com.android.camera.ShutterButton: void removeOnShutterButtonListener(com.android.camera.ShutterButton$OnShutterButtonListener)>(r1);

        return;
    }

    public void transitionToCapture()
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.module.ModuleController r1;
        com.android.camera.app.AppController $r2;
        com.android.camera.hardware.HardwareSpec $r3;
        com.android.camera.app.CameraAppUI$BottomBarUISpec $r4;
        com.android.camera.ui.BottomBar $r5;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r2 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        r1 = interfaceinvoke $r2.<com.android.camera.app.AppController: com.android.camera.module.ModuleController getCurrentModuleController()>();

        $r3 = interfaceinvoke r1.<com.android.camera.module.ModuleController: com.android.camera.hardware.HardwareSpec getHardwareSpec()>();

        $r4 = interfaceinvoke r1.<com.android.camera.module.ModuleController: com.android.camera.app.CameraAppUI$BottomBarUISpec getBottomBarSpec()>();

        virtualinvoke r0.<com.android.camera.app.CameraAppUI: void applyModuleSpecs(com.android.camera.hardware.HardwareSpec,com.android.camera.app.CameraAppUI$BottomBarUISpec)>($r3, $r4);

        $r5 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.BottomBar mBottomBar>;

        virtualinvoke $r5.<com.android.camera.ui.BottomBar: void transitionToCapture()>();

        return;
    }

    public void transitionToCancel()
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.module.ModuleController r1;
        com.android.camera.app.AppController $r2;
        com.android.camera.hardware.HardwareSpec $r3;
        com.android.camera.app.CameraAppUI$BottomBarUISpec $r4;
        com.android.camera.ui.BottomBar $r5;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r2 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        r1 = interfaceinvoke $r2.<com.android.camera.app.AppController: com.android.camera.module.ModuleController getCurrentModuleController()>();

        $r3 = interfaceinvoke r1.<com.android.camera.module.ModuleController: com.android.camera.hardware.HardwareSpec getHardwareSpec()>();

        $r4 = interfaceinvoke r1.<com.android.camera.module.ModuleController: com.android.camera.app.CameraAppUI$BottomBarUISpec getBottomBarSpec()>();

        virtualinvoke r0.<com.android.camera.app.CameraAppUI: void applyModuleSpecs(com.android.camera.hardware.HardwareSpec,com.android.camera.app.CameraAppUI$BottomBarUISpec)>($r3, $r4);

        $r5 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.BottomBar mBottomBar>;

        virtualinvoke $r5.<com.android.camera.ui.BottomBar: void transitionToCancel()>();

        return;
    }

    public void transitionToIntentCaptureLayout()
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.module.ModuleController r1;
        com.android.camera.app.AppController $r2;
        com.android.camera.hardware.HardwareSpec $r3;
        com.android.camera.app.CameraAppUI$BottomBarUISpec $r4;
        com.android.camera.ui.BottomBar $r5;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r2 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        r1 = interfaceinvoke $r2.<com.android.camera.app.AppController: com.android.camera.module.ModuleController getCurrentModuleController()>();

        $r3 = interfaceinvoke r1.<com.android.camera.module.ModuleController: com.android.camera.hardware.HardwareSpec getHardwareSpec()>();

        $r4 = interfaceinvoke r1.<com.android.camera.module.ModuleController: com.android.camera.app.CameraAppUI$BottomBarUISpec getBottomBarSpec()>();

        virtualinvoke r0.<com.android.camera.app.CameraAppUI: void applyModuleSpecs(com.android.camera.hardware.HardwareSpec,com.android.camera.app.CameraAppUI$BottomBarUISpec)>($r3, $r4);

        $r5 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.BottomBar mBottomBar>;

        virtualinvoke $r5.<com.android.camera.ui.BottomBar: void transitionToIntentCaptureLayout()>();

        return;
    }

    public void transitionToIntentReviewLayout()
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.module.ModuleController r1;
        com.android.camera.app.AppController $r2;
        com.android.camera.hardware.HardwareSpec $r3;
        com.android.camera.app.CameraAppUI$BottomBarUISpec $r4;
        com.android.camera.ui.BottomBar $r5;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r2 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        r1 = interfaceinvoke $r2.<com.android.camera.app.AppController: com.android.camera.module.ModuleController getCurrentModuleController()>();

        $r3 = interfaceinvoke r1.<com.android.camera.module.ModuleController: com.android.camera.hardware.HardwareSpec getHardwareSpec()>();

        $r4 = interfaceinvoke r1.<com.android.camera.module.ModuleController: com.android.camera.app.CameraAppUI$BottomBarUISpec getBottomBarSpec()>();

        virtualinvoke r0.<com.android.camera.app.CameraAppUI: void applyModuleSpecs(com.android.camera.hardware.HardwareSpec,com.android.camera.app.CameraAppUI$BottomBarUISpec)>($r3, $r4);

        $r5 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.BottomBar mBottomBar>;

        virtualinvoke $r5.<com.android.camera.ui.BottomBar: void transitionToIntentReviewLayout()>();

        return;
    }

    public boolean isInIntentReview()
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.ui.BottomBar $r1;
        boolean $z0;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.BottomBar mBottomBar>;

        $z0 = virtualinvoke $r1.<com.android.camera.ui.BottomBar: boolean isInIntentReview()>();

        return $z0;
    }

    public void onSettingChanged(com.android.camera.settings.SettingsManager, java.lang.String)
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.settings.SettingsManager r1;
        java.lang.String r2;
        com.android.camera.module.ModuleController r3;
        boolean $z0;
        com.android.camera.app.AppController $r4;
        com.android.camera.hardware.HardwareSpec $r5;
        com.android.camera.app.CameraAppUI$BottomBarUISpec $r6;

        r0 := @this: com.android.camera.app.CameraAppUI;

        r1 := @parameter0: com.android.camera.settings.SettingsManager;

        r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("pref_camera_hdr_key");

        if $z0 == 0 goto label1;

        $r4 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        r3 = interfaceinvoke $r4.<com.android.camera.app.AppController: com.android.camera.module.ModuleController getCurrentModuleController()>();

        $r5 = interfaceinvoke r3.<com.android.camera.module.ModuleController: com.android.camera.hardware.HardwareSpec getHardwareSpec()>();

        $r6 = interfaceinvoke r3.<com.android.camera.module.ModuleController: com.android.camera.app.CameraAppUI$BottomBarUISpec getBottomBarSpec()>();

        virtualinvoke r0.<com.android.camera.app.CameraAppUI: void applyModuleSpecs(com.android.camera.hardware.HardwareSpec,com.android.camera.app.CameraAppUI$BottomBarUISpec)>($r5, $r6);

     label1:
        return;
    }

    public void applyModuleSpecs(com.android.camera.hardware.HardwareSpec, com.android.camera.app.CameraAppUI$BottomBarUISpec)
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.hardware.HardwareSpec r1;
        com.android.camera.app.CameraAppUI$BottomBarUISpec r2;
        com.android.camera.ButtonManager r3;
        com.android.camera.settings.SettingsManager r4, $r10, $r16;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28;
        com.android.camera.app.AppController $r5, $r6, $r7, $r9, $r15, $r23, $r25;
        com.android.camera.app.CameraProvider $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.view.View$OnClickListener $r11, $r12, $r13, $r14;
        float $f0;
        com.android.camera.app.CameraAppUI$BottomBarUISpec$ExposureCompensationSetCallback $r17;
        com.android.camera.ButtonManager$ButtonCallback $r18, $r19, $r20, $r21, $r26, $r27, $r28, $r29, $r30;
        java.lang.String $r22, $r24;

        r0 := @this: com.android.camera.app.CameraAppUI;

        r1 := @parameter0: com.android.camera.hardware.HardwareSpec;

        r2 := @parameter1: com.android.camera.app.CameraAppUI$BottomBarUISpec;

        if r1 == null goto label01;

        if r2 != null goto label02;

     label01:
        return;

     label02:
        $r5 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        r3 = interfaceinvoke $r5.<com.android.camera.app.AppController: com.android.camera.ButtonManager getButtonManager()>();

        $r6 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        r4 = interfaceinvoke $r6.<com.android.camera.app.AppController: com.android.camera.settings.SettingsManager getSettingsManager()>();

        virtualinvoke r3.<com.android.camera.ButtonManager: void setToInitialState()>();

        $r7 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        $r8 = interfaceinvoke $r7.<com.android.camera.app.AppController: com.android.camera.app.CameraProvider getCameraProvider()>();

        $i0 = interfaceinvoke $r8.<com.android.camera.app.CameraProvider: int getNumberOfCameras()>();

        if $i0 <= 1 goto label04;

        $z26 = interfaceinvoke r1.<com.android.camera.hardware.HardwareSpec: boolean isFrontCameraSupported()>();

        if $z26 == 0 goto label04;

        $z27 = r2.<com.android.camera.app.CameraAppUI$BottomBarUISpec: boolean enableCamera>;

        if $z27 == 0 goto label03;

        $r27 = r2.<com.android.camera.app.CameraAppUI$BottomBarUISpec: com.android.camera.ButtonManager$ButtonCallback cameraCallback>;

        virtualinvoke r3.<com.android.camera.ButtonManager: void initializeButton(int,com.android.camera.ButtonManager$ButtonCallback)>(3, $r27);

        goto label05;

     label03:
        virtualinvoke r3.<com.android.camera.ButtonManager: void disableButton(int)>(3);

        goto label05;

     label04:
        virtualinvoke r3.<com.android.camera.ButtonManager: void hideButton(int)>(3);

     label05:
        $r9 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        $r10 = interfaceinvoke $r9.<com.android.camera.app.AppController: com.android.camera.settings.SettingsManager getSettingsManager()>();

        z0 = virtualinvoke $r10.<com.android.camera.settings.SettingsManager: boolean getBoolean(java.lang.String,java.lang.String)>("default_scope", "pref_flash_supported_back_camera");

        $z2 = r2.<com.android.camera.app.CameraAppUI$BottomBarUISpec: boolean hideFlash>;

        if $z2 != 0 goto label06;

        if z0 != 0 goto label07;

     label06:
        virtualinvoke r3.<com.android.camera.ButtonManager: void hideButton(int)>(0);

        goto label12;

     label07:
        $z25 = interfaceinvoke r1.<com.android.camera.hardware.HardwareSpec: boolean isFlashSupported()>();

        if $z25 == 0 goto label11;

        $z24 = r2.<com.android.camera.app.CameraAppUI$BottomBarUISpec: boolean enableFlash>;

        if $z24 == 0 goto label08;

        $r30 = r2.<com.android.camera.app.CameraAppUI$BottomBarUISpec: com.android.camera.ButtonManager$ButtonCallback flashCallback>;

        virtualinvoke r3.<com.android.camera.ButtonManager: void initializeButton(int,com.android.camera.ButtonManager$ButtonCallback)>(0, $r30);

        goto label12;

     label08:
        $z23 = r2.<com.android.camera.app.CameraAppUI$BottomBarUISpec: boolean enableTorchFlash>;

        if $z23 == 0 goto label09;

        $r29 = r2.<com.android.camera.app.CameraAppUI$BottomBarUISpec: com.android.camera.ButtonManager$ButtonCallback flashCallback>;

        virtualinvoke r3.<com.android.camera.ButtonManager: void initializeButton(int,com.android.camera.ButtonManager$ButtonCallback)>(1, $r29);

        goto label12;

     label09:
        $z28 = r2.<com.android.camera.app.CameraAppUI$BottomBarUISpec: boolean enableHdrPlusFlash>;

        if $z28 == 0 goto label10;

        $r28 = r2.<com.android.camera.app.CameraAppUI$BottomBarUISpec: com.android.camera.ButtonManager$ButtonCallback flashCallback>;

        virtualinvoke r3.<com.android.camera.ButtonManager: void initializeButton(int,com.android.camera.ButtonManager$ButtonCallback)>(2, $r28);

        goto label12;

     label10:
        virtualinvoke r3.<com.android.camera.ButtonManager: void disableButton(int)>(0);

        goto label12;

     label11:
        virtualinvoke r3.<com.android.camera.ButtonManager: void disableButton(int)>(0);

     label12:
        $z4 = r2.<com.android.camera.app.CameraAppUI$BottomBarUISpec: boolean hideHdr>;

        if $z4 != 0 goto label13;

        $z19 = r0.<com.android.camera.app.CameraAppUI: boolean mIsCaptureIntent>;

        if $z19 == 0 goto label14;

     label13:
        virtualinvoke r3.<com.android.camera.ButtonManager: void hideButton(int)>(4);

        goto label19;

     label14:
        $z18 = interfaceinvoke r1.<com.android.camera.hardware.HardwareSpec: boolean isHdrPlusSupported()>();

        if $z18 == 0 goto label16;

        $z22 = r2.<com.android.camera.app.CameraAppUI$BottomBarUISpec: boolean enableHdr>;

        if $z22 == 0 goto label15;

        $r25 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        $r24 = interfaceinvoke $r25.<com.android.camera.app.AppController: java.lang.String getModuleScope()>();

        $z21 = staticinvoke <com.android.camera.settings.Keys: boolean isCameraBackFacing(com.android.camera.settings.SettingsManager,java.lang.String)>(r4, $r24);

        if $z21 == 0 goto label15;

        $r26 = r2.<com.android.camera.app.CameraAppUI$BottomBarUISpec: com.android.camera.ButtonManager$ButtonCallback hdrCallback>;

        virtualinvoke r3.<com.android.camera.ButtonManager: void initializeButton(int,com.android.camera.ButtonManager$ButtonCallback)>(4, $r26);

        goto label19;

     label15:
        virtualinvoke r3.<com.android.camera.ButtonManager: void disableButton(int)>(4);

        goto label19;

     label16:
        $z17 = interfaceinvoke r1.<com.android.camera.hardware.HardwareSpec: boolean isHdrSupported()>();

        if $z17 == 0 goto label18;

        $z16 = r2.<com.android.camera.app.CameraAppUI$BottomBarUISpec: boolean enableHdr>;

        if $z16 == 0 goto label17;

        $r23 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        $r22 = interfaceinvoke $r23.<com.android.camera.app.AppController: java.lang.String getModuleScope()>();

        $z20 = staticinvoke <com.android.camera.settings.Keys: boolean isCameraBackFacing(com.android.camera.settings.SettingsManager,java.lang.String)>(r4, $r22);

        if $z20 == 0 goto label17;

        $r21 = r2.<com.android.camera.app.CameraAppUI$BottomBarUISpec: com.android.camera.ButtonManager$ButtonCallback hdrCallback>;

        virtualinvoke r3.<com.android.camera.ButtonManager: void initializeButton(int,com.android.camera.ButtonManager$ButtonCallback)>(5, $r21);

        goto label19;

     label17:
        virtualinvoke r3.<com.android.camera.ButtonManager: void disableButton(int)>(5);

        goto label19;

     label18:
        virtualinvoke r3.<com.android.camera.ButtonManager: void hideButton(int)>(4);

     label19:
        $z3 = r2.<com.android.camera.app.CameraAppUI$BottomBarUISpec: boolean hideGridLines>;

        if $z3 == 0 goto label20;

        virtualinvoke r3.<com.android.camera.ButtonManager: void hideButton(int)>(10);

        virtualinvoke r0.<com.android.camera.app.CameraAppUI: void hideGridLines()>();

        goto label24;

     label20:
        $z6 = r2.<com.android.camera.app.CameraAppUI$BottomBarUISpec: boolean enableGridLines>;

        if $z6 == 0 goto label23;

        $r20 = r2.<com.android.camera.app.CameraAppUI$BottomBarUISpec: com.android.camera.ButtonManager$ButtonCallback gridLinesCallback>;

        if $r20 == null goto label21;

        $r18 = r2.<com.android.camera.app.CameraAppUI$BottomBarUISpec: com.android.camera.ButtonManager$ButtonCallback gridLinesCallback>;

        goto label22;

     label21:
        $r18 = virtualinvoke r0.<com.android.camera.app.CameraAppUI: com.android.camera.ButtonManager$ButtonCallback getGridLinesCallback()>();

     label22:
        virtualinvoke r3.<com.android.camera.ButtonManager: void initializeButton(int,com.android.camera.ButtonManager$ButtonCallback)>(10, $r18);

        goto label24;

     label23:
        virtualinvoke r3.<com.android.camera.ButtonManager: void disableButton(int)>(10);

        virtualinvoke r0.<com.android.camera.app.CameraAppUI: void hideGridLines()>();

     label24:
        $z5 = r2.<com.android.camera.app.CameraAppUI$BottomBarUISpec: boolean enableSelfTimer>;

        if $z5 == 0 goto label25;

        virtualinvoke r3.<com.android.camera.ButtonManager: void initializeButton(int,com.android.camera.ButtonManager$ButtonCallback)>(12, null);

        goto label27;

     label25:
        $z8 = r2.<com.android.camera.app.CameraAppUI$BottomBarUISpec: boolean showSelfTimer>;

        if $z8 == 0 goto label26;

        virtualinvoke r3.<com.android.camera.ButtonManager: void disableButton(int)>(12);

        goto label27;

     label26:
        virtualinvoke r3.<com.android.camera.ButtonManager: void hideButton(int)>(12);

     label27:
        $z7 = r2.<com.android.camera.app.CameraAppUI$BottomBarUISpec: boolean enablePanoOrientation>;

        if $z7 == 0 goto label28;

        $i5 = staticinvoke <com.android.camera.util.PhotoSphereHelper: int getPanoramaOrientationOptionArrayId()>();

        if $i5 <= 0 goto label28;

        $r19 = r2.<com.android.camera.app.CameraAppUI$BottomBarUISpec: com.android.camera.ButtonManager$ButtonCallback panoOrientationCallback>;

        virtualinvoke r3.<com.android.camera.ButtonManager: void initializePanoOrientationButtons(com.android.camera.ButtonManager$ButtonCallback)>($r19);

     label28:
        $z10 = r2.<com.android.camera.app.CameraAppUI$BottomBarUISpec: boolean enableExposureCompensation>;

        if $z10 == 0 goto label30;

        $i3 = r2.<com.android.camera.app.CameraAppUI$BottomBarUISpec: int minExposureCompensation>;

        if $i3 != 0 goto label29;

        $i4 = r2.<com.android.camera.app.CameraAppUI$BottomBarUISpec: int maxExposureCompensation>;

        if $i4 == 0 goto label30;

     label29:
        $r15 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        $r16 = interfaceinvoke $r15.<com.android.camera.app.AppController: com.android.camera.settings.SettingsManager getSettingsManager()>();

        $z14 = virtualinvoke $r16.<com.android.camera.settings.SettingsManager: boolean getBoolean(java.lang.String,java.lang.String)>("default_scope", "pref_camera_exposure_compensation_key");

        if $z14 == 0 goto label30;

        $z15 = 1;

        goto label31;

     label30:
        $z15 = 0;

     label31:
        z1 = $z15;

        if z1 == 0 goto label32;

        virtualinvoke r3.<com.android.camera.ButtonManager: void initializePushButton(int,android.view.View$OnClickListener)>(11, null);

        $i2 = r2.<com.android.camera.app.CameraAppUI$BottomBarUISpec: int minExposureCompensation>;

        $i1 = r2.<com.android.camera.app.CameraAppUI$BottomBarUISpec: int maxExposureCompensation>;

        $f0 = r2.<com.android.camera.app.CameraAppUI$BottomBarUISpec: float exposureCompensationStep>;

        virtualinvoke r3.<com.android.camera.ButtonManager: void setExposureCompensationParameters(int,int,float)>($i2, $i1, $f0);

        $r17 = r2.<com.android.camera.app.CameraAppUI$BottomBarUISpec: com.android.camera.app.CameraAppUI$BottomBarUISpec$ExposureCompensationSetCallback exposureCompensationSetCallback>;

        virtualinvoke r3.<com.android.camera.ButtonManager: void setExposureCompensationCallback(com.android.camera.app.CameraAppUI$BottomBarUISpec$ExposureCompensationSetCallback)>($r17);

        virtualinvoke r3.<com.android.camera.ButtonManager: void updateExposureButtons()>();

        goto label33;

     label32:
        virtualinvoke r3.<com.android.camera.ButtonManager: void hideButton(int)>(11);

        virtualinvoke r3.<com.android.camera.ButtonManager: void setExposureCompensationCallback(com.android.camera.app.CameraAppUI$BottomBarUISpec$ExposureCompensationSetCallback)>(null);

     label33:
        $z9 = r2.<com.android.camera.app.CameraAppUI$BottomBarUISpec: boolean showCancel>;

        if $z9 == 0 goto label34;

        $r14 = r2.<com.android.camera.app.CameraAppUI$BottomBarUISpec: android.view.View$OnClickListener cancelCallback>;

        virtualinvoke r3.<com.android.camera.ButtonManager: void initializePushButton(int,android.view.View$OnClickListener)>(6, $r14);

     label34:
        $z12 = r2.<com.android.camera.app.CameraAppUI$BottomBarUISpec: boolean showDone>;

        if $z12 == 0 goto label35;

        $r12 = r2.<com.android.camera.app.CameraAppUI$BottomBarUISpec: android.view.View$OnClickListener doneCallback>;

        virtualinvoke r3.<com.android.camera.ButtonManager: void initializePushButton(int,android.view.View$OnClickListener)>(7, $r12);

     label35:
        $z11 = r2.<com.android.camera.app.CameraAppUI$BottomBarUISpec: boolean showRetake>;

        if $z11 == 0 goto label36;

        $r13 = r2.<com.android.camera.app.CameraAppUI$BottomBarUISpec: android.view.View$OnClickListener retakeCallback>;

        virtualinvoke r3.<com.android.camera.ButtonManager: void initializePushButton(int,android.view.View$OnClickListener)>(8, $r13);

     label36:
        $z13 = r2.<com.android.camera.app.CameraAppUI$BottomBarUISpec: boolean showReview>;

        if $z13 == 0 goto label37;

        $r11 = r2.<com.android.camera.app.CameraAppUI$BottomBarUISpec: android.view.View$OnClickListener reviewCallback>;

        virtualinvoke r3.<com.android.camera.ButtonManager: void initializePushButton(int,android.view.View$OnClickListener,int)>(9, $r11, 2130837733);

     label37:
        return;
    }

    public void showTutorial(com.android.camera.ui.AbstractTutorialOverlay, android.view.LayoutInflater)
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.ui.AbstractTutorialOverlay r1;
        android.view.LayoutInflater r2;
        android.widget.FrameLayout $r3;

        r0 := @this: com.android.camera.app.CameraAppUI;

        r1 := @parameter0: com.android.camera.ui.AbstractTutorialOverlay;

        r2 := @parameter1: android.view.LayoutInflater;

        $r3 = r0.<com.android.camera.app.CameraAppUI: android.widget.FrameLayout mTutorialsPlaceHolderWrapper>;

        virtualinvoke r1.<com.android.camera.ui.AbstractTutorialOverlay: void show(android.view.ViewGroup,android.view.LayoutInflater)>($r3, r2);

        return;
    }

    public void showFilmstrip()
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.ui.ModeListView $r1;
        com.android.camera.widget.FilmstripLayout $r2;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.ModeListView mModeListView>;

        virtualinvoke $r1.<com.android.camera.ui.ModeListView: boolean onBackPressed()>();

        $r2 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.widget.FilmstripLayout mFilmstripLayout>;

        virtualinvoke $r2.<com.android.camera.widget.FilmstripLayout: void showFilmstrip()>();

        return;
    }

    public void hideFilmstrip()
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.widget.FilmstripLayout $r1;

        r0 := @this: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.widget.FilmstripLayout mFilmstripLayout>;

        virtualinvoke $r1.<com.android.camera.widget.FilmstripLayout: void hideFilmstrip()>();

        return;
    }

    static com.android.camera.ui.PreviewStatusListener access$000(com.android.camera.app.CameraAppUI)
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.ui.PreviewStatusListener $r1;

        r0 := @parameter0: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.PreviewStatusListener mPreviewStatusListener>;

        return $r1;
    }

    static android.widget.FrameLayout access$100(com.android.camera.app.CameraAppUI)
    {
        com.android.camera.app.CameraAppUI r0;
        android.widget.FrameLayout $r1;

        r0 := @parameter0: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: android.widget.FrameLayout mCameraRootView>;

        return $r1;
    }

    static android.view.TextureView access$200(com.android.camera.app.CameraAppUI)
    {
        com.android.camera.app.CameraAppUI r0;
        android.view.TextureView $r1;

        r0 := @parameter0: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: android.view.TextureView mTextureView>;

        return $r1;
    }

    static com.android.camera.TextureViewHelper access$300(com.android.camera.app.CameraAppUI)
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.TextureViewHelper $r1;

        r0 := @parameter0: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.TextureViewHelper mTextureViewHelper>;

        return $r1;
    }

    static android.view.GestureDetector access$400(com.android.camera.app.CameraAppUI)
    {
        com.android.camera.app.CameraAppUI r0;
        android.view.GestureDetector $r1;

        r0 := @parameter0: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: android.view.GestureDetector mGestureDetector>;

        return $r1;
    }

    static int access$500(com.android.camera.app.CameraAppUI)
    {
        com.android.camera.app.CameraAppUI r0;
        int $i0;

        r0 := @parameter0: com.android.camera.app.CameraAppUI;

        $i0 = r0.<com.android.camera.app.CameraAppUI: int mSwipeState>;

        return $i0;
    }

    static boolean access$600(com.android.camera.app.CameraAppUI)
    {
        com.android.camera.app.CameraAppUI r0;
        boolean $z0;

        r0 := @parameter0: com.android.camera.app.CameraAppUI;

        $z0 = r0.<com.android.camera.app.CameraAppUI: boolean mIsCaptureIntent>;

        return $z0;
    }

    static boolean access$700(com.android.camera.app.CameraAppUI)
    {
        com.android.camera.app.CameraAppUI r0;
        boolean $z0;

        r0 := @parameter0: com.android.camera.app.CameraAppUI;

        $z0 = r0.<com.android.camera.app.CameraAppUI: boolean mSwipeEnabled>;

        return $z0;
    }

    static int access$800(com.android.camera.app.CameraAppUI)
    {
        com.android.camera.app.CameraAppUI r0;
        int $i0;

        r0 := @parameter0: com.android.camera.app.CameraAppUI;

        $i0 = r0.<com.android.camera.app.CameraAppUI: int mSlop>;

        return $i0;
    }

    static int access$502(com.android.camera.app.CameraAppUI, int)
    {
        com.android.camera.app.CameraAppUI r0;
        int i0;

        r0 := @parameter0: com.android.camera.app.CameraAppUI;

        i0 := @parameter1: int;

        r0.<com.android.camera.app.CameraAppUI: int mSwipeState> = i0;

        return i0;
    }

    static void access$900(com.android.camera.app.CameraAppUI, int)
    {
        com.android.camera.app.CameraAppUI r0;
        int i0;

        r0 := @parameter0: com.android.camera.app.CameraAppUI;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.camera.app.CameraAppUI: void onSwipeDetected(int)>(i0);

        return;
    }

    static com.android.camera.ui.ModeTransitionView access$1100(com.android.camera.app.CameraAppUI)
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.ui.ModeTransitionView $r1;

        r0 := @parameter0: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.ModeTransitionView mModeTransitionView>;

        return $r1;
    }

    static com.android.camera.app.AppController access$1200(com.android.camera.app.CameraAppUI)
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.app.AppController $r1;

        r0 := @parameter0: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.app.AppController mController>;

        return $r1;
    }

    static int access$1300(com.android.camera.app.CameraAppUI)
    {
        com.android.camera.app.CameraAppUI r0;
        int $i0;

        r0 := @parameter0: com.android.camera.app.CameraAppUI;

        $i0 = r0.<com.android.camera.app.CameraAppUI: int mLastRotation>;

        return $i0;
    }

    static com.android.camera.ui.BottomBarModeOptionsWrapper access$1400(com.android.camera.app.CameraAppUI)
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.ui.BottomBarModeOptionsWrapper $r1;

        r0 := @parameter0: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.BottomBarModeOptionsWrapper mIndicatorBottomBarWrapper>;

        return $r1;
    }

    static com.android.camera.ui.ModeListView access$1500(com.android.camera.app.CameraAppUI)
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.ui.ModeListView $r1;

        r0 := @parameter0: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.ModeListView mModeListView>;

        return $r1;
    }

    static int access$1302(com.android.camera.app.CameraAppUI, int)
    {
        com.android.camera.app.CameraAppUI r0;
        int i0;

        r0 := @parameter0: com.android.camera.app.CameraAppUI;

        i0 := @parameter1: int;

        r0.<com.android.camera.app.CameraAppUI: int mLastRotation> = i0;

        return i0;
    }

    static java.lang.Runnable access$1602(com.android.camera.app.CameraAppUI, java.lang.Runnable)
    {
        com.android.camera.app.CameraAppUI r0;
        java.lang.Runnable r1;

        r0 := @parameter0: com.android.camera.app.CameraAppUI;

        r1 := @parameter1: java.lang.Runnable;

        r0.<com.android.camera.app.CameraAppUI: java.lang.Runnable mHideCoverRunnable> = r1;

        return r1;
    }

    static int access$1702(com.android.camera.app.CameraAppUI, int)
    {
        com.android.camera.app.CameraAppUI r0;
        int i0;

        r0 := @parameter0: com.android.camera.app.CameraAppUI;

        i0 := @parameter1: int;

        r0.<com.android.camera.app.CameraAppUI: int mModeCoverState> = i0;

        return i0;
    }

    static void access$1800(com.android.camera.app.CameraAppUI)
    {
        com.android.camera.app.CameraAppUI r0;

        r0 := @parameter0: com.android.camera.app.CameraAppUI;

        specialinvoke r0.<com.android.camera.app.CameraAppUI: void showShimmyDelayed()>();

        return;
    }

    static com.android.camera.ui.MainActivityLayout access$2000(com.android.camera.app.CameraAppUI)
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.ui.MainActivityLayout $r1;

        r0 := @parameter0: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.MainActivityLayout mAppRootView>;

        return $r1;
    }

    static com.android.camera.widget.PeekView access$2100(com.android.camera.app.CameraAppUI)
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.widget.PeekView $r1;

        r0 := @parameter0: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.widget.PeekView mPeekView>;

        return $r1;
    }

    static com.android.camera.widget.ModeOptionsOverlay access$2200(com.android.camera.app.CameraAppUI)
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.widget.ModeOptionsOverlay $r1;

        r0 := @parameter0: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.widget.ModeOptionsOverlay mModeOptionsOverlay>;

        return $r1;
    }

    static com.android.camera.ui.BottomBar access$2300(com.android.camera.app.CameraAppUI)
    {
        com.android.camera.app.CameraAppUI r0;
        com.android.camera.ui.BottomBar $r1;

        r0 := @parameter0: com.android.camera.app.CameraAppUI;

        $r1 = r0.<com.android.camera.app.CameraAppUI: com.android.camera.ui.BottomBar mBottomBar>;

        return $r1;
    }

    static void <clinit>()
    {
        com.android.camera.debug.Log$Tag $r0;

        <com.android.camera.app.CameraAppUI: int DOWN_SAMPLE_RATE_FOR_SCREENSHOT> = 2;

        <com.android.camera.app.CameraAppUI: int COVER_WILL_HIDE_AT_NEXT_TEXTURE_UPDATE> = 3;

        <com.android.camera.app.CameraAppUI: int COVER_WILL_HIDE_AT_NEXT_FRAME> = 2;

        <com.android.camera.app.CameraAppUI: int COVER_SHOWN> = 1;

        <com.android.camera.app.CameraAppUI: int COVER_HIDDEN> = 0;

        <com.android.camera.app.CameraAppUI: int SWIPE_TIME_OUT_MS> = 500;

        <com.android.camera.app.CameraAppUI: int SWIPE_RIGHT> = 4;

        <com.android.camera.app.CameraAppUI: int SWIPE_LEFT> = 3;

        <com.android.camera.app.CameraAppUI: int SWIPE_DOWN> = 2;

        <com.android.camera.app.CameraAppUI: int SWIPE_UP> = 1;

        <com.android.camera.app.CameraAppUI: int IDLE> = 0;

        $r0 = new com.android.camera.debug.Log$Tag;

        specialinvoke $r0.<com.android.camera.debug.Log$Tag: void <init>(java.lang.String)>("CameraAppUI");

        <com.android.camera.app.CameraAppUI: com.android.camera.debug.Log$Tag TAG> = $r0;

        return;
    }
}
