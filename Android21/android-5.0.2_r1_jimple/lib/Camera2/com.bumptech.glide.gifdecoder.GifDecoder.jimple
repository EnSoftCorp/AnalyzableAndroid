public class com.bumptech.glide.gifdecoder.GifDecoder extends java.lang.Object
{
    private static final java.lang.String TAG;
    public static final int STATUS_OK;
    public static final int STATUS_FORMAT_ERROR;
    public static final int STATUS_OPEN_ERROR;
    private static final int MAX_STACK_SIZE;
    private static final int DISPOSAL_UNSPECIFIED;
    private static final int DISPOSAL_NONE;
    private static final int DISPOSAL_BACKGROUND;
    private static final int DISPOSAL_PREVIOUS;
    private int[] act;
    private java.nio.ByteBuffer rawData;
    private byte[] block;
    private short[] prefix;
    private byte[] suffix;
    private byte[] pixelStack;
    private byte[] mainPixels;
    private int[] mainScratch;
    private int framePointer;
    private byte[] data;
    private com.bumptech.glide.gifdecoder.GifHeader header;
    private java.lang.String id;
    private com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider bitmapProvider;

    public void <init>(com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider)
    {
        com.bumptech.glide.gifdecoder.GifDecoder r0;
        com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider r1;
        byte[] $r2;
        com.bumptech.glide.gifdecoder.GifHeader $r3;

        r0 := @this: com.bumptech.glide.gifdecoder.GifDecoder;

        r1 := @parameter0: com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = newarray (byte)[256];

        r0.<com.bumptech.glide.gifdecoder.GifDecoder: byte[] block> = $r2;

        r0.<com.bumptech.glide.gifdecoder.GifDecoder: int framePointer> = -1;

        r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider bitmapProvider> = r1;

        $r3 = new com.bumptech.glide.gifdecoder.GifHeader;

        specialinvoke $r3.<com.bumptech.glide.gifdecoder.GifHeader: void <init>()>();

        r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header> = $r3;

        return;
    }

    public int getWidth()
    {
        com.bumptech.glide.gifdecoder.GifDecoder r0;
        com.bumptech.glide.gifdecoder.GifHeader $r1;
        int $i0;

        r0 := @this: com.bumptech.glide.gifdecoder.GifDecoder;

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i0 = $r1.<com.bumptech.glide.gifdecoder.GifHeader: int width>;

        return $i0;
    }

    public int getHeight()
    {
        com.bumptech.glide.gifdecoder.GifDecoder r0;
        com.bumptech.glide.gifdecoder.GifHeader $r1;
        int $i0;

        r0 := @this: com.bumptech.glide.gifdecoder.GifDecoder;

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i0 = $r1.<com.bumptech.glide.gifdecoder.GifHeader: int height>;

        return $i0;
    }

    public boolean isTransparent()
    {
        com.bumptech.glide.gifdecoder.GifDecoder r0;
        com.bumptech.glide.gifdecoder.GifHeader $r1;
        boolean $z0;

        r0 := @this: com.bumptech.glide.gifdecoder.GifDecoder;

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $z0 = $r1.<com.bumptech.glide.gifdecoder.GifHeader: boolean isTransparent>;

        return $z0;
    }

    public int getGifByteSize()
    {
        com.bumptech.glide.gifdecoder.GifDecoder r0;
        byte[] $r1;
        int $i0;

        r0 := @this: com.bumptech.glide.gifdecoder.GifDecoder;

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: byte[] data>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public byte[] getData()
    {
        com.bumptech.glide.gifdecoder.GifDecoder r0;
        byte[] $r1;

        r0 := @this: com.bumptech.glide.gifdecoder.GifDecoder;

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: byte[] data>;

        return $r1;
    }

    public int getDecodedFramesByteSizeSum()
    {
        com.bumptech.glide.gifdecoder.GifDecoder r0;
        com.bumptech.glide.gifdecoder.GifHeader $r1, $r2, $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0;
        byte $b6;

        r0 := @this: com.bumptech.glide.gifdecoder.GifDecoder;

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i1 = $r1.<com.bumptech.glide.gifdecoder.GifHeader: int frameCount>;

        $r2 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i0 = $r2.<com.bumptech.glide.gifdecoder.GifHeader: int width>;

        $i3 = $i1 * $i0;

        $r3 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i2 = $r3.<com.bumptech.glide.gifdecoder.GifHeader: int height>;

        $i4 = $i3 * $i2;

        $r4 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $z0 = $r4.<com.bumptech.glide.gifdecoder.GifHeader: boolean isTransparent>;

        if $z0 == 0 goto label1;

        $b6 = 4;

        goto label2;

     label1:
        $b6 = 2;

     label2:
        $i5 = $i4 * $b6;

        return $i5;
    }

    public void advance()
    {
        com.bumptech.glide.gifdecoder.GifDecoder r0;
        int $i0, $i1, $i2, $i3;
        com.bumptech.glide.gifdecoder.GifHeader $r1;

        r0 := @this: com.bumptech.glide.gifdecoder.GifDecoder;

        $i0 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: int framePointer>;

        $i2 = $i0 + 1;

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i1 = $r1.<com.bumptech.glide.gifdecoder.GifHeader: int frameCount>;

        $i3 = $i2 % $i1;

        r0.<com.bumptech.glide.gifdecoder.GifDecoder: int framePointer> = $i3;

        return;
    }

    public int getDelay(int)
    {
        com.bumptech.glide.gifdecoder.GifDecoder r0;
        int i0, i1, $i2;
        com.bumptech.glide.gifdecoder.GifHeader $r1, $r2;
        java.util.List $r3;
        java.lang.Object $r4;
        com.bumptech.glide.gifdecoder.GifFrame $r5;

        r0 := @this: com.bumptech.glide.gifdecoder.GifDecoder;

        i0 := @parameter0: int;

        i1 = -1;

        if i0 < 0 goto label1;

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i2 = $r1.<com.bumptech.glide.gifdecoder.GifHeader: int frameCount>;

        if i0 >= $i2 goto label1;

        $r2 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r3 = $r2.<com.bumptech.glide.gifdecoder.GifHeader: java.util.List frames>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(i0);

        $r5 = (com.bumptech.glide.gifdecoder.GifFrame) $r4;

        i1 = $r5.<com.bumptech.glide.gifdecoder.GifFrame: int delay>;

     label1:
        return i1;
    }

    public int getNextDelay()
    {
        com.bumptech.glide.gifdecoder.GifDecoder r0;
        com.bumptech.glide.gifdecoder.GifHeader $r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.bumptech.glide.gifdecoder.GifDecoder;

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i0 = $r1.<com.bumptech.glide.gifdecoder.GifHeader: int frameCount>;

        if $i0 <= 0 goto label1;

        $i1 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: int framePointer>;

        if $i1 >= 0 goto label2;

     label1:
        return -1;

     label2:
        $i2 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: int framePointer>;

        $i3 = virtualinvoke r0.<com.bumptech.glide.gifdecoder.GifDecoder: int getDelay(int)>($i2);

        return $i3;
    }

    public int getFrameCount()
    {
        com.bumptech.glide.gifdecoder.GifDecoder r0;
        com.bumptech.glide.gifdecoder.GifHeader $r1;
        int $i0;

        r0 := @this: com.bumptech.glide.gifdecoder.GifDecoder;

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i0 = $r1.<com.bumptech.glide.gifdecoder.GifHeader: int frameCount>;

        return $i0;
    }

    public int getCurrentFrameIndex()
    {
        com.bumptech.glide.gifdecoder.GifDecoder r0;
        int $i0;

        r0 := @this: com.bumptech.glide.gifdecoder.GifDecoder;

        $i0 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: int framePointer>;

        return $i0;
    }

    public int getLoopCount()
    {
        com.bumptech.glide.gifdecoder.GifDecoder r0;
        com.bumptech.glide.gifdecoder.GifHeader $r1;
        int $i0;

        r0 := @this: com.bumptech.glide.gifdecoder.GifDecoder;

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i0 = $r1.<com.bumptech.glide.gifdecoder.GifHeader: int loopCount>;

        return $i0;
    }

    public java.lang.String getId()
    {
        com.bumptech.glide.gifdecoder.GifDecoder r0;
        java.lang.String $r1;

        r0 := @this: com.bumptech.glide.gifdecoder.GifDecoder;

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: java.lang.String id>;

        return $r1;
    }

    public android.graphics.Bitmap getNextFrame()
    {
        com.bumptech.glide.gifdecoder.GifDecoder r0;
        com.bumptech.glide.gifdecoder.GifFrame r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10;
        android.graphics.Bitmap r2;
        com.bumptech.glide.gifdecoder.GifHeader $r3, $r4, $r9, $r13, $r16, $r17;
        java.util.List $r5;
        java.lang.Object $r6;
        int[] $r7, $r8, $r10, $r12, $r14, $r15, $r18;
        boolean $z0, $z1;
        java.lang.String $r11;

        r0 := @this: com.bumptech.glide.gifdecoder.GifDecoder;

        $r3 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i1 = $r3.<com.bumptech.glide.gifdecoder.GifHeader: int frameCount>;

        if $i1 <= 0 goto label1;

        $i2 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: int framePointer>;

        if $i2 >= 0 goto label2;

     label1:
        return null;

     label2:
        $r4 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r5 = $r4.<com.bumptech.glide.gifdecoder.GifHeader: java.util.List frames>;

        $i3 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: int framePointer>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>($i3);

        r1 = (com.bumptech.glide.gifdecoder.GifFrame) $r6;

        $r7 = r1.<com.bumptech.glide.gifdecoder.GifFrame: int[] lct>;

        if $r7 != null goto label3;

        $r16 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r18 = $r16.<com.bumptech.glide.gifdecoder.GifHeader: int[] gct>;

        r0.<com.bumptech.glide.gifdecoder.GifDecoder: int[] act> = $r18;

        goto label4;

     label3:
        $r8 = r1.<com.bumptech.glide.gifdecoder.GifFrame: int[] lct>;

        r0.<com.bumptech.glide.gifdecoder.GifDecoder: int[] act> = $r8;

        $r9 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i5 = $r9.<com.bumptech.glide.gifdecoder.GifHeader: int bgIndex>;

        $i4 = r1.<com.bumptech.glide.gifdecoder.GifFrame: int transIndex>;

        if $i5 != $i4 goto label4;

        $r17 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r17.<com.bumptech.glide.gifdecoder.GifHeader: int bgColor> = 0;

     label4:
        i0 = 0;

        $z0 = r1.<com.bumptech.glide.gifdecoder.GifFrame: boolean transparency>;

        if $z0 == 0 goto label5;

        $r14 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: int[] act>;

        $i9 = r1.<com.bumptech.glide.gifdecoder.GifFrame: int transIndex>;

        i0 = $r14[$i9];

        $r15 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: int[] act>;

        $i10 = r1.<com.bumptech.glide.gifdecoder.GifFrame: int transIndex>;

        $r15[$i10] = 0;

     label5:
        $r10 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: int[] act>;

        if $r10 != null goto label6;

        $r11 = <com.bumptech.glide.gifdecoder.GifDecoder: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r11, "No Valid Color Table");

        $r13 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r13.<com.bumptech.glide.gifdecoder.GifHeader: int status> = 1;

        return null;

     label6:
        $i6 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: int framePointer>;

        r2 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifDecoder: android.graphics.Bitmap setPixels(int)>($i6);

        $z1 = r1.<com.bumptech.glide.gifdecoder.GifFrame: boolean transparency>;

        if $z1 == 0 goto label7;

        $r12 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: int[] act>;

        $i7 = r1.<com.bumptech.glide.gifdecoder.GifFrame: int transIndex>;

        $r12[$i7] = i0;

     label7:
        return r2;
    }

    public int read(java.io.InputStream, int)
    {
        com.bumptech.glide.gifdecoder.GifDecoder r0;
        java.io.InputStream r1;
        int i0, i1, i2, $i3, $i4, $i5, $i7;
        java.io.ByteArrayOutputStream r2, $r6;
        byte[] r3, $r7;
        com.bumptech.glide.gifdecoder.GifHeader $r4, $r5;
        java.lang.String $r8, $r11;
        java.io.IOException $r9, $r10, r12, r13;

        r0 := @this: com.bumptech.glide.gifdecoder.GifDecoder;

        r1 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        if r1 == null goto label08;

     label01:
        if i0 <= 0 goto label02;

        $i7 = i0 + 4096;

        goto label03;

     label02:
        $i7 = 16384;

     label03:
        i1 = $i7;

        $r6 = new java.io.ByteArrayOutputStream;

        specialinvoke $r6.<java.io.ByteArrayOutputStream: void <init>(int)>(i1);

        r2 = $r6;

        r3 = newarray (byte)[16384];

     label04:
        $i4 = lengthof r3;

        $i5 = virtualinvoke r1.<java.io.InputStream: int read(byte[],int,int)>(r3, 0, $i4);

        i2 = $i5;

        if $i5 == -1 goto label05;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r3, 0, i2);

        goto label04;

     label05:
        virtualinvoke r2.<java.io.ByteArrayOutputStream: void flush()>();

        $r7 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke r0.<com.bumptech.glide.gifdecoder.GifDecoder: int read(byte[])>($r7);

     label06:
        goto label09;

     label07:
        $r9 := @caughtexception;

        r12 = $r9;

        $r8 = <com.bumptech.glide.gifdecoder.GifDecoder: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r8, "Error reading data from stream", r12);

        goto label09;

     label08:
        $r4 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r4.<com.bumptech.glide.gifdecoder.GifHeader: int status> = 2;

     label09:
        if r1 == null goto label10;

        virtualinvoke r1.<java.io.InputStream: void close()>();

     label10:
        goto label12;

     label11:
        $r10 := @caughtexception;

        r13 = $r10;

        $r11 = <com.bumptech.glide.gifdecoder.GifDecoder: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r11, "Error closing stream", r13);

     label12:
        $r5 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i3 = $r5.<com.bumptech.glide.gifdecoder.GifHeader: int status>;

        return $i3;

        catch java.io.IOException from label01 to label06 with label07;
        catch java.io.IOException from label09 to label10 with label11;
    }

    public void setData(java.lang.String, com.bumptech.glide.gifdecoder.GifHeader, byte[])
    {
        com.bumptech.glide.gifdecoder.GifDecoder r0;
        java.lang.String r1;
        com.bumptech.glide.gifdecoder.GifHeader r2;
        byte[] r3, $r10;
        java.nio.ByteBuffer $r4, $r5, $r8;
        java.nio.ByteOrder $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        int[] $r11;

        r0 := @this: com.bumptech.glide.gifdecoder.GifDecoder;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.bumptech.glide.gifdecoder.GifHeader;

        r3 := @parameter2: byte[];

        r0.<com.bumptech.glide.gifdecoder.GifDecoder: java.lang.String id> = r1;

        r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header> = r2;

        r0.<com.bumptech.glide.gifdecoder.GifDecoder: byte[] data> = r3;

        $r4 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r3);

        r0.<com.bumptech.glide.gifdecoder.GifDecoder: java.nio.ByteBuffer rawData> = $r4;

        $r5 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: java.nio.ByteBuffer rawData>;

        virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $r8 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: java.nio.ByteBuffer rawData>;

        $r7 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        virtualinvoke $r8.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r7);

        $i1 = r2.<com.bumptech.glide.gifdecoder.GifHeader: int width>;

        $i0 = r2.<com.bumptech.glide.gifdecoder.GifHeader: int height>;

        $i2 = $i1 * $i0;

        $r10 = newarray (byte)[$i2];

        r0.<com.bumptech.glide.gifdecoder.GifDecoder: byte[] mainPixels> = $r10;

        $i4 = r2.<com.bumptech.glide.gifdecoder.GifHeader: int width>;

        $i3 = r2.<com.bumptech.glide.gifdecoder.GifHeader: int height>;

        $i5 = $i4 * $i3;

        $r11 = newarray (int)[$i5];

        r0.<com.bumptech.glide.gifdecoder.GifDecoder: int[] mainScratch> = $r11;

        return;
    }

    public int read(byte[])
    {
        com.bumptech.glide.gifdecoder.GifDecoder r0;
        byte[] r1, $r13;
        com.bumptech.glide.gifdecoder.GifHeaderParser $r2;
        com.bumptech.glide.gifdecoder.GifHeader $r3, $r4, $r11, $r12, $r14, $r15;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.nio.ByteBuffer $r5, $r6, $r9;
        java.nio.ByteOrder $r8;
        int[] $r16;

        r0 := @this: com.bumptech.glide.gifdecoder.GifDecoder;

        r1 := @parameter0: byte[];

        r0.<com.bumptech.glide.gifdecoder.GifDecoder: byte[] data> = r1;

        $r2 = new com.bumptech.glide.gifdecoder.GifHeaderParser;

        specialinvoke $r2.<com.bumptech.glide.gifdecoder.GifHeaderParser: void <init>(byte[])>(r1);

        $r3 = virtualinvoke $r2.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader parseHeader()>();

        r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header> = $r3;

        if r1 == null goto label1;

        $r5 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r1);

        r0.<com.bumptech.glide.gifdecoder.GifDecoder: java.nio.ByteBuffer rawData> = $r5;

        $r6 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: java.nio.ByteBuffer rawData>;

        virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $r9 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: java.nio.ByteBuffer rawData>;

        $r8 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        virtualinvoke $r9.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r8);

        $r11 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i2 = $r11.<com.bumptech.glide.gifdecoder.GifHeader: int width>;

        $r12 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i1 = $r12.<com.bumptech.glide.gifdecoder.GifHeader: int height>;

        $i3 = $i2 * $i1;

        $r13 = newarray (byte)[$i3];

        r0.<com.bumptech.glide.gifdecoder.GifDecoder: byte[] mainPixels> = $r13;

        $r15 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i4 = $r15.<com.bumptech.glide.gifdecoder.GifHeader: int width>;

        $r14 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i5 = $r14.<com.bumptech.glide.gifdecoder.GifHeader: int height>;

        $i6 = $i4 * $i5;

        $r16 = newarray (int)[$i6];

        r0.<com.bumptech.glide.gifdecoder.GifDecoder: int[] mainScratch> = $r16;

     label1:
        $r4 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i0 = $r4.<com.bumptech.glide.gifdecoder.GifHeader: int status>;

        return $i0;
    }

    private android.graphics.Bitmap setPixels(int)
    {
        com.bumptech.glide.gifdecoder.GifDecoder r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, i39, i40, i41, i43, i44, i45, i46;
        com.bumptech.glide.gifdecoder.GifFrame r1, r2;
        int[] r3, $r14;
        short s11;
        com.bumptech.glide.gifdecoder.GifHeader $r4, $r8, $r9, $r10, $r11, $r12, $r13, $r15, $r17, $r18, $r19, $r20;
        java.lang.Object $r5, $r22;
        java.util.List $r6, $r21;
        boolean $z0, $z1, $z2;
        byte[] $r7, $r16;
        byte $b27, b42;
        android.graphics.Bitmap r23;

        r0 := @this: com.bumptech.glide.gifdecoder.GifDecoder;

        i0 := @parameter0: int;

        $r4 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r6 = $r4.<com.bumptech.glide.gifdecoder.GifHeader: java.util.List frames>;

        $r5 = interfaceinvoke $r6.<java.util.List: java.lang.Object get(int)>(i0);

        r1 = (com.bumptech.glide.gifdecoder.GifFrame) $r5;

        r2 = null;

        i1 = i0 - 1;

        if i1 < 0 goto label01;

        $r19 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r21 = $r19.<com.bumptech.glide.gifdecoder.GifHeader: java.util.List frames>;

        $r22 = interfaceinvoke $r21.<java.util.List: java.lang.Object get(int)>(i1);

        r2 = (com.bumptech.glide.gifdecoder.GifFrame) $r22;

     label01:
        r3 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: int[] mainScratch>;

        if r2 == null goto label07;

        $i28 = r2.<com.bumptech.glide.gifdecoder.GifFrame: int dispose>;

        if $i28 <= 0 goto label07;

        $i33 = r2.<com.bumptech.glide.gifdecoder.GifFrame: int dispose>;

        if $i33 != 2 goto label10;

        i2 = 0;

        $z2 = r1.<com.bumptech.glide.gifdecoder.GifFrame: boolean transparency>;

        if $z2 != 0 goto label02;

        $r20 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        i2 = $r20.<com.bumptech.glide.gifdecoder.GifHeader: int bgColor>;

     label02:
        i3 = 0;

     label03:
        $i32 = r2.<com.bumptech.glide.gifdecoder.GifFrame: int ih>;

        if i3 >= $i32 goto label06;

        $i31 = r2.<com.bumptech.glide.gifdecoder.GifFrame: int iy>;

        $i35 = $i31 + i3;

        $r18 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i36 = $r18.<com.bumptech.glide.gifdecoder.GifHeader: int width>;

        $i38 = $i35 * $i36;

        $i34 = r2.<com.bumptech.glide.gifdecoder.GifFrame: int ix>;

        i4 = $i38 + $i34;

        $i37 = r2.<com.bumptech.glide.gifdecoder.GifFrame: int iw>;

        i5 = i4 + $i37;

        i6 = i4;

     label04:
        if i6 >= i5 goto label05;

        r3[i6] = i2;

        i6 = i6 + 1;

        goto label04;

     label05:
        i3 = i3 + 1;

        goto label03;

     label06:
        goto label10;

     label07:
        i39 = 0;

        $z0 = r1.<com.bumptech.glide.gifdecoder.GifFrame: boolean transparency>;

        if $z0 != 0 goto label08;

        $r17 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        i39 = $r17.<com.bumptech.glide.gifdecoder.GifHeader: int bgColor>;

     label08:
        i40 = 0;

     label09:
        $i13 = lengthof r3;

        if i40 >= $i13 goto label10;

        r3[i40] = i39;

        i40 = i40 + 1;

        goto label09;

     label10:
        $r7 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: byte[] mainPixels>;

        specialinvoke r0.<com.bumptech.glide.gifdecoder.GifDecoder: void decodeBitmapData(com.bumptech.glide.gifdecoder.GifFrame,byte[])>(r1, $r7);

        i41 = 1;

        b42 = 8;

        i43 = 0;

        i44 = 0;

     label11:
        $i14 = r1.<com.bumptech.glide.gifdecoder.GifFrame: int ih>;

        if i44 >= $i14 goto label21;

        i45 = i44;

        $z1 = r1.<com.bumptech.glide.gifdecoder.GifFrame: boolean interlace>;

        if $z1 == 0 goto label16;

        $i29 = r1.<com.bumptech.glide.gifdecoder.GifFrame: int ih>;

        if i43 < $i29 goto label15;

        i41 = i41 + 1;

        tableswitch(i41)
        {
            case 2: goto label12;
            case 3: goto label13;
            case 4: goto label14;
            default: goto label15;
        };

     label12:
        i43 = 4;

        goto label15;

     label13:
        i43 = 2;

        b42 = 4;

        goto label15;

     label14:
        i43 = 1;

        b42 = 2;

        goto label15;

     label15:
        i45 = i43;

        i43 = i43 + b42;

     label16:
        $i19 = r1.<com.bumptech.glide.gifdecoder.GifFrame: int iy>;

        i46 = i45 + $i19;

        $r12 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i18 = $r12.<com.bumptech.glide.gifdecoder.GifHeader: int height>;

        if i46 >= $i18 goto label20;

        $r11 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i21 = $r11.<com.bumptech.glide.gifdecoder.GifHeader: int width>;

        i7 = i46 * $i21;

        $i22 = r1.<com.bumptech.glide.gifdecoder.GifFrame: int ix>;

        i8 = i7 + $i22;

        $i20 = r1.<com.bumptech.glide.gifdecoder.GifFrame: int iw>;

        i9 = i8 + $i20;

        $r13 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i25 = $r13.<com.bumptech.glide.gifdecoder.GifHeader: int width>;

        $i26 = i7 + $i25;

        if $i26 >= i9 goto label17;

        $r15 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i30 = $r15.<com.bumptech.glide.gifdecoder.GifHeader: int width>;

        i9 = i7 + $i30;

     label17:
        $i23 = r1.<com.bumptech.glide.gifdecoder.GifFrame: int iw>;

        i10 = i44 * $i23;

     label18:
        if i8 >= i9 goto label20;

        $r16 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: byte[] mainPixels>;

        $i24 = i10;

        i10 = i10 + 1;

        $b27 = $r16[$i24];

        s11 = $b27 & 255;

        $r14 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: int[] act>;

        i12 = $r14[s11];

        if i12 == 0 goto label19;

        r3[i8] = i12;

     label19:
        i8 = i8 + 1;

        goto label18;

     label20:
        i44 = i44 + 1;

        goto label11;

     label21:
        r23 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifDecoder: android.graphics.Bitmap getNextBitmap()>();

        $r8 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i17 = $r8.<com.bumptech.glide.gifdecoder.GifHeader: int width>;

        $r10 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i15 = $r10.<com.bumptech.glide.gifdecoder.GifHeader: int width>;

        $r9 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i16 = $r9.<com.bumptech.glide.gifdecoder.GifHeader: int height>;

        virtualinvoke r23.<android.graphics.Bitmap: void setPixels(int[],int,int,int,int,int,int)>(r3, 0, $i17, 0, 0, $i15, $i16);

        return r23;
    }

    private void decodeBitmapData(com.bumptech.glide.gifdecoder.GifFrame, byte[])
    {
        com.bumptech.glide.gifdecoder.GifDecoder r0;
        com.bumptech.glide.gifdecoder.GifFrame r1;
        byte[] r2, $r3, $r5, $r6, $r7, $r9, $r10, $r11, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r22;
        byte b0, $b23, $b25, $b26, $b27, $b32, $b34, $b36, $b39, $b40;
        int i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, $i19, $i20, $i21, $i22, $i24, $i29, $i30, $i31, $i33, $i35, $i37, $i41, $i42, $i43, $i44, $i45, i46, i47;
        short[] $r4, $r8, $r12, $r20, $r23;
        short $s28, $s38;
        com.bumptech.glide.gifdecoder.GifHeader $r21, $r24;
        java.nio.ByteBuffer $r25;

        r0 := @this: com.bumptech.glide.gifdecoder.GifDecoder;

        r1 := @parameter0: com.bumptech.glide.gifdecoder.GifFrame;

        r2 := @parameter1: byte[];

        if r1 == null goto label01;

        $r25 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: java.nio.ByteBuffer rawData>;

        $i45 = r1.<com.bumptech.glide.gifdecoder.GifFrame: int bufferFrameStart>;

        virtualinvoke $r25.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i45);

     label01:
        b0 = -1;

        if r1 != null goto label02;

        $r24 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i42 = $r24.<com.bumptech.glide.gifdecoder.GifHeader: int width>;

        $r21 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i41 = $r21.<com.bumptech.glide.gifdecoder.GifHeader: int height>;

        $i43 = $i42 * $i41;

        goto label03;

     label02:
        $i19 = r1.<com.bumptech.glide.gifdecoder.GifFrame: int iw>;

        $i20 = r1.<com.bumptech.glide.gifdecoder.GifFrame: int ih>;

        $i43 = $i19 * $i20;

     label03:
        i1 = $i43;

        if r2 == null goto label04;

        $i44 = lengthof r2;

        if $i44 >= i1 goto label05;

     label04:
        r2 = newarray (byte)[i1];

     label05:
        $r4 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: short[] prefix>;

        if $r4 != null goto label06;

        $r23 = newarray (short)[4096];

        r0.<com.bumptech.glide.gifdecoder.GifDecoder: short[] prefix> = $r23;

     label06:
        $r3 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: byte[] suffix>;

        if $r3 != null goto label07;

        $r22 = newarray (byte)[4096];

        r0.<com.bumptech.glide.gifdecoder.GifDecoder: byte[] suffix> = $r22;

     label07:
        $r5 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: byte[] pixelStack>;

        if $r5 != null goto label08;

        $r18 = newarray (byte)[4097];

        r0.<com.bumptech.glide.gifdecoder.GifDecoder: byte[] pixelStack> = $r18;

     label08:
        i13 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifDecoder: int read()>();

        i3 = 1 << i13;

        i6 = i3 + 1;

        i2 = i3 + 2;

        i8 = b0;

        i5 = i13 + 1;

        $i22 = 1 << i5;

        i4 = $i22 - 1;

        i10 = 0;

     label09:
        if i10 >= i3 goto label10;

        $r20 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: short[] prefix>;

        $r20[i10] = 0;

        $r19 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: byte[] suffix>;

        $b40 = (byte) i10;

        $r19[i10] = $b40;

        i10 = i10 + 1;

        goto label09;

     label10:
        i18 = 0;

        i17 = 0;

        i15 = 0;

        i16 = 0;

        i11 = 0;

        i9 = 0;

        i14 = 0;

        i12 = 0;

     label11:
        if i12 >= i1 goto label23;

        if i15 != 0 goto label22;

        if i9 >= i5 goto label14;

        if i11 != 0 goto label13;

        i11 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifDecoder: int readBlock()>();

        if i11 > 0 goto label12;

        goto label23;

     label12:
        i18 = 0;

     label13:
        $r16 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: byte[] block>;

        $b39 = $r16[i18];

        $s38 = $b39 & 255;

        $i37 = $s38 << i9;

        i14 = i14 + $i37;

        i9 = i9 + 8;

        i18 = i18 + 1;

        i11 = i11 + -1;

        goto label11;

     label14:
        i46 = i14 & i4;

        i14 = i14 >> i5;

        i9 = i9 - i5;

        if i46 > i2 goto label23;

        if i46 != i6 goto label15;

        goto label23;

     label15:
        if i46 != i3 goto label16;

        i5 = i13 + 1;

        $i35 = 1 << i5;

        i4 = $i35 - 1;

        i2 = i3 + 2;

        i8 = b0;

        goto label11;

     label16:
        if i8 != b0 goto label17;

        $r17 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: byte[] pixelStack>;

        $i33 = i15;

        i15 = i15 + 1;

        $r14 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: byte[] suffix>;

        $b36 = $r14[i46];

        $r17[$i33] = $b36;

        i8 = i46;

        i16 = i46;

        goto label11;

     label17:
        i7 = i46;

        if i46 != i2 goto label18;

        $r15 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: byte[] pixelStack>;

        $i31 = i15;

        i15 = i15 + 1;

        $b34 = (byte) i16;

        $r15[$i31] = $b34;

        i46 = i8;

     label18:
        if i46 <= i3 goto label19;

        $r13 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: byte[] pixelStack>;

        $i29 = i15;

        i15 = i15 + 1;

        $r10 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: byte[] suffix>;

        $b32 = $r10[i46];

        $r13[$i29] = $b32;

        $r12 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: short[] prefix>;

        i46 = $r12[i46];

        goto label18;

     label19:
        $r7 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: byte[] suffix>;

        $b26 = $r7[i46];

        i16 = $b26 & 255;

        if i2 < 4096 goto label20;

        goto label23;

     label20:
        $r9 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: byte[] pixelStack>;

        $i24 = i15;

        i15 = i15 + 1;

        $b25 = (byte) i16;

        $r9[$i24] = $b25;

        $r8 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: short[] prefix>;

        $s28 = (short) i8;

        $r8[i2] = $s28;

        $r11 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: byte[] suffix>;

        $b27 = (byte) i16;

        $r11[i2] = $b27;

        i2 = i2 + 1;

        $i30 = i2 & i4;

        if $i30 != 0 goto label21;

        if i2 >= 4096 goto label21;

        i5 = i5 + 1;

        i4 = i4 + i2;

     label21:
        i8 = i7;

     label22:
        i15 = i15 + -1;

        $i21 = i17;

        i17 = i17 + 1;

        $r6 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: byte[] pixelStack>;

        $b23 = $r6[i15];

        r2[$i21] = $b23;

        i12 = i12 + 1;

        goto label11;

     label23:
        i47 = i17;

     label24:
        if i47 >= i1 goto label25;

        r2[i47] = 0;

        i47 = i47 + 1;

        goto label24;

     label25:
        return;
    }

    private int read()
    {
        com.bumptech.glide.gifdecoder.GifDecoder r0;
        short s0;
        java.nio.ByteBuffer $r2;
        byte $b1;
        java.lang.Exception $r3;
        com.bumptech.glide.gifdecoder.GifHeader $r4;

        r0 := @this: com.bumptech.glide.gifdecoder.GifDecoder;

        s0 = 0;

     label1:
        $r2 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: java.nio.ByteBuffer rawData>;

        $b1 = virtualinvoke $r2.<java.nio.ByteBuffer: byte get()>();

        s0 = $b1 & 255;

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r4.<com.bumptech.glide.gifdecoder.GifHeader: int status> = 1;

     label4:
        return s0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private int readBlock()
    {
        com.bumptech.glide.gifdecoder.GifDecoder r0;
        int i0, i1, i2;
        byte[] $r1;
        java.nio.ByteBuffer $r2;
        java.lang.Exception $r4, r7;
        java.lang.String $r5;
        com.bumptech.glide.gifdecoder.GifHeader $r6;

        r0 := @this: com.bumptech.glide.gifdecoder.GifDecoder;

        i0 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifDecoder: int read()>();

        i1 = 0;

        if i0 <= 0 goto label4;

     label1:
        if i1 >= i0 goto label2;

        i2 = i0 - i1;

        $r2 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: java.nio.ByteBuffer rawData>;

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: byte[] block>;

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>($r1, i1, i2);

        i1 = i1 + i2;

        goto label1;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r7 = $r4;

        $r5 = <com.bumptech.glide.gifdecoder.GifDecoder: java.lang.String TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r5, "Error Reading Block", r7);

        $r6 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r6.<com.bumptech.glide.gifdecoder.GifHeader: int status> = 1;

     label4:
        return i1;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private android.graphics.Bitmap getNextBitmap()
    {
        com.bumptech.glide.gifdecoder.GifDecoder r0;
        android.graphics.Bitmap$Config r1, $r9;
        android.graphics.Bitmap r2;
        com.bumptech.glide.gifdecoder.GifHeader $r3, $r4, $r5, $r7, $r8;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider $r6;

        r0 := @this: com.bumptech.glide.gifdecoder.GifDecoder;

        $r3 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $z0 = $r3.<com.bumptech.glide.gifdecoder.GifHeader: boolean isTransparent>;

        if $z0 == 0 goto label1;

        $r9 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        goto label2;

     label1:
        $r9 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config RGB_565>;

     label2:
        r1 = $r9;

        $r6 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider bitmapProvider>;

        $r4 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i1 = $r4.<com.bumptech.glide.gifdecoder.GifHeader: int width>;

        $r5 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i0 = $r5.<com.bumptech.glide.gifdecoder.GifHeader: int height>;

        r2 = interfaceinvoke $r6.<com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider: android.graphics.Bitmap obtain(int,int,android.graphics.Bitmap$Config)>($i1, $i0, r1);

        if r2 != null goto label3;

        $r7 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i3 = $r7.<com.bumptech.glide.gifdecoder.GifHeader: int width>;

        $r8 = r0.<com.bumptech.glide.gifdecoder.GifDecoder: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i2 = $r8.<com.bumptech.glide.gifdecoder.GifHeader: int height>;

        r2 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>($i3, $i2, r1);

        goto label4;

     label3:
        virtualinvoke r2.<android.graphics.Bitmap: void eraseColor(int)>(0);

     label4:
        return r2;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        <com.bumptech.glide.gifdecoder.GifDecoder: int DISPOSAL_PREVIOUS> = 3;

        <com.bumptech.glide.gifdecoder.GifDecoder: int DISPOSAL_BACKGROUND> = 2;

        <com.bumptech.glide.gifdecoder.GifDecoder: int DISPOSAL_NONE> = 1;

        <com.bumptech.glide.gifdecoder.GifDecoder: int DISPOSAL_UNSPECIFIED> = 0;

        <com.bumptech.glide.gifdecoder.GifDecoder: int MAX_STACK_SIZE> = 4096;

        <com.bumptech.glide.gifdecoder.GifDecoder: int STATUS_OPEN_ERROR> = 2;

        <com.bumptech.glide.gifdecoder.GifDecoder: int STATUS_FORMAT_ERROR> = 1;

        <com.bumptech.glide.gifdecoder.GifDecoder: int STATUS_OK> = 0;

        $r0 = class "com/bumptech/glide/gifdecoder/GifDecoder";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.bumptech.glide.gifdecoder.GifDecoder: java.lang.String TAG> = $r1;

        return;
    }
}
