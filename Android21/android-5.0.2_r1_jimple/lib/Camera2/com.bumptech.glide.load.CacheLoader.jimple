public class com.bumptech.glide.load.CacheLoader extends java.lang.Object
{
    private static final java.lang.String TAG;
    private com.bumptech.glide.load.engine.cache.DiskCache diskCache;

    public void <init>(com.bumptech.glide.load.engine.cache.DiskCache)
    {
        com.bumptech.glide.load.CacheLoader r0;
        com.bumptech.glide.load.engine.cache.DiskCache r1;

        r0 := @this: com.bumptech.glide.load.CacheLoader;

        r1 := @parameter0: com.bumptech.glide.load.engine.cache.DiskCache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.bumptech.glide.load.CacheLoader: com.bumptech.glide.load.engine.cache.DiskCache diskCache> = r1;

        return;
    }

    public com.bumptech.glide.load.engine.Resource load(com.bumptech.glide.load.Key, com.bumptech.glide.load.ResourceDecoder, int, int)
    {
        com.bumptech.glide.load.CacheLoader r0;
        com.bumptech.glide.load.Key r1;
        com.bumptech.glide.load.ResourceDecoder r2;
        int i0, i1;
        com.bumptech.glide.load.engine.Resource r3;
        java.io.InputStream r4;
        java.io.IOException r5, $r8;
        com.bumptech.glide.load.engine.cache.DiskCache $r6, $r7;
        boolean $z0, $z1;

        r0 := @this: com.bumptech.glide.load.CacheLoader;

        r1 := @parameter0: com.bumptech.glide.load.Key;

        r2 := @parameter1: com.bumptech.glide.load.ResourceDecoder;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 = null;

        $r6 = r0.<com.bumptech.glide.load.CacheLoader: com.bumptech.glide.load.engine.cache.DiskCache diskCache>;

        r4 = interfaceinvoke $r6.<com.bumptech.glide.load.engine.cache.DiskCache: java.io.InputStream get(com.bumptech.glide.load.Key)>(r1);

        if r4 == null goto label6;

     label1:
        r3 = interfaceinvoke r2.<com.bumptech.glide.load.ResourceDecoder: com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int)>(r4, i0, i1);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        r5 = $r8;

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("CacheLoader", 3);

        if $z1 == 0 goto label4;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>("CacheLoader", "Exception decoding image from cache", r5);

     label4:
        if r3 != null goto label6;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("CacheLoader", 3);

        if $z0 == 0 goto label5;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CacheLoader", "Failed to decode image from cache or not present in cache");

     label5:
        $r7 = r0.<com.bumptech.glide.load.CacheLoader: com.bumptech.glide.load.engine.cache.DiskCache diskCache>;

        interfaceinvoke $r7.<com.bumptech.glide.load.engine.cache.DiskCache: void delete(com.bumptech.glide.load.Key)>(r1);

     label6:
        return r3;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <com.bumptech.glide.load.CacheLoader: java.lang.String TAG> = "CacheLoader";

        return;
    }
}
