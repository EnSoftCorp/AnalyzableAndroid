public class com.android.camera.VideoUI extends java.lang.Object implements com.android.camera.ui.PreviewStatusListener
{
    private static final com.android.camera.debug.Log$Tag TAG;
    private static final float UNSET;
    private final com.android.camera.ui.PreviewOverlay mPreviewOverlay;
    private final com.android.camera.CameraActivity mActivity;
    private final android.view.View mRootView;
    private final com.android.camera.ui.FocusOverlay mFocusUI;
    private android.widget.ImageView mReviewImage;
    private com.android.camera.widget.VideoRecordingHints mVideoHints;
    private android.widget.TextView mRecordingTimeView;
    private android.widget.LinearLayout mLabelsLinearLayout;
    private com.android.camera.ui.RotateLayout mRecordingTimeRect;
    private boolean mRecordingStarted;
    private final com.android.camera.VideoController mController;
    private float mZoomMax;
    private float mAspectRatio;
    private final com.android.camera.AnimationManager mAnimationManager;
    private final android.view.GestureDetector$OnGestureListener mPreviewGestureListener;

    public void onPreviewLayoutChanged(android.view.View, int, int, int, int, int, int, int, int)
    {
        com.android.camera.VideoUI r0;
        android.view.View r1;
        int i0, i1, i2, i3, i4, i5, i6, i7;

        r0 := @this: com.android.camera.VideoUI;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        i5 := @parameter6: int;

        i6 := @parameter7: int;

        i7 := @parameter8: int;

        return;
    }

    public boolean shouldAutoAdjustTransformMatrixOnLayout()
    {
        com.android.camera.VideoUI r0;

        r0 := @this: com.android.camera.VideoUI;

        return 1;
    }

    public boolean shouldAutoAdjustBottomBar()
    {
        com.android.camera.VideoUI r0;

        r0 := @this: com.android.camera.VideoUI;

        return 1;
    }

    public void onPreviewFlipped()
    {
        com.android.camera.VideoUI r0;
        com.android.camera.VideoController $r1;

        r0 := @this: com.android.camera.VideoUI;

        $r1 = r0.<com.android.camera.VideoUI: com.android.camera.VideoController mController>;

        interfaceinvoke $r1.<com.android.camera.VideoController: void updateCameraOrientation()>();

        return;
    }

    public void <init>(com.android.camera.CameraActivity, com.android.camera.VideoController, android.view.View)
    {
        com.android.camera.VideoUI r0;
        com.android.camera.CameraActivity r1, $r8;
        com.android.camera.VideoController r2;
        android.view.View r3, $r6, $r7, $r11, $r12, $r15, $r17, $r18, $r19;
        android.view.ViewGroup r4;
        com.android.camera.VideoUI$1 $r5;
        android.view.LayoutInflater $r9;
        com.android.camera.ui.PreviewOverlay $r13;
        com.android.camera.AnimationManager $r14;
        com.android.camera.ui.FocusOverlay $r16;
        com.android.camera.widget.VideoRecordingHints $r20;

        r0 := @this: com.android.camera.VideoUI;

        r1 := @parameter0: com.android.camera.CameraActivity;

        r2 := @parameter1: com.android.camera.VideoController;

        r3 := @parameter2: android.view.View;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.camera.VideoUI: boolean mRecordingStarted> = 0;

        r0.<com.android.camera.VideoUI: float mAspectRatio> = 0.0F;

        $r5 = new com.android.camera.VideoUI$1;

        specialinvoke $r5.<com.android.camera.VideoUI$1: void <init>(com.android.camera.VideoUI)>(r0);

        r0.<com.android.camera.VideoUI: android.view.GestureDetector$OnGestureListener mPreviewGestureListener> = $r5;

        r0.<com.android.camera.VideoUI: com.android.camera.CameraActivity mActivity> = r1;

        r0.<com.android.camera.VideoUI: com.android.camera.VideoController mController> = r2;

        r0.<com.android.camera.VideoUI: android.view.View mRootView> = r3;

        $r6 = r0.<com.android.camera.VideoUI: android.view.View mRootView>;

        $r7 = virtualinvoke $r6.<android.view.View: android.view.View findViewById(int)>(2131623962);

        r4 = (android.view.ViewGroup) $r7;

        $r8 = r0.<com.android.camera.VideoUI: com.android.camera.CameraActivity mActivity>;

        $r9 = virtualinvoke $r8.<com.android.camera.CameraActivity: android.view.LayoutInflater getLayoutInflater()>();

        virtualinvoke $r9.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>(2130968618, r4, 1);

        $r11 = r0.<com.android.camera.VideoUI: android.view.View mRootView>;

        $r12 = virtualinvoke $r11.<android.view.View: android.view.View findViewById(int)>(2131623958);

        $r13 = (com.android.camera.ui.PreviewOverlay) $r12;

        r0.<com.android.camera.VideoUI: com.android.camera.ui.PreviewOverlay mPreviewOverlay> = $r13;

        specialinvoke r0.<com.android.camera.VideoUI: void initializeMiscControls()>();

        $r14 = new com.android.camera.AnimationManager;

        specialinvoke $r14.<com.android.camera.AnimationManager: void <init>()>();

        r0.<com.android.camera.VideoUI: com.android.camera.AnimationManager mAnimationManager> = $r14;

        $r15 = r0.<com.android.camera.VideoUI: android.view.View mRootView>;

        $r17 = virtualinvoke $r15.<android.view.View: android.view.View findViewById(int)>(2131623956);

        $r16 = (com.android.camera.ui.FocusOverlay) $r17;

        r0.<com.android.camera.VideoUI: com.android.camera.ui.FocusOverlay mFocusUI> = $r16;

        $r19 = r0.<com.android.camera.VideoUI: android.view.View mRootView>;

        $r18 = virtualinvoke $r19.<android.view.View: android.view.View findViewById(int)>(2131624047);

        $r20 = (com.android.camera.widget.VideoRecordingHints) $r18;

        r0.<com.android.camera.VideoUI: com.android.camera.widget.VideoRecordingHints mVideoHints> = $r20;

        return;
    }

    public void setPreviewSize(int, int)
    {
        com.android.camera.VideoUI r0;
        int i0, i1;
        float f0, $f1, $f2, $f3, $f4;
        com.android.camera.debug.Log$Tag $r1;

        r0 := @this: com.android.camera.VideoUI;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 == 0 goto label1;

        if i1 != 0 goto label2;

     label1:
        $r1 = <com.android.camera.VideoUI: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void w(com.android.camera.debug.Log$Tag,java.lang.String)>($r1, "Preview size should not be 0.");

        return;

     label2:
        if i0 <= i1 goto label3;

        $f4 = (float) i0;

        $f3 = (float) i1;

        f0 = $f4 / $f3;

        goto label4;

     label3:
        $f2 = (float) i1;

        $f1 = (float) i0;

        f0 = $f2 / $f1;

     label4:
        virtualinvoke r0.<com.android.camera.VideoUI: void setAspectRatio(float)>(f0);

        return;
    }

    public com.android.camera.FocusOverlayManager$FocusUI getFocusUI()
    {
        com.android.camera.VideoUI r0;
        com.android.camera.ui.FocusOverlay $r1;

        r0 := @this: com.android.camera.VideoUI;

        $r1 = r0.<com.android.camera.VideoUI: com.android.camera.ui.FocusOverlay mFocusUI>;

        return $r1;
    }

    public void animateFlash()
    {
        com.android.camera.VideoUI r0;
        com.android.camera.VideoController $r1;

        r0 := @this: com.android.camera.VideoUI;

        $r1 = r0.<com.android.camera.VideoUI: com.android.camera.VideoController mController>;

        interfaceinvoke $r1.<com.android.camera.VideoController: void startPreCaptureAnimation()>();

        return;
    }

    public void cancelAnimations()
    {
        com.android.camera.VideoUI r0;
        com.android.camera.AnimationManager $r1;

        r0 := @this: com.android.camera.VideoUI;

        $r1 = r0.<com.android.camera.VideoUI: com.android.camera.AnimationManager mAnimationManager>;

        virtualinvoke $r1.<com.android.camera.AnimationManager: void cancelAnimations()>();

        return;
    }

    public void setOrientationIndicator(int, boolean)
    {
        com.android.camera.VideoUI r0;
        int i0, $i1, $i2;
        boolean z0;
        android.widget.LinearLayout $r1, $r3, $r4;
        com.android.camera.ui.RotateLayout $r2;

        r0 := @this: com.android.camera.VideoUI;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $r1 = r0.<com.android.camera.VideoUI: android.widget.LinearLayout mLabelsLinearLayout>;

        if $r1 == null goto label2;

        $i1 = i0 / 90;

        $i2 = $i1 & 1;

        if $i2 != 0 goto label1;

        $r4 = r0.<com.android.camera.VideoUI: android.widget.LinearLayout mLabelsLinearLayout>;

        virtualinvoke $r4.<android.widget.LinearLayout: void setOrientation(int)>(1);

        goto label2;

     label1:
        $r3 = r0.<com.android.camera.VideoUI: android.widget.LinearLayout mLabelsLinearLayout>;

        virtualinvoke $r3.<android.widget.LinearLayout: void setOrientation(int)>(0);

     label2:
        $r2 = r0.<com.android.camera.VideoUI: com.android.camera.ui.RotateLayout mRecordingTimeRect>;

        virtualinvoke $r2.<com.android.camera.ui.RotateLayout: void setOrientation(int,boolean)>(0, z0);

        return;
    }

    private void initializeMiscControls()
    {
        com.android.camera.VideoUI r0;
        android.view.View $r1, $r2, $r4, $r5, $r7, $r8, $r10, $r11;
        android.widget.ImageView $r3;
        android.widget.TextView $r6;
        com.android.camera.ui.RotateLayout $r9;
        android.widget.LinearLayout $r12;

        r0 := @this: com.android.camera.VideoUI;

        $r1 = r0.<com.android.camera.VideoUI: android.view.View mRootView>;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.View findViewById(int)>(2131623974);

        $r3 = (android.widget.ImageView) $r2;

        r0.<com.android.camera.VideoUI: android.widget.ImageView mReviewImage> = $r3;

        $r4 = r0.<com.android.camera.VideoUI: android.view.View mRootView>;

        $r5 = virtualinvoke $r4.<android.view.View: android.view.View findViewById(int)>(2131624049);

        $r6 = (android.widget.TextView) $r5;

        r0.<com.android.camera.VideoUI: android.widget.TextView mRecordingTimeView> = $r6;

        $r7 = r0.<com.android.camera.VideoUI: android.view.View mRootView>;

        $r8 = virtualinvoke $r7.<android.view.View: android.view.View findViewById(int)>(2131624045);

        $r9 = (com.android.camera.ui.RotateLayout) $r8;

        r0.<com.android.camera.VideoUI: com.android.camera.ui.RotateLayout mRecordingTimeRect> = $r9;

        $r10 = r0.<com.android.camera.VideoUI: android.view.View mRootView>;

        $r11 = virtualinvoke $r10.<android.view.View: android.view.View findViewById(int)>(2131624046);

        $r12 = (android.widget.LinearLayout) $r11;

        r0.<com.android.camera.VideoUI: android.widget.LinearLayout mLabelsLinearLayout> = $r12;

        return;
    }

    public void updateOnScreenIndicators(com.android.ex.camera2.portability.CameraSettings)
    {
        com.android.camera.VideoUI r0;
        com.android.ex.camera2.portability.CameraSettings r1;

        r0 := @this: com.android.camera.VideoUI;

        r1 := @parameter0: com.android.ex.camera2.portability.CameraSettings;

        return;
    }

    public void setAspectRatio(float)
    {
        com.android.camera.VideoUI r0;
        float f0, f1, $f2, $f3, $f4;
        byte $b0, $b1, $b2;
        com.android.camera.VideoController $r1;

        r0 := @this: com.android.camera.VideoUI;

        f0 := @parameter0: float;

        $b0 = f0 cmpg 0.0F;

        if $b0 > 0 goto label1;

        return;

     label1:
        $b1 = f0 cmpl 1.0F;

        if $b1 <= 0 goto label2;

        $f4 = f0;

        goto label3;

     label2:
        $f4 = 1.0F / f0;

     label3:
        f1 = $f4;

        $f2 = r0.<com.android.camera.VideoUI: float mAspectRatio>;

        $b2 = f1 cmpl $f2;

        if $b2 == 0 goto label4;

        r0.<com.android.camera.VideoUI: float mAspectRatio> = f1;

        $r1 = r0.<com.android.camera.VideoUI: com.android.camera.VideoController mController>;

        $f3 = r0.<com.android.camera.VideoUI: float mAspectRatio>;

        interfaceinvoke $r1.<com.android.camera.VideoController: void updatePreviewAspectRatio(float)>($f3);

     label4:
        return;
    }

    public void setSwipingEnabled(boolean)
    {
        com.android.camera.VideoUI r0;
        boolean z0;
        com.android.camera.CameraActivity $r1;

        r0 := @this: com.android.camera.VideoUI;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.camera.VideoUI: com.android.camera.CameraActivity mActivity>;

        virtualinvoke $r1.<com.android.camera.CameraActivity: void setSwipingEnabled(boolean)>(z0);

        return;
    }

    public void showPreviewBorder(boolean)
    {
        com.android.camera.VideoUI r0;
        boolean z0;

        r0 := @this: com.android.camera.VideoUI;

        z0 := @parameter0: boolean;

        return;
    }

    public void showRecordingUI(boolean)
    {
        com.android.camera.VideoUI r0;
        boolean z0;
        com.android.camera.CameraActivity $r1, $r8;
        android.widget.TextView $r2, $r5, $r6, $r7, $r9;
        android.content.res.Resources $r3, $r10;
        java.lang.String $r4, $r11;

        r0 := @this: com.android.camera.VideoUI;

        z0 := @parameter0: boolean;

        r0.<com.android.camera.VideoUI: boolean mRecordingStarted> = z0;

        if z0 == 0 goto label1;

        $r6 = r0.<com.android.camera.VideoUI: android.widget.TextView mRecordingTimeView>;

        virtualinvoke $r6.<android.widget.TextView: void setText(java.lang.CharSequence)>("");

        $r7 = r0.<com.android.camera.VideoUI: android.widget.TextView mRecordingTimeView>;

        virtualinvoke $r7.<android.widget.TextView: void setVisibility(int)>(0);

        $r9 = r0.<com.android.camera.VideoUI: android.widget.TextView mRecordingTimeView>;

        $r8 = r0.<com.android.camera.VideoUI: com.android.camera.CameraActivity mActivity>;

        $r10 = virtualinvoke $r8.<com.android.camera.CameraActivity: android.content.res.Resources getResources()>();

        $r11 = virtualinvoke $r10.<android.content.res.Resources: java.lang.String getString(int)>(2131230905);

        virtualinvoke $r9.<android.widget.TextView: void announceForAccessibility(java.lang.CharSequence)>($r11);

        goto label2;

     label1:
        $r2 = r0.<com.android.camera.VideoUI: android.widget.TextView mRecordingTimeView>;

        $r1 = r0.<com.android.camera.VideoUI: com.android.camera.CameraActivity mActivity>;

        $r3 = virtualinvoke $r1.<com.android.camera.CameraActivity: android.content.res.Resources getResources()>();

        $r4 = virtualinvoke $r3.<android.content.res.Resources: java.lang.String getString(int)>(2131230906);

        virtualinvoke $r2.<android.widget.TextView: void announceForAccessibility(java.lang.CharSequence)>($r4);

        $r5 = r0.<com.android.camera.VideoUI: android.widget.TextView mRecordingTimeView>;

        virtualinvoke $r5.<android.widget.TextView: void setVisibility(int)>(8);

     label2:
        return;
    }

    public void showReviewImage(android.graphics.Bitmap)
    {
        com.android.camera.VideoUI r0;
        android.graphics.Bitmap r1;
        android.widget.ImageView $r2, $r3;

        r0 := @this: com.android.camera.VideoUI;

        r1 := @parameter0: android.graphics.Bitmap;

        $r2 = r0.<com.android.camera.VideoUI: android.widget.ImageView mReviewImage>;

        virtualinvoke $r2.<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>(r1);

        $r3 = r0.<com.android.camera.VideoUI: android.widget.ImageView mReviewImage>;

        virtualinvoke $r3.<android.widget.ImageView: void setVisibility(int)>(0);

        return;
    }

    public void showReviewControls()
    {
        com.android.camera.VideoUI r0;
        com.android.camera.CameraActivity $r1;
        com.android.camera.app.CameraAppUI $r2;
        android.widget.ImageView $r3;

        r0 := @this: com.android.camera.VideoUI;

        $r1 = r0.<com.android.camera.VideoUI: com.android.camera.CameraActivity mActivity>;

        $r2 = virtualinvoke $r1.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI getCameraAppUI()>();

        virtualinvoke $r2.<com.android.camera.app.CameraAppUI: void transitionToIntentReviewLayout()>();

        $r3 = r0.<com.android.camera.VideoUI: android.widget.ImageView mReviewImage>;

        virtualinvoke $r3.<android.widget.ImageView: void setVisibility(int)>(0);

        return;
    }

    public void initializeZoom(com.android.ex.camera2.portability.CameraSettings, com.android.ex.camera2.portability.CameraCapabilities)
    {
        com.android.camera.VideoUI r0;
        com.android.ex.camera2.portability.CameraSettings r1;
        com.android.ex.camera2.portability.CameraCapabilities r2;
        float $f0, $f1, $f2;
        com.android.camera.ui.PreviewOverlay $r3;
        com.android.camera.VideoUI$ZoomChangeListener $r4;

        r0 := @this: com.android.camera.VideoUI;

        r1 := @parameter0: com.android.ex.camera2.portability.CameraSettings;

        r2 := @parameter1: com.android.ex.camera2.portability.CameraCapabilities;

        $f0 = virtualinvoke r2.<com.android.ex.camera2.portability.CameraCapabilities: float getMaxZoomRatio()>();

        r0.<com.android.camera.VideoUI: float mZoomMax> = $f0;

        $r3 = r0.<com.android.camera.VideoUI: com.android.camera.ui.PreviewOverlay mPreviewOverlay>;

        $f1 = r0.<com.android.camera.VideoUI: float mZoomMax>;

        $f2 = virtualinvoke r1.<com.android.ex.camera2.portability.CameraSettings: float getCurrentZoomRatio()>();

        $r4 = new com.android.camera.VideoUI$ZoomChangeListener;

        specialinvoke $r4.<com.android.camera.VideoUI$ZoomChangeListener: void <init>(com.android.camera.VideoUI,com.android.camera.VideoUI$1)>(r0, null);

        virtualinvoke $r3.<com.android.camera.ui.PreviewOverlay: void setupZoom(float,float,com.android.camera.ui.PreviewOverlay$OnZoomChangedListener)>($f1, $f2, $r4);

        return;
    }

    public void setRecordingTime(java.lang.String)
    {
        com.android.camera.VideoUI r0;
        java.lang.String r1;
        android.widget.TextView $r2;

        r0 := @this: com.android.camera.VideoUI;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.camera.VideoUI: android.widget.TextView mRecordingTimeView>;

        virtualinvoke $r2.<android.widget.TextView: void setText(java.lang.CharSequence)>(r1);

        return;
    }

    public void setRecordingTimeTextColor(int)
    {
        com.android.camera.VideoUI r0;
        int i0;
        android.widget.TextView $r1;

        r0 := @this: com.android.camera.VideoUI;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.camera.VideoUI: android.widget.TextView mRecordingTimeView>;

        virtualinvoke $r1.<android.widget.TextView: void setTextColor(int)>(i0);

        return;
    }

    public boolean isVisible()
    {
        com.android.camera.VideoUI r0;

        r0 := @this: com.android.camera.VideoUI;

        return 0;
    }

    public android.view.GestureDetector$OnGestureListener getGestureListener()
    {
        com.android.camera.VideoUI r0;
        android.view.GestureDetector$OnGestureListener $r1;

        r0 := @this: com.android.camera.VideoUI;

        $r1 = r0.<com.android.camera.VideoUI: android.view.GestureDetector$OnGestureListener mPreviewGestureListener>;

        return $r1;
    }

    public android.view.View$OnTouchListener getTouchListener()
    {
        com.android.camera.VideoUI r0;

        r0 := @this: com.android.camera.VideoUI;

        return null;
    }

    public void showFocusUI(boolean)
    {
        com.android.camera.VideoUI r0;
        boolean z0;
        com.android.camera.ui.FocusOverlay $r1, $r2;
        byte $b0;

        r0 := @this: com.android.camera.VideoUI;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.camera.VideoUI: com.android.camera.ui.FocusOverlay mFocusUI>;

        if $r1 == null goto label3;

        $r2 = r0.<com.android.camera.VideoUI: com.android.camera.ui.FocusOverlay mFocusUI>;

        if z0 == 0 goto label1;

        $b0 = 0;

        goto label2;

     label1:
        $b0 = 4;

     label2:
        virtualinvoke $r2.<com.android.camera.ui.FocusOverlay: void setVisibility(int)>($b0);

     label3:
        return;
    }

    public void showVideoRecordingHints(boolean)
    {
        com.android.camera.VideoUI r0;
        boolean z0;
        com.android.camera.widget.VideoRecordingHints $r1;
        byte $b0;

        r0 := @this: com.android.camera.VideoUI;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.camera.VideoUI: com.android.camera.widget.VideoRecordingHints mVideoHints>;

        if z0 == 0 goto label1;

        $b0 = 0;

        goto label2;

     label1:
        $b0 = 4;

     label2:
        virtualinvoke $r1.<com.android.camera.widget.VideoRecordingHints: void setVisibility(int)>($b0);

        return;
    }

    public android.graphics.Point getPreviewScreenSize()
    {
        com.android.camera.VideoUI r0;
        android.graphics.Point $r1;
        android.view.View $r2, $r3;
        int $i0, $i1;

        r0 := @this: com.android.camera.VideoUI;

        $r1 = new android.graphics.Point;

        $r2 = r0.<com.android.camera.VideoUI: android.view.View mRootView>;

        $i0 = virtualinvoke $r2.<android.view.View: int getMeasuredWidth()>();

        $r3 = r0.<com.android.camera.VideoUI: android.view.View mRootView>;

        $i1 = virtualinvoke $r3.<android.view.View: int getMeasuredHeight()>();

        specialinvoke $r1.<android.graphics.Point: void <init>(int,int)>($i0, $i1);

        return $r1;
    }

    public void onOrientationChanged(int)
    {
        com.android.camera.VideoUI r0;
        int i0;
        com.android.camera.widget.VideoRecordingHints $r1;

        r0 := @this: com.android.camera.VideoUI;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.camera.VideoUI: com.android.camera.widget.VideoRecordingHints mVideoHints>;

        virtualinvoke $r1.<com.android.camera.widget.VideoRecordingHints: void onOrientationChanged(int)>(i0);

        return;
    }

    public void onSurfaceTextureAvailable(android.graphics.SurfaceTexture, int, int)
    {
        com.android.camera.VideoUI r0;
        android.graphics.SurfaceTexture r1;
        int i0, i1;
        com.android.camera.VideoController $r2;

        r0 := @this: com.android.camera.VideoUI;

        r1 := @parameter0: android.graphics.SurfaceTexture;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.camera.VideoUI: com.android.camera.VideoController mController>;

        interfaceinvoke $r2.<com.android.camera.VideoController: void onPreviewUIReady()>();

        return;
    }

    public boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture)
    {
        com.android.camera.VideoUI r0;
        android.graphics.SurfaceTexture r1;
        com.android.camera.VideoController $r2;
        com.android.camera.debug.Log$Tag $r3;

        r0 := @this: com.android.camera.VideoUI;

        r1 := @parameter0: android.graphics.SurfaceTexture;

        $r2 = r0.<com.android.camera.VideoUI: com.android.camera.VideoController mController>;

        interfaceinvoke $r2.<com.android.camera.VideoController: void onPreviewUIDestroyed()>();

        $r3 = <com.android.camera.VideoUI: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void d(com.android.camera.debug.Log$Tag,java.lang.String)>($r3, "surfaceTexture is destroyed");

        return 1;
    }

    public void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture, int, int)
    {
        com.android.camera.VideoUI r0;
        android.graphics.SurfaceTexture r1;
        int i0, i1;

        r0 := @this: com.android.camera.VideoUI;

        r1 := @parameter0: android.graphics.SurfaceTexture;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        return;
    }

    public void onSurfaceTextureUpdated(android.graphics.SurfaceTexture)
    {
        com.android.camera.VideoUI r0;
        android.graphics.SurfaceTexture r1;

        r0 := @this: com.android.camera.VideoUI;

        r1 := @parameter0: android.graphics.SurfaceTexture;

        return;
    }

    public void onPause()
    {
        com.android.camera.VideoUI r0;

        r0 := @this: com.android.camera.VideoUI;

        r0.<com.android.camera.VideoUI: float mAspectRatio> = 0.0F;

        return;
    }

    static com.android.camera.widget.VideoRecordingHints access$000(com.android.camera.VideoUI)
    {
        com.android.camera.VideoUI r0;
        com.android.camera.widget.VideoRecordingHints $r1;

        r0 := @parameter0: com.android.camera.VideoUI;

        $r1 = r0.<com.android.camera.VideoUI: com.android.camera.widget.VideoRecordingHints mVideoHints>;

        return $r1;
    }

    static com.android.camera.VideoController access$100(com.android.camera.VideoUI)
    {
        com.android.camera.VideoUI r0;
        com.android.camera.VideoController $r1;

        r0 := @parameter0: com.android.camera.VideoUI;

        $r1 = r0.<com.android.camera.VideoUI: com.android.camera.VideoController mController>;

        return $r1;
    }

    static void <clinit>()
    {
        com.android.camera.debug.Log$Tag $r0;

        <com.android.camera.VideoUI: float UNSET> = 0.0F;

        $r0 = new com.android.camera.debug.Log$Tag;

        specialinvoke $r0.<com.android.camera.debug.Log$Tag: void <init>(java.lang.String)>("VideoUI");

        <com.android.camera.VideoUI: com.android.camera.debug.Log$Tag TAG> = $r0;

        return;
    }
}
