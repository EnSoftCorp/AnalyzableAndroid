public class com.android.camera.ui.TouchCircleDrawable extends android.graphics.drawable.Drawable
{
    private static final int CIRCLE_ANIM_DURATION_MS;
    private android.graphics.Paint mColorPaint;
    private android.graphics.Paint mBackgroundPaint;
    private int mColor;
    private int mColorAlpha;
    private int mColorRadius;
    private int mBackgroundRadius;
    private android.graphics.drawable.Drawable mIconDrawable;
    private int mIconDrawableSize;
    private boolean mDrawBackground;
    private android.animation.Animator$AnimatorListener mAnimatorListener;
    private android.animation.ValueAnimator$AnimatorUpdateListener mUpdateListener;
    private static final int INVALID;
    private int mW;
    private int mH;
    private android.graphics.Point mCenter;

    public void <init>(android.content.res.Resources, int, int)
    {
        com.android.camera.ui.TouchCircleDrawable r0;
        android.content.res.Resources r1;
        int i0, i1, $i2;
        android.graphics.Paint $r2, $r3, $r4, $r5, $r6;

        r0 := @this: com.android.camera.ui.TouchCircleDrawable;

        r1 := @parameter0: android.content.res.Resources;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        $r2 = new android.graphics.Paint;

        specialinvoke $r2.<android.graphics.Paint: void <init>()>();

        r0.<com.android.camera.ui.TouchCircleDrawable: android.graphics.Paint mColorPaint> = $r2;

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>()>();

        r0.<com.android.camera.ui.TouchCircleDrawable: android.graphics.Paint mBackgroundPaint> = $r3;

        r0.<com.android.camera.ui.TouchCircleDrawable: int mColorAlpha> = 255;

        r0.<com.android.camera.ui.TouchCircleDrawable: int mW> = -1;

        r0.<com.android.camera.ui.TouchCircleDrawable: int mH> = -1;

        $r4 = r0.<com.android.camera.ui.TouchCircleDrawable: android.graphics.Paint mColorPaint>;

        virtualinvoke $r4.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r5 = r0.<com.android.camera.ui.TouchCircleDrawable: android.graphics.Paint mBackgroundPaint>;

        virtualinvoke $r5.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r6 = r0.<com.android.camera.ui.TouchCircleDrawable: android.graphics.Paint mBackgroundPaint>;

        $i2 = virtualinvoke r1.<android.content.res.Resources: int getColor(int)>(2131492931);

        virtualinvoke $r6.<android.graphics.Paint: void setColor(int)>($i2);

        virtualinvoke r0.<com.android.camera.ui.TouchCircleDrawable: void setColor(int)>(i0);

        return;
    }

    public void <init>(android.content.res.Resources)
    {
        com.android.camera.ui.TouchCircleDrawable r0;
        android.content.res.Resources r1;

        r0 := @this: com.android.camera.ui.TouchCircleDrawable;

        r1 := @parameter0: android.content.res.Resources;

        specialinvoke r0.<com.android.camera.ui.TouchCircleDrawable: void <init>(android.content.res.Resources,int,int)>(r1, 16777215, 16777215);

        return;
    }

    public void setSize(int, int)
    {
        com.android.camera.ui.TouchCircleDrawable r0;
        int i0, i1;

        r0 := @this: com.android.camera.ui.TouchCircleDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<com.android.camera.ui.TouchCircleDrawable: int mW> = i0;

        r0.<com.android.camera.ui.TouchCircleDrawable: int mH> = i1;

        return;
    }

    public void setCenter(android.graphics.Point)
    {
        com.android.camera.ui.TouchCircleDrawable r0;
        android.graphics.Point r1;

        r0 := @this: com.android.camera.ui.TouchCircleDrawable;

        r1 := @parameter0: android.graphics.Point;

        r0.<com.android.camera.ui.TouchCircleDrawable: android.graphics.Point mCenter> = r1;

        specialinvoke r0.<com.android.camera.ui.TouchCircleDrawable: void updateIconBounds()>();

        return;
    }

    public android.graphics.Point getCenter()
    {
        com.android.camera.ui.TouchCircleDrawable r0;
        android.graphics.Point $r1;

        r0 := @this: com.android.camera.ui.TouchCircleDrawable;

        $r1 = r0.<com.android.camera.ui.TouchCircleDrawable: android.graphics.Point mCenter>;

        return $r1;
    }

    public void draw(android.graphics.Canvas)
    {
        com.android.camera.ui.TouchCircleDrawable r0;
        android.graphics.Canvas r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.graphics.Point $r2, $r3, $r4, $r7, $r9;
        boolean $z0;
        android.graphics.Paint $r5, $r10;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        android.graphics.drawable.Drawable $r6, $r8;

        r0 := @this: com.android.camera.ui.TouchCircleDrawable;

        r1 := @parameter0: android.graphics.Canvas;

        i0 = r0.<com.android.camera.ui.TouchCircleDrawable: int mW>;

        i1 = r0.<com.android.camera.ui.TouchCircleDrawable: int mH>;

        if i0 == -1 goto label1;

        if i1 == -1 goto label1;

        $r2 = r0.<com.android.camera.ui.TouchCircleDrawable: android.graphics.Point mCenter>;

        if $r2 != null goto label2;

     label1:
        return;

     label2:
        $z0 = r0.<com.android.camera.ui.TouchCircleDrawable: boolean mDrawBackground>;

        if $z0 == 0 goto label3;

        $r7 = r0.<com.android.camera.ui.TouchCircleDrawable: android.graphics.Point mCenter>;

        $i5 = $r7.<android.graphics.Point: int x>;

        $f4 = (float) $i5;

        $r9 = r0.<com.android.camera.ui.TouchCircleDrawable: android.graphics.Point mCenter>;

        $i7 = $r9.<android.graphics.Point: int y>;

        $f5 = (float) $i7;

        $i6 = r0.<com.android.camera.ui.TouchCircleDrawable: int mBackgroundRadius>;

        $f3 = (float) $i6;

        $r10 = r0.<com.android.camera.ui.TouchCircleDrawable: android.graphics.Paint mBackgroundPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f4, $f5, $f3, $r10);

     label3:
        $r3 = r0.<com.android.camera.ui.TouchCircleDrawable: android.graphics.Point mCenter>;

        $i2 = $r3.<android.graphics.Point: int x>;

        $f2 = (float) $i2;

        $r4 = r0.<com.android.camera.ui.TouchCircleDrawable: android.graphics.Point mCenter>;

        $i3 = $r4.<android.graphics.Point: int y>;

        $f1 = (float) $i3;

        $i4 = r0.<com.android.camera.ui.TouchCircleDrawable: int mColorRadius>;

        $f0 = (float) $i4;

        $r5 = r0.<com.android.camera.ui.TouchCircleDrawable: android.graphics.Paint mColorPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f2, $f1, $f0, $r5);

        $r6 = r0.<com.android.camera.ui.TouchCircleDrawable: android.graphics.drawable.Drawable mIconDrawable>;

        if $r6 == null goto label4;

        $r8 = r0.<com.android.camera.ui.TouchCircleDrawable: android.graphics.drawable.Drawable mIconDrawable>;

        virtualinvoke $r8.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

     label4:
        return;
    }

    public void setAlpha(int)
    {
        com.android.camera.ui.TouchCircleDrawable r0;
        int i0;

        r0 := @this: com.android.camera.ui.TouchCircleDrawable;

        i0 := @parameter0: int;

        r0.<com.android.camera.ui.TouchCircleDrawable: int mColorAlpha> = i0;

        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        com.android.camera.ui.TouchCircleDrawable r0;
        android.graphics.ColorFilter r1;
        android.graphics.Paint $r2;

        r0 := @this: com.android.camera.ui.TouchCircleDrawable;

        r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = r0.<com.android.camera.ui.TouchCircleDrawable: android.graphics.Paint mColorPaint>;

        virtualinvoke $r2.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(r1);

        return;
    }

    public int getOpacity()
    {
        com.android.camera.ui.TouchCircleDrawable r0;

        r0 := @this: com.android.camera.ui.TouchCircleDrawable;

        return -3;
    }

    public void setColor(int)
    {
        com.android.camera.ui.TouchCircleDrawable r0;
        int i0, $i1, $i2;
        android.graphics.Paint $r1, $r2;

        r0 := @this: com.android.camera.ui.TouchCircleDrawable;

        i0 := @parameter0: int;

        r0.<com.android.camera.ui.TouchCircleDrawable: int mColor> = i0;

        $r1 = r0.<com.android.camera.ui.TouchCircleDrawable: android.graphics.Paint mColorPaint>;

        $i1 = r0.<com.android.camera.ui.TouchCircleDrawable: int mColor>;

        virtualinvoke $r1.<android.graphics.Paint: void setColor(int)>($i1);

        $r2 = r0.<com.android.camera.ui.TouchCircleDrawable: android.graphics.Paint mColorPaint>;

        $i2 = r0.<com.android.camera.ui.TouchCircleDrawable: int mColorAlpha>;

        virtualinvoke $r2.<android.graphics.Paint: void setAlpha(int)>($i2);

        return;
    }

    public void setIconDrawable(android.graphics.drawable.Drawable, int)
    {
        com.android.camera.ui.TouchCircleDrawable r0;
        android.graphics.drawable.Drawable r1;
        int i0;

        r0 := @this: com.android.camera.ui.TouchCircleDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        i0 := @parameter1: int;

        r0.<com.android.camera.ui.TouchCircleDrawable: android.graphics.drawable.Drawable mIconDrawable> = r1;

        r0.<com.android.camera.ui.TouchCircleDrawable: int mIconDrawableSize> = i0;

        specialinvoke r0.<com.android.camera.ui.TouchCircleDrawable: void updateIconBounds()>();

        return;
    }

    private void updateIconBounds()
    {
        com.android.camera.ui.TouchCircleDrawable r0;
        android.graphics.Point $r1, $r2, $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        android.graphics.drawable.Drawable $r6;

        r0 := @this: com.android.camera.ui.TouchCircleDrawable;

        $r1 = r0.<com.android.camera.ui.TouchCircleDrawable: android.graphics.Point mCenter>;

        if $r1 == null goto label1;

        $r6 = r0.<com.android.camera.ui.TouchCircleDrawable: android.graphics.drawable.Drawable mIconDrawable>;

        $r2 = r0.<com.android.camera.ui.TouchCircleDrawable: android.graphics.Point mCenter>;

        $i2 = $r2.<android.graphics.Point: int x>;

        $i0 = r0.<com.android.camera.ui.TouchCircleDrawable: int mIconDrawableSize>;

        $i1 = $i0 / 2;

        $i14 = $i2 - $i1;

        $r3 = r0.<com.android.camera.ui.TouchCircleDrawable: android.graphics.Point mCenter>;

        $i5 = $r3.<android.graphics.Point: int y>;

        $i3 = r0.<com.android.camera.ui.TouchCircleDrawable: int mIconDrawableSize>;

        $i4 = $i3 / 2;

        $i15 = $i5 - $i4;

        $r4 = r0.<com.android.camera.ui.TouchCircleDrawable: android.graphics.Point mCenter>;

        $i8 = $r4.<android.graphics.Point: int x>;

        $i6 = r0.<com.android.camera.ui.TouchCircleDrawable: int mIconDrawableSize>;

        $i7 = $i6 / 2;

        $i12 = $i8 + $i7;

        $r5 = r0.<com.android.camera.ui.TouchCircleDrawable: android.graphics.Point mCenter>;

        $i10 = $r5.<android.graphics.Point: int y>;

        $i9 = r0.<com.android.camera.ui.TouchCircleDrawable: int mIconDrawableSize>;

        $i11 = $i9 / 2;

        $i13 = $i10 + $i11;

        virtualinvoke $r6.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i14, $i15, $i12, $i13);

     label1:
        return;
    }

    public void animate()
    {
        com.android.camera.ui.TouchCircleDrawable r0;
        android.animation.ValueAnimator r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        int[] $r2;
        com.android.camera.ui.TouchCircleDrawable$1 $r4;
        com.android.camera.util.Gusterpolator $r5;
        com.android.camera.ui.TouchCircleDrawable$2 $r6;

        r0 := @this: com.android.camera.ui.TouchCircleDrawable;

        $i0 = r0.<com.android.camera.ui.TouchCircleDrawable: int mW>;

        $i3 = $i0 / 2;

        $i1 = r0.<com.android.camera.ui.TouchCircleDrawable: int mH>;

        $i2 = $i1 / 2;

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i2);

        r0.<com.android.camera.ui.TouchCircleDrawable: int mBackgroundRadius> = $i4;

        $r2 = newarray (int)[2];

        $r2[0] = 0;

        $i5 = r0.<com.android.camera.ui.TouchCircleDrawable: int mW>;

        $i8 = $i5 / 2;

        $i6 = r0.<com.android.camera.ui.TouchCircleDrawable: int mH>;

        $i7 = $i6 / 2;

        $i9 = staticinvoke <java.lang.Math: int min(int,int)>($i8, $i7);

        $r2[1] = $i9;

        r1 = staticinvoke <android.animation.ValueAnimator: android.animation.ValueAnimator ofInt(int[])>($r2);

        virtualinvoke r1.<android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>(250L);

        $r5 = <com.android.camera.util.Gusterpolator: com.android.camera.util.Gusterpolator INSTANCE>;

        virtualinvoke r1.<android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r5);

        $r4 = new com.android.camera.ui.TouchCircleDrawable$1;

        specialinvoke $r4.<com.android.camera.ui.TouchCircleDrawable$1: void <init>(com.android.camera.ui.TouchCircleDrawable)>(r0);

        virtualinvoke r1.<android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r4);

        $r6 = new com.android.camera.ui.TouchCircleDrawable$2;

        specialinvoke $r6.<com.android.camera.ui.TouchCircleDrawable$2: void <init>(com.android.camera.ui.TouchCircleDrawable)>(r0);

        virtualinvoke r1.<android.animation.ValueAnimator: void addListener(android.animation.Animator$AnimatorListener)>($r6);

        virtualinvoke r1.<android.animation.ValueAnimator: void start()>();

        return;
    }

    public void reset()
    {
        com.android.camera.ui.TouchCircleDrawable r0;

        r0 := @this: com.android.camera.ui.TouchCircleDrawable;

        r0.<com.android.camera.ui.TouchCircleDrawable: int mColorRadius> = 0;

        return;
    }

    public void setAnimatorListener(android.animation.Animator$AnimatorListener)
    {
        com.android.camera.ui.TouchCircleDrawable r0;
        android.animation.Animator$AnimatorListener r1;

        r0 := @this: com.android.camera.ui.TouchCircleDrawable;

        r1 := @parameter0: android.animation.Animator$AnimatorListener;

        r0.<com.android.camera.ui.TouchCircleDrawable: android.animation.Animator$AnimatorListener mAnimatorListener> = r1;

        return;
    }

    public void setUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)
    {
        com.android.camera.ui.TouchCircleDrawable r0;
        android.animation.ValueAnimator$AnimatorUpdateListener r1;

        r0 := @this: com.android.camera.ui.TouchCircleDrawable;

        r1 := @parameter0: android.animation.ValueAnimator$AnimatorUpdateListener;

        r0.<com.android.camera.ui.TouchCircleDrawable: android.animation.ValueAnimator$AnimatorUpdateListener mUpdateListener> = r1;

        return;
    }

    static int access$002(com.android.camera.ui.TouchCircleDrawable, int)
    {
        com.android.camera.ui.TouchCircleDrawable r0;
        int i0;

        r0 := @parameter0: com.android.camera.ui.TouchCircleDrawable;

        i0 := @parameter1: int;

        r0.<com.android.camera.ui.TouchCircleDrawable: int mColorRadius> = i0;

        return i0;
    }

    static android.animation.ValueAnimator$AnimatorUpdateListener access$100(com.android.camera.ui.TouchCircleDrawable)
    {
        com.android.camera.ui.TouchCircleDrawable r0;
        android.animation.ValueAnimator$AnimatorUpdateListener $r1;

        r0 := @parameter0: com.android.camera.ui.TouchCircleDrawable;

        $r1 = r0.<com.android.camera.ui.TouchCircleDrawable: android.animation.ValueAnimator$AnimatorUpdateListener mUpdateListener>;

        return $r1;
    }

    static boolean access$202(com.android.camera.ui.TouchCircleDrawable, boolean)
    {
        com.android.camera.ui.TouchCircleDrawable r0;
        boolean z0;

        r0 := @parameter0: com.android.camera.ui.TouchCircleDrawable;

        z0 := @parameter1: boolean;

        r0.<com.android.camera.ui.TouchCircleDrawable: boolean mDrawBackground> = z0;

        return z0;
    }

    static android.animation.Animator$AnimatorListener access$300(com.android.camera.ui.TouchCircleDrawable)
    {
        com.android.camera.ui.TouchCircleDrawable r0;
        android.animation.Animator$AnimatorListener $r1;

        r0 := @parameter0: com.android.camera.ui.TouchCircleDrawable;

        $r1 = r0.<com.android.camera.ui.TouchCircleDrawable: android.animation.Animator$AnimatorListener mAnimatorListener>;

        return $r1;
    }

    public static void <clinit>()
    {
        <com.android.camera.ui.TouchCircleDrawable: int INVALID> = -1;

        <com.android.camera.ui.TouchCircleDrawable: int CIRCLE_ANIM_DURATION_MS> = 250;

        return;
    }
}
