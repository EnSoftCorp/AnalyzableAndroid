public final class com.adobe.xmp.options.SerializeOptions extends com.adobe.xmp.options.Options
{
    public static final int OMIT_PACKET_WRAPPER;
    public static final int READONLY_PACKET;
    public static final int USE_COMPACT_FORMAT;
    public static final int INCLUDE_THUMBNAIL_PAD;
    public static final int EXACT_PACKET_LENGTH;
    public static final int SORT;
    private static final int LITTLEENDIAN_BIT;
    private static final int UTF16_BIT;
    public static final int ENCODE_UTF8;
    public static final int ENCODE_UTF16BE;
    public static final int ENCODE_UTF16LE;
    private static final int ENCODING_MASK;
    private int padding;
    private java.lang.String newline;
    private java.lang.String indent;
    private int baseIndent;
    private boolean omitVersionAttribute;

    public void <init>()
    {
        com.adobe.xmp.options.SerializeOptions r0;

        r0 := @this: com.adobe.xmp.options.SerializeOptions;

        specialinvoke r0.<com.adobe.xmp.options.Options: void <init>()>();

        r0.<com.adobe.xmp.options.SerializeOptions: int padding> = 2048;

        r0.<com.adobe.xmp.options.SerializeOptions: java.lang.String newline> = "\n";

        r0.<com.adobe.xmp.options.SerializeOptions: java.lang.String indent> = "  ";

        r0.<com.adobe.xmp.options.SerializeOptions: int baseIndent> = 0;

        r0.<com.adobe.xmp.options.SerializeOptions: boolean omitVersionAttribute> = 0;

        return;
    }

    public void <init>(int) throws com.adobe.xmp.XMPException
    {
        com.adobe.xmp.options.SerializeOptions r0;
        int i0;

        r0 := @this: com.adobe.xmp.options.SerializeOptions;

        i0 := @parameter0: int;

        specialinvoke r0.<com.adobe.xmp.options.Options: void <init>(int)>(i0);

        r0.<com.adobe.xmp.options.SerializeOptions: int padding> = 2048;

        r0.<com.adobe.xmp.options.SerializeOptions: java.lang.String newline> = "\n";

        r0.<com.adobe.xmp.options.SerializeOptions: java.lang.String indent> = "  ";

        r0.<com.adobe.xmp.options.SerializeOptions: int baseIndent> = 0;

        r0.<com.adobe.xmp.options.SerializeOptions: boolean omitVersionAttribute> = 0;

        return;
    }

    public boolean getOmitPacketWrapper()
    {
        com.adobe.xmp.options.SerializeOptions r0;
        boolean $z0;

        r0 := @this: com.adobe.xmp.options.SerializeOptions;

        $z0 = virtualinvoke r0.<com.adobe.xmp.options.SerializeOptions: boolean getOption(int)>(16);

        return $z0;
    }

    public com.adobe.xmp.options.SerializeOptions setOmitPacketWrapper(boolean)
    {
        com.adobe.xmp.options.SerializeOptions r0;
        boolean z0;

        r0 := @this: com.adobe.xmp.options.SerializeOptions;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.adobe.xmp.options.SerializeOptions: void setOption(int,boolean)>(16, z0);

        return r0;
    }

    public boolean getReadOnlyPacket()
    {
        com.adobe.xmp.options.SerializeOptions r0;
        boolean $z0;

        r0 := @this: com.adobe.xmp.options.SerializeOptions;

        $z0 = virtualinvoke r0.<com.adobe.xmp.options.SerializeOptions: boolean getOption(int)>(32);

        return $z0;
    }

    public com.adobe.xmp.options.SerializeOptions setReadOnlyPacket(boolean)
    {
        com.adobe.xmp.options.SerializeOptions r0;
        boolean z0;

        r0 := @this: com.adobe.xmp.options.SerializeOptions;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.adobe.xmp.options.SerializeOptions: void setOption(int,boolean)>(32, z0);

        return r0;
    }

    public boolean getUseCompactFormat()
    {
        com.adobe.xmp.options.SerializeOptions r0;
        boolean $z0;

        r0 := @this: com.adobe.xmp.options.SerializeOptions;

        $z0 = virtualinvoke r0.<com.adobe.xmp.options.SerializeOptions: boolean getOption(int)>(64);

        return $z0;
    }

    public com.adobe.xmp.options.SerializeOptions setUseCompactFormat(boolean)
    {
        com.adobe.xmp.options.SerializeOptions r0;
        boolean z0;

        r0 := @this: com.adobe.xmp.options.SerializeOptions;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.adobe.xmp.options.SerializeOptions: void setOption(int,boolean)>(64, z0);

        return r0;
    }

    public boolean getIncludeThumbnailPad()
    {
        com.adobe.xmp.options.SerializeOptions r0;
        boolean $z0;

        r0 := @this: com.adobe.xmp.options.SerializeOptions;

        $z0 = virtualinvoke r0.<com.adobe.xmp.options.SerializeOptions: boolean getOption(int)>(256);

        return $z0;
    }

    public com.adobe.xmp.options.SerializeOptions setIncludeThumbnailPad(boolean)
    {
        com.adobe.xmp.options.SerializeOptions r0;
        boolean z0;

        r0 := @this: com.adobe.xmp.options.SerializeOptions;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.adobe.xmp.options.SerializeOptions: void setOption(int,boolean)>(256, z0);

        return r0;
    }

    public boolean getExactPacketLength()
    {
        com.adobe.xmp.options.SerializeOptions r0;
        boolean $z0;

        r0 := @this: com.adobe.xmp.options.SerializeOptions;

        $z0 = virtualinvoke r0.<com.adobe.xmp.options.SerializeOptions: boolean getOption(int)>(512);

        return $z0;
    }

    public com.adobe.xmp.options.SerializeOptions setExactPacketLength(boolean)
    {
        com.adobe.xmp.options.SerializeOptions r0;
        boolean z0;

        r0 := @this: com.adobe.xmp.options.SerializeOptions;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.adobe.xmp.options.SerializeOptions: void setOption(int,boolean)>(512, z0);

        return r0;
    }

    public boolean getSort()
    {
        com.adobe.xmp.options.SerializeOptions r0;
        boolean $z0;

        r0 := @this: com.adobe.xmp.options.SerializeOptions;

        $z0 = virtualinvoke r0.<com.adobe.xmp.options.SerializeOptions: boolean getOption(int)>(4096);

        return $z0;
    }

    public com.adobe.xmp.options.SerializeOptions setSort(boolean)
    {
        com.adobe.xmp.options.SerializeOptions r0;
        boolean z0;

        r0 := @this: com.adobe.xmp.options.SerializeOptions;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.adobe.xmp.options.SerializeOptions: void setOption(int,boolean)>(4096, z0);

        return r0;
    }

    public boolean getEncodeUTF16BE()
    {
        com.adobe.xmp.options.SerializeOptions r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.adobe.xmp.options.SerializeOptions;

        $i0 = virtualinvoke r0.<com.adobe.xmp.options.SerializeOptions: int getOptions()>();

        $i1 = $i0 & 3;

        if $i1 != 2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public com.adobe.xmp.options.SerializeOptions setEncodeUTF16BE(boolean)
    {
        com.adobe.xmp.options.SerializeOptions r0;
        boolean z0;

        r0 := @this: com.adobe.xmp.options.SerializeOptions;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.adobe.xmp.options.SerializeOptions: void setOption(int,boolean)>(3, 0);

        virtualinvoke r0.<com.adobe.xmp.options.SerializeOptions: void setOption(int,boolean)>(2, z0);

        return r0;
    }

    public boolean getEncodeUTF16LE()
    {
        com.adobe.xmp.options.SerializeOptions r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.adobe.xmp.options.SerializeOptions;

        $i0 = virtualinvoke r0.<com.adobe.xmp.options.SerializeOptions: int getOptions()>();

        $i1 = $i0 & 3;

        if $i1 != 3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public com.adobe.xmp.options.SerializeOptions setEncodeUTF16LE(boolean)
    {
        com.adobe.xmp.options.SerializeOptions r0;
        boolean z0;

        r0 := @this: com.adobe.xmp.options.SerializeOptions;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.adobe.xmp.options.SerializeOptions: void setOption(int,boolean)>(3, 0);

        virtualinvoke r0.<com.adobe.xmp.options.SerializeOptions: void setOption(int,boolean)>(3, z0);

        return r0;
    }

    public int getBaseIndent()
    {
        com.adobe.xmp.options.SerializeOptions r0;
        int $i0;

        r0 := @this: com.adobe.xmp.options.SerializeOptions;

        $i0 = r0.<com.adobe.xmp.options.SerializeOptions: int baseIndent>;

        return $i0;
    }

    public com.adobe.xmp.options.SerializeOptions setBaseIndent(int)
    {
        com.adobe.xmp.options.SerializeOptions r0;
        int i0;

        r0 := @this: com.adobe.xmp.options.SerializeOptions;

        i0 := @parameter0: int;

        r0.<com.adobe.xmp.options.SerializeOptions: int baseIndent> = i0;

        return r0;
    }

    public java.lang.String getIndent()
    {
        com.adobe.xmp.options.SerializeOptions r0;
        java.lang.String $r1;

        r0 := @this: com.adobe.xmp.options.SerializeOptions;

        $r1 = r0.<com.adobe.xmp.options.SerializeOptions: java.lang.String indent>;

        return $r1;
    }

    public com.adobe.xmp.options.SerializeOptions setIndent(java.lang.String)
    {
        com.adobe.xmp.options.SerializeOptions r0;
        java.lang.String r1;

        r0 := @this: com.adobe.xmp.options.SerializeOptions;

        r1 := @parameter0: java.lang.String;

        r0.<com.adobe.xmp.options.SerializeOptions: java.lang.String indent> = r1;

        return r0;
    }

    public java.lang.String getNewline()
    {
        com.adobe.xmp.options.SerializeOptions r0;
        java.lang.String $r1;

        r0 := @this: com.adobe.xmp.options.SerializeOptions;

        $r1 = r0.<com.adobe.xmp.options.SerializeOptions: java.lang.String newline>;

        return $r1;
    }

    public com.adobe.xmp.options.SerializeOptions setNewline(java.lang.String)
    {
        com.adobe.xmp.options.SerializeOptions r0;
        java.lang.String r1;

        r0 := @this: com.adobe.xmp.options.SerializeOptions;

        r1 := @parameter0: java.lang.String;

        r0.<com.adobe.xmp.options.SerializeOptions: java.lang.String newline> = r1;

        return r0;
    }

    public int getPadding()
    {
        com.adobe.xmp.options.SerializeOptions r0;
        int $i0;

        r0 := @this: com.adobe.xmp.options.SerializeOptions;

        $i0 = r0.<com.adobe.xmp.options.SerializeOptions: int padding>;

        return $i0;
    }

    public com.adobe.xmp.options.SerializeOptions setPadding(int)
    {
        com.adobe.xmp.options.SerializeOptions r0;
        int i0;

        r0 := @this: com.adobe.xmp.options.SerializeOptions;

        i0 := @parameter0: int;

        r0.<com.adobe.xmp.options.SerializeOptions: int padding> = i0;

        return r0;
    }

    public boolean getOmitVersionAttribute()
    {
        com.adobe.xmp.options.SerializeOptions r0;
        boolean $z0;

        r0 := @this: com.adobe.xmp.options.SerializeOptions;

        $z0 = r0.<com.adobe.xmp.options.SerializeOptions: boolean omitVersionAttribute>;

        return $z0;
    }

    public java.lang.String getEncoding()
    {
        com.adobe.xmp.options.SerializeOptions r0;
        boolean $z0, $z1;

        r0 := @this: com.adobe.xmp.options.SerializeOptions;

        $z0 = virtualinvoke r0.<com.adobe.xmp.options.SerializeOptions: boolean getEncodeUTF16BE()>();

        if $z0 == 0 goto label1;

        return "UTF-16BE";

     label1:
        $z1 = virtualinvoke r0.<com.adobe.xmp.options.SerializeOptions: boolean getEncodeUTF16LE()>();

        if $z1 == 0 goto label2;

        return "UTF-16LE";

     label2:
        return "UTF-8";
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        com.adobe.xmp.options.SerializeOptions r0, r1, $r3;
        int $i0, $i1, $i2;
        java.lang.String $r5, $r7;
        com.adobe.xmp.XMPException $r10;

        r0 := @this: com.adobe.xmp.options.SerializeOptions;

     label1:
        $r3 = new com.adobe.xmp.options.SerializeOptions;

        $i0 = virtualinvoke r0.<com.adobe.xmp.options.SerializeOptions: int getOptions()>();

        specialinvoke $r3.<com.adobe.xmp.options.SerializeOptions: void <init>(int)>($i0);

        r1 = $r3;

        $i1 = r0.<com.adobe.xmp.options.SerializeOptions: int baseIndent>;

        virtualinvoke r1.<com.adobe.xmp.options.SerializeOptions: com.adobe.xmp.options.SerializeOptions setBaseIndent(int)>($i1);

        $r5 = r0.<com.adobe.xmp.options.SerializeOptions: java.lang.String indent>;

        virtualinvoke r1.<com.adobe.xmp.options.SerializeOptions: com.adobe.xmp.options.SerializeOptions setIndent(java.lang.String)>($r5);

        $r7 = r0.<com.adobe.xmp.options.SerializeOptions: java.lang.String newline>;

        virtualinvoke r1.<com.adobe.xmp.options.SerializeOptions: com.adobe.xmp.options.SerializeOptions setNewline(java.lang.String)>($r7);

        $i2 = r0.<com.adobe.xmp.options.SerializeOptions: int padding>;

        virtualinvoke r1.<com.adobe.xmp.options.SerializeOptions: com.adobe.xmp.options.SerializeOptions setPadding(int)>($i2);

     label2:
        return r1;

     label3:
        $r10 := @caughtexception;

        return null;

        catch com.adobe.xmp.XMPException from label1 to label2 with label3;
    }

    protected java.lang.String defineOptionName(int)
    {
        com.adobe.xmp.options.SerializeOptions r0;
        int i0;

        r0 := @this: com.adobe.xmp.options.SerializeOptions;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 16: goto label1;
            case 32: goto label2;
            case 64: goto label3;
            case 256: goto label4;
            case 512: goto label5;
            case 4096: goto label6;
            default: goto label7;
        };

     label1:
        return "OMIT_PACKET_WRAPPER";

     label2:
        return "READONLY_PACKET";

     label3:
        return "USE_COMPACT_FORMAT";

     label4:
        return "INCLUDE_THUMBNAIL_PAD";

     label5:
        return "EXACT_PACKET_LENGTH";

     label6:
        return "NORMALIZED";

     label7:
        return null;
    }

    protected int getValidOptions()
    {
        com.adobe.xmp.options.SerializeOptions r0;

        r0 := @this: com.adobe.xmp.options.SerializeOptions;

        return 4976;
    }

    public static void <clinit>()
    {
        <com.adobe.xmp.options.SerializeOptions: int ENCODING_MASK> = 3;

        <com.adobe.xmp.options.SerializeOptions: int ENCODE_UTF16LE> = 3;

        <com.adobe.xmp.options.SerializeOptions: int ENCODE_UTF16BE> = 2;

        <com.adobe.xmp.options.SerializeOptions: int ENCODE_UTF8> = 0;

        <com.adobe.xmp.options.SerializeOptions: int UTF16_BIT> = 2;

        <com.adobe.xmp.options.SerializeOptions: int LITTLEENDIAN_BIT> = 1;

        <com.adobe.xmp.options.SerializeOptions: int SORT> = 4096;

        <com.adobe.xmp.options.SerializeOptions: int EXACT_PACKET_LENGTH> = 512;

        <com.adobe.xmp.options.SerializeOptions: int INCLUDE_THUMBNAIL_PAD> = 256;

        <com.adobe.xmp.options.SerializeOptions: int USE_COMPACT_FORMAT> = 64;

        <com.adobe.xmp.options.SerializeOptions: int READONLY_PACKET> = 32;

        <com.adobe.xmp.options.SerializeOptions: int OMIT_PACKET_WRAPPER> = 16;

        return;
    }
}
