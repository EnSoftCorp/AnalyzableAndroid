public class com.bumptech.glide.request.target.DrawableImageViewTarget extends com.bumptech.glide.request.target.ViewTarget
{
    private static final float SQUARE_RATIO_MARGIN;
    private final android.widget.ImageView view;

    public void <init>(android.widget.ImageView)
    {
        com.bumptech.glide.request.target.DrawableImageViewTarget r0;
        android.widget.ImageView r1;

        r0 := @this: com.bumptech.glide.request.target.DrawableImageViewTarget;

        r1 := @parameter0: android.widget.ImageView;

        specialinvoke r0.<com.bumptech.glide.request.target.ViewTarget: void <init>(android.view.View)>(r1);

        r0.<com.bumptech.glide.request.target.DrawableImageViewTarget: android.widget.ImageView view> = r1;

        return;
    }

    public void onResourceReady(android.graphics.drawable.Drawable, com.bumptech.glide.request.GlideAnimation)
    {
        com.bumptech.glide.request.target.DrawableImageViewTarget r0;
        android.graphics.drawable.Drawable r1, $r8;
        com.bumptech.glide.request.GlideAnimation r2;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        android.widget.ImageView $r3, $r4, $r5, $r6, $r7, $r9;
        int $i0, $i1, $i2, $i3, $i6;
        byte $b4, $b5;
        boolean $z0;
        com.bumptech.glide.request.target.SquaringDrawable $r10;

        r0 := @this: com.bumptech.glide.request.target.DrawableImageViewTarget;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r2 := @parameter1: com.bumptech.glide.request.GlideAnimation;

        $r3 = r0.<com.bumptech.glide.request.target.DrawableImageViewTarget: android.widget.ImageView view>;

        $i0 = virtualinvoke $r3.<android.widget.ImageView: int getWidth()>();

        $f2 = (float) $i0;

        $r4 = r0.<com.bumptech.glide.request.target.DrawableImageViewTarget: android.widget.ImageView view>;

        $i1 = virtualinvoke $r4.<android.widget.ImageView: int getHeight()>();

        $f3 = (float) $i1;

        f0 = $f2 / $f3;

        $i2 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $f4 = (float) $i2;

        $i3 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $f5 = (float) $i3;

        f1 = $f4 / $f5;

        $f6 = f0 - 1.0F;

        $f7 = staticinvoke <java.lang.Math: float abs(float)>($f6);

        $b4 = $f7 cmpg 0.05F;

        if $b4 > 0 goto label1;

        $f8 = f1 - 1.0F;

        $f9 = staticinvoke <java.lang.Math: float abs(float)>($f8);

        $b5 = $f9 cmpg 0.05F;

        if $b5 > 0 goto label1;

        $r10 = new com.bumptech.glide.request.target.SquaringDrawable;

        $r9 = r0.<com.bumptech.glide.request.target.DrawableImageViewTarget: android.widget.ImageView view>;

        $i6 = virtualinvoke $r9.<android.widget.ImageView: int getWidth()>();

        specialinvoke $r10.<com.bumptech.glide.request.target.SquaringDrawable: void <init>(android.graphics.drawable.Drawable,int)>(r1, $i6);

        r1 = $r10;

     label1:
        if r2 == null goto label2;

        $r5 = r0.<com.bumptech.glide.request.target.DrawableImageViewTarget: android.widget.ImageView view>;

        $r8 = virtualinvoke $r5.<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>();

        $r7 = r0.<com.bumptech.glide.request.target.DrawableImageViewTarget: android.widget.ImageView view>;

        $z0 = interfaceinvoke r2.<com.bumptech.glide.request.GlideAnimation: boolean animate(android.graphics.drawable.Drawable,java.lang.Object,android.view.View,com.bumptech.glide.request.target.Target)>($r8, r1, $r7, r0);

        if $z0 != 0 goto label3;

     label2:
        $r6 = r0.<com.bumptech.glide.request.target.DrawableImageViewTarget: android.widget.ImageView view>;

        virtualinvoke $r6.<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>(r1);

     label3:
        return;
    }

    public void setPlaceholder(android.graphics.drawable.Drawable)
    {
        com.bumptech.glide.request.target.DrawableImageViewTarget r0;
        android.graphics.drawable.Drawable r1;
        android.widget.ImageView $r2;

        r0 := @this: com.bumptech.glide.request.target.DrawableImageViewTarget;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<com.bumptech.glide.request.target.DrawableImageViewTarget: android.widget.ImageView view>;

        virtualinvoke $r2.<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>(r1);

        return;
    }

    public volatile void onResourceReady(java.lang.Object, com.bumptech.glide.request.GlideAnimation)
    {
        com.bumptech.glide.request.target.DrawableImageViewTarget r0;
        java.lang.Object r1;
        com.bumptech.glide.request.GlideAnimation r2;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: com.bumptech.glide.request.target.DrawableImageViewTarget;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: com.bumptech.glide.request.GlideAnimation;

        $r3 = (android.graphics.drawable.Drawable) r1;

        virtualinvoke r0.<com.bumptech.glide.request.target.DrawableImageViewTarget: void onResourceReady(android.graphics.drawable.Drawable,com.bumptech.glide.request.GlideAnimation)>($r3, r2);

        return;
    }

    public static void <clinit>()
    {
        <com.bumptech.glide.request.target.DrawableImageViewTarget: float SQUARE_RATIO_MARGIN> = 0.05F;

        return;
    }
}
