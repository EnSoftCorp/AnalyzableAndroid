class com.bumptech.glide.load.resource.gif.GifFrameManager extends java.lang.Object
{
    static final long MIN_FRAME_DELAY;
    private final com.bumptech.glide.load.engine.cache.MemorySizeCalculator calculator;
    private final com.bumptech.glide.load.resource.gif.GifFrameModelLoader frameLoader;
    private final com.bumptech.glide.load.resource.gif.GifFrameResourceDecoder frameResourceDecoder;
    private final com.bumptech.glide.load.ResourceDecoder cacheDecoder;
    private final com.bumptech.glide.load.Encoder sourceEncoder;
    private final com.bumptech.glide.gifdecoder.GifDecoder decoder;
    private final android.os.Handler mainHandler;
    private final com.bumptech.glide.load.ResourceEncoder encoder;
    private final android.content.Context context;
    private com.bumptech.glide.load.Transformation transformation;
    private final int targetWidth;
    private final int targetHeight;
    private com.bumptech.glide.load.resource.gif.GifFrameManager$DelayTarget current;
    private com.bumptech.glide.load.resource.gif.GifFrameManager$DelayTarget next;
    private int frameSize;

    public void <init>(android.content.Context, com.bumptech.glide.gifdecoder.GifDecoder, com.bumptech.glide.load.Transformation, int, int)
    {
        com.bumptech.glide.load.resource.gif.GifFrameManager r0;
        android.content.Context r1;
        com.bumptech.glide.gifdecoder.GifDecoder r2;
        com.bumptech.glide.load.Transformation r3;
        int i0, i1;
        com.bumptech.glide.Glide $r4;
        com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool $r5;
        android.os.Handler $r6;
        android.os.Looper $r7;

        r0 := @this: com.bumptech.glide.load.resource.gif.GifFrameManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.bumptech.glide.gifdecoder.GifDecoder;

        r3 := @parameter2: com.bumptech.glide.load.Transformation;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        $r4 = staticinvoke <com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>(r1);

        $r5 = virtualinvoke $r4.<com.bumptech.glide.Glide: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool getBitmapPool()>();

        $r6 = new android.os.Handler;

        $r7 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r6.<android.os.Handler: void <init>(android.os.Looper)>($r7);

        specialinvoke r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: void <init>(android.content.Context,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.gifdecoder.GifDecoder,android.os.Handler,com.bumptech.glide.load.Transformation,int,int)>(r1, $r5, r2, $r6, r3, i0, i1);

        return;
    }

    public void <init>(android.content.Context, com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool, com.bumptech.glide.gifdecoder.GifDecoder, android.os.Handler, com.bumptech.glide.load.Transformation, int, int)
    {
        com.bumptech.glide.load.resource.gif.GifFrameManager r0;
        android.content.Context r1;
        com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool r2;
        com.bumptech.glide.gifdecoder.GifDecoder r3;
        android.os.Handler r4;
        com.bumptech.glide.load.Transformation r5;
        int i0, i1;
        com.bumptech.glide.load.engine.cache.MemorySizeCalculator $r6;
        com.bumptech.glide.load.resource.gif.GifFrameModelLoader $r7;
        com.bumptech.glide.load.resource.gif.GifFrameResourceDecoder $r8;
        com.bumptech.glide.load.model.NullEncoder $r9;
        boolean $z0;
        com.bumptech.glide.load.resource.NullDecoder $r10;
        com.bumptech.glide.load.SkipCache $r11;
        com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder $r12;
        android.graphics.Bitmap$CompressFormat $r13;
        com.bumptech.glide.load.resource.bitmap.BitmapEncoder $r14;

        r0 := @this: com.bumptech.glide.load.resource.gif.GifFrameManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;

        r3 := @parameter2: com.bumptech.glide.gifdecoder.GifDecoder;

        r4 := @parameter3: android.os.Handler;

        r5 := @parameter4: com.bumptech.glide.load.Transformation;

        i0 := @parameter5: int;

        i1 := @parameter6: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: int frameSize> = -1;

        r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: android.content.Context context> = r1;

        r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: com.bumptech.glide.gifdecoder.GifDecoder decoder> = r3;

        r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: android.os.Handler mainHandler> = r4;

        r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: com.bumptech.glide.load.Transformation transformation> = r5;

        r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: int targetWidth> = i0;

        r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: int targetHeight> = i1;

        $r6 = new com.bumptech.glide.load.engine.cache.MemorySizeCalculator;

        specialinvoke $r6.<com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context)>(r1);

        r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: com.bumptech.glide.load.engine.cache.MemorySizeCalculator calculator> = $r6;

        $r7 = new com.bumptech.glide.load.resource.gif.GifFrameModelLoader;

        specialinvoke $r7.<com.bumptech.glide.load.resource.gif.GifFrameModelLoader: void <init>()>();

        r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: com.bumptech.glide.load.resource.gif.GifFrameModelLoader frameLoader> = $r7;

        $r8 = new com.bumptech.glide.load.resource.gif.GifFrameResourceDecoder;

        specialinvoke $r8.<com.bumptech.glide.load.resource.gif.GifFrameResourceDecoder: void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)>(r2);

        r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: com.bumptech.glide.load.resource.gif.GifFrameResourceDecoder frameResourceDecoder> = $r8;

        $r9 = staticinvoke <com.bumptech.glide.load.model.NullEncoder: com.bumptech.glide.load.model.NullEncoder get()>();

        r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: com.bumptech.glide.load.Encoder sourceEncoder> = $r9;

        $z0 = virtualinvoke r3.<com.bumptech.glide.gifdecoder.GifDecoder: boolean isTransparent()>();

        if $z0 != 0 goto label1;

        $r12 = new com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder;

        specialinvoke $r12.<com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder: void <init>(android.content.Context)>(r1);

        r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: com.bumptech.glide.load.ResourceDecoder cacheDecoder> = $r12;

        $r14 = new com.bumptech.glide.load.resource.bitmap.BitmapEncoder;

        $r13 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat JPEG>;

        specialinvoke $r14.<com.bumptech.glide.load.resource.bitmap.BitmapEncoder: void <init>(android.graphics.Bitmap$CompressFormat,int)>($r13, 70);

        r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: com.bumptech.glide.load.ResourceEncoder encoder> = $r14;

        goto label2;

     label1:
        $r10 = staticinvoke <com.bumptech.glide.load.resource.NullDecoder: com.bumptech.glide.load.resource.NullDecoder get()>();

        r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: com.bumptech.glide.load.ResourceDecoder cacheDecoder> = $r10;

        $r11 = staticinvoke <com.bumptech.glide.load.SkipCache: com.bumptech.glide.load.SkipCache get()>();

        r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: com.bumptech.glide.load.ResourceEncoder encoder> = $r11;

     label2:
        return;
    }

    com.bumptech.glide.load.Transformation getTransformation()
    {
        com.bumptech.glide.load.resource.gif.GifFrameManager r0;
        com.bumptech.glide.load.Transformation $r1;

        r0 := @this: com.bumptech.glide.load.resource.gif.GifFrameManager;

        $r1 = r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: com.bumptech.glide.load.Transformation transformation>;

        return $r1;
    }

    private int getEstimatedTotalFrameSize()
    {
        com.bumptech.glide.load.resource.gif.GifFrameManager r0;
        int $i0, $i1, $i2, $i3, $i4;
        com.bumptech.glide.gifdecoder.GifDecoder $r1, $r2;

        r0 := @this: com.bumptech.glide.load.resource.gif.GifFrameManager;

        $i0 = r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: int frameSize>;

        if $i0 != -1 goto label1;

        $r2 = r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: com.bumptech.glide.gifdecoder.GifDecoder decoder>;

        $i4 = virtualinvoke $r2.<com.bumptech.glide.gifdecoder.GifDecoder: int getDecodedFramesByteSizeSum()>();

        return $i4;

     label1:
        $i1 = r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: int frameSize>;

        $r1 = r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: com.bumptech.glide.gifdecoder.GifDecoder decoder>;

        $i2 = virtualinvoke $r1.<com.bumptech.glide.gifdecoder.GifDecoder: int getFrameCount()>();

        $i3 = $i1 * $i2;

        return $i3;
    }

    public void getNextFrame(com.bumptech.glide.load.resource.gif.GifFrameManager$FrameCallback)
    {
        com.bumptech.glide.load.resource.gif.GifFrameManager r0;
        com.bumptech.glide.load.resource.gif.GifFrameManager$FrameCallback r1;
        boolean z0, $z1;
        long l0, $l4, $l6, $l7;
        com.bumptech.glide.gifdecoder.GifDecoder $r2, $r4, $r9;
        int $i1, $i2, $i3, $i5;
        com.bumptech.glide.load.engine.cache.MemorySizeCalculator $r3;
        android.content.Context $r5;
        com.bumptech.glide.load.resource.gif.GifFrameManager$DelayTarget $r6, $r22;
        com.bumptech.glide.load.resource.gif.GifFrameModelLoader $r7;
        com.bumptech.glide.RequestManager $r8;
        com.bumptech.glide.RequestManager$GenericModelRequest $r10;
        com.bumptech.glide.GenericTranscodeRequest $r11;
        com.bumptech.glide.RequestManager$GenericModelRequest$GenericTypeRequest $r12;
        com.bumptech.glide.GenericRequestBuilder $r13, $r15, $r17, $r19, $r21, $r24;
        com.bumptech.glide.load.resource.gif.GifFrameResourceDecoder $r14;
        com.bumptech.glide.load.ResourceDecoder $r16;
        com.bumptech.glide.load.Transformation $r18;
        com.bumptech.glide.load.ResourceEncoder $r20;
        com.bumptech.glide.load.Encoder $r23;

        r0 := @this: com.bumptech.glide.load.resource.gif.GifFrameManager;

        r1 := @parameter0: com.bumptech.glide.load.resource.gif.GifFrameManager$FrameCallback;

        $r2 = r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: com.bumptech.glide.gifdecoder.GifDecoder decoder>;

        virtualinvoke $r2.<com.bumptech.glide.gifdecoder.GifDecoder: void advance()>();

        $i1 = specialinvoke r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: int getEstimatedTotalFrameSize()>();

        $r3 = r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: com.bumptech.glide.load.engine.cache.MemorySizeCalculator calculator>;

        $i2 = virtualinvoke $r3.<com.bumptech.glide.load.engine.cache.MemorySizeCalculator: int getMemoryCacheSize()>();

        $i3 = $i2 / 2;

        if $i1 <= $i3 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r4 = r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: com.bumptech.glide.gifdecoder.GifDecoder decoder>;

        $i5 = virtualinvoke $r4.<com.bumptech.glide.gifdecoder.GifDecoder: int getNextDelay()>();

        $l6 = (long) $i5;

        $l7 = staticinvoke <java.lang.Math: long max(long,long)>(16L, $l6);

        l0 = $l4 + $l7;

        $r6 = new com.bumptech.glide.load.resource.gif.GifFrameManager$DelayTarget;

        specialinvoke $r6.<com.bumptech.glide.load.resource.gif.GifFrameManager$DelayTarget: void <init>(com.bumptech.glide.load.resource.gif.GifFrameManager,com.bumptech.glide.load.resource.gif.GifFrameManager$FrameCallback,long)>(r0, r1, l0);

        r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: com.bumptech.glide.load.resource.gif.GifFrameManager$DelayTarget next> = $r6;

        $r5 = r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: android.content.Context context>;

        $r8 = staticinvoke <com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)>($r5);

        $r7 = r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: com.bumptech.glide.load.resource.gif.GifFrameModelLoader frameLoader>;

        $r10 = virtualinvoke $r8.<com.bumptech.glide.RequestManager: com.bumptech.glide.RequestManager$GenericModelRequest using(com.bumptech.glide.load.model.ModelLoader,java.lang.Class)>($r7, class "com/bumptech/glide/gifdecoder/GifDecoder");

        $r9 = r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: com.bumptech.glide.gifdecoder.GifDecoder decoder>;

        $r12 = virtualinvoke $r10.<com.bumptech.glide.RequestManager$GenericModelRequest: com.bumptech.glide.RequestManager$GenericModelRequest$GenericTypeRequest load(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r12.<com.bumptech.glide.RequestManager$GenericModelRequest$GenericTypeRequest: com.bumptech.glide.GenericTranscodeRequest as(java.lang.Class)>(class "android/graphics/Bitmap");

        $r14 = r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: com.bumptech.glide.load.resource.gif.GifFrameResourceDecoder frameResourceDecoder>;

        $r13 = virtualinvoke $r11.<com.bumptech.glide.GenericTranscodeRequest: com.bumptech.glide.GenericRequestBuilder decoder(com.bumptech.glide.load.ResourceDecoder)>($r14);

        $r16 = r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: com.bumptech.glide.load.ResourceDecoder cacheDecoder>;

        $r15 = virtualinvoke $r13.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder cacheDecoder(com.bumptech.glide.load.ResourceDecoder)>($r16);

        $r18 = r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: com.bumptech.glide.load.Transformation transformation>;

        $r17 = virtualinvoke $r15.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder transform(com.bumptech.glide.load.Transformation)>($r18);

        $r20 = r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: com.bumptech.glide.load.ResourceEncoder encoder>;

        $r19 = virtualinvoke $r17.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder encoder(com.bumptech.glide.load.ResourceEncoder)>($r20);

        $r23 = r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: com.bumptech.glide.load.Encoder sourceEncoder>;

        $r24 = virtualinvoke $r19.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder sourceEncoder(com.bumptech.glide.load.Encoder)>($r23);

        $r21 = virtualinvoke $r24.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder skipMemoryCache(boolean)>(z0);

        $r22 = r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: com.bumptech.glide.load.resource.gif.GifFrameManager$DelayTarget next>;

        virtualinvoke $r21.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target)>($r22);

        return;
    }

    public void clear()
    {
        com.bumptech.glide.load.resource.gif.GifFrameManager r0;
        com.bumptech.glide.load.resource.gif.GifFrameManager$DelayTarget $r1, $r2, $r3, $r4, $r6, $r7;
        android.os.Handler $r5, $r8;

        r0 := @this: com.bumptech.glide.load.resource.gif.GifFrameManager;

        $r1 = r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: com.bumptech.glide.load.resource.gif.GifFrameManager$DelayTarget current>;

        if $r1 == null goto label1;

        $r6 = r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: com.bumptech.glide.load.resource.gif.GifFrameManager$DelayTarget current>;

        staticinvoke <com.bumptech.glide.Glide: void clear(com.bumptech.glide.request.target.Target)>($r6);

        $r8 = r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: android.os.Handler mainHandler>;

        $r7 = r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: com.bumptech.glide.load.resource.gif.GifFrameManager$DelayTarget current>;

        virtualinvoke $r8.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r7);

     label1:
        $r2 = r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: com.bumptech.glide.load.resource.gif.GifFrameManager$DelayTarget next>;

        if $r2 == null goto label2;

        $r3 = r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: com.bumptech.glide.load.resource.gif.GifFrameManager$DelayTarget next>;

        staticinvoke <com.bumptech.glide.Glide: void clear(com.bumptech.glide.request.target.Target)>($r3);

        $r5 = r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: android.os.Handler mainHandler>;

        $r4 = r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: com.bumptech.glide.load.resource.gif.GifFrameManager$DelayTarget next>;

        virtualinvoke $r5.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r4);

     label2:
        return;
    }

    static int access$000(com.bumptech.glide.load.resource.gif.GifFrameManager)
    {
        com.bumptech.glide.load.resource.gif.GifFrameManager r0;
        int $i0;

        r0 := @parameter0: com.bumptech.glide.load.resource.gif.GifFrameManager;

        $i0 = r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: int targetWidth>;

        return $i0;
    }

    static int access$100(com.bumptech.glide.load.resource.gif.GifFrameManager)
    {
        com.bumptech.glide.load.resource.gif.GifFrameManager r0;
        int $i0;

        r0 := @parameter0: com.bumptech.glide.load.resource.gif.GifFrameManager;

        $i0 = r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: int targetHeight>;

        return $i0;
    }

    static int access$202(com.bumptech.glide.load.resource.gif.GifFrameManager, int)
    {
        com.bumptech.glide.load.resource.gif.GifFrameManager r0;
        int i0;

        r0 := @parameter0: com.bumptech.glide.load.resource.gif.GifFrameManager;

        i0 := @parameter1: int;

        r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: int frameSize> = i0;

        return i0;
    }

    static android.os.Handler access$300(com.bumptech.glide.load.resource.gif.GifFrameManager)
    {
        com.bumptech.glide.load.resource.gif.GifFrameManager r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.bumptech.glide.load.resource.gif.GifFrameManager;

        $r1 = r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: android.os.Handler mainHandler>;

        return $r1;
    }

    static com.bumptech.glide.load.resource.gif.GifFrameManager$DelayTarget access$400(com.bumptech.glide.load.resource.gif.GifFrameManager)
    {
        com.bumptech.glide.load.resource.gif.GifFrameManager r0;
        com.bumptech.glide.load.resource.gif.GifFrameManager$DelayTarget $r1;

        r0 := @parameter0: com.bumptech.glide.load.resource.gif.GifFrameManager;

        $r1 = r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: com.bumptech.glide.load.resource.gif.GifFrameManager$DelayTarget current>;

        return $r1;
    }

    static com.bumptech.glide.load.resource.gif.GifFrameManager$DelayTarget access$402(com.bumptech.glide.load.resource.gif.GifFrameManager, com.bumptech.glide.load.resource.gif.GifFrameManager$DelayTarget)
    {
        com.bumptech.glide.load.resource.gif.GifFrameManager r0;
        com.bumptech.glide.load.resource.gif.GifFrameManager$DelayTarget r1;

        r0 := @parameter0: com.bumptech.glide.load.resource.gif.GifFrameManager;

        r1 := @parameter1: com.bumptech.glide.load.resource.gif.GifFrameManager$DelayTarget;

        r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: com.bumptech.glide.load.resource.gif.GifFrameManager$DelayTarget current> = r1;

        return r1;
    }

    static com.bumptech.glide.load.resource.gif.GifFrameManager$DelayTarget access$500(com.bumptech.glide.load.resource.gif.GifFrameManager)
    {
        com.bumptech.glide.load.resource.gif.GifFrameManager r0;
        com.bumptech.glide.load.resource.gif.GifFrameManager$DelayTarget $r1;

        r0 := @parameter0: com.bumptech.glide.load.resource.gif.GifFrameManager;

        $r1 = r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: com.bumptech.glide.load.resource.gif.GifFrameManager$DelayTarget next>;

        return $r1;
    }

    static com.bumptech.glide.load.resource.gif.GifFrameManager$DelayTarget access$502(com.bumptech.glide.load.resource.gif.GifFrameManager, com.bumptech.glide.load.resource.gif.GifFrameManager$DelayTarget)
    {
        com.bumptech.glide.load.resource.gif.GifFrameManager r0;
        com.bumptech.glide.load.resource.gif.GifFrameManager$DelayTarget r1;

        r0 := @parameter0: com.bumptech.glide.load.resource.gif.GifFrameManager;

        r1 := @parameter1: com.bumptech.glide.load.resource.gif.GifFrameManager$DelayTarget;

        r0.<com.bumptech.glide.load.resource.gif.GifFrameManager: com.bumptech.glide.load.resource.gif.GifFrameManager$DelayTarget next> = r1;

        return r1;
    }

    public static void <clinit>()
    {
        <com.bumptech.glide.load.resource.gif.GifFrameManager: long MIN_FRAME_DELAY> = 16L;

        return;
    }
}
