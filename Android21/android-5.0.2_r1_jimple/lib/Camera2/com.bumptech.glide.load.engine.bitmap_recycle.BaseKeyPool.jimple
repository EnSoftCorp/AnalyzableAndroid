abstract class com.bumptech.glide.load.engine.bitmap_recycle.BaseKeyPool extends java.lang.Object
{
    private static final int MAX_SIZE;
    private final java.util.Queue keyPool;

    public void <init>()
    {
        com.bumptech.glide.load.engine.bitmap_recycle.BaseKeyPool r0;
        int $i0;
        java.util.LinkedList $r1;
        java.util.ArrayDeque $r2;

        r0 := @this: com.bumptech.glide.load.engine.bitmap_recycle.BaseKeyPool;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 9 goto label1;

        $r2 = new java.util.ArrayDeque;

        specialinvoke $r2.<java.util.ArrayDeque: void <init>(int)>(20);

        r0.<com.bumptech.glide.load.engine.bitmap_recycle.BaseKeyPool: java.util.Queue keyPool> = $r2;

        goto label2;

     label1:
        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<com.bumptech.glide.load.engine.bitmap_recycle.BaseKeyPool: java.util.Queue keyPool> = $r1;

     label2:
        return;
    }

    protected com.bumptech.glide.load.engine.bitmap_recycle.Poolable get()
    {
        com.bumptech.glide.load.engine.bitmap_recycle.BaseKeyPool r0;
        com.bumptech.glide.load.engine.bitmap_recycle.Poolable r1;
        java.util.Queue $r2;
        java.lang.Object $r3;

        r0 := @this: com.bumptech.glide.load.engine.bitmap_recycle.BaseKeyPool;

        $r2 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.BaseKeyPool: java.util.Queue keyPool>;

        $r3 = interfaceinvoke $r2.<java.util.Queue: java.lang.Object poll()>();

        r1 = (com.bumptech.glide.load.engine.bitmap_recycle.Poolable) $r3;

        if r1 != null goto label1;

        r1 = virtualinvoke r0.<com.bumptech.glide.load.engine.bitmap_recycle.BaseKeyPool: com.bumptech.glide.load.engine.bitmap_recycle.Poolable create()>();

     label1:
        return r1;
    }

    public void offer(com.bumptech.glide.load.engine.bitmap_recycle.Poolable)
    {
        com.bumptech.glide.load.engine.bitmap_recycle.BaseKeyPool r0;
        com.bumptech.glide.load.engine.bitmap_recycle.Poolable r1;
        java.util.Queue $r2, $r3;
        int $i0;

        r0 := @this: com.bumptech.glide.load.engine.bitmap_recycle.BaseKeyPool;

        r1 := @parameter0: com.bumptech.glide.load.engine.bitmap_recycle.Poolable;

        $r2 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.BaseKeyPool: java.util.Queue keyPool>;

        $i0 = interfaceinvoke $r2.<java.util.Queue: int size()>();

        if $i0 >= 20 goto label1;

        $r3 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.BaseKeyPool: java.util.Queue keyPool>;

        interfaceinvoke $r3.<java.util.Queue: boolean offer(java.lang.Object)>(r1);

     label1:
        return;
    }

    protected abstract com.bumptech.glide.load.engine.bitmap_recycle.Poolable create();

    public static void <clinit>()
    {
        <com.bumptech.glide.load.engine.bitmap_recycle.BaseKeyPool: int MAX_SIZE> = 20;

        return;
    }
}
