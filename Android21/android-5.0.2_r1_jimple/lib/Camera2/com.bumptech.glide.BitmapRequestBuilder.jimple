public class com.bumptech.glide.BitmapRequestBuilder extends com.bumptech.glide.GenericRequestBuilder
{
    private final com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool;
    private com.bumptech.glide.load.resource.bitmap.Downsampler downsampler;
    private com.bumptech.glide.load.DecodeFormat decodeFormat;
    private com.bumptech.glide.load.ResourceDecoder imageDecoder;
    private com.bumptech.glide.load.ResourceDecoder videoDecoder;
    private com.bumptech.glide.Glide glide;

    void <init>(android.content.Context, java.lang.Object, com.bumptech.glide.provider.LoadProvider, java.lang.Class, com.bumptech.glide.Glide, com.bumptech.glide.manager.RequestTracker)
    {
        com.bumptech.glide.BitmapRequestBuilder r0;
        android.content.Context r1;
        java.lang.Object r2;
        com.bumptech.glide.provider.LoadProvider r3;
        java.lang.Class r4;
        com.bumptech.glide.Glide r5;
        com.bumptech.glide.manager.RequestTracker r6;
        com.bumptech.glide.load.resource.bitmap.Downsampler $r7;
        com.bumptech.glide.load.DecodeFormat $r8;
        com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool $r9, $r11, $r13;
        com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder $r10;
        com.bumptech.glide.load.resource.bitmap.FileDescriptorBitmapDecoder $r12;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: com.bumptech.glide.provider.LoadProvider;

        r4 := @parameter3: java.lang.Class;

        r5 := @parameter4: com.bumptech.glide.Glide;

        r6 := @parameter5: com.bumptech.glide.manager.RequestTracker;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: void <init>(android.content.Context,java.lang.Object,com.bumptech.glide.provider.LoadProvider,java.lang.Class,com.bumptech.glide.Glide,com.bumptech.glide.manager.RequestTracker)>(r1, r2, r3, r4, r5, r6);

        $r7 = <com.bumptech.glide.load.resource.bitmap.Downsampler: com.bumptech.glide.load.resource.bitmap.Downsampler AT_LEAST>;

        r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.load.resource.bitmap.Downsampler downsampler> = $r7;

        $r8 = <com.bumptech.glide.load.DecodeFormat: com.bumptech.glide.load.DecodeFormat ALWAYS_ARGB_8888>;

        r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.load.DecodeFormat decodeFormat> = $r8;

        r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.Glide glide> = r5;

        $r9 = virtualinvoke r5.<com.bumptech.glide.Glide: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool getBitmapPool()>();

        r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool> = $r9;

        $r10 = new com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder;

        $r11 = r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool>;

        specialinvoke $r10.<com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder: void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)>($r11);

        r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.load.ResourceDecoder imageDecoder> = $r10;

        $r12 = new com.bumptech.glide.load.resource.bitmap.FileDescriptorBitmapDecoder;

        $r13 = r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool>;

        specialinvoke $r12.<com.bumptech.glide.load.resource.bitmap.FileDescriptorBitmapDecoder: void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)>($r13);

        r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.load.ResourceDecoder videoDecoder> = $r12;

        return;
    }

    public com.bumptech.glide.BitmapRequestBuilder approximate()
    {
        com.bumptech.glide.BitmapRequestBuilder r0, $r2;
        com.bumptech.glide.load.resource.bitmap.Downsampler $r1;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        $r1 = <com.bumptech.glide.load.resource.bitmap.Downsampler: com.bumptech.glide.load.resource.bitmap.Downsampler AT_LEAST>;

        $r2 = specialinvoke r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.BitmapRequestBuilder downsample(com.bumptech.glide.load.resource.bitmap.Downsampler)>($r1);

        return $r2;
    }

    public com.bumptech.glide.BitmapRequestBuilder asIs()
    {
        com.bumptech.glide.BitmapRequestBuilder r0, $r2;
        com.bumptech.glide.load.resource.bitmap.Downsampler $r1;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        $r1 = <com.bumptech.glide.load.resource.bitmap.Downsampler: com.bumptech.glide.load.resource.bitmap.Downsampler NONE>;

        $r2 = specialinvoke r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.BitmapRequestBuilder downsample(com.bumptech.glide.load.resource.bitmap.Downsampler)>($r1);

        return $r2;
    }

    private com.bumptech.glide.BitmapRequestBuilder downsample(com.bumptech.glide.load.resource.bitmap.Downsampler)
    {
        com.bumptech.glide.BitmapRequestBuilder r0;
        com.bumptech.glide.load.resource.bitmap.Downsampler r1;
        com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder $r2;
        com.bumptech.glide.load.DecodeFormat $r3;
        com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool $r4;
        com.bumptech.glide.load.resource.bitmap.ImageVideoBitmapDecoder $r5;
        com.bumptech.glide.load.ResourceDecoder $r6, $r7;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.load.resource.bitmap.Downsampler;

        r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.load.resource.bitmap.Downsampler downsampler> = r1;

        $r2 = new com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder;

        $r4 = r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool>;

        $r3 = r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.load.DecodeFormat decodeFormat>;

        specialinvoke $r2.<com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder: void <init>(com.bumptech.glide.load.resource.bitmap.Downsampler,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.DecodeFormat)>(r1, $r4, $r3);

        r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.load.ResourceDecoder imageDecoder> = $r2;

        $r5 = new com.bumptech.glide.load.resource.bitmap.ImageVideoBitmapDecoder;

        $r7 = r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.load.ResourceDecoder imageDecoder>;

        $r6 = r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.load.ResourceDecoder videoDecoder>;

        specialinvoke $r5.<com.bumptech.glide.load.resource.bitmap.ImageVideoBitmapDecoder: void <init>(com.bumptech.glide.load.ResourceDecoder,com.bumptech.glide.load.ResourceDecoder)>($r7, $r6);

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder decoder(com.bumptech.glide.load.ResourceDecoder)>($r5);

        return r0;
    }

    public com.bumptech.glide.BitmapRequestBuilder thumbnail(float)
    {
        com.bumptech.glide.BitmapRequestBuilder r0;
        float f0;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        f0 := @parameter0: float;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder thumbnail(float)>(f0);

        return r0;
    }

    public com.bumptech.glide.BitmapRequestBuilder thumbnail(com.bumptech.glide.BitmapRequestBuilder)
    {
        com.bumptech.glide.BitmapRequestBuilder r0, r1;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.BitmapRequestBuilder;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder thumbnail(com.bumptech.glide.GenericRequestBuilder)>(r1);

        return r0;
    }

    public com.bumptech.glide.BitmapRequestBuilder sizeMultiplier(float)
    {
        com.bumptech.glide.BitmapRequestBuilder r0;
        float f0;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        f0 := @parameter0: float;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder sizeMultiplier(float)>(f0);

        return r0;
    }

    public com.bumptech.glide.BitmapRequestBuilder decoder(com.bumptech.glide.load.ResourceDecoder)
    {
        com.bumptech.glide.BitmapRequestBuilder r0;
        com.bumptech.glide.load.ResourceDecoder r1;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.load.ResourceDecoder;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder decoder(com.bumptech.glide.load.ResourceDecoder)>(r1);

        return r0;
    }

    public com.bumptech.glide.BitmapRequestBuilder cacheDecoder(com.bumptech.glide.load.ResourceDecoder)
    {
        com.bumptech.glide.BitmapRequestBuilder r0;
        com.bumptech.glide.load.ResourceDecoder r1;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.load.ResourceDecoder;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder cacheDecoder(com.bumptech.glide.load.ResourceDecoder)>(r1);

        return r0;
    }

    public com.bumptech.glide.BitmapRequestBuilder encoder(com.bumptech.glide.load.ResourceEncoder)
    {
        com.bumptech.glide.BitmapRequestBuilder r0;
        com.bumptech.glide.load.ResourceEncoder r1;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.load.ResourceEncoder;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder encoder(com.bumptech.glide.load.ResourceEncoder)>(r1);

        return r0;
    }

    public com.bumptech.glide.BitmapRequestBuilder imageDecoder(com.bumptech.glide.load.ResourceDecoder)
    {
        com.bumptech.glide.BitmapRequestBuilder r0;
        com.bumptech.glide.load.ResourceDecoder r1, $r3;
        com.bumptech.glide.load.resource.bitmap.ImageVideoBitmapDecoder $r2;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.load.ResourceDecoder;

        r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.load.ResourceDecoder imageDecoder> = r1;

        $r2 = new com.bumptech.glide.load.resource.bitmap.ImageVideoBitmapDecoder;

        $r3 = r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.load.ResourceDecoder videoDecoder>;

        specialinvoke $r2.<com.bumptech.glide.load.resource.bitmap.ImageVideoBitmapDecoder: void <init>(com.bumptech.glide.load.ResourceDecoder,com.bumptech.glide.load.ResourceDecoder)>(r1, $r3);

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder decoder(com.bumptech.glide.load.ResourceDecoder)>($r2);

        return r0;
    }

    public com.bumptech.glide.BitmapRequestBuilder videoDecoder(com.bumptech.glide.load.ResourceDecoder)
    {
        com.bumptech.glide.BitmapRequestBuilder r0;
        com.bumptech.glide.load.ResourceDecoder r1, $r3;
        com.bumptech.glide.load.resource.bitmap.ImageVideoBitmapDecoder $r2;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.load.ResourceDecoder;

        r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.load.ResourceDecoder videoDecoder> = r1;

        $r2 = new com.bumptech.glide.load.resource.bitmap.ImageVideoBitmapDecoder;

        $r3 = r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.load.ResourceDecoder imageDecoder>;

        specialinvoke $r2.<com.bumptech.glide.load.resource.bitmap.ImageVideoBitmapDecoder: void <init>(com.bumptech.glide.load.ResourceDecoder,com.bumptech.glide.load.ResourceDecoder)>($r3, r1);

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder decoder(com.bumptech.glide.load.ResourceDecoder)>($r2);

        return r0;
    }

    public com.bumptech.glide.BitmapRequestBuilder format(com.bumptech.glide.load.DecodeFormat)
    {
        com.bumptech.glide.BitmapRequestBuilder r0;
        com.bumptech.glide.load.DecodeFormat r1;
        com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder $r2;
        com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool $r3, $r7;
        com.bumptech.glide.load.resource.bitmap.Downsampler $r4;
        com.bumptech.glide.load.resource.bitmap.FileDescriptorBitmapDecoder $r5;
        com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder $r6;
        com.bumptech.glide.load.resource.bitmap.ImageVideoBitmapDecoder $r8;
        com.bumptech.glide.load.ResourceDecoder $r9, $r10;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.load.DecodeFormat;

        r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.load.DecodeFormat decodeFormat> = r1;

        $r2 = new com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder;

        $r4 = r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.load.resource.bitmap.Downsampler downsampler>;

        $r3 = r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool>;

        specialinvoke $r2.<com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder: void <init>(com.bumptech.glide.load.resource.bitmap.Downsampler,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.DecodeFormat)>($r4, $r3, r1);

        r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.load.ResourceDecoder imageDecoder> = $r2;

        $r5 = new com.bumptech.glide.load.resource.bitmap.FileDescriptorBitmapDecoder;

        $r6 = new com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder;

        specialinvoke $r6.<com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder: void <init>()>();

        $r7 = r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool>;

        specialinvoke $r5.<com.bumptech.glide.load.resource.bitmap.FileDescriptorBitmapDecoder: void <init>(com.bumptech.glide.load.resource.bitmap.VideoBitmapDecoder,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.DecodeFormat)>($r6, $r7, r1);

        r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.load.ResourceDecoder videoDecoder> = $r5;

        $r8 = new com.bumptech.glide.load.resource.bitmap.ImageVideoBitmapDecoder;

        $r10 = r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.load.ResourceDecoder imageDecoder>;

        $r9 = r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.load.ResourceDecoder videoDecoder>;

        specialinvoke $r8.<com.bumptech.glide.load.resource.bitmap.ImageVideoBitmapDecoder: void <init>(com.bumptech.glide.load.ResourceDecoder,com.bumptech.glide.load.ResourceDecoder)>($r10, $r9);

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder decoder(com.bumptech.glide.load.ResourceDecoder)>($r8);

        return r0;
    }

    public com.bumptech.glide.BitmapRequestBuilder priority(com.bumptech.glide.Priority)
    {
        com.bumptech.glide.BitmapRequestBuilder r0;
        com.bumptech.glide.Priority r1;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.Priority;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder priority(com.bumptech.glide.Priority)>(r1);

        return r0;
    }

    public com.bumptech.glide.BitmapRequestBuilder centerCrop()
    {
        com.bumptech.glide.BitmapRequestBuilder r0, $r3;
        com.bumptech.glide.Glide $r1;
        com.bumptech.glide.load.resource.bitmap.CenterCrop $r2;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        $r1 = r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.Glide glide>;

        $r2 = virtualinvoke $r1.<com.bumptech.glide.Glide: com.bumptech.glide.load.resource.bitmap.CenterCrop getBitmapCenterCrop()>();

        $r3 = virtualinvoke r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.BitmapRequestBuilder transform(com.bumptech.glide.load.Transformation)>($r2);

        return $r3;
    }

    public com.bumptech.glide.BitmapRequestBuilder fitCenter()
    {
        com.bumptech.glide.BitmapRequestBuilder r0, $r3;
        com.bumptech.glide.Glide $r1;
        com.bumptech.glide.load.resource.bitmap.FitCenter $r2;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        $r1 = r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.Glide glide>;

        $r2 = virtualinvoke $r1.<com.bumptech.glide.Glide: com.bumptech.glide.load.resource.bitmap.FitCenter getBitmapFitCenter()>();

        $r3 = virtualinvoke r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.BitmapRequestBuilder transform(com.bumptech.glide.load.Transformation)>($r2);

        return $r3;
    }

    public com.bumptech.glide.BitmapRequestBuilder transform(com.bumptech.glide.load.Transformation)
    {
        com.bumptech.glide.BitmapRequestBuilder r0;
        com.bumptech.glide.load.Transformation r1;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.load.Transformation;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder transform(com.bumptech.glide.load.Transformation)>(r1);

        return r0;
    }

    public com.bumptech.glide.BitmapRequestBuilder transcoder(com.bumptech.glide.load.resource.transcode.ResourceTranscoder)
    {
        com.bumptech.glide.BitmapRequestBuilder r0;
        com.bumptech.glide.load.resource.transcode.ResourceTranscoder r1;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.load.resource.transcode.ResourceTranscoder;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder transcoder(com.bumptech.glide.load.resource.transcode.ResourceTranscoder)>(r1);

        return r0;
    }

    public com.bumptech.glide.BitmapRequestBuilder animate(int)
    {
        com.bumptech.glide.BitmapRequestBuilder r0;
        int i0;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        i0 := @parameter0: int;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder animate(int)>(i0);

        return r0;
    }

    public com.bumptech.glide.BitmapRequestBuilder animate(android.view.animation.Animation)
    {
        com.bumptech.glide.BitmapRequestBuilder r0;
        android.view.animation.Animation r1;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        r1 := @parameter0: android.view.animation.Animation;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder animate(android.view.animation.Animation)>(r1);

        return r0;
    }

    public com.bumptech.glide.BitmapRequestBuilder animate(com.bumptech.glide.request.ViewPropertyAnimation$Animator)
    {
        com.bumptech.glide.BitmapRequestBuilder r0;
        com.bumptech.glide.request.ViewPropertyAnimation$Animator r1;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.request.ViewPropertyAnimation$Animator;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder animate(com.bumptech.glide.request.ViewPropertyAnimation$Animator)>(r1);

        return r0;
    }

    public com.bumptech.glide.BitmapRequestBuilder placeholder(int)
    {
        com.bumptech.glide.BitmapRequestBuilder r0;
        int i0;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        i0 := @parameter0: int;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder placeholder(int)>(i0);

        return r0;
    }

    public com.bumptech.glide.BitmapRequestBuilder placeholder(android.graphics.drawable.Drawable)
    {
        com.bumptech.glide.BitmapRequestBuilder r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder placeholder(android.graphics.drawable.Drawable)>(r1);

        return r0;
    }

    public com.bumptech.glide.BitmapRequestBuilder error(int)
    {
        com.bumptech.glide.BitmapRequestBuilder r0;
        int i0;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        i0 := @parameter0: int;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder error(int)>(i0);

        return r0;
    }

    public com.bumptech.glide.BitmapRequestBuilder error(android.graphics.drawable.Drawable)
    {
        com.bumptech.glide.BitmapRequestBuilder r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder error(android.graphics.drawable.Drawable)>(r1);

        return r0;
    }

    public com.bumptech.glide.BitmapRequestBuilder listener(com.bumptech.glide.request.RequestListener)
    {
        com.bumptech.glide.BitmapRequestBuilder r0;
        com.bumptech.glide.request.RequestListener r1;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.request.RequestListener;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder listener(com.bumptech.glide.request.RequestListener)>(r1);

        return r0;
    }

    public com.bumptech.glide.BitmapRequestBuilder skipMemoryCache(boolean)
    {
        com.bumptech.glide.BitmapRequestBuilder r0;
        boolean z0;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder skipMemoryCache(boolean)>(z0);

        return r0;
    }

    public com.bumptech.glide.BitmapRequestBuilder skipDiskCache(boolean)
    {
        com.bumptech.glide.BitmapRequestBuilder r0;
        boolean z0;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder skipDiskCache(boolean)>(z0);

        return r0;
    }

    public com.bumptech.glide.BitmapRequestBuilder skipCache(boolean)
    {
        com.bumptech.glide.BitmapRequestBuilder r0;
        boolean z0;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder skipCache(boolean)>(z0);

        return r0;
    }

    public com.bumptech.glide.BitmapRequestBuilder override(int, int)
    {
        com.bumptech.glide.BitmapRequestBuilder r0;
        int i0, i1;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder override(int,int)>(i0, i1);

        return r0;
    }

    public com.bumptech.glide.BitmapRequestBuilder thumbnail(com.bumptech.glide.GenericRequestBuilder)
    {
        com.bumptech.glide.BitmapRequestBuilder r0;
        com.bumptech.glide.GenericRequestBuilder r1;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.GenericRequestBuilder;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder thumbnail(com.bumptech.glide.GenericRequestBuilder)>(r1);

        return r0;
    }

    public com.bumptech.glide.BitmapRequestBuilder sourceEncoder(com.bumptech.glide.load.Encoder)
    {
        com.bumptech.glide.BitmapRequestBuilder r0;
        com.bumptech.glide.load.Encoder r1;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.load.Encoder;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder sourceEncoder(com.bumptech.glide.load.Encoder)>(r1);

        return r0;
    }

    public com.bumptech.glide.BitmapRequestBuilder cacheSource(boolean)
    {
        com.bumptech.glide.BitmapRequestBuilder r0;
        boolean z0;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder cacheSource(boolean)>(z0);

        return r0;
    }

    public volatile com.bumptech.glide.GenericRequestBuilder override(int, int)
    {
        com.bumptech.glide.BitmapRequestBuilder r0, $r1;
        int i0, i1;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.BitmapRequestBuilder override(int,int)>(i0, i1);

        return $r1;
    }

    public volatile com.bumptech.glide.GenericRequestBuilder skipCache(boolean)
    {
        com.bumptech.glide.BitmapRequestBuilder r0, $r1;
        boolean z0;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.BitmapRequestBuilder skipCache(boolean)>(z0);

        return $r1;
    }

    public volatile com.bumptech.glide.GenericRequestBuilder skipDiskCache(boolean)
    {
        com.bumptech.glide.BitmapRequestBuilder r0, $r1;
        boolean z0;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.BitmapRequestBuilder skipDiskCache(boolean)>(z0);

        return $r1;
    }

    public volatile com.bumptech.glide.GenericRequestBuilder skipMemoryCache(boolean)
    {
        com.bumptech.glide.BitmapRequestBuilder r0, $r1;
        boolean z0;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.BitmapRequestBuilder skipMemoryCache(boolean)>(z0);

        return $r1;
    }

    public volatile com.bumptech.glide.GenericRequestBuilder listener(com.bumptech.glide.request.RequestListener)
    {
        com.bumptech.glide.BitmapRequestBuilder r0, $r2;
        com.bumptech.glide.request.RequestListener r1;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.request.RequestListener;

        $r2 = virtualinvoke r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.BitmapRequestBuilder listener(com.bumptech.glide.request.RequestListener)>(r1);

        return $r2;
    }

    public volatile com.bumptech.glide.GenericRequestBuilder error(android.graphics.drawable.Drawable)
    {
        com.bumptech.glide.BitmapRequestBuilder r0, $r2;
        android.graphics.drawable.Drawable r1;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = virtualinvoke r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.BitmapRequestBuilder error(android.graphics.drawable.Drawable)>(r1);

        return $r2;
    }

    public volatile com.bumptech.glide.GenericRequestBuilder error(int)
    {
        com.bumptech.glide.BitmapRequestBuilder r0, $r1;
        int i0;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.BitmapRequestBuilder error(int)>(i0);

        return $r1;
    }

    public volatile com.bumptech.glide.GenericRequestBuilder placeholder(android.graphics.drawable.Drawable)
    {
        com.bumptech.glide.BitmapRequestBuilder r0, $r2;
        android.graphics.drawable.Drawable r1;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = virtualinvoke r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.BitmapRequestBuilder placeholder(android.graphics.drawable.Drawable)>(r1);

        return $r2;
    }

    public volatile com.bumptech.glide.GenericRequestBuilder placeholder(int)
    {
        com.bumptech.glide.BitmapRequestBuilder r0, $r1;
        int i0;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.BitmapRequestBuilder placeholder(int)>(i0);

        return $r1;
    }

    public volatile com.bumptech.glide.GenericRequestBuilder animate(com.bumptech.glide.request.ViewPropertyAnimation$Animator)
    {
        com.bumptech.glide.BitmapRequestBuilder r0, $r2;
        com.bumptech.glide.request.ViewPropertyAnimation$Animator r1;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.request.ViewPropertyAnimation$Animator;

        $r2 = virtualinvoke r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.BitmapRequestBuilder animate(com.bumptech.glide.request.ViewPropertyAnimation$Animator)>(r1);

        return $r2;
    }

    public volatile com.bumptech.glide.GenericRequestBuilder animate(android.view.animation.Animation)
    {
        com.bumptech.glide.BitmapRequestBuilder r0, $r2;
        android.view.animation.Animation r1;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        r1 := @parameter0: android.view.animation.Animation;

        $r2 = virtualinvoke r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.BitmapRequestBuilder animate(android.view.animation.Animation)>(r1);

        return $r2;
    }

    public volatile com.bumptech.glide.GenericRequestBuilder animate(int)
    {
        com.bumptech.glide.BitmapRequestBuilder r0, $r1;
        int i0;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.BitmapRequestBuilder animate(int)>(i0);

        return $r1;
    }

    public volatile com.bumptech.glide.GenericRequestBuilder transcoder(com.bumptech.glide.load.resource.transcode.ResourceTranscoder)
    {
        com.bumptech.glide.BitmapRequestBuilder r0, $r2;
        com.bumptech.glide.load.resource.transcode.ResourceTranscoder r1;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.load.resource.transcode.ResourceTranscoder;

        $r2 = virtualinvoke r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.BitmapRequestBuilder transcoder(com.bumptech.glide.load.resource.transcode.ResourceTranscoder)>(r1);

        return $r2;
    }

    public volatile com.bumptech.glide.GenericRequestBuilder transform(com.bumptech.glide.load.Transformation)
    {
        com.bumptech.glide.BitmapRequestBuilder r0, $r2;
        com.bumptech.glide.load.Transformation r1;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.load.Transformation;

        $r2 = virtualinvoke r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.BitmapRequestBuilder transform(com.bumptech.glide.load.Transformation)>(r1);

        return $r2;
    }

    public volatile com.bumptech.glide.GenericRequestBuilder priority(com.bumptech.glide.Priority)
    {
        com.bumptech.glide.BitmapRequestBuilder r0, $r2;
        com.bumptech.glide.Priority r1;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.Priority;

        $r2 = virtualinvoke r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.BitmapRequestBuilder priority(com.bumptech.glide.Priority)>(r1);

        return $r2;
    }

    public volatile com.bumptech.glide.GenericRequestBuilder encoder(com.bumptech.glide.load.ResourceEncoder)
    {
        com.bumptech.glide.BitmapRequestBuilder r0, $r2;
        com.bumptech.glide.load.ResourceEncoder r1;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.load.ResourceEncoder;

        $r2 = virtualinvoke r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.BitmapRequestBuilder encoder(com.bumptech.glide.load.ResourceEncoder)>(r1);

        return $r2;
    }

    public volatile com.bumptech.glide.GenericRequestBuilder cacheSource(boolean)
    {
        com.bumptech.glide.BitmapRequestBuilder r0, $r1;
        boolean z0;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.BitmapRequestBuilder cacheSource(boolean)>(z0);

        return $r1;
    }

    public volatile com.bumptech.glide.GenericRequestBuilder sourceEncoder(com.bumptech.glide.load.Encoder)
    {
        com.bumptech.glide.BitmapRequestBuilder r0, $r2;
        com.bumptech.glide.load.Encoder r1;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.load.Encoder;

        $r2 = virtualinvoke r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.BitmapRequestBuilder sourceEncoder(com.bumptech.glide.load.Encoder)>(r1);

        return $r2;
    }

    public volatile com.bumptech.glide.GenericRequestBuilder cacheDecoder(com.bumptech.glide.load.ResourceDecoder)
    {
        com.bumptech.glide.BitmapRequestBuilder r0, $r2;
        com.bumptech.glide.load.ResourceDecoder r1;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.load.ResourceDecoder;

        $r2 = virtualinvoke r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.BitmapRequestBuilder cacheDecoder(com.bumptech.glide.load.ResourceDecoder)>(r1);

        return $r2;
    }

    public volatile com.bumptech.glide.GenericRequestBuilder decoder(com.bumptech.glide.load.ResourceDecoder)
    {
        com.bumptech.glide.BitmapRequestBuilder r0, $r2;
        com.bumptech.glide.load.ResourceDecoder r1;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.load.ResourceDecoder;

        $r2 = virtualinvoke r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.BitmapRequestBuilder decoder(com.bumptech.glide.load.ResourceDecoder)>(r1);

        return $r2;
    }

    public volatile com.bumptech.glide.GenericRequestBuilder sizeMultiplier(float)
    {
        com.bumptech.glide.BitmapRequestBuilder r0, $r1;
        float f0;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        f0 := @parameter0: float;

        $r1 = virtualinvoke r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.BitmapRequestBuilder sizeMultiplier(float)>(f0);

        return $r1;
    }

    public volatile com.bumptech.glide.GenericRequestBuilder thumbnail(float)
    {
        com.bumptech.glide.BitmapRequestBuilder r0, $r1;
        float f0;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        f0 := @parameter0: float;

        $r1 = virtualinvoke r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.BitmapRequestBuilder thumbnail(float)>(f0);

        return $r1;
    }

    public volatile com.bumptech.glide.GenericRequestBuilder thumbnail(com.bumptech.glide.GenericRequestBuilder)
    {
        com.bumptech.glide.BitmapRequestBuilder r0, $r2;
        com.bumptech.glide.GenericRequestBuilder r1;

        r0 := @this: com.bumptech.glide.BitmapRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.GenericRequestBuilder;

        $r2 = virtualinvoke r0.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.BitmapRequestBuilder thumbnail(com.bumptech.glide.GenericRequestBuilder)>(r1);

        return $r2;
    }
}
