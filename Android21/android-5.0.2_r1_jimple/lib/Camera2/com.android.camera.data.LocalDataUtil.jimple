public class com.android.camera.data.LocalDataUtil extends java.lang.Object
{
    private static final com.android.camera.debug.Log$Tag TAG;

    public void <init>()
    {
        com.android.camera.data.LocalDataUtil r0;

        r0 := @this: com.android.camera.data.LocalDataUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isMimeTypeVideo(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("video/");

        return $z0;
    }

    public static boolean isMimeTypeImage(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("image/");

        return $z0;
    }

    public static android.graphics.Point decodeBitmapDimension(java.lang.String)
    {
        java.lang.String r0;
        android.graphics.Point r1;
        java.io.FileInputStream r2, $r6;
        java.lang.Throwable r4, $r7;
        java.io.IOException $r8, $r10, $r11;
        java.io.FileNotFoundException $r9, r12;

        r0 := @parameter0: java.lang.String;

        r1 = null;

        r2 = null;

     label01:
        $r6 = new java.io.FileInputStream;

        specialinvoke $r6.<java.io.FileInputStream: void <init>(java.lang.String)>(r0);

        r2 = $r6;

        r1 = staticinvoke <com.android.camera.data.LocalDataUtil: android.graphics.Point decodeBitmapDimension(java.io.InputStream)>(r2);

     label02:
        if r2 == null goto label17;

     label03:
        virtualinvoke r2.<java.io.InputStream: void close()>();

     label04:
        goto label17;

     label05:
        $r11 := @caughtexception;

        goto label17;

     label06:
        $r9 := @caughtexception;

        r12 = $r9;

        virtualinvoke r12.<java.io.FileNotFoundException: void printStackTrace()>();

     label07:
        if r2 == null goto label17;

     label08:
        virtualinvoke r2.<java.io.InputStream: void close()>();

     label09:
        goto label17;

     label10:
        $r8 := @caughtexception;

        goto label17;

     label11:
        $r7 := @caughtexception;

        r4 = $r7;

     label12:
        if r2 == null goto label16;

     label13:
        virtualinvoke r2.<java.io.InputStream: void close()>();

     label14:
        goto label16;

     label15:
        $r10 := @caughtexception;

     label16:
        throw r4;

     label17:
        return r1;

        catch java.io.IOException from label03 to label04 with label05;
        catch java.io.FileNotFoundException from label01 to label02 with label06;
        catch java.io.IOException from label08 to label09 with label10;
        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.io.IOException from label13 to label14 with label15;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public static android.graphics.Point decodeBitmapDimension(java.io.InputStream)
    {
        java.io.InputStream r0;
        android.graphics.Point r1, $r6;
        android.graphics.BitmapFactory$Options r2, $r3;
        int $i0, $i1, $i2, $i3;
        com.android.camera.debug.Log$Tag $r5;

        r0 := @parameter0: java.io.InputStream;

        r1 = null;

        $r3 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r3.<android.graphics.BitmapFactory$Options: void <init>()>();

        r2 = $r3;

        r2.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 1;

        staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>(r0, null, r2);

        $i0 = r2.<android.graphics.BitmapFactory$Options: int outWidth>;

        if $i0 <= 0 goto label1;

        $i1 = r2.<android.graphics.BitmapFactory$Options: int outHeight>;

        if $i1 <= 0 goto label1;

        $r6 = new android.graphics.Point;

        $i3 = r2.<android.graphics.BitmapFactory$Options: int outWidth>;

        $i2 = r2.<android.graphics.BitmapFactory$Options: int outHeight>;

        specialinvoke $r6.<android.graphics.Point: void <init>(int,int)>($i3, $i2);

        r1 = $r6;

        goto label2;

     label1:
        $r5 = <com.android.camera.data.LocalDataUtil: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void e(com.android.camera.debug.Log$Tag,java.lang.String)>($r5, "Bitmap dimension decoding failed");

     label2:
        return r1;
    }

    public static android.graphics.Bitmap loadImageThumbnailFromStream(java.io.InputStream, int, int, int, int, int, int)
    {
        java.io.InputStream r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, i26;
        byte[] r1;
        android.graphics.BitmapFactory$Options r2, $r4;
        android.graphics.Bitmap r3;
        android.graphics.Matrix $r5, r6;
        float $f0;

        r0 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        i5 := @parameter6: int;

        r1 = newarray (byte)[32768];

        $i10 = i4 % 180;

        if $i10 == 0 goto label01;

        i6 = i1;

        i1 = i0;

        i0 = i6;

     label01:
        i26 = i0;

        i7 = i1;

        i8 = 1;

     label02:
        if i7 > i3 goto label03;

        if i26 > i2 goto label03;

        if i7 > 3379 goto label03;

        if i26 > 3379 goto label03;

        $i11 = i7 * i26;

        if $i11 <= i5 goto label04;

     label03:
        i8 = i8 << 1;

        i26 = i0 / i8;

        i7 = i0 / i8;

        goto label02;

     label04:
        if i3 > 3379 goto label05;

        if i2 <= 3379 goto label06;

     label05:
        $i12 = i26 * i7;

        $i13 = i5 / 4;

        if $i12 >= $i13 goto label06;

        if i8 <= 1 goto label06;

        i8 = i8 >> 2;

     label06:
        $r4 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r4.<android.graphics.BitmapFactory$Options: void <init>()>();

        r2 = $r4;

        r2.<android.graphics.BitmapFactory$Options: int inSampleSize> = i8;

        r2.<android.graphics.BitmapFactory$Options: byte[] inTempStorage> = r1;

        r3 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)>(r0, null, r2);

        if r3 != null goto label07;

        return null;

     label07:
        $i15 = virtualinvoke r3.<android.graphics.Bitmap: int getWidth()>();

        if $i15 > 3379 goto label08;

        $i24 = virtualinvoke r3.<android.graphics.Bitmap: int getHeight()>();

        if $i24 <= 3379 goto label09;

     label08:
        $i14 = virtualinvoke r3.<android.graphics.Bitmap: int getWidth()>();

        $i16 = virtualinvoke r3.<android.graphics.Bitmap: int getHeight()>();

        i9 = staticinvoke <java.lang.Math: int max(int,int)>($i14, $i16);

        $i18 = virtualinvoke r3.<android.graphics.Bitmap: int getWidth()>();

        $i17 = $i18 * 3379;

        $i20 = $i17 / i9;

        $i19 = virtualinvoke r3.<android.graphics.Bitmap: int getHeight()>();

        $i22 = $i19 * 3379;

        $i21 = $i22 / i9;

        r3 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>(r3, $i20, $i21, 0);

     label09:
        if i4 == 0 goto label10;

        if r3 == null goto label10;

        $r5 = new android.graphics.Matrix;

        specialinvoke $r5.<android.graphics.Matrix: void <init>()>();

        r6 = $r5;

        $f0 = (float) i4;

        virtualinvoke r6.<android.graphics.Matrix: void setRotate(float)>($f0);

        $i23 = virtualinvoke r3.<android.graphics.Bitmap: int getWidth()>();

        $i25 = virtualinvoke r3.<android.graphics.Bitmap: int getHeight()>();

        r3 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>(r3, 0, 0, $i23, $i25, r6, 0);

     label10:
        return r3;
    }

    public static android.graphics.Bitmap loadVideoThumbnail(java.lang.String)
    {
        java.lang.String r0, $r9, $r11;
        android.graphics.Bitmap r1;
        android.media.MediaMetadataRetriever r2, $r4;
        byte[] r3;
        int $i0;
        java.lang.IllegalArgumentException $r5, r12;
        java.lang.StringBuilder $r6, $r8, $r10;
        com.android.camera.debug.Log$Tag $r7;

        r0 := @parameter0: java.lang.String;

        r1 = null;

        $r4 = new android.media.MediaMetadataRetriever;

        specialinvoke $r4.<android.media.MediaMetadataRetriever: void <init>()>();

        r2 = $r4;

     label1:
        virtualinvoke r2.<android.media.MediaMetadataRetriever: void setDataSource(java.lang.String)>(r0);

        r3 = virtualinvoke r2.<android.media.MediaMetadataRetriever: byte[] getEmbeddedPicture()>();

        if r3 == null goto label2;

        $i0 = lengthof r3;

        r1 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int)>(r3, 0, $i0);

     label2:
        if r1 != null goto label3;

        r1 = virtualinvoke r2.<android.media.MediaMetadataRetriever: android.graphics.Bitmap getFrameAtTime()>();

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        r12 = $r5;

        $r7 = <com.android.camera.data.LocalDataUtil: com.android.camera.debug.Log$Tag TAG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("MediaMetadataRetriever.setDataSource() fail:");

        $r9 = virtualinvoke r12.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void e(com.android.camera.debug.Log$Tag,java.lang.String)>($r7, $r11);

     label5:
        virtualinvoke r2.<android.media.MediaMetadataRetriever: void release()>();

        return r1;

        catch java.lang.IllegalArgumentException from label1 to label3 with label4;
    }

    static void <clinit>()
    {
        com.android.camera.debug.Log$Tag $r0;

        $r0 = new com.android.camera.debug.Log$Tag;

        specialinvoke $r0.<com.android.camera.debug.Log$Tag: void <init>(java.lang.String)>("LocalDataUtil");

        <com.android.camera.data.LocalDataUtil: com.android.camera.debug.Log$Tag TAG> = $r0;

        return;
    }
}
