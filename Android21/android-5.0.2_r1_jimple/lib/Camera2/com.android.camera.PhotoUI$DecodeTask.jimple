class com.android.camera.PhotoUI$DecodeTask extends android.os.AsyncTask
{
    private final byte[] mData;
    private final int mOrientation;
    private final boolean mMirror;
    final com.android.camera.PhotoUI this$0;

    public void <init>(com.android.camera.PhotoUI, byte[], int, boolean)
    {
        com.android.camera.PhotoUI$DecodeTask r0;
        com.android.camera.PhotoUI r1;
        byte[] r2;
        int i0;
        boolean z0;

        r0 := @this: com.android.camera.PhotoUI$DecodeTask;

        r1 := @parameter0: com.android.camera.PhotoUI;

        r2 := @parameter1: byte[];

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        r0.<com.android.camera.PhotoUI$DecodeTask: com.android.camera.PhotoUI this$0> = r1;

        specialinvoke r0.<android.os.AsyncTask: void <init>()>();

        r0.<com.android.camera.PhotoUI$DecodeTask: byte[] mData> = r2;

        r0.<com.android.camera.PhotoUI$DecodeTask: int mOrientation> = i0;

        r0.<com.android.camera.PhotoUI$DecodeTask: boolean mMirror> = z0;

        return;
    }

    protected transient android.graphics.Bitmap doInBackground(java.lang.Void[])
    {
        com.android.camera.PhotoUI$DecodeTask r0;
        java.lang.Void[] r1;
        android.graphics.Bitmap r2, $r6;
        android.graphics.Matrix r3, $r5;
        byte[] $r4;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z2;
        float $f0;

        r0 := @this: com.android.camera.PhotoUI$DecodeTask;

        r1 := @parameter0: java.lang.Void[];

        $r4 = r0.<com.android.camera.PhotoUI$DecodeTask: byte[] mData>;

        r2 = staticinvoke <com.android.camera.util.CameraUtil: android.graphics.Bitmap downSample(byte[],int)>($r4, 4);

        $i0 = r0.<com.android.camera.PhotoUI$DecodeTask: int mOrientation>;

        if $i0 != 0 goto label1;

        $z2 = r0.<com.android.camera.PhotoUI$DecodeTask: boolean mMirror>;

        if $z2 == 0 goto label3;

     label1:
        $r5 = new android.graphics.Matrix;

        specialinvoke $r5.<android.graphics.Matrix: void <init>()>();

        r3 = $r5;

        $z0 = r0.<com.android.camera.PhotoUI$DecodeTask: boolean mMirror>;

        if $z0 == 0 goto label2;

        virtualinvoke r3.<android.graphics.Matrix: void setScale(float,float)>(-1.0F, 1.0F);

     label2:
        $i1 = r0.<com.android.camera.PhotoUI$DecodeTask: int mOrientation>;

        $f0 = (float) $i1;

        virtualinvoke r3.<android.graphics.Matrix: boolean preRotate(float)>($f0);

        $i2 = virtualinvoke r2.<android.graphics.Bitmap: int getWidth()>();

        $i3 = virtualinvoke r2.<android.graphics.Bitmap: int getHeight()>();

        $r6 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>(r2, 0, 0, $i2, $i3, r3, 0);

        return $r6;

     label3:
        return r2;
    }

    protected volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        com.android.camera.PhotoUI$DecodeTask r0;
        java.lang.Object[] r1;
        java.lang.Void[] $r2;
        android.graphics.Bitmap $r3;

        r0 := @this: com.android.camera.PhotoUI$DecodeTask;

        r1 := @parameter0: java.lang.Object[];

        $r2 = (java.lang.Void[]) r1;

        $r3 = virtualinvoke r0.<com.android.camera.PhotoUI$DecodeTask: android.graphics.Bitmap doInBackground(java.lang.Void[])>($r2);

        return $r3;
    }
}
