class com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key extends java.lang.Object implements com.bumptech.glide.load.engine.bitmap_recycle.Poolable
{
    private final com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$KeyPool pool;
    private int width;
    private int height;
    private android.graphics.Bitmap$Config config;

    public void <init>(com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$KeyPool)
    {
        com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key r0;
        com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$KeyPool r1;

        r0 := @this: com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key;

        r1 := @parameter0: com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$KeyPool;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key: com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$KeyPool pool> = r1;

        return;
    }

    public void init(int, int, android.graphics.Bitmap$Config)
    {
        com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key r0;
        int i0, i1;
        android.graphics.Bitmap$Config r1;

        r0 := @this: com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.graphics.Bitmap$Config;

        r0.<com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key: int width> = i0;

        r0.<com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key: int height> = i1;

        r0.<com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key: android.graphics.Bitmap$Config config> = r1;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        int $i0, $i1, $i2, $i3;
        android.graphics.Bitmap$Config $r5, $r6;

        r0 := @this: com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

     label2:
        return 0;

     label3:
        r2 = (com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key) r1;

        $i1 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key: int height>;

        $i0 = r2.<com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key: int height>;

        if $i1 == $i0 goto label4;

        return 0;

     label4:
        $i3 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key: int width>;

        $i2 = r2.<com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key: int width>;

        if $i3 == $i2 goto label5;

        return 0;

     label5:
        $r6 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key: android.graphics.Bitmap$Config config>;

        $r5 = r2.<com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key: android.graphics.Bitmap$Config config>;

        if $r6 == $r5 goto label6;

        return 0;

     label6:
        return 1;
    }

    public int hashCode()
    {
        com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key r0;
        int i0, $i1, $i2, $i3, $i4, i5, i6;
        android.graphics.Bitmap$Config $r1, $r2;

        r0 := @this: com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key;

        i0 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key: int width>;

        $i2 = 31 * i0;

        $i1 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key: int height>;

        i5 = $i2 + $i1;

        $i3 = 31 * i5;

        $r1 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key: android.graphics.Bitmap$Config config>;

        if $r1 == null goto label1;

        $r2 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key: android.graphics.Bitmap$Config config>;

        $i4 = virtualinvoke $r2.<android.graphics.Bitmap$Config: int hashCode()>();

        goto label2;

     label1:
        $i4 = 0;

     label2:
        i6 = $i3 + $i4;

        return i6;
    }

    public java.lang.String toString()
    {
        com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key r0;
        android.graphics.Bitmap$Config $r1;
        int $i0, $i1;
        java.lang.String $r2;

        r0 := @this: com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key;

        $i1 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key: int width>;

        $i0 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key: int height>;

        $r1 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key: android.graphics.Bitmap$Config config>;

        $r2 = staticinvoke <com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy: java.lang.String access$100(int,int,android.graphics.Bitmap$Config)>($i1, $i0, $r1);

        return $r2;
    }

    public void offer()
    {
        com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key r0;
        com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$KeyPool $r1;

        r0 := @this: com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key;

        $r1 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$Key: com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$KeyPool pool>;

        virtualinvoke $r1.<com.bumptech.glide.load.engine.bitmap_recycle.AttributeStrategy$KeyPool: void offer(com.bumptech.glide.load.engine.bitmap_recycle.Poolable)>(r0);

        return;
    }
}
