public class com.android.camera.one.v2.AutoFocusHelper extends java.lang.Object
{
    private static final com.android.camera.debug.Log$Tag TAG;
    private static final int CAMERA2_REGION_WEIGHT;
    private static final android.hardware.camera2.params.MeteringRectangle[] ZERO_WEIGHT_3A_REGION;

    public void <init>()
    {
        com.android.camera.one.v2.AutoFocusHelper r0;

        r0 := @this: com.android.camera.one.v2.AutoFocusHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.hardware.camera2.params.MeteringRectangle[] getZeroWeightRegion()
    {
        android.hardware.camera2.params.MeteringRectangle[] $r0;

        $r0 = <com.android.camera.one.v2.AutoFocusHelper: android.hardware.camera2.params.MeteringRectangle[] ZERO_WEIGHT_3A_REGION>;

        return $r0;
    }

    public static com.android.camera.one.OneCamera$AutoFocusState stateFromCamera2State(int)
    {
        int i0;
        com.android.camera.one.OneCamera$AutoFocusState $r0, $r1, $r2, $r3, $r4, $r5, $r6;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label1;
            case 4: goto label4;
            case 5: goto label6;
            case 6: goto label5;
            default: goto label7;
        };

     label1:
        $r0 = <com.android.camera.one.OneCamera$AutoFocusState: com.android.camera.one.OneCamera$AutoFocusState ACTIVE_SCAN>;

        return $r0;

     label2:
        $r5 = <com.android.camera.one.OneCamera$AutoFocusState: com.android.camera.one.OneCamera$AutoFocusState PASSIVE_SCAN>;

        return $r5;

     label3:
        $r4 = <com.android.camera.one.OneCamera$AutoFocusState: com.android.camera.one.OneCamera$AutoFocusState PASSIVE_FOCUSED>;

        return $r4;

     label4:
        $r3 = <com.android.camera.one.OneCamera$AutoFocusState: com.android.camera.one.OneCamera$AutoFocusState ACTIVE_FOCUSED>;

        return $r3;

     label5:
        $r1 = <com.android.camera.one.OneCamera$AutoFocusState: com.android.camera.one.OneCamera$AutoFocusState PASSIVE_UNFOCUSED>;

        return $r1;

     label6:
        $r2 = <com.android.camera.one.OneCamera$AutoFocusState: com.android.camera.one.OneCamera$AutoFocusState ACTIVE_UNFOCUSED>;

        return $r2;

     label7:
        $r6 = <com.android.camera.one.OneCamera$AutoFocusState: com.android.camera.one.OneCamera$AutoFocusState INACTIVE>;

        return $r6;
    }

    public static boolean checkControlAfState(android.hardware.camera2.CaptureResult)
    {
        android.hardware.camera2.CaptureResult r0;
        boolean z0, $z1, $z2;
        android.hardware.camera2.CaptureResult$Key $r1;
        java.lang.Object $r2;
        com.android.camera.debug.Log$Tag $r3;

        r0 := @parameter0: android.hardware.camera2.CaptureResult;

        $r1 = <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key CONTROL_AF_STATE>;

        $r2 = virtualinvoke r0.<android.hardware.camera2.CaptureResult: java.lang.Object get(android.hardware.camera2.CaptureResult$Key)>($r1);

        if $r2 != null goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z0 = $z2;

        if z0 == 0 goto label3;

        $r3 = <com.android.camera.one.v2.AutoFocusHelper: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void e(com.android.camera.debug.Log$Tag,java.lang.String)>($r3, "\n!!!! TotalCaptureResult missing CONTROL_AF_STATE. !!!!\n ");

     label3:
        if z0 != 0 goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        return $z1;
    }

    public static boolean checkLensState(android.hardware.camera2.CaptureResult)
    {
        android.hardware.camera2.CaptureResult r0;
        boolean z0, $z1, $z2;
        android.hardware.camera2.CaptureResult$Key $r1;
        java.lang.Object $r2;
        com.android.camera.debug.Log$Tag $r3;

        r0 := @parameter0: android.hardware.camera2.CaptureResult;

        $r1 = <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key LENS_STATE>;

        $r2 = virtualinvoke r0.<android.hardware.camera2.CaptureResult: java.lang.Object get(android.hardware.camera2.CaptureResult$Key)>($r1);

        if $r2 != null goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z0 = $z2;

        if z0 == 0 goto label3;

        $r3 = <com.android.camera.one.v2.AutoFocusHelper: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void e(com.android.camera.debug.Log$Tag,java.lang.String)>($r3, "\n!!!! TotalCaptureResult missing LENS_STATE. !!!!\n ");

     label3:
        if z0 != 0 goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        return $z1;
    }

    public static void logExtraFocusInfo(android.hardware.camera2.CaptureResult)
    {
        android.hardware.camera2.CaptureResult r0;
        java.lang.Object r1, $r7, $r11, $r14;
        boolean $z0, $z1;
        android.hardware.camera2.CaptureRequest $r2;
        java.lang.Object[] $r3;
        android.hardware.camera2.CaptureResult$Key $r4, $r10, $r12;
        com.android.camera.debug.Log$Tag $r5;
        java.lang.Integer $r8, $r13;
        int $i0, $i1;
        java.lang.String $r9, $r15, $r19, $r21;
        java.lang.StringBuilder $r16, $r17, $r18, $r20;

        r0 := @parameter0: android.hardware.camera2.CaptureResult;

        $z0 = staticinvoke <com.android.camera.one.v2.AutoFocusHelper: boolean checkControlAfState(android.hardware.camera2.CaptureResult)>(r0);

        if $z0 == 0 goto label1;

        $z1 = staticinvoke <com.android.camera.one.v2.AutoFocusHelper: boolean checkLensState(android.hardware.camera2.CaptureResult)>(r0);

        if $z1 != 0 goto label2;

     label1:
        return;

     label2:
        $r2 = virtualinvoke r0.<android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureRequest getRequest()>();

        r1 = virtualinvoke $r2.<android.hardware.camera2.CaptureRequest: java.lang.Object getTag()>();

        $r5 = <com.android.camera.one.v2.AutoFocusHelper: com.android.camera.debug.Log$Tag TAG>;

        $r3 = newarray (java.lang.Object)[4];

        $r4 = <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key CONTROL_AF_STATE>;

        $r7 = virtualinvoke r0.<android.hardware.camera2.CaptureResult: java.lang.Object get(android.hardware.camera2.CaptureResult$Key)>($r4);

        $r8 = (java.lang.Integer) $r7;

        $i0 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        $r9 = staticinvoke <com.android.camera.one.v2.AutoFocusHelper: java.lang.String controlAFStateToString(int)>($i0);

        $r3[0] = $r9;

        $r10 = <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key LENS_FOCUS_DISTANCE>;

        $r11 = virtualinvoke r0.<android.hardware.camera2.CaptureResult: java.lang.Object get(android.hardware.camera2.CaptureResult$Key)>($r10);

        $r3[1] = $r11;

        $r12 = <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key LENS_STATE>;

        $r14 = virtualinvoke r0.<android.hardware.camera2.CaptureResult: java.lang.Object get(android.hardware.camera2.CaptureResult$Key)>($r12);

        $r13 = (java.lang.Integer) $r14;

        $i1 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        $r15 = staticinvoke <com.android.camera.one.v2.AutoFocusHelper: java.lang.String lensStateToString(int)>($i1);

        $r3[2] = $r15;

        if r1 != null goto label3;

        $r19 = "";

        goto label4;

     label3:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        $r3[3] = $r19;

        $r21 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("af_state:%-17s  lens_foc_dist:%.3f  lens_state:%-10s  %s", $r3);

        staticinvoke <com.android.camera.debug.Log: void v(com.android.camera.debug.Log$Tag,java.lang.String)>($r5, $r21);

        return;
    }

    private static android.hardware.camera2.params.MeteringRectangle[] regionsForNormalizedCoord(float, float, float, android.graphics.Rect, int)
    {
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15;
        android.graphics.Rect r0, r2, $r3;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31;
        android.graphics.PointF r1;
        android.hardware.camera2.params.MeteringRectangle $r4;
        android.hardware.camera2.params.MeteringRectangle[] $r5;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        r0 := @parameter3: android.graphics.Rect;

        i0 := @parameter4: int;

        $i5 = virtualinvoke r0.<android.graphics.Rect: int width()>();

        $i6 = virtualinvoke r0.<android.graphics.Rect: int height()>();

        i1 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i6);

        $f4 = 0.5F * f2;

        $f3 = (float) i1;

        $f5 = $f4 * $f3;

        i2 = (int) $f5;

        r1 = staticinvoke <com.android.camera.util.CameraUtil: android.graphics.PointF normalizedSensorCoordsForNormalizedDisplayCoords(float,float,int)>(f0, f1, i0);

        $i7 = r0.<android.graphics.Rect: int left>;

        $f6 = (float) $i7;

        $f7 = r1.<android.graphics.PointF: float x>;

        $i8 = virtualinvoke r0.<android.graphics.Rect: int width()>();

        $f9 = (float) $i8;

        $f8 = $f7 * $f9;

        $f10 = $f6 + $f8;

        i3 = (int) $f10;

        $i9 = r0.<android.graphics.Rect: int top>;

        $f12 = (float) $i9;

        $f11 = r1.<android.graphics.PointF: float y>;

        $i10 = virtualinvoke r0.<android.graphics.Rect: int height()>();

        $f13 = (float) $i10;

        $f15 = $f11 * $f13;

        $f14 = $f12 + $f15;

        i4 = (int) $f14;

        $r3 = new android.graphics.Rect;

        $i16 = i3 - i2;

        $i12 = i4 - i2;

        $i11 = i3 + i2;

        $i13 = i4 + i2;

        specialinvoke $r3.<android.graphics.Rect: void <init>(int,int,int,int)>($i16, $i12, $i11, $i13);

        r2 = $r3;

        $i15 = r2.<android.graphics.Rect: int left>;

        $i14 = r0.<android.graphics.Rect: int left>;

        $i17 = r0.<android.graphics.Rect: int right>;

        $i20 = staticinvoke <com.android.camera.util.CameraUtil: int clamp(int,int,int)>($i15, $i14, $i17);

        r2.<android.graphics.Rect: int left> = $i20;

        $i19 = r2.<android.graphics.Rect: int top>;

        $i18 = r0.<android.graphics.Rect: int top>;

        $i21 = r0.<android.graphics.Rect: int bottom>;

        $i24 = staticinvoke <com.android.camera.util.CameraUtil: int clamp(int,int,int)>($i19, $i18, $i21);

        r2.<android.graphics.Rect: int top> = $i24;

        $i23 = r2.<android.graphics.Rect: int right>;

        $i22 = r0.<android.graphics.Rect: int left>;

        $i25 = r0.<android.graphics.Rect: int right>;

        $i29 = staticinvoke <com.android.camera.util.CameraUtil: int clamp(int,int,int)>($i23, $i22, $i25);

        r2.<android.graphics.Rect: int right> = $i29;

        $i26 = r2.<android.graphics.Rect: int bottom>;

        $i27 = r0.<android.graphics.Rect: int top>;

        $i28 = r0.<android.graphics.Rect: int bottom>;

        $i31 = staticinvoke <com.android.camera.util.CameraUtil: int clamp(int,int,int)>($i26, $i27, $i28);

        r2.<android.graphics.Rect: int bottom> = $i31;

        $r5 = newarray (android.hardware.camera2.params.MeteringRectangle)[1];

        $r4 = new android.hardware.camera2.params.MeteringRectangle;

        $i30 = <com.android.camera.one.v2.AutoFocusHelper: int CAMERA2_REGION_WEIGHT>;

        specialinvoke $r4.<android.hardware.camera2.params.MeteringRectangle: void <init>(android.graphics.Rect,int)>(r2, $i30);

        $r5[0] = $r4;

        return $r5;
    }

    public static android.hardware.camera2.params.MeteringRectangle[] afRegionsForNormalizedCoord(float, float, android.graphics.Rect, int)
    {
        float f0, f1, $f2;
        android.graphics.Rect r0;
        int i0;
        android.hardware.camera2.params.MeteringRectangle[] $r1;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r0 := @parameter2: android.graphics.Rect;

        i0 := @parameter3: int;

        $f2 = staticinvoke <com.android.camera.one.Settings3A: float getAutoFocusRegionWidth()>();

        $r1 = staticinvoke <com.android.camera.one.v2.AutoFocusHelper: android.hardware.camera2.params.MeteringRectangle[] regionsForNormalizedCoord(float,float,float,android.graphics.Rect,int)>(f0, f1, $f2, r0, i0);

        return $r1;
    }

    public static android.hardware.camera2.params.MeteringRectangle[] aeRegionsForNormalizedCoord(float, float, android.graphics.Rect, int)
    {
        float f0, f1, $f2;
        android.graphics.Rect r0;
        int i0;
        android.hardware.camera2.params.MeteringRectangle[] $r1;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r0 := @parameter2: android.graphics.Rect;

        i0 := @parameter3: int;

        $f2 = staticinvoke <com.android.camera.one.Settings3A: float getMeteringRegionWidth()>();

        $r1 = staticinvoke <com.android.camera.one.v2.AutoFocusHelper: android.hardware.camera2.params.MeteringRectangle[] regionsForNormalizedCoord(float,float,float,android.graphics.Rect,int)>(f0, f1, $f2, r0, i0);

        return $r1;
    }

    public static android.graphics.Rect cropRegionForZoom(android.hardware.camera2.CameraCharacteristics, float)
    {
        android.hardware.camera2.CameraCharacteristics r0;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6;
        android.graphics.Rect r1, $r4;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        android.hardware.camera2.CameraCharacteristics$Key $r2;
        java.lang.Object $r3;

        r0 := @parameter0: android.hardware.camera2.CameraCharacteristics;

        f0 := @parameter1: float;

        $r2 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_INFO_ACTIVE_ARRAY_SIZE>;

        $r3 = virtualinvoke r0.<android.hardware.camera2.CameraCharacteristics: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>($r2);

        r1 = (android.graphics.Rect) $r3;

        $i4 = virtualinvoke r1.<android.graphics.Rect: int width()>();

        i0 = $i4 / 2;

        $i5 = virtualinvoke r1.<android.graphics.Rect: int height()>();

        i1 = $i5 / 2;

        $i6 = virtualinvoke r1.<android.graphics.Rect: int width()>();

        $f1 = (float) $i6;

        $f2 = 0.5F * $f1;

        $f3 = $f2 / f0;

        i2 = (int) $f3;

        $i7 = virtualinvoke r1.<android.graphics.Rect: int height()>();

        $f5 = (float) $i7;

        $f4 = 0.5F * $f5;

        $f6 = $f4 / f0;

        i3 = (int) $f6;

        $r4 = new android.graphics.Rect;

        $i10 = i0 - i2;

        $i11 = i1 - i3;

        $i8 = i0 + i2;

        $i9 = i1 + i3;

        specialinvoke $r4.<android.graphics.Rect: void <init>(int,int,int,int)>($i10, $i11, $i8, $i9);

        return $r4;
    }

    private static java.lang.String controlAFStateToString(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            case 5: goto label6;
            case 6: goto label7;
            default: goto label8;
        };

     label1:
        return "inactive";

     label2:
        return "passive_scan";

     label3:
        return "passive_focused";

     label4:
        return "active_scan";

     label5:
        return "focus_locked";

     label6:
        return "not_focus_locked";

     label7:
        return "passive_unfocused";

     label8:
        return "unknown";
    }

    private static java.lang.String lensStateToString(int)
    {
        int i0;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 0: goto label2;
            case 1: goto label1;
            default: goto label3;
        };

     label1:
        return "moving";

     label2:
        return "stationary";

     label3:
        return "unknown";
    }

    static void <clinit>()
    {
        com.android.camera.debug.Log$Tag $r0;
        float $f0, $f1;
        int $i0;
        android.hardware.camera2.params.MeteringRectangle[] $r1;
        android.hardware.camera2.params.MeteringRectangle $r2;

        $r0 = new com.android.camera.debug.Log$Tag;

        specialinvoke $r0.<com.android.camera.debug.Log$Tag: void <init>(java.lang.String)>("OneCameraAFHelp");

        <com.android.camera.one.v2.AutoFocusHelper: com.android.camera.debug.Log$Tag TAG> = $r0;

        $f0 = staticinvoke <com.android.camera.one.Settings3A: float getMeteringRegionWeight()>();

        $f1 = staticinvoke <com.android.camera.util.CameraUtil: float lerp(float,float,float)>(0.0F, 1000.0F, $f0);

        $i0 = (int) $f1;

        <com.android.camera.one.v2.AutoFocusHelper: int CAMERA2_REGION_WEIGHT> = $i0;

        $r1 = newarray (android.hardware.camera2.params.MeteringRectangle)[1];

        $r2 = new android.hardware.camera2.params.MeteringRectangle;

        specialinvoke $r2.<android.hardware.camera2.params.MeteringRectangle: void <init>(int,int,int,int,int)>(0, 0, 0, 0, 0);

        $r1[0] = $r2;

        <com.android.camera.one.v2.AutoFocusHelper: android.hardware.camera2.params.MeteringRectangle[] ZERO_WEIGHT_3A_REGION> = $r1;

        return;
    }
}
