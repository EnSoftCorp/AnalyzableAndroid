public class com.android.volley.toolbox.BasicNetwork extends java.lang.Object implements com.android.volley.Network
{
    protected static final boolean DEBUG;
    private static int SLOW_REQUEST_THRESHOLD_MS;
    private static int DEFAULT_POOL_SIZE;
    protected final com.android.volley.toolbox.HttpStack mHttpStack;
    protected final com.android.volley.toolbox.ByteArrayPool mPool;

    public void <init>(com.android.volley.toolbox.HttpStack)
    {
        com.android.volley.toolbox.BasicNetwork r0;
        com.android.volley.toolbox.HttpStack r1;
        com.android.volley.toolbox.ByteArrayPool $r2;
        int $i0;

        r0 := @this: com.android.volley.toolbox.BasicNetwork;

        r1 := @parameter0: com.android.volley.toolbox.HttpStack;

        $r2 = new com.android.volley.toolbox.ByteArrayPool;

        $i0 = <com.android.volley.toolbox.BasicNetwork: int DEFAULT_POOL_SIZE>;

        specialinvoke $r2.<com.android.volley.toolbox.ByteArrayPool: void <init>(int)>($i0);

        specialinvoke r0.<com.android.volley.toolbox.BasicNetwork: void <init>(com.android.volley.toolbox.HttpStack,com.android.volley.toolbox.ByteArrayPool)>(r1, $r2);

        return;
    }

    public void <init>(com.android.volley.toolbox.HttpStack, com.android.volley.toolbox.ByteArrayPool)
    {
        com.android.volley.toolbox.BasicNetwork r0;
        com.android.volley.toolbox.HttpStack r1;
        com.android.volley.toolbox.ByteArrayPool r2;

        r0 := @this: com.android.volley.toolbox.BasicNetwork;

        r1 := @parameter0: com.android.volley.toolbox.HttpStack;

        r2 := @parameter1: com.android.volley.toolbox.ByteArrayPool;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.volley.toolbox.BasicNetwork: com.android.volley.toolbox.HttpStack mHttpStack> = r1;

        r0.<com.android.volley.toolbox.BasicNetwork: com.android.volley.toolbox.ByteArrayPool mPool> = r2;

        return;
    }

    public com.android.volley.NetworkResponse performRequest(com.android.volley.Request) throws com.android.volley.VolleyError
    {
        com.android.volley.toolbox.BasicNetwork r0;
        com.android.volley.Request r1;
        long l0, l2, $l3;
        org.apache.http.HttpResponse r2;
        byte[] r3, $r20;
        java.util.Map r4;
        java.util.HashMap r5, $r7, $r8;
        org.apache.http.StatusLine r6, $r34;
        int i1, i4;
        com.android.volley.Cache$Entry $r9, $r17, $r18;
        com.android.volley.toolbox.HttpStack $r10;
        org.apache.http.Header[] $r11;
        org.apache.http.HttpEntity $r12, $r15;
        com.android.volley.NetworkResponse $r13, $r16, $r38, r43;
        java.io.IOException $r14, $r29, r42;
        com.android.volley.TimeoutError $r19, $r24;
        java.net.SocketTimeoutException $r21;
        java.net.MalformedURLException $r22, r41;
        org.apache.http.conn.ConnectTimeoutException $r23;
        java.lang.StringBuilder $r25, $r28, $r31;
        java.lang.String $r26, $r32, $r35;
        java.lang.RuntimeException $r27;
        com.android.volley.NoConnectionError $r30;
        java.lang.Object[] $r33;
        java.lang.Integer $r36;
        com.android.volley.AuthFailureError $r37;
        com.android.volley.NetworkError $r39;
        com.android.volley.ServerError $r40;

        r0 := @this: com.android.volley.toolbox.BasicNetwork;

        r1 := @parameter0: com.android.volley.Request;

        l0 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

     label01:
        r2 = null;

        r3 = null;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r4 = $r7;

     label02:
        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        r5 = $r8;

        $r9 = virtualinvoke r1.<com.android.volley.Request: com.android.volley.Cache$Entry getCacheEntry()>();

        specialinvoke r0.<com.android.volley.toolbox.BasicNetwork: void addCacheHeaders(java.util.Map,com.android.volley.Cache$Entry)>(r5, $r9);

        $r10 = r0.<com.android.volley.toolbox.BasicNetwork: com.android.volley.toolbox.HttpStack mHttpStack>;

        r2 = interfaceinvoke $r10.<com.android.volley.toolbox.HttpStack: org.apache.http.HttpResponse performRequest(com.android.volley.Request,java.util.Map)>(r1, r5);

        r6 = interfaceinvoke r2.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        i1 = interfaceinvoke r6.<org.apache.http.StatusLine: int getStatusCode()>();

        $r11 = interfaceinvoke r2.<org.apache.http.HttpResponse: org.apache.http.Header[] getAllHeaders()>();

        r4 = staticinvoke <com.android.volley.toolbox.BasicNetwork: java.util.Map convertHeaders(org.apache.http.Header[])>($r11);

        if i1 != 304 goto label06;

        $r16 = new com.android.volley.NetworkResponse;

        $r18 = virtualinvoke r1.<com.android.volley.Request: com.android.volley.Cache$Entry getCacheEntry()>();

        if $r18 != null goto label03;

        $r20 = null;

        goto label04;

     label03:
        $r17 = virtualinvoke r1.<com.android.volley.Request: com.android.volley.Cache$Entry getCacheEntry()>();

        $r20 = $r17.<com.android.volley.Cache$Entry: byte[] data>;

     label04:
        specialinvoke $r16.<com.android.volley.NetworkResponse: void <init>(int,byte[],java.util.Map,boolean)>(304, $r20, r4, 1);

     label05:
        return $r16;

     label06:
        $r12 = interfaceinvoke r2.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        if $r12 == null goto label07;

        $r15 = interfaceinvoke r2.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        r3 = specialinvoke r0.<com.android.volley.toolbox.BasicNetwork: byte[] entityToBytes(org.apache.http.HttpEntity)>($r15);

        goto label08;

     label07:
        r3 = newarray (byte)[0];

     label08:
        $l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l2 = $l3 - l0;

        specialinvoke r0.<com.android.volley.toolbox.BasicNetwork: void logSlowRequests(long,com.android.volley.Request,byte[],org.apache.http.StatusLine)>(l2, r1, r3, r6);

        if i1 < 200 goto label09;

        if i1 <= 299 goto label10;

     label09:
        $r14 = new java.io.IOException;

        specialinvoke $r14.<java.io.IOException: void <init>()>();

        throw $r14;

     label10:
        $r13 = new com.android.volley.NetworkResponse;

        specialinvoke $r13.<com.android.volley.NetworkResponse: void <init>(int,byte[],java.util.Map,boolean)>(i1, r3, r4, 0);

     label11:
        return $r13;

     label12:
        $r21 := @caughtexception;

        $r19 = new com.android.volley.TimeoutError;

        specialinvoke $r19.<com.android.volley.TimeoutError: void <init>()>();

        staticinvoke <com.android.volley.toolbox.BasicNetwork: void attemptRetryOnException(java.lang.String,com.android.volley.Request,com.android.volley.VolleyError)>("socket", r1, $r19);

        goto label21;

     label13:
        $r23 := @caughtexception;

        $r24 = new com.android.volley.TimeoutError;

        specialinvoke $r24.<com.android.volley.TimeoutError: void <init>()>();

        staticinvoke <com.android.volley.toolbox.BasicNetwork: void attemptRetryOnException(java.lang.String,com.android.volley.Request,com.android.volley.VolleyError)>("connection", r1, $r24);

        goto label21;

     label14:
        $r22 := @caughtexception;

        r41 = $r22;

        $r27 = new java.lang.RuntimeException;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad URL ");

        $r26 = virtualinvoke r1.<com.android.volley.Request: java.lang.String getUrl()>();

        $r31 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r32, r41);

        throw $r27;

     label15:
        $r29 := @caughtexception;

        r42 = $r29;

        if r2 == null goto label16;

        $r34 = interfaceinvoke r2.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        i4 = interfaceinvoke $r34.<org.apache.http.StatusLine: int getStatusCode()>();

        goto label17;

     label16:
        $r30 = new com.android.volley.NoConnectionError;

        specialinvoke $r30.<com.android.volley.NoConnectionError: void <init>(java.lang.Throwable)>(r42);

        throw $r30;

     label17:
        $r33 = newarray (java.lang.Object)[2];

        $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        $r33[0] = $r36;

        $r35 = virtualinvoke r1.<com.android.volley.Request: java.lang.String getUrl()>();

        $r33[1] = $r35;

        staticinvoke <com.android.volley.VolleyLog: void e(java.lang.String,java.lang.Object[])>("Unexpected response code %d for %s", $r33);

        if r3 == null goto label20;

        $r38 = new com.android.volley.NetworkResponse;

        specialinvoke $r38.<com.android.volley.NetworkResponse: void <init>(int,byte[],java.util.Map,boolean)>(i4, r3, r4, 0);

        r43 = $r38;

        if i4 == 401 goto label18;

        if i4 != 403 goto label19;

     label18:
        $r37 = new com.android.volley.AuthFailureError;

        specialinvoke $r37.<com.android.volley.AuthFailureError: void <init>(com.android.volley.NetworkResponse)>(r43);

        staticinvoke <com.android.volley.toolbox.BasicNetwork: void attemptRetryOnException(java.lang.String,com.android.volley.Request,com.android.volley.VolleyError)>("auth", r1, $r37);

        goto label21;

     label19:
        $r40 = new com.android.volley.ServerError;

        specialinvoke $r40.<com.android.volley.ServerError: void <init>(com.android.volley.NetworkResponse)>(r43);

        throw $r40;

     label20:
        $r39 = new com.android.volley.NetworkError;

        specialinvoke $r39.<com.android.volley.NetworkError: void <init>(com.android.volley.NetworkResponse)>(null);

        throw $r39;

     label21:
        goto label01;

        catch java.net.SocketTimeoutException from label02 to label05 with label12;
        catch java.net.SocketTimeoutException from label06 to label11 with label12;
        catch org.apache.http.conn.ConnectTimeoutException from label02 to label05 with label13;
        catch org.apache.http.conn.ConnectTimeoutException from label06 to label11 with label13;
        catch java.net.MalformedURLException from label02 to label05 with label14;
        catch java.net.MalformedURLException from label06 to label11 with label14;
        catch java.io.IOException from label02 to label05 with label15;
        catch java.io.IOException from label06 to label11 with label15;
    }

    private void logSlowRequests(long, com.android.volley.Request, byte[], org.apache.http.StatusLine)
    {
        com.android.volley.toolbox.BasicNetwork r0;
        long l0, $l7;
        com.android.volley.Request r1;
        byte[] r2;
        org.apache.http.StatusLine r3;
        boolean $z0;
        java.lang.Object[] $r4;
        java.lang.Long $r6;
        int $i1, $i2, $i4, $i5;
        java.lang.Integer $r7, $r9;
        com.android.volley.RetryPolicy $r8;
        java.lang.Comparable $r10;
        byte $b6;

        r0 := @this: com.android.volley.toolbox.BasicNetwork;

        l0 := @parameter0: long;

        r1 := @parameter1: com.android.volley.Request;

        r2 := @parameter2: byte[];

        r3 := @parameter3: org.apache.http.StatusLine;

        $z0 = <com.android.volley.toolbox.BasicNetwork: boolean DEBUG>;

        if $z0 != 0 goto label1;

        $i5 = <com.android.volley.toolbox.BasicNetwork: int SLOW_REQUEST_THRESHOLD_MS>;

        $l7 = (long) $i5;

        $b6 = l0 cmp $l7;

        if $b6 <= 0 goto label4;

     label1:
        $r4 = newarray (java.lang.Object)[5];

        $r4[0] = r1;

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        $r4[1] = $r6;

        if r2 == null goto label2;

        $i4 = lengthof r2;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        goto label3;

     label2:
        $r10 = "null";

     label3:
        $r4[2] = $r10;

        $i1 = interfaceinvoke r3.<org.apache.http.StatusLine: int getStatusCode()>();

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $r4[3] = $r7;

        $r8 = virtualinvoke r1.<com.android.volley.Request: com.android.volley.RetryPolicy getRetryPolicy()>();

        $i2 = interfaceinvoke $r8.<com.android.volley.RetryPolicy: int getCurrentRetryCount()>();

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r4[4] = $r9;

        staticinvoke <com.android.volley.VolleyLog: void d(java.lang.String,java.lang.Object[])>("HTTP response for request=<%s> [lifetime=%d], [size=%s], [rc=%d], [retryCount=%s]", $r4);

     label4:
        return;
    }

    private static void attemptRetryOnException(java.lang.String, com.android.volley.Request, com.android.volley.VolleyError) throws com.android.volley.VolleyError
    {
        java.lang.String r0, $r7, $r11;
        com.android.volley.Request r1;
        com.android.volley.VolleyError r2, r4, $r8;
        com.android.volley.RetryPolicy r3;
        int i0;
        java.lang.Object[] $r5, $r9;
        java.lang.Integer $r6, $r10;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.android.volley.Request;

        r2 := @parameter2: com.android.volley.VolleyError;

        r3 = virtualinvoke r1.<com.android.volley.Request: com.android.volley.RetryPolicy getRetryPolicy()>();

        i0 = virtualinvoke r1.<com.android.volley.Request: int getTimeoutMs()>();

     label1:
        interfaceinvoke r3.<com.android.volley.RetryPolicy: void retry(com.android.volley.VolleyError)>(r2);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        r4 = $r8;

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = r0;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r9[1] = $r10;

        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s-timeout-giveup [timeout=%s]", $r9);

        virtualinvoke r1.<com.android.volley.Request: void addMarker(java.lang.String)>($r11);

        throw r4;

     label4:
        $r5 = newarray (java.lang.Object)[2];

        $r5[0] = r0;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r5[1] = $r6;

        $r7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s-retry [timeout=%s]", $r5);

        virtualinvoke r1.<com.android.volley.Request: void addMarker(java.lang.String)>($r7);

        return;

        catch com.android.volley.VolleyError from label1 to label2 with label3;
    }

    private void addCacheHeaders(java.util.Map, com.android.volley.Cache$Entry)
    {
        com.android.volley.toolbox.BasicNetwork r0;
        java.util.Map r1;
        com.android.volley.Cache$Entry r2;
        java.util.Date r3, $r5;
        java.lang.String $r4, $r6, $r8;
        long $l0, $l2;
        byte $b1;

        r0 := @this: com.android.volley.toolbox.BasicNetwork;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: com.android.volley.Cache$Entry;

        if r2 != null goto label1;

        return;

     label1:
        $r4 = r2.<com.android.volley.Cache$Entry: java.lang.String etag>;

        if $r4 == null goto label2;

        $r8 = r2.<com.android.volley.Cache$Entry: java.lang.String etag>;

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("If-None-Match", $r8);

     label2:
        $l0 = r2.<com.android.volley.Cache$Entry: long serverDate>;

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label3;

        $r5 = new java.util.Date;

        $l2 = r2.<com.android.volley.Cache$Entry: long serverDate>;

        specialinvoke $r5.<java.util.Date: void <init>(long)>($l2);

        r3 = $r5;

        $r6 = staticinvoke <org.apache.http.impl.cookie.DateUtils: java.lang.String formatDate(java.util.Date)>(r3);

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("If-Modified-Since", $r6);

     label3:
        return;
    }

    protected void logError(java.lang.String, java.lang.String, long)
    {
        com.android.volley.toolbox.BasicNetwork r0;
        java.lang.String r1, r2;
        long l0, l1, $l2;
        java.lang.Object[] $r3;
        java.lang.Long $r4;

        r0 := @this: com.android.volley.toolbox.BasicNetwork;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r3 = newarray (java.lang.Object)[3];

        $r3[0] = r1;

        $l2 = l1 - l0;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r3[1] = $r4;

        $r3[2] = r2;

        staticinvoke <com.android.volley.VolleyLog: void v(java.lang.String,java.lang.Object[])>("HTTP ERROR(%s) %d ms to fetch %s", $r3);

        return;
    }

    private byte[] entityToBytes(org.apache.http.HttpEntity) throws java.io.IOException, com.android.volley.ServerError
    {
        com.android.volley.toolbox.BasicNetwork r0;
        org.apache.http.HttpEntity r1;
        com.android.volley.toolbox.PoolingByteArrayOutputStream r2, $r9;
        byte[] r3, r5;
        java.io.InputStream r4;
        int i0, $i2, $i3;
        java.lang.Throwable r7, $r13;
        com.android.volley.toolbox.ByteArrayPool $r10, $r11, $r12, $r16;
        long $l1;
        com.android.volley.ServerError $r14;
        java.io.IOException $r15, $r17;
        java.lang.Object[] $r18, $r19;

        r0 := @this: com.android.volley.toolbox.BasicNetwork;

        r1 := @parameter0: org.apache.http.HttpEntity;

        $r9 = new com.android.volley.toolbox.PoolingByteArrayOutputStream;

        $r10 = r0.<com.android.volley.toolbox.BasicNetwork: com.android.volley.toolbox.ByteArrayPool mPool>;

        $l1 = interfaceinvoke r1.<org.apache.http.HttpEntity: long getContentLength()>();

        $i2 = (int) $l1;

        specialinvoke $r9.<com.android.volley.toolbox.PoolingByteArrayOutputStream: void <init>(com.android.volley.toolbox.ByteArrayPool,int)>($r10, $i2);

        r2 = $r9;

        r3 = null;

     label01:
        r4 = interfaceinvoke r1.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        if r4 != null goto label02;

        $r14 = new com.android.volley.ServerError;

        specialinvoke $r14.<com.android.volley.ServerError: void <init>()>();

        throw $r14;

     label02:
        $r11 = r0.<com.android.volley.toolbox.BasicNetwork: com.android.volley.toolbox.ByteArrayPool mPool>;

        r3 = virtualinvoke $r11.<com.android.volley.toolbox.ByteArrayPool: byte[] getBuf(int)>(1024);

     label03:
        $i3 = virtualinvoke r4.<java.io.InputStream: int read(byte[])>(r3);

        i0 = $i3;

        if $i3 == -1 goto label04;

        virtualinvoke r2.<com.android.volley.toolbox.PoolingByteArrayOutputStream: void write(byte[],int,int)>(r3, 0, i0);

        goto label03;

     label04:
        r5 = virtualinvoke r2.<com.android.volley.toolbox.PoolingByteArrayOutputStream: byte[] toByteArray()>();

     label05:
        interfaceinvoke r1.<org.apache.http.HttpEntity: void consumeContent()>();

     label06:
        goto label08;

     label07:
        $r17 := @caughtexception;

        $r19 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.volley.VolleyLog: void v(java.lang.String,java.lang.Object[])>("Error occured when calling consumingContent", $r19);

     label08:
        $r12 = r0.<com.android.volley.toolbox.BasicNetwork: com.android.volley.toolbox.ByteArrayPool mPool>;

        virtualinvoke $r12.<com.android.volley.toolbox.ByteArrayPool: void returnBuf(byte[])>(r3);

        virtualinvoke r2.<com.android.volley.toolbox.PoolingByteArrayOutputStream: void close()>();

        return r5;

     label09:
        $r13 := @caughtexception;

        r7 = $r13;

     label10:
        interfaceinvoke r1.<org.apache.http.HttpEntity: void consumeContent()>();

     label11:
        goto label13;

     label12:
        $r15 := @caughtexception;

        $r18 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.volley.VolleyLog: void v(java.lang.String,java.lang.Object[])>("Error occured when calling consumingContent", $r18);

     label13:
        $r16 = r0.<com.android.volley.toolbox.BasicNetwork: com.android.volley.toolbox.ByteArrayPool mPool>;

        virtualinvoke $r16.<com.android.volley.toolbox.ByteArrayPool: void returnBuf(byte[])>(r3);

        virtualinvoke r2.<com.android.volley.toolbox.PoolingByteArrayOutputStream: void close()>();

        throw r7;

        catch java.io.IOException from label05 to label06 with label07;
        catch java.lang.Throwable from label01 to label05 with label09;
        catch java.io.IOException from label10 to label11 with label12;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    private static java.util.Map convertHeaders(org.apache.http.Header[])
    {
        org.apache.http.Header[] r0;
        java.util.HashMap r1, $r2;
        int i0, $i1;
        org.apache.http.Header $r3, $r5;
        java.lang.String $r4, $r6;

        r0 := @parameter0: org.apache.http.Header[];

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r1 = $r2;

        i0 = 0;

     label1:
        $i1 = lengthof r0;

        if i0 >= $i1 goto label2;

        $r3 = r0[i0];

        $r4 = interfaceinvoke $r3.<org.apache.http.Header: java.lang.String getName()>();

        $r5 = r0[i0];

        $r6 = interfaceinvoke $r5.<org.apache.http.Header: java.lang.String getValue()>();

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r6);

        i0 = i0 + 1;

        goto label1;

     label2:
        return r1;
    }

    static void <clinit>()
    {
        boolean $z0;

        $z0 = <com.android.volley.VolleyLog: boolean DEBUG>;

        <com.android.volley.toolbox.BasicNetwork: boolean DEBUG> = $z0;

        <com.android.volley.toolbox.BasicNetwork: int SLOW_REQUEST_THRESHOLD_MS> = 3000;

        <com.android.volley.toolbox.BasicNetwork: int DEFAULT_POOL_SIZE> = 4096;

        return;
    }
}
