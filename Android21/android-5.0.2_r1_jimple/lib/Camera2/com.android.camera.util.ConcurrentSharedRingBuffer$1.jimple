class com.android.camera.util.ConcurrentSharedRingBuffer$1 extends java.lang.Object implements java.lang.Runnable
{
    final com.android.camera.util.ConcurrentSharedRingBuffer$PinStateListener val$listener;
    final boolean val$pinsAvailable;
    final com.android.camera.util.ConcurrentSharedRingBuffer this$0;

    void <init>(com.android.camera.util.ConcurrentSharedRingBuffer, com.android.camera.util.ConcurrentSharedRingBuffer$PinStateListener, boolean)
    {
        com.android.camera.util.ConcurrentSharedRingBuffer$1 r0;
        com.android.camera.util.ConcurrentSharedRingBuffer r1;
        com.android.camera.util.ConcurrentSharedRingBuffer$PinStateListener r2;
        boolean z0;

        r0 := @this: com.android.camera.util.ConcurrentSharedRingBuffer$1;

        r1 := @parameter0: com.android.camera.util.ConcurrentSharedRingBuffer;

        r2 := @parameter1: com.android.camera.util.ConcurrentSharedRingBuffer$PinStateListener;

        z0 := @parameter2: boolean;

        r0.<com.android.camera.util.ConcurrentSharedRingBuffer$1: com.android.camera.util.ConcurrentSharedRingBuffer this$0> = r1;

        r0.<com.android.camera.util.ConcurrentSharedRingBuffer$1: com.android.camera.util.ConcurrentSharedRingBuffer$PinStateListener val$listener> = r2;

        r0.<com.android.camera.util.ConcurrentSharedRingBuffer$1: boolean val$pinsAvailable> = z0;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        com.android.camera.util.ConcurrentSharedRingBuffer$1 r0;
        boolean $z0;
        com.android.camera.util.ConcurrentSharedRingBuffer$PinStateListener $r1;

        r0 := @this: com.android.camera.util.ConcurrentSharedRingBuffer$1;

        $r1 = r0.<com.android.camera.util.ConcurrentSharedRingBuffer$1: com.android.camera.util.ConcurrentSharedRingBuffer$PinStateListener val$listener>;

        $z0 = r0.<com.android.camera.util.ConcurrentSharedRingBuffer$1: boolean val$pinsAvailable>;

        interfaceinvoke $r1.<com.android.camera.util.ConcurrentSharedRingBuffer$PinStateListener: void onPinStateChange(boolean)>($z0);

        return;
    }
}
