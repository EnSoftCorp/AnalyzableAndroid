public class com.bumptech.glide.util.LogTime extends java.lang.Object
{
    private static final double MILLIS_MULTIPLIER;

    public void <init>()
    {
        com.bumptech.glide.util.LogTime r0;

        r0 := @this: com.bumptech.glide.util.LogTime;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static long getLogTime()
    {
        int $i0;
        long $l1, $l2;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 17 goto label1;

        $l2 = staticinvoke <android.os.SystemClock: long elapsedRealtimeNanos()>();

        return $l2;

     label1:
        $l1 = staticinvoke <android.os.SystemClock: long currentThreadTimeMillis()>();

        return $l1;
    }

    public static double getElapsedMillis(long)
    {
        long l0, $l1, $l2;
        double $d0, $d1, $d2;

        l0 := @parameter0: long;

        $l1 = staticinvoke <com.bumptech.glide.util.LogTime: long getLogTime()>();

        $l2 = $l1 - l0;

        $d1 = (double) $l2;

        $d0 = <com.bumptech.glide.util.LogTime: double MILLIS_MULTIPLIER>;

        $d2 = $d1 * $d0;

        return $d2;
    }

    static void <clinit>()
    {
        int $i0;
        double $d0, $d1;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 17 goto label1;

        $d0 = staticinvoke <java.lang.Math: double pow(double,double)>(10.0, 6.0);

        $d1 = 1.0 / $d0;

        goto label2;

     label1:
        $d1 = 1.0;

     label2:
        <com.bumptech.glide.util.LogTime: double MILLIS_MULTIPLIER> = $d1;

        return;
    }
}
