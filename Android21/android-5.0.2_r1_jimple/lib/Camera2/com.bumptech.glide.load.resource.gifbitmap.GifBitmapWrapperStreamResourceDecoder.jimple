public class com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperStreamResourceDecoder extends java.lang.Object implements com.bumptech.glide.load.ResourceDecoder
{
    private com.bumptech.glide.load.ResourceDecoder gifBitmapDecoder;

    public void <init>(com.bumptech.glide.load.ResourceDecoder)
    {
        com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperStreamResourceDecoder r0;
        com.bumptech.glide.load.ResourceDecoder r1;

        r0 := @this: com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperStreamResourceDecoder;

        r1 := @parameter0: com.bumptech.glide.load.ResourceDecoder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperStreamResourceDecoder: com.bumptech.glide.load.ResourceDecoder gifBitmapDecoder> = r1;

        return;
    }

    public com.bumptech.glide.load.engine.Resource decode(java.io.InputStream, int, int) throws java.io.IOException
    {
        com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperStreamResourceDecoder r0;
        java.io.InputStream r1;
        int i0, i1;
        com.bumptech.glide.load.model.ImageVideoWrapper $r2;
        com.bumptech.glide.load.ResourceDecoder $r3;
        com.bumptech.glide.load.engine.Resource $r4;

        r0 := @this: com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperStreamResourceDecoder;

        r1 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = r0.<com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperStreamResourceDecoder: com.bumptech.glide.load.ResourceDecoder gifBitmapDecoder>;

        $r2 = new com.bumptech.glide.load.model.ImageVideoWrapper;

        specialinvoke $r2.<com.bumptech.glide.load.model.ImageVideoWrapper: void <init>(java.io.InputStream,android.os.ParcelFileDescriptor)>(r1, null);

        $r4 = interfaceinvoke $r3.<com.bumptech.glide.load.ResourceDecoder: com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int)>($r2, i0, i1);

        return $r4;
    }

    public java.lang.String getId()
    {
        com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperStreamResourceDecoder r0;
        com.bumptech.glide.load.ResourceDecoder $r1;
        java.lang.String $r2;

        r0 := @this: com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperStreamResourceDecoder;

        $r1 = r0.<com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperStreamResourceDecoder: com.bumptech.glide.load.ResourceDecoder gifBitmapDecoder>;

        $r2 = interfaceinvoke $r1.<com.bumptech.glide.load.ResourceDecoder: java.lang.String getId()>();

        return $r2;
    }

    public volatile com.bumptech.glide.load.engine.Resource decode(java.lang.Object, int, int) throws java.io.IOException
    {
        com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperStreamResourceDecoder r0;
        java.lang.Object r1;
        int i0, i1;
        java.io.InputStream $r2;
        com.bumptech.glide.load.engine.Resource $r3;

        r0 := @this: com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperStreamResourceDecoder;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = (java.io.InputStream) r1;

        $r3 = virtualinvoke r0.<com.bumptech.glide.load.resource.gifbitmap.GifBitmapWrapperStreamResourceDecoder: com.bumptech.glide.load.engine.Resource decode(java.io.InputStream,int,int)>($r2, i0, i1);

        return $r3;
    }
}
