class com.android.camera.one.v2.OneCameraManagerImpl$1 extends android.hardware.camera2.CameraDevice$StateCallback
{
    private boolean isFirstCallback;
    final com.android.camera.one.OneCamera$OpenCallback val$openCallback;
    final boolean val$useHdr;
    final com.android.camera.util.Size val$pictureSize;
    final com.android.camera.one.v2.OneCameraManagerImpl this$0;

    void <init>(com.android.camera.one.v2.OneCameraManagerImpl, com.android.camera.one.OneCamera$OpenCallback, boolean, com.android.camera.util.Size)
    {
        com.android.camera.one.v2.OneCameraManagerImpl$1 r0;
        com.android.camera.one.v2.OneCameraManagerImpl r1;
        com.android.camera.one.OneCamera$OpenCallback r2;
        boolean z0;
        com.android.camera.util.Size r3;

        r0 := @this: com.android.camera.one.v2.OneCameraManagerImpl$1;

        r1 := @parameter0: com.android.camera.one.v2.OneCameraManagerImpl;

        r2 := @parameter1: com.android.camera.one.OneCamera$OpenCallback;

        z0 := @parameter2: boolean;

        r3 := @parameter3: com.android.camera.util.Size;

        r0.<com.android.camera.one.v2.OneCameraManagerImpl$1: com.android.camera.one.v2.OneCameraManagerImpl this$0> = r1;

        r0.<com.android.camera.one.v2.OneCameraManagerImpl$1: com.android.camera.one.OneCamera$OpenCallback val$openCallback> = r2;

        r0.<com.android.camera.one.v2.OneCameraManagerImpl$1: boolean val$useHdr> = z0;

        r0.<com.android.camera.one.v2.OneCameraManagerImpl$1: com.android.camera.util.Size val$pictureSize> = r3;

        specialinvoke r0.<android.hardware.camera2.CameraDevice$StateCallback: void <init>()>();

        r0.<com.android.camera.one.v2.OneCameraManagerImpl$1: boolean isFirstCallback> = 1;

        return;
    }

    public void onDisconnected(android.hardware.camera2.CameraDevice)
    {
        com.android.camera.one.v2.OneCameraManagerImpl$1 r0;
        android.hardware.camera2.CameraDevice r1;
        boolean $z0;
        com.android.camera.one.OneCamera$OpenCallback $r2;

        r0 := @this: com.android.camera.one.v2.OneCameraManagerImpl$1;

        r1 := @parameter0: android.hardware.camera2.CameraDevice;

        $z0 = r0.<com.android.camera.one.v2.OneCameraManagerImpl$1: boolean isFirstCallback>;

        if $z0 == 0 goto label1;

        r0.<com.android.camera.one.v2.OneCameraManagerImpl$1: boolean isFirstCallback> = 0;

        virtualinvoke r1.<android.hardware.camera2.CameraDevice: void close()>();

        $r2 = r0.<com.android.camera.one.v2.OneCameraManagerImpl$1: com.android.camera.one.OneCamera$OpenCallback val$openCallback>;

        interfaceinvoke $r2.<com.android.camera.one.OneCamera$OpenCallback: void onCameraClosed()>();

     label1:
        return;
    }

    public void onClosed(android.hardware.camera2.CameraDevice)
    {
        com.android.camera.one.v2.OneCameraManagerImpl$1 r0;
        android.hardware.camera2.CameraDevice r1;
        boolean $z0;
        com.android.camera.one.OneCamera$OpenCallback $r2;

        r0 := @this: com.android.camera.one.v2.OneCameraManagerImpl$1;

        r1 := @parameter0: android.hardware.camera2.CameraDevice;

        $z0 = r0.<com.android.camera.one.v2.OneCameraManagerImpl$1: boolean isFirstCallback>;

        if $z0 == 0 goto label1;

        r0.<com.android.camera.one.v2.OneCameraManagerImpl$1: boolean isFirstCallback> = 0;

        $r2 = r0.<com.android.camera.one.v2.OneCameraManagerImpl$1: com.android.camera.one.OneCamera$OpenCallback val$openCallback>;

        interfaceinvoke $r2.<com.android.camera.one.OneCamera$OpenCallback: void onCameraClosed()>();

     label1:
        return;
    }

    public void onError(android.hardware.camera2.CameraDevice, int)
    {
        com.android.camera.one.v2.OneCameraManagerImpl$1 r0;
        android.hardware.camera2.CameraDevice r1;
        int i0;
        boolean $z0;
        com.android.camera.one.OneCamera$OpenCallback $r2;

        r0 := @this: com.android.camera.one.v2.OneCameraManagerImpl$1;

        r1 := @parameter0: android.hardware.camera2.CameraDevice;

        i0 := @parameter1: int;

        $z0 = r0.<com.android.camera.one.v2.OneCameraManagerImpl$1: boolean isFirstCallback>;

        if $z0 == 0 goto label1;

        r0.<com.android.camera.one.v2.OneCameraManagerImpl$1: boolean isFirstCallback> = 0;

        virtualinvoke r1.<android.hardware.camera2.CameraDevice: void close()>();

        $r2 = r0.<com.android.camera.one.v2.OneCameraManagerImpl$1: com.android.camera.one.OneCamera$OpenCallback val$openCallback>;

        interfaceinvoke $r2.<com.android.camera.one.OneCamera$OpenCallback: void onFailure()>();

     label1:
        return;
    }

    public void onOpened(android.hardware.camera2.CameraDevice)
    {
        com.android.camera.one.v2.OneCameraManagerImpl$1 r0;
        android.hardware.camera2.CameraDevice r1;
        android.hardware.camera2.CameraCharacteristics r2;
        com.android.camera.one.OneCamera r3;
        boolean $z0, $z1;
        com.android.camera.one.v2.OneCameraManagerImpl $r4, $r7, $r9, $r11, $r12;
        android.hardware.camera2.CameraManager $r5;
        java.lang.String $r6;
        android.content.Context $r8;
        com.android.camera.util.Size $r10;
        int $i0;
        android.util.DisplayMetrics $r13;
        com.android.camera.SoundPlayer $r14;
        android.hardware.camera2.CameraAccessException $r15;
        com.android.camera.one.OneCamera$OpenCallback $r16, $r17;
        com.android.camera.debug.Log$Tag $r18;

        r0 := @this: com.android.camera.one.v2.OneCameraManagerImpl$1;

        r1 := @parameter0: android.hardware.camera2.CameraDevice;

        $z0 = r0.<com.android.camera.one.v2.OneCameraManagerImpl$1: boolean isFirstCallback>;

        if $z0 == 0 goto label4;

        r0.<com.android.camera.one.v2.OneCameraManagerImpl$1: boolean isFirstCallback> = 0;

     label1:
        $r4 = r0.<com.android.camera.one.v2.OneCameraManagerImpl$1: com.android.camera.one.v2.OneCameraManagerImpl this$0>;

        $r5 = staticinvoke <com.android.camera.one.v2.OneCameraManagerImpl: android.hardware.camera2.CameraManager access$000(com.android.camera.one.v2.OneCameraManagerImpl)>($r4);

        $r6 = virtualinvoke r1.<android.hardware.camera2.CameraDevice: java.lang.String getId()>();

        r2 = virtualinvoke $r5.<android.hardware.camera2.CameraManager: android.hardware.camera2.CameraCharacteristics getCameraCharacteristics(java.lang.String)>($r6);

        $r7 = r0.<com.android.camera.one.v2.OneCameraManagerImpl$1: com.android.camera.one.v2.OneCameraManagerImpl this$0>;

        $r8 = staticinvoke <com.android.camera.one.v2.OneCameraManagerImpl: android.content.Context access$100(com.android.camera.one.v2.OneCameraManagerImpl)>($r7);

        $z1 = r0.<com.android.camera.one.v2.OneCameraManagerImpl$1: boolean val$useHdr>;

        $r10 = r0.<com.android.camera.one.v2.OneCameraManagerImpl$1: com.android.camera.util.Size val$pictureSize>;

        $r9 = r0.<com.android.camera.one.v2.OneCameraManagerImpl$1: com.android.camera.one.v2.OneCameraManagerImpl this$0>;

        $i0 = staticinvoke <com.android.camera.one.v2.OneCameraManagerImpl: int access$200(com.android.camera.one.v2.OneCameraManagerImpl)>($r9);

        $r11 = r0.<com.android.camera.one.v2.OneCameraManagerImpl$1: com.android.camera.one.v2.OneCameraManagerImpl this$0>;

        $r13 = staticinvoke <com.android.camera.one.v2.OneCameraManagerImpl: android.util.DisplayMetrics access$300(com.android.camera.one.v2.OneCameraManagerImpl)>($r11);

        $r12 = r0.<com.android.camera.one.v2.OneCameraManagerImpl$1: com.android.camera.one.v2.OneCameraManagerImpl this$0>;

        $r14 = staticinvoke <com.android.camera.one.v2.OneCameraManagerImpl: com.android.camera.SoundPlayer access$400(com.android.camera.one.v2.OneCameraManagerImpl)>($r12);

        r3 = staticinvoke <com.android.camera.one.v2.OneCameraCreator: com.android.camera.one.OneCamera create(android.content.Context,boolean,android.hardware.camera2.CameraDevice,android.hardware.camera2.CameraCharacteristics,com.android.camera.util.Size,int,android.util.DisplayMetrics,com.android.camera.SoundPlayer)>($r8, $z1, r1, r2, $r10, $i0, $r13, $r14);

        $r16 = r0.<com.android.camera.one.v2.OneCameraManagerImpl$1: com.android.camera.one.OneCamera$OpenCallback val$openCallback>;

        interfaceinvoke $r16.<com.android.camera.one.OneCamera$OpenCallback: void onCameraOpened(com.android.camera.one.OneCamera)>(r3);

     label2:
        goto label4;

     label3:
        $r15 := @caughtexception;

        $r18 = staticinvoke <com.android.camera.one.v2.OneCameraManagerImpl: com.android.camera.debug.Log$Tag access$500()>();

        staticinvoke <com.android.camera.debug.Log: void d(com.android.camera.debug.Log$Tag,java.lang.String)>($r18, "Could not get camera characteristics");

        $r17 = r0.<com.android.camera.one.v2.OneCameraManagerImpl$1: com.android.camera.one.OneCamera$OpenCallback val$openCallback>;

        interfaceinvoke $r17.<com.android.camera.one.OneCamera$OpenCallback: void onFailure()>();

     label4:
        return;

        catch android.hardware.camera2.CameraAccessException from label1 to label2 with label3;
    }
}
