public class com.android.camera.processing.ProcessingServiceManager extends java.lang.Object
{
    private static final com.android.camera.debug.Log$Tag TAG;
    private static com.android.camera.processing.ProcessingServiceManager sInstance;
    private final android.content.Context mAppContext;
    private final java.util.LinkedList mQueue;
    private volatile boolean mServiceRunning;
    private boolean mHoldProcessing;

    public static void initSingleton(android.content.Context)
    {
        android.content.Context r0;
        com.android.camera.processing.ProcessingServiceManager $r1;

        r0 := @parameter0: android.content.Context;

        $r1 = new com.android.camera.processing.ProcessingServiceManager;

        specialinvoke $r1.<com.android.camera.processing.ProcessingServiceManager: void <init>(android.content.Context)>(r0);

        <com.android.camera.processing.ProcessingServiceManager: com.android.camera.processing.ProcessingServiceManager sInstance> = $r1;

        return;
    }

    public static com.android.camera.processing.ProcessingServiceManager getInstance()
    {
        com.android.camera.processing.ProcessingServiceManager $r0, $r1;
        java.lang.IllegalStateException $r2;

        $r0 = <com.android.camera.processing.ProcessingServiceManager: com.android.camera.processing.ProcessingServiceManager sInstance>;

        if $r0 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("initSingleton() not yet called.");

        throw $r2;

     label1:
        $r1 = <com.android.camera.processing.ProcessingServiceManager: com.android.camera.processing.ProcessingServiceManager sInstance>;

        return $r1;
    }

    private void <init>(android.content.Context)
    {
        com.android.camera.processing.ProcessingServiceManager r0;
        android.content.Context r1;
        java.util.LinkedList $r2;

        r0 := @this: com.android.camera.processing.ProcessingServiceManager;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        r0.<com.android.camera.processing.ProcessingServiceManager: java.util.LinkedList mQueue> = $r2;

        r0.<com.android.camera.processing.ProcessingServiceManager: boolean mServiceRunning> = 0;

        r0.<com.android.camera.processing.ProcessingServiceManager: boolean mHoldProcessing> = 0;

        r0.<com.android.camera.processing.ProcessingServiceManager: android.content.Context mAppContext> = r1;

        return;
    }

    public synchronized void enqueueTask(com.android.camera.processing.ProcessingTask)
    {
        com.android.camera.processing.ProcessingServiceManager r0;
        com.android.camera.processing.ProcessingTask r1;
        java.util.LinkedList $r2, $r6;
        java.lang.StringBuilder $r3, $r5, $r7;
        com.android.camera.debug.Log$Tag $r4;
        int $i0;
        java.lang.String $r8;
        boolean $z1, $z2;

        r0 := @this: com.android.camera.processing.ProcessingServiceManager;

        r1 := @parameter0: com.android.camera.processing.ProcessingTask;

        $r2 = r0.<com.android.camera.processing.ProcessingServiceManager: java.util.LinkedList mQueue>;

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>(r1);

        $r4 = <com.android.camera.processing.ProcessingServiceManager: com.android.camera.debug.Log$Tag TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Task added. Queue size now: ");

        $r6 = r0.<com.android.camera.processing.ProcessingServiceManager: java.util.LinkedList mQueue>;

        $i0 = virtualinvoke $r6.<java.util.LinkedList: int size()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void d(com.android.camera.debug.Log$Tag,java.lang.String)>($r4, $r8);

        $z1 = r0.<com.android.camera.processing.ProcessingServiceManager: boolean mServiceRunning>;

        if $z1 != 0 goto label1;

        $z2 = r0.<com.android.camera.processing.ProcessingServiceManager: boolean mHoldProcessing>;

        if $z2 != 0 goto label1;

        specialinvoke r0.<com.android.camera.processing.ProcessingServiceManager: void startService()>();

     label1:
        return;
    }

    public synchronized com.android.camera.processing.ProcessingTask popNextSession()
    {
        com.android.camera.processing.ProcessingServiceManager r0;
        java.util.LinkedList $r1, $r10, $r14;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r2, $r4, $r5, $r7, $r9, $r12;
        com.android.camera.debug.Log$Tag $r3, $r8;
        java.lang.String $r6, $r11;
        int $i0, $i1;
        java.lang.Object $r13;
        com.android.camera.processing.ProcessingTask $r15;

        r0 := @this: com.android.camera.processing.ProcessingServiceManager;

        $r1 = r0.<com.android.camera.processing.ProcessingServiceManager: java.util.LinkedList mQueue>;

        $z0 = virtualinvoke $r1.<java.util.LinkedList: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z2 = r0.<com.android.camera.processing.ProcessingServiceManager: boolean mHoldProcessing>;

        if $z2 != 0 goto label1;

        $r8 = <com.android.camera.processing.ProcessingServiceManager: com.android.camera.debug.Log$Tag TAG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Popping a session. Remaining: ");

        $r10 = r0.<com.android.camera.processing.ProcessingServiceManager: java.util.LinkedList mQueue>;

        $i0 = virtualinvoke $r10.<java.util.LinkedList: int size()>();

        $i1 = $i0 - 1;

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void d(com.android.camera.debug.Log$Tag,java.lang.String)>($r8, $r11);

        $r14 = r0.<com.android.camera.processing.ProcessingServiceManager: java.util.LinkedList mQueue>;

        $r13 = virtualinvoke $r14.<java.util.LinkedList: java.lang.Object remove()>();

        $r15 = (com.android.camera.processing.ProcessingTask) $r13;

        return $r15;

     label1:
        $r3 = <com.android.camera.processing.ProcessingServiceManager: com.android.camera.debug.Log$Tag TAG>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Popping null. On hold? ");

        $z1 = r0.<com.android.camera.processing.ProcessingServiceManager: boolean mHoldProcessing>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void d(com.android.camera.debug.Log$Tag,java.lang.String)>($r3, $r6);

        r0.<com.android.camera.processing.ProcessingServiceManager: boolean mServiceRunning> = 0;

        return null;
    }

    public synchronized boolean isRunningOrHasItems()
    {
        com.android.camera.processing.ProcessingServiceManager r0;
        boolean $z0, $z1, $z2;
        java.util.LinkedList $r1;

        r0 := @this: com.android.camera.processing.ProcessingServiceManager;

        $z0 = r0.<com.android.camera.processing.ProcessingServiceManager: boolean mServiceRunning>;

        if $z0 != 0 goto label1;

        $r1 = r0.<com.android.camera.processing.ProcessingServiceManager: java.util.LinkedList mQueue>;

        $z1 = virtualinvoke $r1.<java.util.LinkedList: boolean isEmpty()>();

        if $z1 != 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public synchronized boolean suspendProcessing()
    {
        com.android.camera.processing.ProcessingServiceManager r0;
        boolean $z0;
        com.android.camera.debug.Log$Tag $r1, $r2;

        r0 := @this: com.android.camera.processing.ProcessingServiceManager;

        $z0 = virtualinvoke r0.<com.android.camera.processing.ProcessingServiceManager: boolean isRunningOrHasItems()>();

        if $z0 != 0 goto label1;

        $r2 = <com.android.camera.processing.ProcessingServiceManager: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void d(com.android.camera.debug.Log$Tag,java.lang.String)>($r2, "Suspend processing");

        r0.<com.android.camera.processing.ProcessingServiceManager: boolean mHoldProcessing> = 1;

        return 1;

     label1:
        $r1 = <com.android.camera.processing.ProcessingServiceManager: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void d(com.android.camera.debug.Log$Tag,java.lang.String)>($r1, "Not able to suspend processing.");

        return 0;
    }

    public synchronized void resumeProcessing()
    {
        com.android.camera.processing.ProcessingServiceManager r0;
        java.lang.StringBuilder $r1, $r3, $r5;
        com.android.camera.debug.Log$Tag $r2;
        java.util.LinkedList $r4, $r7;
        int $i0;
        java.lang.String $r6;
        boolean $z0, $z1;

        r0 := @this: com.android.camera.processing.ProcessingServiceManager;

        $r2 = <com.android.camera.processing.ProcessingServiceManager: com.android.camera.debug.Log$Tag TAG>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Resume processing. Queue size: ");

        $r4 = r0.<com.android.camera.processing.ProcessingServiceManager: java.util.LinkedList mQueue>;

        $i0 = virtualinvoke $r4.<java.util.LinkedList: int size()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void d(com.android.camera.debug.Log$Tag,java.lang.String)>($r2, $r6);

        $z0 = r0.<com.android.camera.processing.ProcessingServiceManager: boolean mHoldProcessing>;

        if $z0 == 0 goto label1;

        r0.<com.android.camera.processing.ProcessingServiceManager: boolean mHoldProcessing> = 0;

        $r7 = r0.<com.android.camera.processing.ProcessingServiceManager: java.util.LinkedList mQueue>;

        $z1 = virtualinvoke $r7.<java.util.LinkedList: boolean isEmpty()>();

        if $z1 != 0 goto label1;

        specialinvoke r0.<com.android.camera.processing.ProcessingServiceManager: void startService()>();

     label1:
        return;
    }

    private void startService()
    {
        com.android.camera.processing.ProcessingServiceManager r0;
        android.content.Intent $r1;
        android.content.Context $r2, $r3;

        r0 := @this: com.android.camera.processing.ProcessingServiceManager;

        $r3 = r0.<com.android.camera.processing.ProcessingServiceManager: android.content.Context mAppContext>;

        $r1 = new android.content.Intent;

        $r2 = r0.<com.android.camera.processing.ProcessingServiceManager: android.content.Context mAppContext>;

        specialinvoke $r1.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r2, class "com/android/camera/processing/ProcessingService");

        virtualinvoke $r3.<android.content.Context: android.content.ComponentName startService(android.content.Intent)>($r1);

        r0.<com.android.camera.processing.ProcessingServiceManager: boolean mServiceRunning> = 1;

        return;
    }

    static void <clinit>()
    {
        com.android.camera.debug.Log$Tag $r0;

        $r0 = new com.android.camera.debug.Log$Tag;

        specialinvoke $r0.<com.android.camera.debug.Log$Tag: void <init>(java.lang.String)>("ProcessingSvcMgr");

        <com.android.camera.processing.ProcessingServiceManager: com.android.camera.debug.Log$Tag TAG> = $r0;

        return;
    }
}
