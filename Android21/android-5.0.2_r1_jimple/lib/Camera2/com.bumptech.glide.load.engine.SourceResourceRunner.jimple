public class com.bumptech.glide.load.engine.SourceResourceRunner extends java.lang.Object implements java.lang.Runnable, com.bumptech.glide.load.engine.cache.DiskCache$Writer, com.bumptech.glide.load.engine.executor.Prioritized
{
    private static final java.lang.String TAG;
    private final com.bumptech.glide.load.engine.EngineKey key;
    private final int width;
    private final int height;
    private final com.bumptech.glide.load.CacheLoader cacheLoader;
    private final com.bumptech.glide.load.ResourceDecoder cacheDecoder;
    private final com.bumptech.glide.load.data.DataFetcher fetcher;
    private final boolean cacheSource;
    private final com.bumptech.glide.load.Encoder sourceEncoder;
    private final com.bumptech.glide.load.ResourceDecoder decoder;
    private final com.bumptech.glide.load.Transformation transformation;
    private final com.bumptech.glide.load.ResourceEncoder encoder;
    private final com.bumptech.glide.load.resource.transcode.ResourceTranscoder transcoder;
    private final com.bumptech.glide.load.engine.cache.DiskCache diskCache;
    private final com.bumptech.glide.Priority priority;
    private final com.bumptech.glide.request.ResourceCallback cb;
    private com.bumptech.glide.load.engine.Resource result;
    private volatile boolean isCancelled;

    public void <init>(com.bumptech.glide.load.engine.EngineKey, int, int, com.bumptech.glide.load.CacheLoader, com.bumptech.glide.load.ResourceDecoder, com.bumptech.glide.load.data.DataFetcher, boolean, com.bumptech.glide.load.Encoder, com.bumptech.glide.load.ResourceDecoder, com.bumptech.glide.load.Transformation, com.bumptech.glide.load.ResourceEncoder, com.bumptech.glide.load.resource.transcode.ResourceTranscoder, com.bumptech.glide.load.engine.cache.DiskCache, com.bumptech.glide.Priority, com.bumptech.glide.request.ResourceCallback)
    {
        com.bumptech.glide.load.engine.SourceResourceRunner r0;
        com.bumptech.glide.load.engine.EngineKey r1;
        int i0, i1;
        com.bumptech.glide.load.CacheLoader r2;
        com.bumptech.glide.load.ResourceDecoder r3, r6;
        com.bumptech.glide.load.data.DataFetcher r4;
        boolean z0;
        com.bumptech.glide.load.Encoder r5;
        com.bumptech.glide.load.Transformation r7;
        com.bumptech.glide.load.ResourceEncoder r8;
        com.bumptech.glide.load.resource.transcode.ResourceTranscoder r9;
        com.bumptech.glide.load.engine.cache.DiskCache r10;
        com.bumptech.glide.Priority r11;
        com.bumptech.glide.request.ResourceCallback r12;

        r0 := @this: com.bumptech.glide.load.engine.SourceResourceRunner;

        r1 := @parameter0: com.bumptech.glide.load.engine.EngineKey;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: com.bumptech.glide.load.CacheLoader;

        r3 := @parameter4: com.bumptech.glide.load.ResourceDecoder;

        r4 := @parameter5: com.bumptech.glide.load.data.DataFetcher;

        z0 := @parameter6: boolean;

        r5 := @parameter7: com.bumptech.glide.load.Encoder;

        r6 := @parameter8: com.bumptech.glide.load.ResourceDecoder;

        r7 := @parameter9: com.bumptech.glide.load.Transformation;

        r8 := @parameter10: com.bumptech.glide.load.ResourceEncoder;

        r9 := @parameter11: com.bumptech.glide.load.resource.transcode.ResourceTranscoder;

        r10 := @parameter12: com.bumptech.glide.load.engine.cache.DiskCache;

        r11 := @parameter13: com.bumptech.glide.Priority;

        r12 := @parameter14: com.bumptech.glide.request.ResourceCallback;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.load.engine.EngineKey key> = r1;

        r0.<com.bumptech.glide.load.engine.SourceResourceRunner: int width> = i0;

        r0.<com.bumptech.glide.load.engine.SourceResourceRunner: int height> = i1;

        r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.load.CacheLoader cacheLoader> = r2;

        r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.load.ResourceDecoder cacheDecoder> = r3;

        r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.load.data.DataFetcher fetcher> = r4;

        r0.<com.bumptech.glide.load.engine.SourceResourceRunner: boolean cacheSource> = z0;

        r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.load.Encoder sourceEncoder> = r5;

        r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.load.ResourceDecoder decoder> = r6;

        r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.load.Transformation transformation> = r7;

        r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.load.ResourceEncoder encoder> = r8;

        r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.load.resource.transcode.ResourceTranscoder transcoder> = r9;

        r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.load.engine.cache.DiskCache diskCache> = r10;

        r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.Priority priority> = r11;

        r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.request.ResourceCallback cb> = r12;

        return;
    }

    public void cancel()
    {
        com.bumptech.glide.load.engine.SourceResourceRunner r0;
        com.bumptech.glide.load.data.DataFetcher $r1, $r2;

        r0 := @this: com.bumptech.glide.load.engine.SourceResourceRunner;

        r0.<com.bumptech.glide.load.engine.SourceResourceRunner: boolean isCancelled> = 1;

        $r1 = r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.load.data.DataFetcher fetcher>;

        if $r1 == null goto label1;

        $r2 = r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.load.data.DataFetcher fetcher>;

        interfaceinvoke $r2.<com.bumptech.glide.load.data.DataFetcher: void cancel()>();

     label1:
        return;
    }

    public void run()
    {
        com.bumptech.glide.load.engine.SourceResourceRunner r0;
        long l0, $l3, $l4, $l6, $l7, $l11, $l12, l14;
        com.bumptech.glide.load.engine.Resource r1, r2, $r7, $r12, r30;
        boolean $z0, $z1, $z2, $z3;
        com.bumptech.glide.load.engine.EngineKey $r3, $r8;
        com.bumptech.glide.load.CacheLoader $r4;
        com.bumptech.glide.load.Key $r5;
        int $i1, $i2, $i8, $i10;
        com.bumptech.glide.load.ResourceDecoder $r6;
        com.bumptech.glide.request.ResourceCallback $r9, $r14, $r28;
        com.bumptech.glide.load.engine.cache.DiskCache $r10;
        com.bumptech.glide.load.resource.transcode.ResourceTranscoder $r11;
        java.lang.StringBuilder $r13, $r15, $r17, $r18, $r19, $r20, $r23, $r24, $r26, $r27;
        java.lang.String $r16, $r21, $r25;
        com.bumptech.glide.load.Transformation $r22;
        java.lang.Exception $r29, r31;

        r0 := @this: com.bumptech.glide.load.engine.SourceResourceRunner;

        $z0 = r0.<com.bumptech.glide.load.engine.SourceResourceRunner: boolean isCancelled>;

        if $z0 == 0 goto label01;

        return;

     label01:
        l0 = staticinvoke <android.os.SystemClock: long currentThreadTimeMillis()>();

        $r4 = r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.load.CacheLoader cacheLoader>;

        $r3 = r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.load.engine.EngineKey key>;

        $r5 = virtualinvoke $r3.<com.bumptech.glide.load.engine.EngineKey: com.bumptech.glide.load.Key getOriginalKey()>();

        $r6 = r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.load.ResourceDecoder cacheDecoder>;

        $i2 = r0.<com.bumptech.glide.load.engine.SourceResourceRunner: int width>;

        $i1 = r0.<com.bumptech.glide.load.engine.SourceResourceRunner: int height>;

        r1 = virtualinvoke $r4.<com.bumptech.glide.load.CacheLoader: com.bumptech.glide.load.engine.Resource load(com.bumptech.glide.load.Key,com.bumptech.glide.load.ResourceDecoder,int,int)>($r5, $r6, $i2, $i1);

        if r1 != null goto label02;

        r1 = specialinvoke r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.load.engine.Resource decodeFromSource()>();

        $z3 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("SourceRunner", 2);

        if $z3 == 0 goto label02;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Decoded from source in ");

        $l12 = staticinvoke <android.os.SystemClock: long currentThreadTimeMillis()>();

        $l11 = $l12 - l0;

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l11);

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cache");

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("SourceRunner", $r25);

        l0 = staticinvoke <android.os.SystemClock: long currentThreadTimeMillis()>();

     label02:
        if r1 == null goto label04;

        $r22 = r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.load.Transformation transformation>;

        $i8 = r0.<com.bumptech.glide.load.engine.SourceResourceRunner: int width>;

        $i10 = r0.<com.bumptech.glide.load.engine.SourceResourceRunner: int height>;

        r2 = interfaceinvoke $r22.<com.bumptech.glide.load.Transformation: com.bumptech.glide.load.engine.Resource transform(com.bumptech.glide.load.engine.Resource,int,int)>(r1, $i8, $i10);

        if r1 == r2 goto label03;

        virtualinvoke r1.<com.bumptech.glide.load.engine.Resource: void recycle()>();

     label03:
        r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.load.engine.Resource result> = r2;

     label04:
        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("SourceRunner", 2);

        if $z1 == 0 goto label05;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("transformed in ");

        $l6 = staticinvoke <android.os.SystemClock: long currentThreadTimeMillis()>();

        $l7 = $l6 - l0;

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("SourceRunner", $r21);

     label05:
        $r7 = r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.load.engine.Resource result>;

        if $r7 == null goto label07;

        $r10 = r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.load.engine.cache.DiskCache diskCache>;

        $r8 = r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.load.engine.EngineKey key>;

        interfaceinvoke $r10.<com.bumptech.glide.load.engine.cache.DiskCache: void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.cache.DiskCache$Writer)>($r8, r0);

        l14 = staticinvoke <android.os.SystemClock: long currentThreadTimeMillis()>();

        $r11 = r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.load.resource.transcode.ResourceTranscoder transcoder>;

        $r12 = r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.load.engine.Resource result>;

        r30 = interfaceinvoke $r11.<com.bumptech.glide.load.resource.transcode.ResourceTranscoder: com.bumptech.glide.load.engine.Resource transcode(com.bumptech.glide.load.engine.Resource)>($r12);

        $z2 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("SourceRunner", 2);

        if $z2 == 0 goto label06;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("transcoded in ");

        $l4 = staticinvoke <android.os.SystemClock: long currentThreadTimeMillis()>();

        $l3 = $l4 - l14;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("SourceRunner", $r16);

     label06:
        $r14 = r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.request.ResourceCallback cb>;

        interfaceinvoke $r14.<com.bumptech.glide.request.ResourceCallback: void onResourceReady(com.bumptech.glide.load.engine.Resource)>(r30);

        goto label08;

     label07:
        $r9 = r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.request.ResourceCallback cb>;

        interfaceinvoke $r9.<com.bumptech.glide.request.ResourceCallback: void onException(java.lang.Exception)>(null);

     label08:
        goto label10;

     label09:
        $r29 := @caughtexception;

        r31 = $r29;

        $r28 = r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.request.ResourceCallback cb>;

        interfaceinvoke $r28.<com.bumptech.glide.request.ResourceCallback: void onException(java.lang.Exception)>(r31);

     label10:
        return;

        catch java.lang.Exception from label01 to label08 with label09;
    }

    private com.bumptech.glide.load.engine.Resource encodeSourceAndDecodeFromCache(java.lang.Object)
    {
        com.bumptech.glide.load.engine.SourceResourceRunner r0;
        java.lang.Object r1;
        com.bumptech.glide.load.engine.EngineKey $r2, $r6;
        com.bumptech.glide.load.engine.cache.DiskCache $r3;
        com.bumptech.glide.load.Key $r4, $r8;
        com.bumptech.glide.load.engine.SourceResourceRunner$1 $r5;
        com.bumptech.glide.load.CacheLoader $r7;
        int $i0, $i1;
        com.bumptech.glide.load.ResourceDecoder $r9;
        com.bumptech.glide.load.engine.Resource $r10;

        r0 := @this: com.bumptech.glide.load.engine.SourceResourceRunner;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.load.engine.cache.DiskCache diskCache>;

        $r2 = r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.load.engine.EngineKey key>;

        $r4 = virtualinvoke $r2.<com.bumptech.glide.load.engine.EngineKey: com.bumptech.glide.load.Key getOriginalKey()>();

        $r5 = new com.bumptech.glide.load.engine.SourceResourceRunner$1;

        specialinvoke $r5.<com.bumptech.glide.load.engine.SourceResourceRunner$1: void <init>(com.bumptech.glide.load.engine.SourceResourceRunner,java.lang.Object)>(r0, r1);

        interfaceinvoke $r3.<com.bumptech.glide.load.engine.cache.DiskCache: void put(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.cache.DiskCache$Writer)>($r4, $r5);

        $r7 = r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.load.CacheLoader cacheLoader>;

        $r6 = r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.load.engine.EngineKey key>;

        $r8 = virtualinvoke $r6.<com.bumptech.glide.load.engine.EngineKey: com.bumptech.glide.load.Key getOriginalKey()>();

        $r9 = r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.load.ResourceDecoder cacheDecoder>;

        $i1 = r0.<com.bumptech.glide.load.engine.SourceResourceRunner: int width>;

        $i0 = r0.<com.bumptech.glide.load.engine.SourceResourceRunner: int height>;

        $r10 = virtualinvoke $r7.<com.bumptech.glide.load.CacheLoader: com.bumptech.glide.load.engine.Resource load(com.bumptech.glide.load.Key,com.bumptech.glide.load.ResourceDecoder,int,int)>($r8, $r9, $i1, $i0);

        return $r10;
    }

    private com.bumptech.glide.load.engine.Resource decodeFromSource() throws java.lang.Exception
    {
        com.bumptech.glide.load.engine.SourceResourceRunner r0;
        java.lang.Object r1;
        com.bumptech.glide.load.engine.Resource r2, r12;
        java.lang.Throwable r3, $r11;
        com.bumptech.glide.Priority $r4;
        com.bumptech.glide.load.data.DataFetcher $r5, $r6, $r8, $r9, $r10;
        boolean $z0;
        int $i0, $i1;
        com.bumptech.glide.load.ResourceDecoder $r7;

        r0 := @this: com.bumptech.glide.load.engine.SourceResourceRunner;

     label1:
        $r5 = r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.load.data.DataFetcher fetcher>;

        $r4 = r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.Priority priority>;

        r1 = interfaceinvoke $r5.<com.bumptech.glide.load.data.DataFetcher: java.lang.Object loadData(com.bumptech.glide.Priority)>($r4);

        if r1 == null goto label5;

        $z0 = r0.<com.bumptech.glide.load.engine.SourceResourceRunner: boolean cacheSource>;

        if $z0 == 0 goto label3;

        r2 = specialinvoke r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.load.engine.Resource encodeSourceAndDecodeFromCache(java.lang.Object)>(r1);

     label2:
        $r9 = r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.load.data.DataFetcher fetcher>;

        interfaceinvoke $r9.<com.bumptech.glide.load.data.DataFetcher: void cleanup()>();

        return r2;

     label3:
        $r7 = r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.load.ResourceDecoder decoder>;

        $i1 = r0.<com.bumptech.glide.load.engine.SourceResourceRunner: int width>;

        $i0 = r0.<com.bumptech.glide.load.engine.SourceResourceRunner: int height>;

        r12 = interfaceinvoke $r7.<com.bumptech.glide.load.ResourceDecoder: com.bumptech.glide.load.engine.Resource decode(java.lang.Object,int,int)>(r1, $i1, $i0);

     label4:
        $r8 = r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.load.data.DataFetcher fetcher>;

        interfaceinvoke $r8.<com.bumptech.glide.load.data.DataFetcher: void cleanup()>();

        return r12;

     label5:
        $r6 = r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.load.data.DataFetcher fetcher>;

        interfaceinvoke $r6.<com.bumptech.glide.load.data.DataFetcher: void cleanup()>();

        goto label8;

     label6:
        $r11 := @caughtexception;

        r3 = $r11;

     label7:
        $r10 = r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.load.data.DataFetcher fetcher>;

        interfaceinvoke $r10.<com.bumptech.glide.load.data.DataFetcher: void cleanup()>();

        throw r3;

     label8:
        return null;

        catch java.lang.Throwable from label1 to label2 with label6;
        catch java.lang.Throwable from label3 to label4 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public boolean write(java.io.OutputStream)
    {
        com.bumptech.glide.load.engine.SourceResourceRunner r0;
        java.io.OutputStream r1;
        long l0, $l1, $l2;
        boolean z0, $z1;
        com.bumptech.glide.load.engine.Resource $r2;
        com.bumptech.glide.load.ResourceEncoder $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: com.bumptech.glide.load.engine.SourceResourceRunner;

        r1 := @parameter0: java.io.OutputStream;

        l0 = staticinvoke <android.os.SystemClock: long currentThreadTimeMillis()>();

        $r3 = r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.load.ResourceEncoder encoder>;

        $r2 = r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.load.engine.Resource result>;

        z0 = interfaceinvoke $r3.<com.bumptech.glide.load.ResourceEncoder: boolean encode(java.lang.Object,java.io.OutputStream)>($r2, r1);

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("SourceRunner", 2);

        if $z1 == 0 goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("wrote to disk cache in ");

        $l1 = staticinvoke <android.os.SystemClock: long currentThreadTimeMillis()>();

        $l2 = $l1 - l0;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("SourceRunner", $r7);

     label1:
        return z0;
    }

    public int getPriority()
    {
        com.bumptech.glide.load.engine.SourceResourceRunner r0;
        com.bumptech.glide.Priority $r1;
        int $i0;

        r0 := @this: com.bumptech.glide.load.engine.SourceResourceRunner;

        $r1 = r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.Priority priority>;

        $i0 = virtualinvoke $r1.<com.bumptech.glide.Priority: int ordinal()>();

        return $i0;
    }

    static com.bumptech.glide.load.Encoder access$000(com.bumptech.glide.load.engine.SourceResourceRunner)
    {
        com.bumptech.glide.load.engine.SourceResourceRunner r0;
        com.bumptech.glide.load.Encoder $r1;

        r0 := @parameter0: com.bumptech.glide.load.engine.SourceResourceRunner;

        $r1 = r0.<com.bumptech.glide.load.engine.SourceResourceRunner: com.bumptech.glide.load.Encoder sourceEncoder>;

        return $r1;
    }

    public static void <clinit>()
    {
        <com.bumptech.glide.load.engine.SourceResourceRunner: java.lang.String TAG> = "SourceRunner";

        return;
    }
}
