public interface  com.adobe.xmp.XMPMeta extends java.lang.Object implements java.lang.Cloneable
{

    public abstract com.adobe.xmp.properties.XMPProperty getProperty(java.lang.String, java.lang.String) throws com.adobe.xmp.XMPException;

    public abstract com.adobe.xmp.properties.XMPProperty getArrayItem(java.lang.String, java.lang.String, int) throws com.adobe.xmp.XMPException;

    public abstract int countArrayItems(java.lang.String, java.lang.String) throws com.adobe.xmp.XMPException;

    public abstract com.adobe.xmp.properties.XMPProperty getStructField(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws com.adobe.xmp.XMPException;

    public abstract com.adobe.xmp.properties.XMPProperty getQualifier(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws com.adobe.xmp.XMPException;

    public abstract void setProperty(java.lang.String, java.lang.String, java.lang.Object, com.adobe.xmp.options.PropertyOptions) throws com.adobe.xmp.XMPException;

    public abstract void setProperty(java.lang.String, java.lang.String, java.lang.Object) throws com.adobe.xmp.XMPException;

    public abstract void setArrayItem(java.lang.String, java.lang.String, int, java.lang.String, com.adobe.xmp.options.PropertyOptions) throws com.adobe.xmp.XMPException;

    public abstract void setArrayItem(java.lang.String, java.lang.String, int, java.lang.String) throws com.adobe.xmp.XMPException;

    public abstract void insertArrayItem(java.lang.String, java.lang.String, int, java.lang.String, com.adobe.xmp.options.PropertyOptions) throws com.adobe.xmp.XMPException;

    public abstract void insertArrayItem(java.lang.String, java.lang.String, int, java.lang.String) throws com.adobe.xmp.XMPException;

    public abstract void appendArrayItem(java.lang.String, java.lang.String, com.adobe.xmp.options.PropertyOptions, java.lang.String, com.adobe.xmp.options.PropertyOptions) throws com.adobe.xmp.XMPException;

    public abstract void appendArrayItem(java.lang.String, java.lang.String, java.lang.String) throws com.adobe.xmp.XMPException;

    public abstract void setStructField(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, com.adobe.xmp.options.PropertyOptions) throws com.adobe.xmp.XMPException;

    public abstract void setStructField(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws com.adobe.xmp.XMPException;

    public abstract void setQualifier(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, com.adobe.xmp.options.PropertyOptions) throws com.adobe.xmp.XMPException;

    public abstract void setQualifier(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws com.adobe.xmp.XMPException;

    public abstract void deleteProperty(java.lang.String, java.lang.String);

    public abstract void deleteArrayItem(java.lang.String, java.lang.String, int);

    public abstract void deleteStructField(java.lang.String, java.lang.String, java.lang.String, java.lang.String);

    public abstract void deleteQualifier(java.lang.String, java.lang.String, java.lang.String, java.lang.String);

    public abstract boolean doesPropertyExist(java.lang.String, java.lang.String);

    public abstract boolean doesArrayItemExist(java.lang.String, java.lang.String, int);

    public abstract boolean doesStructFieldExist(java.lang.String, java.lang.String, java.lang.String, java.lang.String);

    public abstract boolean doesQualifierExist(java.lang.String, java.lang.String, java.lang.String, java.lang.String);

    public abstract com.adobe.xmp.properties.XMPProperty getLocalizedText(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws com.adobe.xmp.XMPException;

    public abstract void setLocalizedText(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, com.adobe.xmp.options.PropertyOptions) throws com.adobe.xmp.XMPException;

    public abstract void setLocalizedText(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws com.adobe.xmp.XMPException;

    public abstract java.lang.Boolean getPropertyBoolean(java.lang.String, java.lang.String) throws com.adobe.xmp.XMPException;

    public abstract java.lang.Integer getPropertyInteger(java.lang.String, java.lang.String) throws com.adobe.xmp.XMPException;

    public abstract java.lang.Long getPropertyLong(java.lang.String, java.lang.String) throws com.adobe.xmp.XMPException;

    public abstract java.lang.Double getPropertyDouble(java.lang.String, java.lang.String) throws com.adobe.xmp.XMPException;

    public abstract com.adobe.xmp.XMPDateTime getPropertyDate(java.lang.String, java.lang.String) throws com.adobe.xmp.XMPException;

    public abstract java.util.Calendar getPropertyCalendar(java.lang.String, java.lang.String) throws com.adobe.xmp.XMPException;

    public abstract byte[] getPropertyBase64(java.lang.String, java.lang.String) throws com.adobe.xmp.XMPException;

    public abstract java.lang.String getPropertyString(java.lang.String, java.lang.String) throws com.adobe.xmp.XMPException;

    public abstract void setPropertyBoolean(java.lang.String, java.lang.String, boolean, com.adobe.xmp.options.PropertyOptions) throws com.adobe.xmp.XMPException;

    public abstract void setPropertyBoolean(java.lang.String, java.lang.String, boolean) throws com.adobe.xmp.XMPException;

    public abstract void setPropertyInteger(java.lang.String, java.lang.String, int, com.adobe.xmp.options.PropertyOptions) throws com.adobe.xmp.XMPException;

    public abstract void setPropertyInteger(java.lang.String, java.lang.String, int) throws com.adobe.xmp.XMPException;

    public abstract void setPropertyLong(java.lang.String, java.lang.String, long, com.adobe.xmp.options.PropertyOptions) throws com.adobe.xmp.XMPException;

    public abstract void setPropertyLong(java.lang.String, java.lang.String, long) throws com.adobe.xmp.XMPException;

    public abstract void setPropertyDouble(java.lang.String, java.lang.String, double, com.adobe.xmp.options.PropertyOptions) throws com.adobe.xmp.XMPException;

    public abstract void setPropertyDouble(java.lang.String, java.lang.String, double) throws com.adobe.xmp.XMPException;

    public abstract void setPropertyDate(java.lang.String, java.lang.String, com.adobe.xmp.XMPDateTime, com.adobe.xmp.options.PropertyOptions) throws com.adobe.xmp.XMPException;

    public abstract void setPropertyDate(java.lang.String, java.lang.String, com.adobe.xmp.XMPDateTime) throws com.adobe.xmp.XMPException;

    public abstract void setPropertyCalendar(java.lang.String, java.lang.String, java.util.Calendar, com.adobe.xmp.options.PropertyOptions) throws com.adobe.xmp.XMPException;

    public abstract void setPropertyCalendar(java.lang.String, java.lang.String, java.util.Calendar) throws com.adobe.xmp.XMPException;

    public abstract void setPropertyBase64(java.lang.String, java.lang.String, byte[], com.adobe.xmp.options.PropertyOptions) throws com.adobe.xmp.XMPException;

    public abstract void setPropertyBase64(java.lang.String, java.lang.String, byte[]) throws com.adobe.xmp.XMPException;

    public abstract com.adobe.xmp.XMPIterator iterator() throws com.adobe.xmp.XMPException;

    public abstract com.adobe.xmp.XMPIterator iterator(com.adobe.xmp.options.IteratorOptions) throws com.adobe.xmp.XMPException;

    public abstract com.adobe.xmp.XMPIterator iterator(java.lang.String, java.lang.String, com.adobe.xmp.options.IteratorOptions) throws com.adobe.xmp.XMPException;

    public abstract java.lang.String getObjectName();

    public abstract void setObjectName(java.lang.String);

    public abstract java.lang.String getPacketHeader();

    public abstract java.lang.Object clone();

    public abstract void sort();

    public abstract void normalize(com.adobe.xmp.options.ParseOptions) throws com.adobe.xmp.XMPException;

    public abstract java.lang.String dumpObject();
}
