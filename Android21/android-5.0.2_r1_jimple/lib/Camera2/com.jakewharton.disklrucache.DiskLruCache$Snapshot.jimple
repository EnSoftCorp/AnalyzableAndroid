public final class com.jakewharton.disklrucache.DiskLruCache$Snapshot extends java.lang.Object implements java.io.Closeable
{
    private final java.lang.String key;
    private final long sequenceNumber;
    private final java.io.InputStream[] ins;
    private final long[] lengths;
    final com.jakewharton.disklrucache.DiskLruCache this$0;

    private void <init>(com.jakewharton.disklrucache.DiskLruCache, java.lang.String, long, java.io.InputStream[], long[])
    {
        com.jakewharton.disklrucache.DiskLruCache$Snapshot r0;
        com.jakewharton.disklrucache.DiskLruCache r1;
        java.lang.String r2;
        long l0;
        java.io.InputStream[] r3;
        long[] r4;

        r0 := @this: com.jakewharton.disklrucache.DiskLruCache$Snapshot;

        r1 := @parameter0: com.jakewharton.disklrucache.DiskLruCache;

        r2 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        r3 := @parameter3: java.io.InputStream[];

        r4 := @parameter4: long[];

        r0.<com.jakewharton.disklrucache.DiskLruCache$Snapshot: com.jakewharton.disklrucache.DiskLruCache this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.jakewharton.disklrucache.DiskLruCache$Snapshot: java.lang.String key> = r2;

        r0.<com.jakewharton.disklrucache.DiskLruCache$Snapshot: long sequenceNumber> = l0;

        r0.<com.jakewharton.disklrucache.DiskLruCache$Snapshot: java.io.InputStream[] ins> = r3;

        r0.<com.jakewharton.disklrucache.DiskLruCache$Snapshot: long[] lengths> = r4;

        return;
    }

    public com.jakewharton.disklrucache.DiskLruCache$Editor edit() throws java.io.IOException
    {
        com.jakewharton.disklrucache.DiskLruCache$Snapshot r0;
        long $l0;
        java.lang.String $r1;
        com.jakewharton.disklrucache.DiskLruCache $r2;
        com.jakewharton.disklrucache.DiskLruCache$Editor $r3;

        r0 := @this: com.jakewharton.disklrucache.DiskLruCache$Snapshot;

        $r2 = r0.<com.jakewharton.disklrucache.DiskLruCache$Snapshot: com.jakewharton.disklrucache.DiskLruCache this$0>;

        $r1 = r0.<com.jakewharton.disklrucache.DiskLruCache$Snapshot: java.lang.String key>;

        $l0 = r0.<com.jakewharton.disklrucache.DiskLruCache$Snapshot: long sequenceNumber>;

        $r3 = staticinvoke <com.jakewharton.disklrucache.DiskLruCache: com.jakewharton.disklrucache.DiskLruCache$Editor access$1600(com.jakewharton.disklrucache.DiskLruCache,java.lang.String,long)>($r2, $r1, $l0);

        return $r3;
    }

    public java.io.InputStream getInputStream(int)
    {
        com.jakewharton.disklrucache.DiskLruCache$Snapshot r0;
        int i0;
        java.io.InputStream[] $r1;
        java.io.InputStream $r2;

        r0 := @this: com.jakewharton.disklrucache.DiskLruCache$Snapshot;

        i0 := @parameter0: int;

        $r1 = r0.<com.jakewharton.disklrucache.DiskLruCache$Snapshot: java.io.InputStream[] ins>;

        $r2 = $r1[i0];

        return $r2;
    }

    public java.lang.String getString(int) throws java.io.IOException
    {
        com.jakewharton.disklrucache.DiskLruCache$Snapshot r0;
        int i0;
        java.io.InputStream $r1;
        java.lang.String $r2;

        r0 := @this: com.jakewharton.disklrucache.DiskLruCache$Snapshot;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.jakewharton.disklrucache.DiskLruCache$Snapshot: java.io.InputStream getInputStream(int)>(i0);

        $r2 = staticinvoke <com.jakewharton.disklrucache.DiskLruCache: java.lang.String access$1700(java.io.InputStream)>($r1);

        return $r2;
    }

    public long getLength(int)
    {
        com.jakewharton.disklrucache.DiskLruCache$Snapshot r0;
        int i0;
        long[] $r1;
        long $l1;

        r0 := @this: com.jakewharton.disklrucache.DiskLruCache$Snapshot;

        i0 := @parameter0: int;

        $r1 = r0.<com.jakewharton.disklrucache.DiskLruCache$Snapshot: long[] lengths>;

        $l1 = $r1[i0];

        return $l1;
    }

    public void close()
    {
        com.jakewharton.disklrucache.DiskLruCache$Snapshot r0;
        java.io.InputStream[] r1;
        int i0, i1;
        java.io.InputStream r2;

        r0 := @this: com.jakewharton.disklrucache.DiskLruCache$Snapshot;

        r1 = r0.<com.jakewharton.disklrucache.DiskLruCache$Snapshot: java.io.InputStream[] ins>;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = r1[i1];

        staticinvoke <com.jakewharton.disklrucache.Util: void closeQuietly(java.io.Closeable)>(r2);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    void <init>(com.jakewharton.disklrucache.DiskLruCache, java.lang.String, long, java.io.InputStream[], long[], com.jakewharton.disklrucache.DiskLruCache$1)
    {
        com.jakewharton.disklrucache.DiskLruCache$Snapshot r0;
        com.jakewharton.disklrucache.DiskLruCache r1;
        java.lang.String r2;
        long l0;
        java.io.InputStream[] r3;
        long[] r4;
        com.jakewharton.disklrucache.DiskLruCache$1 r5;

        r0 := @this: com.jakewharton.disklrucache.DiskLruCache$Snapshot;

        r1 := @parameter0: com.jakewharton.disklrucache.DiskLruCache;

        r2 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        r3 := @parameter3: java.io.InputStream[];

        r4 := @parameter4: long[];

        r5 := @parameter5: com.jakewharton.disklrucache.DiskLruCache$1;

        specialinvoke r0.<com.jakewharton.disklrucache.DiskLruCache$Snapshot: void <init>(com.jakewharton.disklrucache.DiskLruCache,java.lang.String,long,java.io.InputStream[],long[])>(r1, r2, l0, r3, r4);

        return;
    }
}
