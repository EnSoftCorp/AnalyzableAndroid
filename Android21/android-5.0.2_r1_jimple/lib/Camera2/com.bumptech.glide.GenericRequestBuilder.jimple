public class com.bumptech.glide.GenericRequestBuilder extends java.lang.Object
{
    private final android.content.Context context;
    private final java.lang.Object model;
    private final com.bumptech.glide.provider.ChildLoadProvider loadProvider;
    private final java.lang.Class transcodeClass;
    private final com.bumptech.glide.Glide glide;
    private final com.bumptech.glide.manager.RequestTracker requestTracker;
    private java.util.List transformations;
    private com.bumptech.glide.load.Transformation singleTransformation;
    private int placeholderId;
    private int errorId;
    private com.bumptech.glide.request.RequestListener requestListener;
    private java.lang.Float thumbSizeMultiplier;
    private com.bumptech.glide.GenericRequestBuilder thumbnailRequestBuilder;
    private java.lang.Float sizeMultiplier;
    private android.graphics.drawable.Drawable placeholderDrawable;
    private android.graphics.drawable.Drawable errorPlaceholder;
    private com.bumptech.glide.Priority priority;
    private boolean isCacheable;
    private com.bumptech.glide.load.ResourceEncoder preSkipEncoder;
    private com.bumptech.glide.request.GlideAnimationFactory animationFactory;
    private int overrideHeight;
    private int overrideWidth;
    private boolean cacheSource;
    private com.bumptech.glide.load.Encoder preSkipSourceEncoder;

    void <init>(android.content.Context, java.lang.Object, com.bumptech.glide.provider.LoadProvider, java.lang.Class, com.bumptech.glide.Glide, com.bumptech.glide.manager.RequestTracker)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        android.content.Context r1;
        java.lang.Object r2;
        com.bumptech.glide.provider.LoadProvider r3;
        java.lang.Class r4;
        com.bumptech.glide.Glide r5;
        com.bumptech.glide.manager.RequestTracker r6;
        com.bumptech.glide.load.UnitTransformation $r7;
        java.lang.Float $r8;
        com.bumptech.glide.request.GlideAnimationFactory $r9;
        java.lang.NullPointerException $r10, $r11;
        com.bumptech.glide.load.ResourceEncoder $r12;
        com.bumptech.glide.provider.ChildLoadProvider $r13;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: com.bumptech.glide.provider.LoadProvider;

        r4 := @parameter3: java.lang.Class;

        r5 := @parameter4: com.bumptech.glide.Glide;

        r6 := @parameter5: com.bumptech.glide.manager.RequestTracker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.bumptech.glide.GenericRequestBuilder: java.util.List transformations> = null;

        $r7 = staticinvoke <com.bumptech.glide.load.UnitTransformation: com.bumptech.glide.load.UnitTransformation get()>();

        r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.load.Transformation singleTransformation> = $r7;

        $r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(1.0F);

        r0.<com.bumptech.glide.GenericRequestBuilder: java.lang.Float sizeMultiplier> = $r8;

        r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.Priority priority> = null;

        r0.<com.bumptech.glide.GenericRequestBuilder: boolean isCacheable> = 1;

        $r9 = staticinvoke <com.bumptech.glide.request.NoAnimation: com.bumptech.glide.request.GlideAnimationFactory getFactory()>();

        r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.GlideAnimationFactory animationFactory> = $r9;

        r0.<com.bumptech.glide.GenericRequestBuilder: int overrideHeight> = -1;

        r0.<com.bumptech.glide.GenericRequestBuilder: int overrideWidth> = -1;

        r0.<com.bumptech.glide.GenericRequestBuilder: boolean cacheSource> = 0;

        r0.<com.bumptech.glide.GenericRequestBuilder: java.lang.Class transcodeClass> = r4;

        r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.Glide glide> = r5;

        r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.manager.RequestTracker requestTracker> = r6;

        if r3 == null goto label1;

        $r13 = new com.bumptech.glide.provider.ChildLoadProvider;

        specialinvoke $r13.<com.bumptech.glide.provider.ChildLoadProvider: void <init>(com.bumptech.glide.provider.LoadProvider)>(r3);

        goto label2;

     label1:
        $r13 = null;

     label2:
        r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.provider.ChildLoadProvider loadProvider> = $r13;

        if r3 == null goto label3;

        $r12 = interfaceinvoke r3.<com.bumptech.glide.provider.LoadProvider: com.bumptech.glide.load.ResourceEncoder getEncoder()>();

        goto label4;

     label3:
        $r12 = null;

     label4:
        r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.load.ResourceEncoder preSkipEncoder> = $r12;

        if r1 != null goto label5;

        $r11 = new java.lang.NullPointerException;

        specialinvoke $r11.<java.lang.NullPointerException: void <init>(java.lang.String)>("Context can\'t be null");

        throw $r11;

     label5:
        if r2 == null goto label6;

        if r3 != null goto label6;

        $r10 = new java.lang.NullPointerException;

        specialinvoke $r10.<java.lang.NullPointerException: void <init>(java.lang.String)>("LoadProvider must not be null");

        throw $r10;

     label6:
        r0.<com.bumptech.glide.GenericRequestBuilder: android.content.Context context> = r1;

        r0.<com.bumptech.glide.GenericRequestBuilder: java.lang.Object model> = r2;

        return;
    }

    public com.bumptech.glide.GenericRequestBuilder thumbnail(com.bumptech.glide.GenericRequestBuilder)
    {
        com.bumptech.glide.GenericRequestBuilder r0, r1;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.GenericRequestBuilder;

        r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder thumbnailRequestBuilder> = r1;

        return r0;
    }

    public com.bumptech.glide.GenericRequestBuilder thumbnail(float)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        float f0;
        byte $b0, $b1;
        java.lang.IllegalArgumentException $r1;
        java.lang.Float $r2;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        f0 := @parameter0: float;

        $b0 = f0 cmpg 0.0F;

        if $b0 < 0 goto label1;

        $b1 = f0 cmpl 1.0F;

        if $b1 <= 0 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("sizeMultiplier must be between 0 and 1");

        throw $r1;

     label2:
        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        r0.<com.bumptech.glide.GenericRequestBuilder: java.lang.Float thumbSizeMultiplier> = $r2;

        return r0;
    }

    public com.bumptech.glide.GenericRequestBuilder sizeMultiplier(float)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        float f0;
        byte $b0, $b1;
        java.lang.IllegalArgumentException $r1;
        java.lang.Float $r2;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        f0 := @parameter0: float;

        $b0 = f0 cmpg 0.0F;

        if $b0 < 0 goto label1;

        $b1 = f0 cmpl 1.0F;

        if $b1 <= 0 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("sizeMultiplier must be between 0 and 1");

        throw $r1;

     label2:
        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        r0.<com.bumptech.glide.GenericRequestBuilder: java.lang.Float sizeMultiplier> = $r2;

        return r0;
    }

    public com.bumptech.glide.GenericRequestBuilder decoder(com.bumptech.glide.load.ResourceDecoder)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        com.bumptech.glide.load.ResourceDecoder r1;
        com.bumptech.glide.provider.ChildLoadProvider $r2, $r3;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.load.ResourceDecoder;

        $r2 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.provider.ChildLoadProvider loadProvider>;

        if $r2 == null goto label1;

        $r3 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.provider.ChildLoadProvider loadProvider>;

        virtualinvoke $r3.<com.bumptech.glide.provider.ChildLoadProvider: void setSourceDecoder(com.bumptech.glide.load.ResourceDecoder)>(r1);

     label1:
        return r0;
    }

    public com.bumptech.glide.GenericRequestBuilder cacheDecoder(com.bumptech.glide.load.ResourceDecoder)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        com.bumptech.glide.load.ResourceDecoder r1;
        com.bumptech.glide.provider.ChildLoadProvider $r2, $r3;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.load.ResourceDecoder;

        $r2 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.provider.ChildLoadProvider loadProvider>;

        if $r2 == null goto label1;

        $r3 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.provider.ChildLoadProvider loadProvider>;

        virtualinvoke $r3.<com.bumptech.glide.provider.ChildLoadProvider: void setCacheDecoder(com.bumptech.glide.load.ResourceDecoder)>(r1);

     label1:
        return r0;
    }

    public com.bumptech.glide.GenericRequestBuilder sourceEncoder(com.bumptech.glide.load.Encoder)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        com.bumptech.glide.load.Encoder r1;
        com.bumptech.glide.provider.ChildLoadProvider $r2, $r3;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.load.Encoder;

        $r2 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.provider.ChildLoadProvider loadProvider>;

        if $r2 == null goto label1;

        $r3 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.provider.ChildLoadProvider loadProvider>;

        virtualinvoke $r3.<com.bumptech.glide.provider.ChildLoadProvider: void setSourceEncoder(com.bumptech.glide.load.Encoder)>(r1);

        r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.load.Encoder preSkipSourceEncoder> = r1;

     label1:
        return r0;
    }

    public com.bumptech.glide.GenericRequestBuilder cacheSource(boolean)
    {
        com.bumptech.glide.GenericRequestBuilder r0, $r3, $r5;
        boolean z0;
        com.bumptech.glide.load.model.NullEncoder r1;
        com.bumptech.glide.load.Encoder $r2, $r7;
        com.bumptech.glide.provider.ChildLoadProvider $r4, $r6;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        z0 := @parameter0: boolean;

        r0.<com.bumptech.glide.GenericRequestBuilder: boolean cacheSource> = z0;

        if z0 != 0 goto label2;

        $r4 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.provider.ChildLoadProvider loadProvider>;

        if $r4 == null goto label1;

        $r6 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.provider.ChildLoadProvider loadProvider>;

        $r7 = virtualinvoke $r6.<com.bumptech.glide.provider.ChildLoadProvider: com.bumptech.glide.load.Encoder getSourceEncoder()>();

        r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.load.Encoder preSkipSourceEncoder> = $r7;

     label1:
        r1 = staticinvoke <com.bumptech.glide.load.model.NullEncoder: com.bumptech.glide.load.model.NullEncoder get()>();

        $r5 = virtualinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder sourceEncoder(com.bumptech.glide.load.Encoder)>(r1);

        return $r5;

     label2:
        $r2 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.load.Encoder preSkipSourceEncoder>;

        $r3 = virtualinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder sourceEncoder(com.bumptech.glide.load.Encoder)>($r2);

        return $r3;
    }

    public com.bumptech.glide.GenericRequestBuilder encoder(com.bumptech.glide.load.ResourceEncoder)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        com.bumptech.glide.load.ResourceEncoder r1;
        com.bumptech.glide.provider.ChildLoadProvider $r2, $r3;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.load.ResourceEncoder;

        $r2 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.provider.ChildLoadProvider loadProvider>;

        if $r2 == null goto label1;

        $r3 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.provider.ChildLoadProvider loadProvider>;

        virtualinvoke $r3.<com.bumptech.glide.provider.ChildLoadProvider: void setEncoder(com.bumptech.glide.load.ResourceEncoder)>(r1);

        r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.load.ResourceEncoder preSkipEncoder> = r1;

     label1:
        return r0;
    }

    public com.bumptech.glide.GenericRequestBuilder priority(com.bumptech.glide.Priority)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        com.bumptech.glide.Priority r1;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.Priority;

        r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.Priority priority> = r1;

        return r0;
    }

    public com.bumptech.glide.GenericRequestBuilder transform(com.bumptech.glide.load.Transformation)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        com.bumptech.glide.load.Transformation r1, $r2, $r5;
        com.bumptech.glide.load.UnitTransformation $r3;
        java.util.ArrayList $r4;
        java.util.List $r6, $r7;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.load.Transformation;

        $r2 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.load.Transformation singleTransformation>;

        $r3 = staticinvoke <com.bumptech.glide.load.UnitTransformation: com.bumptech.glide.load.UnitTransformation get()>();

        if $r2 != $r3 goto label1;

        r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.load.Transformation singleTransformation> = r1;

        goto label2;

     label1:
        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.bumptech.glide.GenericRequestBuilder: java.util.List transformations> = $r4;

        $r6 = r0.<com.bumptech.glide.GenericRequestBuilder: java.util.List transformations>;

        $r5 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.load.Transformation singleTransformation>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r5);

        $r7 = r0.<com.bumptech.glide.GenericRequestBuilder: java.util.List transformations>;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r1);

     label2:
        return r0;
    }

    public com.bumptech.glide.GenericRequestBuilder transcoder(com.bumptech.glide.load.resource.transcode.ResourceTranscoder)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        com.bumptech.glide.load.resource.transcode.ResourceTranscoder r1;
        com.bumptech.glide.provider.ChildLoadProvider $r2, $r3;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.load.resource.transcode.ResourceTranscoder;

        $r2 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.provider.ChildLoadProvider loadProvider>;

        if $r2 == null goto label1;

        $r3 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.provider.ChildLoadProvider loadProvider>;

        virtualinvoke $r3.<com.bumptech.glide.provider.ChildLoadProvider: void setTranscoder(com.bumptech.glide.load.resource.transcode.ResourceTranscoder)>(r1);

     label1:
        return r0;
    }

    public com.bumptech.glide.GenericRequestBuilder animate(int)
    {
        com.bumptech.glide.GenericRequestBuilder r0, $r3;
        int i0;
        com.bumptech.glide.request.ViewAnimation$ViewAnimationFactory $r1;
        android.content.Context $r2;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        i0 := @parameter0: int;

        $r1 = new com.bumptech.glide.request.ViewAnimation$ViewAnimationFactory;

        $r2 = r0.<com.bumptech.glide.GenericRequestBuilder: android.content.Context context>;

        specialinvoke $r1.<com.bumptech.glide.request.ViewAnimation$ViewAnimationFactory: void <init>(android.content.Context,int)>($r2, i0);

        $r3 = virtualinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder animate(com.bumptech.glide.request.GlideAnimationFactory)>($r1);

        return $r3;
    }

    public com.bumptech.glide.GenericRequestBuilder animate(android.view.animation.Animation)
    {
        com.bumptech.glide.GenericRequestBuilder r0, $r3;
        android.view.animation.Animation r1;
        com.bumptech.glide.request.ViewAnimation$ViewAnimationFactory $r2;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        r1 := @parameter0: android.view.animation.Animation;

        $r2 = new com.bumptech.glide.request.ViewAnimation$ViewAnimationFactory;

        specialinvoke $r2.<com.bumptech.glide.request.ViewAnimation$ViewAnimationFactory: void <init>(android.view.animation.Animation)>(r1);

        $r3 = virtualinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder animate(com.bumptech.glide.request.GlideAnimationFactory)>($r2);

        return $r3;
    }

    public com.bumptech.glide.GenericRequestBuilder animate(com.bumptech.glide.request.ViewPropertyAnimation$Animator)
    {
        com.bumptech.glide.GenericRequestBuilder r0, $r3;
        com.bumptech.glide.request.ViewPropertyAnimation$Animator r1;
        com.bumptech.glide.request.ViewPropertyAnimation$ViewPropertyAnimationFactory $r2;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.request.ViewPropertyAnimation$Animator;

        $r2 = new com.bumptech.glide.request.ViewPropertyAnimation$ViewPropertyAnimationFactory;

        specialinvoke $r2.<com.bumptech.glide.request.ViewPropertyAnimation$ViewPropertyAnimationFactory: void <init>(com.bumptech.glide.request.ViewPropertyAnimation$Animator)>(r1);

        $r3 = virtualinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder animate(com.bumptech.glide.request.GlideAnimationFactory)>($r2);

        return $r3;
    }

    com.bumptech.glide.GenericRequestBuilder animate(com.bumptech.glide.request.GlideAnimationFactory)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        com.bumptech.glide.request.GlideAnimationFactory r1;
        java.lang.NullPointerException $r2;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.request.GlideAnimationFactory;

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Animation factory must not be null!");

        throw $r2;

     label1:
        r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.GlideAnimationFactory animationFactory> = r1;

        return r0;
    }

    public com.bumptech.glide.GenericRequestBuilder placeholder(int)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        int i0;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        i0 := @parameter0: int;

        r0.<com.bumptech.glide.GenericRequestBuilder: int placeholderId> = i0;

        return r0;
    }

    public com.bumptech.glide.GenericRequestBuilder placeholder(android.graphics.drawable.Drawable)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r0.<com.bumptech.glide.GenericRequestBuilder: android.graphics.drawable.Drawable placeholderDrawable> = r1;

        return r0;
    }

    public com.bumptech.glide.GenericRequestBuilder error(int)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        int i0;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        i0 := @parameter0: int;

        r0.<com.bumptech.glide.GenericRequestBuilder: int errorId> = i0;

        return r0;
    }

    public com.bumptech.glide.GenericRequestBuilder error(android.graphics.drawable.Drawable)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r0.<com.bumptech.glide.GenericRequestBuilder: android.graphics.drawable.Drawable errorPlaceholder> = r1;

        return r0;
    }

    public com.bumptech.glide.GenericRequestBuilder listener(com.bumptech.glide.request.RequestListener)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        com.bumptech.glide.request.RequestListener r1;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.request.RequestListener;

        r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.RequestListener requestListener> = r1;

        return r0;
    }

    public com.bumptech.glide.GenericRequestBuilder skipMemoryCache(boolean)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        boolean z0, $z1;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r0.<com.bumptech.glide.GenericRequestBuilder: boolean isCacheable> = $z1;

        return r0;
    }

    public com.bumptech.glide.GenericRequestBuilder skipDiskCache(boolean)
    {
        com.bumptech.glide.GenericRequestBuilder r0, $r3, $r5;
        boolean z0;
        com.bumptech.glide.load.SkipCache r1;
        com.bumptech.glide.load.ResourceEncoder $r2, $r7;
        com.bumptech.glide.provider.ChildLoadProvider $r4, $r6;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label2;

        $r4 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.provider.ChildLoadProvider loadProvider>;

        if $r4 == null goto label1;

        $r6 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.provider.ChildLoadProvider loadProvider>;

        $r7 = virtualinvoke $r6.<com.bumptech.glide.provider.ChildLoadProvider: com.bumptech.glide.load.ResourceEncoder getEncoder()>();

        r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.load.ResourceEncoder preSkipEncoder> = $r7;

     label1:
        r1 = staticinvoke <com.bumptech.glide.load.SkipCache: com.bumptech.glide.load.SkipCache get()>();

        $r5 = virtualinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder encoder(com.bumptech.glide.load.ResourceEncoder)>(r1);

        return $r5;

     label2:
        $r2 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.load.ResourceEncoder preSkipEncoder>;

        $r3 = virtualinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder encoder(com.bumptech.glide.load.ResourceEncoder)>($r2);

        return $r3;
    }

    public com.bumptech.glide.GenericRequestBuilder skipCache(boolean)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        boolean z0;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder skipMemoryCache(boolean)>(z0);

        virtualinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder skipDiskCache(boolean)>(z0);

        virtualinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder cacheSource(boolean)>(0);

        return r0;
    }

    public com.bumptech.glide.GenericRequestBuilder override(int, int)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        int i0, i1;
        java.lang.IllegalArgumentException $r1, $r2;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 > 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Width must be >= 0");

        throw $r2;

     label1:
        if i1 > 0 goto label2;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Height must be >= 0");

        throw $r1;

     label2:
        r0.<com.bumptech.glide.GenericRequestBuilder: int overrideWidth> = i0;

        r0.<com.bumptech.glide.GenericRequestBuilder: int overrideHeight> = i1;

        return r0;
    }

    public com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        com.bumptech.glide.request.target.Target r1;
        com.bumptech.glide.request.Request r2, r3;
        com.bumptech.glide.manager.RequestTracker $r4, $r5;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.request.target.Target;

        r2 = interfaceinvoke r1.<com.bumptech.glide.request.target.Target: com.bumptech.glide.request.Request getRequest()>();

        if r2 == null goto label1;

        interfaceinvoke r2.<com.bumptech.glide.request.Request: void clear()>();

        $r5 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.manager.RequestTracker requestTracker>;

        virtualinvoke $r5.<com.bumptech.glide.manager.RequestTracker: void removeRequest(com.bumptech.glide.request.Request)>(r2);

        interfaceinvoke r2.<com.bumptech.glide.request.Request: void recycle()>();

     label1:
        r3 = specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.Request buildRequest(com.bumptech.glide.request.target.Target)>(r1);

        interfaceinvoke r1.<com.bumptech.glide.request.target.Target: void setRequest(com.bumptech.glide.request.Request)>(r3);

        $r4 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.manager.RequestTracker requestTracker>;

        virtualinvoke $r4.<com.bumptech.glide.manager.RequestTracker: void addRequest(com.bumptech.glide.request.Request)>(r3);

        interfaceinvoke r3.<com.bumptech.glide.request.Request: void run()>();

        return r1;
    }

    public com.bumptech.glide.request.target.Target into(android.widget.ImageView)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        android.widget.ImageView r1;
        java.lang.Class $r2;
        com.bumptech.glide.Glide $r3;
        com.bumptech.glide.request.target.Target $r4, $r5;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        r1 := @parameter0: android.widget.ImageView;

        $r3 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.Glide glide>;

        $r2 = r0.<com.bumptech.glide.GenericRequestBuilder: java.lang.Class transcodeClass>;

        $r4 = virtualinvoke $r3.<com.bumptech.glide.Glide: com.bumptech.glide.request.target.Target buildImageViewTarget(android.widget.ImageView,java.lang.Class)>(r1, $r2);

        $r5 = virtualinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.target.Target into(com.bumptech.glide.request.target.Target)>($r4);

        return $r5;
    }

    private com.bumptech.glide.request.Request buildRequest(com.bumptech.glide.request.target.Target)
    {
        com.bumptech.glide.GenericRequestBuilder r0, $r7, $r19, $r22, $r24, $r26, $r27, $r29, $r30, $r33, $r38;
        com.bumptech.glide.request.target.Target r1;
        com.bumptech.glide.request.Request r2, r4, r5, r40, r41;
        com.bumptech.glide.request.ThumbnailRequestCoordinator r3, $r11, $r17, r39;
        com.bumptech.glide.Priority $r6, $r10, $r13, $r15, $r18, $r23, $r31, $r32, $r37;
        java.lang.Float $r8, $r9, $r12, $r14, $r16, $r28;
        float $f0, $f1, $f2, $f3, $f4;
        com.bumptech.glide.request.GlideAnimationFactory $r20, $r21, $r34;
        boolean $z0;
        com.bumptech.glide.request.RequestListener $r25, $r35, $r36;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.request.target.Target;

        $r6 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.Priority priority>;

        if $r6 != null goto label1;

        $r37 = <com.bumptech.glide.Priority: com.bumptech.glide.Priority NORMAL>;

        r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.Priority priority> = $r37;

     label1:
        $r7 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder thumbnailRequestBuilder>;

        if $r7 == null goto label5;

        $r17 = new com.bumptech.glide.request.ThumbnailRequestCoordinator;

        specialinvoke $r17.<com.bumptech.glide.request.ThumbnailRequestCoordinator: void <init>()>();

        r3 = $r17;

        $r16 = r0.<com.bumptech.glide.GenericRequestBuilder: java.lang.Float sizeMultiplier>;

        $f3 = virtualinvoke $r16.<java.lang.Float: float floatValue()>();

        $r18 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.Priority priority>;

        r4 = specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.Request buildRequest(com.bumptech.glide.request.target.Target,float,com.bumptech.glide.Priority,com.bumptech.glide.request.RequestCoordinator)>(r1, $f3, $r18, r3);

        $r19 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder thumbnailRequestBuilder>;

        $r21 = $r19.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.GlideAnimationFactory animationFactory>;

        $r20 = staticinvoke <com.bumptech.glide.request.NoAnimation: com.bumptech.glide.request.GlideAnimationFactory getFactory()>();

        $z0 = virtualinvoke $r21.<java.lang.Object: boolean equals(java.lang.Object)>($r20);

        if $z0 == 0 goto label2;

        $r38 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder thumbnailRequestBuilder>;

        $r34 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.GlideAnimationFactory animationFactory>;

        $r38.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.GlideAnimationFactory animationFactory> = $r34;

     label2:
        $r22 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder thumbnailRequestBuilder>;

        $r25 = $r22.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.RequestListener requestListener>;

        if $r25 != null goto label3;

        $r35 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.RequestListener requestListener>;

        if $r35 == null goto label3;

        $r33 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder thumbnailRequestBuilder>;

        $r36 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.RequestListener requestListener>;

        $r33.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.RequestListener requestListener> = $r36;

     label3:
        $r26 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder thumbnailRequestBuilder>;

        $r23 = $r26.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.Priority priority>;

        if $r23 != null goto label4;

        $r30 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder thumbnailRequestBuilder>;

        $r31 = specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.Priority getThumbnailPriority()>();

        $r30.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.Priority priority> = $r31;

     label4:
        $r29 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder thumbnailRequestBuilder>;

        $r24 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder thumbnailRequestBuilder>;

        $r28 = $r24.<com.bumptech.glide.GenericRequestBuilder: java.lang.Float sizeMultiplier>;

        $f4 = virtualinvoke $r28.<java.lang.Float: float floatValue()>();

        $r27 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.GenericRequestBuilder thumbnailRequestBuilder>;

        $r32 = $r27.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.Priority priority>;

        r5 = specialinvoke $r29.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.Request buildRequest(com.bumptech.glide.request.target.Target,float,com.bumptech.glide.Priority,com.bumptech.glide.request.RequestCoordinator)>(r1, $f4, $r32, r3);

        virtualinvoke r3.<com.bumptech.glide.request.ThumbnailRequestCoordinator: void setRequests(com.bumptech.glide.request.Request,com.bumptech.glide.request.Request)>(r4, r5);

        r2 = r3;

        goto label7;

     label5:
        $r8 = r0.<com.bumptech.glide.GenericRequestBuilder: java.lang.Float thumbSizeMultiplier>;

        if $r8 == null goto label6;

        $r11 = new com.bumptech.glide.request.ThumbnailRequestCoordinator;

        specialinvoke $r11.<com.bumptech.glide.request.ThumbnailRequestCoordinator: void <init>()>();

        r39 = $r11;

        $r12 = r0.<com.bumptech.glide.GenericRequestBuilder: java.lang.Float sizeMultiplier>;

        $f1 = virtualinvoke $r12.<java.lang.Float: float floatValue()>();

        $r13 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.Priority priority>;

        r40 = specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.Request buildRequest(com.bumptech.glide.request.target.Target,float,com.bumptech.glide.Priority,com.bumptech.glide.request.RequestCoordinator)>(r1, $f1, $r13, r39);

        $r14 = r0.<com.bumptech.glide.GenericRequestBuilder: java.lang.Float thumbSizeMultiplier>;

        $f2 = virtualinvoke $r14.<java.lang.Float: float floatValue()>();

        $r15 = specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.Priority getThumbnailPriority()>();

        r41 = specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.Request buildRequest(com.bumptech.glide.request.target.Target,float,com.bumptech.glide.Priority,com.bumptech.glide.request.RequestCoordinator)>(r1, $f2, $r15, r39);

        virtualinvoke r39.<com.bumptech.glide.request.ThumbnailRequestCoordinator: void setRequests(com.bumptech.glide.request.Request,com.bumptech.glide.request.Request)>(r40, r41);

        r2 = r39;

        goto label7;

     label6:
        $r9 = r0.<com.bumptech.glide.GenericRequestBuilder: java.lang.Float sizeMultiplier>;

        $f0 = virtualinvoke $r9.<java.lang.Float: float floatValue()>();

        $r10 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.Priority priority>;

        r2 = specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.Request buildRequest(com.bumptech.glide.request.target.Target,float,com.bumptech.glide.Priority,com.bumptech.glide.request.RequestCoordinator)>(r1, $f0, $r10, null);

     label7:
        return r2;
    }

    private com.bumptech.glide.Priority getThumbnailPriority()
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        com.bumptech.glide.Priority r1, $r2, $r3, $r4, $r5;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        $r3 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.Priority priority>;

        $r2 = <com.bumptech.glide.Priority: com.bumptech.glide.Priority LOW>;

        if $r3 != $r2 goto label1;

        r1 = <com.bumptech.glide.Priority: com.bumptech.glide.Priority NORMAL>;

        goto label3;

     label1:
        $r5 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.Priority priority>;

        $r4 = <com.bumptech.glide.Priority: com.bumptech.glide.Priority NORMAL>;

        if $r5 != $r4 goto label2;

        r1 = <com.bumptech.glide.Priority: com.bumptech.glide.Priority HIGH>;

        goto label3;

     label2:
        r1 = <com.bumptech.glide.Priority: com.bumptech.glide.Priority IMMEDIATE>;

     label3:
        return r1;
    }

    private com.bumptech.glide.request.Request buildRequest(com.bumptech.glide.request.target.Target, float, com.bumptech.glide.Priority, com.bumptech.glide.request.RequestCoordinator)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        com.bumptech.glide.request.target.Target r1;
        float f0;
        com.bumptech.glide.Priority r2;
        com.bumptech.glide.request.RequestCoordinator r3;
        java.lang.Object $r4;
        com.bumptech.glide.provider.ChildLoadProvider $r5, $r7;
        com.bumptech.glide.request.Request $r6, $r8;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.request.target.Target;

        f0 := @parameter1: float;

        r2 := @parameter2: com.bumptech.glide.Priority;

        r3 := @parameter3: com.bumptech.glide.request.RequestCoordinator;

        $r4 = r0.<com.bumptech.glide.GenericRequestBuilder: java.lang.Object model>;

        if $r4 != null goto label1;

        $r7 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.provider.ChildLoadProvider loadProvider>;

        $r8 = specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.Request buildRequestForDataType(com.bumptech.glide.request.target.Target,com.bumptech.glide.provider.LoadProvider,float,com.bumptech.glide.Priority,com.bumptech.glide.request.RequestCoordinator)>(r1, $r7, f0, r2, null);

        return $r8;

     label1:
        $r5 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.provider.ChildLoadProvider loadProvider>;

        $r6 = specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.Request buildRequestForDataType(com.bumptech.glide.request.target.Target,com.bumptech.glide.provider.LoadProvider,float,com.bumptech.glide.Priority,com.bumptech.glide.request.RequestCoordinator)>(r1, $r5, f0, r2, r3);

        return $r6;
    }

    private com.bumptech.glide.request.Request buildRequestForDataType(com.bumptech.glide.request.target.Target, com.bumptech.glide.provider.LoadProvider, float, com.bumptech.glide.Priority, com.bumptech.glide.request.RequestCoordinator)
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        com.bumptech.glide.request.target.Target r1;
        com.bumptech.glide.provider.LoadProvider r2;
        float f0;
        com.bumptech.glide.Priority r3;
        com.bumptech.glide.request.RequestCoordinator r4;
        com.bumptech.glide.Glide $r5;
        java.lang.Object $r6;
        android.content.Context $r7;
        android.graphics.drawable.Drawable $r8, $r9;
        int $i0, $i1, $i2, $i3;
        com.bumptech.glide.request.RequestListener $r10;
        com.bumptech.glide.load.engine.Engine $r11;
        com.bumptech.glide.load.Transformation $r12;
        boolean $z0, $z1;
        com.bumptech.glide.request.GlideAnimationFactory $r13;
        java.lang.Class $r14;
        com.bumptech.glide.request.GenericRequest $r15;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        r1 := @parameter0: com.bumptech.glide.request.target.Target;

        r2 := @parameter1: com.bumptech.glide.provider.LoadProvider;

        f0 := @parameter2: float;

        r3 := @parameter3: com.bumptech.glide.Priority;

        r4 := @parameter4: com.bumptech.glide.request.RequestCoordinator;

        $r6 = r0.<com.bumptech.glide.GenericRequestBuilder: java.lang.Object model>;

        $r7 = r0.<com.bumptech.glide.GenericRequestBuilder: android.content.Context context>;

        $r8 = r0.<com.bumptech.glide.GenericRequestBuilder: android.graphics.drawable.Drawable placeholderDrawable>;

        $i0 = r0.<com.bumptech.glide.GenericRequestBuilder: int placeholderId>;

        $r9 = r0.<com.bumptech.glide.GenericRequestBuilder: android.graphics.drawable.Drawable errorPlaceholder>;

        $i1 = r0.<com.bumptech.glide.GenericRequestBuilder: int errorId>;

        $r10 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.RequestListener requestListener>;

        $r5 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.Glide glide>;

        $r11 = virtualinvoke $r5.<com.bumptech.glide.Glide: com.bumptech.glide.load.engine.Engine getEngine()>();

        $r12 = specialinvoke r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.load.Transformation getFinalTransformation()>();

        $r14 = r0.<com.bumptech.glide.GenericRequestBuilder: java.lang.Class transcodeClass>;

        $z1 = r0.<com.bumptech.glide.GenericRequestBuilder: boolean isCacheable>;

        $r13 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.request.GlideAnimationFactory animationFactory>;

        $i3 = r0.<com.bumptech.glide.GenericRequestBuilder: int overrideWidth>;

        $i2 = r0.<com.bumptech.glide.GenericRequestBuilder: int overrideHeight>;

        $z0 = r0.<com.bumptech.glide.GenericRequestBuilder: boolean cacheSource>;

        $r15 = staticinvoke <com.bumptech.glide.request.GenericRequest: com.bumptech.glide.request.GenericRequest obtain(com.bumptech.glide.provider.LoadProvider,java.lang.Object,android.content.Context,com.bumptech.glide.Priority,com.bumptech.glide.request.target.Target,float,android.graphics.drawable.Drawable,int,android.graphics.drawable.Drawable,int,com.bumptech.glide.request.RequestListener,com.bumptech.glide.request.RequestCoordinator,com.bumptech.glide.load.engine.Engine,com.bumptech.glide.load.Transformation,java.lang.Class,boolean,com.bumptech.glide.request.GlideAnimationFactory,int,int,boolean)>(r2, $r6, $r7, r3, r1, f0, $r8, $i0, $r9, $i1, $r10, r4, $r11, $r12, $r14, $z1, $r13, $i3, $i2, $z0);

        return $r15;
    }

    private com.bumptech.glide.load.Transformation getFinalTransformation()
    {
        com.bumptech.glide.GenericRequestBuilder r0;
        java.util.List $r1, $r3;
        com.bumptech.glide.load.MultiTransformation $r2;
        com.bumptech.glide.load.Transformation $r4;

        r0 := @this: com.bumptech.glide.GenericRequestBuilder;

        $r1 = r0.<com.bumptech.glide.GenericRequestBuilder: java.util.List transformations>;

        if $r1 != null goto label1;

        $r4 = r0.<com.bumptech.glide.GenericRequestBuilder: com.bumptech.glide.load.Transformation singleTransformation>;

        return $r4;

     label1:
        $r2 = new com.bumptech.glide.load.MultiTransformation;

        $r3 = r0.<com.bumptech.glide.GenericRequestBuilder: java.util.List transformations>;

        specialinvoke $r2.<com.bumptech.glide.load.MultiTransformation: void <init>(java.util.List)>($r3);

        return $r2;
    }
}
