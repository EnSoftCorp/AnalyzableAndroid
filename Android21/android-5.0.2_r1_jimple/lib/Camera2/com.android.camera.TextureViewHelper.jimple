public class com.android.camera.TextureViewHelper extends java.lang.Object implements android.view.TextureView$SurfaceTextureListener, android.view.View$OnLayoutChangeListener
{
    private static final com.android.camera.debug.Log$Tag TAG;
    public static final float MATCH_SCREEN;
    private static final int UNSET;
    private final android.view.TextureView mPreview;
    private final com.android.camera.app.CameraProvider mCameraProvider;
    private int mWidth;
    private int mHeight;
    private android.graphics.RectF mPreviewArea;
    private float mAspectRatio;
    private boolean mAutoAdjustTransform;
    private android.view.TextureView$SurfaceTextureListener mSurfaceTextureListener;
    private final java.util.ArrayList mAspectRatioChangedListeners;
    private final java.util.ArrayList mPreviewSizeChangedListeners;
    private android.view.View$OnLayoutChangeListener mOnLayoutChangeListener;
    private com.android.camera.CaptureLayoutHelper mCaptureLayoutHelper;
    private int mOrientation;

    public void <init>(android.view.TextureView, com.android.camera.CaptureLayoutHelper, com.android.camera.app.CameraProvider)
    {
        com.android.camera.TextureViewHelper r0;
        android.view.TextureView r1, $r7, $r8;
        com.android.camera.CaptureLayoutHelper r2;
        com.android.camera.app.CameraProvider r3;
        android.graphics.RectF $r4;
        java.util.ArrayList $r5, $r6;

        r0 := @this: com.android.camera.TextureViewHelper;

        r1 := @parameter0: android.view.TextureView;

        r2 := @parameter1: com.android.camera.CaptureLayoutHelper;

        r3 := @parameter2: com.android.camera.app.CameraProvider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.camera.TextureViewHelper: int mWidth> = 0;

        r0.<com.android.camera.TextureViewHelper: int mHeight> = 0;

        $r4 = new android.graphics.RectF;

        specialinvoke $r4.<android.graphics.RectF: void <init>()>();

        r0.<com.android.camera.TextureViewHelper: android.graphics.RectF mPreviewArea> = $r4;

        r0.<com.android.camera.TextureViewHelper: float mAspectRatio> = 0.0F;

        r0.<com.android.camera.TextureViewHelper: boolean mAutoAdjustTransform> = 1;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<com.android.camera.TextureViewHelper: java.util.ArrayList mAspectRatioChangedListeners> = $r5;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<com.android.camera.TextureViewHelper: java.util.ArrayList mPreviewSizeChangedListeners> = $r6;

        r0.<com.android.camera.TextureViewHelper: android.view.View$OnLayoutChangeListener mOnLayoutChangeListener> = null;

        r0.<com.android.camera.TextureViewHelper: com.android.camera.CaptureLayoutHelper mCaptureLayoutHelper> = null;

        r0.<com.android.camera.TextureViewHelper: int mOrientation> = -1;

        r0.<com.android.camera.TextureViewHelper: android.view.TextureView mPreview> = r1;

        r0.<com.android.camera.TextureViewHelper: com.android.camera.app.CameraProvider mCameraProvider> = r3;

        $r7 = r0.<com.android.camera.TextureViewHelper: android.view.TextureView mPreview>;

        virtualinvoke $r7.<android.view.TextureView: void addOnLayoutChangeListener(android.view.View$OnLayoutChangeListener)>(r0);

        $r8 = r0.<com.android.camera.TextureViewHelper: android.view.TextureView mPreview>;

        virtualinvoke $r8.<android.view.TextureView: void setSurfaceTextureListener(android.view.TextureView$SurfaceTextureListener)>(r0);

        r0.<com.android.camera.TextureViewHelper: com.android.camera.CaptureLayoutHelper mCaptureLayoutHelper> = r2;

        return;
    }

    public void setAutoAdjustTransform(boolean)
    {
        com.android.camera.TextureViewHelper r0;
        boolean z0;

        r0 := @this: com.android.camera.TextureViewHelper;

        z0 := @parameter0: boolean;

        r0.<com.android.camera.TextureViewHelper: boolean mAutoAdjustTransform> = z0;

        return;
    }

    public void onLayoutChange(android.view.View, int, int, int, int, int, int, int, int)
    {
        com.android.camera.TextureViewHelper r0;
        android.view.View r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, $i11, $i12, $i13;
        com.android.camera.debug.Log$Tag $r2;
        android.view.TextureView $r3;
        android.content.Context $r4;
        android.view.View$OnLayoutChangeListener $r5, $r6;
        boolean $z0;

        r0 := @this: com.android.camera.TextureViewHelper;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        i5 := @parameter6: int;

        i6 := @parameter7: int;

        i7 := @parameter8: int;

        $r2 = <com.android.camera.TextureViewHelper: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void v(com.android.camera.debug.Log$Tag,java.lang.String)>($r2, "onLayoutChange");

        i8 = i2 - i0;

        i9 = i3 - i1;

        $r3 = r0.<com.android.camera.TextureViewHelper: android.view.TextureView mPreview>;

        $r4 = virtualinvoke $r3.<android.view.TextureView: android.content.Context getContext()>();

        i10 = staticinvoke <com.android.camera.util.CameraUtil: int getDisplayRotation(android.content.Context)>($r4);

        $i11 = r0.<com.android.camera.TextureViewHelper: int mWidth>;

        if $i11 != i8 goto label1;

        $i12 = r0.<com.android.camera.TextureViewHelper: int mHeight>;

        if $i12 != i9 goto label1;

        $i13 = r0.<com.android.camera.TextureViewHelper: int mOrientation>;

        if $i13 == i10 goto label2;

     label1:
        r0.<com.android.camera.TextureViewHelper: int mWidth> = i8;

        r0.<com.android.camera.TextureViewHelper: int mHeight> = i9;

        r0.<com.android.camera.TextureViewHelper: int mOrientation> = i10;

        $z0 = specialinvoke r0.<com.android.camera.TextureViewHelper: boolean updateTransform()>();

        if $z0 != 0 goto label2;

        virtualinvoke r0.<com.android.camera.TextureViewHelper: void clearTransform()>();

     label2:
        $r5 = r0.<com.android.camera.TextureViewHelper: android.view.View$OnLayoutChangeListener mOnLayoutChangeListener>;

        if $r5 == null goto label3;

        $r6 = r0.<com.android.camera.TextureViewHelper: android.view.View$OnLayoutChangeListener mOnLayoutChangeListener>;

        interfaceinvoke $r6.<android.view.View$OnLayoutChangeListener: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)>(r1, i0, i1, i2, i3, i4, i5, i6, i7);

     label3:
        return;
    }

    public void clearTransform()
    {
        com.android.camera.TextureViewHelper r0;
        android.graphics.Matrix $r1;
        android.view.TextureView $r2;
        int $i0, $i1;
        float $f0, $f1;
        android.graphics.RectF $r3, $r4;

        r0 := @this: com.android.camera.TextureViewHelper;

        $r2 = r0.<com.android.camera.TextureViewHelper: android.view.TextureView mPreview>;

        $r1 = new android.graphics.Matrix;

        specialinvoke $r1.<android.graphics.Matrix: void <init>()>();

        virtualinvoke $r2.<android.view.TextureView: void setTransform(android.graphics.Matrix)>($r1);

        $r3 = r0.<com.android.camera.TextureViewHelper: android.graphics.RectF mPreviewArea>;

        $i0 = r0.<com.android.camera.TextureViewHelper: int mWidth>;

        $f1 = (float) $i0;

        $i1 = r0.<com.android.camera.TextureViewHelper: int mHeight>;

        $f0 = (float) $i1;

        virtualinvoke $r3.<android.graphics.RectF: void set(float,float,float,float)>(0.0F, 0.0F, $f1, $f0);

        $r4 = r0.<com.android.camera.TextureViewHelper: android.graphics.RectF mPreviewArea>;

        specialinvoke r0.<com.android.camera.TextureViewHelper: void onPreviewAreaChanged(android.graphics.RectF)>($r4);

        specialinvoke r0.<com.android.camera.TextureViewHelper: void setAspectRatio(float)>(0.0F);

        return;
    }

    public void updateAspectRatio(float)
    {
        com.android.camera.TextureViewHelper r0;
        float f0;
        com.android.camera.debug.Log$Tag $r1, $r3;
        byte $b0, $b1;
        java.lang.StringBuilder $r2, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: com.android.camera.TextureViewHelper;

        f0 := @parameter0: float;

        $r1 = <com.android.camera.TextureViewHelper: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void v(com.android.camera.debug.Log$Tag,java.lang.String)>($r1, "updateAspectRatio");

        $b0 = f0 cmpg 0.0F;

        if $b0 > 0 goto label1;

        $r3 = <com.android.camera.TextureViewHelper: com.android.camera.debug.Log$Tag TAG>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid aspect ratio: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void e(com.android.camera.debug.Log$Tag,java.lang.String)>($r3, $r6);

        return;

     label1:
        $b1 = f0 cmpg 1.0F;

        if $b1 >= 0 goto label2;

        f0 = 1.0F / f0;

     label2:
        specialinvoke r0.<com.android.camera.TextureViewHelper: void setAspectRatio(float)>(f0);

        specialinvoke r0.<com.android.camera.TextureViewHelper: boolean updateTransform()>();

        return;
    }

    private void setAspectRatio(float)
    {
        com.android.camera.TextureViewHelper r0;
        float f0, $f1, $f2;
        java.lang.StringBuilder $r1, $r3, $r4, $r6, $r8, $r9;
        com.android.camera.debug.Log$Tag $r2, $r7;
        java.lang.String $r5, $r10;
        byte $b0;

        r0 := @this: com.android.camera.TextureViewHelper;

        f0 := @parameter0: float;

        $r2 = <com.android.camera.TextureViewHelper: com.android.camera.debug.Log$Tag TAG>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setAspectRatio: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void v(com.android.camera.debug.Log$Tag,java.lang.String)>($r2, $r5);

        $f1 = r0.<com.android.camera.TextureViewHelper: float mAspectRatio>;

        $b0 = $f1 cmpl f0;

        if $b0 == 0 goto label1;

        $r7 = <com.android.camera.TextureViewHelper: com.android.camera.debug.Log$Tag TAG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("aspect ratio changed from: ");

        $f2 = r0.<com.android.camera.TextureViewHelper: float mAspectRatio>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void v(com.android.camera.debug.Log$Tag,java.lang.String)>($r7, $r10);

        r0.<com.android.camera.TextureViewHelper: float mAspectRatio> = f0;

        specialinvoke r0.<com.android.camera.TextureViewHelper: void onAspectRatioChanged()>();

     label1:
        return;
    }

    private void onAspectRatioChanged()
    {
        com.android.camera.TextureViewHelper r0;
        java.util.Iterator r1;
        com.android.camera.ui.PreviewStatusListener$PreviewAspectRatioChangedListener r2;
        float $f0, $f1;
        com.android.camera.CaptureLayoutHelper $r3;
        java.util.ArrayList $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: com.android.camera.TextureViewHelper;

        $r3 = r0.<com.android.camera.TextureViewHelper: com.android.camera.CaptureLayoutHelper mCaptureLayoutHelper>;

        $f0 = r0.<com.android.camera.TextureViewHelper: float mAspectRatio>;

        virtualinvoke $r3.<com.android.camera.CaptureLayoutHelper: void onPreviewAspectRatioChanged(float)>($f0);

        $r4 = r0.<com.android.camera.TextureViewHelper: java.util.ArrayList mAspectRatioChangedListeners>;

        r1 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.camera.ui.PreviewStatusListener$PreviewAspectRatioChangedListener) $r5;

        $f1 = r0.<com.android.camera.TextureViewHelper: float mAspectRatio>;

        interfaceinvoke r2.<com.android.camera.ui.PreviewStatusListener$PreviewAspectRatioChangedListener: void onPreviewAspectRatioChanged(float)>($f1);

        goto label1;

     label2:
        return;
    }

    public void addAspectRatioChangedListener(com.android.camera.ui.PreviewStatusListener$PreviewAspectRatioChangedListener)
    {
        com.android.camera.TextureViewHelper r0;
        com.android.camera.ui.PreviewStatusListener$PreviewAspectRatioChangedListener r1;
        java.util.ArrayList $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.camera.TextureViewHelper;

        r1 := @parameter0: com.android.camera.ui.PreviewStatusListener$PreviewAspectRatioChangedListener;

        if r1 == null goto label1;

        $r2 = r0.<com.android.camera.TextureViewHelper: java.util.ArrayList mAspectRatioChangedListeners>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<com.android.camera.TextureViewHelper: java.util.ArrayList mAspectRatioChangedListeners>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label1:
        return;
    }

    public android.graphics.RectF getFullscreenRect()
    {
        com.android.camera.TextureViewHelper r0;
        com.android.camera.CaptureLayoutHelper $r1;
        android.graphics.RectF $r2;

        r0 := @this: com.android.camera.TextureViewHelper;

        $r1 = r0.<com.android.camera.TextureViewHelper: com.android.camera.CaptureLayoutHelper mCaptureLayoutHelper>;

        $r2 = virtualinvoke $r1.<com.android.camera.CaptureLayoutHelper: android.graphics.RectF getFullscreenRect()>();

        return $r2;
    }

    public void updateTransformFullScreen(android.graphics.Matrix, float)
    {
        com.android.camera.TextureViewHelper r0;
        android.graphics.Matrix r1;
        float f0, $f1, $f2, f3;
        byte $b0, $b1;
        android.view.TextureView $r2;
        com.android.camera.CaptureLayoutHelper $r3;
        android.graphics.RectF $r4, $r5;

        r0 := @this: com.android.camera.TextureViewHelper;

        r1 := @parameter0: android.graphics.Matrix;

        f0 := @parameter1: float;

        $b0 = f0 cmpg 1.0F;

        if $b0 >= 0 goto label1;

        $f2 = 1.0F / f0;

        goto label2;

     label1:
        $f2 = f0;

     label2:
        f3 = $f2;

        $f1 = r0.<com.android.camera.TextureViewHelper: float mAspectRatio>;

        $b1 = f3 cmpl $f1;

        if $b1 == 0 goto label3;

        specialinvoke r0.<com.android.camera.TextureViewHelper: void setAspectRatio(float)>(f3);

     label3:
        $r2 = r0.<com.android.camera.TextureViewHelper: android.view.TextureView mPreview>;

        virtualinvoke $r2.<android.view.TextureView: void setTransform(android.graphics.Matrix)>(r1);

        $r3 = r0.<com.android.camera.TextureViewHelper: com.android.camera.CaptureLayoutHelper mCaptureLayoutHelper>;

        $r4 = virtualinvoke $r3.<com.android.camera.CaptureLayoutHelper: android.graphics.RectF getPreviewRect()>();

        r0.<com.android.camera.TextureViewHelper: android.graphics.RectF mPreviewArea> = $r4;

        $r5 = r0.<com.android.camera.TextureViewHelper: android.graphics.RectF mPreviewArea>;

        specialinvoke r0.<com.android.camera.TextureViewHelper: void onPreviewAreaChanged(android.graphics.RectF)>($r5);

        return;
    }

    public void updateTransform(android.graphics.Matrix)
    {
        com.android.camera.TextureViewHelper r0;
        android.graphics.Matrix r1, r4, $r15;
        android.graphics.RectF r2, r3, $r5;
        float f0, f1, f2, $f3, $f4, $f5, $f6, f7;
        int $i0, $i1;
        java.lang.StringBuilder $r6, $r7, $r9, $r10, $r12;
        byte $b2, $b3, $b4, $b5;
        com.android.camera.debug.Log$Tag $r8;
        java.lang.String $r11;
        com.android.camera.CaptureLayoutHelper $r13;
        android.graphics.Matrix$ScaleToFit $r14;
        android.view.TextureView $r16;

        r0 := @this: com.android.camera.TextureViewHelper;

        r1 := @parameter0: android.graphics.Matrix;

        $r5 = new android.graphics.RectF;

        $i0 = r0.<com.android.camera.TextureViewHelper: int mWidth>;

        $f4 = (float) $i0;

        $i1 = r0.<com.android.camera.TextureViewHelper: int mHeight>;

        $f3 = (float) $i1;

        specialinvoke $r5.<android.graphics.RectF: void <init>(float,float,float,float)>(0.0F, 0.0F, $f4, $f3);

        r2 = $r5;

        virtualinvoke r1.<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>(r2);

        f0 = virtualinvoke r2.<android.graphics.RectF: float width()>();

        f1 = virtualinvoke r2.<android.graphics.RectF: float height()>();

        $b2 = f1 cmpl 0.0F;

        if $b2 == 0 goto label1;

        $b4 = f0 cmpl 0.0F;

        if $b4 != 0 goto label2;

     label1:
        $r8 = <com.android.camera.TextureViewHelper: com.android.camera.debug.Log$Tag TAG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid preview size: ");

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" x ");

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f1);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void e(com.android.camera.debug.Log$Tag,java.lang.String)>($r8, $r11);

        return;

     label2:
        f2 = f0 / f1;

        $b3 = f2 cmpg 1.0F;

        if $b3 >= 0 goto label3;

        $f6 = 1.0F / f2;

        goto label4;

     label3:
        $f6 = f2;

     label4:
        f7 = $f6;

        $f5 = r0.<com.android.camera.TextureViewHelper: float mAspectRatio>;

        $b5 = f7 cmpl $f5;

        if $b5 == 0 goto label5;

        specialinvoke r0.<com.android.camera.TextureViewHelper: void setAspectRatio(float)>(f7);

     label5:
        $r13 = r0.<com.android.camera.TextureViewHelper: com.android.camera.CaptureLayoutHelper mCaptureLayoutHelper>;

        r3 = virtualinvoke $r13.<com.android.camera.CaptureLayoutHelper: android.graphics.RectF getPreviewRect()>();

        $r15 = new android.graphics.Matrix;

        specialinvoke $r15.<android.graphics.Matrix: void <init>()>();

        r4 = $r15;

        $r14 = <android.graphics.Matrix$ScaleToFit: android.graphics.Matrix$ScaleToFit CENTER>;

        virtualinvoke r4.<android.graphics.Matrix: boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix$ScaleToFit)>(r2, r3, $r14);

        virtualinvoke r1.<android.graphics.Matrix: boolean postConcat(android.graphics.Matrix)>(r4);

        $r16 = r0.<com.android.camera.TextureViewHelper: android.view.TextureView mPreview>;

        virtualinvoke $r16.<android.view.TextureView: void setTransform(android.graphics.Matrix)>(r1);

        specialinvoke r0.<com.android.camera.TextureViewHelper: void updatePreviewArea(android.graphics.Matrix)>(r1);

        return;
    }

    private void updatePreviewArea(android.graphics.Matrix)
    {
        com.android.camera.TextureViewHelper r0;
        android.graphics.Matrix r1;
        int $i0, $i1;
        float $f0, $f1;
        android.graphics.RectF $r2, $r3, $r4;

        r0 := @this: com.android.camera.TextureViewHelper;

        r1 := @parameter0: android.graphics.Matrix;

        $r2 = r0.<com.android.camera.TextureViewHelper: android.graphics.RectF mPreviewArea>;

        $i0 = r0.<com.android.camera.TextureViewHelper: int mWidth>;

        $f1 = (float) $i0;

        $i1 = r0.<com.android.camera.TextureViewHelper: int mHeight>;

        $f0 = (float) $i1;

        virtualinvoke $r2.<android.graphics.RectF: void set(float,float,float,float)>(0.0F, 0.0F, $f1, $f0);

        $r3 = r0.<com.android.camera.TextureViewHelper: android.graphics.RectF mPreviewArea>;

        virtualinvoke r1.<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>($r3);

        $r4 = r0.<com.android.camera.TextureViewHelper: android.graphics.RectF mPreviewArea>;

        specialinvoke r0.<com.android.camera.TextureViewHelper: void onPreviewAreaChanged(android.graphics.RectF)>($r4);

        return;
    }

    public void setOnLayoutChangeListener(android.view.View$OnLayoutChangeListener)
    {
        com.android.camera.TextureViewHelper r0;
        android.view.View$OnLayoutChangeListener r1;

        r0 := @this: com.android.camera.TextureViewHelper;

        r1 := @parameter0: android.view.View$OnLayoutChangeListener;

        r0.<com.android.camera.TextureViewHelper: android.view.View$OnLayoutChangeListener mOnLayoutChangeListener> = r1;

        return;
    }

    public void setSurfaceTextureListener(android.view.TextureView$SurfaceTextureListener)
    {
        com.android.camera.TextureViewHelper r0;
        android.view.TextureView$SurfaceTextureListener r1;

        r0 := @this: com.android.camera.TextureViewHelper;

        r1 := @parameter0: android.view.TextureView$SurfaceTextureListener;

        r0.<com.android.camera.TextureViewHelper: android.view.TextureView$SurfaceTextureListener mSurfaceTextureListener> = r1;

        return;
    }

    private boolean updateTransform()
    {
        com.android.camera.TextureViewHelper r0;
        android.graphics.Matrix r1, $r6;
        int i0, $i3, $i4, $i5, $i6, $i7;
        com.android.ex.camera2.portability.CameraDeviceInfo$Characteristics r2;
        com.android.camera.debug.Log$Tag $r3, $r5;
        boolean $z0;
        float $f0, $f1, $f2, $f3;
        byte $b1, $b2;
        com.android.camera.app.CameraProvider $r4, $r7;
        android.view.TextureView $r8;
        android.graphics.RectF $r9, $r11;
        com.android.camera.CaptureLayoutHelper $r10;

        r0 := @this: com.android.camera.TextureViewHelper;

        $r3 = <com.android.camera.TextureViewHelper: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void v(com.android.camera.debug.Log$Tag,java.lang.String)>($r3, "updateTransform");

        $z0 = r0.<com.android.camera.TextureViewHelper: boolean mAutoAdjustTransform>;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $f0 = r0.<com.android.camera.TextureViewHelper: float mAspectRatio>;

        $b1 = $f0 cmpl 0.0F;

        if $b1 == 0 goto label2;

        $f1 = r0.<com.android.camera.TextureViewHelper: float mAspectRatio>;

        $b2 = $f1 cmpg 0.0F;

        if $b2 < 0 goto label2;

        $i3 = r0.<com.android.camera.TextureViewHelper: int mWidth>;

        if $i3 == 0 goto label2;

        $i4 = r0.<com.android.camera.TextureViewHelper: int mHeight>;

        if $i4 != 0 goto label3;

     label2:
        return 1;

     label3:
        $r4 = r0.<com.android.camera.TextureViewHelper: com.android.camera.app.CameraProvider mCameraProvider>;

        i0 = interfaceinvoke $r4.<com.android.camera.app.CameraProvider: int getCurrentCameraId()>();

        if i0 < 0 goto label4;

        $r7 = r0.<com.android.camera.TextureViewHelper: com.android.camera.app.CameraProvider mCameraProvider>;

        r2 = interfaceinvoke $r7.<com.android.camera.app.CameraProvider: com.android.ex.camera2.portability.CameraDeviceInfo$Characteristics getCharacteristics(int)>(i0);

        $i7 = r0.<com.android.camera.TextureViewHelper: int mOrientation>;

        $r9 = new android.graphics.RectF;

        $i6 = r0.<com.android.camera.TextureViewHelper: int mWidth>;

        $f2 = (float) $i6;

        $i5 = r0.<com.android.camera.TextureViewHelper: int mHeight>;

        $f3 = (float) $i5;

        specialinvoke $r9.<android.graphics.RectF: void <init>(float,float,float,float)>(0.0F, 0.0F, $f2, $f3);

        $r10 = r0.<com.android.camera.TextureViewHelper: com.android.camera.CaptureLayoutHelper mCaptureLayoutHelper>;

        $r11 = virtualinvoke $r10.<com.android.camera.CaptureLayoutHelper: android.graphics.RectF getPreviewRect()>();

        r1 = virtualinvoke r2.<com.android.ex.camera2.portability.CameraDeviceInfo$Characteristics: android.graphics.Matrix getPreviewTransform(int,android.graphics.RectF,android.graphics.RectF)>($i7, $r9, $r11);

        goto label5;

     label4:
        $r5 = <com.android.camera.TextureViewHelper: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void w(com.android.camera.debug.Log$Tag,java.lang.String)>($r5, "Unable to find current camera... defaulting to identity matrix");

        $r6 = new android.graphics.Matrix;

        specialinvoke $r6.<android.graphics.Matrix: void <init>()>();

        r1 = $r6;

     label5:
        $r8 = r0.<com.android.camera.TextureViewHelper: android.view.TextureView mPreview>;

        virtualinvoke $r8.<android.view.TextureView: void setTransform(android.graphics.Matrix)>(r1);

        specialinvoke r0.<com.android.camera.TextureViewHelper: void updatePreviewArea(android.graphics.Matrix)>(r1);

        return 1;
    }

    private void onPreviewAreaChanged(android.graphics.RectF)
    {
        com.android.camera.TextureViewHelper r0;
        android.graphics.RectF r1;
        java.util.ArrayList r2, $r3, $r4;
        com.android.camera.TextureViewHelper$1 $r5;
        android.view.TextureView $r6;

        r0 := @this: com.android.camera.TextureViewHelper;

        r1 := @parameter0: android.graphics.RectF;

        $r3 = new java.util.ArrayList;

        $r4 = r0.<com.android.camera.TextureViewHelper: java.util.ArrayList mPreviewSizeChangedListeners>;

        specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        r2 = $r3;

        $r6 = r0.<com.android.camera.TextureViewHelper: android.view.TextureView mPreview>;

        $r5 = new com.android.camera.TextureViewHelper$1;

        specialinvoke $r5.<com.android.camera.TextureViewHelper$1: void <init>(com.android.camera.TextureViewHelper,java.util.List,android.graphics.RectF)>(r0, r2, r1);

        virtualinvoke $r6.<android.view.TextureView: boolean post(java.lang.Runnable)>($r5);

        return;
    }

    public android.graphics.RectF getPreviewArea()
    {
        com.android.camera.TextureViewHelper r0;
        android.graphics.RectF $r1, $r2;

        r0 := @this: com.android.camera.TextureViewHelper;

        $r1 = new android.graphics.RectF;

        $r2 = r0.<com.android.camera.TextureViewHelper: android.graphics.RectF mPreviewArea>;

        specialinvoke $r1.<android.graphics.RectF: void <init>(android.graphics.RectF)>($r2);

        return $r1;
    }

    public android.graphics.RectF getTextureArea()
    {
        com.android.camera.TextureViewHelper r0;
        android.graphics.Matrix r1, $r4, $r7;
        android.graphics.RectF r2, $r5, $r8;
        android.view.TextureView $r3, $r6;
        int $i0, $i1;
        float $f0, $f1;

        r0 := @this: com.android.camera.TextureViewHelper;

        $r3 = r0.<com.android.camera.TextureViewHelper: android.view.TextureView mPreview>;

        if $r3 != null goto label1;

        $r8 = new android.graphics.RectF;

        specialinvoke $r8.<android.graphics.RectF: void <init>()>();

        return $r8;

     label1:
        $r4 = new android.graphics.Matrix;

        specialinvoke $r4.<android.graphics.Matrix: void <init>()>();

        r1 = $r4;

        $r5 = new android.graphics.RectF;

        $i0 = r0.<com.android.camera.TextureViewHelper: int mWidth>;

        $f1 = (float) $i0;

        $i1 = r0.<com.android.camera.TextureViewHelper: int mHeight>;

        $f0 = (float) $i1;

        specialinvoke $r5.<android.graphics.RectF: void <init>(float,float,float,float)>(0.0F, 0.0F, $f1, $f0);

        r2 = $r5;

        $r6 = r0.<com.android.camera.TextureViewHelper: android.view.TextureView mPreview>;

        $r7 = virtualinvoke $r6.<android.view.TextureView: android.graphics.Matrix getTransform(android.graphics.Matrix)>(r1);

        virtualinvoke $r7.<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>(r2);

        return r2;
    }

    public android.graphics.Bitmap getPreviewBitmap(int)
    {
        com.android.camera.TextureViewHelper r0;
        int i0, i1, i2, $i3, $i4;
        android.graphics.RectF r1;
        android.graphics.Bitmap r2, $r5;
        float $f0, $f1;
        android.view.TextureView $r3, $r4;
        android.graphics.Matrix $r6;

        r0 := @this: com.android.camera.TextureViewHelper;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<com.android.camera.TextureViewHelper: android.graphics.RectF getTextureArea()>();

        $f0 = virtualinvoke r1.<android.graphics.RectF: float width()>();

        $i3 = (int) $f0;

        i1 = $i3 / i0;

        $f1 = virtualinvoke r1.<android.graphics.RectF: float height()>();

        $i4 = (int) $f1;

        i2 = $i4 / i0;

        $r3 = r0.<com.android.camera.TextureViewHelper: android.view.TextureView mPreview>;

        r2 = virtualinvoke $r3.<android.view.TextureView: android.graphics.Bitmap getBitmap(int,int)>(i1, i2);

        $r4 = r0.<com.android.camera.TextureViewHelper: android.view.TextureView mPreview>;

        $r6 = virtualinvoke $r4.<android.view.TextureView: android.graphics.Matrix getTransform(android.graphics.Matrix)>(null);

        $r5 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>(r2, 0, 0, i1, i2, $r6, 1);

        return $r5;
    }

    public void addPreviewAreaSizeChangedListener(com.android.camera.ui.PreviewStatusListener$PreviewAreaChangedListener)
    {
        com.android.camera.TextureViewHelper r0;
        com.android.camera.ui.PreviewStatusListener$PreviewAreaChangedListener r1;
        java.util.ArrayList $r2, $r3;
        boolean $z0;
        android.graphics.RectF $r4, $r5, $r6, $r7, $r8;
        float $f0, $f1, $f2, $f3;
        byte $b0, $b3;
        int $i1, $i2;

        r0 := @this: com.android.camera.TextureViewHelper;

        r1 := @parameter0: com.android.camera.ui.PreviewStatusListener$PreviewAreaChangedListener;

        if r1 == null goto label3;

        $r2 = r0.<com.android.camera.TextureViewHelper: java.util.ArrayList mPreviewSizeChangedListeners>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label3;

        $r3 = r0.<com.android.camera.TextureViewHelper: java.util.ArrayList mPreviewSizeChangedListeners>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $r4 = r0.<com.android.camera.TextureViewHelper: android.graphics.RectF mPreviewArea>;

        $f0 = virtualinvoke $r4.<android.graphics.RectF: float width()>();

        $b0 = $f0 cmpl 0.0F;

        if $b0 == 0 goto label1;

        $r6 = r0.<com.android.camera.TextureViewHelper: android.graphics.RectF mPreviewArea>;

        $f3 = virtualinvoke $r6.<android.graphics.RectF: float height()>();

        $b3 = $f3 cmpl 0.0F;

        if $b3 != 0 goto label2;

     label1:
        $r5 = new android.graphics.RectF;

        $i1 = r0.<com.android.camera.TextureViewHelper: int mWidth>;

        $f2 = (float) $i1;

        $i2 = r0.<com.android.camera.TextureViewHelper: int mHeight>;

        $f1 = (float) $i2;

        specialinvoke $r5.<android.graphics.RectF: void <init>(float,float,float,float)>(0.0F, 0.0F, $f2, $f1);

        interfaceinvoke r1.<com.android.camera.ui.PreviewStatusListener$PreviewAreaChangedListener: void onPreviewAreaChanged(android.graphics.RectF)>($r5);

        goto label3;

     label2:
        $r7 = new android.graphics.RectF;

        $r8 = r0.<com.android.camera.TextureViewHelper: android.graphics.RectF mPreviewArea>;

        specialinvoke $r7.<android.graphics.RectF: void <init>(android.graphics.RectF)>($r8);

        interfaceinvoke r1.<com.android.camera.ui.PreviewStatusListener$PreviewAreaChangedListener: void onPreviewAreaChanged(android.graphics.RectF)>($r7);

     label3:
        return;
    }

    public void removePreviewAreaSizeChangedListener(com.android.camera.ui.PreviewStatusListener$PreviewAreaChangedListener)
    {
        com.android.camera.TextureViewHelper r0;
        com.android.camera.ui.PreviewStatusListener$PreviewAreaChangedListener r1;
        java.util.ArrayList $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.camera.TextureViewHelper;

        r1 := @parameter0: com.android.camera.ui.PreviewStatusListener$PreviewAreaChangedListener;

        if r1 == null goto label1;

        $r2 = r0.<com.android.camera.TextureViewHelper: java.util.ArrayList mPreviewSizeChangedListeners>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.camera.TextureViewHelper: java.util.ArrayList mPreviewSizeChangedListeners>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

     label1:
        return;
    }

    public void onSurfaceTextureAvailable(android.graphics.SurfaceTexture, int, int)
    {
        com.android.camera.TextureViewHelper r0;
        android.graphics.SurfaceTexture r1;
        int i0, i1, $i2, $i3;
        android.view.TextureView$SurfaceTextureListener $r2, $r3;

        r0 := @this: com.android.camera.TextureViewHelper;

        r1 := @parameter0: android.graphics.SurfaceTexture;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i2 = r0.<com.android.camera.TextureViewHelper: int mWidth>;

        if $i2 == 0 goto label1;

        $i3 = r0.<com.android.camera.TextureViewHelper: int mHeight>;

        if $i3 == 0 goto label1;

        specialinvoke r0.<com.android.camera.TextureViewHelper: boolean updateTransform()>();

     label1:
        $r2 = r0.<com.android.camera.TextureViewHelper: android.view.TextureView$SurfaceTextureListener mSurfaceTextureListener>;

        if $r2 == null goto label2;

        $r3 = r0.<com.android.camera.TextureViewHelper: android.view.TextureView$SurfaceTextureListener mSurfaceTextureListener>;

        interfaceinvoke $r3.<android.view.TextureView$SurfaceTextureListener: void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int)>(r1, i0, i1);

     label2:
        return;
    }

    public void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture, int, int)
    {
        com.android.camera.TextureViewHelper r0;
        android.graphics.SurfaceTexture r1;
        int i0, i1;
        android.view.TextureView$SurfaceTextureListener $r2, $r3;

        r0 := @this: com.android.camera.TextureViewHelper;

        r1 := @parameter0: android.graphics.SurfaceTexture;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.camera.TextureViewHelper: android.view.TextureView$SurfaceTextureListener mSurfaceTextureListener>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.camera.TextureViewHelper: android.view.TextureView$SurfaceTextureListener mSurfaceTextureListener>;

        interfaceinvoke $r3.<android.view.TextureView$SurfaceTextureListener: void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int)>(r1, i0, i1);

     label1:
        return;
    }

    public boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture)
    {
        com.android.camera.TextureViewHelper r0;
        android.graphics.SurfaceTexture r1;
        android.view.TextureView$SurfaceTextureListener $r2, $r3;

        r0 := @this: com.android.camera.TextureViewHelper;

        r1 := @parameter0: android.graphics.SurfaceTexture;

        $r2 = r0.<com.android.camera.TextureViewHelper: android.view.TextureView$SurfaceTextureListener mSurfaceTextureListener>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.camera.TextureViewHelper: android.view.TextureView$SurfaceTextureListener mSurfaceTextureListener>;

        interfaceinvoke $r3.<android.view.TextureView$SurfaceTextureListener: boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture)>(r1);

     label1:
        return 0;
    }

    public void onSurfaceTextureUpdated(android.graphics.SurfaceTexture)
    {
        com.android.camera.TextureViewHelper r0;
        android.graphics.SurfaceTexture r1;
        android.view.TextureView$SurfaceTextureListener $r2, $r3;

        r0 := @this: com.android.camera.TextureViewHelper;

        r1 := @parameter0: android.graphics.SurfaceTexture;

        $r2 = r0.<com.android.camera.TextureViewHelper: android.view.TextureView$SurfaceTextureListener mSurfaceTextureListener>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.camera.TextureViewHelper: android.view.TextureView$SurfaceTextureListener mSurfaceTextureListener>;

        interfaceinvoke $r3.<android.view.TextureView$SurfaceTextureListener: void onSurfaceTextureUpdated(android.graphics.SurfaceTexture)>(r1);

     label1:
        return;
    }

    static void <clinit>()
    {
        com.android.camera.debug.Log$Tag $r0;

        <com.android.camera.TextureViewHelper: int UNSET> = -1;

        <com.android.camera.TextureViewHelper: float MATCH_SCREEN> = 0.0F;

        $r0 = new com.android.camera.debug.Log$Tag;

        specialinvoke $r0.<com.android.camera.debug.Log$Tag: void <init>(java.lang.String)>("TexViewHelper");

        <com.android.camera.TextureViewHelper: com.android.camera.debug.Log$Tag TAG> = $r0;

        return;
    }
}
