public class com.android.ex.camera2.portability.AndroidCamera2Capabilities extends com.android.ex.camera2.portability.CameraCapabilities
{
    private static com.android.ex.camera2.portability.debug.Log$Tag TAG;

    void <init>(android.hardware.camera2.CameraCharacteristics)
    {
        com.android.ex.camera2.portability.AndroidCamera2Capabilities r0;
        android.hardware.camera2.CameraCharacteristics r1;
        android.hardware.camera2.params.StreamConfigurationMap r2;
        android.util.Range[] r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i11, $i12, $i13, i14, i15, i16;
        android.util.Range r4, r60;
        com.android.ex.camera2.portability.CameraCapabilities$Stringifier $r5;
        android.hardware.camera2.CameraCharacteristics$Key $r6, $r8, $r24, $r28, $r32, $r35, $r38, $r43;
        java.lang.Object $r7, $r9, $r26, $r31, $r33, $r34, $r37, $r44;
        java.util.ArrayList $r10, $r15, $r18, $r55;
        android.util.Size[] $r11, $r14, $r20;
        java.util.List $r12, $r13, $r16, $r17, $r19, $r21;
        java.util.TreeSet $r22, $r23, $r49;
        java.lang.Integer $r25, $r30, $r36, $r39, $r45, $r50, $r53, $r58;
        java.lang.Comparable $r27, $r29, $r54, $r57;
        float $f0, $f1, $f2, $f3, $f4;
        boolean $z4;
        com.android.ex.camera2.portability.CameraCapabilities$FocusMode $r40;
        java.lang.Float $r41;
        com.android.ex.camera2.portability.CameraCapabilities$Feature $r42, $r47, $r51;
        byte $b8;
        java.util.EnumSet $r46, $r48, $r52;
        int[] $r56, r59;
        android.util.Rational r61;

        r0 := @this: com.android.ex.camera2.portability.AndroidCamera2Capabilities;

        r1 := @parameter0: android.hardware.camera2.CameraCharacteristics;

        $r5 = new com.android.ex.camera2.portability.CameraCapabilities$Stringifier;

        specialinvoke $r5.<com.android.ex.camera2.portability.CameraCapabilities$Stringifier: void <init>()>();

        specialinvoke r0.<com.android.ex.camera2.portability.CameraCapabilities: void <init>(com.android.ex.camera2.portability.CameraCapabilities$Stringifier)>($r5);

        $r6 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SCALER_STREAM_CONFIGURATION_MAP>;

        $r7 = virtualinvoke r1.<android.hardware.camera2.CameraCharacteristics: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>($r6);

        r2 = (android.hardware.camera2.params.StreamConfigurationMap) $r7;

        $r8 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_AE_AVAILABLE_TARGET_FPS_RANGES>;

        $r9 = virtualinvoke r1.<android.hardware.camera2.CameraCharacteristics: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>($r8);

        r3 = (android.util.Range[]) $r9;

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r4 = r3[i1];

        $r55 = r0.<com.android.ex.camera2.portability.AndroidCamera2Capabilities: java.util.ArrayList mSupportedPreviewFpsRange>;

        $r56 = newarray (int)[2];

        $r57 = virtualinvoke r4.<android.util.Range: java.lang.Comparable getLower()>();

        $r53 = (java.lang.Integer) $r57;

        $i12 = virtualinvoke $r53.<java.lang.Integer: int intValue()>();

        $r56[0] = $i12;

        $r54 = virtualinvoke r4.<android.util.Range: java.lang.Comparable getUpper()>();

        $r58 = (java.lang.Integer) $r54;

        $i13 = virtualinvoke $r58.<java.lang.Integer: int intValue()>();

        $r56[1] = $i13;

        virtualinvoke $r55.<java.util.ArrayList: boolean add(java.lang.Object)>($r56);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r10 = r0.<com.android.ex.camera2.portability.AndroidCamera2Capabilities: java.util.ArrayList mSupportedPreviewSizes>;

        $r11 = virtualinvoke r2.<android.hardware.camera2.params.StreamConfigurationMap: android.util.Size[] getOutputSizes(java.lang.Class)>(class "android/graphics/SurfaceTexture");

        $r12 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r11);

        $r13 = staticinvoke <com.android.ex.camera2.portability.Size: java.util.List buildListFromAndroidSizes(java.util.List)>($r12);

        virtualinvoke $r10.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r13);

        r59 = virtualinvoke r2.<android.hardware.camera2.params.StreamConfigurationMap: int[] getOutputFormats()>();

        i14 = lengthof r59;

        i15 = 0;

     label3:
        if i15 >= i14 goto label4;

        i16 = r59[i15];

        $r49 = r0.<com.android.ex.camera2.portability.AndroidCamera2Capabilities: java.util.TreeSet mSupportedPreviewFormats>;

        $r50 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i16);

        virtualinvoke $r49.<java.util.TreeSet: boolean add(java.lang.Object)>($r50);

        i15 = i15 + 1;

        goto label3;

     label4:
        $r15 = r0.<com.android.ex.camera2.portability.AndroidCamera2Capabilities: java.util.ArrayList mSupportedVideoSizes>;

        $r14 = virtualinvoke r2.<android.hardware.camera2.params.StreamConfigurationMap: android.util.Size[] getOutputSizes(java.lang.Class)>(class "android/media/MediaRecorder");

        $r17 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r14);

        $r16 = staticinvoke <com.android.ex.camera2.portability.Size: java.util.List buildListFromAndroidSizes(java.util.List)>($r17);

        virtualinvoke $r15.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r16);

        $r18 = r0.<com.android.ex.camera2.portability.AndroidCamera2Capabilities: java.util.ArrayList mSupportedPhotoSizes>;

        $r20 = virtualinvoke r2.<android.hardware.camera2.params.StreamConfigurationMap: android.util.Size[] getOutputSizes(int)>(256);

        $r19 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r20);

        $r21 = staticinvoke <com.android.ex.camera2.portability.Size: java.util.List buildListFromAndroidSizes(java.util.List)>($r19);

        virtualinvoke $r18.<java.util.ArrayList: boolean addAll(java.util.Collection)>($r21);

        $r22 = r0.<com.android.ex.camera2.portability.AndroidCamera2Capabilities: java.util.TreeSet mSupportedPhotoFormats>;

        $r23 = r0.<com.android.ex.camera2.portability.AndroidCamera2Capabilities: java.util.TreeSet mSupportedPreviewFormats>;

        virtualinvoke $r22.<java.util.TreeSet: boolean addAll(java.util.Collection)>($r23);

        specialinvoke r0.<com.android.ex.camera2.portability.AndroidCamera2Capabilities: void buildSceneModes(android.hardware.camera2.CameraCharacteristics)>(r1);

        specialinvoke r0.<com.android.ex.camera2.portability.AndroidCamera2Capabilities: void buildFlashModes(android.hardware.camera2.CameraCharacteristics)>(r1);

        specialinvoke r0.<com.android.ex.camera2.portability.AndroidCamera2Capabilities: void buildFocusModes(android.hardware.camera2.CameraCharacteristics)>(r1);

        specialinvoke r0.<com.android.ex.camera2.portability.AndroidCamera2Capabilities: void buildWhiteBalances(android.hardware.camera2.CameraCharacteristics)>(r1);

        $r24 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_AE_COMPENSATION_RANGE>;

        $r26 = virtualinvoke r1.<android.hardware.camera2.CameraCharacteristics: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>($r24);

        r60 = (android.util.Range) $r26;

        $r27 = virtualinvoke r60.<android.util.Range: java.lang.Comparable getLower()>();

        $r25 = (java.lang.Integer) $r27;

        $i2 = virtualinvoke $r25.<java.lang.Integer: int intValue()>();

        r0.<com.android.ex.camera2.portability.AndroidCamera2Capabilities: int mMinExposureCompensation> = $i2;

        $r29 = virtualinvoke r60.<android.util.Range: java.lang.Comparable getUpper()>();

        $r30 = (java.lang.Integer) $r29;

        $i3 = virtualinvoke $r30.<java.lang.Integer: int intValue()>();

        r0.<com.android.ex.camera2.portability.AndroidCamera2Capabilities: int mMaxExposureCompensation> = $i3;

        $r28 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_AE_COMPENSATION_STEP>;

        $r31 = virtualinvoke r1.<android.hardware.camera2.CameraCharacteristics: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>($r28);

        r61 = (android.util.Rational) $r31;

        $i5 = virtualinvoke r61.<android.util.Rational: int getNumerator()>();

        $f0 = (float) $i5;

        $i4 = virtualinvoke r61.<android.util.Rational: int getDenominator()>();

        $f1 = (float) $i4;

        $f2 = $f0 / $f1;

        r0.<com.android.ex.camera2.portability.AndroidCamera2Capabilities: float mExposureCompensationStep> = $f2;

        $r32 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key STATISTICS_INFO_MAX_FACE_COUNT>;

        $r33 = virtualinvoke r1.<android.hardware.camera2.CameraCharacteristics: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>($r32);

        $r36 = (java.lang.Integer) $r33;

        $i6 = virtualinvoke $r36.<java.lang.Integer: int intValue()>();

        r0.<com.android.ex.camera2.portability.AndroidCamera2Capabilities: int mMaxNumOfFacesSupported> = $i6;

        $r35 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_MAX_REGIONS_AE>;

        $r34 = virtualinvoke r1.<android.hardware.camera2.CameraCharacteristics: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>($r35);

        $r39 = (java.lang.Integer) $r34;

        $i7 = virtualinvoke $r39.<java.lang.Integer: int intValue()>();

        r0.<com.android.ex.camera2.portability.AndroidCamera2Capabilities: int mMaxNumOfMeteringArea> = $i7;

        $r38 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SCALER_AVAILABLE_MAX_DIGITAL_ZOOM>;

        $r37 = virtualinvoke r1.<android.hardware.camera2.CameraCharacteristics: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>($r38);

        $r41 = (java.lang.Float) $r37;

        $f3 = virtualinvoke $r41.<java.lang.Float: float floatValue()>();

        r0.<com.android.ex.camera2.portability.AndroidCamera2Capabilities: float mMaxZoomRatio> = $f3;

        $r40 = <com.android.ex.camera2.portability.CameraCapabilities$FocusMode: com.android.ex.camera2.portability.CameraCapabilities$FocusMode AUTO>;

        $z4 = virtualinvoke r0.<com.android.ex.camera2.portability.AndroidCamera2Capabilities: boolean supports(com.android.ex.camera2.portability.CameraCapabilities$FocusMode)>($r40);

        if $z4 == 0 goto label5;

        $r43 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_MAX_REGIONS_AF>;

        $r44 = virtualinvoke r1.<android.hardware.camera2.CameraCharacteristics: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>($r43);

        $r45 = (java.lang.Integer) $r44;

        $i10 = virtualinvoke $r45.<java.lang.Integer: int intValue()>();

        r0.<com.android.ex.camera2.portability.AndroidCamera2Capabilities: int mMaxNumOfFocusAreas> = $i10;

        $i11 = r0.<com.android.ex.camera2.portability.AndroidCamera2Capabilities: int mMaxNumOfFocusAreas>;

        if $i11 <= 0 goto label5;

        $r52 = r0.<com.android.ex.camera2.portability.AndroidCamera2Capabilities: java.util.EnumSet mSupportedFeatures>;

        $r51 = <com.android.ex.camera2.portability.CameraCapabilities$Feature: com.android.ex.camera2.portability.CameraCapabilities$Feature FOCUS_AREA>;

        virtualinvoke $r52.<java.util.EnumSet: boolean add(java.lang.Object)>($r51);

     label5:
        $i9 = r0.<com.android.ex.camera2.portability.AndroidCamera2Capabilities: int mMaxNumOfMeteringArea>;

        if $i9 <= 0 goto label6;

        $r48 = r0.<com.android.ex.camera2.portability.AndroidCamera2Capabilities: java.util.EnumSet mSupportedFeatures>;

        $r47 = <com.android.ex.camera2.portability.CameraCapabilities$Feature: com.android.ex.camera2.portability.CameraCapabilities$Feature METERING_AREA>;

        virtualinvoke $r48.<java.util.EnumSet: boolean add(java.lang.Object)>($r47);

     label6:
        $f4 = r0.<com.android.ex.camera2.portability.AndroidCamera2Capabilities: float mMaxZoomRatio>;

        $b8 = $f4 cmpl 1.0F;

        if $b8 <= 0 goto label7;

        $r46 = r0.<com.android.ex.camera2.portability.AndroidCamera2Capabilities: java.util.EnumSet mSupportedFeatures>;

        $r42 = <com.android.ex.camera2.portability.CameraCapabilities$Feature: com.android.ex.camera2.portability.CameraCapabilities$Feature ZOOM>;

        virtualinvoke $r46.<java.util.EnumSet: boolean add(java.lang.Object)>($r42);

     label7:
        return;
    }

    private void buildSceneModes(android.hardware.camera2.CameraCharacteristics)
    {
        com.android.ex.camera2.portability.AndroidCamera2Capabilities r0;
        android.hardware.camera2.CameraCharacteristics r1;
        int[] r2, r3;
        int i0, i1, i2;
        com.android.ex.camera2.portability.CameraCapabilities$SceneMode r4;
        android.hardware.camera2.CameraCharacteristics$Key $r5;
        java.lang.Object $r6;
        java.util.EnumSet $r7;

        r0 := @this: com.android.ex.camera2.portability.AndroidCamera2Capabilities;

        r1 := @parameter0: android.hardware.camera2.CameraCharacteristics;

        $r5 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_AVAILABLE_SCENE_MODES>;

        $r6 = virtualinvoke r1.<android.hardware.camera2.CameraCharacteristics: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>($r5);

        r2 = (int[]) $r6;

        if r2 == null goto label3;

        r3 = r2;

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        i2 = r3[i1];

        r4 = staticinvoke <com.android.ex.camera2.portability.AndroidCamera2Capabilities: com.android.ex.camera2.portability.CameraCapabilities$SceneMode sceneModeFromInt(int)>(i2);

        if r4 == null goto label2;

        $r7 = r0.<com.android.ex.camera2.portability.AndroidCamera2Capabilities: java.util.EnumSet mSupportedSceneModes>;

        virtualinvoke $r7.<java.util.EnumSet: boolean add(java.lang.Object)>(r4);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    private void buildFlashModes(android.hardware.camera2.CameraCharacteristics)
    {
        com.android.ex.camera2.portability.AndroidCamera2Capabilities r0;
        android.hardware.camera2.CameraCharacteristics r1;
        int[] r2;
        int i0, i1, i2;
        com.android.ex.camera2.portability.CameraCapabilities$FlashMode $r3, $r8, $r11, $r12, $r17;
        java.util.EnumSet $r4, $r9, $r10, $r13, $r16;
        android.hardware.camera2.CameraCharacteristics$Key $r5, $r15;
        java.lang.Object $r6, $r14;
        java.lang.Boolean $r7;
        boolean $z1;

        r0 := @this: com.android.ex.camera2.portability.AndroidCamera2Capabilities;

        r1 := @parameter0: android.hardware.camera2.CameraCharacteristics;

        $r4 = r0.<com.android.ex.camera2.portability.AndroidCamera2Capabilities: java.util.EnumSet mSupportedFlashModes>;

        $r3 = <com.android.ex.camera2.portability.CameraCapabilities$FlashMode: com.android.ex.camera2.portability.CameraCapabilities$FlashMode OFF>;

        virtualinvoke $r4.<java.util.EnumSet: boolean add(java.lang.Object)>($r3);

        $r5 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key FLASH_INFO_AVAILABLE>;

        $r6 = virtualinvoke r1.<android.hardware.camera2.CameraCharacteristics: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>($r5);

        $r7 = (java.lang.Boolean) $r6;

        $z1 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label3;

        $r9 = r0.<com.android.ex.camera2.portability.AndroidCamera2Capabilities: java.util.EnumSet mSupportedFlashModes>;

        $r8 = <com.android.ex.camera2.portability.CameraCapabilities$FlashMode: com.android.ex.camera2.portability.CameraCapabilities$FlashMode AUTO>;

        virtualinvoke $r9.<java.util.EnumSet: boolean add(java.lang.Object)>($r8);

        $r10 = r0.<com.android.ex.camera2.portability.AndroidCamera2Capabilities: java.util.EnumSet mSupportedFlashModes>;

        $r11 = <com.android.ex.camera2.portability.CameraCapabilities$FlashMode: com.android.ex.camera2.portability.CameraCapabilities$FlashMode ON>;

        virtualinvoke $r10.<java.util.EnumSet: boolean add(java.lang.Object)>($r11);

        $r13 = r0.<com.android.ex.camera2.portability.AndroidCamera2Capabilities: java.util.EnumSet mSupportedFlashModes>;

        $r12 = <com.android.ex.camera2.portability.CameraCapabilities$FlashMode: com.android.ex.camera2.portability.CameraCapabilities$FlashMode TORCH>;

        virtualinvoke $r13.<java.util.EnumSet: boolean add(java.lang.Object)>($r12);

        $r15 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_AE_AVAILABLE_MODES>;

        $r14 = virtualinvoke r1.<android.hardware.camera2.CameraCharacteristics: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>($r15);

        r2 = (int[]) $r14;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        i2 = r2[i1];

        if i2 != 4 goto label2;

        $r16 = r0.<com.android.ex.camera2.portability.AndroidCamera2Capabilities: java.util.EnumSet mSupportedFlashModes>;

        $r17 = <com.android.ex.camera2.portability.CameraCapabilities$FlashMode: com.android.ex.camera2.portability.CameraCapabilities$FlashMode RED_EYE>;

        virtualinvoke $r16.<java.util.EnumSet: boolean add(java.lang.Object)>($r17);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    private void buildFocusModes(android.hardware.camera2.CameraCharacteristics)
    {
        com.android.ex.camera2.portability.AndroidCamera2Capabilities r0;
        android.hardware.camera2.CameraCharacteristics r1;
        int[] r2, r3;
        int i0, i1, i2;
        com.android.ex.camera2.portability.CameraCapabilities$FocusMode r4;
        android.hardware.camera2.CameraCharacteristics$Key $r5;
        java.lang.Object $r6;
        java.util.EnumSet $r7;

        r0 := @this: com.android.ex.camera2.portability.AndroidCamera2Capabilities;

        r1 := @parameter0: android.hardware.camera2.CameraCharacteristics;

        $r5 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_AF_AVAILABLE_MODES>;

        $r6 = virtualinvoke r1.<android.hardware.camera2.CameraCharacteristics: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>($r5);

        r2 = (int[]) $r6;

        if r2 == null goto label3;

        r3 = r2;

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        i2 = r3[i1];

        r4 = staticinvoke <com.android.ex.camera2.portability.AndroidCamera2Capabilities: com.android.ex.camera2.portability.CameraCapabilities$FocusMode focusModeFromInt(int)>(i2);

        if r4 == null goto label2;

        $r7 = r0.<com.android.ex.camera2.portability.AndroidCamera2Capabilities: java.util.EnumSet mSupportedFocusModes>;

        virtualinvoke $r7.<java.util.EnumSet: boolean add(java.lang.Object)>(r4);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    private void buildWhiteBalances(android.hardware.camera2.CameraCharacteristics)
    {
        com.android.ex.camera2.portability.AndroidCamera2Capabilities r0;
        android.hardware.camera2.CameraCharacteristics r1;
        int[] r2, r3;
        int i0, i1, i2;
        com.android.ex.camera2.portability.CameraCapabilities$WhiteBalance r4;
        android.hardware.camera2.CameraCharacteristics$Key $r5;
        java.lang.Object $r6;
        java.util.EnumSet $r7;

        r0 := @this: com.android.ex.camera2.portability.AndroidCamera2Capabilities;

        r1 := @parameter0: android.hardware.camera2.CameraCharacteristics;

        $r5 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key CONTROL_AWB_AVAILABLE_MODES>;

        $r6 = virtualinvoke r1.<android.hardware.camera2.CameraCharacteristics: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>($r5);

        r2 = (int[]) $r6;

        if r2 == null goto label3;

        r3 = r2;

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        i2 = r3[i1];

        r4 = staticinvoke <com.android.ex.camera2.portability.AndroidCamera2Capabilities: com.android.ex.camera2.portability.CameraCapabilities$WhiteBalance whiteBalanceFromInt(int)>(i2);

        if r4 == null goto label2;

        $r7 = r0.<com.android.ex.camera2.portability.AndroidCamera2Capabilities: java.util.EnumSet mSupportedWhiteBalances>;

        virtualinvoke $r7.<java.util.EnumSet: boolean add(java.lang.Object)>(r4);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public static com.android.ex.camera2.portability.CameraCapabilities$FocusMode focusModeFromInt(int)
    {
        int i0;
        com.android.ex.camera2.portability.CameraCapabilities$FocusMode $r0, $r1, $r2, $r3, $r4, $r5;
        java.lang.StringBuilder $r6, $r8, $r9;
        com.android.ex.camera2.portability.debug.Log$Tag $r7;
        java.lang.String $r10;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label5;
            case 1: goto label1;
            case 2: goto label6;
            case 3: goto label3;
            case 4: goto label2;
            case 5: goto label4;
            default: goto label7;
        };

     label1:
        $r0 = <com.android.ex.camera2.portability.CameraCapabilities$FocusMode: com.android.ex.camera2.portability.CameraCapabilities$FocusMode AUTO>;

        return $r0;

     label2:
        $r2 = <com.android.ex.camera2.portability.CameraCapabilities$FocusMode: com.android.ex.camera2.portability.CameraCapabilities$FocusMode CONTINUOUS_PICTURE>;

        return $r2;

     label3:
        $r3 = <com.android.ex.camera2.portability.CameraCapabilities$FocusMode: com.android.ex.camera2.portability.CameraCapabilities$FocusMode CONTINUOUS_VIDEO>;

        return $r3;

     label4:
        $r1 = <com.android.ex.camera2.portability.CameraCapabilities$FocusMode: com.android.ex.camera2.portability.CameraCapabilities$FocusMode EXTENDED_DOF>;

        return $r1;

     label5:
        $r5 = <com.android.ex.camera2.portability.CameraCapabilities$FocusMode: com.android.ex.camera2.portability.CameraCapabilities$FocusMode FIXED>;

        return $r5;

     label6:
        $r4 = <com.android.ex.camera2.portability.CameraCapabilities$FocusMode: com.android.ex.camera2.portability.CameraCapabilities$FocusMode MACRO>;

        return $r4;

     label7:
        $r7 = <com.android.ex.camera2.portability.AndroidCamera2Capabilities: com.android.ex.camera2.portability.debug.Log$Tag TAG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to convert from API 2 focus mode: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.ex.camera2.portability.debug.Log: void w(com.android.ex.camera2.portability.debug.Log$Tag,java.lang.String)>($r7, $r10);

        return null;
    }

    public static com.android.ex.camera2.portability.CameraCapabilities$SceneMode sceneModeFromInt(int)
    {
        int i0, $i1;
        com.android.ex.camera2.portability.CameraCapabilities$SceneMode $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r20;
        java.lang.StringBuilder $r15, $r16, $r19;
        com.android.ex.camera2.portability.debug.Log$Tag $r17;
        java.lang.String $r18;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label01;
            case 1: goto label16;
            case 2: goto label02;
            case 3: goto label10;
            case 4: goto label07;
            case 5: goto label08;
            case 6: goto label16;
            case 7: goto label15;
            case 8: goto label04;
            case 9: goto label11;
            case 10: goto label14;
            case 11: goto label13;
            case 12: goto label06;
            case 13: goto label12;
            case 14: goto label09;
            case 15: goto label05;
            case 16: goto label03;
            default: goto label16;
        };

     label01:
        $r0 = <com.android.ex.camera2.portability.CameraCapabilities$SceneMode: com.android.ex.camera2.portability.CameraCapabilities$SceneMode AUTO>;

        return $r0;

     label02:
        $r14 = <com.android.ex.camera2.portability.CameraCapabilities$SceneMode: com.android.ex.camera2.portability.CameraCapabilities$SceneMode ACTION>;

        return $r14;

     label03:
        $r1 = <com.android.ex.camera2.portability.CameraCapabilities$SceneMode: com.android.ex.camera2.portability.CameraCapabilities$SceneMode BARCODE>;

        return $r1;

     label04:
        $r9 = <com.android.ex.camera2.portability.CameraCapabilities$SceneMode: com.android.ex.camera2.portability.CameraCapabilities$SceneMode BEACH>;

        return $r9;

     label05:
        $r2 = <com.android.ex.camera2.portability.CameraCapabilities$SceneMode: com.android.ex.camera2.portability.CameraCapabilities$SceneMode CANDLELIGHT>;

        return $r2;

     label06:
        $r5 = <com.android.ex.camera2.portability.CameraCapabilities$SceneMode: com.android.ex.camera2.portability.CameraCapabilities$SceneMode FIREWORKS>;

        return $r5;

     label07:
        $r12 = <com.android.ex.camera2.portability.CameraCapabilities$SceneMode: com.android.ex.camera2.portability.CameraCapabilities$SceneMode LANDSCAPE>;

        return $r12;

     label08:
        $r11 = <com.android.ex.camera2.portability.CameraCapabilities$SceneMode: com.android.ex.camera2.portability.CameraCapabilities$SceneMode NIGHT>;

        return $r11;

     label09:
        $r3 = <com.android.ex.camera2.portability.CameraCapabilities$SceneMode: com.android.ex.camera2.portability.CameraCapabilities$SceneMode PARTY>;

        return $r3;

     label10:
        $r13 = <com.android.ex.camera2.portability.CameraCapabilities$SceneMode: com.android.ex.camera2.portability.CameraCapabilities$SceneMode PORTRAIT>;

        return $r13;

     label11:
        $r8 = <com.android.ex.camera2.portability.CameraCapabilities$SceneMode: com.android.ex.camera2.portability.CameraCapabilities$SceneMode SNOW>;

        return $r8;

     label12:
        $r4 = <com.android.ex.camera2.portability.CameraCapabilities$SceneMode: com.android.ex.camera2.portability.CameraCapabilities$SceneMode SPORTS>;

        return $r4;

     label13:
        $r6 = <com.android.ex.camera2.portability.CameraCapabilities$SceneMode: com.android.ex.camera2.portability.CameraCapabilities$SceneMode STEADYPHOTO>;

        return $r6;

     label14:
        $r7 = <com.android.ex.camera2.portability.CameraCapabilities$SceneMode: com.android.ex.camera2.portability.CameraCapabilities$SceneMode SUNSET>;

        return $r7;

     label15:
        $r10 = <com.android.ex.camera2.portability.CameraCapabilities$SceneMode: com.android.ex.camera2.portability.CameraCapabilities$SceneMode THEATRE>;

        return $r10;

     label16:
        $i1 = <com.android.ex.camera2.portability.LegacyVendorTags: int CONTROL_SCENE_MODE_HDR>;

        if i0 != $i1 goto label17;

        $r20 = <com.android.ex.camera2.portability.CameraCapabilities$SceneMode: com.android.ex.camera2.portability.CameraCapabilities$SceneMode HDR>;

        return $r20;

     label17:
        $r17 = <com.android.ex.camera2.portability.AndroidCamera2Capabilities: com.android.ex.camera2.portability.debug.Log$Tag TAG>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to convert from API 2 scene mode: ");

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.ex.camera2.portability.debug.Log: void w(com.android.ex.camera2.portability.debug.Log$Tag,java.lang.String)>($r17, $r18);

        return null;
    }

    public static com.android.ex.camera2.portability.CameraCapabilities$WhiteBalance whiteBalanceFromInt(int)
    {
        int i0;
        com.android.ex.camera2.portability.CameraCapabilities$WhiteBalance $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        java.lang.StringBuilder $r8, $r10, $r11;
        com.android.ex.camera2.portability.debug.Log$Tag $r9;
        java.lang.String $r12;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label5;
            case 3: goto label4;
            case 4: goto label8;
            case 5: goto label3;
            case 6: goto label2;
            case 7: goto label7;
            case 8: goto label6;
            default: goto label9;
        };

     label1:
        $r0 = <com.android.ex.camera2.portability.CameraCapabilities$WhiteBalance: com.android.ex.camera2.portability.CameraCapabilities$WhiteBalance AUTO>;

        return $r0;

     label2:
        $r3 = <com.android.ex.camera2.portability.CameraCapabilities$WhiteBalance: com.android.ex.camera2.portability.CameraCapabilities$WhiteBalance CLOUDY_DAYLIGHT>;

        return $r3;

     label3:
        $r4 = <com.android.ex.camera2.portability.CameraCapabilities$WhiteBalance: com.android.ex.camera2.portability.CameraCapabilities$WhiteBalance DAYLIGHT>;

        return $r4;

     label4:
        $r6 = <com.android.ex.camera2.portability.CameraCapabilities$WhiteBalance: com.android.ex.camera2.portability.CameraCapabilities$WhiteBalance FLUORESCENT>;

        return $r6;

     label5:
        $r7 = <com.android.ex.camera2.portability.CameraCapabilities$WhiteBalance: com.android.ex.camera2.portability.CameraCapabilities$WhiteBalance INCANDESCENT>;

        return $r7;

     label6:
        $r1 = <com.android.ex.camera2.portability.CameraCapabilities$WhiteBalance: com.android.ex.camera2.portability.CameraCapabilities$WhiteBalance SHADE>;

        return $r1;

     label7:
        $r2 = <com.android.ex.camera2.portability.CameraCapabilities$WhiteBalance: com.android.ex.camera2.portability.CameraCapabilities$WhiteBalance TWILIGHT>;

        return $r2;

     label8:
        $r5 = <com.android.ex.camera2.portability.CameraCapabilities$WhiteBalance: com.android.ex.camera2.portability.CameraCapabilities$WhiteBalance WARM_FLUORESCENT>;

        return $r5;

     label9:
        $r9 = <com.android.ex.camera2.portability.AndroidCamera2Capabilities: com.android.ex.camera2.portability.debug.Log$Tag TAG>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to convert from API 2 white balance: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.ex.camera2.portability.debug.Log: void w(com.android.ex.camera2.portability.debug.Log$Tag,java.lang.String)>($r9, $r12);

        return null;
    }

    static void <clinit>()
    {
        com.android.ex.camera2.portability.debug.Log$Tag $r0;

        $r0 = new com.android.ex.camera2.portability.debug.Log$Tag;

        specialinvoke $r0.<com.android.ex.camera2.portability.debug.Log$Tag: void <init>(java.lang.String)>("AndCam2Capabs");

        <com.android.ex.camera2.portability.AndroidCamera2Capabilities: com.android.ex.camera2.portability.debug.Log$Tag TAG> = $r0;

        return;
    }
}
