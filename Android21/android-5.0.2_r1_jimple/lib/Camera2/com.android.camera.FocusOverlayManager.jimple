public class com.android.camera.FocusOverlayManager extends java.lang.Object implements com.android.camera.ui.PreviewStatusListener$PreviewAreaChangedListener, com.android.camera.app.MotionManager$MotionListener
{
    private static final com.android.camera.debug.Log$Tag TAG;
    private static final int RESET_TOUCH_FOCUS;
    private static final int RESET_TOUCH_FOCUS_DELAY_MILLIS;
    public static final float AF_REGION_BOX;
    public static final float AE_REGION_BOX;
    private int mState;
    private static final int STATE_IDLE;
    private static final int STATE_FOCUSING;
    private static final int STATE_FOCUSING_SNAP_ON_FINISH;
    private static final int STATE_SUCCESS;
    private static final int STATE_FAIL;
    private boolean mInitialized;
    private boolean mFocusAreaSupported;
    private boolean mMeteringAreaSupported;
    private boolean mLockAeAwbNeeded;
    private boolean mAeAwbLock;
    private final android.graphics.Matrix mMatrix;
    private boolean mMirror;
    private int mDisplayOrientation;
    private java.util.List mFocusArea;
    private java.util.List mMeteringArea;
    private com.android.ex.camera2.portability.CameraCapabilities$FocusMode mFocusMode;
    private final java.util.List mDefaultFocusModes;
    private com.android.ex.camera2.portability.CameraCapabilities$FocusMode mOverrideFocusMode;
    private com.android.ex.camera2.portability.CameraCapabilities mCapabilities;
    private final com.android.camera.app.AppController mAppController;
    private final com.android.camera.settings.SettingsManager mSettingsManager;
    private final android.os.Handler mHandler;
    com.android.camera.FocusOverlayManager$Listener mListener;
    private boolean mPreviousMoving;
    private final com.android.camera.FocusOverlayManager$FocusUI mUI;
    private final android.graphics.Rect mPreviewRect;
    private boolean mFocusLocked;
    private com.android.camera.ui.TouchCoordinate mTouchCoordinate;
    private long mTouchTime;

    public void <init>(com.android.camera.app.AppController, java.util.List, com.android.ex.camera2.portability.CameraCapabilities, com.android.camera.FocusOverlayManager$Listener, boolean, android.os.Looper, com.android.camera.FocusOverlayManager$FocusUI)
    {
        com.android.camera.FocusOverlayManager r0;
        com.android.camera.app.AppController r1;
        java.util.List r2;
        com.android.ex.camera2.portability.CameraCapabilities r3;
        com.android.camera.FocusOverlayManager$Listener r4;
        boolean z0;
        android.os.Looper r5;
        com.android.camera.FocusOverlayManager$FocusUI r6;
        android.graphics.Rect $r7;
        com.android.camera.settings.SettingsManager $r8;
        com.android.camera.FocusOverlayManager$MainHandler $r9;
        android.graphics.Matrix $r10;
        java.util.ArrayList $r11;

        r0 := @this: com.android.camera.FocusOverlayManager;

        r1 := @parameter0: com.android.camera.app.AppController;

        r2 := @parameter1: java.util.List;

        r3 := @parameter2: com.android.ex.camera2.portability.CameraCapabilities;

        r4 := @parameter3: com.android.camera.FocusOverlayManager$Listener;

        z0 := @parameter4: boolean;

        r5 := @parameter5: android.os.Looper;

        r6 := @parameter6: com.android.camera.FocusOverlayManager$FocusUI;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.camera.FocusOverlayManager: int mState> = 0;

        $r7 = new android.graphics.Rect;

        specialinvoke $r7.<android.graphics.Rect: void <init>(int,int,int,int)>(0, 0, 0, 0);

        r0.<com.android.camera.FocusOverlayManager: android.graphics.Rect mPreviewRect> = $r7;

        r0.<com.android.camera.FocusOverlayManager: com.android.camera.app.AppController mAppController> = r1;

        $r8 = interfaceinvoke r1.<com.android.camera.app.AppController: com.android.camera.settings.SettingsManager getSettingsManager()>();

        r0.<com.android.camera.FocusOverlayManager: com.android.camera.settings.SettingsManager mSettingsManager> = $r8;

        $r9 = new com.android.camera.FocusOverlayManager$MainHandler;

        specialinvoke $r9.<com.android.camera.FocusOverlayManager$MainHandler: void <init>(com.android.camera.FocusOverlayManager,android.os.Looper)>(r0, r5);

        r0.<com.android.camera.FocusOverlayManager: android.os.Handler mHandler> = $r9;

        $r10 = new android.graphics.Matrix;

        specialinvoke $r10.<android.graphics.Matrix: void <init>()>();

        r0.<com.android.camera.FocusOverlayManager: android.graphics.Matrix mMatrix> = $r10;

        $r11 = new java.util.ArrayList;

        specialinvoke $r11.<java.util.ArrayList: void <init>(java.util.Collection)>(r2);

        r0.<com.android.camera.FocusOverlayManager: java.util.List mDefaultFocusModes> = $r11;

        virtualinvoke r0.<com.android.camera.FocusOverlayManager: void updateCapabilities(com.android.ex.camera2.portability.CameraCapabilities)>(r3);

        r0.<com.android.camera.FocusOverlayManager: com.android.camera.FocusOverlayManager$Listener mListener> = r4;

        virtualinvoke r0.<com.android.camera.FocusOverlayManager: void setMirror(boolean)>(z0);

        r0.<com.android.camera.FocusOverlayManager: com.android.camera.FocusOverlayManager$FocusUI mUI> = r6;

        r0.<com.android.camera.FocusOverlayManager: boolean mFocusLocked> = 0;

        return;
    }

    public void updateCapabilities(com.android.ex.camera2.portability.CameraCapabilities)
    {
        com.android.camera.FocusOverlayManager r0;
        com.android.ex.camera2.portability.CameraCapabilities r1, $r3, $r5, $r7, $r9;
        com.android.ex.camera2.portability.CameraCapabilities$Feature $r2, $r4, $r6, $r8;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: com.android.camera.FocusOverlayManager;

        r1 := @parameter0: com.android.ex.camera2.portability.CameraCapabilities;

        if r1 != null goto label1;

        return;

     label1:
        r0.<com.android.camera.FocusOverlayManager: com.android.ex.camera2.portability.CameraCapabilities mCapabilities> = r1;

        $r3 = r0.<com.android.camera.FocusOverlayManager: com.android.ex.camera2.portability.CameraCapabilities mCapabilities>;

        $r2 = <com.android.ex.camera2.portability.CameraCapabilities$Feature: com.android.ex.camera2.portability.CameraCapabilities$Feature FOCUS_AREA>;

        $z0 = virtualinvoke $r3.<com.android.ex.camera2.portability.CameraCapabilities: boolean supports(com.android.ex.camera2.portability.CameraCapabilities$Feature)>($r2);

        r0.<com.android.camera.FocusOverlayManager: boolean mFocusAreaSupported> = $z0;

        $r5 = r0.<com.android.camera.FocusOverlayManager: com.android.ex.camera2.portability.CameraCapabilities mCapabilities>;

        $r4 = <com.android.ex.camera2.portability.CameraCapabilities$Feature: com.android.ex.camera2.portability.CameraCapabilities$Feature METERING_AREA>;

        $z1 = virtualinvoke $r5.<com.android.ex.camera2.portability.CameraCapabilities: boolean supports(com.android.ex.camera2.portability.CameraCapabilities$Feature)>($r4);

        r0.<com.android.camera.FocusOverlayManager: boolean mMeteringAreaSupported> = $z1;

        $r7 = r0.<com.android.camera.FocusOverlayManager: com.android.ex.camera2.portability.CameraCapabilities mCapabilities>;

        $r6 = <com.android.ex.camera2.portability.CameraCapabilities$Feature: com.android.ex.camera2.portability.CameraCapabilities$Feature AUTO_EXPOSURE_LOCK>;

        $z2 = virtualinvoke $r7.<com.android.ex.camera2.portability.CameraCapabilities: boolean supports(com.android.ex.camera2.portability.CameraCapabilities$Feature)>($r6);

        if $z2 != 0 goto label2;

        $r9 = r0.<com.android.camera.FocusOverlayManager: com.android.ex.camera2.portability.CameraCapabilities mCapabilities>;

        $r8 = <com.android.ex.camera2.portability.CameraCapabilities$Feature: com.android.ex.camera2.portability.CameraCapabilities$Feature AUTO_WHITE_BALANCE_LOCK>;

        $z3 = virtualinvoke $r9.<com.android.ex.camera2.portability.CameraCapabilities: boolean supports(com.android.ex.camera2.portability.CameraCapabilities$Feature)>($r8);

        if $z3 == 0 goto label3;

     label2:
        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        r0.<com.android.camera.FocusOverlayManager: boolean mLockAeAwbNeeded> = $z4;

        return;
    }

    public void setPreviewRect(android.graphics.Rect)
    {
        com.android.camera.FocusOverlayManager r0;
        android.graphics.Rect r1, $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.camera.FocusOverlayManager;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<com.android.camera.FocusOverlayManager: android.graphics.Rect mPreviewRect>;

        $z0 = virtualinvoke $r2.<android.graphics.Rect: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<com.android.camera.FocusOverlayManager: android.graphics.Rect mPreviewRect>;

        virtualinvoke $r3.<android.graphics.Rect: void set(android.graphics.Rect)>(r1);

        specialinvoke r0.<com.android.camera.FocusOverlayManager: void setMatrix()>();

     label1:
        return;
    }

    public void onPreviewAreaChanged(android.graphics.RectF)
    {
        com.android.camera.FocusOverlayManager r0;
        android.graphics.RectF r1;
        android.graphics.Rect $r2;

        r0 := @this: com.android.camera.FocusOverlayManager;

        r1 := @parameter0: android.graphics.RectF;

        $r2 = staticinvoke <com.android.camera.util.CameraUtil: android.graphics.Rect rectFToRect(android.graphics.RectF)>(r1);

        virtualinvoke r0.<com.android.camera.FocusOverlayManager: void setPreviewRect(android.graphics.Rect)>($r2);

        return;
    }

    public android.graphics.Rect getPreviewRect()
    {
        com.android.camera.FocusOverlayManager r0;
        android.graphics.Rect $r1, $r2;

        r0 := @this: com.android.camera.FocusOverlayManager;

        $r1 = new android.graphics.Rect;

        $r2 = r0.<com.android.camera.FocusOverlayManager: android.graphics.Rect mPreviewRect>;

        specialinvoke $r1.<android.graphics.Rect: void <init>(android.graphics.Rect)>($r2);

        return $r1;
    }

    public void setMirror(boolean)
    {
        com.android.camera.FocusOverlayManager r0;
        boolean z0;

        r0 := @this: com.android.camera.FocusOverlayManager;

        z0 := @parameter0: boolean;

        r0.<com.android.camera.FocusOverlayManager: boolean mMirror> = z0;

        specialinvoke r0.<com.android.camera.FocusOverlayManager: void setMatrix()>();

        return;
    }

    public void setDisplayOrientation(int)
    {
        com.android.camera.FocusOverlayManager r0;
        int i0;

        r0 := @this: com.android.camera.FocusOverlayManager;

        i0 := @parameter0: int;

        r0.<com.android.camera.FocusOverlayManager: int mDisplayOrientation> = i0;

        specialinvoke r0.<com.android.camera.FocusOverlayManager: void setMatrix()>();

        return;
    }

    private void setMatrix()
    {
        com.android.camera.FocusOverlayManager r0;
        android.graphics.Matrix r1, $r4, $r6;
        android.graphics.Rect $r2, $r3, $r5;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: com.android.camera.FocusOverlayManager;

        $r2 = r0.<com.android.camera.FocusOverlayManager: android.graphics.Rect mPreviewRect>;

        $i0 = virtualinvoke $r2.<android.graphics.Rect: int width()>();

        if $i0 == 0 goto label1;

        $r3 = r0.<com.android.camera.FocusOverlayManager: android.graphics.Rect mPreviewRect>;

        $i1 = virtualinvoke $r3.<android.graphics.Rect: int height()>();

        if $i1 == 0 goto label1;

        $r4 = new android.graphics.Matrix;

        specialinvoke $r4.<android.graphics.Matrix: void <init>()>();

        r1 = $r4;

        $z0 = r0.<com.android.camera.FocusOverlayManager: boolean mMirror>;

        $i2 = r0.<com.android.camera.FocusOverlayManager: int mDisplayOrientation>;

        $r5 = virtualinvoke r0.<com.android.camera.FocusOverlayManager: android.graphics.Rect getPreviewRect()>();

        staticinvoke <com.android.camera.util.CameraUtil: void prepareMatrix(android.graphics.Matrix,boolean,int,android.graphics.Rect)>(r1, $z0, $i2, $r5);

        $r6 = r0.<com.android.camera.FocusOverlayManager: android.graphics.Matrix mMatrix>;

        virtualinvoke r1.<android.graphics.Matrix: boolean invert(android.graphics.Matrix)>($r6);

        r0.<com.android.camera.FocusOverlayManager: boolean mInitialized> = 1;

     label1:
        return;
    }

    private void lockAeAwbIfNeeded()
    {
        com.android.camera.FocusOverlayManager r0;
        boolean $z0, $z1;
        com.android.camera.FocusOverlayManager$Listener $r1;

        r0 := @this: com.android.camera.FocusOverlayManager;

        $z0 = r0.<com.android.camera.FocusOverlayManager: boolean mLockAeAwbNeeded>;

        if $z0 == 0 goto label1;

        $z1 = r0.<com.android.camera.FocusOverlayManager: boolean mAeAwbLock>;

        if $z1 != 0 goto label1;

        r0.<com.android.camera.FocusOverlayManager: boolean mAeAwbLock> = 1;

        $r1 = r0.<com.android.camera.FocusOverlayManager: com.android.camera.FocusOverlayManager$Listener mListener>;

        interfaceinvoke $r1.<com.android.camera.FocusOverlayManager$Listener: void setFocusParameters()>();

     label1:
        return;
    }

    private void unlockAeAwbIfNeeded()
    {
        com.android.camera.FocusOverlayManager r0;
        boolean $z0, $z1;
        int $i0;
        com.android.camera.FocusOverlayManager$Listener $r1;

        r0 := @this: com.android.camera.FocusOverlayManager;

        $z0 = r0.<com.android.camera.FocusOverlayManager: boolean mLockAeAwbNeeded>;

        if $z0 == 0 goto label1;

        $z1 = r0.<com.android.camera.FocusOverlayManager: boolean mAeAwbLock>;

        if $z1 == 0 goto label1;

        $i0 = r0.<com.android.camera.FocusOverlayManager: int mState>;

        if $i0 == 2 goto label1;

        r0.<com.android.camera.FocusOverlayManager: boolean mAeAwbLock> = 0;

        $r1 = r0.<com.android.camera.FocusOverlayManager: com.android.camera.FocusOverlayManager$Listener mListener>;

        interfaceinvoke $r1.<com.android.camera.FocusOverlayManager$Listener: void setFocusParameters()>();

     label1:
        return;
    }

    public void onShutterUp(com.android.ex.camera2.portability.CameraCapabilities$FocusMode)
    {
        com.android.camera.FocusOverlayManager r0;
        com.android.ex.camera2.portability.CameraCapabilities$FocusMode r1;
        boolean $z0, $z1;
        int $i0, $i1, $i2;

        r0 := @this: com.android.camera.FocusOverlayManager;

        r1 := @parameter0: com.android.ex.camera2.portability.CameraCapabilities$FocusMode;

        $z0 = r0.<com.android.camera.FocusOverlayManager: boolean mInitialized>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $z1 = specialinvoke r0.<com.android.camera.FocusOverlayManager: boolean needAutoFocusCall(com.android.ex.camera2.portability.CameraCapabilities$FocusMode)>(r1);

        if $z1 == 0 goto label3;

        $i0 = r0.<com.android.camera.FocusOverlayManager: int mState>;

        if $i0 == 1 goto label2;

        $i1 = r0.<com.android.camera.FocusOverlayManager: int mState>;

        if $i1 == 3 goto label2;

        $i2 = r0.<com.android.camera.FocusOverlayManager: int mState>;

        if $i2 != 4 goto label3;

     label2:
        specialinvoke r0.<com.android.camera.FocusOverlayManager: void cancelAutoFocus()>();

     label3:
        specialinvoke r0.<com.android.camera.FocusOverlayManager: void unlockAeAwbIfNeeded()>();

        return;
    }

    public void focusAndCapture(com.android.ex.camera2.portability.CameraCapabilities$FocusMode)
    {
        com.android.camera.FocusOverlayManager r0;
        com.android.ex.camera2.portability.CameraCapabilities$FocusMode r1;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.android.camera.FocusOverlayManager;

        r1 := @parameter0: com.android.ex.camera2.portability.CameraCapabilities$FocusMode;

        $z0 = r0.<com.android.camera.FocusOverlayManager: boolean mInitialized>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $z1 = specialinvoke r0.<com.android.camera.FocusOverlayManager: boolean needAutoFocusCall(com.android.ex.camera2.portability.CameraCapabilities$FocusMode)>(r1);

        if $z1 != 0 goto label2;

        specialinvoke r0.<com.android.camera.FocusOverlayManager: void capture()>();

        goto label6;

     label2:
        $i0 = r0.<com.android.camera.FocusOverlayManager: int mState>;

        if $i0 == 3 goto label3;

        $i1 = r0.<com.android.camera.FocusOverlayManager: int mState>;

        if $i1 != 4 goto label4;

     label3:
        specialinvoke r0.<com.android.camera.FocusOverlayManager: void capture()>();

        goto label6;

     label4:
        $i2 = r0.<com.android.camera.FocusOverlayManager: int mState>;

        if $i2 != 1 goto label5;

        r0.<com.android.camera.FocusOverlayManager: int mState> = 2;

        goto label6;

     label5:
        $i3 = r0.<com.android.camera.FocusOverlayManager: int mState>;

        if $i3 != 0 goto label6;

        specialinvoke r0.<com.android.camera.FocusOverlayManager: void autoFocusAndCapture()>();

     label6:
        return;
    }

    public void onAutoFocus(boolean, boolean)
    {
        com.android.camera.FocusOverlayManager r0;
        boolean z0, z1;
        int $i0, $i1, $i2, $i3;
        java.util.List $r1;
        long $l4;
        android.os.Handler $r2;

        r0 := @this: com.android.camera.FocusOverlayManager;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $i0 = r0.<com.android.camera.FocusOverlayManager: int mState>;

        if $i0 != 2 goto label3;

        if z0 == 0 goto label1;

        r0.<com.android.camera.FocusOverlayManager: int mState> = 3;

        goto label2;

     label1:
        r0.<com.android.camera.FocusOverlayManager: int mState> = 4;

     label2:
        virtualinvoke r0.<com.android.camera.FocusOverlayManager: void updateFocusUI()>();

        specialinvoke r0.<com.android.camera.FocusOverlayManager: void capture()>();

        goto label8;

     label3:
        $i1 = r0.<com.android.camera.FocusOverlayManager: int mState>;

        if $i1 != 1 goto label7;

        if z0 == 0 goto label4;

        r0.<com.android.camera.FocusOverlayManager: int mState> = 3;

        goto label5;

     label4:
        r0.<com.android.camera.FocusOverlayManager: int mState> = 4;

     label5:
        virtualinvoke r0.<com.android.camera.FocusOverlayManager: void updateFocusUI()>();

        $r1 = r0.<com.android.camera.FocusOverlayManager: java.util.List mFocusArea>;

        if $r1 == null goto label6;

        r0.<com.android.camera.FocusOverlayManager: boolean mFocusLocked> = 1;

        $r2 = r0.<com.android.camera.FocusOverlayManager: android.os.Handler mHandler>;

        $i3 = <com.android.camera.FocusOverlayManager: int RESET_TOUCH_FOCUS_DELAY_MILLIS>;

        $l4 = (long) $i3;

        virtualinvoke $r2.<android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>(0, $l4);

     label6:
        if z1 == 0 goto label8;

        specialinvoke r0.<com.android.camera.FocusOverlayManager: void lockAeAwbIfNeeded()>();

        goto label8;

     label7:
        $i2 = r0.<com.android.camera.FocusOverlayManager: int mState>;

        if $i2 != 0 goto label8;

     label8:
        return;
    }

    public void onAutoFocusMoving(boolean)
    {
        com.android.camera.FocusOverlayManager r0;
        boolean z0, $z1, $z2, $z3;
        com.android.camera.FocusOverlayManager$FocusUI $r1, $r2, $r4, $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4;
        android.graphics.Rect $r3, $r5;

        r0 := @this: com.android.camera.FocusOverlayManager;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.camera.FocusOverlayManager: boolean mInitialized>;

        if $z1 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<com.android.camera.FocusOverlayManager: com.android.camera.FocusOverlayManager$FocusUI mUI>;

        $z2 = interfaceinvoke $r1.<com.android.camera.FocusOverlayManager$FocusUI: boolean hasFaces()>();

        if $z2 == 0 goto label2;

        $r6 = r0.<com.android.camera.FocusOverlayManager: com.android.camera.FocusOverlayManager$FocusUI mUI>;

        interfaceinvoke $r6.<com.android.camera.FocusOverlayManager$FocusUI: void clearFocus()>();

        return;

     label2:
        $i0 = r0.<com.android.camera.FocusOverlayManager: int mState>;

        if $i0 == 0 goto label3;

        return;

     label3:
        if z0 == 0 goto label4;

        $z3 = r0.<com.android.camera.FocusOverlayManager: boolean mPreviousMoving>;

        if $z3 != 0 goto label4;

        $r4 = r0.<com.android.camera.FocusOverlayManager: com.android.camera.FocusOverlayManager$FocusUI mUI>;

        $r3 = r0.<com.android.camera.FocusOverlayManager: android.graphics.Rect mPreviewRect>;

        $i1 = virtualinvoke $r3.<android.graphics.Rect: int centerX()>();

        $r5 = r0.<com.android.camera.FocusOverlayManager: android.graphics.Rect mPreviewRect>;

        $i2 = virtualinvoke $r5.<android.graphics.Rect: int centerY()>();

        $i3 = specialinvoke r0.<com.android.camera.FocusOverlayManager: int getAFRegionEdge()>();

        $i4 = specialinvoke r0.<com.android.camera.FocusOverlayManager: int getAERegionEdge()>();

        interfaceinvoke $r4.<com.android.camera.FocusOverlayManager$FocusUI: void setFocusPosition(int,int,boolean,int,int)>($i1, $i2, 1, $i3, $i4);

        $r7 = r0.<com.android.camera.FocusOverlayManager: com.android.camera.FocusOverlayManager$FocusUI mUI>;

        interfaceinvoke $r7.<com.android.camera.FocusOverlayManager$FocusUI: void onFocusStarted()>();

        goto label5;

     label4:
        if z0 != 0 goto label5;

        $r2 = r0.<com.android.camera.FocusOverlayManager: com.android.camera.FocusOverlayManager$FocusUI mUI>;

        interfaceinvoke $r2.<com.android.camera.FocusOverlayManager$FocusUI: void onFocusSucceeded()>();

     label5:
        r0.<com.android.camera.FocusOverlayManager: boolean mPreviousMoving> = z0;

        return;
    }

    private int getAFRegionEdge()
    {
        com.android.camera.FocusOverlayManager r0;
        android.graphics.Rect $r1, $r2;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1, $f2;

        r0 := @this: com.android.camera.FocusOverlayManager;

        $r1 = r0.<com.android.camera.FocusOverlayManager: android.graphics.Rect mPreviewRect>;

        $i0 = virtualinvoke $r1.<android.graphics.Rect: int width()>();

        $r2 = r0.<com.android.camera.FocusOverlayManager: android.graphics.Rect mPreviewRect>;

        $i1 = virtualinvoke $r2.<android.graphics.Rect: int height()>();

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        $f1 = (float) $i2;

        $f0 = <com.android.camera.FocusOverlayManager: float AF_REGION_BOX>;

        $f2 = $f1 * $f0;

        $i3 = (int) $f2;

        return $i3;
    }

    private int getAERegionEdge()
    {
        com.android.camera.FocusOverlayManager r0;
        android.graphics.Rect $r1, $r2;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1, $f2;

        r0 := @this: com.android.camera.FocusOverlayManager;

        $r1 = r0.<com.android.camera.FocusOverlayManager: android.graphics.Rect mPreviewRect>;

        $i0 = virtualinvoke $r1.<android.graphics.Rect: int width()>();

        $r2 = r0.<com.android.camera.FocusOverlayManager: android.graphics.Rect mPreviewRect>;

        $i1 = virtualinvoke $r2.<android.graphics.Rect: int height()>();

        $i2 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        $f1 = (float) $i2;

        $f0 = <com.android.camera.FocusOverlayManager: float AE_REGION_BOX>;

        $f2 = $f1 * $f0;

        $i3 = (int) $f2;

        return $i3;
    }

    private void initializeFocusAreas(int, int)
    {
        com.android.camera.FocusOverlayManager r0;
        int i0, i1, $i2;
        java.util.List $r1, $r2, $r9;
        java.lang.Object $r3;
        android.hardware.Camera$Area $r4, $r7;
        android.graphics.Rect $r5, $r8;
        java.util.ArrayList $r6;

        r0 := @this: com.android.camera.FocusOverlayManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.camera.FocusOverlayManager: java.util.List mFocusArea>;

        if $r1 != null goto label1;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<com.android.camera.FocusOverlayManager: java.util.List mFocusArea> = $r6;

        $r9 = r0.<com.android.camera.FocusOverlayManager: java.util.List mFocusArea>;

        $r7 = new android.hardware.Camera$Area;

        $r8 = new android.graphics.Rect;

        specialinvoke $r8.<android.graphics.Rect: void <init>()>();

        specialinvoke $r7.<android.hardware.Camera$Area: void <init>(android.graphics.Rect,int)>($r8, 1);

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r7);

     label1:
        $i2 = specialinvoke r0.<com.android.camera.FocusOverlayManager: int getAFRegionEdge()>();

        $r2 = r0.<com.android.camera.FocusOverlayManager: java.util.List mFocusArea>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (android.hardware.Camera$Area) $r3;

        $r5 = $r4.<android.hardware.Camera$Area: android.graphics.Rect rect>;

        specialinvoke r0.<com.android.camera.FocusOverlayManager: void calculateTapArea(int,int,int,android.graphics.Rect)>(i0, i1, $i2, $r5);

        return;
    }

    private void initializeMeteringAreas(int, int)
    {
        com.android.camera.FocusOverlayManager r0;
        int i0, i1, $i2;
        java.util.List $r1, $r2, $r9;
        java.lang.Object $r3;
        android.hardware.Camera$Area $r4, $r7;
        android.graphics.Rect $r5, $r8;
        java.util.ArrayList $r6;

        r0 := @this: com.android.camera.FocusOverlayManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.camera.FocusOverlayManager: java.util.List mMeteringArea>;

        if $r1 != null goto label1;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<com.android.camera.FocusOverlayManager: java.util.List mMeteringArea> = $r6;

        $r9 = r0.<com.android.camera.FocusOverlayManager: java.util.List mMeteringArea>;

        $r7 = new android.hardware.Camera$Area;

        $r8 = new android.graphics.Rect;

        specialinvoke $r8.<android.graphics.Rect: void <init>()>();

        specialinvoke $r7.<android.hardware.Camera$Area: void <init>(android.graphics.Rect,int)>($r8, 1);

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r7);

     label1:
        $i2 = specialinvoke r0.<com.android.camera.FocusOverlayManager: int getAERegionEdge()>();

        $r2 = r0.<com.android.camera.FocusOverlayManager: java.util.List mMeteringArea>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (android.hardware.Camera$Area) $r3;

        $r5 = $r4.<android.hardware.Camera$Area: android.graphics.Rect rect>;

        specialinvoke r0.<com.android.camera.FocusOverlayManager: void calculateTapArea(int,int,int,android.graphics.Rect)>(i0, i1, $i2, $r5);

        return;
    }

    public void onSingleTapUp(int, int)
    {
        com.android.camera.FocusOverlayManager r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i11, $i12, $i13, $i14;
        boolean $z0, $z1, $z2, $z3;
        java.util.List $r1;
        android.graphics.Rect $r2, $r3, $r5, $r7;
        com.android.camera.FocusOverlayManager$FocusUI $r4;
        com.android.camera.ui.TouchCoordinate $r6;
        float $f0, $f1, $f2, $f3;
        long $l9, $l10;
        com.android.camera.FocusOverlayManager$Listener $r8, $r9;
        android.os.Handler $r10, $r11;

        r0 := @this: com.android.camera.FocusOverlayManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = r0.<com.android.camera.FocusOverlayManager: boolean mInitialized>;

        if $z0 == 0 goto label01;

        $i2 = r0.<com.android.camera.FocusOverlayManager: int mState>;

        if $i2 != 2 goto label02;

     label01:
        return;

     label02:
        $r1 = r0.<com.android.camera.FocusOverlayManager: java.util.List mFocusArea>;

        if $r1 == null goto label04;

        $i12 = r0.<com.android.camera.FocusOverlayManager: int mState>;

        if $i12 == 1 goto label03;

        $i13 = r0.<com.android.camera.FocusOverlayManager: int mState>;

        if $i13 == 3 goto label03;

        $i14 = r0.<com.android.camera.FocusOverlayManager: int mState>;

        if $i14 != 4 goto label04;

     label03:
        specialinvoke r0.<com.android.camera.FocusOverlayManager: void cancelAutoFocus()>();

     label04:
        $r2 = r0.<com.android.camera.FocusOverlayManager: android.graphics.Rect mPreviewRect>;

        $i3 = virtualinvoke $r2.<android.graphics.Rect: int width()>();

        if $i3 == 0 goto label05;

        $r3 = r0.<com.android.camera.FocusOverlayManager: android.graphics.Rect mPreviewRect>;

        $i4 = virtualinvoke $r3.<android.graphics.Rect: int height()>();

        if $i4 != 0 goto label06;

     label05:
        return;

     label06:
        $z1 = r0.<com.android.camera.FocusOverlayManager: boolean mFocusAreaSupported>;

        if $z1 == 0 goto label07;

        specialinvoke r0.<com.android.camera.FocusOverlayManager: void initializeFocusAreas(int,int)>(i0, i1);

     label07:
        $z2 = r0.<com.android.camera.FocusOverlayManager: boolean mMeteringAreaSupported>;

        if $z2 == 0 goto label08;

        specialinvoke r0.<com.android.camera.FocusOverlayManager: void initializeMeteringAreas(int,int)>(i0, i1);

     label08:
        $r4 = r0.<com.android.camera.FocusOverlayManager: com.android.camera.FocusOverlayManager$FocusUI mUI>;

        $i5 = specialinvoke r0.<com.android.camera.FocusOverlayManager: int getAFRegionEdge()>();

        $i6 = specialinvoke r0.<com.android.camera.FocusOverlayManager: int getAERegionEdge()>();

        interfaceinvoke $r4.<com.android.camera.FocusOverlayManager$FocusUI: void setFocusPosition(int,int,boolean,int,int)>(i0, i1, 0, $i5, $i6);

        $r6 = new com.android.camera.ui.TouchCoordinate;

        $f1 = (float) i0;

        $f0 = (float) i1;

        $r5 = r0.<com.android.camera.FocusOverlayManager: android.graphics.Rect mPreviewRect>;

        $i7 = virtualinvoke $r5.<android.graphics.Rect: int width()>();

        $f2 = (float) $i7;

        $r7 = r0.<com.android.camera.FocusOverlayManager: android.graphics.Rect mPreviewRect>;

        $i8 = virtualinvoke $r7.<android.graphics.Rect: int height()>();

        $f3 = (float) $i8;

        specialinvoke $r6.<com.android.camera.ui.TouchCoordinate: void <init>(float,float,float,float)>($f1, $f0, $f2, $f3);

        r0.<com.android.camera.FocusOverlayManager: com.android.camera.ui.TouchCoordinate mTouchCoordinate> = $r6;

        $l9 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.camera.FocusOverlayManager: long mTouchTime> = $l9;

        $r9 = r0.<com.android.camera.FocusOverlayManager: com.android.camera.FocusOverlayManager$Listener mListener>;

        interfaceinvoke $r9.<com.android.camera.FocusOverlayManager$Listener: void stopFaceDetection()>();

        $r8 = r0.<com.android.camera.FocusOverlayManager: com.android.camera.FocusOverlayManager$Listener mListener>;

        interfaceinvoke $r8.<com.android.camera.FocusOverlayManager$Listener: void setFocusParameters()>();

        $z3 = r0.<com.android.camera.FocusOverlayManager: boolean mFocusAreaSupported>;

        if $z3 == 0 goto label09;

        specialinvoke r0.<com.android.camera.FocusOverlayManager: void autoFocus()>();

        goto label10;

     label09:
        virtualinvoke r0.<com.android.camera.FocusOverlayManager: void updateFocusUI()>();

        $r10 = r0.<com.android.camera.FocusOverlayManager: android.os.Handler mHandler>;

        virtualinvoke $r10.<android.os.Handler: void removeMessages(int)>(0);

        $r11 = r0.<com.android.camera.FocusOverlayManager: android.os.Handler mHandler>;

        $i11 = <com.android.camera.FocusOverlayManager: int RESET_TOUCH_FOCUS_DELAY_MILLIS>;

        $l10 = (long) $i11;

        virtualinvoke $r11.<android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>(0, $l10);

     label10:
        return;
    }

    public void onPreviewStarted()
    {
        com.android.camera.FocusOverlayManager r0;

        r0 := @this: com.android.camera.FocusOverlayManager;

        r0.<com.android.camera.FocusOverlayManager: int mState> = 0;

        virtualinvoke r0.<com.android.camera.FocusOverlayManager: void resetTouchFocus()>();

        return;
    }

    public void onPreviewStopped()
    {
        com.android.camera.FocusOverlayManager r0;

        r0 := @this: com.android.camera.FocusOverlayManager;

        r0.<com.android.camera.FocusOverlayManager: int mState> = 0;

        virtualinvoke r0.<com.android.camera.FocusOverlayManager: void updateFocusUI()>();

        return;
    }

    public void onCameraReleased()
    {
        com.android.camera.FocusOverlayManager r0;

        r0 := @this: com.android.camera.FocusOverlayManager;

        virtualinvoke r0.<com.android.camera.FocusOverlayManager: void onPreviewStopped()>();

        return;
    }

    public void onMoving()
    {
        com.android.camera.FocusOverlayManager r0;
        boolean $z0;
        com.android.camera.debug.Log$Tag $r1;

        r0 := @this: com.android.camera.FocusOverlayManager;

        $z0 = r0.<com.android.camera.FocusOverlayManager: boolean mFocusLocked>;

        if $z0 == 0 goto label1;

        $r1 = <com.android.camera.FocusOverlayManager: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void d(com.android.camera.debug.Log$Tag,java.lang.String)>($r1, "onMoving: Early focus unlock.");

        specialinvoke r0.<com.android.camera.FocusOverlayManager: void cancelAutoFocus()>();

     label1:
        return;
    }

    private void autoFocus(int)
    {
        com.android.camera.FocusOverlayManager r0;
        int i0;
        com.android.camera.FocusOverlayManager$Listener $r1;
        com.android.camera.FocusOverlayManager$FocusUI $r2;
        android.os.Handler $r3;

        r0 := @this: com.android.camera.FocusOverlayManager;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.camera.FocusOverlayManager: com.android.camera.FocusOverlayManager$Listener mListener>;

        interfaceinvoke $r1.<com.android.camera.FocusOverlayManager$Listener: void autoFocus()>();

        r0.<com.android.camera.FocusOverlayManager: int mState> = i0;

        $r2 = r0.<com.android.camera.FocusOverlayManager: com.android.camera.FocusOverlayManager$FocusUI mUI>;

        interfaceinvoke $r2.<com.android.camera.FocusOverlayManager$FocusUI: void pauseFaceDetection()>();

        virtualinvoke r0.<com.android.camera.FocusOverlayManager: void updateFocusUI()>();

        $r3 = r0.<com.android.camera.FocusOverlayManager: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.os.Handler: void removeMessages(int)>(0);

        return;
    }

    private void autoFocus()
    {
        com.android.camera.FocusOverlayManager r0;

        r0 := @this: com.android.camera.FocusOverlayManager;

        specialinvoke r0.<com.android.camera.FocusOverlayManager: void autoFocus(int)>(1);

        return;
    }

    private void autoFocusAndCapture()
    {
        com.android.camera.FocusOverlayManager r0;

        r0 := @this: com.android.camera.FocusOverlayManager;

        specialinvoke r0.<com.android.camera.FocusOverlayManager: void autoFocus(int)>(2);

        return;
    }

    private void cancelAutoFocus()
    {
        com.android.camera.FocusOverlayManager r0;
        com.android.camera.debug.Log$Tag $r1;
        com.android.camera.FocusOverlayManager$Listener $r2;
        com.android.camera.FocusOverlayManager$FocusUI $r3;
        android.os.Handler $r4;

        r0 := @this: com.android.camera.FocusOverlayManager;

        $r1 = <com.android.camera.FocusOverlayManager: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void v(com.android.camera.debug.Log$Tag,java.lang.String)>($r1, "Cancel autofocus.");

        virtualinvoke r0.<com.android.camera.FocusOverlayManager: void resetTouchFocus()>();

        $r2 = r0.<com.android.camera.FocusOverlayManager: com.android.camera.FocusOverlayManager$Listener mListener>;

        interfaceinvoke $r2.<com.android.camera.FocusOverlayManager$Listener: void cancelAutoFocus()>();

        $r3 = r0.<com.android.camera.FocusOverlayManager: com.android.camera.FocusOverlayManager$FocusUI mUI>;

        interfaceinvoke $r3.<com.android.camera.FocusOverlayManager$FocusUI: void resumeFaceDetection()>();

        r0.<com.android.camera.FocusOverlayManager: int mState> = 0;

        r0.<com.android.camera.FocusOverlayManager: boolean mFocusLocked> = 0;

        virtualinvoke r0.<com.android.camera.FocusOverlayManager: void updateFocusUI()>();

        $r4 = r0.<com.android.camera.FocusOverlayManager: android.os.Handler mHandler>;

        virtualinvoke $r4.<android.os.Handler: void removeMessages(int)>(0);

        return;
    }

    private void capture()
    {
        com.android.camera.FocusOverlayManager r0;
        com.android.camera.FocusOverlayManager$Listener $r1;
        boolean $z0;
        android.os.Handler $r2;

        r0 := @this: com.android.camera.FocusOverlayManager;

        $r1 = r0.<com.android.camera.FocusOverlayManager: com.android.camera.FocusOverlayManager$Listener mListener>;

        $z0 = interfaceinvoke $r1.<com.android.camera.FocusOverlayManager$Listener: boolean capture()>();

        if $z0 == 0 goto label1;

        r0.<com.android.camera.FocusOverlayManager: int mState> = 0;

        $r2 = r0.<com.android.camera.FocusOverlayManager: android.os.Handler mHandler>;

        virtualinvoke $r2.<android.os.Handler: void removeMessages(int)>(0);

     label1:
        return;
    }

    public com.android.ex.camera2.portability.CameraCapabilities$FocusMode getFocusMode(com.android.ex.camera2.portability.CameraCapabilities$FocusMode)
    {
        com.android.camera.FocusOverlayManager r0;
        com.android.ex.camera2.portability.CameraCapabilities$FocusMode r1, r4, $r5, $r16, $r20, $r24, $r25, $r27, $r28, $r36, $r46, $r52, $r53, $r56;
        java.lang.String r2, $r9, $r15, $r22, $r32, $r41, $r54;
        java.util.Iterator r3;
        com.android.ex.camera2.portability.CameraCapabilities $r6, $r14, $r26, $r31, $r40;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.android.camera.app.AppController $r7;
        com.android.camera.settings.SettingsManager $r8;
        java.lang.StringBuilder $r10, $r12, $r13, $r19, $r21, $r23, $r29, $r34, $r35, $r38, $r42, $r43, $r49, $r51, $r55;
        com.android.camera.debug.Log$Tag $r11, $r18, $r30, $r33, $r44, $r45, $r47, $r50;
        com.android.ex.camera2.portability.CameraCapabilities$Stringifier $r17;
        java.util.List $r37, $r48;
        java.lang.Object $r39;

        r0 := @this: com.android.camera.FocusOverlayManager;

        r1 := @parameter0: com.android.ex.camera2.portability.CameraCapabilities$FocusMode;

        $r5 = r0.<com.android.camera.FocusOverlayManager: com.android.ex.camera2.portability.CameraCapabilities$FocusMode mOverrideFocusMode>;

        if $r5 == null goto label1;

        $r50 = <com.android.camera.FocusOverlayManager: com.android.camera.debug.Log$Tag TAG>;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("returning override focus: ");

        $r56 = r0.<com.android.camera.FocusOverlayManager: com.android.ex.camera2.portability.CameraCapabilities$FocusMode mOverrideFocusMode>;

        $r55 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r56);

        $r54 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void v(com.android.camera.debug.Log$Tag,java.lang.String)>($r50, $r54);

        $r53 = r0.<com.android.camera.FocusOverlayManager: com.android.ex.camera2.portability.CameraCapabilities$FocusMode mOverrideFocusMode>;

        return $r53;

     label1:
        $r6 = r0.<com.android.camera.FocusOverlayManager: com.android.ex.camera2.portability.CameraCapabilities mCapabilities>;

        if $r6 != null goto label2;

        $r45 = <com.android.camera.FocusOverlayManager: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void v(com.android.camera.debug.Log$Tag,java.lang.String)>($r45, "no capabilities, returning default AUTO focus mode");

        $r52 = <com.android.ex.camera2.portability.CameraCapabilities$FocusMode: com.android.ex.camera2.portability.CameraCapabilities$FocusMode AUTO>;

        return $r52;

     label2:
        $z0 = r0.<com.android.camera.FocusOverlayManager: boolean mFocusAreaSupported>;

        if $z0 == 0 goto label3;

        $r48 = r0.<com.android.camera.FocusOverlayManager: java.util.List mFocusArea>;

        if $r48 == null goto label3;

        $r47 = <com.android.camera.FocusOverlayManager: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void v(com.android.camera.debug.Log$Tag,java.lang.String)>($r47, "in tap to focus, returning AUTO focus mode");

        $r46 = <com.android.ex.camera2.portability.CameraCapabilities$FocusMode: com.android.ex.camera2.portability.CameraCapabilities$FocusMode AUTO>;

        r0.<com.android.camera.FocusOverlayManager: com.android.ex.camera2.portability.CameraCapabilities$FocusMode mFocusMode> = $r46;

        goto label6;

     label3:
        $r8 = r0.<com.android.camera.FocusOverlayManager: com.android.camera.settings.SettingsManager mSettingsManager>;

        $r7 = r0.<com.android.camera.FocusOverlayManager: com.android.camera.app.AppController mAppController>;

        $r9 = interfaceinvoke $r7.<com.android.camera.app.AppController: java.lang.String getCameraScope()>();

        r2 = virtualinvoke $r8.<com.android.camera.settings.SettingsManager: java.lang.String getString(java.lang.String,java.lang.String)>($r9, "pref_camera_focusmode_key");

        $r11 = <com.android.camera.FocusOverlayManager: com.android.camera.debug.Log$Tag TAG>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stored focus setting for camera: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void v(com.android.camera.debug.Log$Tag,java.lang.String)>($r11, $r15);

        $r14 = r0.<com.android.camera.FocusOverlayManager: com.android.ex.camera2.portability.CameraCapabilities mCapabilities>;

        $r17 = virtualinvoke $r14.<com.android.ex.camera2.portability.CameraCapabilities: com.android.ex.camera2.portability.CameraCapabilities$Stringifier getStringifier()>();

        $r16 = virtualinvoke $r17.<com.android.ex.camera2.portability.CameraCapabilities$Stringifier: com.android.ex.camera2.portability.CameraCapabilities$FocusMode focusModeFromString(java.lang.String)>(r2);

        r0.<com.android.camera.FocusOverlayManager: com.android.ex.camera2.portability.CameraCapabilities$FocusMode mFocusMode> = $r16;

        $r18 = <com.android.camera.FocusOverlayManager: com.android.camera.debug.Log$Tag TAG>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("focus mode resolved from setting: ");

        $r20 = r0.<com.android.camera.FocusOverlayManager: com.android.ex.camera2.portability.CameraCapabilities$FocusMode mFocusMode>;

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void v(com.android.camera.debug.Log$Tag,java.lang.String)>($r18, $r22);

        $r25 = r0.<com.android.camera.FocusOverlayManager: com.android.ex.camera2.portability.CameraCapabilities$FocusMode mFocusMode>;

        if $r25 != null goto label6;

        $r37 = r0.<com.android.camera.FocusOverlayManager: java.util.List mDefaultFocusModes>;

        r3 = interfaceinvoke $r37.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z3 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label6;

        $r39 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.ex.camera2.portability.CameraCapabilities$FocusMode) $r39;

        $r40 = r0.<com.android.camera.FocusOverlayManager: com.android.ex.camera2.portability.CameraCapabilities mCapabilities>;

        $z4 = virtualinvoke $r40.<com.android.ex.camera2.portability.CameraCapabilities: boolean supports(com.android.ex.camera2.portability.CameraCapabilities$FocusMode)>(r4);

        if $z4 == 0 goto label5;

        r0.<com.android.camera.FocusOverlayManager: com.android.ex.camera2.portability.CameraCapabilities$FocusMode mFocusMode> = r4;

        $r44 = <com.android.camera.FocusOverlayManager: com.android.camera.debug.Log$Tag TAG>;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("selected supported focus mode from default list");

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void v(com.android.camera.debug.Log$Tag,java.lang.String)>($r44, $r41);

        goto label6;

     label5:
        goto label4;

     label6:
        $r26 = r0.<com.android.camera.FocusOverlayManager: com.android.ex.camera2.portability.CameraCapabilities mCapabilities>;

        $r24 = r0.<com.android.camera.FocusOverlayManager: com.android.ex.camera2.portability.CameraCapabilities$FocusMode mFocusMode>;

        $z1 = virtualinvoke $r26.<com.android.ex.camera2.portability.CameraCapabilities: boolean supports(com.android.ex.camera2.portability.CameraCapabilities$FocusMode)>($r24);

        if $z1 != 0 goto label8;

        $r31 = r0.<com.android.camera.FocusOverlayManager: com.android.ex.camera2.portability.CameraCapabilities mCapabilities>;

        $r27 = <com.android.ex.camera2.portability.CameraCapabilities$FocusMode: com.android.ex.camera2.portability.CameraCapabilities$FocusMode AUTO>;

        $z2 = virtualinvoke $r31.<com.android.ex.camera2.portability.CameraCapabilities: boolean supports(com.android.ex.camera2.portability.CameraCapabilities$FocusMode)>($r27);

        if $z2 == 0 goto label7;

        $r33 = <com.android.camera.FocusOverlayManager: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void v(com.android.camera.debug.Log$Tag,java.lang.String)>($r33, "no supported focus mode, falling back to AUTO");

        $r36 = <com.android.ex.camera2.portability.CameraCapabilities$FocusMode: com.android.ex.camera2.portability.CameraCapabilities$FocusMode AUTO>;

        r0.<com.android.camera.FocusOverlayManager: com.android.ex.camera2.portability.CameraCapabilities$FocusMode mFocusMode> = $r36;

        goto label8;

     label7:
        $r30 = <com.android.camera.FocusOverlayManager: com.android.camera.debug.Log$Tag TAG>;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no supported focus mode, falling back to current: ");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r32 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void v(com.android.camera.debug.Log$Tag,java.lang.String)>($r30, $r32);

        r0.<com.android.camera.FocusOverlayManager: com.android.ex.camera2.portability.CameraCapabilities$FocusMode mFocusMode> = r1;

     label8:
        $r28 = r0.<com.android.camera.FocusOverlayManager: com.android.ex.camera2.portability.CameraCapabilities$FocusMode mFocusMode>;

        return $r28;
    }

    public java.util.List getFocusAreas()
    {
        com.android.camera.FocusOverlayManager r0;
        java.util.List $r1;

        r0 := @this: com.android.camera.FocusOverlayManager;

        $r1 = r0.<com.android.camera.FocusOverlayManager: java.util.List mFocusArea>;

        return $r1;
    }

    public java.util.List getMeteringAreas()
    {
        com.android.camera.FocusOverlayManager r0;
        java.util.List $r1;

        r0 := @this: com.android.camera.FocusOverlayManager;

        $r1 = r0.<com.android.camera.FocusOverlayManager: java.util.List mMeteringArea>;

        return $r1;
    }

    public void updateFocusUI()
    {
        com.android.camera.FocusOverlayManager r0;
        boolean $z0;
        int $i0, $i1, $i2, $i3;
        com.android.ex.camera2.portability.CameraCapabilities$FocusMode $r1, $r2;
        com.android.camera.FocusOverlayManager$FocusUI $r3, $r4, $r5, $r6, $r8, $r9;
        java.util.List $r7;

        r0 := @this: com.android.camera.FocusOverlayManager;

        $z0 = r0.<com.android.camera.FocusOverlayManager: boolean mInitialized>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $i0 = r0.<com.android.camera.FocusOverlayManager: int mState>;

        if $i0 != 0 goto label3;

        $r7 = r0.<com.android.camera.FocusOverlayManager: java.util.List mFocusArea>;

        if $r7 != null goto label2;

        $r9 = r0.<com.android.camera.FocusOverlayManager: com.android.camera.FocusOverlayManager$FocusUI mUI>;

        interfaceinvoke $r9.<com.android.camera.FocusOverlayManager$FocusUI: void clearFocus()>();

        goto label7;

     label2:
        $r8 = r0.<com.android.camera.FocusOverlayManager: com.android.camera.FocusOverlayManager$FocusUI mUI>;

        interfaceinvoke $r8.<com.android.camera.FocusOverlayManager$FocusUI: void onFocusStarted()>();

        goto label7;

     label3:
        $i1 = r0.<com.android.camera.FocusOverlayManager: int mState>;

        if $i1 != 1 goto label4;

        $r6 = r0.<com.android.camera.FocusOverlayManager: com.android.camera.FocusOverlayManager$FocusUI mUI>;

        interfaceinvoke $r6.<com.android.camera.FocusOverlayManager$FocusUI: void onFocusStarted()>();

        goto label7;

     label4:
        $r2 = r0.<com.android.camera.FocusOverlayManager: com.android.ex.camera2.portability.CameraCapabilities$FocusMode mFocusMode>;

        $r1 = <com.android.ex.camera2.portability.CameraCapabilities$FocusMode: com.android.ex.camera2.portability.CameraCapabilities$FocusMode CONTINUOUS_PICTURE>;

        if $r2 != $r1 goto label5;

        $r5 = r0.<com.android.camera.FocusOverlayManager: com.android.camera.FocusOverlayManager$FocusUI mUI>;

        interfaceinvoke $r5.<com.android.camera.FocusOverlayManager$FocusUI: void onFocusSucceeded()>();

        goto label7;

     label5:
        $i2 = r0.<com.android.camera.FocusOverlayManager: int mState>;

        if $i2 != 3 goto label6;

        $r4 = r0.<com.android.camera.FocusOverlayManager: com.android.camera.FocusOverlayManager$FocusUI mUI>;

        interfaceinvoke $r4.<com.android.camera.FocusOverlayManager$FocusUI: void onFocusSucceeded()>();

        goto label7;

     label6:
        $i3 = r0.<com.android.camera.FocusOverlayManager: int mState>;

        if $i3 != 4 goto label7;

        $r3 = r0.<com.android.camera.FocusOverlayManager: com.android.camera.FocusOverlayManager$FocusUI mUI>;

        interfaceinvoke $r3.<com.android.camera.FocusOverlayManager$FocusUI: void onFocusFailed()>();

     label7:
        return;
    }

    public void resetTouchFocus()
    {
        com.android.camera.FocusOverlayManager r0;
        boolean $z0;
        com.android.camera.FocusOverlayManager$FocusUI $r1;
        com.android.camera.FocusOverlayManager$Listener $r2;
        com.android.camera.ui.TouchCoordinate $r3, $r5;
        com.android.camera.util.UsageStatistics $r4;
        long $l0, $l1, $l2;
        float $f0, $f1;
        java.lang.Float $r6;

        r0 := @this: com.android.camera.FocusOverlayManager;

        $z0 = r0.<com.android.camera.FocusOverlayManager: boolean mInitialized>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<com.android.camera.FocusOverlayManager: com.android.camera.FocusOverlayManager$FocusUI mUI>;

        interfaceinvoke $r1.<com.android.camera.FocusOverlayManager$FocusUI: void clearFocus()>();

        r0.<com.android.camera.FocusOverlayManager: java.util.List mFocusArea> = null;

        r0.<com.android.camera.FocusOverlayManager: java.util.List mMeteringArea> = null;

        $r2 = r0.<com.android.camera.FocusOverlayManager: com.android.camera.FocusOverlayManager$Listener mListener>;

        interfaceinvoke $r2.<com.android.camera.FocusOverlayManager$Listener: void setFocusParameters()>();

        $r3 = r0.<com.android.camera.FocusOverlayManager: com.android.camera.ui.TouchCoordinate mTouchCoordinate>;

        if $r3 == null goto label2;

        $r4 = staticinvoke <com.android.camera.util.UsageStatistics: com.android.camera.util.UsageStatistics instance()>();

        $r5 = r0.<com.android.camera.FocusOverlayManager: com.android.camera.ui.TouchCoordinate mTouchCoordinate>;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l1 = r0.<com.android.camera.FocusOverlayManager: long mTouchTime>;

        $l2 = $l0 - $l1;

        $f0 = (float) $l2;

        $f1 = 0.001F * $f0;

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f1);

        virtualinvoke $r4.<com.android.camera.util.UsageStatistics: void tapToFocus(com.android.camera.ui.TouchCoordinate,java.lang.Float)>($r5, $r6);

        r0.<com.android.camera.FocusOverlayManager: com.android.camera.ui.TouchCoordinate mTouchCoordinate> = null;

     label2:
        return;
    }

    private void calculateTapArea(int, int, int, android.graphics.Rect)
    {
        com.android.camera.FocusOverlayManager r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        android.graphics.Rect r1, $r3, $r4, $r5, $r6;
        android.graphics.RectF r2, $r7;
        float $f0, $f1, $f2, $f3;
        android.graphics.Matrix $r8;

        r0 := @this: com.android.camera.FocusOverlayManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        r1 := @parameter3: android.graphics.Rect;

        $i5 = i2 / 2;

        $i9 = i0 - $i5;

        $r3 = r0.<com.android.camera.FocusOverlayManager: android.graphics.Rect mPreviewRect>;

        $i8 = $r3.<android.graphics.Rect: int left>;

        $r4 = r0.<com.android.camera.FocusOverlayManager: android.graphics.Rect mPreviewRect>;

        $i6 = $r4.<android.graphics.Rect: int right>;

        $i7 = $i6 - i2;

        i3 = staticinvoke <com.android.camera.util.CameraUtil: int clamp(int,int,int)>($i9, $i8, $i7);

        $i10 = i2 / 2;

        $i14 = i1 - $i10;

        $r5 = r0.<com.android.camera.FocusOverlayManager: android.graphics.Rect mPreviewRect>;

        $i12 = $r5.<android.graphics.Rect: int top>;

        $r6 = r0.<com.android.camera.FocusOverlayManager: android.graphics.Rect mPreviewRect>;

        $i11 = $r6.<android.graphics.Rect: int bottom>;

        $i13 = $i11 - i2;

        i4 = staticinvoke <com.android.camera.util.CameraUtil: int clamp(int,int,int)>($i14, $i12, $i13);

        $r7 = new android.graphics.RectF;

        $f3 = (float) i3;

        $f1 = (float) i4;

        $i15 = i3 + i2;

        $f2 = (float) $i15;

        $i16 = i4 + i2;

        $f0 = (float) $i16;

        specialinvoke $r7.<android.graphics.RectF: void <init>(float,float,float,float)>($f3, $f1, $f2, $f0);

        r2 = $r7;

        $r8 = r0.<com.android.camera.FocusOverlayManager: android.graphics.Matrix mMatrix>;

        virtualinvoke $r8.<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>(r2);

        staticinvoke <com.android.camera.util.CameraUtil: void rectFToRect(android.graphics.RectF,android.graphics.Rect)>(r2, r1);

        return;
    }

    int getFocusState()
    {
        com.android.camera.FocusOverlayManager r0;
        int $i0;

        r0 := @this: com.android.camera.FocusOverlayManager;

        $i0 = r0.<com.android.camera.FocusOverlayManager: int mState>;

        return $i0;
    }

    public boolean isFocusCompleted()
    {
        com.android.camera.FocusOverlayManager r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.camera.FocusOverlayManager;

        $i0 = r0.<com.android.camera.FocusOverlayManager: int mState>;

        if $i0 == 3 goto label1;

        $i1 = r0.<com.android.camera.FocusOverlayManager: int mState>;

        if $i1 != 4 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean isFocusingSnapOnFinish()
    {
        com.android.camera.FocusOverlayManager r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.camera.FocusOverlayManager;

        $i0 = r0.<com.android.camera.FocusOverlayManager: int mState>;

        if $i0 != 2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void removeMessages()
    {
        com.android.camera.FocusOverlayManager r0;
        android.os.Handler $r1;

        r0 := @this: com.android.camera.FocusOverlayManager;

        $r1 = r0.<com.android.camera.FocusOverlayManager: android.os.Handler mHandler>;

        virtualinvoke $r1.<android.os.Handler: void removeMessages(int)>(0);

        return;
    }

    public void overrideFocusMode(com.android.ex.camera2.portability.CameraCapabilities$FocusMode)
    {
        com.android.camera.FocusOverlayManager r0;
        com.android.ex.camera2.portability.CameraCapabilities$FocusMode r1;

        r0 := @this: com.android.camera.FocusOverlayManager;

        r1 := @parameter0: com.android.ex.camera2.portability.CameraCapabilities$FocusMode;

        r0.<com.android.camera.FocusOverlayManager: com.android.ex.camera2.portability.CameraCapabilities$FocusMode mOverrideFocusMode> = r1;

        return;
    }

    public void setAeAwbLock(boolean)
    {
        com.android.camera.FocusOverlayManager r0;
        boolean z0;

        r0 := @this: com.android.camera.FocusOverlayManager;

        z0 := @parameter0: boolean;

        r0.<com.android.camera.FocusOverlayManager: boolean mAeAwbLock> = z0;

        return;
    }

    public boolean getAeAwbLock()
    {
        com.android.camera.FocusOverlayManager r0;
        boolean $z0;

        r0 := @this: com.android.camera.FocusOverlayManager;

        $z0 = r0.<com.android.camera.FocusOverlayManager: boolean mAeAwbLock>;

        return $z0;
    }

    private boolean needAutoFocusCall(com.android.ex.camera2.portability.CameraCapabilities$FocusMode)
    {
        com.android.camera.FocusOverlayManager r0;
        com.android.ex.camera2.portability.CameraCapabilities$FocusMode r1, $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: com.android.camera.FocusOverlayManager;

        r1 := @parameter0: com.android.ex.camera2.portability.CameraCapabilities$FocusMode;

        $r2 = <com.android.ex.camera2.portability.CameraCapabilities$FocusMode: com.android.ex.camera2.portability.CameraCapabilities$FocusMode INFINITY>;

        if r1 == $r2 goto label1;

        $r3 = <com.android.ex.camera2.portability.CameraCapabilities$FocusMode: com.android.ex.camera2.portability.CameraCapabilities$FocusMode FIXED>;

        if r1 == $r3 goto label1;

        $r4 = <com.android.ex.camera2.portability.CameraCapabilities$FocusMode: com.android.ex.camera2.portability.CameraCapabilities$FocusMode EXTENDED_DOF>;

        if r1 == $r4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static void access$000(com.android.camera.FocusOverlayManager)
    {
        com.android.camera.FocusOverlayManager r0;

        r0 := @parameter0: com.android.camera.FocusOverlayManager;

        specialinvoke r0.<com.android.camera.FocusOverlayManager: void cancelAutoFocus()>();

        return;
    }

    static void <clinit>()
    {
        com.android.camera.debug.Log$Tag $r0;
        int $i0;
        float $f0, $f1;

        <com.android.camera.FocusOverlayManager: int STATE_FAIL> = 4;

        <com.android.camera.FocusOverlayManager: int STATE_SUCCESS> = 3;

        <com.android.camera.FocusOverlayManager: int STATE_FOCUSING_SNAP_ON_FINISH> = 2;

        <com.android.camera.FocusOverlayManager: int STATE_FOCUSING> = 1;

        <com.android.camera.FocusOverlayManager: int STATE_IDLE> = 0;

        <com.android.camera.FocusOverlayManager: int RESET_TOUCH_FOCUS> = 0;

        $r0 = new com.android.camera.debug.Log$Tag;

        specialinvoke $r0.<com.android.camera.debug.Log$Tag: void <init>(java.lang.String)>("FocusOverlayMgr");

        <com.android.camera.FocusOverlayManager: com.android.camera.debug.Log$Tag TAG> = $r0;

        $i0 = staticinvoke <com.android.camera.one.Settings3A: int getFocusHoldMillis()>();

        <com.android.camera.FocusOverlayManager: int RESET_TOUCH_FOCUS_DELAY_MILLIS> = $i0;

        $f0 = staticinvoke <com.android.camera.one.Settings3A: float getAutoFocusRegionWidth()>();

        <com.android.camera.FocusOverlayManager: float AF_REGION_BOX> = $f0;

        $f1 = staticinvoke <com.android.camera.one.Settings3A: float getMeteringRegionWidth()>();

        <com.android.camera.FocusOverlayManager: float AE_REGION_BOX> = $f1;

        return;
    }
}
