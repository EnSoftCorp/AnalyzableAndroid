public class com.adobe.xmp.impl.xpath.XMPPath extends java.lang.Object
{
    public static final int STRUCT_FIELD_STEP;
    public static final int QUALIFIER_STEP;
    public static final int ARRAY_INDEX_STEP;
    public static final int ARRAY_LAST_STEP;
    public static final int QUAL_SELECTOR_STEP;
    public static final int FIELD_SELECTOR_STEP;
    public static final int SCHEMA_NODE;
    public static final int STEP_SCHEMA;
    public static final int STEP_ROOT_PROP;
    private java.util.List segments;

    public void <init>()
    {
        com.adobe.xmp.impl.xpath.XMPPath r0;
        java.util.ArrayList $r1;

        r0 := @this: com.adobe.xmp.impl.xpath.XMPPath;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(5);

        r0.<com.adobe.xmp.impl.xpath.XMPPath: java.util.List segments> = $r1;

        return;
    }

    public void add(com.adobe.xmp.impl.xpath.XMPPathSegment)
    {
        com.adobe.xmp.impl.xpath.XMPPath r0;
        com.adobe.xmp.impl.xpath.XMPPathSegment r1;
        java.util.List $r2;

        r0 := @this: com.adobe.xmp.impl.xpath.XMPPath;

        r1 := @parameter0: com.adobe.xmp.impl.xpath.XMPPathSegment;

        $r2 = r0.<com.adobe.xmp.impl.xpath.XMPPath: java.util.List segments>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public com.adobe.xmp.impl.xpath.XMPPathSegment getSegment(int)
    {
        com.adobe.xmp.impl.xpath.XMPPath r0;
        int i0;
        java.util.List $r1;
        java.lang.Object $r2;
        com.adobe.xmp.impl.xpath.XMPPathSegment $r3;

        r0 := @this: com.adobe.xmp.impl.xpath.XMPPath;

        i0 := @parameter0: int;

        $r1 = r0.<com.adobe.xmp.impl.xpath.XMPPath: java.util.List segments>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (com.adobe.xmp.impl.xpath.XMPPathSegment) $r2;

        return $r3;
    }

    public int size()
    {
        com.adobe.xmp.impl.xpath.XMPPath r0;
        java.util.List $r1;
        int $i0;

        r0 := @this: com.adobe.xmp.impl.xpath.XMPPath;

        $r1 = r0.<com.adobe.xmp.impl.xpath.XMPPath: java.util.List segments>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        com.adobe.xmp.impl.xpath.XMPPath r0;
        java.lang.StringBuffer r1, $r2;
        int i0, i1, $i2, $i3, $i4, $i5;
        java.lang.String $r3;
        com.adobe.xmp.impl.xpath.XMPPathSegment $r4, $r6;

        r0 := @this: com.adobe.xmp.impl.xpath.XMPPath;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        r1 = $r2;

        i0 = 1;

     label1:
        $i2 = virtualinvoke r0.<com.adobe.xmp.impl.xpath.XMPPath: int size()>();

        if i0 >= $i2 goto label4;

        $r4 = virtualinvoke r0.<com.adobe.xmp.impl.xpath.XMPPath: com.adobe.xmp.impl.xpath.XMPPathSegment getSegment(int)>(i0);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r4);

        $i3 = virtualinvoke r0.<com.adobe.xmp.impl.xpath.XMPPath: int size()>();

        $i4 = $i3 - 1;

        if i0 >= $i4 goto label3;

        $i5 = i0 + 1;

        $r6 = virtualinvoke r0.<com.adobe.xmp.impl.xpath.XMPPath: com.adobe.xmp.impl.xpath.XMPPathSegment getSegment(int)>($i5);

        i1 = virtualinvoke $r6.<com.adobe.xmp.impl.xpath.XMPPathSegment: int getKind()>();

        if i1 == 1 goto label2;

        if i1 != 2 goto label3;

     label2:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(47);

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        $r3 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public static void <clinit>()
    {
        <com.adobe.xmp.impl.xpath.XMPPath: int STEP_ROOT_PROP> = 1;

        <com.adobe.xmp.impl.xpath.XMPPath: int STEP_SCHEMA> = 0;

        <com.adobe.xmp.impl.xpath.XMPPath: int SCHEMA_NODE> = -2147483648;

        <com.adobe.xmp.impl.xpath.XMPPath: int FIELD_SELECTOR_STEP> = 6;

        <com.adobe.xmp.impl.xpath.XMPPath: int QUAL_SELECTOR_STEP> = 5;

        <com.adobe.xmp.impl.xpath.XMPPath: int ARRAY_LAST_STEP> = 4;

        <com.adobe.xmp.impl.xpath.XMPPath: int ARRAY_INDEX_STEP> = 3;

        <com.adobe.xmp.impl.xpath.XMPPath: int QUALIFIER_STEP> = 2;

        <com.adobe.xmp.impl.xpath.XMPPath: int STRUCT_FIELD_STEP> = 1;

        return;
    }
}
