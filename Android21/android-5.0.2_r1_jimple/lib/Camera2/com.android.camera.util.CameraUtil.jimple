public class com.android.camera.util.CameraUtil extends java.lang.Object
{
    private static final com.android.camera.debug.Log$Tag TAG;
    private static final int MAX_PREVIEW_FPS_TIMES_1000;
    private static final int PREFERRED_PREVIEW_FPS_TIMES_1000;
    public static final java.lang.String KEY_RETURN_DATA;
    public static final java.lang.String KEY_SHOW_WHEN_LOCKED;
    public static final int ORIENTATION_HYSTERESIS;
    public static final java.lang.String REVIEW_ACTION;
    public static final java.lang.String ACTION_NEW_PICTURE;
    public static final java.lang.String ACTION_NEW_VIDEO;
    public static final java.lang.String ACTION_CAMERA_STARTED;
    public static final java.lang.String ACTION_CAMERA_STOPPED;
    public static final java.lang.String ACTION_CAMERA_SHUTTER_CLICK;
    private static final java.lang.String MAPS_PACKAGE_NAME;
    private static final java.lang.String MAPS_CLASS_NAME;
    public static final java.lang.String KEY_TREAT_UP_AS_BACK;
    private static final java.lang.String EXTRAS_CAMERA_FACING;
    private static float sPixelDensity;
    private static com.android.camera.util.CameraUtil$ImageFileNamer sImageFileNamer;
    private static int[] sLocation;

    private void <init>()
    {
        com.android.camera.util.CameraUtil r0;

        r0 := @this: com.android.camera.util.CameraUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void initialize(android.content.Context)
    {
        android.content.Context r0;
        android.util.DisplayMetrics r1, $r3;
        android.view.WindowManager r2;
        java.lang.Object $r4;
        android.view.Display $r5;
        float $f0;
        com.android.camera.util.CameraUtil$ImageFileNamer $r6;
        java.lang.String $r7;

        r0 := @parameter0: android.content.Context;

        $r3 = new android.util.DisplayMetrics;

        specialinvoke $r3.<android.util.DisplayMetrics: void <init>()>();

        r1 = $r3;

        $r4 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        r2 = (android.view.WindowManager) $r4;

        $r5 = interfaceinvoke r2.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        virtualinvoke $r5.<android.view.Display: void getMetrics(android.util.DisplayMetrics)>(r1);

        $f0 = r1.<android.util.DisplayMetrics: float density>;

        <com.android.camera.util.CameraUtil: float sPixelDensity> = $f0;

        $r6 = new com.android.camera.util.CameraUtil$ImageFileNamer;

        $r7 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int)>(2131230879);

        specialinvoke $r6.<com.android.camera.util.CameraUtil$ImageFileNamer: void <init>(java.lang.String)>($r7);

        <com.android.camera.util.CameraUtil: com.android.camera.util.CameraUtil$ImageFileNamer sImageFileNamer> = $r6;

        return;
    }

    public static int dpToPixel(int)
    {
        int i0, $i1;
        float $f0, $f1, $f2;

        i0 := @parameter0: int;

        $f1 = <com.android.camera.util.CameraUtil: float sPixelDensity>;

        $f0 = (float) i0;

        $f2 = $f1 * $f0;

        $i1 = staticinvoke <java.lang.Math: int round(float)>($f2);

        return $i1;
    }

    public static android.graphics.Bitmap rotate(android.graphics.Bitmap, int)
    {
        android.graphics.Bitmap r0, $r1;
        int i0;

        r0 := @parameter0: android.graphics.Bitmap;

        i0 := @parameter1: int;

        $r1 = staticinvoke <com.android.camera.util.CameraUtil: android.graphics.Bitmap rotateAndMirror(android.graphics.Bitmap,int,boolean)>(r0, i0, 0);

        return $r1;
    }

    public static android.graphics.Bitmap rotateAndMirror(android.graphics.Bitmap, int, boolean)
    {
        android.graphics.Bitmap r0, r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean z0;
        android.graphics.Matrix r1, $r3;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.lang.String $r7;
        java.lang.OutOfMemoryError $r9;

        r0 := @parameter0: android.graphics.Bitmap;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        if i0 != 0 goto label01;

        if z0 == 0 goto label10;

     label01:
        if r0 == null goto label10;

        $r3 = new android.graphics.Matrix;

        specialinvoke $r3.<android.graphics.Matrix: void <init>()>();

        r1 = $r3;

        if z0 == 0 goto label06;

        virtualinvoke r1.<android.graphics.Matrix: boolean postScale(float,float)>(-1.0F, 1.0F);

        $i6 = i0 + 360;

        i0 = $i6 % 360;

        if i0 == 0 goto label02;

        if i0 != 180 goto label03;

     label02:
        $i5 = virtualinvoke r0.<android.graphics.Bitmap: int getWidth()>();

        $f5 = (float) $i5;

        virtualinvoke r1.<android.graphics.Matrix: boolean postTranslate(float,float)>($f5, 0.0F);

        goto label06;

     label03:
        if i0 == 90 goto label04;

        if i0 != 270 goto label05;

     label04:
        $i7 = virtualinvoke r0.<android.graphics.Bitmap: int getHeight()>();

        $f6 = (float) $i7;

        virtualinvoke r1.<android.graphics.Matrix: boolean postTranslate(float,float)>($f6, 0.0F);

        goto label06;

     label05:
        $r4 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid degrees=");

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r4;

     label06:
        if i0 == 0 goto label07;

        $f0 = (float) i0;

        $i3 = virtualinvoke r0.<android.graphics.Bitmap: int getWidth()>();

        $f1 = (float) $i3;

        $f2 = $f1 / 2.0F;

        $i4 = virtualinvoke r0.<android.graphics.Bitmap: int getHeight()>();

        $f4 = (float) $i4;

        $f3 = $f4 / 2.0F;

        virtualinvoke r1.<android.graphics.Matrix: boolean postRotate(float,float,float)>($f0, $f2, $f3);

     label07:
        $i1 = virtualinvoke r0.<android.graphics.Bitmap: int getWidth()>();

        $i2 = virtualinvoke r0.<android.graphics.Bitmap: int getHeight()>();

        r2 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>(r0, 0, 0, $i1, $i2, r1, 1);

        if r0 == r2 goto label08;

        virtualinvoke r0.<android.graphics.Bitmap: void recycle()>();

        r0 = r2;

     label08:
        goto label10;

     label09:
        $r9 := @caughtexception;

     label10:
        return r0;

        catch java.lang.OutOfMemoryError from label07 to label08 with label09;
    }

    public static int computeSampleSize(android.graphics.BitmapFactory$Options, int, int)
    {
        android.graphics.BitmapFactory$Options r0;
        int i0, i1, i2, i3, $i4, $i5;

        r0 := @parameter0: android.graphics.BitmapFactory$Options;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = staticinvoke <com.android.camera.util.CameraUtil: int computeInitialSampleSize(android.graphics.BitmapFactory$Options,int,int)>(r0, i0, i1);

        if i2 > 8 goto label2;

        i3 = 1;

     label1:
        if i3 >= i2 goto label3;

        i3 = i3 << 1;

        goto label1;

     label2:
        $i4 = i2 + 7;

        $i5 = $i4 / 8;

        i3 = $i5 * 8;

     label3:
        return i3;
    }

    private static int computeInitialSampleSize(android.graphics.BitmapFactory$Options, int, int)
    {
        android.graphics.BitmapFactory$Options r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;

        r0 := @parameter0: android.graphics.BitmapFactory$Options;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $i4 = r0.<android.graphics.BitmapFactory$Options: int outWidth>;

        d0 = (double) $i4;

        $i5 = r0.<android.graphics.BitmapFactory$Options: int outHeight>;

        d1 = (double) $i5;

        if i1 >= 0 goto label1;

        $i7 = 1;

        goto label2;

     label1:
        $d3 = d0 * d1;

        $d2 = (double) i1;

        $d4 = $d3 / $d2;

        $d5 = staticinvoke <java.lang.Math: double sqrt(double)>($d4);

        $d6 = staticinvoke <java.lang.Math: double ceil(double)>($d5);

        $i7 = (int) $d6;

     label2:
        i2 = $i7;

        if i0 >= 0 goto label3;

        $i6 = 128;

        goto label4;

     label3:
        $d8 = (double) i0;

        $d7 = d0 / $d8;

        $d10 = staticinvoke <java.lang.Math: double floor(double)>($d7);

        $d9 = (double) i0;

        $d12 = d1 / $d9;

        $d11 = staticinvoke <java.lang.Math: double floor(double)>($d12);

        $d13 = staticinvoke <java.lang.Math: double min(double,double)>($d10, $d11);

        $i6 = (int) $d13;

     label4:
        i3 = $i6;

        if i3 >= i2 goto label5;

        return i2;

     label5:
        if i1 >= 0 goto label6;

        if i0 >= 0 goto label6;

        return 1;

     label6:
        if i0 >= 0 goto label7;

        return i2;

     label7:
        return i3;
    }

    public static android.graphics.Bitmap makeBitmap(byte[], int)
    {
        byte[] r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.graphics.BitmapFactory$Options r1, $r2;
        boolean $z0;
        android.graphics.Bitmap$Config $r4;
        android.graphics.Bitmap $r5;
        java.lang.OutOfMemoryError $r6, r8;
        com.android.camera.debug.Log$Tag $r7;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

     label1:
        $r2 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r2.<android.graphics.BitmapFactory$Options: void <init>()>();

        r1 = $r2;

        r1.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 1;

        $i1 = lengthof r0;

        staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>(r0, 0, $i1, r1);

        $z0 = r1.<android.graphics.BitmapFactory$Options: boolean mCancel>;

        if $z0 != 0 goto label2;

        $i2 = r1.<android.graphics.BitmapFactory$Options: int outWidth>;

        if $i2 == -1 goto label2;

        $i3 = r1.<android.graphics.BitmapFactory$Options: int outHeight>;

        if $i3 != -1 goto label3;

     label2:
        return null;

     label3:
        $i4 = staticinvoke <com.android.camera.util.CameraUtil: int computeSampleSize(android.graphics.BitmapFactory$Options,int,int)>(r1, -1, i0);

        r1.<android.graphics.BitmapFactory$Options: int inSampleSize> = $i4;

        r1.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 0;

        r1.<android.graphics.BitmapFactory$Options: boolean inDither> = 0;

        $r4 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r1.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap$Config inPreferredConfig> = $r4;

        $i5 = lengthof r0;

        $r5 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>(r0, 0, $i5, r1);

     label4:
        return $r5;

     label5:
        $r6 := @caughtexception;

        r8 = $r6;

        $r7 = <com.android.camera.util.CameraUtil: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void e(com.android.camera.debug.Log$Tag,java.lang.String,java.lang.Throwable)>($r7, "Got oom exception ", r8);

        return null;

        catch java.lang.OutOfMemoryError from label1 to label2 with label5;
        catch java.lang.OutOfMemoryError from label3 to label4 with label5;
    }

    public static void closeSilently(java.io.Closeable)
    {
        java.io.Closeable r0;
        java.lang.Throwable $r2;

        r0 := @parameter0: java.io.Closeable;

        if r0 != null goto label1;

        return;

     label1:
        interfaceinvoke r0.<java.io.Closeable: void close()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void Assert(boolean)
    {
        boolean z0;
        java.lang.AssertionError $r0;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label1;

        $r0 = new java.lang.AssertionError;

        specialinvoke $r0.<java.lang.AssertionError: void <init>()>();

        throw $r0;

     label1:
        return;
    }

    public static void showErrorAndFinish(android.app.Activity, int)
    {
        android.app.Activity r0;
        int i0, $i1;
        com.android.camera.util.CameraUtil$1 r1, $r3;
        android.util.TypedValue r2, $r4;
        android.content.res.Resources$Theme $r5;
        boolean $z1;
        android.app.AlertDialog$Builder $r6, $r7, $r8, $r9, $r10, $r11;

        r0 := @parameter0: android.app.Activity;

        i0 := @parameter1: int;

        $r3 = new com.android.camera.util.CameraUtil$1;

        specialinvoke $r3.<com.android.camera.util.CameraUtil$1: void <init>(android.app.Activity)>(r0);

        r1 = $r3;

        $r4 = new android.util.TypedValue;

        specialinvoke $r4.<android.util.TypedValue: void <init>()>();

        r2 = $r4;

        $r5 = virtualinvoke r0.<android.app.Activity: android.content.res.Resources$Theme getTheme()>();

        virtualinvoke $r5.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(16843605, r2, 1);

        $z1 = virtualinvoke r0.<android.app.Activity: boolean isFinishing()>();

        if $z1 != 0 goto label1;

        $r6 = new android.app.AlertDialog$Builder;

        specialinvoke $r6.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);

        $r7 = virtualinvoke $r6.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setCancelable(boolean)>(0);

        $r8 = virtualinvoke $r7.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131230769);

        $r9 = virtualinvoke $r8.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(int)>(i0);

        $r10 = virtualinvoke $r9.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener)>(2131230876, r1);

        $i1 = r2.<android.util.TypedValue: int resourceId>;

        $r11 = virtualinvoke $r10.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setIcon(int)>($i1);

        virtualinvoke $r11.<android.app.AlertDialog$Builder: android.app.AlertDialog show()>();

     label1:
        return;
    }

    public static java.lang.Object checkNotNull(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.NullPointerException $r1;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        $r1 = new java.lang.NullPointerException;

        specialinvoke $r1.<java.lang.NullPointerException: void <init>()>();

        throw $r1;

     label1:
        return r0;
    }

    public static boolean equals(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        if r0 == r1 goto label2;

        if r0 != null goto label1;

        goto label3;

     label1:
        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label3;

     label2:
        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    public static int nextPowerOf2(int)
    {
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10, i11, i12;

        i0 := @parameter0: int;

        i7 = i0 + -1;

        $i1 = i7 >>> 16;

        i8 = i7 | $i1;

        $i2 = i8 >>> 8;

        i9 = i8 | $i2;

        $i3 = i9 >>> 4;

        i10 = i9 | $i3;

        $i4 = i10 >>> 2;

        i11 = i10 | $i4;

        $i5 = i11 >>> 1;

        i12 = i11 | $i5;

        $i6 = i12 + 1;

        return $i6;
    }

    public static float distance(float, float, float, float)
    {
        float f0, f1, f2, f3, f4, f5, $f6, $f7, $f8, $f9;
        double $d0, $d1;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        f4 = f0 - f2;

        f5 = f1 - f3;

        $f7 = f4 * f4;

        $f6 = f5 * f5;

        $f8 = $f7 + $f6;

        $d0 = (double) $f8;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $f9 = (float) $d1;

        return $f9;
    }

    public static int clamp(int, int, int)
    {
        int i0, i1, i2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        if i0 <= i2 goto label1;

        return i2;

     label1:
        if i0 >= i1 goto label2;

        return i1;

     label2:
        return i0;
    }

    public static float clamp(float, float, float)
    {
        float f0, f1, f2;
        byte $b0, $b1;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $b0 = f0 cmpl f2;

        if $b0 <= 0 goto label1;

        return f2;

     label1:
        $b1 = f0 cmpg f1;

        if $b1 >= 0 goto label2;

        return f1;

     label2:
        return f0;
    }

    public static float lerp(float, float, float)
    {
        float f0, f1, f2, $f3, $f4, $f5;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $f3 = f1 - f0;

        $f4 = f2 * $f3;

        $f5 = f0 + $f4;

        return $f5;
    }

    public static android.graphics.PointF normalizedSensorCoordsForNormalizedDisplayCoords(float, float, int)
    {
        float f0, f1, $f2, $f3, $f4, $f5;
        int i0;
        android.graphics.PointF $r0, $r1, $r2, $r3;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        i0 := @parameter2: int;

        lookupswitch(i0)
        {
            case 0: goto label1;
            case 90: goto label2;
            case 180: goto label3;
            case 270: goto label4;
            default: goto label5;
        };

     label1:
        $r3 = new android.graphics.PointF;

        specialinvoke $r3.<android.graphics.PointF: void <init>(float,float)>(f0, f1);

        return $r3;

     label2:
        $r2 = new android.graphics.PointF;

        $f5 = 1.0F - f0;

        specialinvoke $r2.<android.graphics.PointF: void <init>(float,float)>(f1, $f5);

        return $r2;

     label3:
        $r1 = new android.graphics.PointF;

        $f4 = 1.0F - f0;

        $f3 = 1.0F - f1;

        specialinvoke $r1.<android.graphics.PointF: void <init>(float,float)>($f4, $f3);

        return $r1;

     label4:
        $r0 = new android.graphics.PointF;

        $f2 = 1.0F - f1;

        specialinvoke $r0.<android.graphics.PointF: void <init>(float,float)>($f2, f0);

        return $r0;

     label5:
        return null;
    }

    public static com.android.camera.util.Size constrainToAspectRatio(com.android.camera.util.Size, float)
    {
        com.android.camera.util.Size r0, $r1;
        float f0, f1, f2, f3, $f4;
        int $i0, $i1, $i4, $i5;
        byte $b2, $b3, $b6, $b7;

        r0 := @parameter0: com.android.camera.util.Size;

        f0 := @parameter1: float;

        $i0 = virtualinvoke r0.<com.android.camera.util.Size: int getWidth()>();

        f1 = (float) $i0;

        $i1 = virtualinvoke r0.<com.android.camera.util.Size: int getHeight()>();

        f2 = (float) $i1;

        $f4 = f1 * 1.0F;

        f3 = $f4 / f2;

        $b2 = f3 cmpl f0;

        if $b2 <= 0 goto label2;

        $b7 = f1 cmpl f2;

        if $b7 <= 0 goto label1;

        f1 = f2 * f0;

        goto label4;

     label1:
        f2 = f1 / f0;

        goto label4;

     label2:
        $b3 = f3 cmpg f0;

        if $b3 >= 0 goto label4;

        $b6 = f1 cmpg f2;

        if $b6 >= 0 goto label3;

        f1 = f2 * f0;

        goto label4;

     label3:
        f2 = f1 / f0;

     label4:
        $r1 = new com.android.camera.util.Size;

        $i5 = (int) f1;

        $i4 = (int) f2;

        specialinvoke $r1.<com.android.camera.util.Size: void <init>(int,int)>($i5, $i4);

        return $r1;
    }

    public static int getDisplayRotation(android.content.Context)
    {
        android.content.Context r0;
        android.view.WindowManager r1;
        int i0;
        java.lang.Object $r2;
        android.view.Display $r3;

        r0 := @parameter0: android.content.Context;

        $r2 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        r1 = (android.view.WindowManager) $r2;

        $r3 = interfaceinvoke r1.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        i0 = virtualinvoke $r3.<android.view.Display: int getRotation()>();

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label5;
        };

     label1:
        return 0;

     label2:
        return 90;

     label3:
        return 180;

     label4:
        return 270;

     label5:
        return 0;
    }

    public static boolean isDefaultToPortrait(android.content.Context)
    {
        android.content.Context r0;
        android.view.Display r1;
        android.graphics.Point r2, $r5;
        int i0, i1, i2;
        java.lang.Object $r3;
        android.view.WindowManager $r4;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        $r3 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r4 = (android.view.WindowManager) $r3;

        r1 = interfaceinvoke $r4.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        $r5 = new android.graphics.Point;

        specialinvoke $r5.<android.graphics.Point: void <init>()>();

        r2 = $r5;

        virtualinvoke r1.<android.view.Display: void getSize(android.graphics.Point)>(r2);

        i0 = virtualinvoke r1.<android.view.Display: int getRotation()>();

        if i0 == 0 goto label1;

        if i0 != 2 goto label2;

     label1:
        i1 = r2.<android.graphics.Point: int x>;

        i2 = r2.<android.graphics.Point: int y>;

        goto label3;

     label2:
        i1 = r2.<android.graphics.Point: int y>;

        i2 = r2.<android.graphics.Point: int x>;

     label3:
        if i1 >= i2 goto label4;

        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        return $z0;
    }

    public static int roundOrientation(int, int)
    {
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        boolean $z1, z2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 != -1 goto label1;

        z2 = 1;

        goto label4;

     label1:
        $i3 = i0 - i1;

        i2 = staticinvoke <java.lang.Math: int abs(int)>($i3);

        $i4 = 360 - i2;

        i9 = staticinvoke <java.lang.Math: int min(int,int)>(i2, $i4);

        if i9 < 50 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        z2 = $z1;

     label4:
        if z2 == 0 goto label5;

        $i5 = i0 + 45;

        $i6 = $i5 / 90;

        $i7 = $i6 * 90;

        $i8 = $i7 % 360;

        return $i8;

     label5:
        return i1;
    }

    private static com.android.camera.util.Size getDefaultDisplaySize(android.content.Context)
    {
        android.content.Context r0;
        android.view.WindowManager r1;
        android.graphics.Point r2, $r4;
        java.lang.Object $r3;
        android.view.Display $r5;
        com.android.camera.util.Size $r6;

        r0 := @parameter0: android.content.Context;

        $r3 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        r1 = (android.view.WindowManager) $r3;

        $r4 = new android.graphics.Point;

        specialinvoke $r4.<android.graphics.Point: void <init>()>();

        r2 = $r4;

        $r5 = interfaceinvoke r1.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        virtualinvoke $r5.<android.view.Display: void getSize(android.graphics.Point)>(r2);

        $r6 = new com.android.camera.util.Size;

        specialinvoke $r6.<com.android.camera.util.Size: void <init>(android.graphics.Point)>(r2);

        return $r6;
    }

    public static com.android.ex.camera2.portability.Size getOptimalPreviewSize(android.content.Context, java.util.List, double)
    {
        android.content.Context r0;
        java.util.List r1, $r2;
        double d0;
        int i0;
        java.lang.Object $r3;
        com.android.ex.camera2.portability.Size $r4;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.util.List;

        d0 := @parameter2: double;

        $r2 = staticinvoke <com.android.camera.util.Size: java.util.List convert(java.util.List)>(r1);

        i0 = staticinvoke <com.android.camera.util.CameraUtil: int getOptimalPreviewSizeIndex(android.content.Context,java.util.List,double)>(r0, $r2, d0);

        if i0 != -1 goto label1;

        return null;

     label1:
        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r4 = (com.android.ex.camera2.portability.Size) $r3;

        return $r4;
    }

    public static int getOptimalPreviewSizeIndex(android.content.Context, java.util.List, double)
    {
        android.content.Context r0;
        java.util.List r1;
        double d0, d2, d3, d4, $d5, $d6, $d7, $d8, $d9, d10;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i19, $i20, i23;
        com.android.camera.util.Size r2, r3, r7;
        com.android.camera.debug.Log$Tag $r4;
        java.lang.Object $r5, $r6;
        byte $b10, $b18, $b21, $b22;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.util.List;

        d0 := @parameter2: double;

        if r1 != null goto label1;

        return -1;

     label1:
        i0 = -1;

        d2 = 1.7976931348623157E308;

        r2 = staticinvoke <com.android.camera.util.CameraUtil: com.android.camera.util.Size getDefaultDisplaySize(android.content.Context)>(r0);

        $i4 = virtualinvoke r2.<com.android.camera.util.Size: int getWidth()>();

        $i3 = virtualinvoke r2.<com.android.camera.util.Size: int getHeight()>();

        i1 = staticinvoke <java.lang.Math: int min(int,int)>($i4, $i3);

        i2 = 0;

     label2:
        $i5 = interfaceinvoke r1.<java.util.List: int size()>();

        if i2 >= $i5 goto label6;

        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i2);

        r3 = (com.android.camera.util.Size) $r6;

        $i13 = virtualinvoke r3.<com.android.camera.util.Size: int getWidth()>();

        $d6 = (double) $i13;

        $i15 = virtualinvoke r3.<com.android.camera.util.Size: int getHeight()>();

        $d9 = (double) $i15;

        d3 = $d6 / $d9;

        $d7 = d3 - d0;

        $d8 = staticinvoke <java.lang.Math: double abs(double)>($d7);

        $b18 = $d8 cmpl 0.01;

        if $b18 <= 0 goto label3;

        goto label5;

     label3:
        $i19 = virtualinvoke r3.<com.android.camera.util.Size: int getHeight()>();

        $i16 = $i19 - i1;

        $i17 = staticinvoke <java.lang.Math: int abs(int)>($i16);

        d4 = (double) $i17;

        $b21 = d4 cmpg d2;

        if $b21 >= 0 goto label4;

        i0 = i2;

        d2 = d4;

        goto label5;

     label4:
        $b22 = d4 cmpl d2;

        if $b22 != 0 goto label5;

        $i20 = virtualinvoke r3.<com.android.camera.util.Size: int getHeight()>();

        if $i20 >= i1 goto label5;

        i0 = i2;

        d2 = d4;

     label5:
        i2 = i2 + 1;

        goto label2;

     label6:
        if i0 != -1 goto label9;

        $r4 = <com.android.camera.util.CameraUtil: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void w(com.android.camera.debug.Log$Tag,java.lang.String)>($r4, "No preview size match the aspect ratio");

        d10 = 1.7976931348623157E308;

        i23 = 0;

     label7:
        $i6 = interfaceinvoke r1.<java.util.List: int size()>();

        if i23 >= $i6 goto label9;

        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i23);

        r7 = (com.android.camera.util.Size) $r5;

        $i7 = virtualinvoke r7.<com.android.camera.util.Size: int getHeight()>();

        $i9 = $i7 - i1;

        $i8 = staticinvoke <java.lang.Math: int abs(int)>($i9);

        $d5 = (double) $i8;

        $b10 = $d5 cmpg d10;

        if $b10 >= 0 goto label8;

        i0 = i23;

        $i12 = virtualinvoke r7.<com.android.camera.util.Size: int getHeight()>();

        $i11 = $i12 - i1;

        $i14 = staticinvoke <java.lang.Math: int abs(int)>($i11);

        d10 = (double) $i14;

     label8:
        i23 = i23 + 1;

        goto label7;

     label9:
        return i0;
    }

    public static com.android.ex.camera2.portability.Size getOptimalVideoSnapshotPictureSize(java.util.List, double)
    {
        java.util.List r0;
        double d0, d2, $d3, $d4, $d5, $d6;
        com.android.ex.camera2.portability.Size r1, r3, r8;
        java.util.Iterator r2, r7;
        boolean $z0, $z1;
        com.android.camera.debug.Log$Tag $r4;
        java.lang.Object $r5, $r6;
        int $i0, $i1, $i2, $i3, $i5, $i6;
        byte $b4;

        r0 := @parameter0: java.util.List;

        d0 := @parameter1: double;

        if r0 != null goto label01;

        return null;

     label01:
        r1 = null;

        r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.ex.camera2.portability.Size) $r6;

        $i2 = virtualinvoke r3.<com.android.ex.camera2.portability.Size: int width()>();

        $d3 = (double) $i2;

        $i3 = virtualinvoke r3.<com.android.ex.camera2.portability.Size: int height()>();

        $d5 = (double) $i3;

        d2 = $d3 / $d5;

        $d4 = d2 - d0;

        $d6 = staticinvoke <java.lang.Math: double abs(double)>($d4);

        $b4 = $d6 cmpl 0.001;

        if $b4 <= 0 goto label03;

        goto label02;

     label03:
        if r1 == null goto label04;

        $i6 = virtualinvoke r3.<com.android.ex.camera2.portability.Size: int width()>();

        $i5 = virtualinvoke r1.<com.android.ex.camera2.portability.Size: int width()>();

        if $i6 <= $i5 goto label05;

     label04:
        r1 = r3;

     label05:
        goto label02;

     label06:
        if r1 != null goto label10;

        $r4 = <com.android.camera.util.CameraUtil: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void w(com.android.camera.debug.Log$Tag,java.lang.String)>($r4, "No picture size match the aspect ratio");

        r7 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z1 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r5 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.android.ex.camera2.portability.Size) $r5;

        if r1 == null goto label08;

        $i1 = virtualinvoke r8.<com.android.ex.camera2.portability.Size: int width()>();

        $i0 = virtualinvoke r1.<com.android.ex.camera2.portability.Size: int width()>();

        if $i1 <= $i0 goto label09;

     label08:
        r1 = r8;

     label09:
        goto label07;

     label10:
        return r1;
    }

    public static boolean isMmsCapable(android.content.Context)
    {
        android.content.Context r0;
        android.telephony.TelephonyManager r1;
        java.lang.Class[] r2;
        java.lang.reflect.Method r3;
        java.lang.Object[] r4;
        java.lang.Object r5, $r6;
        java.lang.Class $r7;
        java.lang.Boolean $r8;
        boolean $z0;
        java.lang.IllegalAccessException $r9;
        java.lang.reflect.InvocationTargetException $r10;
        java.lang.NoSuchMethodException $r11;

        r0 := @parameter0: android.content.Context;

        $r6 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("phone");

        r1 = (android.telephony.TelephonyManager) $r6;

        if r1 != null goto label1;

        return 0;

     label1:
        r2 = newarray (java.lang.Class)[0];

        $r7 = class "android/telephony/TelephonyManager";

        r3 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("isVoiceCapable", r2);

        r4 = newarray (java.lang.Object)[0];

        r5 = virtualinvoke r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, r4);

        $r8 = (java.lang.Boolean) r5;

        $z0 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

     label2:
        return $z0;

     label3:
        $r10 := @caughtexception;

        goto label6;

     label4:
        $r9 := @caughtexception;

        goto label6;

     label5:
        $r11 := @caughtexception;

     label6:
        return 1;

        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
        catch java.lang.IllegalAccessException from label1 to label2 with label4;
        catch java.lang.NoSuchMethodException from label1 to label2 with label5;
    }

    public static int getCameraFacingIntentExtras(android.app.Activity)
    {
        android.app.Activity r0;
        int i0, i1, i2, i3;
        android.content.Intent $r1;
        boolean $z0, $z1;
        com.android.camera.CameraActivity $r2, $r4;
        com.android.camera.app.CameraProvider $r3, $r5;

        r0 := @parameter0: android.app.Activity;

        i0 = -1;

        $r1 = virtualinvoke r0.<android.app.Activity: android.content.Intent getIntent()>();

        i1 = virtualinvoke $r1.<android.content.Intent: int getIntExtra(java.lang.String,int)>("android.intent.extras.CAMERA_FACING", -1);

        $z0 = staticinvoke <com.android.camera.util.CameraUtil: boolean isFrontCameraIntent(int)>(i1);

        if $z0 == 0 goto label2;

        $r4 = (com.android.camera.CameraActivity) r0;

        $r5 = virtualinvoke $r4.<com.android.camera.CameraActivity: com.android.camera.app.CameraProvider getCameraProvider()>();

        i2 = interfaceinvoke $r5.<com.android.camera.app.CameraProvider: int getFirstFrontCameraId()>();

        if i2 == -1 goto label1;

        i0 = i2;

     label1:
        goto label3;

     label2:
        $z1 = staticinvoke <com.android.camera.util.CameraUtil: boolean isBackCameraIntent(int)>(i1);

        if $z1 == 0 goto label3;

        $r2 = (com.android.camera.CameraActivity) r0;

        $r3 = virtualinvoke $r2.<com.android.camera.CameraActivity: com.android.camera.app.CameraProvider getCameraProvider()>();

        i3 = interfaceinvoke $r3.<com.android.camera.app.CameraProvider: int getFirstBackCameraId()>();

        if i3 == -1 goto label3;

        i0 = i3;

     label3:
        return i0;
    }

    private static boolean isFrontCameraIntent(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static boolean isBackCameraIntent(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean pointInView(float, float, android.view.View)
    {
        float f0, f1, $f2, $f3, $f4, $f5;
        android.view.View r0;
        int[] $r1, $r2, $r3, $r4, $r5;
        int $i0, $i2, $i3, $i4, $i6, $i8, $i9, $i10;
        byte $b1, $b5, $b7, $b11;
        boolean $z0;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r0 := @parameter2: android.view.View;

        $r1 = <com.android.camera.util.CameraUtil: int[] sLocation>;

        virtualinvoke r0.<android.view.View: void getLocationInWindow(int[])>($r1);

        $r2 = <com.android.camera.util.CameraUtil: int[] sLocation>;

        $i0 = $r2[0];

        $f2 = (float) $i0;

        $b1 = f0 cmpl $f2;

        if $b1 < 0 goto label1;

        $r3 = <com.android.camera.util.CameraUtil: int[] sLocation>;

        $i2 = $r3[0];

        $i3 = virtualinvoke r0.<android.view.View: int getWidth()>();

        $i4 = $i2 + $i3;

        $f3 = (float) $i4;

        $b5 = f0 cmpg $f3;

        if $b5 >= 0 goto label1;

        $r4 = <com.android.camera.util.CameraUtil: int[] sLocation>;

        $i6 = $r4[1];

        $f4 = (float) $i6;

        $b7 = f1 cmpl $f4;

        if $b7 < 0 goto label1;

        $r5 = <com.android.camera.util.CameraUtil: int[] sLocation>;

        $i8 = $r5[1];

        $i10 = virtualinvoke r0.<android.view.View: int getHeight()>();

        $i9 = $i8 + $i10;

        $f5 = (float) $i9;

        $b11 = f1 cmpg $f5;

        if $b11 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static int[] getRelativeLocation(android.view.View, android.view.View)
    {
        android.view.View r0, r1;
        int i0, i1, $i2, $i3, $i4, $i5;
        int[] $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: android.view.View;

        $r2 = <com.android.camera.util.CameraUtil: int[] sLocation>;

        virtualinvoke r0.<android.view.View: void getLocationInWindow(int[])>($r2);

        $r3 = <com.android.camera.util.CameraUtil: int[] sLocation>;

        i0 = $r3[0];

        $r4 = <com.android.camera.util.CameraUtil: int[] sLocation>;

        i1 = $r4[1];

        $r5 = <com.android.camera.util.CameraUtil: int[] sLocation>;

        virtualinvoke r1.<android.view.View: void getLocationInWindow(int[])>($r5);

        $r6 = <com.android.camera.util.CameraUtil: int[] sLocation>;

        $i2 = $r6[0];

        $i3 = $i2 - i0;

        $r6[0] = $i3;

        $r7 = <com.android.camera.util.CameraUtil: int[] sLocation>;

        $i4 = $r7[1];

        $i5 = $i4 - i1;

        $r7[1] = $i5;

        $r8 = <com.android.camera.util.CameraUtil: int[] sLocation>;

        return $r8;
    }

    public static boolean isUriValid(android.net.Uri, android.content.ContentResolver)
    {
        android.net.Uri r0;
        android.content.ContentResolver r1;
        android.os.ParcelFileDescriptor r2;
        java.lang.StringBuilder $r3, $r5, $r6;
        com.android.camera.debug.Log$Tag $r4;
        java.lang.String $r7;
        java.io.IOException $r8;

        r0 := @parameter0: android.net.Uri;

        r1 := @parameter1: android.content.ContentResolver;

        if r0 != null goto label1;

        return 0;

     label1:
        r2 = virtualinvoke r1.<android.content.ContentResolver: android.os.ParcelFileDescriptor openFileDescriptor(android.net.Uri,java.lang.String)>(r0, "r");

        if r2 != null goto label3;

        $r4 = <com.android.camera.util.CameraUtil: com.android.camera.debug.Log$Tag TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fail to open URI. URI=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void e(com.android.camera.debug.Log$Tag,java.lang.String)>($r4, $r7);

     label2:
        return 0;

     label3:
        virtualinvoke r2.<android.os.ParcelFileDescriptor: void close()>();

     label4:
        goto label6;

     label5:
        $r8 := @caughtexception;

        return 0;

     label6:
        return 1;

        catch java.io.IOException from label1 to label2 with label5;
        catch java.io.IOException from label3 to label4 with label5;
    }

    public static void dumpRect(android.graphics.RectF, java.lang.String)
    {
        android.graphics.RectF r0;
        java.lang.String r1, $r14;
        java.lang.StringBuilder $r2, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        com.android.camera.debug.Log$Tag $r3;
        float $f0, $f1, $f2, $f3;

        r0 := @parameter0: android.graphics.RectF;

        r1 := @parameter1: java.lang.String;

        $r3 = <com.android.camera.util.CameraUtil: com.android.camera.debug.Log$Tag TAG>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=(");

        $f0 = r0.<android.graphics.RectF: float left>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $f1 = r0.<android.graphics.RectF: float top>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $f2 = r0.<android.graphics.RectF: float right>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $f3 = r0.<android.graphics.RectF: float bottom>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void v(com.android.camera.debug.Log$Tag,java.lang.String)>($r3, $r14);

        return;
    }

    public static void rectFToRect(android.graphics.RectF, android.graphics.Rect)
    {
        android.graphics.RectF r0;
        android.graphics.Rect r1;
        float $f0, $f1, $f2, $f3;
        int $i0, $i1, $i2, $i3;

        r0 := @parameter0: android.graphics.RectF;

        r1 := @parameter1: android.graphics.Rect;

        $f0 = r0.<android.graphics.RectF: float left>;

        $i0 = staticinvoke <java.lang.Math: int round(float)>($f0);

        r1.<android.graphics.Rect: int left> = $i0;

        $f1 = r0.<android.graphics.RectF: float top>;

        $i1 = staticinvoke <java.lang.Math: int round(float)>($f1);

        r1.<android.graphics.Rect: int top> = $i1;

        $f2 = r0.<android.graphics.RectF: float right>;

        $i2 = staticinvoke <java.lang.Math: int round(float)>($f2);

        r1.<android.graphics.Rect: int right> = $i2;

        $f3 = r0.<android.graphics.RectF: float bottom>;

        $i3 = staticinvoke <java.lang.Math: int round(float)>($f3);

        r1.<android.graphics.Rect: int bottom> = $i3;

        return;
    }

    public static android.graphics.Rect rectFToRect(android.graphics.RectF)
    {
        android.graphics.RectF r0;
        android.graphics.Rect r1, $r2;

        r0 := @parameter0: android.graphics.RectF;

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r1 = $r2;

        staticinvoke <com.android.camera.util.CameraUtil: void rectFToRect(android.graphics.RectF,android.graphics.Rect)>(r0, r1);

        return r1;
    }

    public static android.graphics.RectF rectToRectF(android.graphics.Rect)
    {
        android.graphics.Rect r0;
        android.graphics.RectF $r1;
        int $i0, $i1, $i2, $i3;
        float $f0, $f1, $f2, $f3;

        r0 := @parameter0: android.graphics.Rect;

        $r1 = new android.graphics.RectF;

        $i0 = r0.<android.graphics.Rect: int left>;

        $f3 = (float) $i0;

        $i1 = r0.<android.graphics.Rect: int top>;

        $f2 = (float) $i1;

        $i2 = r0.<android.graphics.Rect: int right>;

        $f1 = (float) $i2;

        $i3 = r0.<android.graphics.Rect: int bottom>;

        $f0 = (float) $i3;

        specialinvoke $r1.<android.graphics.RectF: void <init>(float,float,float,float)>($f3, $f2, $f1, $f0);

        return $r1;
    }

    public static void prepareMatrix(android.graphics.Matrix, boolean, int, int, int)
    {
        android.graphics.Matrix r0;
        boolean z0;
        int i0, i1, i2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;

        r0 := @parameter0: android.graphics.Matrix;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        if z0 == 0 goto label1;

        $f9 = -1.0F;

        goto label2;

     label1:
        $f9 = 1.0F;

     label2:
        virtualinvoke r0.<android.graphics.Matrix: void setScale(float,float)>($f9, 1.0F);

        $f0 = (float) i0;

        virtualinvoke r0.<android.graphics.Matrix: boolean postRotate(float)>($f0);

        $f1 = (float) i1;

        $f4 = $f1 / 2000.0F;

        $f2 = (float) i2;

        $f3 = $f2 / 2000.0F;

        virtualinvoke r0.<android.graphics.Matrix: boolean postScale(float,float)>($f4, $f3);

        $f5 = (float) i1;

        $f8 = $f5 / 2.0F;

        $f6 = (float) i2;

        $f7 = $f6 / 2.0F;

        virtualinvoke r0.<android.graphics.Matrix: boolean postTranslate(float,float)>($f8, $f7);

        return;
    }

    public static void prepareMatrix(android.graphics.Matrix, boolean, int, android.graphics.Rect)
    {
        android.graphics.Matrix r0, r2, $r3;
        boolean z0;
        int i0;
        android.graphics.Rect r1;
        float $f0, $f1;
        android.graphics.RectF $r4, $r5;
        android.graphics.Matrix$ScaleToFit $r6;

        r0 := @parameter0: android.graphics.Matrix;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        r1 := @parameter3: android.graphics.Rect;

        if z0 == 0 goto label1;

        $f1 = -1.0F;

        goto label2;

     label1:
        $f1 = 1.0F;

     label2:
        virtualinvoke r0.<android.graphics.Matrix: void setScale(float,float)>($f1, 1.0F);

        $f0 = (float) i0;

        virtualinvoke r0.<android.graphics.Matrix: boolean postRotate(float)>($f0);

        $r3 = new android.graphics.Matrix;

        specialinvoke $r3.<android.graphics.Matrix: void <init>()>();

        r2 = $r3;

        $r4 = new android.graphics.RectF;

        specialinvoke $r4.<android.graphics.RectF: void <init>(float,float,float,float)>(-1000.0F, -1000.0F, 1000.0F, 1000.0F);

        $r5 = staticinvoke <com.android.camera.util.CameraUtil: android.graphics.RectF rectToRectF(android.graphics.Rect)>(r1);

        $r6 = <android.graphics.Matrix$ScaleToFit: android.graphics.Matrix$ScaleToFit FILL>;

        virtualinvoke r2.<android.graphics.Matrix: boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix$ScaleToFit)>($r4, $r5, $r6);

        virtualinvoke r0.<android.graphics.Matrix: boolean setConcat(android.graphics.Matrix,android.graphics.Matrix)>(r2, r0);

        return;
    }

    public static java.lang.String createJpegName(long)
    {
        long l0;
        com.android.camera.util.CameraUtil$ImageFileNamer r0, $r2, $r3;
        java.lang.Throwable r1, $r5;
        java.lang.String $r4;

        l0 := @parameter0: long;

        $r2 = <com.android.camera.util.CameraUtil: com.android.camera.util.CameraUtil$ImageFileNamer sImageFileNamer>;

        r0 = $r2;

        entermonitor $r2;

     label1:
        $r3 = <com.android.camera.util.CameraUtil: com.android.camera.util.CameraUtil$ImageFileNamer sImageFileNamer>;

        $r4 = virtualinvoke $r3.<com.android.camera.util.CameraUtil$ImageFileNamer: java.lang.String generateName(long)>(l0);

        exitmonitor r0;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r1 = $r5;

        exitmonitor r0;

     label4:
        throw r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static void broadcastNewPicture(android.content.Context, android.net.Uri)
    {
        android.content.Context r0;
        android.net.Uri r1;
        android.content.Intent $r2, $r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.net.Uri;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.hardware.action.NEW_PICTURE", r1);

        virtualinvoke r0.<android.content.Context: void sendBroadcast(android.content.Intent)>($r2);

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("com.android.camera.NEW_PICTURE", r1);

        virtualinvoke r0.<android.content.Context: void sendBroadcast(android.content.Intent)>($r3);

        return;
    }

    public static void fadeIn(android.view.View, float, float, long)
    {
        android.view.View r0;
        float f0, f1;
        long l0;
        android.view.animation.AlphaAnimation r1, $r2;
        int $i1;

        r0 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        l0 := @parameter3: long;

        $i1 = virtualinvoke r0.<android.view.View: int getVisibility()>();

        if $i1 != 0 goto label1;

        return;

     label1:
        virtualinvoke r0.<android.view.View: void setVisibility(int)>(0);

        $r2 = new android.view.animation.AlphaAnimation;

        specialinvoke $r2.<android.view.animation.AlphaAnimation: void <init>(float,float)>(f0, f1);

        r1 = $r2;

        virtualinvoke r1.<android.view.animation.Animation: void setDuration(long)>(l0);

        virtualinvoke r0.<android.view.View: void startAnimation(android.view.animation.Animation)>(r1);

        return;
    }

    public static android.graphics.Bitmap downSample(byte[], int)
    {
        byte[] r0;
        int i0, $i1;
        android.graphics.BitmapFactory$Options r1, $r2;
        android.graphics.Bitmap $r3;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $r2 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r2.<android.graphics.BitmapFactory$Options: void <init>()>();

        r1 = $r2;

        r1.<android.graphics.BitmapFactory$Options: int inSampleSize> = i0;

        $i1 = lengthof r0;

        $r3 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>(r0, 0, $i1, r1);

        return $r3;
    }

    public static void setGpsParameters(com.android.ex.camera2.portability.CameraSettings, android.location.Location)
    {
        com.android.ex.camera2.portability.CameraSettings r0;
        android.location.Location r1;
        boolean z0, $z1, $z2;
        double d0, d1, $d2, $d3, $d4;
        long l0, $l1, $l3, $l4, $l5;
        com.android.camera.debug.Log$Tag $r2;
        com.android.ex.camera2.portability.CameraSettings$GpsData $r3, $r6;
        byte $b2, $b6, $b7;
        java.lang.String $r4, $r5;

        r0 := @parameter0: com.android.ex.camera2.portability.CameraSettings;

        r1 := @parameter1: android.location.Location;

        virtualinvoke r0.<com.android.ex.camera2.portability.CameraSettings: void clearGpsData()>();

        z0 = 0;

        if r1 == null goto label04;

        d0 = virtualinvoke r1.<android.location.Location: double getLatitude()>();

        d1 = virtualinvoke r1.<android.location.Location: double getLongitude()>();

        $b6 = d0 cmpl 0.0;

        if $b6 != 0 goto label01;

        $b7 = d1 cmpl 0.0;

        if $b7 == 0 goto label02;

     label01:
        $z2 = 1;

        goto label03;

     label02:
        $z2 = 0;

     label03:
        z0 = $z2;

     label04:
        if z0 != 0 goto label05;

        $r6 = new com.android.ex.camera2.portability.CameraSettings$GpsData;

        $l4 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l5 = $l4 / 1000L;

        specialinvoke $r6.<com.android.ex.camera2.portability.CameraSettings$GpsData: void <init>(double,double,double,long,java.lang.String)>(0.0, 0.0, 0.0, $l5, null);

        virtualinvoke r0.<com.android.ex.camera2.portability.CameraSettings: void setGpsData(com.android.ex.camera2.portability.CameraSettings$GpsData)>($r6);

        goto label10;

     label05:
        $r2 = <com.android.camera.util.CameraUtil: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void d(com.android.camera.debug.Log$Tag,java.lang.String)>($r2, "Set gps location");

        $l1 = virtualinvoke r1.<android.location.Location: long getTime()>();

        l0 = $l1 / 1000L;

        $r3 = new com.android.ex.camera2.portability.CameraSettings$GpsData;

        $d2 = virtualinvoke r1.<android.location.Location: double getLatitude()>();

        $d3 = virtualinvoke r1.<android.location.Location: double getLongitude()>();

        $z1 = virtualinvoke r1.<android.location.Location: boolean hasAltitude()>();

        if $z1 == 0 goto label06;

        $d4 = virtualinvoke r1.<android.location.Location: double getAltitude()>();

        goto label07;

     label06:
        $d4 = 0.0;

     label07:
        $b2 = l0 cmp 0L;

        if $b2 == 0 goto label08;

        $l3 = l0;

        goto label09;

     label08:
        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label09:
        $r5 = virtualinvoke r1.<android.location.Location: java.lang.String getProvider()>();

        $r4 = virtualinvoke $r5.<java.lang.String: java.lang.String toUpperCase()>();

        specialinvoke $r3.<com.android.ex.camera2.portability.CameraSettings$GpsData: void <init>(double,double,double,long,java.lang.String)>($d2, $d3, $d4, $l3, $r4);

        virtualinvoke r0.<com.android.ex.camera2.portability.CameraSettings: void setGpsData(com.android.ex.camera2.portability.CameraSettings$GpsData)>($r3);

     label10:
        return;
    }

    public static int[] getPhotoPreviewFpsRange(com.android.ex.camera2.portability.CameraCapabilities)
    {
        com.android.ex.camera2.portability.CameraCapabilities r0;
        java.util.List $r1;
        int[] $r2;

        r0 := @parameter0: com.android.ex.camera2.portability.CameraCapabilities;

        $r1 = virtualinvoke r0.<com.android.ex.camera2.portability.CameraCapabilities: java.util.List getSupportedPreviewFpsRange()>();

        $r2 = staticinvoke <com.android.camera.util.CameraUtil: int[] getPhotoPreviewFpsRange(java.util.List)>($r1);

        return $r2;
    }

    public static int[] getPhotoPreviewFpsRange(java.util.List)
    {
        java.util.List r0;
        int i0, i1, i2, i3, i4, $i5, $i6, i7, i8, i9;
        java.util.Iterator r1;
        int[] r2, $r5, r9;
        boolean $z0;
        com.android.camera.debug.Log$Tag $r3, $r7;
        java.lang.Object $r4, $r6, $r8;

        r0 := @parameter0: java.util.List;

        $i5 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i5 != 0 goto label1;

        $r7 = <com.android.camera.util.CameraUtil: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void e(com.android.camera.debug.Log$Tag,java.lang.String)>($r7, "No suppoted frame rates returned!");

        return null;

     label1:
        i0 = 400000;

        r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (int[]) $r8;

        i1 = r2[0];

        i2 = r2[1];

        if i2 < 30000 goto label3;

        if i1 > 30000 goto label3;

        if i1 >= i0 goto label3;

        i0 = i1;

     label3:
        goto label2;

     label4:
        i7 = -1;

        i8 = 0;

        i9 = 0;

     label5:
        $i6 = interfaceinvoke r0.<java.util.List: int size()>();

        if i9 >= $i6 goto label7;

        $r6 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i9);

        r9 = (int[]) $r6;

        i3 = r9[0];

        i4 = r9[1];

        if i3 != i0 goto label6;

        if i8 >= i4 goto label6;

        i8 = i4;

        i7 = i9;

     label6:
        i9 = i9 + 1;

        goto label5;

     label7:
        if i7 < 0 goto label8;

        $r4 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i7);

        $r5 = (int[]) $r4;

        return $r5;

     label8:
        $r3 = <com.android.camera.util.CameraUtil: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void e(com.android.camera.debug.Log$Tag,java.lang.String)>($r3, "Can\'t find an appropiate frame rate range!");

        return null;
    }

    public static int[] getMaxPreviewFpsRange(java.util.List)
    {
        java.util.List r0;
        int[] $r1, $r3;
        int $i0, $i1, $i2;
        java.lang.Object $r2;

        r0 := @parameter0: java.util.List;

        if r0 == null goto label1;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        if $i0 <= 0 goto label1;

        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        $i2 = $i1 - 1;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>($i2);

        $r3 = (int[]) $r2;

        return $r3;

     label1:
        $r1 = newarray (int)[0];

        return $r1;
    }

    public static void throwIfCameraDisabled(android.content.Context) throws com.android.camera.CameraDisabledException
    {
        android.content.Context r0;
        android.app.admin.DevicePolicyManager r1;
        java.lang.Object $r2;
        boolean $z0;
        com.android.camera.CameraDisabledException $r3;

        r0 := @parameter0: android.content.Context;

        $r2 = virtualinvoke r0.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("device_policy");

        r1 = (android.app.admin.DevicePolicyManager) $r2;

        $z0 = virtualinvoke r1.<android.app.admin.DevicePolicyManager: boolean getCameraDisabled(android.content.ComponentName)>(null);

        if $z0 == 0 goto label1;

        $r3 = new com.android.camera.CameraDisabledException;

        specialinvoke $r3.<com.android.camera.CameraDisabledException: void <init>()>();

        throw $r3;

     label1:
        return;
    }

    private static void getGaussianMask(float[])
    {
        float[] r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;

        r0 := @parameter0: float[];

        i0 = lengthof r0;

        i1 = i0 / 2;

        f0 = (float) i0;

        f1 = 0.0F;

        i2 = 0;

     label1:
        if i2 > i1 goto label3;

        $i5 = i2 - i1;

        $i7 = neg $i5;

        $i6 = i2 - i1;

        $i9 = $i7 * $i6;

        $i8 = i1 * i1;

        $i10 = $i9 / $i8;

        $f5 = (float) $i10;

        $f7 = staticinvoke <android.util.FloatMath: float exp(float)>($f5);

        $f6 = 2.0F * f0;

        $f8 = $f6 * f0;

        f2 = $f7 / $f8;

        $i11 = i0 - 1;

        i3 = $i11 - i2;

        r0[i2] = f2;

        r0[i3] = f2;

        $f10 = r0[i2];

        f1 = f1 + $f10;

        if i2 == i3 goto label2;

        $f9 = r0[i3];

        f1 = f1 + $f9;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        i12 = 0;

     label4:
        $i4 = lengthof r0;

        if i12 >= $i4 goto label5;

        $f3 = r0[i12];

        $f4 = $f3 / f1;

        r0[i12] = $f4;

        i12 = i12 + 1;

        goto label4;

     label5:
        return;
    }

    public static int addPixel(int, int, float)
    {
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        f0 := @parameter2: float;

        $i7 = i0 & 16711680;

        $i5 = i1 & 16711680;

        $f1 = (float) $i5;

        $f2 = $f1 * f0;

        $i6 = (int) $f2;

        $i8 = $i7 + $i6;

        i2 = $i8 & 16711680;

        $i12 = i0 & 65280;

        $i9 = i1 & 65280;

        $f3 = (float) $i9;

        $f4 = $f3 * f0;

        $i10 = (int) $f4;

        $i11 = $i12 + $i10;

        i3 = $i11 & 65280;

        $i16 = i0 & 255;

        $i13 = i1 & 255;

        $f5 = (float) $i13;

        $f6 = $f5 * f0;

        $i14 = (int) $f6;

        $i15 = $i16 + $i14;

        i4 = $i15 & 255;

        $i18 = -16777216 | i2;

        $i17 = $i18 | i3;

        $i19 = $i17 | i4;

        return $i19;
    }

    public static void blur(int[], int[], int, int, int)
    {
        int[] r0, r1, r3;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, i25, i26, i27, i28, i29, i30, i31;
        float[] r2;
        float $f0, $f1;

        r0 := @parameter0: int[];

        r1 := @parameter1: int[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r2 = newarray (float)[i2];

        i3 = i2 / 2;

        staticinvoke <com.android.camera.util.CameraUtil: void getGaussianMask(float[])>(r2);

        $i10 = lengthof r0;

        r3 = newarray (int)[$i10];

        i4 = 0;

        i5 = 0;

     label01:
        if i5 >= i1 goto label06;

        i6 = 0;

     label02:
        if i6 >= i0 goto label05;

        i7 = 0;

        i8 = 0;

     label03:
        $i18 = lengthof r2;

        if i8 >= $i18 goto label04;

        $i19 = i6 + i8;

        i9 = $i19 - i3;

        $i21 = i0 - 1;

        i24 = staticinvoke <com.android.camera.util.CameraUtil: int clamp(int,int,int)>(i9, 0, $i21);

        $i22 = i4 + i24;

        $i23 = r0[$i22];

        $f1 = r2[i8];

        i7 = staticinvoke <com.android.camera.util.CameraUtil: int addPixel(int,int,float)>(i7, $i23, $f1);

        i8 = i8 + 1;

        goto label03;

     label04:
        $i20 = i6 + i4;

        r3[$i20] = i7;

        i6 = i6 + 1;

        goto label02;

     label05:
        i4 = i4 + i0;

        i5 = i5 + 1;

        goto label01;

     label06:
        i25 = 0;

     label07:
        if i25 >= i0 goto label12;

        i26 = 0;

        i27 = 0;

     label08:
        if i27 >= i1 goto label11;

        i28 = 0;

        i29 = 0;

     label09:
        $i11 = lengthof r2;

        if i29 >= $i11 goto label10;

        $i12 = i27 + i29;

        i30 = $i12 - i3;

        $i14 = i1 - 1;

        i31 = staticinvoke <com.android.camera.util.CameraUtil: int clamp(int,int,int)>(i30, 0, $i14);

        $i16 = i31 * i0;

        $i15 = $i16 + i25;

        $i17 = r3[$i15];

        $f0 = r2[i29];

        i28 = staticinvoke <com.android.camera.util.CameraUtil: int addPixel(int,int,float)>(i28, $i17, $f0);

        i29 = i29 + 1;

        goto label09;

     label10:
        $i13 = i25 + i26;

        r1[$i13] = i28;

        i26 = i26 + i0;

        i27 = i27 + 1;

        goto label08;

     label11:
        i25 = i25 + 1;

        goto label07;

     label12:
        return;
    }

    public static android.graphics.Point resizeToFill(int, int, int, int, int)
    {
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        android.graphics.Point $r0, r1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        $i6 = i2 % 180;

        if $i6 == 0 goto label1;

        i5 = i0;

        i0 = i1;

        i1 = i5;

     label1:
        if i0 == -2 goto label2;

        if i1 != -2 goto label3;

     label2:
        i0 = i3;

        i1 = i4;

     label3:
        $r0 = new android.graphics.Point;

        specialinvoke $r0.<android.graphics.Point: void <init>()>();

        r1 = $r0;

        r1.<android.graphics.Point: int x> = i3;

        r1.<android.graphics.Point: int y> = i4;

        $i8 = i0 * i4;

        $i7 = i3 * i1;

        if $i8 <= $i7 goto label4;

        $i12 = r1.<android.graphics.Point: int x>;

        $i13 = i1 * $i12;

        $i14 = $i13 / i0;

        r1.<android.graphics.Point: int y> = $i14;

        goto label5;

     label4:
        $i9 = r1.<android.graphics.Point: int y>;

        $i10 = i0 * $i9;

        $i11 = $i10 / i1;

        r1.<android.graphics.Point: int x> = $i11;

     label5:
        return r1;
    }

    public static void playVideo(android.app.Activity, android.net.Uri, java.lang.String)
    {
        android.app.Activity r0;
        android.net.Uri r1;
        java.lang.String r2, $r8;
        com.android.camera.CameraActivity r3;
        boolean z0;
        android.content.Intent r4, $r5, $r6;
        android.content.ActivityNotFoundException $r7;
        android.widget.Toast $r9;

        r0 := @parameter0: android.app.Activity;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.lang.String;

     label1:
        r3 = (com.android.camera.CameraActivity) r0;

        z0 = virtualinvoke r3.<com.android.camera.CameraActivity: boolean isSecureCamera()>();

        if z0 != 0 goto label2;

        $r5 = staticinvoke <com.android.camera.util.IntentHelper: android.content.Intent getVideoPlayerIntent(android.net.Uri)>(r1);

        $r6 = virtualinvoke $r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.intent.extra.TITLE", r2);

        r4 = virtualinvoke $r6.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("treat-up-as-back", 1);

        virtualinvoke r3.<com.android.camera.CameraActivity: void launchActivityByIntent(android.content.Intent)>(r4);

        goto label3;

     label2:
        virtualinvoke r0.<android.app.Activity: void finish()>();

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        $r8 = virtualinvoke r0.<android.app.Activity: java.lang.String getString(int)>(2131230741);

        $r9 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>(r0, $r8, 0);

        virtualinvoke $r9.<android.widget.Toast: void show()>();

     label5:
        return;

        catch android.content.ActivityNotFoundException from label1 to label3 with label4;
    }

    public static void showOnMap(android.app.Activity, double[])
    {
        android.app.Activity r0;
        double[] r1;
        java.lang.String r2, r22;
        android.content.ComponentName r3, $r9;
        android.content.Intent r4, $r10, $r20, r23;
        java.lang.Object[] $r5, $r14;
        double $d0, $d1, $d2, $d3;
        java.util.Locale $r6, $r16;
        java.lang.Double $r7, $r8, $r17, $r18;
        android.net.Uri $r11, $r19;
        android.content.ActivityNotFoundException $r12, r21;
        com.android.camera.debug.Log$Tag $r15;

        r0 := @parameter0: android.app.Activity;

        r1 := @parameter1: double[];

     label1:
        $r6 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r5 = newarray (java.lang.Object)[2];

        $d0 = r1[0];

        $r7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r5[0] = $r7;

        $d1 = r1[1];

        $r8 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        $r5[1] = $r8;

        r2 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r6, "http://maps.google.com/maps?f=q&q=(%f,%f)", $r5);

        $r9 = new android.content.ComponentName;

        specialinvoke $r9.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("com.google.android.apps.maps", "com.google.android.maps.MapsActivity");

        r3 = $r9;

        $r10 = new android.content.Intent;

        $r11 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r2);

        specialinvoke $r10.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.VIEW", $r11);

        r4 = virtualinvoke $r10.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>(r3);

        virtualinvoke r4.<android.content.Intent: android.content.Intent addFlags(int)>(524288);

        virtualinvoke r0.<android.app.Activity: void startActivity(android.content.Intent)>(r4);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        r21 = $r12;

        $r15 = <com.android.camera.util.CameraUtil: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void e(com.android.camera.debug.Log$Tag,java.lang.String,java.lang.Throwable)>($r15, "GMM activity not found!", r21);

        $r16 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r14 = newarray (java.lang.Object)[2];

        $d2 = r1[0];

        $r17 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        $r14[0] = $r17;

        $d3 = r1[1];

        $r18 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        $r14[1] = $r18;

        r22 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r16, "geo:%f,%f", $r14);

        $r20 = new android.content.Intent;

        $r19 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r22);

        specialinvoke $r20.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.VIEW", $r19);

        r23 = $r20;

        virtualinvoke r0.<android.app.Activity: void startActivity(android.content.Intent)>(r23);

     label4:
        return;

        catch android.content.ActivityNotFoundException from label1 to label2 with label3;
    }

    public static java.lang.String dumpStackTrace(int)
    {
        int i0, i1, $i2, $i3, $i4, i5;
        java.lang.StackTraceElement[] r0;
        java.lang.String r1, $r3, $r8;
        java.lang.Thread $r2;
        java.lang.StringBuilder $r4, $r5, $r6, $r9, $r10;
        java.lang.StackTraceElement $r7;

        i0 := @parameter0: int;

        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        r0 = virtualinvoke $r2.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();

        if i0 != 0 goto label1;

        $i4 = lengthof r0;

        goto label2;

     label1:
        $i3 = i0 + 3;

        $i2 = lengthof r0;

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i2);

     label2:
        i5 = $i4;

        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>()>();

        r1 = $r3;

        i1 = 3;

     label3:
        if i1 >= i5 goto label4;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\t");

        $r7 = r0[i1];

        $r8 = virtualinvoke $r7.<java.lang.StackTraceElement: java.lang.String toString()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);

        r1 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        i1 = i1 + 1;

        goto label3;

     label4:
        return r1;
    }

    public static int getCameraThemeColorId(int, android.content.Context)
    {
        int i0, $i1, $i2;
        android.content.Context r0;
        android.content.res.TypedArray r1;
        android.content.res.Resources $r2;
        java.lang.StringBuilder $r3, $r5, $r6;
        com.android.camera.debug.Log$Tag $r4;
        java.lang.String $r7;

        i0 := @parameter0: int;

        r0 := @parameter1: android.content.Context;

        $r2 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.TypedArray obtainTypedArray(int)>(2131296322);

        $i1 = virtualinvoke r1.<android.content.res.TypedArray: int length()>();

        if i0 >= $i1 goto label1;

        if i0 >= 0 goto label2;

     label1:
        $r4 = <com.android.camera.util.CameraUtil: com.android.camera.debug.Log$Tag TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid mode index: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void e(com.android.camera.debug.Log$Tag,java.lang.String)>($r4, $r7);

        return 0;

     label2:
        $i2 = virtualinvoke r1.<android.content.res.TypedArray: int getResourceId(int,int)>(i0, 0);

        return $i2;
    }

    public static int getCameraModeIconResId(int, android.content.Context)
    {
        int i0, $i1, $i2;
        android.content.Context r0;
        android.content.res.TypedArray r1;
        android.content.res.Resources $r2;
        java.lang.StringBuilder $r3, $r5, $r6;
        com.android.camera.debug.Log$Tag $r4;
        java.lang.String $r7;

        i0 := @parameter0: int;

        r0 := @parameter1: android.content.Context;

        $r2 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.TypedArray obtainTypedArray(int)>(2131296326);

        $i1 = virtualinvoke r1.<android.content.res.TypedArray: int length()>();

        if i0 >= $i1 goto label1;

        if i0 >= 0 goto label2;

     label1:
        $r4 = <com.android.camera.util.CameraUtil: com.android.camera.debug.Log$Tag TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid mode index: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void e(com.android.camera.debug.Log$Tag,java.lang.String)>($r4, $r7);

        return 0;

     label2:
        $i2 = virtualinvoke r1.<android.content.res.TypedArray: int getResourceId(int,int)>(i0, 0);

        return $i2;
    }

    public static java.lang.String getCameraModeText(int, android.content.Context)
    {
        int i0, $i1;
        android.content.Context r0;
        java.lang.String[] r1;
        android.content.res.Resources $r2;
        java.lang.StringBuilder $r3, $r5, $r6;
        com.android.camera.debug.Log$Tag $r4;
        java.lang.String $r7, $r8, $r9;

        i0 := @parameter0: int;

        r0 := @parameter1: android.content.Context;

        $r2 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(2131296323);

        if i0 < 0 goto label1;

        $i1 = lengthof r1;

        if i0 < $i1 goto label2;

     label1:
        $r4 = <com.android.camera.util.CameraUtil: com.android.camera.debug.Log$Tag TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid mode index: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void e(com.android.camera.debug.Log$Tag,java.lang.String)>($r4, $r7);

        $r8 = new java.lang.String;

        specialinvoke $r8.<java.lang.String: void <init>()>();

        return $r8;

     label2:
        $r9 = r1[i0];

        return $r9;
    }

    public static java.lang.String getCameraModeContentDescription(int, android.content.Context)
    {
        int i0, $i1;
        android.content.Context r0;
        java.lang.String[] r1;
        android.content.res.Resources $r2;
        java.lang.StringBuilder $r3, $r5, $r6;
        com.android.camera.debug.Log$Tag $r4;
        java.lang.String $r7, $r8, $r9;

        i0 := @parameter0: int;

        r0 := @parameter1: android.content.Context;

        $r2 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r2.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(2131296324);

        if i0 < 0 goto label1;

        $i1 = lengthof r1;

        if i0 < $i1 goto label2;

     label1:
        $r4 = <com.android.camera.util.CameraUtil: com.android.camera.debug.Log$Tag TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid mode index: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void e(com.android.camera.debug.Log$Tag,java.lang.String)>($r4, $r7);

        $r8 = new java.lang.String;

        specialinvoke $r8.<java.lang.String: void <init>()>();

        return $r8;

     label2:
        $r9 = r1[i0];

        return $r9;
    }

    public static int getCameraShutterIconId(int, android.content.Context)
    {
        int i0, $i1, $i2;
        android.content.Context r0;
        android.content.res.TypedArray r1;
        android.content.res.Resources $r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r9, $r10, $r11;
        com.android.camera.debug.Log$Tag $r4;
        java.lang.String $r7, $r12;
        java.lang.IllegalStateException $r8;

        i0 := @parameter0: int;

        r0 := @parameter1: android.content.Context;

        $r2 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.TypedArray obtainTypedArray(int)>(2131296327);

        if i0 < 0 goto label1;

        $i1 = virtualinvoke r1.<android.content.res.TypedArray: int length()>();

        if i0 < $i1 goto label2;

     label1:
        $r4 = <com.android.camera.util.CameraUtil: com.android.camera.debug.Log$Tag TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid mode index: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void e(com.android.camera.debug.Log$Tag,java.lang.String)>($r4, $r7);

        $r8 = new java.lang.IllegalStateException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid mode index: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        throw $r8;

     label2:
        $i2 = virtualinvoke r1.<android.content.res.TypedArray: int getResourceId(int,int)>(i0, 0);

        return $i2;
    }

    public static int getCameraModeParentModeId(int, android.content.Context)
    {
        int i0, $i1, $i2;
        android.content.Context r0;
        int[] r1;
        android.content.res.Resources $r2;
        java.lang.StringBuilder $r3, $r5, $r6;
        com.android.camera.debug.Log$Tag $r4;
        java.lang.String $r7;

        i0 := @parameter0: int;

        r0 := @parameter1: android.content.Context;

        $r2 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r2.<android.content.res.Resources: int[] getIntArray(int)>(2131296320);

        if i0 < 0 goto label1;

        $i1 = lengthof r1;

        if i0 < $i1 goto label2;

     label1:
        $r4 = <com.android.camera.util.CameraUtil: com.android.camera.debug.Log$Tag TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid mode index: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void e(com.android.camera.debug.Log$Tag,java.lang.String)>($r4, $r7);

        return 0;

     label2:
        $i2 = r1[i0];

        return $i2;
    }

    public static int getCameraModeCoverIconResId(int, android.content.Context)
    {
        int i0, $i1, $i2;
        android.content.Context r0;
        android.content.res.TypedArray r1;
        android.content.res.Resources $r2;
        java.lang.StringBuilder $r3, $r5, $r6;
        com.android.camera.debug.Log$Tag $r4;
        java.lang.String $r7;

        i0 := @parameter0: int;

        r0 := @parameter1: android.content.Context;

        $r2 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.TypedArray obtainTypedArray(int)>(2131296325);

        $i1 = virtualinvoke r1.<android.content.res.TypedArray: int length()>();

        if i0 >= $i1 goto label1;

        if i0 >= 0 goto label2;

     label1:
        $r4 = <com.android.camera.util.CameraUtil: com.android.camera.debug.Log$Tag TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid mode index: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void e(com.android.camera.debug.Log$Tag,java.lang.String)>($r4, $r7);

        return 0;

     label2:
        $i2 = virtualinvoke r1.<android.content.res.TypedArray: int getResourceId(int,int)>(i0, 0);

        return $i2;
    }

    public static int getNumCpuCores()
    {
        java.io.File r0, $r2;
        java.io.File[] r1;
        com.android.camera.util.CameraUtil$1CpuFilter $r3;
        int $i0;
        java.lang.Exception $r4, r6;
        com.android.camera.debug.Log$Tag $r5;

     label1:
        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>("/sys/devices/system/cpu/");

        r0 = $r2;

        $r3 = new com.android.camera.util.CameraUtil$1CpuFilter;

        specialinvoke $r3.<com.android.camera.util.CameraUtil$1CpuFilter: void <init>()>();

        r1 = virtualinvoke r0.<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>($r3);

        $i0 = lengthof r1;

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        r6 = $r4;

        $r5 = <com.android.camera.util.CameraUtil: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void e(com.android.camera.debug.Log$Tag,java.lang.String,java.lang.Throwable)>($r5, "Failed to count number of cores, defaulting to 1", r6);

        return 1;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static int getJpegRotation(int, android.hardware.camera2.CameraCharacteristics)
    {
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7;
        android.hardware.camera2.CameraCharacteristics r0;
        android.hardware.camera2.CameraCharacteristics$Key $r1, $r4;
        java.lang.Object $r2, $r5;
        java.lang.Integer $r3, $r6;

        i0 := @parameter0: int;

        r0 := @parameter1: android.hardware.camera2.CameraCharacteristics;

        if i0 != -1 goto label1;

        return 0;

     label1:
        $r1 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key LENS_FACING>;

        $r2 = virtualinvoke r0.<android.hardware.camera2.CameraCharacteristics: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>($r1);

        $r3 = (java.lang.Integer) $r2;

        i1 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        $r4 = <android.hardware.camera2.CameraCharacteristics: android.hardware.camera2.CameraCharacteristics$Key SENSOR_ORIENTATION>;

        $r5 = virtualinvoke r0.<android.hardware.camera2.CameraCharacteristics: java.lang.Object get(android.hardware.camera2.CameraCharacteristics$Key)>($r4);

        $r6 = (java.lang.Integer) $r5;

        i2 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        if i1 != 0 goto label2;

        $i6 = i2 + i0;

        $i7 = $i6 % 360;

        return $i7;

     label2:
        $i3 = i2 - i0;

        $i4 = $i3 + 360;

        $i5 = $i4 % 360;

        return $i5;
    }

    static void <clinit>()
    {
        com.android.camera.debug.Log$Tag $r0;
        int[] $r1;

        <com.android.camera.util.CameraUtil: java.lang.String EXTRAS_CAMERA_FACING> = "android.intent.extras.CAMERA_FACING";

        <com.android.camera.util.CameraUtil: java.lang.String KEY_TREAT_UP_AS_BACK> = "treat-up-as-back";

        <com.android.camera.util.CameraUtil: java.lang.String MAPS_CLASS_NAME> = "com.google.android.maps.MapsActivity";

        <com.android.camera.util.CameraUtil: java.lang.String MAPS_PACKAGE_NAME> = "com.google.android.apps.maps";

        <com.android.camera.util.CameraUtil: java.lang.String ACTION_CAMERA_SHUTTER_CLICK> = "com.android.camera.action.SHUTTER_CLICK";

        <com.android.camera.util.CameraUtil: java.lang.String ACTION_CAMERA_STOPPED> = "com.android.camera.action.CAMERA_STOPPED";

        <com.android.camera.util.CameraUtil: java.lang.String ACTION_CAMERA_STARTED> = "com.android.camera.action.CAMERA_STARTED";

        <com.android.camera.util.CameraUtil: java.lang.String ACTION_NEW_VIDEO> = "android.hardware.action.NEW_VIDEO";

        <com.android.camera.util.CameraUtil: java.lang.String ACTION_NEW_PICTURE> = "android.hardware.action.NEW_PICTURE";

        <com.android.camera.util.CameraUtil: java.lang.String REVIEW_ACTION> = "com.android.camera.action.REVIEW";

        <com.android.camera.util.CameraUtil: int ORIENTATION_HYSTERESIS> = 5;

        <com.android.camera.util.CameraUtil: java.lang.String KEY_SHOW_WHEN_LOCKED> = "showWhenLocked";

        <com.android.camera.util.CameraUtil: java.lang.String KEY_RETURN_DATA> = "return-data";

        <com.android.camera.util.CameraUtil: int PREFERRED_PREVIEW_FPS_TIMES_1000> = 30000;

        <com.android.camera.util.CameraUtil: int MAX_PREVIEW_FPS_TIMES_1000> = 400000;

        $r0 = new com.android.camera.debug.Log$Tag;

        specialinvoke $r0.<com.android.camera.debug.Log$Tag: void <init>(java.lang.String)>("Util");

        <com.android.camera.util.CameraUtil: com.android.camera.debug.Log$Tag TAG> = $r0;

        <com.android.camera.util.CameraUtil: float sPixelDensity> = 1.0F;

        $r1 = newarray (int)[2];

        <com.android.camera.util.CameraUtil: int[] sLocation> = $r1;

        return;
    }
}
