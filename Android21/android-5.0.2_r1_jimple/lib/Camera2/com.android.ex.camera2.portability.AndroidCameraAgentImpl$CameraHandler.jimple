class com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler extends com.android.ex.camera2.portability.HistoryHandler
{
    private android.hardware.Camera mCamera;
    private int mCameraId;
    private com.android.ex.camera2.portability.AndroidCameraAgentImpl$ParametersCache mParameterCache;
    private int mCancelAfPending;
    final com.android.ex.camera2.portability.AndroidCameraAgentImpl this$0;

    void <init>(com.android.ex.camera2.portability.AndroidCameraAgentImpl, android.os.Looper)
    {
        com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler r0;
        com.android.ex.camera2.portability.AndroidCameraAgentImpl r1;
        android.os.Looper r2;

        r0 := @this: com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler;

        r1 := @parameter0: com.android.ex.camera2.portability.AndroidCameraAgentImpl;

        r2 := @parameter1: android.os.Looper;

        r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: com.android.ex.camera2.portability.AndroidCameraAgentImpl this$0> = r1;

        specialinvoke r0.<com.android.ex.camera2.portability.HistoryHandler: void <init>(android.os.Looper)>(r2);

        r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: int mCancelAfPending> = 0;

        return;
    }

    private void startFaceDetection()
    {
        com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler r0;
        android.hardware.Camera $r1;

        r0 := @this: com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler;

        $r1 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: android.hardware.Camera mCamera>;

        virtualinvoke $r1.<android.hardware.Camera: void startFaceDetection()>();

        return;
    }

    private void stopFaceDetection()
    {
        com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler r0;
        android.hardware.Camera $r1;

        r0 := @this: com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler;

        $r1 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: android.hardware.Camera mCamera>;

        virtualinvoke $r1.<android.hardware.Camera: void stopFaceDetection()>();

        return;
    }

    private void setFaceDetectionListener(android.hardware.Camera$FaceDetectionListener)
    {
        com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler r0;
        android.hardware.Camera$FaceDetectionListener r1;
        android.hardware.Camera $r2;

        r0 := @this: com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler;

        r1 := @parameter0: android.hardware.Camera$FaceDetectionListener;

        $r2 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: android.hardware.Camera mCamera>;

        virtualinvoke $r2.<android.hardware.Camera: void setFaceDetectionListener(android.hardware.Camera$FaceDetectionListener)>(r1);

        return;
    }

    private void setPreviewTexture(java.lang.Object)
    {
        com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler r0;
        java.lang.Object r1;
        java.io.IOException r2, $r5;
        android.graphics.SurfaceTexture $r3;
        android.hardware.Camera $r4;
        com.android.ex.camera2.portability.debug.Log$Tag $r6;

        r0 := @this: com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler;

        r1 := @parameter0: java.lang.Object;

     label1:
        $r4 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: android.hardware.Camera mCamera>;

        $r3 = (android.graphics.SurfaceTexture) r1;

        virtualinvoke $r4.<android.hardware.Camera: void setPreviewTexture(android.graphics.SurfaceTexture)>($r3);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        $r6 = staticinvoke <com.android.ex.camera2.portability.AndroidCameraAgentImpl: com.android.ex.camera2.portability.debug.Log$Tag access$000()>();

        staticinvoke <com.android.ex.camera2.portability.debug.Log: void e(com.android.ex.camera2.portability.debug.Log$Tag,java.lang.String,java.lang.Throwable)>($r6, "Could not set preview texture", r2);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private void enableShutterSound(boolean)
    {
        com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler r0;
        boolean z0;
        android.hardware.Camera $r1;

        r0 := @this: com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: android.hardware.Camera mCamera>;

        virtualinvoke $r1.<android.hardware.Camera: boolean enableShutterSound(boolean)>(z0);

        return;
    }

    private void setAutoFocusMoveCallback(android.hardware.Camera, java.lang.Object)
    {
        com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler r0;
        android.hardware.Camera r1;
        java.lang.Object r2;
        java.lang.RuntimeException r3, $r5;
        android.hardware.Camera$AutoFocusMoveCallback $r4;
        com.android.ex.camera2.portability.debug.Log$Tag $r6;
        java.lang.String $r7;

        r0 := @this: com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler;

        r1 := @parameter0: android.hardware.Camera;

        r2 := @parameter1: java.lang.Object;

     label1:
        $r4 = (android.hardware.Camera$AutoFocusMoveCallback) r2;

        virtualinvoke r1.<android.hardware.Camera: void setAutoFocusMoveCallback(android.hardware.Camera$AutoFocusMoveCallback)>($r4);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        $r6 = staticinvoke <com.android.ex.camera2.portability.AndroidCameraAgentImpl: com.android.ex.camera2.portability.debug.Log$Tag access$000()>();

        $r7 = virtualinvoke r3.<java.lang.RuntimeException: java.lang.String getMessage()>();

        staticinvoke <com.android.ex.camera2.portability.debug.Log: void w(com.android.ex.camera2.portability.debug.Log$Tag,java.lang.String)>($r6, $r7);

     label4:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    private void capture(com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler$CaptureCallbacks)
    {
        com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler r0;
        com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler$CaptureCallbacks r1;
        java.lang.RuntimeException r2, $r8;
        android.hardware.Camera$PictureCallback $r3, $r4, $r5;
        android.hardware.Camera$ShutterCallback $r6;
        android.hardware.Camera $r7;
        com.android.ex.camera2.portability.debug.Log$Tag $r9;

        r0 := @this: com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler;

        r1 := @parameter0: com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler$CaptureCallbacks;

     label1:
        $r7 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: android.hardware.Camera mCamera>;

        $r6 = r1.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler$CaptureCallbacks: android.hardware.Camera$ShutterCallback mShutter>;

        $r5 = r1.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler$CaptureCallbacks: android.hardware.Camera$PictureCallback mRaw>;

        $r4 = r1.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler$CaptureCallbacks: android.hardware.Camera$PictureCallback mPostView>;

        $r3 = r1.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler$CaptureCallbacks: android.hardware.Camera$PictureCallback mJpeg>;

        virtualinvoke $r7.<android.hardware.Camera: void takePicture(android.hardware.Camera$ShutterCallback,android.hardware.Camera$PictureCallback,android.hardware.Camera$PictureCallback,android.hardware.Camera$PictureCallback)>($r6, $r5, $r4, $r3);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

        $r9 = staticinvoke <com.android.ex.camera2.portability.AndroidCameraAgentImpl: com.android.ex.camera2.portability.debug.Log$Tag access$000()>();

        staticinvoke <com.android.ex.camera2.portability.debug.Log: void e(com.android.ex.camera2.portability.debug.Log$Tag,java.lang.String)>($r9, "take picture failed.");

        throw r2;

     label4:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
    }

    public void requestTakePicture(android.hardware.Camera$ShutterCallback, android.hardware.Camera$PictureCallback, android.hardware.Camera$PictureCallback, android.hardware.Camera$PictureCallback)
    {
        com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler r0;
        android.hardware.Camera$ShutterCallback r1;
        android.hardware.Camera$PictureCallback r2, r3, r4;
        com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler$CaptureCallbacks r5, $r6;
        android.os.Message $r7;

        r0 := @this: com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler;

        r1 := @parameter0: android.hardware.Camera$ShutterCallback;

        r2 := @parameter1: android.hardware.Camera$PictureCallback;

        r3 := @parameter2: android.hardware.Camera$PictureCallback;

        r4 := @parameter3: android.hardware.Camera$PictureCallback;

        $r6 = new com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler$CaptureCallbacks;

        specialinvoke $r6.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler$CaptureCallbacks: void <init>(com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler,android.hardware.Camera$ShutterCallback,android.hardware.Camera$PictureCallback,android.hardware.Camera$PictureCallback,android.hardware.Camera$PictureCallback)>(r0, r1, r2, r3, r4);

        r5 = $r6;

        $r7 = virtualinvoke r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: android.os.Message obtainMessage(int,java.lang.Object)>(601, r5);

        virtualinvoke $r7.<android.os.Message: void sendToTarget()>();

        return;
    }

    public void handleMessage(android.os.Message)
    {
        com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler r0;
        android.os.Message r1;
        com.android.ex.camera2.portability.CameraAgent$CameraOpenCallback r2, $r166;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, i25;
        java.lang.Throwable r4, r5, $r161, $r176;
        com.android.ex.camera2.portability.debug.Log$Tag $r6, $r50, $r100, $r118, $r138, $r160, $r174;
        java.lang.StringBuilder $r7, $r8, $r10, $r11, $r46, $r47, $r51, $r52, $r106, $r107, $r119, $r120, $r149, $r150, $r151, $r152, $r153, $r154, $r169, $r170, $r173, $r175;
        java.lang.String $r9, $r12, $r48, $r61, $r109, $r110, $r140, $r146, $r156, $r168, $r172, $r179;
        com.android.ex.camera2.portability.CameraStateHolder $r13, $r40, $r45, $r85, $r93, $r97, $r115, $r116, $r123, $r164;
        com.android.ex.camera2.portability.AndroidCameraAgentImpl $r14, $r19, $r25, $r39, $r41, $r83, $r84, $r90, $r91, $r94, $r98, $r103, $r117, $r122, $r125, $r126, $r129, $r135, $r137, $r143, $r148, $r165, $r178;
        com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler$CaptureCallbacks $r15;
        java.lang.Object $r16, $r30, $r31, $r33, $r36, $r44, $r54, $r57, $r62, $r65, $r66, $r73, $r76, $r80, $r86, $r88, $r96, $r114, $r167, $r171;
        com.android.ex.camera2.portability.AndroidCameraAgentImpl$ParametersCache $r17, $r20, $r23, $r24, $r49, $r53, $r56, $r59, $r63, $r64, $r113, $r134;
        android.hardware.Camera $r18, $r22, $r26, $r29, $r34, $r37, $r38, $r42, $r58, $r60, $r67, $r68, $r70, $r74, $r75, $r79, $r82, $r87, $r89, $r95, $r99, $r101, $r105, $r108, $r111, $r112, $r127, $r155, $r162, $r163;
        com.android.ex.camera2.portability.CameraDeviceInfo$Characteristics $r21, $r27, $r104, $r128, $r131;
        android.hardware.Camera$ErrorCallback $r28;
        boolean $z0;
        android.hardware.Camera$FaceDetectionListener $r32;
        android.hardware.Camera$OnZoomChangeListener $r35;
        android.hardware.Camera$AutoFocusCallback $r43;
        android.hardware.Camera$Parameters[] $r55, r188;
        android.view.SurfaceHolder $r69;
        android.hardware.Camera$PreviewCallback $r71, $r72, $r77;
        byte[] $r78, $r81;
        com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraProxyImpl $r92, $r124;
        com.android.ex.camera2.portability.AndroidCameraCapabilities $r102, $r133, $r147;
        com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraDeviceInfo $r130;
        android.hardware.Camera$Parameters $r136, r183, r184, r185, r187, r189;
        java.lang.Exception $r139;
        com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler$1 $r141;
        android.os.Handler $r142;
        com.android.ex.camera2.portability.CameraAgent$CameraExceptionCallback $r144, r192;
        java.lang.RuntimeException $r145, $r158, $r159, r190;
        java.io.IOException $r157, $r177, r181;
        com.android.ex.camera2.portability.CameraAgent$CameraOpenCallbackForward r180;
        com.android.ex.camera2.portability.CameraAgent$CameraStartPreviewCallbackForward r182;
        com.android.ex.camera2.portability.CameraSettings r186;

        r0 := @this: com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler;

        r1 := @parameter0: android.os.Message;

        specialinvoke r0.<com.android.ex.camera2.portability.HistoryHandler: void handleMessage(android.os.Message)>(r1);

        $r6 = staticinvoke <com.android.ex.camera2.portability.AndroidCameraAgentImpl: com.android.ex.camera2.portability.debug.Log$Tag access$000()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleMessage - action = \'");

        $i1 = r1.<android.os.Message: int what>;

        $r9 = staticinvoke <com.android.ex.camera2.portability.CameraActions: java.lang.String stringify(int)>($i1);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.ex.camera2.portability.debug.Log: void v(com.android.ex.camera2.portability.debug.Log$Tag,java.lang.String)>($r6, $r12);

     label01:
        $i2 = r1.<android.os.Message: int what>;

        lookupswitch($i2)
        {
            case 1: goto label02;
            case 2: goto label05;
            case 3: goto label07;
            case 4: goto label13;
            case 5: goto label14;
            case 101: goto label15;
            case 102: goto label19;
            case 103: goto label20;
            case 104: goto label21;
            case 105: goto label23;
            case 106: goto label16;
            case 107: goto label41;
            case 108: goto label22;
            case 201: goto label39;
            case 202: goto label40;
            case 203: goto label45;
            case 204: goto label38;
            case 301: goto label24;
            case 302: goto label26;
            case 303: goto label28;
            case 304: goto label33;
            case 305: goto label27;
            case 461: goto label34;
            case 462: goto label35;
            case 463: goto label36;
            case 464: goto label37;
            case 501: goto label42;
            case 502: goto label29;
            case 503: goto label32;
            case 601: goto label46;
            default: goto label47;
        };

     label02:
        $r114 = r1.<android.os.Message: java.lang.Object obj>;

        r2 = (com.android.ex.camera2.portability.CameraAgent$CameraOpenCallback) $r114;

        i0 = r1.<android.os.Message: int arg1>;

        $r117 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: com.android.ex.camera2.portability.AndroidCameraAgentImpl this$0>;

        $r116 = staticinvoke <com.android.ex.camera2.portability.AndroidCameraAgentImpl: com.android.ex.camera2.portability.CameraStateHolder access$100(com.android.ex.camera2.portability.AndroidCameraAgentImpl)>($r117);

        $i16 = virtualinvoke $r116.<com.android.ex.camera2.portability.CameraStateHolder: int getState()>();

        if $i16 == 1 goto label03;

        $r146 = virtualinvoke r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: java.lang.String generateHistoryString(int)>(i0);

        interfaceinvoke r2.<com.android.ex.camera2.portability.CameraAgent$CameraOpenCallback: void onDeviceOpenedAlready(int,java.lang.String)>(i0, $r146);

        goto label48;

     label03:
        $r118 = staticinvoke <com.android.ex.camera2.portability.AndroidCameraAgentImpl: com.android.ex.camera2.portability.debug.Log$Tag access$000()>();

        $r120 = new java.lang.StringBuilder;

        specialinvoke $r120.<java.lang.StringBuilder: void <init>()>();

        $r119 = virtualinvoke $r120.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Opening camera ");

        $r107 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r106 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with camera1 API");

        $r109 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.ex.camera2.portability.debug.Log: void i(com.android.ex.camera2.portability.debug.Log$Tag,java.lang.String)>($r118, $r109);

        $r108 = staticinvoke <android.hardware.Camera: android.hardware.Camera open(int)>(i0);

        r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: android.hardware.Camera mCamera> = $r108;

        $r111 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: android.hardware.Camera mCamera>;

        if $r111 == null goto label04;

        r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: int mCameraId> = i0;

        $r113 = new com.android.ex.camera2.portability.AndroidCameraAgentImpl$ParametersCache;

        $r112 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: android.hardware.Camera mCamera>;

        specialinvoke $r113.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$ParametersCache: void <init>(android.hardware.Camera)>($r112);

        r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: com.android.ex.camera2.portability.AndroidCameraAgentImpl$ParametersCache mParameterCache> = $r113;

        $r129 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: com.android.ex.camera2.portability.AndroidCameraAgentImpl this$0>;

        $r130 = staticinvoke <com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraDeviceInfo: com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraDeviceInfo create()>();

        $r131 = virtualinvoke $r130.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraDeviceInfo: com.android.ex.camera2.portability.CameraDeviceInfo$Characteristics getCharacteristics(int)>(i0);

        staticinvoke <com.android.ex.camera2.portability.AndroidCameraAgentImpl: com.android.ex.camera2.portability.CameraDeviceInfo$Characteristics access$202(com.android.ex.camera2.portability.AndroidCameraAgentImpl,com.android.ex.camera2.portability.CameraDeviceInfo$Characteristics)>($r129, $r131);

        $r135 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: com.android.ex.camera2.portability.AndroidCameraAgentImpl this$0>;

        $r133 = new com.android.ex.camera2.portability.AndroidCameraCapabilities;

        $r134 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: com.android.ex.camera2.portability.AndroidCameraAgentImpl$ParametersCache mParameterCache>;

        $r136 = virtualinvoke $r134.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$ParametersCache: android.hardware.Camera$Parameters getBlocking()>();

        specialinvoke $r133.<com.android.ex.camera2.portability.AndroidCameraCapabilities: void <init>(android.hardware.Camera$Parameters)>($r136);

        staticinvoke <com.android.ex.camera2.portability.AndroidCameraAgentImpl: com.android.ex.camera2.portability.AndroidCameraCapabilities access$302(com.android.ex.camera2.portability.AndroidCameraAgentImpl,com.android.ex.camera2.portability.AndroidCameraCapabilities)>($r135, $r133);

        $r122 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: com.android.ex.camera2.portability.AndroidCameraAgentImpl this$0>;

        $r123 = staticinvoke <com.android.ex.camera2.portability.AndroidCameraAgentImpl: com.android.ex.camera2.portability.CameraStateHolder access$100(com.android.ex.camera2.portability.AndroidCameraAgentImpl)>($r122);

        virtualinvoke $r123.<com.android.ex.camera2.portability.CameraStateHolder: void setState(int)>(2);

        if r2 == null goto label48;

        $r124 = new com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraProxyImpl;

        $r126 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: com.android.ex.camera2.portability.AndroidCameraAgentImpl this$0>;

        $r127 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: android.hardware.Camera mCamera>;

        $r125 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: com.android.ex.camera2.portability.AndroidCameraAgentImpl this$0>;

        $r128 = staticinvoke <com.android.ex.camera2.portability.AndroidCameraAgentImpl: com.android.ex.camera2.portability.CameraDeviceInfo$Characteristics access$200(com.android.ex.camera2.portability.AndroidCameraAgentImpl)>($r125);

        $r148 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: com.android.ex.camera2.portability.AndroidCameraAgentImpl this$0>;

        $r147 = staticinvoke <com.android.ex.camera2.portability.AndroidCameraAgentImpl: com.android.ex.camera2.portability.AndroidCameraCapabilities access$300(com.android.ex.camera2.portability.AndroidCameraAgentImpl)>($r148);

        specialinvoke $r124.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraProxyImpl: void <init>(com.android.ex.camera2.portability.AndroidCameraAgentImpl,int,android.hardware.Camera,com.android.ex.camera2.portability.CameraDeviceInfo$Characteristics,com.android.ex.camera2.portability.AndroidCameraCapabilities,com.android.ex.camera2.portability.AndroidCameraAgentImpl$1)>($r126, i0, $r127, $r128, $r147, null);

        interfaceinvoke r2.<com.android.ex.camera2.portability.CameraAgent$CameraOpenCallback: void onCameraOpened(com.android.ex.camera2.portability.CameraAgent$CameraProxy)>($r124);

        goto label48;

     label04:
        if r2 == null goto label48;

        $r110 = virtualinvoke r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: java.lang.String generateHistoryString(int)>(i0);

        interfaceinvoke r2.<com.android.ex.camera2.portability.CameraAgent$CameraOpenCallback: void onDeviceOpenFailure(int,java.lang.String)>(i0, $r110);

        goto label48;

     label05:
        $r101 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: android.hardware.Camera mCamera>;

        if $r101 == null goto label06;

        $r99 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: android.hardware.Camera mCamera>;

        virtualinvoke $r99.<android.hardware.Camera: void release()>();

        $r98 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: com.android.ex.camera2.portability.AndroidCameraAgentImpl this$0>;

        $r115 = staticinvoke <com.android.ex.camera2.portability.AndroidCameraAgentImpl: com.android.ex.camera2.portability.CameraStateHolder access$100(com.android.ex.camera2.portability.AndroidCameraAgentImpl)>($r98);

        virtualinvoke $r115.<com.android.ex.camera2.portability.CameraStateHolder: void setState(int)>(1);

        r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: android.hardware.Camera mCamera> = null;

        goto label48;

     label06:
        $r100 = staticinvoke <com.android.ex.camera2.portability.AndroidCameraAgentImpl: com.android.ex.camera2.portability.debug.Log$Tag access$000()>();

        staticinvoke <com.android.ex.camera2.portability.debug.Log: void w(com.android.ex.camera2.portability.debug.Log$Tag,java.lang.String)>($r100, "Releasing camera without any camera opened.");

        goto label48;

     label07:
        $r96 = r1.<android.os.Message: java.lang.Object obj>;

        r180 = (com.android.ex.camera2.portability.CameraAgent$CameraOpenCallbackForward) $r96;

        i24 = r1.<android.os.Message: int arg1>;

     label08:
        $r95 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: android.hardware.Camera mCamera>;

        virtualinvoke $r95.<android.hardware.Camera: void reconnect()>();

     label09:
        goto label12;

     label10:
        $r177 := @caughtexception;

        if r180 == null goto label11;

        $r178 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: com.android.ex.camera2.portability.AndroidCameraAgentImpl this$0>;

        $i23 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: int mCameraId>;

        $r179 = virtualinvoke r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: java.lang.String generateHistoryString(int)>($i23);

        virtualinvoke r180.<com.android.ex.camera2.portability.CameraAgent$CameraOpenCallbackForward: void onReconnectionFailure(com.android.ex.camera2.portability.CameraAgent,java.lang.String)>($r178, $r179);

     label11:
        goto label48;

     label12:
        $r94 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: com.android.ex.camera2.portability.AndroidCameraAgentImpl this$0>;

        $r93 = staticinvoke <com.android.ex.camera2.portability.AndroidCameraAgentImpl: com.android.ex.camera2.portability.CameraStateHolder access$100(com.android.ex.camera2.portability.AndroidCameraAgentImpl)>($r94);

        virtualinvoke $r93.<com.android.ex.camera2.portability.CameraStateHolder: void setState(int)>(2);

        if r180 == null goto label48;

        $r92 = new com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraProxyImpl;

        $r90 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: com.android.ex.camera2.portability.AndroidCameraAgentImpl this$0>;

        $r105 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: android.hardware.Camera mCamera>;

        $r91 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: com.android.ex.camera2.portability.AndroidCameraAgentImpl this$0>;

        $r104 = staticinvoke <com.android.ex.camera2.portability.AndroidCameraAgentImpl: com.android.ex.camera2.portability.CameraDeviceInfo$Characteristics access$200(com.android.ex.camera2.portability.AndroidCameraAgentImpl)>($r91);

        $r103 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: com.android.ex.camera2.portability.AndroidCameraAgentImpl this$0>;

        $r102 = staticinvoke <com.android.ex.camera2.portability.AndroidCameraAgentImpl: com.android.ex.camera2.portability.AndroidCameraCapabilities access$300(com.android.ex.camera2.portability.AndroidCameraAgentImpl)>($r103);

        specialinvoke $r92.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$AndroidCameraProxyImpl: void <init>(com.android.ex.camera2.portability.AndroidCameraAgentImpl,int,android.hardware.Camera,com.android.ex.camera2.portability.CameraDeviceInfo$Characteristics,com.android.ex.camera2.portability.AndroidCameraCapabilities,com.android.ex.camera2.portability.AndroidCameraAgentImpl$1)>($r90, i24, $r105, $r104, $r102, null);

        virtualinvoke r180.<com.android.ex.camera2.portability.CameraAgent$CameraOpenCallbackForward: void onCameraOpened(com.android.ex.camera2.portability.CameraAgent$CameraProxy)>($r92);

        goto label48;

     label13:
        $r82 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: android.hardware.Camera mCamera>;

        virtualinvoke $r82.<android.hardware.Camera: void unlock()>();

        $r83 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: com.android.ex.camera2.portability.AndroidCameraAgentImpl this$0>;

        $r97 = staticinvoke <com.android.ex.camera2.portability.AndroidCameraAgentImpl: com.android.ex.camera2.portability.CameraStateHolder access$100(com.android.ex.camera2.portability.AndroidCameraAgentImpl)>($r83);

        virtualinvoke $r97.<com.android.ex.camera2.portability.CameraStateHolder: void setState(int)>(4);

        goto label48;

     label14:
        $r87 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: android.hardware.Camera mCamera>;

        virtualinvoke $r87.<android.hardware.Camera: void lock()>();

        $r84 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: com.android.ex.camera2.portability.AndroidCameraAgentImpl this$0>;

        $r85 = staticinvoke <com.android.ex.camera2.portability.AndroidCameraAgentImpl: com.android.ex.camera2.portability.CameraStateHolder access$100(com.android.ex.camera2.portability.AndroidCameraAgentImpl)>($r84);

        virtualinvoke $r85.<com.android.ex.camera2.portability.CameraStateHolder: void setState(int)>(2);

        goto label48;

     label15:
        $r86 = r1.<android.os.Message: java.lang.Object obj>;

        specialinvoke r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: void setPreviewTexture(java.lang.Object)>($r86);

        goto label48;

     label16:
        $r68 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: android.hardware.Camera mCamera>;

        $r66 = r1.<android.os.Message: java.lang.Object obj>;

        $r69 = (android.view.SurfaceHolder) $r66;

        virtualinvoke $r68.<android.hardware.Camera: void setPreviewDisplay(android.view.SurfaceHolder)>($r69);

     label17:
        goto label48;

     label18:
        $r157 := @caughtexception;

        r181 = $r157;

        $r158 = new java.lang.RuntimeException;

        specialinvoke $r158.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r181);

        throw $r158;

     label19:
        $r88 = r1.<android.os.Message: java.lang.Object obj>;

        r182 = (com.android.ex.camera2.portability.CameraAgent$CameraStartPreviewCallbackForward) $r88;

        $r89 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: android.hardware.Camera mCamera>;

        virtualinvoke $r89.<android.hardware.Camera: void startPreview()>();

        if r182 == null goto label48;

        virtualinvoke r182.<com.android.ex.camera2.portability.CameraAgent$CameraStartPreviewCallbackForward: void onPreviewStarted()>();

        goto label48;

     label20:
        $r75 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: android.hardware.Camera mCamera>;

        virtualinvoke $r75.<android.hardware.Camera: void stopPreview()>();

        goto label48;

     label21:
        $r74 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: android.hardware.Camera mCamera>;

        $r76 = r1.<android.os.Message: java.lang.Object obj>;

        $r77 = (android.hardware.Camera$PreviewCallback) $r76;

        virtualinvoke $r74.<android.hardware.Camera: void setPreviewCallbackWithBuffer(android.hardware.Camera$PreviewCallback)>($r77);

        goto label48;

     label22:
        $r70 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: android.hardware.Camera mCamera>;

        $r62 = r1.<android.os.Message: java.lang.Object obj>;

        $r71 = (android.hardware.Camera$PreviewCallback) $r62;

        virtualinvoke $r70.<android.hardware.Camera: void setOneShotPreviewCallback(android.hardware.Camera$PreviewCallback)>($r71);

        goto label48;

     label23:
        $r79 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: android.hardware.Camera mCamera>;

        $r80 = r1.<android.os.Message: java.lang.Object obj>;

        $r81 = (byte[]) $r80;

        $r78 = (byte[]) $r81;

        virtualinvoke $r79.<android.hardware.Camera: void addCallbackBuffer(byte[])>($r78);

        goto label48;

     label24:
        $i14 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: int mCancelAfPending>;

        if $i14 <= 0 goto label25;

        $r50 = staticinvoke <com.android.ex.camera2.portability.AndroidCameraAgentImpl: com.android.ex.camera2.portability.debug.Log$Tag access$000()>();

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("handleMessage - Ignored AUTO_FOCUS because there was ");

        $i15 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: int mCancelAfPending>;

        $r46 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" pending CANCEL_AUTO_FOCUS messages");

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.ex.camera2.portability.debug.Log: void v(com.android.ex.camera2.portability.debug.Log$Tag,java.lang.String)>($r50, $r48);

        goto label48;

     label25:
        $r39 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: com.android.ex.camera2.portability.AndroidCameraAgentImpl this$0>;

        $r45 = staticinvoke <com.android.ex.camera2.portability.AndroidCameraAgentImpl: com.android.ex.camera2.portability.CameraStateHolder access$100(com.android.ex.camera2.portability.AndroidCameraAgentImpl)>($r39);

        virtualinvoke $r45.<com.android.ex.camera2.portability.CameraStateHolder: void setState(int)>(16);

        $r42 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: android.hardware.Camera mCamera>;

        $r44 = r1.<android.os.Message: java.lang.Object obj>;

        $r43 = (android.hardware.Camera$AutoFocusCallback) $r44;

        virtualinvoke $r42.<android.hardware.Camera: void autoFocus(android.hardware.Camera$AutoFocusCallback)>($r43);

        goto label48;

     label26:
        $i13 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: int mCancelAfPending>;

        $i12 = $i13 + 1;

        r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: int mCancelAfPending> = $i12;

        $r37 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: android.hardware.Camera mCamera>;

        virtualinvoke $r37.<android.hardware.Camera: void cancelAutoFocus()>();

        $r41 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: com.android.ex.camera2.portability.AndroidCameraAgentImpl this$0>;

        $r40 = staticinvoke <com.android.ex.camera2.portability.AndroidCameraAgentImpl: com.android.ex.camera2.portability.CameraStateHolder access$100(com.android.ex.camera2.portability.AndroidCameraAgentImpl)>($r41);

        virtualinvoke $r40.<com.android.ex.camera2.portability.CameraStateHolder: void setState(int)>(2);

        goto label48;

     label27:
        $i10 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: int mCancelAfPending>;

        $i11 = $i10 - 1;

        r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: int mCancelAfPending> = $i11;

        goto label48;

     label28:
        $r38 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: android.hardware.Camera mCamera>;

        $r33 = r1.<android.os.Message: java.lang.Object obj>;

        specialinvoke r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: void setAutoFocusMoveCallback(android.hardware.Camera,java.lang.Object)>($r38, $r33);

        goto label48;

     label29:
        $r22 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: android.hardware.Camera mCamera>;

        $r19 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: com.android.ex.camera2.portability.AndroidCameraAgentImpl this$0>;

        $r21 = staticinvoke <com.android.ex.camera2.portability.AndroidCameraAgentImpl: com.android.ex.camera2.portability.CameraDeviceInfo$Characteristics access$200(com.android.ex.camera2.portability.AndroidCameraAgentImpl)>($r19);

        $i5 = r1.<android.os.Message: int arg1>;

        $i4 = virtualinvoke $r21.<com.android.ex.camera2.portability.CameraDeviceInfo$Characteristics: int getPreviewOrientation(int)>($i5);

        virtualinvoke $r22.<android.hardware.Camera: void setDisplayOrientation(int)>($i4);

        $r23 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: com.android.ex.camera2.portability.AndroidCameraAgentImpl$ParametersCache mParameterCache>;

        r183 = virtualinvoke $r23.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$ParametersCache: android.hardware.Camera$Parameters getBlocking()>();

        $i6 = r1.<android.os.Message: int arg2>;

        if $i6 <= 0 goto label30;

        $r25 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: com.android.ex.camera2.portability.AndroidCameraAgentImpl this$0>;

        $r27 = staticinvoke <com.android.ex.camera2.portability.AndroidCameraAgentImpl: com.android.ex.camera2.portability.CameraDeviceInfo$Characteristics access$200(com.android.ex.camera2.portability.AndroidCameraAgentImpl)>($r25);

        $i9 = r1.<android.os.Message: int arg1>;

        $i7 = virtualinvoke $r27.<com.android.ex.camera2.portability.CameraDeviceInfo$Characteristics: int getJpegOrientation(int)>($i9);

        goto label31;

     label30:
        $i7 = 0;

     label31:
        virtualinvoke r183.<android.hardware.Camera$Parameters: void setRotation(int)>($i7);

        $r26 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: android.hardware.Camera mCamera>;

        virtualinvoke $r26.<android.hardware.Camera: void setParameters(android.hardware.Camera$Parameters)>(r183);

        $r24 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: com.android.ex.camera2.portability.AndroidCameraAgentImpl$ParametersCache mParameterCache>;

        virtualinvoke $r24.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$ParametersCache: void invalidate()>();

        goto label48;

     label32:
        $r17 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: com.android.ex.camera2.portability.AndroidCameraAgentImpl$ParametersCache mParameterCache>;

        r184 = virtualinvoke $r17.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$ParametersCache: android.hardware.Camera$Parameters getBlocking()>();

        $i3 = r1.<android.os.Message: int arg1>;

        virtualinvoke r184.<android.hardware.Camera$Parameters: void setRotation(int)>($i3);

        $r18 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: android.hardware.Camera mCamera>;

        virtualinvoke $r18.<android.hardware.Camera: void setParameters(android.hardware.Camera$Parameters)>(r184);

        $r20 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: com.android.ex.camera2.portability.AndroidCameraAgentImpl$ParametersCache mParameterCache>;

        virtualinvoke $r20.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$ParametersCache: void invalidate()>();

        goto label48;

     label33:
        $r34 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: android.hardware.Camera mCamera>;

        $r36 = r1.<android.os.Message: java.lang.Object obj>;

        $r35 = (android.hardware.Camera$OnZoomChangeListener) $r36;

        virtualinvoke $r34.<android.hardware.Camera: void setZoomChangeListener(android.hardware.Camera$OnZoomChangeListener)>($r35);

        goto label48;

     label34:
        $r31 = r1.<android.os.Message: java.lang.Object obj>;

        $r32 = (android.hardware.Camera$FaceDetectionListener) $r31;

        specialinvoke r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: void setFaceDetectionListener(android.hardware.Camera$FaceDetectionListener)>($r32);

        goto label48;

     label35:
        specialinvoke r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: void startFaceDetection()>();

        goto label48;

     label36:
        specialinvoke r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: void stopFaceDetection()>();

        goto label48;

     label37:
        $r29 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: android.hardware.Camera mCamera>;

        $r30 = r1.<android.os.Message: java.lang.Object obj>;

        $r28 = (android.hardware.Camera$ErrorCallback) $r30;

        virtualinvoke $r29.<android.hardware.Camera: void setErrorCallback(android.hardware.Camera$ErrorCallback)>($r28);

        goto label48;

     label38:
        $r49 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: com.android.ex.camera2.portability.AndroidCameraAgentImpl$ParametersCache mParameterCache>;

        r185 = virtualinvoke $r49.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$ParametersCache: android.hardware.Camera$Parameters getBlocking()>();

        $r57 = r1.<android.os.Message: java.lang.Object obj>;

        r186 = (com.android.ex.camera2.portability.CameraSettings) $r57;

        specialinvoke r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: void applySettingsToParameters(com.android.ex.camera2.portability.CameraSettings,android.hardware.Camera$Parameters)>(r186, r185);

        $r58 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: android.hardware.Camera mCamera>;

        virtualinvoke $r58.<android.hardware.Camera: void setParameters(android.hardware.Camera$Parameters)>(r185);

        $r59 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: com.android.ex.camera2.portability.AndroidCameraAgentImpl$ParametersCache mParameterCache>;

        virtualinvoke $r59.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$ParametersCache: void invalidate()>();

        goto label48;

     label39:
        $r64 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: com.android.ex.camera2.portability.AndroidCameraAgentImpl$ParametersCache mParameterCache>;

        r187 = virtualinvoke $r64.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$ParametersCache: android.hardware.Camera$Parameters getBlocking()>();

        $r65 = r1.<android.os.Message: java.lang.Object obj>;

        $r61 = (java.lang.String) $r65;

        virtualinvoke r187.<android.hardware.Camera$Parameters: void unflatten(java.lang.String)>($r61);

        $r60 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: android.hardware.Camera mCamera>;

        virtualinvoke $r60.<android.hardware.Camera: void setParameters(android.hardware.Camera$Parameters)>(r187);

        $r63 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: com.android.ex.camera2.portability.AndroidCameraAgentImpl$ParametersCache mParameterCache>;

        virtualinvoke $r63.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$ParametersCache: void invalidate()>();

        goto label48;

     label40:
        $r54 = r1.<android.os.Message: java.lang.Object obj>;

        $r55 = (android.hardware.Camera$Parameters[]) $r54;

        r188 = (android.hardware.Camera$Parameters[]) $r55;

        $r56 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: com.android.ex.camera2.portability.AndroidCameraAgentImpl$ParametersCache mParameterCache>;

        r189 = virtualinvoke $r56.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$ParametersCache: android.hardware.Camera$Parameters getBlocking()>();

        r188[0] = r189;

        goto label48;

     label41:
        $r67 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: android.hardware.Camera mCamera>;

        $r73 = r1.<android.os.Message: java.lang.Object obj>;

        $r72 = (android.hardware.Camera$PreviewCallback) $r73;

        virtualinvoke $r67.<android.hardware.Camera: void setPreviewCallback(android.hardware.Camera$PreviewCallback)>($r72);

        goto label48;

     label42:
        $i8 = r1.<android.os.Message: int arg1>;

        if $i8 != 1 goto label43;

        $z0 = 1;

        goto label44;

     label43:
        $z0 = 0;

     label44:
        specialinvoke r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: void enableShutterSound(boolean)>($z0);

        goto label48;

     label45:
        $r53 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: com.android.ex.camera2.portability.AndroidCameraAgentImpl$ParametersCache mParameterCache>;

        virtualinvoke $r53.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$ParametersCache: void invalidate()>();

        goto label48;

     label46:
        $r14 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: com.android.ex.camera2.portability.AndroidCameraAgentImpl this$0>;

        $r13 = staticinvoke <com.android.ex.camera2.portability.AndroidCameraAgentImpl: com.android.ex.camera2.portability.CameraStateHolder access$100(com.android.ex.camera2.portability.AndroidCameraAgentImpl)>($r14);

        virtualinvoke $r13.<com.android.ex.camera2.portability.CameraStateHolder: void setState(int)>(8);

        $r16 = r1.<android.os.Message: java.lang.Object obj>;

        $r15 = (com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler$CaptureCallbacks) $r16;

        specialinvoke r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: void capture(com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler$CaptureCallbacks)>($r15);

        goto label48;

     label47:
        $r145 = new java.lang.RuntimeException;

        $r151 = new java.lang.StringBuilder;

        specialinvoke $r151.<java.lang.StringBuilder: void <init>()>();

        $r150 = virtualinvoke $r151.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid CameraProxy message=");

        $i17 = r1.<android.os.Message: int what>;

        $r149 = virtualinvoke $r150.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);

        $r140 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r145.<java.lang.RuntimeException: void <init>(java.lang.String)>($r140);

        throw $r145;

     label48:
        staticinvoke <com.android.ex.camera2.portability.CameraAgent$WaitDoneBundle: void unblockSyncWaiters(android.os.Message)>(r1);

        goto label66;

     label49:
        $r159 := @caughtexception;

        r190 = $r159;

        $r160 = staticinvoke <com.android.ex.camera2.portability.AndroidCameraAgentImpl: com.android.ex.camera2.portability.debug.Log$Tag access$000()>();

        $r153 = new java.lang.StringBuilder;

        specialinvoke $r153.<java.lang.StringBuilder: void <init>()>();

        $r154 = virtualinvoke $r153.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception during camera operation ");

        $i18 = r1.<android.os.Message: int what>;

        $r152 = virtualinvoke $r154.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        $r156 = virtualinvoke $r152.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.ex.camera2.portability.debug.Log: void e(com.android.ex.camera2.portability.debug.Log$Tag,java.lang.String,java.lang.Throwable)>($r160, $r156, r190);

        $i20 = r1.<android.os.Message: int what>;

        if $i20 == 2 goto label54;

        $r163 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: android.hardware.Camera mCamera>;

        if $r163 == null goto label54;

     label50:
        $r162 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: android.hardware.Camera mCamera>;

        virtualinvoke $r162.<android.hardware.Camera: void release()>();

        $r165 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: com.android.ex.camera2.portability.AndroidCameraAgentImpl this$0>;

        $r164 = staticinvoke <com.android.ex.camera2.portability.AndroidCameraAgentImpl: com.android.ex.camera2.portability.CameraStateHolder access$100(com.android.ex.camera2.portability.AndroidCameraAgentImpl)>($r165);

        virtualinvoke $r164.<com.android.ex.camera2.portability.CameraStateHolder: void setState(int)>(1);

     label51:
        goto label53;

     label52:
        $r139 := @caughtexception;

        $r138 = staticinvoke <com.android.ex.camera2.portability.AndroidCameraAgentImpl: com.android.ex.camera2.portability.debug.Log$Tag access$000()>();

        staticinvoke <com.android.ex.camera2.portability.debug.Log: void e(com.android.ex.camera2.portability.debug.Log$Tag,java.lang.String)>($r138, "Fail to release the camera.");

     label53:
        r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: android.hardware.Camera mCamera> = null;

        goto label58;

     label54:
        $r155 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: android.hardware.Camera mCamera>;

        if $r155 != null goto label58;

        $i19 = r1.<android.os.Message: int what>;

        if $i19 != 1 goto label56;

        i25 = r1.<android.os.Message: int arg1>;

        $r171 = r1.<android.os.Message: java.lang.Object obj>;

        if $r171 == null goto label55;

        $r167 = r1.<android.os.Message: java.lang.Object obj>;

        $r166 = (com.android.ex.camera2.portability.CameraAgent$CameraOpenCallback) $r167;

        $i21 = r1.<android.os.Message: int arg1>;

        $r168 = virtualinvoke r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: java.lang.String generateHistoryString(int)>(i25);

        interfaceinvoke $r166.<com.android.ex.camera2.portability.CameraAgent$CameraOpenCallback: void onDeviceOpenFailure(int,java.lang.String)>($i21, $r168);

     label55:
        goto label57;

     label56:
        $r174 = staticinvoke <com.android.ex.camera2.portability.AndroidCameraAgentImpl: com.android.ex.camera2.portability.debug.Log$Tag access$000()>();

        $r173 = new java.lang.StringBuilder;

        specialinvoke $r173.<java.lang.StringBuilder: void <init>()>();

        $r175 = virtualinvoke $r173.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot handle message ");

        $i22 = r1.<android.os.Message: int what>;

        $r170 = virtualinvoke $r175.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i22);

        $r169 = virtualinvoke $r170.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", mCamera is null.");

        $r172 = virtualinvoke $r169.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.ex.camera2.portability.debug.Log: void w(com.android.ex.camera2.portability.debug.Log$Tag,java.lang.String)>($r174, $r172);

     label57:
        staticinvoke <com.android.ex.camera2.portability.CameraAgent$WaitDoneBundle: void unblockSyncWaiters(android.os.Message)>(r1);

        return;

     label58:
        $r137 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: com.android.ex.camera2.portability.AndroidCameraAgentImpl this$0>;

        $r144 = staticinvoke <com.android.ex.camera2.portability.AndroidCameraAgentImpl: com.android.ex.camera2.portability.CameraAgent$CameraExceptionCallback access$500(com.android.ex.camera2.portability.AndroidCameraAgentImpl)>($r137);

        r192 = $r144;

        entermonitor $r144;

     label59:
        $r143 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: com.android.ex.camera2.portability.AndroidCameraAgentImpl this$0>;

        $r142 = staticinvoke <com.android.ex.camera2.portability.AndroidCameraAgentImpl: android.os.Handler access$600(com.android.ex.camera2.portability.AndroidCameraAgentImpl)>($r143);

        $r141 = new com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler$1;

        specialinvoke $r141.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler$1: void <init>(com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler,java.lang.RuntimeException)>(r0, r190);

        virtualinvoke $r142.<android.os.Handler: boolean post(java.lang.Runnable)>($r141);

        exitmonitor r192;

     label60:
        goto label63;

     label61:
        $r161 := @caughtexception;

        r4 = $r161;

        exitmonitor r192;

     label62:
        throw r4;

     label63:
        staticinvoke <com.android.ex.camera2.portability.CameraAgent$WaitDoneBundle: void unblockSyncWaiters(android.os.Message)>(r1);

        goto label66;

     label64:
        $r176 := @caughtexception;

        r5 = $r176;

     label65:
        staticinvoke <com.android.ex.camera2.portability.CameraAgent$WaitDoneBundle: void unblockSyncWaiters(android.os.Message)>(r1);

        throw r5;

     label66:
        return;

        catch java.io.IOException from label08 to label09 with label10;
        catch java.io.IOException from label16 to label17 with label18;
        catch java.lang.RuntimeException from label01 to label48 with label49;
        catch java.lang.Exception from label50 to label51 with label52;
        catch java.lang.Throwable from label59 to label60 with label61;
        catch java.lang.Throwable from label61 to label62 with label61;
        catch java.lang.Throwable from label01 to label48 with label64;
        catch java.lang.Throwable from label49 to label57 with label64;
        catch java.lang.Throwable from label58 to label63 with label64;
        catch java.lang.Throwable from label64 to label65 with label64;
    }

    private void applySettingsToParameters(com.android.ex.camera2.portability.CameraSettings, android.hardware.Camera$Parameters)
    {
        com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler r0;
        com.android.ex.camera2.portability.CameraSettings r1;
        android.hardware.Camera$Parameters r2;
        com.android.ex.camera2.portability.CameraCapabilities$Stringifier r3;
        com.android.ex.camera2.portability.Size r4, r5, r6;
        com.android.ex.camera2.portability.CameraSettings$GpsData r7;
        com.android.ex.camera2.portability.AndroidCameraAgentImpl $r8, $r10, $r14, $r19, $r22, $r25;
        com.android.ex.camera2.portability.AndroidCameraCapabilities $r9, $r12, $r13, $r20, $r23, $r26;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i16, $i17;
        com.android.ex.camera2.portability.CameraCapabilities$Feature $r11, $r15, $r18, $r21, $r24;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.String $r16, $r31, $r32, $r34, $r39;
        com.android.ex.camera2.portability.CameraCapabilities$FocusMode $r17;
        com.android.ex.camera2.portability.CameraCapabilities$SceneMode $r27, $r28, $r35, $r36;
        com.android.ex.camera2.portability.CameraCapabilities$FlashMode $r29, $r30, $r33;
        long $l11;
        double $d0, $d1, $d2;
        java.util.List $r37, $r38, $r40, $r41, $r42;
        float $f0;

        r0 := @this: com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler;

        r1 := @parameter0: com.android.ex.camera2.portability.CameraSettings;

        r2 := @parameter1: android.hardware.Camera$Parameters;

        $r8 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: com.android.ex.camera2.portability.AndroidCameraAgentImpl this$0>;

        $r9 = staticinvoke <com.android.ex.camera2.portability.AndroidCameraAgentImpl: com.android.ex.camera2.portability.AndroidCameraCapabilities access$300(com.android.ex.camera2.portability.AndroidCameraAgentImpl)>($r8);

        r3 = virtualinvoke $r9.<com.android.ex.camera2.portability.AndroidCameraCapabilities: com.android.ex.camera2.portability.CameraCapabilities$Stringifier getStringifier()>();

        r4 = virtualinvoke r1.<com.android.ex.camera2.portability.CameraSettings: com.android.ex.camera2.portability.Size getCurrentPhotoSize()>();

        $i0 = virtualinvoke r4.<com.android.ex.camera2.portability.Size: int width()>();

        $i1 = virtualinvoke r4.<com.android.ex.camera2.portability.Size: int height()>();

        virtualinvoke r2.<android.hardware.Camera$Parameters: void setPictureSize(int,int)>($i0, $i1);

        r5 = virtualinvoke r1.<com.android.ex.camera2.portability.CameraSettings: com.android.ex.camera2.portability.Size getCurrentPreviewSize()>();

        $i2 = virtualinvoke r5.<com.android.ex.camera2.portability.Size: int width()>();

        $i4 = virtualinvoke r5.<com.android.ex.camera2.portability.Size: int height()>();

        virtualinvoke r2.<android.hardware.Camera$Parameters: void setPreviewSize(int,int)>($i2, $i4);

        $i3 = virtualinvoke r1.<com.android.ex.camera2.portability.CameraSettings: int getPreviewFrameRate()>();

        if $i3 != -1 goto label01;

        $i15 = virtualinvoke r1.<com.android.ex.camera2.portability.CameraSettings: int getPreviewFpsRangeMin()>();

        $i16 = virtualinvoke r1.<com.android.ex.camera2.portability.CameraSettings: int getPreviewFpsRangeMax()>();

        virtualinvoke r2.<android.hardware.Camera$Parameters: void setPreviewFpsRange(int,int)>($i15, $i16);

        goto label02;

     label01:
        $i6 = virtualinvoke r1.<com.android.ex.camera2.portability.CameraSettings: int getPreviewFrameRate()>();

        virtualinvoke r2.<android.hardware.Camera$Parameters: void setPreviewFrameRate(int)>($i6);

     label02:
        $i5 = virtualinvoke r1.<com.android.ex.camera2.portability.CameraSettings: int getCurrentPreviewFormat()>();

        virtualinvoke r2.<android.hardware.Camera$Parameters: void setPreviewFormat(int)>($i5);

        $i7 = virtualinvoke r1.<com.android.ex.camera2.portability.CameraSettings: int getPhotoJpegCompressionQuality()>();

        virtualinvoke r2.<android.hardware.Camera$Parameters: void setJpegQuality(int)>($i7);

        $r10 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: com.android.ex.camera2.portability.AndroidCameraAgentImpl this$0>;

        $r12 = staticinvoke <com.android.ex.camera2.portability.AndroidCameraAgentImpl: com.android.ex.camera2.portability.AndroidCameraCapabilities access$300(com.android.ex.camera2.portability.AndroidCameraAgentImpl)>($r10);

        $r11 = <com.android.ex.camera2.portability.CameraCapabilities$Feature: com.android.ex.camera2.portability.CameraCapabilities$Feature ZOOM>;

        $z0 = virtualinvoke $r12.<com.android.ex.camera2.portability.AndroidCameraCapabilities: boolean supports(com.android.ex.camera2.portability.CameraCapabilities$Feature)>($r11);

        if $z0 == 0 goto label03;

        $f0 = virtualinvoke r1.<com.android.ex.camera2.portability.CameraSettings: float getCurrentZoomRatio()>();

        $r42 = virtualinvoke r2.<android.hardware.Camera$Parameters: java.util.List getZoomRatios()>();

        $i17 = specialinvoke r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: int zoomRatioToIndex(float,java.util.List)>($f0, $r42);

        virtualinvoke r2.<android.hardware.Camera$Parameters: void setZoom(int)>($i17);

     label03:
        $i8 = virtualinvoke r1.<com.android.ex.camera2.portability.CameraSettings: int getExposureCompensationIndex()>();

        virtualinvoke r2.<android.hardware.Camera$Parameters: void setExposureCompensation(int)>($i8);

        $r14 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: com.android.ex.camera2.portability.AndroidCameraAgentImpl this$0>;

        $r13 = staticinvoke <com.android.ex.camera2.portability.AndroidCameraAgentImpl: com.android.ex.camera2.portability.AndroidCameraCapabilities access$300(com.android.ex.camera2.portability.AndroidCameraAgentImpl)>($r14);

        $r15 = <com.android.ex.camera2.portability.CameraCapabilities$Feature: com.android.ex.camera2.portability.CameraCapabilities$Feature AUTO_EXPOSURE_LOCK>;

        $z1 = virtualinvoke $r13.<com.android.ex.camera2.portability.AndroidCameraCapabilities: boolean supports(com.android.ex.camera2.portability.CameraCapabilities$Feature)>($r15);

        if $z1 == 0 goto label04;

        $z7 = virtualinvoke r1.<com.android.ex.camera2.portability.CameraSettings: boolean isAutoExposureLocked()>();

        virtualinvoke r2.<android.hardware.Camera$Parameters: void setAutoExposureLock(boolean)>($z7);

     label04:
        $r17 = virtualinvoke r1.<com.android.ex.camera2.portability.CameraSettings: com.android.ex.camera2.portability.CameraCapabilities$FocusMode getCurrentFocusMode()>();

        $r16 = virtualinvoke r3.<com.android.ex.camera2.portability.CameraCapabilities$Stringifier: java.lang.String stringify(com.android.ex.camera2.portability.CameraCapabilities$FocusMode)>($r17);

        virtualinvoke r2.<android.hardware.Camera$Parameters: void setFocusMode(java.lang.String)>($r16);

        $r19 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: com.android.ex.camera2.portability.AndroidCameraAgentImpl this$0>;

        $r20 = staticinvoke <com.android.ex.camera2.portability.AndroidCameraAgentImpl: com.android.ex.camera2.portability.AndroidCameraCapabilities access$300(com.android.ex.camera2.portability.AndroidCameraAgentImpl)>($r19);

        $r18 = <com.android.ex.camera2.portability.CameraCapabilities$Feature: com.android.ex.camera2.portability.CameraCapabilities$Feature AUTO_WHITE_BALANCE_LOCK>;

        $z2 = virtualinvoke $r20.<com.android.ex.camera2.portability.AndroidCameraCapabilities: boolean supports(com.android.ex.camera2.portability.CameraCapabilities$Feature)>($r18);

        if $z2 == 0 goto label05;

        $z6 = virtualinvoke r1.<com.android.ex.camera2.portability.CameraSettings: boolean isAutoWhiteBalanceLocked()>();

        virtualinvoke r2.<android.hardware.Camera$Parameters: void setAutoWhiteBalanceLock(boolean)>($z6);

     label05:
        $r22 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: com.android.ex.camera2.portability.AndroidCameraAgentImpl this$0>;

        $r23 = staticinvoke <com.android.ex.camera2.portability.AndroidCameraAgentImpl: com.android.ex.camera2.portability.AndroidCameraCapabilities access$300(com.android.ex.camera2.portability.AndroidCameraAgentImpl)>($r22);

        $r21 = <com.android.ex.camera2.portability.CameraCapabilities$Feature: com.android.ex.camera2.portability.CameraCapabilities$Feature FOCUS_AREA>;

        $z3 = virtualinvoke $r23.<com.android.ex.camera2.portability.AndroidCameraCapabilities: boolean supports(com.android.ex.camera2.portability.CameraCapabilities$Feature)>($r21);

        if $z3 == 0 goto label07;

        $r37 = virtualinvoke r1.<com.android.ex.camera2.portability.CameraSettings: java.util.List getFocusAreas()>();

        $i13 = interfaceinvoke $r37.<java.util.List: int size()>();

        if $i13 == 0 goto label06;

        $r38 = virtualinvoke r1.<com.android.ex.camera2.portability.CameraSettings: java.util.List getFocusAreas()>();

        virtualinvoke r2.<android.hardware.Camera$Parameters: void setFocusAreas(java.util.List)>($r38);

        goto label07;

     label06:
        virtualinvoke r2.<android.hardware.Camera$Parameters: void setFocusAreas(java.util.List)>(null);

     label07:
        $r25 = r0.<com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler: com.android.ex.camera2.portability.AndroidCameraAgentImpl this$0>;

        $r26 = staticinvoke <com.android.ex.camera2.portability.AndroidCameraAgentImpl: com.android.ex.camera2.portability.AndroidCameraCapabilities access$300(com.android.ex.camera2.portability.AndroidCameraAgentImpl)>($r25);

        $r24 = <com.android.ex.camera2.portability.CameraCapabilities$Feature: com.android.ex.camera2.portability.CameraCapabilities$Feature METERING_AREA>;

        $z4 = virtualinvoke $r26.<com.android.ex.camera2.portability.AndroidCameraCapabilities: boolean supports(com.android.ex.camera2.portability.CameraCapabilities$Feature)>($r24);

        if $z4 == 0 goto label09;

        $r40 = virtualinvoke r1.<com.android.ex.camera2.portability.CameraSettings: java.util.List getMeteringAreas()>();

        $i14 = interfaceinvoke $r40.<java.util.List: int size()>();

        if $i14 == 0 goto label08;

        $r41 = virtualinvoke r1.<com.android.ex.camera2.portability.CameraSettings: java.util.List getMeteringAreas()>();

        virtualinvoke r2.<android.hardware.Camera$Parameters: void setMeteringAreas(java.util.List)>($r41);

        goto label09;

     label08:
        virtualinvoke r2.<android.hardware.Camera$Parameters: void setMeteringAreas(java.util.List)>(null);

     label09:
        $r29 = virtualinvoke r1.<com.android.ex.camera2.portability.CameraSettings: com.android.ex.camera2.portability.CameraCapabilities$FlashMode getCurrentFlashMode()>();

        $r30 = <com.android.ex.camera2.portability.CameraCapabilities$FlashMode: com.android.ex.camera2.portability.CameraCapabilities$FlashMode NO_FLASH>;

        if $r29 == $r30 goto label10;

        $r33 = virtualinvoke r1.<com.android.ex.camera2.portability.CameraSettings: com.android.ex.camera2.portability.CameraCapabilities$FlashMode getCurrentFlashMode()>();

        $r39 = virtualinvoke r3.<com.android.ex.camera2.portability.CameraCapabilities$Stringifier: java.lang.String stringify(com.android.ex.camera2.portability.CameraCapabilities$FlashMode)>($r33);

        virtualinvoke r2.<android.hardware.Camera$Parameters: void setFlashMode(java.lang.String)>($r39);

     label10:
        $r27 = virtualinvoke r1.<com.android.ex.camera2.portability.CameraSettings: com.android.ex.camera2.portability.CameraCapabilities$SceneMode getCurrentSceneMode()>();

        $r28 = <com.android.ex.camera2.portability.CameraCapabilities$SceneMode: com.android.ex.camera2.portability.CameraCapabilities$SceneMode NO_SCENE_MODE>;

        if $r27 == $r28 goto label11;

        $r36 = virtualinvoke r1.<com.android.ex.camera2.portability.CameraSettings: com.android.ex.camera2.portability.CameraCapabilities$SceneMode getCurrentSceneMode()>();

        if $r36 == null goto label11;

        $r35 = virtualinvoke r1.<com.android.ex.camera2.portability.CameraSettings: com.android.ex.camera2.portability.CameraCapabilities$SceneMode getCurrentSceneMode()>();

        $r34 = virtualinvoke r3.<com.android.ex.camera2.portability.CameraCapabilities$Stringifier: java.lang.String stringify(com.android.ex.camera2.portability.CameraCapabilities$SceneMode)>($r35);

        virtualinvoke r2.<android.hardware.Camera$Parameters: void setSceneMode(java.lang.String)>($r34);

     label11:
        $z5 = virtualinvoke r1.<com.android.ex.camera2.portability.CameraSettings: boolean isRecordingHintEnabled()>();

        virtualinvoke r2.<android.hardware.Camera$Parameters: void setRecordingHint(boolean)>($z5);

        r6 = virtualinvoke r1.<com.android.ex.camera2.portability.CameraSettings: com.android.ex.camera2.portability.Size getExifThumbnailSize()>();

        $i10 = virtualinvoke r6.<com.android.ex.camera2.portability.Size: int width()>();

        $i9 = virtualinvoke r6.<com.android.ex.camera2.portability.Size: int height()>();

        virtualinvoke r2.<android.hardware.Camera$Parameters: void setJpegThumbnailSize(int,int)>($i10, $i9);

        $i12 = virtualinvoke r1.<com.android.ex.camera2.portability.CameraSettings: int getCurrentPhotoFormat()>();

        virtualinvoke r2.<android.hardware.Camera$Parameters: void setPictureFormat(int)>($i12);

        r7 = virtualinvoke r1.<com.android.ex.camera2.portability.CameraSettings: com.android.ex.camera2.portability.CameraSettings$GpsData getGpsData()>();

        if r7 != null goto label12;

        virtualinvoke r2.<android.hardware.Camera$Parameters: void removeGpsData()>();

        goto label13;

     label12:
        $l11 = r7.<com.android.ex.camera2.portability.CameraSettings$GpsData: long timeStamp>;

        virtualinvoke r2.<android.hardware.Camera$Parameters: void setGpsTimestamp(long)>($l11);

        $r31 = r7.<com.android.ex.camera2.portability.CameraSettings$GpsData: java.lang.String processingMethod>;

        if $r31 == null goto label13;

        $d2 = r7.<com.android.ex.camera2.portability.CameraSettings$GpsData: double altitude>;

        virtualinvoke r2.<android.hardware.Camera$Parameters: void setGpsAltitude(double)>($d2);

        $d1 = r7.<com.android.ex.camera2.portability.CameraSettings$GpsData: double latitude>;

        virtualinvoke r2.<android.hardware.Camera$Parameters: void setGpsLatitude(double)>($d1);

        $d0 = r7.<com.android.ex.camera2.portability.CameraSettings$GpsData: double longitude>;

        virtualinvoke r2.<android.hardware.Camera$Parameters: void setGpsLongitude(double)>($d0);

        $r32 = r7.<com.android.ex.camera2.portability.CameraSettings$GpsData: java.lang.String processingMethod>;

        virtualinvoke r2.<android.hardware.Camera$Parameters: void setGpsProcessingMethod(java.lang.String)>($r32);

     label13:
        return;
    }

    private int zoomRatioToIndex(float, java.util.List)
    {
        com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler r0;
        float f0, $f1;
        java.util.List r1;
        int i0, i1, $i2, $i3, i4;
        java.lang.Integer $r2;

        r0 := @this: com.android.ex.camera2.portability.AndroidCameraAgentImpl$CameraHandler;

        f0 := @parameter0: float;

        r1 := @parameter1: java.util.List;

        $f1 = f0 * 100.0F;

        i0 = (int) $f1;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        i1 = staticinvoke <java.util.Collections: int binarySearch(java.util.List,java.lang.Object)>(r1, $r2);

        if i1 < 0 goto label1;

        return i1;

     label1:
        $i2 = i1 + 1;

        i4 = neg $i2;

        $i3 = interfaceinvoke r1.<java.util.List: int size()>();

        if i4 != $i3 goto label2;

        i4 = i4 + -1;

     label2:
        return i4;
    }
}
