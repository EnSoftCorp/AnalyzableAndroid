public class com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder extends java.lang.Object implements com.bumptech.glide.load.ResourceDecoder
{
    private static final java.lang.String ID;
    private final com.bumptech.glide.load.resource.bitmap.Downsampler downsampler;
    private com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool;
    private com.bumptech.glide.load.DecodeFormat decodeFormat;
    private java.lang.String id;

    public void <init>(android.content.Context)
    {
        com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder r0;
        android.content.Context r1;
        com.bumptech.glide.Glide $r2;
        com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool $r3;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder;

        r1 := @parameter0: android.content.Context;

        $r2 = staticinvoke <com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>(r1);

        $r3 = virtualinvoke $r2.<com.bumptech.glide.Glide: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool getBitmapPool()>();

        specialinvoke r0.<com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder: void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)>($r3);

        return;
    }

    public void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)
    {
        com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder r0;
        com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool r1;
        com.bumptech.glide.load.DecodeFormat $r2;
        com.bumptech.glide.load.resource.bitmap.Downsampler $r3;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder;

        r1 := @parameter0: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;

        $r3 = <com.bumptech.glide.load.resource.bitmap.Downsampler: com.bumptech.glide.load.resource.bitmap.Downsampler AT_LEAST>;

        $r2 = <com.bumptech.glide.load.DecodeFormat: com.bumptech.glide.load.DecodeFormat ALWAYS_ARGB_8888>;

        specialinvoke r0.<com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder: void <init>(com.bumptech.glide.load.resource.bitmap.Downsampler,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,com.bumptech.glide.load.DecodeFormat)>($r3, r1, $r2);

        return;
    }

    public void <init>(com.bumptech.glide.load.resource.bitmap.Downsampler, com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool, com.bumptech.glide.load.DecodeFormat)
    {
        com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder r0;
        com.bumptech.glide.load.resource.bitmap.Downsampler r1;
        com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool r2;
        com.bumptech.glide.load.DecodeFormat r3;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder;

        r1 := @parameter0: com.bumptech.glide.load.resource.bitmap.Downsampler;

        r2 := @parameter1: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;

        r3 := @parameter2: com.bumptech.glide.load.DecodeFormat;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder: com.bumptech.glide.load.resource.bitmap.Downsampler downsampler> = r1;

        r0.<com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool> = r2;

        r0.<com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder: com.bumptech.glide.load.DecodeFormat decodeFormat> = r3;

        return;
    }

    public com.bumptech.glide.load.engine.Resource decode(java.io.InputStream, int, int)
    {
        com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder r0;
        java.io.InputStream r1;
        int i0, i1;
        android.graphics.Bitmap r2;
        com.bumptech.glide.load.DecodeFormat $r3;
        com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool $r4, $r7;
        com.bumptech.glide.load.resource.bitmap.Downsampler $r5;
        com.bumptech.glide.load.resource.bitmap.BitmapResource $r6;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder;

        r1 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r5 = r0.<com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder: com.bumptech.glide.load.resource.bitmap.Downsampler downsampler>;

        $r4 = r0.<com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool>;

        $r3 = r0.<com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder: com.bumptech.glide.load.DecodeFormat decodeFormat>;

        r2 = virtualinvoke $r5.<com.bumptech.glide.load.resource.bitmap.Downsampler: android.graphics.Bitmap decode(java.io.InputStream,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,int,int,com.bumptech.glide.load.DecodeFormat)>(r1, $r4, i0, i1, $r3);

        if r2 != null goto label1;

        return null;

     label1:
        $r6 = new com.bumptech.glide.load.resource.bitmap.BitmapResource;

        $r7 = r0.<com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool>;

        specialinvoke $r6.<com.bumptech.glide.load.resource.bitmap.BitmapResource: void <init>(android.graphics.Bitmap,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)>(r2, $r7);

        return $r6;
    }

    public java.lang.String getId()
    {
        com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder r0;
        java.lang.String $r1, $r2, $r6, $r9, $r11;
        java.lang.StringBuilder $r3, $r4, $r7, $r10;
        com.bumptech.glide.load.resource.bitmap.Downsampler $r5;
        com.bumptech.glide.load.DecodeFormat $r8;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder;

        $r1 = r0.<com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder: java.lang.String id>;

        if $r1 != null goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("StreamBitmapDecoder.com.bumptech.glide.load.resource.bitmap");

        $r5 = r0.<com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder: com.bumptech.glide.load.resource.bitmap.Downsampler downsampler>;

        $r6 = virtualinvoke $r5.<com.bumptech.glide.load.resource.bitmap.Downsampler: java.lang.String getId()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = r0.<com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder: com.bumptech.glide.load.DecodeFormat decodeFormat>;

        $r9 = virtualinvoke $r8.<com.bumptech.glide.load.DecodeFormat: java.lang.String name()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder: java.lang.String id> = $r11;

     label1:
        $r2 = r0.<com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder: java.lang.String id>;

        return $r2;
    }

    public volatile com.bumptech.glide.load.engine.Resource decode(java.lang.Object, int, int) throws java.io.IOException
    {
        com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder r0;
        java.lang.Object r1;
        int i0, i1;
        java.io.InputStream $r2;
        com.bumptech.glide.load.engine.Resource $r3;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = (java.io.InputStream) r1;

        $r3 = virtualinvoke r0.<com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder: com.bumptech.glide.load.engine.Resource decode(java.io.InputStream,int,int)>($r2, i0, i1);

        return $r3;
    }

    public static void <clinit>()
    {
        <com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder: java.lang.String ID> = "StreamBitmapDecoder.com.bumptech.glide.load.resource.bitmap";

        return;
    }
}
