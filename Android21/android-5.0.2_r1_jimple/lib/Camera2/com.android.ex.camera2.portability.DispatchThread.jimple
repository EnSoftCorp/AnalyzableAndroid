public class com.android.ex.camera2.portability.DispatchThread extends java.lang.Thread
{
    private static final com.android.ex.camera2.portability.debug.Log$Tag TAG;
    private static final long MAX_MESSAGE_QUEUE_LENGTH;
    private final java.util.Queue mJobQueue;
    private java.lang.Boolean mIsEnded;
    private android.os.Handler mCameraHandler;
    private android.os.HandlerThread mCameraHandlerThread;

    public void <init>(android.os.Handler, android.os.HandlerThread)
    {
        java.lang.Boolean $r0;
        com.android.ex.camera2.portability.DispatchThread r1;
        android.os.Handler r2;
        android.os.HandlerThread r3;
        java.util.LinkedList $r4;

        r1 := @this: com.android.ex.camera2.portability.DispatchThread;

        r2 := @parameter0: android.os.Handler;

        r3 := @parameter1: android.os.HandlerThread;

        specialinvoke r1.<java.lang.Thread: void <init>(java.lang.String)>("Camera Job Dispatch Thread");

        $r4 = new java.util.LinkedList;

        specialinvoke $r4.<java.util.LinkedList: void <init>()>();

        r1.<com.android.ex.camera2.portability.DispatchThread: java.util.Queue mJobQueue> = $r4;

        $r0 = new java.lang.Boolean;

        specialinvoke $r0.<java.lang.Boolean: void <init>(boolean)>(0);

        r1.<com.android.ex.camera2.portability.DispatchThread: java.lang.Boolean mIsEnded> = $r0;

        r1.<com.android.ex.camera2.portability.DispatchThread: android.os.Handler mCameraHandler> = r2;

        r1.<com.android.ex.camera2.portability.DispatchThread: android.os.HandlerThread mCameraHandlerThread> = r3;

        return;
    }

    public void runJob(java.lang.Runnable)
    {
        com.android.ex.camera2.portability.DispatchThread r0;
        java.lang.Runnable r1;
        java.util.Queue r2, $r4, $r5, $r6, $r7;
        java.lang.Throwable r3, $r10;
        boolean $z0;
        int $i0;
        long $l1;
        byte $b2;
        java.lang.RuntimeException $r8;
        java.lang.IllegalStateException $r9;

        r0 := @this: com.android.ex.camera2.portability.DispatchThread;

        r1 := @parameter0: java.lang.Runnable;

        $z0 = specialinvoke r0.<com.android.ex.camera2.portability.DispatchThread: boolean isEnded()>();

        if $z0 == 0 goto label1;

        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Trying to run job on interrupted dispatcher thread");

        throw $r9;

     label1:
        $r4 = r0.<com.android.ex.camera2.portability.DispatchThread: java.util.Queue mJobQueue>;

        r2 = $r4;

        entermonitor $r4;

     label2:
        $r5 = r0.<com.android.ex.camera2.portability.DispatchThread: java.util.Queue mJobQueue>;

        $i0 = interfaceinvoke $r5.<java.util.Queue: int size()>();

        $l1 = (long) $i0;

        $b2 = $l1 cmp 256L;

        if $b2 != 0 goto label3;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>("Camera master thread job queue full");

        throw $r8;

     label3:
        $r6 = r0.<com.android.ex.camera2.portability.DispatchThread: java.util.Queue mJobQueue>;

        interfaceinvoke $r6.<java.util.Queue: boolean add(java.lang.Object)>(r1);

        $r7 = r0.<com.android.ex.camera2.portability.DispatchThread: java.util.Queue mJobQueue>;

        virtualinvoke $r7.<java.lang.Object: void notifyAll()>();

        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r10 := @caughtexception;

        r3 = $r10;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void runJobSync(java.lang.Runnable, java.lang.Object, long, java.lang.String)
    {
        com.android.ex.camera2.portability.DispatchThread r0;
        java.lang.Runnable r1;
        java.lang.Object r2, r5;
        long l0, l1, $l2, $l4, $l5;
        java.lang.String r3, r4;
        java.lang.Throwable r7, $r17;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12;
        byte $b3, $b6;
        java.lang.IllegalStateException $r14, $r16;
        java.lang.InterruptedException $r15;

        r0 := @this: com.android.ex.camera2.portability.DispatchThread;

        r1 := @parameter0: java.lang.Runnable;

        r2 := @parameter1: java.lang.Object;

        l0 := @parameter2: long;

        r3 := @parameter3: java.lang.String;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timeout waiting ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ms for ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        r4 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        r5 = r2;

        entermonitor r2;

     label1:
        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        l1 = $l2 + l0;

     label2:
        virtualinvoke r0.<com.android.ex.camera2.portability.DispatchThread: void runJob(java.lang.Runnable)>(r1);

        virtualinvoke r2.<java.lang.Object: void wait(long)>(l0);

        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $b3 = $l4 cmp l1;

        if $b3 <= 0 goto label3;

        $r14 = new java.lang.IllegalStateException;

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>(r4);

        throw $r14;

     label3:
        goto label5;

     label4:
        $r15 := @caughtexception;

        $l5 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $b6 = $l5 cmp l1;

        if $b6 <= 0 goto label5;

        $r16 = new java.lang.IllegalStateException;

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>(r4);

        throw $r16;

     label5:
        exitmonitor r5;

     label6:
        goto label9;

     label7:
        $r17 := @caughtexception;

        r7 = $r17;

        exitmonitor r5;

     label8:
        throw r7;

     label9:
        return;

        catch java.lang.InterruptedException from label2 to label3 with label4;
        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public void end()
    {
        com.android.ex.camera2.portability.DispatchThread r0;
        java.lang.Boolean r1, $r4, $r5;
        java.lang.Throwable r2, r3, $r8, $r9;
        java.util.Queue $r6, $r7, r10;

        r0 := @this: com.android.ex.camera2.portability.DispatchThread;

        $r4 = r0.<com.android.ex.camera2.portability.DispatchThread: java.lang.Boolean mIsEnded>;

        r1 = $r4;

        entermonitor $r4;

     label01:
        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        r0.<com.android.ex.camera2.portability.DispatchThread: java.lang.Boolean mIsEnded> = $r5;

        exitmonitor r1;

     label02:
        goto label05;

     label03:
        $r8 := @caughtexception;

        r2 = $r8;

        exitmonitor r1;

     label04:
        throw r2;

     label05:
        $r6 = r0.<com.android.ex.camera2.portability.DispatchThread: java.util.Queue mJobQueue>;

        r10 = $r6;

        entermonitor $r6;

     label06:
        $r7 = r0.<com.android.ex.camera2.portability.DispatchThread: java.util.Queue mJobQueue>;

        virtualinvoke $r7.<java.lang.Object: void notifyAll()>();

        exitmonitor r10;

     label07:
        goto label10;

     label08:
        $r9 := @caughtexception;

        r3 = $r9;

        exitmonitor r10;

     label09:
        throw r3;

     label10:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private boolean isEnded()
    {
        com.android.ex.camera2.portability.DispatchThread r0;
        java.lang.Boolean r1, $r3, $r4;
        java.lang.Throwable r2, $r5;
        boolean $z0;

        r0 := @this: com.android.ex.camera2.portability.DispatchThread;

        $r3 = r0.<com.android.ex.camera2.portability.DispatchThread: java.lang.Boolean mIsEnded>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.ex.camera2.portability.DispatchThread: java.lang.Boolean mIsEnded>;

        $z0 = virtualinvoke $r4.<java.lang.Boolean: boolean booleanValue()>();

        exitmonitor r1;

     label2:
        return $z0;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void run()
    {
        com.android.ex.camera2.portability.DispatchThread r0, r19;
        java.util.Queue r1, $r4, $r5, $r6, $r12;
        java.lang.Throwable r2, r3, $r13, $r15;
        int $i0;
        java.lang.Object $r7;
        com.android.ex.camera2.portability.DispatchThread$1 $r9;
        android.os.Handler $r10;
        boolean $z0, $z1;
        android.os.HandlerThread $r11;
        java.lang.InterruptedException $r14, $r16;
        com.android.ex.camera2.portability.debug.Log$Tag $r17;
        java.lang.Runnable r18;

        r0 := @this: com.android.ex.camera2.portability.DispatchThread;

     label01:
        $r4 = r0.<com.android.ex.camera2.portability.DispatchThread: java.util.Queue mJobQueue>;

        r1 = $r4;

        entermonitor $r4;

     label02:
        $r5 = r0.<com.android.ex.camera2.portability.DispatchThread: java.util.Queue mJobQueue>;

        $i0 = interfaceinvoke $r5.<java.util.Queue: int size()>();

        if $i0 != 0 goto label06;

        $z1 = specialinvoke r0.<com.android.ex.camera2.portability.DispatchThread: boolean isEnded()>();

        if $z1 != 0 goto label06;

     label03:
        $r12 = r0.<com.android.ex.camera2.portability.DispatchThread: java.util.Queue mJobQueue>;

        virtualinvoke $r12.<java.lang.Object: void wait()>();

     label04:
        goto label02;

     label05:
        $r16 := @caughtexception;

        $r17 = <com.android.ex.camera2.portability.DispatchThread: com.android.ex.camera2.portability.debug.Log$Tag TAG>;

        staticinvoke <com.android.ex.camera2.portability.debug.Log: void w(com.android.ex.camera2.portability.debug.Log$Tag,java.lang.String)>($r17, "Dispatcher thread wait() interrupted, exiting");

        goto label06;

     label06:
        $r6 = r0.<com.android.ex.camera2.portability.DispatchThread: java.util.Queue mJobQueue>;

        $r7 = interfaceinvoke $r6.<java.util.Queue: java.lang.Object poll()>();

        r18 = (java.lang.Runnable) $r7;

        exitmonitor r1;

     label07:
        goto label10;

     label08:
        $r15 := @caughtexception;

        r2 = $r15;

        exitmonitor r1;

     label09:
        throw r2;

     label10:
        if r18 != null goto label11;

        $z0 = specialinvoke r0.<com.android.ex.camera2.portability.DispatchThread: boolean isEnded()>();

        if $z0 == 0 goto label01;

        goto label21;

     label11:
        interfaceinvoke r18.<java.lang.Runnable: void run()>();

        r19 = r0;

        entermonitor r0;

     label12:
        $r10 = r0.<com.android.ex.camera2.portability.DispatchThread: android.os.Handler mCameraHandler>;

        $r9 = new com.android.ex.camera2.portability.DispatchThread$1;

        specialinvoke $r9.<com.android.ex.camera2.portability.DispatchThread$1: void <init>(com.android.ex.camera2.portability.DispatchThread)>(r0);

        virtualinvoke $r10.<android.os.Handler: boolean post(java.lang.Runnable)>($r9);

     label13:
        virtualinvoke r0.<java.lang.Object: void wait()>();

     label14:
        goto label16;

     label15:
        $r14 := @caughtexception;

     label16:
        exitmonitor r19;

     label17:
        goto label20;

     label18:
        $r13 := @caughtexception;

        r3 = $r13;

        exitmonitor r19;

     label19:
        throw r3;

     label20:
        goto label01;

     label21:
        $r11 = r0.<com.android.ex.camera2.portability.DispatchThread: android.os.HandlerThread mCameraHandlerThread>;

        virtualinvoke $r11.<android.os.HandlerThread: boolean quitSafely()>();

        return;

        catch java.lang.InterruptedException from label03 to label04 with label05;
        catch java.lang.Throwable from label02 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
        catch java.lang.InterruptedException from label13 to label14 with label15;
        catch java.lang.Throwable from label12 to label17 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
    }

    static void <clinit>()
    {
        com.android.ex.camera2.portability.debug.Log$Tag $r0;

        <com.android.ex.camera2.portability.DispatchThread: long MAX_MESSAGE_QUEUE_LENGTH> = 256L;

        $r0 = new com.android.ex.camera2.portability.debug.Log$Tag;

        specialinvoke $r0.<com.android.ex.camera2.portability.debug.Log$Tag: void <init>(java.lang.String)>("DispatchThread");

        <com.android.ex.camera2.portability.DispatchThread: com.android.ex.camera2.portability.debug.Log$Tag TAG> = $r0;

        return;
    }
}
