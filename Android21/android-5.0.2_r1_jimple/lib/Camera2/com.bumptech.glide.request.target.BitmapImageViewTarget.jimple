public class com.bumptech.glide.request.target.BitmapImageViewTarget extends com.bumptech.glide.request.target.ViewTarget
{
    private final android.widget.ImageView view;

    public void <init>(android.widget.ImageView)
    {
        com.bumptech.glide.request.target.BitmapImageViewTarget r0;
        android.widget.ImageView r1;

        r0 := @this: com.bumptech.glide.request.target.BitmapImageViewTarget;

        r1 := @parameter0: android.widget.ImageView;

        specialinvoke r0.<com.bumptech.glide.request.target.ViewTarget: void <init>(android.view.View)>(r1);

        r0.<com.bumptech.glide.request.target.BitmapImageViewTarget: android.widget.ImageView view> = r1;

        return;
    }

    public void onResourceReady(android.graphics.Bitmap, com.bumptech.glide.request.GlideAnimation)
    {
        com.bumptech.glide.request.target.BitmapImageViewTarget r0;
        android.graphics.Bitmap r1;
        com.bumptech.glide.request.GlideAnimation r2;
        android.widget.ImageView $r3, $r4, $r6;
        android.graphics.drawable.Drawable $r5;
        boolean $z0;

        r0 := @this: com.bumptech.glide.request.target.BitmapImageViewTarget;

        r1 := @parameter0: android.graphics.Bitmap;

        r2 := @parameter1: com.bumptech.glide.request.GlideAnimation;

        if r2 == null goto label1;

        $r4 = r0.<com.bumptech.glide.request.target.BitmapImageViewTarget: android.widget.ImageView view>;

        $r5 = virtualinvoke $r4.<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>();

        $r6 = r0.<com.bumptech.glide.request.target.BitmapImageViewTarget: android.widget.ImageView view>;

        $z0 = interfaceinvoke r2.<com.bumptech.glide.request.GlideAnimation: boolean animate(android.graphics.drawable.Drawable,java.lang.Object,android.view.View,com.bumptech.glide.request.target.Target)>($r5, r1, $r6, r0);

        if $z0 != 0 goto label2;

     label1:
        $r3 = r0.<com.bumptech.glide.request.target.BitmapImageViewTarget: android.widget.ImageView view>;

        virtualinvoke $r3.<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>(r1);

     label2:
        return;
    }

    public void setPlaceholder(android.graphics.drawable.Drawable)
    {
        com.bumptech.glide.request.target.BitmapImageViewTarget r0;
        android.graphics.drawable.Drawable r1;
        android.widget.ImageView $r2;

        r0 := @this: com.bumptech.glide.request.target.BitmapImageViewTarget;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = r0.<com.bumptech.glide.request.target.BitmapImageViewTarget: android.widget.ImageView view>;

        virtualinvoke $r2.<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>(r1);

        return;
    }

    public volatile void onResourceReady(java.lang.Object, com.bumptech.glide.request.GlideAnimation)
    {
        com.bumptech.glide.request.target.BitmapImageViewTarget r0;
        java.lang.Object r1;
        com.bumptech.glide.request.GlideAnimation r2;
        android.graphics.Bitmap $r3;

        r0 := @this: com.bumptech.glide.request.target.BitmapImageViewTarget;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: com.bumptech.glide.request.GlideAnimation;

        $r3 = (android.graphics.Bitmap) r1;

        virtualinvoke r0.<com.bumptech.glide.request.target.BitmapImageViewTarget: void onResourceReady(android.graphics.Bitmap,com.bumptech.glide.request.GlideAnimation)>($r3, r2);

        return;
    }
}
