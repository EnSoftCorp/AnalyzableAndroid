public class com.android.ex.camera2.portability.AndroidCameraSettings extends com.android.ex.camera2.portability.CameraSettings
{
    private static final com.android.ex.camera2.portability.debug.Log$Tag TAG;
    private static final java.lang.String TRUE;
    private static final java.lang.String RECORDING_HINT;

    public void <init>(com.android.ex.camera2.portability.CameraCapabilities, android.hardware.Camera$Parameters)
    {
        com.android.ex.camera2.portability.AndroidCameraSettings r0;
        com.android.ex.camera2.portability.CameraCapabilities r1;
        android.hardware.Camera$Parameters r2;
        com.android.ex.camera2.portability.CameraCapabilities$Stringifier r3;
        android.hardware.Camera$Size r4, r6;
        int[] r5;
        com.android.ex.camera2.portability.Size $r7, $r18;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        com.android.ex.camera2.portability.CameraCapabilities$Feature $r8, $r15;
        boolean $z1, $z2, $z3, $z4;
        com.android.ex.camera2.portability.CameraCapabilities$FlashMode $r9;
        java.lang.String $r10, $r12, $r14, $r16, $r17;
        com.android.ex.camera2.portability.CameraCapabilities$FocusMode $r11;
        com.android.ex.camera2.portability.CameraCapabilities$SceneMode $r13;
        java.util.List $r19;
        java.lang.Integer $r20;
        java.lang.Object $r21;
        com.android.ex.camera2.portability.debug.Log$Tag $r22;
        float $f0, $f1;

        r0 := @this: com.android.ex.camera2.portability.AndroidCameraSettings;

        r1 := @parameter0: com.android.ex.camera2.portability.CameraCapabilities;

        r2 := @parameter1: android.hardware.Camera$Parameters;

        specialinvoke r0.<com.android.ex.camera2.portability.CameraSettings: void <init>()>();

        if r2 != null goto label1;

        $r22 = <com.android.ex.camera2.portability.AndroidCameraSettings: com.android.ex.camera2.portability.debug.Log$Tag TAG>;

        staticinvoke <com.android.ex.camera2.portability.debug.Log: void w(com.android.ex.camera2.portability.debug.Log$Tag,java.lang.String)>($r22, "Settings ctor requires a non-null Camera.Parameters.");

        return;

     label1:
        r3 = virtualinvoke r1.<com.android.ex.camera2.portability.CameraCapabilities: com.android.ex.camera2.portability.CameraCapabilities$Stringifier getStringifier()>();

        virtualinvoke r0.<com.android.ex.camera2.portability.AndroidCameraSettings: void setSizesLocked(boolean)>(0);

        r4 = virtualinvoke r2.<android.hardware.Camera$Parameters: android.hardware.Camera$Size getPreviewSize()>();

        $r7 = new com.android.ex.camera2.portability.Size;

        $i1 = r4.<android.hardware.Camera$Size: int width>;

        $i0 = r4.<android.hardware.Camera$Size: int height>;

        specialinvoke $r7.<com.android.ex.camera2.portability.Size: void <init>(int,int)>($i1, $i0);

        virtualinvoke r0.<com.android.ex.camera2.portability.AndroidCameraSettings: boolean setPreviewSize(com.android.ex.camera2.portability.Size)>($r7);

        $i2 = virtualinvoke r2.<android.hardware.Camera$Parameters: int getPreviewFrameRate()>();

        virtualinvoke r0.<com.android.ex.camera2.portability.AndroidCameraSettings: void setPreviewFrameRate(int)>($i2);

        r5 = newarray (int)[2];

        virtualinvoke r2.<android.hardware.Camera$Parameters: void getPreviewFpsRange(int[])>(r5);

        $i4 = r5[0];

        $i3 = r5[1];

        virtualinvoke r0.<com.android.ex.camera2.portability.AndroidCameraSettings: void setPreviewFpsRange(int,int)>($i4, $i3);

        $i5 = virtualinvoke r2.<android.hardware.Camera$Parameters: int getPreviewFormat()>();

        virtualinvoke r0.<com.android.ex.camera2.portability.AndroidCameraSettings: void setPreviewFormat(int)>($i5);

        $r8 = <com.android.ex.camera2.portability.CameraCapabilities$Feature: com.android.ex.camera2.portability.CameraCapabilities$Feature ZOOM>;

        $z1 = virtualinvoke r1.<com.android.ex.camera2.portability.CameraCapabilities: boolean supports(com.android.ex.camera2.portability.CameraCapabilities$Feature)>($r8);

        if $z1 == 0 goto label2;

        $r19 = virtualinvoke r2.<android.hardware.Camera$Parameters: java.util.List getZoomRatios()>();

        $i12 = virtualinvoke r2.<android.hardware.Camera$Parameters: int getZoom()>();

        $r21 = interfaceinvoke $r19.<java.util.List: java.lang.Object get(int)>($i12);

        $r20 = (java.lang.Integer) $r21;

        $i11 = virtualinvoke $r20.<java.lang.Integer: int intValue()>();

        $f0 = (float) $i11;

        $f1 = $f0 / 100.0F;

        virtualinvoke r0.<com.android.ex.camera2.portability.AndroidCameraSettings: void setZoomRatio(float)>($f1);

        goto label3;

     label2:
        virtualinvoke r0.<com.android.ex.camera2.portability.AndroidCameraSettings: void setZoomRatio(float)>(1.0F);

     label3:
        $i6 = virtualinvoke r2.<android.hardware.Camera$Parameters: int getExposureCompensation()>();

        virtualinvoke r0.<com.android.ex.camera2.portability.AndroidCameraSettings: void setExposureCompensationIndex(int)>($i6);

        $r10 = virtualinvoke r2.<android.hardware.Camera$Parameters: java.lang.String getFlashMode()>();

        $r9 = virtualinvoke r3.<com.android.ex.camera2.portability.CameraCapabilities$Stringifier: com.android.ex.camera2.portability.CameraCapabilities$FlashMode flashModeFromString(java.lang.String)>($r10);

        virtualinvoke r0.<com.android.ex.camera2.portability.AndroidCameraSettings: void setFlashMode(com.android.ex.camera2.portability.CameraCapabilities$FlashMode)>($r9);

        $r12 = virtualinvoke r2.<android.hardware.Camera$Parameters: java.lang.String getFocusMode()>();

        $r11 = virtualinvoke r3.<com.android.ex.camera2.portability.CameraCapabilities$Stringifier: com.android.ex.camera2.portability.CameraCapabilities$FocusMode focusModeFromString(java.lang.String)>($r12);

        virtualinvoke r0.<com.android.ex.camera2.portability.AndroidCameraSettings: void setFocusMode(com.android.ex.camera2.portability.CameraCapabilities$FocusMode)>($r11);

        $r14 = virtualinvoke r2.<android.hardware.Camera$Parameters: java.lang.String getSceneMode()>();

        $r13 = virtualinvoke r3.<com.android.ex.camera2.portability.CameraCapabilities$Stringifier: com.android.ex.camera2.portability.CameraCapabilities$SceneMode sceneModeFromString(java.lang.String)>($r14);

        virtualinvoke r0.<com.android.ex.camera2.portability.AndroidCameraSettings: void setSceneMode(com.android.ex.camera2.portability.CameraCapabilities$SceneMode)>($r13);

        $r15 = <com.android.ex.camera2.portability.CameraCapabilities$Feature: com.android.ex.camera2.portability.CameraCapabilities$Feature VIDEO_STABILIZATION>;

        $z2 = virtualinvoke r1.<com.android.ex.camera2.portability.CameraCapabilities: boolean supports(com.android.ex.camera2.portability.CameraCapabilities$Feature)>($r15);

        if $z2 == 0 goto label4;

        $z4 = virtualinvoke r0.<com.android.ex.camera2.portability.AndroidCameraSettings: boolean isVideoStabilizationEnabled()>();

        virtualinvoke r0.<com.android.ex.camera2.portability.AndroidCameraSettings: void setVideoStabilization(boolean)>($z4);

     label4:
        $r17 = "true";

        $r16 = virtualinvoke r2.<android.hardware.Camera$Parameters: java.lang.String get(java.lang.String)>("recording-hint");

        $z3 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        virtualinvoke r0.<com.android.ex.camera2.portability.AndroidCameraSettings: void setRecordingHintEnabled(boolean)>($z3);

        $i7 = virtualinvoke r2.<android.hardware.Camera$Parameters: int getJpegQuality()>();

        virtualinvoke r0.<com.android.ex.camera2.portability.AndroidCameraSettings: void setPhotoJpegCompressionQuality(int)>($i7);

        r6 = virtualinvoke r2.<android.hardware.Camera$Parameters: android.hardware.Camera$Size getPictureSize()>();

        $r18 = new com.android.ex.camera2.portability.Size;

        $i9 = r6.<android.hardware.Camera$Size: int width>;

        $i8 = r6.<android.hardware.Camera$Size: int height>;

        specialinvoke $r18.<com.android.ex.camera2.portability.Size: void <init>(int,int)>($i9, $i8);

        virtualinvoke r0.<com.android.ex.camera2.portability.AndroidCameraSettings: boolean setPhotoSize(com.android.ex.camera2.portability.Size)>($r18);

        $i10 = virtualinvoke r2.<android.hardware.Camera$Parameters: int getPictureFormat()>();

        virtualinvoke r0.<com.android.ex.camera2.portability.AndroidCameraSettings: void setPhotoFormat(int)>($i10);

        return;
    }

    public void <init>(com.android.ex.camera2.portability.AndroidCameraSettings)
    {
        com.android.ex.camera2.portability.AndroidCameraSettings r0, r1;

        r0 := @this: com.android.ex.camera2.portability.AndroidCameraSettings;

        r1 := @parameter0: com.android.ex.camera2.portability.AndroidCameraSettings;

        specialinvoke r0.<com.android.ex.camera2.portability.CameraSettings: void <init>(com.android.ex.camera2.portability.CameraSettings)>(r1);

        return;
    }

    public com.android.ex.camera2.portability.CameraSettings copy()
    {
        com.android.ex.camera2.portability.AndroidCameraSettings r0, $r1;

        r0 := @this: com.android.ex.camera2.portability.AndroidCameraSettings;

        $r1 = new com.android.ex.camera2.portability.AndroidCameraSettings;

        specialinvoke $r1.<com.android.ex.camera2.portability.AndroidCameraSettings: void <init>(com.android.ex.camera2.portability.AndroidCameraSettings)>(r0);

        return $r1;
    }

    static void <clinit>()
    {
        com.android.ex.camera2.portability.debug.Log$Tag $r0;

        <com.android.ex.camera2.portability.AndroidCameraSettings: java.lang.String RECORDING_HINT> = "recording-hint";

        <com.android.ex.camera2.portability.AndroidCameraSettings: java.lang.String TRUE> = "true";

        $r0 = new com.android.ex.camera2.portability.debug.Log$Tag;

        specialinvoke $r0.<com.android.ex.camera2.portability.debug.Log$Tag: void <init>(java.lang.String)>("AndCamSet");

        <com.android.ex.camera2.portability.AndroidCameraSettings: com.android.ex.camera2.portability.debug.Log$Tag TAG> = $r0;

        return;
    }
}
