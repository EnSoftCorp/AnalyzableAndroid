public class com.android.camera.util.CaptureDataSerializer extends java.lang.Object
{
    private static final com.android.camera.debug.Log$Tag TAG;

    public void <init>()
    {
        com.android.camera.util.CaptureDataSerializer r0;

        r0 := @this: com.android.camera.util.CaptureDataSerializer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String toString(java.lang.String, android.hardware.camera2.CaptureRequest)
    {
        java.lang.String r0, $r4;
        android.hardware.camera2.CaptureRequest r1;
        java.io.StringWriter r2, $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.hardware.camera2.CaptureRequest;

        $r3 = new java.io.StringWriter;

        specialinvoke $r3.<java.io.StringWriter: void <init>()>();

        r2 = $r3;

        staticinvoke <com.android.camera.util.CaptureDataSerializer: void dumpMetadata(java.lang.String,android.hardware.camera2.CaptureRequest,java.io.Writer)>(r0, r1, r2);

        $r4 = virtualinvoke r2.<java.io.StringWriter: java.lang.String toString()>();

        return $r4;
    }

    public static void toFile(java.lang.String, android.hardware.camera2.CameraMetadata, java.io.File)
    {
        java.lang.String r0, $r9, $r11;
        android.hardware.camera2.CameraMetadata r1;
        java.io.File r2;
        java.io.FileWriter r3, $r4;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r5;
        java.lang.StringBuilder $r6, $r7, $r10;
        java.lang.Class $r8;
        android.hardware.camera2.CaptureResult $r12;
        android.hardware.camera2.CaptureRequest $r13;
        com.android.camera.debug.Log$Tag $r14;
        java.io.IOException $r15, r16;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.hardware.camera2.CameraMetadata;

        r2 := @parameter2: java.io.File;

     label1:
        $r4 = new java.io.FileWriter;

        specialinvoke $r4.<java.io.FileWriter: void <init>(java.io.File,boolean)>(r2, 1);

        r3 = $r4;

        $z0 = r1 instanceof android.hardware.camera2.CaptureRequest;

        if $z0 == 0 goto label2;

        $r13 = (android.hardware.camera2.CaptureRequest) r1;

        staticinvoke <com.android.camera.util.CaptureDataSerializer: void dumpMetadata(java.lang.String,android.hardware.camera2.CaptureRequest,java.io.Writer)>(r0, $r13, r3);

        goto label4;

     label2:
        $z1 = r1 instanceof android.hardware.camera2.CaptureResult;

        if $z1 == 0 goto label3;

        $r12 = (android.hardware.camera2.CaptureResult) r1;

        staticinvoke <com.android.camera.util.CaptureDataSerializer: void dumpMetadata(java.lang.String,android.hardware.camera2.CaptureResult,java.io.Writer)>(r0, $r12, r3);

        goto label4;

     label3:
        virtualinvoke r3.<java.io.FileWriter: void close()>();

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot generate debug data from type ");

        $r8 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r5;

     label4:
        virtualinvoke r3.<java.io.FileWriter: void close()>();

     label5:
        goto label7;

     label6:
        $r15 := @caughtexception;

        r16 = $r15;

        $r14 = <com.android.camera.util.CaptureDataSerializer: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void e(com.android.camera.debug.Log$Tag,java.lang.String,java.lang.Throwable)>($r14, "Could not write capture data to file.", r16);

     label7:
        return;

        catch java.io.IOException from label1 to label5 with label6;
    }

    private static void dumpMetadata(java.lang.String, android.hardware.camera2.CaptureRequest, java.io.Writer)
    {
        java.lang.String r0;
        android.hardware.camera2.CaptureRequest r1;
        java.io.Writer r2;
        com.android.camera.util.CaptureDataSerializer$1 r3, $r4;
        java.io.BufferedWriter $r5;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.hardware.camera2.CaptureRequest;

        r2 := @parameter2: java.io.Writer;

        $r4 = new com.android.camera.util.CaptureDataSerializer$1;

        specialinvoke $r4.<com.android.camera.util.CaptureDataSerializer$1: void <init>(android.hardware.camera2.CaptureRequest,java.lang.String)>(r1, r0);

        r3 = $r4;

        $r5 = new java.io.BufferedWriter;

        specialinvoke $r5.<java.io.BufferedWriter: void <init>(java.io.Writer)>(r2);

        staticinvoke <com.android.camera.util.CaptureDataSerializer: void dumpMetadata(com.android.camera.util.CaptureDataSerializer$Writeable,java.io.Writer)>(r3, $r5);

        return;
    }

    private static void dumpMetadata(java.lang.String, android.hardware.camera2.CaptureResult, java.io.Writer)
    {
        java.lang.String r0;
        android.hardware.camera2.CaptureResult r1;
        java.io.Writer r2;
        com.android.camera.util.CaptureDataSerializer$2 r3, $r4;
        java.io.BufferedWriter $r5;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.hardware.camera2.CaptureResult;

        r2 := @parameter2: java.io.Writer;

        $r4 = new com.android.camera.util.CaptureDataSerializer$2;

        specialinvoke $r4.<com.android.camera.util.CaptureDataSerializer$2: void <init>(android.hardware.camera2.CaptureResult,java.lang.String)>(r1, r0);

        r3 = $r4;

        $r5 = new java.io.BufferedWriter;

        specialinvoke $r5.<java.io.BufferedWriter: void <init>(java.io.Writer)>(r2);

        staticinvoke <com.android.camera.util.CaptureDataSerializer: void dumpMetadata(com.android.camera.util.CaptureDataSerializer$Writeable,java.io.Writer)>(r3, $r5);

        return;
    }

    private static java.lang.String metadataValueToString(java.lang.Object)
    {
        java.lang.Object r0, r2;
        java.lang.StringBuilder r1, $r14;
        int i0, i1, $i2;
        java.lang.Class $r3;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String $r4, $r6, $r8, $r9, $r11, $r16, $r18;
        android.util.Pair $r5;
        android.hardware.camera2.params.TonemapCurve $r7;
        android.hardware.camera2.params.ColorSpaceTransform $r10;
        android.hardware.camera2.params.RggbChannelVector $r12;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return "<null>";

     label1:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r3.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label5;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        r1 = $r14;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        i0 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>(r0);

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        r2 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>(r0, i1);

        $r18 = staticinvoke <com.android.camera.util.CaptureDataSerializer: java.lang.String metadataValueToString(java.lang.Object)>(r2);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $i2 = i0 - 1;

        if i1 == $i2 goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r16 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r16;

     label5:
        $z1 = r0 instanceof android.hardware.camera2.params.RggbChannelVector;

        if $z1 == 0 goto label6;

        $r12 = (android.hardware.camera2.params.RggbChannelVector) r0;

        $r11 = staticinvoke <com.android.camera.util.CaptureDataSerializer: java.lang.String toString(android.hardware.camera2.params.RggbChannelVector)>($r12);

        return $r11;

     label6:
        $z2 = r0 instanceof android.hardware.camera2.params.ColorSpaceTransform;

        if $z2 == 0 goto label7;

        $r10 = (android.hardware.camera2.params.ColorSpaceTransform) r0;

        $r9 = staticinvoke <com.android.camera.util.CaptureDataSerializer: java.lang.String toString(android.hardware.camera2.params.ColorSpaceTransform)>($r10);

        return $r9;

     label7:
        $z3 = r0 instanceof android.hardware.camera2.params.TonemapCurve;

        if $z3 == 0 goto label8;

        $r7 = (android.hardware.camera2.params.TonemapCurve) r0;

        $r8 = staticinvoke <com.android.camera.util.CaptureDataSerializer: java.lang.String toString(android.hardware.camera2.params.TonemapCurve)>($r7);

        return $r8;

     label8:
        $z4 = r0 instanceof android.util.Pair;

        if $z4 == 0 goto label9;

        $r5 = (android.util.Pair) r0;

        $r6 = staticinvoke <com.android.camera.util.CaptureDataSerializer: java.lang.String toString(android.util.Pair)>($r5);

        return $r6;

     label9:
        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r4;
    }

    private static void dumpMetadata(com.android.camera.util.CaptureDataSerializer$Writeable, java.io.Writer)
    {
        com.android.camera.util.CaptureDataSerializer$Writeable r0;
        java.io.Writer r1;
        java.io.IOException r2, r4, $r5, $r7, $r10, $r12, r14, r15;
        java.lang.Throwable r3, $r9;
        com.android.camera.debug.Log$Tag $r6, $r8, $r11, $r13;

        r0 := @parameter0: com.android.camera.util.CaptureDataSerializer$Writeable;

        r1 := @parameter1: java.io.Writer;

     label01:
        interfaceinvoke r0.<com.android.camera.util.CaptureDataSerializer$Writeable: void write(java.io.Writer)>(r1);

     label02:
        if r1 == null goto label03;

        virtualinvoke r1.<java.io.Writer: void close()>();

     label03:
        goto label14;

     label04:
        $r12 := @caughtexception;

        r2 = $r12;

        $r13 = <com.android.camera.util.CaptureDataSerializer: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void e(com.android.camera.debug.Log$Tag,java.lang.String,java.lang.Throwable)>($r13, "dumpMetadata - Failed to close writer.", r2);

        goto label14;

     label05:
        $r10 := @caughtexception;

        r14 = $r10;

        $r11 = <com.android.camera.util.CaptureDataSerializer: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void e(com.android.camera.debug.Log$Tag,java.lang.String,java.lang.Throwable)>($r11, "dumpMetadata - Failed to dump metadata", r14);

     label06:
        if r1 == null goto label07;

        virtualinvoke r1.<java.io.Writer: void close()>();

     label07:
        goto label14;

     label08:
        $r5 := @caughtexception;

        r15 = $r5;

        $r6 = <com.android.camera.util.CaptureDataSerializer: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void e(com.android.camera.debug.Log$Tag,java.lang.String,java.lang.Throwable)>($r6, "dumpMetadata - Failed to close writer.", r15);

        goto label14;

     label09:
        $r9 := @caughtexception;

        r3 = $r9;

     label10:
        if r1 == null goto label11;

        virtualinvoke r1.<java.io.Writer: void close()>();

     label11:
        goto label13;

     label12:
        $r7 := @caughtexception;

        r4 = $r7;

        $r8 = <com.android.camera.util.CaptureDataSerializer: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void e(com.android.camera.debug.Log$Tag,java.lang.String,java.lang.Throwable)>($r8, "dumpMetadata - Failed to close writer.", r4);

     label13:
        throw r3;

     label14:
        return;

        catch java.io.IOException from label02 to label03 with label04;
        catch java.io.IOException from label01 to label02 with label05;
        catch java.io.IOException from label06 to label07 with label08;
        catch java.lang.Throwable from label01 to label02 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.io.IOException from label10 to label11 with label12;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    private static java.lang.String toString(android.hardware.camera2.params.RggbChannelVector)
    {
        android.hardware.camera2.params.RggbChannelVector r0;
        java.lang.StringBuilder r1, $r2;
        float $f0, $f1, $f2, $f3;
        java.lang.String $r12;

        r0 := @parameter0: android.hardware.camera2.params.RggbChannelVector;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RggbChannelVector:");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" R:");

        $f0 = virtualinvoke r0.<android.hardware.camera2.params.RggbChannelVector: float getRed()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" G(even):");

        $f1 = virtualinvoke r0.<android.hardware.camera2.params.RggbChannelVector: float getGreenEven()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" G(odd):");

        $f2 = virtualinvoke r0.<android.hardware.camera2.params.RggbChannelVector: float getGreenOdd()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" B:");

        $f3 = virtualinvoke r0.<android.hardware.camera2.params.RggbChannelVector: float getBlue()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        $r12 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    private static java.lang.String toString(android.hardware.camera2.params.ColorSpaceTransform)
    {
        android.hardware.camera2.params.ColorSpaceTransform r0;
        java.lang.StringBuilder r1, $r3;
        android.util.Rational[] r2;
        java.lang.String $r5, $r7;

        r0 := @parameter0: android.hardware.camera2.params.ColorSpaceTransform;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r1 = $r3;

        r2 = newarray (android.util.Rational)[9];

        virtualinvoke r0.<android.hardware.camera2.params.ColorSpaceTransform: void copyElements(android.util.Rational[],int)>(r2, 0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ColorSpaceTransform: ");

        $r5 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r2);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    private static java.lang.String toString(android.hardware.camera2.params.TonemapCurve)
    {
        android.hardware.camera2.params.TonemapCurve r0;
        java.lang.StringBuilder r1, $r5;
        float[] r2, r3, r4;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r8, $r10, $r15, $r16;

        r0 := @parameter0: android.hardware.camera2.params.TonemapCurve;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        r1 = $r5;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TonemapCurve:");

        $i0 = virtualinvoke r0.<android.hardware.camera2.params.TonemapCurve: int getPointCount(int)>(0);

        $i1 = $i0 * 2;

        r2 = newarray (float)[$i1];

        virtualinvoke r0.<android.hardware.camera2.params.TonemapCurve: void copyColorCurve(int,float[],int)>(0, r2, 0);

        $i2 = virtualinvoke r0.<android.hardware.camera2.params.TonemapCurve: int getPointCount(int)>(1);

        $i3 = $i2 * 2;

        r3 = newarray (float)[$i3];

        virtualinvoke r0.<android.hardware.camera2.params.TonemapCurve: void copyColorCurve(int,float[],int)>(1, r3, 0);

        $i4 = virtualinvoke r0.<android.hardware.camera2.params.TonemapCurve: int getPointCount(int)>(2);

        $i5 = $i4 * 2;

        r4 = newarray (float)[$i5];

        virtualinvoke r0.<android.hardware.camera2.params.TonemapCurve: void copyColorCurve(int,float[],int)>(2, r4, 0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\nReds: ");

        $r8 = staticinvoke <java.util.Arrays: java.lang.String toString(float[])>(r2);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\nGreens: ");

        $r10 = staticinvoke <java.util.Arrays: java.lang.String toString(float[])>(r3);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n\nBlues: ");

        $r15 = staticinvoke <java.util.Arrays: java.lang.String toString(float[])>(r4);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r16 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r16;
    }

    private static java.lang.String toString(android.util.Pair)
    {
        android.util.Pair r0;
        java.lang.StringBuilder $r1, $r2, $r5, $r6, $r9;
        java.lang.Object $r3, $r7;
        java.lang.String $r4, $r8, $r10;

        r0 := @parameter0: android.util.Pair;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pair: ");

        $r3 = r0.<android.util.Pair: java.lang.Object first>;

        $r4 = staticinvoke <com.android.camera.util.CaptureDataSerializer: java.lang.String metadataValueToString(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" / ");

        $r7 = r0.<android.util.Pair: java.lang.Object second>;

        $r8 = staticinvoke <com.android.camera.util.CaptureDataSerializer: java.lang.String metadataValueToString(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    static java.lang.String access$000(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.String $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <com.android.camera.util.CaptureDataSerializer: java.lang.String metadataValueToString(java.lang.Object)>(r0);

        return $r1;
    }

    static void <clinit>()
    {
        com.android.camera.debug.Log$Tag $r0;

        $r0 = new com.android.camera.debug.Log$Tag;

        specialinvoke $r0.<com.android.camera.debug.Log$Tag: void <init>(java.lang.String)>("CaptureDataSerilzr");

        <com.android.camera.util.CaptureDataSerializer: com.android.camera.debug.Log$Tag TAG> = $r0;

        return;
    }
}
