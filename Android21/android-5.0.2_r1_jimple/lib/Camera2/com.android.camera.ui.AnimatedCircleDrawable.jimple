public class com.android.camera.ui.AnimatedCircleDrawable extends android.graphics.drawable.Drawable
{
    private static final int CIRCLE_ANIM_DURATION_MS;
    private static int DRAWABLE_MAX_LEVEL;
    private int mCanvasWidth;
    private int mCanvasHeight;
    private int mAlpha;
    private int mColor;
    private android.graphics.Paint mPaint;
    private int mRadius;
    private int mSmallRadiusTarget;

    public void <init>(int)
    {
        com.android.camera.ui.AnimatedCircleDrawable r0;
        int i0;
        android.graphics.Paint $r1, $r2;

        r0 := @this: com.android.camera.ui.AnimatedCircleDrawable;

        i0 := @parameter0: int;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        r0.<com.android.camera.ui.AnimatedCircleDrawable: int mAlpha> = 255;

        $r1 = new android.graphics.Paint;

        specialinvoke $r1.<android.graphics.Paint: void <init>()>();

        r0.<com.android.camera.ui.AnimatedCircleDrawable: android.graphics.Paint mPaint> = $r1;

        $r2 = r0.<com.android.camera.ui.AnimatedCircleDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        r0.<com.android.camera.ui.AnimatedCircleDrawable: int mSmallRadiusTarget> = i0;

        return;
    }

    public void setColor(int)
    {
        com.android.camera.ui.AnimatedCircleDrawable r0;
        int i0;

        r0 := @this: com.android.camera.ui.AnimatedCircleDrawable;

        i0 := @parameter0: int;

        r0.<com.android.camera.ui.AnimatedCircleDrawable: int mColor> = i0;

        specialinvoke r0.<com.android.camera.ui.AnimatedCircleDrawable: void updatePaintColor()>();

        return;
    }

    private void updatePaintColor()
    {
        com.android.camera.ui.AnimatedCircleDrawable r0;
        int i0, $i1, $i2, $i3, $i4;
        android.graphics.Paint $r1;

        r0 := @this: com.android.camera.ui.AnimatedCircleDrawable;

        $i1 = r0.<com.android.camera.ui.AnimatedCircleDrawable: int mAlpha>;

        $i4 = $i1 << 24;

        $i2 = r0.<com.android.camera.ui.AnimatedCircleDrawable: int mColor>;

        $i3 = $i2 & 16777215;

        i0 = $i4 | $i3;

        $r1 = r0.<com.android.camera.ui.AnimatedCircleDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Paint: void setColor(int)>(i0);

        virtualinvoke r0.<com.android.camera.ui.AnimatedCircleDrawable: void invalidateSelf()>();

        return;
    }

    public int getOpacity()
    {
        com.android.camera.ui.AnimatedCircleDrawable r0;

        r0 := @this: com.android.camera.ui.AnimatedCircleDrawable;

        return -3;
    }

    public void setAlpha(int)
    {
        com.android.camera.ui.AnimatedCircleDrawable r0;
        int i0;

        r0 := @this: com.android.camera.ui.AnimatedCircleDrawable;

        i0 := @parameter0: int;

        r0.<com.android.camera.ui.AnimatedCircleDrawable: int mAlpha> = i0;

        specialinvoke r0.<com.android.camera.ui.AnimatedCircleDrawable: void updatePaintColor()>();

        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        com.android.camera.ui.AnimatedCircleDrawable r0;
        android.graphics.ColorFilter r1;

        r0 := @this: com.android.camera.ui.AnimatedCircleDrawable;

        r1 := @parameter0: android.graphics.ColorFilter;

        return;
    }

    public boolean onLevelChange(int)
    {
        com.android.camera.ui.AnimatedCircleDrawable r0;
        int i0;

        r0 := @this: com.android.camera.ui.AnimatedCircleDrawable;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.camera.ui.AnimatedCircleDrawable: void invalidateSelf()>();

        return 1;
    }

    public void animateToSmallRadius()
    {
        com.android.camera.ui.AnimatedCircleDrawable r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.animation.ValueAnimator r1;
        int[] $r2;
        com.android.camera.ui.AnimatedCircleDrawable$1 $r4;
        com.android.camera.util.Gusterpolator $r5;

        r0 := @this: com.android.camera.ui.AnimatedCircleDrawable;

        $i3 = r0.<com.android.camera.ui.AnimatedCircleDrawable: int mSmallRadiusTarget>;

        $i2 = r0.<com.android.camera.ui.AnimatedCircleDrawable: int mCanvasWidth>;

        $i1 = r0.<com.android.camera.ui.AnimatedCircleDrawable: int mCanvasHeight>;

        $i4 = staticinvoke <com.android.camera.ui.AnimatedCircleDrawable: int diagonalLength(int,int)>($i2, $i1);

        $i6 = $i4 / 2;

        $i5 = <com.android.camera.ui.AnimatedCircleDrawable: int DRAWABLE_MAX_LEVEL>;

        i0 = staticinvoke <com.android.camera.ui.AnimatedCircleDrawable: int map(int,int,int,int,int)>($i3, 0, $i6, 0, $i5);

        $r2 = newarray (int)[2];

        $i7 = virtualinvoke r0.<com.android.camera.ui.AnimatedCircleDrawable: int getLevel()>();

        $r2[0] = $i7;

        $r2[1] = i0;

        r1 = staticinvoke <android.animation.ValueAnimator: android.animation.ValueAnimator ofInt(int[])>($r2);

        virtualinvoke r1.<android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>(300L);

        $r5 = <com.android.camera.util.Gusterpolator: com.android.camera.util.Gusterpolator INSTANCE>;

        virtualinvoke r1.<android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r5);

        $r4 = new com.android.camera.ui.AnimatedCircleDrawable$1;

        specialinvoke $r4.<com.android.camera.ui.AnimatedCircleDrawable$1: void <init>(com.android.camera.ui.AnimatedCircleDrawable)>(r0);

        virtualinvoke r1.<android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r4);

        virtualinvoke r1.<android.animation.ValueAnimator: void start()>();

        return;
    }

    public void animateToFullSize()
    {
        com.android.camera.ui.AnimatedCircleDrawable r0;
        android.animation.ValueAnimator r1;
        int[] $r2;
        int $i0, $i1;
        com.android.camera.util.Gusterpolator $r4;
        com.android.camera.ui.AnimatedCircleDrawable$2 $r5;

        r0 := @this: com.android.camera.ui.AnimatedCircleDrawable;

        $r2 = newarray (int)[2];

        $i0 = virtualinvoke r0.<com.android.camera.ui.AnimatedCircleDrawable: int getLevel()>();

        $r2[0] = $i0;

        $i1 = <com.android.camera.ui.AnimatedCircleDrawable: int DRAWABLE_MAX_LEVEL>;

        $r2[1] = $i1;

        r1 = staticinvoke <android.animation.ValueAnimator: android.animation.ValueAnimator ofInt(int[])>($r2);

        virtualinvoke r1.<android.animation.ValueAnimator: android.animation.ValueAnimator setDuration(long)>(300L);

        $r4 = <com.android.camera.util.Gusterpolator: com.android.camera.util.Gusterpolator INSTANCE>;

        virtualinvoke r1.<android.animation.ValueAnimator: void setInterpolator(android.animation.TimeInterpolator)>($r4);

        $r5 = new com.android.camera.ui.AnimatedCircleDrawable$2;

        specialinvoke $r5.<com.android.camera.ui.AnimatedCircleDrawable$2: void <init>(com.android.camera.ui.AnimatedCircleDrawable)>(r0);

        virtualinvoke r1.<android.animation.ValueAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r5);

        virtualinvoke r1.<android.animation.ValueAnimator: void start()>();

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        com.android.camera.ui.AnimatedCircleDrawable r0;
        android.graphics.Canvas r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        float $f0, $f1, $f2, $f3, $f4;
        android.graphics.Paint $r2;

        r0 := @this: com.android.camera.ui.AnimatedCircleDrawable;

        r1 := @parameter0: android.graphics.Canvas;

        $i0 = virtualinvoke r1.<android.graphics.Canvas: int getWidth()>();

        r0.<com.android.camera.ui.AnimatedCircleDrawable: int mCanvasWidth> = $i0;

        $i1 = virtualinvoke r1.<android.graphics.Canvas: int getHeight()>();

        r0.<com.android.camera.ui.AnimatedCircleDrawable: int mCanvasHeight> = $i1;

        $i2 = virtualinvoke r0.<com.android.camera.ui.AnimatedCircleDrawable: int getLevel()>();

        $i3 = <com.android.camera.ui.AnimatedCircleDrawable: int DRAWABLE_MAX_LEVEL>;

        $i4 = virtualinvoke r1.<android.graphics.Canvas: int getWidth()>();

        $i5 = virtualinvoke r1.<android.graphics.Canvas: int getHeight()>();

        $i6 = staticinvoke <com.android.camera.ui.AnimatedCircleDrawable: int diagonalLength(int,int)>($i4, $i5);

        $i7 = $i6 / 2;

        $i8 = staticinvoke <com.android.camera.ui.AnimatedCircleDrawable: int map(int,int,int,int,int)>($i2, 0, $i3, 0, $i7);

        r0.<com.android.camera.ui.AnimatedCircleDrawable: int mRadius> = $i8;

        $i9 = virtualinvoke r1.<android.graphics.Canvas: int getWidth()>();

        $f0 = (float) $i9;

        $f1 = $f0 / 2.0F;

        $i10 = virtualinvoke r1.<android.graphics.Canvas: int getHeight()>();

        $f2 = (float) $i10;

        $f3 = $f2 / 2.0F;

        $i11 = r0.<com.android.camera.ui.AnimatedCircleDrawable: int mRadius>;

        $f4 = (float) $i11;

        $r2 = r0.<com.android.camera.ui.AnimatedCircleDrawable: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f1, $f3, $f4, $r2);

        return;
    }

    private static int map(int, int, int, int, int)
    {
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        $i6 = i0 - i1;

        $i5 = i4 - i3;

        $i8 = $i6 * $i5;

        $i7 = i2 - i1;

        $i9 = $i8 / $i7;

        $i10 = $i9 + i3;

        return $i10;
    }

    private static int diagonalLength(int, int)
    {
        int i0, i1, $i2, $i3, $i4, $i5;
        double $d0, $d1;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i3 = i0 * i0;

        $i2 = i1 * i1;

        $i4 = $i3 + $i2;

        $d0 = (double) $i4;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        $i5 = (int) $d1;

        return $i5;
    }

    static void <clinit>()
    {
        <com.android.camera.ui.AnimatedCircleDrawable: int CIRCLE_ANIM_DURATION_MS> = 300;

        <com.android.camera.ui.AnimatedCircleDrawable: int DRAWABLE_MAX_LEVEL> = 10000;

        return;
    }
}
