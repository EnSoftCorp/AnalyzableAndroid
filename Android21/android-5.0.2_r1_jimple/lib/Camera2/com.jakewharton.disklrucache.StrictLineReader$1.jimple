class com.jakewharton.disklrucache.StrictLineReader$1 extends java.io.ByteArrayOutputStream
{
    final com.jakewharton.disklrucache.StrictLineReader this$0;

    void <init>(com.jakewharton.disklrucache.StrictLineReader, int)
    {
        com.jakewharton.disklrucache.StrictLineReader$1 r0;
        com.jakewharton.disklrucache.StrictLineReader r1;
        int i0;

        r0 := @this: com.jakewharton.disklrucache.StrictLineReader$1;

        r1 := @parameter0: com.jakewharton.disklrucache.StrictLineReader;

        i0 := @parameter1: int;

        r0.<com.jakewharton.disklrucache.StrictLineReader$1: com.jakewharton.disklrucache.StrictLineReader this$0> = r1;

        specialinvoke r0.<java.io.ByteArrayOutputStream: void <init>(int)>(i0);

        return;
    }

    public java.lang.String toString()
    {
        com.jakewharton.disklrucache.StrictLineReader$1 r0;
        int i0, $i1, $i2, $i3, $i5, $i6;
        java.io.UnsupportedEncodingException r1, $r9;
        java.lang.String $r2, $r6;
        com.jakewharton.disklrucache.StrictLineReader $r3;
        byte[] $r4, $r7;
        java.nio.charset.Charset $r5;
        byte $b4;
        java.lang.AssertionError $r8;

        r0 := @this: com.jakewharton.disklrucache.StrictLineReader$1;

        $i1 = r0.<com.jakewharton.disklrucache.StrictLineReader$1: int count>;

        if $i1 <= 0 goto label1;

        $r7 = r0.<com.jakewharton.disklrucache.StrictLineReader$1: byte[] buf>;

        $i2 = r0.<com.jakewharton.disklrucache.StrictLineReader$1: int count>;

        $i3 = $i2 - 1;

        $b4 = $r7[$i3];

        if $b4 != 13 goto label1;

        $i5 = r0.<com.jakewharton.disklrucache.StrictLineReader$1: int count>;

        $i6 = $i5 - 1;

        goto label2;

     label1:
        $i6 = r0.<com.jakewharton.disklrucache.StrictLineReader$1: int count>;

     label2:
        i0 = $i6;

     label3:
        $r2 = new java.lang.String;

        $r4 = r0.<com.jakewharton.disklrucache.StrictLineReader$1: byte[] buf>;

        $r3 = r0.<com.jakewharton.disklrucache.StrictLineReader$1: com.jakewharton.disklrucache.StrictLineReader this$0>;

        $r5 = staticinvoke <com.jakewharton.disklrucache.StrictLineReader: java.nio.charset.Charset access$000(com.jakewharton.disklrucache.StrictLineReader)>($r3);

        $r6 = virtualinvoke $r5.<java.nio.charset.Charset: java.lang.String name()>();

        specialinvoke $r2.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>($r4, 0, i0, $r6);

     label4:
        return $r2;

     label5:
        $r9 := @caughtexception;

        r1 = $r9;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>(java.lang.Object)>(r1);

        throw $r8;

        catch java.io.UnsupportedEncodingException from label3 to label4 with label5;
    }
}
