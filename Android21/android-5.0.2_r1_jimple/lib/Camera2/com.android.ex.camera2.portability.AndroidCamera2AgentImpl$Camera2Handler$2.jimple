class com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler$2 extends android.hardware.camera2.CameraCaptureSession$CaptureCallback
{
    private boolean mAlreadyDispatched;
    final com.android.ex.camera2.portability.AndroidCamera2AgentImpl$CaptureAvailableListener val$listener;
    final com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler this$1;

    void <init>(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler, com.android.ex.camera2.portability.AndroidCamera2AgentImpl$CaptureAvailableListener)
    {
        com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler$2 r0;
        com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler r1;
        com.android.ex.camera2.portability.AndroidCamera2AgentImpl$CaptureAvailableListener r2;

        r0 := @this: com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler$2;

        r1 := @parameter0: com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler;

        r2 := @parameter1: com.android.ex.camera2.portability.AndroidCamera2AgentImpl$CaptureAvailableListener;

        r0.<com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler$2: com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler this$1> = r1;

        r0.<com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler$2: com.android.ex.camera2.portability.AndroidCamera2AgentImpl$CaptureAvailableListener val$listener> = r2;

        specialinvoke r0.<android.hardware.camera2.CameraCaptureSession$CaptureCallback: void <init>()>();

        r0.<com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler$2: boolean mAlreadyDispatched> = 0;

        return;
    }

    public void onCaptureProgressed(android.hardware.camera2.CameraCaptureSession, android.hardware.camera2.CaptureRequest, android.hardware.camera2.CaptureResult)
    {
        com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler$2 r0;
        android.hardware.camera2.CameraCaptureSession r1;
        android.hardware.camera2.CaptureRequest r2;
        android.hardware.camera2.CaptureResult r3;

        r0 := @this: com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler$2;

        r1 := @parameter0: android.hardware.camera2.CameraCaptureSession;

        r2 := @parameter1: android.hardware.camera2.CaptureRequest;

        r3 := @parameter2: android.hardware.camera2.CaptureResult;

        specialinvoke r0.<com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler$2: void checkAeState(android.hardware.camera2.CaptureResult)>(r3);

        return;
    }

    public void onCaptureCompleted(android.hardware.camera2.CameraCaptureSession, android.hardware.camera2.CaptureRequest, android.hardware.camera2.TotalCaptureResult)
    {
        com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler$2 r0;
        android.hardware.camera2.CameraCaptureSession r1;
        android.hardware.camera2.CaptureRequest r2;
        android.hardware.camera2.TotalCaptureResult r3;

        r0 := @this: com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler$2;

        r1 := @parameter0: android.hardware.camera2.CameraCaptureSession;

        r2 := @parameter1: android.hardware.camera2.CaptureRequest;

        r3 := @parameter2: android.hardware.camera2.TotalCaptureResult;

        specialinvoke r0.<com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler$2: void checkAeState(android.hardware.camera2.CaptureResult)>(r3);

        return;
    }

    private void checkAeState(android.hardware.camera2.CaptureResult)
    {
        com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler$2 r0;
        android.hardware.camera2.CaptureResult r1;
        android.hardware.camera2.CaptureResult$Key $r2;
        java.lang.Object $r3;
        boolean $z0;
        com.android.ex.camera2.portability.AndroidCamera2AgentImpl$CaptureAvailableListener $r4;
        com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler $r5, $r7;
        com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler$CameraResultStateCallback $r8;

        r0 := @this: com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler$2;

        r1 := @parameter0: android.hardware.camera2.CaptureResult;

        $r2 = <android.hardware.camera2.CaptureResult: android.hardware.camera2.CaptureResult$Key CONTROL_AE_STATE>;

        $r3 = virtualinvoke r1.<android.hardware.camera2.CaptureResult: java.lang.Object get(android.hardware.camera2.CaptureResult$Key)>($r2);

        if $r3 == null goto label1;

        $z0 = r0.<com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler$2: boolean mAlreadyDispatched>;

        if $z0 != 0 goto label1;

        r0.<com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler$2: boolean mAlreadyDispatched> = 1;

        $r5 = r0.<com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler$2: com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler this$1>;

        $r4 = r0.<com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler$2: com.android.ex.camera2.portability.AndroidCamera2AgentImpl$CaptureAvailableListener val$listener>;

        staticinvoke <com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler: com.android.ex.camera2.portability.AndroidCamera2AgentImpl$CaptureAvailableListener access$702(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler,com.android.ex.camera2.portability.AndroidCamera2AgentImpl$CaptureAvailableListener)>($r5, $r4);

        $r7 = r0.<com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler$2: com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler this$1>;

        $r8 = staticinvoke <com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler: com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler$CameraResultStateCallback access$500(com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler)>($r7);

        virtualinvoke $r8.<com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler$CameraResultStateCallback: void monitorControlStates(android.hardware.camera2.CaptureResult)>(r1);

     label1:
        return;
    }

    public void onCaptureFailed(android.hardware.camera2.CameraCaptureSession, android.hardware.camera2.CaptureRequest, android.hardware.camera2.CaptureFailure)
    {
        com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler$2 r0;
        android.hardware.camera2.CameraCaptureSession r1;
        android.hardware.camera2.CaptureRequest r2;
        android.hardware.camera2.CaptureFailure r3;
        com.android.ex.camera2.portability.debug.Log$Tag $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        int $i0;
        java.lang.String $r8;

        r0 := @this: com.android.ex.camera2.portability.AndroidCamera2AgentImpl$Camera2Handler$2;

        r1 := @parameter0: android.hardware.camera2.CameraCaptureSession;

        r2 := @parameter1: android.hardware.camera2.CaptureRequest;

        r3 := @parameter2: android.hardware.camera2.CaptureFailure;

        $r4 = staticinvoke <com.android.ex.camera2.portability.AndroidCamera2AgentImpl: com.android.ex.camera2.portability.debug.Log$Tag access$000()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Autoexposure and capture failed with reason ");

        $i0 = virtualinvoke r3.<android.hardware.camera2.CaptureFailure: int getReason()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.ex.camera2.portability.debug.Log: void e(com.android.ex.camera2.portability.debug.Log$Tag,java.lang.String)>($r4, $r8);

        return;
    }
}
