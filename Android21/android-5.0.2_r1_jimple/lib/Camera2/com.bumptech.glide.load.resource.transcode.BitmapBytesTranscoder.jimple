public class com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder extends java.lang.Object implements com.bumptech.glide.load.resource.transcode.ResourceTranscoder
{
    private final android.graphics.Bitmap$CompressFormat compressFormat;
    private final int quality;

    public void <init>()
    {
        com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder r0;
        android.graphics.Bitmap$CompressFormat $r1;

        r0 := @this: com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder;

        $r1 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat JPEG>;

        specialinvoke r0.<com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder: void <init>(android.graphics.Bitmap$CompressFormat,int)>($r1, 100);

        return;
    }

    public void <init>(android.graphics.Bitmap$CompressFormat, int)
    {
        com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder r0;
        android.graphics.Bitmap$CompressFormat r1;
        int i0;

        r0 := @this: com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder;

        r1 := @parameter0: android.graphics.Bitmap$CompressFormat;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder: android.graphics.Bitmap$CompressFormat compressFormat> = r1;

        r0.<com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder: int quality> = i0;

        return;
    }

    public com.bumptech.glide.load.engine.Resource transcode(com.bumptech.glide.load.engine.Resource)
    {
        com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder r0;
        com.bumptech.glide.load.engine.Resource r1;
        java.io.ByteArrayOutputStream r2, $r3;
        java.lang.Object $r4;
        int $i0;
        android.graphics.Bitmap$CompressFormat $r5;
        android.graphics.Bitmap $r6;
        com.bumptech.glide.load.resource.bytes.BytesResource $r7;
        byte[] $r8;

        r0 := @this: com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder;

        r1 := @parameter0: com.bumptech.glide.load.engine.Resource;

        $r3 = new java.io.ByteArrayOutputStream;

        specialinvoke $r3.<java.io.ByteArrayOutputStream: void <init>()>();

        r2 = $r3;

        $r4 = virtualinvoke r1.<com.bumptech.glide.load.engine.Resource: java.lang.Object get()>();

        $r6 = (android.graphics.Bitmap) $r4;

        $r5 = r0.<com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder: android.graphics.Bitmap$CompressFormat compressFormat>;

        $i0 = r0.<com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder: int quality>;

        virtualinvoke $r6.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r5, $i0, r2);

        virtualinvoke r1.<com.bumptech.glide.load.engine.Resource: void recycle()>();

        $r7 = new com.bumptech.glide.load.resource.bytes.BytesResource;

        $r8 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r7.<com.bumptech.glide.load.resource.bytes.BytesResource: void <init>(byte[])>($r8);

        return $r7;
    }

    public java.lang.String getId()
    {
        com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder r0;

        r0 := @this: com.bumptech.glide.load.resource.transcode.BitmapBytesTranscoder;

        return "BitmapBytesTranscoder.com.bumptech.glide.load.resource.transcode";
    }
}
