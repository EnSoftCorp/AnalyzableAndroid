public class com.android.camera.Storage extends java.lang.Object
{
    public static final java.lang.String DCIM;
    public static final java.lang.String DIRECTORY;
    public static final java.lang.String JPEG_POSTFIX;
    public static final java.lang.String BUCKET_ID;
    public static final long UNAVAILABLE;
    public static final long PREPARING;
    public static final long UNKNOWN_SIZE;
    public static final long LOW_STORAGE_THRESHOLD_BYTES;
    public static final java.lang.String CAMERA_SESSION_SCHEME;
    private static final com.android.camera.debug.Log$Tag TAG;
    private static final java.lang.String GOOGLE_COM;
    private static java.util.HashMap sSessionsToContentUris;
    private static java.util.HashMap sContentUrisToSessions;
    private static java.util.HashMap sSessionsToPlaceholderBytes;
    private static java.util.HashMap sSessionsToSizes;
    private static java.util.HashMap sSessionsToPlaceholderVersions;

    public void <init>()
    {
        com.android.camera.Storage r0;

        r0 := @this: com.android.camera.Storage;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.net.Uri addImage(android.content.ContentResolver, java.lang.String, long, android.location.Location, int, com.android.camera.exif.ExifInterface, byte[], int, int)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        long l0;
        android.location.Location r2;
        int i1, i2, i3;
        com.android.camera.exif.ExifInterface r3;
        byte[] r4;
        android.net.Uri $r5;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        r2 := @parameter3: android.location.Location;

        i1 := @parameter4: int;

        r3 := @parameter5: com.android.camera.exif.ExifInterface;

        r4 := @parameter6: byte[];

        i2 := @parameter7: int;

        i3 := @parameter8: int;

        $r5 = staticinvoke <com.android.camera.Storage: android.net.Uri addImage(android.content.ContentResolver,java.lang.String,long,android.location.Location,int,com.android.camera.exif.ExifInterface,byte[],int,int,java.lang.String)>(r0, r1, l0, r2, i1, r3, r4, i2, i3, "image/jpeg");

        return $r5;
    }

    private static android.net.Uri addImage(android.content.ContentResolver, java.lang.String, long, android.location.Location, int, com.android.camera.exif.ExifInterface, byte[], int, int, java.lang.String)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, r5, r6;
        long l0, l4;
        android.location.Location r2;
        int i1, i2, i3;
        com.android.camera.exif.ExifInterface r3;
        byte[] r4;
        android.net.Uri $r7;
        byte $b5;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        r2 := @parameter3: android.location.Location;

        i1 := @parameter4: int;

        r3 := @parameter5: com.android.camera.exif.ExifInterface;

        r4 := @parameter6: byte[];

        i2 := @parameter7: int;

        i3 := @parameter8: int;

        r5 := @parameter9: java.lang.String;

        r6 = staticinvoke <com.android.camera.Storage: java.lang.String generateFilepath(java.lang.String)>(r1);

        l4 = staticinvoke <com.android.camera.Storage: long writeFile(java.lang.String,byte[],com.android.camera.exif.ExifInterface)>(r6, r4, r3);

        $b5 = l4 cmp 0L;

        if $b5 < 0 goto label1;

        $r7 = staticinvoke <com.android.camera.Storage: android.net.Uri addImageToMediaStore(android.content.ContentResolver,java.lang.String,long,android.location.Location,int,long,java.lang.String,int,int,java.lang.String)>(r0, r1, l0, r2, i1, l4, r6, i2, i3, r5);

        return $r7;

     label1:
        return null;
    }

    private static android.net.Uri addImageToMediaStore(android.content.ContentResolver, java.lang.String, long, android.location.Location, int, long, java.lang.String, int, int, java.lang.String)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, r3, r4, $r13;
        long l0, l2;
        android.location.Location r2;
        int i1, i3, i4;
        android.content.ContentValues r5;
        android.net.Uri r6, $r8;
        java.lang.Throwable r7, $r10;
        java.lang.StringBuilder $r9, $r11, $r14;
        com.android.camera.debug.Log$Tag $r12;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        r2 := @parameter3: android.location.Location;

        i1 := @parameter4: int;

        l2 := @parameter5: long;

        r3 := @parameter6: java.lang.String;

        i3 := @parameter7: int;

        i4 := @parameter8: int;

        r4 := @parameter9: java.lang.String;

        r5 = staticinvoke <com.android.camera.Storage: android.content.ContentValues getContentValuesForData(java.lang.String,long,android.location.Location,int,long,java.lang.String,int,int,java.lang.String)>(r1, l0, r2, i1, l2, r3, i3, i4, r4);

        r6 = null;

     label1:
        $r8 = <android.provider.MediaStore$Images$Media: android.net.Uri EXTERNAL_CONTENT_URI>;

        r6 = virtualinvoke r0.<android.content.ContentResolver: android.net.Uri insert(android.net.Uri,android.content.ContentValues)>($r8, r5);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        r7 = $r10;

        $r12 = <com.android.camera.Storage: com.android.camera.debug.Log$Tag TAG>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to write MediaStore");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void e(com.android.camera.debug.Log$Tag,java.lang.String)>($r12, $r13);

     label4:
        return r6;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static android.content.ContentValues getContentValuesForData(java.lang.String, long, android.location.Location, int, long, java.lang.String, int, int, java.lang.String)
    {
        java.lang.String r0, r2, r3, $r12;
        long l0, l2, l5, $l6;
        android.location.Location r1;
        int i1, i3, i4;
        java.io.File r4, $r6;
        android.content.ContentValues r5, $r8;
        java.util.concurrent.TimeUnit $r7;
        java.lang.StringBuilder $r9, $r10, $r11;
        java.lang.Long $r13, $r14, $r17;
        java.lang.Integer $r15;
        double $d0, $d1;
        java.lang.Double $r16, $r18;

        r0 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        r1 := @parameter2: android.location.Location;

        i1 := @parameter3: int;

        l2 := @parameter4: long;

        r2 := @parameter5: java.lang.String;

        i3 := @parameter6: int;

        i4 := @parameter7: int;

        r3 := @parameter8: java.lang.String;

        $r6 = new java.io.File;

        specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>(r2);

        r4 = $r6;

        $r7 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $l6 = virtualinvoke r4.<java.io.File: long lastModified()>();

        l5 = virtualinvoke $r7.<java.util.concurrent.TimeUnit: long toSeconds(long)>($l6);

        $r8 = new android.content.ContentValues;

        specialinvoke $r8.<android.content.ContentValues: void <init>(int)>(11);

        r5 = $r8;

        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("title", r0);

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".jpg");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("_display_name", $r12);

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("datetaken", $r13);

        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("mime_type", r3);

        $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l5);

        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("date_modified", $r14);

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("orientation", $r15);

        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("_data", r2);

        $r17 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("_size", $r17);

        staticinvoke <com.android.camera.Storage: void setImageSize(android.content.ContentValues,int,int)>(r5, i3, i4);

        if r1 == null goto label1;

        $d0 = virtualinvoke r1.<android.location.Location: double getLatitude()>();

        $r16 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Double)>("latitude", $r16);

        $d1 = virtualinvoke r1.<android.location.Location: double getLongitude()>();

        $r18 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d1);

        virtualinvoke r5.<android.content.ContentValues: void put(java.lang.String,java.lang.Double)>("longitude", $r18);

     label1:
        return r5;
    }

    public static android.net.Uri addPlaceholder(byte[], int, int)
    {
        byte[] r0;
        int i0, i1;
        android.net.Uri r1;
        android.net.Uri$Builder r2, $r4, $r6, $r7;
        java.lang.String r3;
        java.util.UUID $r5;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r4 = new android.net.Uri$Builder;

        specialinvoke $r4.<android.net.Uri$Builder: void <init>()>();

        r2 = $r4;

        $r5 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        r3 = virtualinvoke $r5.<java.util.UUID: java.lang.String toString()>();

        $r6 = virtualinvoke r2.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("camera_session");

        $r7 = virtualinvoke $r6.<android.net.Uri$Builder: android.net.Uri$Builder authority(java.lang.String)>("google.com");

        virtualinvoke $r7.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>(r3);

        r1 = virtualinvoke r2.<android.net.Uri$Builder: android.net.Uri build()>();

        staticinvoke <com.android.camera.Storage: void replacePlaceholder(android.net.Uri,byte[],int,int)>(r1, r0, i0, i1);

        return r1;
    }

    public static void replacePlaceholder(android.net.Uri, byte[], int, int)
    {
        android.net.Uri r0;
        byte[] r1;
        int i0, i1, $i2, $i3;
        android.graphics.Point r2, $r4;
        java.lang.Integer r3, $r13;
        java.util.HashMap $r5, $r7, $r9, $r11;
        java.lang.Object $r10;

        r0 := @parameter0: android.net.Uri;

        r1 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r4 = new android.graphics.Point;

        specialinvoke $r4.<android.graphics.Point: void <init>(int,int)>(i0, i1);

        r2 = $r4;

        $r5 = <com.android.camera.Storage: java.util.HashMap sSessionsToSizes>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r2);

        $r7 = <com.android.camera.Storage: java.util.HashMap sSessionsToPlaceholderBytes>;

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1);

        $r9 = <com.android.camera.Storage: java.util.HashMap sSessionsToPlaceholderVersions>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r0);

        r3 = (java.lang.Integer) $r10;

        $r11 = <com.android.camera.Storage: java.util.HashMap sSessionsToPlaceholderVersions>;

        if r3 != null goto label1;

        $i3 = 0;

        goto label2;

     label1:
        $i2 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        $i3 = $i2 + 1;

     label2:
        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        virtualinvoke $r11.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r13);

        return;
    }

    public static android.net.Uri updateImage(android.net.Uri, android.content.ContentResolver, java.lang.String, long, android.location.Location, int, com.android.camera.exif.ExifInterface, byte[], int, int, java.lang.String)
    {
        android.net.Uri r0, $r8;
        android.content.ContentResolver r1;
        java.lang.String r2, r6, r7;
        long l0;
        android.location.Location r3;
        int i1, i2, i3, $i5;
        com.android.camera.exif.ExifInterface r4;
        byte[] r5;

        r0 := @parameter0: android.net.Uri;

        r1 := @parameter1: android.content.ContentResolver;

        r2 := @parameter2: java.lang.String;

        l0 := @parameter3: long;

        r3 := @parameter4: android.location.Location;

        i1 := @parameter5: int;

        r4 := @parameter6: com.android.camera.exif.ExifInterface;

        r5 := @parameter7: byte[];

        i2 := @parameter8: int;

        i3 := @parameter9: int;

        r6 := @parameter10: java.lang.String;

        r7 = staticinvoke <com.android.camera.Storage: java.lang.String generateFilepath(java.lang.String)>(r2);

        staticinvoke <com.android.camera.Storage: long writeFile(java.lang.String,byte[],com.android.camera.exif.ExifInterface)>(r7, r5, r4);

        $i5 = lengthof r5;

        $r8 = staticinvoke <com.android.camera.Storage: android.net.Uri updateImage(android.net.Uri,android.content.ContentResolver,java.lang.String,long,android.location.Location,int,int,java.lang.String,int,int,java.lang.String)>(r0, r1, r2, l0, r3, i1, $i5, r7, i2, i3, r6);

        return $r8;
    }

    private static void setImageSize(android.content.ContentValues, int, int)
    {
        android.content.ContentValues r0;
        int i0, i1;
        boolean $z0;
        java.lang.Integer $r1, $r2;

        r0 := @parameter0: android.content.ContentValues;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = <com.android.camera.util.ApiHelper: boolean HAS_MEDIA_COLUMNS_WIDTH_AND_HEIGHT>;

        if $z0 == 0 goto label1;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke r0.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("width", $r1);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke r0.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("height", $r2);

     label1:
        return;
    }

    private static long writeFile(java.lang.String, byte[], com.android.camera.exif.ExifInterface)
    {
        java.lang.String r0;
        byte[] r1;
        com.android.camera.exif.ExifInterface r2;
        java.io.File r3, $r4;
        long $l0, $l1;
        java.lang.Exception $r5, r7;
        com.android.camera.debug.Log$Tag $r6;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: byte[];

        r2 := @parameter2: com.android.camera.exif.ExifInterface;

        if r2 == null goto label4;

     label1:
        virtualinvoke r2.<com.android.camera.exif.ExifInterface: void writeExif(byte[],java.lang.String)>(r1, r0);

        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>(r0);

        r3 = $r4;

        $l1 = virtualinvoke r3.<java.io.File: long length()>();

     label2:
        return $l1;

     label3:
        $r5 := @caughtexception;

        r7 = $r5;

        $r6 = <com.android.camera.Storage: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void e(com.android.camera.debug.Log$Tag,java.lang.String,java.lang.Throwable)>($r6, "Failed to write data", r7);

        goto label5;

     label4:
        $l0 = staticinvoke <com.android.camera.Storage: long writeFile(java.lang.String,byte[])>(r0, r1);

        return $l0;

     label5:
        return -1L;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private static long writeFile(java.lang.String, byte[])
    {
        java.lang.String r0;
        byte[] r1;
        java.io.FileOutputStream r2, $r6;
        long l0;
        java.lang.Exception r3, r5, $r7, $r10, $r12, $r13, r16, r17;
        java.lang.Throwable r4, $r9;
        int $i1;
        com.android.camera.debug.Log$Tag $r8, $r11, $r14, $r15;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: byte[];

        r2 = null;

     label01:
        $r6 = new java.io.FileOutputStream;

        specialinvoke $r6.<java.io.FileOutputStream: void <init>(java.lang.String)>(r0);

        r2 = $r6;

        virtualinvoke r2.<java.io.FileOutputStream: void write(byte[])>(r1);

        $i1 = lengthof r1;

        l0 = (long) $i1;

     label02:
        virtualinvoke r2.<java.io.FileOutputStream: void close()>();

     label03:
        goto label05;

     label04:
        $r10 := @caughtexception;

        r3 = $r10;

        $r11 = <com.android.camera.Storage: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void e(com.android.camera.debug.Log$Tag,java.lang.String,java.lang.Throwable)>($r11, "Failed to close file after write", r3);

     label05:
        return l0;

     label06:
        $r7 := @caughtexception;

        r16 = $r7;

        $r8 = <com.android.camera.Storage: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void e(com.android.camera.debug.Log$Tag,java.lang.String,java.lang.Throwable)>($r8, "Failed to write data", r16);

     label07:
        virtualinvoke r2.<java.io.FileOutputStream: void close()>();

     label08:
        goto label15;

     label09:
        $r12 := @caughtexception;

        r17 = $r12;

        $r14 = <com.android.camera.Storage: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void e(com.android.camera.debug.Log$Tag,java.lang.String,java.lang.Throwable)>($r14, "Failed to close file after write", r17);

        goto label15;

     label10:
        $r9 := @caughtexception;

        r4 = $r9;

     label11:
        virtualinvoke r2.<java.io.FileOutputStream: void close()>();

     label12:
        goto label14;

     label13:
        $r13 := @caughtexception;

        r5 = $r13;

        $r15 = <com.android.camera.Storage: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void e(com.android.camera.debug.Log$Tag,java.lang.String,java.lang.Throwable)>($r15, "Failed to close file after write", r5);

     label14:
        throw r4;

     label15:
        return -1L;

        catch java.lang.Exception from label02 to label03 with label04;
        catch java.lang.Exception from label01 to label02 with label06;
        catch java.lang.Exception from label07 to label08 with label09;
        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label06 to label07 with label10;
        catch java.lang.Exception from label11 to label12 with label13;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    private static android.net.Uri updateImage(android.net.Uri, android.content.ContentResolver, java.lang.String, long, android.location.Location, int, int, java.lang.String, int, int, java.lang.String)
    {
        android.net.Uri r0, r7;
        android.content.ContentResolver r1;
        java.lang.String r2, r4, r5;
        long l0, $l5, $l7;
        android.location.Location r3;
        int i1, i2, i3, i4;
        android.content.ContentValues r6;
        boolean $z0;
        java.util.HashMap $r9, $r11;

        r0 := @parameter0: android.net.Uri;

        r1 := @parameter1: android.content.ContentResolver;

        r2 := @parameter2: java.lang.String;

        l0 := @parameter3: long;

        r3 := @parameter4: android.location.Location;

        i1 := @parameter5: int;

        i2 := @parameter6: int;

        r4 := @parameter7: java.lang.String;

        i3 := @parameter8: int;

        i4 := @parameter9: int;

        r5 := @parameter10: java.lang.String;

        $l5 = (long) i2;

        r6 = staticinvoke <com.android.camera.Storage: android.content.ContentValues getContentValuesForData(java.lang.String,long,android.location.Location,int,long,java.lang.String,int,int,java.lang.String)>(r2, l0, r3, i1, $l5, r4, i3, i4, r5);

        r7 = r0;

        $z0 = staticinvoke <com.android.camera.Storage: boolean isSessionUri(android.net.Uri)>(r0);

        if $z0 == 0 goto label1;

        $l7 = (long) i2;

        r7 = staticinvoke <com.android.camera.Storage: android.net.Uri addImageToMediaStore(android.content.ContentResolver,java.lang.String,long,android.location.Location,int,long,java.lang.String,int,int,java.lang.String)>(r1, r2, l0, r3, i1, $l7, r4, i3, i4, r5);

        $r9 = <com.android.camera.Storage: java.util.HashMap sSessionsToContentUris>;

        virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r7);

        $r11 = <com.android.camera.Storage: java.util.HashMap sContentUrisToSessions>;

        virtualinvoke $r11.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, r0);

        goto label2;

     label1:
        virtualinvoke r1.<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>(r0, r6, null, null);

     label2:
        return r7;
    }

    private static java.lang.String generateFilepath(java.lang.String)
    {
        java.lang.String r0, $r2, $r7;
        java.lang.StringBuilder $r1, $r3, $r4, $r5, $r6;

        r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = <com.android.camera.Storage: java.lang.String DIRECTORY>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".jpg");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public static byte[] getJpegForSession(android.net.Uri)
    {
        android.net.Uri r0;
        java.util.HashMap $r1;
        java.lang.Object $r2;
        byte[] $r3;

        r0 := @parameter0: android.net.Uri;

        $r1 = <com.android.camera.Storage: java.util.HashMap sSessionsToPlaceholderBytes>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r0);

        $r3 = (byte[]) $r2;

        return $r3;
    }

    public static int getJpegVersionForSession(android.net.Uri)
    {
        android.net.Uri r0;
        java.util.HashMap $r1;
        java.lang.Object $r2;
        java.lang.Integer $r3;
        int $i0;

        r0 := @parameter0: android.net.Uri;

        $r1 = <com.android.camera.Storage: java.util.HashMap sSessionsToPlaceholderVersions>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r0);

        $r3 = (java.lang.Integer) $r2;

        $i0 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        return $i0;
    }

    public static android.graphics.Point getSizeForSession(android.net.Uri)
    {
        android.net.Uri r0;
        java.util.HashMap $r1;
        java.lang.Object $r2;
        android.graphics.Point $r3;

        r0 := @parameter0: android.net.Uri;

        $r1 = <com.android.camera.Storage: java.util.HashMap sSessionsToSizes>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r0);

        $r3 = (android.graphics.Point) $r2;

        return $r3;
    }

    public static android.net.Uri getContentUriForSessionUri(android.net.Uri)
    {
        android.net.Uri r0, $r3;
        java.util.HashMap $r1;
        java.lang.Object $r2;

        r0 := @parameter0: android.net.Uri;

        $r1 = <com.android.camera.Storage: java.util.HashMap sSessionsToContentUris>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r0);

        $r3 = (android.net.Uri) $r2;

        return $r3;
    }

    public static android.net.Uri getSessionUriFromContentUri(android.net.Uri)
    {
        android.net.Uri r0, $r3;
        java.util.HashMap $r1;
        java.lang.Object $r2;

        r0 := @parameter0: android.net.Uri;

        $r1 = <com.android.camera.Storage: java.util.HashMap sContentUrisToSessions>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r0);

        $r3 = (android.net.Uri) $r2;

        return $r3;
    }

    public static boolean isSessionUri(android.net.Uri)
    {
        android.net.Uri r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @parameter0: android.net.Uri;

        $r1 = virtualinvoke r0.<android.net.Uri: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("camera_session");

        return $z0;
    }

    public static long getAvailableSpace()
    {
        java.lang.String r0, $r7, $r8, $r9, $r11, $r12;
        java.io.File r1, $r10;
        android.os.StatFs r2, $r13;
        java.lang.StringBuilder $r3, $r5, $r6;
        com.android.camera.debug.Log$Tag $r4, $r15;
        boolean $z0, $z1, $z3, $z4;
        long $l0, $l2, $l4;
        int $i1, $i3;
        java.lang.Exception $r14, r16;

        r0 = staticinvoke <android.os.Environment: java.lang.String getExternalStorageState()>();

        $r4 = <com.android.camera.Storage: com.android.camera.debug.Log$Tag TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("External storage state=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void d(com.android.camera.debug.Log$Tag,java.lang.String)>($r4, $r7);

        $r8 = "checking";

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        return -2L;

     label1:
        $r9 = "mounted";

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 != 0 goto label2;

        return -1L;

     label2:
        $r10 = new java.io.File;

        $r11 = <com.android.camera.Storage: java.lang.String DIRECTORY>;

        specialinvoke $r10.<java.io.File: void <init>(java.lang.String)>($r11);

        r1 = $r10;

        virtualinvoke r1.<java.io.File: boolean mkdirs()>();

        $z4 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();

        if $z4 == 0 goto label3;

        $z3 = virtualinvoke r1.<java.io.File: boolean canWrite()>();

        if $z3 != 0 goto label4;

     label3:
        return -1L;

     label4:
        $r13 = new android.os.StatFs;

        $r12 = <com.android.camera.Storage: java.lang.String DIRECTORY>;

        specialinvoke $r13.<android.os.StatFs: void <init>(java.lang.String)>($r12);

        r2 = $r13;

        $i1 = virtualinvoke r2.<android.os.StatFs: int getAvailableBlocks()>();

        $l0 = (long) $i1;

        $i3 = virtualinvoke r2.<android.os.StatFs: int getBlockSize()>();

        $l2 = (long) $i3;

        $l4 = $l0 * $l2;

     label5:
        return $l4;

     label6:
        $r14 := @caughtexception;

        r16 = $r14;

        $r15 = <com.android.camera.Storage: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void i(com.android.camera.debug.Log$Tag,java.lang.String,java.lang.Throwable)>($r15, "Fail to access external storage", r16);

        return -3L;

        catch java.lang.Exception from label4 to label5 with label6;
    }

    public static void ensureOSXCompatible()
    {
        java.io.File r0, $r1;
        java.lang.String $r2, $r6, $r8;
        boolean $z0, $z1;
        java.lang.StringBuilder $r3, $r5, $r7;
        com.android.camera.debug.Log$Tag $r4;

        $r1 = new java.io.File;

        $r2 = <com.android.camera.Storage: java.lang.String DCIM>;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r2, "100ANDRO");

        r0 = $r1;

        $z0 = virtualinvoke r0.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<java.io.File: boolean mkdirs()>();

        if $z1 != 0 goto label1;

        $r4 = <com.android.camera.Storage: com.android.camera.debug.Log$Tag TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to create ");

        $r6 = virtualinvoke r0.<java.io.File: java.lang.String getPath()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void e(com.android.camera.debug.Log$Tag,java.lang.String)>($r4, $r8);

     label1:
        return;
    }

    static void <clinit>()
    {
        java.lang.String $r0, $r2, $r4, $r7, $r8, $r9, $r10;
        java.io.File $r1;
        java.lang.StringBuilder $r3, $r5, $r6;
        int $i0;
        com.android.camera.debug.Log$Tag $r11;
        java.util.HashMap $r12, $r13, $r14, $r15, $r16;

        <com.android.camera.Storage: java.lang.String GOOGLE_COM> = "google.com";

        <com.android.camera.Storage: java.lang.String CAMERA_SESSION_SCHEME> = "camera_session";

        <com.android.camera.Storage: long LOW_STORAGE_THRESHOLD_BYTES> = 50000000L;

        <com.android.camera.Storage: long UNKNOWN_SIZE> = -3L;

        <com.android.camera.Storage: long PREPARING> = -2L;

        <com.android.camera.Storage: long UNAVAILABLE> = -1L;

        <com.android.camera.Storage: java.lang.String JPEG_POSTFIX> = ".jpg";

        $r0 = <android.os.Environment: java.lang.String DIRECTORY_DCIM>;

        $r1 = staticinvoke <android.os.Environment: java.io.File getExternalStoragePublicDirectory(java.lang.String)>($r0);

        $r2 = virtualinvoke $r1.<java.io.File: java.lang.String toString()>();

        <com.android.camera.Storage: java.lang.String DCIM> = $r2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = <com.android.camera.Storage: java.lang.String DCIM>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/Camera");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.android.camera.Storage: java.lang.String DIRECTORY> = $r7;

        $r8 = <com.android.camera.Storage: java.lang.String DIRECTORY>;

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String toLowerCase()>();

        $i0 = virtualinvoke $r9.<java.lang.String: int hashCode()>();

        $r10 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        <com.android.camera.Storage: java.lang.String BUCKET_ID> = $r10;

        $r11 = new com.android.camera.debug.Log$Tag;

        specialinvoke $r11.<com.android.camera.debug.Log$Tag: void <init>(java.lang.String)>("Storage");

        <com.android.camera.Storage: com.android.camera.debug.Log$Tag TAG> = $r11;

        $r12 = new java.util.HashMap;

        specialinvoke $r12.<java.util.HashMap: void <init>()>();

        <com.android.camera.Storage: java.util.HashMap sSessionsToContentUris> = $r12;

        $r13 = new java.util.HashMap;

        specialinvoke $r13.<java.util.HashMap: void <init>()>();

        <com.android.camera.Storage: java.util.HashMap sContentUrisToSessions> = $r13;

        $r14 = new java.util.HashMap;

        specialinvoke $r14.<java.util.HashMap: void <init>()>();

        <com.android.camera.Storage: java.util.HashMap sSessionsToPlaceholderBytes> = $r14;

        $r16 = new java.util.HashMap;

        specialinvoke $r16.<java.util.HashMap: void <init>()>();

        <com.android.camera.Storage: java.util.HashMap sSessionsToSizes> = $r16;

        $r15 = new java.util.HashMap;

        specialinvoke $r15.<java.util.HashMap: void <init>()>();

        <com.android.camera.Storage: java.util.HashMap sSessionsToPlaceholderVersions> = $r15;

        return;
    }
}
