public class com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter extends java.lang.Object implements com.bumptech.glide.load.engine.bitmap_recycle.BitmapReferenceCounter
{
    private final java.util.Map counter;
    private final com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool target;
    private final com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTrackerPool pool;

    public void <init>(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)
    {
        com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter r0;
        com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool r1;
        java.util.WeakHashMap $r2;
        com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTrackerPool $r3;

        r0 := @this: com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter;

        r1 := @parameter0: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.WeakHashMap;

        specialinvoke $r2.<java.util.WeakHashMap: void <init>()>();

        r0.<com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter: java.util.Map counter> = $r2;

        $r3 = new com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTrackerPool;

        specialinvoke $r3.<com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTrackerPool: void <init>(com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$1)>(null);

        r0.<com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter: com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTrackerPool pool> = $r3;

        r0.<com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool target> = r1;

        return;
    }

    private void initBitmap(android.graphics.Bitmap)
    {
        com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter r0;
        android.graphics.Bitmap r1;
        com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTracker r2, $r7;
        java.util.Map $r3, $r6;
        java.lang.Object $r4;
        com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTrackerPool $r5;

        r0 := @this: com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter;

        r1 := @parameter0: android.graphics.Bitmap;

        $r3 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter: java.util.Map counter>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTracker) $r4;

        if r2 != null goto label1;

        $r6 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter: java.util.Map counter>;

        $r5 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter: com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTrackerPool pool>;

        $r7 = virtualinvoke $r5.<com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTrackerPool: com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTracker get()>();

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r7);

     label1:
        return;
    }

    public void acquireBitmap(android.graphics.Bitmap)
    {
        com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter r0;
        android.graphics.Bitmap r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTracker $r4;

        r0 := @this: com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter;

        r1 := @parameter0: android.graphics.Bitmap;

        specialinvoke r0.<com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter: void initBitmap(android.graphics.Bitmap)>(r1);

        $r2 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter: java.util.Map counter>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTracker) $r3;

        virtualinvoke $r4.<com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTracker: void acquire()>();

        return;
    }

    public void releaseBitmap(android.graphics.Bitmap)
    {
        com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter r0;
        android.graphics.Bitmap r1;
        com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTracker r2;
        java.util.Map $r3;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter;

        r1 := @parameter0: android.graphics.Bitmap;

        $r3 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter: java.util.Map counter>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTracker) $r4;

        $z0 = virtualinvoke r2.<com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTracker: boolean release()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter: void recycle(com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTracker,android.graphics.Bitmap)>(r2, r1);

     label1:
        return;
    }

    private void recycle(com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTracker, android.graphics.Bitmap)
    {
        com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter r0;
        com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTracker r1;
        android.graphics.Bitmap r2;
        com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool $r3;
        boolean $z0;
        java.util.Map $r4;
        com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTrackerPool $r6;

        r0 := @this: com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter;

        r1 := @parameter0: com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTracker;

        r2 := @parameter1: android.graphics.Bitmap;

        $r3 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool target>;

        $z0 = interfaceinvoke $r3.<com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool: boolean put(android.graphics.Bitmap)>(r2);

        if $z0 != 0 goto label1;

        virtualinvoke r2.<android.graphics.Bitmap: void recycle()>();

     label1:
        $r4 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter: java.util.Map counter>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2);

        $r6 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter: com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTrackerPool pool>;

        virtualinvoke $r6.<com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTrackerPool: void release(com.bumptech.glide.load.engine.bitmap_recycle.SerialBitmapReferenceCounter$InnerTracker)>(r1);

        return;
    }
}
