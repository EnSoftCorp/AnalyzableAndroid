class com.bumptech.glide.request.target.ViewTarget$SizeDeterminer extends java.lang.Object
{
    private final android.view.View view;
    private java.util.Set cbs;
    private com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener layoutListener;

    public void <init>(android.view.View)
    {
        com.bumptech.glide.request.target.ViewTarget$SizeDeterminer r0;
        android.view.View r1;
        java.util.HashSet $r2;

        r0 := @this: com.bumptech.glide.request.target.ViewTarget$SizeDeterminer;

        r1 := @parameter0: android.view.View;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: java.util.Set cbs> = $r2;

        r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: android.view.View view> = r1;

        return;
    }

    private void notifyCbs(int, int)
    {
        com.bumptech.glide.request.target.ViewTarget$SizeDeterminer r0;
        int i0, i1;
        java.util.Iterator r1;
        com.bumptech.glide.request.target.Target$SizeReadyCallback r2;
        java.util.Set $r3, $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: com.bumptech.glide.request.target.ViewTarget$SizeDeterminer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r3 = r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: java.util.Set cbs>;

        r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.bumptech.glide.request.target.Target$SizeReadyCallback) $r5;

        interfaceinvoke r2.<com.bumptech.glide.request.target.Target$SizeReadyCallback: void onSizeReady(int,int)>(i0, i1);

        goto label1;

     label2:
        $r4 = r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: java.util.Set cbs>;

        interfaceinvoke $r4.<java.util.Set: void clear()>();

        return;
    }

    private void checkCurrentDimens()
    {
        com.bumptech.glide.request.target.ViewTarget$SizeDeterminer r0;
        boolean z0, $z1, $z2, $z3, $z4;
        android.view.ViewGroup$LayoutParams r1;
        android.view.ViewTreeObserver r2;
        java.util.Set $r3;
        android.view.View $r4, $r5, $r7, $r8;
        com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener $r6;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.bumptech.glide.request.target.ViewTarget$SizeDeterminer;

        $r3 = r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: java.util.Set cbs>;

        $z1 = interfaceinvoke $r3.<java.util.Set: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        return;

     label1:
        z0 = 1;

        $r4 = r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: android.view.View view>;

        r1 = virtualinvoke $r4.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $z2 = specialinvoke r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: boolean isViewSizeValid()>();

        if $z2 == 0 goto label2;

        $r7 = r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: android.view.View view>;

        $i2 = virtualinvoke $r7.<android.view.View: int getWidth()>();

        $r8 = r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: android.view.View view>;

        $i3 = virtualinvoke $r8.<android.view.View: int getHeight()>();

        specialinvoke r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: void notifyCbs(int,int)>($i2, $i3);

        goto label4;

     label2:
        $z3 = specialinvoke r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: boolean isLayoutParamsSizeValid()>();

        if $z3 == 0 goto label3;

        $i1 = r1.<android.view.ViewGroup$LayoutParams: int width>;

        $i0 = r1.<android.view.ViewGroup$LayoutParams: int height>;

        specialinvoke r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: void notifyCbs(int,int)>($i1, $i0);

        goto label4;

     label3:
        z0 = 0;

     label4:
        if z0 == 0 goto label5;

        $r5 = r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: android.view.View view>;

        r2 = virtualinvoke $r5.<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>();

        $z4 = virtualinvoke r2.<android.view.ViewTreeObserver: boolean isAlive()>();

        if $z4 == 0 goto label5;

        $r6 = r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener layoutListener>;

        virtualinvoke r2.<android.view.ViewTreeObserver: void removeOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r6);

     label5:
        return;
    }

    public void getSize(com.bumptech.glide.request.target.Target$SizeReadyCallback)
    {
        com.bumptech.glide.request.target.ViewTarget$SizeDeterminer r0;
        com.bumptech.glide.request.target.Target$SizeReadyCallback r1;
        android.view.ViewGroup$LayoutParams r2;
        android.view.WindowManager r3;
        android.view.Display r4;
        int i0, i1, $i2, $i3, $i4, $i6, $i7, $i8;
        android.view.View $r5, $r7, $r11, $r21, $r22;
        boolean $z0, $z1, $z2, $z4;
        java.util.Set $r6;
        com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener $r8, $r9;
        android.content.Context $r10;
        java.lang.Object $r12;
        java.lang.StringBuilder $r13, $r14, $r15, $r16, $r17, $r19, $r20;
        java.lang.String $r18;
        android.view.ViewTreeObserver r23;

        r0 := @this: com.bumptech.glide.request.target.ViewTarget$SizeDeterminer;

        r1 := @parameter0: com.bumptech.glide.request.target.Target$SizeReadyCallback;

        $r5 = r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: android.view.View view>;

        r2 = virtualinvoke $r5.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $z0 = specialinvoke r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: boolean isViewSizeValid()>();

        if $z0 == 0 goto label1;

        $r21 = r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: android.view.View view>;

        $i8 = virtualinvoke $r21.<android.view.View: int getWidth()>();

        $r22 = r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: android.view.View view>;

        $i7 = virtualinvoke $r22.<android.view.View: int getHeight()>();

        interfaceinvoke r1.<com.bumptech.glide.request.target.Target$SizeReadyCallback: void onSizeReady(int,int)>($i8, $i7);

        goto label5;

     label1:
        $z1 = specialinvoke r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: boolean isLayoutParamsSizeValid()>();

        if $z1 == 0 goto label2;

        $i4 = r2.<android.view.ViewGroup$LayoutParams: int width>;

        $i6 = r2.<android.view.ViewGroup$LayoutParams: int height>;

        interfaceinvoke r1.<com.bumptech.glide.request.target.Target$SizeReadyCallback: void onSizeReady(int,int)>($i4, $i6);

        goto label5;

     label2:
        $z2 = specialinvoke r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: boolean isUsingWrapContent()>();

        if $z2 == 0 goto label4;

        $r11 = r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: android.view.View view>;

        $r10 = virtualinvoke $r11.<android.view.View: android.content.Context getContext()>();

        $r12 = virtualinvoke $r10.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        r3 = (android.view.WindowManager) $r12;

        r4 = interfaceinvoke r3.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        i0 = virtualinvoke r4.<android.view.Display: int getWidth()>();

        i1 = virtualinvoke r4.<android.view.Display: int getHeight()>();

        $z4 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("ViewTarget", 5);

        if $z4 == 0 goto label3;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Trying to load image into ImageView using WRAP_CONTENT, defaulting to screen dimensions: [");

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        $r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]. Give the view an actual width and height ");

        $r17 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for better performance.");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ViewTarget", $r18);

     label3:
        $i2 = virtualinvoke r4.<android.view.Display: int getWidth()>();

        $i3 = virtualinvoke r4.<android.view.Display: int getHeight()>();

        interfaceinvoke r1.<com.bumptech.glide.request.target.Target$SizeReadyCallback: void onSizeReady(int,int)>($i2, $i3);

        goto label5;

     label4:
        $r6 = r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: java.util.Set cbs>;

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>(r1);

        $r7 = r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: android.view.View view>;

        r23 = virtualinvoke $r7.<android.view.View: android.view.ViewTreeObserver getViewTreeObserver()>();

        $r9 = new com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener;

        specialinvoke $r9.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener: void <init>(com.bumptech.glide.request.target.ViewTarget$SizeDeterminer)>(r0);

        r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener layoutListener> = $r9;

        $r8 = r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: com.bumptech.glide.request.target.ViewTarget$SizeDeterminer$SizeDeterminerLayoutListener layoutListener>;

        virtualinvoke r23.<android.view.ViewTreeObserver: void addOnPreDrawListener(android.view.ViewTreeObserver$OnPreDrawListener)>($r8);

     label5:
        return;
    }

    private boolean isViewSizeValid()
    {
        com.bumptech.glide.request.target.ViewTarget$SizeDeterminer r0;
        android.view.View $r1, $r2;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.bumptech.glide.request.target.ViewTarget$SizeDeterminer;

        $r1 = r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: android.view.View view>;

        $i0 = virtualinvoke $r1.<android.view.View: int getWidth()>();

        if $i0 <= 0 goto label1;

        $r2 = r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: android.view.View view>;

        $i1 = virtualinvoke $r2.<android.view.View: int getHeight()>();

        if $i1 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private boolean isUsingWrapContent()
    {
        com.bumptech.glide.request.target.ViewTarget$SizeDeterminer r0;
        android.view.ViewGroup$LayoutParams r1;
        android.view.View $r2;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.bumptech.glide.request.target.ViewTarget$SizeDeterminer;

        $r2 = r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: android.view.View view>;

        r1 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        if r1 == null goto label2;

        $i0 = r1.<android.view.ViewGroup$LayoutParams: int width>;

        if $i0 == -2 goto label1;

        $i1 = r1.<android.view.ViewGroup$LayoutParams: int height>;

        if $i1 != -2 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private boolean isLayoutParamsSizeValid()
    {
        com.bumptech.glide.request.target.ViewTarget$SizeDeterminer r0;
        android.view.ViewGroup$LayoutParams r1;
        android.view.View $r2;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.bumptech.glide.request.target.ViewTarget$SizeDeterminer;

        $r2 = r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: android.view.View view>;

        r1 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        if r1 == null goto label1;

        $i0 = r1.<android.view.ViewGroup$LayoutParams: int width>;

        if $i0 <= 0 goto label1;

        $i1 = r1.<android.view.ViewGroup$LayoutParams: int height>;

        if $i1 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static void access$000(com.bumptech.glide.request.target.ViewTarget$SizeDeterminer)
    {
        com.bumptech.glide.request.target.ViewTarget$SizeDeterminer r0;

        r0 := @parameter0: com.bumptech.glide.request.target.ViewTarget$SizeDeterminer;

        specialinvoke r0.<com.bumptech.glide.request.target.ViewTarget$SizeDeterminer: void checkCurrentDimens()>();

        return;
    }
}
