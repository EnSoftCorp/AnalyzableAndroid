public abstract class com.bumptech.glide.load.model.stream.BaseGlideUrlLoader extends java.lang.Object implements com.bumptech.glide.load.model.stream.StreamModelLoader
{
    private final com.bumptech.glide.load.model.ModelLoader concreteLoader;
    private final com.bumptech.glide.load.model.ModelCache modelCache;

    public void <init>(android.content.Context)
    {
        com.bumptech.glide.load.model.stream.BaseGlideUrlLoader r0;
        android.content.Context r1;

        r0 := @this: com.bumptech.glide.load.model.stream.BaseGlideUrlLoader;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.bumptech.glide.load.model.stream.BaseGlideUrlLoader: void <init>(android.content.Context,com.bumptech.glide.load.model.ModelCache)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, com.bumptech.glide.load.model.ModelCache)
    {
        com.bumptech.glide.load.model.stream.BaseGlideUrlLoader r0;
        android.content.Context r1;
        com.bumptech.glide.load.model.ModelCache r2;
        com.bumptech.glide.load.model.ModelLoader $r3;

        r0 := @this: com.bumptech.glide.load.model.stream.BaseGlideUrlLoader;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.bumptech.glide.load.model.ModelCache;

        $r3 = staticinvoke <com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class,java.lang.Class,android.content.Context)>(class "com/bumptech/glide/load/model/GlideUrl", class "java/io/InputStream", r1);

        specialinvoke r0.<com.bumptech.glide.load.model.stream.BaseGlideUrlLoader: void <init>(com.bumptech.glide.load.model.ModelLoader,com.bumptech.glide.load.model.ModelCache)>($r3, r2);

        return;
    }

    public void <init>(com.bumptech.glide.load.model.ModelLoader)
    {
        com.bumptech.glide.load.model.stream.BaseGlideUrlLoader r0;
        com.bumptech.glide.load.model.ModelLoader r1;

        r0 := @this: com.bumptech.glide.load.model.stream.BaseGlideUrlLoader;

        r1 := @parameter0: com.bumptech.glide.load.model.ModelLoader;

        specialinvoke r0.<com.bumptech.glide.load.model.stream.BaseGlideUrlLoader: void <init>(com.bumptech.glide.load.model.ModelLoader,com.bumptech.glide.load.model.ModelCache)>(r1, null);

        return;
    }

    public void <init>(com.bumptech.glide.load.model.ModelLoader, com.bumptech.glide.load.model.ModelCache)
    {
        com.bumptech.glide.load.model.stream.BaseGlideUrlLoader r0;
        com.bumptech.glide.load.model.ModelLoader r1;
        com.bumptech.glide.load.model.ModelCache r2;

        r0 := @this: com.bumptech.glide.load.model.stream.BaseGlideUrlLoader;

        r1 := @parameter0: com.bumptech.glide.load.model.ModelLoader;

        r2 := @parameter1: com.bumptech.glide.load.model.ModelCache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.bumptech.glide.load.model.stream.BaseGlideUrlLoader: com.bumptech.glide.load.model.ModelLoader concreteLoader> = r1;

        r0.<com.bumptech.glide.load.model.stream.BaseGlideUrlLoader: com.bumptech.glide.load.model.ModelCache modelCache> = r2;

        return;
    }

    public com.bumptech.glide.load.data.DataFetcher getResourceFetcher(java.lang.Object, int, int)
    {
        com.bumptech.glide.load.model.stream.BaseGlideUrlLoader r0;
        java.lang.Object r1, $r11;
        int i0, i1;
        com.bumptech.glide.load.model.GlideUrl r2, $r7;
        java.lang.String r3;
        com.bumptech.glide.load.model.ModelCache $r4, $r8, $r9, $r10;
        com.bumptech.glide.load.model.ModelLoader $r5;
        com.bumptech.glide.load.data.DataFetcher $r6;

        r0 := @this: com.bumptech.glide.load.model.stream.BaseGlideUrlLoader;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = null;

        $r4 = r0.<com.bumptech.glide.load.model.stream.BaseGlideUrlLoader: com.bumptech.glide.load.model.ModelCache modelCache>;

        if $r4 == null goto label1;

        $r10 = r0.<com.bumptech.glide.load.model.stream.BaseGlideUrlLoader: com.bumptech.glide.load.model.ModelCache modelCache>;

        $r11 = virtualinvoke $r10.<com.bumptech.glide.load.model.ModelCache: java.lang.Object get(java.lang.Object,int,int)>(r1, i0, i1);

        r2 = (com.bumptech.glide.load.model.GlideUrl) $r11;

     label1:
        if r2 != null goto label2;

        r3 = virtualinvoke r0.<com.bumptech.glide.load.model.stream.BaseGlideUrlLoader: java.lang.String getUrl(java.lang.Object,int,int)>(r1, i0, i1);

        $r7 = new com.bumptech.glide.load.model.GlideUrl;

        specialinvoke $r7.<com.bumptech.glide.load.model.GlideUrl: void <init>(java.lang.String)>(r3);

        r2 = $r7;

        $r8 = r0.<com.bumptech.glide.load.model.stream.BaseGlideUrlLoader: com.bumptech.glide.load.model.ModelCache modelCache>;

        if $r8 == null goto label2;

        $r9 = r0.<com.bumptech.glide.load.model.stream.BaseGlideUrlLoader: com.bumptech.glide.load.model.ModelCache modelCache>;

        virtualinvoke $r9.<com.bumptech.glide.load.model.ModelCache: void put(java.lang.Object,int,int,java.lang.Object)>(r1, i0, i1, r2);

     label2:
        $r5 = r0.<com.bumptech.glide.load.model.stream.BaseGlideUrlLoader: com.bumptech.glide.load.model.ModelLoader concreteLoader>;

        $r6 = interfaceinvoke $r5.<com.bumptech.glide.load.model.ModelLoader: com.bumptech.glide.load.data.DataFetcher getResourceFetcher(java.lang.Object,int,int)>(r2, i0, i1);

        return $r6;
    }

    protected abstract java.lang.String getUrl(java.lang.Object, int, int);
}
