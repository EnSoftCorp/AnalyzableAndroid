public class com.bumptech.glide.gifdecoder.GifHeaderParser extends java.lang.Object
{
    public static final java.lang.String TAG;
    private static final int MAX_STACK_SIZE;
    private final java.nio.ByteBuffer rawData;
    private com.bumptech.glide.gifdecoder.GifHeader header;
    protected byte[] block;
    protected int blockSize;
    protected boolean lctFlag;
    protected int lctSize;
    private short[] prefix;
    private byte[] suffix;
    private byte[] pixelStack;

    public void <init>(byte[])
    {
        com.bumptech.glide.gifdecoder.GifHeaderParser r0;
        byte[] r1, $r3;
        com.bumptech.glide.gifdecoder.GifHeader $r2, $r4;
        java.nio.ByteBuffer $r5, $r6, $r9;
        java.nio.ByteOrder $r8;

        r0 := @this: com.bumptech.glide.gifdecoder.GifHeaderParser;

        r1 := @parameter0: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new com.bumptech.glide.gifdecoder.GifHeader;

        specialinvoke $r2.<com.bumptech.glide.gifdecoder.GifHeader: void <init>()>();

        r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header> = $r2;

        $r3 = newarray (byte)[256];

        r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: byte[] block> = $r3;

        r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int blockSize> = 0;

        if r1 == null goto label1;

        $r5 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(r1);

        r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: java.nio.ByteBuffer rawData> = $r5;

        $r6 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: java.nio.ByteBuffer rawData>;

        virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $r9 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: java.nio.ByteBuffer rawData>;

        $r8 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        virtualinvoke $r9.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r8);

        goto label2;

     label1:
        r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: java.nio.ByteBuffer rawData> = null;

        $r4 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r4.<com.bumptech.glide.gifdecoder.GifHeader: int status> = 2;

     label2:
        return;
    }

    public com.bumptech.glide.gifdecoder.GifHeader parseHeader()
    {
        com.bumptech.glide.gifdecoder.GifHeaderParser r0;
        boolean $z0, $z1;
        com.bumptech.glide.gifdecoder.GifHeader $r1, $r2, $r3, $r4;
        int $i0;

        r0 := @this: com.bumptech.glide.gifdecoder.GifHeaderParser;

        $z0 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: boolean err()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        return $r4;

     label1:
        specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: void readHeader()>();

        $z1 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: boolean err()>();

        if $z1 != 0 goto label2;

        virtualinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: void readContents()>();

        $r2 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i0 = $r2.<com.bumptech.glide.gifdecoder.GifHeader: int frameCount>;

        if $i0 >= 0 goto label2;

        $r3 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r3.<com.bumptech.glide.gifdecoder.GifHeader: int status> = 1;

     label2:
        $r1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        return $r1;
    }

    protected void readContents()
    {
        com.bumptech.glide.gifdecoder.GifHeaderParser r0;
        boolean z0, $z1, $z2;
        int i0, i1, i5;
        java.lang.String r1;
        java.lang.StringBuilder $r2, $r3, $r5;
        byte[] $r4;
        byte $b3;
        char $c4;
        com.bumptech.glide.gifdecoder.GifFrame $r6;
        com.bumptech.glide.gifdecoder.GifHeader $r7, $r8;

        r0 := @this: com.bumptech.glide.gifdecoder.GifHeaderParser;

        z0 = 0;

     label01:
        if z0 != 0 goto label16;

        $z1 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: boolean err()>();

        if $z1 != 0 goto label16;

        i0 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int read()>();

        lookupswitch(i0)
        {
            case 0: goto label14;
            case 33: goto label03;
            case 44: goto label02;
            case 59: goto label13;
            default: goto label14;
        };

     label02:
        virtualinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: void readBitmap()>();

        goto label15;

     label03:
        i5 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int read()>();

        lookupswitch(i5)
        {
            case 1: goto label10;
            case 249: goto label04;
            case 254: goto label09;
            case 255: goto label05;
            default: goto label11;
        };

     label04:
        $r8 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r6 = new com.bumptech.glide.gifdecoder.GifFrame;

        specialinvoke $r6.<com.bumptech.glide.gifdecoder.GifFrame: void <init>()>();

        $r8.<com.bumptech.glide.gifdecoder.GifHeader: com.bumptech.glide.gifdecoder.GifFrame currentFrame> = $r6;

        virtualinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: void readGraphicControlExt()>();

        goto label12;

     label05:
        virtualinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int readBlock()>();

        r1 = "";

        i1 = 0;

     label06:
        if i1 >= 11 goto label07;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r4 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: byte[] block>;

        $b3 = $r4[i1];

        $c4 = (char) $b3;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

        r1 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        i1 = i1 + 1;

        goto label06;

     label07:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("NETSCAPE2.0");

        if $z2 == 0 goto label08;

        virtualinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: void readNetscapeExt()>();

        goto label12;

     label08:
        virtualinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: void skip()>();

        goto label12;

     label09:
        virtualinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: void skip()>();

        goto label12;

     label10:
        virtualinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: void skip()>();

        goto label12;

     label11:
        virtualinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: void skip()>();

     label12:
        goto label15;

     label13:
        z0 = 1;

        goto label15;

     label14:
        $r7 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r7.<com.bumptech.glide.gifdecoder.GifHeader: int status> = 1;

     label15:
        goto label01;

     label16:
        return;
    }

    protected void readGraphicControlExt()
    {
        com.bumptech.glide.gifdecoder.GifHeaderParser r0;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i9;
        com.bumptech.glide.gifdecoder.GifHeader $r1, $r3, $r5, $r7, $r8, $r11, $r13, $r14;
        com.bumptech.glide.gifdecoder.GifFrame $r2, $r4, $r6, $r9, $r10, $r12, $r15;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.bumptech.glide.gifdecoder.GifHeaderParser;

        specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int read()>();

        i0 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int read()>();

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r2 = $r1.<com.bumptech.glide.gifdecoder.GifHeader: com.bumptech.glide.gifdecoder.GifFrame currentFrame>;

        $i2 = i0 & 28;

        $i3 = $i2 >> 2;

        $r2.<com.bumptech.glide.gifdecoder.GifFrame: int dispose> = $i3;

        $r3 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r4 = $r3.<com.bumptech.glide.gifdecoder.GifHeader: com.bumptech.glide.gifdecoder.GifFrame currentFrame>;

        $i4 = $r4.<com.bumptech.glide.gifdecoder.GifFrame: int dispose>;

        if $i4 != 0 goto label1;

        $r14 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r15 = $r14.<com.bumptech.glide.gifdecoder.GifHeader: com.bumptech.glide.gifdecoder.GifFrame currentFrame>;

        $r15.<com.bumptech.glide.gifdecoder.GifFrame: int dispose> = 1;

     label1:
        $r5 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r6 = $r5.<com.bumptech.glide.gifdecoder.GifHeader: com.bumptech.glide.gifdecoder.GifFrame currentFrame>;

        $i5 = i0 & 1;

        if $i5 == 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        $r6.<com.bumptech.glide.gifdecoder.GifFrame: boolean transparency> = $z3;

        $r7 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $z2 = $r7.<com.bumptech.glide.gifdecoder.GifHeader: boolean isTransparent>;

        $r8 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r9 = $r8.<com.bumptech.glide.gifdecoder.GifHeader: com.bumptech.glide.gifdecoder.GifFrame currentFrame>;

        $z0 = $r9.<com.bumptech.glide.gifdecoder.GifFrame: boolean transparency>;

        $z1 = $z2 | $z0;

        $r7.<com.bumptech.glide.gifdecoder.GifHeader: boolean isTransparent> = $z1;

        $r11 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r10 = $r11.<com.bumptech.glide.gifdecoder.GifHeader: com.bumptech.glide.gifdecoder.GifFrame currentFrame>;

        $i7 = virtualinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int readShort()>();

        $i6 = $i7 * 10;

        $r10.<com.bumptech.glide.gifdecoder.GifFrame: int delay> = $i6;

        $r13 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r12 = $r13.<com.bumptech.glide.gifdecoder.GifHeader: com.bumptech.glide.gifdecoder.GifFrame currentFrame>;

        $i9 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int read()>();

        $r12.<com.bumptech.glide.gifdecoder.GifFrame: int transIndex> = $i9;

        specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int read()>();

        return;
    }

    protected void readBitmap()
    {
        com.bumptech.glide.gifdecoder.GifHeaderParser r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        com.bumptech.glide.gifdecoder.GifHeader $r1, $r3, $r5, $r7, $r9, $r11, $r12, $r16, $r17, $r19, $r23;
        com.bumptech.glide.gifdecoder.GifFrame $r2, $r4, $r6, $r8, $r10, $r13, $r14, $r20, $r21;
        double $d0, $d1;
        boolean $z0, $z1, $z3, $z4;
        java.nio.ByteBuffer $r15;
        java.util.List $r18;
        int[] $r22;

        r0 := @this: com.bumptech.glide.gifdecoder.GifHeaderParser;

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r2 = $r1.<com.bumptech.glide.gifdecoder.GifHeader: com.bumptech.glide.gifdecoder.GifFrame currentFrame>;

        $i1 = virtualinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int readShort()>();

        $r2.<com.bumptech.glide.gifdecoder.GifFrame: int ix> = $i1;

        $r3 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r4 = $r3.<com.bumptech.glide.gifdecoder.GifHeader: com.bumptech.glide.gifdecoder.GifFrame currentFrame>;

        $i2 = virtualinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int readShort()>();

        $r4.<com.bumptech.glide.gifdecoder.GifFrame: int iy> = $i2;

        $r5 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r6 = $r5.<com.bumptech.glide.gifdecoder.GifHeader: com.bumptech.glide.gifdecoder.GifFrame currentFrame>;

        $i3 = virtualinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int readShort()>();

        $r6.<com.bumptech.glide.gifdecoder.GifFrame: int iw> = $i3;

        $r7 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r8 = $r7.<com.bumptech.glide.gifdecoder.GifHeader: com.bumptech.glide.gifdecoder.GifFrame currentFrame>;

        $i4 = virtualinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int readShort()>();

        $r8.<com.bumptech.glide.gifdecoder.GifFrame: int ih> = $i4;

        i0 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int read()>();

        $i5 = i0 & 128;

        if $i5 == 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: boolean lctFlag> = $z4;

        $i7 = i0 & 7;

        $i6 = $i7 + 1;

        $d1 = (double) $i6;

        $d0 = staticinvoke <java.lang.Math: double pow(double,double)>(2.0, $d1);

        $i8 = (int) $d0;

        r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int lctSize> = $i8;

        $r9 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r10 = $r9.<com.bumptech.glide.gifdecoder.GifHeader: com.bumptech.glide.gifdecoder.GifFrame currentFrame>;

        $i9 = i0 & 64;

        if $i9 == 0 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        $r10.<com.bumptech.glide.gifdecoder.GifFrame: boolean interlace> = $z3;

        $z0 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: boolean lctFlag>;

        if $z0 == 0 goto label5;

        $r23 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r21 = $r23.<com.bumptech.glide.gifdecoder.GifHeader: com.bumptech.glide.gifdecoder.GifFrame currentFrame>;

        $i13 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int lctSize>;

        $r22 = virtualinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int[] readColorTable(int)>($i13);

        $r21.<com.bumptech.glide.gifdecoder.GifFrame: int[] lct> = $r22;

        goto label6;

     label5:
        $r11 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r13 = $r11.<com.bumptech.glide.gifdecoder.GifHeader: com.bumptech.glide.gifdecoder.GifFrame currentFrame>;

        $r13.<com.bumptech.glide.gifdecoder.GifFrame: int[] lct> = null;

     label6:
        $r12 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r14 = $r12.<com.bumptech.glide.gifdecoder.GifHeader: com.bumptech.glide.gifdecoder.GifFrame currentFrame>;

        $r15 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: java.nio.ByteBuffer rawData>;

        $i10 = virtualinvoke $r15.<java.nio.ByteBuffer: int position()>();

        $r14.<com.bumptech.glide.gifdecoder.GifFrame: int bufferFrameStart> = $i10;

        virtualinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: void skipBitmapData()>();

        virtualinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: void skip()>();

        $z1 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: boolean err()>();

        if $z1 == 0 goto label7;

        return;

     label7:
        $r17 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i12 = $r17.<com.bumptech.glide.gifdecoder.GifHeader: int frameCount>;

        $i11 = $i12 + 1;

        $r17.<com.bumptech.glide.gifdecoder.GifHeader: int frameCount> = $i11;

        $r16 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r18 = $r16.<com.bumptech.glide.gifdecoder.GifHeader: java.util.List frames>;

        $r19 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r20 = $r19.<com.bumptech.glide.gifdecoder.GifHeader: com.bumptech.glide.gifdecoder.GifFrame currentFrame>;

        interfaceinvoke $r18.<java.util.List: boolean add(java.lang.Object)>($r20);

        return;
    }

    protected void readNetscapeExt()
    {
        com.bumptech.glide.gifdecoder.GifHeaderParser r0;
        short s0, s1;
        byte[] $r1, $r2, $r3;
        byte $b3, $b5, $b6;
        int $i4, $i7, $i8;
        boolean $z0;
        com.bumptech.glide.gifdecoder.GifHeader $r4;

        r0 := @this: com.bumptech.glide.gifdecoder.GifHeaderParser;

     label1:
        virtualinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int readBlock()>();

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: byte[] block>;

        $b3 = $r1[0];

        if $b3 != 1 goto label2;

        $r2 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: byte[] block>;

        $b5 = $r2[1];

        s0 = $b5 & 255;

        $r3 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: byte[] block>;

        $b6 = $r3[2];

        s1 = $b6 & 255;

        $r4 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i7 = s1 << 8;

        $i8 = $i7 | s0;

        $r4.<com.bumptech.glide.gifdecoder.GifHeader: int loopCount> = $i8;

     label2:
        $i4 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int blockSize>;

        if $i4 <= 0 goto label3;

        $z0 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: boolean err()>();

        if $z0 == 0 goto label1;

     label3:
        return;
    }

    private void readHeader()
    {
        com.bumptech.glide.gifdecoder.GifHeaderParser r0;
        java.lang.String r1;
        int i0, $i1, $i2, $i3, $i5;
        boolean $z0, $z1, $z2;
        com.bumptech.glide.gifdecoder.GifHeader $r2, $r3, $r4, $r6, $r7, $r9, $r10;
        int[] $r5, $r8;
        java.lang.StringBuilder $r11, $r12, $r13;
        char $c4;

        r0 := @this: com.bumptech.glide.gifdecoder.GifHeaderParser;

        r1 = "";

        i0 = 0;

     label1:
        if i0 >= 6 goto label2;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $i5 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int read()>();

        $c4 = (char) $i5;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c4);

        r1 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        i0 = i0 + 1;

        goto label1;

     label2:
        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("GIF");

        if $z0 != 0 goto label3;

        $r9 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r9.<com.bumptech.glide.gifdecoder.GifHeader: int status> = 1;

        return;

     label3:
        virtualinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: void readLSD()>();

        $r2 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $z1 = $r2.<com.bumptech.glide.gifdecoder.GifHeader: boolean gctFlag>;

        if $z1 == 0 goto label4;

        $z2 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: boolean err()>();

        if $z2 != 0 goto label4;

        $r4 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r3 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i1 = $r3.<com.bumptech.glide.gifdecoder.GifHeader: int gctSize>;

        $r5 = virtualinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int[] readColorTable(int)>($i1);

        $r4.<com.bumptech.glide.gifdecoder.GifHeader: int[] gct> = $r5;

        $r10 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r6 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r8 = $r6.<com.bumptech.glide.gifdecoder.GifHeader: int[] gct>;

        $r7 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i2 = $r7.<com.bumptech.glide.gifdecoder.GifHeader: int bgIndex>;

        $i3 = $r8[$i2];

        $r10.<com.bumptech.glide.gifdecoder.GifHeader: int bgColor> = $i3;

     label4:
        return;
    }

    protected void readLSD()
    {
        com.bumptech.glide.gifdecoder.GifHeaderParser r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        com.bumptech.glide.gifdecoder.GifHeader $r1, $r2, $r3, $r4, $r5, $r6;
        boolean $z0;

        r0 := @this: com.bumptech.glide.gifdecoder.GifHeaderParser;

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i1 = virtualinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int readShort()>();

        $r1.<com.bumptech.glide.gifdecoder.GifHeader: int width> = $i1;

        $r2 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i2 = virtualinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int readShort()>();

        $r2.<com.bumptech.glide.gifdecoder.GifHeader: int height> = $i2;

        i0 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int read()>();

        $r3 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i3 = i0 & 128;

        if $i3 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r3.<com.bumptech.glide.gifdecoder.GifHeader: boolean gctFlag> = $z0;

        $r4 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i4 = i0 & 7;

        $i5 = 2 << $i4;

        $r4.<com.bumptech.glide.gifdecoder.GifHeader: int gctSize> = $i5;

        $r5 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i6 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int read()>();

        $r5.<com.bumptech.glide.gifdecoder.GifHeader: int bgIndex> = $i6;

        $r6 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i7 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int read()>();

        $r6.<com.bumptech.glide.gifdecoder.GifHeader: int pixelAspect> = $i7;

        return;
    }

    protected int[] readColorTable(int)
    {
        com.bumptech.glide.gifdecoder.GifHeaderParser r0;
        int i0, i1, i2, i3, $i10, $i11, $i12, $i13, $i14, $i15, i17, i18;
        int[] r1;
        byte[] r2;
        short s4, s5, s6;
        java.nio.ByteBuffer $r3;
        byte $b7, $b8, $b9;
        java.nio.BufferUnderflowException $r5, r7;
        com.bumptech.glide.gifdecoder.GifHeader $r6;

        r0 := @this: com.bumptech.glide.gifdecoder.GifHeaderParser;

        i0 := @parameter0: int;

        i1 = 3 * i0;

        r1 = null;

        r2 = newarray (byte)[i1];

     label1:
        $r3 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: java.nio.ByteBuffer rawData>;

        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[])>(r2);

        r1 = newarray (int)[256];

        i2 = 0;

        i3 = 0;

     label2:
        if i2 >= i0 goto label3;

        i17 = i3 + 1;

        $b7 = r2[i3];

        s4 = $b7 & 255;

        i18 = i17 + 1;

        $b8 = r2[i17];

        s5 = $b8 & 255;

        i3 = i18 + 1;

        $b9 = r2[i18];

        s6 = $b9 & 255;

        $i11 = i2;

        i2 = i2 + 1;

        $i10 = s4 << 16;

        $i12 = -16777216 | $i10;

        $i13 = s5 << 8;

        $i15 = $i12 | $i13;

        $i14 = $i15 | s6;

        r1[$i11] = $i14;

        goto label2;

     label3:
        goto label5;

     label4:
        $r5 := @caughtexception;

        r7 = $r5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("GifHeaderParser", "Format Error Reading Color Table", r7);

        $r6 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r6.<com.bumptech.glide.gifdecoder.GifHeader: int status> = 1;

     label5:
        return r1;

        catch java.nio.BufferUnderflowException from label1 to label3 with label4;
    }

    protected void skipBitmapData()
    {
        com.bumptech.glide.gifdecoder.GifHeaderParser r0;
        byte b0, $b23, $b26, $b28, $b29, $b31, $b33, $b36, $b38;
        int i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, $i20, $i21, $i22, $i25, $i27, $i30, $i32, $i34, $i37, $i39, i41;
        com.bumptech.glide.gifdecoder.GifHeader $r1, $r2;
        short[] $r3, $r9, $r13, $r17, $r21;
        byte[] $r4, $r5, $r6, $r7, $r8, $r10, $r11, $r12, $r14, $r15, $r16, $r18, $r19, $r20;
        short $s24, $s35;

        r0 := @this: com.bumptech.glide.gifdecoder.GifHeaderParser;

        b0 = -1;

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i21 = $r1.<com.bumptech.glide.gifdecoder.GifHeader: int width>;

        $r2 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i20 = $r2.<com.bumptech.glide.gifdecoder.GifHeader: int height>;

        i1 = $i21 * $i20;

        $r3 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: short[] prefix>;

        if $r3 != null goto label01;

        $r21 = newarray (short)[4096];

        r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: short[] prefix> = $r21;

     label01:
        $r5 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: byte[] suffix>;

        if $r5 != null goto label02;

        $r20 = newarray (byte)[4096];

        r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: byte[] suffix> = $r20;

     label02:
        $r4 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: byte[] pixelStack>;

        if $r4 != null goto label03;

        $r19 = newarray (byte)[4097];

        r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: byte[] pixelStack> = $r19;

     label03:
        i14 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int read()>();

        i3 = 1 << i14;

        i6 = i3 + 1;

        i2 = i3 + 2;

        i8 = b0;

        i5 = i14 + 1;

        $i22 = 1 << i5;

        i4 = $i22 - 1;

        staticinvoke <java.lang.System: long currentTimeMillis()>();

        i10 = 0;

     label04:
        if i10 >= i3 goto label05;

        $r17 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: short[] prefix>;

        $r17[i10] = 0;

        $r18 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: byte[] suffix>;

        $b38 = (byte) i10;

        $r18[i10] = $b38;

        i10 = i10 + 1;

        goto label04;

     label05:
        staticinvoke <java.lang.System: long currentTimeMillis()>();

        i17 = 0;

        i15 = 0;

        i16 = 0;

        i11 = 0;

        i9 = 0;

        i13 = 0;

        i12 = 0;

     label06:
        if i12 >= i1 goto label18;

        if i15 != 0 goto label17;

        if i9 >= i5 goto label09;

        if i11 != 0 goto label08;

        i11 = virtualinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int readBlock()>();

        if i11 > 0 goto label07;

        goto label18;

     label07:
        i17 = 0;

     label08:
        $r16 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: byte[] block>;

        $b36 = $r16[i17];

        $s35 = $b36 & 255;

        $i39 = $s35 << i9;

        i13 = i13 + $i39;

        i9 = i9 + 8;

        i17 = i17 + 1;

        i11 = i11 + -1;

        goto label06;

     label09:
        i41 = i13 & i4;

        i13 = i13 >> i5;

        i9 = i9 - i5;

        if i41 > i2 goto label18;

        if i41 != i6 goto label10;

        goto label18;

     label10:
        if i41 != i3 goto label11;

        i5 = i14 + 1;

        $i37 = 1 << i5;

        i4 = $i37 - 1;

        i2 = i3 + 2;

        i8 = b0;

        goto label06;

     label11:
        if i8 != b0 goto label12;

        $r14 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: byte[] pixelStack>;

        $i34 = i15;

        i15 = i15 + 1;

        $r15 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: byte[] suffix>;

        $b33 = $r15[i41];

        $r14[$i34] = $b33;

        i8 = i41;

        i16 = i41;

        goto label06;

     label12:
        i7 = i41;

        if i41 != i2 goto label13;

        $r12 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: byte[] pixelStack>;

        $i32 = i15;

        i15 = i15 + 1;

        $b31 = (byte) i16;

        $r12[$i32] = $b31;

        i41 = i8;

     label13:
        if i41 <= i3 goto label14;

        $r10 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: byte[] pixelStack>;

        $i30 = i15;

        i15 = i15 + 1;

        $r11 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: byte[] suffix>;

        $b29 = $r11[i41];

        $r10[$i30] = $b29;

        $r13 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: short[] prefix>;

        i41 = $r13[i41];

        goto label13;

     label14:
        $r6 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: byte[] suffix>;

        $b23 = $r6[i41];

        i16 = $b23 & 255;

        if i2 < 4096 goto label15;

        goto label18;

     label15:
        $r7 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: byte[] pixelStack>;

        $i25 = i15;

        i15 = i15 + 1;

        $b26 = (byte) i16;

        $r7[$i25] = $b26;

        $r9 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: short[] prefix>;

        $s24 = (short) i8;

        $r9[i2] = $s24;

        $r8 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: byte[] suffix>;

        $b28 = (byte) i16;

        $r8[i2] = $b28;

        i2 = i2 + 1;

        $i27 = i2 & i4;

        if $i27 != 0 goto label16;

        if i2 >= 4096 goto label16;

        i5 = i5 + 1;

        i4 = i4 + i2;

     label16:
        i8 = i7;

     label17:
        i15 = i15 + -1;

        i12 = i12 + 1;

        goto label06;

     label18:
        return;
    }

    protected void skip()
    {
        com.bumptech.glide.gifdecoder.GifHeaderParser r0;
        int $i1;
        boolean $z0;

        r0 := @this: com.bumptech.glide.gifdecoder.GifHeaderParser;

     label1:
        virtualinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int readBlock()>();

        $i1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int blockSize>;

        if $i1 <= 0 goto label2;

        $z0 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: boolean err()>();

        if $z0 == 0 goto label1;

     label2:
        return;
    }

    protected int readBlock()
    {
        com.bumptech.glide.gifdecoder.GifHeaderParser r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        byte[] $r1;
        java.nio.ByteBuffer $r2;
        java.lang.Exception $r4, r6;
        com.bumptech.glide.gifdecoder.GifHeader $r5;

        r0 := @this: com.bumptech.glide.gifdecoder.GifHeaderParser;

        $i2 = specialinvoke r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int read()>();

        r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int blockSize> = $i2;

        i0 = 0;

        $i3 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int blockSize>;

        if $i3 <= 0 goto label4;

     label1:
        $i4 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int blockSize>;

        if i0 >= $i4 goto label2;

        $i5 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: int blockSize>;

        i1 = $i5 - i0;

        $r2 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: java.nio.ByteBuffer rawData>;

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: byte[] block>;

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>($r1, i0, i1);

        i0 = i0 + i1;

        goto label1;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r6 = $r4;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("GifHeaderParser", "Error Reading Block", r6);

        $r5 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r5.<com.bumptech.glide.gifdecoder.GifHeader: int status> = 1;

     label4:
        return i0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private int read()
    {
        com.bumptech.glide.gifdecoder.GifHeaderParser r0;
        short s0;
        java.nio.ByteBuffer $r2;
        byte $b1;
        java.lang.Exception $r3;
        com.bumptech.glide.gifdecoder.GifHeader $r4;

        r0 := @this: com.bumptech.glide.gifdecoder.GifHeaderParser;

        s0 = 0;

     label1:
        $r2 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: java.nio.ByteBuffer rawData>;

        $b1 = virtualinvoke $r2.<java.nio.ByteBuffer: byte get()>();

        s0 = $b1 & 255;

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $r4.<com.bumptech.glide.gifdecoder.GifHeader: int status> = 1;

     label4:
        return s0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected int readShort()
    {
        com.bumptech.glide.gifdecoder.GifHeaderParser r0;
        java.nio.ByteBuffer $r1;
        short $s0;

        r0 := @this: com.bumptech.glide.gifdecoder.GifHeaderParser;

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: java.nio.ByteBuffer rawData>;

        $s0 = virtualinvoke $r1.<java.nio.ByteBuffer: short getShort()>();

        return $s0;
    }

    private boolean err()
    {
        com.bumptech.glide.gifdecoder.GifHeaderParser r0;
        com.bumptech.glide.gifdecoder.GifHeader $r1;
        int $i0;
        boolean $z0;

        r0 := @this: com.bumptech.glide.gifdecoder.GifHeaderParser;

        $r1 = r0.<com.bumptech.glide.gifdecoder.GifHeaderParser: com.bumptech.glide.gifdecoder.GifHeader header>;

        $i0 = $r1.<com.bumptech.glide.gifdecoder.GifHeader: int status>;

        if $i0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static void <clinit>()
    {
        <com.bumptech.glide.gifdecoder.GifHeaderParser: int MAX_STACK_SIZE> = 4096;

        <com.bumptech.glide.gifdecoder.GifHeaderParser: java.lang.String TAG> = "GifHeaderParser";

        return;
    }
}
