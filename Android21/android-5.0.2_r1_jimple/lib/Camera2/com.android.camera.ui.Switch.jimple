public class com.android.camera.ui.Switch extends android.widget.CompoundButton
{
    private static final int TOUCH_MODE_IDLE;
    private static final int TOUCH_MODE_DOWN;
    private static final int TOUCH_MODE_DRAGGING;
    private android.graphics.drawable.Drawable mThumbDrawable;
    private android.graphics.drawable.Drawable mTrackDrawable;
    private int mThumbTextPadding;
    private int mSwitchMinWidth;
    private int mSwitchTextMaxWidth;
    private int mSwitchPadding;
    private java.lang.CharSequence mTextOn;
    private java.lang.CharSequence mTextOff;
    private int mTouchMode;
    private int mTouchSlop;
    private float mTouchX;
    private float mTouchY;
    private android.view.VelocityTracker mVelocityTracker;
    private int mMinFlingVelocity;
    private float mThumbPosition;
    private int mSwitchWidth;
    private int mSwitchHeight;
    private int mThumbWidth;
    private int mSwitchLeft;
    private int mSwitchTop;
    private int mSwitchRight;
    private int mSwitchBottom;
    private android.text.TextPaint mTextPaint;
    private android.content.res.ColorStateList mTextColors;
    private android.text.Layout mOnLayout;
    private android.text.Layout mOffLayout;
    private final android.graphics.Rect mTempRect;
    private static final int[] CHECKED_STATE_SET;

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.android.camera.ui.Switch r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: com.android.camera.ui.Switch;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.android.camera.ui.Switch: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 2130771969);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.android.camera.ui.Switch r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.content.res.Resources r3;
        android.util.DisplayMetrics r4;
        android.view.ViewConfiguration r5;
        android.view.VelocityTracker $r6;
        android.graphics.Rect $r7;
        android.text.TextPaint $r8, $r9;
        float $f0;
        android.graphics.drawable.Drawable $r10, $r11;
        java.lang.String $r12, $r13;
        boolean $z0;

        r0 := @this: com.android.camera.ui.Switch;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.CompoundButton: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        $r6 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<com.android.camera.ui.Switch: android.view.VelocityTracker mVelocityTracker> = $r6;

        $r7 = new android.graphics.Rect;

        specialinvoke $r7.<android.graphics.Rect: void <init>()>();

        r0.<com.android.camera.ui.Switch: android.graphics.Rect mTempRect> = $r7;

        $r8 = new android.text.TextPaint;

        specialinvoke $r8.<android.text.TextPaint: void <init>(int)>(1);

        r0.<com.android.camera.ui.Switch: android.text.TextPaint mTextPaint> = $r8;

        r3 = virtualinvoke r0.<com.android.camera.ui.Switch: android.content.res.Resources getResources()>();

        r4 = virtualinvoke r3.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $r9 = r0.<com.android.camera.ui.Switch: android.text.TextPaint mTextPaint>;

        $f0 = r4.<android.util.DisplayMetrics: float density>;

        $r9.<android.text.TextPaint: float density> = $f0;

        $r10 = virtualinvoke r3.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(2130837851);

        r0.<com.android.camera.ui.Switch: android.graphics.drawable.Drawable mThumbDrawable> = $r10;

        $r11 = virtualinvoke r3.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(2130837856);

        r0.<com.android.camera.ui.Switch: android.graphics.drawable.Drawable mTrackDrawable> = $r11;

        $r13 = virtualinvoke r3.<android.content.res.Resources: java.lang.String getString(int)>(2131230941);

        r0.<com.android.camera.ui.Switch: java.lang.CharSequence mTextOn> = $r13;

        $r12 = virtualinvoke r3.<android.content.res.Resources: java.lang.String getString(int)>(2131230942);

        r0.<com.android.camera.ui.Switch: java.lang.CharSequence mTextOff> = $r12;

        $i2 = virtualinvoke r3.<android.content.res.Resources: int getDimensionPixelSize(int)>(2131558435);

        r0.<com.android.camera.ui.Switch: int mThumbTextPadding> = $i2;

        $i1 = virtualinvoke r3.<android.content.res.Resources: int getDimensionPixelSize(int)>(2131558433);

        r0.<com.android.camera.ui.Switch: int mSwitchMinWidth> = $i1;

        $i4 = virtualinvoke r3.<android.content.res.Resources: int getDimensionPixelSize(int)>(2131558434);

        r0.<com.android.camera.ui.Switch: int mSwitchTextMaxWidth> = $i4;

        $i3 = virtualinvoke r3.<android.content.res.Resources: int getDimensionPixelSize(int)>(2131558432);

        r0.<com.android.camera.ui.Switch: int mSwitchPadding> = $i3;

        virtualinvoke r0.<com.android.camera.ui.Switch: void setSwitchTextAppearance(android.content.Context,int)>(r1, 16974081);

        r5 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>(r1);

        $i5 = virtualinvoke r5.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        r0.<com.android.camera.ui.Switch: int mTouchSlop> = $i5;

        $i6 = virtualinvoke r5.<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>();

        r0.<com.android.camera.ui.Switch: int mMinFlingVelocity> = $i6;

        virtualinvoke r0.<com.android.camera.ui.Switch: void refreshDrawableState()>();

        $z0 = virtualinvoke r0.<com.android.camera.ui.Switch: boolean isChecked()>();

        virtualinvoke r0.<com.android.camera.ui.Switch: void setChecked(boolean)>($z0);

        return;
    }

    public void setSwitchTextAppearance(android.content.Context, int)
    {
        com.android.camera.ui.Switch r0;
        android.content.Context r1;
        int i0, i1;
        android.content.res.Resources r2;
        android.content.res.ColorStateList $r3;
        android.text.TextPaint $r4, $r5;
        float $f0, $f1, $f2;
        byte $b2;

        r0 := @this: com.android.camera.ui.Switch;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r2 = virtualinvoke r0.<com.android.camera.ui.Switch: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke r0.<com.android.camera.ui.Switch: android.content.res.ColorStateList getTextColors()>();

        r0.<com.android.camera.ui.Switch: android.content.res.ColorStateList mTextColors> = $r3;

        i1 = virtualinvoke r2.<android.content.res.Resources: int getDimensionPixelSize(int)>(2131558436);

        $f0 = (float) i1;

        $r4 = r0.<com.android.camera.ui.Switch: android.text.TextPaint mTextPaint>;

        $f1 = virtualinvoke $r4.<android.text.TextPaint: float getTextSize()>();

        $b2 = $f0 cmpl $f1;

        if $b2 == 0 goto label1;

        $r5 = r0.<com.android.camera.ui.Switch: android.text.TextPaint mTextPaint>;

        $f2 = (float) i1;

        virtualinvoke $r5.<android.text.TextPaint: void setTextSize(float)>($f2);

        virtualinvoke r0.<com.android.camera.ui.Switch: void requestLayout()>();

     label1:
        return;
    }

    public void onMeasure(int, int)
    {
        com.android.camera.ui.Switch r0;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24;
        android.text.Layout $r1, $r2, $r5, $r6, $r12, $r13;
        android.graphics.Rect $r3, $r7, $r8;
        android.graphics.drawable.Drawable $r4, $r9;
        java.lang.CharSequence $r10, $r11;

        r0 := @this: com.android.camera.ui.Switch;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.camera.ui.Switch: android.text.Layout mOnLayout>;

        if $r1 != null goto label1;

        $r10 = r0.<com.android.camera.ui.Switch: java.lang.CharSequence mTextOn>;

        $i24 = r0.<com.android.camera.ui.Switch: int mSwitchTextMaxWidth>;

        $r13 = specialinvoke r0.<com.android.camera.ui.Switch: android.text.Layout makeLayout(java.lang.CharSequence,int)>($r10, $i24);

        r0.<com.android.camera.ui.Switch: android.text.Layout mOnLayout> = $r13;

     label1:
        $r2 = r0.<com.android.camera.ui.Switch: android.text.Layout mOffLayout>;

        if $r2 != null goto label2;

        $r11 = r0.<com.android.camera.ui.Switch: java.lang.CharSequence mTextOff>;

        $i22 = r0.<com.android.camera.ui.Switch: int mSwitchTextMaxWidth>;

        $r12 = specialinvoke r0.<com.android.camera.ui.Switch: android.text.Layout makeLayout(java.lang.CharSequence,int)>($r11, $i22);

        r0.<com.android.camera.ui.Switch: android.text.Layout mOffLayout> = $r12;

     label2:
        $r4 = r0.<com.android.camera.ui.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        $r3 = r0.<com.android.camera.ui.Switch: android.graphics.Rect mTempRect>;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r3);

        $i7 = r0.<com.android.camera.ui.Switch: int mSwitchTextMaxWidth>;

        $r5 = r0.<com.android.camera.ui.Switch: android.text.Layout mOnLayout>;

        $i8 = virtualinvoke $r5.<android.text.Layout: int getWidth()>();

        $r6 = r0.<com.android.camera.ui.Switch: android.text.Layout mOffLayout>;

        $i9 = virtualinvoke $r6.<android.text.Layout: int getWidth()>();

        $i10 = staticinvoke <java.lang.Math: int max(int,int)>($i8, $i9);

        i2 = staticinvoke <java.lang.Math: int min(int,int)>($i7, $i10);

        $i19 = r0.<com.android.camera.ui.Switch: int mSwitchMinWidth>;

        $i13 = i2 * 2;

        $i12 = r0.<com.android.camera.ui.Switch: int mThumbTextPadding>;

        $i11 = $i12 * 4;

        $i14 = $i13 + $i11;

        $r7 = r0.<com.android.camera.ui.Switch: android.graphics.Rect mTempRect>;

        $i15 = $r7.<android.graphics.Rect: int left>;

        $i18 = $i14 + $i15;

        $r8 = r0.<com.android.camera.ui.Switch: android.graphics.Rect mTempRect>;

        $i16 = $r8.<android.graphics.Rect: int right>;

        $i17 = $i18 + $i16;

        i3 = staticinvoke <java.lang.Math: int max(int,int)>($i19, $i17);

        $r9 = r0.<com.android.camera.ui.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        i4 = virtualinvoke $r9.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        $i20 = r0.<com.android.camera.ui.Switch: int mThumbTextPadding>;

        $i21 = $i20 * 2;

        $i23 = i2 + $i21;

        r0.<com.android.camera.ui.Switch: int mThumbWidth> = $i23;

        r0.<com.android.camera.ui.Switch: int mSwitchWidth> = i3;

        r0.<com.android.camera.ui.Switch: int mSwitchHeight> = i4;

        specialinvoke r0.<android.widget.CompoundButton: void onMeasure(int,int)>(i0, i1);

        i5 = virtualinvoke r0.<com.android.camera.ui.Switch: int getMeasuredHeight()>();

        i6 = virtualinvoke r0.<com.android.camera.ui.Switch: int getMeasuredWidth()>();

        if i5 >= i4 goto label3;

        virtualinvoke r0.<com.android.camera.ui.Switch: void setMeasuredDimension(int,int)>(i6, i4);

     label3:
        return;
    }

    public void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        com.android.camera.ui.Switch r0;
        android.view.accessibility.AccessibilityEvent r1;
        java.lang.CharSequence r2, $r4;
        boolean $z0, $z1;
        android.text.Layout $r3, $r6;
        java.util.List $r5;

        r0 := @this: com.android.camera.ui.Switch;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.widget.CompoundButton: void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        $z0 = virtualinvoke r0.<com.android.camera.ui.Switch: boolean isChecked()>();

        if $z0 == 0 goto label1;

        $r6 = r0.<com.android.camera.ui.Switch: android.text.Layout mOnLayout>;

        $r4 = virtualinvoke $r6.<android.text.Layout: java.lang.CharSequence getText()>();

        goto label2;

     label1:
        $r3 = r0.<com.android.camera.ui.Switch: android.text.Layout mOffLayout>;

        $r4 = virtualinvoke $r3.<android.text.Layout: java.lang.CharSequence getText()>();

     label2:
        r2 = $r4;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z1 != 0 goto label3;

        $r5 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r2);

     label3:
        return;
    }

    private android.text.Layout makeLayout(java.lang.CharSequence, int)
    {
        com.android.camera.ui.Switch r0;
        java.lang.CharSequence r1;
        int i0, i1, $i2, $i3;
        android.text.StaticLayout r2, $r4;
        android.text.TextPaint $r3, $r5;
        float $f0;
        double $d0, $d1;
        android.text.Layout$Alignment $r6;
        android.text.TextUtils$TruncateAt $r7;

        r0 := @this: com.android.camera.ui.Switch;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.camera.ui.Switch: android.text.TextPaint mTextPaint>;

        $f0 = staticinvoke <android.text.Layout: float getDesiredWidth(java.lang.CharSequence,android.text.TextPaint)>(r1, $r3);

        $d0 = (double) $f0;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        i1 = (int) $d1;

        $r4 = new android.text.StaticLayout;

        $i2 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        $r5 = r0.<com.android.camera.ui.Switch: android.text.TextPaint mTextPaint>;

        $r6 = <android.text.Layout$Alignment: android.text.Layout$Alignment ALIGN_NORMAL>;

        $r7 = <android.text.TextUtils$TruncateAt: android.text.TextUtils$TruncateAt END>;

        $i3 = staticinvoke <java.lang.Math: int min(int,int)>(i1, i0);

        specialinvoke $r4.<android.text.StaticLayout: void <init>(java.lang.CharSequence,int,int,android.text.TextPaint,int,android.text.Layout$Alignment,float,float,boolean,android.text.TextUtils$TruncateAt,int)>(r1, 0, $i2, $r5, i1, $r6, 1.0F, 0.0F, 1, $r7, $i3);

        r2 = $r4;

        return r2;
    }

    private boolean hitThumb(float, float)
    {
        com.android.camera.ui.Switch r0;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        android.graphics.Rect $r1, $r3, $r4;
        android.graphics.drawable.Drawable $r2;
        byte $b19, $b20, $b21, $b22;
        boolean $z1;

        r0 := @this: com.android.camera.ui.Switch;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r2 = r0.<com.android.camera.ui.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        $r1 = r0.<com.android.camera.ui.Switch: android.graphics.Rect mTempRect>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r1);

        $i5 = r0.<com.android.camera.ui.Switch: int mSwitchTop>;

        $i4 = r0.<com.android.camera.ui.Switch: int mTouchSlop>;

        i0 = $i5 - $i4;

        $i7 = r0.<com.android.camera.ui.Switch: int mSwitchLeft>;

        $f2 = r0.<com.android.camera.ui.Switch: float mThumbPosition>;

        $f3 = $f2 + 0.5F;

        $i6 = (int) $f3;

        $i8 = $i7 + $i6;

        $i9 = r0.<com.android.camera.ui.Switch: int mTouchSlop>;

        i1 = $i8 - $i9;

        $i10 = r0.<com.android.camera.ui.Switch: int mThumbWidth>;

        $i11 = i1 + $i10;

        $r3 = r0.<com.android.camera.ui.Switch: android.graphics.Rect mTempRect>;

        $i12 = $r3.<android.graphics.Rect: int left>;

        $i15 = $i11 + $i12;

        $r4 = r0.<com.android.camera.ui.Switch: android.graphics.Rect mTempRect>;

        $i13 = $r4.<android.graphics.Rect: int right>;

        $i17 = $i15 + $i13;

        $i14 = r0.<com.android.camera.ui.Switch: int mTouchSlop>;

        i2 = $i17 + $i14;

        $i18 = r0.<com.android.camera.ui.Switch: int mSwitchBottom>;

        $i16 = r0.<com.android.camera.ui.Switch: int mTouchSlop>;

        i3 = $i18 + $i16;

        $f4 = (float) i1;

        $b19 = f0 cmpl $f4;

        if $b19 <= 0 goto label1;

        $f5 = (float) i2;

        $b21 = f0 cmpg $f5;

        if $b21 >= 0 goto label1;

        $f7 = (float) i0;

        $b20 = f1 cmpl $f7;

        if $b20 <= 0 goto label1;

        $f6 = (float) i3;

        $b22 = f1 cmpg $f6;

        if $b22 >= 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.android.camera.ui.Switch r0;
        android.view.MotionEvent r1;
        int i0, $i1, $i2, $i4, $i7, $i8;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, f17, f18, f19, f20;
        android.view.VelocityTracker $r2, $r4;
        boolean $z0, $z1, $z2;
        byte $b3, $b5, $b6;
        android.view.ViewParent $r3;

        r0 := @this: com.android.camera.ui.Switch;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<com.android.camera.ui.Switch: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r1);

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        tableswitch(i0)
        {
            case 0: goto label01;
            case 1: goto label09;
            case 2: goto label02;
            case 3: goto label09;
            default: goto label11;
        };

     label01:
        f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $z0 = virtualinvoke r0.<com.android.camera.ui.Switch: boolean isEnabled()>();

        if $z0 == 0 goto label11;

        $z2 = specialinvoke r0.<com.android.camera.ui.Switch: boolean hitThumb(float,float)>(f0, f1);

        if $z2 == 0 goto label11;

        r0.<com.android.camera.ui.Switch: int mTouchMode> = 1;

        r0.<com.android.camera.ui.Switch: float mTouchX> = f0;

        r0.<com.android.camera.ui.Switch: float mTouchY> = f1;

        goto label11;

     label02:
        $i1 = r0.<com.android.camera.ui.Switch: int mTouchMode>;

        tableswitch($i1)
        {
            case 0: goto label03;
            case 1: goto label04;
            case 2: goto label06;
            default: goto label08;
        };

     label03:
        goto label08;

     label04:
        f17 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        f18 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $f9 = r0.<com.android.camera.ui.Switch: float mTouchX>;

        $f11 = f17 - $f9;

        $f10 = staticinvoke <java.lang.Math: float abs(float)>($f11);

        $i4 = r0.<com.android.camera.ui.Switch: int mTouchSlop>;

        $f12 = (float) $i4;

        $b5 = $f10 cmpl $f12;

        if $b5 > 0 goto label05;

        $f13 = r0.<com.android.camera.ui.Switch: float mTouchY>;

        $f14 = f18 - $f13;

        $f16 = staticinvoke <java.lang.Math: float abs(float)>($f14);

        $i7 = r0.<com.android.camera.ui.Switch: int mTouchSlop>;

        $f15 = (float) $i7;

        $b6 = $f16 cmpl $f15;

        if $b6 <= 0 goto label08;

     label05:
        r0.<com.android.camera.ui.Switch: int mTouchMode> = 2;

        $r3 = virtualinvoke r0.<com.android.camera.ui.Switch: android.view.ViewParent getParent()>();

        interfaceinvoke $r3.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

        r0.<com.android.camera.ui.Switch: float mTouchX> = f17;

        r0.<com.android.camera.ui.Switch: float mTouchY> = f18;

        return 1;

     label06:
        f19 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $f3 = r0.<com.android.camera.ui.Switch: float mTouchX>;

        f20 = f19 - $f3;

        $f4 = r0.<com.android.camera.ui.Switch: float mThumbPosition>;

        $f5 = $f4 + f20;

        $i2 = specialinvoke r0.<com.android.camera.ui.Switch: int getThumbScrollRange()>();

        $f7 = (float) $i2;

        $f6 = staticinvoke <java.lang.Math: float min(float,float)>($f5, $f7);

        f2 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f6);

        $f8 = r0.<com.android.camera.ui.Switch: float mThumbPosition>;

        $b3 = f2 cmpl $f8;

        if $b3 == 0 goto label07;

        r0.<com.android.camera.ui.Switch: float mThumbPosition> = f2;

        r0.<com.android.camera.ui.Switch: float mTouchX> = f19;

        virtualinvoke r0.<com.android.camera.ui.Switch: void invalidate()>();

     label07:
        return 1;

     label08:
        goto label11;

     label09:
        $i8 = r0.<com.android.camera.ui.Switch: int mTouchMode>;

        if $i8 != 2 goto label10;

        specialinvoke r0.<com.android.camera.ui.Switch: void stopDrag(android.view.MotionEvent)>(r1);

        return 1;

     label10:
        r0.<com.android.camera.ui.Switch: int mTouchMode> = 0;

        $r4 = r0.<com.android.camera.ui.Switch: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r4.<android.view.VelocityTracker: void clear()>();

     label11:
        $z1 = specialinvoke r0.<android.widget.CompoundButton: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        return $z1;
    }

    private void cancelSuperTouch(android.view.MotionEvent)
    {
        com.android.camera.ui.Switch r0;
        android.view.MotionEvent r1, r2;

        r0 := @this: com.android.camera.ui.Switch;

        r1 := @parameter0: android.view.MotionEvent;

        r2 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>(r1);

        virtualinvoke r2.<android.view.MotionEvent: void setAction(int)>(3);

        specialinvoke r0.<android.widget.CompoundButton: boolean onTouchEvent(android.view.MotionEvent)>(r2);

        virtualinvoke r2.<android.view.MotionEvent: void recycle()>();

        return;
    }

    private void stopDrag(android.view.MotionEvent)
    {
        com.android.camera.ui.Switch r0;
        android.view.MotionEvent r1;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        float f0, $f1, $f2;
        int $i0, $i1;
        android.view.VelocityTracker $r2, $r3;
        byte $b2, $b3;

        r0 := @this: com.android.camera.ui.Switch;

        r1 := @parameter0: android.view.MotionEvent;

        r0.<com.android.camera.ui.Switch: int mTouchMode> = 0;

        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        if $i0 != 1 goto label1;

        $z3 = virtualinvoke r0.<com.android.camera.ui.Switch: boolean isEnabled()>();

        if $z3 == 0 goto label1;

        $z5 = 1;

        goto label2;

     label1:
        $z5 = 0;

     label2:
        z0 = $z5;

        specialinvoke r0.<com.android.camera.ui.Switch: void cancelSuperTouch(android.view.MotionEvent)>(r1);

        if z0 == 0 goto label7;

        $r2 = r0.<com.android.camera.ui.Switch: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2.<android.view.VelocityTracker: void computeCurrentVelocity(int)>(1000);

        $r3 = r0.<com.android.camera.ui.Switch: android.view.VelocityTracker mVelocityTracker>;

        f0 = virtualinvoke $r3.<android.view.VelocityTracker: float getXVelocity()>();

        $f1 = staticinvoke <java.lang.Math: float abs(float)>(f0);

        $i1 = r0.<com.android.camera.ui.Switch: int mMinFlingVelocity>;

        $f2 = (float) $i1;

        $b2 = $f1 cmpl $f2;

        if $b2 <= 0 goto label5;

        $b3 = f0 cmpl 0.0F;

        if $b3 <= 0 goto label3;

        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        z1 = $z4;

        goto label6;

     label5:
        z1 = specialinvoke r0.<com.android.camera.ui.Switch: boolean getTargetCheckedState()>();

     label6:
        specialinvoke r0.<com.android.camera.ui.Switch: void animateThumbToCheckedState(boolean)>(z1);

        goto label8;

     label7:
        $z2 = virtualinvoke r0.<com.android.camera.ui.Switch: boolean isChecked()>();

        specialinvoke r0.<com.android.camera.ui.Switch: void animateThumbToCheckedState(boolean)>($z2);

     label8:
        return;
    }

    private void animateThumbToCheckedState(boolean)
    {
        com.android.camera.ui.Switch r0;
        boolean z0;

        r0 := @this: com.android.camera.ui.Switch;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.android.camera.ui.Switch: void setChecked(boolean)>(z0);

        return;
    }

    private boolean getTargetCheckedState()
    {
        com.android.camera.ui.Switch r0;
        float $f0, $f1;
        int $i0, $i1;
        byte $b2;
        boolean $z0;

        r0 := @this: com.android.camera.ui.Switch;

        $f0 = r0.<com.android.camera.ui.Switch: float mThumbPosition>;

        $i0 = specialinvoke r0.<com.android.camera.ui.Switch: int getThumbScrollRange()>();

        $i1 = $i0 / 2;

        $f1 = (float) $i1;

        $b2 = $f0 cmpl $f1;

        if $b2 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private void setThumbPosition(boolean)
    {
        com.android.camera.ui.Switch r0;
        boolean z0;
        int $i0;
        float $f0;

        r0 := @this: com.android.camera.ui.Switch;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $i0 = specialinvoke r0.<com.android.camera.ui.Switch: int getThumbScrollRange()>();

        $f0 = (float) $i0;

        goto label2;

     label1:
        $f0 = 0.0F;

     label2:
        r0.<com.android.camera.ui.Switch: float mThumbPosition> = $f0;

        return;
    }

    public void setChecked(boolean)
    {
        com.android.camera.ui.Switch r0;
        boolean z0;

        r0 := @this: com.android.camera.ui.Switch;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.widget.CompoundButton: void setChecked(boolean)>(z0);

        specialinvoke r0.<com.android.camera.ui.Switch: void setThumbPosition(boolean)>(z0);

        virtualinvoke r0.<com.android.camera.ui.Switch: void invalidate()>();

        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        com.android.camera.ui.Switch r0;
        boolean z0, $z3;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, i25;

        r0 := @this: com.android.camera.ui.Switch;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        specialinvoke r0.<android.widget.CompoundButton: void onLayout(boolean,int,int,int,int)>(z0, i0, i1, i2, i3);

        $z3 = virtualinvoke r0.<com.android.camera.ui.Switch: boolean isChecked()>();

        specialinvoke r0.<com.android.camera.ui.Switch: void setThumbPosition(boolean)>($z3);

        $i6 = virtualinvoke r0.<com.android.camera.ui.Switch: int getWidth()>();

        $i7 = virtualinvoke r0.<com.android.camera.ui.Switch: int getPaddingRight()>();

        i4 = $i6 - $i7;

        $i8 = r0.<com.android.camera.ui.Switch: int mSwitchWidth>;

        i5 = i4 - $i8;

        $i9 = virtualinvoke r0.<com.android.camera.ui.Switch: int getGravity()>();

        $i10 = $i9 & 112;

        lookupswitch($i10)
        {
            case 16: goto label2;
            case 48: goto label1;
            case 80: goto label3;
            default: goto label1;
        };

     label1:
        i24 = virtualinvoke r0.<com.android.camera.ui.Switch: int getPaddingTop()>();

        $i23 = r0.<com.android.camera.ui.Switch: int mSwitchHeight>;

        i25 = i24 + $i23;

        goto label4;

     label2:
        $i13 = virtualinvoke r0.<com.android.camera.ui.Switch: int getPaddingTop()>();

        $i16 = virtualinvoke r0.<com.android.camera.ui.Switch: int getHeight()>();

        $i15 = $i13 + $i16;

        $i18 = virtualinvoke r0.<com.android.camera.ui.Switch: int getPaddingBottom()>();

        $i17 = $i15 - $i18;

        $i22 = $i17 / 2;

        $i20 = r0.<com.android.camera.ui.Switch: int mSwitchHeight>;

        $i19 = $i20 / 2;

        i24 = $i22 - $i19;

        $i21 = r0.<com.android.camera.ui.Switch: int mSwitchHeight>;

        i25 = i24 + $i21;

        goto label4;

     label3:
        $i12 = virtualinvoke r0.<com.android.camera.ui.Switch: int getHeight()>();

        $i11 = virtualinvoke r0.<com.android.camera.ui.Switch: int getPaddingBottom()>();

        i25 = $i12 - $i11;

        $i14 = r0.<com.android.camera.ui.Switch: int mSwitchHeight>;

        i24 = i25 - $i14;

     label4:
        r0.<com.android.camera.ui.Switch: int mSwitchLeft> = i5;

        r0.<com.android.camera.ui.Switch: int mSwitchTop> = i24;

        r0.<com.android.camera.ui.Switch: int mSwitchBottom> = i25;

        r0.<com.android.camera.ui.Switch: int mSwitchRight> = i4;

        return;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        com.android.camera.ui.Switch r0;
        android.graphics.Canvas r1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33;
        android.text.Layout r2, $r23;
        android.graphics.drawable.Drawable $r3, $r4, $r6, $r12, $r15, $r16;
        android.graphics.Rect $r5, $r7, $r8, $r9, $r10, $r11, $r13, $r14;
        float $f0, $f1, $f2, $f3;
        int[] $r17, $r20;
        boolean $z3;
        android.content.res.ColorStateList $r18, $r21, $r24;
        android.text.TextPaint $r19, $r22;

        r0 := @this: com.android.camera.ui.Switch;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.widget.CompoundButton: void onDraw(android.graphics.Canvas)>(r1);

        i0 = r0.<com.android.camera.ui.Switch: int mSwitchLeft>;

        i1 = r0.<com.android.camera.ui.Switch: int mSwitchTop>;

        i2 = r0.<com.android.camera.ui.Switch: int mSwitchRight>;

        i3 = r0.<com.android.camera.ui.Switch: int mSwitchBottom>;

        $r3 = r0.<com.android.camera.ui.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(i0, i1, i2, i3);

        $r4 = r0.<com.android.camera.ui.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $r6 = r0.<com.android.camera.ui.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        $r5 = r0.<com.android.camera.ui.Switch: android.graphics.Rect mTempRect>;

        virtualinvoke $r6.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r5);

        $r7 = r0.<com.android.camera.ui.Switch: android.graphics.Rect mTempRect>;

        $i12 = $r7.<android.graphics.Rect: int left>;

        i4 = i0 + $i12;

        $r8 = r0.<com.android.camera.ui.Switch: android.graphics.Rect mTempRect>;

        $i13 = $r8.<android.graphics.Rect: int top>;

        i5 = i1 + $i13;

        $r9 = r0.<com.android.camera.ui.Switch: android.graphics.Rect mTempRect>;

        $i14 = $r9.<android.graphics.Rect: int right>;

        i6 = i2 - $i14;

        $r10 = r0.<com.android.camera.ui.Switch: android.graphics.Rect mTempRect>;

        $i15 = $r10.<android.graphics.Rect: int bottom>;

        i7 = i3 - $i15;

        virtualinvoke r1.<android.graphics.Canvas: boolean clipRect(int,int,int,int)>(i4, i1, i6, i3);

        $r12 = r0.<com.android.camera.ui.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        $r11 = r0.<com.android.camera.ui.Switch: android.graphics.Rect mTempRect>;

        virtualinvoke $r12.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r11);

        $f0 = r0.<com.android.camera.ui.Switch: float mThumbPosition>;

        $f1 = $f0 + 0.5F;

        i8 = (int) $f1;

        $r13 = r0.<com.android.camera.ui.Switch: android.graphics.Rect mTempRect>;

        $i16 = $r13.<android.graphics.Rect: int left>;

        $i18 = i4 - $i16;

        i9 = $i18 + i8;

        $i17 = i4 + i8;

        $i19 = r0.<com.android.camera.ui.Switch: int mThumbWidth>;

        $i21 = $i17 + $i19;

        $r14 = r0.<com.android.camera.ui.Switch: android.graphics.Rect mTempRect>;

        $i20 = $r14.<android.graphics.Rect: int right>;

        i10 = $i21 + $i20;

        $r15 = r0.<com.android.camera.ui.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        virtualinvoke $r15.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(i9, i1, i10, i3);

        $r16 = r0.<com.android.camera.ui.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        virtualinvoke $r16.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        $r18 = r0.<com.android.camera.ui.Switch: android.content.res.ColorStateList mTextColors>;

        if $r18 == null goto label1;

        $r22 = r0.<com.android.camera.ui.Switch: android.text.TextPaint mTextPaint>;

        $r21 = r0.<com.android.camera.ui.Switch: android.content.res.ColorStateList mTextColors>;

        $r20 = virtualinvoke r0.<com.android.camera.ui.Switch: int[] getDrawableState()>();

        $r24 = r0.<com.android.camera.ui.Switch: android.content.res.ColorStateList mTextColors>;

        $i32 = virtualinvoke $r24.<android.content.res.ColorStateList: int getDefaultColor()>();

        $i33 = virtualinvoke $r21.<android.content.res.ColorStateList: int getColorForState(int[],int)>($r20, $i32);

        virtualinvoke $r22.<android.text.TextPaint: void setColor(int)>($i33);

     label1:
        $r19 = r0.<com.android.camera.ui.Switch: android.text.TextPaint mTextPaint>;

        $r17 = virtualinvoke r0.<com.android.camera.ui.Switch: int[] getDrawableState()>();

        $r19.<android.text.TextPaint: int[] drawableState> = $r17;

        $z3 = specialinvoke r0.<com.android.camera.ui.Switch: boolean getTargetCheckedState()>();

        if $z3 == 0 goto label2;

        $r23 = r0.<com.android.camera.ui.Switch: android.text.Layout mOnLayout>;

        goto label3;

     label2:
        $r23 = r0.<com.android.camera.ui.Switch: android.text.Layout mOffLayout>;

     label3:
        r2 = $r23;

        $i25 = i9 + i10;

        $i24 = $i25 / 2;

        $i23 = virtualinvoke r2.<android.text.Layout: int getEllipsizedWidth()>();

        $i22 = $i23 / 2;

        $i28 = $i24 - $i22;

        $f2 = (float) $i28;

        $i27 = i5 + i7;

        $i26 = $i27 / 2;

        $i31 = virtualinvoke r2.<android.text.Layout: int getHeight()>();

        $i30 = $i31 / 2;

        $i29 = $i26 - $i30;

        $f3 = (float) $i29;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f2, $f3);

        virtualinvoke r2.<android.text.Layout: void draw(android.graphics.Canvas)>(r1);

        virtualinvoke r1.<android.graphics.Canvas: void restore()>();

        return;
    }

    public int getCompoundPaddingRight()
    {
        com.android.camera.ui.Switch r0;
        int i0, $i1, $i2, $i3;
        java.lang.CharSequence $r1;
        boolean $z0;

        r0 := @this: com.android.camera.ui.Switch;

        $i1 = specialinvoke r0.<android.widget.CompoundButton: int getCompoundPaddingRight()>();

        $i2 = r0.<com.android.camera.ui.Switch: int mSwitchWidth>;

        i0 = $i1 + $i2;

        $r1 = virtualinvoke r0.<com.android.camera.ui.Switch: java.lang.CharSequence getText()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r1);

        if $z0 != 0 goto label1;

        $i3 = r0.<com.android.camera.ui.Switch: int mSwitchPadding>;

        i0 = i0 + $i3;

     label1:
        return i0;
    }

    private int getThumbScrollRange()
    {
        com.android.camera.ui.Switch r0;
        android.graphics.drawable.Drawable $r1, $r3;
        android.graphics.Rect $r2, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: com.android.camera.ui.Switch;

        $r1 = r0.<com.android.camera.ui.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r3 = r0.<com.android.camera.ui.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        $r2 = r0.<com.android.camera.ui.Switch: android.graphics.Rect mTempRect>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r2);

        $i1 = r0.<com.android.camera.ui.Switch: int mSwitchWidth>;

        $i0 = r0.<com.android.camera.ui.Switch: int mThumbWidth>;

        $i3 = $i1 - $i0;

        $r4 = r0.<com.android.camera.ui.Switch: android.graphics.Rect mTempRect>;

        $i2 = $r4.<android.graphics.Rect: int left>;

        $i5 = $i3 - $i2;

        $r5 = r0.<com.android.camera.ui.Switch: android.graphics.Rect mTempRect>;

        $i4 = $r5.<android.graphics.Rect: int right>;

        $i6 = $i5 - $i4;

        return $i6;
    }

    protected int[] onCreateDrawableState(int)
    {
        com.android.camera.ui.Switch r0;
        int i0, $i1;
        int[] r1, $r2;
        boolean $z0;

        r0 := @this: com.android.camera.ui.Switch;

        i0 := @parameter0: int;

        $i1 = i0 + 1;

        r1 = specialinvoke r0.<android.widget.CompoundButton: int[] onCreateDrawableState(int)>($i1);

        $z0 = virtualinvoke r0.<com.android.camera.ui.Switch: boolean isChecked()>();

        if $z0 == 0 goto label1;

        $r2 = <com.android.camera.ui.Switch: int[] CHECKED_STATE_SET>;

        staticinvoke <com.android.camera.ui.Switch: int[] mergeDrawableStates(int[],int[])>(r1, $r2);

     label1:
        return r1;
    }

    protected void drawableStateChanged()
    {
        com.android.camera.ui.Switch r0;
        int[] r1;
        android.graphics.drawable.Drawable $r2, $r3, $r4, $r5;

        r0 := @this: com.android.camera.ui.Switch;

        specialinvoke r0.<android.widget.CompoundButton: void drawableStateChanged()>();

        r1 = virtualinvoke r0.<com.android.camera.ui.Switch: int[] getDrawableState()>();

        $r2 = r0.<com.android.camera.ui.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        if $r2 == null goto label1;

        $r5 = r0.<com.android.camera.ui.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        virtualinvoke $r5.<android.graphics.drawable.Drawable: boolean setState(int[])>(r1);

     label1:
        $r3 = r0.<com.android.camera.ui.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        if $r3 == null goto label2;

        $r4 = r0.<com.android.camera.ui.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        virtualinvoke $r4.<android.graphics.drawable.Drawable: boolean setState(int[])>(r1);

     label2:
        virtualinvoke r0.<com.android.camera.ui.Switch: void invalidate()>();

        return;
    }

    protected boolean verifyDrawable(android.graphics.drawable.Drawable)
    {
        com.android.camera.ui.Switch r0;
        android.graphics.drawable.Drawable r1, $r2, $r3;
        boolean $z0, $z1;

        r0 := @this: com.android.camera.ui.Switch;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $z0 = specialinvoke r0.<android.widget.CompoundButton: boolean verifyDrawable(android.graphics.drawable.Drawable)>(r1);

        if $z0 != 0 goto label1;

        $r2 = r0.<com.android.camera.ui.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        if r1 == $r2 goto label1;

        $r3 = r0.<com.android.camera.ui.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        if r1 != $r3 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public void jumpDrawablesToCurrentState()
    {
        com.android.camera.ui.Switch r0;
        android.graphics.drawable.Drawable $r1, $r2;

        r0 := @this: com.android.camera.ui.Switch;

        specialinvoke r0.<android.widget.CompoundButton: void jumpDrawablesToCurrentState()>();

        $r1 = r0.<com.android.camera.ui.Switch: android.graphics.drawable.Drawable mThumbDrawable>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

        $r2 = r0.<com.android.camera.ui.Switch: android.graphics.drawable.Drawable mTrackDrawable>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void jumpToCurrentState()>();

        return;
    }

    public void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        com.android.camera.ui.Switch r0;
        android.view.accessibility.AccessibilityEvent r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: com.android.camera.ui.Switch;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.widget.CompoundButton: void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        $r2 = class "com/android/camera/ui/Switch";

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r3);

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)
    {
        com.android.camera.ui.Switch r0;
        android.view.accessibility.AccessibilityNodeInfo r1;
        java.lang.CharSequence r2, r3, $r11;
        java.lang.StringBuilder r4, $r7, $r8, $r9;
        java.lang.Class $r5;
        java.lang.String $r6;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.camera.ui.Switch;

        r1 := @parameter0: android.view.accessibility.AccessibilityNodeInfo;

        specialinvoke r0.<android.widget.CompoundButton: void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo)>(r1);

        $r5 = class "com/android/camera/ui/Switch";

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setClassName(java.lang.CharSequence)>($r6);

        $z0 = virtualinvoke r0.<com.android.camera.ui.Switch: boolean isChecked()>();

        if $z0 == 0 goto label1;

        $r11 = r0.<com.android.camera.ui.Switch: java.lang.CharSequence mTextOn>;

        goto label2;

     label1:
        $r11 = r0.<com.android.camera.ui.Switch: java.lang.CharSequence mTextOff>;

     label2:
        r2 = $r11;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z1 != 0 goto label4;

        r3 = virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: java.lang.CharSequence getText()>();

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z2 == 0 goto label3;

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setText(java.lang.CharSequence)>(r2);

        goto label4;

     label3:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        r4 = $r7;

        $r8 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(r2);

        virtualinvoke r1.<android.view.accessibility.AccessibilityNodeInfo: void setText(java.lang.CharSequence)>(r4);

     label4:
        return;
    }

    static void <clinit>()
    {
        int[] $r0;

        <com.android.camera.ui.Switch: int TOUCH_MODE_DRAGGING> = 2;

        <com.android.camera.ui.Switch: int TOUCH_MODE_DOWN> = 1;

        <com.android.camera.ui.Switch: int TOUCH_MODE_IDLE> = 0;

        $r0 = newarray (int)[1];

        $r0[0] = 16842912;

        <com.android.camera.ui.Switch: int[] CHECKED_STATE_SET> = $r0;

        return;
    }
}
