public class com.android.camera.CameraActivity extends android.app.Activity implements com.android.camera.app.AppController, com.android.ex.camera2.portability.CameraAgent$CameraOpenCallback, android.widget.ShareActionProvider$OnShareTargetSelectedListener, com.android.camera.app.OrientationManager$OnOrientationChangeListener
{
    private static final com.android.camera.debug.Log$Tag TAG;
    private static final java.lang.String INTENT_ACTION_STILL_IMAGE_CAMERA_SECURE;
    public static final java.lang.String ACTION_IMAGE_CAPTURE_SECURE;
    public static final java.lang.String SECURE_CAMERA_EXTRA;
    public static final java.lang.String MODULE_SCOPE_PREFIX;
    public static final java.lang.String CAMERA_SCOPE_PREFIX;
    private static final int MSG_CLEAR_SCREEN_ON_FLAG;
    private static final long SCREEN_DELAY_MS;
    private static final int MAX_PEEK_BITMAP_PIXELS;
    private static final int FILMSTRIP_PRELOAD_AHEAD_ITEMS;
    private android.content.Context mAppContext;
    private boolean mResetToPreviewOnResume;
    private com.android.camera.data.LocalDataAdapter mDataAdapter;
    private com.android.camera.one.OneCameraManager mCameraManager;
    private com.android.camera.settings.SettingsManager mSettingsManager;
    private com.android.camera.ui.ModeListView mModeListView;
    private boolean mModeListVisible;
    private int mCurrentModeIndex;
    private com.android.camera.CameraModule mCurrentModule;
    private com.android.camera.app.ModuleManagerImpl mModuleManager;
    private android.widget.FrameLayout mAboveFilmstripControlLayout;
    private com.android.camera.filmstrip.FilmstripController mFilmstripController;
    private boolean mFilmstripVisible;
    private boolean mFilmstripCoversPreview;
    private int mResultCodeForTesting;
    private android.content.Intent mResultDataForTesting;
    private com.android.camera.OnScreenHint mStorageHint;
    private final java.lang.Object mStorageSpaceLock;
    private long mStorageSpaceBytes;
    private boolean mAutoRotateScreen;
    private boolean mSecureCamera;
    private int mLastRawOrientation;
    private com.android.camera.app.OrientationManagerImpl mOrientationManager;
    private com.android.camera.app.LocationManager mLocationManager;
    private com.android.camera.ButtonManager mButtonManager;
    private android.os.Handler mMainHandler;
    private com.android.camera.util.PhotoSphereHelper$PanoramaViewHelper mPanoramaViewHelper;
    private android.app.ActionBar mActionBar;
    private android.view.ViewGroup mUndoDeletionBar;
    private boolean mIsUndoingDeletion;
    private boolean mIsActivityRunning;
    private final android.net.Uri[] mNfcPushUris;
    private com.android.camera.data.LocalMediaObserver mLocalImagesObserver;
    private com.android.camera.data.LocalMediaObserver mLocalVideosObserver;
    private boolean mPendingDeletion;
    private com.android.camera.app.CameraController mCameraController;
    private boolean mPaused;
    private com.android.camera.app.CameraAppUI mCameraAppUI;
    private com.android.camera.CameraActivity$PeekAnimationHandler mPeekAnimationHandler;
    private android.os.HandlerThread mPeekAnimationThread;
    private android.content.Intent mGalleryIntent;
    private long mOnCreateTime;
    private android.view.Menu mActionBarMenu;
    private com.android.camera.widget.Preloader mPreloader;
    private com.android.camera.SoundPlayer mSoundPlayer;
    private static final int LIGHTS_OUT_DELAY_MS;
    private final int BASE_SYS_UI_VISIBILITY;
    private final java.lang.Runnable mLightsOutRunnable;
    private com.android.camera.app.MemoryManager mMemoryManager;
    private com.android.camera.app.MotionManager mMotionManager;
    private final android.content.BroadcastReceiver mScreenOffReceiver;
    private final android.app.ActionBar$OnMenuVisibilityListener mOnMenuVisibilityListener;
    private boolean mKeepScreenOn;
    private int mLastLayoutOrientation;
    private final com.android.camera.app.CameraAppUI$BottomPanel$Listener mMyFilmstripBottomControlListener;
    private final com.android.camera.filmstrip.FilmstripContentPanel$Listener mFilmstripListener;
    private final com.android.camera.data.LocalDataAdapter$LocalDataListener mLocalDataListener;
    private final com.android.camera.session.CaptureSessionManager$SessionListener mSessionListener;
    private final com.android.ex.camera2.portability.CameraAgent$CameraExceptionCallback mCameraDefaultExceptionCallback;

    public void <init>()
    {
        com.android.camera.CameraActivity r0;
        java.lang.Object $r1;
        android.net.Uri[] $r2;
        com.android.camera.CameraActivity$1 $r3;
        com.android.camera.CameraActivity$2 $r4;
        com.android.camera.CameraActivity$3 $r5;
        com.android.camera.CameraActivity$4 $r6;
        com.android.camera.CameraActivity$5 $r7;
        com.android.camera.CameraActivity$6 $r8;
        com.android.camera.CameraActivity$8 $r9;
        com.android.camera.CameraActivity$12 $r10;

        r0 := @this: com.android.camera.CameraActivity;

        specialinvoke r0.<android.app.Activity: void <init>()>();

        r0.<com.android.camera.CameraActivity: boolean mResetToPreviewOnResume> = 1;

        r0.<com.android.camera.CameraActivity: boolean mModeListVisible> = 0;

        r0.<com.android.camera.CameraActivity: boolean mFilmstripCoversPreview> = 0;

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        r0.<com.android.camera.CameraActivity: java.lang.Object mStorageSpaceLock> = $r1;

        r0.<com.android.camera.CameraActivity: long mStorageSpaceBytes> = 50000000L;

        r0.<com.android.camera.CameraActivity: boolean mIsUndoingDeletion> = 0;

        r0.<com.android.camera.CameraActivity: boolean mIsActivityRunning> = 0;

        $r2 = newarray (android.net.Uri)[1];

        r0.<com.android.camera.CameraActivity: android.net.Uri[] mNfcPushUris> = $r2;

        r0.<com.android.camera.CameraActivity: boolean mPendingDeletion> = 0;

        r0.<com.android.camera.CameraActivity: int BASE_SYS_UI_VISIBILITY> = 1280;

        $r3 = new com.android.camera.CameraActivity$1;

        specialinvoke $r3.<com.android.camera.CameraActivity$1: void <init>(com.android.camera.CameraActivity)>(r0);

        r0.<com.android.camera.CameraActivity: java.lang.Runnable mLightsOutRunnable> = $r3;

        $r4 = new com.android.camera.CameraActivity$2;

        specialinvoke $r4.<com.android.camera.CameraActivity$2: void <init>(com.android.camera.CameraActivity)>(r0);

        r0.<com.android.camera.CameraActivity: android.content.BroadcastReceiver mScreenOffReceiver> = $r4;

        $r5 = new com.android.camera.CameraActivity$3;

        specialinvoke $r5.<com.android.camera.CameraActivity$3: void <init>(com.android.camera.CameraActivity)>(r0);

        r0.<com.android.camera.CameraActivity: android.app.ActionBar$OnMenuVisibilityListener mOnMenuVisibilityListener> = $r5;

        $r6 = new com.android.camera.CameraActivity$4;

        specialinvoke $r6.<com.android.camera.CameraActivity$4: void <init>(com.android.camera.CameraActivity)>(r0);

        r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI$BottomPanel$Listener mMyFilmstripBottomControlListener> = $r6;

        $r7 = new com.android.camera.CameraActivity$5;

        specialinvoke $r7.<com.android.camera.CameraActivity$5: void <init>(com.android.camera.CameraActivity)>(r0);

        r0.<com.android.camera.CameraActivity: com.android.camera.filmstrip.FilmstripContentPanel$Listener mFilmstripListener> = $r7;

        $r8 = new com.android.camera.CameraActivity$6;

        specialinvoke $r8.<com.android.camera.CameraActivity$6: void <init>(com.android.camera.CameraActivity)>(r0);

        r0.<com.android.camera.CameraActivity: com.android.camera.data.LocalDataAdapter$LocalDataListener mLocalDataListener> = $r8;

        $r9 = new com.android.camera.CameraActivity$8;

        specialinvoke $r9.<com.android.camera.CameraActivity$8: void <init>(com.android.camera.CameraActivity)>(r0);

        r0.<com.android.camera.CameraActivity: com.android.camera.session.CaptureSessionManager$SessionListener mSessionListener> = $r9;

        $r10 = new com.android.camera.CameraActivity$12;

        specialinvoke $r10.<com.android.camera.CameraActivity$12: void <init>(com.android.camera.CameraActivity)>(r0);

        r0.<com.android.camera.CameraActivity: com.android.ex.camera2.portability.CameraAgent$CameraExceptionCallback mCameraDefaultExceptionCallback> = $r10;

        return;
    }

    public com.android.camera.app.CameraAppUI getCameraAppUI()
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.app.CameraAppUI $r1;

        r0 := @this: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        return $r1;
    }

    public com.android.camera.app.ModuleManager getModuleManager()
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.app.ModuleManagerImpl $r1;

        r0 := @this: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.app.ModuleManagerImpl mModuleManager>;

        return $r1;
    }

    public void onCameraOpened(com.android.ex.camera2.portability.CameraAgent$CameraProxy)
    {
        com.android.camera.CameraActivity r0;
        com.android.ex.camera2.portability.CameraAgent$CameraProxy r1;
        com.android.camera.hardware.HardwareSpecImpl r2, $r15;
        com.android.camera.debug.Log$Tag $r3, $r8, $r9, $r18;
        boolean $z0, $z1, $z2, $z3;
        com.android.camera.settings.SettingsManager $r4, $r16;
        int $i0;
        com.android.camera.app.ModuleManagerImpl $r5;
        com.android.camera.app.ModuleManager$ModuleAgent $r6;
        com.android.camera.CameraModule $r7, $r11;
        com.android.camera.app.CameraAppUI $r10;
        java.lang.IllegalStateException $r12;
        com.android.camera.app.CameraController $r13, $r19;
        com.android.camera.app.CameraProvider $r14;
        com.android.ex.camera2.portability.CameraCapabilities $r17;

        r0 := @this: com.android.camera.CameraActivity;

        r1 := @parameter0: com.android.ex.camera2.portability.CameraAgent$CameraProxy;

        $r3 = <com.android.camera.CameraActivity: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void v(com.android.camera.debug.Log$Tag,java.lang.String)>($r3, "onCameraOpened");

        $z0 = r0.<com.android.camera.CameraActivity: boolean mPaused>;

        if $z0 == 0 goto label1;

        $r18 = <com.android.camera.CameraActivity: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void v(com.android.camera.debug.Log$Tag,java.lang.String)>($r18, "received onCameraOpened but activity is paused, closing Camera");

        $r19 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraController mCameraController>;

        virtualinvoke $r19.<com.android.camera.app.CameraController: void closeCamera(boolean)>(0);

        return;

     label1:
        $r4 = r0.<com.android.camera.CameraActivity: com.android.camera.settings.SettingsManager mSettingsManager>;

        $z1 = virtualinvoke $r4.<com.android.camera.settings.SettingsManager: boolean isSet(java.lang.String,java.lang.String)>("default_scope", "pref_flash_supported_back_camera");

        if $z1 != 0 goto label2;

        $r15 = new com.android.camera.hardware.HardwareSpecImpl;

        $r14 = virtualinvoke r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraProvider getCameraProvider()>();

        $r17 = virtualinvoke r1.<com.android.ex.camera2.portability.CameraAgent$CameraProxy: com.android.ex.camera2.portability.CameraCapabilities getCapabilities()>();

        specialinvoke $r15.<com.android.camera.hardware.HardwareSpecImpl: void <init>(com.android.camera.app.CameraProvider,com.android.ex.camera2.portability.CameraCapabilities)>($r14, $r17);

        r2 = $r15;

        $r16 = r0.<com.android.camera.CameraActivity: com.android.camera.settings.SettingsManager mSettingsManager>;

        $z3 = interfaceinvoke r2.<com.android.camera.hardware.HardwareSpec: boolean isFlashSupported()>();

        virtualinvoke $r16.<com.android.camera.settings.SettingsManager: void set(java.lang.String,java.lang.String,boolean)>("default_scope", "pref_flash_supported_back_camera", $z3);

     label2:
        $r5 = r0.<com.android.camera.CameraActivity: com.android.camera.app.ModuleManagerImpl mModuleManager>;

        $i0 = r0.<com.android.camera.CameraActivity: int mCurrentModeIndex>;

        $r6 = virtualinvoke $r5.<com.android.camera.app.ModuleManagerImpl: com.android.camera.app.ModuleManager$ModuleAgent getModuleAgent(int)>($i0);

        $z2 = interfaceinvoke $r6.<com.android.camera.app.ModuleManager$ModuleAgent: boolean requestAppForCamera()>();

        if $z2 != 0 goto label3;

        $r13 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraController mCameraController>;

        virtualinvoke $r13.<com.android.camera.app.CameraController: void closeCamera(boolean)>(0);

        $r12 = new java.lang.IllegalStateException;

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Camera opened but the module shouldn\'t be requesting");

        throw $r12;

     label3:
        $r7 = r0.<com.android.camera.CameraActivity: com.android.camera.CameraModule mCurrentModule>;

        if $r7 == null goto label4;

        specialinvoke r0.<com.android.camera.CameraActivity: void resetExposureCompensationToDefault(com.android.ex.camera2.portability.CameraAgent$CameraProxy)>(r1);

        $r11 = r0.<com.android.camera.CameraActivity: com.android.camera.CameraModule mCurrentModule>;

        virtualinvoke $r11.<com.android.camera.CameraModule: void onCameraAvailable(com.android.ex.camera2.portability.CameraAgent$CameraProxy)>(r1);

        goto label5;

     label4:
        $r8 = <com.android.camera.CameraActivity: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void v(com.android.camera.debug.Log$Tag,java.lang.String)>($r8, "mCurrentModule null, not invoking onCameraAvailable");

     label5:
        $r9 = <com.android.camera.CameraActivity: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void v(com.android.camera.debug.Log$Tag,java.lang.String)>($r9, "invoking onChangeCamera");

        $r10 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        virtualinvoke $r10.<com.android.camera.app.CameraAppUI: void onChangeCamera()>();

        return;
    }

    private void resetExposureCompensationToDefault(com.android.ex.camera2.portability.CameraAgent$CameraProxy)
    {
        com.android.camera.CameraActivity r0;
        com.android.ex.camera2.portability.CameraAgent$CameraProxy r1;
        com.android.ex.camera2.portability.CameraSettings r2;

        r0 := @this: com.android.camera.CameraActivity;

        r1 := @parameter0: com.android.ex.camera2.portability.CameraAgent$CameraProxy;

        r2 = virtualinvoke r1.<com.android.ex.camera2.portability.CameraAgent$CameraProxy: com.android.ex.camera2.portability.CameraSettings getSettings()>();

        virtualinvoke r2.<com.android.ex.camera2.portability.CameraSettings: void setExposureCompensationIndex(int)>(0);

        virtualinvoke r1.<com.android.ex.camera2.portability.CameraAgent$CameraProxy: boolean applySettings(com.android.ex.camera2.portability.CameraSettings)>(r2);

        return;
    }

    public void onCameraDisabled(int)
    {
        com.android.camera.CameraActivity r0;
        int i0;
        com.android.camera.util.UsageStatistics $r1;
        java.lang.StringBuilder $r2, $r4, $r5;
        com.android.camera.debug.Log$Tag $r3;
        java.lang.String $r6;

        r0 := @this: com.android.camera.CameraActivity;

        i0 := @parameter0: int;

        $r1 = staticinvoke <com.android.camera.util.UsageStatistics: com.android.camera.util.UsageStatistics instance()>();

        virtualinvoke $r1.<com.android.camera.util.UsageStatistics: void cameraFailure(int,java.lang.String)>(10000, null);

        $r3 = <com.android.camera.CameraActivity: com.android.camera.debug.Log$Tag TAG>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Camera disabled: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void w(com.android.camera.debug.Log$Tag,java.lang.String)>($r3, $r6);

        staticinvoke <com.android.camera.util.CameraUtil: void showErrorAndFinish(android.app.Activity,int)>(r0, 2131230771);

        return;
    }

    public void onDeviceOpenFailure(int, java.lang.String)
    {
        com.android.camera.CameraActivity r0;
        int i0;
        java.lang.String r1, $r7;
        com.android.camera.util.UsageStatistics $r2;
        java.lang.StringBuilder $r3, $r5, $r6;
        com.android.camera.debug.Log$Tag $r4;

        r0 := @this: com.android.camera.CameraActivity;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.android.camera.util.UsageStatistics: com.android.camera.util.UsageStatistics instance()>();

        virtualinvoke $r2.<com.android.camera.util.UsageStatistics: void cameraFailure(int,java.lang.String)>(10000, r1);

        $r4 = <com.android.camera.CameraActivity: com.android.camera.debug.Log$Tag TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Camera open failure: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void w(com.android.camera.debug.Log$Tag,java.lang.String)>($r4, $r7);

        staticinvoke <com.android.camera.util.CameraUtil: void showErrorAndFinish(android.app.Activity,int)>(r0, 2131230770);

        return;
    }

    public void onDeviceOpenedAlready(int, java.lang.String)
    {
        com.android.camera.CameraActivity r0;
        int i0;
        java.lang.String r1, $r8;
        java.lang.StringBuilder $r2, $r4, $r5, $r6, $r7;
        com.android.camera.debug.Log$Tag $r3;

        r0 := @this: com.android.camera.CameraActivity;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r3 = <com.android.camera.CameraActivity: com.android.camera.debug.Log$Tag TAG>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Camera open already: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void w(com.android.camera.debug.Log$Tag,java.lang.String)>($r3, $r8);

        staticinvoke <com.android.camera.util.CameraUtil: void showErrorAndFinish(android.app.Activity,int)>(r0, 2131230770);

        return;
    }

    public void onReconnectionFailure(com.android.ex.camera2.portability.CameraAgent, java.lang.String)
    {
        com.android.camera.CameraActivity r0;
        com.android.ex.camera2.portability.CameraAgent r1;
        java.lang.String r2, $r8;
        com.android.camera.util.UsageStatistics $r3;
        java.lang.StringBuilder $r4, $r6, $r7;
        com.android.camera.debug.Log$Tag $r5;

        r0 := @this: com.android.camera.CameraActivity;

        r1 := @parameter0: com.android.ex.camera2.portability.CameraAgent;

        r2 := @parameter1: java.lang.String;

        $r3 = staticinvoke <com.android.camera.util.UsageStatistics: com.android.camera.util.UsageStatistics instance()>();

        virtualinvoke $r3.<com.android.camera.util.UsageStatistics: void cameraFailure(int,java.lang.String)>(10000, null);

        $r5 = <com.android.camera.CameraActivity: com.android.camera.debug.Log$Tag TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Camera reconnection failure:");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void w(com.android.camera.debug.Log$Tag,java.lang.String)>($r5, $r8);

        staticinvoke <com.android.camera.util.CameraUtil: void showErrorAndFinish(android.app.Activity,int)>(r0, 2131230770);

        return;
    }

    private java.lang.String fileNameFromDataID(int)
    {
        com.android.camera.CameraActivity r0;
        int i0;
        com.android.camera.data.LocalData r1;
        java.io.File r2, $r4;
        com.android.camera.data.LocalDataAdapter $r3;
        java.lang.String $r5, $r6;

        r0 := @this: com.android.camera.CameraActivity;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.camera.CameraActivity: com.android.camera.data.LocalDataAdapter mDataAdapter>;

        r1 = interfaceinvoke $r3.<com.android.camera.data.LocalDataAdapter: com.android.camera.data.LocalData getLocalData(int)>(i0);

        if r1 != null goto label1;

        return "";

     label1:
        $r4 = new java.io.File;

        $r5 = interfaceinvoke r1.<com.android.camera.data.LocalData: java.lang.String getPath()>();

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r5);

        r2 = $r4;

        $r6 = virtualinvoke r2.<java.io.File: java.lang.String getName()>();

        return $r6;
    }

    private float fileAgeFromDataID(int)
    {
        com.android.camera.CameraActivity r0;
        int i0;
        com.android.camera.data.LocalData r1;
        java.io.File r2, $r4;
        com.android.camera.data.LocalDataAdapter $r3;
        java.lang.String $r5;
        long $l1, $l2, $l3;
        float $f0, $f1;

        r0 := @this: com.android.camera.CameraActivity;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.camera.CameraActivity: com.android.camera.data.LocalDataAdapter mDataAdapter>;

        r1 = interfaceinvoke $r3.<com.android.camera.data.LocalDataAdapter: com.android.camera.data.LocalData getLocalData(int)>(i0);

        if r1 != null goto label1;

        return 0.0F;

     label1:
        $r4 = new java.io.File;

        $r5 = interfaceinvoke r1.<com.android.camera.data.LocalData: java.lang.String getPath()>();

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r5);

        r2 = $r4;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l2 = virtualinvoke r2.<java.io.File: long lastModified()>();

        $l3 = $l1 - $l2;

        $f0 = (float) $l3;

        $f1 = 0.001F * $f0;

        return $f1;
    }

    public void gotoGallery()
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.util.UsageStatistics $r1;
        java.lang.Integer $r2;
        com.android.camera.filmstrip.FilmstripController $r3;

        r0 := @this: com.android.camera.CameraActivity;

        $r1 = staticinvoke <com.android.camera.util.UsageStatistics: com.android.camera.util.UsageStatistics instance()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10000);

        virtualinvoke $r1.<com.android.camera.util.UsageStatistics: void changeScreen(int,java.lang.Integer)>(10000, $r2);

        $r3 = r0.<com.android.camera.CameraActivity: com.android.camera.filmstrip.FilmstripController mFilmstripController>;

        interfaceinvoke $r3.<com.android.camera.filmstrip.FilmstripController: boolean goToNextItem()>();

        return;
    }

    private void setFilmstripUiVisibility(boolean)
    {
        com.android.camera.CameraActivity r0;
        boolean z0, $z1;
        java.lang.Runnable $r1;
        com.android.camera.app.CameraAppUI $r2, $r6, $r8;
        com.android.camera.app.CameraAppUI$BottomPanel $r3;
        android.app.ActionBar $r4, $r5, $r7;

        r0 := @this: com.android.camera.CameraActivity;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.camera.CameraActivity: java.lang.Runnable mLightsOutRunnable>;

        interfaceinvoke $r1.<java.lang.Runnable: void run()>();

        $r2 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        $r3 = virtualinvoke $r2.<com.android.camera.app.CameraAppUI: com.android.camera.app.CameraAppUI$BottomPanel getFilmstripBottomControls()>();

        interfaceinvoke $r3.<com.android.camera.app.CameraAppUI$BottomPanel: void setVisible(boolean)>(z0);

        $r4 = r0.<com.android.camera.CameraActivity: android.app.ActionBar mActionBar>;

        $z1 = virtualinvoke $r4.<android.app.ActionBar: boolean isShowing()>();

        if z0 == $z1 goto label2;

        if z0 == 0 goto label1;

        $r7 = r0.<com.android.camera.CameraActivity: android.app.ActionBar mActionBar>;

        virtualinvoke $r7.<android.app.ActionBar: void show()>();

        $r8 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        virtualinvoke $r8.<com.android.camera.app.CameraAppUI: void showBottomControls()>();

        goto label2;

     label1:
        $r5 = r0.<com.android.camera.CameraActivity: android.app.ActionBar mActionBar>;

        virtualinvoke $r5.<android.app.ActionBar: void hide()>();

        $r6 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        virtualinvoke $r6.<com.android.camera.app.CameraAppUI: void hideBottomControls()>();

     label2:
        r0.<com.android.camera.CameraActivity: boolean mFilmstripCoversPreview> = z0;

        specialinvoke r0.<com.android.camera.CameraActivity: void updatePreviewVisibility()>();

        return;
    }

    private void hideSessionProgress()
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.app.CameraAppUI $r1;
        com.android.camera.app.CameraAppUI$BottomPanel $r2;

        r0 := @this: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        $r2 = virtualinvoke $r1.<com.android.camera.app.CameraAppUI: com.android.camera.app.CameraAppUI$BottomPanel getFilmstripBottomControls()>();

        interfaceinvoke $r2.<com.android.camera.app.CameraAppUI$BottomPanel: void hideProgress()>();

        return;
    }

    private void showSessionProgress(java.lang.CharSequence)
    {
        com.android.camera.CameraActivity r0;
        java.lang.CharSequence r1;
        com.android.camera.app.CameraAppUI$BottomPanel r2;
        com.android.camera.app.CameraAppUI $r3;

        r0 := @this: com.android.camera.CameraActivity;

        r1 := @parameter0: java.lang.CharSequence;

        $r3 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        r2 = virtualinvoke $r3.<com.android.camera.app.CameraAppUI: com.android.camera.app.CameraAppUI$BottomPanel getFilmstripBottomControls()>();

        interfaceinvoke r2.<com.android.camera.app.CameraAppUI$BottomPanel: void setProgressText(java.lang.CharSequence)>(r1);

        interfaceinvoke r2.<com.android.camera.app.CameraAppUI$BottomPanel: void hideControls()>();

        interfaceinvoke r2.<com.android.camera.app.CameraAppUI$BottomPanel: void hideProgressError()>();

        interfaceinvoke r2.<com.android.camera.app.CameraAppUI$BottomPanel: void showProgress()>();

        return;
    }

    private void showProcessError(java.lang.CharSequence)
    {
        com.android.camera.CameraActivity r0;
        java.lang.CharSequence r1;
        com.android.camera.app.CameraAppUI $r2;
        com.android.camera.app.CameraAppUI$BottomPanel $r3;

        r0 := @this: com.android.camera.CameraActivity;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        $r3 = virtualinvoke $r2.<com.android.camera.app.CameraAppUI: com.android.camera.app.CameraAppUI$BottomPanel getFilmstripBottomControls()>();

        interfaceinvoke $r3.<com.android.camera.app.CameraAppUI$BottomPanel: void showProgressError(java.lang.CharSequence)>(r1);

        return;
    }

    private void updateSessionProgress(int)
    {
        com.android.camera.CameraActivity r0;
        int i0;
        com.android.camera.app.CameraAppUI $r1;
        com.android.camera.app.CameraAppUI$BottomPanel $r2;

        r0 := @this: com.android.camera.CameraActivity;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        $r2 = virtualinvoke $r1.<com.android.camera.app.CameraAppUI: com.android.camera.app.CameraAppUI$BottomPanel getFilmstripBottomControls()>();

        interfaceinvoke $r2.<com.android.camera.app.CameraAppUI$BottomPanel: void setProgress(int)>(i0);

        return;
    }

    private void updateSessionProgressText(java.lang.CharSequence)
    {
        com.android.camera.CameraActivity r0;
        java.lang.CharSequence r1;
        com.android.camera.app.CameraAppUI $r2;
        com.android.camera.app.CameraAppUI$BottomPanel $r3;

        r0 := @this: com.android.camera.CameraActivity;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        $r3 = virtualinvoke $r2.<com.android.camera.app.CameraAppUI: com.android.camera.app.CameraAppUI$BottomPanel getFilmstripBottomControls()>();

        interfaceinvoke $r3.<com.android.camera.app.CameraAppUI$BottomPanel: void setProgressText(java.lang.CharSequence)>(r1);

        return;
    }

    private void setupNfcBeamPush()
    {
        com.android.camera.CameraActivity r0;
        android.nfc.NfcAdapter r1;
        android.content.Context $r2;
        boolean $z0;
        com.android.camera.CameraActivity$7 $r3;
        android.app.Activity[] $r4;

        r0 := @this: com.android.camera.CameraActivity;

        $r2 = r0.<com.android.camera.CameraActivity: android.content.Context mAppContext>;

        r1 = staticinvoke <android.nfc.NfcAdapter: android.nfc.NfcAdapter getDefaultAdapter(android.content.Context)>($r2);

        if r1 != null goto label1;

        return;

     label1:
        $z0 = <com.android.camera.util.ApiHelper: boolean HAS_SET_BEAM_PUSH_URIS>;

        if $z0 != 0 goto label2;

        $r4 = newarray (android.app.Activity)[0];

        virtualinvoke r1.<android.nfc.NfcAdapter: void setNdefPushMessage(android.nfc.NdefMessage,android.app.Activity,android.app.Activity[])>(null, r0, $r4);

        return;

     label2:
        virtualinvoke r1.<android.nfc.NfcAdapter: void setBeamPushUris(android.net.Uri[],android.app.Activity)>(null, r0);

        $r3 = new com.android.camera.CameraActivity$7;

        specialinvoke $r3.<com.android.camera.CameraActivity$7: void <init>(com.android.camera.CameraActivity)>(r0);

        virtualinvoke r1.<android.nfc.NfcAdapter: void setBeamPushUrisCallback(android.nfc.NfcAdapter$CreateBeamUrisCallback,android.app.Activity)>($r3, r0);

        return;
    }

    public boolean onShareTargetSelected(android.widget.ShareActionProvider, android.content.Intent)
    {
        com.android.camera.CameraActivity r0;
        android.widget.ShareActionProvider r1;
        android.content.Intent r2;
        int i0;
        com.android.camera.filmstrip.FilmstripController $r3;
        com.android.camera.util.UsageStatistics $r4;
        java.lang.String $r5;
        float $f0;

        r0 := @this: com.android.camera.CameraActivity;

        r1 := @parameter0: android.widget.ShareActionProvider;

        r2 := @parameter1: android.content.Intent;

        $r3 = r0.<com.android.camera.CameraActivity: com.android.camera.filmstrip.FilmstripController mFilmstripController>;

        i0 = interfaceinvoke $r3.<com.android.camera.filmstrip.FilmstripController: int getCurrentId()>();

        if i0 >= 0 goto label1;

        return 0;

     label1:
        $r4 = staticinvoke <com.android.camera.util.UsageStatistics: com.android.camera.util.UsageStatistics instance()>();

        $r5 = specialinvoke r0.<com.android.camera.CameraActivity: java.lang.String fileNameFromDataID(int)>(i0);

        $f0 = specialinvoke r0.<com.android.camera.CameraActivity: float fileAgeFromDataID(int)>(i0);

        virtualinvoke $r4.<com.android.camera.util.UsageStatistics: void mediaInteraction(java.lang.String,int,int,float)>($r5, 10000, 10000, $f0);

        return 1;
    }

    public android.content.Context getAndroidContext()
    {
        com.android.camera.CameraActivity r0;
        android.content.Context $r1;

        r0 := @this: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: android.content.Context mAppContext>;

        return $r1;
    }

    public void launchActivityByIntent(android.content.Intent)
    {
        com.android.camera.CameraActivity r0;
        android.content.Intent r1;

        r0 := @this: com.android.camera.CameraActivity;

        r1 := @parameter0: android.content.Intent;

        r0.<com.android.camera.CameraActivity: boolean mResetToPreviewOnResume> = 0;

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(524288);

        virtualinvoke r0.<com.android.camera.CameraActivity: void startActivity(android.content.Intent)>(r1);

        return;
    }

    public int getCurrentModuleIndex()
    {
        com.android.camera.CameraActivity r0;
        int $i0;

        r0 := @this: com.android.camera.CameraActivity;

        $i0 = r0.<com.android.camera.CameraActivity: int mCurrentModeIndex>;

        return $i0;
    }

    public int getCurrentCameraId()
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.app.CameraController $r1;
        int $i0;

        r0 := @this: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraController mCameraController>;

        $i0 = virtualinvoke $r1.<com.android.camera.app.CameraController: int getCurrentCameraId()>();

        return $i0;
    }

    public java.lang.String getModuleScope()
    {
        com.android.camera.CameraActivity r0;
        java.lang.StringBuilder $r1, $r2, $r5;
        com.android.camera.CameraModule $r3;
        java.lang.String $r4, $r6;

        r0 := @this: com.android.camera.CameraActivity;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_preferences_module_");

        $r3 = r0.<com.android.camera.CameraActivity: com.android.camera.CameraModule mCurrentModule>;

        $r4 = virtualinvoke $r3.<com.android.camera.CameraModule: java.lang.String getModuleStringIdentifier()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public java.lang.String getCameraScope()
    {
        com.android.camera.CameraActivity r0;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r4, $r6, $r8, $r9;
        java.lang.String $r3, $r5, $r10;
        com.android.camera.debug.Log$Tag $r7;

        r0 := @this: com.android.camera.CameraActivity;

        i0 = virtualinvoke r0.<com.android.camera.CameraActivity: int getCurrentCameraId()>();

        if i0 >= 0 goto label1;

        $r7 = <com.android.camera.CameraActivity: com.android.camera.debug.Log$Tag TAG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getting camera scope with no open camera, using id: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void w(com.android.camera.debug.Log$Tag,java.lang.String)>($r7, $r10);

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_preferences_camera_");

        $r3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public com.android.camera.module.ModuleController getCurrentModuleController()
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.CameraModule $r1;

        r0 := @this: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.CameraModule mCurrentModule>;

        return $r1;
    }

    public int getQuickSwitchToModuleId(int)
    {
        com.android.camera.CameraActivity r0;
        int i0, $i1;
        android.content.Context $r1;
        com.android.camera.settings.SettingsManager $r2;
        com.android.camera.app.ModuleManagerImpl $r3;

        r0 := @this: com.android.camera.CameraActivity;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.camera.CameraActivity: com.android.camera.app.ModuleManagerImpl mModuleManager>;

        $r2 = r0.<com.android.camera.CameraActivity: com.android.camera.settings.SettingsManager mSettingsManager>;

        $r1 = r0.<com.android.camera.CameraActivity: android.content.Context mAppContext>;

        $i1 = virtualinvoke $r3.<com.android.camera.app.ModuleManagerImpl: int getQuickSwitchToModuleId(int,com.android.camera.settings.SettingsManager,android.content.Context)>(i0, $r2, $r1);

        return $i1;
    }

    public android.graphics.SurfaceTexture getPreviewBuffer()
    {
        com.android.camera.CameraActivity r0;

        r0 := @this: com.android.camera.CameraActivity;

        return null;
    }

    public void onPreviewReadyToStart()
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.app.CameraAppUI $r1;

        r0 := @this: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        virtualinvoke $r1.<com.android.camera.app.CameraAppUI: void onPreviewReadyToStart()>();

        return;
    }

    public void onPreviewStarted()
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.app.CameraAppUI $r1;

        r0 := @this: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        virtualinvoke $r1.<com.android.camera.app.CameraAppUI: void onPreviewStarted()>();

        return;
    }

    public void addPreviewAreaSizeChangedListener(com.android.camera.ui.PreviewStatusListener$PreviewAreaChangedListener)
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.ui.PreviewStatusListener$PreviewAreaChangedListener r1;
        com.android.camera.app.CameraAppUI $r2;

        r0 := @this: com.android.camera.CameraActivity;

        r1 := @parameter0: com.android.camera.ui.PreviewStatusListener$PreviewAreaChangedListener;

        $r2 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        virtualinvoke $r2.<com.android.camera.app.CameraAppUI: void addPreviewAreaChangedListener(com.android.camera.ui.PreviewStatusListener$PreviewAreaChangedListener)>(r1);

        return;
    }

    public void removePreviewAreaSizeChangedListener(com.android.camera.ui.PreviewStatusListener$PreviewAreaChangedListener)
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.ui.PreviewStatusListener$PreviewAreaChangedListener r1;
        com.android.camera.app.CameraAppUI $r2;

        r0 := @this: com.android.camera.CameraActivity;

        r1 := @parameter0: com.android.camera.ui.PreviewStatusListener$PreviewAreaChangedListener;

        $r2 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        virtualinvoke $r2.<com.android.camera.app.CameraAppUI: void removePreviewAreaChangedListener(com.android.camera.ui.PreviewStatusListener$PreviewAreaChangedListener)>(r1);

        return;
    }

    public void setupOneShotPreviewListener()
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.CameraActivity$9 $r1;
        com.android.camera.app.CameraController $r2;
        android.os.Handler $r3;

        r0 := @this: com.android.camera.CameraActivity;

        $r2 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraController mCameraController>;

        $r3 = r0.<com.android.camera.CameraActivity: android.os.Handler mMainHandler>;

        $r1 = new com.android.camera.CameraActivity$9;

        specialinvoke $r1.<com.android.camera.CameraActivity$9: void <init>(com.android.camera.CameraActivity)>(r0);

        virtualinvoke $r2.<com.android.camera.app.CameraController: void setOneShotPreviewCallback(android.os.Handler,com.android.ex.camera2.portability.CameraAgent$CameraPreviewDataCallback)>($r3, $r1);

        return;
    }

    public void updatePreviewAspectRatio(float)
    {
        com.android.camera.CameraActivity r0;
        float f0;
        com.android.camera.app.CameraAppUI $r1;

        r0 := @this: com.android.camera.CameraActivity;

        f0 := @parameter0: float;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        virtualinvoke $r1.<com.android.camera.app.CameraAppUI: void updatePreviewAspectRatio(float)>(f0);

        return;
    }

    public void updatePreviewTransformFullscreen(android.graphics.Matrix, float)
    {
        com.android.camera.CameraActivity r0;
        android.graphics.Matrix r1;
        float f0;
        com.android.camera.app.CameraAppUI $r2;

        r0 := @this: com.android.camera.CameraActivity;

        r1 := @parameter0: android.graphics.Matrix;

        f0 := @parameter1: float;

        $r2 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        virtualinvoke $r2.<com.android.camera.app.CameraAppUI: void updatePreviewTransformFullscreen(android.graphics.Matrix,float)>(r1, f0);

        return;
    }

    public android.graphics.RectF getFullscreenRect()
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.app.CameraAppUI $r1;
        android.graphics.RectF $r2;

        r0 := @this: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        $r2 = virtualinvoke $r1.<com.android.camera.app.CameraAppUI: android.graphics.RectF getFullscreenRect()>();

        return $r2;
    }

    public void updatePreviewTransform(android.graphics.Matrix)
    {
        com.android.camera.CameraActivity r0;
        android.graphics.Matrix r1;
        com.android.camera.app.CameraAppUI $r2;

        r0 := @this: com.android.camera.CameraActivity;

        r1 := @parameter0: android.graphics.Matrix;

        $r2 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        virtualinvoke $r2.<com.android.camera.app.CameraAppUI: void updatePreviewTransform(android.graphics.Matrix)>(r1);

        return;
    }

    public void setPreviewStatusListener(com.android.camera.ui.PreviewStatusListener)
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.ui.PreviewStatusListener r1;
        com.android.camera.app.CameraAppUI $r2;

        r0 := @this: com.android.camera.CameraActivity;

        r1 := @parameter0: com.android.camera.ui.PreviewStatusListener;

        $r2 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        virtualinvoke $r2.<com.android.camera.app.CameraAppUI: void setPreviewStatusListener(com.android.camera.ui.PreviewStatusListener)>(r1);

        return;
    }

    public android.widget.FrameLayout getModuleLayoutRoot()
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.app.CameraAppUI $r1;
        android.widget.FrameLayout $r2;

        r0 := @this: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        $r2 = virtualinvoke $r1.<com.android.camera.app.CameraAppUI: android.widget.FrameLayout getModuleRootView()>();

        return $r2;
    }

    public void setShutterEventsListener(com.android.camera.app.AppController$ShutterEventsListener)
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.app.AppController$ShutterEventsListener r1;

        r0 := @this: com.android.camera.CameraActivity;

        r1 := @parameter0: com.android.camera.app.AppController$ShutterEventsListener;

        return;
    }

    public void setShutterEnabled(boolean)
    {
        com.android.camera.CameraActivity r0;
        boolean z0;
        com.android.camera.app.CameraAppUI $r1;

        r0 := @this: com.android.camera.CameraActivity;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        virtualinvoke $r1.<com.android.camera.app.CameraAppUI: void setShutterButtonEnabled(boolean)>(z0);

        return;
    }

    public boolean isShutterEnabled()
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.app.CameraAppUI $r1;
        boolean $z0;

        r0 := @this: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        $z0 = virtualinvoke $r1.<com.android.camera.app.CameraAppUI: boolean isShutterButtonEnabled()>();

        return $z0;
    }

    public void startPreCaptureAnimation(boolean)
    {
        com.android.camera.CameraActivity r0;
        boolean z0;
        com.android.camera.app.CameraAppUI $r1;

        r0 := @this: com.android.camera.CameraActivity;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        virtualinvoke $r1.<com.android.camera.app.CameraAppUI: void startPreCaptureAnimation(boolean)>(z0);

        return;
    }

    public void startPreCaptureAnimation()
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.app.CameraAppUI $r1;

        r0 := @this: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        virtualinvoke $r1.<com.android.camera.app.CameraAppUI: void startPreCaptureAnimation(boolean)>(0);

        return;
    }

    public void cancelPreCaptureAnimation()
    {
        com.android.camera.CameraActivity r0;

        r0 := @this: com.android.camera.CameraActivity;

        return;
    }

    public void startPostCaptureAnimation()
    {
        com.android.camera.CameraActivity r0;

        r0 := @this: com.android.camera.CameraActivity;

        return;
    }

    public void startPostCaptureAnimation(android.graphics.Bitmap)
    {
        com.android.camera.CameraActivity r0;
        android.graphics.Bitmap r1;

        r0 := @this: com.android.camera.CameraActivity;

        r1 := @parameter0: android.graphics.Bitmap;

        return;
    }

    public void cancelPostCaptureAnimation()
    {
        com.android.camera.CameraActivity r0;

        r0 := @this: com.android.camera.CameraActivity;

        return;
    }

    public com.android.camera.app.OrientationManager getOrientationManager()
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.app.OrientationManagerImpl $r1;

        r0 := @this: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.app.OrientationManagerImpl mOrientationManager>;

        return $r1;
    }

    public com.android.camera.app.LocationManager getLocationManager()
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.app.LocationManager $r1;

        r0 := @this: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.app.LocationManager mLocationManager>;

        return $r1;
    }

    public void lockOrientation()
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.app.OrientationManagerImpl $r1, $r2;

        r0 := @this: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.app.OrientationManagerImpl mOrientationManager>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.camera.CameraActivity: com.android.camera.app.OrientationManagerImpl mOrientationManager>;

        virtualinvoke $r2.<com.android.camera.app.OrientationManagerImpl: void lockOrientation()>();

     label1:
        return;
    }

    public void unlockOrientation()
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.app.OrientationManagerImpl $r1, $r2;

        r0 := @this: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.app.OrientationManagerImpl mOrientationManager>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.camera.CameraActivity: com.android.camera.app.OrientationManagerImpl mOrientationManager>;

        virtualinvoke $r2.<com.android.camera.app.OrientationManagerImpl: void unlockOrientation()>();

     label1:
        return;
    }

    private void startPeekAnimation(com.android.camera.data.LocalData, java.lang.String)
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.data.LocalData r1;
        java.lang.String r2;
        int i0;
        boolean $z0;
        com.android.camera.CameraActivity$PeekAnimationHandler $r3, $r5;
        com.android.camera.CameraActivity$10 $r4;

        r0 := @this: com.android.camera.CameraActivity;

        r1 := @parameter0: com.android.camera.data.LocalData;

        r2 := @parameter1: java.lang.String;

        $z0 = r0.<com.android.camera.CameraActivity: boolean mFilmstripVisible>;

        if $z0 != 0 goto label1;

        $r3 = r0.<com.android.camera.CameraActivity: com.android.camera.CameraActivity$PeekAnimationHandler mPeekAnimationHandler>;

        if $r3 != null goto label2;

     label1:
        return;

     label2:
        i0 = interfaceinvoke r1.<com.android.camera.data.LocalData: int getLocalDataType()>();

        if i0 == 3 goto label3;

        if i0 == 5 goto label3;

        if i0 == 4 goto label3;

        return;

     label3:
        $r5 = r0.<com.android.camera.CameraActivity: com.android.camera.CameraActivity$PeekAnimationHandler mPeekAnimationHandler>;

        $r4 = new com.android.camera.CameraActivity$10;

        specialinvoke $r4.<com.android.camera.CameraActivity$10: void <init>(com.android.camera.CameraActivity,java.lang.String)>(r0, r2);

        virtualinvoke $r5.<com.android.camera.CameraActivity$PeekAnimationHandler: void startDecodingJob(com.android.camera.data.LocalData,com.android.camera.util.Callback)>(r1, $r4);

        return;
    }

    public void notifyNewMedia(android.net.Uri)
    {
        com.android.camera.CameraActivity r0;
        android.net.Uri r1;
        android.content.ContentResolver r2, $r11, $r21;
        java.lang.String r3, $r10, $r19, $r25;
        boolean $z0, $z1;
        java.lang.StringBuilder $r4, $r6, $r7, $r8, $r9, $r16, $r17, $r20, $r23, $r24, $r27;
        com.android.camera.debug.Log$Tag $r5, $r18, $r26;
        android.content.Context $r12;
        com.android.camera.CameraActivity$11 $r13;
        java.util.concurrent.Executor $r14;
        com.android.camera.data.LocalData[] $r15;
        android.content.Intent $r22;
        com.android.camera.data.LocalData r28;

        r0 := @this: com.android.camera.CameraActivity;

        r1 := @parameter0: android.net.Uri;

        virtualinvoke r0.<com.android.camera.CameraActivity: void updateStorageSpaceAndHint(com.android.camera.CameraActivity$OnStorageUpdateDoneListener)>(null);

        r2 = virtualinvoke r0.<com.android.camera.CameraActivity: android.content.ContentResolver getContentResolver()>();

        r3 = virtualinvoke r2.<android.content.ContentResolver: java.lang.String getType(android.net.Uri)>(r1);

        $z0 = staticinvoke <com.android.camera.data.LocalDataUtil: boolean isMimeTypeVideo(java.lang.String)>(r3);

        if $z0 == 0 goto label1;

        $r22 = new android.content.Intent;

        specialinvoke $r22.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.hardware.action.NEW_VIDEO", r1);

        virtualinvoke r0.<com.android.camera.CameraActivity: void sendBroadcast(android.content.Intent)>($r22);

        $r21 = virtualinvoke r0.<com.android.camera.CameraActivity: android.content.ContentResolver getContentResolver()>();

        r28 = staticinvoke <com.android.camera.data.LocalMediaData$VideoData: com.android.camera.data.LocalData fromContentUri(android.content.ContentResolver,android.net.Uri)>($r21, r1);

        if r28 != null goto label3;

        $r26 = <com.android.camera.CameraActivity: com.android.camera.debug.Log$Tag TAG>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t find video data in content resolver:");

        $r24 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void e(com.android.camera.debug.Log$Tag,java.lang.String)>($r26, $r25);

        return;

     label1:
        $z1 = staticinvoke <com.android.camera.data.LocalDataUtil: boolean isMimeTypeImage(java.lang.String)>(r3);

        if $z1 == 0 goto label2;

        $r12 = r0.<com.android.camera.CameraActivity: android.content.Context mAppContext>;

        staticinvoke <com.android.camera.util.CameraUtil: void broadcastNewPicture(android.content.Context,android.net.Uri)>($r12, r1);

        $r11 = virtualinvoke r0.<com.android.camera.CameraActivity: android.content.ContentResolver getContentResolver()>();

        r28 = staticinvoke <com.android.camera.data.LocalMediaData$PhotoData: com.android.camera.data.LocalData fromContentUri(android.content.ContentResolver,android.net.Uri)>($r11, r1);

        if r28 != null goto label3;

        $r18 = <com.android.camera.CameraActivity: com.android.camera.debug.Log$Tag TAG>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t find photo data in content resolver:");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void e(com.android.camera.debug.Log$Tag,java.lang.String)>($r18, $r19);

        return;

     label2:
        $r5 = <com.android.camera.CameraActivity: com.android.camera.debug.Log$Tag TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown new media with MIME type:");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", uri:");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void w(com.android.camera.debug.Log$Tag,java.lang.String)>($r5, $r10);

        return;

     label3:
        $r13 = new com.android.camera.CameraActivity$11;

        specialinvoke $r13.<com.android.camera.CameraActivity$11: void <init>(com.android.camera.CameraActivity)>(r0);

        $r14 = <android.os.AsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR>;

        $r15 = newarray (com.android.camera.data.LocalData)[1];

        $r15[0] = r28;

        virtualinvoke $r13.<com.android.camera.CameraActivity$11: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>($r14, $r15);

        return;
    }

    public void enableKeepScreenOn(boolean)
    {
        com.android.camera.CameraActivity r0;
        boolean z0, $z1, $z2;
        android.os.Handler $r1;
        android.view.Window $r2;

        r0 := @this: com.android.camera.CameraActivity;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.camera.CameraActivity: boolean mPaused>;

        if $z1 == 0 goto label1;

        return;

     label1:
        r0.<com.android.camera.CameraActivity: boolean mKeepScreenOn> = z0;

        $z2 = r0.<com.android.camera.CameraActivity: boolean mKeepScreenOn>;

        if $z2 == 0 goto label2;

        $r1 = r0.<com.android.camera.CameraActivity: android.os.Handler mMainHandler>;

        virtualinvoke $r1.<android.os.Handler: void removeMessages(int)>(2);

        $r2 = virtualinvoke r0.<com.android.camera.CameraActivity: android.view.Window getWindow()>();

        virtualinvoke $r2.<android.view.Window: void addFlags(int)>(128);

        goto label3;

     label2:
        specialinvoke r0.<com.android.camera.CameraActivity: void keepScreenOnForAWhile()>();

     label3:
        return;
    }

    public com.android.camera.app.CameraProvider getCameraProvider()
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.app.CameraController $r1;

        r0 := @this: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraController mCameraController>;

        return $r1;
    }

    public com.android.camera.one.OneCameraManager getCameraManager()
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.one.OneCameraManager $r1;

        r0 := @this: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.one.OneCameraManager mCameraManager>;

        return $r1;
    }

    private void removeData(int)
    {
        com.android.camera.CameraActivity r0;
        int i0, $i1;
        com.android.camera.data.LocalDataAdapter $r1, $r2;
        boolean $z0;
        com.android.camera.app.CameraAppUI $r3;
        com.android.camera.filmstrip.FilmstripContentPanel $r4;

        r0 := @this: com.android.camera.CameraActivity;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.data.LocalDataAdapter mDataAdapter>;

        interfaceinvoke $r1.<com.android.camera.data.LocalDataAdapter: void removeData(int)>(i0);

        $r2 = r0.<com.android.camera.CameraActivity: com.android.camera.data.LocalDataAdapter mDataAdapter>;

        $i1 = interfaceinvoke $r2.<com.android.camera.data.LocalDataAdapter: int getTotalNumber()>();

        if $i1 <= 1 goto label1;

        virtualinvoke r0.<com.android.camera.CameraActivity: void showUndoDeletionBar()>();

        goto label2;

     label1:
        r0.<com.android.camera.CameraActivity: boolean mPendingDeletion> = 1;

        specialinvoke r0.<com.android.camera.CameraActivity: void performDeletion()>();

        $z0 = r0.<com.android.camera.CameraActivity: boolean mFilmstripVisible>;

        if $z0 == 0 goto label2;

        $r3 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        $r4 = virtualinvoke $r3.<com.android.camera.app.CameraAppUI: com.android.camera.filmstrip.FilmstripContentPanel getFilmstripContentPanel()>();

        interfaceinvoke $r4.<com.android.camera.filmstrip.FilmstripContentPanel: boolean animateHide()>();

     label2:
        return;
    }

    public boolean onOptionsItemSelected(android.view.MenuItem)
    {
        com.android.camera.CameraActivity r0;
        android.view.MenuItem r1;
        int $i0, $i1;
        com.android.camera.filmstrip.FilmstripController $r2;
        boolean $z0;

        r0 := @this: com.android.camera.CameraActivity;

        r1 := @parameter0: android.view.MenuItem;

        $i0 = interfaceinvoke r1.<android.view.MenuItem: int getItemId()>();

        lookupswitch($i0)
        {
            case 16908332: goto label1;
            case 2131624054: goto label2;
            case 2131624055: goto label3;
            default: goto label4;
        };

     label1:
        virtualinvoke r0.<com.android.camera.CameraActivity: void onBackPressed()>();

        return 1;

     label2:
        $r2 = r0.<com.android.camera.CameraActivity: com.android.camera.filmstrip.FilmstripController mFilmstripController>;

        $i1 = interfaceinvoke $r2.<com.android.camera.filmstrip.FilmstripController: int getCurrentId()>();

        specialinvoke r0.<com.android.camera.CameraActivity: void showDetailsDialog(int)>($i1);

        return 1;

     label3:
        r0.<com.android.camera.CameraActivity: boolean mResetToPreviewOnResume> = 0;

        staticinvoke <com.android.camera.util.GoogleHelpHelper: void launchGoogleHelp(android.app.Activity)>(r0);

        return 1;

     label4:
        $z0 = specialinvoke r0.<android.app.Activity: boolean onOptionsItemSelected(android.view.MenuItem)>(r1);

        return $z0;
    }

    private boolean isCaptureIntent()
    {
        com.android.camera.CameraActivity r0;
        java.lang.String $r1, $r3, $r4, $r6, $r7, $r9;
        android.content.Intent $r2, $r5, $r8;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.camera.CameraActivity;

        $r1 = "android.media.action.VIDEO_CAPTURE";

        $r2 = virtualinvoke r0.<com.android.camera.CameraActivity: android.content.Intent getIntent()>();

        $r3 = virtualinvoke $r2.<android.content.Intent: java.lang.String getAction()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r4 = "android.media.action.IMAGE_CAPTURE";

        $r5 = virtualinvoke r0.<com.android.camera.CameraActivity: android.content.Intent getIntent()>();

        $r6 = virtualinvoke $r5.<android.content.Intent: java.lang.String getAction()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 != 0 goto label1;

        $r7 = "android.media.action.IMAGE_CAPTURE_SECURE";

        $r8 = virtualinvoke r0.<com.android.camera.CameraActivity: android.content.Intent getIntent()>();

        $r9 = virtualinvoke $r8.<android.content.Intent: java.lang.String getAction()>();

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z2 == 0 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public void onCreate(android.os.Bundle)
    {
        com.android.camera.CameraActivity r0;
        android.os.Bundle r1;
        com.android.camera.settings.AppUpgrader r2, $r19;
        android.content.Intent r3;
        java.lang.String r4, $r47, $r90, $r125;
        android.view.Window r5, $r22;
        android.view.WindowManager$LayoutParams r6;
        android.content.IntentFilter r7, $r111;
        boolean $z0, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        long $l0;
        android.content.Context $r8, $r10, $r14, $r21, $r34, $r63, $r79, $r89;
        com.android.camera.SoundPlayer $r9;
        com.android.camera.one.OneCameraManager $r11;
        com.android.camera.app.ModuleManagerImpl $r12, $r15, $r40;
        android.content.ContentResolver $r13, $r103, $r106;
        com.android.camera.settings.SettingsManager $r16, $r18, $r20, $r71;
        com.android.camera.app.CameraServices $r17, $r59, $r100, $r114;
        android.app.ActionBar $r23, $r24, $r26, $r127;
        android.graphics.drawable.ColorDrawable $r25, $r126;
        android.app.ActionBar$OnMenuVisibilityListener $r27;
        com.android.camera.app.CameraController $r28, $r37;
        com.android.ex.camera2.portability.CameraAgentFactory$CameraApi $r29, $r33;
        com.android.camera.CameraActivity$MainHandler $r30;
        android.os.Looper $r31;
        com.android.ex.camera2.portability.CameraAgent $r32, $r38;
        android.os.Handler $r35, $r39, $r81;
        com.android.ex.camera2.portability.CameraAgent$CameraExceptionCallback $r36;
        com.android.camera.ui.ModeListView $r41, $r43, $r44;
        android.view.View $r42, $r49, $r51, $r54, $r83;
        com.android.camera.CameraActivity$13 $r45;
        java.util.List $r46;
        com.android.camera.ui.MainActivityLayout $r48;
        com.android.camera.app.CameraAppUI $r50, $r52, $r74, $r78, $r110;
        com.android.camera.app.CameraAppUI$BottomPanel$Listener $r53;
        com.android.camera.widget.FilmstripView $r55;
        com.android.camera.filmstrip.FilmstripController $r56, $r57, $r95, $r118;
        android.widget.FrameLayout $r58;
        com.android.camera.session.CaptureSessionManager $r60;
        com.android.camera.session.CaptureSessionManager$SessionListener $r61;
        com.android.camera.data.CameraDataAdapter $r62;
        com.android.camera.data.LocalDataAdapter$LocalDataListener $r64;
        com.android.camera.data.LocalDataAdapter $r65, $r72, $r75, $r86, $r96, $r97, $r108, $r116;
        android.content.res.Resources $r66;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        com.android.camera.util.PhotoSphereHelper$PanoramaViewHelper $r67, $r68;
        com.android.camera.filmstrip.FilmstripContentPanel$Listener $r69;
        com.android.camera.filmstrip.FilmstripContentPanel $r70;
        com.android.camera.widget.Preloader $r73;
        com.android.camera.app.OrientationManagerImpl $r76, $r82;
        com.android.camera.CameraModule $r77;
        com.android.camera.app.LocationManager $r80;
        com.android.camera.data.LocalDataViewType $r84, $r87;
        android.view.LayoutInflater $r85;
        com.android.camera.data.SimpleViewData $r88;
        com.android.camera.data.FixedLastDataAdapter $r91;
        java.lang.Integer $r92;
        com.android.camera.CameraActivity$15 $r93;
        com.android.camera.data.LocalMediaObserver $r94, $r102, $r105, $r107;
        android.graphics.drawable.Drawable $r98, $r99;
        android.net.Uri $r101, $r104;
        com.android.camera.CameraActivity$14 $r109;
        com.android.camera.CameraActivity$16 $r112;
        com.android.camera.app.MemoryManager $r113;
        java.util.concurrent.Executor $r115;
        com.android.camera.app.MotionManager $r117;
        com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor $r119;
        com.bumptech.glide.GlideBuilder $r120, $r128;
        com.bumptech.glide.Glide $r121;
        com.bumptech.glide.MemoryCategory $r122;
        android.content.BroadcastReceiver $r123;
        android.widget.ImageView r129;

        r0 := @this: com.android.camera.CameraActivity;

        r1 := @parameter0: android.os.Bundle;

        staticinvoke <android.util.CameraPerformanceTracker: void onEvent(int)>(0);

        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>(r1);

        $z0 = staticinvoke <com.bumptech.glide.Glide: boolean isSetup()>();

        if $z0 != 0 goto label01;

        $r128 = new com.bumptech.glide.GlideBuilder;

        specialinvoke $r128.<com.bumptech.glide.GlideBuilder: void <init>(android.content.Context)>(r0);

        $r119 = new com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor;

        specialinvoke $r119.<com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor: void <init>(int)>(1);

        $r120 = virtualinvoke $r128.<com.bumptech.glide.GlideBuilder: com.bumptech.glide.GlideBuilder setResizeService(java.util.concurrent.ExecutorService)>($r119);

        staticinvoke <com.bumptech.glide.Glide: void setup(com.bumptech.glide.GlideBuilder)>($r120);

        $r121 = staticinvoke <com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>(r0);

        $r122 = <com.bumptech.glide.MemoryCategory: com.bumptech.glide.MemoryCategory HIGH>;

        virtualinvoke $r121.<com.bumptech.glide.Glide: void setMemoryCategory(com.bumptech.glide.MemoryCategory)>($r122);

     label01:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.camera.CameraActivity: long mOnCreateTime> = $l0;

        $r8 = virtualinvoke r0.<com.android.camera.CameraActivity: android.content.Context getApplicationContext()>();

        r0.<com.android.camera.CameraActivity: android.content.Context mAppContext> = $r8;

        $r9 = new com.android.camera.SoundPlayer;

        $r10 = r0.<com.android.camera.CameraActivity: android.content.Context mAppContext>;

        specialinvoke $r9.<com.android.camera.SoundPlayer: void <init>(android.content.Context)>($r10);

        r0.<com.android.camera.CameraActivity: com.android.camera.SoundPlayer mSoundPlayer> = $r9;

        $r11 = staticinvoke <com.android.camera.one.OneCameraManager: com.android.camera.one.OneCameraManager get(com.android.camera.CameraActivity)>(r0);

        r0.<com.android.camera.CameraActivity: com.android.camera.one.OneCameraManager mCameraManager> = $r11;

        $r12 = new com.android.camera.app.ModuleManagerImpl;

        specialinvoke $r12.<com.android.camera.app.ModuleManagerImpl: void <init>()>();

        r0.<com.android.camera.CameraActivity: com.android.camera.app.ModuleManagerImpl mModuleManager> = $r12;

        $r13 = virtualinvoke r0.<com.android.camera.CameraActivity: android.content.ContentResolver getContentResolver()>();

        staticinvoke <com.android.camera.util.GcamHelper: void init(android.content.ContentResolver)>($r13);

        $r14 = r0.<com.android.camera.CameraActivity: android.content.Context mAppContext>;

        $r15 = r0.<com.android.camera.CameraActivity: com.android.camera.app.ModuleManagerImpl mModuleManager>;

        staticinvoke <com.android.camera.module.ModulesInfo: void setupModules(android.content.Context,com.android.camera.app.ModuleManager)>($r14, $r15);

        $r17 = virtualinvoke r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraServices getServices()>();

        $r16 = interfaceinvoke $r17.<com.android.camera.app.CameraServices: com.android.camera.settings.SettingsManager getSettingsManager()>();

        r0.<com.android.camera.CameraActivity: com.android.camera.settings.SettingsManager mSettingsManager> = $r16;

        $r19 = new com.android.camera.settings.AppUpgrader;

        specialinvoke $r19.<com.android.camera.settings.AppUpgrader: void <init>(com.android.camera.app.AppController)>(r0);

        r2 = $r19;

        $r18 = r0.<com.android.camera.CameraActivity: com.android.camera.settings.SettingsManager mSettingsManager>;

        virtualinvoke r2.<com.android.camera.settings.AppUpgrader: void upgrade(com.android.camera.settings.SettingsManager)>($r18);

        $r20 = r0.<com.android.camera.CameraActivity: com.android.camera.settings.SettingsManager mSettingsManager>;

        $r21 = r0.<com.android.camera.CameraActivity: android.content.Context mAppContext>;

        staticinvoke <com.android.camera.settings.Keys: void setDefaults(com.android.camera.settings.SettingsManager,android.content.Context)>($r20, $r21);

        $r22 = virtualinvoke r0.<com.android.camera.CameraActivity: android.view.Window getWindow()>();

        virtualinvoke $r22.<android.view.Window: boolean requestFeature(int)>(8);

        virtualinvoke r0.<com.android.camera.CameraActivity: void setContentView(int)>(2130968576);

        $r23 = virtualinvoke r0.<com.android.camera.CameraActivity: android.app.ActionBar getActionBar()>();

        r0.<com.android.camera.CameraActivity: android.app.ActionBar mActionBar> = $r23;

        $z2 = staticinvoke <com.android.camera.util.ApiHelper: boolean isLOrHigher()>();

        if $z2 == 0 goto label02;

        $r127 = r0.<com.android.camera.CameraActivity: android.app.ActionBar mActionBar>;

        $r126 = new android.graphics.drawable.ColorDrawable;

        specialinvoke $r126.<android.graphics.drawable.ColorDrawable: void <init>(int)>(0);

        virtualinvoke $r127.<android.app.ActionBar: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r126);

        goto label03;

     label02:
        $r24 = r0.<com.android.camera.CameraActivity: android.app.ActionBar mActionBar>;

        $r25 = new android.graphics.drawable.ColorDrawable;

        specialinvoke $r25.<android.graphics.drawable.ColorDrawable: void <init>(int)>(-2147483648);

        virtualinvoke $r24.<android.app.ActionBar: void setBackgroundDrawable(android.graphics.drawable.Drawable)>($r25);

     label03:
        $r26 = r0.<com.android.camera.CameraActivity: android.app.ActionBar mActionBar>;

        $r27 = r0.<com.android.camera.CameraActivity: android.app.ActionBar$OnMenuVisibilityListener mOnMenuVisibilityListener>;

        virtualinvoke $r26.<android.app.ActionBar: void addOnMenuVisibilityListener(android.app.ActionBar$OnMenuVisibilityListener)>($r27);

        $r30 = new com.android.camera.CameraActivity$MainHandler;

        $r31 = virtualinvoke r0.<com.android.camera.CameraActivity: android.os.Looper getMainLooper()>();

        specialinvoke $r30.<com.android.camera.CameraActivity$MainHandler: void <init>(com.android.camera.CameraActivity,android.os.Looper)>(r0, $r31);

        r0.<com.android.camera.CameraActivity: android.os.Handler mMainHandler> = $r30;

        $r28 = new com.android.camera.app.CameraController;

        $r34 = r0.<com.android.camera.CameraActivity: android.content.Context mAppContext>;

        $r35 = r0.<com.android.camera.CameraActivity: android.os.Handler mMainHandler>;

        $r29 = <com.android.ex.camera2.portability.CameraAgentFactory$CameraApi: com.android.ex.camera2.portability.CameraAgentFactory$CameraApi API_1>;

        $r32 = staticinvoke <com.android.ex.camera2.portability.CameraAgentFactory: com.android.ex.camera2.portability.CameraAgent getAndroidCameraAgent(android.content.Context,com.android.ex.camera2.portability.CameraAgentFactory$CameraApi)>(r0, $r29);

        $r33 = <com.android.ex.camera2.portability.CameraAgentFactory$CameraApi: com.android.ex.camera2.portability.CameraAgentFactory$CameraApi AUTO>;

        $r38 = staticinvoke <com.android.ex.camera2.portability.CameraAgentFactory: com.android.ex.camera2.portability.CameraAgent getAndroidCameraAgent(android.content.Context,com.android.ex.camera2.portability.CameraAgentFactory$CameraApi)>(r0, $r33);

        specialinvoke $r28.<com.android.camera.app.CameraController: void <init>(android.content.Context,com.android.ex.camera2.portability.CameraAgent$CameraOpenCallback,android.os.Handler,com.android.ex.camera2.portability.CameraAgent,com.android.ex.camera2.portability.CameraAgent)>($r34, r0, $r35, $r32, $r38);

        r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraController mCameraController> = $r28;

        $r37 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraController mCameraController>;

        $r36 = r0.<com.android.camera.CameraActivity: com.android.ex.camera2.portability.CameraAgent$CameraExceptionCallback mCameraDefaultExceptionCallback>;

        $r39 = r0.<com.android.camera.CameraActivity: android.os.Handler mMainHandler>;

        virtualinvoke $r37.<com.android.camera.app.CameraController: void setCameraDefaultExceptionCallback(com.android.ex.camera2.portability.CameraAgent$CameraExceptionCallback,android.os.Handler)>($r36, $r39);

        $r42 = virtualinvoke r0.<com.android.camera.CameraActivity: android.view.View findViewById(int)>(2131624002);

        $r43 = (com.android.camera.ui.ModeListView) $r42;

        r0.<com.android.camera.CameraActivity: com.android.camera.ui.ModeListView mModeListView> = $r43;

        $r41 = r0.<com.android.camera.CameraActivity: com.android.camera.ui.ModeListView mModeListView>;

        $r40 = r0.<com.android.camera.CameraActivity: com.android.camera.app.ModuleManagerImpl mModuleManager>;

        $r46 = virtualinvoke $r40.<com.android.camera.app.ModuleManagerImpl: java.util.List getSupportedModeIndexList()>();

        virtualinvoke $r41.<com.android.camera.ui.ModeListView: void init(java.util.List)>($r46);

        $z3 = <com.android.camera.util.ApiHelper: boolean HAS_ROTATION_ANIMATION>;

        if $z3 == 0 goto label04;

        specialinvoke r0.<com.android.camera.CameraActivity: void setRotationAnimation()>();

     label04:
        $r44 = r0.<com.android.camera.CameraActivity: com.android.camera.ui.ModeListView mModeListView>;

        $r45 = new com.android.camera.CameraActivity$13;

        specialinvoke $r45.<com.android.camera.CameraActivity$13: void <init>(com.android.camera.CameraActivity)>(r0);

        virtualinvoke $r44.<com.android.camera.ui.ModeListView: void setVisibilityChangedListener(com.android.camera.ui.ModeListView$ModeListVisibilityChangedListener)>($r45);

        r3 = virtualinvoke r0.<com.android.camera.CameraActivity: android.content.Intent getIntent()>();

        r4 = virtualinvoke r3.<android.content.Intent: java.lang.String getAction()>();

        $r47 = "android.media.action.STILL_IMAGE_CAMERA_SECURE";

        $z4 = virtualinvoke $r47.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z4 != 0 goto label05;

        $r125 = "android.media.action.IMAGE_CAPTURE_SECURE";

        $z12 = virtualinvoke $r125.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z12 == 0 goto label06;

     label05:
        r0.<com.android.camera.CameraActivity: boolean mSecureCamera> = 1;

        goto label07;

     label06:
        $z13 = virtualinvoke r3.<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>("secure_camera", 0);

        r0.<com.android.camera.CameraActivity: boolean mSecureCamera> = $z13;

     label07:
        $z5 = r0.<com.android.camera.CameraActivity: boolean mSecureCamera>;

        if $z5 == 0 goto label08;

        r5 = virtualinvoke r0.<com.android.camera.CameraActivity: android.view.Window getWindow()>();

        r6 = virtualinvoke r5.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        $i6 = r6.<android.view.WindowManager$LayoutParams: int flags>;

        $i7 = $i6 | 524288;

        r6.<android.view.WindowManager$LayoutParams: int flags> = $i7;

        virtualinvoke r5.<android.view.Window: void setAttributes(android.view.WindowManager$LayoutParams)>(r6);

        $r111 = new android.content.IntentFilter;

        specialinvoke $r111.<android.content.IntentFilter: void <init>(java.lang.String)>("android.intent.action.SCREEN_OFF");

        r7 = $r111;

        $r123 = r0.<com.android.camera.CameraActivity: android.content.BroadcastReceiver mScreenOffReceiver>;

        virtualinvoke r0.<com.android.camera.CameraActivity: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r123, r7);

     label08:
        $r50 = new com.android.camera.app.CameraAppUI;

        $r49 = virtualinvoke r0.<com.android.camera.CameraActivity: android.view.View findViewById(int)>(2131623941);

        $r48 = (com.android.camera.ui.MainActivityLayout) $r49;

        $z6 = specialinvoke r0.<com.android.camera.CameraActivity: boolean isCaptureIntent()>();

        specialinvoke $r50.<com.android.camera.app.CameraAppUI: void <init>(com.android.camera.app.AppController,com.android.camera.ui.MainActivityLayout,boolean)>(r0, $r48, $z6);

        r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI> = $r50;

        $r52 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        $r53 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI$BottomPanel$Listener mMyFilmstripBottomControlListener>;

        virtualinvoke $r52.<com.android.camera.app.CameraAppUI: void setFilmstripBottomControlsListener(com.android.camera.app.CameraAppUI$BottomPanel$Listener)>($r53);

        $r51 = virtualinvoke r0.<com.android.camera.CameraActivity: android.view.View findViewById(int)>(2131623971);

        $r58 = (android.widget.FrameLayout) $r51;

        r0.<com.android.camera.CameraActivity: android.widget.FrameLayout mAboveFilmstripControlLayout> = $r58;

        $r59 = virtualinvoke r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraServices getServices()>();

        $r60 = interfaceinvoke $r59.<com.android.camera.app.CameraServices: com.android.camera.session.CaptureSessionManager getCaptureSessionManager()>();

        $r61 = r0.<com.android.camera.CameraActivity: com.android.camera.session.CaptureSessionManager$SessionListener mSessionListener>;

        interfaceinvoke $r60.<com.android.camera.session.CaptureSessionManager: void addSessionListener(com.android.camera.session.CaptureSessionManager$SessionListener)>($r61);

        $r54 = virtualinvoke r0.<com.android.camera.CameraActivity: android.view.View findViewById(int)>(2131623972);

        $r55 = (com.android.camera.widget.FilmstripView) $r54;

        $r56 = virtualinvoke $r55.<com.android.camera.widget.FilmstripView: com.android.camera.filmstrip.FilmstripController getController()>();

        r0.<com.android.camera.CameraActivity: com.android.camera.filmstrip.FilmstripController mFilmstripController> = $r56;

        $r57 = r0.<com.android.camera.CameraActivity: com.android.camera.filmstrip.FilmstripController mFilmstripController>;

        $r66 = virtualinvoke r0.<com.android.camera.CameraActivity: android.content.res.Resources getResources()>();

        $i1 = virtualinvoke $r66.<android.content.res.Resources: int getDimensionPixelSize(int)>(2131558496);

        interfaceinvoke $r57.<com.android.camera.filmstrip.FilmstripController: void setImageGap(int)>($i1);

        $r67 = new com.android.camera.util.PhotoSphereHelper$PanoramaViewHelper;

        specialinvoke $r67.<com.android.camera.util.PhotoSphereHelper$PanoramaViewHelper: void <init>(android.app.Activity)>(r0);

        r0.<com.android.camera.CameraActivity: com.android.camera.util.PhotoSphereHelper$PanoramaViewHelper mPanoramaViewHelper> = $r67;

        $r68 = r0.<com.android.camera.CameraActivity: com.android.camera.util.PhotoSphereHelper$PanoramaViewHelper mPanoramaViewHelper>;

        virtualinvoke $r68.<com.android.camera.util.PhotoSphereHelper$PanoramaViewHelper: void onCreate()>();

        $r62 = new com.android.camera.data.CameraDataAdapter;

        $r63 = r0.<com.android.camera.CameraActivity: android.content.Context mAppContext>;

        specialinvoke $r62.<com.android.camera.data.CameraDataAdapter: void <init>(android.content.Context,int)>($r63, 2131492873);

        r0.<com.android.camera.CameraActivity: com.android.camera.data.LocalDataAdapter mDataAdapter> = $r62;

        $r65 = r0.<com.android.camera.CameraActivity: com.android.camera.data.LocalDataAdapter mDataAdapter>;

        $r64 = r0.<com.android.camera.CameraActivity: com.android.camera.data.LocalDataAdapter$LocalDataListener mLocalDataListener>;

        interfaceinvoke $r65.<com.android.camera.data.LocalDataAdapter: void setLocalDataListener(com.android.camera.data.LocalDataAdapter$LocalDataListener)>($r64);

        $r73 = new com.android.camera.widget.Preloader;

        $r75 = r0.<com.android.camera.CameraActivity: com.android.camera.data.LocalDataAdapter mDataAdapter>;

        $r72 = r0.<com.android.camera.CameraActivity: com.android.camera.data.LocalDataAdapter mDataAdapter>;

        specialinvoke $r73.<com.android.camera.widget.Preloader: void <init>(int,com.android.camera.widget.Preloader$ItemSource,com.android.camera.widget.Preloader$ItemLoader)>(10, $r75, $r72);

        r0.<com.android.camera.CameraActivity: com.android.camera.widget.Preloader mPreloader> = $r73;

        $r74 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        $r70 = virtualinvoke $r74.<com.android.camera.app.CameraAppUI: com.android.camera.filmstrip.FilmstripContentPanel getFilmstripContentPanel()>();

        $r69 = r0.<com.android.camera.CameraActivity: com.android.camera.filmstrip.FilmstripContentPanel$Listener mFilmstripListener>;

        interfaceinvoke $r70.<com.android.camera.filmstrip.FilmstripContentPanel: void setFilmstripListener(com.android.camera.filmstrip.FilmstripContentPanel$Listener)>($r69);

        $r71 = r0.<com.android.camera.CameraActivity: com.android.camera.settings.SettingsManager mSettingsManager>;

        $z7 = virtualinvoke $r71.<com.android.camera.settings.SettingsManager: boolean getBoolean(java.lang.String,java.lang.String)>("default_scope", "pref_should_show_refocus_viewer_cling");

        if $z7 == 0 goto label09;

        $r110 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        virtualinvoke $r110.<com.android.camera.app.CameraAppUI: void setupClingForViewer(int)>(2);

     label09:
        $r80 = new com.android.camera.app.LocationManager;

        $r79 = r0.<com.android.camera.CameraActivity: android.content.Context mAppContext>;

        specialinvoke $r80.<com.android.camera.app.LocationManager: void <init>(android.content.Context)>($r79);

        r0.<com.android.camera.CameraActivity: com.android.camera.app.LocationManager mLocationManager> = $r80;

        $r82 = new com.android.camera.app.OrientationManagerImpl;

        specialinvoke $r82.<com.android.camera.app.OrientationManagerImpl: void <init>(android.app.Activity)>(r0);

        r0.<com.android.camera.CameraActivity: com.android.camera.app.OrientationManagerImpl mOrientationManager> = $r82;

        $r76 = r0.<com.android.camera.CameraActivity: com.android.camera.app.OrientationManagerImpl mOrientationManager>;

        $r81 = r0.<com.android.camera.CameraActivity: android.os.Handler mMainHandler>;

        virtualinvoke $r76.<com.android.camera.app.OrientationManagerImpl: void addOnOrientationChangeListener(android.os.Handler,com.android.camera.app.OrientationManager$OnOrientationChangeListener)>($r81, r0);

        $i2 = virtualinvoke r0.<com.android.camera.CameraActivity: int getModeIndex()>();

        specialinvoke r0.<com.android.camera.CameraActivity: void setModuleFromModeIndex(int)>($i2);

        $r78 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        virtualinvoke $r78.<com.android.camera.app.CameraAppUI: void prepareModuleUI()>();

        $r77 = r0.<com.android.camera.CameraActivity: com.android.camera.CameraModule mCurrentModule>;

        $z9 = virtualinvoke r0.<com.android.camera.CameraActivity: boolean isSecureCamera()>();

        $z10 = specialinvoke r0.<com.android.camera.CameraActivity: boolean isCaptureIntent()>();

        virtualinvoke $r77.<com.android.camera.CameraModule: void init(com.android.camera.CameraActivity,boolean,boolean)>(r0, $z9, $z10);

        $z8 = r0.<com.android.camera.CameraActivity: boolean mSecureCamera>;

        if $z8 != 0 goto label10;

        $r118 = r0.<com.android.camera.CameraActivity: com.android.camera.filmstrip.FilmstripController mFilmstripController>;

        $r116 = r0.<com.android.camera.CameraActivity: com.android.camera.data.LocalDataAdapter mDataAdapter>;

        interfaceinvoke $r118.<com.android.camera.filmstrip.FilmstripController: void setDataAdapter(com.android.camera.filmstrip.DataAdapter)>($r116);

        $z11 = specialinvoke r0.<com.android.camera.CameraActivity: boolean isCaptureIntent()>();

        if $z11 != 0 goto label11;

        $r108 = r0.<com.android.camera.CameraActivity: com.android.camera.data.LocalDataAdapter mDataAdapter>;

        $r109 = new com.android.camera.CameraActivity$14;

        specialinvoke $r109.<com.android.camera.CameraActivity$14: void <init>(com.android.camera.CameraActivity)>(r0);

        interfaceinvoke $r108.<com.android.camera.data.LocalDataAdapter: void requestLoad(com.android.camera.util.Callback)>($r109);

        goto label11;

     label10:
        $r85 = virtualinvoke r0.<com.android.camera.CameraActivity: android.view.LayoutInflater getLayoutInflater()>();

        $r83 = virtualinvoke $r85.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(2130968610, null);

        r129 = (android.widget.ImageView) $r83;

        $r84 = <com.android.camera.data.LocalDataViewType: com.android.camera.data.LocalDataViewType SECURE_ALBUM_PLACEHOLDER>;

        $i3 = virtualinvoke $r84.<com.android.camera.data.LocalDataViewType: int ordinal()>();

        $r92 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        virtualinvoke r129.<android.widget.ImageView: void setTag(int,java.lang.Object)>(2131623940, $r92);

        $r93 = new com.android.camera.CameraActivity$15;

        specialinvoke $r93.<com.android.camera.CameraActivity$15: void <init>(com.android.camera.CameraActivity)>(r0);

        virtualinvoke r129.<android.widget.ImageView: void setOnClickListener(android.view.View$OnClickListener)>($r93);

        $r90 = virtualinvoke r0.<com.android.camera.CameraActivity: java.lang.String getString(int)>(2131230929);

        virtualinvoke r129.<android.widget.ImageView: void setContentDescription(java.lang.CharSequence)>($r90);

        $r91 = new com.android.camera.data.FixedLastDataAdapter;

        $r89 = r0.<com.android.camera.CameraActivity: android.content.Context mAppContext>;

        $r86 = r0.<com.android.camera.CameraActivity: com.android.camera.data.LocalDataAdapter mDataAdapter>;

        $r88 = new com.android.camera.data.SimpleViewData;

        $r87 = <com.android.camera.data.LocalDataViewType: com.android.camera.data.LocalDataViewType SECURE_ALBUM_PLACEHOLDER>;

        $r99 = virtualinvoke r129.<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>();

        $i5 = virtualinvoke $r99.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $r98 = virtualinvoke r129.<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>();

        $i4 = virtualinvoke $r98.<android.graphics.drawable.Drawable: int getIntrinsicHeight()>();

        specialinvoke $r88.<com.android.camera.data.SimpleViewData: void <init>(android.view.View,com.android.camera.data.LocalDataViewType,int,int,int,int)>(r129, $r87, $i5, $i4, 0, 0);

        specialinvoke $r91.<com.android.camera.data.FixedLastDataAdapter: void <init>(android.content.Context,com.android.camera.data.LocalDataAdapter,com.android.camera.data.LocalData)>($r89, $r86, $r88);

        r0.<com.android.camera.CameraActivity: com.android.camera.data.LocalDataAdapter mDataAdapter> = $r91;

        $r97 = r0.<com.android.camera.CameraActivity: com.android.camera.data.LocalDataAdapter mDataAdapter>;

        interfaceinvoke $r97.<com.android.camera.data.LocalDataAdapter: void flush()>();

        $r95 = r0.<com.android.camera.CameraActivity: com.android.camera.filmstrip.FilmstripController mFilmstripController>;

        $r96 = r0.<com.android.camera.CameraActivity: com.android.camera.data.LocalDataAdapter mDataAdapter>;

        interfaceinvoke $r95.<com.android.camera.filmstrip.FilmstripController: void setDataAdapter(com.android.camera.filmstrip.DataAdapter)>($r96);

     label11:
        specialinvoke r0.<com.android.camera.CameraActivity: void setupNfcBeamPush()>();

        $r94 = new com.android.camera.data.LocalMediaObserver;

        specialinvoke $r94.<com.android.camera.data.LocalMediaObserver: void <init>()>();

        r0.<com.android.camera.CameraActivity: com.android.camera.data.LocalMediaObserver mLocalImagesObserver> = $r94;

        $r107 = new com.android.camera.data.LocalMediaObserver;

        specialinvoke $r107.<com.android.camera.data.LocalMediaObserver: void <init>()>();

        r0.<com.android.camera.CameraActivity: com.android.camera.data.LocalMediaObserver mLocalVideosObserver> = $r107;

        $r106 = virtualinvoke r0.<com.android.camera.CameraActivity: android.content.ContentResolver getContentResolver()>();

        $r104 = <android.provider.MediaStore$Images$Media: android.net.Uri EXTERNAL_CONTENT_URI>;

        $r105 = r0.<com.android.camera.CameraActivity: com.android.camera.data.LocalMediaObserver mLocalImagesObserver>;

        virtualinvoke $r106.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r104, 1, $r105);

        $r103 = virtualinvoke r0.<com.android.camera.CameraActivity: android.content.ContentResolver getContentResolver()>();

        $r101 = <android.provider.MediaStore$Video$Media: android.net.Uri EXTERNAL_CONTENT_URI>;

        $r102 = r0.<com.android.camera.CameraActivity: com.android.camera.data.LocalMediaObserver mLocalVideosObserver>;

        virtualinvoke $r103.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r101, 1, $r102);

        $r100 = virtualinvoke r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraServices getServices()>();

        $r113 = interfaceinvoke $r100.<com.android.camera.app.CameraServices: com.android.camera.app.MemoryManager getMemoryManager()>();

        r0.<com.android.camera.CameraActivity: com.android.camera.app.MemoryManager mMemoryManager> = $r113;

        $r115 = <android.os.AsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR>;

        $r112 = new com.android.camera.CameraActivity$16;

        specialinvoke $r112.<com.android.camera.CameraActivity$16: void <init>(com.android.camera.CameraActivity)>(r0);

        interfaceinvoke $r115.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r112);

        $r114 = virtualinvoke r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraServices getServices()>();

        $r117 = interfaceinvoke $r114.<com.android.camera.app.CameraServices: com.android.camera.app.MotionManager getMotionManager()>();

        r0.<com.android.camera.CameraActivity: com.android.camera.app.MotionManager mMotionManager> = $r117;

        return;
    }

    public int getModeIndex()
    {
        com.android.camera.CameraActivity r0;
        int i1, i2, i3, i4;
        android.content.res.Resources $r1, $r2, $r3;
        java.lang.String $r4, $r6, $r7, $r8, $r10, $r11, $r13, $r14, $r19, $r20, $r22, $r23;
        android.content.Intent $r5, $r9, $r12, $r15, $r21, $r24;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        com.android.camera.settings.SettingsManager $r16, $r18, $r25;
        java.lang.Integer $r17, $r26;

        r0 := @this: com.android.camera.CameraActivity;

        $r1 = virtualinvoke r0.<com.android.camera.CameraActivity: android.content.res.Resources getResources()>();

        i1 = virtualinvoke $r1.<android.content.res.Resources: int getInteger(int)>(2131361792);

        $r2 = virtualinvoke r0.<com.android.camera.CameraActivity: android.content.res.Resources getResources()>();

        i2 = virtualinvoke $r2.<android.content.res.Resources: int getInteger(int)>(2131361793);

        $r3 = virtualinvoke r0.<com.android.camera.CameraActivity: android.content.res.Resources getResources()>();

        i3 = virtualinvoke $r3.<android.content.res.Resources: int getInteger(int)>(2131361797);

        $r4 = "android.media.action.VIDEO_CAMERA";

        $r5 = virtualinvoke r0.<com.android.camera.CameraActivity: android.content.Intent getIntent()>();

        $r6 = virtualinvoke $r5.<android.content.Intent: java.lang.String getAction()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label1;

        $r7 = "android.media.action.VIDEO_CAPTURE";

        $r9 = virtualinvoke r0.<com.android.camera.CameraActivity: android.content.Intent getIntent()>();

        $r8 = virtualinvoke $r9.<android.content.Intent: java.lang.String getAction()>();

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z1 == 0 goto label2;

     label1:
        i4 = i2;

        goto label8;

     label2:
        $r10 = "android.media.action.IMAGE_CAPTURE";

        $r12 = virtualinvoke r0.<com.android.camera.CameraActivity: android.content.Intent getIntent()>();

        $r11 = virtualinvoke $r12.<android.content.Intent: java.lang.String getAction()>();

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z2 == 0 goto label3;

        i4 = i1;

        goto label8;

     label3:
        $r13 = "android.media.action.STILL_IMAGE_CAMERA";

        $r15 = virtualinvoke r0.<com.android.camera.CameraActivity: android.content.Intent getIntent()>();

        $r14 = virtualinvoke $r15.<android.content.Intent: java.lang.String getAction()>();

        $z3 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r14);

        if $z3 != 0 goto label4;

        $r20 = "android.media.action.STILL_IMAGE_CAMERA_SECURE";

        $r21 = virtualinvoke r0.<com.android.camera.CameraActivity: android.content.Intent getIntent()>();

        $r19 = virtualinvoke $r21.<android.content.Intent: java.lang.String getAction()>();

        $z5 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>($r19);

        if $z5 != 0 goto label4;

        $r23 = "android.media.action.IMAGE_CAPTURE_SECURE";

        $r24 = virtualinvoke r0.<com.android.camera.CameraActivity: android.content.Intent getIntent()>();

        $r22 = virtualinvoke $r24.<android.content.Intent: java.lang.String getAction()>();

        $z6 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>($r22);

        if $z6 == 0 goto label5;

     label4:
        $r16 = r0.<com.android.camera.CameraActivity: com.android.camera.settings.SettingsManager mSettingsManager>;

        $r17 = virtualinvoke $r16.<com.android.camera.settings.SettingsManager: java.lang.Integer getInteger(java.lang.String,java.lang.String)>("default_scope", "pref_camera_module_last_used_index");

        i4 = virtualinvoke $r17.<java.lang.Integer: int intValue()>();

        $r18 = r0.<com.android.camera.CameraActivity: com.android.camera.settings.SettingsManager mSettingsManager>;

        $z4 = virtualinvoke $r18.<com.android.camera.settings.SettingsManager: boolean getBoolean(java.lang.String,java.lang.String)>("default_scope", "pref_user_selected_aspect_ratio");

        if $z4 != 0 goto label8;

        i4 = i1;

        goto label8;

     label5:
        $r25 = r0.<com.android.camera.CameraActivity: com.android.camera.settings.SettingsManager mSettingsManager>;

        $r26 = virtualinvoke $r25.<com.android.camera.settings.SettingsManager: java.lang.Integer getInteger(java.lang.String,java.lang.String)>("default_scope", "camera.startup_module");

        i4 = virtualinvoke $r26.<java.lang.Integer: int intValue()>();

        if i4 != i3 goto label6;

        $z7 = staticinvoke <com.android.camera.util.GcamHelper: boolean hasGcamAsSeparateModule()>();

        if $z7 == 0 goto label7;

     label6:
        if i4 >= 0 goto label8;

     label7:
        i4 = i1;

     label8:
        return i4;
    }

    private void updatePreviewVisibility()
    {
        com.android.camera.CameraActivity r0;
        int i0;
        com.android.camera.CameraModule $r1, $r3;
        com.android.camera.app.CameraAppUI $r2;

        r0 := @this: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.CameraModule mCurrentModule>;

        if $r1 != null goto label1;

        return;

     label1:
        i0 = specialinvoke r0.<com.android.camera.CameraActivity: int getPreviewVisibility()>();

        $r2 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        virtualinvoke $r2.<com.android.camera.app.CameraAppUI: void onPreviewVisiblityChanged(int)>(i0);

        specialinvoke r0.<com.android.camera.CameraActivity: void updatePreviewRendering(int)>(i0);

        $r3 = r0.<com.android.camera.CameraActivity: com.android.camera.CameraModule mCurrentModule>;

        virtualinvoke $r3.<com.android.camera.CameraModule: void onPreviewVisibilityChanged(int)>(i0);

        return;
    }

    private void updatePreviewRendering(int)
    {
        com.android.camera.CameraActivity r0;
        int i0;
        com.android.camera.app.CameraAppUI $r1, $r2;

        r0 := @this: com.android.camera.CameraActivity;

        i0 := @parameter0: int;

        if i0 != 2 goto label1;

        $r2 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        virtualinvoke $r2.<com.android.camera.app.CameraAppUI: void pausePreviewRendering()>();

        goto label2;

     label1:
        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        virtualinvoke $r1.<com.android.camera.app.CameraAppUI: void resumePreviewRendering()>();

     label2:
        return;
    }

    private int getPreviewVisibility()
    {
        com.android.camera.CameraActivity r0;
        boolean $z0, $z1;

        r0 := @this: com.android.camera.CameraActivity;

        $z0 = r0.<com.android.camera.CameraActivity: boolean mFilmstripCoversPreview>;

        if $z0 == 0 goto label1;

        return 2;

     label1:
        $z1 = r0.<com.android.camera.CameraActivity: boolean mModeListVisible>;

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private void setRotationAnimation()
    {
        com.android.camera.CameraActivity r0;
        android.view.Window r1;
        android.view.WindowManager$LayoutParams r2;
        byte b0;

        r0 := @this: com.android.camera.CameraActivity;

        b0 = 1;

        r1 = virtualinvoke r0.<com.android.camera.CameraActivity: android.view.Window getWindow()>();

        r2 = virtualinvoke r1.<android.view.Window: android.view.WindowManager$LayoutParams getAttributes()>();

        r2.<android.view.WindowManager$LayoutParams: int rotationAnimation> = b0;

        virtualinvoke r1.<android.view.Window: void setAttributes(android.view.WindowManager$LayoutParams)>(r2);

        return;
    }

    public void onUserInteraction()
    {
        com.android.camera.CameraActivity r0;
        boolean $z0;

        r0 := @this: com.android.camera.CameraActivity;

        specialinvoke r0.<android.app.Activity: void onUserInteraction()>();

        $z0 = virtualinvoke r0.<com.android.camera.CameraActivity: boolean isFinishing()>();

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.android.camera.CameraActivity: void keepScreenOnForAWhile()>();

     label1:
        return;
    }

    public boolean dispatchTouchEvent(android.view.MotionEvent)
    {
        com.android.camera.CameraActivity r0;
        android.view.MotionEvent r1;
        boolean z0, $z1, $z2;
        int $i0;

        r0 := @this: com.android.camera.CameraActivity;

        r1 := @parameter0: android.view.MotionEvent;

        z0 = specialinvoke r0.<android.app.Activity: boolean dispatchTouchEvent(android.view.MotionEvent)>(r1);

        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        if $i0 != 0 goto label1;

        $z1 = r0.<com.android.camera.CameraActivity: boolean mPendingDeletion>;

        if $z1 == 0 goto label1;

        $z2 = r0.<com.android.camera.CameraActivity: boolean mIsUndoingDeletion>;

        if $z2 != 0 goto label1;

        specialinvoke r0.<com.android.camera.CameraActivity: void performDeletion()>();

     label1:
        return z0;
    }

    public void onPause()
    {
        com.android.camera.CameraActivity r0;
        java.lang.RuntimeException r1, $r13;
        boolean $z0, $z2;
        android.os.HandlerThread $r2;
        com.android.camera.CameraModule $r3;
        com.android.camera.app.OrientationManagerImpl $r4;
        com.android.camera.util.PhotoSphereHelper$PanoramaViewHelper $r5;
        com.android.camera.data.LocalMediaObserver $r6, $r7, $r8;
        com.android.camera.widget.Preloader $r9;
        com.android.camera.app.MotionManager $r10;
        com.android.camera.util.UsageStatistics $r11;
        com.android.camera.app.CameraController $r12;
        int $i0;
        com.android.camera.settings.SettingsManager $r14;
        com.android.camera.debug.Log$Tag $r15;

        r0 := @this: com.android.camera.CameraActivity;

        staticinvoke <android.util.CameraPerformanceTracker: void onEvent(int)>(1);

        $z0 = specialinvoke r0.<com.android.camera.CameraActivity: boolean isCaptureIntent()>();

        if $z0 != 0 goto label1;

        $r14 = r0.<com.android.camera.CameraActivity: com.android.camera.settings.SettingsManager mSettingsManager>;

        $i0 = r0.<com.android.camera.CameraActivity: int mCurrentModeIndex>;

        virtualinvoke $r14.<com.android.camera.settings.SettingsManager: void set(java.lang.String,java.lang.String,int)>("default_scope", "camera.startup_module", $i0);

     label1:
        r0.<com.android.camera.CameraActivity: boolean mPaused> = 1;

        r0.<com.android.camera.CameraActivity: com.android.camera.CameraActivity$PeekAnimationHandler mPeekAnimationHandler> = null;

        $r2 = r0.<com.android.camera.CameraActivity: android.os.HandlerThread mPeekAnimationThread>;

        virtualinvoke $r2.<android.os.HandlerThread: boolean quitSafely()>();

        r0.<com.android.camera.CameraActivity: android.os.HandlerThread mPeekAnimationThread> = null;

        specialinvoke r0.<com.android.camera.CameraActivity: void performDeletion()>();

        $r3 = r0.<com.android.camera.CameraActivity: com.android.camera.CameraModule mCurrentModule>;

        virtualinvoke $r3.<com.android.camera.CameraModule: void pause()>();

        $r4 = r0.<com.android.camera.CameraActivity: com.android.camera.app.OrientationManagerImpl mOrientationManager>;

        virtualinvoke $r4.<com.android.camera.app.OrientationManagerImpl: void pause()>();

        $r5 = r0.<com.android.camera.CameraActivity: com.android.camera.util.PhotoSphereHelper$PanoramaViewHelper mPanoramaViewHelper>;

        virtualinvoke $r5.<com.android.camera.util.PhotoSphereHelper$PanoramaViewHelper: void onPause()>();

        $r6 = r0.<com.android.camera.CameraActivity: com.android.camera.data.LocalMediaObserver mLocalImagesObserver>;

        virtualinvoke $r6.<com.android.camera.data.LocalMediaObserver: void setForegroundChangeListener(com.android.camera.data.LocalMediaObserver$ChangeListener)>(null);

        $r7 = r0.<com.android.camera.CameraActivity: com.android.camera.data.LocalMediaObserver mLocalImagesObserver>;

        virtualinvoke $r7.<com.android.camera.data.LocalMediaObserver: void setActivityPaused(boolean)>(1);

        $r8 = r0.<com.android.camera.CameraActivity: com.android.camera.data.LocalMediaObserver mLocalVideosObserver>;

        virtualinvoke $r8.<com.android.camera.data.LocalMediaObserver: void setActivityPaused(boolean)>(1);

        $r9 = r0.<com.android.camera.CameraActivity: com.android.camera.widget.Preloader mPreloader>;

        virtualinvoke $r9.<com.android.camera.widget.Preloader: void cancelAllLoads()>();

        specialinvoke r0.<com.android.camera.CameraActivity: void resetScreenOn()>();

        $r10 = r0.<com.android.camera.CameraActivity: com.android.camera.app.MotionManager mMotionManager>;

        virtualinvoke $r10.<com.android.camera.app.MotionManager: void stop()>();

        $r11 = staticinvoke <com.android.camera.util.UsageStatistics: com.android.camera.util.UsageStatistics instance()>();

        virtualinvoke $r11.<com.android.camera.util.UsageStatistics: void backgrounded()>();

     label2:
        $r12 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraController mCameraController>;

        virtualinvoke $r12.<com.android.camera.app.CameraController: void closeCamera(boolean)>(1);

     label3:
        goto label5;

     label4:
        $r13 := @caughtexception;

        r1 = $r13;

        $r15 = <com.android.camera.CameraActivity: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void e(com.android.camera.debug.Log$Tag,java.lang.String,java.lang.Throwable)>($r15, "Exception while closing camera", r1);

        $z2 = virtualinvoke r0.<com.android.camera.CameraActivity: boolean isFinishing()>();

        if $z2 != 0 goto label5;

        virtualinvoke r0.<com.android.camera.CameraActivity: void finish()>();

     label5:
        specialinvoke r0.<android.app.Activity: void onPause()>();

        return;

        catch java.lang.RuntimeException from label2 to label3 with label4;
    }

    public void onResume()
    {
        com.android.camera.CameraActivity r0;
        short s0;
        java.lang.String r1, r2, $r6, $r8;
        byte b1;
        java.lang.StringBuilder $r3, $r5, $r7;
        com.android.camera.debug.Log$Tag $r4;
        android.content.res.Resources $r9;
        android.content.res.Configuration $r10;
        int $i2, $i3, $i4, $i5, $i6, $i7, i8;
        android.content.ContentResolver $r11;
        android.content.Intent $r12, $r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        com.android.camera.util.UsageStatistics $r13, $r23;
        android.content.Context $r15;
        com.android.camera.app.OrientationManagerImpl $r16;
        android.os.HandlerThread $r17, $r18, $r19;
        com.android.camera.CameraActivity$PeekAnimationHandler $r20;
        com.android.camera.settings.SettingsManager $r21, $r39;
        android.os.Looper $r22;
        com.android.camera.CameraModule $r24, $r25;
        com.android.camera.app.CameraAppUI $r26;
        com.android.camera.app.CameraAppUI$BottomPanel $r27;
        java.lang.Integer $r28;
        com.android.camera.data.LocalMediaObserver $r29, $r30, $r32, $r42, $r44;
        java.lang.Runnable $r31;
        com.android.camera.util.PhotoSphereHelper$PanoramaViewHelper $r33;
        com.android.camera.CameraActivity$19 $r34;
        android.view.View $r35;
        android.view.Window $r36;
        com.android.camera.CameraActivity$18 $r37;
        com.android.camera.app.MotionManager $r38;
        com.android.camera.CameraActivity$17 $r40;
        com.android.camera.data.LocalDataAdapter $r41, $r45, $r48, $r49;
        com.android.camera.filmstrip.FilmstripController $r43;
        android.net.Uri $r46;
        android.app.ActionBar $r47;
        com.android.camera.data.LocalData r50;

        r0 := @this: com.android.camera.CameraActivity;

        staticinvoke <android.util.CameraPerformanceTracker: void onEvent(int)>(2);

        $r4 = <com.android.camera.CameraActivity: com.android.camera.debug.Log$Tag TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Build info: ");

        $r6 = <android.os.Build: java.lang.String DISPLAY>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void v(com.android.camera.debug.Log$Tag,java.lang.String)>($r4, $r8);

        r0.<com.android.camera.CameraActivity: boolean mPaused> = 0;

        virtualinvoke r0.<com.android.camera.CameraActivity: void updateStorageSpaceAndHint(com.android.camera.CameraActivity$OnStorageUpdateDoneListener)>(null);

        $r9 = virtualinvoke r0.<com.android.camera.CameraActivity: android.content.res.Resources getResources()>();

        $r10 = virtualinvoke $r9.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i2 = $r10.<android.content.res.Configuration: int orientation>;

        r0.<com.android.camera.CameraActivity: int mLastLayoutOrientation> = $i2;

        $r11 = virtualinvoke r0.<com.android.camera.CameraActivity: android.content.ContentResolver getContentResolver()>();

        $i3 = staticinvoke <android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String,int)>($r11, "accelerometer_rotation", 0);

        if $i3 != 0 goto label01;

        virtualinvoke r0.<com.android.camera.CameraActivity: void setRequestedOrientation(int)>(-1);

        r0.<com.android.camera.CameraActivity: boolean mAutoRotateScreen> = 0;

        goto label02;

     label01:
        virtualinvoke r0.<com.android.camera.CameraActivity: void setRequestedOrientation(int)>(10);

        r0.<com.android.camera.CameraActivity: boolean mAutoRotateScreen> = 1;

     label02:
        $r12 = virtualinvoke r0.<com.android.camera.CameraActivity: android.content.Intent getIntent()>();

        r1 = virtualinvoke $r12.<android.content.Intent: java.lang.String getAction()>();

        if r1 != null goto label03;

        s0 = 10000;

        goto label20;

     label03:
        r2 = r1;

        b1 = -1;

        $i4 = virtualinvoke r2.<java.lang.String: int hashCode()>();

        lookupswitch($i4)
        {
            case -1960745709: goto label04;
            case -1658348509: goto label09;
            case -1173447682: goto label10;
            case 464109999: goto label05;
            case 485955591: goto label08;
            case 701083699: goto label07;
            case 1130890360: goto label06;
            default: goto label11;
        };

     label04:
        $z13 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("android.media.action.IMAGE_CAPTURE");

        if $z13 == 0 goto label11;

        b1 = 0;

        goto label11;

     label05:
        $z10 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("android.media.action.STILL_IMAGE_CAMERA");

        if $z10 == 0 goto label11;

        b1 = 1;

        goto label11;

     label06:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("android.media.action.VIDEO_CAMERA");

        if $z0 == 0 goto label11;

        b1 = 2;

        goto label11;

     label07:
        $z8 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("android.media.action.VIDEO_CAPTURE");

        if $z8 == 0 goto label11;

        b1 = 3;

        goto label11;

     label08:
        $z9 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("android.media.action.STILL_IMAGE_CAMERA_SECURE");

        if $z9 == 0 goto label11;

        b1 = 4;

        goto label11;

     label09:
        $z12 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("android.media.action.IMAGE_CAPTURE_SECURE");

        if $z12 == 0 goto label11;

        b1 = 5;

        goto label11;

     label10:
        $z11 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("android.intent.action.MAIN");

        if $z11 == 0 goto label11;

        b1 = 6;

     label11:
        tableswitch(b1)
        {
            case 0: goto label12;
            case 1: goto label13;
            case 2: goto label14;
            case 3: goto label15;
            case 4: goto label16;
            case 5: goto label17;
            case 6: goto label18;
            default: goto label19;
        };

     label12:
        s0 = 10000;

        goto label20;

     label13:
        s0 = 10000;

        goto label20;

     label14:
        s0 = 10000;

        goto label20;

     label15:
        s0 = 10000;

        goto label20;

     label16:
        s0 = 10000;

        goto label20;

     label17:
        s0 = 10000;

        goto label20;

     label18:
        s0 = 10000;

        goto label20;

     label19:
        s0 = 10000;

     label20:
        $r13 = staticinvoke <com.android.camera.util.UsageStatistics: com.android.camera.util.UsageStatistics instance()>();

        $i5 = specialinvoke r0.<com.android.camera.CameraActivity: int currentUserInterfaceMode()>();

        virtualinvoke $r13.<com.android.camera.util.UsageStatistics: void foregrounded(int,int)>(s0, $i5);

        $r15 = r0.<com.android.camera.CameraActivity: android.content.Context mAppContext>;

        $r14 = staticinvoke <com.android.camera.util.IntentHelper: android.content.Intent getGalleryIntent(android.content.Context)>($r15);

        r0.<com.android.camera.CameraActivity: android.content.Intent mGalleryIntent> = $r14;

        $z1 = staticinvoke <com.android.camera.util.ApiHelper: boolean isLOrHigher()>();

        if $z1 == 0 goto label21;

        $r47 = r0.<com.android.camera.CameraActivity: android.app.ActionBar mActionBar>;

        virtualinvoke $r47.<android.app.ActionBar: void setDisplayShowHomeEnabled(boolean)>(0);

     label21:
        $r16 = r0.<com.android.camera.CameraActivity: com.android.camera.app.OrientationManagerImpl mOrientationManager>;

        virtualinvoke $r16.<com.android.camera.app.OrientationManagerImpl: void resume()>();

        specialinvoke r0.<android.app.Activity: void onResume()>();

        $r18 = new android.os.HandlerThread;

        specialinvoke $r18.<android.os.HandlerThread: void <init>(java.lang.String)>("Peek animation");

        r0.<com.android.camera.CameraActivity: android.os.HandlerThread mPeekAnimationThread> = $r18;

        $r17 = r0.<com.android.camera.CameraActivity: android.os.HandlerThread mPeekAnimationThread>;

        virtualinvoke $r17.<android.os.HandlerThread: void start()>();

        $r20 = new com.android.camera.CameraActivity$PeekAnimationHandler;

        $r19 = r0.<com.android.camera.CameraActivity: android.os.HandlerThread mPeekAnimationThread>;

        $r22 = virtualinvoke $r19.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r20.<com.android.camera.CameraActivity$PeekAnimationHandler: void <init>(com.android.camera.CameraActivity,android.os.Looper)>(r0, $r22);

        r0.<com.android.camera.CameraActivity: com.android.camera.CameraActivity$PeekAnimationHandler mPeekAnimationHandler> = $r20;

        $r24 = r0.<com.android.camera.CameraActivity: com.android.camera.CameraModule mCurrentModule>;

        $r21 = r0.<com.android.camera.CameraActivity: com.android.camera.settings.SettingsManager mSettingsManager>;

        virtualinvoke $r24.<com.android.camera.CameraModule: void hardResetSettings(com.android.camera.settings.SettingsManager)>($r21);

        $r25 = r0.<com.android.camera.CameraActivity: com.android.camera.CameraModule mCurrentModule>;

        virtualinvoke $r25.<com.android.camera.CameraModule: void resume()>();

        $r23 = staticinvoke <com.android.camera.util.UsageStatistics: com.android.camera.util.UsageStatistics instance()>();

        $i6 = specialinvoke r0.<com.android.camera.CameraActivity: int currentUserInterfaceMode()>();

        $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10000);

        virtualinvoke $r23.<com.android.camera.util.UsageStatistics: void changeScreen(int,java.lang.Integer)>($i6, $r28);

        virtualinvoke r0.<com.android.camera.CameraActivity: void setSwipingEnabled(boolean)>(1);

        $z2 = r0.<com.android.camera.CameraActivity: boolean mResetToPreviewOnResume>;

        if $z2 != 0 goto label22;

        $r48 = r0.<com.android.camera.CameraActivity: com.android.camera.data.LocalDataAdapter mDataAdapter>;

        $r43 = r0.<com.android.camera.CameraActivity: com.android.camera.filmstrip.FilmstripController mFilmstripController>;

        $i7 = interfaceinvoke $r43.<com.android.camera.filmstrip.FilmstripController: int getCurrentId()>();

        r50 = interfaceinvoke $r48.<com.android.camera.data.LocalDataAdapter: com.android.camera.data.LocalData getLocalData(int)>($i7);

        if r50 == null goto label22;

        $r49 = r0.<com.android.camera.CameraActivity: com.android.camera.data.LocalDataAdapter mDataAdapter>;

        $r46 = interfaceinvoke r50.<com.android.camera.data.LocalData: android.net.Uri getUri()>();

        interfaceinvoke $r49.<com.android.camera.data.LocalDataAdapter: void refresh(android.net.Uri)>($r46);

     label22:
        $r26 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        $r27 = virtualinvoke $r26.<com.android.camera.app.CameraAppUI: com.android.camera.app.CameraAppUI$BottomPanel getFilmstripBottomControls()>();

        interfaceinvoke $r27.<com.android.camera.app.CameraAppUI$BottomPanel: void setShareEnabled(boolean)>(1);

        r0.<com.android.camera.CameraActivity: boolean mResetToPreviewOnResume> = 1;

        $r30 = r0.<com.android.camera.CameraActivity: com.android.camera.data.LocalMediaObserver mLocalVideosObserver>;

        $z4 = virtualinvoke $r30.<com.android.camera.data.LocalMediaObserver: boolean isMediaDataChangedDuringPause()>();

        if $z4 != 0 goto label23;

        $r44 = r0.<com.android.camera.CameraActivity: com.android.camera.data.LocalMediaObserver mLocalImagesObserver>;

        $z7 = virtualinvoke $r44.<com.android.camera.data.LocalMediaObserver: boolean isMediaDataChangedDuringPause()>();

        if $z7 == 0 goto label25;

     label23:
        $z3 = r0.<com.android.camera.CameraActivity: boolean mSecureCamera>;

        if $z3 != 0 goto label25;

        $z6 = r0.<com.android.camera.CameraActivity: boolean mFilmstripVisible>;

        if $z6 != 0 goto label24;

        $r45 = r0.<com.android.camera.CameraActivity: com.android.camera.data.LocalDataAdapter mDataAdapter>;

        $r40 = new com.android.camera.CameraActivity$17;

        specialinvoke $r40.<com.android.camera.CameraActivity$17: void <init>(com.android.camera.CameraActivity)>(r0);

        interfaceinvoke $r45.<com.android.camera.data.LocalDataAdapter: void requestLoad(com.android.camera.util.Callback)>($r40);

        goto label25;

     label24:
        $r41 = r0.<com.android.camera.CameraActivity: com.android.camera.data.LocalDataAdapter mDataAdapter>;

        interfaceinvoke $r41.<com.android.camera.data.LocalDataAdapter: void requestLoadNewPhotos()>();

     label25:
        $r29 = r0.<com.android.camera.CameraActivity: com.android.camera.data.LocalMediaObserver mLocalImagesObserver>;

        virtualinvoke $r29.<com.android.camera.data.LocalMediaObserver: void setActivityPaused(boolean)>(0);

        $r32 = r0.<com.android.camera.CameraActivity: com.android.camera.data.LocalMediaObserver mLocalVideosObserver>;

        virtualinvoke $r32.<com.android.camera.data.LocalMediaObserver: void setActivityPaused(boolean)>(0);

        $z5 = r0.<com.android.camera.CameraActivity: boolean mSecureCamera>;

        if $z5 != 0 goto label26;

        $r42 = r0.<com.android.camera.CameraActivity: com.android.camera.data.LocalMediaObserver mLocalImagesObserver>;

        $r37 = new com.android.camera.CameraActivity$18;

        specialinvoke $r37.<com.android.camera.CameraActivity$18: void <init>(com.android.camera.CameraActivity)>(r0);

        virtualinvoke $r42.<com.android.camera.data.LocalMediaObserver: void setForegroundChangeListener(com.android.camera.data.LocalMediaObserver$ChangeListener)>($r37);

     label26:
        specialinvoke r0.<com.android.camera.CameraActivity: void keepScreenOnForAWhile()>();

        virtualinvoke r0.<com.android.camera.CameraActivity: android.view.View findViewById(int)>(2131623941);

        $r31 = r0.<com.android.camera.CameraActivity: java.lang.Runnable mLightsOutRunnable>;

        interfaceinvoke $r31.<java.lang.Runnable: void run()>();

        $r36 = virtualinvoke r0.<com.android.camera.CameraActivity: android.view.Window getWindow()>();

        $r35 = virtualinvoke $r36.<android.view.Window: android.view.View getDecorView()>();

        $r34 = new com.android.camera.CameraActivity$19;

        specialinvoke $r34.<com.android.camera.CameraActivity$19: void <init>(com.android.camera.CameraActivity)>(r0);

        virtualinvoke $r35.<android.view.View: void setOnSystemUiVisibilityChangeListener(android.view.View$OnSystemUiVisibilityChangeListener)>($r34);

        $r33 = r0.<com.android.camera.CameraActivity: com.android.camera.util.PhotoSphereHelper$PanoramaViewHelper mPanoramaViewHelper>;

        virtualinvoke $r33.<com.android.camera.util.PhotoSphereHelper$PanoramaViewHelper: void onResume()>();

        $r39 = r0.<com.android.camera.CameraActivity: com.android.camera.settings.SettingsManager mSettingsManager>;

        staticinvoke <com.android.camera.util.ReleaseDialogHelper: void showReleaseInfoDialogOnStart(android.app.Activity,com.android.camera.settings.SettingsManager)>(r0, $r39);

        virtualinvoke r0.<com.android.camera.CameraActivity: void syncLocationManagerSetting()>();

        i8 = specialinvoke r0.<com.android.camera.CameraActivity: int getPreviewVisibility()>();

        specialinvoke r0.<com.android.camera.CameraActivity: void updatePreviewRendering(int)>(i8);

        $r38 = r0.<com.android.camera.CameraActivity: com.android.camera.app.MotionManager mMotionManager>;

        virtualinvoke $r38.<com.android.camera.app.MotionManager: void start()>();

        return;
    }

    private void fillTemporarySessions()
    {
        com.android.camera.CameraActivity r0;
        boolean $z0;
        com.android.camera.app.CameraServices $r1;
        com.android.camera.session.CaptureSessionManager $r2;
        com.android.camera.session.CaptureSessionManager$SessionListener $r3;

        r0 := @this: com.android.camera.CameraActivity;

        $z0 = r0.<com.android.camera.CameraActivity: boolean mSecureCamera>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = virtualinvoke r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraServices getServices()>();

        $r2 = interfaceinvoke $r1.<com.android.camera.app.CameraServices: com.android.camera.session.CaptureSessionManager getCaptureSessionManager()>();

        $r3 = r0.<com.android.camera.CameraActivity: com.android.camera.session.CaptureSessionManager$SessionListener mSessionListener>;

        interfaceinvoke $r2.<com.android.camera.session.CaptureSessionManager: void fillTemporarySession(com.android.camera.session.CaptureSessionManager$SessionListener)>($r3);

        return;
    }

    public void onStart()
    {
        com.android.camera.CameraActivity r0;
        int i0, $i1;
        com.android.camera.util.PhotoSphereHelper$PanoramaViewHelper $r1;
        boolean $z0, $z1;
        com.android.camera.app.CameraAppUI $r2;

        r0 := @this: com.android.camera.CameraActivity;

        specialinvoke r0.<android.app.Activity: void onStart()>();

        r0.<com.android.camera.CameraActivity: boolean mIsActivityRunning> = 1;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.util.PhotoSphereHelper$PanoramaViewHelper mPanoramaViewHelper>;

        virtualinvoke $r1.<com.android.camera.util.PhotoSphereHelper$PanoramaViewHelper: void onStart()>();

        i0 = virtualinvoke r0.<com.android.camera.CameraActivity: int getModeIndex()>();

        $z0 = specialinvoke r0.<com.android.camera.CameraActivity: boolean isCaptureIntent()>();

        if $z0 != 0 goto label1;

        $i1 = r0.<com.android.camera.CameraActivity: int mCurrentModeIndex>;

        if $i1 == i0 goto label1;

        virtualinvoke r0.<com.android.camera.CameraActivity: void onModeSelected(int)>(i0);

     label1:
        $z1 = r0.<com.android.camera.CameraActivity: boolean mResetToPreviewOnResume>;

        if $z1 == 0 goto label2;

        $r2 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        virtualinvoke $r2.<com.android.camera.app.CameraAppUI: void resume()>();

        r0.<com.android.camera.CameraActivity: boolean mResetToPreviewOnResume> = 0;

     label2:
        return;
    }

    protected void onStop()
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.util.PhotoSphereHelper$PanoramaViewHelper $r1;
        com.android.camera.app.LocationManager $r2;

        r0 := @this: com.android.camera.CameraActivity;

        r0.<com.android.camera.CameraActivity: boolean mIsActivityRunning> = 0;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.util.PhotoSphereHelper$PanoramaViewHelper mPanoramaViewHelper>;

        virtualinvoke $r1.<com.android.camera.util.PhotoSphereHelper$PanoramaViewHelper: void onStop()>();

        $r2 = r0.<com.android.camera.CameraActivity: com.android.camera.app.LocationManager mLocationManager>;

        virtualinvoke $r2.<com.android.camera.app.LocationManager: void disconnect()>();

        specialinvoke r0.<android.app.Activity: void onStop()>();

        return;
    }

    public void onDestroy()
    {
        com.android.camera.CameraActivity r0;
        java.lang.RuntimeException r1, $r20;
        boolean $z0;
        android.app.ActionBar$OnMenuVisibilityListener $r2;
        android.app.ActionBar $r3;
        com.android.camera.settings.SettingsManager $r4;
        com.android.camera.app.CameraController $r5;
        android.content.ContentResolver $r6, $r8;
        com.android.camera.data.LocalMediaObserver $r7, $r9;
        com.android.camera.app.CameraServices $r10;
        com.android.camera.session.CaptureSessionManager $r11;
        com.android.camera.session.CaptureSessionManager$SessionListener $r12;
        com.android.camera.app.CameraAppUI $r13;
        com.android.camera.ui.ModeListView $r14;
        com.android.ex.camera2.portability.CameraAgentFactory$CameraApi $r15, $r18;
        com.android.camera.SoundPlayer $r16;
        android.content.BroadcastReceiver $r17;
        com.android.camera.debug.Log$Tag $r19;

        r0 := @this: com.android.camera.CameraActivity;

        $z0 = r0.<com.android.camera.CameraActivity: boolean mSecureCamera>;

        if $z0 == 0 goto label1;

        $r17 = r0.<com.android.camera.CameraActivity: android.content.BroadcastReceiver mScreenOffReceiver>;

        virtualinvoke r0.<com.android.camera.CameraActivity: void unregisterReceiver(android.content.BroadcastReceiver)>($r17);

     label1:
        $r3 = r0.<com.android.camera.CameraActivity: android.app.ActionBar mActionBar>;

        $r2 = r0.<com.android.camera.CameraActivity: android.app.ActionBar$OnMenuVisibilityListener mOnMenuVisibilityListener>;

        virtualinvoke $r3.<android.app.ActionBar: void removeOnMenuVisibilityListener(android.app.ActionBar$OnMenuVisibilityListener)>($r2);

        $r4 = r0.<com.android.camera.CameraActivity: com.android.camera.settings.SettingsManager mSettingsManager>;

        virtualinvoke $r4.<com.android.camera.settings.SettingsManager: void removeAllListeners()>();

        $r5 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraController mCameraController>;

        virtualinvoke $r5.<com.android.camera.app.CameraController: void removeCallbackReceiver()>();

        $r6 = virtualinvoke r0.<com.android.camera.CameraActivity: android.content.ContentResolver getContentResolver()>();

        $r7 = r0.<com.android.camera.CameraActivity: com.android.camera.data.LocalMediaObserver mLocalImagesObserver>;

        virtualinvoke $r6.<android.content.ContentResolver: void unregisterContentObserver(android.database.ContentObserver)>($r7);

        $r8 = virtualinvoke r0.<com.android.camera.CameraActivity: android.content.ContentResolver getContentResolver()>();

        $r9 = r0.<com.android.camera.CameraActivity: com.android.camera.data.LocalMediaObserver mLocalVideosObserver>;

        virtualinvoke $r8.<android.content.ContentResolver: void unregisterContentObserver(android.database.ContentObserver)>($r9);

        $r10 = virtualinvoke r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraServices getServices()>();

        $r11 = interfaceinvoke $r10.<com.android.camera.app.CameraServices: com.android.camera.session.CaptureSessionManager getCaptureSessionManager()>();

        $r12 = r0.<com.android.camera.CameraActivity: com.android.camera.session.CaptureSessionManager$SessionListener mSessionListener>;

        interfaceinvoke $r11.<com.android.camera.session.CaptureSessionManager: void removeSessionListener(com.android.camera.session.CaptureSessionManager$SessionListener)>($r12);

        $r13 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        virtualinvoke $r13.<com.android.camera.app.CameraAppUI: void onDestroy()>();

        $r14 = r0.<com.android.camera.CameraActivity: com.android.camera.ui.ModeListView mModeListView>;

        virtualinvoke $r14.<com.android.camera.ui.ModeListView: void setVisibilityChangedListener(com.android.camera.ui.ModeListView$ModeListVisibilityChangedListener)>(null);

        r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraController mCameraController> = null;

        r0.<com.android.camera.CameraActivity: com.android.camera.settings.SettingsManager mSettingsManager> = null;

        r0.<com.android.camera.CameraActivity: com.android.camera.app.OrientationManagerImpl mOrientationManager> = null;

        r0.<com.android.camera.CameraActivity: com.android.camera.ButtonManager mButtonManager> = null;

        $r16 = r0.<com.android.camera.CameraActivity: com.android.camera.SoundPlayer mSoundPlayer>;

        virtualinvoke $r16.<com.android.camera.SoundPlayer: void release()>();

     label2:
        $r15 = <com.android.ex.camera2.portability.CameraAgentFactory$CameraApi: com.android.ex.camera2.portability.CameraAgentFactory$CameraApi API_1>;

        staticinvoke <com.android.ex.camera2.portability.CameraAgentFactory: void recycle(com.android.ex.camera2.portability.CameraAgentFactory$CameraApi)>($r15);

        $r18 = <com.android.ex.camera2.portability.CameraAgentFactory$CameraApi: com.android.ex.camera2.portability.CameraAgentFactory$CameraApi AUTO>;

        staticinvoke <com.android.ex.camera2.portability.CameraAgentFactory: void recycle(com.android.ex.camera2.portability.CameraAgentFactory$CameraApi)>($r18);

     label3:
        goto label5;

     label4:
        $r20 := @caughtexception;

        r1 = $r20;

        $r19 = <com.android.camera.CameraActivity: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void e(com.android.camera.debug.Log$Tag,java.lang.String,java.lang.Throwable)>($r19, "CameraAgentFactory exception during destroy", r1);

     label5:
        specialinvoke r0.<android.app.Activity: void onDestroy()>();

        return;

        catch java.lang.RuntimeException from label2 to label3 with label4;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        com.android.camera.CameraActivity r0;
        android.content.res.Configuration r1;
        com.android.camera.debug.Log$Tag $r2;
        int $i0, $i1, $i2, $i3, $i4;
        com.android.camera.CameraModule $r3;
        boolean $z0;

        r0 := @this: com.android.camera.CameraActivity;

        r1 := @parameter0: android.content.res.Configuration;

        specialinvoke r0.<android.app.Activity: void onConfigurationChanged(android.content.res.Configuration)>(r1);

        $r2 = <com.android.camera.CameraActivity: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void v(com.android.camera.debug.Log$Tag,java.lang.String)>($r2, "onConfigurationChanged");

        $i0 = r1.<android.content.res.Configuration: int orientation>;

        if $i0 != 0 goto label1;

        return;

     label1:
        $i2 = r0.<com.android.camera.CameraActivity: int mLastLayoutOrientation>;

        $i1 = r1.<android.content.res.Configuration: int orientation>;

        if $i2 == $i1 goto label4;

        $i3 = r1.<android.content.res.Configuration: int orientation>;

        r0.<com.android.camera.CameraActivity: int mLastLayoutOrientation> = $i3;

        $r3 = r0.<com.android.camera.CameraActivity: com.android.camera.CameraModule mCurrentModule>;

        $i4 = r0.<com.android.camera.CameraActivity: int mLastLayoutOrientation>;

        if $i4 != 2 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        virtualinvoke $r3.<com.android.camera.CameraModule: void onLayoutOrientationChanged(boolean)>($z0);

     label4:
        return;
    }

    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        com.android.camera.CameraActivity r0;
        int i0;
        android.view.KeyEvent r1;
        boolean $z0, $z1, $z2, $z3;
        com.android.camera.CameraModule $r2;

        r0 := @this: com.android.camera.CameraActivity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        $z0 = r0.<com.android.camera.CameraActivity: boolean mFilmstripVisible>;

        if $z0 != 0 goto label3;

        $r2 = r0.<com.android.camera.CameraActivity: com.android.camera.CameraModule mCurrentModule>;

        $z2 = virtualinvoke $r2.<com.android.camera.CameraModule: boolean onKeyDown(int,android.view.KeyEvent)>(i0, r1);

        if $z2 == 0 goto label1;

        return 1;

     label1:
        if i0 == 84 goto label2;

        if i0 != 82 goto label3;

     label2:
        $z3 = virtualinvoke r1.<android.view.KeyEvent: boolean isLongPress()>();

        if $z3 == 0 goto label3;

        return 1;

     label3:
        $z1 = specialinvoke r0.<android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>(i0, r1);

        return $z1;
    }

    public boolean onKeyUp(int, android.view.KeyEvent)
    {
        com.android.camera.CameraActivity r0;
        int i0;
        android.view.KeyEvent r1;
        boolean z0, $z1, $z2, $z4;
        com.android.camera.filmstrip.FilmstripController $r2, $r4;
        com.android.camera.app.CameraAppUI $r3, $r6, $r7;
        com.android.camera.CameraModule $r5;

        r0 := @this: com.android.camera.CameraActivity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        $z1 = r0.<com.android.camera.CameraActivity: boolean mFilmstripVisible>;

        if $z1 != 0 goto label4;

        $r5 = r0.<com.android.camera.CameraActivity: com.android.camera.CameraModule mCurrentModule>;

        $z4 = virtualinvoke $r5.<com.android.camera.CameraModule: boolean onKeyUp(int,android.view.KeyEvent)>(i0, r1);

        if $z4 == 0 goto label1;

        return 1;

     label1:
        if i0 == 82 goto label2;

        if i0 != 21 goto label3;

     label2:
        $r6 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        virtualinvoke $r6.<com.android.camera.app.CameraAppUI: void openModeList()>();

        return 1;

     label3:
        if i0 != 22 goto label7;

        $r7 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        virtualinvoke $r7.<com.android.camera.app.CameraAppUI: void showFilmstrip()>();

        return 1;

     label4:
        if i0 != 22 goto label5;

        $r4 = r0.<com.android.camera.CameraActivity: com.android.camera.filmstrip.FilmstripController mFilmstripController>;

        interfaceinvoke $r4.<com.android.camera.filmstrip.FilmstripController: boolean goToNextItem()>();

        return 1;

     label5:
        if i0 != 21 goto label7;

        $r2 = r0.<com.android.camera.CameraActivity: com.android.camera.filmstrip.FilmstripController mFilmstripController>;

        z0 = interfaceinvoke $r2.<com.android.camera.filmstrip.FilmstripController: boolean goToPreviousItem()>();

        if z0 != 0 goto label6;

        $r3 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        virtualinvoke $r3.<com.android.camera.app.CameraAppUI: void hideFilmstrip()>();

     label6:
        return 1;

     label7:
        $z2 = specialinvoke r0.<android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>(i0, r1);

        return $z2;
    }

    public void onBackPressed()
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.app.CameraAppUI $r1;
        boolean $z0, $z1;
        com.android.camera.CameraModule $r2;

        r0 := @this: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        $z0 = virtualinvoke $r1.<com.android.camera.app.CameraAppUI: boolean onBackPressed()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<com.android.camera.CameraActivity: com.android.camera.CameraModule mCurrentModule>;

        $z1 = virtualinvoke $r2.<com.android.camera.CameraModule: boolean onBackPressed()>();

        if $z1 != 0 goto label1;

        specialinvoke r0.<android.app.Activity: void onBackPressed()>();

     label1:
        return;
    }

    public boolean isAutoRotateScreen()
    {
        com.android.camera.CameraActivity r0;
        boolean $z0;

        r0 := @this: com.android.camera.CameraActivity;

        $z0 = r0.<com.android.camera.CameraActivity: boolean mAutoRotateScreen>;

        return $z0;
    }

    public boolean onCreateOptionsMenu(android.view.Menu)
    {
        com.android.camera.CameraActivity r0;
        android.view.Menu r1;
        android.view.MenuInflater r2;
        java.lang.CharSequence r3;
        android.view.MenuItem r4;
        android.graphics.drawable.Drawable r5;
        android.content.Intent $r6, $r7, $r9, $r11;
        boolean $z0;
        android.content.Context $r8, $r12;

        r0 := @this: com.android.camera.CameraActivity;

        r1 := @parameter0: android.view.Menu;

        r2 = virtualinvoke r0.<com.android.camera.CameraActivity: android.view.MenuInflater getMenuInflater()>();

        virtualinvoke r2.<android.view.MenuInflater: void inflate(int,android.view.Menu)>(2131755009, r1);

        r0.<com.android.camera.CameraActivity: android.view.Menu mActionBarMenu> = r1;

        $r6 = r0.<com.android.camera.CameraActivity: android.content.Intent mGalleryIntent>;

        if $r6 == null goto label1;

        $r8 = r0.<com.android.camera.CameraActivity: android.content.Context mAppContext>;

        $r7 = r0.<com.android.camera.CameraActivity: android.content.Intent mGalleryIntent>;

        r3 = staticinvoke <com.android.camera.util.IntentHelper: java.lang.CharSequence getGalleryAppName(android.content.Context,android.content.Intent)>($r8, $r7);

        if r3 == null goto label1;

        r4 = interfaceinvoke r1.<android.view.Menu: android.view.MenuItem add(java.lang.CharSequence)>(r3);

        interfaceinvoke r4.<android.view.MenuItem: void setShowAsAction(int)>(2);

        $r9 = r0.<com.android.camera.CameraActivity: android.content.Intent mGalleryIntent>;

        interfaceinvoke r4.<android.view.MenuItem: android.view.MenuItem setIntent(android.content.Intent)>($r9);

        $r12 = r0.<com.android.camera.CameraActivity: android.content.Context mAppContext>;

        $r11 = r0.<com.android.camera.CameraActivity: android.content.Intent mGalleryIntent>;

        r5 = staticinvoke <com.android.camera.util.IntentHelper: android.graphics.drawable.Drawable getGalleryIcon(android.content.Context,android.content.Intent)>($r12, $r11);

        if r5 == null goto label1;

        interfaceinvoke r4.<android.view.MenuItem: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)>(r5);

     label1:
        $z0 = specialinvoke r0.<android.app.Activity: boolean onCreateOptionsMenu(android.view.Menu)>(r1);

        return $z0;
    }

    protected long getStorageSpaceBytes()
    {
        com.android.camera.CameraActivity r0;
        java.lang.Object r1, $r3;
        java.lang.Throwable r2, $r4;
        long $l0;

        r0 := @this: com.android.camera.CameraActivity;

        $r3 = r0.<com.android.camera.CameraActivity: java.lang.Object mStorageSpaceLock>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $l0 = r0.<com.android.camera.CameraActivity: long mStorageSpaceBytes>;

        exitmonitor r1;

     label2:
        return $l0;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    protected void updateStorageSpaceAndHint(com.android.camera.CameraActivity$OnStorageUpdateDoneListener)
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.CameraActivity$OnStorageUpdateDoneListener r1;
        com.android.camera.CameraActivity$20 $r2;
        java.lang.Void[] $r3;
        java.util.concurrent.Executor $r4;

        r0 := @this: com.android.camera.CameraActivity;

        r1 := @parameter0: com.android.camera.CameraActivity$OnStorageUpdateDoneListener;

        $r2 = new com.android.camera.CameraActivity$20;

        specialinvoke $r2.<com.android.camera.CameraActivity$20: void <init>(com.android.camera.CameraActivity,com.android.camera.CameraActivity$OnStorageUpdateDoneListener)>(r0, r1);

        $r4 = <android.os.AsyncTask: java.util.concurrent.Executor THREAD_POOL_EXECUTOR>;

        $r3 = newarray (java.lang.Void)[0];

        virtualinvoke $r2.<com.android.camera.CameraActivity$20: android.os.AsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])>($r4, $r3);

        return;
    }

    protected void updateStorageHint(long)
    {
        com.android.camera.CameraActivity r0;
        long l0;
        java.lang.String r1, $r8;
        boolean $z0;
        byte $b1, $b2, $b3, $b4;
        com.android.camera.OnScreenHint $r2, $r3, $r9, $r10, $r12, $r13;
        java.lang.StringBuilder $r4, $r6, $r7;
        com.android.camera.debug.Log$Tag $r5;
        com.android.camera.util.UsageStatistics $r11;

        r0 := @this: com.android.camera.CameraActivity;

        l0 := @parameter0: long;

        $z0 = r0.<com.android.camera.CameraActivity: boolean mIsActivityRunning>;

        if $z0 != 0 goto label1;

        return;

     label1:
        r1 = null;

        $b1 = l0 cmp -1L;

        if $b1 != 0 goto label2;

        r1 = virtualinvoke r0.<com.android.camera.CameraActivity: java.lang.String getString(int)>(2131230773);

        goto label5;

     label2:
        $b2 = l0 cmp -2L;

        if $b2 != 0 goto label3;

        r1 = virtualinvoke r0.<com.android.camera.CameraActivity: java.lang.String getString(int)>(2131230774);

        goto label5;

     label3:
        $b3 = l0 cmp -3L;

        if $b3 != 0 goto label4;

        r1 = virtualinvoke r0.<com.android.camera.CameraActivity: java.lang.String getString(int)>(2131230775);

        goto label5;

     label4:
        $b4 = l0 cmp 50000000L;

        if $b4 > 0 goto label5;

        r1 = virtualinvoke r0.<com.android.camera.CameraActivity: java.lang.String getString(int)>(2131230878);

     label5:
        if r1 == null goto label8;

        $r5 = <com.android.camera.CameraActivity: com.android.camera.debug.Log$Tag TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Storage warning: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void w(com.android.camera.debug.Log$Tag,java.lang.String)>($r5, $r8);

        $r10 = r0.<com.android.camera.CameraActivity: com.android.camera.OnScreenHint mStorageHint>;

        if $r10 != null goto label6;

        $r13 = staticinvoke <com.android.camera.OnScreenHint: com.android.camera.OnScreenHint makeText(android.app.Activity,java.lang.CharSequence)>(r0, r1);

        r0.<com.android.camera.CameraActivity: com.android.camera.OnScreenHint mStorageHint> = $r13;

        goto label7;

     label6:
        $r9 = r0.<com.android.camera.CameraActivity: com.android.camera.OnScreenHint mStorageHint>;

        virtualinvoke $r9.<com.android.camera.OnScreenHint: void setText(java.lang.CharSequence)>(r1);

     label7:
        $r12 = r0.<com.android.camera.CameraActivity: com.android.camera.OnScreenHint mStorageHint>;

        virtualinvoke $r12.<com.android.camera.OnScreenHint: void show()>();

        $r11 = staticinvoke <com.android.camera.util.UsageStatistics: com.android.camera.util.UsageStatistics instance()>();

        virtualinvoke $r11.<com.android.camera.util.UsageStatistics: void storageWarning(long)>(l0);

        goto label9;

     label8:
        $r2 = r0.<com.android.camera.CameraActivity: com.android.camera.OnScreenHint mStorageHint>;

        if $r2 == null goto label9;

        $r3 = r0.<com.android.camera.CameraActivity: com.android.camera.OnScreenHint mStorageHint>;

        virtualinvoke $r3.<com.android.camera.OnScreenHint: void cancel()>();

        r0.<com.android.camera.CameraActivity: com.android.camera.OnScreenHint mStorageHint> = null;

     label9:
        return;
    }

    protected void setResultEx(int)
    {
        com.android.camera.CameraActivity r0;
        int i0;

        r0 := @this: com.android.camera.CameraActivity;

        i0 := @parameter0: int;

        r0.<com.android.camera.CameraActivity: int mResultCodeForTesting> = i0;

        virtualinvoke r0.<com.android.camera.CameraActivity: void setResult(int)>(i0);

        return;
    }

    protected void setResultEx(int, android.content.Intent)
    {
        com.android.camera.CameraActivity r0;
        int i0;
        android.content.Intent r1;

        r0 := @this: com.android.camera.CameraActivity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        r0.<com.android.camera.CameraActivity: int mResultCodeForTesting> = i0;

        r0.<com.android.camera.CameraActivity: android.content.Intent mResultDataForTesting> = r1;

        virtualinvoke r0.<com.android.camera.CameraActivity: void setResult(int,android.content.Intent)>(i0, r1);

        return;
    }

    public int getResultCode()
    {
        com.android.camera.CameraActivity r0;
        int $i0;

        r0 := @this: com.android.camera.CameraActivity;

        $i0 = r0.<com.android.camera.CameraActivity: int mResultCodeForTesting>;

        return $i0;
    }

    public android.content.Intent getResultData()
    {
        com.android.camera.CameraActivity r0;
        android.content.Intent $r1;

        r0 := @this: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: android.content.Intent mResultDataForTesting>;

        return $r1;
    }

    public boolean isSecureCamera()
    {
        com.android.camera.CameraActivity r0;
        boolean $z0;

        r0 := @this: com.android.camera.CameraActivity;

        $z0 = r0.<com.android.camera.CameraActivity: boolean mSecureCamera>;

        return $z0;
    }

    public boolean isPaused()
    {
        com.android.camera.CameraActivity r0;
        boolean $z0;

        r0 := @this: com.android.camera.CameraActivity;

        $z0 = r0.<com.android.camera.CameraActivity: boolean mPaused>;

        return $z0;
    }

    public int getPreferredChildModeIndex(int)
    {
        com.android.camera.CameraActivity r0;
        int i0, $i1;
        boolean z0, $z1;
        android.content.res.Resources $r1, $r3;
        com.android.camera.settings.SettingsManager $r2;

        r0 := @this: com.android.camera.CameraActivity;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.camera.CameraActivity: android.content.res.Resources getResources()>();

        $i1 = virtualinvoke $r1.<android.content.res.Resources: int getInteger(int)>(2131361792);

        if i0 != $i1 goto label1;

        $r2 = r0.<com.android.camera.CameraActivity: com.android.camera.settings.SettingsManager mSettingsManager>;

        z0 = staticinvoke <com.android.camera.settings.Keys: boolean isHdrPlusOn(com.android.camera.settings.SettingsManager)>($r2);

        if z0 == 0 goto label1;

        $z1 = staticinvoke <com.android.camera.util.GcamHelper: boolean hasGcamAsSeparateModule()>();

        if $z1 == 0 goto label1;

        $r3 = virtualinvoke r0.<com.android.camera.CameraActivity: android.content.res.Resources getResources()>();

        i0 = virtualinvoke $r3.<android.content.res.Resources: int getInteger(int)>(2131361797);

     label1:
        return i0;
    }

    public void onModeSelected(int)
    {
        com.android.camera.CameraActivity r0;
        int i0, $i1, $i2, $i3, $i4, i5;
        android.content.res.Resources $r1, $r11;
        com.android.camera.settings.SettingsManager $r2, $r12;
        com.android.camera.CameraModule $r3, $r4, $r6, $r9, $r10;
        com.android.camera.app.CameraAppUI $r5, $r7, $r8;

        r0 := @this: com.android.camera.CameraActivity;

        i0 := @parameter0: int;

        $i1 = r0.<com.android.camera.CameraActivity: int mCurrentModeIndex>;

        if $i1 != i0 goto label1;

        return;

     label1:
        staticinvoke <android.util.CameraPerformanceTracker: void onEvent(int)>(3);

        $r1 = virtualinvoke r0.<com.android.camera.CameraActivity: android.content.res.Resources getResources()>();

        $i2 = virtualinvoke $r1.<android.content.res.Resources: int getInteger(int)>(2131361792);

        if i0 == $i2 goto label2;

        $r11 = virtualinvoke r0.<com.android.camera.CameraActivity: android.content.res.Resources getResources()>();

        $i4 = virtualinvoke $r11.<android.content.res.Resources: int getInteger(int)>(2131361797);

        if i0 != $i4 goto label3;

     label2:
        $r2 = r0.<com.android.camera.CameraActivity: com.android.camera.settings.SettingsManager mSettingsManager>;

        virtualinvoke $r2.<com.android.camera.settings.SettingsManager: void set(java.lang.String,java.lang.String,int)>("default_scope", "pref_camera_module_last_used_index", i0);

     label3:
        $r3 = r0.<com.android.camera.CameraActivity: com.android.camera.CameraModule mCurrentModule>;

        specialinvoke r0.<com.android.camera.CameraActivity: void closeModule(com.android.camera.CameraModule)>($r3);

        i5 = virtualinvoke r0.<com.android.camera.CameraActivity: int getPreferredChildModeIndex(int)>(i0);

        specialinvoke r0.<com.android.camera.CameraActivity: void setModuleFromModeIndex(int)>(i5);

        $r5 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        $r4 = r0.<com.android.camera.CameraActivity: com.android.camera.CameraModule mCurrentModule>;

        virtualinvoke $r5.<com.android.camera.app.CameraAppUI: void resetBottomControls(com.android.camera.module.ModuleController,int)>($r4, i5);

        $r7 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        $r6 = r0.<com.android.camera.CameraActivity: com.android.camera.CameraModule mCurrentModule>;

        virtualinvoke $r7.<com.android.camera.app.CameraAppUI: void addShutterListener(com.android.camera.ShutterButton$OnShutterButtonListener)>($r6);

        $r8 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        virtualinvoke $r8.<com.android.camera.app.CameraAppUI: void hideLetterboxing()>();

        $r9 = r0.<com.android.camera.CameraActivity: com.android.camera.CameraModule mCurrentModule>;

        specialinvoke r0.<com.android.camera.CameraActivity: void openModule(com.android.camera.CameraModule)>($r9);

        $r10 = r0.<com.android.camera.CameraActivity: com.android.camera.CameraModule mCurrentModule>;

        $i3 = r0.<com.android.camera.CameraActivity: int mLastRawOrientation>;

        virtualinvoke $r10.<com.android.camera.CameraModule: void onOrientationChanged(int)>($i3);

        $r12 = r0.<com.android.camera.CameraActivity: com.android.camera.settings.SettingsManager mSettingsManager>;

        virtualinvoke $r12.<com.android.camera.settings.SettingsManager: void set(java.lang.String,java.lang.String,int)>("default_scope", "camera.startup_module", i5);

        return;
    }

    public void onSettingsSelected()
    {
        com.android.camera.CameraActivity r0;
        android.content.Intent r1, $r3;
        com.android.camera.util.UsageStatistics $r2;

        r0 := @this: com.android.camera.CameraActivity;

        $r2 = staticinvoke <com.android.camera.util.UsageStatistics: com.android.camera.util.UsageStatistics instance()>();

        virtualinvoke $r2.<com.android.camera.util.UsageStatistics: void controlUsed(int)>(10000);

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "com/android/camera/settings/CameraSettingsActivity");

        r1 = $r3;

        virtualinvoke r0.<com.android.camera.CameraActivity: void startActivity(android.content.Intent)>(r1);

        return;
    }

    public void freezeScreenUntilPreviewReady()
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.app.CameraAppUI $r1;

        r0 := @this: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        virtualinvoke $r1.<com.android.camera.app.CameraAppUI: void freezeScreenUntilPreviewReady()>();

        return;
    }

    private void setModuleFromModeIndex(int)
    {
        com.android.camera.CameraActivity r0;
        int i0, $i1;
        com.android.camera.app.ModuleManager$ModuleAgent r1;
        com.android.camera.app.ModuleManagerImpl $r2;
        boolean $z0;
        com.android.camera.module.ModuleController $r3;
        com.android.camera.CameraModule $r4;
        com.android.camera.app.CameraController $r5;

        r0 := @this: com.android.camera.CameraActivity;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.camera.CameraActivity: com.android.camera.app.ModuleManagerImpl mModuleManager>;

        r1 = virtualinvoke $r2.<com.android.camera.app.ModuleManagerImpl: com.android.camera.app.ModuleManager$ModuleAgent getModuleAgent(int)>(i0);

        if r1 != null goto label1;

        return;

     label1:
        $z0 = interfaceinvoke r1.<com.android.camera.app.ModuleManager$ModuleAgent: boolean requestAppForCamera()>();

        if $z0 != 0 goto label2;

        $r5 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraController mCameraController>;

        virtualinvoke $r5.<com.android.camera.app.CameraController: void closeCamera(boolean)>(1);

     label2:
        $i1 = interfaceinvoke r1.<com.android.camera.app.ModuleManager$ModuleAgent: int getModuleId()>();

        r0.<com.android.camera.CameraActivity: int mCurrentModeIndex> = $i1;

        $r3 = interfaceinvoke r1.<com.android.camera.app.ModuleManager$ModuleAgent: com.android.camera.module.ModuleController createModule(com.android.camera.app.AppController)>(r0);

        $r4 = (com.android.camera.CameraModule) $r3;

        r0.<com.android.camera.CameraActivity: com.android.camera.CameraModule mCurrentModule> = $r4;

        return;
    }

    public com.android.camera.settings.SettingsManager getSettingsManager()
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.settings.SettingsManager $r1;

        r0 := @this: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.settings.SettingsManager mSettingsManager>;

        return $r1;
    }

    public com.android.camera.app.CameraServices getServices()
    {
        com.android.camera.CameraActivity r0;
        android.app.Application $r1;
        com.android.camera.app.CameraServices $r2;

        r0 := @this: com.android.camera.CameraActivity;

        $r1 = virtualinvoke r0.<com.android.camera.CameraActivity: android.app.Application getApplication()>();

        $r2 = (com.android.camera.app.CameraServices) $r1;

        return $r2;
    }

    public java.util.List getSupportedModeNames()
    {
        com.android.camera.CameraActivity r0;
        java.util.List r1;
        java.util.ArrayList r2, $r7;
        java.util.Iterator r3;
        java.lang.Integer r4;
        java.lang.String r5;
        com.android.camera.app.ModuleManagerImpl $r6;
        boolean $z0, $z1;
        java.lang.Object $r8;
        int $i0;
        android.content.Context $r9;

        r0 := @this: com.android.camera.CameraActivity;

        $r6 = r0.<com.android.camera.CameraActivity: com.android.camera.app.ModuleManagerImpl mModuleManager>;

        r1 = virtualinvoke $r6.<com.android.camera.app.ModuleManagerImpl: java.util.List getSupportedModeIndexList()>();

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r2 = $r7;

        r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.Integer) $r8;

        $i0 = virtualinvoke r4.<java.lang.Integer: int intValue()>();

        $r9 = r0.<com.android.camera.CameraActivity: android.content.Context mAppContext>;

        r5 = staticinvoke <com.android.camera.util.CameraUtil: java.lang.String getCameraModeText(int,android.content.Context)>($i0, $r9);

        if r5 == null goto label2;

        $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z1 != 0 goto label2;

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r5);

     label2:
        goto label1;

     label3:
        return r2;
    }

    public com.android.camera.ButtonManager getButtonManager()
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.ButtonManager $r1, $r2, $r3;

        r0 := @this: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.ButtonManager mButtonManager>;

        if $r1 != null goto label1;

        $r3 = new com.android.camera.ButtonManager;

        specialinvoke $r3.<com.android.camera.ButtonManager: void <init>(com.android.camera.app.AppController)>(r0);

        r0.<com.android.camera.CameraActivity: com.android.camera.ButtonManager mButtonManager> = $r3;

     label1:
        $r2 = r0.<com.android.camera.CameraActivity: com.android.camera.ButtonManager mButtonManager>;

        return $r2;
    }

    public com.android.camera.SoundPlayer getSoundPlayer()
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.SoundPlayer $r1;

        r0 := @this: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.SoundPlayer mSoundPlayer>;

        return $r1;
    }

    public android.app.AlertDialog getFirstTimeLocationAlert()
    {
        com.android.camera.CameraActivity r0;
        android.app.AlertDialog$Builder r1, $r2, r5;
        com.android.camera.CameraActivity$21 $r3;
        android.app.AlertDialog $r4;

        r0 := @this: com.android.camera.CameraActivity;

        $r2 = new android.app.AlertDialog$Builder;

        specialinvoke $r2.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);

        r1 = $r2;

        $r3 = new com.android.camera.CameraActivity$21;

        specialinvoke $r3.<com.android.camera.CameraActivity$21: void <init>(com.android.camera.CameraActivity)>(r0);

        r5 = staticinvoke <com.android.camera.settings.SettingsUtil: android.app.AlertDialog$Builder getFirstTimeLocationAlertBuilder(android.app.AlertDialog$Builder,com.android.camera.util.Callback)>(r1, $r3);

        if r5 == null goto label1;

        $r4 = virtualinvoke r5.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();

        return $r4;

     label1:
        return null;
    }

    public void launchEditor(com.android.camera.data.LocalData)
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.data.LocalData r1;
        android.content.Intent r2, $r5, $r8, $r11;
        java.lang.String r4, $r7;
        android.net.Uri $r6;
        android.content.ActivityNotFoundException $r9;
        android.content.res.Resources $r10;

        r0 := @this: com.android.camera.CameraActivity;

        r1 := @parameter0: com.android.camera.data.LocalData;

        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.EDIT");

        $r6 = interfaceinvoke r1.<com.android.camera.data.LocalData: android.net.Uri getUri()>();

        $r7 = interfaceinvoke r1.<com.android.camera.data.LocalData: java.lang.String getMimeType()>();

        $r8 = virtualinvoke $r5.<android.content.Intent: android.content.Intent setDataAndType(android.net.Uri,java.lang.String)>($r6, $r7);

        r2 = virtualinvoke $r8.<android.content.Intent: android.content.Intent setFlags(int)>(1);

     label1:
        virtualinvoke r0.<com.android.camera.CameraActivity: void launchActivityByIntent(android.content.Intent)>(r2);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        $r10 = virtualinvoke r0.<com.android.camera.CameraActivity: android.content.res.Resources getResources()>();

        r4 = virtualinvoke $r10.<android.content.res.Resources: java.lang.String getString(int)>(2131231107);

        $r11 = staticinvoke <android.content.Intent: android.content.Intent createChooser(android.content.Intent,java.lang.CharSequence)>(r2, r4);

        virtualinvoke r0.<com.android.camera.CameraActivity: void launchActivityByIntent(android.content.Intent)>($r11);

     label4:
        return;

        catch android.content.ActivityNotFoundException from label1 to label2 with label3;
    }

    public void onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu$ContextMenuInfo)
    {
        com.android.camera.CameraActivity r0;
        android.view.ContextMenu r1;
        android.view.View r2;
        android.view.ContextMenu$ContextMenuInfo r3;
        android.view.MenuInflater r4;

        r0 := @this: com.android.camera.CameraActivity;

        r1 := @parameter0: android.view.ContextMenu;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.view.ContextMenu$ContextMenuInfo;

        specialinvoke r0.<android.app.Activity: void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo)>(r1, r2, r3);

        r4 = virtualinvoke r0.<com.android.camera.CameraActivity: android.view.MenuInflater getMenuInflater()>();

        virtualinvoke r4.<android.view.MenuInflater: void inflate(int,android.view.Menu)>(2131755008, r1);

        return;
    }

    public boolean onContextItemSelected(android.view.MenuItem)
    {
        com.android.camera.CameraActivity r0;
        android.view.MenuItem r1;
        int $i0;
        com.android.camera.app.CameraAppUI$BottomPanel$Listener $r2, $r3;

        r0 := @this: com.android.camera.CameraActivity;

        r1 := @parameter0: android.view.MenuItem;

        $i0 = interfaceinvoke r1.<android.view.MenuItem: int getItemId()>();

        lookupswitch($i0)
        {
            case 2131624052: goto label1;
            case 2131624053: goto label2;
            default: goto label3;
        };

     label1:
        $r3 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI$BottomPanel$Listener mMyFilmstripBottomControlListener>;

        interfaceinvoke $r3.<com.android.camera.app.CameraAppUI$BottomPanel$Listener: void onTinyPlanet()>();

        return 1;

     label2:
        $r2 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI$BottomPanel$Listener mMyFilmstripBottomControlListener>;

        interfaceinvoke $r2.<com.android.camera.app.CameraAppUI$BottomPanel$Listener: void onEdit()>();

        return 1;

     label3:
        return 0;
    }

    public void launchTinyPlanetEditor(com.android.camera.data.LocalData)
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.data.LocalData r1;
        com.android.camera.tinyplanet.TinyPlanetFragment r2, $r4;
        android.os.Bundle r3, $r5;
        android.net.Uri $r6;
        java.lang.String $r7, $r8;
        android.app.FragmentManager $r9;

        r0 := @this: com.android.camera.CameraActivity;

        r1 := @parameter0: com.android.camera.data.LocalData;

        $r4 = new com.android.camera.tinyplanet.TinyPlanetFragment;

        specialinvoke $r4.<com.android.camera.tinyplanet.TinyPlanetFragment: void <init>()>();

        r2 = $r4;

        $r5 = new android.os.Bundle;

        specialinvoke $r5.<android.os.Bundle: void <init>()>();

        r3 = $r5;

        $r6 = interfaceinvoke r1.<com.android.camera.data.LocalData: android.net.Uri getUri()>();

        $r7 = virtualinvoke $r6.<android.net.Uri: java.lang.String toString()>();

        virtualinvoke r3.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("uri", $r7);

        $r8 = interfaceinvoke r1.<com.android.camera.data.LocalData: java.lang.String getTitle()>();

        virtualinvoke r3.<android.os.Bundle: void putString(java.lang.String,java.lang.String)>("title", $r8);

        virtualinvoke r2.<com.android.camera.tinyplanet.TinyPlanetFragment: void setArguments(android.os.Bundle)>(r3);

        $r9 = virtualinvoke r0.<com.android.camera.CameraActivity: android.app.FragmentManager getFragmentManager()>();

        virtualinvoke r2.<com.android.camera.tinyplanet.TinyPlanetFragment: void show(android.app.FragmentManager,java.lang.String)>($r9, "tiny_planet");

        return;
    }

    private int currentUserInterfaceMode()
    {
        com.android.camera.CameraActivity r0;
        short s0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        android.content.res.Resources $r1, $r2, $r3, $r4, $r5, $r6;
        boolean $z0;

        r0 := @this: com.android.camera.CameraActivity;

        s0 = 10000;

        $i1 = r0.<com.android.camera.CameraActivity: int mCurrentModeIndex>;

        $r1 = virtualinvoke r0.<com.android.camera.CameraActivity: android.content.res.Resources getResources()>();

        $i2 = virtualinvoke $r1.<android.content.res.Resources: int getInteger(int)>(2131361792);

        if $i1 != $i2 goto label1;

        s0 = 10000;

     label1:
        $i3 = r0.<com.android.camera.CameraActivity: int mCurrentModeIndex>;

        $r2 = virtualinvoke r0.<com.android.camera.CameraActivity: android.content.res.Resources getResources()>();

        $i4 = virtualinvoke $r2.<android.content.res.Resources: int getInteger(int)>(2131361793);

        if $i3 != $i4 goto label2;

        s0 = 10000;

     label2:
        $i5 = r0.<com.android.camera.CameraActivity: int mCurrentModeIndex>;

        $r3 = virtualinvoke r0.<com.android.camera.CameraActivity: android.content.res.Resources getResources()>();

        $i6 = virtualinvoke $r3.<android.content.res.Resources: int getInteger(int)>(2131361794);

        if $i5 != $i6 goto label3;

        s0 = 10000;

     label3:
        $i7 = r0.<com.android.camera.CameraActivity: int mCurrentModeIndex>;

        $r4 = virtualinvoke r0.<com.android.camera.CameraActivity: android.content.res.Resources getResources()>();

        $i8 = virtualinvoke $r4.<android.content.res.Resources: int getInteger(int)>(2131361797);

        if $i7 != $i8 goto label4;

        s0 = 10000;

     label4:
        $i9 = r0.<com.android.camera.CameraActivity: int mCurrentModeIndex>;

        $r5 = virtualinvoke r0.<com.android.camera.CameraActivity: android.content.res.Resources getResources()>();

        $i11 = virtualinvoke $r5.<android.content.res.Resources: int getInteger(int)>(2131361795);

        if $i9 != $i11 goto label5;

        s0 = 10000;

     label5:
        $i10 = r0.<com.android.camera.CameraActivity: int mCurrentModeIndex>;

        $r6 = virtualinvoke r0.<com.android.camera.CameraActivity: android.content.res.Resources getResources()>();

        $i12 = virtualinvoke $r6.<android.content.res.Resources: int getInteger(int)>(2131361796);

        if $i10 != $i12 goto label6;

        s0 = 10000;

     label6:
        $z0 = r0.<com.android.camera.CameraActivity: boolean mFilmstripVisible>;

        if $z0 == 0 goto label7;

        s0 = 10000;

     label7:
        return s0;
    }

    private void openModule(com.android.camera.CameraModule)
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.CameraModule r1;
        boolean $z0, $z1;
        com.android.camera.settings.SettingsManager $r2;
        com.android.camera.util.UsageStatistics $r3;
        int $i0;
        java.lang.Integer $r4;

        r0 := @this: com.android.camera.CameraActivity;

        r1 := @parameter0: com.android.camera.CameraModule;

        $z0 = virtualinvoke r0.<com.android.camera.CameraActivity: boolean isSecureCamera()>();

        $z1 = specialinvoke r0.<com.android.camera.CameraActivity: boolean isCaptureIntent()>();

        virtualinvoke r1.<com.android.camera.CameraModule: void init(com.android.camera.CameraActivity,boolean,boolean)>(r0, $z0, $z1);

        $r2 = r0.<com.android.camera.CameraActivity: com.android.camera.settings.SettingsManager mSettingsManager>;

        virtualinvoke r1.<com.android.camera.CameraModule: void hardResetSettings(com.android.camera.settings.SettingsManager)>($r2);

        virtualinvoke r1.<com.android.camera.CameraModule: void resume()>();

        $r3 = staticinvoke <com.android.camera.util.UsageStatistics: com.android.camera.util.UsageStatistics instance()>();

        $i0 = specialinvoke r0.<com.android.camera.CameraActivity: int currentUserInterfaceMode()>();

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10000);

        virtualinvoke $r3.<com.android.camera.util.UsageStatistics: void changeScreen(int,java.lang.Integer)>($i0, $r4);

        specialinvoke r0.<com.android.camera.CameraActivity: void updatePreviewVisibility()>();

        return;
    }

    private void closeModule(com.android.camera.CameraModule)
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.CameraModule r1;
        com.android.camera.app.CameraAppUI $r2;

        r0 := @this: com.android.camera.CameraActivity;

        r1 := @parameter0: com.android.camera.CameraModule;

        virtualinvoke r1.<com.android.camera.CameraModule: void pause()>();

        $r2 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        virtualinvoke $r2.<com.android.camera.app.CameraAppUI: void clearModuleUI()>();

        return;
    }

    private void performDeletion()
    {
        com.android.camera.CameraActivity r0;
        boolean $z0;
        com.android.camera.data.LocalDataAdapter $r1;

        r0 := @this: com.android.camera.CameraActivity;

        $z0 = r0.<com.android.camera.CameraActivity: boolean mPendingDeletion>;

        if $z0 != 0 goto label1;

        return;

     label1:
        specialinvoke r0.<com.android.camera.CameraActivity: void hideUndoDeletionBar(boolean)>(0);

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.data.LocalDataAdapter mDataAdapter>;

        interfaceinvoke $r1.<com.android.camera.data.LocalDataAdapter: boolean executeDeletion()>();

        return;
    }

    public void showUndoDeletionBar()
    {
        com.android.camera.CameraActivity r0;
        android.view.ViewGroup r1, $r4, $r5, $r6, $r7, $r15, $r17, $r18;
        android.view.View r2, $r14, $r16;
        boolean $z0;
        com.android.camera.debug.Log$Tag $r3;
        android.view.ViewPropertyAnimator $r8, $r9, $r10, $r11;
        android.view.LayoutInflater $r12;
        android.widget.FrameLayout $r13;
        com.android.camera.CameraActivity$22 $r19;
        com.android.camera.CameraActivity$23 $r20;

        r0 := @this: com.android.camera.CameraActivity;

        $z0 = r0.<com.android.camera.CameraActivity: boolean mPendingDeletion>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.camera.CameraActivity: void performDeletion()>();

     label1:
        $r3 = <com.android.camera.CameraActivity: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void v(com.android.camera.debug.Log$Tag,java.lang.String)>($r3, "showing undo bar");

        r0.<com.android.camera.CameraActivity: boolean mPendingDeletion> = 1;

        $r4 = r0.<com.android.camera.CameraActivity: android.view.ViewGroup mUndoDeletionBar>;

        if $r4 != null goto label2;

        $r12 = virtualinvoke r0.<com.android.camera.CameraActivity: android.view.LayoutInflater getLayoutInflater()>();

        $r13 = r0.<com.android.camera.CameraActivity: android.widget.FrameLayout mAboveFilmstripControlLayout>;

        $r14 = virtualinvoke $r12.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>(2130968615, $r13, 1);

        r1 = (android.view.ViewGroup) $r14;

        $r16 = virtualinvoke r1.<android.view.ViewGroup: android.view.View findViewById(int)>(2131624043);

        $r15 = (android.view.ViewGroup) $r16;

        r0.<com.android.camera.CameraActivity: android.view.ViewGroup mUndoDeletionBar> = $r15;

        $r17 = r0.<com.android.camera.CameraActivity: android.view.ViewGroup mUndoDeletionBar>;

        r2 = virtualinvoke $r17.<android.view.ViewGroup: android.view.View findViewById(int)>(2131624044);

        $r19 = new com.android.camera.CameraActivity$22;

        specialinvoke $r19.<com.android.camera.CameraActivity$22: void <init>(com.android.camera.CameraActivity)>(r0);

        virtualinvoke r2.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>($r19);

        $r18 = r0.<com.android.camera.CameraActivity: android.view.ViewGroup mUndoDeletionBar>;

        virtualinvoke $r18.<android.view.ViewGroup: void setClickable(boolean)>(1);

        $r20 = new com.android.camera.CameraActivity$23;

        specialinvoke $r20.<com.android.camera.CameraActivity$23: void <init>(com.android.camera.CameraActivity)>(r0);

        virtualinvoke r2.<android.view.View: void setOnTouchListener(android.view.View$OnTouchListener)>($r20);

     label2:
        $r5 = r0.<com.android.camera.CameraActivity: android.view.ViewGroup mUndoDeletionBar>;

        virtualinvoke $r5.<android.view.ViewGroup: void setAlpha(float)>(0.0F);

        $r6 = r0.<com.android.camera.CameraActivity: android.view.ViewGroup mUndoDeletionBar>;

        virtualinvoke $r6.<android.view.ViewGroup: void setVisibility(int)>(0);

        $r7 = r0.<com.android.camera.CameraActivity: android.view.ViewGroup mUndoDeletionBar>;

        $r8 = virtualinvoke $r7.<android.view.ViewGroup: android.view.ViewPropertyAnimator animate()>();

        $r9 = virtualinvoke $r8.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>(200L);

        $r10 = virtualinvoke $r9.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alpha(float)>(1.0F);

        $r11 = virtualinvoke $r10.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setListener(android.animation.Animator$AnimatorListener)>(null);

        virtualinvoke $r11.<android.view.ViewPropertyAnimator: void start()>();

        return;
    }

    private void hideUndoDeletionBar(boolean)
    {
        com.android.camera.CameraActivity r0;
        boolean z0;
        com.android.camera.debug.Log$Tag $r1;
        android.view.ViewGroup $r2, $r3, $r4;
        android.view.ViewPropertyAnimator $r5, $r6, $r7, $r9;
        com.android.camera.CameraActivity$24 $r8;

        r0 := @this: com.android.camera.CameraActivity;

        z0 := @parameter0: boolean;

        $r1 = <com.android.camera.CameraActivity: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void v(com.android.camera.debug.Log$Tag,java.lang.String)>($r1, "Hiding undo deletion bar");

        r0.<com.android.camera.CameraActivity: boolean mPendingDeletion> = 0;

        $r2 = r0.<com.android.camera.CameraActivity: android.view.ViewGroup mUndoDeletionBar>;

        if $r2 == null goto label2;

        if z0 == 0 goto label1;

        $r4 = r0.<com.android.camera.CameraActivity: android.view.ViewGroup mUndoDeletionBar>;

        $r5 = virtualinvoke $r4.<android.view.ViewGroup: android.view.ViewPropertyAnimator animate()>();

        $r6 = virtualinvoke $r5.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>(200L);

        $r7 = virtualinvoke $r6.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alpha(float)>(0.0F);

        $r8 = new com.android.camera.CameraActivity$24;

        specialinvoke $r8.<com.android.camera.CameraActivity$24: void <init>(com.android.camera.CameraActivity)>(r0);

        $r9 = virtualinvoke $r7.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setListener(android.animation.Animator$AnimatorListener)>($r8);

        virtualinvoke $r9.<android.view.ViewPropertyAnimator: void start()>();

        goto label2;

     label1:
        $r3 = r0.<com.android.camera.CameraActivity: android.view.ViewGroup mUndoDeletionBar>;

        virtualinvoke $r3.<android.view.ViewGroup: void setVisibility(int)>(8);

     label2:
        return;
    }

    public void onOrientationChanged(int)
    {
        com.android.camera.CameraActivity r0;
        int i0;
        com.android.camera.CameraModule $r1, $r2;

        r0 := @this: com.android.camera.CameraActivity;

        i0 := @parameter0: int;

        if i0 != -1 goto label1;

        return;

     label1:
        r0.<com.android.camera.CameraActivity: int mLastRawOrientation> = i0;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.CameraModule mCurrentModule>;

        if $r1 == null goto label2;

        $r2 = r0.<com.android.camera.CameraActivity: com.android.camera.CameraModule mCurrentModule>;

        virtualinvoke $r2.<com.android.camera.CameraModule: void onOrientationChanged(int)>(i0);

     label2:
        return;
    }

    public void setSwipingEnabled(boolean)
    {
        com.android.camera.CameraActivity r0;
        boolean z0, $z1;

        r0 := @this: com.android.camera.CameraActivity;

        z0 := @parameter0: boolean;

        $z1 = specialinvoke r0.<com.android.camera.CameraActivity: boolean isCaptureIntent()>();

        if $z1 == 0 goto label1;

     label1:
        return;
    }

    public long getFirstPreviewTime()
    {
        com.android.camera.CameraActivity r0;
        long l0, $l2, $l3;
        com.android.camera.CameraModule $r1;
        boolean $z0;
        com.android.camera.app.CameraAppUI $r2;
        byte $b1;

        r0 := @this: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.CameraModule mCurrentModule>;

        $z0 = $r1 instanceof com.android.camera.PhotoModule;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI getCameraAppUI()>();

        l0 = virtualinvoke $r2.<com.android.camera.app.CameraAppUI: long getCoverHiddenTime()>();

        $b1 = l0 cmp -1L;

        if $b1 == 0 goto label1;

        $l2 = r0.<com.android.camera.CameraActivity: long mOnCreateTime>;

        $l3 = l0 - $l2;

        return $l3;

     label1:
        return -1L;
    }

    public long getAutoFocusTime()
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.CameraModule $r1, $r2;
        boolean $z0;
        com.android.camera.PhotoModule $r3;
        long $l0;

        r0 := @this: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.CameraModule mCurrentModule>;

        $z0 = $r1 instanceof com.android.camera.PhotoModule;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.camera.CameraActivity: com.android.camera.CameraModule mCurrentModule>;

        $r3 = (com.android.camera.PhotoModule) $r2;

        $l0 = $r3.<com.android.camera.PhotoModule: long mAutoFocusTime>;

        goto label2;

     label1:
        $l0 = -1L;

     label2:
        return $l0;
    }

    public long getShutterLag()
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.CameraModule $r1, $r2;
        boolean $z0;
        com.android.camera.PhotoModule $r3;
        long $l0;

        r0 := @this: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.CameraModule mCurrentModule>;

        $z0 = $r1 instanceof com.android.camera.PhotoModule;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.camera.CameraActivity: com.android.camera.CameraModule mCurrentModule>;

        $r3 = (com.android.camera.PhotoModule) $r2;

        $l0 = $r3.<com.android.camera.PhotoModule: long mShutterLag>;

        goto label2;

     label1:
        $l0 = -1L;

     label2:
        return $l0;
    }

    public long getShutterToPictureDisplayedTime()
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.CameraModule $r1, $r2;
        boolean $z0;
        com.android.camera.PhotoModule $r3;
        long $l0;

        r0 := @this: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.CameraModule mCurrentModule>;

        $z0 = $r1 instanceof com.android.camera.PhotoModule;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.camera.CameraActivity: com.android.camera.CameraModule mCurrentModule>;

        $r3 = (com.android.camera.PhotoModule) $r2;

        $l0 = $r3.<com.android.camera.PhotoModule: long mShutterToPictureDisplayedTime>;

        goto label2;

     label1:
        $l0 = -1L;

     label2:
        return $l0;
    }

    public long getPictureDisplayedToJpegCallbackTime()
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.CameraModule $r1, $r2;
        boolean $z0;
        com.android.camera.PhotoModule $r3;
        long $l0;

        r0 := @this: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.CameraModule mCurrentModule>;

        $z0 = $r1 instanceof com.android.camera.PhotoModule;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.camera.CameraActivity: com.android.camera.CameraModule mCurrentModule>;

        $r3 = (com.android.camera.PhotoModule) $r2;

        $l0 = $r3.<com.android.camera.PhotoModule: long mPictureDisplayedToJpegCallbackTime>;

        goto label2;

     label1:
        $l0 = -1L;

     label2:
        return $l0;
    }

    public long getJpegCallbackFinishTime()
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.CameraModule $r1, $r2;
        boolean $z0;
        com.android.camera.PhotoModule $r3;
        long $l0;

        r0 := @this: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.CameraModule mCurrentModule>;

        $z0 = $r1 instanceof com.android.camera.PhotoModule;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.camera.CameraActivity: com.android.camera.CameraModule mCurrentModule>;

        $r3 = (com.android.camera.PhotoModule) $r2;

        $l0 = $r3.<com.android.camera.PhotoModule: long mJpegCallbackFinishTime>;

        goto label2;

     label1:
        $l0 = -1L;

     label2:
        return $l0;
    }

    public long getCaptureStartTime()
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.CameraModule $r1, $r2;
        boolean $z0;
        com.android.camera.PhotoModule $r3;
        long $l0;

        r0 := @this: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.CameraModule mCurrentModule>;

        $z0 = $r1 instanceof com.android.camera.PhotoModule;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.camera.CameraActivity: com.android.camera.CameraModule mCurrentModule>;

        $r3 = (com.android.camera.PhotoModule) $r2;

        $l0 = $r3.<com.android.camera.PhotoModule: long mCaptureStartTime>;

        goto label2;

     label1:
        $l0 = -1L;

     label2:
        return $l0;
    }

    public boolean isRecording()
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.CameraModule $r1, $r2;
        boolean $z0, $z1;
        com.android.camera.VideoModule $r3;

        r0 := @this: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.CameraModule mCurrentModule>;

        $z0 = $r1 instanceof com.android.camera.VideoModule;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.camera.CameraActivity: com.android.camera.CameraModule mCurrentModule>;

        $r3 = (com.android.camera.VideoModule) $r2;

        $z1 = virtualinvoke $r3.<com.android.camera.VideoModule: boolean isRecording()>();

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public com.android.ex.camera2.portability.CameraAgent$CameraOpenCallback getCameraOpenErrorCallback()
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.app.CameraController $r1;

        r0 := @this: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraController mCameraController>;

        return $r1;
    }

    public com.android.camera.CameraModule getCurrentModule()
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.CameraModule $r1;

        r0 := @this: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.CameraModule mCurrentModule>;

        return $r1;
    }

    public void showTutorial(com.android.camera.ui.AbstractTutorialOverlay)
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.ui.AbstractTutorialOverlay r1;
        com.android.camera.app.CameraAppUI $r2;
        android.view.LayoutInflater $r3;

        r0 := @this: com.android.camera.CameraActivity;

        r1 := @parameter0: com.android.camera.ui.AbstractTutorialOverlay;

        $r2 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        $r3 = virtualinvoke r0.<com.android.camera.CameraActivity: android.view.LayoutInflater getLayoutInflater()>();

        virtualinvoke $r2.<com.android.camera.app.CameraAppUI: void showTutorial(com.android.camera.ui.AbstractTutorialOverlay,android.view.LayoutInflater)>(r1, $r3);

        return;
    }

    public void showErrorAndFinish(int)
    {
        com.android.camera.CameraActivity r0;
        int i0;

        r0 := @this: com.android.camera.CameraActivity;

        i0 := @parameter0: int;

        staticinvoke <com.android.camera.util.CameraUtil: void showErrorAndFinish(android.app.Activity,int)>(r0, i0);

        return;
    }

    public void syncLocationManagerSetting()
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.app.LocationManager $r1;
        com.android.camera.settings.SettingsManager $r2;

        r0 := @this: com.android.camera.CameraActivity;

        $r2 = r0.<com.android.camera.CameraActivity: com.android.camera.settings.SettingsManager mSettingsManager>;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.app.LocationManager mLocationManager>;

        staticinvoke <com.android.camera.settings.Keys: void syncLocationManager(com.android.camera.settings.SettingsManager,com.android.camera.app.LocationManager)>($r2, $r1);

        return;
    }

    private void keepScreenOnForAWhile()
    {
        com.android.camera.CameraActivity r0;
        boolean $z0;
        android.os.Handler $r1, $r3;
        android.view.Window $r2;

        r0 := @this: com.android.camera.CameraActivity;

        $z0 = r0.<com.android.camera.CameraActivity: boolean mKeepScreenOn>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r1 = r0.<com.android.camera.CameraActivity: android.os.Handler mMainHandler>;

        virtualinvoke $r1.<android.os.Handler: void removeMessages(int)>(2);

        $r2 = virtualinvoke r0.<com.android.camera.CameraActivity: android.view.Window getWindow()>();

        virtualinvoke $r2.<android.view.Window: void addFlags(int)>(128);

        $r3 = r0.<com.android.camera.CameraActivity: android.os.Handler mMainHandler>;

        virtualinvoke $r3.<android.os.Handler: boolean sendEmptyMessageDelayed(int,long)>(2, 120000L);

        return;
    }

    private void resetScreenOn()
    {
        com.android.camera.CameraActivity r0;
        android.os.Handler $r1;
        android.view.Window $r2;

        r0 := @this: com.android.camera.CameraActivity;

        r0.<com.android.camera.CameraActivity: boolean mKeepScreenOn> = 0;

        $r1 = r0.<com.android.camera.CameraActivity: android.os.Handler mMainHandler>;

        virtualinvoke $r1.<android.os.Handler: void removeMessages(int)>(2);

        $r2 = virtualinvoke r0.<com.android.camera.CameraActivity: android.view.Window getWindow()>();

        virtualinvoke $r2.<android.view.Window: void clearFlags(int)>(128);

        return;
    }

    private boolean startGallery()
    {
        com.android.camera.CameraActivity r0;
        android.content.Intent r1, $r3, $r6, $r7;
        int i0;
        com.android.camera.data.LocalData r2;
        com.android.camera.util.UsageStatistics $r4;
        java.lang.Integer $r5;
        com.android.camera.filmstrip.FilmstripController $r8;
        com.android.camera.data.LocalDataAdapter $r9;
        android.net.Uri $r10;
        android.content.ActivityNotFoundException $r11;
        com.android.camera.debug.Log$Tag $r12;

        r0 := @this: com.android.camera.CameraActivity;

        $r3 = r0.<com.android.camera.CameraActivity: android.content.Intent mGalleryIntent>;

        if $r3 != null goto label1;

        return 0;

     label1:
        $r4 = staticinvoke <com.android.camera.util.UsageStatistics: com.android.camera.util.UsageStatistics instance()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10000);

        virtualinvoke $r4.<com.android.camera.util.UsageStatistics: void changeScreen(int,java.lang.Integer)>(10000, $r5);

        $r6 = new android.content.Intent;

        $r7 = r0.<com.android.camera.CameraActivity: android.content.Intent mGalleryIntent>;

        specialinvoke $r6.<android.content.Intent: void <init>(android.content.Intent)>($r7);

        r1 = $r6;

        $r8 = r0.<com.android.camera.CameraActivity: com.android.camera.filmstrip.FilmstripController mFilmstripController>;

        i0 = interfaceinvoke $r8.<com.android.camera.filmstrip.FilmstripController: int getCurrentId()>();

        $r9 = r0.<com.android.camera.CameraActivity: com.android.camera.data.LocalDataAdapter mDataAdapter>;

        r2 = interfaceinvoke $r9.<com.android.camera.data.LocalDataAdapter: com.android.camera.data.LocalData getLocalData(int)>(i0);

        if r2 == null goto label2;

        $r10 = interfaceinvoke r2.<com.android.camera.data.LocalData: android.net.Uri getUri()>();

        staticinvoke <com.android.camera.util.GalleryHelper: void setContentUri(android.content.Intent,android.net.Uri)>(r1, $r10);

     label2:
        virtualinvoke r0.<com.android.camera.CameraActivity: void launchActivityByIntent(android.content.Intent)>(r1);

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

        $r12 = <com.android.camera.CameraActivity: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void w(com.android.camera.debug.Log$Tag,java.lang.String)>($r12, "Failed to launch gallery activity, closing");

     label5:
        return 0;

        catch android.content.ActivityNotFoundException from label1 to label3 with label4;
    }

    private void setNfcBeamPushUriFromData(com.android.camera.data.LocalData)
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.data.LocalData r1;
        android.net.Uri r2, $r3;
        android.net.Uri[] $r4, $r5;

        r0 := @this: com.android.camera.CameraActivity;

        r1 := @parameter0: com.android.camera.data.LocalData;

        r2 = interfaceinvoke r1.<com.android.camera.data.LocalData: android.net.Uri getUri()>();

        $r3 = <android.net.Uri: android.net.Uri EMPTY>;

        if r2 == $r3 goto label1;

        $r5 = r0.<com.android.camera.CameraActivity: android.net.Uri[] mNfcPushUris>;

        $r5[0] = r2;

        goto label2;

     label1:
        $r4 = r0.<com.android.camera.CameraActivity: android.net.Uri[] mNfcPushUris>;

        $r4[0] = null;

     label2:
        return;
    }

    private void updateUiByData(int)
    {
        com.android.camera.CameraActivity r0;
        int i0;
        com.android.camera.data.LocalData r1;
        com.android.camera.data.LocalDataAdapter $r2, $r3, $r4;
        boolean $z0, $z1;
        com.android.camera.app.CameraAppUI $r6;
        com.android.camera.app.CameraAppUI$BottomPanel $r7;
        com.android.camera.debug.Log$Tag $r8;

        r0 := @this: com.android.camera.CameraActivity;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.camera.CameraActivity: com.android.camera.data.LocalDataAdapter mDataAdapter>;

        r1 = interfaceinvoke $r2.<com.android.camera.data.LocalDataAdapter: com.android.camera.data.LocalData getLocalData(int)>(i0);

        if r1 != null goto label1;

        $r8 = <com.android.camera.CameraActivity: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void w(com.android.camera.debug.Log$Tag,java.lang.String)>($r8, "Current data ID not found.");

        specialinvoke r0.<com.android.camera.CameraActivity: void hideSessionProgress()>();

        return;

     label1:
        specialinvoke r0.<com.android.camera.CameraActivity: void updateActionBarMenu(com.android.camera.data.LocalData)>(r1);

        specialinvoke r0.<com.android.camera.CameraActivity: void updateBottomControlsByData(com.android.camera.data.LocalData)>(r1);

        $z0 = virtualinvoke r0.<com.android.camera.CameraActivity: boolean isSecureCamera()>();

        if $z0 == 0 goto label2;

        $r6 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        $r7 = virtualinvoke $r6.<com.android.camera.app.CameraAppUI: com.android.camera.app.CameraAppUI$BottomPanel getFilmstripBottomControls()>();

        interfaceinvoke $r7.<com.android.camera.app.CameraAppUI$BottomPanel: void hideControls()>();

        return;

     label2:
        specialinvoke r0.<com.android.camera.CameraActivity: void setNfcBeamPushUriFromData(com.android.camera.data.LocalData)>(r1);

        $r3 = r0.<com.android.camera.CameraActivity: com.android.camera.data.LocalDataAdapter mDataAdapter>;

        $z1 = interfaceinvoke $r3.<com.android.camera.data.LocalDataAdapter: boolean isMetadataUpdated(int)>(i0);

        if $z1 != 0 goto label3;

        $r4 = r0.<com.android.camera.CameraActivity: com.android.camera.data.LocalDataAdapter mDataAdapter>;

        interfaceinvoke $r4.<com.android.camera.data.LocalDataAdapter: android.os.AsyncTask updateMetadata(int)>(i0);

     label3:
        return;
    }

    private void updateBottomControlsByData(com.android.camera.data.LocalData)
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.data.LocalData r1;
        com.android.camera.app.CameraAppUI$BottomPanel r2;
        android.net.Uri r3;
        com.android.camera.session.CaptureSessionManager r4;
        com.android.camera.session.CaptureSession r5;
        int i0;
        java.lang.CharSequence r6, $r9;
        com.android.camera.app.CameraAppUI $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        com.android.camera.app.CameraServices $r8;
        byte b1;

        r0 := @this: com.android.camera.CameraActivity;

        r1 := @parameter0: com.android.camera.data.LocalData;

        $r7 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        r2 = virtualinvoke $r7.<com.android.camera.app.CameraAppUI: com.android.camera.app.CameraAppUI$BottomPanel getFilmstripBottomControls()>();

        interfaceinvoke r2.<com.android.camera.app.CameraAppUI$BottomPanel: void showControls()>();

        $z0 = interfaceinvoke r1.<com.android.camera.data.LocalData: boolean isDataActionSupported(int)>(4);

        interfaceinvoke r2.<com.android.camera.app.CameraAppUI$BottomPanel: void setEditButtonVisibility(boolean)>($z0);

        $z1 = interfaceinvoke r1.<com.android.camera.data.LocalData: boolean isDataActionSupported(int)>(8);

        interfaceinvoke r2.<com.android.camera.app.CameraAppUI$BottomPanel: void setShareButtonVisibility(boolean)>($z1);

        $z2 = interfaceinvoke r1.<com.android.camera.data.LocalData: boolean isDataActionSupported(int)>(2);

        interfaceinvoke r2.<com.android.camera.app.CameraAppUI$BottomPanel: void setDeleteButtonVisibility(boolean)>($z2);

        r3 = interfaceinvoke r1.<com.android.camera.data.LocalData: android.net.Uri getUri()>();

        $r8 = virtualinvoke r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraServices getServices()>();

        r4 = interfaceinvoke $r8.<com.android.camera.app.CameraServices: com.android.camera.session.CaptureSessionManager getCaptureSessionManager()>();

        $z3 = interfaceinvoke r4.<com.android.camera.session.CaptureSessionManager: boolean hasErrorMessage(android.net.Uri)>(r3);

        if $z3 == 0 goto label1;

        $r9 = interfaceinvoke r4.<com.android.camera.session.CaptureSessionManager: java.lang.CharSequence getErrorMesage(android.net.Uri)>(r3);

        specialinvoke r0.<com.android.camera.CameraActivity: void showProcessError(java.lang.CharSequence)>($r9);

        goto label5;

     label1:
        interfaceinvoke r2.<com.android.camera.app.CameraAppUI$BottomPanel: void hideProgressError()>();

        r5 = interfaceinvoke r4.<com.android.camera.session.CaptureSessionManager: com.android.camera.session.CaptureSession getSession(android.net.Uri)>(r3);

        if r5 == null goto label4;

        i0 = interfaceinvoke r5.<com.android.camera.session.CaptureSession: int getProgress()>();

        if i0 >= 0 goto label2;

        specialinvoke r0.<com.android.camera.CameraActivity: void hideSessionProgress()>();

        goto label3;

     label2:
        r6 = interfaceinvoke r5.<com.android.camera.session.CaptureSession: java.lang.CharSequence getProgressMessage()>();

        specialinvoke r0.<com.android.camera.CameraActivity: void showSessionProgress(java.lang.CharSequence)>(r6);

        specialinvoke r0.<com.android.camera.CameraActivity: void updateSessionProgress(int)>(i0);

     label3:
        goto label5;

     label4:
        specialinvoke r0.<com.android.camera.CameraActivity: void hideSessionProgress()>();

     label5:
        $z5 = staticinvoke <com.android.camera.data.PanoramaMetadataLoader: boolean isPanoramaAndUseViewer(com.android.camera.data.LocalData)>(r1);

        if $z5 == 0 goto label6;

        b1 = 1;

        goto label8;

     label6:
        $z4 = staticinvoke <com.android.camera.data.RgbzMetadataLoader: boolean hasRGBZData(com.android.camera.data.LocalData)>(r1);

        if $z4 == 0 goto label7;

        b1 = 2;

        goto label8;

     label7:
        b1 = 0;

     label8:
        $z6 = staticinvoke <com.android.camera.data.PanoramaMetadataLoader: boolean isPanorama360(com.android.camera.data.LocalData)>(r1);

        interfaceinvoke r2.<com.android.camera.app.CameraAppUI$BottomPanel: void setTinyPlanetEnabled(boolean)>($z6);

        interfaceinvoke r2.<com.android.camera.app.CameraAppUI$BottomPanel: void setViewerButtonVisibility(int)>(b1);

        return;
    }

    private void showDetailsDialog(int)
    {
        com.android.camera.CameraActivity r0;
        int i0;
        com.android.camera.data.LocalData r1;
        com.android.camera.data.MediaDetails r2;
        android.app.Dialog r3;
        com.android.camera.data.LocalDataAdapter $r4;
        android.content.Context $r5;
        com.android.camera.util.UsageStatistics $r6;
        java.lang.String $r7;
        float $f0;

        r0 := @this: com.android.camera.CameraActivity;

        i0 := @parameter0: int;

        $r4 = r0.<com.android.camera.CameraActivity: com.android.camera.data.LocalDataAdapter mDataAdapter>;

        r1 = interfaceinvoke $r4.<com.android.camera.data.LocalDataAdapter: com.android.camera.data.LocalData getLocalData(int)>(i0);

        if r1 != null goto label1;

        return;

     label1:
        $r5 = virtualinvoke r0.<com.android.camera.CameraActivity: android.content.Context getAndroidContext()>();

        r2 = interfaceinvoke r1.<com.android.camera.data.LocalData: com.android.camera.data.MediaDetails getMediaDetails(android.content.Context)>($r5);

        if r2 != null goto label2;

        return;

     label2:
        r3 = staticinvoke <com.android.camera.ui.DetailsDialog: android.app.Dialog create(android.content.Context,com.android.camera.data.MediaDetails)>(r0, r2);

        virtualinvoke r3.<android.app.Dialog: void show()>();

        $r6 = staticinvoke <com.android.camera.util.UsageStatistics: com.android.camera.util.UsageStatistics instance()>();

        $r7 = specialinvoke r0.<com.android.camera.CameraActivity: java.lang.String fileNameFromDataID(int)>(i0);

        $f0 = specialinvoke r0.<com.android.camera.CameraActivity: float fileAgeFromDataID(int)>(i0);

        virtualinvoke $r6.<com.android.camera.util.UsageStatistics: void mediaInteraction(java.lang.String,int,int,float)>($r7, 10000, 10000, $f0);

        return;
    }

    private void updateActionBarMenu(com.android.camera.data.LocalData)
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.data.LocalData r1;
        android.view.MenuItem r2;
        int i0;
        boolean z0, $z1;
        android.view.Menu $r3, $r4;

        r0 := @this: com.android.camera.CameraActivity;

        r1 := @parameter0: com.android.camera.data.LocalData;

        $r3 = r0.<com.android.camera.CameraActivity: android.view.Menu mActionBarMenu>;

        if $r3 != null goto label1;

        return;

     label1:
        $r4 = r0.<com.android.camera.CameraActivity: android.view.Menu mActionBarMenu>;

        r2 = interfaceinvoke $r4.<android.view.Menu: android.view.MenuItem findItem(int)>(2131624054);

        if r2 != null goto label2;

        return;

     label2:
        i0 = interfaceinvoke r1.<com.android.camera.data.LocalData: int getLocalDataType()>();

        if i0 == 3 goto label3;

        if i0 != 4 goto label4;

     label3:
        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        z0 = $z1;

        interfaceinvoke r2.<android.view.MenuItem: android.view.MenuItem setVisible(boolean)>(z0);

        return;
    }

    static com.android.camera.util.PhotoSphereHelper$PanoramaViewHelper access$000(com.android.camera.CameraActivity)
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.util.PhotoSphereHelper$PanoramaViewHelper $r1;

        r0 := @parameter0: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.util.PhotoSphereHelper$PanoramaViewHelper mPanoramaViewHelper>;

        return $r1;
    }

    static com.android.camera.debug.Log$Tag access$100()
    {
        com.android.camera.debug.Log$Tag $r0;

        $r0 = <com.android.camera.CameraActivity: com.android.camera.debug.Log$Tag TAG>;

        return $r0;
    }

    static com.android.camera.settings.SettingsManager access$200(com.android.camera.CameraActivity)
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.settings.SettingsManager $r1;

        r0 := @parameter0: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.settings.SettingsManager mSettingsManager>;

        return $r1;
    }

    static com.android.camera.app.CameraAppUI access$300(com.android.camera.CameraActivity)
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.app.CameraAppUI $r1;

        r0 := @parameter0: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI mCameraAppUI>;

        return $r1;
    }

    static java.lang.String access$400(com.android.camera.CameraActivity, int)
    {
        com.android.camera.CameraActivity r0;
        int i0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.camera.CameraActivity;

        i0 := @parameter1: int;

        $r1 = specialinvoke r0.<com.android.camera.CameraActivity: java.lang.String fileNameFromDataID(int)>(i0);

        return $r1;
    }

    static float access$500(com.android.camera.CameraActivity, int)
    {
        com.android.camera.CameraActivity r0;
        int i0;
        float $f0;

        r0 := @parameter0: com.android.camera.CameraActivity;

        i0 := @parameter1: int;

        $f0 = specialinvoke r0.<com.android.camera.CameraActivity: float fileAgeFromDataID(int)>(i0);

        return $f0;
    }

    static void access$600(com.android.camera.CameraActivity, int)
    {
        com.android.camera.CameraActivity r0;
        int i0;

        r0 := @parameter0: com.android.camera.CameraActivity;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.camera.CameraActivity: void removeData(int)>(i0);

        return;
    }

    static com.android.camera.filmstrip.FilmstripController access$800(com.android.camera.CameraActivity)
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.filmstrip.FilmstripController $r1;

        r0 := @parameter0: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.filmstrip.FilmstripController mFilmstripController>;

        return $r1;
    }

    static com.android.camera.data.LocalDataAdapter access$900(com.android.camera.CameraActivity)
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.data.LocalDataAdapter $r1;

        r0 := @parameter0: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.data.LocalDataAdapter mDataAdapter>;

        return $r1;
    }

    static void access$1000(com.android.camera.CameraActivity, com.android.camera.data.LocalData)
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.data.LocalData r1;

        r0 := @parameter0: com.android.camera.CameraActivity;

        r1 := @parameter1: com.android.camera.data.LocalData;

        specialinvoke r0.<com.android.camera.CameraActivity: void updateBottomControlsByData(com.android.camera.data.LocalData)>(r1);

        return;
    }

    static boolean access$1100(com.android.camera.CameraActivity)
    {
        com.android.camera.CameraActivity r0;
        boolean $z0;

        r0 := @parameter0: com.android.camera.CameraActivity;

        $z0 = r0.<com.android.camera.CameraActivity: boolean mPaused>;

        return $z0;
    }

    static android.app.ActionBar access$1200(com.android.camera.CameraActivity)
    {
        com.android.camera.CameraActivity r0;
        android.app.ActionBar $r1;

        r0 := @parameter0: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: android.app.ActionBar mActionBar>;

        return $r1;
    }

    static boolean access$1302(com.android.camera.CameraActivity, boolean)
    {
        com.android.camera.CameraActivity r0;
        boolean z0;

        r0 := @parameter0: com.android.camera.CameraActivity;

        z0 := @parameter1: boolean;

        r0.<com.android.camera.CameraActivity: boolean mFilmstripCoversPreview> = z0;

        return z0;
    }

    static void access$1400(com.android.camera.CameraActivity)
    {
        com.android.camera.CameraActivity r0;

        r0 := @parameter0: com.android.camera.CameraActivity;

        specialinvoke r0.<com.android.camera.CameraActivity: void updatePreviewVisibility()>();

        return;
    }

    static boolean access$1502(com.android.camera.CameraActivity, boolean)
    {
        com.android.camera.CameraActivity r0;
        boolean z0;

        r0 := @parameter0: com.android.camera.CameraActivity;

        z0 := @parameter1: boolean;

        r0.<com.android.camera.CameraActivity: boolean mFilmstripVisible> = z0;

        return z0;
    }

    static int access$1600(com.android.camera.CameraActivity)
    {
        com.android.camera.CameraActivity r0;
        int $i0;

        r0 := @parameter0: com.android.camera.CameraActivity;

        $i0 = specialinvoke r0.<com.android.camera.CameraActivity: int currentUserInterfaceMode()>();

        return $i0;
    }

    static void access$1700(com.android.camera.CameraActivity, boolean)
    {
        com.android.camera.CameraActivity r0;
        boolean z0;

        r0 := @parameter0: com.android.camera.CameraActivity;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.camera.CameraActivity: void setFilmstripUiVisibility(boolean)>(z0);

        return;
    }

    static void access$1800(com.android.camera.CameraActivity, int)
    {
        com.android.camera.CameraActivity r0;
        int i0;

        r0 := @parameter0: com.android.camera.CameraActivity;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.camera.CameraActivity: void updateUiByData(int)>(i0);

        return;
    }

    static boolean access$1500(com.android.camera.CameraActivity)
    {
        com.android.camera.CameraActivity r0;
        boolean $z0;

        r0 := @parameter0: com.android.camera.CameraActivity;

        $z0 = r0.<com.android.camera.CameraActivity: boolean mFilmstripVisible>;

        return $z0;
    }

    static com.android.camera.widget.Preloader access$1900(com.android.camera.CameraActivity)
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.widget.Preloader $r1;

        r0 := @parameter0: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.widget.Preloader mPreloader>;

        return $r1;
    }

    static android.net.Uri[] access$2000(com.android.camera.CameraActivity)
    {
        com.android.camera.CameraActivity r0;
        android.net.Uri[] $r1;

        r0 := @parameter0: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: android.net.Uri[] mNfcPushUris>;

        return $r1;
    }

    static void access$2100(com.android.camera.CameraActivity, int)
    {
        com.android.camera.CameraActivity r0;
        int i0;

        r0 := @parameter0: com.android.camera.CameraActivity;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.camera.CameraActivity: void updateSessionProgress(int)>(i0);

        return;
    }

    static void access$2200(com.android.camera.CameraActivity, java.lang.CharSequence)
    {
        com.android.camera.CameraActivity r0;
        java.lang.CharSequence r1;

        r0 := @parameter0: com.android.camera.CameraActivity;

        r1 := @parameter1: java.lang.CharSequence;

        specialinvoke r0.<com.android.camera.CameraActivity: void updateSessionProgressText(java.lang.CharSequence)>(r1);

        return;
    }

    static com.android.camera.CameraModule access$2300(com.android.camera.CameraActivity)
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.CameraModule $r1;

        r0 := @parameter0: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.CameraModule mCurrentModule>;

        return $r1;
    }

    static void access$2400(com.android.camera.CameraActivity, com.android.camera.data.LocalData, java.lang.String)
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.data.LocalData r1;
        java.lang.String r2;

        r0 := @parameter0: com.android.camera.CameraActivity;

        r1 := @parameter1: com.android.camera.data.LocalData;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<com.android.camera.CameraActivity: void startPeekAnimation(com.android.camera.data.LocalData,java.lang.String)>(r1, r2);

        return;
    }

    static void access$2500(com.android.camera.CameraActivity, java.lang.CharSequence)
    {
        com.android.camera.CameraActivity r0;
        java.lang.CharSequence r1;

        r0 := @parameter0: com.android.camera.CameraActivity;

        r1 := @parameter1: java.lang.CharSequence;

        specialinvoke r0.<com.android.camera.CameraActivity: void showProcessError(java.lang.CharSequence)>(r1);

        return;
    }

    static boolean access$2602(com.android.camera.CameraActivity, boolean)
    {
        com.android.camera.CameraActivity r0;
        boolean z0;

        r0 := @parameter0: com.android.camera.CameraActivity;

        z0 := @parameter1: boolean;

        r0.<com.android.camera.CameraActivity: boolean mModeListVisible> = z0;

        return z0;
    }

    static void access$2700(com.android.camera.CameraActivity)
    {
        com.android.camera.CameraActivity r0;

        r0 := @parameter0: com.android.camera.CameraActivity;

        specialinvoke r0.<com.android.camera.CameraActivity: void fillTemporarySessions()>();

        return;
    }

    static boolean access$2800(com.android.camera.CameraActivity)
    {
        com.android.camera.CameraActivity r0;
        boolean $z0;

        r0 := @parameter0: com.android.camera.CameraActivity;

        $z0 = specialinvoke r0.<com.android.camera.CameraActivity: boolean startGallery()>();

        return $z0;
    }

    static com.android.camera.app.MemoryManager access$2900(com.android.camera.CameraActivity)
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.app.MemoryManager $r1;

        r0 := @parameter0: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.app.MemoryManager mMemoryManager>;

        return $r1;
    }

    static java.lang.Runnable access$3000(com.android.camera.CameraActivity)
    {
        com.android.camera.CameraActivity r0;
        java.lang.Runnable $r1;

        r0 := @parameter0: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: java.lang.Runnable mLightsOutRunnable>;

        return $r1;
    }

    static android.os.Handler access$3100(com.android.camera.CameraActivity)
    {
        com.android.camera.CameraActivity r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: android.os.Handler mMainHandler>;

        return $r1;
    }

    static java.lang.Object access$3200(com.android.camera.CameraActivity)
    {
        com.android.camera.CameraActivity r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: java.lang.Object mStorageSpaceLock>;

        return $r1;
    }

    static long access$3302(com.android.camera.CameraActivity, long)
    {
        com.android.camera.CameraActivity r0;
        long l0;

        r0 := @parameter0: com.android.camera.CameraActivity;

        l0 := @parameter1: long;

        r0.<com.android.camera.CameraActivity: long mStorageSpaceBytes> = l0;

        return l0;
    }

    static long access$3300(com.android.camera.CameraActivity)
    {
        com.android.camera.CameraActivity r0;
        long $l0;

        r0 := @parameter0: com.android.camera.CameraActivity;

        $l0 = r0.<com.android.camera.CameraActivity: long mStorageSpaceBytes>;

        return $l0;
    }

    static com.android.camera.app.LocationManager access$3400(com.android.camera.CameraActivity)
    {
        com.android.camera.CameraActivity r0;
        com.android.camera.app.LocationManager $r1;

        r0 := @parameter0: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: com.android.camera.app.LocationManager mLocationManager>;

        return $r1;
    }

    static void access$3500(com.android.camera.CameraActivity, boolean)
    {
        com.android.camera.CameraActivity r0;
        boolean z0;

        r0 := @parameter0: com.android.camera.CameraActivity;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.camera.CameraActivity: void hideUndoDeletionBar(boolean)>(z0);

        return;
    }

    static boolean access$3602(com.android.camera.CameraActivity, boolean)
    {
        com.android.camera.CameraActivity r0;
        boolean z0;

        r0 := @parameter0: com.android.camera.CameraActivity;

        z0 := @parameter1: boolean;

        r0.<com.android.camera.CameraActivity: boolean mIsUndoingDeletion> = z0;

        return z0;
    }

    static android.view.ViewGroup access$3700(com.android.camera.CameraActivity)
    {
        com.android.camera.CameraActivity r0;
        android.view.ViewGroup $r1;

        r0 := @parameter0: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: android.view.ViewGroup mUndoDeletionBar>;

        return $r1;
    }

    static android.widget.FrameLayout access$3800(com.android.camera.CameraActivity)
    {
        com.android.camera.CameraActivity r0;
        android.widget.FrameLayout $r1;

        r0 := @parameter0: com.android.camera.CameraActivity;

        $r1 = r0.<com.android.camera.CameraActivity: android.widget.FrameLayout mAboveFilmstripControlLayout>;

        return $r1;
    }

    static void <clinit>()
    {
        com.android.camera.debug.Log$Tag $r0;

        <com.android.camera.CameraActivity: int LIGHTS_OUT_DELAY_MS> = 4000;

        <com.android.camera.CameraActivity: int FILMSTRIP_PRELOAD_AHEAD_ITEMS> = 10;

        <com.android.camera.CameraActivity: int MAX_PEEK_BITMAP_PIXELS> = 1600000;

        <com.android.camera.CameraActivity: long SCREEN_DELAY_MS> = 120000L;

        <com.android.camera.CameraActivity: int MSG_CLEAR_SCREEN_ON_FLAG> = 2;

        <com.android.camera.CameraActivity: java.lang.String CAMERA_SCOPE_PREFIX> = "_preferences_camera_";

        <com.android.camera.CameraActivity: java.lang.String MODULE_SCOPE_PREFIX> = "_preferences_module_";

        <com.android.camera.CameraActivity: java.lang.String SECURE_CAMERA_EXTRA> = "secure_camera";

        <com.android.camera.CameraActivity: java.lang.String ACTION_IMAGE_CAPTURE_SECURE> = "android.media.action.IMAGE_CAPTURE_SECURE";

        <com.android.camera.CameraActivity: java.lang.String INTENT_ACTION_STILL_IMAGE_CAMERA_SECURE> = "android.media.action.STILL_IMAGE_CAMERA_SECURE";

        $r0 = new com.android.camera.debug.Log$Tag;

        specialinvoke $r0.<com.android.camera.debug.Log$Tag: void <init>(java.lang.String)>("CameraActivity");

        <com.android.camera.CameraActivity: com.android.camera.debug.Log$Tag TAG> = $r0;

        return;
    }
}
