public class com.android.camera.drawable.TextDrawable extends android.graphics.drawable.Drawable
{
    private static final int DEFAULT_COLOR;
    private static final int DEFAULT_TEXTSIZE;
    private android.graphics.Paint mPaint;
    private java.lang.CharSequence mText;
    private int mIntrinsicWidth;
    private int mIntrinsicHeight;
    private boolean mUseDropShadow;

    public void <init>(android.content.res.Resources)
    {
        com.android.camera.drawable.TextDrawable r0;
        android.content.res.Resources r1;

        r0 := @this: com.android.camera.drawable.TextDrawable;

        r1 := @parameter0: android.content.res.Resources;

        specialinvoke r0.<com.android.camera.drawable.TextDrawable: void <init>(android.content.res.Resources,java.lang.CharSequence)>(r1, "");

        return;
    }

    public void <init>(android.content.res.Resources, java.lang.CharSequence)
    {
        com.android.camera.drawable.TextDrawable r0;
        android.content.res.Resources r1;
        java.lang.CharSequence r2, $r5, $r7;
        float f0, $f1;
        android.util.DisplayMetrics $r3;
        android.graphics.Paint $r4, $r6, $r8;
        int $i0, $i1, $i2;
        double $d0, $d1;

        r0 := @this: com.android.camera.drawable.TextDrawable;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: java.lang.CharSequence;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        r0.<com.android.camera.drawable.TextDrawable: java.lang.CharSequence mText> = r2;

        specialinvoke r0.<com.android.camera.drawable.TextDrawable: void updatePaint()>();

        $r3 = virtualinvoke r1.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        f0 = staticinvoke <android.util.TypedValue: float applyDimension(int,float,android.util.DisplayMetrics)>(2, 15.0F, $r3);

        $r4 = r0.<com.android.camera.drawable.TextDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r4.<android.graphics.Paint: void setTextSize(float)>(f0);

        $r6 = r0.<com.android.camera.drawable.TextDrawable: android.graphics.Paint mPaint>;

        $r7 = r0.<com.android.camera.drawable.TextDrawable: java.lang.CharSequence mText>;

        $r5 = r0.<com.android.camera.drawable.TextDrawable: java.lang.CharSequence mText>;

        $i0 = interfaceinvoke $r5.<java.lang.CharSequence: int length()>();

        $f1 = virtualinvoke $r6.<android.graphics.Paint: float measureText(java.lang.CharSequence,int,int)>($r7, 0, $i0);

        $d0 = (double) $f1;

        $d1 = $d0 + 0.5;

        $i1 = (int) $d1;

        r0.<com.android.camera.drawable.TextDrawable: int mIntrinsicWidth> = $i1;

        $r8 = r0.<com.android.camera.drawable.TextDrawable: android.graphics.Paint mPaint>;

        $i2 = virtualinvoke $r8.<android.graphics.Paint: int getFontMetricsInt(android.graphics.Paint$FontMetricsInt)>(null);

        r0.<com.android.camera.drawable.TextDrawable: int mIntrinsicHeight> = $i2;

        return;
    }

    private void updatePaint()
    {
        com.android.camera.drawable.TextDrawable r0;
        android.graphics.Paint $r1, $r2, $r4, $r6, $r8, $r10, $r12, $r13;
        android.graphics.Paint$Align $r3;
        boolean $z0;
        android.graphics.Typeface $r5, $r9;

        r0 := @this: com.android.camera.drawable.TextDrawable;

        $r1 = r0.<com.android.camera.drawable.TextDrawable: android.graphics.Paint mPaint>;

        if $r1 != null goto label1;

        $r13 = new android.graphics.Paint;

        specialinvoke $r13.<android.graphics.Paint: void <init>(int)>(1);

        r0.<com.android.camera.drawable.TextDrawable: android.graphics.Paint mPaint> = $r13;

     label1:
        $r2 = r0.<com.android.camera.drawable.TextDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setColor(int)>(-1);

        $r4 = r0.<com.android.camera.drawable.TextDrawable: android.graphics.Paint mPaint>;

        $r3 = <android.graphics.Paint$Align: android.graphics.Paint$Align CENTER>;

        virtualinvoke $r4.<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>($r3);

        $z0 = r0.<com.android.camera.drawable.TextDrawable: boolean mUseDropShadow>;

        if $z0 == 0 goto label2;

        $r10 = r0.<com.android.camera.drawable.TextDrawable: android.graphics.Paint mPaint>;

        $r9 = <android.graphics.Typeface: android.graphics.Typeface DEFAULT_BOLD>;

        virtualinvoke $r10.<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>($r9);

        $r12 = r0.<com.android.camera.drawable.TextDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r12.<android.graphics.Paint: void setShadowLayer(float,float,float,int)>(10.0F, 0.0F, 0.0F, -16777216);

        goto label3;

     label2:
        $r6 = r0.<com.android.camera.drawable.TextDrawable: android.graphics.Paint mPaint>;

        $r5 = <android.graphics.Typeface: android.graphics.Typeface DEFAULT>;

        virtualinvoke $r6.<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>($r5);

        $r8 = r0.<com.android.camera.drawable.TextDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r8.<android.graphics.Paint: void setShadowLayer(float,float,float,int)>(0.0F, 0.0F, 0.0F, 0);

     label3:
        return;
    }

    public void setText(java.lang.CharSequence)
    {
        com.android.camera.drawable.TextDrawable r0;
        java.lang.CharSequence r1, $r2, $r4;
        android.graphics.Paint $r3, $r5;
        int $i0, $i1, $i2;
        float $f0;
        double $d0, $d1;

        r0 := @this: com.android.camera.drawable.TextDrawable;

        r1 := @parameter0: java.lang.CharSequence;

        r0.<com.android.camera.drawable.TextDrawable: java.lang.CharSequence mText> = r1;

        if r1 != null goto label1;

        r0.<com.android.camera.drawable.TextDrawable: int mIntrinsicWidth> = 0;

        r0.<com.android.camera.drawable.TextDrawable: int mIntrinsicHeight> = 0;

        goto label2;

     label1:
        $r3 = r0.<com.android.camera.drawable.TextDrawable: android.graphics.Paint mPaint>;

        $r4 = r0.<com.android.camera.drawable.TextDrawable: java.lang.CharSequence mText>;

        $r2 = r0.<com.android.camera.drawable.TextDrawable: java.lang.CharSequence mText>;

        $i0 = interfaceinvoke $r2.<java.lang.CharSequence: int length()>();

        $f0 = virtualinvoke $r3.<android.graphics.Paint: float measureText(java.lang.CharSequence,int,int)>($r4, 0, $i0);

        $d0 = (double) $f0;

        $d1 = $d0 + 0.5;

        $i1 = (int) $d1;

        r0.<com.android.camera.drawable.TextDrawable: int mIntrinsicWidth> = $i1;

        $r5 = r0.<com.android.camera.drawable.TextDrawable: android.graphics.Paint mPaint>;

        $i2 = virtualinvoke $r5.<android.graphics.Paint: int getFontMetricsInt(android.graphics.Paint$FontMetricsInt)>(null);

        r0.<com.android.camera.drawable.TextDrawable: int mIntrinsicHeight> = $i2;

     label2:
        return;
    }

    public void draw(android.graphics.Canvas)
    {
        com.android.camera.drawable.TextDrawable r0;
        android.graphics.Canvas r1;
        android.graphics.Rect r2;
        java.lang.CharSequence $r3, $r4, $r5;
        int $i0, $i1, $i2;
        float $f0, $f1;
        android.graphics.Paint $r6;

        r0 := @this: com.android.camera.drawable.TextDrawable;

        r1 := @parameter0: android.graphics.Canvas;

        $r3 = r0.<com.android.camera.drawable.TextDrawable: java.lang.CharSequence mText>;

        if $r3 == null goto label1;

        r2 = virtualinvoke r0.<com.android.camera.drawable.TextDrawable: android.graphics.Rect getBounds()>();

        $r5 = r0.<com.android.camera.drawable.TextDrawable: java.lang.CharSequence mText>;

        $r4 = r0.<com.android.camera.drawable.TextDrawable: java.lang.CharSequence mText>;

        $i0 = interfaceinvoke $r4.<java.lang.CharSequence: int length()>();

        $i1 = virtualinvoke r2.<android.graphics.Rect: int centerX()>();

        $f0 = (float) $i1;

        $i2 = virtualinvoke r2.<android.graphics.Rect: int centerY()>();

        $f1 = (float) $i2;

        $r6 = r0.<com.android.camera.drawable.TextDrawable: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.CharSequence,int,int,float,float,android.graphics.Paint)>($r5, 0, $i0, $f0, $f1, $r6);

     label1:
        return;
    }

    public void setDropShadow(boolean)
    {
        com.android.camera.drawable.TextDrawable r0;
        boolean z0;

        r0 := @this: com.android.camera.drawable.TextDrawable;

        z0 := @parameter0: boolean;

        r0.<com.android.camera.drawable.TextDrawable: boolean mUseDropShadow> = z0;

        specialinvoke r0.<com.android.camera.drawable.TextDrawable: void updatePaint()>();

        return;
    }

    public int getOpacity()
    {
        com.android.camera.drawable.TextDrawable r0;
        android.graphics.Paint $r1;
        int $i0;

        r0 := @this: com.android.camera.drawable.TextDrawable;

        $r1 = r0.<com.android.camera.drawable.TextDrawable: android.graphics.Paint mPaint>;

        $i0 = virtualinvoke $r1.<android.graphics.Paint: int getAlpha()>();

        return $i0;
    }

    public int getIntrinsicWidth()
    {
        com.android.camera.drawable.TextDrawable r0;
        int $i0;

        r0 := @this: com.android.camera.drawable.TextDrawable;

        $i0 = r0.<com.android.camera.drawable.TextDrawable: int mIntrinsicWidth>;

        return $i0;
    }

    public int getIntrinsicHeight()
    {
        com.android.camera.drawable.TextDrawable r0;
        int $i0;

        r0 := @this: com.android.camera.drawable.TextDrawable;

        $i0 = r0.<com.android.camera.drawable.TextDrawable: int mIntrinsicHeight>;

        return $i0;
    }

    public void setAlpha(int)
    {
        com.android.camera.drawable.TextDrawable r0;
        int i0;
        android.graphics.Paint $r1;

        r0 := @this: com.android.camera.drawable.TextDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.camera.drawable.TextDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r1.<android.graphics.Paint: void setAlpha(int)>(i0);

        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        com.android.camera.drawable.TextDrawable r0;
        android.graphics.ColorFilter r1;
        android.graphics.Paint $r2;

        r0 := @this: com.android.camera.drawable.TextDrawable;

        r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = r0.<com.android.camera.drawable.TextDrawable: android.graphics.Paint mPaint>;

        virtualinvoke $r2.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <com.android.camera.drawable.TextDrawable: int DEFAULT_TEXTSIZE> = 15;

        <com.android.camera.drawable.TextDrawable: int DEFAULT_COLOR> = -1;

        return;
    }
}
