public class android.util.CameraPerformanceTracker extends java.lang.Object
{
    public static final int ACTIVITY_START;
    public static final int ACTIVITY_PAUSE;
    public static final int ACTIVITY_RESUME;
    public static final int MODE_SWITCH_START;
    public static final int FIRST_PREVIEW_FRAME;
    public static final int UNSET;
    private static final java.lang.String TAG;
    private static final boolean DEBUG;
    private static android.util.CameraPerformanceTracker sInstance;
    private long mAppStartTime;
    private long mAppResumeTime;
    private long mModeSwitchStartTime;
    private long mFirstPreviewFrameLatencyColdStart;
    private long mFirstPreviewFrameLatencyWarmStart;
    private long mModeSwitchDuration;

    private void <init>()
    {
        android.util.CameraPerformanceTracker r0;

        r0 := @this: android.util.CameraPerformanceTracker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<android.util.CameraPerformanceTracker: long mAppStartTime> = -1L;

        r0.<android.util.CameraPerformanceTracker: long mAppResumeTime> = -1L;

        r0.<android.util.CameraPerformanceTracker: long mModeSwitchStartTime> = -1L;

        r0.<android.util.CameraPerformanceTracker: long mFirstPreviewFrameLatencyColdStart> = -1L;

        r0.<android.util.CameraPerformanceTracker: long mFirstPreviewFrameLatencyWarmStart> = -1L;

        r0.<android.util.CameraPerformanceTracker: long mModeSwitchDuration> = -1L;

        return;
    }

    public static void onEvent(int)
    {
        int i0;
        long l1, $l3, $l5, $l6, $l7, $l9, $l10, $l11, $l12;
        android.util.CameraPerformanceTracker $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        byte $b4, $b8;

        i0 := @parameter0: int;

        $r0 = <android.util.CameraPerformanceTracker: android.util.CameraPerformanceTracker sInstance>;

        if $r0 != null goto label1;

        $r13 = new android.util.CameraPerformanceTracker;

        specialinvoke $r13.<android.util.CameraPerformanceTracker: void <init>()>();

        <android.util.CameraPerformanceTracker: android.util.CameraPerformanceTracker sInstance> = $r13;

     label1:
        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        tableswitch(i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label8;
            case 4: goto label9;
            case 5: goto label5;
            default: goto label9;
        };

     label2:
        $r1 = <android.util.CameraPerformanceTracker: android.util.CameraPerformanceTracker sInstance>;

        $r1.<android.util.CameraPerformanceTracker: long mAppStartTime> = l1;

        goto label9;

     label3:
        $r14 = <android.util.CameraPerformanceTracker: android.util.CameraPerformanceTracker sInstance>;

        $r14.<android.util.CameraPerformanceTracker: long mFirstPreviewFrameLatencyWarmStart> = -1L;

        goto label9;

     label4:
        $r11 = <android.util.CameraPerformanceTracker: android.util.CameraPerformanceTracker sInstance>;

        $r11.<android.util.CameraPerformanceTracker: long mAppResumeTime> = l1;

        goto label9;

     label5:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CameraPerformanceTracker", "First preview frame received");

        $r2 = <android.util.CameraPerformanceTracker: android.util.CameraPerformanceTracker sInstance>;

        $l3 = $r2.<android.util.CameraPerformanceTracker: long mFirstPreviewFrameLatencyColdStart>;

        $b4 = $l3 cmp -1L;

        if $b4 != 0 goto label6;

        $r10 = <android.util.CameraPerformanceTracker: android.util.CameraPerformanceTracker sInstance>;

        $r9 = <android.util.CameraPerformanceTracker: android.util.CameraPerformanceTracker sInstance>;

        $l11 = $r9.<android.util.CameraPerformanceTracker: long mAppStartTime>;

        $l12 = l1 - $l11;

        $r10.<android.util.CameraPerformanceTracker: long mFirstPreviewFrameLatencyColdStart> = $l12;

        goto label7;

     label6:
        $r4 = <android.util.CameraPerformanceTracker: android.util.CameraPerformanceTracker sInstance>;

        $r3 = <android.util.CameraPerformanceTracker: android.util.CameraPerformanceTracker sInstance>;

        $l5 = $r3.<android.util.CameraPerformanceTracker: long mAppResumeTime>;

        $l6 = l1 - $l5;

        $r4.<android.util.CameraPerformanceTracker: long mFirstPreviewFrameLatencyWarmStart> = $l6;

     label7:
        $r5 = <android.util.CameraPerformanceTracker: android.util.CameraPerformanceTracker sInstance>;

        $l7 = $r5.<android.util.CameraPerformanceTracker: long mModeSwitchStartTime>;

        $b8 = $l7 cmp -1L;

        if $b8 == 0 goto label9;

        $r8 = <android.util.CameraPerformanceTracker: android.util.CameraPerformanceTracker sInstance>;

        $r6 = <android.util.CameraPerformanceTracker: android.util.CameraPerformanceTracker sInstance>;

        $l10 = $r6.<android.util.CameraPerformanceTracker: long mModeSwitchStartTime>;

        $l9 = l1 - $l10;

        $r8.<android.util.CameraPerformanceTracker: long mModeSwitchDuration> = $l9;

        $r7 = <android.util.CameraPerformanceTracker: android.util.CameraPerformanceTracker sInstance>;

        $r7.<android.util.CameraPerformanceTracker: long mModeSwitchStartTime> = -1L;

        goto label9;

     label8:
        $r12 = <android.util.CameraPerformanceTracker: android.util.CameraPerformanceTracker sInstance>;

        $r12.<android.util.CameraPerformanceTracker: long mModeSwitchStartTime> = l1;

        goto label9;

     label9:
        return;
    }

    public static long getColdStartLatency()
    {
        android.util.CameraPerformanceTracker $r0, $r1;
        long $l0;

        $r0 = <android.util.CameraPerformanceTracker: android.util.CameraPerformanceTracker sInstance>;

        if $r0 != null goto label1;

        return -1L;

     label1:
        $r1 = <android.util.CameraPerformanceTracker: android.util.CameraPerformanceTracker sInstance>;

        $l0 = $r1.<android.util.CameraPerformanceTracker: long mFirstPreviewFrameLatencyColdStart>;

        return $l0;
    }

    public static long getWarmStartLatency()
    {
        android.util.CameraPerformanceTracker $r0, $r1;
        long $l0;

        $r0 = <android.util.CameraPerformanceTracker: android.util.CameraPerformanceTracker sInstance>;

        if $r0 != null goto label1;

        return -1L;

     label1:
        $r1 = <android.util.CameraPerformanceTracker: android.util.CameraPerformanceTracker sInstance>;

        $l0 = $r1.<android.util.CameraPerformanceTracker: long mFirstPreviewFrameLatencyWarmStart>;

        return $l0;
    }

    public static long getModeSwitchDuration()
    {
        android.util.CameraPerformanceTracker $r0, $r1;
        long $l0;

        $r0 = <android.util.CameraPerformanceTracker: android.util.CameraPerformanceTracker sInstance>;

        if $r0 != null goto label1;

        return -1L;

     label1:
        $r1 = <android.util.CameraPerformanceTracker: android.util.CameraPerformanceTracker sInstance>;

        $l0 = $r1.<android.util.CameraPerformanceTracker: long mModeSwitchDuration>;

        return $l0;
    }

    public static void <clinit>()
    {
        <android.util.CameraPerformanceTracker: boolean DEBUG> = 0;

        <android.util.CameraPerformanceTracker: java.lang.String TAG> = "CameraPerformanceTracker";

        <android.util.CameraPerformanceTracker: int UNSET> = -1;

        <android.util.CameraPerformanceTracker: int FIRST_PREVIEW_FRAME> = 5;

        <android.util.CameraPerformanceTracker: int MODE_SWITCH_START> = 3;

        <android.util.CameraPerformanceTracker: int ACTIVITY_RESUME> = 2;

        <android.util.CameraPerformanceTracker: int ACTIVITY_PAUSE> = 1;

        <android.util.CameraPerformanceTracker: int ACTIVITY_START> = 0;

        return;
    }
}
