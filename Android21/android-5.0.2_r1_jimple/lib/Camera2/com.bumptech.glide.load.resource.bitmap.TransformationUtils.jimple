public class com.bumptech.glide.load.resource.bitmap.TransformationUtils extends java.lang.Object
{
    private static final java.lang.String TAG;
    public static final int PAINT_FLAGS;

    public void <init>()
    {
        com.bumptech.glide.load.resource.bitmap.TransformationUtils r0;

        r0 := @this: com.bumptech.glide.load.resource.bitmap.TransformationUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.graphics.Bitmap centerCrop(android.graphics.Bitmap, android.graphics.Bitmap, int, int)
    {
        android.graphics.Bitmap r0, r1, r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18;
        android.graphics.Matrix r2, $r6;
        android.graphics.Canvas r4, $r7;
        android.graphics.Paint r5, $r10;
        android.graphics.Bitmap$Config $r8, $r9;

        r0 := @parameter0: android.graphics.Bitmap;

        r1 := @parameter1: android.graphics.Bitmap;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        if r1 != null goto label1;

        return null;

     label1:
        $i2 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        if $i2 != i0 goto label2;

        $i13 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        if $i13 != i1 goto label2;

        return r1;

     label2:
        f1 = 0.0F;

        f2 = 0.0F;

        $r6 = new android.graphics.Matrix;

        specialinvoke $r6.<android.graphics.Matrix: void <init>()>();

        r2 = $r6;

        $i3 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        $i4 = $i3 * i1;

        $i5 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        $i6 = i0 * $i5;

        if $i4 <= $i6 goto label3;

        $f14 = (float) i1;

        $i11 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        $f13 = (float) $i11;

        f0 = $f14 / $f13;

        $f17 = (float) i0;

        $i12 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        $f15 = (float) $i12;

        $f16 = $f15 * f0;

        $f18 = $f17 - $f16;

        f1 = $f18 * 0.5F;

        goto label4;

     label3:
        $f3 = (float) i0;

        $i7 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        $f4 = (float) $i7;

        f0 = $f3 / $f4;

        $f5 = (float) i1;

        $i8 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        $f7 = (float) $i8;

        $f6 = $f7 * f0;

        $f8 = $f5 - $f6;

        f2 = $f8 * 0.5F;

     label4:
        virtualinvoke r2.<android.graphics.Matrix: void setScale(float,float)>(f0, f0);

        $i9 = (int) f1;

        $f9 = (float) $i9;

        $f12 = $f9 + 0.5F;

        $i10 = (int) f2;

        $f11 = (float) $i10;

        $f10 = $f11 + 0.5F;

        virtualinvoke r2.<android.graphics.Matrix: boolean postTranslate(float,float)>($f12, $f10);

        if r0 == null goto label5;

        r3 = r0;

        goto label8;

     label5:
        $r8 = virtualinvoke r1.<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>();

        if $r8 != null goto label6;

        $r9 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        goto label7;

     label6:
        $r9 = virtualinvoke r1.<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>();

     label7:
        r3 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i0, i1, $r9);

     label8:
        $r7 = new android.graphics.Canvas;

        specialinvoke $r7.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r3);

        r4 = $r7;

        $r10 = new android.graphics.Paint;

        specialinvoke $r10.<android.graphics.Paint: void <init>(int)>(7);

        r5 = $r10;

        virtualinvoke r4.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Matrix,android.graphics.Paint)>(r1, r2, r5);

        return r3;
    }

    public static android.graphics.Bitmap fitCenter(android.graphics.Bitmap, com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool, int, int)
    {
        android.graphics.Bitmap r0, r3;
        com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;
        android.graphics.Bitmap$Config r2, $r7, $r11;
        android.graphics.Canvas r4, $r9;
        android.graphics.Matrix r5, $r10;
        android.graphics.Paint r6, $r8;

        r0 := @parameter0: android.graphics.Bitmap;

        r1 := @parameter1: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $i4 = virtualinvoke r0.<android.graphics.Bitmap: int getWidth()>();

        if $i4 != i0 goto label1;

        $i9 = virtualinvoke r0.<android.graphics.Bitmap: int getHeight()>();

        if $i9 != i1 goto label1;

        return r0;

     label1:
        $f3 = (float) i0;

        $i5 = virtualinvoke r0.<android.graphics.Bitmap: int getWidth()>();

        $f4 = (float) $i5;

        f0 = $f3 / $f4;

        $f5 = (float) i1;

        $i6 = virtualinvoke r0.<android.graphics.Bitmap: int getHeight()>();

        $f6 = (float) $i6;

        f1 = $f5 / $f6;

        f2 = staticinvoke <java.lang.Math: float min(float,float)>(f0, f1);

        $i7 = virtualinvoke r0.<android.graphics.Bitmap: int getWidth()>();

        $f7 = (float) $i7;

        $f8 = f2 * $f7;

        i2 = staticinvoke <java.lang.Math: int round(float)>($f8);

        $i8 = virtualinvoke r0.<android.graphics.Bitmap: int getHeight()>();

        $f9 = (float) $i8;

        $f10 = f2 * $f9;

        i3 = staticinvoke <java.lang.Math: int round(float)>($f10);

        $r7 = virtualinvoke r0.<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>();

        if $r7 == null goto label2;

        $r11 = virtualinvoke r0.<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>();

        goto label3;

     label2:
        $r11 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

     label3:
        r2 = $r11;

        r3 = interfaceinvoke r1.<com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool: android.graphics.Bitmap get(int,int,android.graphics.Bitmap$Config)>(i2, i3, r2);

        if r3 != null goto label4;

        r3 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i2, i3, r2);

     label4:
        $r9 = new android.graphics.Canvas;

        specialinvoke $r9.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r3);

        r4 = $r9;

        $r10 = new android.graphics.Matrix;

        specialinvoke $r10.<android.graphics.Matrix: void <init>()>();

        r5 = $r10;

        virtualinvoke r5.<android.graphics.Matrix: void setScale(float,float)>(f2, f2);

        $r8 = new android.graphics.Paint;

        specialinvoke $r8.<android.graphics.Paint: void <init>(int)>(7);

        r6 = $r8;

        virtualinvoke r4.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Matrix,android.graphics.Paint)>(r0, r5, r6);

        return r3;
    }

    public static int getOrientation(java.lang.String)
    {
        java.lang.String r0, $r7;
        short s0;
        android.media.ExifInterface r1, $r2;
        int i1;
        java.lang.Exception $r3, r8;
        boolean $z0;
        java.lang.StringBuilder $r4, $r5, $r6;

        r0 := @parameter0: java.lang.String;

        s0 = 0;

     label1:
        $r2 = new android.media.ExifInterface;

        specialinvoke $r2.<android.media.ExifInterface: void <init>(java.lang.String)>(r0);

        r1 = $r2;

        i1 = virtualinvoke r1.<android.media.ExifInterface: int getAttributeInt(java.lang.String,int)>("Orientation", 0);

        if i1 != 6 goto label2;

        s0 = 90;

        goto label4;

     label2:
        if i1 != 3 goto label3;

        s0 = 180;

        goto label4;

     label3:
        if i1 != 8 goto label4;

        s0 = 270;

     label4:
        goto label6;

     label5:
        $r3 := @caughtexception;

        r8 = $r3;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("TransformationUtils", 6);

        if $z0 == 0 goto label6;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to get orientation for image with path=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TransformationUtils", $r7, r8);

     label6:
        return s0;

        catch java.lang.Exception from label1 to label4 with label5;
    }

    public static android.graphics.Bitmap orientImage(java.lang.String, android.graphics.Bitmap)
    {
        java.lang.String r0;
        android.graphics.Bitmap r1, $r2;
        int i0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: android.graphics.Bitmap;

        i0 = staticinvoke <com.bumptech.glide.load.resource.bitmap.TransformationUtils: int getOrientation(java.lang.String)>(r0);

        $r2 = staticinvoke <com.bumptech.glide.load.resource.bitmap.TransformationUtils: android.graphics.Bitmap rotateImage(android.graphics.Bitmap,int)>(r1, i0);

        return $r2;
    }

    public static android.graphics.Bitmap rotateImage(android.graphics.Bitmap, int)
    {
        android.graphics.Bitmap r0;
        int i0, $i1, $i2;
        android.graphics.Matrix r1, $r2;
        float $f0;
        java.lang.Exception $r3, r4;
        boolean $z0;

        r0 := @parameter0: android.graphics.Bitmap;

        i0 := @parameter1: int;

     label1:
        if i0 == 0 goto label2;

        $r2 = new android.graphics.Matrix;

        specialinvoke $r2.<android.graphics.Matrix: void <init>()>();

        r1 = $r2;

        $f0 = (float) i0;

        virtualinvoke r1.<android.graphics.Matrix: void setRotate(float)>($f0);

        $i1 = virtualinvoke r0.<android.graphics.Bitmap: int getWidth()>();

        $i2 = virtualinvoke r0.<android.graphics.Bitmap: int getHeight()>();

        r0 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>(r0, 0, 0, $i1, $i2, r1, 1);

     label2:
        goto label5;

     label3:
        $r3 := @caughtexception;

        r4 = $r3;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("TransformationUtils", 6);

        if $z0 == 0 goto label4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("TransformationUtils", "Exception when trying to orient image", r4);

     label4:
        virtualinvoke r4.<java.lang.Exception: void printStackTrace()>();

     label5:
        return r0;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static int getExifOrientationDegrees(int)
    {
        int i0;
        short s1;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 3: goto label2;
            case 4: goto label2;
            case 5: goto label1;
            case 6: goto label1;
            case 7: goto label3;
            case 8: goto label3;
            default: goto label4;
        };

     label1:
        s1 = 90;

        goto label5;

     label2:
        s1 = 180;

        goto label5;

     label3:
        s1 = 270;

        goto label5;

     label4:
        s1 = 0;

     label5:
        return s1;
    }

    public static android.graphics.Bitmap rotateImageExif(android.graphics.Bitmap, com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool, int)
    {
        android.graphics.Bitmap r0, r4;
        com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool r1;
        int i0, i1, i2, $i3, $i4;
        android.graphics.Matrix r2, $r7;
        android.graphics.RectF r3, $r8;
        android.graphics.Canvas r5, $r11;
        android.graphics.Paint r6, $r10;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        android.graphics.Bitmap$Config $r9, $r12;

        r0 := @parameter0: android.graphics.Bitmap;

        r1 := @parameter1: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;

        i0 := @parameter2: int;

        $r7 = new android.graphics.Matrix;

        specialinvoke $r7.<android.graphics.Matrix: void <init>()>();

        r2 = $r7;

        tableswitch(i0)
        {
            case 2: goto label01;
            case 3: goto label02;
            case 4: goto label03;
            case 5: goto label04;
            case 6: goto label05;
            case 7: goto label06;
            case 8: goto label07;
            default: goto label08;
        };

     label01:
        virtualinvoke r2.<android.graphics.Matrix: void setScale(float,float)>(-1.0F, 1.0F);

        goto label09;

     label02:
        virtualinvoke r2.<android.graphics.Matrix: void setRotate(float)>(180.0F);

        goto label09;

     label03:
        virtualinvoke r2.<android.graphics.Matrix: void setRotate(float)>(180.0F);

        virtualinvoke r2.<android.graphics.Matrix: boolean postScale(float,float)>(-1.0F, 1.0F);

        goto label09;

     label04:
        virtualinvoke r2.<android.graphics.Matrix: void setRotate(float)>(90.0F);

        virtualinvoke r2.<android.graphics.Matrix: boolean postScale(float,float)>(-1.0F, 1.0F);

        goto label09;

     label05:
        virtualinvoke r2.<android.graphics.Matrix: void setRotate(float)>(90.0F);

        goto label09;

     label06:
        virtualinvoke r2.<android.graphics.Matrix: void setRotate(float)>(-90.0F);

        virtualinvoke r2.<android.graphics.Matrix: boolean postScale(float,float)>(-1.0F, 1.0F);

        goto label09;

     label07:
        virtualinvoke r2.<android.graphics.Matrix: void setRotate(float)>(-90.0F);

        goto label09;

     label08:
        return r0;

     label09:
        $r8 = new android.graphics.RectF;

        $i3 = virtualinvoke r0.<android.graphics.Bitmap: int getWidth()>();

        $f0 = (float) $i3;

        $i4 = virtualinvoke r0.<android.graphics.Bitmap: int getHeight()>();

        $f1 = (float) $i4;

        specialinvoke $r8.<android.graphics.RectF: void <init>(float,float,float,float)>(0.0F, 0.0F, $f0, $f1);

        r3 = $r8;

        virtualinvoke r2.<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>(r3);

        $f2 = virtualinvoke r3.<android.graphics.RectF: float width()>();

        i1 = staticinvoke <java.lang.Math: int round(float)>($f2);

        $f3 = virtualinvoke r3.<android.graphics.RectF: float height()>();

        i2 = staticinvoke <java.lang.Math: int round(float)>($f3);

        $r9 = virtualinvoke r0.<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>();

        r4 = interfaceinvoke r1.<com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool: android.graphics.Bitmap get(int,int,android.graphics.Bitmap$Config)>(i1, i2, $r9);

        if r4 != null goto label10;

        $r12 = virtualinvoke r0.<android.graphics.Bitmap: android.graphics.Bitmap$Config getConfig()>();

        r4 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i1, i2, $r12);

     label10:
        $f4 = r3.<android.graphics.RectF: float left>;

        $f7 = neg $f4;

        $f6 = r3.<android.graphics.RectF: float top>;

        $f5 = neg $f6;

        virtualinvoke r2.<android.graphics.Matrix: boolean postTranslate(float,float)>($f7, $f5);

        $r11 = new android.graphics.Canvas;

        specialinvoke $r11.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r4);

        r5 = $r11;

        $r10 = new android.graphics.Paint;

        specialinvoke $r10.<android.graphics.Paint: void <init>(int)>(7);

        r6 = $r10;

        virtualinvoke r5.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,android.graphics.Matrix,android.graphics.Paint)>(r0, r2, r6);

        return r4;
    }

    public static void <clinit>()
    {
        <com.bumptech.glide.load.resource.bitmap.TransformationUtils: int PAINT_FLAGS> = 7;

        <com.bumptech.glide.load.resource.bitmap.TransformationUtils: java.lang.String TAG> = "TransformationUtils";

        return;
    }
}
