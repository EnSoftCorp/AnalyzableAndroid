public class com.android.camera.SurfaceTextureRenderer extends java.lang.Object
{
    private static final com.android.camera.debug.Log$Tag TAG;
    private static final int EGL_CONTEXT_CLIENT_VERSION;
    private javax.microedition.khronos.egl.EGLConfig mEglConfig;
    private javax.microedition.khronos.egl.EGLDisplay mEglDisplay;
    private javax.microedition.khronos.egl.EGLContext mEglContext;
    private javax.microedition.khronos.egl.EGLSurface mEglSurface;
    private javax.microedition.khronos.egl.EGL10 mEgl;
    private javax.microedition.khronos.opengles.GL10 mGl;
    private volatile boolean mDrawPending;
    private final android.os.Handler mEglHandler;
    private final com.android.camera.SurfaceTextureRenderer$FrameDrawer mFrameDrawer;
    private final java.lang.Object mRenderLock;
    private final java.lang.Runnable mRenderTask;
    private static final int EGL_OPENGL_ES2_BIT;
    private static final int[] CONFIG_SPEC;

    public void <init>(android.graphics.SurfaceTexture, android.os.Handler, com.android.camera.SurfaceTextureRenderer$FrameDrawer)
    {
        com.android.camera.SurfaceTextureRenderer r0;
        android.graphics.SurfaceTexture r1;
        android.os.Handler r2;
        com.android.camera.SurfaceTextureRenderer$FrameDrawer r3;
        java.lang.Object $r4;
        com.android.camera.SurfaceTextureRenderer$1 $r5;

        r0 := @this: com.android.camera.SurfaceTextureRenderer;

        r1 := @parameter0: android.graphics.SurfaceTexture;

        r2 := @parameter1: android.os.Handler;

        r3 := @parameter2: com.android.camera.SurfaceTextureRenderer$FrameDrawer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.camera.SurfaceTextureRenderer: boolean mDrawPending> = 0;

        $r4 = new java.lang.Object;

        specialinvoke $r4.<java.lang.Object: void <init>()>();

        r0.<com.android.camera.SurfaceTextureRenderer: java.lang.Object mRenderLock> = $r4;

        $r5 = new com.android.camera.SurfaceTextureRenderer$1;

        specialinvoke $r5.<com.android.camera.SurfaceTextureRenderer$1: void <init>(com.android.camera.SurfaceTextureRenderer)>(r0);

        r0.<com.android.camera.SurfaceTextureRenderer: java.lang.Runnable mRenderTask> = $r5;

        r0.<com.android.camera.SurfaceTextureRenderer: android.os.Handler mEglHandler> = r2;

        r0.<com.android.camera.SurfaceTextureRenderer: com.android.camera.SurfaceTextureRenderer$FrameDrawer mFrameDrawer> = r3;

        specialinvoke r0.<com.android.camera.SurfaceTextureRenderer: void initialize(android.graphics.SurfaceTexture)>(r1);

        return;
    }

    public void release()
    {
        com.android.camera.SurfaceTextureRenderer r0;
        com.android.camera.SurfaceTextureRenderer$2 $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.camera.SurfaceTextureRenderer;

        $r2 = r0.<com.android.camera.SurfaceTextureRenderer: android.os.Handler mEglHandler>;

        $r1 = new com.android.camera.SurfaceTextureRenderer$2;

        specialinvoke $r1.<com.android.camera.SurfaceTextureRenderer$2: void <init>(com.android.camera.SurfaceTextureRenderer)>(r0);

        virtualinvoke $r2.<android.os.Handler: boolean post(java.lang.Runnable)>($r1);

        return;
    }

    public void draw(boolean)
    {
        com.android.camera.SurfaceTextureRenderer r0;
        boolean z0, $z1;
        java.lang.Object r1, $r4, $r7;
        java.lang.Throwable r3, $r8;
        java.lang.Runnable $r5;
        android.os.Handler $r6;
        java.lang.InterruptedException $r9;
        com.android.camera.debug.Log$Tag $r10;

        r0 := @this: com.android.camera.SurfaceTextureRenderer;

        z0 := @parameter0: boolean;

        $r4 = r0.<com.android.camera.SurfaceTextureRenderer: java.lang.Object mRenderLock>;

        r1 = $r4;

        entermonitor $r4;

     label1:
        $z1 = r0.<com.android.camera.SurfaceTextureRenderer: boolean mDrawPending>;

        if $z1 != 0 goto label5;

        $r6 = r0.<com.android.camera.SurfaceTextureRenderer: android.os.Handler mEglHandler>;

        $r5 = r0.<com.android.camera.SurfaceTextureRenderer: java.lang.Runnable mRenderTask>;

        virtualinvoke $r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r5);

        r0.<com.android.camera.SurfaceTextureRenderer: boolean mDrawPending> = 1;

        if z0 == 0 goto label5;

     label2:
        $r7 = r0.<com.android.camera.SurfaceTextureRenderer: java.lang.Object mRenderLock>;

        virtualinvoke $r7.<java.lang.Object: void wait()>();

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

        $r10 = <com.android.camera.SurfaceTextureRenderer: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void v(com.android.camera.debug.Log$Tag,java.lang.String)>($r10, "RenderLock.wait() interrupted");

     label5:
        exitmonitor r1;

     label6:
        goto label9;

     label7:
        $r8 := @caughtexception;

        r3 = $r8;

        exitmonitor r1;

     label8:
        throw r3;

     label9:
        return;

        catch java.lang.InterruptedException from label2 to label3 with label4;
        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private void initialize(android.graphics.SurfaceTexture)
    {
        com.android.camera.SurfaceTextureRenderer r0;
        android.graphics.SurfaceTexture r1;
        com.android.camera.SurfaceTextureRenderer$3 $r2;
        android.os.Handler $r3;

        r0 := @this: com.android.camera.SurfaceTextureRenderer;

        r1 := @parameter0: android.graphics.SurfaceTexture;

        $r3 = r0.<com.android.camera.SurfaceTextureRenderer: android.os.Handler mEglHandler>;

        $r2 = new com.android.camera.SurfaceTextureRenderer$3;

        specialinvoke $r2.<com.android.camera.SurfaceTextureRenderer$3: void <init>(com.android.camera.SurfaceTextureRenderer,android.graphics.SurfaceTexture)>(r0, r1);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        specialinvoke r0.<com.android.camera.SurfaceTextureRenderer: void waitDone()>();

        return;
    }

    private void waitDone()
    {
        com.android.camera.SurfaceTextureRenderer r0;
        java.lang.Object r1, r2, $r5;
        java.lang.Throwable r4, $r9;
        com.android.camera.SurfaceTextureRenderer$4 $r7;
        android.os.Handler $r8;
        java.lang.InterruptedException $r10;
        com.android.camera.debug.Log$Tag $r11;

        r0 := @this: com.android.camera.SurfaceTextureRenderer;

        $r5 = new java.lang.Object;

        specialinvoke $r5.<java.lang.Object: void <init>()>();

        r1 = $r5;

        r2 = r1;

        entermonitor r1;

     label1:
        $r8 = r0.<com.android.camera.SurfaceTextureRenderer: android.os.Handler mEglHandler>;

        $r7 = new com.android.camera.SurfaceTextureRenderer$4;

        specialinvoke $r7.<com.android.camera.SurfaceTextureRenderer$4: void <init>(com.android.camera.SurfaceTextureRenderer,java.lang.Object)>(r0, r1);

        virtualinvoke $r8.<android.os.Handler: boolean post(java.lang.Runnable)>($r7);

     label2:
        virtualinvoke r1.<java.lang.Object: void wait()>();

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;

        $r11 = <com.android.camera.SurfaceTextureRenderer: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void v(com.android.camera.debug.Log$Tag,java.lang.String)>($r11, "waitDone() interrupted");

     label5:
        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r2;

     label8:
        throw r4;

     label9:
        return;

        catch java.lang.InterruptedException from label2 to label3 with label4;
        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private static void checkEglError(java.lang.String, javax.microedition.khronos.egl.EGL10)
    {
        java.lang.String r0, $r5;
        javax.microedition.khronos.egl.EGL10 r1;
        int i0, $i1;
        java.lang.Object[] $r2;
        com.android.camera.debug.Log$Tag $r3;
        java.lang.Integer $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: javax.microedition.khronos.egl.EGL10;

     label1:
        $i1 = interfaceinvoke r1.<javax.microedition.khronos.egl.EGL10: int eglGetError()>();

        i0 = $i1;

        if $i1 == 12288 goto label2;

        $r3 = <com.android.camera.SurfaceTextureRenderer: com.android.camera.debug.Log$Tag TAG>;

        $r2 = newarray (java.lang.Object)[2];

        $r2[0] = r0;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2[1] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s: EGL error: 0x%x", $r2);

        staticinvoke <com.android.camera.debug.Log: void e(com.android.camera.debug.Log$Tag,java.lang.String)>($r3, $r5);

        goto label1;

     label2:
        return;
    }

    private static javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10, javax.microedition.khronos.egl.EGLDisplay)
    {
        javax.microedition.khronos.egl.EGL10 r0;
        javax.microedition.khronos.egl.EGLDisplay r1;
        int[] r2, $r4, $r5;
        int i0;
        javax.microedition.khronos.egl.EGLConfig[] r3;
        boolean $z0, $z1;
        javax.microedition.khronos.egl.EGLConfig $r6;
        java.lang.IllegalArgumentException $r7, $r8, $r9;

        r0 := @parameter0: javax.microedition.khronos.egl.EGL10;

        r1 := @parameter1: javax.microedition.khronos.egl.EGLDisplay;

        r2 = newarray (int)[1];

        $r4 = <com.android.camera.SurfaceTextureRenderer: int[] CONFIG_SPEC>;

        $z0 = interfaceinvoke r0.<javax.microedition.khronos.egl.EGL10: boolean eglChooseConfig(javax.microedition.khronos.egl.EGLDisplay,int[],javax.microedition.khronos.egl.EGLConfig[],int,int[])>(r1, $r4, null, 0, r2);

        if $z0 != 0 goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("eglChooseConfig failed");

        throw $r9;

     label1:
        i0 = r2[0];

        if i0 > 0 goto label2;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No configs match configSpec");

        throw $r8;

     label2:
        r3 = newarray (javax.microedition.khronos.egl.EGLConfig)[i0];

        $r5 = <com.android.camera.SurfaceTextureRenderer: int[] CONFIG_SPEC>;

        $z1 = interfaceinvoke r0.<javax.microedition.khronos.egl.EGL10: boolean eglChooseConfig(javax.microedition.khronos.egl.EGLDisplay,int[],javax.microedition.khronos.egl.EGLConfig[],int,int[])>(r1, $r5, r3, i0, r2);

        if $z1 != 0 goto label3;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("eglChooseConfig#2 failed");

        throw $r7;

     label3:
        $r6 = r3[0];

        return $r6;
    }

    static java.lang.Object access$000(com.android.camera.SurfaceTextureRenderer)
    {
        com.android.camera.SurfaceTextureRenderer r0;
        java.lang.Object $r1;

        r0 := @parameter0: com.android.camera.SurfaceTextureRenderer;

        $r1 = r0.<com.android.camera.SurfaceTextureRenderer: java.lang.Object mRenderLock>;

        return $r1;
    }

    static javax.microedition.khronos.egl.EGLDisplay access$100(com.android.camera.SurfaceTextureRenderer)
    {
        com.android.camera.SurfaceTextureRenderer r0;
        javax.microedition.khronos.egl.EGLDisplay $r1;

        r0 := @parameter0: com.android.camera.SurfaceTextureRenderer;

        $r1 = r0.<com.android.camera.SurfaceTextureRenderer: javax.microedition.khronos.egl.EGLDisplay mEglDisplay>;

        return $r1;
    }

    static javax.microedition.khronos.egl.EGLSurface access$200(com.android.camera.SurfaceTextureRenderer)
    {
        com.android.camera.SurfaceTextureRenderer r0;
        javax.microedition.khronos.egl.EGLSurface $r1;

        r0 := @parameter0: com.android.camera.SurfaceTextureRenderer;

        $r1 = r0.<com.android.camera.SurfaceTextureRenderer: javax.microedition.khronos.egl.EGLSurface mEglSurface>;

        return $r1;
    }

    static javax.microedition.khronos.opengles.GL10 access$300(com.android.camera.SurfaceTextureRenderer)
    {
        com.android.camera.SurfaceTextureRenderer r0;
        javax.microedition.khronos.opengles.GL10 $r1;

        r0 := @parameter0: com.android.camera.SurfaceTextureRenderer;

        $r1 = r0.<com.android.camera.SurfaceTextureRenderer: javax.microedition.khronos.opengles.GL10 mGl>;

        return $r1;
    }

    static com.android.camera.SurfaceTextureRenderer$FrameDrawer access$400(com.android.camera.SurfaceTextureRenderer)
    {
        com.android.camera.SurfaceTextureRenderer r0;
        com.android.camera.SurfaceTextureRenderer$FrameDrawer $r1;

        r0 := @parameter0: com.android.camera.SurfaceTextureRenderer;

        $r1 = r0.<com.android.camera.SurfaceTextureRenderer: com.android.camera.SurfaceTextureRenderer$FrameDrawer mFrameDrawer>;

        return $r1;
    }

    static javax.microedition.khronos.egl.EGL10 access$500(com.android.camera.SurfaceTextureRenderer)
    {
        com.android.camera.SurfaceTextureRenderer r0;
        javax.microedition.khronos.egl.EGL10 $r1;

        r0 := @parameter0: com.android.camera.SurfaceTextureRenderer;

        $r1 = r0.<com.android.camera.SurfaceTextureRenderer: javax.microedition.khronos.egl.EGL10 mEgl>;

        return $r1;
    }

    static boolean access$602(com.android.camera.SurfaceTextureRenderer, boolean)
    {
        com.android.camera.SurfaceTextureRenderer r0;
        boolean z0;

        r0 := @parameter0: com.android.camera.SurfaceTextureRenderer;

        z0 := @parameter1: boolean;

        r0.<com.android.camera.SurfaceTextureRenderer: boolean mDrawPending> = z0;

        return z0;
    }

    static javax.microedition.khronos.egl.EGLContext access$700(com.android.camera.SurfaceTextureRenderer)
    {
        com.android.camera.SurfaceTextureRenderer r0;
        javax.microedition.khronos.egl.EGLContext $r1;

        r0 := @parameter0: com.android.camera.SurfaceTextureRenderer;

        $r1 = r0.<com.android.camera.SurfaceTextureRenderer: javax.microedition.khronos.egl.EGLContext mEglContext>;

        return $r1;
    }

    static javax.microedition.khronos.egl.EGLSurface access$202(com.android.camera.SurfaceTextureRenderer, javax.microedition.khronos.egl.EGLSurface)
    {
        com.android.camera.SurfaceTextureRenderer r0;
        javax.microedition.khronos.egl.EGLSurface r1;

        r0 := @parameter0: com.android.camera.SurfaceTextureRenderer;

        r1 := @parameter1: javax.microedition.khronos.egl.EGLSurface;

        r0.<com.android.camera.SurfaceTextureRenderer: javax.microedition.khronos.egl.EGLSurface mEglSurface> = r1;

        return r1;
    }

    static javax.microedition.khronos.egl.EGLContext access$702(com.android.camera.SurfaceTextureRenderer, javax.microedition.khronos.egl.EGLContext)
    {
        com.android.camera.SurfaceTextureRenderer r0;
        javax.microedition.khronos.egl.EGLContext r1;

        r0 := @parameter0: com.android.camera.SurfaceTextureRenderer;

        r1 := @parameter1: javax.microedition.khronos.egl.EGLContext;

        r0.<com.android.camera.SurfaceTextureRenderer: javax.microedition.khronos.egl.EGLContext mEglContext> = r1;

        return r1;
    }

    static javax.microedition.khronos.egl.EGLDisplay access$102(com.android.camera.SurfaceTextureRenderer, javax.microedition.khronos.egl.EGLDisplay)
    {
        com.android.camera.SurfaceTextureRenderer r0;
        javax.microedition.khronos.egl.EGLDisplay r1;

        r0 := @parameter0: com.android.camera.SurfaceTextureRenderer;

        r1 := @parameter1: javax.microedition.khronos.egl.EGLDisplay;

        r0.<com.android.camera.SurfaceTextureRenderer: javax.microedition.khronos.egl.EGLDisplay mEglDisplay> = r1;

        return r1;
    }

    static javax.microedition.khronos.egl.EGL10 access$502(com.android.camera.SurfaceTextureRenderer, javax.microedition.khronos.egl.EGL10)
    {
        com.android.camera.SurfaceTextureRenderer r0;
        javax.microedition.khronos.egl.EGL10 r1;

        r0 := @parameter0: com.android.camera.SurfaceTextureRenderer;

        r1 := @parameter1: javax.microedition.khronos.egl.EGL10;

        r0.<com.android.camera.SurfaceTextureRenderer: javax.microedition.khronos.egl.EGL10 mEgl> = r1;

        return r1;
    }

    static com.android.camera.debug.Log$Tag access$800()
    {
        com.android.camera.debug.Log$Tag $r0;

        $r0 = <com.android.camera.SurfaceTextureRenderer: com.android.camera.debug.Log$Tag TAG>;

        return $r0;
    }

    static javax.microedition.khronos.egl.EGLConfig access$902(com.android.camera.SurfaceTextureRenderer, javax.microedition.khronos.egl.EGLConfig)
    {
        com.android.camera.SurfaceTextureRenderer r0;
        javax.microedition.khronos.egl.EGLConfig r1;

        r0 := @parameter0: com.android.camera.SurfaceTextureRenderer;

        r1 := @parameter1: javax.microedition.khronos.egl.EGLConfig;

        r0.<com.android.camera.SurfaceTextureRenderer: javax.microedition.khronos.egl.EGLConfig mEglConfig> = r1;

        return r1;
    }

    static javax.microedition.khronos.egl.EGLConfig access$1000(javax.microedition.khronos.egl.EGL10, javax.microedition.khronos.egl.EGLDisplay)
    {
        javax.microedition.khronos.egl.EGL10 r0;
        javax.microedition.khronos.egl.EGLDisplay r1;
        javax.microedition.khronos.egl.EGLConfig $r2;

        r0 := @parameter0: javax.microedition.khronos.egl.EGL10;

        r1 := @parameter1: javax.microedition.khronos.egl.EGLDisplay;

        $r2 = staticinvoke <com.android.camera.SurfaceTextureRenderer: javax.microedition.khronos.egl.EGLConfig chooseConfig(javax.microedition.khronos.egl.EGL10,javax.microedition.khronos.egl.EGLDisplay)>(r0, r1);

        return $r2;
    }

    static javax.microedition.khronos.egl.EGLConfig access$900(com.android.camera.SurfaceTextureRenderer)
    {
        com.android.camera.SurfaceTextureRenderer r0;
        javax.microedition.khronos.egl.EGLConfig $r1;

        r0 := @parameter0: com.android.camera.SurfaceTextureRenderer;

        $r1 = r0.<com.android.camera.SurfaceTextureRenderer: javax.microedition.khronos.egl.EGLConfig mEglConfig>;

        return $r1;
    }

    static javax.microedition.khronos.opengles.GL10 access$302(com.android.camera.SurfaceTextureRenderer, javax.microedition.khronos.opengles.GL10)
    {
        com.android.camera.SurfaceTextureRenderer r0;
        javax.microedition.khronos.opengles.GL10 r1;

        r0 := @parameter0: com.android.camera.SurfaceTextureRenderer;

        r1 := @parameter1: javax.microedition.khronos.opengles.GL10;

        r0.<com.android.camera.SurfaceTextureRenderer: javax.microedition.khronos.opengles.GL10 mGl> = r1;

        return r1;
    }

    static void <clinit>()
    {
        com.android.camera.debug.Log$Tag $r0;
        int[] $r1;

        <com.android.camera.SurfaceTextureRenderer: int EGL_OPENGL_ES2_BIT> = 4;

        <com.android.camera.SurfaceTextureRenderer: int EGL_CONTEXT_CLIENT_VERSION> = 12440;

        $r0 = new com.android.camera.debug.Log$Tag;

        specialinvoke $r0.<com.android.camera.debug.Log$Tag: void <init>(java.lang.String)>("SurfTexRenderer");

        <com.android.camera.SurfaceTextureRenderer: com.android.camera.debug.Log$Tag TAG> = $r0;

        $r1 = newarray (int)[15];

        $r1[0] = 12352;

        $r1[1] = 4;

        $r1[2] = 12324;

        $r1[3] = 8;

        $r1[4] = 12323;

        $r1[5] = 8;

        $r1[6] = 12322;

        $r1[7] = 8;

        $r1[8] = 12321;

        $r1[9] = 0;

        $r1[10] = 12325;

        $r1[11] = 0;

        $r1[12] = 12326;

        $r1[13] = 0;

        $r1[14] = 12344;

        <com.android.camera.SurfaceTextureRenderer: int[] CONFIG_SPEC> = $r1;

        return;
    }
}
