class com.android.camera.CaptureModule$14$1 extends java.lang.Object implements com.android.camera.one.OneCamera$CaptureReadyCallback
{
    final com.android.camera.CaptureModule$14 this$1;

    void <init>(com.android.camera.CaptureModule$14)
    {
        com.android.camera.CaptureModule$14$1 r0;
        com.android.camera.CaptureModule$14 r1;

        r0 := @this: com.android.camera.CaptureModule$14$1;

        r1 := @parameter0: com.android.camera.CaptureModule$14;

        r0.<com.android.camera.CaptureModule$14$1: com.android.camera.CaptureModule$14 this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onSetupFailed()
    {
        com.android.camera.CaptureModule$14$1 r0;
        com.android.camera.CaptureModule$14 $r1, $r5;
        com.android.camera.CaptureModule $r2, $r6;
        java.util.concurrent.Semaphore $r3;
        com.android.camera.debug.Log$Tag $r4;
        android.os.Handler $r7;
        com.android.camera.CaptureModule$14$1$1 $r8;

        r0 := @this: com.android.camera.CaptureModule$14$1;

        $r1 = r0.<com.android.camera.CaptureModule$14$1: com.android.camera.CaptureModule$14 this$1>;

        $r2 = $r1.<com.android.camera.CaptureModule$14: com.android.camera.CaptureModule this$0>;

        $r3 = staticinvoke <com.android.camera.CaptureModule: java.util.concurrent.Semaphore access$1700(com.android.camera.CaptureModule)>($r2);

        virtualinvoke $r3.<java.util.concurrent.Semaphore: void release()>();

        $r4 = staticinvoke <com.android.camera.CaptureModule: com.android.camera.debug.Log$Tag access$1000()>();

        staticinvoke <com.android.camera.debug.Log: void e(com.android.camera.debug.Log$Tag,java.lang.String)>($r4, "Could not set up preview.");

        $r5 = r0.<com.android.camera.CaptureModule$14$1: com.android.camera.CaptureModule$14 this$1>;

        $r6 = $r5.<com.android.camera.CaptureModule$14: com.android.camera.CaptureModule this$0>;

        $r7 = staticinvoke <com.android.camera.CaptureModule: android.os.Handler access$600(com.android.camera.CaptureModule)>($r6);

        $r8 = new com.android.camera.CaptureModule$14$1$1;

        specialinvoke $r8.<com.android.camera.CaptureModule$14$1$1: void <init>(com.android.camera.CaptureModule$14$1)>(r0);

        virtualinvoke $r7.<android.os.Handler: boolean post(java.lang.Runnable)>($r8);

        return;
    }

    public void onReadyForCapture()
    {
        com.android.camera.CaptureModule$14$1 r0;
        com.android.camera.CaptureModule$14 $r1, $r4;
        com.android.camera.CaptureModule $r2, $r5;
        java.util.concurrent.Semaphore $r3;
        android.os.Handler $r6;
        com.android.camera.CaptureModule$14$1$2 $r7;

        r0 := @this: com.android.camera.CaptureModule$14$1;

        $r1 = r0.<com.android.camera.CaptureModule$14$1: com.android.camera.CaptureModule$14 this$1>;

        $r2 = $r1.<com.android.camera.CaptureModule$14: com.android.camera.CaptureModule this$0>;

        $r3 = staticinvoke <com.android.camera.CaptureModule: java.util.concurrent.Semaphore access$1700(com.android.camera.CaptureModule)>($r2);

        virtualinvoke $r3.<java.util.concurrent.Semaphore: void release()>();

        $r4 = r0.<com.android.camera.CaptureModule$14$1: com.android.camera.CaptureModule$14 this$1>;

        $r5 = $r4.<com.android.camera.CaptureModule$14: com.android.camera.CaptureModule this$0>;

        $r6 = staticinvoke <com.android.camera.CaptureModule: android.os.Handler access$600(com.android.camera.CaptureModule)>($r5);

        $r7 = new com.android.camera.CaptureModule$14$1$2;

        specialinvoke $r7.<com.android.camera.CaptureModule$14$1$2: void <init>(com.android.camera.CaptureModule$14$1)>(r0);

        virtualinvoke $r6.<android.os.Handler: boolean post(java.lang.Runnable)>($r7);

        return;
    }
}
