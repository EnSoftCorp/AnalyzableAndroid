class com.android.camera.CameraActivity$4 extends java.lang.Object implements com.android.camera.app.CameraAppUI$BottomPanel$Listener
{
    final com.android.camera.CameraActivity this$0;

    void <init>(com.android.camera.CameraActivity)
    {
        com.android.camera.CameraActivity$4 r0;
        com.android.camera.CameraActivity r1;

        r0 := @this: com.android.camera.CameraActivity$4;

        r1 := @parameter0: com.android.camera.CameraActivity;

        r0.<com.android.camera.CameraActivity$4: com.android.camera.CameraActivity this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onExternalViewer()
    {
        com.android.camera.CameraActivity$4 r0;
        com.android.camera.data.LocalData r1;
        android.net.Uri r2, $r5;
        com.android.camera.CameraActivity $r3, $r6, $r8, $r10, $r11, $r13, $r15;
        com.android.camera.util.PhotoSphereHelper$PanoramaViewHelper $r4, $r7, $r16;
        boolean $z0, $z1, $z2;
        com.android.camera.settings.SettingsManager $r9, $r12;
        com.android.camera.app.CameraAppUI $r14;
        com.android.camera.debug.Log$Tag $r17, $r19;

        r0 := @this: com.android.camera.CameraActivity$4;

        $r3 = r0.<com.android.camera.CameraActivity$4: com.android.camera.CameraActivity this$0>;

        $r4 = staticinvoke <com.android.camera.CameraActivity: com.android.camera.util.PhotoSphereHelper$PanoramaViewHelper access$000(com.android.camera.CameraActivity)>($r3);

        if $r4 != null goto label1;

        return;

     label1:
        r1 = specialinvoke r0.<com.android.camera.CameraActivity$4: com.android.camera.data.LocalData getCurrentLocalData()>();

        if r1 != null goto label2;

        $r19 = staticinvoke <com.android.camera.CameraActivity: com.android.camera.debug.Log$Tag access$100()>();

        staticinvoke <com.android.camera.debug.Log: void w(com.android.camera.debug.Log$Tag,java.lang.String)>($r19, "Cannot open null data.");

        return;

     label2:
        r2 = interfaceinvoke r1.<com.android.camera.data.LocalData: android.net.Uri getUri()>();

        $r5 = <android.net.Uri: android.net.Uri EMPTY>;

        if r2 != $r5 goto label3;

        $r17 = staticinvoke <com.android.camera.CameraActivity: com.android.camera.debug.Log$Tag access$100()>();

        staticinvoke <com.android.camera.debug.Log: void w(com.android.camera.debug.Log$Tag,java.lang.String)>($r17, "Cannot open empty URL.");

        return;

     label3:
        $z0 = staticinvoke <com.android.camera.data.PanoramaMetadataLoader: boolean isPanoramaAndUseViewer(com.android.camera.data.LocalData)>(r1);

        if $z0 == 0 goto label4;

        $r13 = r0.<com.android.camera.CameraActivity$4: com.android.camera.CameraActivity this$0>;

        $r16 = staticinvoke <com.android.camera.CameraActivity: com.android.camera.util.PhotoSphereHelper$PanoramaViewHelper access$000(com.android.camera.CameraActivity)>($r13);

        $r15 = r0.<com.android.camera.CameraActivity$4: com.android.camera.CameraActivity this$0>;

        virtualinvoke $r16.<com.android.camera.util.PhotoSphereHelper$PanoramaViewHelper: android.content.Intent showPanorama(android.app.Activity,android.net.Uri)>($r15, r2);

        goto label5;

     label4:
        $z1 = staticinvoke <com.android.camera.data.RgbzMetadataLoader: boolean hasRGBZData(com.android.camera.data.LocalData)>(r1);

        if $z1 == 0 goto label5;

        $r6 = r0.<com.android.camera.CameraActivity$4: com.android.camera.CameraActivity this$0>;

        $r7 = staticinvoke <com.android.camera.CameraActivity: com.android.camera.util.PhotoSphereHelper$PanoramaViewHelper access$000(com.android.camera.CameraActivity)>($r6);

        virtualinvoke $r7.<com.android.camera.util.PhotoSphereHelper$PanoramaViewHelper: void showRgbz(android.net.Uri)>(r2);

        $r8 = r0.<com.android.camera.CameraActivity$4: com.android.camera.CameraActivity this$0>;

        $r9 = staticinvoke <com.android.camera.CameraActivity: com.android.camera.settings.SettingsManager access$200(com.android.camera.CameraActivity)>($r8);

        $z2 = virtualinvoke $r9.<com.android.camera.settings.SettingsManager: boolean getBoolean(java.lang.String,java.lang.String)>("default_scope", "pref_should_show_refocus_viewer_cling");

        if $z2 == 0 goto label5;

        $r10 = r0.<com.android.camera.CameraActivity$4: com.android.camera.CameraActivity this$0>;

        $r12 = staticinvoke <com.android.camera.CameraActivity: com.android.camera.settings.SettingsManager access$200(com.android.camera.CameraActivity)>($r10);

        virtualinvoke $r12.<com.android.camera.settings.SettingsManager: void set(java.lang.String,java.lang.String,boolean)>("default_scope", "pref_should_show_refocus_viewer_cling", 0);

        $r11 = r0.<com.android.camera.CameraActivity$4: com.android.camera.CameraActivity this$0>;

        $r14 = staticinvoke <com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI access$300(com.android.camera.CameraActivity)>($r11);

        virtualinvoke $r14.<com.android.camera.app.CameraAppUI: void clearClingForViewer(int)>(2);

     label5:
        return;
    }

    public void onEdit()
    {
        com.android.camera.CameraActivity$4 r0;
        com.android.camera.data.LocalData r1;
        int i0;
        com.android.camera.util.UsageStatistics $r2;
        com.android.camera.CameraActivity $r3, $r5, $r6;
        java.lang.String $r4;
        float $f0;
        com.android.camera.debug.Log$Tag $r7;

        r0 := @this: com.android.camera.CameraActivity$4;

        r1 = specialinvoke r0.<com.android.camera.CameraActivity$4: com.android.camera.data.LocalData getCurrentLocalData()>();

        if r1 != null goto label1;

        $r7 = staticinvoke <com.android.camera.CameraActivity: com.android.camera.debug.Log$Tag access$100()>();

        staticinvoke <com.android.camera.debug.Log: void w(com.android.camera.debug.Log$Tag,java.lang.String)>($r7, "Cannot edit null data.");

        return;

     label1:
        i0 = specialinvoke r0.<com.android.camera.CameraActivity$4: int getCurrentDataId()>();

        $r2 = staticinvoke <com.android.camera.util.UsageStatistics: com.android.camera.util.UsageStatistics instance()>();

        $r3 = r0.<com.android.camera.CameraActivity$4: com.android.camera.CameraActivity this$0>;

        $r4 = staticinvoke <com.android.camera.CameraActivity: java.lang.String access$400(com.android.camera.CameraActivity,int)>($r3, i0);

        $r5 = r0.<com.android.camera.CameraActivity$4: com.android.camera.CameraActivity this$0>;

        $f0 = staticinvoke <com.android.camera.CameraActivity: float access$500(com.android.camera.CameraActivity,int)>($r5, i0);

        virtualinvoke $r2.<com.android.camera.util.UsageStatistics: void mediaInteraction(java.lang.String,int,int,float)>($r4, 10000, 10000, $f0);

        $r6 = r0.<com.android.camera.CameraActivity$4: com.android.camera.CameraActivity this$0>;

        virtualinvoke $r6.<com.android.camera.CameraActivity: void launchEditor(com.android.camera.data.LocalData)>(r1);

        return;
    }

    public void onTinyPlanet()
    {
        com.android.camera.CameraActivity$4 r0;
        com.android.camera.data.LocalData r1;
        com.android.camera.CameraActivity $r2;
        com.android.camera.debug.Log$Tag $r3;

        r0 := @this: com.android.camera.CameraActivity$4;

        r1 = specialinvoke r0.<com.android.camera.CameraActivity$4: com.android.camera.data.LocalData getCurrentLocalData()>();

        if r1 != null goto label1;

        $r3 = staticinvoke <com.android.camera.CameraActivity: com.android.camera.debug.Log$Tag access$100()>();

        staticinvoke <com.android.camera.debug.Log: void w(com.android.camera.debug.Log$Tag,java.lang.String)>($r3, "Cannot edit tiny planet on null data.");

        return;

     label1:
        $r2 = r0.<com.android.camera.CameraActivity$4: com.android.camera.CameraActivity this$0>;

        virtualinvoke $r2.<com.android.camera.CameraActivity: void launchTinyPlanetEditor(com.android.camera.data.LocalData)>(r1);

        return;
    }

    public void onDelete()
    {
        com.android.camera.CameraActivity$4 r0;
        int i0;
        com.android.camera.util.UsageStatistics $r1;
        com.android.camera.CameraActivity $r2, $r4, $r5;
        java.lang.String $r3;
        float $f0;

        r0 := @this: com.android.camera.CameraActivity$4;

        i0 = specialinvoke r0.<com.android.camera.CameraActivity$4: int getCurrentDataId()>();

        $r1 = staticinvoke <com.android.camera.util.UsageStatistics: com.android.camera.util.UsageStatistics instance()>();

        $r2 = r0.<com.android.camera.CameraActivity$4: com.android.camera.CameraActivity this$0>;

        $r3 = staticinvoke <com.android.camera.CameraActivity: java.lang.String access$400(com.android.camera.CameraActivity,int)>($r2, i0);

        $r4 = r0.<com.android.camera.CameraActivity$4: com.android.camera.CameraActivity this$0>;

        $f0 = staticinvoke <com.android.camera.CameraActivity: float access$500(com.android.camera.CameraActivity,int)>($r4, i0);

        virtualinvoke $r1.<com.android.camera.util.UsageStatistics: void mediaInteraction(java.lang.String,int,int,float)>($r3, 10000, 10000, $f0);

        $r5 = r0.<com.android.camera.CameraActivity$4: com.android.camera.CameraActivity this$0>;

        staticinvoke <com.android.camera.CameraActivity: void access$600(com.android.camera.CameraActivity,int)>($r5, i0);

        return;
    }

    public void onShare()
    {
        com.android.camera.CameraActivity$4 r0;
        com.android.camera.data.LocalData r1;
        int i0;
        com.android.camera.util.UsageStatistics $r2;
        com.android.camera.CameraActivity $r3, $r5, $r7;
        java.lang.String $r4;
        float $f0;
        boolean $z0;
        com.android.camera.CameraActivity$4$1 $r6;
        com.android.camera.debug.Log$Tag $r8;

        r0 := @this: com.android.camera.CameraActivity$4;

        r1 = specialinvoke r0.<com.android.camera.CameraActivity$4: com.android.camera.data.LocalData getCurrentLocalData()>();

        if r1 != null goto label1;

        $r8 = staticinvoke <com.android.camera.CameraActivity: com.android.camera.debug.Log$Tag access$100()>();

        staticinvoke <com.android.camera.debug.Log: void w(com.android.camera.debug.Log$Tag,java.lang.String)>($r8, "Cannot share null data.");

        return;

     label1:
        i0 = specialinvoke r0.<com.android.camera.CameraActivity$4: int getCurrentDataId()>();

        $r2 = staticinvoke <com.android.camera.util.UsageStatistics: com.android.camera.util.UsageStatistics instance()>();

        $r3 = r0.<com.android.camera.CameraActivity$4: com.android.camera.CameraActivity this$0>;

        $r4 = staticinvoke <com.android.camera.CameraActivity: java.lang.String access$400(com.android.camera.CameraActivity,int)>($r3, i0);

        $r5 = r0.<com.android.camera.CameraActivity$4: com.android.camera.CameraActivity this$0>;

        $f0 = staticinvoke <com.android.camera.CameraActivity: float access$500(com.android.camera.CameraActivity,int)>($r5, i0);

        virtualinvoke $r2.<com.android.camera.util.UsageStatistics: void mediaInteraction(java.lang.String,int,int,float)>($r4, 10000, 10000, $f0);

        $z0 = staticinvoke <com.android.camera.util.ReleaseDialogHelper: boolean shouldShowReleaseInfoDialogOnShare(com.android.camera.data.LocalData)>(r1);

        if $z0 == 0 goto label2;

        $r7 = r0.<com.android.camera.CameraActivity$4: com.android.camera.CameraActivity this$0>;

        $r6 = new com.android.camera.CameraActivity$4$1;

        specialinvoke $r6.<com.android.camera.CameraActivity$4$1: void <init>(com.android.camera.CameraActivity$4,com.android.camera.data.LocalData)>(r0, r1);

        staticinvoke <com.android.camera.util.ReleaseDialogHelper: void showReleaseInfoDialog(android.app.Activity,com.android.camera.util.Callback)>($r7, $r6);

        goto label3;

     label2:
        specialinvoke r0.<com.android.camera.CameraActivity$4: void share(com.android.camera.data.LocalData)>(r1);

     label3:
        return;
    }

    private void share(com.android.camera.data.LocalData)
    {
        com.android.camera.CameraActivity$4 r0;
        com.android.camera.data.LocalData r1;
        android.content.Intent r2;
        com.android.camera.CameraActivity $r4, $r5;
        com.android.camera.app.CameraAppUI $r6;
        com.android.camera.app.CameraAppUI$BottomPanel $r7;
        android.content.ActivityNotFoundException $r8;

        r0 := @this: com.android.camera.CameraActivity$4;

        r1 := @parameter0: com.android.camera.data.LocalData;

        r2 = specialinvoke r0.<com.android.camera.CameraActivity$4: android.content.Intent getShareIntentByData(com.android.camera.data.LocalData)>(r1);

        if r2 == null goto label4;

     label1:
        $r4 = r0.<com.android.camera.CameraActivity$4: com.android.camera.CameraActivity this$0>;

        virtualinvoke $r4.<com.android.camera.CameraActivity: void launchActivityByIntent(android.content.Intent)>(r2);

        $r5 = r0.<com.android.camera.CameraActivity$4: com.android.camera.CameraActivity this$0>;

        $r6 = staticinvoke <com.android.camera.CameraActivity: com.android.camera.app.CameraAppUI access$300(com.android.camera.CameraActivity)>($r5);

        $r7 = virtualinvoke $r6.<com.android.camera.app.CameraAppUI: com.android.camera.app.CameraAppUI$BottomPanel getFilmstripBottomControls()>();

        interfaceinvoke $r7.<com.android.camera.app.CameraAppUI$BottomPanel: void setShareEnabled(boolean)>(0);

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

     label4:
        return;

        catch android.content.ActivityNotFoundException from label1 to label2 with label3;
    }

    private int getCurrentDataId()
    {
        com.android.camera.CameraActivity$4 r0;
        com.android.camera.CameraActivity $r1;
        com.android.camera.filmstrip.FilmstripController $r2;
        int $i0;

        r0 := @this: com.android.camera.CameraActivity$4;

        $r1 = r0.<com.android.camera.CameraActivity$4: com.android.camera.CameraActivity this$0>;

        $r2 = staticinvoke <com.android.camera.CameraActivity: com.android.camera.filmstrip.FilmstripController access$800(com.android.camera.CameraActivity)>($r1);

        $i0 = interfaceinvoke $r2.<com.android.camera.filmstrip.FilmstripController: int getCurrentId()>();

        return $i0;
    }

    private com.android.camera.data.LocalData getCurrentLocalData()
    {
        com.android.camera.CameraActivity$4 r0;
        com.android.camera.CameraActivity $r1;
        com.android.camera.data.LocalDataAdapter $r2;
        int $i0;
        com.android.camera.data.LocalData $r3;

        r0 := @this: com.android.camera.CameraActivity$4;

        $r1 = r0.<com.android.camera.CameraActivity$4: com.android.camera.CameraActivity this$0>;

        $r2 = staticinvoke <com.android.camera.CameraActivity: com.android.camera.data.LocalDataAdapter access$900(com.android.camera.CameraActivity)>($r1);

        $i0 = specialinvoke r0.<com.android.camera.CameraActivity$4: int getCurrentDataId()>();

        $r3 = interfaceinvoke $r2.<com.android.camera.data.LocalDataAdapter: com.android.camera.data.LocalData getLocalData(int)>($i0);

        return $r3;
    }

    private android.content.Intent getShareIntentByData(com.android.camera.data.LocalData)
    {
        com.android.camera.CameraActivity$4 r0;
        com.android.camera.data.LocalData r1;
        android.content.Intent r2, $r11, r15;
        android.net.Uri r3, $r9, $r12;
        java.lang.String r4, r5;
        com.android.camera.CameraActivity $r6;
        android.content.res.Resources $r7;
        boolean $z0, $z1;

        r0 := @this: com.android.camera.CameraActivity$4;

        r1 := @parameter0: com.android.camera.data.LocalData;

        r2 = null;

        r3 = interfaceinvoke r1.<com.android.camera.data.LocalData: android.net.Uri getUri()>();

        $r6 = r0.<com.android.camera.CameraActivity$4: com.android.camera.CameraActivity this$0>;

        $r7 = virtualinvoke $r6.<com.android.camera.CameraActivity: android.content.res.Resources getResources()>();

        r4 = virtualinvoke $r7.<android.content.res.Resources: java.lang.String getString(int)>(2131231106);

        $z0 = staticinvoke <com.android.camera.data.PanoramaMetadataLoader: boolean isPanorama360(com.android.camera.data.LocalData)>(r1);

        if $z0 == 0 goto label1;

        $r9 = interfaceinvoke r1.<com.android.camera.data.LocalData: android.net.Uri getUri()>();

        $r12 = <android.net.Uri: android.net.Uri EMPTY>;

        if $r9 == $r12 goto label1;

        $r11 = new android.content.Intent;

        specialinvoke $r11.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.SEND");

        r2 = $r11;

        virtualinvoke r2.<android.content.Intent: android.content.Intent setType(java.lang.String)>("application/vnd.google.panorama360+jpg");

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.STREAM", r3);

        goto label3;

     label1:
        $z1 = interfaceinvoke r1.<com.android.camera.data.LocalData: boolean isDataActionSupported(int)>(8);

        if $z1 == 0 goto label3;

        r5 = interfaceinvoke r1.<com.android.camera.data.LocalData: java.lang.String getMimeType()>();

        r15 = specialinvoke r0.<com.android.camera.CameraActivity$4: android.content.Intent getShareIntentFromType(java.lang.String)>(r5);

        if r15 == null goto label2;

        virtualinvoke r15.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.STREAM", r3);

        virtualinvoke r15.<android.content.Intent: android.content.Intent addFlags(int)>(1);

     label2:
        r2 = staticinvoke <android.content.Intent: android.content.Intent createChooser(android.content.Intent,java.lang.CharSequence)>(r15, r4);

     label3:
        return r2;
    }

    private android.content.Intent getShareIntentFromType(java.lang.String)
    {
        com.android.camera.CameraActivity$4 r0;
        java.lang.String r1, $r8;
        android.content.Intent r2, $r3;
        boolean $z0, $z1;
        com.android.camera.debug.Log$Tag $r4;
        java.lang.StringBuilder $r5, $r6, $r7;

        r0 := @this: com.android.camera.CameraActivity$4;

        r1 := @parameter0: java.lang.String;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.SEND");

        r2 = $r3;

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("video/");

        if $z0 == 0 goto label1;

        virtualinvoke r2.<android.content.Intent: android.content.Intent setType(java.lang.String)>("video/*");

        goto label3;

     label1:
        $z1 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("image/");

        if $z1 == 0 goto label2;

        virtualinvoke r2.<android.content.Intent: android.content.Intent setType(java.lang.String)>("image/*");

        goto label3;

     label2:
        $r4 = staticinvoke <com.android.camera.CameraActivity: com.android.camera.debug.Log$Tag access$100()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unsupported mimeType ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void w(com.android.camera.debug.Log$Tag,java.lang.String)>($r4, $r8);

     label3:
        return r2;
    }

    public void onProgressErrorClicked()
    {
        com.android.camera.CameraActivity$4 r0;
        com.android.camera.data.LocalData r1;
        com.android.camera.CameraActivity $r2, $r6;
        com.android.camera.app.CameraServices $r3;
        com.android.camera.session.CaptureSessionManager $r4;
        android.net.Uri $r5;

        r0 := @this: com.android.camera.CameraActivity$4;

        r1 = specialinvoke r0.<com.android.camera.CameraActivity$4: com.android.camera.data.LocalData getCurrentLocalData()>();

        $r2 = r0.<com.android.camera.CameraActivity$4: com.android.camera.CameraActivity this$0>;

        $r3 = virtualinvoke $r2.<com.android.camera.CameraActivity: com.android.camera.app.CameraServices getServices()>();

        $r4 = interfaceinvoke $r3.<com.android.camera.app.CameraServices: com.android.camera.session.CaptureSessionManager getCaptureSessionManager()>();

        $r5 = interfaceinvoke r1.<com.android.camera.data.LocalData: android.net.Uri getUri()>();

        interfaceinvoke $r4.<com.android.camera.session.CaptureSessionManager: void removeErrorMessage(android.net.Uri)>($r5);

        $r6 = r0.<com.android.camera.CameraActivity$4: com.android.camera.CameraActivity this$0>;

        staticinvoke <com.android.camera.CameraActivity: void access$1000(com.android.camera.CameraActivity,com.android.camera.data.LocalData)>($r6, r1);

        return;
    }

    static void access$700(com.android.camera.CameraActivity$4, com.android.camera.data.LocalData)
    {
        com.android.camera.CameraActivity$4 r0;
        com.android.camera.data.LocalData r1;

        r0 := @parameter0: com.android.camera.CameraActivity$4;

        r1 := @parameter1: com.android.camera.data.LocalData;

        specialinvoke r0.<com.android.camera.CameraActivity$4: void share(com.android.camera.data.LocalData)>(r1);

        return;
    }
}
