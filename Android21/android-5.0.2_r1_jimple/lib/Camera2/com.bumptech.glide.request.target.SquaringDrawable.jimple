public class com.bumptech.glide.request.target.SquaringDrawable extends android.graphics.drawable.Drawable
{
    private final android.graphics.drawable.Drawable wrapped;
    private int side;

    public void <init>(android.graphics.drawable.Drawable, int)
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        android.graphics.drawable.Drawable r1;
        int i0;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        i0 := @parameter1: int;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        r0.<com.bumptech.glide.request.target.SquaringDrawable: android.graphics.drawable.Drawable wrapped> = r1;

        r0.<com.bumptech.glide.request.target.SquaringDrawable: int side> = i0;

        return;
    }

    public void setBounds(int, int, int, int)
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        int i0, i1, i2, i3;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(i0, i1, i2, i3);

        $r1 = r0.<com.bumptech.glide.request.target.SquaringDrawable: android.graphics.drawable.Drawable wrapped>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(i0, i1, i2, i3);

        return;
    }

    public void setBounds(android.graphics.Rect)
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        android.graphics.Rect r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        r1 := @parameter0: android.graphics.Rect;

        specialinvoke r0.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>(r1);

        $r2 = r0.<com.bumptech.glide.request.target.SquaringDrawable: android.graphics.drawable.Drawable wrapped>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>(r1);

        return;
    }

    public void setChangingConfigurations(int)
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        int i0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<com.bumptech.glide.request.target.SquaringDrawable: android.graphics.drawable.Drawable wrapped>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setChangingConfigurations(int)>(i0);

        return;
    }

    public int getChangingConfigurations()
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        android.graphics.drawable.Drawable $r1;
        int $i0;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        $r1 = r0.<com.bumptech.glide.request.target.SquaringDrawable: android.graphics.drawable.Drawable wrapped>;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getChangingConfigurations()>();

        return $i0;
    }

    public void setDither(boolean)
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        boolean z0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.bumptech.glide.request.target.SquaringDrawable: android.graphics.drawable.Drawable wrapped>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setDither(boolean)>(z0);

        return;
    }

    public void setFilterBitmap(boolean)
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        boolean z0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.bumptech.glide.request.target.SquaringDrawable: android.graphics.drawable.Drawable wrapped>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setFilterBitmap(boolean)>(z0);

        return;
    }

    public android.graphics.drawable.Drawable$Callback getCallback()
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        android.graphics.drawable.Drawable $r1;
        android.graphics.drawable.Drawable$Callback $r2;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        $r1 = r0.<com.bumptech.glide.request.target.SquaringDrawable: android.graphics.drawable.Drawable wrapped>;

        $r2 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable$Callback getCallback()>();

        return $r2;
    }

    public int getAlpha()
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        android.graphics.drawable.Drawable $r1;
        int $i0;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        $r1 = r0.<com.bumptech.glide.request.target.SquaringDrawable: android.graphics.drawable.Drawable wrapped>;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getAlpha()>();

        return $i0;
    }

    public void setColorFilter(int, android.graphics.PorterDuff$Mode)
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        int i0;
        android.graphics.PorterDuff$Mode r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.PorterDuff$Mode;

        $r2 = r0.<com.bumptech.glide.request.target.SquaringDrawable: android.graphics.drawable.Drawable wrapped>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setColorFilter(int,android.graphics.PorterDuff$Mode)>(i0, r1);

        return;
    }

    public void clearColorFilter()
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        $r1 = r0.<com.bumptech.glide.request.target.SquaringDrawable: android.graphics.drawable.Drawable wrapped>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void clearColorFilter()>();

        return;
    }

    public android.graphics.drawable.Drawable getCurrent()
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        android.graphics.drawable.Drawable $r1, $r2;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        $r1 = r0.<com.bumptech.glide.request.target.SquaringDrawable: android.graphics.drawable.Drawable wrapped>;

        $r2 = virtualinvoke $r1.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable getCurrent()>();

        return $r2;
    }

    public boolean setVisible(boolean, boolean)
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        boolean z0, z1, $z2;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $r1 = r0.<com.bumptech.glide.request.target.SquaringDrawable: android.graphics.drawable.Drawable wrapped>;

        $z2 = virtualinvoke $r1.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(z0, z1);

        return $z2;
    }

    public int getIntrinsicWidth()
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        int $i0;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        $i0 = r0.<com.bumptech.glide.request.target.SquaringDrawable: int side>;

        return $i0;
    }

    public int getIntrinsicHeight()
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        int $i0;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        $i0 = r0.<com.bumptech.glide.request.target.SquaringDrawable: int side>;

        return $i0;
    }

    public int getMinimumWidth()
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        android.graphics.drawable.Drawable $r1;
        int $i0;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        $r1 = r0.<com.bumptech.glide.request.target.SquaringDrawable: android.graphics.drawable.Drawable wrapped>;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getMinimumWidth()>();

        return $i0;
    }

    public int getMinimumHeight()
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        android.graphics.drawable.Drawable $r1;
        int $i0;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        $r1 = r0.<com.bumptech.glide.request.target.SquaringDrawable: android.graphics.drawable.Drawable wrapped>;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getMinimumHeight()>();

        return $i0;
    }

    public boolean getPadding(android.graphics.Rect)
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        android.graphics.Rect r1;
        android.graphics.drawable.Drawable $r2;
        boolean $z0;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        r1 := @parameter0: android.graphics.Rect;

        $r2 = r0.<com.bumptech.glide.request.target.SquaringDrawable: android.graphics.drawable.Drawable wrapped>;

        $z0 = virtualinvoke $r2.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>(r1);

        return $z0;
    }

    public void invalidateSelf()
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        specialinvoke r0.<android.graphics.drawable.Drawable: void invalidateSelf()>();

        $r1 = r0.<com.bumptech.glide.request.target.SquaringDrawable: android.graphics.drawable.Drawable wrapped>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void invalidateSelf()>();

        return;
    }

    public void unscheduleSelf(java.lang.Runnable)
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        java.lang.Runnable r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        r1 := @parameter0: java.lang.Runnable;

        specialinvoke r0.<android.graphics.drawable.Drawable: void unscheduleSelf(java.lang.Runnable)>(r1);

        $r2 = r0.<com.bumptech.glide.request.target.SquaringDrawable: android.graphics.drawable.Drawable wrapped>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void unscheduleSelf(java.lang.Runnable)>(r1);

        return;
    }

    public void scheduleSelf(java.lang.Runnable, long)
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        java.lang.Runnable r1;
        long l0;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        r1 := @parameter0: java.lang.Runnable;

        l0 := @parameter1: long;

        specialinvoke r0.<android.graphics.drawable.Drawable: void scheduleSelf(java.lang.Runnable,long)>(r1, l0);

        $r2 = r0.<com.bumptech.glide.request.target.SquaringDrawable: android.graphics.drawable.Drawable wrapped>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void scheduleSelf(java.lang.Runnable,long)>(r1, l0);

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        android.graphics.Canvas r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<com.bumptech.glide.request.target.SquaringDrawable: android.graphics.drawable.Drawable wrapped>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        return;
    }

    public void setAlpha(int)
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        int i0;
        android.graphics.drawable.Drawable $r1;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<com.bumptech.glide.request.target.SquaringDrawable: android.graphics.drawable.Drawable wrapped>;

        virtualinvoke $r1.<android.graphics.drawable.Drawable: void setAlpha(int)>(i0);

        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        android.graphics.ColorFilter r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = r0.<com.bumptech.glide.request.target.SquaringDrawable: android.graphics.drawable.Drawable wrapped>;

        virtualinvoke $r2.<android.graphics.drawable.Drawable: void setColorFilter(android.graphics.ColorFilter)>(r1);

        return;
    }

    public int getOpacity()
    {
        com.bumptech.glide.request.target.SquaringDrawable r0;
        android.graphics.drawable.Drawable $r1;
        int $i0;

        r0 := @this: com.bumptech.glide.request.target.SquaringDrawable;

        $r1 = r0.<com.bumptech.glide.request.target.SquaringDrawable: android.graphics.drawable.Drawable wrapped>;

        $i0 = virtualinvoke $r1.<android.graphics.drawable.Drawable: int getOpacity()>();

        return $i0;
    }
}
