public class com.android.camera.ui.MainActivityLayout extends android.widget.FrameLayout
{
    private final com.android.camera.debug.Log$Tag TAG;
    private static final int SWIPE_TIME_OUT;
    private com.android.camera.ui.ModeListView mModeList;
    private com.android.camera.widget.FilmstripLayout mFilmstripLayout;
    private boolean mCheckToIntercept;
    private android.view.MotionEvent mDown;
    private final int mSlop;
    private boolean mRequestToInterceptTouchEvents;
    private android.view.View mTouchReceiver;
    private final boolean mIsCaptureIntent;
    private com.android.camera.app.CameraAppUI$NonDecorWindowSizeChangedListener mNonDecorWindowSizeChangedListener;
    private boolean mSwipeEnabled;

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.android.camera.ui.MainActivityLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.app.Activity r3;
        android.content.Intent r4;
        java.lang.String r5, $r8, $r9, $r10;
        com.android.camera.debug.Log$Tag $r6;
        android.view.ViewConfiguration $r7;
        int $i0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.android.camera.ui.MainActivityLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        $r6 = new com.android.camera.debug.Log$Tag;

        specialinvoke $r6.<com.android.camera.debug.Log$Tag: void <init>(java.lang.String)>("MainActivityLayout");

        r0.<com.android.camera.ui.MainActivityLayout: com.android.camera.debug.Log$Tag TAG> = $r6;

        r0.<com.android.camera.ui.MainActivityLayout: boolean mRequestToInterceptTouchEvents> = 0;

        r0.<com.android.camera.ui.MainActivityLayout: android.view.View mTouchReceiver> = null;

        r0.<com.android.camera.ui.MainActivityLayout: com.android.camera.app.CameraAppUI$NonDecorWindowSizeChangedListener mNonDecorWindowSizeChangedListener> = null;

        r0.<com.android.camera.ui.MainActivityLayout: boolean mSwipeEnabled> = 1;

        $r7 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>(r1);

        $i0 = virtualinvoke $r7.<android.view.ViewConfiguration: int getScaledTouchSlop()>();

        r0.<com.android.camera.ui.MainActivityLayout: int mSlop> = $i0;

        r3 = (android.app.Activity) r1;

        r4 = virtualinvoke r3.<android.app.Activity: android.content.Intent getIntent()>();

        r5 = virtualinvoke r4.<android.content.Intent: java.lang.String getAction()>();

        $r8 = "android.media.action.IMAGE_CAPTURE";

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z0 != 0 goto label1;

        $r9 = "android.media.action.IMAGE_CAPTURE_SECURE";

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z1 != 0 goto label1;

        $r10 = "android.media.action.VIDEO_CAPTURE";

        $z3 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>(r5);

        if $z3 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        r0.<com.android.camera.ui.MainActivityLayout: boolean mIsCaptureIntent> = $z2;

        return;
    }

    public void setSwipeEnabled(boolean)
    {
        com.android.camera.ui.MainActivityLayout r0;
        boolean z0;

        r0 := @this: com.android.camera.ui.MainActivityLayout;

        z0 := @parameter0: boolean;

        r0.<com.android.camera.ui.MainActivityLayout: boolean mSwipeEnabled> = z0;

        return;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        com.android.camera.ui.MainActivityLayout r0;
        android.view.MotionEvent r1, $r2, $r3, $r4, $r6, $r8, $r9;
        int i0, i1, $i2, $i3, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        boolean $z0, $z1, $z2, $z3;
        long $l4, $l5, $l6;
        byte $b7;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        com.android.camera.widget.FilmstripLayout $r5;
        com.android.camera.ui.ModeListView $r7;

        r0 := @this: com.android.camera.ui.MainActivityLayout;

        r1 := @parameter0: android.view.MotionEvent;

        $i2 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        if $i2 != 0 goto label1;

        r0.<com.android.camera.ui.MainActivityLayout: boolean mCheckToIntercept> = 1;

        $r8 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(android.view.MotionEvent)>(r1);

        r0.<com.android.camera.ui.MainActivityLayout: android.view.MotionEvent mDown> = $r8;

        r0.<com.android.camera.ui.MainActivityLayout: android.view.View mTouchReceiver> = null;

        r0.<com.android.camera.ui.MainActivityLayout: boolean mRequestToInterceptTouchEvents> = 0;

        return 0;

     label1:
        $z0 = r0.<com.android.camera.ui.MainActivityLayout: boolean mRequestToInterceptTouchEvents>;

        if $z0 == 0 goto label2;

        r0.<com.android.camera.ui.MainActivityLayout: boolean mRequestToInterceptTouchEvents> = 0;

        $r9 = r0.<com.android.camera.ui.MainActivityLayout: android.view.MotionEvent mDown>;

        virtualinvoke r0.<com.android.camera.ui.MainActivityLayout: boolean onTouchEvent(android.view.MotionEvent)>($r9);

        return 1;

     label2:
        $i3 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        if $i3 != 5 goto label3;

        r0.<com.android.camera.ui.MainActivityLayout: boolean mCheckToIntercept> = 0;

        return 0;

     label3:
        $z1 = r0.<com.android.camera.ui.MainActivityLayout: boolean mCheckToIntercept>;

        if $z1 != 0 goto label4;

        return 0;

     label4:
        $l4 = virtualinvoke r1.<android.view.MotionEvent: long getEventTime()>();

        $l5 = virtualinvoke r1.<android.view.MotionEvent: long getDownTime()>();

        $l6 = $l4 - $l5;

        $b7 = $l6 cmp 500L;

        if $b7 <= 0 goto label5;

        return 0;

     label5:
        $z2 = r0.<com.android.camera.ui.MainActivityLayout: boolean mIsCaptureIntent>;

        if $z2 != 0 goto label6;

        $z3 = r0.<com.android.camera.ui.MainActivityLayout: boolean mSwipeEnabled>;

        if $z3 != 0 goto label7;

     label6:
        return 0;

     label7:
        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $r2 = r0.<com.android.camera.ui.MainActivityLayout: android.view.MotionEvent mDown>;

        $f2 = virtualinvoke $r2.<android.view.MotionEvent: float getX()>();

        $f1 = $f0 - $f2;

        i0 = (int) $f1;

        $f3 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $r3 = r0.<com.android.camera.ui.MainActivityLayout: android.view.MotionEvent mDown>;

        $f5 = virtualinvoke $r3.<android.view.MotionEvent: float getY()>();

        $f4 = $f3 - $f5;

        i1 = (int) $f4;

        $i9 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        if $i9 != 2 goto label9;

        $i8 = staticinvoke <java.lang.Math: int abs(int)>(i0);

        $i11 = r0.<com.android.camera.ui.MainActivityLayout: int mSlop>;

        if $i8 <= $i11 goto label9;

        $i10 = staticinvoke <java.lang.Math: int abs(int)>(i1);

        $i13 = $i10 * 2;

        if i0 < $i13 goto label8;

        $r7 = r0.<com.android.camera.ui.MainActivityLayout: com.android.camera.ui.ModeListView mModeList>;

        r0.<com.android.camera.ui.MainActivityLayout: android.view.View mTouchReceiver> = $r7;

        $r6 = r0.<com.android.camera.ui.MainActivityLayout: android.view.MotionEvent mDown>;

        virtualinvoke r0.<com.android.camera.ui.MainActivityLayout: boolean onTouchEvent(android.view.MotionEvent)>($r6);

        return 1;

     label8:
        $i12 = staticinvoke <java.lang.Math: int abs(int)>(i1);

        $i15 = neg $i12;

        $i14 = $i15 * 2;

        if i0 >= $i14 goto label9;

        $r5 = r0.<com.android.camera.ui.MainActivityLayout: com.android.camera.widget.FilmstripLayout mFilmstripLayout>;

        r0.<com.android.camera.ui.MainActivityLayout: android.view.View mTouchReceiver> = $r5;

        $r4 = r0.<com.android.camera.ui.MainActivityLayout: android.view.MotionEvent mDown>;

        virtualinvoke r0.<com.android.camera.ui.MainActivityLayout: boolean onTouchEvent(android.view.MotionEvent)>($r4);

        return 1;

     label9:
        return 0;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.android.camera.ui.MainActivityLayout r0;
        android.view.MotionEvent r1;
        android.view.View $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: com.android.camera.ui.MainActivityLayout;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<com.android.camera.ui.MainActivityLayout: android.view.View mTouchReceiver>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.camera.ui.MainActivityLayout: android.view.View mTouchReceiver>;

        virtualinvoke $r3.<android.view.View: void setVisibility(int)>(0);

        $r4 = r0.<com.android.camera.ui.MainActivityLayout: android.view.View mTouchReceiver>;

        $z0 = virtualinvoke $r4.<android.view.View: boolean dispatchTouchEvent(android.view.MotionEvent)>(r1);

        return $z0;

     label1:
        return 0;
    }

    public void onFinishInflate()
    {
        com.android.camera.ui.MainActivityLayout r0;
        android.view.View $r1, $r3;
        com.android.camera.ui.ModeListView $r2;
        com.android.camera.widget.FilmstripLayout $r4;

        r0 := @this: com.android.camera.ui.MainActivityLayout;

        $r1 = virtualinvoke r0.<com.android.camera.ui.MainActivityLayout: android.view.View findViewById(int)>(2131624002);

        $r2 = (com.android.camera.ui.ModeListView) $r1;

        r0.<com.android.camera.ui.MainActivityLayout: com.android.camera.ui.ModeListView mModeList> = $r2;

        $r3 = virtualinvoke r0.<com.android.camera.ui.MainActivityLayout: android.view.View findViewById(int)>(2131623970);

        $r4 = (com.android.camera.widget.FilmstripLayout) $r3;

        r0.<com.android.camera.ui.MainActivityLayout: com.android.camera.widget.FilmstripLayout mFilmstripLayout> = $r4;

        return;
    }

    public void redirectTouchEventsTo(android.view.View)
    {
        com.android.camera.ui.MainActivityLayout r0;
        android.view.View r1;
        com.android.camera.debug.Log$Tag $r2;

        r0 := @this: com.android.camera.ui.MainActivityLayout;

        r1 := @parameter0: android.view.View;

        if r1 != null goto label1;

        $r2 = r0.<com.android.camera.ui.MainActivityLayout: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void e(com.android.camera.debug.Log$Tag,java.lang.String)>($r2, "Cannot redirect touch to a null receiver.");

        return;

     label1:
        r0.<com.android.camera.ui.MainActivityLayout: android.view.View mTouchReceiver> = r1;

        r0.<com.android.camera.ui.MainActivityLayout: boolean mRequestToInterceptTouchEvents> = 1;

        return;
    }

    public void onMeasure(int, int)
    {
        com.android.camera.ui.MainActivityLayout r0;
        int i0, i1, $i2, $i3, $i4;
        com.android.camera.app.CameraAppUI$NonDecorWindowSizeChangedListener $r1, $r2;
        android.content.Context $r3;

        r0 := @this: com.android.camera.ui.MainActivityLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.camera.ui.MainActivityLayout: com.android.camera.app.CameraAppUI$NonDecorWindowSizeChangedListener mNonDecorWindowSizeChangedListener>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.camera.ui.MainActivityLayout: com.android.camera.app.CameraAppUI$NonDecorWindowSizeChangedListener mNonDecorWindowSizeChangedListener>;

        $i2 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        $i3 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i1);

        $r3 = virtualinvoke r0.<com.android.camera.ui.MainActivityLayout: android.content.Context getContext()>();

        $i4 = staticinvoke <com.android.camera.util.CameraUtil: int getDisplayRotation(android.content.Context)>($r3);

        interfaceinvoke $r2.<com.android.camera.app.CameraAppUI$NonDecorWindowSizeChangedListener: void onNonDecorWindowSizeChanged(int,int,int)>($i2, $i3, $i4);

     label1:
        specialinvoke r0.<android.widget.FrameLayout: void onMeasure(int,int)>(i0, i1);

        return;
    }

    public void setNonDecorWindowSizeChangedListener(com.android.camera.app.CameraAppUI$NonDecorWindowSizeChangedListener)
    {
        com.android.camera.ui.MainActivityLayout r0;
        com.android.camera.app.CameraAppUI$NonDecorWindowSizeChangedListener r1, $r2, $r3;
        int $i0, $i1, $i2;
        android.content.Context $r4;

        r0 := @this: com.android.camera.ui.MainActivityLayout;

        r1 := @parameter0: com.android.camera.app.CameraAppUI$NonDecorWindowSizeChangedListener;

        r0.<com.android.camera.ui.MainActivityLayout: com.android.camera.app.CameraAppUI$NonDecorWindowSizeChangedListener mNonDecorWindowSizeChangedListener> = r1;

        $r2 = r0.<com.android.camera.ui.MainActivityLayout: com.android.camera.app.CameraAppUI$NonDecorWindowSizeChangedListener mNonDecorWindowSizeChangedListener>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.camera.ui.MainActivityLayout: com.android.camera.app.CameraAppUI$NonDecorWindowSizeChangedListener mNonDecorWindowSizeChangedListener>;

        $i0 = virtualinvoke r0.<com.android.camera.ui.MainActivityLayout: int getMeasuredWidth()>();

        $i1 = virtualinvoke r0.<com.android.camera.ui.MainActivityLayout: int getMeasuredHeight()>();

        $r4 = virtualinvoke r0.<com.android.camera.ui.MainActivityLayout: android.content.Context getContext()>();

        $i2 = staticinvoke <com.android.camera.util.CameraUtil: int getDisplayRotation(android.content.Context)>($r4);

        interfaceinvoke $r3.<com.android.camera.app.CameraAppUI$NonDecorWindowSizeChangedListener: void onNonDecorWindowSizeChanged(int,int,int)>($i0, $i1, $i2);

     label1:
        return;
    }

    public static void <clinit>()
    {
        <com.android.camera.ui.MainActivityLayout: int SWIPE_TIME_OUT> = 500;

        return;
    }
}
