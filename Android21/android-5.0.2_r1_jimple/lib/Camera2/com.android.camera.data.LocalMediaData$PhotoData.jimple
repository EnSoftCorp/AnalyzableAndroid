public final class com.android.camera.data.LocalMediaData$PhotoData extends com.android.camera.data.LocalMediaData
{
    private static final com.android.camera.debug.Log$Tag TAG;
    public static final int COL_ID;
    public static final int COL_TITLE;
    public static final int COL_MIME_TYPE;
    public static final int COL_DATE_TAKEN;
    public static final int COL_DATE_MODIFIED;
    public static final int COL_DATA;
    public static final int COL_ORIENTATION;
    public static final int COL_WIDTH;
    public static final int COL_HEIGHT;
    public static final int COL_SIZE;
    public static final int COL_LATITUDE;
    public static final int COL_LONGITUDE;
    private static final int MAXIMUM_TEXTURE_SIZE;
    static final android.net.Uri CONTENT_URI;
    private static final java.lang.String QUERY_ORDER;
    private static final java.lang.String[] QUERY_PROJECTION;
    private static final int mSupportedUIActions;
    private static final int mSupportedDataActions;
    private final int mOrientation;
    private final java.lang.String mSignature;

    public static com.android.camera.data.LocalData fromContentUri(android.content.ContentResolver, android.net.Uri)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1;
        java.util.List r2;
        boolean $z0;
        java.lang.Object $r3;
        com.android.camera.data.LocalData $r4;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.net.Uri;

        r2 = staticinvoke <com.android.camera.data.LocalMediaData$PhotoData: java.util.List query(android.content.ContentResolver,android.net.Uri,long)>(r0, r1, -1L);

        $z0 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r3 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (com.android.camera.data.LocalData) $r3;

        return $r4;
    }

    public void <init>(long, java.lang.String, java.lang.String, long, long, java.lang.String, int, int, int, long, double, double)
    {
        com.android.camera.data.LocalMediaData$PhotoData r0;
        long l0, l1, l2, l6;
        java.lang.String r1, r2, r3, $r7;
        int i3, i4, i5;
        double d0, d1;
        java.lang.StringBuilder $r4, $r5, $r6, $r8;

        r0 := @this: com.android.camera.data.LocalMediaData$PhotoData;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        l1 := @parameter3: long;

        l2 := @parameter4: long;

        r3 := @parameter5: java.lang.String;

        i3 := @parameter6: int;

        i4 := @parameter7: int;

        i5 := @parameter8: int;

        l6 := @parameter9: long;

        d0 := @parameter10: double;

        d1 := @parameter11: double;

        specialinvoke r0.<com.android.camera.data.LocalMediaData: void <init>(long,java.lang.String,java.lang.String,long,long,java.lang.String,int,int,long,double,double)>(l0, r1, r2, l1, l2, r3, i4, i5, l6, d0, d1);

        r0.<com.android.camera.data.LocalMediaData$PhotoData: int mOrientation> = i3;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l2);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.camera.data.LocalMediaData$PhotoData: java.lang.String mSignature> = $r7;

        return;
    }

    static java.util.List query(android.content.ContentResolver, android.net.Uri, long)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1;
        long l0;
        com.android.camera.data.LocalMediaData$PhotoData$PhotoDataBuilder $r2;
        java.lang.String[] $r3;
        java.util.List $r4;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.net.Uri;

        l0 := @parameter2: long;

        $r3 = <com.android.camera.data.LocalMediaData$PhotoData: java.lang.String[] QUERY_PROJECTION>;

        $r2 = new com.android.camera.data.LocalMediaData$PhotoData$PhotoDataBuilder;

        specialinvoke $r2.<com.android.camera.data.LocalMediaData$PhotoData$PhotoDataBuilder: void <init>(com.android.camera.data.LocalMediaData$1)>(null);

        $r4 = staticinvoke <com.android.camera.data.LocalMediaData: java.util.List access$100(android.content.ContentResolver,android.net.Uri,java.lang.String[],long,java.lang.String,com.android.camera.data.LocalMediaData$CursorToLocalData)>(r0, r1, $r3, l0, "datetaken DESC, _id DESC", $r2);

        return $r4;
    }

    private static com.android.camera.data.LocalMediaData$PhotoData buildFromCursor(android.database.Cursor)
    {
        android.database.Cursor r0;
        long l0, l1, l2, l8;
        java.lang.String r1, r2, r3, $r17, $r22, $r26, $r31;
        int i3, i4, i5, $i6, $i7;
        android.graphics.BitmapFactory$Options r4, $r14;
        android.graphics.Bitmap r5;
        double d0, d1;
        com.android.camera.data.LocalMediaData$PhotoData r6, $r30;
        java.lang.StringBuilder $r7, $r8, $r10, $r11, $r12, $r13, $r16, $r19, $r20, $r21, $r23, $r25, $r27, $r29, $r32, $r33, $r34;
        com.android.camera.debug.Log$Tag $r9, $r18, $r24, $r28;

        r0 := @parameter0: android.database.Cursor;

        l0 = interfaceinvoke r0.<android.database.Cursor: long getLong(int)>(0);

        r1 = interfaceinvoke r0.<android.database.Cursor: java.lang.String getString(int)>(1);

        r2 = interfaceinvoke r0.<android.database.Cursor: java.lang.String getString(int)>(2);

        l1 = interfaceinvoke r0.<android.database.Cursor: long getLong(int)>(3);

        l2 = interfaceinvoke r0.<android.database.Cursor: long getLong(int)>(4);

        r3 = interfaceinvoke r0.<android.database.Cursor: java.lang.String getString(int)>(5);

        i3 = interfaceinvoke r0.<android.database.Cursor: int getInt(int)>(6);

        i4 = interfaceinvoke r0.<android.database.Cursor: int getInt(int)>(7);

        i5 = interfaceinvoke r0.<android.database.Cursor: int getInt(int)>(8);

        if i4 <= 0 goto label1;

        if i5 > 0 goto label5;

     label1:
        $r9 = <com.android.camera.data.LocalMediaData$PhotoData: com.android.camera.debug.Log$Tag TAG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Zero dimension in ContentResolver for ");

        $r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r10 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        $r16 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void w(com.android.camera.debug.Log$Tag,java.lang.String)>($r9, $r17);

        $r14 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r14.<android.graphics.BitmapFactory$Options: void <init>()>();

        r4 = $r14;

        r4.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 1;

        staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)>(r3, r4);

        $i6 = r4.<android.graphics.BitmapFactory$Options: int outWidth>;

        if $i6 <= 0 goto label2;

        $i7 = r4.<android.graphics.BitmapFactory$Options: int outHeight>;

        if $i7 <= 0 goto label2;

        i4 = r4.<android.graphics.BitmapFactory$Options: int outWidth>;

        i5 = r4.<android.graphics.BitmapFactory$Options: int outHeight>;

        goto label5;

     label2:
        $r18 = <com.android.camera.data.LocalMediaData$PhotoData: com.android.camera.debug.Log$Tag TAG>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dimension decode failed for ");

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void w(com.android.camera.debug.Log$Tag,java.lang.String)>($r18, $r22);

        r5 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeFile(java.lang.String)>(r3);

        if r5 != null goto label3;

        $r28 = <com.android.camera.data.LocalMediaData$PhotoData: com.android.camera.debug.Log$Tag TAG>;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PhotoData skipped. Decoding ");

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed.");

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void w(com.android.camera.debug.Log$Tag,java.lang.String)>($r28, $r31);

        return null;

     label3:
        i4 = virtualinvoke r5.<android.graphics.Bitmap: int getWidth()>();

        i5 = virtualinvoke r5.<android.graphics.Bitmap: int getHeight()>();

        if i4 == 0 goto label4;

        if i5 != 0 goto label5;

     label4:
        $r24 = <com.android.camera.data.LocalMediaData$PhotoData: com.android.camera.debug.Log$Tag TAG>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PhotoData skipped. Bitmap size 0 for ");

        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void w(com.android.camera.debug.Log$Tag,java.lang.String)>($r24, $r26);

        return null;

     label5:
        l8 = interfaceinvoke r0.<android.database.Cursor: long getLong(int)>(9);

        d0 = interfaceinvoke r0.<android.database.Cursor: double getDouble(int)>(10);

        d1 = interfaceinvoke r0.<android.database.Cursor: double getDouble(int)>(11);

        $r30 = new com.android.camera.data.LocalMediaData$PhotoData;

        specialinvoke $r30.<com.android.camera.data.LocalMediaData$PhotoData: void <init>(long,java.lang.String,java.lang.String,long,long,java.lang.String,int,int,int,long,double,double)>(l0, r1, r2, l1, l2, r3, i3, i4, i5, l8, d0, d1);

        r6 = $r30;

        return r6;
    }

    public int getRotation()
    {
        com.android.camera.data.LocalMediaData$PhotoData r0;
        int $i0;

        r0 := @this: com.android.camera.data.LocalMediaData$PhotoData;

        $i0 = r0.<com.android.camera.data.LocalMediaData$PhotoData: int mOrientation>;

        return $i0;
    }

    public java.lang.String toString()
    {
        com.android.camera.data.LocalMediaData$PhotoData r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r17;
        java.lang.String $r3, $r6, $r16;
        int $i0, $i1, $i2;
        long $l3;
        java.util.Date $r15;

        r0 := @this: com.android.camera.data.LocalMediaData$PhotoData;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Photo:,data=");

        $r3 = r0.<com.android.camera.data.LocalMediaData$PhotoData: java.lang.String mPath>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",mimeType=");

        $r6 = r0.<com.android.camera.data.LocalMediaData$PhotoData: java.lang.String mMimeType>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i0 = r0.<com.android.camera.data.LocalMediaData$PhotoData: int mWidth>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        $i1 = r0.<com.android.camera.data.LocalMediaData$PhotoData: int mHeight>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",orientation=");

        $i2 = r0.<com.android.camera.data.LocalMediaData$PhotoData: int mOrientation>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",date=");

        $r15 = new java.util.Date;

        $l3 = r0.<com.android.camera.data.LocalMediaData$PhotoData: long mDateTakenInMilliSeconds>;

        specialinvoke $r15.<java.util.Date: void <init>(long)>($l3);

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r16;
    }

    public int getViewType()
    {
        com.android.camera.data.LocalMediaData$PhotoData r0;

        r0 := @this: com.android.camera.data.LocalMediaData$PhotoData;

        return 2;
    }

    public boolean isUIActionSupported(int)
    {
        com.android.camera.data.LocalMediaData$PhotoData r0;
        int i0, $i1;
        boolean $z0;

        r0 := @this: com.android.camera.data.LocalMediaData$PhotoData;

        i0 := @parameter0: int;

        $i1 = i0 & 7;

        if $i1 != i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isDataActionSupported(int)
    {
        com.android.camera.data.LocalMediaData$PhotoData r0;
        int i0, $i1;
        boolean $z0;

        r0 := @this: com.android.camera.data.LocalMediaData$PhotoData;

        i0 := @parameter0: int;

        $i1 = i0 & 14;

        if $i1 != i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean delete(android.content.Context)
    {
        com.android.camera.data.LocalMediaData$PhotoData r0;
        android.content.Context r1;
        android.content.ContentResolver r2;
        java.lang.StringBuilder $r3, $r5, $r6;
        android.net.Uri $r4;
        long $l0;
        java.lang.String $r7;
        boolean $z0;

        r0 := @this: com.android.camera.data.LocalMediaData$PhotoData;

        r1 := @parameter0: android.content.Context;

        r2 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r4 = <com.android.camera.data.LocalMediaData$PhotoData: android.net.Uri CONTENT_URI>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_id=");

        $l0 = r0.<com.android.camera.data.LocalMediaData$PhotoData: long mContentId>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>($r4, $r7, null);

        $z0 = specialinvoke r0.<com.android.camera.data.LocalMediaData: boolean delete(android.content.Context)>(r1);

        return $z0;
    }

    public android.net.Uri getUri()
    {
        com.android.camera.data.LocalMediaData$PhotoData r0;
        android.net.Uri r1, $r5;
        android.net.Uri$Builder $r2, $r4;
        long $l0;
        java.lang.String $r3;

        r0 := @this: com.android.camera.data.LocalMediaData$PhotoData;

        r1 = <com.android.camera.data.LocalMediaData$PhotoData: android.net.Uri CONTENT_URI>;

        $r2 = virtualinvoke r1.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $l0 = r0.<com.android.camera.data.LocalMediaData$PhotoData: long mContentId>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0);

        $r4 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r5;
    }

    public com.android.camera.data.MediaDetails getMediaDetails(android.content.Context)
    {
        com.android.camera.data.LocalMediaData$PhotoData r0;
        android.content.Context r1;
        com.android.camera.data.MediaDetails r2;
        java.lang.String $r3;
        int $i0;
        java.lang.Integer $r4;

        r0 := @this: com.android.camera.data.LocalMediaData$PhotoData;

        r1 := @parameter0: android.content.Context;

        r2 = specialinvoke r0.<com.android.camera.data.LocalMediaData: com.android.camera.data.MediaDetails getMediaDetails(android.content.Context)>(r1);

        $r3 = r0.<com.android.camera.data.LocalMediaData$PhotoData: java.lang.String mPath>;

        staticinvoke <com.android.camera.data.MediaDetails: void extractExifInfo(com.android.camera.data.MediaDetails,java.lang.String)>(r2, $r3);

        $i0 = r0.<com.android.camera.data.LocalMediaData$PhotoData: int mOrientation>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke r2.<com.android.camera.data.MediaDetails: void addDetail(int,java.lang.Object)>(7, $r4);

        return r2;
    }

    public int getLocalDataType()
    {
        com.android.camera.data.LocalMediaData$PhotoData r0;

        r0 := @this: com.android.camera.data.LocalMediaData$PhotoData;

        return 3;
    }

    public com.android.camera.data.LocalData refresh(android.content.Context)
    {
        com.android.camera.data.LocalMediaData$PhotoData r0, r2;
        android.content.Context r1;
        android.database.Cursor r3;
        android.content.ContentResolver $r4;
        android.net.Uri $r5;
        java.lang.String[] $r6;
        boolean $z0;

        r0 := @this: com.android.camera.data.LocalMediaData$PhotoData;

        r1 := @parameter0: android.content.Context;

        r2 = null;

        $r4 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r5 = virtualinvoke r0.<com.android.camera.data.LocalMediaData$PhotoData: android.net.Uri getUri()>();

        $r6 = <com.android.camera.data.LocalMediaData$PhotoData: java.lang.String[] QUERY_PROJECTION>;

        r3 = virtualinvoke $r4.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r5, $r6, null, null, null);

        if r3 == null goto label2;

        $z0 = interfaceinvoke r3.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label1;

        r2 = staticinvoke <com.android.camera.data.LocalMediaData$PhotoData: com.android.camera.data.LocalMediaData$PhotoData buildFromCursor(android.database.Cursor)>(r3);

     label1:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

     label2:
        return r2;
    }

    public java.lang.String getSignature()
    {
        com.android.camera.data.LocalMediaData$PhotoData r0;
        java.lang.String $r1;

        r0 := @this: com.android.camera.data.LocalMediaData$PhotoData;

        $r1 = r0.<com.android.camera.data.LocalMediaData$PhotoData: java.lang.String mSignature>;

        return $r1;
    }

    protected android.widget.ImageView fillImageView(android.content.Context, android.widget.ImageView, int, int, int, com.android.camera.data.LocalDataAdapter, boolean)
    {
        com.android.camera.data.LocalMediaData$PhotoData r0;
        android.content.Context r1;
        android.widget.ImageView r2;
        int i0, i1, i2, i3;
        com.android.camera.data.LocalDataAdapter r3;
        boolean z0, $z1, $z2, $z3, $z4;
        android.content.res.Resources $r4;
        java.lang.Object[] $r5;
        long $l4;
        java.lang.String $r6, $r7;

        r0 := @this: com.android.camera.data.LocalMediaData$PhotoData;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.widget.ImageView;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r3 := @parameter5: com.android.camera.data.LocalDataAdapter;

        z0 := @parameter6: boolean;

        specialinvoke r0.<com.android.camera.data.LocalMediaData$PhotoData: void loadImage(android.content.Context,android.widget.ImageView,int,int,int,boolean)>(r1, r2, i0, i1, i2, 0);

        i3 = 2131230931;

        $z1 = staticinvoke <com.android.camera.data.PanoramaMetadataLoader: boolean isPanorama(com.android.camera.data.LocalData)>(r0);

        if $z1 != 0 goto label1;

        $z3 = staticinvoke <com.android.camera.data.PanoramaMetadataLoader: boolean isPanorama360(com.android.camera.data.LocalData)>(r0);

        if $z3 == 0 goto label2;

     label1:
        i3 = 2131230933;

        goto label4;

     label2:
        $z2 = staticinvoke <com.android.camera.data.PanoramaMetadataLoader: boolean isPanoramaAndUseViewer(com.android.camera.data.LocalData)>(r0);

        if $z2 == 0 goto label3;

        i3 = 2131230934;

        goto label4;

     label3:
        $z4 = staticinvoke <com.android.camera.data.RgbzMetadataLoader: boolean hasRGBZData(com.android.camera.data.LocalData)>(r0);

        if $z4 == 0 goto label4;

        i3 = 2131230935;

     label4:
        $r4 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r5 = newarray (java.lang.Object)[1];

        $l4 = r0.<com.android.camera.data.LocalMediaData$PhotoData: long mDateModifiedInSeconds>;

        $r6 = staticinvoke <com.android.camera.data.LocalMediaData: java.lang.String access$200(long)>($l4);

        $r5[0] = $r6;

        $r7 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(i3, $r5);

        virtualinvoke r2.<android.widget.ImageView: void setContentDescription(java.lang.CharSequence)>($r7);

        return r2;
    }

    private void loadImage(android.content.Context, android.widget.ImageView, int, int, int, boolean)
    {
        com.android.camera.data.LocalMediaData$PhotoData r0;
        android.content.Context r1;
        android.widget.ImageView r2;
        int i0, i1, i2, $i3, $i5, $i7, $i9, $i10, $i11, $i12;
        boolean z0;
        com.bumptech.glide.BitmapRequestBuilder r3, $r10, $r11, $r17, $r19, $r20, $r29, $r30, $r31, $r32;
        com.bumptech.glide.RequestManager $r4, $r12, $r23;
        android.net.Uri $r5, $r13, $r24;
        long $l4, $l6, $l8;
        java.lang.String $r6, $r14, $r27;
        com.bumptech.glide.DrawableTypeRequest $r7, $r16, $r28;
        com.bumptech.glide.BitmapTypeRequest $r8, $r15, $r25;
        com.bumptech.glide.load.resource.bitmap.BitmapEncoder $r9, $r18, $r26;

        r0 := @this: com.android.camera.data.LocalMediaData$PhotoData;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.widget.ImageView;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        z0 := @parameter5: boolean;

        if i0 <= 0 goto label1;

        if i1 > 0 goto label2;

     label1:
        return;

     label2:
        $r4 = staticinvoke <com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)>(r1);

        $r5 = virtualinvoke r0.<com.android.camera.data.LocalMediaData$PhotoData: android.net.Uri getUri()>();

        $r6 = r0.<com.android.camera.data.LocalMediaData$PhotoData: java.lang.String mMimeType>;

        $l4 = r0.<com.android.camera.data.LocalMediaData$PhotoData: long mDateModifiedInSeconds>;

        $i3 = r0.<com.android.camera.data.LocalMediaData$PhotoData: int mOrientation>;

        $r7 = virtualinvoke $r4.<com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest loadFromMediaStore(android.net.Uri,java.lang.String,long,int)>($r5, $r6, $l4, $i3);

        $r8 = virtualinvoke $r7.<com.bumptech.glide.DrawableTypeRequest: com.bumptech.glide.BitmapTypeRequest asBitmap()>();

        $r9 = staticinvoke <com.android.camera.data.LocalMediaData: com.bumptech.glide.load.resource.bitmap.BitmapEncoder access$300()>();

        $r11 = virtualinvoke $r8.<com.bumptech.glide.BitmapTypeRequest: com.bumptech.glide.BitmapRequestBuilder encoder(com.bumptech.glide.load.ResourceEncoder)>($r9);

        $r10 = virtualinvoke $r11.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.BitmapRequestBuilder placeholder(int)>(i2);

        r3 = virtualinvoke $r10.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.BitmapRequestBuilder fitCenter()>();

        if z0 == 0 goto label3;

        $r23 = staticinvoke <com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)>(r1);

        $r24 = virtualinvoke r0.<com.android.camera.data.LocalMediaData$PhotoData: android.net.Uri getUri()>();

        $r27 = r0.<com.android.camera.data.LocalMediaData$PhotoData: java.lang.String mMimeType>;

        $l8 = r0.<com.android.camera.data.LocalMediaData$PhotoData: long mDateModifiedInSeconds>;

        $i7 = r0.<com.android.camera.data.LocalMediaData$PhotoData: int mOrientation>;

        $r28 = virtualinvoke $r23.<com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest loadFromMediaStore(android.net.Uri,java.lang.String,long,int)>($r24, $r27, $l8, $i7);

        $r25 = virtualinvoke $r28.<com.bumptech.glide.DrawableTypeRequest: com.bumptech.glide.BitmapTypeRequest asBitmap()>();

        $r26 = staticinvoke <com.android.camera.data.LocalMediaData: com.bumptech.glide.load.resource.bitmap.BitmapEncoder access$300()>();

        $r31 = virtualinvoke $r25.<com.bumptech.glide.BitmapTypeRequest: com.bumptech.glide.BitmapRequestBuilder encoder(com.bumptech.glide.load.ResourceEncoder)>($r26);

        $r32 = virtualinvoke $r31.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.BitmapRequestBuilder override(int,int)>(i0, i1);

        $r29 = virtualinvoke $r32.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.BitmapRequestBuilder fitCenter()>();

        $r30 = virtualinvoke r3.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.BitmapRequestBuilder thumbnail(com.bumptech.glide.BitmapRequestBuilder)>($r29);

        $i11 = virtualinvoke r0.<com.android.camera.data.LocalMediaData$PhotoData: int getWidth()>();

        $i12 = staticinvoke <java.lang.Math: int min(int,int)>($i11, 2048);

        $i9 = virtualinvoke r0.<com.android.camera.data.LocalMediaData$PhotoData: int getHeight()>();

        $i10 = staticinvoke <java.lang.Math: int min(int,int)>($i9, 2048);

        virtualinvoke $r30.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.BitmapRequestBuilder override(int,int)>($i12, $i10);

        goto label4;

     label3:
        $r12 = staticinvoke <com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)>(r1);

        $r13 = virtualinvoke r0.<com.android.camera.data.LocalMediaData$PhotoData: android.net.Uri getUri()>();

        $r14 = r0.<com.android.camera.data.LocalMediaData$PhotoData: java.lang.String mMimeType>;

        $l6 = r0.<com.android.camera.data.LocalMediaData$PhotoData: long mDateModifiedInSeconds>;

        $i5 = r0.<com.android.camera.data.LocalMediaData$PhotoData: int mOrientation>;

        $r16 = virtualinvoke $r12.<com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest loadFromMediaStore(android.net.Uri,java.lang.String,long,int)>($r13, $r14, $l6, $i5);

        $r15 = virtualinvoke $r16.<com.bumptech.glide.DrawableTypeRequest: com.bumptech.glide.BitmapTypeRequest asBitmap()>();

        $r18 = staticinvoke <com.android.camera.data.LocalMediaData: com.bumptech.glide.load.resource.bitmap.BitmapEncoder access$300()>();

        $r17 = virtualinvoke $r15.<com.bumptech.glide.BitmapTypeRequest: com.bumptech.glide.BitmapRequestBuilder encoder(com.bumptech.glide.load.ResourceEncoder)>($r18);

        $r20 = virtualinvoke $r17.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.BitmapRequestBuilder override(int,int)>(512, 384);

        $r19 = virtualinvoke r3.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.BitmapRequestBuilder thumbnail(com.bumptech.glide.BitmapRequestBuilder)>($r20);

        virtualinvoke $r19.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.BitmapRequestBuilder override(int,int)>(i0, i1);

     label4:
        virtualinvoke r3.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.request.target.Target into(android.widget.ImageView)>(r2);

        return;
    }

    public void recycle(android.view.View)
    {
        com.android.camera.data.LocalMediaData$PhotoData r0;
        android.view.View r1;

        r0 := @this: com.android.camera.data.LocalMediaData$PhotoData;

        r1 := @parameter0: android.view.View;

        specialinvoke r0.<com.android.camera.data.LocalMediaData: void recycle(android.view.View)>(r1);

        if r1 == null goto label1;

        staticinvoke <com.bumptech.glide.Glide: void clear(android.view.View)>(r1);

     label1:
        return;
    }

    public com.android.camera.data.LocalDataViewType getItemViewType()
    {
        com.android.camera.data.LocalMediaData$PhotoData r0;
        com.android.camera.data.LocalDataViewType $r1;

        r0 := @this: com.android.camera.data.LocalMediaData$PhotoData;

        $r1 = <com.android.camera.data.LocalDataViewType: com.android.camera.data.LocalDataViewType PHOTO>;

        return $r1;
    }

    public void loadFullImage(android.content.Context, int, int, android.view.View, com.android.camera.data.LocalDataAdapter)
    {
        com.android.camera.data.LocalMediaData$PhotoData r0;
        android.content.Context r1;
        int i0, i1;
        android.view.View r2;
        com.android.camera.data.LocalDataAdapter r3;
        android.widget.ImageView $r4;

        r0 := @this: com.android.camera.data.LocalMediaData$PhotoData;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: android.view.View;

        r3 := @parameter4: com.android.camera.data.LocalDataAdapter;

        $r4 = (android.widget.ImageView) r2;

        specialinvoke r0.<com.android.camera.data.LocalMediaData$PhotoData: void loadImage(android.content.Context,android.widget.ImageView,int,int,int,boolean)>(r1, $r4, i0, i1, 0, 1);

        return;
    }

    static com.android.camera.data.LocalMediaData$PhotoData access$400(android.database.Cursor)
    {
        android.database.Cursor r0;
        com.android.camera.data.LocalMediaData$PhotoData $r1;

        r0 := @parameter0: android.database.Cursor;

        $r1 = staticinvoke <com.android.camera.data.LocalMediaData$PhotoData: com.android.camera.data.LocalMediaData$PhotoData buildFromCursor(android.database.Cursor)>(r0);

        return $r1;
    }

    static void <clinit>()
    {
        com.android.camera.debug.Log$Tag $r0;
        android.net.Uri $r1;
        java.lang.String[] $r2;

        <com.android.camera.data.LocalMediaData$PhotoData: int mSupportedDataActions> = 14;

        <com.android.camera.data.LocalMediaData$PhotoData: int mSupportedUIActions> = 7;

        <com.android.camera.data.LocalMediaData$PhotoData: java.lang.String QUERY_ORDER> = "datetaken DESC, _id DESC";

        <com.android.camera.data.LocalMediaData$PhotoData: int MAXIMUM_TEXTURE_SIZE> = 2048;

        <com.android.camera.data.LocalMediaData$PhotoData: int COL_LONGITUDE> = 11;

        <com.android.camera.data.LocalMediaData$PhotoData: int COL_LATITUDE> = 10;

        <com.android.camera.data.LocalMediaData$PhotoData: int COL_SIZE> = 9;

        <com.android.camera.data.LocalMediaData$PhotoData: int COL_HEIGHT> = 8;

        <com.android.camera.data.LocalMediaData$PhotoData: int COL_WIDTH> = 7;

        <com.android.camera.data.LocalMediaData$PhotoData: int COL_ORIENTATION> = 6;

        <com.android.camera.data.LocalMediaData$PhotoData: int COL_DATA> = 5;

        <com.android.camera.data.LocalMediaData$PhotoData: int COL_DATE_MODIFIED> = 4;

        <com.android.camera.data.LocalMediaData$PhotoData: int COL_DATE_TAKEN> = 3;

        <com.android.camera.data.LocalMediaData$PhotoData: int COL_MIME_TYPE> = 2;

        <com.android.camera.data.LocalMediaData$PhotoData: int COL_TITLE> = 1;

        <com.android.camera.data.LocalMediaData$PhotoData: int COL_ID> = 0;

        $r0 = new com.android.camera.debug.Log$Tag;

        specialinvoke $r0.<com.android.camera.debug.Log$Tag: void <init>(java.lang.String)>("PhotoData");

        <com.android.camera.data.LocalMediaData$PhotoData: com.android.camera.debug.Log$Tag TAG> = $r0;

        $r1 = <android.provider.MediaStore$Images$Media: android.net.Uri EXTERNAL_CONTENT_URI>;

        <com.android.camera.data.LocalMediaData$PhotoData: android.net.Uri CONTENT_URI> = $r1;

        $r2 = newarray (java.lang.String)[12];

        $r2[0] = "_id";

        $r2[1] = "title";

        $r2[2] = "mime_type";

        $r2[3] = "datetaken";

        $r2[4] = "date_modified";

        $r2[5] = "_data";

        $r2[6] = "orientation";

        $r2[7] = "width";

        $r2[8] = "height";

        $r2[9] = "_size";

        $r2[10] = "latitude";

        $r2[11] = "longitude";

        <com.android.camera.data.LocalMediaData$PhotoData: java.lang.String[] QUERY_PROJECTION> = $r2;

        return;
    }
}
