class com.android.volley.CacheDispatcher$1 extends java.lang.Object implements java.lang.Runnable
{
    final com.android.volley.Request val$request;
    final com.android.volley.CacheDispatcher this$0;

    void <init>(com.android.volley.CacheDispatcher, com.android.volley.Request)
    {
        com.android.volley.CacheDispatcher$1 r0;
        com.android.volley.CacheDispatcher r1;
        com.android.volley.Request r2;

        r0 := @this: com.android.volley.CacheDispatcher$1;

        r1 := @parameter0: com.android.volley.CacheDispatcher;

        r2 := @parameter1: com.android.volley.Request;

        r0.<com.android.volley.CacheDispatcher$1: com.android.volley.CacheDispatcher this$0> = r1;

        r0.<com.android.volley.CacheDispatcher$1: com.android.volley.Request val$request> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        com.android.volley.CacheDispatcher$1 r0;
        com.android.volley.CacheDispatcher $r2;
        java.util.concurrent.BlockingQueue $r3;
        com.android.volley.Request $r4;
        java.lang.InterruptedException $r5;

        r0 := @this: com.android.volley.CacheDispatcher$1;

     label1:
        $r2 = r0.<com.android.volley.CacheDispatcher$1: com.android.volley.CacheDispatcher this$0>;

        $r3 = staticinvoke <com.android.volley.CacheDispatcher: java.util.concurrent.BlockingQueue access$000(com.android.volley.CacheDispatcher)>($r2);

        $r4 = r0.<com.android.volley.CacheDispatcher$1: com.android.volley.Request val$request>;

        interfaceinvoke $r3.<java.util.concurrent.BlockingQueue: void put(java.lang.Object)>($r4);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

     label4:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }
}
