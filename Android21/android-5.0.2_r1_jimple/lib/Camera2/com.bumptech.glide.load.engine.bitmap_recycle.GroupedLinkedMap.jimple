class com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap extends java.lang.Object
{
    private final com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry head;
    private final java.util.Map keyToEntry;

    void <init>()
    {
        com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap r0;
        com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry $r1;
        java.util.HashMap $r2;

        r0 := @this: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry;

        specialinvoke $r1.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry: void <init>()>();

        r0.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry head> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap: java.util.Map keyToEntry> = $r2;

        return;
    }

    public void put(com.bumptech.glide.load.engine.bitmap_recycle.Poolable, java.lang.Object)
    {
        com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap r0;
        com.bumptech.glide.load.engine.bitmap_recycle.Poolable r1;
        java.lang.Object r2, $r5;
        com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry r3, $r6;
        java.util.Map $r4, $r7;

        r0 := @this: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap;

        r1 := @parameter0: com.bumptech.glide.load.engine.bitmap_recycle.Poolable;

        r2 := @parameter1: java.lang.Object;

        $r4 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap: java.util.Map keyToEntry>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry) $r5;

        if r3 != null goto label1;

        $r6 = new com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry;

        specialinvoke $r6.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry: void <init>(java.lang.Object)>(r1);

        r3 = $r6;

        specialinvoke r0.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap: void makeTail(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry)>(r3);

        $r7 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap: java.util.Map keyToEntry>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r3);

        goto label2;

     label1:
        interfaceinvoke r1.<com.bumptech.glide.load.engine.bitmap_recycle.Poolable: void offer()>();

     label2:
        virtualinvoke r3.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry: void add(java.lang.Object)>(r2);

        return;
    }

    public java.lang.Object get(com.bumptech.glide.load.engine.bitmap_recycle.Poolable)
    {
        com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap r0;
        com.bumptech.glide.load.engine.bitmap_recycle.Poolable r1;
        com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry r2, $r6;
        java.util.Map $r3, $r7;
        java.lang.Object $r4, $r5;

        r0 := @this: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap;

        r1 := @parameter0: com.bumptech.glide.load.engine.bitmap_recycle.Poolable;

        $r3 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap: java.util.Map keyToEntry>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry) $r4;

        if r2 != null goto label1;

        $r6 = new com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry;

        specialinvoke $r6.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry: void <init>(java.lang.Object)>(r1);

        r2 = $r6;

        $r7 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap: java.util.Map keyToEntry>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        goto label2;

     label1:
        interfaceinvoke r1.<com.bumptech.glide.load.engine.bitmap_recycle.Poolable: void offer()>();

     label2:
        specialinvoke r0.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap: void makeHead(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry)>(r2);

        $r5 = virtualinvoke r2.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry: java.lang.Object removeLast()>();

        return $r5;
    }

    public java.lang.Object removeLast()
    {
        com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap r0;
        com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry r1, $r3, $r4;
        java.lang.Object r2, $r6, $r8;
        java.util.Map $r5;
        com.bumptech.glide.load.engine.bitmap_recycle.Poolable $r9;

        r0 := @this: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap;

        $r3 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry head>;

        r1 = $r3.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry prev>;

     label1:
        $r4 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry head>;

        if r1 == $r4 goto label3;

        r2 = virtualinvoke r1.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry: java.lang.Object removeLast()>();

        if r2 == null goto label2;

        return r2;

     label2:
        staticinvoke <com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap: void removeEntry(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry)>(r1);

        $r5 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap: java.util.Map keyToEntry>;

        $r6 = staticinvoke <com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry: java.lang.Object access$000(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry)>(r1);

        interfaceinvoke $r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r6);

        $r8 = staticinvoke <com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry: java.lang.Object access$000(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry)>(r1);

        $r9 = (com.bumptech.glide.load.engine.bitmap_recycle.Poolable) $r8;

        interfaceinvoke $r9.<com.bumptech.glide.load.engine.bitmap_recycle.Poolable: void offer()>();

        r1 = r1.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry prev>;

        goto label1;

     label3:
        return null;
    }

    public java.lang.String toString()
    {
        com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap r0;
        java.lang.String r1, $r8;
        com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry r2, $r3, $r4;
        boolean z0;
        java.lang.StringBuilder $r5, $r6, $r7, $r9, $r10, $r12, $r13, $r14, $r15, $r16;
        int $i0, $i1, $i2;
        java.lang.Object $r11;

        r0 := @this: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap;

        r1 = "GroupedLinkedMap( ";

        $r3 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry head>;

        r2 = $r3.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry next>;

        z0 = 0;

     label1:
        $r4 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry head>;

        if r2 == $r4 goto label2;

        z0 = 1;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        $r11 = staticinvoke <com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry: java.lang.Object access$000(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry)>(r2);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $i2 = virtualinvoke r2.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry: int size()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}, ");

        r1 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        r2 = r2.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry next>;

        goto label1;

     label2:
        if z0 == 0 goto label3;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $i1 = $i0 - 2;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

     label3:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    private void makeHead(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry)
    {
        com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap r0;
        com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry r1, $r2, $r3, $r4;

        r0 := @this: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap;

        r1 := @parameter0: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry;

        staticinvoke <com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap: void removeEntry(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry)>(r1);

        $r2 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry head>;

        r1.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry prev> = $r2;

        $r3 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry head>;

        $r4 = $r3.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry next>;

        r1.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry next> = $r4;

        staticinvoke <com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap: void updateEntry(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry)>(r1);

        return;
    }

    private void makeTail(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry)
    {
        com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap r0;
        com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry r1, $r2, $r3, $r4;

        r0 := @this: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap;

        r1 := @parameter0: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry;

        staticinvoke <com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap: void removeEntry(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry)>(r1);

        $r2 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry head>;

        $r3 = $r2.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry prev>;

        r1.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry prev> = $r3;

        $r4 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry head>;

        r1.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry next> = $r4;

        staticinvoke <com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap: void updateEntry(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry)>(r1);

        return;
    }

    private static void updateEntry(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry)
    {
        com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry r0, $r1, $r2;

        r0 := @parameter0: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry;

        $r1 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry next>;

        $r1.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry prev> = r0;

        $r2 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry prev>;

        $r2.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry next> = r0;

        return;
    }

    private static void removeEntry(com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry)
    {
        com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry r0, $r1, $r2, $r3, $r4;

        r0 := @parameter0: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry;

        $r2 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry prev>;

        $r1 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry next>;

        $r2.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry next> = $r1;

        $r4 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry next>;

        $r3 = r0.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry prev>;

        $r4.<com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry: com.bumptech.glide.load.engine.bitmap_recycle.GroupedLinkedMap$LinkedEntry prev> = $r3;

        return;
    }
}
