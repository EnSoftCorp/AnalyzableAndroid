public class com.android.volley.NetworkDispatcher extends java.lang.Thread
{
    private final java.util.concurrent.BlockingQueue mQueue;
    private final com.android.volley.Network mNetwork;
    private final com.android.volley.Cache mCache;
    private final com.android.volley.ResponseDelivery mDelivery;
    private volatile boolean mQuit;

    public void <init>(java.util.concurrent.BlockingQueue, com.android.volley.Network, com.android.volley.Cache, com.android.volley.ResponseDelivery)
    {
        com.android.volley.NetworkDispatcher r0;
        java.util.concurrent.BlockingQueue r1;
        com.android.volley.Network r2;
        com.android.volley.Cache r3;
        com.android.volley.ResponseDelivery r4;

        r0 := @this: com.android.volley.NetworkDispatcher;

        r1 := @parameter0: java.util.concurrent.BlockingQueue;

        r2 := @parameter1: com.android.volley.Network;

        r3 := @parameter2: com.android.volley.Cache;

        r4 := @parameter3: com.android.volley.ResponseDelivery;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        r0.<com.android.volley.NetworkDispatcher: boolean mQuit> = 0;

        r0.<com.android.volley.NetworkDispatcher: java.util.concurrent.BlockingQueue mQueue> = r1;

        r0.<com.android.volley.NetworkDispatcher: com.android.volley.Network mNetwork> = r2;

        r0.<com.android.volley.NetworkDispatcher: com.android.volley.Cache mCache> = r3;

        r0.<com.android.volley.NetworkDispatcher: com.android.volley.ResponseDelivery mDelivery> = r4;

        return;
    }

    public void quit()
    {
        com.android.volley.NetworkDispatcher r0;

        r0 := @this: com.android.volley.NetworkDispatcher;

        r0.<com.android.volley.NetworkDispatcher: boolean mQuit> = 1;

        virtualinvoke r0.<com.android.volley.NetworkDispatcher: void interrupt()>();

        return;
    }

    private void addTrafficStatsTag(com.android.volley.Request)
    {
        com.android.volley.NetworkDispatcher r0;
        com.android.volley.Request r1;
        int $i0, $i1;

        r0 := @this: com.android.volley.NetworkDispatcher;

        r1 := @parameter0: com.android.volley.Request;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 14 goto label1;

        $i1 = virtualinvoke r1.<com.android.volley.Request: int getTrafficStatsTag()>();

        staticinvoke <android.net.TrafficStats: void setThreadStatsTag(int)>($i1);

     label1:
        return;
    }

    public void run()
    {
        com.android.volley.NetworkDispatcher r0;
        com.android.volley.Request r1;
        com.android.volley.Response r3;
        java.util.concurrent.BlockingQueue $r4;
        java.lang.Object $r5;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.android.volley.Network $r6;
        com.android.volley.ResponseDelivery $r7, $r17;
        com.android.volley.Cache$Entry $r8, $r11;
        com.android.volley.Cache $r9;
        java.lang.String $r10, $r16;
        java.lang.InterruptedException $r12;
        com.android.volley.VolleyError $r13, $r18, r20;
        java.lang.Exception $r14, r21;
        java.lang.Object[] $r15;
        com.android.volley.NetworkResponse r19;

        r0 := @this: com.android.volley.NetworkDispatcher;

        staticinvoke <android.os.Process: void setThreadPriority(int)>(10);

     label01:
        $r4 = r0.<com.android.volley.NetworkDispatcher: java.util.concurrent.BlockingQueue mQueue>;

        $r5 = interfaceinvoke $r4.<java.util.concurrent.BlockingQueue: java.lang.Object take()>();

        r1 = (com.android.volley.Request) $r5;

     label02:
        goto label05;

     label03:
        $r12 := @caughtexception;

        $z4 = r0.<com.android.volley.NetworkDispatcher: boolean mQuit>;

        if $z4 == 0 goto label04;

        return;

     label04:
        goto label01;

     label05:
        virtualinvoke r1.<com.android.volley.Request: void addMarker(java.lang.String)>("network-queue-take");

        $z0 = virtualinvoke r1.<com.android.volley.Request: boolean isCanceled()>();

        if $z0 == 0 goto label07;

        virtualinvoke r1.<com.android.volley.Request: void finish(java.lang.String)>("network-discard-cancelled");

     label06:
        goto label01;

     label07:
        specialinvoke r0.<com.android.volley.NetworkDispatcher: void addTrafficStatsTag(com.android.volley.Request)>(r1);

        $r6 = r0.<com.android.volley.NetworkDispatcher: com.android.volley.Network mNetwork>;

        r19 = interfaceinvoke $r6.<com.android.volley.Network: com.android.volley.NetworkResponse performRequest(com.android.volley.Request)>(r1);

        virtualinvoke r1.<com.android.volley.Request: void addMarker(java.lang.String)>("network-http-complete");

        $z1 = r19.<com.android.volley.NetworkResponse: boolean notModified>;

        if $z1 == 0 goto label09;

        $z3 = virtualinvoke r1.<com.android.volley.Request: boolean hasHadResponseDelivered()>();

        if $z3 == 0 goto label09;

        virtualinvoke r1.<com.android.volley.Request: void finish(java.lang.String)>("not-modified");

     label08:
        goto label01;

     label09:
        r3 = virtualinvoke r1.<com.android.volley.Request: com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse)>(r19);

        virtualinvoke r1.<com.android.volley.Request: void addMarker(java.lang.String)>("network-parse-complete");

        $z2 = virtualinvoke r1.<com.android.volley.Request: boolean shouldCache()>();

        if $z2 == 0 goto label10;

        $r8 = r3.<com.android.volley.Response: com.android.volley.Cache$Entry cacheEntry>;

        if $r8 == null goto label10;

        $r9 = r0.<com.android.volley.NetworkDispatcher: com.android.volley.Cache mCache>;

        $r10 = virtualinvoke r1.<com.android.volley.Request: java.lang.String getCacheKey()>();

        $r11 = r3.<com.android.volley.Response: com.android.volley.Cache$Entry cacheEntry>;

        interfaceinvoke $r9.<com.android.volley.Cache: void put(java.lang.String,com.android.volley.Cache$Entry)>($r10, $r11);

        virtualinvoke r1.<com.android.volley.Request: void addMarker(java.lang.String)>("network-cache-written");

     label10:
        virtualinvoke r1.<com.android.volley.Request: void markDelivered()>();

        $r7 = r0.<com.android.volley.NetworkDispatcher: com.android.volley.ResponseDelivery mDelivery>;

        interfaceinvoke $r7.<com.android.volley.ResponseDelivery: void postResponse(com.android.volley.Request,com.android.volley.Response)>(r1, r3);

     label11:
        goto label01;

     label12:
        $r13 := @caughtexception;

        r20 = $r13;

        specialinvoke r0.<com.android.volley.NetworkDispatcher: void parseAndDeliverNetworkError(com.android.volley.Request,com.android.volley.VolleyError)>(r1, r20);

        goto label01;

     label13:
        $r14 := @caughtexception;

        r21 = $r14;

        $r15 = newarray (java.lang.Object)[1];

        $r16 = virtualinvoke r21.<java.lang.Exception: java.lang.String toString()>();

        $r15[0] = $r16;

        staticinvoke <com.android.volley.VolleyLog: void e(java.lang.Throwable,java.lang.String,java.lang.Object[])>(r21, "Unhandled exception %s", $r15);

        $r17 = r0.<com.android.volley.NetworkDispatcher: com.android.volley.ResponseDelivery mDelivery>;

        $r18 = new com.android.volley.VolleyError;

        specialinvoke $r18.<com.android.volley.VolleyError: void <init>(java.lang.Throwable)>(r21);

        interfaceinvoke $r17.<com.android.volley.ResponseDelivery: void postError(com.android.volley.Request,com.android.volley.VolleyError)>(r1, $r18);

        goto label01;

        catch java.lang.InterruptedException from label01 to label02 with label03;
        catch com.android.volley.VolleyError from label05 to label06 with label12;
        catch com.android.volley.VolleyError from label07 to label08 with label12;
        catch com.android.volley.VolleyError from label09 to label11 with label12;
        catch java.lang.Exception from label05 to label06 with label13;
        catch java.lang.Exception from label07 to label08 with label13;
        catch java.lang.Exception from label09 to label11 with label13;
    }

    private void parseAndDeliverNetworkError(com.android.volley.Request, com.android.volley.VolleyError)
    {
        com.android.volley.NetworkDispatcher r0;
        com.android.volley.Request r1;
        com.android.volley.VolleyError r2, r4;
        com.android.volley.ResponseDelivery $r3;

        r0 := @this: com.android.volley.NetworkDispatcher;

        r1 := @parameter0: com.android.volley.Request;

        r2 := @parameter1: com.android.volley.VolleyError;

        r4 = virtualinvoke r1.<com.android.volley.Request: com.android.volley.VolleyError parseNetworkError(com.android.volley.VolleyError)>(r2);

        $r3 = r0.<com.android.volley.NetworkDispatcher: com.android.volley.ResponseDelivery mDelivery>;

        interfaceinvoke $r3.<com.android.volley.ResponseDelivery: void postError(com.android.volley.Request,com.android.volley.VolleyError)>(r1, r4);

        return;
    }
}
