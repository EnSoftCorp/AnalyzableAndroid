class com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl extends java.lang.Object implements com.android.camera.session.CaptureSession
{
    private android.net.Uri mUri;
    private final java.lang.String mTitle;
    private android.location.Location mLocation;
    private int mProgressPercent;
    private java.lang.CharSequence mProgressMessage;
    private com.android.camera.session.PlaceholderManager$Session mPlaceHolderSession;
    private boolean mNoPlaceHolderRequired;
    private android.net.Uri mContentUri;
    private final java.util.HashSet mProgressListeners;
    private final long mSessionStartMillis;
    final com.android.camera.session.CaptureSessionManagerImpl this$0;

    private void <init>(com.android.camera.session.CaptureSessionManagerImpl, java.lang.String, long, android.location.Location)
    {
        com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl r0;
        com.android.camera.session.CaptureSessionManagerImpl r1;
        java.lang.String r2;
        long l0;
        android.location.Location r3;
        java.util.HashSet $r4;

        r0 := @this: com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl;

        r1 := @parameter0: com.android.camera.session.CaptureSessionManagerImpl;

        r2 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        r3 := @parameter3: android.location.Location;

        r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: com.android.camera.session.CaptureSessionManagerImpl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: int mProgressPercent> = 0;

        r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: boolean mNoPlaceHolderRequired> = 0;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: java.util.HashSet mProgressListeners> = $r4;

        r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: java.lang.String mTitle> = r2;

        r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: long mSessionStartMillis> = l0;

        r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: android.location.Location mLocation> = r3;

        return;
    }

    public java.lang.String getTitle()
    {
        com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl r0;
        java.lang.String $r1;

        r0 := @this: com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl;

        $r1 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: java.lang.String mTitle>;

        return $r1;
    }

    public android.location.Location getLocation()
    {
        com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl r0;
        android.location.Location $r1;

        r0 := @this: com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl;

        $r1 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: android.location.Location mLocation>;

        return $r1;
    }

    public void setLocation(android.location.Location)
    {
        com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl r0;
        android.location.Location r1;

        r0 := @this: com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl;

        r1 := @parameter0: android.location.Location;

        r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: android.location.Location mLocation> = r1;

        return;
    }

    public synchronized void setProgress(int)
    {
        com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl r0;
        int i0, $i1;
        java.util.Iterator r1;
        com.android.camera.session.CaptureSession$ProgressListener r2;
        android.net.Uri $r3;
        com.android.camera.session.CaptureSessionManagerImpl $r4;
        java.util.HashSet $r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl;

        i0 := @parameter0: int;

        r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: int mProgressPercent> = i0;

        $r4 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: com.android.camera.session.CaptureSessionManagerImpl this$0>;

        $r3 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: android.net.Uri mUri>;

        $i1 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: int mProgressPercent>;

        staticinvoke <com.android.camera.session.CaptureSessionManagerImpl: void access$000(com.android.camera.session.CaptureSessionManagerImpl,android.net.Uri,int)>($r4, $r3, $i1);

        $r5 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: java.util.HashSet mProgressListeners>;

        r1 = virtualinvoke $r5.<java.util.HashSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.camera.session.CaptureSession$ProgressListener) $r6;

        interfaceinvoke r2.<com.android.camera.session.CaptureSession$ProgressListener: void onProgressChanged(int)>(i0);

        goto label1;

     label2:
        return;
    }

    public synchronized int getProgress()
    {
        com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl r0;
        int $i0;

        r0 := @this: com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl;

        $i0 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: int mProgressPercent>;

        return $i0;
    }

    public synchronized java.lang.CharSequence getProgressMessage()
    {
        com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl r0;
        java.lang.CharSequence $r1;

        r0 := @this: com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl;

        $r1 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: java.lang.CharSequence mProgressMessage>;

        return $r1;
    }

    public synchronized void setProgressMessage(java.lang.CharSequence)
    {
        com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl r0;
        java.lang.CharSequence r1;
        java.util.Iterator r2;
        com.android.camera.session.CaptureSession$ProgressListener r3;
        android.net.Uri $r4;
        com.android.camera.session.CaptureSessionManagerImpl $r5;
        java.util.HashSet $r6;
        boolean $z0;
        java.lang.Object $r7;

        r0 := @this: com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl;

        r1 := @parameter0: java.lang.CharSequence;

        r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: java.lang.CharSequence mProgressMessage> = r1;

        $r5 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: com.android.camera.session.CaptureSessionManagerImpl this$0>;

        $r4 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: android.net.Uri mUri>;

        staticinvoke <com.android.camera.session.CaptureSessionManagerImpl: void access$100(com.android.camera.session.CaptureSessionManagerImpl,android.net.Uri,java.lang.CharSequence)>($r5, $r4, r1);

        $r6 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: java.util.HashSet mProgressListeners>;

        r2 = virtualinvoke $r6.<java.util.HashSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.camera.session.CaptureSession$ProgressListener) $r7;

        interfaceinvoke r3.<com.android.camera.session.CaptureSession$ProgressListener: void onStatusMessageChanged(java.lang.CharSequence)>(r1);

        goto label1;

     label2:
        return;
    }

    public void startEmpty()
    {
        com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl r0;

        r0 := @this: com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl;

        r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: boolean mNoPlaceHolderRequired> = 1;

        return;
    }

    public synchronized void startSession(byte[], java.lang.CharSequence)
    {
        com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl r0;
        byte[] r1;
        java.lang.CharSequence r2;
        com.android.camera.session.CaptureSessionManagerImpl $r3, $r10, $r12;
        com.android.camera.session.PlaceholderManager $r4;
        long $l0;
        java.lang.String $r5;
        com.android.camera.session.PlaceholderManager$Session $r6, $r7;
        android.net.Uri $r8, $r9, $r11;

        r0 := @this: com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl;

        r1 := @parameter0: byte[];

        r2 := @parameter1: java.lang.CharSequence;

        r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: java.lang.CharSequence mProgressMessage> = r2;

        $r3 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: com.android.camera.session.CaptureSessionManagerImpl this$0>;

        $r4 = staticinvoke <com.android.camera.session.CaptureSessionManagerImpl: com.android.camera.session.PlaceholderManager access$200(com.android.camera.session.CaptureSessionManagerImpl)>($r3);

        $r5 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: java.lang.String mTitle>;

        $l0 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: long mSessionStartMillis>;

        $r6 = virtualinvoke $r4.<com.android.camera.session.PlaceholderManager: com.android.camera.session.PlaceholderManager$Session insertPlaceholder(java.lang.String,byte[],long)>($r5, r1, $l0);

        r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: com.android.camera.session.PlaceholderManager$Session mPlaceHolderSession> = $r6;

        $r7 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: com.android.camera.session.PlaceholderManager$Session mPlaceHolderSession>;

        $r8 = $r7.<com.android.camera.session.PlaceholderManager$Session: android.net.Uri outputUri>;

        r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: android.net.Uri mUri> = $r8;

        $r10 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: com.android.camera.session.CaptureSessionManagerImpl this$0>;

        $r9 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: android.net.Uri mUri>;

        virtualinvoke $r10.<com.android.camera.session.CaptureSessionManagerImpl: void putSession(android.net.Uri,com.android.camera.session.CaptureSession)>($r9, r0);

        $r12 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: com.android.camera.session.CaptureSessionManagerImpl this$0>;

        $r11 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: android.net.Uri mUri>;

        staticinvoke <com.android.camera.session.CaptureSessionManagerImpl: void access$300(com.android.camera.session.CaptureSessionManagerImpl,android.net.Uri)>($r12, $r11);

        return;
    }

    public synchronized void startSession(android.net.Uri, java.lang.CharSequence)
    {
        com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl r0;
        android.net.Uri r1, $r8, $r11;
        java.lang.CharSequence r2;
        com.android.camera.session.CaptureSessionManagerImpl $r3, $r6, $r12;
        com.android.camera.session.PlaceholderManager $r4;
        com.android.camera.session.PlaceholderManager$Session $r5;
        java.util.Map $r7;
        java.lang.String $r9;

        r0 := @this: com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.CharSequence;

        r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: android.net.Uri mUri> = r1;

        r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: java.lang.CharSequence mProgressMessage> = r2;

        $r3 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: com.android.camera.session.CaptureSessionManagerImpl this$0>;

        $r4 = staticinvoke <com.android.camera.session.CaptureSessionManagerImpl: com.android.camera.session.PlaceholderManager access$200(com.android.camera.session.CaptureSessionManagerImpl)>($r3);

        $r5 = virtualinvoke $r4.<com.android.camera.session.PlaceholderManager: com.android.camera.session.PlaceholderManager$Session convertToPlaceholder(android.net.Uri)>(r1);

        r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: com.android.camera.session.PlaceholderManager$Session mPlaceHolderSession> = $r5;

        $r6 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: com.android.camera.session.CaptureSessionManagerImpl this$0>;

        $r7 = staticinvoke <com.android.camera.session.CaptureSessionManagerImpl: java.util.Map access$400(com.android.camera.session.CaptureSessionManagerImpl)>($r6);

        $r8 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: android.net.Uri mUri>;

        $r9 = virtualinvoke $r8.<android.net.Uri: java.lang.String toString()>();

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, r0);

        $r12 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: com.android.camera.session.CaptureSessionManagerImpl this$0>;

        $r11 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: android.net.Uri mUri>;

        staticinvoke <com.android.camera.session.CaptureSessionManagerImpl: void access$300(com.android.camera.session.CaptureSessionManagerImpl,android.net.Uri)>($r12, $r11);

        return;
    }

    public synchronized void cancel()
    {
        com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl r0;
        android.net.Uri $r1, $r2;
        com.android.camera.session.CaptureSessionManagerImpl $r3;
        java.lang.String $r4;

        r0 := @this: com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl;

        $r1 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: android.net.Uri mUri>;

        if $r1 == null goto label1;

        $r3 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: com.android.camera.session.CaptureSessionManagerImpl this$0>;

        $r2 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: android.net.Uri mUri>;

        $r4 = virtualinvoke $r2.<android.net.Uri: java.lang.String toString()>();

        staticinvoke <com.android.camera.session.CaptureSessionManagerImpl: void access$500(com.android.camera.session.CaptureSessionManagerImpl,java.lang.String)>($r3, $r4);

     label1:
        return;
    }

    public synchronized void saveAndFinish(byte[], int, int, int, com.android.camera.exif.ExifInterface, com.android.camera.app.MediaSaver$OnMediaSavedListener)
    {
        com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl r0;
        byte[] r1;
        int i0, i1, i2;
        com.android.camera.exif.ExifInterface r2;
        com.android.camera.app.MediaSaver$OnMediaSavedListener r3;
        boolean $z0;
        com.android.camera.session.PlaceholderManager$Session $r4, $r8, $r12;
        com.android.camera.session.CaptureSessionManagerImpl $r5, $r11, $r14, $r16, $r18;
        com.android.camera.session.PlaceholderManager $r6;
        android.location.Location $r7;
        android.net.Uri $r9, $r10, $r15;
        java.lang.String $r13, $r20;
        java.lang.IllegalStateException $r17;
        com.android.camera.app.MediaSaver $r19;
        long $l3;
        android.content.ContentResolver $r21;

        r0 := @this: com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: com.android.camera.exif.ExifInterface;

        r3 := @parameter5: com.android.camera.app.MediaSaver$OnMediaSavedListener;

        $z0 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: boolean mNoPlaceHolderRequired>;

        if $z0 == 0 goto label1;

        $r16 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: com.android.camera.session.CaptureSessionManagerImpl this$0>;

        $r19 = staticinvoke <com.android.camera.session.CaptureSessionManagerImpl: com.android.camera.app.MediaSaver access$700(com.android.camera.session.CaptureSessionManagerImpl)>($r16);

        $r20 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: java.lang.String mTitle>;

        $l3 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: long mSessionStartMillis>;

        $r18 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: com.android.camera.session.CaptureSessionManagerImpl this$0>;

        $r21 = staticinvoke <com.android.camera.session.CaptureSessionManagerImpl: android.content.ContentResolver access$600(com.android.camera.session.CaptureSessionManagerImpl)>($r18);

        interfaceinvoke $r19.<com.android.camera.app.MediaSaver: void addImage(byte[],java.lang.String,long,android.location.Location,int,int,int,com.android.camera.exif.ExifInterface,com.android.camera.app.MediaSaver$OnMediaSavedListener,android.content.ContentResolver)>(r1, $r20, $l3, null, i0, i1, i2, r2, r3, $r21);

        return;

     label1:
        $r4 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: com.android.camera.session.PlaceholderManager$Session mPlaceHolderSession>;

        if $r4 != null goto label2;

        $r17 = new java.lang.IllegalStateException;

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot call saveAndFinish without calling startSession first.");

        throw $r17;

     label2:
        $r5 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: com.android.camera.session.CaptureSessionManagerImpl this$0>;

        $r6 = staticinvoke <com.android.camera.session.CaptureSessionManagerImpl: com.android.camera.session.PlaceholderManager access$200(com.android.camera.session.CaptureSessionManagerImpl)>($r5);

        $r8 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: com.android.camera.session.PlaceholderManager$Session mPlaceHolderSession>;

        $r7 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: android.location.Location mLocation>;

        $r9 = virtualinvoke $r6.<com.android.camera.session.PlaceholderManager: android.net.Uri finishPlaceholder(com.android.camera.session.PlaceholderManager$Session,android.location.Location,int,com.android.camera.exif.ExifInterface,byte[],int,int,java.lang.String)>($r8, $r7, i2, r2, r1, i0, i1, "image/jpeg");

        r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: android.net.Uri mContentUri> = $r9;

        $r11 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: com.android.camera.session.CaptureSessionManagerImpl this$0>;

        $r10 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: android.net.Uri mUri>;

        $r13 = virtualinvoke $r10.<android.net.Uri: java.lang.String toString()>();

        staticinvoke <com.android.camera.session.CaptureSessionManagerImpl: void access$500(com.android.camera.session.CaptureSessionManagerImpl,java.lang.String)>($r11, $r13);

        $r14 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: com.android.camera.session.CaptureSessionManagerImpl this$0>;

        $r12 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: com.android.camera.session.PlaceholderManager$Session mPlaceHolderSession>;

        $r15 = $r12.<com.android.camera.session.PlaceholderManager$Session: android.net.Uri outputUri>;

        staticinvoke <com.android.camera.session.CaptureSessionManagerImpl: void access$800(com.android.camera.session.CaptureSessionManagerImpl,android.net.Uri)>($r14, $r15);

        return;
    }

    public void finish()
    {
        com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl r0;
        java.lang.String r1;
        com.android.camera.session.PlaceholderManager$Session $r2;
        com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl$1 $r3;
        java.util.concurrent.Executor $r4;
        java.lang.IllegalStateException $r5;

        r0 := @this: com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl;

        $r2 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: com.android.camera.session.PlaceholderManager$Session mPlaceHolderSession>;

        if $r2 != null goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot call finish without calling startSession first.");

        throw $r5;

     label1:
        r1 = virtualinvoke r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: java.lang.String getPath()>();

        $r4 = <android.os.AsyncTask: java.util.concurrent.Executor SERIAL_EXECUTOR>;

        $r3 = new com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl$1;

        specialinvoke $r3.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl$1: void <init>(com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl,java.lang.String)>(r0, r1);

        interfaceinvoke $r4.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r3);

        return;
    }

    public java.lang.String getPath()
    {
        com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl r0;
        java.io.IOException r1, r2, $r17, $r18;
        android.net.Uri $r3;
        java.io.File $r4, $r6, $r8, r22, r23;
        com.android.camera.session.CaptureSessionManagerImpl $r5;
        java.lang.String $r7, $r10, $r13, $r14;
        java.lang.StringBuilder $r9, $r11, $r12;
        boolean $z0;
        java.lang.IllegalStateException $r15;
        com.android.camera.debug.Log$Tag $r16, $r21;
        java.lang.RuntimeException $r19, $r20;

        r0 := @this: com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl;

        $r3 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: android.net.Uri mUri>;

        if $r3 != null goto label1;

        $r15 = new java.lang.IllegalStateException;

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot retrieve URI of not started session.");

        throw $r15;

     label1:
        $r4 = new java.io.File;

        $r5 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: com.android.camera.session.CaptureSessionManagerImpl this$0>;

        $r6 = virtualinvoke $r5.<com.android.camera.session.CaptureSessionManagerImpl: java.io.File getSessionDirectory(java.lang.String)>("TEMP_SESSIONS");

        $r7 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: java.lang.String mTitle>;

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>($r6, $r7);

        r22 = $r4;

     label2:
        goto label4;

     label3:
        $r17 := @caughtexception;

        r1 = $r17;

        $r16 = staticinvoke <com.android.camera.session.CaptureSessionManagerImpl: com.android.camera.debug.Log$Tag access$900()>();

        staticinvoke <com.android.camera.debug.Log: void e(com.android.camera.debug.Log$Tag,java.lang.String,java.lang.Throwable)>($r16, "Could not get temp session directory", r1);

        $r19 = new java.lang.RuntimeException;

        specialinvoke $r19.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Could not get temp session directory", r1);

        throw $r19;

     label4:
        virtualinvoke r22.<java.io.File: boolean mkdirs()>();

        $r8 = new java.io.File;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: java.lang.String mTitle>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".jpg");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.io.File: void <init>(java.io.File,java.lang.String)>(r22, $r13);

        r23 = $r8;

     label5:
        $z0 = virtualinvoke r23.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label6;

        virtualinvoke r23.<java.io.File: boolean createNewFile()>();

     label6:
        goto label8;

     label7:
        $r18 := @caughtexception;

        r2 = $r18;

        $r21 = staticinvoke <com.android.camera.session.CaptureSessionManagerImpl: com.android.camera.debug.Log$Tag access$900()>();

        staticinvoke <com.android.camera.debug.Log: void e(com.android.camera.debug.Log$Tag,java.lang.String,java.lang.Throwable)>($r21, "Could not create temp session file", r2);

        $r20 = new java.lang.RuntimeException;

        specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Could not create temp session file", r2);

        throw $r20;

     label8:
        $r14 = virtualinvoke r23.<java.io.File: java.lang.String getPath()>();

        return $r14;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.io.IOException from label5 to label6 with label7;
    }

    public android.net.Uri getUri()
    {
        com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl r0;
        android.net.Uri $r1;

        r0 := @this: com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl;

        $r1 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: android.net.Uri mUri>;

        return $r1;
    }

    public android.net.Uri getContentUri()
    {
        com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl r0;
        android.net.Uri $r1;

        r0 := @this: com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl;

        $r1 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: android.net.Uri mContentUri>;

        return $r1;
    }

    public boolean hasPath()
    {
        com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl r0;
        android.net.Uri $r1;
        boolean $z0;

        r0 := @this: com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl;

        $r1 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: android.net.Uri mUri>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void onPreviewAvailable()
    {
        com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl r0;
        com.android.camera.session.PlaceholderManager$Session $r1;
        android.net.Uri $r2;
        com.android.camera.session.CaptureSessionManagerImpl $r3;

        r0 := @this: com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl;

        $r3 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: com.android.camera.session.CaptureSessionManagerImpl this$0>;

        $r1 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: com.android.camera.session.PlaceholderManager$Session mPlaceHolderSession>;

        $r2 = $r1.<com.android.camera.session.PlaceholderManager$Session: android.net.Uri outputUri>;

        staticinvoke <com.android.camera.session.CaptureSessionManagerImpl: void access$1000(com.android.camera.session.CaptureSessionManagerImpl,android.net.Uri)>($r3, $r2);

        return;
    }

    public void updatePreview(java.lang.String)
    {
        com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl r0;
        java.lang.String r1, r2;
        com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl$2 $r3;
        java.util.concurrent.Executor $r4;

        r0 := @this: com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: java.lang.String getPath()>();

        $r4 = <android.os.AsyncTask: java.util.concurrent.Executor SERIAL_EXECUTOR>;

        $r3 = new com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl$2;

        specialinvoke $r3.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl$2: void <init>(com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl,java.lang.String)>(r0, r2);

        interfaceinvoke $r4.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r3);

        return;
    }

    public void finishWithFailure(java.lang.CharSequence)
    {
        com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl r0;
        java.lang.CharSequence r1;
        com.android.camera.session.PlaceholderManager$Session $r2, $r8, $r11;
        android.net.Uri $r3, $r9, $r12;
        com.android.camera.session.CaptureSessionManagerImpl $r4, $r6, $r13;
        java.lang.String $r5;
        java.util.HashMap $r7;
        java.lang.IllegalStateException $r14;

        r0 := @this: com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: com.android.camera.session.PlaceholderManager$Session mPlaceHolderSession>;

        if $r2 != null goto label1;

        $r14 = new java.lang.IllegalStateException;

        specialinvoke $r14.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot call finish without calling startSession first.");

        throw $r14;

     label1:
        r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: java.lang.CharSequence mProgressMessage> = r1;

        $r4 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: com.android.camera.session.CaptureSessionManagerImpl this$0>;

        $r3 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: android.net.Uri mUri>;

        $r5 = virtualinvoke $r3.<android.net.Uri: java.lang.String toString()>();

        staticinvoke <com.android.camera.session.CaptureSessionManagerImpl: void access$500(com.android.camera.session.CaptureSessionManagerImpl,java.lang.String)>($r4, $r5);

        $r6 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: com.android.camera.session.CaptureSessionManagerImpl this$0>;

        $r7 = staticinvoke <com.android.camera.session.CaptureSessionManagerImpl: java.util.HashMap access$1200(com.android.camera.session.CaptureSessionManagerImpl)>($r6);

        $r8 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: com.android.camera.session.PlaceholderManager$Session mPlaceHolderSession>;

        $r9 = $r8.<com.android.camera.session.PlaceholderManager$Session: android.net.Uri outputUri>;

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, r1);

        $r13 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: com.android.camera.session.CaptureSessionManagerImpl this$0>;

        $r11 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: com.android.camera.session.PlaceholderManager$Session mPlaceHolderSession>;

        $r12 = $r11.<com.android.camera.session.PlaceholderManager$Session: android.net.Uri outputUri>;

        staticinvoke <com.android.camera.session.CaptureSessionManagerImpl: void access$1300(com.android.camera.session.CaptureSessionManagerImpl,android.net.Uri,java.lang.CharSequence)>($r13, $r12, r1);

        return;
    }

    public void addProgressListener(com.android.camera.session.CaptureSession$ProgressListener)
    {
        com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl r0;
        com.android.camera.session.CaptureSession$ProgressListener r1;
        java.lang.CharSequence $r2;
        int $i0;
        java.util.HashSet $r3;

        r0 := @this: com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl;

        r1 := @parameter0: com.android.camera.session.CaptureSession$ProgressListener;

        $r2 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: java.lang.CharSequence mProgressMessage>;

        interfaceinvoke r1.<com.android.camera.session.CaptureSession$ProgressListener: void onStatusMessageChanged(java.lang.CharSequence)>($r2);

        $i0 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: int mProgressPercent>;

        interfaceinvoke r1.<com.android.camera.session.CaptureSession$ProgressListener: void onProgressChanged(int)>($i0);

        $r3 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: java.util.HashSet mProgressListeners>;

        virtualinvoke $r3.<java.util.HashSet: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void removeProgressListener(com.android.camera.session.CaptureSession$ProgressListener)
    {
        com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl r0;
        com.android.camera.session.CaptureSession$ProgressListener r1;
        java.util.HashSet $r2;

        r0 := @this: com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl;

        r1 := @parameter0: com.android.camera.session.CaptureSession$ProgressListener;

        $r2 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: java.util.HashSet mProgressListeners>;

        virtualinvoke $r2.<java.util.HashSet: boolean remove(java.lang.Object)>(r1);

        return;
    }

    static com.android.camera.session.PlaceholderManager$Session access$1100(com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl)
    {
        com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl r0;
        com.android.camera.session.PlaceholderManager$Session $r1;

        r0 := @parameter0: com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl;

        $r1 = r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: com.android.camera.session.PlaceholderManager$Session mPlaceHolderSession>;

        return $r1;
    }

    void <init>(com.android.camera.session.CaptureSessionManagerImpl, java.lang.String, long, android.location.Location, com.android.camera.session.CaptureSessionManagerImpl$1)
    {
        com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl r0;
        com.android.camera.session.CaptureSessionManagerImpl r1;
        java.lang.String r2;
        long l0;
        android.location.Location r3;
        com.android.camera.session.CaptureSessionManagerImpl$1 r4;

        r0 := @this: com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl;

        r1 := @parameter0: com.android.camera.session.CaptureSessionManagerImpl;

        r2 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        r3 := @parameter3: android.location.Location;

        r4 := @parameter4: com.android.camera.session.CaptureSessionManagerImpl$1;

        specialinvoke r0.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: void <init>(com.android.camera.session.CaptureSessionManagerImpl,java.lang.String,long,android.location.Location)>(r1, r2, l0, r3);

        return;
    }
}
