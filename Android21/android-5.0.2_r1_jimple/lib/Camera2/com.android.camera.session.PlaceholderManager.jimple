public class com.android.camera.session.PlaceholderManager extends java.lang.Object
{
    private static final com.android.camera.debug.Log$Tag TAG;
    private final android.content.Context mContext;

    public void <init>(android.content.Context)
    {
        com.android.camera.session.PlaceholderManager r0;
        android.content.Context r1;

        r0 := @this: com.android.camera.session.PlaceholderManager;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.camera.session.PlaceholderManager: android.content.Context mContext> = r1;

        return;
    }

    public com.android.camera.session.PlaceholderManager$Session insertPlaceholder(java.lang.String, byte[], long)
    {
        com.android.camera.session.PlaceholderManager r0;
        java.lang.String r1;
        byte[] r2;
        long l0;
        android.graphics.BitmapFactory$Options r3, $r6;
        int i1, i2, $i3;
        android.net.Uri r4;
        java.lang.IllegalArgumentException $r5, $r8;
        com.android.camera.session.PlaceholderManager$Session $r9;

        r0 := @this: com.android.camera.session.PlaceholderManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: byte[];

        l0 := @parameter2: long;

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null argument passed to insertPlaceholder");

        throw $r5;

     label2:
        $r6 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r6.<android.graphics.BitmapFactory$Options: void <init>()>();

        r3 = $r6;

        r3.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 1;

        $i3 = lengthof r2;

        staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>(r2, 0, $i3, r3);

        i1 = r3.<android.graphics.BitmapFactory$Options: int outWidth>;

        i2 = r3.<android.graphics.BitmapFactory$Options: int outHeight>;

        if i1 <= 0 goto label3;

        if i2 > 0 goto label4;

     label3:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Image had bad height/width");

        throw $r8;

     label4:
        r4 = staticinvoke <com.android.camera.Storage: android.net.Uri addPlaceholder(byte[],int,int)>(r2, i1, i2);

        if r4 != null goto label5;

        return null;

     label5:
        $r9 = new com.android.camera.session.PlaceholderManager$Session;

        specialinvoke $r9.<com.android.camera.session.PlaceholderManager$Session: void <init>(java.lang.String,android.net.Uri,long)>(r1, r4, l0);

        return $r9;
    }

    public com.android.camera.session.PlaceholderManager$Session convertToPlaceholder(android.net.Uri)
    {
        com.android.camera.session.PlaceholderManager r0;
        android.net.Uri r1;
        com.android.camera.session.PlaceholderManager$Session $r2;

        r0 := @this: com.android.camera.session.PlaceholderManager;

        r1 := @parameter0: android.net.Uri;

        $r2 = specialinvoke r0.<com.android.camera.session.PlaceholderManager: com.android.camera.session.PlaceholderManager$Session createSessionFromUri(android.net.Uri)>(r1);

        return $r2;
    }

    public android.net.Uri finishPlaceholder(com.android.camera.session.PlaceholderManager$Session, android.location.Location, int, com.android.camera.exif.ExifInterface, byte[], int, int, java.lang.String)
    {
        com.android.camera.session.PlaceholderManager r0;
        com.android.camera.session.PlaceholderManager$Session r1;
        android.location.Location r2;
        int i0, i1, i2;
        com.android.camera.exif.ExifInterface r3;
        byte[] r4;
        java.lang.String r5, $r10;
        android.net.Uri r6, $r8;
        android.content.Context $r7, $r11;
        android.content.ContentResolver $r9;
        long $l3;

        r0 := @this: com.android.camera.session.PlaceholderManager;

        r1 := @parameter0: com.android.camera.session.PlaceholderManager$Session;

        r2 := @parameter1: android.location.Location;

        i0 := @parameter2: int;

        r3 := @parameter3: com.android.camera.exif.ExifInterface;

        r4 := @parameter4: byte[];

        i1 := @parameter5: int;

        i2 := @parameter6: int;

        r5 := @parameter7: java.lang.String;

        $r8 = r1.<com.android.camera.session.PlaceholderManager$Session: android.net.Uri outputUri>;

        $r7 = r0.<com.android.camera.session.PlaceholderManager: android.content.Context mContext>;

        $r9 = virtualinvoke $r7.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r10 = r1.<com.android.camera.session.PlaceholderManager$Session: java.lang.String outputTitle>;

        $l3 = r1.<com.android.camera.session.PlaceholderManager$Session: long time>;

        r6 = staticinvoke <com.android.camera.Storage: android.net.Uri updateImage(android.net.Uri,android.content.ContentResolver,java.lang.String,long,android.location.Location,int,com.android.camera.exif.ExifInterface,byte[],int,int,java.lang.String)>($r8, $r9, $r10, $l3, r2, i0, r3, r4, i1, i2, r5);

        $r11 = r0.<com.android.camera.session.PlaceholderManager: android.content.Context mContext>;

        staticinvoke <com.android.camera.util.CameraUtil: void broadcastNewPicture(android.content.Context,android.net.Uri)>($r11, r6);

        return r6;
    }

    public void replacePlaceholder(com.android.camera.session.PlaceholderManager$Session, byte[], int, int)
    {
        com.android.camera.session.PlaceholderManager r0;
        com.android.camera.session.PlaceholderManager$Session r1;
        byte[] r2;
        int i0, i1;
        android.net.Uri $r3, $r4;
        android.content.Context $r5;

        r0 := @this: com.android.camera.session.PlaceholderManager;

        r1 := @parameter0: com.android.camera.session.PlaceholderManager$Session;

        r2 := @parameter1: byte[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r3 = r1.<com.android.camera.session.PlaceholderManager$Session: android.net.Uri outputUri>;

        staticinvoke <com.android.camera.Storage: void replacePlaceholder(android.net.Uri,byte[],int,int)>($r3, r2, i0, i1);

        $r5 = r0.<com.android.camera.session.PlaceholderManager: android.content.Context mContext>;

        $r4 = r1.<com.android.camera.session.PlaceholderManager$Session: android.net.Uri outputUri>;

        staticinvoke <com.android.camera.util.CameraUtil: void broadcastNewPicture(android.content.Context,android.net.Uri)>($r5, $r4);

        return;
    }

    private com.android.camera.session.PlaceholderManager$Session createSessionFromUri(android.net.Uri)
    {
        com.android.camera.session.PlaceholderManager r0;
        android.net.Uri r1;
        android.content.ContentResolver r2;
        android.database.Cursor r3;
        int i0, i1, $i3, $i4, $i5, $i6;
        long l2;
        java.lang.String r4, $r7, $r9;
        android.content.Context $r5;
        java.lang.String[] $r6;
        com.android.camera.session.PlaceholderManager$Session $r8;
        boolean $z1;

        r0 := @this: com.android.camera.session.PlaceholderManager;

        r1 := @parameter0: android.net.Uri;

        $r5 = r0.<com.android.camera.session.PlaceholderManager: android.content.Context mContext>;

        r2 = virtualinvoke $r5.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r6 = newarray (java.lang.String)[2];

        $r6[0] = "datetaken";

        $r6[1] = "_display_name";

        r3 = virtualinvoke r2.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r1, $r6, null, null, null);

        if r3 == null goto label1;

        $i3 = interfaceinvoke r3.<android.database.Cursor: int getCount()>();

        if $i3 != 0 goto label2;

     label1:
        return null;

     label2:
        i0 = interfaceinvoke r3.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("datetaken");

        i1 = interfaceinvoke r3.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("_display_name");

        interfaceinvoke r3.<android.database.Cursor: boolean moveToFirst()>();

        l2 = interfaceinvoke r3.<android.database.Cursor: long getLong(int)>(i0);

        r4 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(i1);

        $r7 = virtualinvoke r4.<java.lang.String: java.lang.String toLowerCase()>();

        $z1 = virtualinvoke $r7.<java.lang.String: boolean endsWith(java.lang.String)>(".jpg");

        if $z1 == 0 goto label3;

        $i4 = virtualinvoke r4.<java.lang.String: int length()>();

        $r9 = ".jpg";

        $i5 = virtualinvoke $r9.<java.lang.String: int length()>();

        $i6 = $i4 - $i5;

        r4 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(0, $i6);

     label3:
        $r8 = new com.android.camera.session.PlaceholderManager$Session;

        specialinvoke $r8.<com.android.camera.session.PlaceholderManager$Session: void <init>(java.lang.String,android.net.Uri,long)>(r4, r1, l2);

        return $r8;
    }

    static void <clinit>()
    {
        com.android.camera.debug.Log$Tag $r0;

        $r0 = new com.android.camera.debug.Log$Tag;

        specialinvoke $r0.<com.android.camera.debug.Log$Tag: void <init>(java.lang.String)>("PlaceholderMgr");

        <com.android.camera.session.PlaceholderManager: com.android.camera.debug.Log$Tag TAG> = $r0;

        return;
    }
}
