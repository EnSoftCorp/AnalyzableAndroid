public class com.android.ex.camera2.portability.AndroidCamera2Settings extends com.android.ex.camera2.portability.CameraSettings
{
    private static final com.android.ex.camera2.portability.debug.Log$Tag TAG;
    private final android.hardware.camera2.CaptureRequest$Builder mTemplateSettings;
    private final com.android.ex.camera2.utils.Camera2RequestSettingsSet mRequestSettings;
    private final android.graphics.Rect mActiveArray;
    private final android.graphics.Rect mCropRectangle;
    private android.graphics.Rect mVisiblePreviewRectangle;

    public void <init>(android.hardware.camera2.CameraDevice, int, android.graphics.Rect, com.android.ex.camera2.portability.Size, com.android.ex.camera2.portability.Size) throws android.hardware.camera2.CameraAccessException
    {
        com.android.ex.camera2.portability.AndroidCamera2Settings r0;
        android.hardware.camera2.CameraDevice r1;
        int i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        android.graphics.Rect r2, $r12;
        com.android.ex.camera2.portability.Size r3, r4, $r48;
        android.util.Range r5;
        java.lang.Integer r6, r7, r8, $r20, $r22, $r35, $r36, $r56, $r58;
        android.util.Size r9;
        android.hardware.camera2.CaptureRequest$Builder $r10, $r13, $r25, $r27, $r34, $r45;
        com.android.ex.camera2.utils.Camera2RequestSettingsSet $r11;
        android.hardware.camera2.CaptureRequest$Key $r14, $r16, $r21, $r24, $r30, $r32, $r33, $r41, $r44, $r46;
        java.lang.Object $r15, $r17, $r23, $r28, $r29, $r31, $r37, $r39, $r42, $r49;
        java.lang.Byte $r18, $r19;
        byte $b3;
        com.android.ex.camera2.portability.CameraCapabilities$FlashMode $r26;
        java.lang.Boolean $r38, $r40, $r43, $r47;
        boolean $z2, $z3, $z4;
        com.android.ex.camera2.portability.CameraCapabilities$SceneMode $r50;
        com.android.ex.camera2.portability.CameraCapabilities$FocusMode $r51;
        java.lang.Comparable $r52, $r57;
        com.android.ex.camera2.portability.CameraCapabilities$WhiteBalance $r53;
        java.lang.NullPointerException $r54, $r55;

        r0 := @this: com.android.ex.camera2.portability.AndroidCamera2Settings;

        r1 := @parameter0: android.hardware.camera2.CameraDevice;

        i0 := @parameter1: int;

        r2 := @parameter2: android.graphics.Rect;

        r3 := @parameter3: com.android.ex.camera2.portability.Size;

        r4 := @parameter4: com.android.ex.camera2.portability.Size;

        specialinvoke r0.<com.android.ex.camera2.portability.CameraSettings: void <init>()>();

        if r1 != null goto label1;

        $r55 = new java.lang.NullPointerException;

        specialinvoke $r55.<java.lang.NullPointerException: void <init>(java.lang.String)>("camera must not be null");

        throw $r55;

     label1:
        if r2 != null goto label2;

        $r54 = new java.lang.NullPointerException;

        specialinvoke $r54.<java.lang.NullPointerException: void <init>(java.lang.String)>("activeArray must not be null");

        throw $r54;

     label2:
        $r10 = virtualinvoke r1.<android.hardware.camera2.CameraDevice: android.hardware.camera2.CaptureRequest$Builder createCaptureRequest(int)>(i0);

        r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.hardware.camera2.CaptureRequest$Builder mTemplateSettings> = $r10;

        $r11 = new com.android.ex.camera2.utils.Camera2RequestSettingsSet;

        specialinvoke $r11.<com.android.ex.camera2.utils.Camera2RequestSettingsSet: void <init>()>();

        r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.utils.Camera2RequestSettingsSet mRequestSettings> = $r11;

        r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.graphics.Rect mActiveArray> = r2;

        $r12 = new android.graphics.Rect;

        $i2 = virtualinvoke r2.<android.graphics.Rect: int width()>();

        $i1 = virtualinvoke r2.<android.graphics.Rect: int height()>();

        specialinvoke $r12.<android.graphics.Rect: void <init>(int,int,int,int)>(0, 0, $i2, $i1);

        r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.graphics.Rect mCropRectangle> = $r12;

        r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: boolean mSizesLocked> = 0;

        $r13 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.hardware.camera2.CaptureRequest$Builder mTemplateSettings>;

        $r14 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key CONTROL_AE_TARGET_FPS_RANGE>;

        $r15 = virtualinvoke $r13.<android.hardware.camera2.CaptureRequest$Builder: java.lang.Object get(android.hardware.camera2.CaptureRequest$Key)>($r14);

        r5 = (android.util.Range) $r15;

        if r5 == null goto label3;

        $r52 = virtualinvoke r5.<android.util.Range: java.lang.Comparable getLower()>();

        $r56 = (java.lang.Integer) $r52;

        $i12 = virtualinvoke $r56.<java.lang.Integer: int intValue()>();

        $r57 = virtualinvoke r5.<android.util.Range: java.lang.Comparable getUpper()>();

        $r58 = (java.lang.Integer) $r57;

        $i11 = virtualinvoke $r58.<java.lang.Integer: int intValue()>();

        virtualinvoke r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: void setPreviewFpsRange(int,int)>($i12, $i11);

     label3:
        virtualinvoke r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: boolean setPreviewSize(com.android.ex.camera2.portability.Size)>(r3);

        virtualinvoke r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: boolean setPhotoSize(com.android.ex.camera2.portability.Size)>(r4);

        $r16 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key JPEG_QUALITY>;

        $r18 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(0);

        $r17 = specialinvoke r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: java.lang.Object queryTemplateDefaultOrMakeOneUp(android.hardware.camera2.CaptureRequest$Key,java.lang.Object)>($r16, $r18);

        $r19 = (java.lang.Byte) $r17;

        $b3 = virtualinvoke $r19.<java.lang.Byte: byte byteValue()>();

        r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: byte mJpegCompressQuality> = $b3;

        r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: float mCurrentZoomRatio> = 1.0F;

        $r21 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key CONTROL_AE_EXPOSURE_COMPENSATION>;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r23 = specialinvoke r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: java.lang.Object queryTemplateDefaultOrMakeOneUp(android.hardware.camera2.CaptureRequest$Key,java.lang.Object)>($r21, $r20);

        $r22 = (java.lang.Integer) $r23;

        $i4 = virtualinvoke $r22.<java.lang.Integer: int intValue()>();

        r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: int mExposureCompensationIndex> = $i4;

        $r26 = specialinvoke r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.portability.CameraCapabilities$FlashMode flashModeFromRequest()>();

        r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.portability.CameraCapabilities$FlashMode mCurrentFlashMode> = $r26;

        $r25 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.hardware.camera2.CaptureRequest$Builder mTemplateSettings>;

        $r24 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key CONTROL_AF_MODE>;

        $r29 = virtualinvoke $r25.<android.hardware.camera2.CaptureRequest$Builder: java.lang.Object get(android.hardware.camera2.CaptureRequest$Key)>($r24);

        r6 = (java.lang.Integer) $r29;

        if r6 == null goto label4;

        $i8 = virtualinvoke r6.<java.lang.Integer: int intValue()>();

        $r51 = staticinvoke <com.android.ex.camera2.portability.AndroidCamera2Capabilities: com.android.ex.camera2.portability.CameraCapabilities$FocusMode focusModeFromInt(int)>($i8);

        r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.portability.CameraCapabilities$FocusMode mCurrentFocusMode> = $r51;

     label4:
        $r27 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.hardware.camera2.CaptureRequest$Builder mTemplateSettings>;

        $r30 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key CONTROL_SCENE_MODE>;

        $r28 = virtualinvoke $r27.<android.hardware.camera2.CaptureRequest$Builder: java.lang.Object get(android.hardware.camera2.CaptureRequest$Key)>($r30);

        r7 = (java.lang.Integer) $r28;

        if r7 == null goto label5;

        $i10 = virtualinvoke r7.<java.lang.Integer: int intValue()>();

        $r50 = staticinvoke <com.android.ex.camera2.portability.AndroidCamera2Capabilities: com.android.ex.camera2.portability.CameraCapabilities$SceneMode sceneModeFromInt(int)>($i10);

        r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.portability.CameraCapabilities$SceneMode mCurrentSceneMode> = $r50;

     label5:
        $r34 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.hardware.camera2.CaptureRequest$Builder mTemplateSettings>;

        $r33 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key CONTROL_AWB_MODE>;

        $r31 = virtualinvoke $r34.<android.hardware.camera2.CaptureRequest$Builder: java.lang.Object get(android.hardware.camera2.CaptureRequest$Key)>($r33);

        r8 = (java.lang.Integer) $r31;

        if r8 == null goto label6;

        $i9 = virtualinvoke r8.<java.lang.Integer: int intValue()>();

        $r53 = staticinvoke <com.android.ex.camera2.portability.AndroidCamera2Capabilities: com.android.ex.camera2.portability.CameraCapabilities$WhiteBalance whiteBalanceFromInt(int)>($i9);

        r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.portability.CameraCapabilities$WhiteBalance mWhiteBalance> = $r53;

     label6:
        $r32 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key CONTROL_VIDEO_STABILIZATION_MODE>;

        $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r37 = specialinvoke r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: java.lang.Object queryTemplateDefaultOrMakeOneUp(android.hardware.camera2.CaptureRequest$Key,java.lang.Object)>($r32, $r36);

        $r35 = (java.lang.Integer) $r37;

        $i5 = virtualinvoke $r35.<java.lang.Integer: int intValue()>();

        if $i5 != 1 goto label7;

        $z4 = 1;

        goto label8;

     label7:
        $z4 = 0;

     label8:
        r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: boolean mVideoStabilizationEnabled> = $z4;

        $r41 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key CONTROL_AE_LOCK>;

        $r40 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r39 = specialinvoke r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: java.lang.Object queryTemplateDefaultOrMakeOneUp(android.hardware.camera2.CaptureRequest$Key,java.lang.Object)>($r41, $r40);

        $r38 = (java.lang.Boolean) $r39;

        $z2 = virtualinvoke $r38.<java.lang.Boolean: boolean booleanValue()>();

        r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: boolean mAutoExposureLocked> = $z2;

        $r44 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key CONTROL_AWB_LOCK>;

        $r43 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r42 = specialinvoke r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: java.lang.Object queryTemplateDefaultOrMakeOneUp(android.hardware.camera2.CaptureRequest$Key,java.lang.Object)>($r44, $r43);

        $r47 = (java.lang.Boolean) $r42;

        $z3 = virtualinvoke $r47.<java.lang.Boolean: boolean booleanValue()>();

        r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: boolean mAutoWhiteBalanceLocked> = $z3;

        $r45 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.hardware.camera2.CaptureRequest$Builder mTemplateSettings>;

        $r46 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key JPEG_THUMBNAIL_SIZE>;

        $r49 = virtualinvoke $r45.<android.hardware.camera2.CaptureRequest$Builder: java.lang.Object get(android.hardware.camera2.CaptureRequest$Key)>($r46);

        r9 = (android.util.Size) $r49;

        if r9 == null goto label9;

        $r48 = new com.android.ex.camera2.portability.Size;

        $i7 = virtualinvoke r9.<android.util.Size: int getWidth()>();

        $i6 = virtualinvoke r9.<android.util.Size: int getHeight()>();

        specialinvoke $r48.<com.android.ex.camera2.portability.Size: void <init>(int,int)>($i7, $i6);

        r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.portability.Size mExifThumbnailSize> = $r48;

     label9:
        return;
    }

    public void <init>(com.android.ex.camera2.portability.AndroidCamera2Settings)
    {
        com.android.ex.camera2.portability.AndroidCamera2Settings r0, r1;
        android.hardware.camera2.CaptureRequest$Builder $r2;
        com.android.ex.camera2.utils.Camera2RequestSettingsSet $r3, $r4;
        android.graphics.Rect $r5, $r6, $r7;

        r0 := @this: com.android.ex.camera2.portability.AndroidCamera2Settings;

        r1 := @parameter0: com.android.ex.camera2.portability.AndroidCamera2Settings;

        specialinvoke r0.<com.android.ex.camera2.portability.CameraSettings: void <init>(com.android.ex.camera2.portability.CameraSettings)>(r1);

        $r2 = r1.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.hardware.camera2.CaptureRequest$Builder mTemplateSettings>;

        r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.hardware.camera2.CaptureRequest$Builder mTemplateSettings> = $r2;

        $r3 = new com.android.ex.camera2.utils.Camera2RequestSettingsSet;

        $r4 = r1.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.utils.Camera2RequestSettingsSet mRequestSettings>;

        specialinvoke $r3.<com.android.ex.camera2.utils.Camera2RequestSettingsSet: void <init>(com.android.ex.camera2.utils.Camera2RequestSettingsSet)>($r4);

        r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.utils.Camera2RequestSettingsSet mRequestSettings> = $r3;

        $r5 = r1.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.graphics.Rect mActiveArray>;

        r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.graphics.Rect mActiveArray> = $r5;

        $r6 = new android.graphics.Rect;

        $r7 = r1.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.graphics.Rect mCropRectangle>;

        specialinvoke $r6.<android.graphics.Rect: void <init>(android.graphics.Rect)>($r7);

        r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.graphics.Rect mCropRectangle> = $r6;

        return;
    }

    public com.android.ex.camera2.portability.CameraSettings copy()
    {
        com.android.ex.camera2.portability.AndroidCamera2Settings r0, $r1;

        r0 := @this: com.android.ex.camera2.portability.AndroidCamera2Settings;

        $r1 = new com.android.ex.camera2.portability.AndroidCamera2Settings;

        specialinvoke $r1.<com.android.ex.camera2.portability.AndroidCamera2Settings: void <init>(com.android.ex.camera2.portability.AndroidCamera2Settings)>(r0);

        return $r1;
    }

    private java.lang.Object queryTemplateDefaultOrMakeOneUp(android.hardware.camera2.CaptureRequest$Key, java.lang.Object)
    {
        com.android.ex.camera2.portability.AndroidCamera2Settings r0;
        android.hardware.camera2.CaptureRequest$Key r1;
        java.lang.Object r2, r3;
        android.hardware.camera2.CaptureRequest$Builder $r4, $r5;

        r0 := @this: com.android.ex.camera2.portability.AndroidCamera2Settings;

        r1 := @parameter0: android.hardware.camera2.CaptureRequest$Key;

        r2 := @parameter1: java.lang.Object;

        $r4 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.hardware.camera2.CaptureRequest$Builder mTemplateSettings>;

        r3 = virtualinvoke $r4.<android.hardware.camera2.CaptureRequest$Builder: java.lang.Object get(android.hardware.camera2.CaptureRequest$Key)>(r1);

        if r3 == null goto label1;

        return r3;

     label1:
        $r5 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.hardware.camera2.CaptureRequest$Builder mTemplateSettings>;

        virtualinvoke $r5.<android.hardware.camera2.CaptureRequest$Builder: void set(android.hardware.camera2.CaptureRequest$Key,java.lang.Object)>(r1, r2);

        return r2;
    }

    private com.android.ex.camera2.portability.CameraCapabilities$FlashMode flashModeFromRequest()
    {
        com.android.ex.camera2.portability.AndroidCamera2Settings r0;
        java.lang.Integer r1, $r10;
        android.hardware.camera2.CaptureRequest$Key $r2, $r7;
        android.hardware.camera2.CaptureRequest$Builder $r3, $r8;
        java.lang.Object $r4, $r9;
        int $i0, $i1;
        com.android.ex.camera2.portability.CameraCapabilities$FlashMode $r5, $r6, $r11, $r12, $r13;

        r0 := @this: com.android.ex.camera2.portability.AndroidCamera2Settings;

        $r3 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.hardware.camera2.CaptureRequest$Builder mTemplateSettings>;

        $r2 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key CONTROL_AE_MODE>;

        $r4 = virtualinvoke $r3.<android.hardware.camera2.CaptureRequest$Builder: java.lang.Object get(android.hardware.camera2.CaptureRequest$Key)>($r2);

        r1 = (java.lang.Integer) $r4;

        if r1 == null goto label6;

        $i0 = virtualinvoke r1.<java.lang.Integer: int intValue()>();

        tableswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label5;
            default: goto label6;
        };

     label1:
        $r5 = <com.android.ex.camera2.portability.CameraCapabilities$FlashMode: com.android.ex.camera2.portability.CameraCapabilities$FlashMode OFF>;

        return $r5;

     label2:
        $r13 = <com.android.ex.camera2.portability.CameraCapabilities$FlashMode: com.android.ex.camera2.portability.CameraCapabilities$FlashMode AUTO>;

        return $r13;

     label3:
        $r8 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.hardware.camera2.CaptureRequest$Builder mTemplateSettings>;

        $r7 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key FLASH_MODE>;

        $r9 = virtualinvoke $r8.<android.hardware.camera2.CaptureRequest$Builder: java.lang.Object get(android.hardware.camera2.CaptureRequest$Key)>($r7);

        $r10 = (java.lang.Integer) $r9;

        $i1 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();

        if $i1 != 2 goto label4;

        $r12 = <com.android.ex.camera2.portability.CameraCapabilities$FlashMode: com.android.ex.camera2.portability.CameraCapabilities$FlashMode TORCH>;

        return $r12;

     label4:
        $r11 = <com.android.ex.camera2.portability.CameraCapabilities$FlashMode: com.android.ex.camera2.portability.CameraCapabilities$FlashMode ON>;

        return $r11;

     label5:
        $r6 = <com.android.ex.camera2.portability.CameraCapabilities$FlashMode: com.android.ex.camera2.portability.CameraCapabilities$FlashMode RED_EYE>;

        return $r6;

     label6:
        return null;
    }

    public void setZoomRatio(float)
    {
        com.android.ex.camera2.portability.AndroidCamera2Settings r0;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6;
        android.graphics.Rect $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r12, $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        double $d0, $d1;
        com.android.ex.camera2.portability.Size $r11;

        r0 := @this: com.android.ex.camera2.portability.AndroidCamera2Settings;

        f0 := @parameter0: float;

        specialinvoke r0.<com.android.ex.camera2.portability.CameraSettings: void setZoomRatio(float)>(f0);

        $r2 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.graphics.Rect mCropRectangle>;

        $r1 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.graphics.Rect mActiveArray>;

        $i0 = virtualinvoke $r1.<android.graphics.Rect: int width()>();

        $f2 = (float) $i0;

        $f1 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: float mCurrentZoomRatio>;

        $f3 = $f2 / $f1;

        $d0 = (double) $f3;

        $r3 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.graphics.Rect mActiveArray>;

        $i1 = virtualinvoke $r3.<android.graphics.Rect: int width()>();

        $i2 = specialinvoke r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: int toIntConstrained(double,int,int)>($d0, 0, $i1);

        $r4 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.graphics.Rect mActiveArray>;

        $i3 = virtualinvoke $r4.<android.graphics.Rect: int height()>();

        $f6 = (float) $i3;

        $f4 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: float mCurrentZoomRatio>;

        $f5 = $f6 / $f4;

        $d1 = (double) $f5;

        $r5 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.graphics.Rect mActiveArray>;

        $i4 = virtualinvoke $r5.<android.graphics.Rect: int height()>();

        $i5 = specialinvoke r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: int toIntConstrained(double,int,int)>($d1, 0, $i4);

        virtualinvoke $r2.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, $i2, $i5);

        $r7 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.graphics.Rect mCropRectangle>;

        $r6 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.graphics.Rect mActiveArray>;

        $i6 = virtualinvoke $r6.<android.graphics.Rect: int width()>();

        $r8 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.graphics.Rect mCropRectangle>;

        $i7 = virtualinvoke $r8.<android.graphics.Rect: int width()>();

        $i8 = $i6 - $i7;

        $i10 = $i8 / 2;

        $r9 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.graphics.Rect mActiveArray>;

        $i11 = virtualinvoke $r9.<android.graphics.Rect: int height()>();

        $r10 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.graphics.Rect mCropRectangle>;

        $i9 = virtualinvoke $r10.<android.graphics.Rect: int height()>();

        $i12 = $i11 - $i9;

        $i13 = $i12 / 2;

        virtualinvoke $r7.<android.graphics.Rect: void offsetTo(int,int)>($i10, $i13);

        $r12 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.graphics.Rect mCropRectangle>;

        $r11 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.portability.Size mCurrentPreviewSize>;

        $r13 = staticinvoke <com.android.ex.camera2.portability.AndroidCamera2Settings: android.graphics.Rect effectiveCropRectFromRequested(android.graphics.Rect,com.android.ex.camera2.portability.Size)>($r12, $r11);

        r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.graphics.Rect mVisiblePreviewRectangle> = $r13;

        return;
    }

    private boolean matchesTemplateDefault(android.hardware.camera2.CaptureRequest$Key)
    {
        com.android.ex.camera2.portability.AndroidCamera2Settings r0;
        android.hardware.camera2.CaptureRequest$Key r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r20, $r25, $r26, $r33, $r35, $r37;
        android.util.Range r2;
        com.android.ex.camera2.portability.debug.Log$Tag $r12;
        android.hardware.camera2.CaptureRequest$Builder $r14, $r23, $r27, $r29, $r32, $r39, $r41;
        java.lang.Object $r15, $r22, $r28, $r30, $r31, $r38, $r40;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        com.android.ex.camera2.portability.Size $r16, $r17, $r18, $r19;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        java.lang.Boolean $r21, $r24;
        java.lang.Integer $r34, $r43, $r45, r48;
        java.lang.Byte $r36;
        byte $b9;
        java.lang.Comparable $r42, $r44;
        java.util.List $r46, $r47;
        android.util.Size r49;

        r0 := @this: com.android.ex.camera2.portability.AndroidCamera2Settings;

        r1 := @parameter0: android.hardware.camera2.CaptureRequest$Key;

        $r3 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key CONTROL_AE_REGIONS>;

        if r1 != $r3 goto label03;

        $r46 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: java.util.List mMeteringAreas>;

        $i15 = interfaceinvoke $r46.<java.util.List: int size()>();

        if $i15 != 0 goto label01;

        $z11 = 1;

        goto label02;

     label01:
        $z11 = 0;

     label02:
        return $z11;

     label03:
        $r4 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key CONTROL_AF_REGIONS>;

        if r1 != $r4 goto label06;

        $r47 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: java.util.List mFocusAreas>;

        $i17 = interfaceinvoke $r47.<java.util.List: int size()>();

        if $i17 != 0 goto label04;

        $z12 = 1;

        goto label05;

     label04:
        $z12 = 0;

     label05:
        return $z12;

     label06:
        $r5 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key CONTROL_AE_TARGET_FPS_RANGE>;

        if r1 != $r5 goto label11;

        $r41 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.hardware.camera2.CaptureRequest$Builder mTemplateSettings>;

        $r37 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key CONTROL_AE_TARGET_FPS_RANGE>;

        $r40 = virtualinvoke $r41.<android.hardware.camera2.CaptureRequest$Builder: java.lang.Object get(android.hardware.camera2.CaptureRequest$Key)>($r37);

        r2 = (android.util.Range) $r40;

        $i11 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: int mPreviewFpsRangeMin>;

        if $i11 != 0 goto label07;

        $i16 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: int mPreviewFpsRangeMax>;

        if $i16 == 0 goto label08;

     label07:
        if r2 == null goto label09;

        $i10 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: int mPreviewFpsRangeMin>;

        $r44 = virtualinvoke r2.<android.util.Range: java.lang.Comparable getLower()>();

        $r45 = (java.lang.Integer) $r44;

        $i13 = virtualinvoke $r45.<java.lang.Integer: int intValue()>();

        if $i10 != $i13 goto label09;

        $i14 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: int mPreviewFpsRangeMax>;

        $r42 = virtualinvoke r2.<android.util.Range: java.lang.Comparable getUpper()>();

        $r43 = (java.lang.Integer) $r42;

        $i12 = virtualinvoke $r43.<java.lang.Integer: int intValue()>();

        if $i14 != $i12 goto label09;

     label08:
        $z10 = 1;

        goto label10;

     label09:
        $z10 = 0;

     label10:
        return $z10;

     label11:
        $r6 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key JPEG_QUALITY>;

        if r1 != $r6 goto label12;

        $b9 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: byte mJpegCompressQuality>;

        $r36 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b9);

        $r39 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.hardware.camera2.CaptureRequest$Builder mTemplateSettings>;

        $r35 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key JPEG_QUALITY>;

        $r38 = virtualinvoke $r39.<android.hardware.camera2.CaptureRequest$Builder: java.lang.Object get(android.hardware.camera2.CaptureRequest$Key)>($r35);

        $z9 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r36, $r38);

        return $z9;

     label12:
        $r7 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key CONTROL_AE_EXPOSURE_COMPENSATION>;

        if r1 != $r7 goto label13;

        $i8 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: int mExposureCompensationIndex>;

        $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        $r32 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.hardware.camera2.CaptureRequest$Builder mTemplateSettings>;

        $r33 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key CONTROL_AE_EXPOSURE_COMPENSATION>;

        $r31 = virtualinvoke $r32.<android.hardware.camera2.CaptureRequest$Builder: java.lang.Object get(android.hardware.camera2.CaptureRequest$Key)>($r33);

        $z8 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r34, $r31);

        return $z8;

     label13:
        $r8 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key CONTROL_VIDEO_STABILIZATION_MODE>;

        if r1 != $r8 goto label18;

        $r29 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.hardware.camera2.CaptureRequest$Builder mTemplateSettings>;

        $r26 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key CONTROL_VIDEO_STABILIZATION_MODE>;

        $r30 = virtualinvoke $r29.<android.hardware.camera2.CaptureRequest$Builder: java.lang.Object get(android.hardware.camera2.CaptureRequest$Key)>($r26);

        r48 = (java.lang.Integer) $r30;

        if r48 == null goto label14;

        $z7 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: boolean mVideoStabilizationEnabled>;

        if $z7 == 0 goto label14;

        $i7 = virtualinvoke r48.<java.lang.Integer: int intValue()>();

        if $i7 == 1 goto label15;

     label14:
        $z5 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: boolean mVideoStabilizationEnabled>;

        if $z5 != 0 goto label16;

        $i6 = virtualinvoke r48.<java.lang.Integer: int intValue()>();

        if $i6 != 0 goto label16;

     label15:
        $z6 = 1;

        goto label17;

     label16:
        $z6 = 0;

     label17:
        return $z6;

     label18:
        $r9 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key CONTROL_AE_LOCK>;

        if r1 != $r9 goto label19;

        $z3 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: boolean mAutoExposureLocked>;

        $r24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3);

        $r27 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.hardware.camera2.CaptureRequest$Builder mTemplateSettings>;

        $r25 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key CONTROL_AE_LOCK>;

        $r28 = virtualinvoke $r27.<android.hardware.camera2.CaptureRequest$Builder: java.lang.Object get(android.hardware.camera2.CaptureRequest$Key)>($r25);

        $z4 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r24, $r28);

        return $z4;

     label19:
        $r10 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key CONTROL_AWB_LOCK>;

        if r1 != $r10 goto label20;

        $z1 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: boolean mAutoWhiteBalanceLocked>;

        $r21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $r23 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.hardware.camera2.CaptureRequest$Builder mTemplateSettings>;

        $r20 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key CONTROL_AWB_LOCK>;

        $r22 = virtualinvoke $r23.<android.hardware.camera2.CaptureRequest$Builder: java.lang.Object get(android.hardware.camera2.CaptureRequest$Key)>($r20);

        $z2 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>($r21, $r22);

        return $z2;

     label20:
        $r11 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key JPEG_THUMBNAIL_SIZE>;

        if r1 != $r11 goto label25;

        $r14 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.hardware.camera2.CaptureRequest$Builder mTemplateSettings>;

        $r13 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key JPEG_THUMBNAIL_SIZE>;

        $r15 = virtualinvoke $r14.<android.hardware.camera2.CaptureRequest$Builder: java.lang.Object get(android.hardware.camera2.CaptureRequest$Key)>($r13);

        r49 = (android.util.Size) $r15;

        $r16 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.portability.Size mExifThumbnailSize>;

        $i0 = virtualinvoke $r16.<com.android.ex.camera2.portability.Size: int width()>();

        if $i0 != 0 goto label21;

        $r19 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.portability.Size mExifThumbnailSize>;

        $i5 = virtualinvoke $r19.<com.android.ex.camera2.portability.Size: int height()>();

        if $i5 == 0 goto label22;

     label21:
        if r49 == null goto label23;

        $r17 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.portability.Size mExifThumbnailSize>;

        $i1 = virtualinvoke $r17.<com.android.ex.camera2.portability.Size: int width()>();

        $i2 = virtualinvoke r49.<android.util.Size: int getWidth()>();

        if $i1 != $i2 goto label23;

        $r18 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.portability.Size mExifThumbnailSize>;

        $i4 = virtualinvoke $r18.<com.android.ex.camera2.portability.Size: int height()>();

        $i3 = virtualinvoke r49.<android.util.Size: int getHeight()>();

        if $i4 != $i3 goto label23;

     label22:
        $z0 = 1;

        goto label24;

     label23:
        $z0 = 0;

     label24:
        return $z0;

     label25:
        $r12 = <com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.portability.debug.Log$Tag TAG>;

        staticinvoke <com.android.ex.camera2.portability.debug.Log: void w(com.android.ex.camera2.portability.debug.Log$Tag,java.lang.String)>($r12, "Settings implementation checked default of unhandled option key");

        return 1;
    }

    private void updateRequestSettingOrForceToDefault(android.hardware.camera2.CaptureRequest$Key, java.lang.Object)
    {
        com.android.ex.camera2.portability.AndroidCamera2Settings r0;
        android.hardware.camera2.CaptureRequest$Key r1;
        java.lang.Object r2, $r4;
        com.android.ex.camera2.utils.Camera2RequestSettingsSet $r3;
        boolean $z0;

        r0 := @this: com.android.ex.camera2.portability.AndroidCamera2Settings;

        r1 := @parameter0: android.hardware.camera2.CaptureRequest$Key;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.utils.Camera2RequestSettingsSet mRequestSettings>;

        $z0 = specialinvoke r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: boolean matchesTemplateDefault(android.hardware.camera2.CaptureRequest$Key)>(r1);

        if $z0 == 0 goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r4 = r2;

     label2:
        virtualinvoke $r3.<com.android.ex.camera2.utils.Camera2RequestSettingsSet: boolean set(android.hardware.camera2.CaptureRequest$Key,java.lang.Object)>(r1, $r4);

        return;
    }

    public com.android.ex.camera2.utils.Camera2RequestSettingsSet getRequestSettings()
    {
        com.android.ex.camera2.portability.AndroidCamera2Settings r0;
        java.util.List $r1, $r4;
        android.hardware.camera2.CaptureRequest$Key $r2, $r5, $r8, $r11, $r13, $r16, $r19, $r20, $r22, $r23, $r26;
        android.hardware.camera2.params.MeteringRectangle[] $r3, $r6;
        android.util.Range $r7;
        int $i0, $i1, $i3, $i4, $i5;
        java.lang.Integer $r9, $r10, $r17, $r18, $r30;
        byte $b2, $b6;
        java.lang.Byte $r12;
        android.graphics.Rect $r14;
        com.android.ex.camera2.utils.Camera2RequestSettingsSet $r15, $r21, $r29;
        boolean $z1, $z2, $z4, $z5;
        java.lang.Boolean $r24, $r25;
        android.util.Size $r27;
        com.android.ex.camera2.portability.Size $r28, $r31;

        r0 := @this: com.android.ex.camera2.portability.AndroidCamera2Settings;

        $r2 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key CONTROL_AE_REGIONS>;

        $r1 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: java.util.List mMeteringAreas>;

        $r3 = specialinvoke r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.hardware.camera2.params.MeteringRectangle[] legacyAreasToMeteringRectangles(java.util.List)>($r1);

        specialinvoke r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: void updateRequestSettingOrForceToDefault(android.hardware.camera2.CaptureRequest$Key,java.lang.Object)>($r2, $r3);

        $r5 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key CONTROL_AF_REGIONS>;

        $r4 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: java.util.List mFocusAreas>;

        $r6 = specialinvoke r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.hardware.camera2.params.MeteringRectangle[] legacyAreasToMeteringRectangles(java.util.List)>($r4);

        specialinvoke r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: void updateRequestSettingOrForceToDefault(android.hardware.camera2.CaptureRequest$Key,java.lang.Object)>($r5, $r6);

        $r8 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key CONTROL_AE_TARGET_FPS_RANGE>;

        $r7 = new android.util.Range;

        $i0 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: int mPreviewFpsRangeMin>;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $i1 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: int mPreviewFpsRangeMax>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        specialinvoke $r7.<android.util.Range: void <init>(java.lang.Comparable,java.lang.Comparable)>($r9, $r10);

        specialinvoke r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: void updateRequestSettingOrForceToDefault(android.hardware.camera2.CaptureRequest$Key,java.lang.Object)>($r8, $r7);

        $r11 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key JPEG_QUALITY>;

        $b2 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: byte mJpegCompressQuality>;

        $r12 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        specialinvoke r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: void updateRequestSettingOrForceToDefault(android.hardware.camera2.CaptureRequest$Key,java.lang.Object)>($r11, $r12);

        $r15 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.utils.Camera2RequestSettingsSet mRequestSettings>;

        $r13 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key SCALER_CROP_REGION>;

        $r14 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.graphics.Rect mCropRectangle>;

        virtualinvoke $r15.<com.android.ex.camera2.utils.Camera2RequestSettingsSet: boolean set(android.hardware.camera2.CaptureRequest$Key,java.lang.Object)>($r13, $r14);

        $r16 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key CONTROL_AE_EXPOSURE_COMPENSATION>;

        $i3 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: int mExposureCompensationIndex>;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        specialinvoke r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: void updateRequestSettingOrForceToDefault(android.hardware.camera2.CaptureRequest$Key,java.lang.Object)>($r16, $r17);

        specialinvoke r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: void updateRequestFlashMode()>();

        specialinvoke r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: void updateRequestFocusMode()>();

        specialinvoke r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: void updateRequestSceneMode()>();

        specialinvoke r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: void updateRequestWhiteBalance()>();

        $r19 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key CONTROL_VIDEO_STABILIZATION_MODE>;

        $z1 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: boolean mVideoStabilizationEnabled>;

        if $z1 == 0 goto label1;

        $b6 = 1;

        goto label2;

     label1:
        $b6 = 0;

     label2:
        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b6);

        specialinvoke r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: void updateRequestSettingOrForceToDefault(android.hardware.camera2.CaptureRequest$Key,java.lang.Object)>($r19, $r18);

        $r21 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.utils.Camera2RequestSettingsSet mRequestSettings>;

        $r20 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key LENS_OPTICAL_STABILIZATION_MODE>;

        $z2 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: boolean mVideoStabilizationEnabled>;

        if $z2 == 0 goto label3;

        $r30 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        goto label4;

     label3:
        $r30 = null;

     label4:
        virtualinvoke $r21.<com.android.ex.camera2.utils.Camera2RequestSettingsSet: boolean set(android.hardware.camera2.CaptureRequest$Key,java.lang.Object)>($r20, $r30);

        $r22 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key CONTROL_AE_LOCK>;

        $z4 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: boolean mAutoExposureLocked>;

        $r25 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4);

        specialinvoke r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: void updateRequestSettingOrForceToDefault(android.hardware.camera2.CaptureRequest$Key,java.lang.Object)>($r22, $r25);

        $r23 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key CONTROL_AWB_LOCK>;

        $z5 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: boolean mAutoWhiteBalanceLocked>;

        $r24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z5);

        specialinvoke r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: void updateRequestSettingOrForceToDefault(android.hardware.camera2.CaptureRequest$Key,java.lang.Object)>($r23, $r24);

        specialinvoke r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: void updateRequestGpsData()>();

        $r26 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key JPEG_THUMBNAIL_SIZE>;

        $r27 = new android.util.Size;

        $r28 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.portability.Size mExifThumbnailSize>;

        $i4 = virtualinvoke $r28.<com.android.ex.camera2.portability.Size: int width()>();

        $r31 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.portability.Size mExifThumbnailSize>;

        $i5 = virtualinvoke $r31.<com.android.ex.camera2.portability.Size: int height()>();

        specialinvoke $r27.<android.util.Size: void <init>(int,int)>($i4, $i5);

        specialinvoke r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: void updateRequestSettingOrForceToDefault(android.hardware.camera2.CaptureRequest$Key,java.lang.Object)>($r26, $r27);

        $r29 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.utils.Camera2RequestSettingsSet mRequestSettings>;

        return $r29;
    }

    private android.hardware.camera2.params.MeteringRectangle[] legacyAreasToMeteringRectangles(java.util.List)
    {
        com.android.ex.camera2.portability.AndroidCamera2Settings r0;
        java.util.List r1;
        android.hardware.camera2.params.MeteringRectangle[] r2;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38;
        android.hardware.Camera$Area r3;
        android.graphics.Rect r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r18;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15;
        java.lang.Object $r5;
        android.hardware.camera2.params.MeteringRectangle $r17;

        r0 := @this: com.android.ex.camera2.portability.AndroidCamera2Settings;

        r1 := @parameter0: java.util.List;

        r2 = null;

        $i6 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i6 <= 0 goto label2;

        $i5 = interfaceinvoke r1.<java.util.List: int size()>();

        r2 = newarray (android.hardware.camera2.params.MeteringRectangle)[$i5];

        i0 = 0;

     label1:
        $i7 = interfaceinvoke r1.<java.util.List: int size()>();

        if i0 >= $i7 goto label2;

        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        r3 = (android.hardware.Camera$Area) $r5;

        r4 = r3.<android.hardware.Camera$Area: android.graphics.Rect rect>;

        $i9 = r4.<android.graphics.Rect: int left>;

        $i8 = $i9 + 1000;

        $d4 = (double) $i8;

        d0 = $d4 / 2000.0;

        $i10 = r4.<android.graphics.Rect: int top>;

        $i11 = $i10 + 1000;

        $d5 = (double) $i11;

        d1 = $d5 / 2000.0;

        $i13 = r4.<android.graphics.Rect: int right>;

        $i12 = $i13 + 1000;

        $d6 = (double) $i12;

        d2 = $d6 / 2000.0;

        $i14 = r4.<android.graphics.Rect: int bottom>;

        $i15 = $i14 + 1000;

        $d7 = (double) $i15;

        d3 = $d7 / 2000.0;

        $r6 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.graphics.Rect mCropRectangle>;

        $i16 = $r6.<android.graphics.Rect: int left>;

        $r7 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.graphics.Rect mCropRectangle>;

        $i17 = virtualinvoke $r7.<android.graphics.Rect: int width()>();

        $d8 = (double) $i17;

        $d9 = $d8 * d0;

        $r8 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.graphics.Rect mCropRectangle>;

        $i18 = virtualinvoke $r8.<android.graphics.Rect: int width()>();

        $i19 = $i18 - 1;

        $i21 = specialinvoke r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: int toIntConstrained(double,int,int)>($d9, 0, $i19);

        i1 = $i16 + $i21;

        $r10 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.graphics.Rect mCropRectangle>;

        $i20 = $r10.<android.graphics.Rect: int top>;

        $r9 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.graphics.Rect mCropRectangle>;

        $i22 = virtualinvoke $r9.<android.graphics.Rect: int height()>();

        $d11 = (double) $i22;

        $d10 = $d11 * d1;

        $r11 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.graphics.Rect mCropRectangle>;

        $i25 = virtualinvoke $r11.<android.graphics.Rect: int height()>();

        $i24 = $i25 - 1;

        $i23 = specialinvoke r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: int toIntConstrained(double,int,int)>($d10, 0, $i24);

        i2 = $i20 + $i23;

        $r13 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.graphics.Rect mCropRectangle>;

        $i27 = $r13.<android.graphics.Rect: int left>;

        $r12 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.graphics.Rect mCropRectangle>;

        $i26 = virtualinvoke $r12.<android.graphics.Rect: int width()>();

        $d13 = (double) $i26;

        $d12 = $d13 * d2;

        $r14 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.graphics.Rect mCropRectangle>;

        $i30 = virtualinvoke $r14.<android.graphics.Rect: int width()>();

        $i31 = $i30 - 1;

        $i32 = specialinvoke r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: int toIntConstrained(double,int,int)>($d12, 0, $i31);

        i4 = $i27 + $i32;

        $r16 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.graphics.Rect mCropRectangle>;

        $i28 = $r16.<android.graphics.Rect: int top>;

        $r15 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.graphics.Rect mCropRectangle>;

        $i29 = virtualinvoke $r15.<android.graphics.Rect: int height()>();

        $d14 = (double) $i29;

        $d15 = $d14 * d3;

        $r18 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: android.graphics.Rect mCropRectangle>;

        $i36 = virtualinvoke $r18.<android.graphics.Rect: int height()>();

        $i33 = $i36 - 1;

        $i34 = specialinvoke r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: int toIntConstrained(double,int,int)>($d15, 0, $i33);

        i3 = $i28 + $i34;

        $r17 = new android.hardware.camera2.params.MeteringRectangle;

        $i37 = i4 - i1;

        $i38 = i3 - i2;

        $i35 = r3.<android.hardware.Camera$Area: int weight>;

        specialinvoke $r17.<android.hardware.camera2.params.MeteringRectangle: void <init>(int,int,int,int,int)>(i1, i2, $i37, $i38, $i35);

        r2[i0] = $r17;

        i0 = i0 + 1;

        goto label1;

     label2:
        return r2;
    }

    private int toIntConstrained(double, int, int)
    {
        com.android.ex.camera2.portability.AndroidCamera2Settings r0;
        double d0, $d1, $d2, d3, d4;
        int i0, i1, $i2;

        r0 := @this: com.android.ex.camera2.portability.AndroidCamera2Settings;

        d0 := @parameter0: double;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $d1 = (double) i0;

        d3 = staticinvoke <java.lang.Math: double max(double,double)>(d0, $d1);

        $d2 = (double) i1;

        d4 = staticinvoke <java.lang.Math: double min(double,double)>(d3, $d2);

        $i2 = (int) d4;

        return $i2;
    }

    private void updateRequestFlashMode()
    {
        com.android.ex.camera2.portability.AndroidCamera2Settings r0;
        java.lang.Integer r1, r2;
        com.android.ex.camera2.portability.CameraCapabilities$FlashMode $r3, $r8, $r14;
        android.hardware.camera2.CaptureRequest$Key $r4, $r6;
        com.android.ex.camera2.utils.Camera2RequestSettingsSet $r5, $r7;
        int[] $r9;
        int $i0, $i1;
        java.lang.StringBuilder $r10, $r11, $r13;
        com.android.ex.camera2.portability.debug.Log$Tag $r12;
        java.lang.String $r15;

        r0 := @this: com.android.ex.camera2.portability.AndroidCamera2Settings;

        r1 = null;

        r2 = null;

        $r3 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.portability.CameraCapabilities$FlashMode mCurrentFlashMode>;

        if $r3 == null goto label7;

        $r9 = <com.android.ex.camera2.portability.AndroidCamera2Settings$1: int[] $SwitchMap$com$android$ex$camera2$portability$CameraCapabilities$FlashMode>;

        $r8 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.portability.CameraCapabilities$FlashMode mCurrentFlashMode>;

        $i0 = virtualinvoke $r8.<com.android.ex.camera2.portability.CameraCapabilities$FlashMode: int ordinal()>();

        $i1 = $r9[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            default: goto label6;
        };

     label1:
        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        goto label7;

     label2:
        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        goto label7;

     label3:
        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        goto label7;

     label4:
        r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        goto label7;

     label5:
        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        goto label7;

     label6:
        $r12 = <com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.portability.debug.Log$Tag TAG>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to convert to API 2 flash mode: ");

        $r14 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.portability.CameraCapabilities$FlashMode mCurrentFlashMode>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.ex.camera2.portability.debug.Log: void w(com.android.ex.camera2.portability.debug.Log$Tag,java.lang.String)>($r12, $r15);

     label7:
        $r5 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.utils.Camera2RequestSettingsSet mRequestSettings>;

        $r4 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key CONTROL_AE_MODE>;

        virtualinvoke $r5.<com.android.ex.camera2.utils.Camera2RequestSettingsSet: boolean set(android.hardware.camera2.CaptureRequest$Key,java.lang.Object)>($r4, r1);

        $r7 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.utils.Camera2RequestSettingsSet mRequestSettings>;

        $r6 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key FLASH_MODE>;

        virtualinvoke $r7.<com.android.ex.camera2.utils.Camera2RequestSettingsSet: boolean set(android.hardware.camera2.CaptureRequest$Key,java.lang.Object)>($r6, r2);

        return;
    }

    private void updateRequestFocusMode()
    {
        com.android.ex.camera2.portability.AndroidCamera2Settings r0;
        java.lang.Integer r1;
        com.android.ex.camera2.portability.CameraCapabilities$FocusMode $r2, $r5, $r9;
        android.hardware.camera2.CaptureRequest$Key $r3;
        com.android.ex.camera2.utils.Camera2RequestSettingsSet $r4;
        int[] $r6;
        int $i0, $i1;
        com.android.ex.camera2.portability.debug.Log$Tag $r7;
        java.lang.StringBuilder $r8, $r10, $r12;
        java.lang.String $r11;

        r0 := @this: com.android.ex.camera2.portability.AndroidCamera2Settings;

        r1 = null;

        $r2 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.portability.CameraCapabilities$FocusMode mCurrentFocusMode>;

        if $r2 == null goto label8;

        $r6 = <com.android.ex.camera2.portability.AndroidCamera2Settings$1: int[] $SwitchMap$com$android$ex$camera2$portability$CameraCapabilities$FocusMode>;

        $r5 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.portability.CameraCapabilities$FocusMode mCurrentFocusMode>;

        $i0 = virtualinvoke $r5.<com.android.ex.camera2.portability.CameraCapabilities$FocusMode: int ordinal()>();

        $i1 = $r6[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            case 6: goto label6;
            default: goto label7;
        };

     label1:
        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        goto label8;

     label2:
        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        goto label8;

     label3:
        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        goto label8;

     label4:
        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        goto label8;

     label5:
        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        goto label8;

     label6:
        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        goto label8;

     label7:
        $r7 = <com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.portability.debug.Log$Tag TAG>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to convert to API 2 focus mode: ");

        $r9 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.portability.CameraCapabilities$FocusMode mCurrentFocusMode>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.ex.camera2.portability.debug.Log: void w(com.android.ex.camera2.portability.debug.Log$Tag,java.lang.String)>($r7, $r11);

     label8:
        $r4 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.utils.Camera2RequestSettingsSet mRequestSettings>;

        $r3 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key CONTROL_AF_MODE>;

        virtualinvoke $r4.<com.android.ex.camera2.utils.Camera2RequestSettingsSet: boolean set(android.hardware.camera2.CaptureRequest$Key,java.lang.Object)>($r3, r1);

        return;
    }

    private void updateRequestSceneMode()
    {
        com.android.ex.camera2.portability.AndroidCamera2Settings r0;
        java.lang.Integer r1;
        com.android.ex.camera2.portability.CameraCapabilities$SceneMode $r2, $r5, $r11;
        android.hardware.camera2.CaptureRequest$Key $r3;
        com.android.ex.camera2.utils.Camera2RequestSettingsSet $r4;
        int[] $r6;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r7, $r8, $r10;
        com.android.ex.camera2.portability.debug.Log$Tag $r9;
        java.lang.String $r12;

        r0 := @this: com.android.ex.camera2.portability.AndroidCamera2Settings;

        r1 = null;

        $r2 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.portability.CameraCapabilities$SceneMode mCurrentSceneMode>;

        if $r2 == null goto label18;

        $r6 = <com.android.ex.camera2.portability.AndroidCamera2Settings$1: int[] $SwitchMap$com$android$ex$camera2$portability$CameraCapabilities$SceneMode>;

        $r5 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.portability.CameraCapabilities$SceneMode mCurrentSceneMode>;

        $i0 = virtualinvoke $r5.<com.android.ex.camera2.portability.CameraCapabilities$SceneMode: int ordinal()>();

        $i1 = $r6[$i0];

        tableswitch($i1)
        {
            case 1: goto label01;
            case 2: goto label02;
            case 3: goto label03;
            case 4: goto label04;
            case 5: goto label05;
            case 6: goto label06;
            case 7: goto label07;
            case 8: goto label08;
            case 9: goto label09;
            case 10: goto label10;
            case 11: goto label11;
            case 12: goto label12;
            case 13: goto label13;
            case 14: goto label14;
            case 15: goto label15;
            case 16: goto label16;
            default: goto label17;
        };

     label01:
        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        goto label18;

     label02:
        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        goto label18;

     label03:
        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(16);

        goto label18;

     label04:
        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);

        goto label18;

     label05:
        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(15);

        goto label18;

     label06:
        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(12);

        goto label18;

     label07:
        $i2 = <com.android.ex.camera2.portability.LegacyVendorTags: int CONTROL_SCENE_MODE_HDR>;

        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        goto label18;

     label08:
        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        goto label18;

     label09:
        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        goto label18;

     label10:
        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(14);

        goto label18;

     label11:
        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        goto label18;

     label12:
        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(9);

        goto label18;

     label13:
        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(13);

        goto label18;

     label14:
        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(11);

        goto label18;

     label15:
        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        goto label18;

     label16:
        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7);

        goto label18;

     label17:
        $r9 = <com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.portability.debug.Log$Tag TAG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to convert to API 2 scene mode: ");

        $r11 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.portability.CameraCapabilities$SceneMode mCurrentSceneMode>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.ex.camera2.portability.debug.Log: void w(com.android.ex.camera2.portability.debug.Log$Tag,java.lang.String)>($r9, $r12);

     label18:
        $r4 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.utils.Camera2RequestSettingsSet mRequestSettings>;

        $r3 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key CONTROL_SCENE_MODE>;

        virtualinvoke $r4.<com.android.ex.camera2.utils.Camera2RequestSettingsSet: boolean set(android.hardware.camera2.CaptureRequest$Key,java.lang.Object)>($r3, r1);

        return;
    }

    private void updateRequestWhiteBalance()
    {
        com.android.ex.camera2.portability.AndroidCamera2Settings r0;
        java.lang.Integer r1;
        com.android.ex.camera2.portability.CameraCapabilities$WhiteBalance $r2, $r5, $r9;
        android.hardware.camera2.CaptureRequest$Key $r3;
        com.android.ex.camera2.utils.Camera2RequestSettingsSet $r4;
        int[] $r6;
        int $i0, $i1;
        com.android.ex.camera2.portability.debug.Log$Tag $r7;
        java.lang.StringBuilder $r8, $r10, $r12;
        java.lang.String $r11;

        r0 := @this: com.android.ex.camera2.portability.AndroidCamera2Settings;

        r1 = null;

        $r2 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.portability.CameraCapabilities$WhiteBalance mWhiteBalance>;

        if $r2 == null goto label10;

        $r6 = <com.android.ex.camera2.portability.AndroidCamera2Settings$1: int[] $SwitchMap$com$android$ex$camera2$portability$CameraCapabilities$WhiteBalance>;

        $r5 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.portability.CameraCapabilities$WhiteBalance mWhiteBalance>;

        $i0 = virtualinvoke $r5.<com.android.ex.camera2.portability.CameraCapabilities$WhiteBalance: int ordinal()>();

        $i1 = $r6[$i0];

        tableswitch($i1)
        {
            case 1: goto label01;
            case 2: goto label02;
            case 3: goto label03;
            case 4: goto label04;
            case 5: goto label05;
            case 6: goto label06;
            case 7: goto label07;
            case 8: goto label08;
            default: goto label09;
        };

     label01:
        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        goto label10;

     label02:
        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(6);

        goto label10;

     label03:
        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(5);

        goto label10;

     label04:
        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);

        goto label10;

     label05:
        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        goto label10;

     label06:
        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);

        goto label10;

     label07:
        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7);

        goto label10;

     label08:
        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        goto label10;

     label09:
        $r7 = <com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.portability.debug.Log$Tag TAG>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to convert to API 2 white balance: ");

        $r9 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.portability.CameraCapabilities$WhiteBalance mWhiteBalance>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.ex.camera2.portability.debug.Log: void w(com.android.ex.camera2.portability.debug.Log$Tag,java.lang.String)>($r7, $r11);

     label10:
        $r4 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.utils.Camera2RequestSettingsSet mRequestSettings>;

        $r3 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key CONTROL_AWB_MODE>;

        virtualinvoke $r4.<com.android.ex.camera2.utils.Camera2RequestSettingsSet: boolean set(android.hardware.camera2.CaptureRequest$Key,java.lang.Object)>($r3, r1);

        return;
    }

    private void updateRequestGpsData()
    {
        com.android.ex.camera2.portability.AndroidCamera2Settings r0;
        android.location.Location r1, $r7;
        com.android.ex.camera2.portability.CameraSettings$GpsData $r2, $r5, $r8, $r10, $r11, $r12, $r13;
        android.hardware.camera2.CaptureRequest$Key $r3, $r14;
        com.android.ex.camera2.utils.Camera2RequestSettingsSet $r4, $r15;
        java.lang.String $r6, $r9;
        long $l0;
        double $d0, $d1, $d2;

        r0 := @this: com.android.ex.camera2.portability.AndroidCamera2Settings;

        $r2 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.portability.CameraSettings$GpsData mGpsData>;

        if $r2 == null goto label1;

        $r5 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.portability.CameraSettings$GpsData mGpsData>;

        $r6 = $r5.<com.android.ex.camera2.portability.CameraSettings$GpsData: java.lang.String processingMethod>;

        if $r6 != null goto label2;

     label1:
        $r4 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.utils.Camera2RequestSettingsSet mRequestSettings>;

        $r3 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key JPEG_GPS_LOCATION>;

        virtualinvoke $r4.<com.android.ex.camera2.utils.Camera2RequestSettingsSet: boolean set(android.hardware.camera2.CaptureRequest$Key,java.lang.Object)>($r3, null);

        goto label3;

     label2:
        $r7 = new android.location.Location;

        $r8 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.portability.CameraSettings$GpsData mGpsData>;

        $r9 = $r8.<com.android.ex.camera2.portability.CameraSettings$GpsData: java.lang.String processingMethod>;

        specialinvoke $r7.<android.location.Location: void <init>(java.lang.String)>($r9);

        r1 = $r7;

        $r10 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.portability.CameraSettings$GpsData mGpsData>;

        $l0 = $r10.<com.android.ex.camera2.portability.CameraSettings$GpsData: long timeStamp>;

        virtualinvoke r1.<android.location.Location: void setTime(long)>($l0);

        $r11 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.portability.CameraSettings$GpsData mGpsData>;

        $d0 = $r11.<com.android.ex.camera2.portability.CameraSettings$GpsData: double altitude>;

        virtualinvoke r1.<android.location.Location: void setAltitude(double)>($d0);

        $r12 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.portability.CameraSettings$GpsData mGpsData>;

        $d1 = $r12.<com.android.ex.camera2.portability.CameraSettings$GpsData: double latitude>;

        virtualinvoke r1.<android.location.Location: void setLatitude(double)>($d1);

        $r13 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.portability.CameraSettings$GpsData mGpsData>;

        $d2 = $r13.<com.android.ex.camera2.portability.CameraSettings$GpsData: double longitude>;

        virtualinvoke r1.<android.location.Location: void setLongitude(double)>($d2);

        $r15 = r0.<com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.utils.Camera2RequestSettingsSet mRequestSettings>;

        $r14 = <android.hardware.camera2.CaptureRequest: android.hardware.camera2.CaptureRequest$Key JPEG_GPS_LOCATION>;

        virtualinvoke $r15.<com.android.ex.camera2.utils.Camera2RequestSettingsSet: boolean set(android.hardware.camera2.CaptureRequest$Key,java.lang.Object)>($r14, r1);

     label3:
        return;
    }

    private static android.graphics.Rect effectiveCropRectFromRequested(android.graphics.Rect, com.android.ex.camera2.portability.Size)
    {
        android.graphics.Rect r0, r4, $r7;
        com.android.ex.camera2.portability.Size r1;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15;
        android.graphics.Matrix r2, $r5;
        android.graphics.RectF r3, $r6;
        int $i0, $i1, $i2, $i3, $i5, $i6;
        byte $b4;

        r0 := @parameter0: android.graphics.Rect;

        r1 := @parameter1: com.android.ex.camera2.portability.Size;

        $i0 = virtualinvoke r0.<android.graphics.Rect: int width()>();

        $f4 = (float) $i0;

        $f5 = $f4 * 1.0F;

        $i1 = virtualinvoke r0.<android.graphics.Rect: int height()>();

        $f6 = (float) $i1;

        f0 = $f5 / $f6;

        $i2 = virtualinvoke r1.<com.android.ex.camera2.portability.Size: int width()>();

        $f7 = (float) $i2;

        $f8 = $f7 * 1.0F;

        $i3 = virtualinvoke r1.<com.android.ex.camera2.portability.Size: int height()>();

        $f9 = (float) $i3;

        f1 = $f8 / $f9;

        $b4 = f1 cmpg f0;

        if $b4 >= 0 goto label1;

        $i6 = virtualinvoke r0.<android.graphics.Rect: int height()>();

        f2 = (float) $i6;

        f3 = f2 * f1;

        goto label2;

     label1:
        $i5 = virtualinvoke r0.<android.graphics.Rect: int width()>();

        f3 = (float) $i5;

        f2 = f3 / f1;

     label2:
        $r5 = new android.graphics.Matrix;

        specialinvoke $r5.<android.graphics.Matrix: void <init>()>();

        r2 = $r5;

        $r6 = new android.graphics.RectF;

        specialinvoke $r6.<android.graphics.RectF: void <init>(float,float,float,float)>(0.0F, 0.0F, f3, f2);

        r3 = $r6;

        $f10 = virtualinvoke r0.<android.graphics.Rect: float exactCenterX()>();

        $f12 = virtualinvoke r0.<android.graphics.Rect: float exactCenterY()>();

        virtualinvoke r2.<android.graphics.Matrix: void setTranslate(float,float)>($f10, $f12);

        $f11 = virtualinvoke r3.<android.graphics.RectF: float centerX()>();

        $f14 = neg $f11;

        $f13 = virtualinvoke r3.<android.graphics.RectF: float centerY()>();

        $f15 = neg $f13;

        virtualinvoke r2.<android.graphics.Matrix: boolean postTranslate(float,float)>($f14, $f15);

        virtualinvoke r2.<android.graphics.Matrix: boolean mapRect(android.graphics.RectF)>(r3);

        $r7 = new android.graphics.Rect;

        specialinvoke $r7.<android.graphics.Rect: void <init>()>();

        r4 = $r7;

        virtualinvoke r3.<android.graphics.RectF: void roundOut(android.graphics.Rect)>(r4);

        return r4;
    }

    static void <clinit>()
    {
        com.android.ex.camera2.portability.debug.Log$Tag $r0;

        $r0 = new com.android.ex.camera2.portability.debug.Log$Tag;

        specialinvoke $r0.<com.android.ex.camera2.portability.debug.Log$Tag: void <init>(java.lang.String)>("AndCam2Set");

        <com.android.ex.camera2.portability.AndroidCamera2Settings: com.android.ex.camera2.portability.debug.Log$Tag TAG> = $r0;

        return;
    }
}
