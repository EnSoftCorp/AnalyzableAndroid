public class com.android.camera.CaptureModuleUtil extends java.lang.Object
{
    private static final com.android.camera.debug.Log$Tag TAG;

    public void <init>()
    {
        com.android.camera.CaptureModuleUtil r0;

        r0 := @this: com.android.camera.CaptureModuleUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int getDeviceNaturalOrientation(android.content.Context)
    {
        android.content.Context r0;
        android.content.res.Configuration r1;
        int i0, $i1, $i2;
        android.content.res.Resources $r2;

        r0 := @parameter0: android.content.Context;

        $r2 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        i0 = staticinvoke <com.android.camera.util.CameraUtil: int getDisplayRotation(android.content.Context)>(r0);

        if i0 == 0 goto label1;

        if i0 != 2 goto label2;

     label1:
        $i1 = r1.<android.content.res.Configuration: int orientation>;

        if $i1 == 2 goto label4;

     label2:
        if i0 == 1 goto label3;

        if i0 != 3 goto label5;

     label3:
        $i2 = r1.<android.content.res.Configuration: int orientation>;

        if $i2 != 1 goto label5;

     label4:
        return 2;

     label5:
        return 1;
    }

    public static com.android.camera.util.Size getOptimalPreviewSize(android.content.Context, com.android.camera.util.Size[], double)
    {
        android.content.Context r0;
        com.android.camera.util.Size[] r1, r2, r10, r12;
        double d0;
        int i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14, i15, i16;
        com.android.camera.util.Size r3, r4, r5, $r8, r11;
        java.util.ArrayList $r6, r9;
        java.lang.Object $r7;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: com.android.camera.util.Size[];

        d0 := @parameter2: double;

        i1 = 0;

        r2 = r1;

        i2 = lengthof r2;

        i3 = 0;

     label01:
        if i3 >= i2 goto label03;

        r3 = r2[i3];

        $i12 = virtualinvoke r3.<com.android.camera.util.Size: int getHeight()>();

        if $i12 > 1080 goto label02;

        i1 = i1 + 1;

     label02:
        i3 = i3 + 1;

        goto label01;

     label03:
        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>(i1);

        r9 = $r6;

        r10 = r1;

        i13 = lengthof r10;

        i14 = 0;

     label04:
        if i14 >= i13 goto label06;

        r4 = r10[i14];

        $i9 = virtualinvoke r4.<com.android.camera.util.Size: int getHeight()>();

        if $i9 > 1080 goto label05;

        $r8 = new com.android.camera.util.Size;

        $i11 = virtualinvoke r4.<com.android.camera.util.Size: int getWidth()>();

        $i10 = virtualinvoke r4.<com.android.camera.util.Size: int getHeight()>();

        specialinvoke $r8.<com.android.camera.util.Size: void <init>(int,int)>($i11, $i10);

        virtualinvoke r9.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

     label05:
        i14 = i14 + 1;

        goto label04;

     label06:
        i15 = staticinvoke <com.android.camera.util.CameraUtil: int getOptimalPreviewSizeIndex(android.content.Context,java.util.List,double)>(r0, r9, d0);

        if i15 != -1 goto label07;

        return null;

     label07:
        $r7 = virtualinvoke r9.<java.util.ArrayList: java.lang.Object get(int)>(i15);

        r11 = (com.android.camera.util.Size) $r7;

        r12 = r1;

        i16 = lengthof r12;

        i4 = 0;

     label08:
        if i4 >= i16 goto label10;

        r5 = r12[i4];

        $i6 = virtualinvoke r5.<com.android.camera.util.Size: int getWidth()>();

        $i5 = virtualinvoke r11.<com.android.camera.util.Size: int getWidth()>();

        if $i6 != $i5 goto label09;

        $i8 = virtualinvoke r5.<com.android.camera.util.Size: int getHeight()>();

        $i7 = virtualinvoke r11.<com.android.camera.util.Size: int getHeight()>();

        if $i8 != $i7 goto label09;

        return r5;

     label09:
        i4 = i4 + 1;

        goto label08;

     label10:
        return null;
    }

    public static com.android.camera.util.Size pickBufferDimensions(com.android.camera.util.Size[], double, android.content.Context)
    {
        com.android.camera.util.Size[] r0;
        double d0;
        android.content.Context r1;
        boolean z0, $z1, $z2;
        com.android.camera.util.Size r2;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r3, $r5, $r8;
        com.android.camera.debug.Log$Tag $r4;
        java.lang.String $r6, $r7;

        r0 := @parameter0: com.android.camera.util.Size[];

        d0 := @parameter1: double;

        r1 := @parameter2: android.content.Context;

        $i0 = staticinvoke <com.android.camera.util.CameraUtil: int getDisplayRotation(android.content.Context)>(r1);

        $i1 = $i0 % 180;

        if $i1 != 90 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        z0 = $z1;

        $i2 = staticinvoke <com.android.camera.CaptureModuleUtil: int getDeviceNaturalOrientation(android.content.Context)>(r1);

        if $i2 != 1 goto label5;

        if z0 != 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        z0 = $z2;

     label5:
        if z0 == 0 goto label6;

     label6:
        r2 = staticinvoke <com.android.camera.CaptureModuleUtil: com.android.camera.util.Size getOptimalPreviewSize(android.content.Context,com.android.camera.util.Size[],double)>(r1, r0, d0);

        $r4 = <com.android.camera.CaptureModuleUtil: com.android.camera.debug.Log$Tag TAG>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Picked buffer size: ");

        $r6 = virtualinvoke r2.<com.android.camera.util.Size: java.lang.String toString()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void d(com.android.camera.debug.Log$Tag,java.lang.String)>($r4, $r7);

        return r2;
    }

    static void <clinit>()
    {
        com.android.camera.debug.Log$Tag $r0;

        $r0 = new com.android.camera.debug.Log$Tag;

        specialinvoke $r0.<com.android.camera.debug.Log$Tag: void <init>(java.lang.String)>("CaptureModuleUtil");

        <com.android.camera.CaptureModuleUtil: com.android.camera.debug.Log$Tag TAG> = $r0;

        return;
    }
}
