public class com.android.camera.ui.PreviewOverlay extends android.view.View implements com.android.camera.ui.PreviewStatusListener$PreviewAreaChangedListener
{
    public static final float ZOOM_MIN_RATIO;
    private static final com.android.camera.debug.Log$Tag TAG;
    private static final long ZOOM_MINIMUM_WAIT_MILLIS;
    private long mDelayZoomCallUntilMillis;
    private final com.android.camera.ui.PreviewOverlay$ZoomGestureDetector mScaleDetector;
    private final com.android.camera.ui.PreviewOverlay$ZoomProcessor mZoomProcessor;
    private android.view.GestureDetector mGestureDetector;
    private android.view.View$OnTouchListener mTouchListener;
    private com.android.camera.ui.PreviewOverlay$OnZoomChangedListener mZoomListener;
    private com.android.camera.ui.PreviewOverlay$OnPreviewTouchedListener mOnPreviewTouchedListener;

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.android.camera.ui.PreviewOverlay r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        com.android.camera.ui.PreviewOverlay$ZoomProcessor $r3;
        com.android.camera.ui.PreviewOverlay$ZoomGestureDetector $r4;

        r0 := @this: com.android.camera.ui.PreviewOverlay;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        r0.<com.android.camera.ui.PreviewOverlay: long mDelayZoomCallUntilMillis> = 0L;

        $r3 = new com.android.camera.ui.PreviewOverlay$ZoomProcessor;

        specialinvoke $r3.<com.android.camera.ui.PreviewOverlay$ZoomProcessor: void <init>(com.android.camera.ui.PreviewOverlay)>(r0);

        r0.<com.android.camera.ui.PreviewOverlay: com.android.camera.ui.PreviewOverlay$ZoomProcessor mZoomProcessor> = $r3;

        r0.<com.android.camera.ui.PreviewOverlay: android.view.GestureDetector mGestureDetector> = null;

        r0.<com.android.camera.ui.PreviewOverlay: android.view.View$OnTouchListener mTouchListener> = null;

        r0.<com.android.camera.ui.PreviewOverlay: com.android.camera.ui.PreviewOverlay$OnZoomChangedListener mZoomListener> = null;

        $r4 = new com.android.camera.ui.PreviewOverlay$ZoomGestureDetector;

        specialinvoke $r4.<com.android.camera.ui.PreviewOverlay$ZoomGestureDetector: void <init>(com.android.camera.ui.PreviewOverlay)>(r0);

        r0.<com.android.camera.ui.PreviewOverlay: com.android.camera.ui.PreviewOverlay$ZoomGestureDetector mScaleDetector> = $r4;

        return;
    }

    public void setupZoom(float, float, com.android.camera.ui.PreviewOverlay$OnZoomChangedListener)
    {
        com.android.camera.ui.PreviewOverlay r0;
        float f0, f1;
        com.android.camera.ui.PreviewOverlay$OnZoomChangedListener r1;
        com.android.camera.ui.PreviewOverlay$ZoomProcessor $r2;

        r0 := @this: com.android.camera.ui.PreviewOverlay;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        r1 := @parameter2: com.android.camera.ui.PreviewOverlay$OnZoomChangedListener;

        r0.<com.android.camera.ui.PreviewOverlay: com.android.camera.ui.PreviewOverlay$OnZoomChangedListener mZoomListener> = r1;

        $r2 = r0.<com.android.camera.ui.PreviewOverlay: com.android.camera.ui.PreviewOverlay$ZoomProcessor mZoomProcessor>;

        staticinvoke <com.android.camera.ui.PreviewOverlay$ZoomProcessor: void access$000(com.android.camera.ui.PreviewOverlay$ZoomProcessor,float,float)>($r2, f0, f1);

        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.android.camera.ui.PreviewOverlay r0;
        android.view.MotionEvent r1;
        android.view.GestureDetector $r2, $r8;
        android.view.View$OnTouchListener $r3, $r7;
        com.android.camera.ui.PreviewOverlay$ZoomGestureDetector $r4;
        com.android.camera.ui.PreviewOverlay$OnPreviewTouchedListener $r5, $r6;

        r0 := @this: com.android.camera.ui.PreviewOverlay;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<com.android.camera.ui.PreviewOverlay: android.view.GestureDetector mGestureDetector>;

        if $r2 == null goto label1;

        $r8 = r0.<com.android.camera.ui.PreviewOverlay: android.view.GestureDetector mGestureDetector>;

        virtualinvoke $r8.<android.view.GestureDetector: boolean onTouchEvent(android.view.MotionEvent)>(r1);

     label1:
        $r3 = r0.<com.android.camera.ui.PreviewOverlay: android.view.View$OnTouchListener mTouchListener>;

        if $r3 == null goto label2;

        $r7 = r0.<com.android.camera.ui.PreviewOverlay: android.view.View$OnTouchListener mTouchListener>;

        interfaceinvoke $r7.<android.view.View$OnTouchListener: boolean onTouch(android.view.View,android.view.MotionEvent)>(r0, r1);

     label2:
        $r4 = r0.<com.android.camera.ui.PreviewOverlay: com.android.camera.ui.PreviewOverlay$ZoomGestureDetector mScaleDetector>;

        virtualinvoke $r4.<com.android.camera.ui.PreviewOverlay$ZoomGestureDetector: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        $r5 = r0.<com.android.camera.ui.PreviewOverlay: com.android.camera.ui.PreviewOverlay$OnPreviewTouchedListener mOnPreviewTouchedListener>;

        if $r5 == null goto label3;

        $r6 = r0.<com.android.camera.ui.PreviewOverlay: com.android.camera.ui.PreviewOverlay$OnPreviewTouchedListener mOnPreviewTouchedListener>;

        interfaceinvoke $r6.<com.android.camera.ui.PreviewOverlay$OnPreviewTouchedListener: void onPreviewTouched(android.view.MotionEvent)>(r1);

     label3:
        return 1;
    }

    public void setOnPreviewTouchedListener(com.android.camera.ui.PreviewOverlay$OnPreviewTouchedListener)
    {
        com.android.camera.ui.PreviewOverlay r0;
        com.android.camera.ui.PreviewOverlay$OnPreviewTouchedListener r1;

        r0 := @this: com.android.camera.ui.PreviewOverlay;

        r1 := @parameter0: com.android.camera.ui.PreviewOverlay$OnPreviewTouchedListener;

        r0.<com.android.camera.ui.PreviewOverlay: com.android.camera.ui.PreviewOverlay$OnPreviewTouchedListener mOnPreviewTouchedListener> = r1;

        return;
    }

    public void onPreviewAreaChanged(android.graphics.RectF)
    {
        com.android.camera.ui.PreviewOverlay r0;
        android.graphics.RectF r1;
        float $f0, $f1, $f2, $f3;
        int $i0, $i1, $i2, $i3;
        com.android.camera.ui.PreviewOverlay$ZoomProcessor $r2;

        r0 := @this: com.android.camera.ui.PreviewOverlay;

        r1 := @parameter0: android.graphics.RectF;

        $r2 = r0.<com.android.camera.ui.PreviewOverlay: com.android.camera.ui.PreviewOverlay$ZoomProcessor mZoomProcessor>;

        $f0 = r1.<android.graphics.RectF: float left>;

        $i3 = (int) $f0;

        $f1 = r1.<android.graphics.RectF: float top>;

        $i2 = (int) $f1;

        $f2 = r1.<android.graphics.RectF: float right>;

        $i1 = (int) $f2;

        $f3 = r1.<android.graphics.RectF: float bottom>;

        $i0 = (int) $f3;

        virtualinvoke $r2.<com.android.camera.ui.PreviewOverlay$ZoomProcessor: void layout(int,int,int,int)>($i3, $i2, $i1, $i0);

        return;
    }

    public void onDraw(android.graphics.Canvas)
    {
        com.android.camera.ui.PreviewOverlay r0;
        android.graphics.Canvas r1;
        com.android.camera.ui.PreviewOverlay$ZoomProcessor $r2;

        r0 := @this: com.android.camera.ui.PreviewOverlay;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.view.View: void onDraw(android.graphics.Canvas)>(r1);

        $r2 = r0.<com.android.camera.ui.PreviewOverlay: com.android.camera.ui.PreviewOverlay$ZoomProcessor mZoomProcessor>;

        virtualinvoke $r2.<com.android.camera.ui.PreviewOverlay$ZoomProcessor: void draw(android.graphics.Canvas)>(r1);

        return;
    }

    public void setGestureListener(android.view.GestureDetector$OnGestureListener)
    {
        com.android.camera.ui.PreviewOverlay r0;
        android.view.GestureDetector$OnGestureListener r1;
        android.view.GestureDetector $r2;
        android.content.Context $r3;

        r0 := @this: com.android.camera.ui.PreviewOverlay;

        r1 := @parameter0: android.view.GestureDetector$OnGestureListener;

        if r1 == null goto label1;

        $r2 = new android.view.GestureDetector;

        $r3 = virtualinvoke r0.<com.android.camera.ui.PreviewOverlay: android.content.Context getContext()>();

        specialinvoke $r2.<android.view.GestureDetector: void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener)>($r3, r1);

        r0.<com.android.camera.ui.PreviewOverlay: android.view.GestureDetector mGestureDetector> = $r2;

     label1:
        return;
    }

    public void setTouchListener(android.view.View$OnTouchListener)
    {
        com.android.camera.ui.PreviewOverlay r0;
        android.view.View$OnTouchListener r1;

        r0 := @this: com.android.camera.ui.PreviewOverlay;

        r1 := @parameter0: android.view.View$OnTouchListener;

        r0.<com.android.camera.ui.PreviewOverlay: android.view.View$OnTouchListener mTouchListener> = r1;

        return;
    }

    public void reset()
    {
        com.android.camera.ui.PreviewOverlay r0;

        r0 := @this: com.android.camera.ui.PreviewOverlay;

        r0.<com.android.camera.ui.PreviewOverlay: com.android.camera.ui.PreviewOverlay$OnZoomChangedListener mZoomListener> = null;

        r0.<com.android.camera.ui.PreviewOverlay: android.view.GestureDetector mGestureDetector> = null;

        r0.<com.android.camera.ui.PreviewOverlay: android.view.View$OnTouchListener mTouchListener> = null;

        return;
    }

    static com.android.camera.ui.PreviewOverlay$ZoomProcessor access$100(com.android.camera.ui.PreviewOverlay)
    {
        com.android.camera.ui.PreviewOverlay r0;
        com.android.camera.ui.PreviewOverlay$ZoomProcessor $r1;

        r0 := @parameter0: com.android.camera.ui.PreviewOverlay;

        $r1 = r0.<com.android.camera.ui.PreviewOverlay: com.android.camera.ui.PreviewOverlay$ZoomProcessor mZoomProcessor>;

        return $r1;
    }

    static com.android.camera.ui.PreviewOverlay$OnZoomChangedListener access$200(com.android.camera.ui.PreviewOverlay)
    {
        com.android.camera.ui.PreviewOverlay r0;
        com.android.camera.ui.PreviewOverlay$OnZoomChangedListener $r1;

        r0 := @parameter0: com.android.camera.ui.PreviewOverlay;

        $r1 = r0.<com.android.camera.ui.PreviewOverlay: com.android.camera.ui.PreviewOverlay$OnZoomChangedListener mZoomListener>;

        return $r1;
    }

    static long access$300(com.android.camera.ui.PreviewOverlay)
    {
        com.android.camera.ui.PreviewOverlay r0;
        long $l0;

        r0 := @parameter0: com.android.camera.ui.PreviewOverlay;

        $l0 = r0.<com.android.camera.ui.PreviewOverlay: long mDelayZoomCallUntilMillis>;

        return $l0;
    }

    static long access$302(com.android.camera.ui.PreviewOverlay, long)
    {
        com.android.camera.ui.PreviewOverlay r0;
        long l0;

        r0 := @parameter0: com.android.camera.ui.PreviewOverlay;

        l0 := @parameter1: long;

        r0.<com.android.camera.ui.PreviewOverlay: long mDelayZoomCallUntilMillis> = l0;

        return l0;
    }

    static com.android.camera.ui.PreviewOverlay$ZoomGestureDetector access$400(com.android.camera.ui.PreviewOverlay)
    {
        com.android.camera.ui.PreviewOverlay r0;
        com.android.camera.ui.PreviewOverlay$ZoomGestureDetector $r1;

        r0 := @parameter0: com.android.camera.ui.PreviewOverlay;

        $r1 = r0.<com.android.camera.ui.PreviewOverlay: com.android.camera.ui.PreviewOverlay$ZoomGestureDetector mScaleDetector>;

        return $r1;
    }

    static void <clinit>()
    {
        com.android.camera.debug.Log$Tag $r0;

        <com.android.camera.ui.PreviewOverlay: long ZOOM_MINIMUM_WAIT_MILLIS> = 33L;

        <com.android.camera.ui.PreviewOverlay: float ZOOM_MIN_RATIO> = 1.0F;

        $r0 = new com.android.camera.debug.Log$Tag;

        specialinvoke $r0.<com.android.camera.debug.Log$Tag: void <init>(java.lang.String)>("PreviewOverlay");

        <com.android.camera.ui.PreviewOverlay: com.android.camera.debug.Log$Tag TAG> = $r0;

        return;
    }
}
