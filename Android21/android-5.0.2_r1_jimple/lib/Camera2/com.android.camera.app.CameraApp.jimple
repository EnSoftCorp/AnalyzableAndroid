public class com.android.camera.app.CameraApp extends android.app.Application implements com.android.camera.app.CameraServices
{
    private static final boolean WAIT_FOR_DEBUGGER_ON_START;
    private com.android.camera.app.MediaSaver mMediaSaver;
    private com.android.camera.session.CaptureSessionManager mSessionManager;
    private com.android.camera.session.SessionStorageManager mSessionStorageManager;
    private com.android.camera.app.MemoryManagerImpl mMemoryManager;
    private com.android.camera.session.PlaceholderManager mPlaceHolderManager;
    private com.android.camera.remote.RemoteShutterListener mRemoteShutterListener;
    private com.android.camera.app.MotionManager mMotionManager;
    private com.android.camera.settings.SettingsManager mSettingsManager;

    public void <init>()
    {
        com.android.camera.app.CameraApp r0;

        r0 := @this: com.android.camera.app.CameraApp;

        specialinvoke r0.<android.app.Application: void <init>()>();

        return;
    }

    public void onCreate()
    {
        com.android.camera.app.CameraApp r0;
        android.content.Context r1, $r12;
        com.android.camera.util.UsageStatistics $r2;
        com.android.camera.util.SessionStatsCollector $r3;
        com.android.camera.MediaSaverImpl $r4;
        com.android.camera.session.PlaceholderManager $r5, $r11;
        com.android.camera.session.SessionStorageManager $r6, $r10;
        com.android.camera.session.CaptureSessionManagerImpl $r7;
        com.android.camera.app.MediaSaver $r8, $r13;
        android.content.ContentResolver $r9;
        com.android.camera.app.MemoryManagerImpl $r14;
        com.android.camera.settings.SettingsManager $r15;
        com.android.camera.remote.RemoteShutterListener $r16;
        com.android.camera.app.MotionManager $r17;

        r0 := @this: com.android.camera.app.CameraApp;

        specialinvoke r0.<android.app.Application: void onCreate()>();

        r1 = virtualinvoke r0.<com.android.camera.app.CameraApp: android.content.Context getApplicationContext()>();

        staticinvoke <com.android.camera.debug.LogHelper: void initialize(android.content.Context)>(r1);

        $r2 = staticinvoke <com.android.camera.util.UsageStatistics: com.android.camera.util.UsageStatistics instance()>();

        virtualinvoke $r2.<com.android.camera.util.UsageStatistics: void initialize(android.content.Context)>(r0);

        $r3 = staticinvoke <com.android.camera.util.SessionStatsCollector: com.android.camera.util.SessionStatsCollector instance()>();

        virtualinvoke $r3.<com.android.camera.util.SessionStatsCollector: void initialize(android.content.Context)>(r0);

        staticinvoke <com.android.camera.util.CameraUtil: void initialize(android.content.Context)>(r0);

        staticinvoke <com.android.camera.processing.ProcessingServiceManager: void initSingleton(android.content.Context)>(r1);

        $r4 = new com.android.camera.MediaSaverImpl;

        specialinvoke $r4.<com.android.camera.MediaSaverImpl: void <init>()>();

        r0.<com.android.camera.app.CameraApp: com.android.camera.app.MediaSaver mMediaSaver> = $r4;

        $r5 = new com.android.camera.session.PlaceholderManager;

        specialinvoke $r5.<com.android.camera.session.PlaceholderManager: void <init>(android.content.Context)>(r1);

        r0.<com.android.camera.app.CameraApp: com.android.camera.session.PlaceholderManager mPlaceHolderManager> = $r5;

        $r6 = staticinvoke <com.android.camera.session.SessionStorageManagerImpl: com.android.camera.session.SessionStorageManager create(android.content.Context)>(r0);

        r0.<com.android.camera.app.CameraApp: com.android.camera.session.SessionStorageManager mSessionStorageManager> = $r6;

        $r7 = new com.android.camera.session.CaptureSessionManagerImpl;

        $r8 = r0.<com.android.camera.app.CameraApp: com.android.camera.app.MediaSaver mMediaSaver>;

        $r9 = virtualinvoke r0.<com.android.camera.app.CameraApp: android.content.ContentResolver getContentResolver()>();

        $r11 = r0.<com.android.camera.app.CameraApp: com.android.camera.session.PlaceholderManager mPlaceHolderManager>;

        $r10 = r0.<com.android.camera.app.CameraApp: com.android.camera.session.SessionStorageManager mSessionStorageManager>;

        specialinvoke $r7.<com.android.camera.session.CaptureSessionManagerImpl: void <init>(com.android.camera.app.MediaSaver,android.content.ContentResolver,com.android.camera.session.PlaceholderManager,com.android.camera.session.SessionStorageManager)>($r8, $r9, $r11, $r10);

        r0.<com.android.camera.app.CameraApp: com.android.camera.session.CaptureSessionManager mSessionManager> = $r7;

        $r12 = virtualinvoke r0.<com.android.camera.app.CameraApp: android.content.Context getApplicationContext()>();

        $r13 = r0.<com.android.camera.app.CameraApp: com.android.camera.app.MediaSaver mMediaSaver>;

        $r14 = staticinvoke <com.android.camera.app.MemoryManagerImpl: com.android.camera.app.MemoryManagerImpl create(android.content.Context,com.android.camera.app.MediaSaver)>($r12, $r13);

        r0.<com.android.camera.app.CameraApp: com.android.camera.app.MemoryManagerImpl mMemoryManager> = $r14;

        $r16 = staticinvoke <com.android.camera.util.RemoteShutterHelper: com.android.camera.remote.RemoteShutterListener create(android.content.Context)>(r0);

        r0.<com.android.camera.app.CameraApp: com.android.camera.remote.RemoteShutterListener mRemoteShutterListener> = $r16;

        $r15 = new com.android.camera.settings.SettingsManager;

        specialinvoke $r15.<com.android.camera.settings.SettingsManager: void <init>(android.content.Context)>(r0);

        r0.<com.android.camera.app.CameraApp: com.android.camera.settings.SettingsManager mSettingsManager> = $r15;

        specialinvoke r0.<com.android.camera.app.CameraApp: void clearNotifications()>();

        $r17 = new com.android.camera.app.MotionManager;

        specialinvoke $r17.<com.android.camera.app.MotionManager: void <init>(android.content.Context)>(r1);

        r0.<com.android.camera.app.CameraApp: com.android.camera.app.MotionManager mMotionManager> = $r17;

        return;
    }

    public com.android.camera.session.CaptureSessionManager getCaptureSessionManager()
    {
        com.android.camera.app.CameraApp r0;
        com.android.camera.session.CaptureSessionManager $r1;

        r0 := @this: com.android.camera.app.CameraApp;

        $r1 = r0.<com.android.camera.app.CameraApp: com.android.camera.session.CaptureSessionManager mSessionManager>;

        return $r1;
    }

    public com.android.camera.app.MemoryManager getMemoryManager()
    {
        com.android.camera.app.CameraApp r0;
        com.android.camera.app.MemoryManagerImpl $r1;

        r0 := @this: com.android.camera.app.CameraApp;

        $r1 = r0.<com.android.camera.app.CameraApp: com.android.camera.app.MemoryManagerImpl mMemoryManager>;

        return $r1;
    }

    public com.android.camera.app.MotionManager getMotionManager()
    {
        com.android.camera.app.CameraApp r0;
        com.android.camera.app.MotionManager $r1;

        r0 := @this: com.android.camera.app.CameraApp;

        $r1 = r0.<com.android.camera.app.CameraApp: com.android.camera.app.MotionManager mMotionManager>;

        return $r1;
    }

    public com.android.camera.app.MediaSaver getMediaSaver()
    {
        com.android.camera.app.CameraApp r0;
        com.android.camera.app.MediaSaver $r1;

        r0 := @this: com.android.camera.app.CameraApp;

        $r1 = r0.<com.android.camera.app.CameraApp: com.android.camera.app.MediaSaver mMediaSaver>;

        return $r1;
    }

    public com.android.camera.remote.RemoteShutterListener getRemoteShutterListener()
    {
        com.android.camera.app.CameraApp r0;
        com.android.camera.remote.RemoteShutterListener $r1;

        r0 := @this: com.android.camera.app.CameraApp;

        $r1 = r0.<com.android.camera.app.CameraApp: com.android.camera.remote.RemoteShutterListener mRemoteShutterListener>;

        return $r1;
    }

    public com.android.camera.settings.SettingsManager getSettingsManager()
    {
        com.android.camera.app.CameraApp r0;
        com.android.camera.settings.SettingsManager $r1;

        r0 := @this: com.android.camera.app.CameraApp;

        $r1 = r0.<com.android.camera.app.CameraApp: com.android.camera.settings.SettingsManager mSettingsManager>;

        return $r1;
    }

    private void clearNotifications()
    {
        com.android.camera.app.CameraApp r0;
        android.app.NotificationManager r1;
        java.lang.Object $r2;

        r0 := @this: com.android.camera.app.CameraApp;

        $r2 = virtualinvoke r0.<com.android.camera.app.CameraApp: java.lang.Object getSystemService(java.lang.String)>("notification");

        r1 = (android.app.NotificationManager) $r2;

        if r1 == null goto label1;

        virtualinvoke r1.<android.app.NotificationManager: void cancelAll()>();

     label1:
        return;
    }

    public static void <clinit>()
    {
        <com.android.camera.app.CameraApp: boolean WAIT_FOR_DEBUGGER_ON_START> = 0;

        return;
    }
}
