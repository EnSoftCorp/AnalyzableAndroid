public class com.bumptech.glide.manager.RequestTracker extends java.lang.Object
{
    private final java.util.Set requests;

    public void <init>()
    {
        com.bumptech.glide.manager.RequestTracker r0;
        java.util.WeakHashMap $r1;
        java.util.Set $r2;

        r0 := @this: com.bumptech.glide.manager.RequestTracker;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.WeakHashMap;

        specialinvoke $r1.<java.util.WeakHashMap: void <init>()>();

        $r2 = staticinvoke <java.util.Collections: java.util.Set newSetFromMap(java.util.Map)>($r1);

        r0.<com.bumptech.glide.manager.RequestTracker: java.util.Set requests> = $r2;

        return;
    }

    public void addRequest(com.bumptech.glide.request.Request)
    {
        com.bumptech.glide.manager.RequestTracker r0;
        com.bumptech.glide.request.Request r1;
        java.util.Set $r2;

        r0 := @this: com.bumptech.glide.manager.RequestTracker;

        r1 := @parameter0: com.bumptech.glide.request.Request;

        $r2 = r0.<com.bumptech.glide.manager.RequestTracker: java.util.Set requests>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void removeRequest(com.bumptech.glide.request.Request)
    {
        com.bumptech.glide.manager.RequestTracker r0;
        com.bumptech.glide.request.Request r1;
        java.util.Set $r2;

        r0 := @this: com.bumptech.glide.manager.RequestTracker;

        r1 := @parameter0: com.bumptech.glide.request.Request;

        $r2 = r0.<com.bumptech.glide.manager.RequestTracker: java.util.Set requests>;

        interfaceinvoke $r2.<java.util.Set: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public void pauseRequests()
    {
        com.bumptech.glide.manager.RequestTracker r0;
        java.util.Iterator r1;
        com.bumptech.glide.request.Request r2;
        java.util.Set $r3;
        boolean $z0, $z1, $z2;
        java.lang.Object $r4;

        r0 := @this: com.bumptech.glide.manager.RequestTracker;

        $r3 = r0.<com.bumptech.glide.manager.RequestTracker: java.util.Set requests>;

        r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.bumptech.glide.request.Request) $r4;

        $z1 = interfaceinvoke r2.<com.bumptech.glide.request.Request: boolean isComplete()>();

        if $z1 != 0 goto label2;

        $z2 = interfaceinvoke r2.<com.bumptech.glide.request.Request: boolean isFailed()>();

        if $z2 != 0 goto label2;

        interfaceinvoke r2.<com.bumptech.glide.request.Request: void clear()>();

     label2:
        goto label1;

     label3:
        return;
    }

    public void resumeRequests()
    {
        com.bumptech.glide.manager.RequestTracker r0;
        java.util.Iterator r1;
        com.bumptech.glide.request.Request r2;
        java.util.Set $r3;
        boolean $z0, $z1, $z2;
        java.lang.Object $r4;

        r0 := @this: com.bumptech.glide.manager.RequestTracker;

        $r3 = r0.<com.bumptech.glide.manager.RequestTracker: java.util.Set requests>;

        r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.bumptech.glide.request.Request) $r4;

        $z1 = interfaceinvoke r2.<com.bumptech.glide.request.Request: boolean isComplete()>();

        if $z1 != 0 goto label2;

        $z2 = interfaceinvoke r2.<com.bumptech.glide.request.Request: boolean isRunning()>();

        if $z2 != 0 goto label2;

        interfaceinvoke r2.<com.bumptech.glide.request.Request: void run()>();

     label2:
        goto label1;

     label3:
        return;
    }

    public void clearRequests()
    {
        com.bumptech.glide.manager.RequestTracker r0;
        java.util.Iterator r1;
        com.bumptech.glide.request.Request r2;
        java.util.Set $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: com.bumptech.glide.manager.RequestTracker;

        $r3 = r0.<com.bumptech.glide.manager.RequestTracker: java.util.Set requests>;

        r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.bumptech.glide.request.Request) $r4;

        interfaceinvoke r2.<com.bumptech.glide.request.Request: void clear()>();

        goto label1;

     label2:
        return;
    }

    public void restartRequests()
    {
        com.bumptech.glide.manager.RequestTracker r0;
        java.util.Iterator r1;
        com.bumptech.glide.request.Request r2;
        java.util.Set $r3;
        boolean $z0, $z1, $z2;
        java.lang.Object $r4;

        r0 := @this: com.bumptech.glide.manager.RequestTracker;

        $r3 = r0.<com.bumptech.glide.manager.RequestTracker: java.util.Set requests>;

        r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.bumptech.glide.request.Request) $r4;

        $z1 = interfaceinvoke r2.<com.bumptech.glide.request.Request: boolean isFailed()>();

        if $z1 == 0 goto label2;

        interfaceinvoke r2.<com.bumptech.glide.request.Request: void run()>();

        goto label3;

     label2:
        $z2 = interfaceinvoke r2.<com.bumptech.glide.request.Request: boolean isComplete()>();

        if $z2 != 0 goto label3;

        interfaceinvoke r2.<com.bumptech.glide.request.Request: void clear()>();

        interfaceinvoke r2.<com.bumptech.glide.request.Request: void run()>();

     label3:
        goto label1;

     label4:
        return;
    }
}
