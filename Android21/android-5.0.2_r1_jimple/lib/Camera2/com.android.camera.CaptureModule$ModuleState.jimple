final enum class com.android.camera.CaptureModule$ModuleState extends java.lang.Enum
{
    public static final enum com.android.camera.CaptureModule$ModuleState IDLE;
    public static final enum com.android.camera.CaptureModule$ModuleState WATCH_FOR_NEXT_FRAME_AFTER_PREVIEW_STARTED;
    public static final enum com.android.camera.CaptureModule$ModuleState UPDATE_TRANSFORM_ON_NEXT_SURFACE_TEXTURE_UPDATE;
    private static final com.android.camera.CaptureModule$ModuleState[] $VALUES;

    public static com.android.camera.CaptureModule$ModuleState[] values()
    {
        com.android.camera.CaptureModule$ModuleState[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <com.android.camera.CaptureModule$ModuleState: com.android.camera.CaptureModule$ModuleState[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (com.android.camera.CaptureModule$ModuleState[]) $r1;

        return $r2;
    }

    public static com.android.camera.CaptureModule$ModuleState valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        com.android.camera.CaptureModule$ModuleState $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "com/android/camera/CaptureModule$ModuleState", r0);

        $r2 = (com.android.camera.CaptureModule$ModuleState) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        com.android.camera.CaptureModule$ModuleState r0;
        java.lang.String r1;
        int i0;

        r0 := @this: com.android.camera.CaptureModule$ModuleState;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    static void <clinit>()
    {
        com.android.camera.CaptureModule$ModuleState $r0, $r1, $r2, $r4, $r5, $r6;
        com.android.camera.CaptureModule$ModuleState[] $r3;

        $r0 = new com.android.camera.CaptureModule$ModuleState;

        specialinvoke $r0.<com.android.camera.CaptureModule$ModuleState: void <init>(java.lang.String,int)>("IDLE", 0);

        <com.android.camera.CaptureModule$ModuleState: com.android.camera.CaptureModule$ModuleState IDLE> = $r0;

        $r1 = new com.android.camera.CaptureModule$ModuleState;

        specialinvoke $r1.<com.android.camera.CaptureModule$ModuleState: void <init>(java.lang.String,int)>("WATCH_FOR_NEXT_FRAME_AFTER_PREVIEW_STARTED", 1);

        <com.android.camera.CaptureModule$ModuleState: com.android.camera.CaptureModule$ModuleState WATCH_FOR_NEXT_FRAME_AFTER_PREVIEW_STARTED> = $r1;

        $r2 = new com.android.camera.CaptureModule$ModuleState;

        specialinvoke $r2.<com.android.camera.CaptureModule$ModuleState: void <init>(java.lang.String,int)>("UPDATE_TRANSFORM_ON_NEXT_SURFACE_TEXTURE_UPDATE", 2);

        <com.android.camera.CaptureModule$ModuleState: com.android.camera.CaptureModule$ModuleState UPDATE_TRANSFORM_ON_NEXT_SURFACE_TEXTURE_UPDATE> = $r2;

        $r3 = newarray (com.android.camera.CaptureModule$ModuleState)[3];

        $r4 = <com.android.camera.CaptureModule$ModuleState: com.android.camera.CaptureModule$ModuleState IDLE>;

        $r3[0] = $r4;

        $r5 = <com.android.camera.CaptureModule$ModuleState: com.android.camera.CaptureModule$ModuleState WATCH_FOR_NEXT_FRAME_AFTER_PREVIEW_STARTED>;

        $r3[1] = $r5;

        $r6 = <com.android.camera.CaptureModule$ModuleState: com.android.camera.CaptureModule$ModuleState UPDATE_TRANSFORM_ON_NEXT_SURFACE_TEXTURE_UPDATE>;

        $r3[2] = $r6;

        <com.android.camera.CaptureModule$ModuleState: com.android.camera.CaptureModule$ModuleState[] $VALUES> = $r3;

        return;
    }
}
