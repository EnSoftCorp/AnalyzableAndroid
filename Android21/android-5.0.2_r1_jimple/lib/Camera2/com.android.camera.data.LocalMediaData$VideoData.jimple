public final class com.android.camera.data.LocalMediaData$VideoData extends com.android.camera.data.LocalMediaData
{
    public static final int COL_ID;
    public static final int COL_TITLE;
    public static final int COL_MIME_TYPE;
    public static final int COL_DATE_TAKEN;
    public static final int COL_DATE_MODIFIED;
    public static final int COL_DATA;
    public static final int COL_WIDTH;
    public static final int COL_HEIGHT;
    public static final int COL_SIZE;
    public static final int COL_LATITUDE;
    public static final int COL_LONGITUDE;
    public static final int COL_DURATION;
    static final android.net.Uri CONTENT_URI;
    private static final int mSupportedUIActions;
    private static final int mSupportedDataActions;
    private static final java.lang.String QUERY_ORDER;
    private static final java.lang.String[] QUERY_PROJECTION;
    private final long mDurationInSeconds;
    private final java.lang.String mSignature;

    public void <init>(long, java.lang.String, java.lang.String, long, long, java.lang.String, int, int, long, double, double, long)
    {
        com.android.camera.data.LocalMediaData$VideoData r0;
        long l0, l1, l2, l5, l6;
        java.lang.String r1, r2, r3, $r6;
        int i3, i4;
        double d0, d1;
        java.lang.StringBuilder $r4, $r5, $r7;

        r0 := @this: com.android.camera.data.LocalMediaData$VideoData;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        l1 := @parameter3: long;

        l2 := @parameter4: long;

        r3 := @parameter5: java.lang.String;

        i3 := @parameter6: int;

        i4 := @parameter7: int;

        l5 := @parameter8: long;

        d0 := @parameter9: double;

        d1 := @parameter10: double;

        l6 := @parameter11: long;

        specialinvoke r0.<com.android.camera.data.LocalMediaData: void <init>(long,java.lang.String,java.lang.String,long,long,java.lang.String,int,int,long,double,double)>(l0, r1, r2, l1, l2, r3, i3, i4, l5, d0, d1);

        r0.<com.android.camera.data.LocalMediaData$VideoData: long mDurationInSeconds> = l6;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l2);

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.camera.data.LocalMediaData$VideoData: java.lang.String mSignature> = $r6;

        return;
    }

    public static com.android.camera.data.LocalData fromContentUri(android.content.ContentResolver, android.net.Uri)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1;
        java.util.List r2;
        boolean $z0;
        java.lang.Object $r3;
        com.android.camera.data.LocalData $r4;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.net.Uri;

        r2 = staticinvoke <com.android.camera.data.LocalMediaData$VideoData: java.util.List query(android.content.ContentResolver,android.net.Uri,long)>(r0, r1, -1L);

        $z0 = interfaceinvoke r2.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r3 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (com.android.camera.data.LocalData) $r3;

        return $r4;
    }

    static java.util.List query(android.content.ContentResolver, android.net.Uri, long)
    {
        android.content.ContentResolver r0;
        android.net.Uri r1;
        long l0;
        com.android.camera.data.LocalMediaData$VideoDataBuilder $r2;
        java.lang.String[] $r3;
        java.util.List $r4;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: android.net.Uri;

        l0 := @parameter2: long;

        $r3 = <com.android.camera.data.LocalMediaData$VideoData: java.lang.String[] QUERY_PROJECTION>;

        $r2 = new com.android.camera.data.LocalMediaData$VideoDataBuilder;

        specialinvoke $r2.<com.android.camera.data.LocalMediaData$VideoDataBuilder: void <init>(com.android.camera.data.LocalMediaData$1)>(null);

        $r4 = staticinvoke <com.android.camera.data.LocalMediaData: java.util.List access$100(android.content.ContentResolver,android.net.Uri,java.lang.String[],long,java.lang.String,com.android.camera.data.LocalMediaData$CursorToLocalData)>(r0, r1, $r3, l0, "datetaken DESC, _id DESC", $r2);

        return $r4;
    }

    private int getBestWidth()
    {
        com.android.camera.data.LocalMediaData$VideoData r0;
        int i0, $i1;

        r0 := @this: com.android.camera.data.LocalMediaData$VideoData;

        i0 = staticinvoke <com.android.camera.data.VideoRotationMetadataLoader: int getWidth(com.android.camera.data.LocalData)>(r0);

        if i0 <= 0 goto label1;

        return i0;

     label1:
        $i1 = r0.<com.android.camera.data.LocalMediaData$VideoData: int mWidth>;

        return $i1;
    }

    private int getBestHeight()
    {
        com.android.camera.data.LocalMediaData$VideoData r0;
        int i0, $i1;

        r0 := @this: com.android.camera.data.LocalMediaData$VideoData;

        i0 = staticinvoke <com.android.camera.data.VideoRotationMetadataLoader: int getHeight(com.android.camera.data.LocalData)>(r0);

        if i0 <= 0 goto label1;

        return i0;

     label1:
        $i1 = r0.<com.android.camera.data.LocalMediaData$VideoData: int mHeight>;

        return $i1;
    }

    public int getWidth()
    {
        com.android.camera.data.LocalMediaData$VideoData r0;
        boolean $z0;
        int $i0;

        r0 := @this: com.android.camera.data.LocalMediaData$VideoData;

        $z0 = staticinvoke <com.android.camera.data.VideoRotationMetadataLoader: boolean isRotated(com.android.camera.data.LocalData)>(r0);

        if $z0 == 0 goto label1;

        $i0 = specialinvoke r0.<com.android.camera.data.LocalMediaData$VideoData: int getBestHeight()>();

        goto label2;

     label1:
        $i0 = specialinvoke r0.<com.android.camera.data.LocalMediaData$VideoData: int getBestWidth()>();

     label2:
        return $i0;
    }

    public int getHeight()
    {
        com.android.camera.data.LocalMediaData$VideoData r0;
        boolean $z0;
        int $i0;

        r0 := @this: com.android.camera.data.LocalMediaData$VideoData;

        $z0 = staticinvoke <com.android.camera.data.VideoRotationMetadataLoader: boolean isRotated(com.android.camera.data.LocalData)>(r0);

        if $z0 == 0 goto label1;

        $i0 = specialinvoke r0.<com.android.camera.data.LocalMediaData$VideoData: int getBestWidth()>();

        goto label2;

     label1:
        $i0 = specialinvoke r0.<com.android.camera.data.LocalMediaData$VideoData: int getBestHeight()>();

     label2:
        return $i0;
    }

    private static com.android.camera.data.LocalMediaData$VideoData buildFromCursor(android.database.Cursor)
    {
        android.database.Cursor r0;
        long l0, l1, l2, l5, $l6, l7;
        java.lang.String r1, r2, r3;
        int i3, i4;
        android.media.CamcorderProfile r4;
        double d0, d1;
        com.android.camera.data.LocalMediaData$VideoData r5, $r7;
        com.android.camera.debug.Log$Tag $r6;

        r0 := @parameter0: android.database.Cursor;

        l0 = interfaceinvoke r0.<android.database.Cursor: long getLong(int)>(0);

        r1 = interfaceinvoke r0.<android.database.Cursor: java.lang.String getString(int)>(1);

        r2 = interfaceinvoke r0.<android.database.Cursor: java.lang.String getString(int)>(2);

        l1 = interfaceinvoke r0.<android.database.Cursor: long getLong(int)>(3);

        l2 = interfaceinvoke r0.<android.database.Cursor: long getLong(int)>(4);

        r3 = interfaceinvoke r0.<android.database.Cursor: java.lang.String getString(int)>(5);

        i3 = interfaceinvoke r0.<android.database.Cursor: int getInt(int)>(6);

        i4 = interfaceinvoke r0.<android.database.Cursor: int getInt(int)>(7);

        if i3 == 0 goto label1;

        if i4 != 0 goto label2;

     label1:
        $r6 = <com.android.camera.data.LocalMediaData$VideoData: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void w(com.android.camera.debug.Log$Tag,java.lang.String)>($r6, "failed to retrieve width and height from the media store, defaulting  to camera profile");

        r4 = staticinvoke <android.media.CamcorderProfile: android.media.CamcorderProfile get(int)>(1);

        i3 = r4.<android.media.CamcorderProfile: int videoFrameWidth>;

        i4 = r4.<android.media.CamcorderProfile: int videoFrameHeight>;

     label2:
        l7 = interfaceinvoke r0.<android.database.Cursor: long getLong(int)>(8);

        d0 = interfaceinvoke r0.<android.database.Cursor: double getDouble(int)>(9);

        d1 = interfaceinvoke r0.<android.database.Cursor: double getDouble(int)>(10);

        $l6 = interfaceinvoke r0.<android.database.Cursor: long getLong(int)>(11);

        l5 = $l6 / 1000L;

        $r7 = new com.android.camera.data.LocalMediaData$VideoData;

        specialinvoke $r7.<com.android.camera.data.LocalMediaData$VideoData: void <init>(long,java.lang.String,java.lang.String,long,long,java.lang.String,int,int,long,double,double,long)>(l0, r1, r2, l1, l2, r3, i3, i4, l7, d0, d1, l5);

        r5 = $r7;

        return r5;
    }

    public java.lang.String toString()
    {
        com.android.camera.data.LocalMediaData$VideoData r0;
        java.lang.StringBuilder $r1, $r2, $r4, $r5, $r7, $r8, $r9, $r10, $r11, $r12, $r14;
        java.lang.String $r3, $r6, $r15;
        int $i0, $i1;
        java.util.Date $r13;
        long $l2;

        r0 := @this: com.android.camera.data.LocalMediaData$VideoData;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Video:,data=");

        $r3 = r0.<com.android.camera.data.LocalMediaData$VideoData: java.lang.String mPath>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",mimeType=");

        $r6 = r0.<com.android.camera.data.LocalMediaData$VideoData: java.lang.String mMimeType>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i0 = r0.<com.android.camera.data.LocalMediaData$VideoData: int mWidth>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x");

        $i1 = r0.<com.android.camera.data.LocalMediaData$VideoData: int mHeight>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",date=");

        $r13 = new java.util.Date;

        $l2 = r0.<com.android.camera.data.LocalMediaData$VideoData: long mDateTakenInMilliSeconds>;

        specialinvoke $r13.<java.util.Date: void <init>(long)>($l2);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;
    }

    public int getViewType()
    {
        com.android.camera.data.LocalMediaData$VideoData r0;

        r0 := @this: com.android.camera.data.LocalMediaData$VideoData;

        return 2;
    }

    public boolean isUIActionSupported(int)
    {
        com.android.camera.data.LocalMediaData$VideoData r0;
        int i0, $i1;
        boolean $z0;

        r0 := @this: com.android.camera.data.LocalMediaData$VideoData;

        i0 := @parameter0: int;

        $i1 = i0 & 3;

        if $i1 != i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isDataActionSupported(int)
    {
        com.android.camera.data.LocalMediaData$VideoData r0;
        int i0, $i1;
        boolean $z0;

        r0 := @this: com.android.camera.data.LocalMediaData$VideoData;

        i0 := @parameter0: int;

        $i1 = i0 & 11;

        if $i1 != i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean delete(android.content.Context)
    {
        com.android.camera.data.LocalMediaData$VideoData r0;
        android.content.Context r1;
        android.content.ContentResolver r2;
        java.lang.StringBuilder $r3, $r5, $r6;
        android.net.Uri $r4;
        long $l0;
        java.lang.String $r7;
        boolean $z0;

        r0 := @this: com.android.camera.data.LocalMediaData$VideoData;

        r1 := @parameter0: android.content.Context;

        r2 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r4 = <com.android.camera.data.LocalMediaData$VideoData: android.net.Uri CONTENT_URI>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_id=");

        $l0 = r0.<com.android.camera.data.LocalMediaData$VideoData: long mContentId>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>($r4, $r7, null);

        $z0 = specialinvoke r0.<com.android.camera.data.LocalMediaData: boolean delete(android.content.Context)>(r1);

        return $z0;
    }

    public android.net.Uri getUri()
    {
        com.android.camera.data.LocalMediaData$VideoData r0;
        android.net.Uri r1, $r5;
        android.net.Uri$Builder $r2, $r4;
        long $l0;
        java.lang.String $r3;

        r0 := @this: com.android.camera.data.LocalMediaData$VideoData;

        r1 = <com.android.camera.data.LocalMediaData$VideoData: android.net.Uri CONTENT_URI>;

        $r2 = virtualinvoke r1.<android.net.Uri: android.net.Uri$Builder buildUpon()>();

        $l0 = r0.<com.android.camera.data.LocalMediaData$VideoData: long mContentId>;

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0);

        $r4 = virtualinvoke $r2.<android.net.Uri$Builder: android.net.Uri$Builder appendPath(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<android.net.Uri$Builder: android.net.Uri build()>();

        return $r5;
    }

    public com.android.camera.data.MediaDetails getMediaDetails(android.content.Context)
    {
        com.android.camera.data.LocalMediaData$VideoData r0;
        android.content.Context r1;
        com.android.camera.data.MediaDetails r2;
        java.lang.String r3;
        long $l0;

        r0 := @this: com.android.camera.data.LocalMediaData$VideoData;

        r1 := @parameter0: android.content.Context;

        r2 = specialinvoke r0.<com.android.camera.data.LocalMediaData: com.android.camera.data.MediaDetails getMediaDetails(android.content.Context)>(r1);

        $l0 = r0.<com.android.camera.data.LocalMediaData$VideoData: long mDurationInSeconds>;

        r3 = staticinvoke <com.android.camera.data.MediaDetails: java.lang.String formatDuration(android.content.Context,long)>(r1, $l0);

        virtualinvoke r2.<com.android.camera.data.MediaDetails: void addDetail(int,java.lang.Object)>(8, r3);

        return r2;
    }

    public int getLocalDataType()
    {
        com.android.camera.data.LocalMediaData$VideoData r0;

        r0 := @this: com.android.camera.data.LocalMediaData$VideoData;

        return 4;
    }

    public com.android.camera.data.LocalData refresh(android.content.Context)
    {
        com.android.camera.data.LocalMediaData$VideoData r0, r3;
        android.content.Context r1;
        android.database.Cursor r2;
        android.content.ContentResolver $r4;
        android.net.Uri $r5;
        java.lang.String[] $r6;
        boolean $z0;

        r0 := @this: com.android.camera.data.LocalMediaData$VideoData;

        r1 := @parameter0: android.content.Context;

        $r4 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r5 = virtualinvoke r0.<com.android.camera.data.LocalMediaData$VideoData: android.net.Uri getUri()>();

        $r6 = <com.android.camera.data.LocalMediaData$VideoData: java.lang.String[] QUERY_PROJECTION>;

        r2 = virtualinvoke $r4.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r5, $r6, null, null, null);

        if r2 == null goto label1;

        $z0 = interfaceinvoke r2.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 != 0 goto label2;

     label1:
        return null;

     label2:
        r3 = staticinvoke <com.android.camera.data.LocalMediaData$VideoData: com.android.camera.data.LocalMediaData$VideoData buildFromCursor(android.database.Cursor)>(r2);

        return r3;
    }

    public java.lang.String getSignature()
    {
        com.android.camera.data.LocalMediaData$VideoData r0;
        java.lang.String $r1;

        r0 := @this: com.android.camera.data.LocalMediaData$VideoData;

        $r1 = r0.<com.android.camera.data.LocalMediaData$VideoData: java.lang.String mSignature>;

        return $r1;
    }

    protected android.widget.ImageView fillImageView(android.content.Context, android.widget.ImageView, int, int, int, com.android.camera.data.LocalDataAdapter, boolean)
    {
        com.android.camera.data.LocalMediaData$VideoData r0;
        android.content.Context r1;
        android.widget.ImageView r2;
        int i0, i1, i2;
        com.android.camera.data.LocalDataAdapter r3;
        boolean z0;
        com.bumptech.glide.RequestManager $r4, $r12;
        android.net.Uri $r5, $r11;
        long $l3, $l4;
        java.lang.String $r6, $r13;
        com.bumptech.glide.DrawableTypeRequest $r7, $r15;
        com.bumptech.glide.BitmapTypeRequest $r8, $r14;
        com.bumptech.glide.load.resource.bitmap.BitmapEncoder $r9, $r17;
        com.bumptech.glide.BitmapRequestBuilder $r10, $r16, $r18, $r19, $r20, $r21, $r23;

        r0 := @this: com.android.camera.data.LocalMediaData$VideoData;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.widget.ImageView;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r3 := @parameter5: com.android.camera.data.LocalDataAdapter;

        z0 := @parameter6: boolean;

        if i0 <= 0 goto label1;

        if i1 > 0 goto label2;

     label1:
        return r2;

     label2:
        $r4 = staticinvoke <com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)>(r1);

        $r5 = virtualinvoke r0.<com.android.camera.data.LocalMediaData$VideoData: android.net.Uri getUri()>();

        $r6 = r0.<com.android.camera.data.LocalMediaData$VideoData: java.lang.String mMimeType>;

        $l3 = r0.<com.android.camera.data.LocalMediaData$VideoData: long mDateModifiedInSeconds>;

        $r7 = virtualinvoke $r4.<com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest loadFromMediaStore(android.net.Uri,java.lang.String,long,int)>($r5, $r6, $l3, 0);

        $r8 = virtualinvoke $r7.<com.bumptech.glide.DrawableTypeRequest: com.bumptech.glide.BitmapTypeRequest asBitmap()>();

        $r9 = staticinvoke <com.android.camera.data.LocalMediaData: com.bumptech.glide.load.resource.bitmap.BitmapEncoder access$300()>();

        $r10 = virtualinvoke $r8.<com.bumptech.glide.BitmapTypeRequest: com.bumptech.glide.BitmapRequestBuilder encoder(com.bumptech.glide.load.ResourceEncoder)>($r9);

        $r12 = staticinvoke <com.bumptech.glide.Glide: com.bumptech.glide.RequestManager 'with'(android.content.Context)>(r1);

        $r11 = virtualinvoke r0.<com.android.camera.data.LocalMediaData$VideoData: android.net.Uri getUri()>();

        $r13 = r0.<com.android.camera.data.LocalMediaData$VideoData: java.lang.String mMimeType>;

        $l4 = r0.<com.android.camera.data.LocalMediaData$VideoData: long mDateModifiedInSeconds>;

        $r15 = virtualinvoke $r12.<com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest loadFromMediaStore(android.net.Uri,java.lang.String,long,int)>($r11, $r13, $l4, 0);

        $r14 = virtualinvoke $r15.<com.bumptech.glide.DrawableTypeRequest: com.bumptech.glide.BitmapTypeRequest asBitmap()>();

        $r17 = staticinvoke <com.android.camera.data.LocalMediaData: com.bumptech.glide.load.resource.bitmap.BitmapEncoder access$300()>();

        $r16 = virtualinvoke $r14.<com.bumptech.glide.BitmapTypeRequest: com.bumptech.glide.BitmapRequestBuilder encoder(com.bumptech.glide.load.ResourceEncoder)>($r17);

        $r19 = virtualinvoke $r16.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.BitmapRequestBuilder override(int,int)>(512, 384);

        $r18 = virtualinvoke $r10.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.BitmapRequestBuilder thumbnail(com.bumptech.glide.BitmapRequestBuilder)>($r19);

        $r21 = virtualinvoke $r18.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.BitmapRequestBuilder placeholder(int)>(i2);

        $r20 = virtualinvoke $r21.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.BitmapRequestBuilder fitCenter()>();

        $r23 = virtualinvoke $r20.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.BitmapRequestBuilder override(int,int)>(i0, i1);

        virtualinvoke $r23.<com.bumptech.glide.BitmapRequestBuilder: com.bumptech.glide.request.target.Target into(android.widget.ImageView)>(r2);

        return r2;
    }

    public android.view.View getView(android.content.Context, android.view.View, int, int, int, com.android.camera.data.LocalDataAdapter, boolean)
    {
        com.android.camera.data.LocalMediaData$VideoData r0;
        android.content.Context r1;
        android.view.View r2, r5, $r11, $r12;
        int i0, i1, i2, $i3;
        com.android.camera.data.LocalDataAdapter r3;
        boolean z0;
        com.android.camera.data.LocalMediaData$VideoViewHolder r4, $r14;
        android.widget.ImageView r6, r7, $r13, $r15;
        android.view.LayoutInflater $r8;
        com.android.camera.data.LocalDataViewType $r9;
        java.lang.Integer $r10;
        android.content.res.Resources $r17;
        com.android.camera.data.LocalMediaData$VideoData$1 $r18;
        long $l4;
        java.lang.Object[] $r19;
        java.lang.String $r20, $r21;
        java.lang.Object $r22;

        r0 := @this: com.android.camera.data.LocalMediaData$VideoData;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r3 := @parameter5: com.android.camera.data.LocalDataAdapter;

        z0 := @parameter6: boolean;

        if r2 == null goto label1;

        r5 = r2;

        $r22 = virtualinvoke r2.<android.view.View: java.lang.Object getTag(int)>(2131623939);

        r4 = (com.android.camera.data.LocalMediaData$VideoViewHolder) $r22;

        goto label2;

     label1:
        $r8 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>(r1);

        r5 = virtualinvoke $r8.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(2130968591, null);

        $r9 = virtualinvoke r0.<com.android.camera.data.LocalMediaData$VideoData: com.android.camera.data.LocalDataViewType getItemViewType()>();

        $i3 = virtualinvoke $r9.<com.android.camera.data.LocalDataViewType: int ordinal()>();

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        virtualinvoke r5.<android.view.View: void setTag(int,java.lang.Object)>(2131623940, $r10);

        $r12 = virtualinvoke r5.<android.view.View: android.view.View findViewById(int)>(2131623989);

        r6 = (android.widget.ImageView) $r12;

        $r11 = virtualinvoke r5.<android.view.View: android.view.View findViewById(int)>(2131623990);

        r7 = (android.widget.ImageView) $r11;

        $r14 = new com.android.camera.data.LocalMediaData$VideoViewHolder;

        specialinvoke $r14.<com.android.camera.data.LocalMediaData$VideoViewHolder: void <init>(android.widget.ImageView,android.widget.ImageView)>(r6, r7);

        r4 = $r14;

        virtualinvoke r5.<android.view.View: void setTag(int,java.lang.Object)>(2131623939, r4);

     label2:
        $r13 = staticinvoke <com.android.camera.data.LocalMediaData$VideoViewHolder: android.widget.ImageView access$600(com.android.camera.data.LocalMediaData$VideoViewHolder)>(r4);

        virtualinvoke r0.<com.android.camera.data.LocalMediaData$VideoData: android.widget.ImageView fillImageView(android.content.Context,android.widget.ImageView,int,int,int,com.android.camera.data.LocalDataAdapter,boolean)>(r1, $r13, i0, i1, i2, r3, z0);

        $r15 = staticinvoke <com.android.camera.data.LocalMediaData$VideoViewHolder: android.widget.ImageView access$700(com.android.camera.data.LocalMediaData$VideoViewHolder)>(r4);

        $r18 = new com.android.camera.data.LocalMediaData$VideoData$1;

        specialinvoke $r18.<com.android.camera.data.LocalMediaData$VideoData$1: void <init>(com.android.camera.data.LocalMediaData$VideoData,android.content.Context)>(r0, r1);

        virtualinvoke $r15.<android.widget.ImageView: void setOnClickListener(android.view.View$OnClickListener)>($r18);

        $r17 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r19 = newarray (java.lang.Object)[1];

        $l4 = r0.<com.android.camera.data.LocalMediaData$VideoData: long mDateModifiedInSeconds>;

        $r21 = staticinvoke <com.android.camera.data.LocalMediaData: java.lang.String access$200(long)>($l4);

        $r19[0] = $r21;

        $r20 = virtualinvoke $r17.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(2131230932, $r19);

        virtualinvoke r5.<android.view.View: void setContentDescription(java.lang.CharSequence)>($r20);

        return r5;
    }

    public void recycle(android.view.View)
    {
        com.android.camera.data.LocalMediaData$VideoData r0;
        android.view.View r1;
        com.android.camera.data.LocalMediaData$VideoViewHolder r2;
        java.lang.Object $r3;
        android.widget.ImageView $r4;

        r0 := @this: com.android.camera.data.LocalMediaData$VideoData;

        r1 := @parameter0: android.view.View;

        specialinvoke r0.<com.android.camera.data.LocalMediaData: void recycle(android.view.View)>(r1);

        $r3 = virtualinvoke r1.<android.view.View: java.lang.Object getTag(int)>(2131623939);

        r2 = (com.android.camera.data.LocalMediaData$VideoViewHolder) $r3;

        $r4 = staticinvoke <com.android.camera.data.LocalMediaData$VideoViewHolder: android.widget.ImageView access$600(com.android.camera.data.LocalMediaData$VideoViewHolder)>(r2);

        staticinvoke <com.bumptech.glide.Glide: void clear(android.view.View)>($r4);

        return;
    }

    public com.android.camera.data.LocalDataViewType getItemViewType()
    {
        com.android.camera.data.LocalMediaData$VideoData r0;
        com.android.camera.data.LocalDataViewType $r1;

        r0 := @this: com.android.camera.data.LocalMediaData$VideoData;

        $r1 = <com.android.camera.data.LocalDataViewType: com.android.camera.data.LocalDataViewType VIDEO>;

        return $r1;
    }

    static com.android.camera.data.LocalMediaData$VideoData access$800(android.database.Cursor)
    {
        android.database.Cursor r0;
        com.android.camera.data.LocalMediaData$VideoData $r1;

        r0 := @parameter0: android.database.Cursor;

        $r1 = staticinvoke <com.android.camera.data.LocalMediaData$VideoData: com.android.camera.data.LocalMediaData$VideoData buildFromCursor(android.database.Cursor)>(r0);

        return $r1;
    }

    static void <clinit>()
    {
        android.net.Uri $r0;
        java.lang.String[] $r1;

        <com.android.camera.data.LocalMediaData$VideoData: java.lang.String QUERY_ORDER> = "datetaken DESC, _id DESC";

        <com.android.camera.data.LocalMediaData$VideoData: int mSupportedDataActions> = 11;

        <com.android.camera.data.LocalMediaData$VideoData: int mSupportedUIActions> = 3;

        <com.android.camera.data.LocalMediaData$VideoData: int COL_DURATION> = 11;

        <com.android.camera.data.LocalMediaData$VideoData: int COL_LONGITUDE> = 10;

        <com.android.camera.data.LocalMediaData$VideoData: int COL_LATITUDE> = 9;

        <com.android.camera.data.LocalMediaData$VideoData: int COL_SIZE> = 8;

        <com.android.camera.data.LocalMediaData$VideoData: int COL_HEIGHT> = 7;

        <com.android.camera.data.LocalMediaData$VideoData: int COL_WIDTH> = 6;

        <com.android.camera.data.LocalMediaData$VideoData: int COL_DATA> = 5;

        <com.android.camera.data.LocalMediaData$VideoData: int COL_DATE_MODIFIED> = 4;

        <com.android.camera.data.LocalMediaData$VideoData: int COL_DATE_TAKEN> = 3;

        <com.android.camera.data.LocalMediaData$VideoData: int COL_MIME_TYPE> = 2;

        <com.android.camera.data.LocalMediaData$VideoData: int COL_TITLE> = 1;

        <com.android.camera.data.LocalMediaData$VideoData: int COL_ID> = 0;

        $r0 = <android.provider.MediaStore$Video$Media: android.net.Uri EXTERNAL_CONTENT_URI>;

        <com.android.camera.data.LocalMediaData$VideoData: android.net.Uri CONTENT_URI> = $r0;

        $r1 = newarray (java.lang.String)[12];

        $r1[0] = "_id";

        $r1[1] = "title";

        $r1[2] = "mime_type";

        $r1[3] = "datetaken";

        $r1[4] = "date_modified";

        $r1[5] = "_data";

        $r1[6] = "width";

        $r1[7] = "height";

        $r1[8] = "_size";

        $r1[9] = "latitude";

        $r1[10] = "longitude";

        $r1[11] = "duration";

        <com.android.camera.data.LocalMediaData$VideoData: java.lang.String[] QUERY_PROJECTION> = $r1;

        return;
    }
}
