public class com.android.camera.CaptureModuleUI extends java.lang.Object implements com.android.camera.ui.PreviewStatusListener
{
    private static final com.android.camera.debug.Log$Tag TAG;
    private final com.android.camera.CameraActivity mActivity;
    private final com.android.camera.CaptureModule mModule;
    private final android.view.View mRootView;
    private final com.android.camera.ui.PreviewOverlay mPreviewOverlay;
    private final com.android.camera.ui.ProgressOverlay mProgressOverlay;
    private final android.view.View$OnLayoutChangeListener mLayoutListener;
    private final android.view.TextureView mPreviewView;
    private final android.view.GestureDetector$OnGestureListener mPreviewGestureListener;
    private final com.android.camera.FocusOverlayManager$FocusUI mFocusUI;
    private final com.android.camera.ui.CountDownView mCountdownView;
    private int mPreviewAreaWidth;
    private int mPreviewAreaHeight;
    private float mMaxZoom;
    private final com.android.camera.ui.PreviewOverlay$OnZoomChangedListener mZoomChancedListener;

    public void onPreviewAreaChanged(android.graphics.RectF)
    {
        com.android.camera.CaptureModuleUI r0;
        android.graphics.RectF r1;
        com.android.camera.ui.CountDownView $r2;

        r0 := @this: com.android.camera.CaptureModuleUI;

        r1 := @parameter0: android.graphics.RectF;

        $r2 = r0.<com.android.camera.CaptureModuleUI: com.android.camera.ui.CountDownView mCountdownView>;

        virtualinvoke $r2.<com.android.camera.ui.CountDownView: void onPreviewAreaChanged(android.graphics.RectF)>(r1);

        return;
    }

    public void onPreviewLayoutChanged(android.view.View, int, int, int, int, int, int, int, int)
    {
        com.android.camera.CaptureModuleUI r0;
        android.view.View r1;
        int i0, i1, i2, i3, i4, i5, i6, i7;
        android.view.View$OnLayoutChangeListener $r2, $r3;

        r0 := @this: com.android.camera.CaptureModuleUI;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        i5 := @parameter6: int;

        i6 := @parameter7: int;

        i7 := @parameter8: int;

        $r2 = r0.<com.android.camera.CaptureModuleUI: android.view.View$OnLayoutChangeListener mLayoutListener>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.camera.CaptureModuleUI: android.view.View$OnLayoutChangeListener mLayoutListener>;

        interfaceinvoke $r3.<android.view.View$OnLayoutChangeListener: void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int)>(r1, i0, i1, i2, i3, i4, i5, i6, i7);

     label1:
        return;
    }

    public boolean shouldAutoAdjustTransformMatrixOnLayout()
    {
        com.android.camera.CaptureModuleUI r0;

        r0 := @this: com.android.camera.CaptureModuleUI;

        return 0;
    }

    public boolean shouldAutoAdjustBottomBar()
    {
        com.android.camera.CaptureModuleUI r0;

        r0 := @this: com.android.camera.CaptureModuleUI;

        return 1;
    }

    public void onPreviewFlipped()
    {
        com.android.camera.CaptureModuleUI r0;

        r0 := @this: com.android.camera.CaptureModuleUI;

        return;
    }

    public android.view.GestureDetector$OnGestureListener getGestureListener()
    {
        com.android.camera.CaptureModuleUI r0;
        android.view.GestureDetector$OnGestureListener $r1;

        r0 := @this: com.android.camera.CaptureModuleUI;

        $r1 = r0.<com.android.camera.CaptureModuleUI: android.view.GestureDetector$OnGestureListener mPreviewGestureListener>;

        return $r1;
    }

    public android.view.View$OnTouchListener getTouchListener()
    {
        com.android.camera.CaptureModuleUI r0;

        r0 := @this: com.android.camera.CaptureModuleUI;

        return null;
    }

    public void <init>(com.android.camera.CameraActivity, com.android.camera.CaptureModule, android.view.View, android.view.View$OnLayoutChangeListener)
    {
        com.android.camera.CaptureModuleUI r0;
        com.android.camera.CameraActivity r1, $r10;
        com.android.camera.CaptureModule r2;
        android.view.View r3, $r8, $r9, $r13, $r14, $r16, $r17, $r18, $r21, $r22, $r23, $r24, $r27;
        android.view.View$OnLayoutChangeListener r4;
        android.view.ViewGroup r5;
        com.android.camera.CaptureModuleUI$1 $r6;
        com.android.camera.CaptureModuleUI$2 $r7;
        android.view.LayoutInflater $r11;
        android.view.TextureView $r15;
        com.android.camera.ui.PreviewOverlay $r19;
        com.android.camera.ui.ProgressOverlay $r20;
        com.android.camera.FocusOverlayManager$FocusUI $r25;
        com.android.camera.ui.CountDownView $r26;

        r0 := @this: com.android.camera.CaptureModuleUI;

        r1 := @parameter0: com.android.camera.CameraActivity;

        r2 := @parameter1: com.android.camera.CaptureModule;

        r3 := @parameter2: android.view.View;

        r4 := @parameter3: android.view.View$OnLayoutChangeListener;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r6 = new com.android.camera.CaptureModuleUI$1;

        specialinvoke $r6.<com.android.camera.CaptureModuleUI$1: void <init>(com.android.camera.CaptureModuleUI)>(r0);

        r0.<com.android.camera.CaptureModuleUI: android.view.GestureDetector$OnGestureListener mPreviewGestureListener> = $r6;

        r0.<com.android.camera.CaptureModuleUI: float mMaxZoom> = 1.0F;

        $r7 = new com.android.camera.CaptureModuleUI$2;

        specialinvoke $r7.<com.android.camera.CaptureModuleUI$2: void <init>(com.android.camera.CaptureModuleUI)>(r0);

        r0.<com.android.camera.CaptureModuleUI: com.android.camera.ui.PreviewOverlay$OnZoomChangedListener mZoomChancedListener> = $r7;

        r0.<com.android.camera.CaptureModuleUI: com.android.camera.CameraActivity mActivity> = r1;

        r0.<com.android.camera.CaptureModuleUI: com.android.camera.CaptureModule mModule> = r2;

        r0.<com.android.camera.CaptureModuleUI: android.view.View mRootView> = r3;

        r0.<com.android.camera.CaptureModuleUI: android.view.View$OnLayoutChangeListener mLayoutListener> = r4;

        $r8 = r0.<com.android.camera.CaptureModuleUI: android.view.View mRootView>;

        $r9 = virtualinvoke $r8.<android.view.View: android.view.View findViewById(int)>(2131623962);

        r5 = (android.view.ViewGroup) $r9;

        $r10 = r0.<com.android.camera.CaptureModuleUI: com.android.camera.CameraActivity mActivity>;

        $r11 = virtualinvoke $r10.<com.android.camera.CameraActivity: android.view.LayoutInflater getLayoutInflater()>();

        virtualinvoke $r11.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>(2130968584, r5, 1);

        $r13 = r0.<com.android.camera.CaptureModuleUI: android.view.View mRootView>;

        $r14 = virtualinvoke $r13.<android.view.View: android.view.View findViewById(int)>(2131623955);

        $r15 = (android.view.TextureView) $r14;

        r0.<com.android.camera.CaptureModuleUI: android.view.TextureView mPreviewView> = $r15;

        $r17 = r0.<com.android.camera.CaptureModuleUI: android.view.View mRootView>;

        $r16 = virtualinvoke $r17.<android.view.View: android.view.View findViewById(int)>(2131623958);

        $r19 = (com.android.camera.ui.PreviewOverlay) $r16;

        r0.<com.android.camera.CaptureModuleUI: com.android.camera.ui.PreviewOverlay mPreviewOverlay> = $r19;

        $r18 = r0.<com.android.camera.CaptureModuleUI: android.view.View mRootView>;

        $r21 = virtualinvoke $r18.<android.view.View: android.view.View findViewById(int)>(2131623973);

        $r20 = (com.android.camera.ui.ProgressOverlay) $r21;

        r0.<com.android.camera.CaptureModuleUI: com.android.camera.ui.ProgressOverlay mProgressOverlay> = $r20;

        $r23 = r0.<com.android.camera.CaptureModuleUI: android.view.View mRootView>;

        $r22 = virtualinvoke $r23.<android.view.View: android.view.View findViewById(int)>(2131623956);

        $r25 = (com.android.camera.FocusOverlayManager$FocusUI) $r22;

        r0.<com.android.camera.CaptureModuleUI: com.android.camera.FocusOverlayManager$FocusUI mFocusUI> = $r25;

        $r24 = r0.<com.android.camera.CaptureModuleUI: android.view.View mRootView>;

        $r27 = virtualinvoke $r24.<android.view.View: android.view.View findViewById(int)>(2131623975);

        $r26 = (com.android.camera.ui.CountDownView) $r27;

        r0.<com.android.camera.CaptureModuleUI: com.android.camera.ui.CountDownView mCountdownView> = $r26;

        return;
    }

    public void onSurfaceTextureAvailable(android.graphics.SurfaceTexture, int, int)
    {
        com.android.camera.CaptureModuleUI r0;
        android.graphics.SurfaceTexture r1;
        int i0, i1;
        com.android.camera.CaptureModule $r2;

        r0 := @this: com.android.camera.CaptureModuleUI;

        r1 := @parameter0: android.graphics.SurfaceTexture;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.camera.CaptureModuleUI: com.android.camera.CaptureModule mModule>;

        virtualinvoke $r2.<com.android.camera.CaptureModule: void onSurfaceTextureAvailable(android.graphics.SurfaceTexture,int,int)>(r1, i0, i1);

        return;
    }

    public boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture)
    {
        com.android.camera.CaptureModuleUI r0;
        android.graphics.SurfaceTexture r1;
        com.android.camera.CaptureModule $r2;
        boolean $z0;

        r0 := @this: com.android.camera.CaptureModuleUI;

        r1 := @parameter0: android.graphics.SurfaceTexture;

        $r2 = r0.<com.android.camera.CaptureModuleUI: com.android.camera.CaptureModule mModule>;

        $z0 = virtualinvoke $r2.<com.android.camera.CaptureModule: boolean onSurfaceTextureDestroyed(android.graphics.SurfaceTexture)>(r1);

        return $z0;
    }

    public void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture, int, int)
    {
        com.android.camera.CaptureModuleUI r0;
        android.graphics.SurfaceTexture r1;
        int i0, i1;
        com.android.camera.CaptureModule $r2;

        r0 := @this: com.android.camera.CaptureModuleUI;

        r1 := @parameter0: android.graphics.SurfaceTexture;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.camera.CaptureModuleUI: com.android.camera.CaptureModule mModule>;

        virtualinvoke $r2.<com.android.camera.CaptureModule: void onSurfaceTextureSizeChanged(android.graphics.SurfaceTexture,int,int)>(r1, i0, i1);

        return;
    }

    public void onSurfaceTextureUpdated(android.graphics.SurfaceTexture)
    {
        com.android.camera.CaptureModuleUI r0;
        android.graphics.SurfaceTexture r1;
        com.android.camera.CaptureModule $r2;

        r0 := @this: com.android.camera.CaptureModuleUI;

        r1 := @parameter0: android.graphics.SurfaceTexture;

        $r2 = r0.<com.android.camera.CaptureModuleUI: com.android.camera.CaptureModule mModule>;

        virtualinvoke $r2.<com.android.camera.CaptureModule: void onSurfaceTextureUpdated(android.graphics.SurfaceTexture)>(r1);

        return;
    }

    public void positionProgressOverlay(android.graphics.RectF)
    {
        com.android.camera.CaptureModuleUI r0;
        android.graphics.RectF r1;
        com.android.camera.ui.ProgressOverlay $r2;

        r0 := @this: com.android.camera.CaptureModuleUI;

        r1 := @parameter0: android.graphics.RectF;

        $r2 = r0.<com.android.camera.CaptureModuleUI: com.android.camera.ui.ProgressOverlay mProgressOverlay>;

        virtualinvoke $r2.<com.android.camera.ui.ProgressOverlay: void setBounds(android.graphics.RectF)>(r1);

        return;
    }

    public int getPreviewAreaWidth()
    {
        com.android.camera.CaptureModuleUI r0;
        int $i0;

        r0 := @this: com.android.camera.CaptureModuleUI;

        $i0 = r0.<com.android.camera.CaptureModuleUI: int mPreviewAreaWidth>;

        return $i0;
    }

    public int getPreviewAreaHeight()
    {
        com.android.camera.CaptureModuleUI r0;
        int $i0;

        r0 := @this: com.android.camera.CaptureModuleUI;

        $i0 = r0.<com.android.camera.CaptureModuleUI: int mPreviewAreaHeight>;

        return $i0;
    }

    public android.graphics.Matrix getPreviewTransform(android.graphics.Matrix)
    {
        com.android.camera.CaptureModuleUI r0;
        android.graphics.Matrix r1, $r3;
        android.view.TextureView $r2;

        r0 := @this: com.android.camera.CaptureModuleUI;

        r1 := @parameter0: android.graphics.Matrix;

        $r2 = r0.<com.android.camera.CaptureModuleUI: android.view.TextureView mPreviewView>;

        $r3 = virtualinvoke $r2.<android.view.TextureView: android.graphics.Matrix getTransform(android.graphics.Matrix)>(r1);

        return $r3;
    }

    public void showAutoFocusInProgress()
    {
        com.android.camera.CaptureModuleUI r0;
        com.android.camera.FocusOverlayManager$FocusUI $r1;

        r0 := @this: com.android.camera.CaptureModuleUI;

        $r1 = r0.<com.android.camera.CaptureModuleUI: com.android.camera.FocusOverlayManager$FocusUI mFocusUI>;

        interfaceinvoke $r1.<com.android.camera.FocusOverlayManager$FocusUI: void onFocusStarted()>();

        return;
    }

    public void showAutoFocusSuccess()
    {
        com.android.camera.CaptureModuleUI r0;
        com.android.camera.FocusOverlayManager$FocusUI $r1;

        r0 := @this: com.android.camera.CaptureModuleUI;

        $r1 = r0.<com.android.camera.CaptureModuleUI: com.android.camera.FocusOverlayManager$FocusUI mFocusUI>;

        interfaceinvoke $r1.<com.android.camera.FocusOverlayManager$FocusUI: void onFocusSucceeded()>();

        return;
    }

    public void showAutoFocusFailure()
    {
        com.android.camera.CaptureModuleUI r0;
        com.android.camera.FocusOverlayManager$FocusUI $r1;

        r0 := @this: com.android.camera.CaptureModuleUI;

        $r1 = r0.<com.android.camera.CaptureModuleUI: com.android.camera.FocusOverlayManager$FocusUI mFocusUI>;

        interfaceinvoke $r1.<com.android.camera.FocusOverlayManager$FocusUI: void onFocusFailed()>();

        return;
    }

    public void setPassiveFocusSuccess(boolean)
    {
        com.android.camera.CaptureModuleUI r0;
        boolean z0;
        com.android.camera.FocusOverlayManager$FocusUI $r1;

        r0 := @this: com.android.camera.CaptureModuleUI;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.camera.CaptureModuleUI: com.android.camera.FocusOverlayManager$FocusUI mFocusUI>;

        interfaceinvoke $r1.<com.android.camera.FocusOverlayManager$FocusUI: void setPassiveFocusSuccess(boolean)>(z0);

        return;
    }

    public void showDebugMessage(java.lang.String)
    {
        com.android.camera.CaptureModuleUI r0;
        java.lang.String r1;
        com.android.camera.FocusOverlayManager$FocusUI $r2;

        r0 := @this: com.android.camera.CaptureModuleUI;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.camera.CaptureModuleUI: com.android.camera.FocusOverlayManager$FocusUI mFocusUI>;

        interfaceinvoke $r2.<com.android.camera.FocusOverlayManager$FocusUI: void showDebugMessage(java.lang.String)>(r1);

        return;
    }

    public void setAutoFocusTarget(int, int, boolean, int, int)
    {
        com.android.camera.CaptureModuleUI r0;
        int i0, i1, i2, i3;
        boolean z0;
        com.android.camera.FocusOverlayManager$FocusUI $r1;

        r0 := @this: com.android.camera.CaptureModuleUI;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $r1 = r0.<com.android.camera.CaptureModuleUI: com.android.camera.FocusOverlayManager$FocusUI mFocusUI>;

        interfaceinvoke $r1.<com.android.camera.FocusOverlayManager$FocusUI: void setFocusPosition(int,int,boolean,int,int)>(i0, i1, z0, i2, i3);

        return;
    }

    public void clearAutoFocusIndicator()
    {
        com.android.camera.CaptureModuleUI r0;
        com.android.camera.FocusOverlayManager$FocusUI $r1;

        r0 := @this: com.android.camera.CaptureModuleUI;

        $r1 = r0.<com.android.camera.CaptureModuleUI: com.android.camera.FocusOverlayManager$FocusUI mFocusUI>;

        interfaceinvoke $r1.<com.android.camera.FocusOverlayManager$FocusUI: void clearFocus()>();

        return;
    }

    public void clearAutoFocusIndicator(boolean)
    {
        com.android.camera.CaptureModuleUI r0;
        boolean z0;

        r0 := @this: com.android.camera.CaptureModuleUI;

        z0 := @parameter0: boolean;

        return;
    }

    public void startCountdown(int)
    {
        com.android.camera.CaptureModuleUI r0;
        int i0;
        com.android.camera.ui.CountDownView $r1;

        r0 := @this: com.android.camera.CaptureModuleUI;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.camera.CaptureModuleUI: com.android.camera.ui.CountDownView mCountdownView>;

        virtualinvoke $r1.<com.android.camera.ui.CountDownView: void startCountDown(int)>(i0);

        return;
    }

    public void setCountdownFinishedListener(com.android.camera.ui.CountDownView$OnCountDownStatusListener)
    {
        com.android.camera.CaptureModuleUI r0;
        com.android.camera.ui.CountDownView$OnCountDownStatusListener r1;
        com.android.camera.ui.CountDownView $r2;

        r0 := @this: com.android.camera.CaptureModuleUI;

        r1 := @parameter0: com.android.camera.ui.CountDownView$OnCountDownStatusListener;

        $r2 = r0.<com.android.camera.CaptureModuleUI: com.android.camera.ui.CountDownView mCountdownView>;

        virtualinvoke $r2.<com.android.camera.ui.CountDownView: void setCountDownStatusListener(com.android.camera.ui.CountDownView$OnCountDownStatusListener)>(r1);

        return;
    }

    public boolean isCountingDown()
    {
        com.android.camera.CaptureModuleUI r0;
        com.android.camera.ui.CountDownView $r1;
        boolean $z0;

        r0 := @this: com.android.camera.CaptureModuleUI;

        $r1 = r0.<com.android.camera.CaptureModuleUI: com.android.camera.ui.CountDownView mCountdownView>;

        $z0 = virtualinvoke $r1.<com.android.camera.ui.CountDownView: boolean isCountingDown()>();

        return $z0;
    }

    public void cancelCountDown()
    {
        com.android.camera.CaptureModuleUI r0;
        com.android.camera.ui.CountDownView $r1;

        r0 := @this: com.android.camera.CaptureModuleUI;

        $r1 = r0.<com.android.camera.CaptureModuleUI: com.android.camera.ui.CountDownView mCountdownView>;

        virtualinvoke $r1.<com.android.camera.ui.CountDownView: void cancelCountDown()>();

        return;
    }

    public void setPictureTakingProgress(int)
    {
        com.android.camera.CaptureModuleUI r0;
        int i0;
        com.android.camera.ui.ProgressOverlay $r1;

        r0 := @this: com.android.camera.CaptureModuleUI;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.camera.CaptureModuleUI: com.android.camera.ui.ProgressOverlay mProgressOverlay>;

        virtualinvoke $r1.<com.android.camera.ui.ProgressOverlay: void setProgress(int)>(i0);

        return;
    }

    public android.graphics.Bitmap getBitMapFromPreview()
    {
        com.android.camera.CaptureModuleUI r0;
        android.graphics.Matrix r1, $r3, r6;
        android.graphics.Bitmap r2, $r5;
        android.view.TextureView $r4;
        int $i0, $i1;

        r0 := @this: com.android.camera.CaptureModuleUI;

        $r3 = new android.graphics.Matrix;

        specialinvoke $r3.<android.graphics.Matrix: void <init>()>();

        r1 = $r3;

        r6 = virtualinvoke r0.<com.android.camera.CaptureModuleUI: android.graphics.Matrix getPreviewTransform(android.graphics.Matrix)>(r1);

        $r4 = r0.<com.android.camera.CaptureModuleUI: android.view.TextureView mPreviewView>;

        r2 = virtualinvoke $r4.<android.view.TextureView: android.graphics.Bitmap getBitmap()>();

        $i0 = virtualinvoke r2.<android.graphics.Bitmap: int getWidth()>();

        $i1 = virtualinvoke r2.<android.graphics.Bitmap: int getHeight()>();

        $r5 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(android.graphics.Bitmap,int,int,int,int,android.graphics.Matrix,boolean)>(r2, 0, 0, $i0, $i1, r6, 1);

        return $r5;
    }

    public void initializeZoom(float)
    {
        com.android.camera.CaptureModuleUI r0;
        float f0, $f1;
        com.android.camera.ui.PreviewOverlay$OnZoomChangedListener $r1;
        com.android.camera.ui.PreviewOverlay $r2;

        r0 := @this: com.android.camera.CaptureModuleUI;

        f0 := @parameter0: float;

        r0.<com.android.camera.CaptureModuleUI: float mMaxZoom> = f0;

        $r2 = r0.<com.android.camera.CaptureModuleUI: com.android.camera.ui.PreviewOverlay mPreviewOverlay>;

        $f1 = r0.<com.android.camera.CaptureModuleUI: float mMaxZoom>;

        $r1 = r0.<com.android.camera.CaptureModuleUI: com.android.camera.ui.PreviewOverlay$OnZoomChangedListener mZoomChancedListener>;

        virtualinvoke $r2.<com.android.camera.ui.PreviewOverlay: void setupZoom(float,float,com.android.camera.ui.PreviewOverlay$OnZoomChangedListener)>($f1, 0.0F, $r1);

        return;
    }

    static com.android.camera.CaptureModule access$000(com.android.camera.CaptureModuleUI)
    {
        com.android.camera.CaptureModuleUI r0;
        com.android.camera.CaptureModule $r1;

        r0 := @parameter0: com.android.camera.CaptureModuleUI;

        $r1 = r0.<com.android.camera.CaptureModuleUI: com.android.camera.CaptureModule mModule>;

        return $r1;
    }

    static void <clinit>()
    {
        com.android.camera.debug.Log$Tag $r0;

        $r0 = new com.android.camera.debug.Log$Tag;

        specialinvoke $r0.<com.android.camera.debug.Log$Tag: void <init>(java.lang.String)>("CaptureModuleUI");

        <com.android.camera.CaptureModuleUI: com.android.camera.debug.Log$Tag TAG> = $r0;

        return;
    }
}
