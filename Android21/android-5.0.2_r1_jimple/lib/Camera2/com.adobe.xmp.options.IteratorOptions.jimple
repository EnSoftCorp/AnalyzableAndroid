public final class com.adobe.xmp.options.IteratorOptions extends com.adobe.xmp.options.Options
{
    public static final int JUST_CHILDREN;
    public static final int JUST_LEAFNODES;
    public static final int JUST_LEAFNAME;
    public static final int INCLUDE_ALIASES;
    public static final int OMIT_QUALIFIERS;

    public void <init>()
    {
        com.adobe.xmp.options.IteratorOptions r0;

        r0 := @this: com.adobe.xmp.options.IteratorOptions;

        specialinvoke r0.<com.adobe.xmp.options.Options: void <init>()>();

        return;
    }

    public boolean isJustChildren()
    {
        com.adobe.xmp.options.IteratorOptions r0;
        boolean $z0;

        r0 := @this: com.adobe.xmp.options.IteratorOptions;

        $z0 = virtualinvoke r0.<com.adobe.xmp.options.IteratorOptions: boolean getOption(int)>(256);

        return $z0;
    }

    public boolean isJustLeafname()
    {
        com.adobe.xmp.options.IteratorOptions r0;
        boolean $z0;

        r0 := @this: com.adobe.xmp.options.IteratorOptions;

        $z0 = virtualinvoke r0.<com.adobe.xmp.options.IteratorOptions: boolean getOption(int)>(1024);

        return $z0;
    }

    public boolean isJustLeafnodes()
    {
        com.adobe.xmp.options.IteratorOptions r0;
        boolean $z0;

        r0 := @this: com.adobe.xmp.options.IteratorOptions;

        $z0 = virtualinvoke r0.<com.adobe.xmp.options.IteratorOptions: boolean getOption(int)>(512);

        return $z0;
    }

    public boolean isOmitQualifiers()
    {
        com.adobe.xmp.options.IteratorOptions r0;
        boolean $z0;

        r0 := @this: com.adobe.xmp.options.IteratorOptions;

        $z0 = virtualinvoke r0.<com.adobe.xmp.options.IteratorOptions: boolean getOption(int)>(4096);

        return $z0;
    }

    public com.adobe.xmp.options.IteratorOptions setJustChildren(boolean)
    {
        com.adobe.xmp.options.IteratorOptions r0;
        boolean z0;

        r0 := @this: com.adobe.xmp.options.IteratorOptions;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.adobe.xmp.options.IteratorOptions: void setOption(int,boolean)>(256, z0);

        return r0;
    }

    public com.adobe.xmp.options.IteratorOptions setJustLeafname(boolean)
    {
        com.adobe.xmp.options.IteratorOptions r0;
        boolean z0;

        r0 := @this: com.adobe.xmp.options.IteratorOptions;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.adobe.xmp.options.IteratorOptions: void setOption(int,boolean)>(1024, z0);

        return r0;
    }

    public com.adobe.xmp.options.IteratorOptions setJustLeafnodes(boolean)
    {
        com.adobe.xmp.options.IteratorOptions r0;
        boolean z0;

        r0 := @this: com.adobe.xmp.options.IteratorOptions;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.adobe.xmp.options.IteratorOptions: void setOption(int,boolean)>(512, z0);

        return r0;
    }

    public com.adobe.xmp.options.IteratorOptions setOmitQualifiers(boolean)
    {
        com.adobe.xmp.options.IteratorOptions r0;
        boolean z0;

        r0 := @this: com.adobe.xmp.options.IteratorOptions;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.adobe.xmp.options.IteratorOptions: void setOption(int,boolean)>(4096, z0);

        return r0;
    }

    protected java.lang.String defineOptionName(int)
    {
        com.adobe.xmp.options.IteratorOptions r0;
        int i0;

        r0 := @this: com.adobe.xmp.options.IteratorOptions;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 256: goto label1;
            case 512: goto label2;
            case 1024: goto label3;
            case 4096: goto label4;
            default: goto label5;
        };

     label1:
        return "JUST_CHILDREN";

     label2:
        return "JUST_LEAFNODES";

     label3:
        return "JUST_LEAFNAME";

     label4:
        return "OMIT_QUALIFIERS";

     label5:
        return null;
    }

    protected int getValidOptions()
    {
        com.adobe.xmp.options.IteratorOptions r0;

        r0 := @this: com.adobe.xmp.options.IteratorOptions;

        return 5888;
    }

    public static void <clinit>()
    {
        <com.adobe.xmp.options.IteratorOptions: int OMIT_QUALIFIERS> = 4096;

        <com.adobe.xmp.options.IteratorOptions: int INCLUDE_ALIASES> = 2048;

        <com.adobe.xmp.options.IteratorOptions: int JUST_LEAFNAME> = 1024;

        <com.adobe.xmp.options.IteratorOptions: int JUST_LEAFNODES> = 512;

        <com.adobe.xmp.options.IteratorOptions: int JUST_CHILDREN> = 256;

        return;
    }
}
