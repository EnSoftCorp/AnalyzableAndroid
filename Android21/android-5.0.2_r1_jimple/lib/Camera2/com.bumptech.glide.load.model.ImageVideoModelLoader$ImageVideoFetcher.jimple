public class com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher extends java.lang.Object implements com.bumptech.glide.load.data.DataFetcher
{
    private final com.bumptech.glide.load.data.DataFetcher streamFetcher;
    private final com.bumptech.glide.load.data.DataFetcher fileDescriptorFetcher;

    public void <init>(com.bumptech.glide.load.data.DataFetcher, com.bumptech.glide.load.data.DataFetcher)
    {
        com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher r0;
        com.bumptech.glide.load.data.DataFetcher r1, r2;

        r0 := @this: com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher;

        r1 := @parameter0: com.bumptech.glide.load.data.DataFetcher;

        r2 := @parameter1: com.bumptech.glide.load.data.DataFetcher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher: com.bumptech.glide.load.data.DataFetcher streamFetcher> = r1;

        r0.<com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher: com.bumptech.glide.load.data.DataFetcher fileDescriptorFetcher> = r2;

        return;
    }

    public com.bumptech.glide.load.model.ImageVideoWrapper loadData(com.bumptech.glide.Priority) throws java.lang.Exception
    {
        com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher r0;
        com.bumptech.glide.Priority r1;
        java.io.InputStream r2;
        java.lang.Exception r3, r4, $r12, $r13;
        com.bumptech.glide.load.data.DataFetcher $r5, $r6, $r8, $r10, $r14;
        com.bumptech.glide.load.model.ImageVideoWrapper $r7;
        java.lang.Object $r9, $r11;
        boolean $z0, $z1;
        android.os.ParcelFileDescriptor r15;

        r0 := @this: com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher;

        r1 := @parameter0: com.bumptech.glide.Priority;

        r2 = null;

        $r5 = r0.<com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher: com.bumptech.glide.load.data.DataFetcher streamFetcher>;

        if $r5 == null goto label05;

     label01:
        $r10 = r0.<com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher: com.bumptech.glide.load.data.DataFetcher streamFetcher>;

        $r11 = interfaceinvoke $r10.<com.bumptech.glide.load.data.DataFetcher: java.lang.Object loadData(com.bumptech.glide.Priority)>(r1);

        r2 = (java.io.InputStream) $r11;

     label02:
        goto label05;

     label03:
        $r13 := @caughtexception;

        r3 = $r13;

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("IVML", 2);

        if $z1 == 0 goto label04;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>("IVML", "Exception fetching input stream, trying ParcelFileDescriptor", r3);

     label04:
        $r14 = r0.<com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher: com.bumptech.glide.load.data.DataFetcher fileDescriptorFetcher>;

        if $r14 != null goto label05;

        throw r3;

     label05:
        r15 = null;

        $r6 = r0.<com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher: com.bumptech.glide.load.data.DataFetcher fileDescriptorFetcher>;

        if $r6 == null goto label10;

     label06:
        $r8 = r0.<com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher: com.bumptech.glide.load.data.DataFetcher fileDescriptorFetcher>;

        $r9 = interfaceinvoke $r8.<com.bumptech.glide.load.data.DataFetcher: java.lang.Object loadData(com.bumptech.glide.Priority)>(r1);

        r15 = (android.os.ParcelFileDescriptor) $r9;

     label07:
        goto label10;

     label08:
        $r12 := @caughtexception;

        r4 = $r12;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("IVML", 2);

        if $z0 == 0 goto label09;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>("IVML", "Exception fetching ParcelFileDescriptor", r4);

     label09:
        if r2 != null goto label10;

        throw r4;

     label10:
        $r7 = new com.bumptech.glide.load.model.ImageVideoWrapper;

        specialinvoke $r7.<com.bumptech.glide.load.model.ImageVideoWrapper: void <init>(java.io.InputStream,android.os.ParcelFileDescriptor)>(r2, r15);

        return $r7;

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.lang.Exception from label06 to label07 with label08;
    }

    public void cleanup()
    {
        com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher r0;
        com.bumptech.glide.load.data.DataFetcher $r1, $r2, $r3, $r4;

        r0 := @this: com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher;

        $r1 = r0.<com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher: com.bumptech.glide.load.data.DataFetcher streamFetcher>;

        if $r1 == null goto label1;

        $r4 = r0.<com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher: com.bumptech.glide.load.data.DataFetcher streamFetcher>;

        interfaceinvoke $r4.<com.bumptech.glide.load.data.DataFetcher: void cleanup()>();

     label1:
        $r2 = r0.<com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher: com.bumptech.glide.load.data.DataFetcher fileDescriptorFetcher>;

        if $r2 == null goto label2;

        $r3 = r0.<com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher: com.bumptech.glide.load.data.DataFetcher fileDescriptorFetcher>;

        interfaceinvoke $r3.<com.bumptech.glide.load.data.DataFetcher: void cleanup()>();

     label2:
        return;
    }

    public java.lang.String getId()
    {
        com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher r0;
        com.bumptech.glide.load.data.DataFetcher $r1, $r2, $r4;
        java.lang.String $r3, $r5;

        r0 := @this: com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher;

        $r1 = r0.<com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher: com.bumptech.glide.load.data.DataFetcher streamFetcher>;

        if $r1 == null goto label1;

        $r4 = r0.<com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher: com.bumptech.glide.load.data.DataFetcher streamFetcher>;

        $r5 = interfaceinvoke $r4.<com.bumptech.glide.load.data.DataFetcher: java.lang.String getId()>();

        return $r5;

     label1:
        $r2 = r0.<com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher: com.bumptech.glide.load.data.DataFetcher fileDescriptorFetcher>;

        $r3 = interfaceinvoke $r2.<com.bumptech.glide.load.data.DataFetcher: java.lang.String getId()>();

        return $r3;
    }

    public void cancel()
    {
        com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher r0;
        com.bumptech.glide.load.data.DataFetcher $r1, $r2, $r3, $r4;

        r0 := @this: com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher;

        $r1 = r0.<com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher: com.bumptech.glide.load.data.DataFetcher streamFetcher>;

        if $r1 == null goto label1;

        $r4 = r0.<com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher: com.bumptech.glide.load.data.DataFetcher streamFetcher>;

        interfaceinvoke $r4.<com.bumptech.glide.load.data.DataFetcher: void cancel()>();

     label1:
        $r2 = r0.<com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher: com.bumptech.glide.load.data.DataFetcher fileDescriptorFetcher>;

        if $r2 == null goto label2;

        $r3 = r0.<com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher: com.bumptech.glide.load.data.DataFetcher fileDescriptorFetcher>;

        interfaceinvoke $r3.<com.bumptech.glide.load.data.DataFetcher: void cancel()>();

     label2:
        return;
    }

    public volatile java.lang.Object loadData(com.bumptech.glide.Priority) throws java.lang.Exception
    {
        com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher r0;
        com.bumptech.glide.Priority r1;
        com.bumptech.glide.load.model.ImageVideoWrapper $r2;

        r0 := @this: com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher;

        r1 := @parameter0: com.bumptech.glide.Priority;

        $r2 = virtualinvoke r0.<com.bumptech.glide.load.model.ImageVideoModelLoader$ImageVideoFetcher: com.bumptech.glide.load.model.ImageVideoWrapper loadData(com.bumptech.glide.Priority)>(r1);

        return $r2;
    }
}
