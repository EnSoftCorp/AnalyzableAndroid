public class com.bumptech.glide.GlideBuilder extends java.lang.Object
{
    private com.android.volley.RequestQueue requestQueue;
    private android.content.Context context;
    private com.bumptech.glide.load.engine.Engine engine;
    private com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool;
    private com.bumptech.glide.load.engine.cache.MemoryCache memoryCache;
    private com.bumptech.glide.load.engine.cache.DiskCache diskCache;
    private java.util.concurrent.ExecutorService resizeService;
    private java.util.concurrent.ExecutorService diskCacheService;

    public void <init>(android.content.Context)
    {
        com.bumptech.glide.GlideBuilder r0;
        android.content.Context r1, $r2;

        r0 := @this: com.bumptech.glide.GlideBuilder;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<android.content.Context: android.content.Context getApplicationContext()>();

        r0.<com.bumptech.glide.GlideBuilder: android.content.Context context> = $r2;

        return;
    }

    public com.bumptech.glide.GlideBuilder setRequestQueue(com.android.volley.RequestQueue)
    {
        com.bumptech.glide.GlideBuilder r0;
        com.android.volley.RequestQueue r1;

        r0 := @this: com.bumptech.glide.GlideBuilder;

        r1 := @parameter0: com.android.volley.RequestQueue;

        r0.<com.bumptech.glide.GlideBuilder: com.android.volley.RequestQueue requestQueue> = r1;

        return r0;
    }

    public com.bumptech.glide.GlideBuilder setBitmapPool(com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool)
    {
        com.bumptech.glide.GlideBuilder r0;
        com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool r1;

        r0 := @this: com.bumptech.glide.GlideBuilder;

        r1 := @parameter0: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool;

        r0.<com.bumptech.glide.GlideBuilder: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool> = r1;

        return r0;
    }

    public com.bumptech.glide.GlideBuilder setMemoryCache(com.bumptech.glide.load.engine.cache.MemoryCache)
    {
        com.bumptech.glide.GlideBuilder r0;
        com.bumptech.glide.load.engine.cache.MemoryCache r1;

        r0 := @this: com.bumptech.glide.GlideBuilder;

        r1 := @parameter0: com.bumptech.glide.load.engine.cache.MemoryCache;

        r0.<com.bumptech.glide.GlideBuilder: com.bumptech.glide.load.engine.cache.MemoryCache memoryCache> = r1;

        return r0;
    }

    public com.bumptech.glide.GlideBuilder setDiskCache(com.bumptech.glide.load.engine.cache.DiskCache)
    {
        com.bumptech.glide.GlideBuilder r0;
        com.bumptech.glide.load.engine.cache.DiskCache r1;

        r0 := @this: com.bumptech.glide.GlideBuilder;

        r1 := @parameter0: com.bumptech.glide.load.engine.cache.DiskCache;

        r0.<com.bumptech.glide.GlideBuilder: com.bumptech.glide.load.engine.cache.DiskCache diskCache> = r1;

        return r0;
    }

    public com.bumptech.glide.GlideBuilder setResizeService(java.util.concurrent.ExecutorService)
    {
        com.bumptech.glide.GlideBuilder r0;
        java.util.concurrent.ExecutorService r1;

        r0 := @this: com.bumptech.glide.GlideBuilder;

        r1 := @parameter0: java.util.concurrent.ExecutorService;

        r0.<com.bumptech.glide.GlideBuilder: java.util.concurrent.ExecutorService resizeService> = r1;

        return r0;
    }

    public com.bumptech.glide.GlideBuilder setDiskCacheService(java.util.concurrent.ExecutorService)
    {
        com.bumptech.glide.GlideBuilder r0;
        java.util.concurrent.ExecutorService r1;

        r0 := @this: com.bumptech.glide.GlideBuilder;

        r1 := @parameter0: java.util.concurrent.ExecutorService;

        r0.<com.bumptech.glide.GlideBuilder: java.util.concurrent.ExecutorService diskCacheService> = r1;

        return r0;
    }

    com.bumptech.glide.GlideBuilder setEngine(com.bumptech.glide.load.engine.Engine)
    {
        com.bumptech.glide.GlideBuilder r0;
        com.bumptech.glide.load.engine.Engine r1;

        r0 := @this: com.bumptech.glide.GlideBuilder;

        r1 := @parameter0: com.bumptech.glide.load.engine.Engine;

        r0.<com.bumptech.glide.GlideBuilder: com.bumptech.glide.load.engine.Engine engine> = r1;

        return r0;
    }

    com.bumptech.glide.Glide createGlide()
    {
        com.bumptech.glide.GlideBuilder r0;
        int i0, $i1, $i2, $i3, $i4;
        java.io.File r1;
        java.util.concurrent.ExecutorService $r2, $r3, $r17, $r20;
        com.android.volley.RequestQueue $r4, $r16, $r29;
        com.bumptech.glide.load.engine.cache.MemorySizeCalculator $r5, r34;
        android.content.Context $r6, $r12, $r21, $r28;
        com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool $r7, $r13;
        com.bumptech.glide.load.engine.cache.MemoryCache $r8, $r14, $r22;
        com.bumptech.glide.load.engine.cache.DiskCache $r9, $r19, $r23, $r24;
        com.bumptech.glide.load.engine.Engine $r10, $r15, $r18;
        com.bumptech.glide.Glide $r11;
        com.bumptech.glide.load.engine.cache.DiskCacheAdapter $r25;
        com.bumptech.glide.load.engine.cache.LruResourceCache $r26;
        com.bumptech.glide.load.engine.bitmap_recycle.BitmapPoolAdapter $r27;
        com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool $r30;
        java.lang.Runtime $r31;
        com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor $r32, $r33;

        r0 := @this: com.bumptech.glide.GlideBuilder;

        $r2 = r0.<com.bumptech.glide.GlideBuilder: java.util.concurrent.ExecutorService resizeService>;

        if $r2 != null goto label1;

        $r31 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $i4 = virtualinvoke $r31.<java.lang.Runtime: int availableProcessors()>();

        i0 = staticinvoke <java.lang.Math: int max(int,int)>(1, $i4);

        $r33 = new com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor;

        specialinvoke $r33.<com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor: void <init>(int)>(i0);

        r0.<com.bumptech.glide.GlideBuilder: java.util.concurrent.ExecutorService resizeService> = $r33;

     label1:
        $r3 = r0.<com.bumptech.glide.GlideBuilder: java.util.concurrent.ExecutorService diskCacheService>;

        if $r3 != null goto label2;

        $r32 = new com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor;

        specialinvoke $r32.<com.bumptech.glide.load.engine.executor.FifoPriorityThreadPoolExecutor: void <init>(int)>(1);

        r0.<com.bumptech.glide.GlideBuilder: java.util.concurrent.ExecutorService diskCacheService> = $r32;

     label2:
        $r4 = r0.<com.bumptech.glide.GlideBuilder: com.android.volley.RequestQueue requestQueue>;

        if $r4 != null goto label3;

        $r28 = r0.<com.bumptech.glide.GlideBuilder: android.content.Context context>;

        $r29 = staticinvoke <com.bumptech.glide.volley.RequestQueueWrapper: com.android.volley.RequestQueue getRequestQueue(android.content.Context)>($r28);

        r0.<com.bumptech.glide.GlideBuilder: com.android.volley.RequestQueue requestQueue> = $r29;

     label3:
        $r5 = new com.bumptech.glide.load.engine.cache.MemorySizeCalculator;

        $r6 = r0.<com.bumptech.glide.GlideBuilder: android.content.Context context>;

        specialinvoke $r5.<com.bumptech.glide.load.engine.cache.MemorySizeCalculator: void <init>(android.content.Context)>($r6);

        r34 = $r5;

        $r7 = r0.<com.bumptech.glide.GlideBuilder: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool>;

        if $r7 != null goto label5;

        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 11 goto label4;

        $r30 = new com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool;

        $i3 = virtualinvoke r34.<com.bumptech.glide.load.engine.cache.MemorySizeCalculator: int getBitmapPoolSize()>();

        specialinvoke $r30.<com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool: void <init>(int)>($i3);

        r0.<com.bumptech.glide.GlideBuilder: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool> = $r30;

        goto label5;

     label4:
        $r27 = new com.bumptech.glide.load.engine.bitmap_recycle.BitmapPoolAdapter;

        specialinvoke $r27.<com.bumptech.glide.load.engine.bitmap_recycle.BitmapPoolAdapter: void <init>()>();

        r0.<com.bumptech.glide.GlideBuilder: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool> = $r27;

     label5:
        $r8 = r0.<com.bumptech.glide.GlideBuilder: com.bumptech.glide.load.engine.cache.MemoryCache memoryCache>;

        if $r8 != null goto label6;

        $r26 = new com.bumptech.glide.load.engine.cache.LruResourceCache;

        $i1 = virtualinvoke r34.<com.bumptech.glide.load.engine.cache.MemorySizeCalculator: int getMemoryCacheSize()>();

        specialinvoke $r26.<com.bumptech.glide.load.engine.cache.LruResourceCache: void <init>(int)>($i1);

        r0.<com.bumptech.glide.GlideBuilder: com.bumptech.glide.load.engine.cache.MemoryCache memoryCache> = $r26;

     label6:
        $r9 = r0.<com.bumptech.glide.GlideBuilder: com.bumptech.glide.load.engine.cache.DiskCache diskCache>;

        if $r9 != null goto label8;

        $r21 = r0.<com.bumptech.glide.GlideBuilder: android.content.Context context>;

        r1 = staticinvoke <com.bumptech.glide.Glide: java.io.File getPhotoCacheDir(android.content.Context)>($r21);

        if r1 == null goto label7;

        $r24 = staticinvoke <com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper: com.bumptech.glide.load.engine.cache.DiskCache get(java.io.File,int)>(r1, 262144000);

        r0.<com.bumptech.glide.GlideBuilder: com.bumptech.glide.load.engine.cache.DiskCache diskCache> = $r24;

     label7:
        $r23 = r0.<com.bumptech.glide.GlideBuilder: com.bumptech.glide.load.engine.cache.DiskCache diskCache>;

        if $r23 != null goto label8;

        $r25 = new com.bumptech.glide.load.engine.cache.DiskCacheAdapter;

        specialinvoke $r25.<com.bumptech.glide.load.engine.cache.DiskCacheAdapter: void <init>()>();

        r0.<com.bumptech.glide.GlideBuilder: com.bumptech.glide.load.engine.cache.DiskCache diskCache> = $r25;

     label8:
        $r10 = r0.<com.bumptech.glide.GlideBuilder: com.bumptech.glide.load.engine.Engine engine>;

        if $r10 != null goto label9;

        $r18 = new com.bumptech.glide.load.engine.Engine;

        $r22 = r0.<com.bumptech.glide.GlideBuilder: com.bumptech.glide.load.engine.cache.MemoryCache memoryCache>;

        $r19 = r0.<com.bumptech.glide.GlideBuilder: com.bumptech.glide.load.engine.cache.DiskCache diskCache>;

        $r20 = r0.<com.bumptech.glide.GlideBuilder: java.util.concurrent.ExecutorService resizeService>;

        $r17 = r0.<com.bumptech.glide.GlideBuilder: java.util.concurrent.ExecutorService diskCacheService>;

        specialinvoke $r18.<com.bumptech.glide.load.engine.Engine: void <init>(com.bumptech.glide.load.engine.cache.MemoryCache,com.bumptech.glide.load.engine.cache.DiskCache,java.util.concurrent.ExecutorService,java.util.concurrent.ExecutorService)>($r22, $r19, $r20, $r17);

        r0.<com.bumptech.glide.GlideBuilder: com.bumptech.glide.load.engine.Engine engine> = $r18;

     label9:
        $r11 = new com.bumptech.glide.Glide;

        $r15 = r0.<com.bumptech.glide.GlideBuilder: com.bumptech.glide.load.engine.Engine engine>;

        $r16 = r0.<com.bumptech.glide.GlideBuilder: com.android.volley.RequestQueue requestQueue>;

        $r14 = r0.<com.bumptech.glide.GlideBuilder: com.bumptech.glide.load.engine.cache.MemoryCache memoryCache>;

        $r13 = r0.<com.bumptech.glide.GlideBuilder: com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool bitmapPool>;

        $r12 = r0.<com.bumptech.glide.GlideBuilder: android.content.Context context>;

        specialinvoke $r11.<com.bumptech.glide.Glide: void <init>(com.bumptech.glide.load.engine.Engine,com.android.volley.RequestQueue,com.bumptech.glide.load.engine.cache.MemoryCache,com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool,android.content.Context)>($r15, $r16, $r14, $r13, $r12);

        return $r11;
    }
}
