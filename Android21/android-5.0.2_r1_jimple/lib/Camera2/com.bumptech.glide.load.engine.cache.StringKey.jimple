public class com.bumptech.glide.load.engine.cache.StringKey extends java.lang.Object implements com.bumptech.glide.load.Key
{
    private java.lang.String key;

    public void <init>(java.lang.String)
    {
        com.bumptech.glide.load.engine.cache.StringKey r0;
        java.lang.String r1;

        r0 := @this: com.bumptech.glide.load.engine.cache.StringKey;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.bumptech.glide.load.engine.cache.StringKey: java.lang.String key> = r1;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        com.bumptech.glide.load.engine.cache.StringKey r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        java.lang.String $r5, $r6;
        boolean $z0;

        r0 := @this: com.bumptech.glide.load.engine.cache.StringKey;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 == null goto label2;

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == $r4 goto label3;

     label2:
        return 0;

     label3:
        r2 = (com.bumptech.glide.load.engine.cache.StringKey) r1;

        $r6 = r0.<com.bumptech.glide.load.engine.cache.StringKey: java.lang.String key>;

        $r5 = r2.<com.bumptech.glide.load.engine.cache.StringKey: java.lang.String key>;

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label4;

        return 0;

     label4:
        return 1;
    }

    public int hashCode()
    {
        com.bumptech.glide.load.engine.cache.StringKey r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: com.bumptech.glide.load.engine.cache.StringKey;

        $r1 = r0.<com.bumptech.glide.load.engine.cache.StringKey: java.lang.String key>;

        $i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        com.bumptech.glide.load.engine.cache.StringKey r0;
        java.lang.String $r1;

        r0 := @this: com.bumptech.glide.load.engine.cache.StringKey;

        $r1 = r0.<com.bumptech.glide.load.engine.cache.StringKey: java.lang.String key>;

        return $r1;
    }

    public void updateDiskCacheKey(java.security.MessageDigest) throws java.io.UnsupportedEncodingException
    {
        com.bumptech.glide.load.engine.cache.StringKey r0;
        java.security.MessageDigest r1;
        java.lang.String $r2;
        byte[] $r3;

        r0 := @this: com.bumptech.glide.load.engine.cache.StringKey;

        r1 := @parameter0: java.security.MessageDigest;

        $r2 = r0.<com.bumptech.glide.load.engine.cache.StringKey: java.lang.String key>;

        $r3 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke r1.<java.security.MessageDigest: void update(byte[])>($r3);

        return;
    }
}
