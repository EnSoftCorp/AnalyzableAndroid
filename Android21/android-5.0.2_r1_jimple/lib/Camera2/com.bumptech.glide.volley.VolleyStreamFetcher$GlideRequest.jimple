class com.bumptech.glide.volley.VolleyStreamFetcher$GlideRequest extends com.android.volley.Request
{
    private final com.bumptech.glide.volley.VolleyRequestFuture future;
    private com.android.volley.Request$Priority priority;

    public void <init>(java.lang.String, com.bumptech.glide.volley.VolleyRequestFuture, com.android.volley.Request$Priority)
    {
        com.bumptech.glide.volley.VolleyStreamFetcher$GlideRequest r0;
        java.lang.String r1;
        com.bumptech.glide.volley.VolleyRequestFuture r2;
        com.android.volley.Request$Priority r3;

        r0 := @this: com.bumptech.glide.volley.VolleyStreamFetcher$GlideRequest;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.bumptech.glide.volley.VolleyRequestFuture;

        r3 := @parameter2: com.android.volley.Request$Priority;

        specialinvoke r0.<com.android.volley.Request: void <init>(int,java.lang.String,com.android.volley.Response$ErrorListener)>(0, r1, r2);

        r0.<com.bumptech.glide.volley.VolleyStreamFetcher$GlideRequest: com.bumptech.glide.volley.VolleyRequestFuture future> = r2;

        r0.<com.bumptech.glide.volley.VolleyStreamFetcher$GlideRequest: com.android.volley.Request$Priority priority> = r3;

        return;
    }

    public com.android.volley.Request$Priority getPriority()
    {
        com.bumptech.glide.volley.VolleyStreamFetcher$GlideRequest r0;
        com.android.volley.Request$Priority $r1;

        r0 := @this: com.bumptech.glide.volley.VolleyStreamFetcher$GlideRequest;

        $r1 = r0.<com.bumptech.glide.volley.VolleyStreamFetcher$GlideRequest: com.android.volley.Request$Priority priority>;

        return $r1;
    }

    protected com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse)
    {
        com.bumptech.glide.volley.VolleyStreamFetcher$GlideRequest r0;
        com.android.volley.NetworkResponse r1;
        byte[] $r2;
        com.android.volley.Cache$Entry $r3;
        com.android.volley.Response $r4;

        r0 := @this: com.bumptech.glide.volley.VolleyStreamFetcher$GlideRequest;

        r1 := @parameter0: com.android.volley.NetworkResponse;

        $r2 = r1.<com.android.volley.NetworkResponse: byte[] data>;

        $r3 = staticinvoke <com.android.volley.toolbox.HttpHeaderParser: com.android.volley.Cache$Entry parseCacheHeaders(com.android.volley.NetworkResponse)>(r1);

        $r4 = staticinvoke <com.android.volley.Response: com.android.volley.Response success(java.lang.Object,com.android.volley.Cache$Entry)>($r2, $r3);

        return $r4;
    }

    protected void deliverResponse(byte[])
    {
        com.bumptech.glide.volley.VolleyStreamFetcher$GlideRequest r0;
        byte[] r1;
        java.io.ByteArrayInputStream $r2;
        com.bumptech.glide.volley.VolleyRequestFuture $r3;

        r0 := @this: com.bumptech.glide.volley.VolleyStreamFetcher$GlideRequest;

        r1 := @parameter0: byte[];

        $r3 = r0.<com.bumptech.glide.volley.VolleyStreamFetcher$GlideRequest: com.bumptech.glide.volley.VolleyRequestFuture future>;

        $r2 = new java.io.ByteArrayInputStream;

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>(r1);

        virtualinvoke $r3.<com.bumptech.glide.volley.VolleyRequestFuture: void onResponse(java.lang.Object)>($r2);

        return;
    }

    protected volatile void deliverResponse(java.lang.Object)
    {
        com.bumptech.glide.volley.VolleyStreamFetcher$GlideRequest r0;
        java.lang.Object r1;
        byte[] $r2;

        r0 := @this: com.bumptech.glide.volley.VolleyStreamFetcher$GlideRequest;

        r1 := @parameter0: java.lang.Object;

        $r2 = (byte[]) r1;

        virtualinvoke r0.<com.bumptech.glide.volley.VolleyStreamFetcher$GlideRequest: void deliverResponse(byte[])>($r2);

        return;
    }
}
