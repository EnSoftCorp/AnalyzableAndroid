class com.bumptech.glide.load.engine.EngineJob$1 extends java.lang.Object implements java.lang.Runnable
{
    final long val$start;
    final com.bumptech.glide.load.engine.Resource val$resource;
    final com.bumptech.glide.load.engine.EngineJob this$0;

    void <init>(com.bumptech.glide.load.engine.EngineJob, long, com.bumptech.glide.load.engine.Resource)
    {
        com.bumptech.glide.load.engine.EngineJob$1 r0;
        com.bumptech.glide.load.engine.EngineJob r1;
        long l0;
        com.bumptech.glide.load.engine.Resource r2;

        r0 := @this: com.bumptech.glide.load.engine.EngineJob$1;

        r1 := @parameter0: com.bumptech.glide.load.engine.EngineJob;

        l0 := @parameter1: long;

        r2 := @parameter2: com.bumptech.glide.load.engine.Resource;

        r0.<com.bumptech.glide.load.engine.EngineJob$1: com.bumptech.glide.load.engine.EngineJob this$0> = r1;

        r0.<com.bumptech.glide.load.engine.EngineJob$1: long val$start> = l0;

        r0.<com.bumptech.glide.load.engine.EngineJob$1: com.bumptech.glide.load.engine.Resource val$resource> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        com.bumptech.glide.load.engine.EngineJob$1 r0;
        java.util.Iterator r1;
        com.bumptech.glide.request.ResourceCallback r2, $r16;
        boolean $z0, $z1, $z2, $z4, $z5, $z6;
        com.bumptech.glide.load.engine.EngineJob $r3, $r4, $r6, $r8, $r10, $r12, $r17, $r26, $r28, $r34;
        com.bumptech.glide.load.engine.Resource $r5, $r7, $r13, $r14, $r18, $r19, $r24, $r29, $r30;
        com.bumptech.glide.load.engine.EngineJobListener $r9;
        com.bumptech.glide.load.Key $r11;
        java.util.List $r15, $r25, $r27;
        java.lang.StringBuilder $r20, $r21, $r23, $r32, $r33, $r35, $r36, $r38;
        double $d0, $d1;
        long $l0, $l3;
        java.lang.String $r22, $r37;
        int $i2;
        java.lang.Object $r31;

        r0 := @this: com.bumptech.glide.load.engine.EngineJob$1;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("EngineJob", 2);

        if $z0 == 0 goto label1;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Posted to main thread in onResourceReady in ");

        $l3 = r0.<com.bumptech.glide.load.engine.EngineJob$1: long val$start>;

        $d1 = staticinvoke <com.bumptech.glide.util.LogTime: double getElapsedMillis(long)>($l3);

        $r36 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cancelled: ");

        $r34 = r0.<com.bumptech.glide.load.engine.EngineJob$1: com.bumptech.glide.load.engine.EngineJob this$0>;

        $z6 = staticinvoke <com.bumptech.glide.load.engine.EngineJob: boolean access$000(com.bumptech.glide.load.engine.EngineJob)>($r34);

        $r38 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z6);

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("EngineJob", $r37);

     label1:
        $r3 = r0.<com.bumptech.glide.load.engine.EngineJob$1: com.bumptech.glide.load.engine.EngineJob this$0>;

        $z1 = staticinvoke <com.bumptech.glide.load.engine.EngineJob: boolean access$000(com.bumptech.glide.load.engine.EngineJob)>($r3);

        if $z1 == 0 goto label2;

        $r30 = r0.<com.bumptech.glide.load.engine.EngineJob$1: com.bumptech.glide.load.engine.Resource val$resource>;

        virtualinvoke $r30.<com.bumptech.glide.load.engine.Resource: void recycle()>();

        return;

     label2:
        $r5 = r0.<com.bumptech.glide.load.engine.EngineJob$1: com.bumptech.glide.load.engine.Resource val$resource>;

        $r4 = r0.<com.bumptech.glide.load.engine.EngineJob$1: com.bumptech.glide.load.engine.EngineJob this$0>;

        $z2 = staticinvoke <com.bumptech.glide.load.engine.EngineJob: boolean access$100(com.bumptech.glide.load.engine.EngineJob)>($r4);

        virtualinvoke $r5.<com.bumptech.glide.load.engine.Resource: void setCacheable(boolean)>($z2);

        $r6 = r0.<com.bumptech.glide.load.engine.EngineJob$1: com.bumptech.glide.load.engine.EngineJob this$0>;

        staticinvoke <com.bumptech.glide.load.engine.EngineJob: boolean access$202(com.bumptech.glide.load.engine.EngineJob,boolean)>($r6, 1);

        $r7 = r0.<com.bumptech.glide.load.engine.EngineJob$1: com.bumptech.glide.load.engine.Resource val$resource>;

        virtualinvoke $r7.<com.bumptech.glide.load.engine.Resource: void acquire(int)>(1);

        $r8 = r0.<com.bumptech.glide.load.engine.EngineJob$1: com.bumptech.glide.load.engine.EngineJob this$0>;

        $r9 = staticinvoke <com.bumptech.glide.load.engine.EngineJob: com.bumptech.glide.load.engine.EngineJobListener access$400(com.bumptech.glide.load.engine.EngineJob)>($r8);

        $r10 = r0.<com.bumptech.glide.load.engine.EngineJob$1: com.bumptech.glide.load.engine.EngineJob this$0>;

        $r11 = staticinvoke <com.bumptech.glide.load.engine.EngineJob: com.bumptech.glide.load.Key access$300(com.bumptech.glide.load.engine.EngineJob)>($r10);

        $r13 = r0.<com.bumptech.glide.load.engine.EngineJob$1: com.bumptech.glide.load.engine.Resource val$resource>;

        interfaceinvoke $r9.<com.bumptech.glide.load.engine.EngineJobListener: void onEngineJobComplete(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.Resource)>($r11, $r13);

        $r12 = r0.<com.bumptech.glide.load.engine.EngineJob$1: com.bumptech.glide.load.engine.EngineJob this$0>;

        $r15 = staticinvoke <com.bumptech.glide.load.engine.EngineJob: java.util.List access$500(com.bumptech.glide.load.engine.EngineJob)>($r12);

        if $r15 == null goto label5;

        $r24 = r0.<com.bumptech.glide.load.engine.EngineJob$1: com.bumptech.glide.load.engine.Resource val$resource>;

        $r26 = r0.<com.bumptech.glide.load.engine.EngineJob$1: com.bumptech.glide.load.engine.EngineJob this$0>;

        $r25 = staticinvoke <com.bumptech.glide.load.engine.EngineJob: java.util.List access$500(com.bumptech.glide.load.engine.EngineJob)>($r26);

        $i2 = interfaceinvoke $r25.<java.util.List: int size()>();

        virtualinvoke $r24.<com.bumptech.glide.load.engine.Resource: void acquire(int)>($i2);

        $r28 = r0.<com.bumptech.glide.load.engine.EngineJob$1: com.bumptech.glide.load.engine.EngineJob this$0>;

        $r27 = staticinvoke <com.bumptech.glide.load.engine.EngineJob: java.util.List access$500(com.bumptech.glide.load.engine.EngineJob)>($r28);

        r1 = interfaceinvoke $r27.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z5 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label4;

        $r31 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.bumptech.glide.request.ResourceCallback) $r31;

        $r29 = r0.<com.bumptech.glide.load.engine.EngineJob$1: com.bumptech.glide.load.engine.Resource val$resource>;

        interfaceinvoke r2.<com.bumptech.glide.request.ResourceCallback: void onResourceReady(com.bumptech.glide.load.engine.Resource)>($r29);

        goto label3;

     label4:
        goto label6;

     label5:
        $r14 = r0.<com.bumptech.glide.load.engine.EngineJob$1: com.bumptech.glide.load.engine.Resource val$resource>;

        virtualinvoke $r14.<com.bumptech.glide.load.engine.Resource: void acquire(int)>(1);

        $r17 = r0.<com.bumptech.glide.load.engine.EngineJob$1: com.bumptech.glide.load.engine.EngineJob this$0>;

        $r16 = staticinvoke <com.bumptech.glide.load.engine.EngineJob: com.bumptech.glide.request.ResourceCallback access$600(com.bumptech.glide.load.engine.EngineJob)>($r17);

        $r19 = r0.<com.bumptech.glide.load.engine.EngineJob$1: com.bumptech.glide.load.engine.Resource val$resource>;

        interfaceinvoke $r16.<com.bumptech.glide.request.ResourceCallback: void onResourceReady(com.bumptech.glide.load.engine.Resource)>($r19);

     label6:
        $r18 = r0.<com.bumptech.glide.load.engine.EngineJob$1: com.bumptech.glide.load.engine.Resource val$resource>;

        virtualinvoke $r18.<com.bumptech.glide.load.engine.Resource: void release()>();

        $z4 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("EngineJob", 2);

        if $z4 == 0 goto label7;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Finished resource ready in ");

        $l0 = r0.<com.bumptech.glide.load.engine.EngineJob$1: long val$start>;

        $d0 = staticinvoke <com.bumptech.glide.util.LogTime: double getElapsedMillis(long)>($l0);

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("EngineJob", $r22);

     label7:
        return;
    }
}
