public class com.bumptech.glide.RequestManager extends java.lang.Object
{
    private final com.bumptech.glide.manager.ConnectivityMonitor connectivityMonitor;
    private final android.content.Context context;
    private final com.bumptech.glide.manager.RequestTracker requestTracker;
    private final com.bumptech.glide.Glide glide;
    private final com.bumptech.glide.RequestManager$OptionsApplier optionsApplier;
    private com.bumptech.glide.RequestManager$DefaultOptions options;

    public void <init>(android.content.Context)
    {
        com.bumptech.glide.RequestManager r0;
        android.content.Context r1;
        com.bumptech.glide.manager.RequestTracker $r2;
        com.bumptech.glide.manager.ConnectivityMonitorFactory $r3;

        r0 := @this: com.bumptech.glide.RequestManager;

        r1 := @parameter0: android.content.Context;

        $r2 = new com.bumptech.glide.manager.RequestTracker;

        specialinvoke $r2.<com.bumptech.glide.manager.RequestTracker: void <init>()>();

        $r3 = new com.bumptech.glide.manager.ConnectivityMonitorFactory;

        specialinvoke $r3.<com.bumptech.glide.manager.ConnectivityMonitorFactory: void <init>()>();

        specialinvoke r0.<com.bumptech.glide.RequestManager: void <init>(android.content.Context,com.bumptech.glide.manager.RequestTracker,com.bumptech.glide.manager.ConnectivityMonitorFactory)>(r1, $r2, $r3);

        return;
    }

    void <init>(android.content.Context, com.bumptech.glide.manager.RequestTracker, com.bumptech.glide.manager.ConnectivityMonitorFactory)
    {
        com.bumptech.glide.RequestManager r0;
        android.content.Context r1;
        com.bumptech.glide.manager.RequestTracker r2;
        com.bumptech.glide.manager.ConnectivityMonitorFactory r3;
        com.bumptech.glide.RequestManager$RequestManagerConnectivityListener $r4;
        com.bumptech.glide.manager.ConnectivityMonitor $r5, $r6;
        com.bumptech.glide.Glide $r7;
        com.bumptech.glide.RequestManager$OptionsApplier $r8;

        r0 := @this: com.bumptech.glide.RequestManager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.bumptech.glide.manager.RequestTracker;

        r3 := @parameter2: com.bumptech.glide.manager.ConnectivityMonitorFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.bumptech.glide.RequestManager: android.content.Context context> = r1;

        r0.<com.bumptech.glide.RequestManager: com.bumptech.glide.manager.RequestTracker requestTracker> = r2;

        $r4 = new com.bumptech.glide.RequestManager$RequestManagerConnectivityListener;

        specialinvoke $r4.<com.bumptech.glide.RequestManager$RequestManagerConnectivityListener: void <init>(com.bumptech.glide.manager.RequestTracker)>(r2);

        $r5 = virtualinvoke r3.<com.bumptech.glide.manager.ConnectivityMonitorFactory: com.bumptech.glide.manager.ConnectivityMonitor build(android.content.Context,com.bumptech.glide.manager.ConnectivityMonitor$ConnectivityListener)>(r1, $r4);

        r0.<com.bumptech.glide.RequestManager: com.bumptech.glide.manager.ConnectivityMonitor connectivityMonitor> = $r5;

        $r6 = r0.<com.bumptech.glide.RequestManager: com.bumptech.glide.manager.ConnectivityMonitor connectivityMonitor>;

        interfaceinvoke $r6.<com.bumptech.glide.manager.ConnectivityMonitor: void register()>();

        $r7 = staticinvoke <com.bumptech.glide.Glide: com.bumptech.glide.Glide get(android.content.Context)>(r1);

        r0.<com.bumptech.glide.RequestManager: com.bumptech.glide.Glide glide> = $r7;

        $r8 = new com.bumptech.glide.RequestManager$OptionsApplier;

        specialinvoke $r8.<com.bumptech.glide.RequestManager$OptionsApplier: void <init>(com.bumptech.glide.RequestManager)>(r0);

        r0.<com.bumptech.glide.RequestManager: com.bumptech.glide.RequestManager$OptionsApplier optionsApplier> = $r8;

        return;
    }

    public void setDefaultOptions(com.bumptech.glide.RequestManager$DefaultOptions)
    {
        com.bumptech.glide.RequestManager r0;
        com.bumptech.glide.RequestManager$DefaultOptions r1;

        r0 := @this: com.bumptech.glide.RequestManager;

        r1 := @parameter0: com.bumptech.glide.RequestManager$DefaultOptions;

        r0.<com.bumptech.glide.RequestManager: com.bumptech.glide.RequestManager$DefaultOptions options> = r1;

        return;
    }

    public void pauseRequests()
    {
        com.bumptech.glide.RequestManager r0;
        com.bumptech.glide.manager.RequestTracker $r1;

        r0 := @this: com.bumptech.glide.RequestManager;

        $r1 = r0.<com.bumptech.glide.RequestManager: com.bumptech.glide.manager.RequestTracker requestTracker>;

        virtualinvoke $r1.<com.bumptech.glide.manager.RequestTracker: void pauseRequests()>();

        return;
    }

    public void resumeRequests()
    {
        com.bumptech.glide.RequestManager r0;
        com.bumptech.glide.manager.RequestTracker $r1;

        r0 := @this: com.bumptech.glide.RequestManager;

        $r1 = r0.<com.bumptech.glide.RequestManager: com.bumptech.glide.manager.RequestTracker requestTracker>;

        virtualinvoke $r1.<com.bumptech.glide.manager.RequestTracker: void resumeRequests()>();

        return;
    }

    public void onStart()
    {
        com.bumptech.glide.RequestManager r0;
        com.bumptech.glide.manager.ConnectivityMonitor $r1;
        com.bumptech.glide.manager.RequestTracker $r2;

        r0 := @this: com.bumptech.glide.RequestManager;

        $r1 = r0.<com.bumptech.glide.RequestManager: com.bumptech.glide.manager.ConnectivityMonitor connectivityMonitor>;

        interfaceinvoke $r1.<com.bumptech.glide.manager.ConnectivityMonitor: void register()>();

        $r2 = r0.<com.bumptech.glide.RequestManager: com.bumptech.glide.manager.RequestTracker requestTracker>;

        virtualinvoke $r2.<com.bumptech.glide.manager.RequestTracker: void resumeRequests()>();

        return;
    }

    public void onStop()
    {
        com.bumptech.glide.RequestManager r0;
        com.bumptech.glide.manager.ConnectivityMonitor $r1;
        com.bumptech.glide.manager.RequestTracker $r2;

        r0 := @this: com.bumptech.glide.RequestManager;

        $r1 = r0.<com.bumptech.glide.RequestManager: com.bumptech.glide.manager.ConnectivityMonitor connectivityMonitor>;

        interfaceinvoke $r1.<com.bumptech.glide.manager.ConnectivityMonitor: void unregister()>();

        $r2 = r0.<com.bumptech.glide.RequestManager: com.bumptech.glide.manager.RequestTracker requestTracker>;

        virtualinvoke $r2.<com.bumptech.glide.manager.RequestTracker: void pauseRequests()>();

        return;
    }

    public void onDestroy()
    {
        com.bumptech.glide.RequestManager r0;
        com.bumptech.glide.manager.RequestTracker $r1;

        r0 := @this: com.bumptech.glide.RequestManager;

        $r1 = r0.<com.bumptech.glide.RequestManager: com.bumptech.glide.manager.RequestTracker requestTracker>;

        virtualinvoke $r1.<com.bumptech.glide.manager.RequestTracker: void clearRequests()>();

        return;
    }

    public com.bumptech.glide.RequestManager$GenericModelRequest using(com.bumptech.glide.load.model.ModelLoader, java.lang.Class)
    {
        com.bumptech.glide.RequestManager r0;
        com.bumptech.glide.load.model.ModelLoader r1;
        java.lang.Class r2;
        com.bumptech.glide.RequestManager$GenericModelRequest $r3;

        r0 := @this: com.bumptech.glide.RequestManager;

        r1 := @parameter0: com.bumptech.glide.load.model.ModelLoader;

        r2 := @parameter1: java.lang.Class;

        $r3 = new com.bumptech.glide.RequestManager$GenericModelRequest;

        specialinvoke $r3.<com.bumptech.glide.RequestManager$GenericModelRequest: void <init>(com.bumptech.glide.RequestManager,com.bumptech.glide.load.model.ModelLoader,java.lang.Class,com.bumptech.glide.RequestManager$1)>(r0, r1, r2, null);

        return $r3;
    }

    public com.bumptech.glide.RequestManager$ImageModelRequest using(com.bumptech.glide.load.model.stream.StreamModelLoader)
    {
        com.bumptech.glide.RequestManager r0;
        com.bumptech.glide.load.model.stream.StreamModelLoader r1;
        com.bumptech.glide.RequestManager$ImageModelRequest $r2;

        r0 := @this: com.bumptech.glide.RequestManager;

        r1 := @parameter0: com.bumptech.glide.load.model.stream.StreamModelLoader;

        $r2 = new com.bumptech.glide.RequestManager$ImageModelRequest;

        specialinvoke $r2.<com.bumptech.glide.RequestManager$ImageModelRequest: void <init>(com.bumptech.glide.RequestManager,com.bumptech.glide.load.model.ModelLoader,com.bumptech.glide.RequestManager$1)>(r0, r1, null);

        return $r2;
    }

    public com.bumptech.glide.RequestManager$ImageModelRequest using(com.bumptech.glide.load.model.stream.StreamByteArrayLoader)
    {
        com.bumptech.glide.RequestManager r0;
        com.bumptech.glide.load.model.stream.StreamByteArrayLoader r1;
        com.bumptech.glide.RequestManager$ImageModelRequest $r2;

        r0 := @this: com.bumptech.glide.RequestManager;

        r1 := @parameter0: com.bumptech.glide.load.model.stream.StreamByteArrayLoader;

        $r2 = new com.bumptech.glide.RequestManager$ImageModelRequest;

        specialinvoke $r2.<com.bumptech.glide.RequestManager$ImageModelRequest: void <init>(com.bumptech.glide.RequestManager,com.bumptech.glide.load.model.ModelLoader,com.bumptech.glide.RequestManager$1)>(r0, r1, null);

        return $r2;
    }

    public com.bumptech.glide.RequestManager$VideoModelRequest using(com.bumptech.glide.load.model.file_descriptor.FileDescriptorModelLoader)
    {
        com.bumptech.glide.RequestManager r0;
        com.bumptech.glide.load.model.file_descriptor.FileDescriptorModelLoader r1;
        com.bumptech.glide.RequestManager$VideoModelRequest $r2;

        r0 := @this: com.bumptech.glide.RequestManager;

        r1 := @parameter0: com.bumptech.glide.load.model.file_descriptor.FileDescriptorModelLoader;

        $r2 = new com.bumptech.glide.RequestManager$VideoModelRequest;

        specialinvoke $r2.<com.bumptech.glide.RequestManager$VideoModelRequest: void <init>(com.bumptech.glide.RequestManager,com.bumptech.glide.load.model.ModelLoader,com.bumptech.glide.RequestManager$1)>(r0, r1, null);

        return $r2;
    }

    public com.bumptech.glide.DrawableTypeRequest load(java.lang.String)
    {
        com.bumptech.glide.RequestManager r0;
        java.lang.String r1;
        com.bumptech.glide.DrawableTypeRequest $r2;

        r0 := @this: com.bumptech.glide.RequestManager;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest loadGeneric(java.lang.Object)>(r1);

        return $r2;
    }

    public com.bumptech.glide.DrawableTypeRequest load(android.net.Uri)
    {
        com.bumptech.glide.RequestManager r0;
        android.net.Uri r1;
        com.bumptech.glide.DrawableTypeRequest $r2;

        r0 := @this: com.bumptech.glide.RequestManager;

        r1 := @parameter0: android.net.Uri;

        $r2 = specialinvoke r0.<com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest loadGeneric(java.lang.Object)>(r1);

        return $r2;
    }

    public com.bumptech.glide.DrawableTypeRequest loadFromMediaStore(android.net.Uri, java.lang.String, long, int)
    {
        com.bumptech.glide.RequestManager r0;
        android.net.Uri r1;
        java.lang.String r2;
        long l0;
        int i1;
        com.bumptech.glide.load.model.ModelLoader r3, r5;
        com.bumptech.glide.load.model.stream.MediaStoreStreamLoader r4, $r7;
        android.content.Context $r6, $r8, $r9, $r13;
        com.bumptech.glide.DrawableTypeRequest $r10, $r17;
        com.bumptech.glide.manager.RequestTracker $r11;
        com.bumptech.glide.RequestManager$OptionsApplier $r12, $r16;
        com.bumptech.glide.Glide $r14;
        com.bumptech.glide.GenericRequestBuilder $r15;

        r0 := @this: com.bumptech.glide.RequestManager;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        i1 := @parameter3: int;

        $r6 = r0.<com.bumptech.glide.RequestManager: android.content.Context context>;

        r3 = staticinvoke <com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildStreamModelLoader(java.lang.Object,android.content.Context)>(r1, $r6);

        $r7 = new com.bumptech.glide.load.model.stream.MediaStoreStreamLoader;

        $r8 = r0.<com.bumptech.glide.RequestManager: android.content.Context context>;

        specialinvoke $r7.<com.bumptech.glide.load.model.stream.MediaStoreStreamLoader: void <init>(android.content.Context,com.bumptech.glide.load.model.ModelLoader,java.lang.String,long,int)>($r8, r3, r2, l0, i1);

        r4 = $r7;

        $r9 = r0.<com.bumptech.glide.RequestManager: android.content.Context context>;

        r5 = staticinvoke <com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildFileDescriptorModelLoader(java.lang.Object,android.content.Context)>(r1, $r9);

        $r16 = r0.<com.bumptech.glide.RequestManager: com.bumptech.glide.RequestManager$OptionsApplier optionsApplier>;

        $r10 = new com.bumptech.glide.DrawableTypeRequest;

        $r13 = r0.<com.bumptech.glide.RequestManager: android.content.Context context>;

        $r14 = r0.<com.bumptech.glide.RequestManager: com.bumptech.glide.Glide glide>;

        $r11 = r0.<com.bumptech.glide.RequestManager: com.bumptech.glide.manager.RequestTracker requestTracker>;

        $r12 = r0.<com.bumptech.glide.RequestManager: com.bumptech.glide.RequestManager$OptionsApplier optionsApplier>;

        specialinvoke $r10.<com.bumptech.glide.DrawableTypeRequest: void <init>(java.lang.Object,com.bumptech.glide.load.model.ModelLoader,com.bumptech.glide.load.model.ModelLoader,android.content.Context,com.bumptech.glide.Glide,com.bumptech.glide.manager.RequestTracker,com.bumptech.glide.RequestManager$OptionsApplier)>(r1, r4, r5, $r13, $r14, $r11, $r12);

        $r15 = virtualinvoke $r16.<com.bumptech.glide.RequestManager$OptionsApplier: com.bumptech.glide.GenericRequestBuilder apply(java.lang.Object,com.bumptech.glide.GenericRequestBuilder)>(r1, $r10);

        $r17 = (com.bumptech.glide.DrawableTypeRequest) $r15;

        return $r17;
    }

    public com.bumptech.glide.DrawableTypeRequest load(java.io.File)
    {
        com.bumptech.glide.RequestManager r0;
        java.io.File r1;
        com.bumptech.glide.DrawableTypeRequest $r2;

        r0 := @this: com.bumptech.glide.RequestManager;

        r1 := @parameter0: java.io.File;

        $r2 = specialinvoke r0.<com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest loadGeneric(java.lang.Object)>(r1);

        return $r2;
    }

    public com.bumptech.glide.DrawableTypeRequest load(java.lang.Integer)
    {
        com.bumptech.glide.RequestManager r0;
        java.lang.Integer r1;
        com.bumptech.glide.DrawableTypeRequest $r2;

        r0 := @this: com.bumptech.glide.RequestManager;

        r1 := @parameter0: java.lang.Integer;

        $r2 = specialinvoke r0.<com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest loadGeneric(java.lang.Object)>(r1);

        return $r2;
    }

    public com.bumptech.glide.DrawableTypeRequest loadFromImage(java.lang.Object)
    {
        com.bumptech.glide.RequestManager r0;
        java.lang.Object r1;
        com.bumptech.glide.DrawableTypeRequest $r2;

        r0 := @this: com.bumptech.glide.RequestManager;

        r1 := @parameter0: java.lang.Object;

        $r2 = specialinvoke r0.<com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest loadGeneric(java.lang.Object)>(r1);

        return $r2;
    }

    public com.bumptech.glide.DrawableTypeRequest loadFromImage(java.net.URL)
    {
        com.bumptech.glide.RequestManager r0;
        java.net.URL r1;
        com.bumptech.glide.DrawableTypeRequest $r2;

        r0 := @this: com.bumptech.glide.RequestManager;

        r1 := @parameter0: java.net.URL;

        $r2 = specialinvoke r0.<com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest loadGeneric(java.lang.Object)>(r1);

        return $r2;
    }

    public com.bumptech.glide.DrawableTypeRequest loadFromImage(byte[], java.lang.String)
    {
        com.bumptech.glide.RequestManager r0;
        byte[] r1;
        java.lang.String r2;
        com.bumptech.glide.load.model.stream.StreamByteArrayLoader r3, $r4;
        com.bumptech.glide.DrawableTypeRequest $r5, $r12;
        com.bumptech.glide.RequestManager$OptionsApplier $r6, $r10;
        com.bumptech.glide.manager.RequestTracker $r7;
        com.bumptech.glide.Glide $r8;
        android.content.Context $r9;
        com.bumptech.glide.GenericRequestBuilder $r11;

        r0 := @this: com.bumptech.glide.RequestManager;

        r1 := @parameter0: byte[];

        r2 := @parameter1: java.lang.String;

        $r4 = new com.bumptech.glide.load.model.stream.StreamByteArrayLoader;

        specialinvoke $r4.<com.bumptech.glide.load.model.stream.StreamByteArrayLoader: void <init>(java.lang.String)>(r2);

        r3 = $r4;

        $r10 = r0.<com.bumptech.glide.RequestManager: com.bumptech.glide.RequestManager$OptionsApplier optionsApplier>;

        $r5 = new com.bumptech.glide.DrawableTypeRequest;

        $r9 = r0.<com.bumptech.glide.RequestManager: android.content.Context context>;

        $r8 = r0.<com.bumptech.glide.RequestManager: com.bumptech.glide.Glide glide>;

        $r7 = r0.<com.bumptech.glide.RequestManager: com.bumptech.glide.manager.RequestTracker requestTracker>;

        $r6 = r0.<com.bumptech.glide.RequestManager: com.bumptech.glide.RequestManager$OptionsApplier optionsApplier>;

        specialinvoke $r5.<com.bumptech.glide.DrawableTypeRequest: void <init>(java.lang.Object,com.bumptech.glide.load.model.ModelLoader,com.bumptech.glide.load.model.ModelLoader,android.content.Context,com.bumptech.glide.Glide,com.bumptech.glide.manager.RequestTracker,com.bumptech.glide.RequestManager$OptionsApplier)>(r1, r3, null, $r9, $r8, $r7, $r6);

        $r11 = virtualinvoke $r10.<com.bumptech.glide.RequestManager$OptionsApplier: com.bumptech.glide.GenericRequestBuilder apply(java.lang.Object,com.bumptech.glide.GenericRequestBuilder)>(r1, $r5);

        $r12 = (com.bumptech.glide.DrawableTypeRequest) $r11;

        return $r12;
    }

    public com.bumptech.glide.DrawableTypeRequest loadFromImage(byte[])
    {
        com.bumptech.glide.RequestManager r0;
        byte[] r1;
        java.util.UUID $r2;
        java.lang.String $r3;
        com.bumptech.glide.DrawableTypeRequest $r4;

        r0 := @this: com.bumptech.glide.RequestManager;

        r1 := @parameter0: byte[];

        $r2 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();

        $r3 = virtualinvoke $r2.<java.util.UUID: java.lang.String toString()>();

        $r4 = virtualinvoke r0.<com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest loadFromImage(byte[],java.lang.String)>(r1, $r3);

        return $r4;
    }

    public com.bumptech.glide.DrawableTypeRequest loadFromVideo(java.lang.Object)
    {
        com.bumptech.glide.RequestManager r0;
        java.lang.Object r1;
        com.bumptech.glide.DrawableTypeRequest $r2;

        r0 := @this: com.bumptech.glide.RequestManager;

        r1 := @parameter0: java.lang.Object;

        $r2 = specialinvoke r0.<com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest loadGeneric(java.lang.Object)>(r1);

        return $r2;
    }

    public com.bumptech.glide.DrawableTypeRequest load(java.lang.Object)
    {
        com.bumptech.glide.RequestManager r0;
        java.lang.Object r1;
        com.bumptech.glide.DrawableTypeRequest $r2;

        r0 := @this: com.bumptech.glide.RequestManager;

        r1 := @parameter0: java.lang.Object;

        $r2 = specialinvoke r0.<com.bumptech.glide.RequestManager: com.bumptech.glide.DrawableTypeRequest loadGeneric(java.lang.Object)>(r1);

        return $r2;
    }

    private com.bumptech.glide.DrawableTypeRequest loadGeneric(java.lang.Object)
    {
        com.bumptech.glide.RequestManager r0;
        java.lang.Object r1;
        com.bumptech.glide.load.model.ModelLoader r2, r3;
        android.content.Context $r4, $r5, $r10;
        com.bumptech.glide.DrawableTypeRequest $r6, $r13;
        com.bumptech.glide.RequestManager$OptionsApplier $r7, $r11;
        com.bumptech.glide.manager.RequestTracker $r8;
        com.bumptech.glide.Glide $r9;
        com.bumptech.glide.GenericRequestBuilder $r12;
        java.lang.StringBuilder $r14, $r16, $r17, $r18, $r19, $r21;
        java.lang.IllegalArgumentException $r15;
        java.lang.String $r20;

        r0 := @this: com.bumptech.glide.RequestManager;

        r1 := @parameter0: java.lang.Object;

        $r4 = r0.<com.bumptech.glide.RequestManager: android.content.Context context>;

        r2 = staticinvoke <com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildStreamModelLoader(java.lang.Object,android.content.Context)>(r1, $r4);

        $r5 = r0.<com.bumptech.glide.RequestManager: android.content.Context context>;

        r3 = staticinvoke <com.bumptech.glide.Glide: com.bumptech.glide.load.model.ModelLoader buildFileDescriptorModelLoader(java.lang.Object,android.content.Context)>(r1, $r5);

        if r1 == null goto label1;

        if r2 != null goto label1;

        if r3 != null goto label1;

        $r15 = new java.lang.IllegalArgumentException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown type ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". You must provide a Model of a type for");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" which there is a registered ModelLoader, if you are using a custom model, you must first call");

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Glide#register with a ModelLoaderFactory for your custom model class");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20);

        throw $r15;

     label1:
        $r11 = r0.<com.bumptech.glide.RequestManager: com.bumptech.glide.RequestManager$OptionsApplier optionsApplier>;

        $r6 = new com.bumptech.glide.DrawableTypeRequest;

        $r10 = r0.<com.bumptech.glide.RequestManager: android.content.Context context>;

        $r9 = r0.<com.bumptech.glide.RequestManager: com.bumptech.glide.Glide glide>;

        $r8 = r0.<com.bumptech.glide.RequestManager: com.bumptech.glide.manager.RequestTracker requestTracker>;

        $r7 = r0.<com.bumptech.glide.RequestManager: com.bumptech.glide.RequestManager$OptionsApplier optionsApplier>;

        specialinvoke $r6.<com.bumptech.glide.DrawableTypeRequest: void <init>(java.lang.Object,com.bumptech.glide.load.model.ModelLoader,com.bumptech.glide.load.model.ModelLoader,android.content.Context,com.bumptech.glide.Glide,com.bumptech.glide.manager.RequestTracker,com.bumptech.glide.RequestManager$OptionsApplier)>(r1, r2, r3, $r10, $r9, $r8, $r7);

        $r12 = virtualinvoke $r11.<com.bumptech.glide.RequestManager$OptionsApplier: com.bumptech.glide.GenericRequestBuilder apply(java.lang.Object,com.bumptech.glide.GenericRequestBuilder)>(r1, $r6);

        $r13 = (com.bumptech.glide.DrawableTypeRequest) $r12;

        return $r13;
    }

    static android.content.Context access$300(com.bumptech.glide.RequestManager)
    {
        com.bumptech.glide.RequestManager r0;
        android.content.Context $r1;

        r0 := @parameter0: com.bumptech.glide.RequestManager;

        $r1 = r0.<com.bumptech.glide.RequestManager: android.content.Context context>;

        return $r1;
    }

    static com.bumptech.glide.Glide access$400(com.bumptech.glide.RequestManager)
    {
        com.bumptech.glide.RequestManager r0;
        com.bumptech.glide.Glide $r1;

        r0 := @parameter0: com.bumptech.glide.RequestManager;

        $r1 = r0.<com.bumptech.glide.RequestManager: com.bumptech.glide.Glide glide>;

        return $r1;
    }

    static com.bumptech.glide.manager.RequestTracker access$500(com.bumptech.glide.RequestManager)
    {
        com.bumptech.glide.RequestManager r0;
        com.bumptech.glide.manager.RequestTracker $r1;

        r0 := @parameter0: com.bumptech.glide.RequestManager;

        $r1 = r0.<com.bumptech.glide.RequestManager: com.bumptech.glide.manager.RequestTracker requestTracker>;

        return $r1;
    }

    static com.bumptech.glide.RequestManager$OptionsApplier access$600(com.bumptech.glide.RequestManager)
    {
        com.bumptech.glide.RequestManager r0;
        com.bumptech.glide.RequestManager$OptionsApplier $r1;

        r0 := @parameter0: com.bumptech.glide.RequestManager;

        $r1 = r0.<com.bumptech.glide.RequestManager: com.bumptech.glide.RequestManager$OptionsApplier optionsApplier>;

        return $r1;
    }

    static com.bumptech.glide.RequestManager$DefaultOptions access$700(com.bumptech.glide.RequestManager)
    {
        com.bumptech.glide.RequestManager r0;
        com.bumptech.glide.RequestManager$DefaultOptions $r1;

        r0 := @parameter0: com.bumptech.glide.RequestManager;

        $r1 = r0.<com.bumptech.glide.RequestManager: com.bumptech.glide.RequestManager$DefaultOptions options>;

        return $r1;
    }
}
