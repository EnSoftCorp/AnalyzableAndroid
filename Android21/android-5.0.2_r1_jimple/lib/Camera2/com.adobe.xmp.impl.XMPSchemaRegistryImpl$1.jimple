class com.adobe.xmp.impl.XMPSchemaRegistryImpl$1 extends java.lang.Object implements com.adobe.xmp.properties.XMPAliasInfo
{
    final java.lang.String val$actualNS;
    final java.lang.String val$actualPrefix;
    final java.lang.String val$actualProp;
    final com.adobe.xmp.options.AliasOptions val$aliasOpts;
    final com.adobe.xmp.impl.XMPSchemaRegistryImpl this$0;

    void <init>(com.adobe.xmp.impl.XMPSchemaRegistryImpl, java.lang.String, java.lang.String, java.lang.String, com.adobe.xmp.options.AliasOptions)
    {
        com.adobe.xmp.impl.XMPSchemaRegistryImpl$1 r0;
        com.adobe.xmp.impl.XMPSchemaRegistryImpl r1;
        java.lang.String r2, r3, r4;
        com.adobe.xmp.options.AliasOptions r5;

        r0 := @this: com.adobe.xmp.impl.XMPSchemaRegistryImpl$1;

        r1 := @parameter0: com.adobe.xmp.impl.XMPSchemaRegistryImpl;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: com.adobe.xmp.options.AliasOptions;

        r0.<com.adobe.xmp.impl.XMPSchemaRegistryImpl$1: com.adobe.xmp.impl.XMPSchemaRegistryImpl this$0> = r1;

        r0.<com.adobe.xmp.impl.XMPSchemaRegistryImpl$1: java.lang.String val$actualNS> = r2;

        r0.<com.adobe.xmp.impl.XMPSchemaRegistryImpl$1: java.lang.String val$actualPrefix> = r3;

        r0.<com.adobe.xmp.impl.XMPSchemaRegistryImpl$1: java.lang.String val$actualProp> = r4;

        r0.<com.adobe.xmp.impl.XMPSchemaRegistryImpl$1: com.adobe.xmp.options.AliasOptions val$aliasOpts> = r5;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String getNamespace()
    {
        com.adobe.xmp.impl.XMPSchemaRegistryImpl$1 r0;
        java.lang.String $r1;

        r0 := @this: com.adobe.xmp.impl.XMPSchemaRegistryImpl$1;

        $r1 = r0.<com.adobe.xmp.impl.XMPSchemaRegistryImpl$1: java.lang.String val$actualNS>;

        return $r1;
    }

    public java.lang.String getPrefix()
    {
        com.adobe.xmp.impl.XMPSchemaRegistryImpl$1 r0;
        java.lang.String $r1;

        r0 := @this: com.adobe.xmp.impl.XMPSchemaRegistryImpl$1;

        $r1 = r0.<com.adobe.xmp.impl.XMPSchemaRegistryImpl$1: java.lang.String val$actualPrefix>;

        return $r1;
    }

    public java.lang.String getPropName()
    {
        com.adobe.xmp.impl.XMPSchemaRegistryImpl$1 r0;
        java.lang.String $r1;

        r0 := @this: com.adobe.xmp.impl.XMPSchemaRegistryImpl$1;

        $r1 = r0.<com.adobe.xmp.impl.XMPSchemaRegistryImpl$1: java.lang.String val$actualProp>;

        return $r1;
    }

    public com.adobe.xmp.options.AliasOptions getAliasForm()
    {
        com.adobe.xmp.impl.XMPSchemaRegistryImpl$1 r0;
        com.adobe.xmp.options.AliasOptions $r1;

        r0 := @this: com.adobe.xmp.impl.XMPSchemaRegistryImpl$1;

        $r1 = r0.<com.adobe.xmp.impl.XMPSchemaRegistryImpl$1: com.adobe.xmp.options.AliasOptions val$aliasOpts>;

        return $r1;
    }

    public java.lang.String toString()
    {
        com.adobe.xmp.impl.XMPSchemaRegistryImpl$1 r0;
        java.lang.StringBuilder $r1, $r3, $r5, $r6, $r8, $r9, $r11, $r12;
        java.lang.String $r2, $r4, $r7, $r13;
        com.adobe.xmp.options.AliasOptions $r10;

        r0 := @this: com.adobe.xmp.impl.XMPSchemaRegistryImpl$1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<com.adobe.xmp.impl.XMPSchemaRegistryImpl$1: java.lang.String val$actualPrefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = r0.<com.adobe.xmp.impl.XMPSchemaRegistryImpl$1: java.lang.String val$actualProp>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" NS(");

        $r7 = r0.<com.adobe.xmp.impl.XMPSchemaRegistryImpl$1: java.lang.String val$actualNS>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), FORM (");

        $r10 = virtualinvoke r0.<com.adobe.xmp.impl.XMPSchemaRegistryImpl$1: com.adobe.xmp.options.AliasOptions getAliasForm()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }
}
