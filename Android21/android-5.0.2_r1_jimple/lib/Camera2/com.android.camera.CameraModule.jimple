public abstract class com.android.camera.CameraModule extends java.lang.Object implements com.android.camera.module.ModuleController
{
    private final com.android.camera.app.CameraServices mServices;
    private final com.android.camera.app.CameraProvider mCameraProvider;

    public void <init>(com.android.camera.app.AppController)
    {
        com.android.camera.CameraModule r0;
        com.android.camera.app.AppController r1;
        com.android.camera.app.CameraServices $r2;
        com.android.camera.app.CameraProvider $r3;

        r0 := @this: com.android.camera.CameraModule;

        r1 := @parameter0: com.android.camera.app.AppController;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = interfaceinvoke r1.<com.android.camera.app.AppController: com.android.camera.app.CameraServices getServices()>();

        r0.<com.android.camera.CameraModule: com.android.camera.app.CameraServices mServices> = $r2;

        $r3 = interfaceinvoke r1.<com.android.camera.app.AppController: com.android.camera.app.CameraProvider getCameraProvider()>();

        r0.<com.android.camera.CameraModule: com.android.camera.app.CameraProvider mCameraProvider> = $r3;

        return;
    }

    public boolean onBackPressed()
    {
        com.android.camera.CameraModule r0;

        r0 := @this: com.android.camera.CameraModule;

        return 0;
    }

    public void onPreviewVisibilityChanged(int)
    {
        com.android.camera.CameraModule r0;
        int i0;

        r0 := @this: com.android.camera.CameraModule;

        i0 := @parameter0: int;

        return;
    }

    public abstract boolean onKeyDown(int, android.view.KeyEvent);

    public abstract boolean onKeyUp(int, android.view.KeyEvent);

    public abstract void onSingleTapUp(android.view.View, int, int);

    protected com.android.camera.app.CameraServices getServices()
    {
        com.android.camera.CameraModule r0;
        com.android.camera.app.CameraServices $r1;

        r0 := @this: com.android.camera.CameraModule;

        $r1 = r0.<com.android.camera.CameraModule: com.android.camera.app.CameraServices mServices>;

        return $r1;
    }

    protected com.android.camera.app.CameraProvider getCameraProvider()
    {
        com.android.camera.CameraModule r0;
        com.android.camera.app.CameraProvider $r1;

        r0 := @this: com.android.camera.CameraModule;

        $r1 = r0.<com.android.camera.CameraModule: com.android.camera.app.CameraProvider mCameraProvider>;

        return $r1;
    }

    protected void requestBackCamera()
    {
        com.android.camera.CameraModule r0;
        int i0;
        com.android.camera.app.CameraProvider $r1, $r2;

        r0 := @this: com.android.camera.CameraModule;

        $r1 = r0.<com.android.camera.CameraModule: com.android.camera.app.CameraProvider mCameraProvider>;

        i0 = interfaceinvoke $r1.<com.android.camera.app.CameraProvider: int getFirstBackCameraId()>();

        if i0 == -1 goto label1;

        $r2 = r0.<com.android.camera.CameraModule: com.android.camera.app.CameraProvider mCameraProvider>;

        interfaceinvoke $r2.<com.android.camera.app.CameraProvider: void requestCamera(int)>(i0);

     label1:
        return;
    }

    public void onPreviewInitialDataReceived()
    {
        com.android.camera.CameraModule r0;

        r0 := @this: com.android.camera.CameraModule;

        return;
    }

    protected void releaseBackCamera()
    {
        com.android.camera.CameraModule r0;
        int i0;
        com.android.camera.app.CameraProvider $r1, $r2;

        r0 := @this: com.android.camera.CameraModule;

        $r1 = r0.<com.android.camera.CameraModule: com.android.camera.app.CameraProvider mCameraProvider>;

        i0 = interfaceinvoke $r1.<com.android.camera.app.CameraProvider: int getFirstBackCameraId()>();

        if i0 == -1 goto label1;

        $r2 = r0.<com.android.camera.CameraModule: com.android.camera.app.CameraProvider mCameraProvider>;

        interfaceinvoke $r2.<com.android.camera.app.CameraProvider: void releaseCamera(int)>(i0);

     label1:
        return;
    }

    public abstract java.lang.String getPeekAccessibilityString();
}
