public class com.bumptech.glide.load.model.GenericLoaderFactory extends java.lang.Object
{
    private java.util.Map modelClassToResourceFactories;
    private java.util.Map cachedModelLoaders;
    private static final com.bumptech.glide.load.model.ModelLoader NULL_MODEL_LOADER;

    public void <init>()
    {
        com.bumptech.glide.load.model.GenericLoaderFactory r0;
        java.util.HashMap $r1, $r2;

        r0 := @this: com.bumptech.glide.load.model.GenericLoaderFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.bumptech.glide.load.model.GenericLoaderFactory: java.util.Map modelClassToResourceFactories> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.bumptech.glide.load.model.GenericLoaderFactory: java.util.Map cachedModelLoaders> = $r2;

        return;
    }

    public com.bumptech.glide.load.model.ModelLoaderFactory unregister(java.lang.Class, java.lang.Class)
    {
        com.bumptech.glide.load.model.GenericLoaderFactory r0;
        java.lang.Class r1, r2;
        com.bumptech.glide.load.model.ModelLoaderFactory r3;
        java.util.Map r4, $r5, $r6;
        java.lang.Object $r7, $r8;

        r0 := @this: com.bumptech.glide.load.model.GenericLoaderFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        $r5 = r0.<com.bumptech.glide.load.model.GenericLoaderFactory: java.util.Map cachedModelLoaders>;

        interfaceinvoke $r5.<java.util.Map: void clear()>();

        r3 = null;

        $r6 = r0.<com.bumptech.glide.load.model.GenericLoaderFactory: java.util.Map modelClassToResourceFactories>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.util.Map) $r7;

        if r4 == null goto label1;

        $r8 = interfaceinvoke r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2);

        r3 = (com.bumptech.glide.load.model.ModelLoaderFactory) $r8;

     label1:
        return r3;
    }

    public com.bumptech.glide.load.model.ModelLoaderFactory register(java.lang.Class, java.lang.Class, com.bumptech.glide.load.model.ModelLoaderFactory)
    {
        com.bumptech.glide.load.model.GenericLoaderFactory r0;
        java.lang.Class r1, r2;
        com.bumptech.glide.load.model.ModelLoaderFactory r3, r5;
        java.util.Map r4, r7, $r8, $r9, $r12, $r15;
        java.util.Iterator r6;
        java.lang.Object $r10, $r11, $r14;
        java.util.Collection $r13;
        boolean $z0, $z1;
        java.util.HashMap $r16;

        r0 := @this: com.bumptech.glide.load.model.GenericLoaderFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: com.bumptech.glide.load.model.ModelLoaderFactory;

        $r8 = r0.<com.bumptech.glide.load.model.GenericLoaderFactory: java.util.Map cachedModelLoaders>;

        interfaceinvoke $r8.<java.util.Map: void clear()>();

        $r9 = r0.<com.bumptech.glide.load.model.GenericLoaderFactory: java.util.Map modelClassToResourceFactories>;

        $r10 = interfaceinvoke $r9.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.util.Map) $r10;

        if r4 != null goto label1;

        $r16 = new java.util.HashMap;

        specialinvoke $r16.<java.util.HashMap: void <init>()>();

        r4 = $r16;

        $r15 = r0.<com.bumptech.glide.load.model.GenericLoaderFactory: java.util.Map modelClassToResourceFactories>;

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4);

     label1:
        $r11 = interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

        r5 = (com.bumptech.glide.load.model.ModelLoaderFactory) $r11;

        if r5 == null goto label4;

        $r12 = r0.<com.bumptech.glide.load.model.GenericLoaderFactory: java.util.Map modelClassToResourceFactories>;

        $r13 = interfaceinvoke $r12.<java.util.Map: java.util.Collection values()>();

        r6 = interfaceinvoke $r13.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r14 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map) $r14;

        $z1 = interfaceinvoke r7.<java.util.Map: boolean containsValue(java.lang.Object)>(r5);

        if $z1 == 0 goto label3;

        r5 = null;

        goto label4;

     label3:
        goto label2;

     label4:
        return r5;
    }

    public com.bumptech.glide.load.model.ModelLoader buildModelLoader(java.lang.Class, java.lang.Class, android.content.Context)
    {
        com.bumptech.glide.load.model.GenericLoaderFactory r0;
        java.lang.Class r1, r2;
        android.content.Context r3;
        com.bumptech.glide.load.model.ModelLoader r4, $r6;
        com.bumptech.glide.load.model.ModelLoaderFactory r5;
        boolean $z0;

        r0 := @this: com.bumptech.glide.load.model.GenericLoaderFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: android.content.Context;

        r4 = specialinvoke r0.<com.bumptech.glide.load.model.GenericLoaderFactory: com.bumptech.glide.load.model.ModelLoader getCachedLoader(java.lang.Class,java.lang.Class)>(r1, r2);

        if r4 == null goto label2;

        $r6 = <com.bumptech.glide.load.model.GenericLoaderFactory: com.bumptech.glide.load.model.ModelLoader NULL_MODEL_LOADER>;

        $z0 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label1;

        return null;

     label1:
        return r4;

     label2:
        r5 = specialinvoke r0.<com.bumptech.glide.load.model.GenericLoaderFactory: com.bumptech.glide.load.model.ModelLoaderFactory getFactory(java.lang.Class,java.lang.Class)>(r1, r2);

        if r5 == null goto label3;

        r4 = interfaceinvoke r5.<com.bumptech.glide.load.model.ModelLoaderFactory: com.bumptech.glide.load.model.ModelLoader build(android.content.Context,com.bumptech.glide.load.model.GenericLoaderFactory)>(r3, r0);

        specialinvoke r0.<com.bumptech.glide.load.model.GenericLoaderFactory: void cacheModelLoader(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoader)>(r1, r2, r4);

        goto label4;

     label3:
        specialinvoke r0.<com.bumptech.glide.load.model.GenericLoaderFactory: void cacheNullLoader(java.lang.Class,java.lang.Class)>(r1, r2);

     label4:
        return r4;
    }

    private void cacheNullLoader(java.lang.Class, java.lang.Class)
    {
        com.bumptech.glide.load.model.GenericLoaderFactory r0;
        java.lang.Class r1, r2;
        com.bumptech.glide.load.model.ModelLoader $r3;

        r0 := @this: com.bumptech.glide.load.model.GenericLoaderFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        $r3 = <com.bumptech.glide.load.model.GenericLoaderFactory: com.bumptech.glide.load.model.ModelLoader NULL_MODEL_LOADER>;

        specialinvoke r0.<com.bumptech.glide.load.model.GenericLoaderFactory: void cacheModelLoader(java.lang.Class,java.lang.Class,com.bumptech.glide.load.model.ModelLoader)>(r1, r2, $r3);

        return;
    }

    private void cacheModelLoader(java.lang.Class, java.lang.Class, com.bumptech.glide.load.model.ModelLoader)
    {
        com.bumptech.glide.load.model.GenericLoaderFactory r0;
        java.lang.Class r1, r2;
        com.bumptech.glide.load.model.ModelLoader r3;
        java.util.Map r4, $r5, $r9;
        java.lang.Object $r6;
        java.util.HashMap $r8;

        r0 := @this: com.bumptech.glide.load.model.GenericLoaderFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: com.bumptech.glide.load.model.ModelLoader;

        $r5 = r0.<com.bumptech.glide.load.model.GenericLoaderFactory: java.util.Map cachedModelLoaders>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.util.Map) $r6;

        if r4 != null goto label1;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        r4 = $r8;

        $r9 = r0.<com.bumptech.glide.load.model.GenericLoaderFactory: java.util.Map cachedModelLoaders>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4);

     label1:
        interfaceinvoke r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

        return;
    }

    private com.bumptech.glide.load.model.ModelLoader getCachedLoader(java.lang.Class, java.lang.Class)
    {
        com.bumptech.glide.load.model.GenericLoaderFactory r0;
        java.lang.Class r1, r2;
        java.util.Map r3, $r5;
        com.bumptech.glide.load.model.ModelLoader r4;
        java.lang.Object $r6, $r7;

        r0 := @this: com.bumptech.glide.load.model.GenericLoaderFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        $r5 = r0.<com.bumptech.glide.load.model.GenericLoaderFactory: java.util.Map cachedModelLoaders>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (java.util.Map) $r6;

        r4 = null;

        if r3 == null goto label1;

        $r7 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r4 = (com.bumptech.glide.load.model.ModelLoader) $r7;

     label1:
        return r4;
    }

    private com.bumptech.glide.load.model.ModelLoaderFactory getFactory(java.lang.Class, java.lang.Class)
    {
        com.bumptech.glide.load.model.GenericLoaderFactory r0;
        java.lang.Class r1, r2, r6;
        java.util.Map r3, r7, $r8, $r10, $r14;
        com.bumptech.glide.load.model.ModelLoaderFactory r4;
        java.util.Iterator r5;
        java.lang.Object $r9, $r12, $r13, $r15, $r16;
        java.util.Set $r11;
        boolean $z0, $z1;

        r0 := @this: com.bumptech.glide.load.model.GenericLoaderFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Class;

        $r8 = r0.<com.bumptech.glide.load.model.GenericLoaderFactory: java.util.Map modelClassToResourceFactories>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (java.util.Map) $r9;

        r4 = null;

        if r3 == null goto label1;

        $r15 = interfaceinvoke r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r4 = (com.bumptech.glide.load.model.ModelLoaderFactory) $r15;

     label1:
        if r4 != null goto label4;

        $r10 = r0.<com.bumptech.glide.load.model.GenericLoaderFactory: java.util.Map modelClassToResourceFactories>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.util.Set keySet()>();

        r5 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r12 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.Class) $r12;

        $z1 = virtualinvoke r6.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r1);

        if $z1 == 0 goto label3;

        $r14 = r0.<com.bumptech.glide.load.model.GenericLoaderFactory: java.util.Map modelClassToResourceFactories>;

        $r13 = interfaceinvoke $r14.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);

        r7 = (java.util.Map) $r13;

        if r7 == null goto label3;

        $r16 = interfaceinvoke r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r4 = (com.bumptech.glide.load.model.ModelLoaderFactory) $r16;

        if r4 == null goto label3;

        goto label4;

     label3:
        goto label2;

     label4:
        return r4;
    }

    static void <clinit>()
    {
        com.bumptech.glide.load.model.GenericLoaderFactory$1 $r0;

        $r0 = new com.bumptech.glide.load.model.GenericLoaderFactory$1;

        specialinvoke $r0.<com.bumptech.glide.load.model.GenericLoaderFactory$1: void <init>()>();

        <com.bumptech.glide.load.model.GenericLoaderFactory: com.bumptech.glide.load.model.ModelLoader NULL_MODEL_LOADER> = $r0;

        return;
    }
}
