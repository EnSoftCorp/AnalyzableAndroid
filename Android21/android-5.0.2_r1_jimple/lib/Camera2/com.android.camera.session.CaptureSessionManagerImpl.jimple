public class com.android.camera.session.CaptureSessionManagerImpl extends java.lang.Object implements com.android.camera.session.CaptureSessionManager
{
    private static final com.android.camera.debug.Log$Tag TAG;
    public static final java.lang.String TEMP_SESSIONS;
    private final com.android.camera.app.MediaSaver mMediaSaver;
    private final com.android.camera.session.PlaceholderManager mPlaceholderManager;
    private final com.android.camera.session.SessionStorageManager mSessionStorageManager;
    private final android.content.ContentResolver mContentResolver;
    private final java.util.HashMap mFailedSessionMessages;
    private final android.os.Handler mMainHandler;
    private final java.util.Map mSessions;
    private final java.util.LinkedList mTaskListeners;

    public void <init>(com.android.camera.app.MediaSaver, android.content.ContentResolver, com.android.camera.session.PlaceholderManager, com.android.camera.session.SessionStorageManager)
    {
        com.android.camera.session.CaptureSessionManagerImpl r0;
        com.android.camera.app.MediaSaver r1;
        android.content.ContentResolver r2;
        com.android.camera.session.PlaceholderManager r3;
        com.android.camera.session.SessionStorageManager r4;
        java.util.HashMap $r5, $r9;
        android.os.Handler $r6;
        android.os.Looper $r7;
        java.util.LinkedList $r8;

        r0 := @this: com.android.camera.session.CaptureSessionManagerImpl;

        r1 := @parameter0: com.android.camera.app.MediaSaver;

        r2 := @parameter1: android.content.ContentResolver;

        r3 := @parameter2: com.android.camera.session.PlaceholderManager;

        r4 := @parameter3: com.android.camera.session.SessionStorageManager;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<com.android.camera.session.CaptureSessionManagerImpl: java.util.HashMap mFailedSessionMessages> = $r5;

        $r6 = new android.os.Handler;

        $r7 = staticinvoke <android.os.Looper: android.os.Looper getMainLooper()>();

        specialinvoke $r6.<android.os.Handler: void <init>(android.os.Looper)>($r7);

        r0.<com.android.camera.session.CaptureSessionManagerImpl: android.os.Handler mMainHandler> = $r6;

        $r8 = new java.util.LinkedList;

        specialinvoke $r8.<java.util.LinkedList: void <init>()>();

        r0.<com.android.camera.session.CaptureSessionManagerImpl: java.util.LinkedList mTaskListeners> = $r8;

        $r9 = new java.util.HashMap;

        specialinvoke $r9.<java.util.HashMap: void <init>()>();

        r0.<com.android.camera.session.CaptureSessionManagerImpl: java.util.Map mSessions> = $r9;

        r0.<com.android.camera.session.CaptureSessionManagerImpl: com.android.camera.app.MediaSaver mMediaSaver> = r1;

        r0.<com.android.camera.session.CaptureSessionManagerImpl: android.content.ContentResolver mContentResolver> = r2;

        r0.<com.android.camera.session.CaptureSessionManagerImpl: com.android.camera.session.PlaceholderManager mPlaceholderManager> = r3;

        r0.<com.android.camera.session.CaptureSessionManagerImpl: com.android.camera.session.SessionStorageManager mSessionStorageManager> = r4;

        return;
    }

    public com.android.camera.session.CaptureSession createNewSession(java.lang.String, long, android.location.Location)
    {
        com.android.camera.session.CaptureSessionManagerImpl r0;
        java.lang.String r1;
        long l0;
        android.location.Location r2;
        com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl $r3;

        r0 := @this: com.android.camera.session.CaptureSessionManagerImpl;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        r2 := @parameter2: android.location.Location;

        $r3 = new com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl;

        specialinvoke $r3.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: void <init>(com.android.camera.session.CaptureSessionManagerImpl,java.lang.String,long,android.location.Location,com.android.camera.session.CaptureSessionManagerImpl$1)>(r0, r1, l0, r2, null);

        return $r3;
    }

    public com.android.camera.session.CaptureSession createSession()
    {
        com.android.camera.session.CaptureSessionManagerImpl r0;
        com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl $r1;
        long $l0;

        r0 := @this: com.android.camera.session.CaptureSessionManagerImpl;

        $r1 = new com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        specialinvoke $r1.<com.android.camera.session.CaptureSessionManagerImpl$CaptureSessionImpl: void <init>(com.android.camera.session.CaptureSessionManagerImpl,java.lang.String,long,android.location.Location,com.android.camera.session.CaptureSessionManagerImpl$1)>(r0, null, $l0, null, null);

        return $r1;
    }

    public void putSession(android.net.Uri, com.android.camera.session.CaptureSession)
    {
        com.android.camera.session.CaptureSessionManagerImpl r0;
        android.net.Uri r1;
        com.android.camera.session.CaptureSession r2;
        java.util.Map r3, $r5, $r6;
        java.lang.Throwable r4, $r9;
        java.lang.String $r7;

        r0 := @this: com.android.camera.session.CaptureSessionManagerImpl;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: com.android.camera.session.CaptureSession;

        $r5 = r0.<com.android.camera.session.CaptureSessionManagerImpl: java.util.Map mSessions>;

        r3 = $r5;

        entermonitor $r5;

     label1:
        $r6 = r0.<com.android.camera.session.CaptureSessionManagerImpl: java.util.Map mSessions>;

        $r7 = virtualinvoke r1.<android.net.Uri: java.lang.String toString()>();

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, r2);

        exitmonitor r3;

     label2:
        goto label5;

     label3:
        $r9 := @caughtexception;

        r4 = $r9;

        exitmonitor r3;

     label4:
        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public com.android.camera.session.CaptureSession getSession(android.net.Uri)
    {
        com.android.camera.session.CaptureSessionManagerImpl r0;
        android.net.Uri r1;
        java.util.Map r2, $r4, $r5;
        java.lang.Throwable r3, $r9;
        java.lang.String $r6;
        java.lang.Object $r7;
        com.android.camera.session.CaptureSession $r8;

        r0 := @this: com.android.camera.session.CaptureSessionManagerImpl;

        r1 := @parameter0: android.net.Uri;

        $r4 = r0.<com.android.camera.session.CaptureSessionManagerImpl: java.util.Map mSessions>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.camera.session.CaptureSessionManagerImpl: java.util.Map mSessions>;

        $r6 = virtualinvoke r1.<android.net.Uri: java.lang.String toString()>();

        $r7 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        $r8 = (com.android.camera.session.CaptureSession) $r7;

        exitmonitor r2;

     label2:
        return $r8;

     label3:
        $r9 := @caughtexception;

        r3 = $r9;

        exitmonitor r2;

     label4:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void saveImage(byte[], java.lang.String, long, android.location.Location, int, int, int, com.android.camera.exif.ExifInterface, com.android.camera.app.MediaSaver$OnMediaSavedListener)
    {
        com.android.camera.session.CaptureSessionManagerImpl r0;
        byte[] r1;
        java.lang.String r2;
        long l0;
        android.location.Location r3;
        int i1, i2, i3;
        com.android.camera.exif.ExifInterface r4;
        com.android.camera.app.MediaSaver$OnMediaSavedListener r5;
        android.content.ContentResolver $r6;
        com.android.camera.app.MediaSaver $r7;

        r0 := @this: com.android.camera.session.CaptureSessionManagerImpl;

        r1 := @parameter0: byte[];

        r2 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        r3 := @parameter3: android.location.Location;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        i3 := @parameter6: int;

        r4 := @parameter7: com.android.camera.exif.ExifInterface;

        r5 := @parameter8: com.android.camera.app.MediaSaver$OnMediaSavedListener;

        $r7 = r0.<com.android.camera.session.CaptureSessionManagerImpl: com.android.camera.app.MediaSaver mMediaSaver>;

        $r6 = r0.<com.android.camera.session.CaptureSessionManagerImpl: android.content.ContentResolver mContentResolver>;

        interfaceinvoke $r7.<com.android.camera.app.MediaSaver: void addImage(byte[],java.lang.String,long,android.location.Location,int,int,int,com.android.camera.exif.ExifInterface,com.android.camera.app.MediaSaver$OnMediaSavedListener,android.content.ContentResolver)>(r1, r2, l0, r3, i1, i2, i3, r4, r5, $r6);

        return;
    }

    public void addSessionListener(com.android.camera.session.CaptureSessionManager$SessionListener)
    {
        com.android.camera.session.CaptureSessionManagerImpl r0;
        com.android.camera.session.CaptureSessionManager$SessionListener r1;
        java.util.LinkedList r2, $r4, $r5;
        java.lang.Throwable r3, $r6;

        r0 := @this: com.android.camera.session.CaptureSessionManagerImpl;

        r1 := @parameter0: com.android.camera.session.CaptureSessionManager$SessionListener;

        $r4 = r0.<com.android.camera.session.CaptureSessionManagerImpl: java.util.LinkedList mTaskListeners>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.camera.session.CaptureSessionManagerImpl: java.util.LinkedList mTaskListeners>;

        virtualinvoke $r5.<java.util.LinkedList: boolean add(java.lang.Object)>(r1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void removeSessionListener(com.android.camera.session.CaptureSessionManager$SessionListener)
    {
        com.android.camera.session.CaptureSessionManagerImpl r0;
        com.android.camera.session.CaptureSessionManager$SessionListener r1;
        java.util.LinkedList r2, $r4, $r5;
        java.lang.Throwable r3, $r6;

        r0 := @this: com.android.camera.session.CaptureSessionManagerImpl;

        r1 := @parameter0: com.android.camera.session.CaptureSessionManager$SessionListener;

        $r4 = r0.<com.android.camera.session.CaptureSessionManagerImpl: java.util.LinkedList mTaskListeners>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.camera.session.CaptureSessionManagerImpl: java.util.LinkedList mTaskListeners>;

        virtualinvoke $r5.<java.util.LinkedList: boolean remove(java.lang.Object)>(r1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.io.File getSessionDirectory(java.lang.String) throws java.io.IOException
    {
        com.android.camera.session.CaptureSessionManagerImpl r0;
        java.lang.String r1;
        com.android.camera.session.SessionStorageManager $r2;
        java.io.File $r3;

        r0 := @this: com.android.camera.session.CaptureSessionManagerImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.camera.session.CaptureSessionManagerImpl: com.android.camera.session.SessionStorageManager mSessionStorageManager>;

        $r3 = interfaceinvoke $r2.<com.android.camera.session.SessionStorageManager: java.io.File getSessionDirectory(java.lang.String)>(r1);

        return $r3;
    }

    private void removeSession(java.lang.String)
    {
        com.android.camera.session.CaptureSessionManagerImpl r0;
        java.lang.String r1;
        java.util.Map r2, $r4, $r5;
        java.lang.Throwable r3, $r7;

        r0 := @this: com.android.camera.session.CaptureSessionManagerImpl;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<com.android.camera.session.CaptureSessionManagerImpl: java.util.Map mSessions>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.android.camera.session.CaptureSessionManagerImpl: java.util.Map mSessions>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void notifyTaskQueued(android.net.Uri)
    {
        com.android.camera.session.CaptureSessionManagerImpl r0;
        android.net.Uri r1;
        com.android.camera.session.CaptureSessionManagerImpl$1 $r2;
        android.os.Handler $r3;

        r0 := @this: com.android.camera.session.CaptureSessionManagerImpl;

        r1 := @parameter0: android.net.Uri;

        $r3 = r0.<com.android.camera.session.CaptureSessionManagerImpl: android.os.Handler mMainHandler>;

        $r2 = new com.android.camera.session.CaptureSessionManagerImpl$1;

        specialinvoke $r2.<com.android.camera.session.CaptureSessionManagerImpl$1: void <init>(com.android.camera.session.CaptureSessionManagerImpl,android.net.Uri)>(r0, r1);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    private void notifyTaskDone(android.net.Uri)
    {
        com.android.camera.session.CaptureSessionManagerImpl r0;
        android.net.Uri r1;
        com.android.camera.session.CaptureSessionManagerImpl$2 $r2;
        android.os.Handler $r3;

        r0 := @this: com.android.camera.session.CaptureSessionManagerImpl;

        r1 := @parameter0: android.net.Uri;

        $r3 = r0.<com.android.camera.session.CaptureSessionManagerImpl: android.os.Handler mMainHandler>;

        $r2 = new com.android.camera.session.CaptureSessionManagerImpl$2;

        specialinvoke $r2.<com.android.camera.session.CaptureSessionManagerImpl$2: void <init>(com.android.camera.session.CaptureSessionManagerImpl,android.net.Uri)>(r0, r1);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    private void notifyTaskFailed(android.net.Uri, java.lang.CharSequence)
    {
        com.android.camera.session.CaptureSessionManagerImpl r0;
        android.net.Uri r1;
        java.lang.CharSequence r2;
        com.android.camera.session.CaptureSessionManagerImpl$3 $r3;
        android.os.Handler $r4;

        r0 := @this: com.android.camera.session.CaptureSessionManagerImpl;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.CharSequence;

        $r4 = r0.<com.android.camera.session.CaptureSessionManagerImpl: android.os.Handler mMainHandler>;

        $r3 = new com.android.camera.session.CaptureSessionManagerImpl$3;

        specialinvoke $r3.<com.android.camera.session.CaptureSessionManagerImpl$3: void <init>(com.android.camera.session.CaptureSessionManagerImpl,android.net.Uri,java.lang.CharSequence)>(r0, r1, r2);

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;
    }

    private void notifyTaskProgress(android.net.Uri, int)
    {
        com.android.camera.session.CaptureSessionManagerImpl r0;
        android.net.Uri r1;
        int i0;
        com.android.camera.session.CaptureSessionManagerImpl$4 $r2;
        android.os.Handler $r3;

        r0 := @this: com.android.camera.session.CaptureSessionManagerImpl;

        r1 := @parameter0: android.net.Uri;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.camera.session.CaptureSessionManagerImpl: android.os.Handler mMainHandler>;

        $r2 = new com.android.camera.session.CaptureSessionManagerImpl$4;

        specialinvoke $r2.<com.android.camera.session.CaptureSessionManagerImpl$4: void <init>(com.android.camera.session.CaptureSessionManagerImpl,android.net.Uri,int)>(r0, r1, i0);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    private void notifyTaskProgressText(android.net.Uri, java.lang.CharSequence)
    {
        com.android.camera.session.CaptureSessionManagerImpl r0;
        android.net.Uri r1;
        java.lang.CharSequence r2;
        com.android.camera.session.CaptureSessionManagerImpl$5 $r3;
        android.os.Handler $r4;

        r0 := @this: com.android.camera.session.CaptureSessionManagerImpl;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.CharSequence;

        $r4 = r0.<com.android.camera.session.CaptureSessionManagerImpl: android.os.Handler mMainHandler>;

        $r3 = new com.android.camera.session.CaptureSessionManagerImpl$5;

        specialinvoke $r3.<com.android.camera.session.CaptureSessionManagerImpl$5: void <init>(com.android.camera.session.CaptureSessionManagerImpl,android.net.Uri,java.lang.CharSequence)>(r0, r1, r2);

        virtualinvoke $r4.<android.os.Handler: boolean post(java.lang.Runnable)>($r3);

        return;
    }

    private void notifySessionPreviewAvailable(android.net.Uri)
    {
        com.android.camera.session.CaptureSessionManagerImpl r0;
        android.net.Uri r1;
        com.android.camera.session.CaptureSessionManagerImpl$6 $r2;
        android.os.Handler $r3;

        r0 := @this: com.android.camera.session.CaptureSessionManagerImpl;

        r1 := @parameter0: android.net.Uri;

        $r3 = r0.<com.android.camera.session.CaptureSessionManagerImpl: android.os.Handler mMainHandler>;

        $r2 = new com.android.camera.session.CaptureSessionManagerImpl$6;

        specialinvoke $r2.<com.android.camera.session.CaptureSessionManagerImpl$6: void <init>(com.android.camera.session.CaptureSessionManagerImpl,android.net.Uri)>(r0, r1);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    public boolean hasErrorMessage(android.net.Uri)
    {
        com.android.camera.session.CaptureSessionManagerImpl r0;
        android.net.Uri r1;
        java.util.HashMap $r2;
        boolean $z0;

        r0 := @this: com.android.camera.session.CaptureSessionManagerImpl;

        r1 := @parameter0: android.net.Uri;

        $r2 = r0.<com.android.camera.session.CaptureSessionManagerImpl: java.util.HashMap mFailedSessionMessages>;

        $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public java.lang.CharSequence getErrorMesage(android.net.Uri)
    {
        com.android.camera.session.CaptureSessionManagerImpl r0;
        android.net.Uri r1;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        java.lang.CharSequence $r4;

        r0 := @this: com.android.camera.session.CaptureSessionManagerImpl;

        r1 := @parameter0: android.net.Uri;

        $r2 = r0.<com.android.camera.session.CaptureSessionManagerImpl: java.util.HashMap mFailedSessionMessages>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.lang.CharSequence) $r3;

        return $r4;
    }

    public void removeErrorMessage(android.net.Uri)
    {
        com.android.camera.session.CaptureSessionManagerImpl r0;
        android.net.Uri r1;
        java.util.HashMap $r2;

        r0 := @this: com.android.camera.session.CaptureSessionManagerImpl;

        r1 := @parameter0: android.net.Uri;

        $r2 = r0.<com.android.camera.session.CaptureSessionManagerImpl: java.util.HashMap mFailedSessionMessages>;

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    public void fillTemporarySession(com.android.camera.session.CaptureSessionManager$SessionListener)
    {
        com.android.camera.session.CaptureSessionManagerImpl r0;
        com.android.camera.session.CaptureSessionManager$SessionListener r1;
        com.android.camera.session.CaptureSessionManagerImpl$7 $r2;
        android.os.Handler $r3;

        r0 := @this: com.android.camera.session.CaptureSessionManagerImpl;

        r1 := @parameter0: com.android.camera.session.CaptureSessionManager$SessionListener;

        $r3 = r0.<com.android.camera.session.CaptureSessionManagerImpl: android.os.Handler mMainHandler>;

        $r2 = new com.android.camera.session.CaptureSessionManagerImpl$7;

        specialinvoke $r2.<com.android.camera.session.CaptureSessionManagerImpl$7: void <init>(com.android.camera.session.CaptureSessionManagerImpl,com.android.camera.session.CaptureSessionManager$SessionListener)>(r0, r1);

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>($r2);

        return;
    }

    static void access$000(com.android.camera.session.CaptureSessionManagerImpl, android.net.Uri, int)
    {
        com.android.camera.session.CaptureSessionManagerImpl r0;
        android.net.Uri r1;
        int i0;

        r0 := @parameter0: com.android.camera.session.CaptureSessionManagerImpl;

        r1 := @parameter1: android.net.Uri;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.camera.session.CaptureSessionManagerImpl: void notifyTaskProgress(android.net.Uri,int)>(r1, i0);

        return;
    }

    static void access$100(com.android.camera.session.CaptureSessionManagerImpl, android.net.Uri, java.lang.CharSequence)
    {
        com.android.camera.session.CaptureSessionManagerImpl r0;
        android.net.Uri r1;
        java.lang.CharSequence r2;

        r0 := @parameter0: com.android.camera.session.CaptureSessionManagerImpl;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.lang.CharSequence;

        specialinvoke r0.<com.android.camera.session.CaptureSessionManagerImpl: void notifyTaskProgressText(android.net.Uri,java.lang.CharSequence)>(r1, r2);

        return;
    }

    static com.android.camera.session.PlaceholderManager access$200(com.android.camera.session.CaptureSessionManagerImpl)
    {
        com.android.camera.session.CaptureSessionManagerImpl r0;
        com.android.camera.session.PlaceholderManager $r1;

        r0 := @parameter0: com.android.camera.session.CaptureSessionManagerImpl;

        $r1 = r0.<com.android.camera.session.CaptureSessionManagerImpl: com.android.camera.session.PlaceholderManager mPlaceholderManager>;

        return $r1;
    }

    static void access$300(com.android.camera.session.CaptureSessionManagerImpl, android.net.Uri)
    {
        com.android.camera.session.CaptureSessionManagerImpl r0;
        android.net.Uri r1;

        r0 := @parameter0: com.android.camera.session.CaptureSessionManagerImpl;

        r1 := @parameter1: android.net.Uri;

        specialinvoke r0.<com.android.camera.session.CaptureSessionManagerImpl: void notifyTaskQueued(android.net.Uri)>(r1);

        return;
    }

    static java.util.Map access$400(com.android.camera.session.CaptureSessionManagerImpl)
    {
        com.android.camera.session.CaptureSessionManagerImpl r0;
        java.util.Map $r1;

        r0 := @parameter0: com.android.camera.session.CaptureSessionManagerImpl;

        $r1 = r0.<com.android.camera.session.CaptureSessionManagerImpl: java.util.Map mSessions>;

        return $r1;
    }

    static void access$500(com.android.camera.session.CaptureSessionManagerImpl, java.lang.String)
    {
        com.android.camera.session.CaptureSessionManagerImpl r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.camera.session.CaptureSessionManagerImpl;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.camera.session.CaptureSessionManagerImpl: void removeSession(java.lang.String)>(r1);

        return;
    }

    static android.content.ContentResolver access$600(com.android.camera.session.CaptureSessionManagerImpl)
    {
        com.android.camera.session.CaptureSessionManagerImpl r0;
        android.content.ContentResolver $r1;

        r0 := @parameter0: com.android.camera.session.CaptureSessionManagerImpl;

        $r1 = r0.<com.android.camera.session.CaptureSessionManagerImpl: android.content.ContentResolver mContentResolver>;

        return $r1;
    }

    static com.android.camera.app.MediaSaver access$700(com.android.camera.session.CaptureSessionManagerImpl)
    {
        com.android.camera.session.CaptureSessionManagerImpl r0;
        com.android.camera.app.MediaSaver $r1;

        r0 := @parameter0: com.android.camera.session.CaptureSessionManagerImpl;

        $r1 = r0.<com.android.camera.session.CaptureSessionManagerImpl: com.android.camera.app.MediaSaver mMediaSaver>;

        return $r1;
    }

    static void access$800(com.android.camera.session.CaptureSessionManagerImpl, android.net.Uri)
    {
        com.android.camera.session.CaptureSessionManagerImpl r0;
        android.net.Uri r1;

        r0 := @parameter0: com.android.camera.session.CaptureSessionManagerImpl;

        r1 := @parameter1: android.net.Uri;

        specialinvoke r0.<com.android.camera.session.CaptureSessionManagerImpl: void notifyTaskDone(android.net.Uri)>(r1);

        return;
    }

    static com.android.camera.debug.Log$Tag access$900()
    {
        com.android.camera.debug.Log$Tag $r0;

        $r0 = <com.android.camera.session.CaptureSessionManagerImpl: com.android.camera.debug.Log$Tag TAG>;

        return $r0;
    }

    static void access$1000(com.android.camera.session.CaptureSessionManagerImpl, android.net.Uri)
    {
        com.android.camera.session.CaptureSessionManagerImpl r0;
        android.net.Uri r1;

        r0 := @parameter0: com.android.camera.session.CaptureSessionManagerImpl;

        r1 := @parameter1: android.net.Uri;

        specialinvoke r0.<com.android.camera.session.CaptureSessionManagerImpl: void notifySessionPreviewAvailable(android.net.Uri)>(r1);

        return;
    }

    static java.util.HashMap access$1200(com.android.camera.session.CaptureSessionManagerImpl)
    {
        com.android.camera.session.CaptureSessionManagerImpl r0;
        java.util.HashMap $r1;

        r0 := @parameter0: com.android.camera.session.CaptureSessionManagerImpl;

        $r1 = r0.<com.android.camera.session.CaptureSessionManagerImpl: java.util.HashMap mFailedSessionMessages>;

        return $r1;
    }

    static void access$1300(com.android.camera.session.CaptureSessionManagerImpl, android.net.Uri, java.lang.CharSequence)
    {
        com.android.camera.session.CaptureSessionManagerImpl r0;
        android.net.Uri r1;
        java.lang.CharSequence r2;

        r0 := @parameter0: com.android.camera.session.CaptureSessionManagerImpl;

        r1 := @parameter1: android.net.Uri;

        r2 := @parameter2: java.lang.CharSequence;

        specialinvoke r0.<com.android.camera.session.CaptureSessionManagerImpl: void notifyTaskFailed(android.net.Uri,java.lang.CharSequence)>(r1, r2);

        return;
    }

    static java.util.LinkedList access$1500(com.android.camera.session.CaptureSessionManagerImpl)
    {
        com.android.camera.session.CaptureSessionManagerImpl r0;
        java.util.LinkedList $r1;

        r0 := @parameter0: com.android.camera.session.CaptureSessionManagerImpl;

        $r1 = r0.<com.android.camera.session.CaptureSessionManagerImpl: java.util.LinkedList mTaskListeners>;

        return $r1;
    }

    static void <clinit>()
    {
        com.android.camera.debug.Log$Tag $r0;

        <com.android.camera.session.CaptureSessionManagerImpl: java.lang.String TEMP_SESSIONS> = "TEMP_SESSIONS";

        $r0 = new com.android.camera.debug.Log$Tag;

        specialinvoke $r0.<com.android.camera.debug.Log$Tag: void <init>(java.lang.String)>("CaptureSessMgrImpl");

        <com.android.camera.session.CaptureSessionManagerImpl: com.android.camera.debug.Log$Tag TAG> = $r0;

        return;
    }
}
