public class com.bumptech.glide.load.resource.gif.GifDrawable extends android.graphics.drawable.Drawable implements android.graphics.drawable.Animatable, com.bumptech.glide.load.resource.gif.GifFrameManager$FrameCallback
{
    private final android.graphics.Paint paint;
    private final com.bumptech.glide.load.resource.gif.GifFrameManager frameManager;
    private int width;
    private int height;
    private com.bumptech.glide.gifdecoder.GifDecoder decoder;
    private boolean isRunning;
    private android.graphics.Bitmap currentFrame;
    private boolean isRecycled;

    public void <init>(com.bumptech.glide.gifdecoder.GifDecoder, com.bumptech.glide.load.resource.gif.GifFrameManager)
    {
        com.bumptech.glide.load.resource.gif.GifDrawable r0;
        com.bumptech.glide.gifdecoder.GifDecoder r1;
        com.bumptech.glide.load.resource.gif.GifFrameManager r2;
        android.graphics.Paint $r3;

        r0 := @this: com.bumptech.glide.load.resource.gif.GifDrawable;

        r1 := @parameter0: com.bumptech.glide.gifdecoder.GifDecoder;

        r2 := @parameter1: com.bumptech.glide.load.resource.gif.GifFrameManager;

        specialinvoke r0.<android.graphics.drawable.Drawable: void <init>()>();

        r0.<com.bumptech.glide.load.resource.gif.GifDrawable: com.bumptech.glide.gifdecoder.GifDecoder decoder> = r1;

        r0.<com.bumptech.glide.load.resource.gif.GifDrawable: com.bumptech.glide.load.resource.gif.GifFrameManager frameManager> = r2;

        r0.<com.bumptech.glide.load.resource.gif.GifDrawable: int width> = -1;

        r0.<com.bumptech.glide.load.resource.gif.GifDrawable: int height> = -1;

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>()>();

        r0.<com.bumptech.glide.load.resource.gif.GifDrawable: android.graphics.Paint paint> = $r3;

        return;
    }

    public void start()
    {
        com.bumptech.glide.load.resource.gif.GifDrawable r0;
        boolean $z0;
        com.bumptech.glide.load.resource.gif.GifFrameManager $r1;

        r0 := @this: com.bumptech.glide.load.resource.gif.GifDrawable;

        $z0 = r0.<com.bumptech.glide.load.resource.gif.GifDrawable: boolean isRunning>;

        if $z0 != 0 goto label1;

        r0.<com.bumptech.glide.load.resource.gif.GifDrawable: boolean isRunning> = 1;

        $r1 = r0.<com.bumptech.glide.load.resource.gif.GifDrawable: com.bumptech.glide.load.resource.gif.GifFrameManager frameManager>;

        virtualinvoke $r1.<com.bumptech.glide.load.resource.gif.GifFrameManager: void getNextFrame(com.bumptech.glide.load.resource.gif.GifFrameManager$FrameCallback)>(r0);

        virtualinvoke r0.<com.bumptech.glide.load.resource.gif.GifDrawable: void invalidateSelf()>();

     label1:
        return;
    }

    public boolean setVisible(boolean, boolean)
    {
        com.bumptech.glide.load.resource.gif.GifDrawable r0;
        boolean z0, z1, $z2;

        r0 := @this: com.bumptech.glide.load.resource.gif.GifDrawable;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        if z0 != 0 goto label1;

        virtualinvoke r0.<com.bumptech.glide.load.resource.gif.GifDrawable: void stop()>();

        goto label2;

     label1:
        virtualinvoke r0.<com.bumptech.glide.load.resource.gif.GifDrawable: void start()>();

     label2:
        $z2 = specialinvoke r0.<android.graphics.drawable.Drawable: boolean setVisible(boolean,boolean)>(z0, z1);

        return $z2;
    }

    public int getIntrinsicWidth()
    {
        com.bumptech.glide.load.resource.gif.GifDrawable r0;
        int $i0;

        r0 := @this: com.bumptech.glide.load.resource.gif.GifDrawable;

        $i0 = r0.<com.bumptech.glide.load.resource.gif.GifDrawable: int width>;

        return $i0;
    }

    public int getIntrinsicHeight()
    {
        com.bumptech.glide.load.resource.gif.GifDrawable r0;
        int $i0;

        r0 := @this: com.bumptech.glide.load.resource.gif.GifDrawable;

        $i0 = r0.<com.bumptech.glide.load.resource.gif.GifDrawable: int height>;

        return $i0;
    }

    public void stop()
    {
        com.bumptech.glide.load.resource.gif.GifDrawable r0;

        r0 := @this: com.bumptech.glide.load.resource.gif.GifDrawable;

        r0.<com.bumptech.glide.load.resource.gif.GifDrawable: boolean isRunning> = 0;

        return;
    }

    public boolean isRunning()
    {
        com.bumptech.glide.load.resource.gif.GifDrawable r0;
        boolean $z0;

        r0 := @this: com.bumptech.glide.load.resource.gif.GifDrawable;

        $z0 = r0.<com.bumptech.glide.load.resource.gif.GifDrawable: boolean isRunning>;

        return $z0;
    }

    void setIsRunning(boolean)
    {
        com.bumptech.glide.load.resource.gif.GifDrawable r0;
        boolean z0;

        r0 := @this: com.bumptech.glide.load.resource.gif.GifDrawable;

        z0 := @parameter0: boolean;

        r0.<com.bumptech.glide.load.resource.gif.GifDrawable: boolean isRunning> = z0;

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        com.bumptech.glide.load.resource.gif.GifDrawable r0;
        android.graphics.Canvas r1;
        android.graphics.Bitmap $r2, $r4;
        android.graphics.Paint $r3;

        r0 := @this: com.bumptech.glide.load.resource.gif.GifDrawable;

        r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<com.bumptech.glide.load.resource.gif.GifDrawable: android.graphics.Bitmap currentFrame>;

        if $r2 == null goto label1;

        $r4 = r0.<com.bumptech.glide.load.resource.gif.GifDrawable: android.graphics.Bitmap currentFrame>;

        $r3 = r0.<com.bumptech.glide.load.resource.gif.GifDrawable: android.graphics.Paint paint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>($r4, 0.0F, 0.0F, $r3);

     label1:
        return;
    }

    public void setAlpha(int)
    {
        com.bumptech.glide.load.resource.gif.GifDrawable r0;
        int i0;
        android.graphics.Paint $r1;

        r0 := @this: com.bumptech.glide.load.resource.gif.GifDrawable;

        i0 := @parameter0: int;

        $r1 = r0.<com.bumptech.glide.load.resource.gif.GifDrawable: android.graphics.Paint paint>;

        virtualinvoke $r1.<android.graphics.Paint: void setAlpha(int)>(i0);

        return;
    }

    public void setColorFilter(android.graphics.ColorFilter)
    {
        com.bumptech.glide.load.resource.gif.GifDrawable r0;
        android.graphics.ColorFilter r1;
        android.graphics.Paint $r2;

        r0 := @this: com.bumptech.glide.load.resource.gif.GifDrawable;

        r1 := @parameter0: android.graphics.ColorFilter;

        $r2 = r0.<com.bumptech.glide.load.resource.gif.GifDrawable: android.graphics.Paint paint>;

        virtualinvoke $r2.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(r1);

        return;
    }

    public int getOpacity()
    {
        com.bumptech.glide.load.resource.gif.GifDrawable r0;
        com.bumptech.glide.gifdecoder.GifDecoder $r1;
        boolean $z0;
        byte $b0;

        r0 := @this: com.bumptech.glide.load.resource.gif.GifDrawable;

        $r1 = r0.<com.bumptech.glide.load.resource.gif.GifDrawable: com.bumptech.glide.gifdecoder.GifDecoder decoder>;

        $z0 = virtualinvoke $r1.<com.bumptech.glide.gifdecoder.GifDecoder: boolean isTransparent()>();

        if $z0 == 0 goto label1;

        $b0 = -2;

        goto label2;

     label1:
        $b0 = -1;

     label2:
        return $b0;
    }

    public void onFrameRead(android.graphics.Bitmap)
    {
        com.bumptech.glide.load.resource.gif.GifDrawable r0;
        android.graphics.Bitmap r1;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0;
        com.bumptech.glide.load.resource.gif.GifFrameManager $r2;
        android.graphics.drawable.Drawable$Callback $r3;

        r0 := @this: com.bumptech.glide.load.resource.gif.GifDrawable;

        r1 := @parameter0: android.graphics.Bitmap;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 11 goto label1;

        $r3 = virtualinvoke r0.<com.bumptech.glide.load.resource.gif.GifDrawable: android.graphics.drawable.Drawable$Callback getCallback()>();

        if $r3 != null goto label1;

        virtualinvoke r0.<com.bumptech.glide.load.resource.gif.GifDrawable: void stop()>();

        return;

     label1:
        $z0 = r0.<com.bumptech.glide.load.resource.gif.GifDrawable: boolean isRunning>;

        if $z0 != 0 goto label2;

        return;

     label2:
        $i1 = r0.<com.bumptech.glide.load.resource.gif.GifDrawable: int width>;

        if $i1 != -1 goto label3;

        $i4 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        r0.<com.bumptech.glide.load.resource.gif.GifDrawable: int width> = $i4;

     label3:
        $i2 = r0.<com.bumptech.glide.load.resource.gif.GifDrawable: int height>;

        if $i2 != -1 goto label4;

        $i3 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        r0.<com.bumptech.glide.load.resource.gif.GifDrawable: int height> = $i3;

     label4:
        if r1 == null goto label5;

        r0.<com.bumptech.glide.load.resource.gif.GifDrawable: android.graphics.Bitmap currentFrame> = r1;

        virtualinvoke r0.<com.bumptech.glide.load.resource.gif.GifDrawable: void invalidateSelf()>();

     label5:
        $r2 = r0.<com.bumptech.glide.load.resource.gif.GifDrawable: com.bumptech.glide.load.resource.gif.GifFrameManager frameManager>;

        virtualinvoke $r2.<com.bumptech.glide.load.resource.gif.GifFrameManager: void getNextFrame(com.bumptech.glide.load.resource.gif.GifFrameManager$FrameCallback)>(r0);

        return;
    }

    public void recycle()
    {
        com.bumptech.glide.load.resource.gif.GifDrawable r0;
        com.bumptech.glide.load.resource.gif.GifFrameManager $r1;

        r0 := @this: com.bumptech.glide.load.resource.gif.GifDrawable;

        r0.<com.bumptech.glide.load.resource.gif.GifDrawable: boolean isRecycled> = 1;

        $r1 = r0.<com.bumptech.glide.load.resource.gif.GifDrawable: com.bumptech.glide.load.resource.gif.GifFrameManager frameManager>;

        virtualinvoke $r1.<com.bumptech.glide.load.resource.gif.GifFrameManager: void clear()>();

        return;
    }

    public boolean isRecycled()
    {
        com.bumptech.glide.load.resource.gif.GifDrawable r0;
        boolean $z0;

        r0 := @this: com.bumptech.glide.load.resource.gif.GifDrawable;

        $z0 = r0.<com.bumptech.glide.load.resource.gif.GifDrawable: boolean isRecycled>;

        return $z0;
    }
}
