class com.adobe.xmp.impl.XMPIteratorImpl$NodeIterator$1 extends java.lang.Object implements com.adobe.xmp.properties.XMPPropertyInfo
{
    final java.lang.String val$baseNS;
    final java.lang.String val$path;
    final java.lang.Object val$value;
    final com.adobe.xmp.impl.XMPNode val$node;
    final com.adobe.xmp.impl.XMPIteratorImpl$NodeIterator this$1;

    void <init>(com.adobe.xmp.impl.XMPIteratorImpl$NodeIterator, java.lang.String, java.lang.String, java.lang.Object, com.adobe.xmp.impl.XMPNode)
    {
        com.adobe.xmp.impl.XMPIteratorImpl$NodeIterator$1 r0;
        com.adobe.xmp.impl.XMPIteratorImpl$NodeIterator r1;
        java.lang.String r2, r3;
        java.lang.Object r4;
        com.adobe.xmp.impl.XMPNode r5;

        r0 := @this: com.adobe.xmp.impl.XMPIteratorImpl$NodeIterator$1;

        r1 := @parameter0: com.adobe.xmp.impl.XMPIteratorImpl$NodeIterator;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.Object;

        r5 := @parameter4: com.adobe.xmp.impl.XMPNode;

        r0.<com.adobe.xmp.impl.XMPIteratorImpl$NodeIterator$1: com.adobe.xmp.impl.XMPIteratorImpl$NodeIterator this$1> = r1;

        r0.<com.adobe.xmp.impl.XMPIteratorImpl$NodeIterator$1: java.lang.String val$baseNS> = r2;

        r0.<com.adobe.xmp.impl.XMPIteratorImpl$NodeIterator$1: java.lang.String val$path> = r3;

        r0.<com.adobe.xmp.impl.XMPIteratorImpl$NodeIterator$1: java.lang.Object val$value> = r4;

        r0.<com.adobe.xmp.impl.XMPIteratorImpl$NodeIterator$1: com.adobe.xmp.impl.XMPNode val$node> = r5;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String getNamespace()
    {
        com.adobe.xmp.impl.XMPIteratorImpl$NodeIterator$1 r0;
        java.lang.String $r1;

        r0 := @this: com.adobe.xmp.impl.XMPIteratorImpl$NodeIterator$1;

        $r1 = r0.<com.adobe.xmp.impl.XMPIteratorImpl$NodeIterator$1: java.lang.String val$baseNS>;

        return $r1;
    }

    public java.lang.String getPath()
    {
        com.adobe.xmp.impl.XMPIteratorImpl$NodeIterator$1 r0;
        java.lang.String $r1;

        r0 := @this: com.adobe.xmp.impl.XMPIteratorImpl$NodeIterator$1;

        $r1 = r0.<com.adobe.xmp.impl.XMPIteratorImpl$NodeIterator$1: java.lang.String val$path>;

        return $r1;
    }

    public java.lang.Object getValue()
    {
        com.adobe.xmp.impl.XMPIteratorImpl$NodeIterator$1 r0;
        java.lang.Object $r1;

        r0 := @this: com.adobe.xmp.impl.XMPIteratorImpl$NodeIterator$1;

        $r1 = r0.<com.adobe.xmp.impl.XMPIteratorImpl$NodeIterator$1: java.lang.Object val$value>;

        return $r1;
    }

    public com.adobe.xmp.options.PropertyOptions getOptions()
    {
        com.adobe.xmp.impl.XMPIteratorImpl$NodeIterator$1 r0;
        com.adobe.xmp.impl.XMPNode $r1;
        com.adobe.xmp.options.PropertyOptions $r2;

        r0 := @this: com.adobe.xmp.impl.XMPIteratorImpl$NodeIterator$1;

        $r1 = r0.<com.adobe.xmp.impl.XMPIteratorImpl$NodeIterator$1: com.adobe.xmp.impl.XMPNode val$node>;

        $r2 = virtualinvoke $r1.<com.adobe.xmp.impl.XMPNode: com.adobe.xmp.options.PropertyOptions getOptions()>();

        return $r2;
    }

    public java.lang.String getLanguage()
    {
        com.adobe.xmp.impl.XMPIteratorImpl$NodeIterator$1 r0;

        r0 := @this: com.adobe.xmp.impl.XMPIteratorImpl$NodeIterator$1;

        return null;
    }
}
