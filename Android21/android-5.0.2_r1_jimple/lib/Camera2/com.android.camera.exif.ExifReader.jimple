class com.android.camera.exif.ExifReader extends java.lang.Object
{
    private static final com.android.camera.debug.Log$Tag TAG;
    private final com.android.camera.exif.ExifInterface mInterface;

    void <init>(com.android.camera.exif.ExifInterface)
    {
        com.android.camera.exif.ExifReader r0;
        com.android.camera.exif.ExifInterface r1;

        r0 := @this: com.android.camera.exif.ExifReader;

        r1 := @parameter0: com.android.camera.exif.ExifInterface;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.camera.exif.ExifReader: com.android.camera.exif.ExifInterface mInterface> = r1;

        return;
    }

    protected com.android.camera.exif.ExifData read(java.io.InputStream) throws com.android.camera.exif.ExifInvalidFormatException, java.io.IOException
    {
        com.android.camera.exif.ExifReader r0;
        java.io.InputStream r1;
        com.android.camera.exif.ExifParser r2;
        com.android.camera.exif.ExifData r3, $r6;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i11;
        byte[] r4, r15;
        com.android.camera.exif.ExifInterface $r5;
        java.nio.ByteOrder $r7;
        com.android.camera.exif.IfdData $r8, $r11, $r12;
        com.android.camera.debug.Log$Tag $r9, $r10;
        short $s9;
        boolean $z0;
        com.android.camera.exif.ExifTag r13, r14;

        r0 := @this: com.android.camera.exif.ExifReader;

        r1 := @parameter0: java.io.InputStream;

        $r5 = r0.<com.android.camera.exif.ExifReader: com.android.camera.exif.ExifInterface mInterface>;

        r2 = staticinvoke <com.android.camera.exif.ExifParser: com.android.camera.exif.ExifParser parse(java.io.InputStream,com.android.camera.exif.ExifInterface)>(r1, $r5);

        $r6 = new com.android.camera.exif.ExifData;

        $r7 = virtualinvoke r2.<com.android.camera.exif.ExifParser: java.nio.ByteOrder getByteOrder()>();

        specialinvoke $r6.<com.android.camera.exif.ExifData: void <init>(java.nio.ByteOrder)>($r7);

        r3 = $r6;

        i0 = virtualinvoke r2.<com.android.camera.exif.ExifParser: int next()>();

     label01:
        if i0 == 5 goto label12;

        tableswitch(i0)
        {
            case 0: goto label02;
            case 1: goto label03;
            case 2: goto label05;
            case 3: goto label07;
            case 4: goto label09;
            default: goto label11;
        };

     label02:
        $r8 = new com.android.camera.exif.IfdData;

        $i1 = virtualinvoke r2.<com.android.camera.exif.ExifParser: int getCurrentIfd()>();

        specialinvoke $r8.<com.android.camera.exif.IfdData: void <init>(int)>($i1);

        virtualinvoke r3.<com.android.camera.exif.ExifData: void addIfdData(com.android.camera.exif.IfdData)>($r8);

        goto label11;

     label03:
        r13 = virtualinvoke r2.<com.android.camera.exif.ExifParser: com.android.camera.exif.ExifTag getTag()>();

        $z0 = virtualinvoke r13.<com.android.camera.exif.ExifTag: boolean hasValue()>();

        if $z0 != 0 goto label04;

        virtualinvoke r2.<com.android.camera.exif.ExifParser: void registerForTagValue(com.android.camera.exif.ExifTag)>(r13);

        goto label11;

     label04:
        $i11 = virtualinvoke r13.<com.android.camera.exif.ExifTag: int getIfd()>();

        $r12 = virtualinvoke r3.<com.android.camera.exif.ExifData: com.android.camera.exif.IfdData getIfdData(int)>($i11);

        virtualinvoke $r12.<com.android.camera.exif.IfdData: com.android.camera.exif.ExifTag setTag(com.android.camera.exif.ExifTag)>(r13);

        goto label11;

     label05:
        r14 = virtualinvoke r2.<com.android.camera.exif.ExifParser: com.android.camera.exif.ExifTag getTag()>();

        $s9 = virtualinvoke r14.<com.android.camera.exif.ExifTag: short getDataType()>();

        if $s9 != 7 goto label06;

        virtualinvoke r2.<com.android.camera.exif.ExifParser: void readFullTagValue(com.android.camera.exif.ExifTag)>(r14);

     label06:
        $i10 = virtualinvoke r14.<com.android.camera.exif.ExifTag: int getIfd()>();

        $r11 = virtualinvoke r3.<com.android.camera.exif.ExifData: com.android.camera.exif.IfdData getIfdData(int)>($i10);

        virtualinvoke $r11.<com.android.camera.exif.IfdData: com.android.camera.exif.ExifTag setTag(com.android.camera.exif.ExifTag)>(r14);

        goto label11;

     label07:
        $i7 = virtualinvoke r2.<com.android.camera.exif.ExifParser: int getCompressedImageSize()>();

        r4 = newarray (byte)[$i7];

        $i6 = lengthof r4;

        $i8 = virtualinvoke r2.<com.android.camera.exif.ExifParser: int read(byte[])>(r4);

        if $i6 != $i8 goto label08;

        virtualinvoke r3.<com.android.camera.exif.ExifData: void setCompressedThumbnail(byte[])>(r4);

        goto label11;

     label08:
        $r10 = <com.android.camera.exif.ExifReader: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void w(com.android.camera.debug.Log$Tag,java.lang.String)>($r10, "Failed to read the compressed thumbnail");

        goto label11;

     label09:
        $i2 = virtualinvoke r2.<com.android.camera.exif.ExifParser: int getStripSize()>();

        r15 = newarray (byte)[$i2];

        $i4 = lengthof r15;

        $i3 = virtualinvoke r2.<com.android.camera.exif.ExifParser: int read(byte[])>(r15);

        if $i4 != $i3 goto label10;

        $i5 = virtualinvoke r2.<com.android.camera.exif.ExifParser: int getStripIndex()>();

        virtualinvoke r3.<com.android.camera.exif.ExifData: void setStripBytes(int,byte[])>($i5, r15);

        goto label11;

     label10:
        $r9 = <com.android.camera.exif.ExifReader: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void w(com.android.camera.debug.Log$Tag,java.lang.String)>($r9, "Failed to read the strip bytes");

     label11:
        i0 = virtualinvoke r2.<com.android.camera.exif.ExifParser: int next()>();

        goto label01;

     label12:
        return r3;
    }

    static void <clinit>()
    {
        com.android.camera.debug.Log$Tag $r0;

        $r0 = new com.android.camera.debug.Log$Tag;

        specialinvoke $r0.<com.android.camera.debug.Log$Tag: void <init>(java.lang.String)>("ExifReader");

        <com.android.camera.exif.ExifReader: com.android.camera.debug.Log$Tag TAG> = $r0;

        return;
    }
}
