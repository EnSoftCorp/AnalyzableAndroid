public class com.android.volley.toolbox.ImageRequest extends com.android.volley.Request
{
    private static final int IMAGE_TIMEOUT_MS;
    private static final int IMAGE_MAX_RETRIES;
    private static final float IMAGE_BACKOFF_MULT;
    private final com.android.volley.Response$Listener mListener;
    private final android.graphics.Bitmap$Config mDecodeConfig;
    private final int mMaxWidth;
    private final int mMaxHeight;
    private static final java.lang.Object sDecodeLock;

    public void <init>(java.lang.String, com.android.volley.Response$Listener, int, int, android.graphics.Bitmap$Config, com.android.volley.Response$ErrorListener)
    {
        com.android.volley.toolbox.ImageRequest r0;
        java.lang.String r1;
        com.android.volley.Response$Listener r2;
        int i0, i1;
        android.graphics.Bitmap$Config r3;
        com.android.volley.Response$ErrorListener r4;
        com.android.volley.DefaultRetryPolicy $r5;

        r0 := @this: com.android.volley.toolbox.ImageRequest;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.volley.Response$Listener;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r3 := @parameter4: android.graphics.Bitmap$Config;

        r4 := @parameter5: com.android.volley.Response$ErrorListener;

        specialinvoke r0.<com.android.volley.Request: void <init>(int,java.lang.String,com.android.volley.Response$ErrorListener)>(0, r1, r4);

        $r5 = new com.android.volley.DefaultRetryPolicy;

        specialinvoke $r5.<com.android.volley.DefaultRetryPolicy: void <init>(int,int,float)>(1000, 2, 2.0F);

        virtualinvoke r0.<com.android.volley.toolbox.ImageRequest: com.android.volley.Request setRetryPolicy(com.android.volley.RetryPolicy)>($r5);

        r0.<com.android.volley.toolbox.ImageRequest: com.android.volley.Response$Listener mListener> = r2;

        r0.<com.android.volley.toolbox.ImageRequest: android.graphics.Bitmap$Config mDecodeConfig> = r3;

        r0.<com.android.volley.toolbox.ImageRequest: int mMaxWidth> = i0;

        r0.<com.android.volley.toolbox.ImageRequest: int mMaxHeight> = i1;

        return;
    }

    public com.android.volley.Request$Priority getPriority()
    {
        com.android.volley.toolbox.ImageRequest r0;
        com.android.volley.Request$Priority $r1;

        r0 := @this: com.android.volley.toolbox.ImageRequest;

        $r1 = <com.android.volley.Request$Priority: com.android.volley.Request$Priority LOW>;

        return $r1;
    }

    private static int getResizedDimension(int, int, int, int)
    {
        int i0, i1, i2, i3, i4, $i6;
        double d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, d12;
        byte $b5;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        if i0 != 0 goto label1;

        if i1 != 0 goto label1;

        return i2;

     label1:
        if i0 != 0 goto label2;

        $d10 = (double) i1;

        $d8 = (double) i3;

        d0 = $d10 / $d8;

        $d9 = (double) i2;

        $d11 = $d9 * d0;

        $i6 = (int) $d11;

        return $i6;

     label2:
        if i1 != 0 goto label3;

        return i0;

     label3:
        $d2 = (double) i3;

        $d1 = (double) i2;

        d12 = $d2 / $d1;

        i4 = i0;

        $d3 = (double) i4;

        $d5 = $d3 * d12;

        $d4 = (double) i1;

        $b5 = $d5 cmpl $d4;

        if $b5 <= 0 goto label4;

        $d6 = (double) i1;

        $d7 = $d6 / d12;

        i4 = (int) $d7;

     label4:
        return i4;
    }

    protected com.android.volley.Response parseNetworkResponse(com.android.volley.NetworkResponse)
    {
        com.android.volley.toolbox.ImageRequest r0;
        com.android.volley.NetworkResponse r1;
        java.lang.Object r2, $r5;
        java.lang.OutOfMemoryError r3, $r7;
        java.lang.Throwable r4, $r14;
        com.android.volley.Response $r6, $r13;
        java.lang.Object[] $r8;
        byte[] $r9;
        int $i0;
        java.lang.Integer $r10;
        com.android.volley.ParseError $r11;
        java.lang.String $r12;

        r0 := @this: com.android.volley.toolbox.ImageRequest;

        r1 := @parameter0: com.android.volley.NetworkResponse;

        $r5 = <com.android.volley.toolbox.ImageRequest: java.lang.Object sDecodeLock>;

        r2 = $r5;

        entermonitor $r5;

     label1:
        $r6 = specialinvoke r0.<com.android.volley.toolbox.ImageRequest: com.android.volley.Response doParse(com.android.volley.NetworkResponse)>(r1);

     label2:
        exitmonitor r2;

     label3:
        return $r6;

     label4:
        $r7 := @caughtexception;

        r3 = $r7;

        $r8 = newarray (java.lang.Object)[2];

        $r9 = r1.<com.android.volley.NetworkResponse: byte[] data>;

        $i0 = lengthof $r9;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r8[0] = $r10;

        $r12 = virtualinvoke r0.<com.android.volley.toolbox.ImageRequest: java.lang.String getUrl()>();

        $r8[1] = $r12;

        staticinvoke <com.android.volley.VolleyLog: void e(java.lang.String,java.lang.Object[])>("Caught OOM for %d byte image, url=%s", $r8);

        $r11 = new com.android.volley.ParseError;

        specialinvoke $r11.<com.android.volley.ParseError: void <init>(java.lang.Throwable)>(r3);

        $r13 = staticinvoke <com.android.volley.Response: com.android.volley.Response error(com.android.volley.VolleyError)>($r11);

        exitmonitor r2;

     label5:
        return $r13;

     label6:
        $r14 := @caughtexception;

        r4 = $r14;

        exitmonitor r2;

     label7:
        throw r4;

        catch java.lang.OutOfMemoryError from label1 to label2 with label4;
        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private com.android.volley.Response doParse(com.android.volley.NetworkResponse)
    {
        com.android.volley.toolbox.ImageRequest r0;
        com.android.volley.NetworkResponse r1;
        byte[] r2;
        android.graphics.BitmapFactory$Options r3, $r5;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        android.graphics.Bitmap r4, r11;
        com.android.volley.Cache$Entry $r6;
        com.android.volley.ParseError $r7;
        com.android.volley.Response $r8, $r9;
        android.graphics.Bitmap$Config $r10;

        r0 := @this: com.android.volley.toolbox.ImageRequest;

        r1 := @parameter0: com.android.volley.NetworkResponse;

        r2 = r1.<com.android.volley.NetworkResponse: byte[] data>;

        $r5 = new android.graphics.BitmapFactory$Options;

        specialinvoke $r5.<android.graphics.BitmapFactory$Options: void <init>()>();

        r3 = $r5;

        $i4 = r0.<com.android.volley.toolbox.ImageRequest: int mMaxWidth>;

        if $i4 != 0 goto label1;

        $i14 = r0.<com.android.volley.toolbox.ImageRequest: int mMaxHeight>;

        if $i14 != 0 goto label1;

        $r10 = r0.<com.android.volley.toolbox.ImageRequest: android.graphics.Bitmap$Config mDecodeConfig>;

        r3.<android.graphics.BitmapFactory$Options: android.graphics.Bitmap$Config inPreferredConfig> = $r10;

        $i15 = lengthof r2;

        r11 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>(r2, 0, $i15, r3);

        goto label4;

     label1:
        r3.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 1;

        $i5 = lengthof r2;

        staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>(r2, 0, $i5, r3);

        i0 = r3.<android.graphics.BitmapFactory$Options: int outWidth>;

        i1 = r3.<android.graphics.BitmapFactory$Options: int outHeight>;

        $i7 = r0.<com.android.volley.toolbox.ImageRequest: int mMaxWidth>;

        $i6 = r0.<com.android.volley.toolbox.ImageRequest: int mMaxHeight>;

        i2 = staticinvoke <com.android.volley.toolbox.ImageRequest: int getResizedDimension(int,int,int,int)>($i7, $i6, i0, i1);

        $i9 = r0.<com.android.volley.toolbox.ImageRequest: int mMaxHeight>;

        $i8 = r0.<com.android.volley.toolbox.ImageRequest: int mMaxWidth>;

        i3 = staticinvoke <com.android.volley.toolbox.ImageRequest: int getResizedDimension(int,int,int,int)>($i9, $i8, i1, i0);

        r3.<android.graphics.BitmapFactory$Options: boolean inJustDecodeBounds> = 0;

        $i11 = staticinvoke <com.android.volley.toolbox.ImageRequest: int findBestSampleSize(int,int,int,int)>(i0, i1, i2, i3);

        r3.<android.graphics.BitmapFactory$Options: int inSampleSize> = $i11;

        $i10 = lengthof r2;

        r4 = staticinvoke <android.graphics.BitmapFactory: android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)>(r2, 0, $i10, r3);

        if r4 == null goto label3;

        $i12 = virtualinvoke r4.<android.graphics.Bitmap: int getWidth()>();

        if $i12 > i2 goto label2;

        $i13 = virtualinvoke r4.<android.graphics.Bitmap: int getHeight()>();

        if $i13 <= i3 goto label3;

     label2:
        r11 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>(r4, i2, i3, 1);

        virtualinvoke r4.<android.graphics.Bitmap: void recycle()>();

        goto label4;

     label3:
        r11 = r4;

     label4:
        if r11 != null goto label5;

        $r7 = new com.android.volley.ParseError;

        specialinvoke $r7.<com.android.volley.ParseError: void <init>(com.android.volley.NetworkResponse)>(r1);

        $r9 = staticinvoke <com.android.volley.Response: com.android.volley.Response error(com.android.volley.VolleyError)>($r7);

        return $r9;

     label5:
        $r6 = staticinvoke <com.android.volley.toolbox.HttpHeaderParser: com.android.volley.Cache$Entry parseCacheHeaders(com.android.volley.NetworkResponse)>(r1);

        $r8 = staticinvoke <com.android.volley.Response: com.android.volley.Response success(java.lang.Object,com.android.volley.Cache$Entry)>(r11, $r6);

        return $r8;
    }

    protected void deliverResponse(android.graphics.Bitmap)
    {
        com.android.volley.toolbox.ImageRequest r0;
        android.graphics.Bitmap r1;
        com.android.volley.Response$Listener $r2;

        r0 := @this: com.android.volley.toolbox.ImageRequest;

        r1 := @parameter0: android.graphics.Bitmap;

        $r2 = r0.<com.android.volley.toolbox.ImageRequest: com.android.volley.Response$Listener mListener>;

        interfaceinvoke $r2.<com.android.volley.Response$Listener: void onResponse(java.lang.Object)>(r1);

        return;
    }

    static int findBestSampleSize(int, int, int, int)
    {
        int i0, i1, i2, i3, $i4;
        double d0, d1, d2, $d3, $d4, $d5, $d6, $d7;
        float f0, $f1;
        byte $b5;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        $d4 = (double) i0;

        $d3 = (double) i2;

        d0 = $d4 / $d3;

        $d6 = (double) i1;

        $d5 = (double) i3;

        d1 = $d6 / $d5;

        d2 = staticinvoke <java.lang.Math: double min(double,double)>(d0, d1);

        f0 = 1.0F;

     label1:
        $f1 = f0 * 2.0F;

        $d7 = (double) $f1;

        $b5 = $d7 cmpg d2;

        if $b5 > 0 goto label2;

        f0 = f0 * 2.0F;

        goto label1;

     label2:
        $i4 = (int) f0;

        return $i4;
    }

    protected volatile void deliverResponse(java.lang.Object)
    {
        com.android.volley.toolbox.ImageRequest r0;
        java.lang.Object r1;
        android.graphics.Bitmap $r2;

        r0 := @this: com.android.volley.toolbox.ImageRequest;

        r1 := @parameter0: java.lang.Object;

        $r2 = (android.graphics.Bitmap) r1;

        virtualinvoke r0.<com.android.volley.toolbox.ImageRequest: void deliverResponse(android.graphics.Bitmap)>($r2);

        return;
    }

    static void <clinit>()
    {
        java.lang.Object $r0;

        <com.android.volley.toolbox.ImageRequest: float IMAGE_BACKOFF_MULT> = 2.0F;

        <com.android.volley.toolbox.ImageRequest: int IMAGE_MAX_RETRIES> = 2;

        <com.android.volley.toolbox.ImageRequest: int IMAGE_TIMEOUT_MS> = 1000;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <com.android.volley.toolbox.ImageRequest: java.lang.Object sDecodeLock> = $r0;

        return;
    }
}
