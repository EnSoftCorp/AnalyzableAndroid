public class com.bumptech.glide.GifTypeRequest extends com.bumptech.glide.GifRequestBuilder
{
    private final android.content.Context context;
    private final java.lang.Object model;
    private final com.bumptech.glide.load.model.ModelLoader streamModelLoader;
    private final com.bumptech.glide.Glide glide;
    private final com.bumptech.glide.manager.RequestTracker requestTracker;
    private com.bumptech.glide.RequestManager$OptionsApplier optionsApplier;

    private static com.bumptech.glide.provider.FixedLoadProvider buildProvider(com.bumptech.glide.Glide, com.bumptech.glide.load.model.ModelLoader, java.lang.Class, com.bumptech.glide.load.resource.transcode.ResourceTranscoder)
    {
        com.bumptech.glide.Glide r0;
        com.bumptech.glide.load.model.ModelLoader r1;
        java.lang.Class r2;
        com.bumptech.glide.load.resource.transcode.ResourceTranscoder r3;
        com.bumptech.glide.provider.FixedLoadProvider $r4;
        com.bumptech.glide.DataLoadProvider $r5;

        r0 := @parameter0: com.bumptech.glide.Glide;

        r1 := @parameter1: com.bumptech.glide.load.model.ModelLoader;

        r2 := @parameter2: java.lang.Class;

        r3 := @parameter3: com.bumptech.glide.load.resource.transcode.ResourceTranscoder;

        if r3 != null goto label1;

        r3 = virtualinvoke r0.<com.bumptech.glide.Glide: com.bumptech.glide.load.resource.transcode.ResourceTranscoder buildTranscoder(java.lang.Class,java.lang.Class)>(class "com/bumptech/glide/load/resource/gif/GifData", r2);

     label1:
        if r1 != null goto label2;

        $r4 = null;

        goto label3;

     label2:
        $r4 = new com.bumptech.glide.provider.FixedLoadProvider;

        $r5 = virtualinvoke r0.<com.bumptech.glide.Glide: com.bumptech.glide.DataLoadProvider buildDataProvider(java.lang.Class,java.lang.Class)>(class "java/io/InputStream", class "com/bumptech/glide/load/resource/gif/GifData");

        specialinvoke $r4.<com.bumptech.glide.provider.FixedLoadProvider: void <init>(com.bumptech.glide.load.model.ModelLoader,com.bumptech.glide.load.resource.transcode.ResourceTranscoder,com.bumptech.glide.DataLoadProvider)>(r1, r3, $r5);

     label3:
        return $r4;
    }

    void <init>(android.content.Context, java.lang.Object, com.bumptech.glide.load.model.ModelLoader, com.bumptech.glide.Glide, com.bumptech.glide.manager.RequestTracker, com.bumptech.glide.RequestManager$OptionsApplier)
    {
        com.bumptech.glide.GifTypeRequest r0;
        android.content.Context r1;
        java.lang.Object r2;
        com.bumptech.glide.load.model.ModelLoader r3;
        com.bumptech.glide.Glide r4;
        com.bumptech.glide.manager.RequestTracker r5;
        com.bumptech.glide.RequestManager$OptionsApplier r6;
        com.bumptech.glide.provider.FixedLoadProvider $r7;

        r0 := @this: com.bumptech.glide.GifTypeRequest;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: com.bumptech.glide.load.model.ModelLoader;

        r4 := @parameter3: com.bumptech.glide.Glide;

        r5 := @parameter4: com.bumptech.glide.manager.RequestTracker;

        r6 := @parameter5: com.bumptech.glide.RequestManager$OptionsApplier;

        $r7 = staticinvoke <com.bumptech.glide.GifTypeRequest: com.bumptech.glide.provider.FixedLoadProvider buildProvider(com.bumptech.glide.Glide,com.bumptech.glide.load.model.ModelLoader,java.lang.Class,com.bumptech.glide.load.resource.transcode.ResourceTranscoder)>(r4, r3, class "com/bumptech/glide/load/resource/gif/GifDrawable", null);

        specialinvoke r0.<com.bumptech.glide.GifRequestBuilder: void <init>(android.content.Context,java.lang.Object,com.bumptech.glide.provider.LoadProvider,java.lang.Class,com.bumptech.glide.Glide,com.bumptech.glide.manager.RequestTracker)>(r1, r2, $r7, class "com/bumptech/glide/load/resource/gif/GifDrawable", r4, r5);

        r0.<com.bumptech.glide.GifTypeRequest: android.content.Context context> = r1;

        r0.<com.bumptech.glide.GifTypeRequest: java.lang.Object model> = r2;

        r0.<com.bumptech.glide.GifTypeRequest: com.bumptech.glide.load.model.ModelLoader streamModelLoader> = r3;

        r0.<com.bumptech.glide.GifTypeRequest: com.bumptech.glide.Glide glide> = r4;

        r0.<com.bumptech.glide.GifTypeRequest: com.bumptech.glide.manager.RequestTracker requestTracker> = r5;

        r0.<com.bumptech.glide.GifTypeRequest: com.bumptech.glide.RequestManager$OptionsApplier optionsApplier> = r6;

        return;
    }

    public com.bumptech.glide.GifRequestBuilder transcode(com.bumptech.glide.load.resource.transcode.ResourceTranscoder, java.lang.Class)
    {
        com.bumptech.glide.GifTypeRequest r0;
        com.bumptech.glide.load.resource.transcode.ResourceTranscoder r1;
        java.lang.Class r2;
        com.bumptech.glide.GifRequestBuilder $r3, $r14;
        com.bumptech.glide.load.model.ModelLoader $r4;
        com.bumptech.glide.Glide $r5, $r12;
        com.bumptech.glide.RequestManager$OptionsApplier $r6;
        java.lang.Object $r7, $r9;
        android.content.Context $r8;
        com.bumptech.glide.provider.FixedLoadProvider $r10;
        com.bumptech.glide.manager.RequestTracker $r11;
        com.bumptech.glide.GenericRequestBuilder $r13;

        r0 := @this: com.bumptech.glide.GifTypeRequest;

        r1 := @parameter0: com.bumptech.glide.load.resource.transcode.ResourceTranscoder;

        r2 := @parameter1: java.lang.Class;

        $r6 = r0.<com.bumptech.glide.GifTypeRequest: com.bumptech.glide.RequestManager$OptionsApplier optionsApplier>;

        $r7 = r0.<com.bumptech.glide.GifTypeRequest: java.lang.Object model>;

        $r3 = new com.bumptech.glide.GifRequestBuilder;

        $r8 = r0.<com.bumptech.glide.GifTypeRequest: android.content.Context context>;

        $r9 = r0.<com.bumptech.glide.GifTypeRequest: java.lang.Object model>;

        $r5 = r0.<com.bumptech.glide.GifTypeRequest: com.bumptech.glide.Glide glide>;

        $r4 = r0.<com.bumptech.glide.GifTypeRequest: com.bumptech.glide.load.model.ModelLoader streamModelLoader>;

        $r10 = staticinvoke <com.bumptech.glide.GifTypeRequest: com.bumptech.glide.provider.FixedLoadProvider buildProvider(com.bumptech.glide.Glide,com.bumptech.glide.load.model.ModelLoader,java.lang.Class,com.bumptech.glide.load.resource.transcode.ResourceTranscoder)>($r5, $r4, r2, r1);

        $r12 = r0.<com.bumptech.glide.GifTypeRequest: com.bumptech.glide.Glide glide>;

        $r11 = r0.<com.bumptech.glide.GifTypeRequest: com.bumptech.glide.manager.RequestTracker requestTracker>;

        specialinvoke $r3.<com.bumptech.glide.GifRequestBuilder: void <init>(android.content.Context,java.lang.Object,com.bumptech.glide.provider.LoadProvider,java.lang.Class,com.bumptech.glide.Glide,com.bumptech.glide.manager.RequestTracker)>($r8, $r9, $r10, r2, $r12, $r11);

        $r13 = virtualinvoke $r6.<com.bumptech.glide.RequestManager$OptionsApplier: com.bumptech.glide.GenericRequestBuilder apply(java.lang.Object,com.bumptech.glide.GenericRequestBuilder)>($r7, $r3);

        $r14 = (com.bumptech.glide.GifRequestBuilder) $r13;

        return $r14;
    }

    public com.bumptech.glide.GifRequestBuilder toBytes()
    {
        com.bumptech.glide.GifTypeRequest r0;
        com.bumptech.glide.load.resource.transcode.GifDataBytesTranscoder $r1;
        com.bumptech.glide.GifRequestBuilder $r2;

        r0 := @this: com.bumptech.glide.GifTypeRequest;

        $r1 = new com.bumptech.glide.load.resource.transcode.GifDataBytesTranscoder;

        specialinvoke $r1.<com.bumptech.glide.load.resource.transcode.GifDataBytesTranscoder: void <init>()>();

        $r2 = virtualinvoke r0.<com.bumptech.glide.GifTypeRequest: com.bumptech.glide.GifRequestBuilder transcode(com.bumptech.glide.load.resource.transcode.ResourceTranscoder,java.lang.Class)>($r1, class "[B");

        return $r2;
    }
}
