public class com.bumptech.glide.util.ByteArrayPool extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final int TEMP_BYTES_SIZE;
    private static final int MAX_SIZE;
    private static final int MAX_BYTE_ARRAY_COUNT;
    private final java.util.Queue tempQueue;
    private static final com.bumptech.glide.util.ByteArrayPool BYTE_ARRAY_POOL;

    public static com.bumptech.glide.util.ByteArrayPool get()
    {
        com.bumptech.glide.util.ByteArrayPool $r0;

        $r0 = <com.bumptech.glide.util.ByteArrayPool: com.bumptech.glide.util.ByteArrayPool BYTE_ARRAY_POOL>;

        return $r0;
    }

    private void <init>()
    {
        com.bumptech.glide.util.ByteArrayPool r0;
        java.util.LinkedList $r1;

        r0 := @this: com.bumptech.glide.util.ByteArrayPool;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<com.bumptech.glide.util.ByteArrayPool: java.util.Queue tempQueue> = $r1;

        return;
    }

    public void clear()
    {
        com.bumptech.glide.util.ByteArrayPool r0;
        java.util.Queue r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.bumptech.glide.util.ByteArrayPool;

        $r3 = r0.<com.bumptech.glide.util.ByteArrayPool: java.util.Queue tempQueue>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.bumptech.glide.util.ByteArrayPool: java.util.Queue tempQueue>;

        interfaceinvoke $r4.<java.util.Queue: void clear()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public byte[] getBytes()
    {
        com.bumptech.glide.util.ByteArrayPool r0;
        byte[] r1;
        java.util.Queue r2, $r4, $r5;
        java.lang.Throwable r3, $r7;
        java.lang.Object $r6;
        boolean $z0;

        r0 := @this: com.bumptech.glide.util.ByteArrayPool;

        $r4 = r0.<com.bumptech.glide.util.ByteArrayPool: java.util.Queue tempQueue>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        $r5 = r0.<com.bumptech.glide.util.ByteArrayPool: java.util.Queue tempQueue>;

        $r6 = interfaceinvoke $r5.<java.util.Queue: java.lang.Object poll()>();

        r1 = (byte[]) $r6;

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        if r1 != null goto label6;

        r1 = newarray (byte)[65536];

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("ByteArrayPool", 3);

        if $z0 == 0 goto label6;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("ByteArrayPool", "Created temp bytes");

     label6:
        return r1;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean releaseBytes(byte[])
    {
        com.bumptech.glide.util.ByteArrayPool r0;
        byte[] r1;
        boolean z0;
        java.util.Queue r2, $r4, $r5, $r6;
        java.lang.Throwable r3, $r7;
        int $i0, $i1;

        r0 := @this: com.bumptech.glide.util.ByteArrayPool;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        if $i0 == 65536 goto label1;

        return 0;

     label1:
        z0 = 0;

        $r4 = r0.<com.bumptech.glide.util.ByteArrayPool: java.util.Queue tempQueue>;

        r2 = $r4;

        entermonitor $r4;

     label2:
        $r5 = r0.<com.bumptech.glide.util.ByteArrayPool: java.util.Queue tempQueue>;

        $i1 = interfaceinvoke $r5.<java.util.Queue: int size()>();

        if $i1 >= 8 goto label3;

        z0 = 1;

        $r6 = r0.<com.bumptech.glide.util.ByteArrayPool: java.util.Queue tempQueue>;

        interfaceinvoke $r6.<java.util.Queue: boolean offer(java.lang.Object)>(r1);

     label3:
        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r7 := @caughtexception;

        r3 = $r7;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        return z0;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    static void <clinit>()
    {
        com.bumptech.glide.util.ByteArrayPool $r0;

        <com.bumptech.glide.util.ByteArrayPool: int MAX_BYTE_ARRAY_COUNT> = 8;

        <com.bumptech.glide.util.ByteArrayPool: int MAX_SIZE> = 524288;

        <com.bumptech.glide.util.ByteArrayPool: int TEMP_BYTES_SIZE> = 65536;

        <com.bumptech.glide.util.ByteArrayPool: java.lang.String TAG> = "ByteArrayPool";

        $r0 = new com.bumptech.glide.util.ByteArrayPool;

        specialinvoke $r0.<com.bumptech.glide.util.ByteArrayPool: void <init>()>();

        <com.bumptech.glide.util.ByteArrayPool: com.bumptech.glide.util.ByteArrayPool BYTE_ARRAY_POOL> = $r0;

        return;
    }
}
