public final class com.jakewharton.disklrucache.Util extends java.lang.Object
{
    static final java.nio.charset.Charset US_ASCII;
    static final java.nio.charset.Charset UTF_8;

    private void <init>()
    {
        com.jakewharton.disklrucache.Util r0;

        r0 := @this: com.jakewharton.disklrucache.Util;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.lang.String readFully(java.io.Reader) throws java.io.IOException
    {
        java.io.Reader r0;
        java.io.StringWriter r1, $r5;
        char[] r2;
        int i0, $i1;
        java.lang.String r3;
        java.lang.Throwable r4, $r6;

        r0 := @parameter0: java.io.Reader;

     label1:
        $r5 = new java.io.StringWriter;

        specialinvoke $r5.<java.io.StringWriter: void <init>()>();

        r1 = $r5;

        r2 = newarray (char)[1024];

     label2:
        $i1 = virtualinvoke r0.<java.io.Reader: int read(char[])>(r2);

        i0 = $i1;

        if $i1 == -1 goto label3;

        virtualinvoke r1.<java.io.StringWriter: void write(char[],int,int)>(r2, 0, i0);

        goto label2;

     label3:
        r3 = virtualinvoke r1.<java.io.StringWriter: java.lang.String toString()>();

     label4:
        virtualinvoke r0.<java.io.Reader: void close()>();

        return r3;

     label5:
        $r6 := @caughtexception;

        r4 = $r6;

     label6:
        virtualinvoke r0.<java.io.Reader: void close()>();

        throw r4;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    static void deleteContents(java.io.File) throws java.io.IOException
    {
        java.io.File r0, r3;
        java.io.File[] r1, r2;
        int i0, i1;
        boolean $z0, $z1;
        java.io.IOException $r4, $r9;
        java.lang.StringBuilder $r5, $r6, $r7, $r10, $r11, $r12;
        java.lang.String $r8, $r13;

        r0 := @parameter0: java.io.File;

        r1 = virtualinvoke r0.<java.io.File: java.io.File[] listFiles()>();

        if r1 != null goto label1;

        $r9 = new java.io.IOException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("not a readable directory: ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>($r13);

        throw $r9;

     label1:
        r2 = r1;

        i0 = lengthof r2;

        i1 = 0;

     label2:
        if i1 >= i0 goto label5;

        r3 = r2[i1];

        $z0 = virtualinvoke r3.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label3;

        staticinvoke <com.jakewharton.disklrucache.Util: void deleteContents(java.io.File)>(r3);

     label3:
        $z1 = virtualinvoke r3.<java.io.File: boolean delete()>();

        if $z1 != 0 goto label4;

        $r4 = new java.io.IOException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("failed to delete file: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label4:
        i1 = i1 + 1;

        goto label2;

     label5:
        return;
    }

    static void closeQuietly(java.io.Closeable)
    {
        java.io.Closeable r0;
        java.lang.RuntimeException r1, $r3;
        java.lang.Exception $r2;

        r0 := @parameter0: java.io.Closeable;

        if r0 == null goto label5;

     label1:
        interfaceinvoke r0.<java.io.Closeable: void close()>();

     label2:
        goto label5;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        throw r1;

     label4:
        $r2 := @caughtexception;

     label5:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    static void <clinit>()
    {
        java.nio.charset.Charset $r0, $r1;

        $r0 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("US-ASCII");

        <com.jakewharton.disklrucache.Util: java.nio.charset.Charset US_ASCII> = $r0;

        $r1 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-8");

        <com.jakewharton.disklrucache.Util: java.nio.charset.Charset UTF_8> = $r1;

        return;
    }
}
