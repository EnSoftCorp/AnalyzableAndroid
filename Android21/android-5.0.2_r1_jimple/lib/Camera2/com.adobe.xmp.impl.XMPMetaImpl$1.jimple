class com.adobe.xmp.impl.XMPMetaImpl$1 extends java.lang.Object implements com.adobe.xmp.properties.XMPProperty
{
    final com.adobe.xmp.impl.XMPNode val$itemNode;
    final com.adobe.xmp.impl.XMPMetaImpl this$0;

    void <init>(com.adobe.xmp.impl.XMPMetaImpl, com.adobe.xmp.impl.XMPNode)
    {
        com.adobe.xmp.impl.XMPMetaImpl$1 r0;
        com.adobe.xmp.impl.XMPMetaImpl r1;
        com.adobe.xmp.impl.XMPNode r2;

        r0 := @this: com.adobe.xmp.impl.XMPMetaImpl$1;

        r1 := @parameter0: com.adobe.xmp.impl.XMPMetaImpl;

        r2 := @parameter1: com.adobe.xmp.impl.XMPNode;

        r0.<com.adobe.xmp.impl.XMPMetaImpl$1: com.adobe.xmp.impl.XMPMetaImpl this$0> = r1;

        r0.<com.adobe.xmp.impl.XMPMetaImpl$1: com.adobe.xmp.impl.XMPNode val$itemNode> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object getValue()
    {
        com.adobe.xmp.impl.XMPMetaImpl$1 r0;
        com.adobe.xmp.impl.XMPNode $r1;
        java.lang.String $r2;

        r0 := @this: com.adobe.xmp.impl.XMPMetaImpl$1;

        $r1 = r0.<com.adobe.xmp.impl.XMPMetaImpl$1: com.adobe.xmp.impl.XMPNode val$itemNode>;

        $r2 = virtualinvoke $r1.<com.adobe.xmp.impl.XMPNode: java.lang.String getValue()>();

        return $r2;
    }

    public com.adobe.xmp.options.PropertyOptions getOptions()
    {
        com.adobe.xmp.impl.XMPMetaImpl$1 r0;
        com.adobe.xmp.impl.XMPNode $r1;
        com.adobe.xmp.options.PropertyOptions $r2;

        r0 := @this: com.adobe.xmp.impl.XMPMetaImpl$1;

        $r1 = r0.<com.adobe.xmp.impl.XMPMetaImpl$1: com.adobe.xmp.impl.XMPNode val$itemNode>;

        $r2 = virtualinvoke $r1.<com.adobe.xmp.impl.XMPNode: com.adobe.xmp.options.PropertyOptions getOptions()>();

        return $r2;
    }

    public java.lang.String getLanguage()
    {
        com.adobe.xmp.impl.XMPMetaImpl$1 r0;
        com.adobe.xmp.impl.XMPNode $r1, $r2;
        java.lang.String $r3;

        r0 := @this: com.adobe.xmp.impl.XMPMetaImpl$1;

        $r1 = r0.<com.adobe.xmp.impl.XMPMetaImpl$1: com.adobe.xmp.impl.XMPNode val$itemNode>;

        $r2 = virtualinvoke $r1.<com.adobe.xmp.impl.XMPNode: com.adobe.xmp.impl.XMPNode getQualifier(int)>(1);

        $r3 = virtualinvoke $r2.<com.adobe.xmp.impl.XMPNode: java.lang.String getValue()>();

        return $r3;
    }

    public java.lang.String toString()
    {
        com.adobe.xmp.impl.XMPMetaImpl$1 r0;
        com.adobe.xmp.impl.XMPNode $r1;
        java.lang.String $r2, $r3;

        r0 := @this: com.adobe.xmp.impl.XMPMetaImpl$1;

        $r1 = r0.<com.adobe.xmp.impl.XMPMetaImpl$1: com.adobe.xmp.impl.XMPNode val$itemNode>;

        $r2 = virtualinvoke $r1.<com.adobe.xmp.impl.XMPNode: java.lang.String getValue()>();

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toString()>();

        return $r3;
    }
}
