public class com.android.camera.session.SessionStorageManagerImpl extends java.lang.Object implements com.android.camera.session.SessionStorageManager
{
    private static final com.android.camera.debug.Log$Tag TAG;
    private static final int MAX_SESSION_AGE_MILLIS;
    private final java.io.File mBaseDirectory;
    private final java.io.File mDeprecatedBaseDirectory;

    public static com.android.camera.session.SessionStorageManager create(android.content.Context)
    {
        android.content.Context r0;
        com.android.camera.session.SessionStorageManagerImpl $r1;
        java.io.File $r2, $r3;

        r0 := @parameter0: android.content.Context;

        $r1 = new com.android.camera.session.SessionStorageManagerImpl;

        $r2 = virtualinvoke r0.<android.content.Context: java.io.File getExternalCacheDir()>();

        $r3 = virtualinvoke r0.<android.content.Context: java.io.File getExternalFilesDir(java.lang.String)>(null);

        specialinvoke $r1.<com.android.camera.session.SessionStorageManagerImpl: void <init>(java.io.File,java.io.File)>($r2, $r3);

        return $r1;
    }

    void <init>(java.io.File, java.io.File)
    {
        com.android.camera.session.SessionStorageManagerImpl r0;
        java.io.File r1, r2;

        r0 := @this: com.android.camera.session.SessionStorageManagerImpl;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.io.File;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.camera.session.SessionStorageManagerImpl: java.io.File mBaseDirectory> = r1;

        r0.<com.android.camera.session.SessionStorageManagerImpl: java.io.File mDeprecatedBaseDirectory> = r2;

        return;
    }

    public java.io.File getSessionDirectory(java.lang.String) throws java.io.IOException
    {
        com.android.camera.session.SessionStorageManagerImpl r0;
        java.lang.String r1, $r12, $r17;
        java.io.File r2, r3, $r4, $r5, $r6, $r7;
        boolean $z0, $z1, $z2;
        java.io.IOException $r8, $r14;
        java.lang.StringBuilder $r9, $r10, $r11, $r13, $r15, $r16;

        r0 := @this: com.android.camera.session.SessionStorageManagerImpl;

        r1 := @parameter0: java.lang.String;

        $r4 = new java.io.File;

        $r5 = r0.<com.android.camera.session.SessionStorageManagerImpl: java.io.File mBaseDirectory>;

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, r1);

        r2 = $r4;

        $z0 = virtualinvoke r2.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        $z2 = virtualinvoke r2.<java.io.File: boolean mkdirs()>();

        if $z2 != 0 goto label1;

        $r14 = new java.io.IOException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not create session directory: ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.io.IOException: void <init>(java.lang.String)>($r17);

        throw $r14;

     label1:
        $z1 = virtualinvoke r2.<java.io.File: boolean isDirectory()>();

        if $z1 != 0 goto label2;

        $r8 = new java.io.IOException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Session directory is not a directory: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>($r12);

        throw $r8;

     label2:
        specialinvoke r0.<com.android.camera.session.SessionStorageManagerImpl: void cleanUpExpiredSessions(java.io.File)>(r2);

        $r6 = new java.io.File;

        $r7 = r0.<com.android.camera.session.SessionStorageManagerImpl: java.io.File mDeprecatedBaseDirectory>;

        specialinvoke $r6.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, r1);

        r3 = $r6;

        specialinvoke r0.<com.android.camera.session.SessionStorageManagerImpl: void cleanUpExpiredSessions(java.io.File)>(r3);

        return r2;
    }

    private void cleanUpExpiredSessions(java.io.File)
    {
        com.android.camera.session.SessionStorageManagerImpl r0;
        java.io.File r1, r4;
        java.io.File[] r2, r3;
        long l0, $l3, $l4;
        int i1, i2;
        com.android.camera.session.SessionStorageManagerImpl$1 $r5;
        byte $b5;
        boolean $z0;
        com.android.camera.debug.Log$Tag $r6;
        java.lang.StringBuilder $r7, $r9, $r11;
        java.lang.String $r8, $r10;

        r0 := @this: com.android.camera.session.SessionStorageManagerImpl;

        r1 := @parameter0: java.io.File;

        $r5 = new com.android.camera.session.SessionStorageManagerImpl$1;

        specialinvoke $r5.<com.android.camera.session.SessionStorageManagerImpl$1: void <init>(com.android.camera.session.SessionStorageManagerImpl)>(r0);

        r2 = virtualinvoke r1.<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>($r5);

        if r2 != null goto label1;

        return;

     label1:
        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r3 = r2;

        i1 = lengthof r3;

        i2 = 0;

     label2:
        if i2 >= i1 goto label4;

        r4 = r3[i2];

        $l3 = virtualinvoke r4.<java.io.File: long lastModified()>();

        $l4 = l0 - 86400000L;

        $b5 = $l3 cmp $l4;

        if $b5 >= 0 goto label3;

        $z0 = staticinvoke <com.android.camera.util.FileUtil: boolean deleteDirectoryRecursively(java.io.File)>(r4);

        if $z0 != 0 goto label3;

        $r6 = <com.android.camera.session.SessionStorageManagerImpl: com.android.camera.debug.Log$Tag TAG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not clean up ");

        $r8 = virtualinvoke r4.<java.io.File: java.lang.String getAbsolutePath()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.camera.debug.Log: void w(com.android.camera.debug.Log$Tag,java.lang.String)>($r6, $r10);

     label3:
        i2 = i2 + 1;

        goto label2;

     label4:
        return;
    }

    static void <clinit>()
    {
        com.android.camera.debug.Log$Tag $r0;

        <com.android.camera.session.SessionStorageManagerImpl: int MAX_SESSION_AGE_MILLIS> = 86400000;

        $r0 = new com.android.camera.debug.Log$Tag;

        specialinvoke $r0.<com.android.camera.debug.Log$Tag: void <init>(java.lang.String)>("SesnStorageMgrImpl");

        <com.android.camera.session.SessionStorageManagerImpl: com.android.camera.debug.Log$Tag TAG> = $r0;

        return;
    }
}
