public class com.bumptech.glide.load.engine.cache.LruResourceCache extends com.bumptech.glide.util.LruCache implements com.bumptech.glide.load.engine.cache.MemoryCache
{
    private com.bumptech.glide.load.engine.cache.MemoryCache$ResourceRemovedListener listener;

    public void <init>(int)
    {
        com.bumptech.glide.load.engine.cache.LruResourceCache r0;
        int i0;

        r0 := @this: com.bumptech.glide.load.engine.cache.LruResourceCache;

        i0 := @parameter0: int;

        specialinvoke r0.<com.bumptech.glide.util.LruCache: void <init>(int)>(i0);

        return;
    }

    public void setResourceRemovedListener(com.bumptech.glide.load.engine.cache.MemoryCache$ResourceRemovedListener)
    {
        com.bumptech.glide.load.engine.cache.LruResourceCache r0;
        com.bumptech.glide.load.engine.cache.MemoryCache$ResourceRemovedListener r1;

        r0 := @this: com.bumptech.glide.load.engine.cache.LruResourceCache;

        r1 := @parameter0: com.bumptech.glide.load.engine.cache.MemoryCache$ResourceRemovedListener;

        r0.<com.bumptech.glide.load.engine.cache.LruResourceCache: com.bumptech.glide.load.engine.cache.MemoryCache$ResourceRemovedListener listener> = r1;

        return;
    }

    protected void onItemRemoved(com.bumptech.glide.load.Key, com.bumptech.glide.load.engine.Resource)
    {
        com.bumptech.glide.load.engine.cache.LruResourceCache r0;
        com.bumptech.glide.load.Key r1;
        com.bumptech.glide.load.engine.Resource r2;
        com.bumptech.glide.load.engine.cache.MemoryCache$ResourceRemovedListener $r3, $r4;

        r0 := @this: com.bumptech.glide.load.engine.cache.LruResourceCache;

        r1 := @parameter0: com.bumptech.glide.load.Key;

        r2 := @parameter1: com.bumptech.glide.load.engine.Resource;

        $r3 = r0.<com.bumptech.glide.load.engine.cache.LruResourceCache: com.bumptech.glide.load.engine.cache.MemoryCache$ResourceRemovedListener listener>;

        if $r3 == null goto label1;

        $r4 = r0.<com.bumptech.glide.load.engine.cache.LruResourceCache: com.bumptech.glide.load.engine.cache.MemoryCache$ResourceRemovedListener listener>;

        interfaceinvoke $r4.<com.bumptech.glide.load.engine.cache.MemoryCache$ResourceRemovedListener: void onResourceRemoved(com.bumptech.glide.load.engine.Resource)>(r2);

     label1:
        return;
    }

    protected int getSize(com.bumptech.glide.load.engine.Resource)
    {
        com.bumptech.glide.load.engine.cache.LruResourceCache r0;
        com.bumptech.glide.load.engine.Resource r1;
        int $i0;

        r0 := @this: com.bumptech.glide.load.engine.cache.LruResourceCache;

        r1 := @parameter0: com.bumptech.glide.load.engine.Resource;

        $i0 = virtualinvoke r1.<com.bumptech.glide.load.engine.Resource: int getSize()>();

        return $i0;
    }

    public void trimMemory(int)
    {
        com.bumptech.glide.load.engine.cache.LruResourceCache r0;
        int i0, $i1, $i2;

        r0 := @this: com.bumptech.glide.load.engine.cache.LruResourceCache;

        i0 := @parameter0: int;

        if i0 < 60 goto label1;

        virtualinvoke r0.<com.bumptech.glide.load.engine.cache.LruResourceCache: void clearMemory()>();

        goto label2;

     label1:
        if i0 < 40 goto label2;

        $i1 = virtualinvoke r0.<com.bumptech.glide.load.engine.cache.LruResourceCache: int getCurrentSize()>();

        $i2 = $i1 / 2;

        virtualinvoke r0.<com.bumptech.glide.load.engine.cache.LruResourceCache: void trimToSize(int)>($i2);

     label2:
        return;
    }

    protected volatile void onItemRemoved(java.lang.Object, java.lang.Object)
    {
        com.bumptech.glide.load.engine.cache.LruResourceCache r0;
        java.lang.Object r1, r2;
        com.bumptech.glide.load.engine.Resource $r3;
        com.bumptech.glide.load.Key $r4;

        r0 := @this: com.bumptech.glide.load.engine.cache.LruResourceCache;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (com.bumptech.glide.load.Key) r1;

        $r3 = (com.bumptech.glide.load.engine.Resource) r2;

        virtualinvoke r0.<com.bumptech.glide.load.engine.cache.LruResourceCache: void onItemRemoved(com.bumptech.glide.load.Key,com.bumptech.glide.load.engine.Resource)>($r4, $r3);

        return;
    }

    protected volatile int getSize(java.lang.Object)
    {
        com.bumptech.glide.load.engine.cache.LruResourceCache r0;
        java.lang.Object r1;
        com.bumptech.glide.load.engine.Resource $r2;
        int $i0;

        r0 := @this: com.bumptech.glide.load.engine.cache.LruResourceCache;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.bumptech.glide.load.engine.Resource) r1;

        $i0 = virtualinvoke r0.<com.bumptech.glide.load.engine.cache.LruResourceCache: int getSize(com.bumptech.glide.load.engine.Resource)>($r2);

        return $i0;
    }

    public volatile com.bumptech.glide.load.engine.Resource put(com.bumptech.glide.load.Key, com.bumptech.glide.load.engine.Resource)
    {
        com.bumptech.glide.load.engine.cache.LruResourceCache r0;
        com.bumptech.glide.load.Key r1;
        com.bumptech.glide.load.engine.Resource r2, $r4;
        java.lang.Object $r3;

        r0 := @this: com.bumptech.glide.load.engine.cache.LruResourceCache;

        r1 := @parameter0: com.bumptech.glide.load.Key;

        r2 := @parameter1: com.bumptech.glide.load.engine.Resource;

        $r3 = specialinvoke r0.<com.bumptech.glide.util.LruCache: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r4 = (com.bumptech.glide.load.engine.Resource) $r3;

        return $r4;
    }

    public volatile com.bumptech.glide.load.engine.Resource remove(com.bumptech.glide.load.Key)
    {
        com.bumptech.glide.load.engine.cache.LruResourceCache r0;
        com.bumptech.glide.load.Key r1;
        java.lang.Object $r2;
        com.bumptech.glide.load.engine.Resource $r3;

        r0 := @this: com.bumptech.glide.load.engine.cache.LruResourceCache;

        r1 := @parameter0: com.bumptech.glide.load.Key;

        $r2 = specialinvoke r0.<com.bumptech.glide.util.LruCache: java.lang.Object remove(java.lang.Object)>(r1);

        $r3 = (com.bumptech.glide.load.engine.Resource) $r2;

        return $r3;
    }
}
