public class com.android.volley.toolbox.DiskBasedCache extends java.lang.Object implements com.android.volley.Cache
{
    private final java.util.Map mEntries;
    private long mTotalSize;
    private final java.io.File mRootDirectory;
    private final int mMaxCacheSizeInBytes;
    private static final int DEFAULT_DISK_USAGE_BYTES;
    private static final float HYSTERESIS_FACTOR;
    private static final int CACHE_MAGIC;

    public void <init>(java.io.File, int)
    {
        com.android.volley.toolbox.DiskBasedCache r0;
        java.io.File r1;
        int i0;
        java.util.LinkedHashMap $r2;

        r0 := @this: com.android.volley.toolbox.DiskBasedCache;

        r1 := @parameter0: java.io.File;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.LinkedHashMap;

        specialinvoke $r2.<java.util.LinkedHashMap: void <init>(int,float,boolean)>(16, 0.75F, 1);

        r0.<com.android.volley.toolbox.DiskBasedCache: java.util.Map mEntries> = $r2;

        r0.<com.android.volley.toolbox.DiskBasedCache: long mTotalSize> = 0L;

        r0.<com.android.volley.toolbox.DiskBasedCache: java.io.File mRootDirectory> = r1;

        r0.<com.android.volley.toolbox.DiskBasedCache: int mMaxCacheSizeInBytes> = i0;

        return;
    }

    public void <init>(java.io.File)
    {
        com.android.volley.toolbox.DiskBasedCache r0;
        java.io.File r1;

        r0 := @this: com.android.volley.toolbox.DiskBasedCache;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<com.android.volley.toolbox.DiskBasedCache: void <init>(java.io.File,int)>(r1, 5242880);

        return;
    }

    public synchronized void clear()
    {
        com.android.volley.toolbox.DiskBasedCache r0;
        java.io.File[] r1, r2;
        int i0, i1;
        java.io.File r3, $r4;
        java.util.Map $r5;
        java.lang.Object[] $r6;

        r0 := @this: com.android.volley.toolbox.DiskBasedCache;

        $r4 = r0.<com.android.volley.toolbox.DiskBasedCache: java.io.File mRootDirectory>;

        r1 = virtualinvoke $r4.<java.io.File: java.io.File[] listFiles()>();

        if r1 == null goto label2;

        r2 = r1;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = r2[i1];

        virtualinvoke r3.<java.io.File: boolean delete()>();

        i1 = i1 + 1;

        goto label1;

     label2:
        $r5 = r0.<com.android.volley.toolbox.DiskBasedCache: java.util.Map mEntries>;

        interfaceinvoke $r5.<java.util.Map: void clear()>();

        r0.<com.android.volley.toolbox.DiskBasedCache: long mTotalSize> = 0L;

        $r6 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.volley.VolleyLog: void d(java.lang.String,java.lang.Object[])>("Cache cleared.", $r6);

        return;
    }

    public synchronized com.android.volley.Cache$Entry get(java.lang.String)
    {
        com.android.volley.toolbox.DiskBasedCache r0;
        java.lang.String r1, $r17, $r18;
        com.android.volley.toolbox.DiskBasedCache$CacheHeader r2;
        java.io.File r3;
        com.android.volley.toolbox.DiskBasedCache$CountingInputStream r4, $r10;
        byte[] r5;
        com.android.volley.Cache$Entry r6;
        java.lang.Throwable r7, $r12;
        java.util.Map $r8;
        java.lang.Object $r9;
        java.io.FileInputStream $r11;
        int $i0, $i4;
        long $l1, $l2, $l3;
        java.io.IOException $r13, $r14, $r16, $r19, r20;
        java.lang.Object[] $r15;

        r0 := @this: com.android.volley.toolbox.DiskBasedCache;

        r1 := @parameter0: java.lang.String;

        $r8 = r0.<com.android.volley.toolbox.DiskBasedCache: java.util.Map mEntries>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.volley.toolbox.DiskBasedCache$CacheHeader) $r9;

        if r2 != null goto label01;

        return null;

     label01:
        r3 = virtualinvoke r0.<com.android.volley.toolbox.DiskBasedCache: java.io.File getFileForKey(java.lang.String)>(r1);

        r4 = null;

     label02:
        $r10 = new com.android.volley.toolbox.DiskBasedCache$CountingInputStream;

        $r11 = new java.io.FileInputStream;

        specialinvoke $r11.<java.io.FileInputStream: void <init>(java.io.File)>(r3);

        specialinvoke $r10.<com.android.volley.toolbox.DiskBasedCache$CountingInputStream: void <init>(java.io.InputStream,com.android.volley.toolbox.DiskBasedCache$1)>($r11, null);

        r4 = $r10;

        staticinvoke <com.android.volley.toolbox.DiskBasedCache$CacheHeader: com.android.volley.toolbox.DiskBasedCache$CacheHeader readHeader(java.io.InputStream)>(r4);

        $l1 = virtualinvoke r3.<java.io.File: long length()>();

        $i0 = staticinvoke <com.android.volley.toolbox.DiskBasedCache$CountingInputStream: int access$100(com.android.volley.toolbox.DiskBasedCache$CountingInputStream)>(r4);

        $l3 = (long) $i0;

        $l2 = $l1 - $l3;

        $i4 = (int) $l2;

        r5 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: byte[] streamToBytes(java.io.InputStream,int)>(r4, $i4);

        r6 = virtualinvoke r2.<com.android.volley.toolbox.DiskBasedCache$CacheHeader: com.android.volley.Cache$Entry toCacheEntry(byte[])>(r5);

     label03:
        if r4 == null goto label07;

     label04:
        virtualinvoke r4.<com.android.volley.toolbox.DiskBasedCache$CountingInputStream: void close()>();

     label05:
        goto label07;

     label06:
        $r19 := @caughtexception;

        return null;

     label07:
        return r6;

     label08:
        $r16 := @caughtexception;

        r20 = $r16;

        $r15 = newarray (java.lang.Object)[2];

        $r17 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>();

        $r15[0] = $r17;

        $r18 = virtualinvoke r20.<java.io.IOException: java.lang.String toString()>();

        $r15[1] = $r18;

        staticinvoke <com.android.volley.VolleyLog: void d(java.lang.String,java.lang.Object[])>("%s: %s", $r15);

        virtualinvoke r0.<com.android.volley.toolbox.DiskBasedCache: void remove(java.lang.String)>(r1);

     label09:
        if r4 == null goto label13;

     label10:
        virtualinvoke r4.<com.android.volley.toolbox.DiskBasedCache$CountingInputStream: void close()>();

     label11:
        goto label13;

     label12:
        $r13 := @caughtexception;

        return null;

     label13:
        return null;

     label14:
        $r12 := @caughtexception;

        r7 = $r12;

     label15:
        if r4 == null goto label19;

     label16:
        virtualinvoke r4.<com.android.volley.toolbox.DiskBasedCache$CountingInputStream: void close()>();

     label17:
        goto label19;

     label18:
        $r14 := @caughtexception;

        return null;

     label19:
        throw r7;

        catch java.io.IOException from label04 to label05 with label06;
        catch java.io.IOException from label02 to label03 with label08;
        catch java.io.IOException from label10 to label11 with label12;
        catch java.lang.Throwable from label02 to label03 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.io.IOException from label16 to label17 with label18;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    public synchronized void initialize()
    {
        com.android.volley.toolbox.DiskBasedCache r0;
        java.io.File[] r1, r2;
        int i0, i1;
        java.io.File r3, $r8, $r9, $r12, $r13;
        java.io.FileInputStream r4, $r10;
        com.android.volley.toolbox.DiskBasedCache$CacheHeader r5;
        java.lang.Throwable r6, $r18;
        boolean $z0, $z1;
        java.lang.String $r11, $r16;
        long $l2;
        java.lang.Object[] $r14;
        java.io.IOException $r15, $r17, $r19, $r20;

        r0 := @this: com.android.volley.toolbox.DiskBasedCache;

        $r8 = r0.<com.android.volley.toolbox.DiskBasedCache: java.io.File mRootDirectory>;

        $z0 = virtualinvoke $r8.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label02;

        $r12 = r0.<com.android.volley.toolbox.DiskBasedCache: java.io.File mRootDirectory>;

        $z1 = virtualinvoke $r12.<java.io.File: boolean mkdirs()>();

        if $z1 != 0 goto label01;

        $r14 = newarray (java.lang.Object)[1];

        $r13 = r0.<com.android.volley.toolbox.DiskBasedCache: java.io.File mRootDirectory>;

        $r16 = virtualinvoke $r13.<java.io.File: java.lang.String getAbsolutePath()>();

        $r14[0] = $r16;

        staticinvoke <com.android.volley.VolleyLog: void e(java.lang.String,java.lang.Object[])>("Unable to create cache dir %s", $r14);

     label01:
        return;

     label02:
        $r9 = r0.<com.android.volley.toolbox.DiskBasedCache: java.io.File mRootDirectory>;

        r1 = virtualinvoke $r9.<java.io.File: java.io.File[] listFiles()>();

        if r1 != null goto label03;

        return;

     label03:
        r2 = r1;

        i0 = lengthof r2;

        i1 = 0;

     label04:
        if i1 >= i0 goto label19;

        r3 = r2[i1];

        r4 = null;

     label05:
        $r10 = new java.io.FileInputStream;

        specialinvoke $r10.<java.io.FileInputStream: void <init>(java.io.File)>(r3);

        r4 = $r10;

        r5 = staticinvoke <com.android.volley.toolbox.DiskBasedCache$CacheHeader: com.android.volley.toolbox.DiskBasedCache$CacheHeader readHeader(java.io.InputStream)>(r4);

        $l2 = virtualinvoke r3.<java.io.File: long length()>();

        r5.<com.android.volley.toolbox.DiskBasedCache$CacheHeader: long size> = $l2;

        $r11 = r5.<com.android.volley.toolbox.DiskBasedCache$CacheHeader: java.lang.String key>;

        specialinvoke r0.<com.android.volley.toolbox.DiskBasedCache: void putEntry(java.lang.String,com.android.volley.toolbox.DiskBasedCache$CacheHeader)>($r11, r5);

     label06:
        if r4 == null goto label07;

        virtualinvoke r4.<java.io.FileInputStream: void close()>();

     label07:
        goto label18;

     label08:
        $r19 := @caughtexception;

        goto label18;

     label09:
        $r17 := @caughtexception;

        if r3 == null goto label10;

        virtualinvoke r3.<java.io.File: boolean delete()>();

     label10:
        if r4 == null goto label11;

        virtualinvoke r4.<java.io.FileInputStream: void close()>();

     label11:
        goto label18;

     label12:
        $r20 := @caughtexception;

        goto label18;

     label13:
        $r18 := @caughtexception;

        r6 = $r18;

     label14:
        if r4 == null goto label15;

        virtualinvoke r4.<java.io.FileInputStream: void close()>();

     label15:
        goto label17;

     label16:
        $r15 := @caughtexception;

     label17:
        throw r6;

     label18:
        i1 = i1 + 1;

        goto label04;

     label19:
        return;

        catch java.io.IOException from label06 to label07 with label08;
        catch java.io.IOException from label05 to label06 with label09;
        catch java.io.IOException from label10 to label11 with label12;
        catch java.lang.Throwable from label05 to label06 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.io.IOException from label14 to label15 with label16;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public synchronized void invalidate(java.lang.String, boolean)
    {
        com.android.volley.toolbox.DiskBasedCache r0;
        java.lang.String r1;
        boolean z0;
        com.android.volley.Cache$Entry r2;

        r0 := @this: com.android.volley.toolbox.DiskBasedCache;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 = virtualinvoke r0.<com.android.volley.toolbox.DiskBasedCache: com.android.volley.Cache$Entry get(java.lang.String)>(r1);

        if r2 == null goto label2;

        r2.<com.android.volley.Cache$Entry: long softTtl> = 0L;

        if z0 == 0 goto label1;

        r2.<com.android.volley.Cache$Entry: long ttl> = 0L;

     label1:
        virtualinvoke r0.<com.android.volley.toolbox.DiskBasedCache: void put(java.lang.String,com.android.volley.Cache$Entry)>(r1, r2);

     label2:
        return;
    }

    public synchronized void put(java.lang.String, com.android.volley.Cache$Entry)
    {
        com.android.volley.toolbox.DiskBasedCache r0;
        java.lang.String r1, $r11, $r15;
        com.android.volley.Cache$Entry r2;
        java.io.File r3;
        java.io.FileOutputStream r4, $r7;
        com.android.volley.toolbox.DiskBasedCache$CacheHeader r5, $r8;
        boolean z0, z1;
        byte[] $r6, $r9;
        int $i0;
        java.lang.Object[] $r10, $r14;
        java.io.IOException $r12, $r13;

        r0 := @this: com.android.volley.toolbox.DiskBasedCache;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.volley.Cache$Entry;

        $r6 = r2.<com.android.volley.Cache$Entry: byte[] data>;

        $i0 = lengthof $r6;

        specialinvoke r0.<com.android.volley.toolbox.DiskBasedCache: void pruneIfNeeded(int)>($i0);

        r3 = virtualinvoke r0.<com.android.volley.toolbox.DiskBasedCache: java.io.File getFileForKey(java.lang.String)>(r1);

     label1:
        $r7 = new java.io.FileOutputStream;

        specialinvoke $r7.<java.io.FileOutputStream: void <init>(java.io.File)>(r3);

        r4 = $r7;

        $r8 = new com.android.volley.toolbox.DiskBasedCache$CacheHeader;

        specialinvoke $r8.<com.android.volley.toolbox.DiskBasedCache$CacheHeader: void <init>(java.lang.String,com.android.volley.Cache$Entry)>(r1, r2);

        r5 = $r8;

        z0 = virtualinvoke r5.<com.android.volley.toolbox.DiskBasedCache$CacheHeader: boolean writeHeader(java.io.OutputStream)>(r4);

        if z0 != 0 goto label2;

        virtualinvoke r4.<java.io.FileOutputStream: void close()>();

        $r10 = newarray (java.lang.Object)[1];

        $r11 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>();

        $r10[0] = $r11;

        staticinvoke <com.android.volley.VolleyLog: void d(java.lang.String,java.lang.Object[])>("Failed to write header for %s", $r10);

        $r13 = new java.io.IOException;

        specialinvoke $r13.<java.io.IOException: void <init>()>();

        throw $r13;

     label2:
        $r9 = r2.<com.android.volley.Cache$Entry: byte[] data>;

        virtualinvoke r4.<java.io.FileOutputStream: void write(byte[])>($r9);

        virtualinvoke r4.<java.io.FileOutputStream: void close()>();

        specialinvoke r0.<com.android.volley.toolbox.DiskBasedCache: void putEntry(java.lang.String,com.android.volley.toolbox.DiskBasedCache$CacheHeader)>(r1, r5);

     label3:
        return;

     label4:
        $r12 := @caughtexception;

        z1 = virtualinvoke r3.<java.io.File: boolean delete()>();

        if z1 != 0 goto label5;

        $r14 = newarray (java.lang.Object)[1];

        $r15 = virtualinvoke r3.<java.io.File: java.lang.String getAbsolutePath()>();

        $r14[0] = $r15;

        staticinvoke <com.android.volley.VolleyLog: void d(java.lang.String,java.lang.Object[])>("Could not clean up file %s", $r14);

     label5:
        return;

        catch java.io.IOException from label1 to label3 with label4;
    }

    public synchronized void remove(java.lang.String)
    {
        com.android.volley.toolbox.DiskBasedCache r0;
        java.lang.String r1, $r4;
        boolean z0;
        java.io.File $r2;
        java.lang.Object[] $r3;

        r0 := @this: com.android.volley.toolbox.DiskBasedCache;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.android.volley.toolbox.DiskBasedCache: java.io.File getFileForKey(java.lang.String)>(r1);

        z0 = virtualinvoke $r2.<java.io.File: boolean delete()>();

        specialinvoke r0.<com.android.volley.toolbox.DiskBasedCache: void removeEntry(java.lang.String)>(r1);

        if z0 != 0 goto label1;

        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = r1;

        $r4 = specialinvoke r0.<com.android.volley.toolbox.DiskBasedCache: java.lang.String getFilenameForKey(java.lang.String)>(r1);

        $r3[1] = $r4;

        staticinvoke <com.android.volley.VolleyLog: void d(java.lang.String,java.lang.Object[])>("Could not delete cache entry for key=%s, filename=%s", $r3);

     label1:
        return;
    }

    private java.lang.String getFilenameForKey(java.lang.String)
    {
        com.android.volley.toolbox.DiskBasedCache r0;
        java.lang.String r1, r2, $r3, $r6, $r7, r9;
        int i0, $i1, $i2, $i3;
        java.lang.StringBuilder $r4, $r5, $r8;

        r0 := @this: com.android.volley.toolbox.DiskBasedCache;

        r1 := @parameter0: java.lang.String;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        i0 = $i1 / 2;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $i2 = virtualinvoke $r3.<java.lang.String: int hashCode()>();

        r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i0);

        $i3 = virtualinvoke $r6.<java.lang.String: int hashCode()>();

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i3);

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return r9;
    }

    public java.io.File getFileForKey(java.lang.String)
    {
        com.android.volley.toolbox.DiskBasedCache r0;
        java.lang.String r1, $r4;
        java.io.File $r2, $r3;

        r0 := @this: com.android.volley.toolbox.DiskBasedCache;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.io.File;

        $r3 = r0.<com.android.volley.toolbox.DiskBasedCache: java.io.File mRootDirectory>;

        $r4 = specialinvoke r0.<com.android.volley.toolbox.DiskBasedCache: java.lang.String getFilenameForKey(java.lang.String)>(r1);

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, $r4);

        return $r2;
    }

    private void pruneIfNeeded(int)
    {
        com.android.volley.toolbox.DiskBasedCache r0;
        int i0, i2, $i6, $i15;
        long l1, l3, $l4, $l5, $l7, $l8, $l10, $l11, $l12, $l13, $l14, $l16, $l17, $l18, $l20, $l21;
        java.util.Iterator r1;
        java.util.Map$Entry r2;
        com.android.volley.toolbox.DiskBasedCache$CacheHeader r3;
        boolean z0, $z1, $z2, $z3;
        byte $b9, $b19;
        java.util.Map $r4;
        java.util.Set $r5;
        java.lang.Object[] $r6, $r16, $r18;
        java.lang.Integer $r7;
        java.lang.Long $r8, $r9;
        java.lang.String $r10, $r14, $r15, $r17;
        java.io.File $r11;
        java.lang.Object $r12, $r13;
        float $f0, $f1, $f2;

        r0 := @this: com.android.volley.toolbox.DiskBasedCache;

        i0 := @parameter0: int;

        $l5 = r0.<com.android.volley.toolbox.DiskBasedCache: long mTotalSize>;

        $l4 = (long) i0;

        $l8 = $l5 + $l4;

        $i6 = r0.<com.android.volley.toolbox.DiskBasedCache: int mMaxCacheSizeInBytes>;

        $l7 = (long) $i6;

        $b9 = $l8 cmp $l7;

        if $b9 >= 0 goto label1;

        return;

     label1:
        $z1 = <com.android.volley.VolleyLog: boolean DEBUG>;

        if $z1 == 0 goto label2;

        $r18 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.volley.VolleyLog: void v(java.lang.String,java.lang.Object[])>("Pruning old cache entries.", $r18);

     label2:
        l1 = r0.<com.android.volley.toolbox.DiskBasedCache: long mTotalSize>;

        i2 = 0;

        l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $r4 = r0.<com.android.volley.toolbox.DiskBasedCache: java.util.Map mEntries>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set entrySet()>();

        r1 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z3 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label7;

        $r12 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (java.util.Map$Entry) $r12;

        $r13 = interfaceinvoke r2.<java.util.Map$Entry: java.lang.Object getValue()>();

        r3 = (com.android.volley.toolbox.DiskBasedCache$CacheHeader) $r13;

        $r10 = r3.<com.android.volley.toolbox.DiskBasedCache$CacheHeader: java.lang.String key>;

        $r11 = virtualinvoke r0.<com.android.volley.toolbox.DiskBasedCache: java.io.File getFileForKey(java.lang.String)>($r10);

        z0 = virtualinvoke $r11.<java.io.File: boolean delete()>();

        if z0 == 0 goto label4;

        $l21 = r0.<com.android.volley.toolbox.DiskBasedCache: long mTotalSize>;

        $l18 = r3.<com.android.volley.toolbox.DiskBasedCache$CacheHeader: long size>;

        $l20 = $l21 - $l18;

        r0.<com.android.volley.toolbox.DiskBasedCache: long mTotalSize> = $l20;

        goto label5;

     label4:
        $r16 = newarray (java.lang.Object)[2];

        $r14 = r3.<com.android.volley.toolbox.DiskBasedCache$CacheHeader: java.lang.String key>;

        $r16[0] = $r14;

        $r15 = r3.<com.android.volley.toolbox.DiskBasedCache$CacheHeader: java.lang.String key>;

        $r17 = specialinvoke r0.<com.android.volley.toolbox.DiskBasedCache: java.lang.String getFilenameForKey(java.lang.String)>($r15);

        $r16[1] = $r17;

        staticinvoke <com.android.volley.VolleyLog: void d(java.lang.String,java.lang.Object[])>("Could not delete cache entry for key=%s, filename=%s", $r16);

     label5:
        interfaceinvoke r1.<java.util.Iterator: void remove()>();

        i2 = i2 + 1;

        $l17 = r0.<com.android.volley.toolbox.DiskBasedCache: long mTotalSize>;

        $l14 = (long) i0;

        $l16 = $l17 + $l14;

        $f1 = (float) $l16;

        $i15 = r0.<com.android.volley.toolbox.DiskBasedCache: int mMaxCacheSizeInBytes>;

        $f0 = (float) $i15;

        $f2 = $f0 * 0.9F;

        $b19 = $f1 cmpg $f2;

        if $b19 >= 0 goto label6;

        goto label7;

     label6:
        goto label3;

     label7:
        $z2 = <com.android.volley.VolleyLog: boolean DEBUG>;

        if $z2 == 0 goto label8;

        $r6 = newarray (java.lang.Object)[3];

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r6[0] = $r7;

        $l11 = r0.<com.android.volley.toolbox.DiskBasedCache: long mTotalSize>;

        $l10 = $l11 - l1;

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l10);

        $r6[1] = $r8;

        $l13 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        $l12 = $l13 - l3;

        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l12);

        $r6[2] = $r9;

        staticinvoke <com.android.volley.VolleyLog: void v(java.lang.String,java.lang.Object[])>("pruned %d files, %d bytes, %d ms", $r6);

     label8:
        return;
    }

    private void putEntry(java.lang.String, com.android.volley.toolbox.DiskBasedCache$CacheHeader)
    {
        com.android.volley.toolbox.DiskBasedCache r0;
        java.lang.String r1;
        com.android.volley.toolbox.DiskBasedCache$CacheHeader r2, r3;
        java.util.Map $r4, $r5, $r7;
        boolean $z0;
        java.lang.Object $r6;
        long $l0, $l1, $l2, $l3, $l4, $l5, $l6, $l7;

        r0 := @this: com.android.volley.toolbox.DiskBasedCache;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.volley.toolbox.DiskBasedCache$CacheHeader;

        $r4 = r0.<com.android.volley.toolbox.DiskBasedCache: java.util.Map mEntries>;

        $z0 = interfaceinvoke $r4.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $l7 = r0.<com.android.volley.toolbox.DiskBasedCache: long mTotalSize>;

        $l5 = r2.<com.android.volley.toolbox.DiskBasedCache$CacheHeader: long size>;

        $l6 = $l7 + $l5;

        r0.<com.android.volley.toolbox.DiskBasedCache: long mTotalSize> = $l6;

        goto label2;

     label1:
        $r5 = r0.<com.android.volley.toolbox.DiskBasedCache: java.util.Map mEntries>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (com.android.volley.toolbox.DiskBasedCache$CacheHeader) $r6;

        $l3 = r0.<com.android.volley.toolbox.DiskBasedCache: long mTotalSize>;

        $l1 = r2.<com.android.volley.toolbox.DiskBasedCache$CacheHeader: long size>;

        $l0 = r3.<com.android.volley.toolbox.DiskBasedCache$CacheHeader: long size>;

        $l2 = $l1 - $l0;

        $l4 = $l3 + $l2;

        r0.<com.android.volley.toolbox.DiskBasedCache: long mTotalSize> = $l4;

     label2:
        $r7 = r0.<com.android.volley.toolbox.DiskBasedCache: java.util.Map mEntries>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    private void removeEntry(java.lang.String)
    {
        com.android.volley.toolbox.DiskBasedCache r0;
        java.lang.String r1;
        com.android.volley.toolbox.DiskBasedCache$CacheHeader r2;
        java.util.Map $r3, $r5;
        java.lang.Object $r4;
        long $l0, $l1, $l2;

        r0 := @this: com.android.volley.toolbox.DiskBasedCache;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<com.android.volley.toolbox.DiskBasedCache: java.util.Map mEntries>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.volley.toolbox.DiskBasedCache$CacheHeader) $r4;

        if r2 == null goto label1;

        $l1 = r0.<com.android.volley.toolbox.DiskBasedCache: long mTotalSize>;

        $l0 = r2.<com.android.volley.toolbox.DiskBasedCache$CacheHeader: long size>;

        $l2 = $l1 - $l0;

        r0.<com.android.volley.toolbox.DiskBasedCache: long mTotalSize> = $l2;

        $r5 = r0.<com.android.volley.toolbox.DiskBasedCache: java.util.Map mEntries>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

     label1:
        return;
    }

    private static byte[] streamToBytes(java.io.InputStream, int) throws java.io.IOException
    {
        java.io.InputStream r0;
        int i0, i1, i2, $i3, $i4;
        byte[] r1;
        java.io.IOException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        r1 = newarray (byte)[i0];

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $i3 = i0 - i2;

        $i4 = virtualinvoke r0.<java.io.InputStream: int read(byte[],int,int)>(r1, i2, $i3);

        i1 = $i4;

        if $i4 == -1 goto label2;

        i2 = i2 + i1;

        goto label1;

     label2:
        if i2 == i0 goto label3;

        $r2 = new java.io.IOException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes, read ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bytes");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r9);

        throw $r2;

     label3:
        return r1;
    }

    private static int read(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream r0;
        int i0;
        java.io.EOFException $r1;

        r0 := @parameter0: java.io.InputStream;

        i0 = virtualinvoke r0.<java.io.InputStream: int read()>();

        if i0 != -1 goto label1;

        $r1 = new java.io.EOFException;

        specialinvoke $r1.<java.io.EOFException: void <init>()>();

        throw $r1;

     label1:
        return i0;
    }

    static void writeInt(java.io.OutputStream, int) throws java.io.IOException
    {
        java.io.OutputStream r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @parameter0: java.io.OutputStream;

        i0 := @parameter1: int;

        $i1 = i0 >> 0;

        $i2 = $i1 & 255;

        virtualinvoke r0.<java.io.OutputStream: void write(int)>($i2);

        $i3 = i0 >> 8;

        $i4 = $i3 & 255;

        virtualinvoke r0.<java.io.OutputStream: void write(int)>($i4);

        $i5 = i0 >> 16;

        $i6 = $i5 & 255;

        virtualinvoke r0.<java.io.OutputStream: void write(int)>($i6);

        $i7 = i0 >> 24;

        $i8 = $i7 & 255;

        virtualinvoke r0.<java.io.OutputStream: void write(int)>($i8);

        return;
    }

    static int readInt(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream r0;
        byte b0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, i12;

        r0 := @parameter0: java.io.InputStream;

        b0 = 0;

        $i1 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: int read(java.io.InputStream)>(r0);

        $i2 = $i1 << 0;

        i9 = b0 | $i2;

        $i3 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: int read(java.io.InputStream)>(r0);

        $i4 = $i3 << 8;

        i10 = i9 | $i4;

        $i5 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: int read(java.io.InputStream)>(r0);

        $i6 = $i5 << 16;

        i11 = i10 | $i6;

        $i7 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: int read(java.io.InputStream)>(r0);

        $i8 = $i7 << 24;

        i12 = i11 | $i8;

        return i12;
    }

    static void writeLong(java.io.OutputStream, long) throws java.io.IOException
    {
        java.io.OutputStream r0;
        long l0, $l1, $l4, $l7, $l10, $l13, $l17, $l18, $l23;
        int $i2, $i5, $i8, $i11, $i15, $i16, $i21, $i22;
        byte $b3, $b6, $b9, $b12, $b14, $b19, $b20, $b24;

        r0 := @parameter0: java.io.OutputStream;

        l0 := @parameter1: long;

        $l1 = l0 >>> 0;

        $i2 = (int) $l1;

        $b3 = (byte) $i2;

        virtualinvoke r0.<java.io.OutputStream: void write(int)>($b3);

        $l4 = l0 >>> 8;

        $i5 = (int) $l4;

        $b6 = (byte) $i5;

        virtualinvoke r0.<java.io.OutputStream: void write(int)>($b6);

        $l7 = l0 >>> 16;

        $i8 = (int) $l7;

        $b9 = (byte) $i8;

        virtualinvoke r0.<java.io.OutputStream: void write(int)>($b9);

        $l10 = l0 >>> 24;

        $i11 = (int) $l10;

        $b12 = (byte) $i11;

        virtualinvoke r0.<java.io.OutputStream: void write(int)>($b12);

        $l13 = l0 >>> 32;

        $i15 = (int) $l13;

        $b14 = (byte) $i15;

        virtualinvoke r0.<java.io.OutputStream: void write(int)>($b14);

        $l17 = l0 >>> 40;

        $i16 = (int) $l17;

        $b19 = (byte) $i16;

        virtualinvoke r0.<java.io.OutputStream: void write(int)>($b19);

        $l18 = l0 >>> 48;

        $i21 = (int) $l18;

        $b20 = (byte) $i21;

        virtualinvoke r0.<java.io.OutputStream: void write(int)>($b20);

        $l23 = l0 >>> 56;

        $i22 = (int) $l23;

        $b24 = (byte) $i22;

        virtualinvoke r0.<java.io.OutputStream: void write(int)>($b24);

        return;
    }

    static long readLong(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream r0;
        long l0, $l2, $l3, $l4, $l6, $l7, $l8, $l10, $l11, $l12, $l14, $l15, $l17, $l18, $l19, $l21, $l22, $l23, $l25, $l26, $l27, $l29, $l30, $l31, $l32, l33, l34, l35, l36, l37, l38, l39, l40;
        int $i1, $i5, $i9, $i13, $i16, $i20, $i24, $i28;

        r0 := @parameter0: java.io.InputStream;

        l0 = 0L;

        $i1 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: int read(java.io.InputStream)>(r0);

        $l2 = (long) $i1;

        $l3 = $l2 & 255L;

        $l4 = $l3 << 0;

        l33 = l0 | $l4;

        $i5 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: int read(java.io.InputStream)>(r0);

        $l6 = (long) $i5;

        $l7 = $l6 & 255L;

        $l8 = $l7 << 8;

        l34 = l33 | $l8;

        $i9 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: int read(java.io.InputStream)>(r0);

        $l10 = (long) $i9;

        $l11 = $l10 & 255L;

        $l12 = $l11 << 16;

        l35 = l34 | $l12;

        $i13 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: int read(java.io.InputStream)>(r0);

        $l15 = (long) $i13;

        $l14 = $l15 & 255L;

        $l17 = $l14 << 24;

        l36 = l35 | $l17;

        $i16 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: int read(java.io.InputStream)>(r0);

        $l19 = (long) $i16;

        $l18 = $l19 & 255L;

        $l21 = $l18 << 32;

        l37 = l36 | $l21;

        $i20 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: int read(java.io.InputStream)>(r0);

        $l23 = (long) $i20;

        $l22 = $l23 & 255L;

        $l25 = $l22 << 40;

        l38 = l37 | $l25;

        $i24 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: int read(java.io.InputStream)>(r0);

        $l27 = (long) $i24;

        $l26 = $l27 & 255L;

        $l29 = $l26 << 48;

        l39 = l38 | $l29;

        $i28 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: int read(java.io.InputStream)>(r0);

        $l31 = (long) $i28;

        $l32 = $l31 & 255L;

        $l30 = $l32 << 56;

        l40 = l39 | $l30;

        return l40;
    }

    static void writeString(java.io.OutputStream, java.lang.String) throws java.io.IOException
    {
        java.io.OutputStream r0;
        java.lang.String r1;
        byte[] r2;
        int $i0, $i2;
        long $l1;

        r0 := @parameter0: java.io.OutputStream;

        r1 := @parameter1: java.lang.String;

        r2 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $i0 = lengthof r2;

        $l1 = (long) $i0;

        staticinvoke <com.android.volley.toolbox.DiskBasedCache: void writeLong(java.io.OutputStream,long)>(r0, $l1);

        $i2 = lengthof r2;

        virtualinvoke r0.<java.io.OutputStream: void write(byte[],int,int)>(r2, 0, $i2);

        return;
    }

    static java.lang.String readString(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream r0;
        int i0;
        byte[] r1;
        long $l1;
        java.lang.String $r2;

        r0 := @parameter0: java.io.InputStream;

        $l1 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: long readLong(java.io.InputStream)>(r0);

        i0 = (int) $l1;

        r1 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: byte[] streamToBytes(java.io.InputStream,int)>(r0, i0);

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(byte[],java.lang.String)>(r1, "UTF-8");

        return $r2;
    }

    static void writeStringStringMap(java.util.Map, java.io.OutputStream) throws java.io.IOException
    {
        java.util.Map r0;
        java.io.OutputStream r1;
        java.util.Iterator r2;
        java.util.Map$Entry r3;
        int $i0;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5, $r6, $r8;
        java.lang.String $r7, $r9;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: java.io.OutputStream;

        if r0 == null goto label3;

        $i0 = interfaceinvoke r0.<java.util.Map: int size()>();

        staticinvoke <com.android.volley.toolbox.DiskBasedCache: void writeInt(java.io.OutputStream,int)>(r1, $i0);

        $r4 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        r2 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.util.Map$Entry) $r5;

        $r6 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = (java.lang.String) $r6;

        staticinvoke <com.android.volley.toolbox.DiskBasedCache: void writeString(java.io.OutputStream,java.lang.String)>(r1, $r7);

        $r8 = interfaceinvoke r3.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (java.lang.String) $r8;

        staticinvoke <com.android.volley.toolbox.DiskBasedCache: void writeString(java.io.OutputStream,java.lang.String)>(r1, $r9);

        goto label1;

     label2:
        goto label4;

     label3:
        staticinvoke <com.android.volley.toolbox.DiskBasedCache: void writeInt(java.io.OutputStream,int)>(r1, 0);

     label4:
        return;
    }

    static java.util.Map readStringStringMap(java.io.InputStream) throws java.io.IOException
    {
        java.io.InputStream r0;
        int i0, i1;
        java.util.Map r1, $r4;
        java.lang.String r2, r3, $r5, $r6;
        java.util.HashMap r8;

        r0 := @parameter0: java.io.InputStream;

        i0 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: int readInt(java.io.InputStream)>(r0);

        if i0 != 0 goto label1;

        $r4 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        goto label2;

     label1:
        r8 = new java.util.HashMap;

        $r4 = r8;

        specialinvoke r8.<java.util.HashMap: void <init>(int)>(i0);

     label2:
        r1 = $r4;

        i1 = 0;

     label3:
        if i1 >= i0 goto label4;

        $r5 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: java.lang.String readString(java.io.InputStream)>(r0);

        r2 = virtualinvoke $r5.<java.lang.String: java.lang.String intern()>();

        $r6 = staticinvoke <com.android.volley.toolbox.DiskBasedCache: java.lang.String readString(java.io.InputStream)>(r0);

        r3 = virtualinvoke $r6.<java.lang.String: java.lang.String intern()>();

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

        i1 = i1 + 1;

        goto label3;

     label4:
        return r1;
    }

    public static void <clinit>()
    {
        <com.android.volley.toolbox.DiskBasedCache: int CACHE_MAGIC> = 538183203;

        <com.android.volley.toolbox.DiskBasedCache: float HYSTERESIS_FACTOR> = 0.9F;

        <com.android.volley.toolbox.DiskBasedCache: int DEFAULT_DISK_USAGE_BYTES> = 5242880;

        return;
    }
}
