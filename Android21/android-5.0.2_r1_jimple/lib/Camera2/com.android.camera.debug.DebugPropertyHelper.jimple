public class com.android.camera.debug.DebugPropertyHelper extends java.lang.Object
{
    private static final boolean FORCE_ZSL_APP;
    private static final java.lang.String OFF_VALUE;
    private static final java.lang.String ON_VALUE;
    private static final java.lang.String PREFIX;
    private static final java.lang.String PROP_ENABLE_CAPTURE_MODULE;
    private static final java.lang.String PROP_FRAME_LOG;
    private static final java.lang.String PROP_CAPTURE_DEBUG_UI;
    private static final java.lang.String PROP_ENABLE_ZSL;
    private static final java.lang.String PROP_WRITE_CAPTURE_DATA;

    public void <init>()
    {
        com.android.camera.debug.DebugPropertyHelper r0;

        r0 := @this: com.android.camera.debug.DebugPropertyHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static boolean isPropertyOn(java.lang.String)
    {
        java.lang.String r0, $r1, $r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = "1";

        $r2 = staticinvoke <com.android.camera.util.SystemProperties: java.lang.String get(java.lang.String,java.lang.String)>(r0, "0");

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        return $z0;
    }

    public static boolean isCaptureModuleEnabled()
    {
        boolean $z0, $z1;

        $z0 = staticinvoke <com.android.camera.debug.DebugPropertyHelper: boolean isPropertyOn(java.lang.String)>("persist.camera.newcapture");

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public static boolean isZslEnabled()
    {
        boolean $z0, $z1;

        $z0 = staticinvoke <com.android.camera.debug.DebugPropertyHelper: boolean isPropertyOn(java.lang.String)>("persist.camera.zsl");

        if $z0 != 0 goto label1;

        goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public static boolean showFrameDebugLog()
    {
        boolean $z0;

        $z0 = staticinvoke <com.android.camera.debug.DebugPropertyHelper: boolean isPropertyOn(java.lang.String)>("persist.camera.frame_log");

        return $z0;
    }

    public static boolean showCaptureDebugUI()
    {
        boolean $z0;

        $z0 = staticinvoke <com.android.camera.debug.DebugPropertyHelper: boolean isPropertyOn(java.lang.String)>("persist.camera.debug_ui");

        return $z0;
    }

    public static boolean writeCaptureData()
    {
        boolean $z0;

        $z0 = staticinvoke <com.android.camera.debug.DebugPropertyHelper: boolean isPropertyOn(java.lang.String)>("persist.camera.capture_write");

        return $z0;
    }

    public static void <clinit>()
    {
        <com.android.camera.debug.DebugPropertyHelper: java.lang.String PROP_WRITE_CAPTURE_DATA> = "persist.camera.capture_write";

        <com.android.camera.debug.DebugPropertyHelper: java.lang.String PROP_ENABLE_ZSL> = "persist.camera.zsl";

        <com.android.camera.debug.DebugPropertyHelper: java.lang.String PROP_CAPTURE_DEBUG_UI> = "persist.camera.debug_ui";

        <com.android.camera.debug.DebugPropertyHelper: java.lang.String PROP_FRAME_LOG> = "persist.camera.frame_log";

        <com.android.camera.debug.DebugPropertyHelper: java.lang.String PROP_ENABLE_CAPTURE_MODULE> = "persist.camera.newcapture";

        <com.android.camera.debug.DebugPropertyHelper: java.lang.String PREFIX> = "persist.camera";

        <com.android.camera.debug.DebugPropertyHelper: java.lang.String ON_VALUE> = "1";

        <com.android.camera.debug.DebugPropertyHelper: java.lang.String OFF_VALUE> = "0";

        <com.android.camera.debug.DebugPropertyHelper: boolean FORCE_ZSL_APP> = 0;

        return;
    }
}
