public class com.android.ex.camera2.utils.Camera2CaptureCallbackSplitter extends android.hardware.camera2.CameraCaptureSession$CaptureCallback
{
    private final java.util.List mRecipients;

    public transient void <init>(android.hardware.camera2.CameraCaptureSession$CaptureCallback[])
    {
        com.android.ex.camera2.utils.Camera2CaptureCallbackSplitter r0;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback[] r1, r2;
        int i0, i1;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback r3;
        java.util.LinkedList $r4;
        java.util.List $r5;

        r0 := @this: com.android.ex.camera2.utils.Camera2CaptureCallbackSplitter;

        r1 := @parameter0: android.hardware.camera2.CameraCaptureSession$CaptureCallback[];

        specialinvoke r0.<android.hardware.camera2.CameraCaptureSession$CaptureCallback: void <init>()>();

        $r4 = new java.util.LinkedList;

        specialinvoke $r4.<java.util.LinkedList: void <init>()>();

        r0.<com.android.ex.camera2.utils.Camera2CaptureCallbackSplitter: java.util.List mRecipients> = $r4;

        r2 = r1;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = r2[i1];

        if r3 == null goto label2;

        $r5 = r0.<com.android.ex.camera2.utils.Camera2CaptureCallbackSplitter: java.util.List mRecipients>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r3);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    public void onCaptureCompleted(android.hardware.camera2.CameraCaptureSession, android.hardware.camera2.CaptureRequest, android.hardware.camera2.TotalCaptureResult)
    {
        com.android.ex.camera2.utils.Camera2CaptureCallbackSplitter r0;
        android.hardware.camera2.CameraCaptureSession r1;
        android.hardware.camera2.CaptureRequest r2;
        android.hardware.camera2.TotalCaptureResult r3;
        java.util.Iterator r4;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback r5;
        java.util.List $r6;
        boolean $z0;
        java.lang.Object $r7;

        r0 := @this: com.android.ex.camera2.utils.Camera2CaptureCallbackSplitter;

        r1 := @parameter0: android.hardware.camera2.CameraCaptureSession;

        r2 := @parameter1: android.hardware.camera2.CaptureRequest;

        r3 := @parameter2: android.hardware.camera2.TotalCaptureResult;

        $r6 = r0.<com.android.ex.camera2.utils.Camera2CaptureCallbackSplitter: java.util.List mRecipients>;

        r4 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.hardware.camera2.CameraCaptureSession$CaptureCallback) $r7;

        virtualinvoke r5.<android.hardware.camera2.CameraCaptureSession$CaptureCallback: void onCaptureCompleted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.TotalCaptureResult)>(r1, r2, r3);

        goto label1;

     label2:
        return;
    }

    public void onCaptureFailed(android.hardware.camera2.CameraCaptureSession, android.hardware.camera2.CaptureRequest, android.hardware.camera2.CaptureFailure)
    {
        com.android.ex.camera2.utils.Camera2CaptureCallbackSplitter r0;
        android.hardware.camera2.CameraCaptureSession r1;
        android.hardware.camera2.CaptureRequest r2;
        android.hardware.camera2.CaptureFailure r3;
        java.util.Iterator r4;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback r5;
        java.util.List $r6;
        boolean $z0;
        java.lang.Object $r7;

        r0 := @this: com.android.ex.camera2.utils.Camera2CaptureCallbackSplitter;

        r1 := @parameter0: android.hardware.camera2.CameraCaptureSession;

        r2 := @parameter1: android.hardware.camera2.CaptureRequest;

        r3 := @parameter2: android.hardware.camera2.CaptureFailure;

        $r6 = r0.<com.android.ex.camera2.utils.Camera2CaptureCallbackSplitter: java.util.List mRecipients>;

        r4 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.hardware.camera2.CameraCaptureSession$CaptureCallback) $r7;

        virtualinvoke r5.<android.hardware.camera2.CameraCaptureSession$CaptureCallback: void onCaptureFailed(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureFailure)>(r1, r2, r3);

        goto label1;

     label2:
        return;
    }

    public void onCaptureProgressed(android.hardware.camera2.CameraCaptureSession, android.hardware.camera2.CaptureRequest, android.hardware.camera2.CaptureResult)
    {
        com.android.ex.camera2.utils.Camera2CaptureCallbackSplitter r0;
        android.hardware.camera2.CameraCaptureSession r1;
        android.hardware.camera2.CaptureRequest r2;
        android.hardware.camera2.CaptureResult r3;
        java.util.Iterator r4;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback r5;
        java.util.List $r6;
        boolean $z0;
        java.lang.Object $r7;

        r0 := @this: com.android.ex.camera2.utils.Camera2CaptureCallbackSplitter;

        r1 := @parameter0: android.hardware.camera2.CameraCaptureSession;

        r2 := @parameter1: android.hardware.camera2.CaptureRequest;

        r3 := @parameter2: android.hardware.camera2.CaptureResult;

        $r6 = r0.<com.android.ex.camera2.utils.Camera2CaptureCallbackSplitter: java.util.List mRecipients>;

        r4 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (android.hardware.camera2.CameraCaptureSession$CaptureCallback) $r7;

        virtualinvoke r5.<android.hardware.camera2.CameraCaptureSession$CaptureCallback: void onCaptureProgressed(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureResult)>(r1, r2, r3);

        goto label1;

     label2:
        return;
    }

    public void onCaptureSequenceAborted(android.hardware.camera2.CameraCaptureSession, int)
    {
        java.lang.Object $r0;
        com.android.ex.camera2.utils.Camera2CaptureCallbackSplitter r1;
        android.hardware.camera2.CameraCaptureSession r2;
        int i0;
        java.util.Iterator r3;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback r4;
        java.util.List $r5;
        boolean $z0;

        r1 := @this: com.android.ex.camera2.utils.Camera2CaptureCallbackSplitter;

        r2 := @parameter0: android.hardware.camera2.CameraCaptureSession;

        i0 := @parameter1: int;

        $r5 = r1.<com.android.ex.camera2.utils.Camera2CaptureCallbackSplitter: java.util.List mRecipients>;

        r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r0 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.hardware.camera2.CameraCaptureSession$CaptureCallback) $r0;

        virtualinvoke r4.<android.hardware.camera2.CameraCaptureSession$CaptureCallback: void onCaptureSequenceAborted(android.hardware.camera2.CameraCaptureSession,int)>(r2, i0);

        goto label1;

     label2:
        return;
    }

    public void onCaptureSequenceCompleted(android.hardware.camera2.CameraCaptureSession, int, long)
    {
        com.android.ex.camera2.utils.Camera2CaptureCallbackSplitter r0;
        android.hardware.camera2.CameraCaptureSession r1;
        int i0;
        long l1;
        java.util.Iterator r2;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback r3;
        java.util.List $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: com.android.ex.camera2.utils.Camera2CaptureCallbackSplitter;

        r1 := @parameter0: android.hardware.camera2.CameraCaptureSession;

        i0 := @parameter1: int;

        l1 := @parameter2: long;

        $r4 = r0.<com.android.ex.camera2.utils.Camera2CaptureCallbackSplitter: java.util.List mRecipients>;

        r2 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.hardware.camera2.CameraCaptureSession$CaptureCallback) $r5;

        virtualinvoke r3.<android.hardware.camera2.CameraCaptureSession$CaptureCallback: void onCaptureSequenceCompleted(android.hardware.camera2.CameraCaptureSession,int,long)>(r1, i0, l1);

        goto label1;

     label2:
        return;
    }

    public void onCaptureStarted(android.hardware.camera2.CameraCaptureSession, android.hardware.camera2.CaptureRequest, long, long)
    {
        com.android.ex.camera2.utils.Camera2CaptureCallbackSplitter r0;
        android.hardware.camera2.CameraCaptureSession r1;
        android.hardware.camera2.CaptureRequest r2;
        long l0, l1;
        java.util.Iterator r3;
        android.hardware.camera2.CameraCaptureSession$CaptureCallback r4;
        java.util.List $r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: com.android.ex.camera2.utils.Camera2CaptureCallbackSplitter;

        r1 := @parameter0: android.hardware.camera2.CameraCaptureSession;

        r2 := @parameter1: android.hardware.camera2.CaptureRequest;

        l0 := @parameter2: long;

        l1 := @parameter3: long;

        $r5 = r0.<com.android.ex.camera2.utils.Camera2CaptureCallbackSplitter: java.util.List mRecipients>;

        r3 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.hardware.camera2.CameraCaptureSession$CaptureCallback) $r6;

        virtualinvoke r4.<android.hardware.camera2.CameraCaptureSession$CaptureCallback: void onCaptureStarted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,long,long)>(r1, r2, l0, l1);

        goto label1;

     label2:
        return;
    }
}
