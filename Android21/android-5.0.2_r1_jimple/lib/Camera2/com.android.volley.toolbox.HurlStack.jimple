public class com.android.volley.toolbox.HurlStack extends java.lang.Object implements com.android.volley.toolbox.HttpStack
{
    private static final java.lang.String HEADER_CONTENT_TYPE;
    private final com.android.volley.toolbox.HurlStack$UrlRewriter mUrlRewriter;
    private final javax.net.ssl.SSLSocketFactory mSslSocketFactory;

    public void <init>()
    {
        com.android.volley.toolbox.HurlStack r0;

        r0 := @this: com.android.volley.toolbox.HurlStack;

        specialinvoke r0.<com.android.volley.toolbox.HurlStack: void <init>(com.android.volley.toolbox.HurlStack$UrlRewriter)>(null);

        return;
    }

    public void <init>(com.android.volley.toolbox.HurlStack$UrlRewriter)
    {
        com.android.volley.toolbox.HurlStack r0;
        com.android.volley.toolbox.HurlStack$UrlRewriter r1;

        r0 := @this: com.android.volley.toolbox.HurlStack;

        r1 := @parameter0: com.android.volley.toolbox.HurlStack$UrlRewriter;

        specialinvoke r0.<com.android.volley.toolbox.HurlStack: void <init>(com.android.volley.toolbox.HurlStack$UrlRewriter,javax.net.ssl.SSLSocketFactory)>(r1, null);

        return;
    }

    public void <init>(com.android.volley.toolbox.HurlStack$UrlRewriter, javax.net.ssl.SSLSocketFactory)
    {
        com.android.volley.toolbox.HurlStack r0;
        com.android.volley.toolbox.HurlStack$UrlRewriter r1;
        javax.net.ssl.SSLSocketFactory r2;

        r0 := @this: com.android.volley.toolbox.HurlStack;

        r1 := @parameter0: com.android.volley.toolbox.HurlStack$UrlRewriter;

        r2 := @parameter1: javax.net.ssl.SSLSocketFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.volley.toolbox.HurlStack: com.android.volley.toolbox.HurlStack$UrlRewriter mUrlRewriter> = r1;

        r0.<com.android.volley.toolbox.HurlStack: javax.net.ssl.SSLSocketFactory mSslSocketFactory> = r2;

        return;
    }

    public org.apache.http.HttpResponse performRequest(com.android.volley.Request, java.util.Map) throws java.io.IOException, com.android.volley.AuthFailureError
    {
        com.android.volley.toolbox.HurlStack r0;
        com.android.volley.Request r1;
        java.util.Map r2, $r16, $r25;
        java.lang.String r3, r5, r8, $r21, $r28, $r32, $r36, $r43;
        java.util.HashMap r4, $r14;
        java.net.HttpURLConnection r6;
        java.util.Iterator r7, r11;
        org.apache.http.message.BasicStatusLine r9, $r20;
        org.apache.http.message.BasicHttpResponse r10, $r23;
        java.util.Map$Entry r12;
        org.apache.http.message.BasicHeader r13, $r30;
        com.android.volley.toolbox.HurlStack$UrlRewriter $r15, $r37;
        java.net.URL $r17, r45;
        java.util.Set $r18, $r24;
        org.apache.http.ProtocolVersion $r19, r46;
        boolean $z0, $z1;
        int $i0, i1;
        org.apache.http.HttpEntity $r22;
        java.lang.Object $r26, $r27, $r29, $r31, $r35, $r38, $r39;
        java.io.IOException $r33, $r42;
        java.util.List $r34;
        java.lang.StringBuilder $r40, $r41, $r44;

        r0 := @this: com.android.volley.toolbox.HurlStack;

        r1 := @parameter0: com.android.volley.Request;

        r2 := @parameter1: java.util.Map;

        r3 = virtualinvoke r1.<com.android.volley.Request: java.lang.String getUrl()>();

        $r14 = new java.util.HashMap;

        specialinvoke $r14.<java.util.HashMap: void <init>()>();

        r4 = $r14;

        $r16 = virtualinvoke r1.<com.android.volley.Request: java.util.Map getHeaders()>();

        virtualinvoke r4.<java.util.HashMap: void putAll(java.util.Map)>($r16);

        virtualinvoke r4.<java.util.HashMap: void putAll(java.util.Map)>(r2);

        $r15 = r0.<com.android.volley.toolbox.HurlStack: com.android.volley.toolbox.HurlStack$UrlRewriter mUrlRewriter>;

        if $r15 == null goto label2;

        $r37 = r0.<com.android.volley.toolbox.HurlStack: com.android.volley.toolbox.HurlStack$UrlRewriter mUrlRewriter>;

        r5 = interfaceinvoke $r37.<com.android.volley.toolbox.HurlStack$UrlRewriter: java.lang.String rewriteUrl(java.lang.String)>(r3);

        if r5 != null goto label1;

        $r42 = new java.io.IOException;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("URL blocked by rewriter: ");

        $r44 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r42.<java.io.IOException: void <init>(java.lang.String)>($r43);

        throw $r42;

     label1:
        r3 = r5;

     label2:
        $r17 = new java.net.URL;

        specialinvoke $r17.<java.net.URL: void <init>(java.lang.String)>(r3);

        r45 = $r17;

        r6 = specialinvoke r0.<com.android.volley.toolbox.HurlStack: java.net.HttpURLConnection openConnection(java.net.URL,com.android.volley.Request)>(r45, r1);

        $r18 = virtualinvoke r4.<java.util.HashMap: java.util.Set keySet()>();

        r7 = interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r38 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.String) $r38;

        $r39 = virtualinvoke r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r8);

        $r36 = (java.lang.String) $r39;

        virtualinvoke r6.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>(r8, $r36);

        goto label3;

     label4:
        staticinvoke <com.android.volley.toolbox.HurlStack: void setConnectionParametersForRequest(java.net.HttpURLConnection,com.android.volley.Request)>(r6, r1);

        $r19 = new org.apache.http.ProtocolVersion;

        specialinvoke $r19.<org.apache.http.ProtocolVersion: void <init>(java.lang.String,int,int)>("HTTP", 1, 1);

        r46 = $r19;

        i1 = virtualinvoke r6.<java.net.HttpURLConnection: int getResponseCode()>();

        if i1 != -1 goto label5;

        $r33 = new java.io.IOException;

        specialinvoke $r33.<java.io.IOException: void <init>(java.lang.String)>("Could not retrieve response code from HttpUrlConnection.");

        throw $r33;

     label5:
        $r20 = new org.apache.http.message.BasicStatusLine;

        $i0 = virtualinvoke r6.<java.net.HttpURLConnection: int getResponseCode()>();

        $r21 = virtualinvoke r6.<java.net.HttpURLConnection: java.lang.String getResponseMessage()>();

        specialinvoke $r20.<org.apache.http.message.BasicStatusLine: void <init>(org.apache.http.ProtocolVersion,int,java.lang.String)>(r46, $i0, $r21);

        r9 = $r20;

        $r23 = new org.apache.http.message.BasicHttpResponse;

        specialinvoke $r23.<org.apache.http.message.BasicHttpResponse: void <init>(org.apache.http.StatusLine)>(r9);

        r10 = $r23;

        $r22 = staticinvoke <com.android.volley.toolbox.HurlStack: org.apache.http.HttpEntity entityFromConnection(java.net.HttpURLConnection)>(r6);

        virtualinvoke r10.<org.apache.http.message.BasicHttpResponse: void setEntity(org.apache.http.HttpEntity)>($r22);

        $r25 = virtualinvoke r6.<java.net.HttpURLConnection: java.util.Map getHeaderFields()>();

        $r24 = interfaceinvoke $r25.<java.util.Map: java.util.Set entrySet()>();

        r11 = interfaceinvoke $r24.<java.util.Set: java.util.Iterator iterator()>();

     label6:
        $z1 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label8;

        $r26 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r12 = (java.util.Map$Entry) $r26;

        $r27 = interfaceinvoke r12.<java.util.Map$Entry: java.lang.Object getKey()>();

        if $r27 == null goto label7;

        $r30 = new org.apache.http.message.BasicHeader;

        $r31 = interfaceinvoke r12.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r28 = (java.lang.String) $r31;

        $r29 = interfaceinvoke r12.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r34 = (java.util.List) $r29;

        $r35 = interfaceinvoke $r34.<java.util.List: java.lang.Object get(int)>(0);

        $r32 = (java.lang.String) $r35;

        specialinvoke $r30.<org.apache.http.message.BasicHeader: void <init>(java.lang.String,java.lang.String)>($r28, $r32);

        r13 = $r30;

        virtualinvoke r10.<org.apache.http.message.BasicHttpResponse: void addHeader(org.apache.http.Header)>(r13);

     label7:
        goto label6;

     label8:
        return r10;
    }

    private static org.apache.http.HttpEntity entityFromConnection(java.net.HttpURLConnection)
    {
        java.net.HttpURLConnection r0;
        org.apache.http.entity.BasicHttpEntity r1, $r4;
        java.io.InputStream r2;
        int $i0;
        long $l1;
        java.lang.String $r5, $r6;
        java.io.IOException $r7;

        r0 := @parameter0: java.net.HttpURLConnection;

        $r4 = new org.apache.http.entity.BasicHttpEntity;

        specialinvoke $r4.<org.apache.http.entity.BasicHttpEntity: void <init>()>();

        r1 = $r4;

     label1:
        r2 = virtualinvoke r0.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        r2 = virtualinvoke r0.<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>();

     label4:
        virtualinvoke r1.<org.apache.http.entity.BasicHttpEntity: void setContent(java.io.InputStream)>(r2);

        $i0 = virtualinvoke r0.<java.net.HttpURLConnection: int getContentLength()>();

        $l1 = (long) $i0;

        virtualinvoke r1.<org.apache.http.entity.BasicHttpEntity: void setContentLength(long)>($l1);

        $r5 = virtualinvoke r0.<java.net.HttpURLConnection: java.lang.String getContentEncoding()>();

        virtualinvoke r1.<org.apache.http.entity.BasicHttpEntity: void setContentEncoding(java.lang.String)>($r5);

        $r6 = virtualinvoke r0.<java.net.HttpURLConnection: java.lang.String getContentType()>();

        virtualinvoke r1.<org.apache.http.entity.BasicHttpEntity: void setContentType(java.lang.String)>($r6);

        return r1;

        catch java.io.IOException from label1 to label2 with label3;
    }

    protected java.net.HttpURLConnection createConnection(java.net.URL) throws java.io.IOException
    {
        com.android.volley.toolbox.HurlStack r0;
        java.net.URL r1;
        java.net.URLConnection $r2;
        java.net.HttpURLConnection $r3;

        r0 := @this: com.android.volley.toolbox.HurlStack;

        r1 := @parameter0: java.net.URL;

        $r2 = virtualinvoke r1.<java.net.URL: java.net.URLConnection openConnection()>();

        $r3 = (java.net.HttpURLConnection) $r2;

        return $r3;
    }

    private java.net.HttpURLConnection openConnection(java.net.URL, com.android.volley.Request) throws java.io.IOException
    {
        com.android.volley.toolbox.HurlStack r0;
        java.net.URL r1;
        com.android.volley.Request r2;
        java.net.HttpURLConnection r3;
        int i0;
        java.lang.String $r4, $r5;
        boolean $z0;
        javax.net.ssl.SSLSocketFactory $r6, $r7;
        javax.net.ssl.HttpsURLConnection $r8;

        r0 := @this: com.android.volley.toolbox.HurlStack;

        r1 := @parameter0: java.net.URL;

        r2 := @parameter1: com.android.volley.Request;

        r3 = virtualinvoke r0.<com.android.volley.toolbox.HurlStack: java.net.HttpURLConnection createConnection(java.net.URL)>(r1);

        i0 = virtualinvoke r2.<com.android.volley.Request: int getTimeoutMs()>();

        virtualinvoke r3.<java.net.HttpURLConnection: void setConnectTimeout(int)>(i0);

        virtualinvoke r3.<java.net.HttpURLConnection: void setReadTimeout(int)>(i0);

        virtualinvoke r3.<java.net.HttpURLConnection: void setUseCaches(boolean)>(0);

        virtualinvoke r3.<java.net.HttpURLConnection: void setDoInput(boolean)>(1);

        $r4 = "https";

        $r5 = virtualinvoke r1.<java.net.URL: java.lang.String getProtocol()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label1;

        $r6 = r0.<com.android.volley.toolbox.HurlStack: javax.net.ssl.SSLSocketFactory mSslSocketFactory>;

        if $r6 == null goto label1;

        $r8 = (javax.net.ssl.HttpsURLConnection) r3;

        $r7 = r0.<com.android.volley.toolbox.HurlStack: javax.net.ssl.SSLSocketFactory mSslSocketFactory>;

        virtualinvoke $r8.<javax.net.ssl.HttpsURLConnection: void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)>($r7);

     label1:
        return r3;
    }

    static void setConnectionParametersForRequest(java.net.HttpURLConnection, com.android.volley.Request) throws java.io.IOException, com.android.volley.AuthFailureError
    {
        java.net.HttpURLConnection r0;
        com.android.volley.Request r1;
        byte[] r2;
        java.io.DataOutputStream r3, $r5;
        int $i0;
        java.lang.String $r4;
        java.io.OutputStream $r6;
        java.lang.IllegalStateException $r7;

        r0 := @parameter0: java.net.HttpURLConnection;

        r1 := @parameter1: com.android.volley.Request;

        $i0 = virtualinvoke r1.<com.android.volley.Request: int getMethod()>();

        tableswitch($i0)
        {
            case -1: goto label01;
            case 0: goto label02;
            case 1: goto label04;
            case 2: goto label05;
            case 3: goto label03;
            case 4: goto label06;
            case 5: goto label07;
            case 6: goto label08;
            case 7: goto label09;
            default: goto label10;
        };

     label01:
        r2 = virtualinvoke r1.<com.android.volley.Request: byte[] getPostBody()>();

        if r2 == null goto label11;

        virtualinvoke r0.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

        virtualinvoke r0.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("POST");

        $r4 = virtualinvoke r1.<com.android.volley.Request: java.lang.String getPostBodyContentType()>();

        virtualinvoke r0.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>("Content-Type", $r4);

        $r5 = new java.io.DataOutputStream;

        $r6 = virtualinvoke r0.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        specialinvoke $r5.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r6);

        r3 = $r5;

        virtualinvoke r3.<java.io.DataOutputStream: void write(byte[])>(r2);

        virtualinvoke r3.<java.io.DataOutputStream: void close()>();

        goto label11;

     label02:
        virtualinvoke r0.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("GET");

        goto label11;

     label03:
        virtualinvoke r0.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("DELETE");

        goto label11;

     label04:
        virtualinvoke r0.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("POST");

        staticinvoke <com.android.volley.toolbox.HurlStack: void addBodyIfExists(java.net.HttpURLConnection,com.android.volley.Request)>(r0, r1);

        goto label11;

     label05:
        virtualinvoke r0.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("PUT");

        staticinvoke <com.android.volley.toolbox.HurlStack: void addBodyIfExists(java.net.HttpURLConnection,com.android.volley.Request)>(r0, r1);

        goto label11;

     label06:
        virtualinvoke r0.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("HEAD");

        goto label11;

     label07:
        virtualinvoke r0.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("OPTIONS");

        goto label11;

     label08:
        virtualinvoke r0.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("TRACE");

        goto label11;

     label09:
        virtualinvoke r0.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>("PATCH");

        staticinvoke <com.android.volley.toolbox.HurlStack: void addBodyIfExists(java.net.HttpURLConnection,com.android.volley.Request)>(r0, r1);

        goto label11;

     label10:
        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Unknown method type.");

        throw $r7;

     label11:
        return;
    }

    private static void addBodyIfExists(java.net.HttpURLConnection, com.android.volley.Request) throws java.io.IOException, com.android.volley.AuthFailureError
    {
        java.net.HttpURLConnection r0;
        com.android.volley.Request r1;
        byte[] r2;
        java.io.DataOutputStream r3, $r5;
        java.lang.String $r4;
        java.io.OutputStream $r6;

        r0 := @parameter0: java.net.HttpURLConnection;

        r1 := @parameter1: com.android.volley.Request;

        r2 = virtualinvoke r1.<com.android.volley.Request: byte[] getBody()>();

        if r2 == null goto label1;

        virtualinvoke r0.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

        $r4 = virtualinvoke r1.<com.android.volley.Request: java.lang.String getBodyContentType()>();

        virtualinvoke r0.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>("Content-Type", $r4);

        $r5 = new java.io.DataOutputStream;

        $r6 = virtualinvoke r0.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        specialinvoke $r5.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r6);

        r3 = $r5;

        virtualinvoke r3.<java.io.DataOutputStream: void write(byte[])>(r2);

        virtualinvoke r3.<java.io.DataOutputStream: void close()>();

     label1:
        return;
    }

    public static void <clinit>()
    {
        <com.android.volley.toolbox.HurlStack: java.lang.String HEADER_CONTENT_TYPE> = "Content-Type";

        return;
    }
}
