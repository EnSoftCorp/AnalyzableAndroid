class com.android.camera.exif.CountedDataInputStream extends java.io.FilterInputStream
{
    private int mCount;
    private final byte[] mByteArray;
    private final java.nio.ByteBuffer mByteBuffer;
    static final boolean $assertionsDisabled;

    protected void <init>(java.io.InputStream)
    {
        com.android.camera.exif.CountedDataInputStream r0;
        java.io.InputStream r1;
        byte[] $r2, $r3;
        java.nio.ByteBuffer $r4;

        r0 := @this: com.android.camera.exif.CountedDataInputStream;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<java.io.FilterInputStream: void <init>(java.io.InputStream)>(r1);

        r0.<com.android.camera.exif.CountedDataInputStream: int mCount> = 0;

        $r2 = newarray (byte)[8];

        r0.<com.android.camera.exif.CountedDataInputStream: byte[] mByteArray> = $r2;

        $r3 = r0.<com.android.camera.exif.CountedDataInputStream: byte[] mByteArray>;

        $r4 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r3);

        r0.<com.android.camera.exif.CountedDataInputStream: java.nio.ByteBuffer mByteBuffer> = $r4;

        return;
    }

    public int getReadByteCount()
    {
        com.android.camera.exif.CountedDataInputStream r0;
        int $i0;

        r0 := @this: com.android.camera.exif.CountedDataInputStream;

        $i0 = r0.<com.android.camera.exif.CountedDataInputStream: int mCount>;

        return $i0;
    }

    public int read(byte[]) throws java.io.IOException
    {
        com.android.camera.exif.CountedDataInputStream r0;
        byte[] r1;
        int i0, $i1, $i2, $i3;
        java.io.InputStream $r2;

        r0 := @this: com.android.camera.exif.CountedDataInputStream;

        r1 := @parameter0: byte[];

        $r2 = r0.<com.android.camera.exif.CountedDataInputStream: java.io.InputStream in>;

        i0 = virtualinvoke $r2.<java.io.InputStream: int read(byte[])>(r1);

        $i1 = r0.<com.android.camera.exif.CountedDataInputStream: int mCount>;

        if i0 < 0 goto label1;

        $i3 = i0;

        goto label2;

     label1:
        $i3 = 0;

     label2:
        $i2 = $i1 + $i3;

        r0.<com.android.camera.exif.CountedDataInputStream: int mCount> = $i2;

        return i0;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        com.android.camera.exif.CountedDataInputStream r0;
        byte[] r1;
        int i0, i1, i2, $i3, $i4, $i5;
        java.io.InputStream $r2;

        r0 := @this: com.android.camera.exif.CountedDataInputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.camera.exif.CountedDataInputStream: java.io.InputStream in>;

        i2 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>(r1, i0, i1);

        $i3 = r0.<com.android.camera.exif.CountedDataInputStream: int mCount>;

        if i2 < 0 goto label1;

        $i5 = i2;

        goto label2;

     label1:
        $i5 = 0;

     label2:
        $i4 = $i3 + $i5;

        r0.<com.android.camera.exif.CountedDataInputStream: int mCount> = $i4;

        return i2;
    }

    public int read() throws java.io.IOException
    {
        com.android.camera.exif.CountedDataInputStream r0;
        int i0, $i1, $i2;
        java.io.InputStream $r1;
        byte $b3;

        r0 := @this: com.android.camera.exif.CountedDataInputStream;

        $r1 = r0.<com.android.camera.exif.CountedDataInputStream: java.io.InputStream in>;

        i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        $i1 = r0.<com.android.camera.exif.CountedDataInputStream: int mCount>;

        if i0 < 0 goto label1;

        $b3 = 1;

        goto label2;

     label1:
        $b3 = 0;

     label2:
        $i2 = $i1 + $b3;

        r0.<com.android.camera.exif.CountedDataInputStream: int mCount> = $i2;

        return i0;
    }

    public long skip(long) throws java.io.IOException
    {
        com.android.camera.exif.CountedDataInputStream r0;
        long l0, l1, $l3, $l4;
        java.io.InputStream $r1;
        int $i2, $i5;

        r0 := @this: com.android.camera.exif.CountedDataInputStream;

        l0 := @parameter0: long;

        $r1 = r0.<com.android.camera.exif.CountedDataInputStream: java.io.InputStream in>;

        l1 = virtualinvoke $r1.<java.io.InputStream: long skip(long)>(l0);

        $i2 = r0.<com.android.camera.exif.CountedDataInputStream: int mCount>;

        $l3 = (long) $i2;

        $l4 = $l3 + l1;

        $i5 = (int) $l4;

        r0.<com.android.camera.exif.CountedDataInputStream: int mCount> = $i5;

        return l1;
    }

    public void skipOrThrow(long) throws java.io.IOException
    {
        com.android.camera.exif.CountedDataInputStream r0;
        long l0, $l1;
        byte $b2;
        java.io.EOFException $r1;

        r0 := @this: com.android.camera.exif.CountedDataInputStream;

        l0 := @parameter0: long;

        $l1 = virtualinvoke r0.<com.android.camera.exif.CountedDataInputStream: long skip(long)>(l0);

        $b2 = $l1 cmp l0;

        if $b2 == 0 goto label1;

        $r1 = new java.io.EOFException;

        specialinvoke $r1.<java.io.EOFException: void <init>()>();

        throw $r1;

     label1:
        return;
    }

    public void skipTo(long) throws java.io.IOException
    {
        com.android.camera.exif.CountedDataInputStream r0;
        long l0, l1, l2;
        int $i3;
        boolean $z0;
        byte $b4;
        java.lang.AssertionError $r1;

        r0 := @this: com.android.camera.exif.CountedDataInputStream;

        l0 := @parameter0: long;

        $i3 = r0.<com.android.camera.exif.CountedDataInputStream: int mCount>;

        l1 = (long) $i3;

        l2 = l0 - l1;

        $z0 = <com.android.camera.exif.CountedDataInputStream: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $b4 = l2 cmp 0L;

        if $b4 >= 0 goto label1;

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;

     label1:
        virtualinvoke r0.<com.android.camera.exif.CountedDataInputStream: void skipOrThrow(long)>(l2);

        return;
    }

    public void readOrThrow(byte[], int, int) throws java.io.IOException
    {
        com.android.camera.exif.CountedDataInputStream r0;
        byte[] r1;
        int i0, i1, i2;
        java.io.EOFException $r2;

        r0 := @this: com.android.camera.exif.CountedDataInputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = virtualinvoke r0.<com.android.camera.exif.CountedDataInputStream: int read(byte[],int,int)>(r1, i0, i1);

        if i2 == i1 goto label1;

        $r2 = new java.io.EOFException;

        specialinvoke $r2.<java.io.EOFException: void <init>()>();

        throw $r2;

     label1:
        return;
    }

    public void readOrThrow(byte[]) throws java.io.IOException
    {
        com.android.camera.exif.CountedDataInputStream r0;
        byte[] r1;
        int $i0;

        r0 := @this: com.android.camera.exif.CountedDataInputStream;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        virtualinvoke r0.<com.android.camera.exif.CountedDataInputStream: void readOrThrow(byte[],int,int)>(r1, 0, $i0);

        return;
    }

    public void setByteOrder(java.nio.ByteOrder)
    {
        com.android.camera.exif.CountedDataInputStream r0;
        java.nio.ByteOrder r1;
        java.nio.ByteBuffer $r2;

        r0 := @this: com.android.camera.exif.CountedDataInputStream;

        r1 := @parameter0: java.nio.ByteOrder;

        $r2 = r0.<com.android.camera.exif.CountedDataInputStream: java.nio.ByteBuffer mByteBuffer>;

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>(r1);

        return;
    }

    public java.nio.ByteOrder getByteOrder()
    {
        com.android.camera.exif.CountedDataInputStream r0;
        java.nio.ByteBuffer $r1;
        java.nio.ByteOrder $r2;

        r0 := @this: com.android.camera.exif.CountedDataInputStream;

        $r1 = r0.<com.android.camera.exif.CountedDataInputStream: java.nio.ByteBuffer mByteBuffer>;

        $r2 = virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.ByteOrder order()>();

        return $r2;
    }

    public short readShort() throws java.io.IOException
    {
        com.android.camera.exif.CountedDataInputStream r0;
        byte[] $r1;
        java.nio.ByteBuffer $r2, $r4;
        short $s0;

        r0 := @this: com.android.camera.exif.CountedDataInputStream;

        $r1 = r0.<com.android.camera.exif.CountedDataInputStream: byte[] mByteArray>;

        virtualinvoke r0.<com.android.camera.exif.CountedDataInputStream: void readOrThrow(byte[],int,int)>($r1, 0, 2);

        $r2 = r0.<com.android.camera.exif.CountedDataInputStream: java.nio.ByteBuffer mByteBuffer>;

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $r4 = r0.<com.android.camera.exif.CountedDataInputStream: java.nio.ByteBuffer mByteBuffer>;

        $s0 = virtualinvoke $r4.<java.nio.ByteBuffer: short getShort()>();

        return $s0;
    }

    public int readUnsignedShort() throws java.io.IOException
    {
        com.android.camera.exif.CountedDataInputStream r0;
        short $s0;
        int $i1;

        r0 := @this: com.android.camera.exif.CountedDataInputStream;

        $s0 = virtualinvoke r0.<com.android.camera.exif.CountedDataInputStream: short readShort()>();

        $i1 = $s0 & 65535;

        return $i1;
    }

    public int readInt() throws java.io.IOException
    {
        com.android.camera.exif.CountedDataInputStream r0;
        byte[] $r1;
        java.nio.ByteBuffer $r2, $r4;
        int $i0;

        r0 := @this: com.android.camera.exif.CountedDataInputStream;

        $r1 = r0.<com.android.camera.exif.CountedDataInputStream: byte[] mByteArray>;

        virtualinvoke r0.<com.android.camera.exif.CountedDataInputStream: void readOrThrow(byte[],int,int)>($r1, 0, 4);

        $r2 = r0.<com.android.camera.exif.CountedDataInputStream: java.nio.ByteBuffer mByteBuffer>;

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $r4 = r0.<com.android.camera.exif.CountedDataInputStream: java.nio.ByteBuffer mByteBuffer>;

        $i0 = virtualinvoke $r4.<java.nio.ByteBuffer: int getInt()>();

        return $i0;
    }

    public long readUnsignedInt() throws java.io.IOException
    {
        com.android.camera.exif.CountedDataInputStream r0;
        int $i0;
        long $l1, $l2;

        r0 := @this: com.android.camera.exif.CountedDataInputStream;

        $i0 = virtualinvoke r0.<com.android.camera.exif.CountedDataInputStream: int readInt()>();

        $l1 = (long) $i0;

        $l2 = $l1 & 4294967295L;

        return $l2;
    }

    public long readLong() throws java.io.IOException
    {
        com.android.camera.exif.CountedDataInputStream r0;
        byte[] $r1;
        java.nio.ByteBuffer $r2, $r4;
        long $l0;

        r0 := @this: com.android.camera.exif.CountedDataInputStream;

        $r1 = r0.<com.android.camera.exif.CountedDataInputStream: byte[] mByteArray>;

        virtualinvoke r0.<com.android.camera.exif.CountedDataInputStream: void readOrThrow(byte[],int,int)>($r1, 0, 8);

        $r2 = r0.<com.android.camera.exif.CountedDataInputStream: java.nio.ByteBuffer mByteBuffer>;

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $r4 = r0.<com.android.camera.exif.CountedDataInputStream: java.nio.ByteBuffer mByteBuffer>;

        $l0 = virtualinvoke $r4.<java.nio.ByteBuffer: long getLong()>();

        return $l0;
    }

    public java.lang.String readString(int) throws java.io.IOException
    {
        com.android.camera.exif.CountedDataInputStream r0;
        int i0;
        byte[] r1;
        java.lang.String $r2;

        r0 := @this: com.android.camera.exif.CountedDataInputStream;

        i0 := @parameter0: int;

        r1 = newarray (byte)[i0];

        virtualinvoke r0.<com.android.camera.exif.CountedDataInputStream: void readOrThrow(byte[])>(r1);

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(byte[],java.lang.String)>(r1, "UTF8");

        return $r2;
    }

    public java.lang.String readString(int, java.nio.charset.Charset) throws java.io.IOException
    {
        com.android.camera.exif.CountedDataInputStream r0;
        int i0;
        java.nio.charset.Charset r1;
        byte[] r2;
        java.lang.String $r3;

        r0 := @this: com.android.camera.exif.CountedDataInputStream;

        i0 := @parameter0: int;

        r1 := @parameter1: java.nio.charset.Charset;

        r2 = newarray (byte)[i0];

        virtualinvoke r0.<com.android.camera.exif.CountedDataInputStream: void readOrThrow(byte[])>(r2);

        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>(r2, r1);

        return $r3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "com/android/camera/exif/CountedDataInputStream";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.android.camera.exif.CountedDataInputStream: boolean $assertionsDisabled> = $z1;

        return;
    }
}
