public class com.android.camera.app.OrientationManagerImpl extends java.lang.Object implements com.android.camera.app.OrientationManager
{
    private static final com.android.camera.debug.Log$Tag TAG;
    private static final int ORIENTATION_HYSTERESIS;
    private final android.app.Activity mActivity;
    private final com.android.camera.app.OrientationManagerImpl$MyOrientationEventListener mOrientationListener;
    private boolean mOrientationLocked;
    private boolean mRotationLockedSetting;
    private final java.util.List mListeners;

    public void <init>(android.app.Activity)
    {
        com.android.camera.app.OrientationManagerImpl r0;
        android.app.Activity r1;
        java.util.ArrayList $r2;
        com.android.camera.app.OrientationManagerImpl$MyOrientationEventListener $r3;

        r0 := @this: com.android.camera.app.OrientationManagerImpl;

        r1 := @parameter0: android.app.Activity;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.camera.app.OrientationManagerImpl: boolean mOrientationLocked> = 0;

        r0.<com.android.camera.app.OrientationManagerImpl: boolean mRotationLockedSetting> = 0;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.android.camera.app.OrientationManagerImpl: java.util.List mListeners> = $r2;

        r0.<com.android.camera.app.OrientationManagerImpl: android.app.Activity mActivity> = r1;

        $r3 = new com.android.camera.app.OrientationManagerImpl$MyOrientationEventListener;

        specialinvoke $r3.<com.android.camera.app.OrientationManagerImpl$MyOrientationEventListener: void <init>(com.android.camera.app.OrientationManagerImpl,android.content.Context)>(r0, r1);

        r0.<com.android.camera.app.OrientationManagerImpl: com.android.camera.app.OrientationManagerImpl$MyOrientationEventListener mOrientationListener> = $r3;

        return;
    }

    public void resume()
    {
        com.android.camera.app.OrientationManagerImpl r0;
        android.content.ContentResolver r1;
        android.app.Activity $r2;
        int $i0;
        com.android.camera.app.OrientationManagerImpl$MyOrientationEventListener $r3;
        boolean $z0;

        r0 := @this: com.android.camera.app.OrientationManagerImpl;

        $r2 = r0.<com.android.camera.app.OrientationManagerImpl: android.app.Activity mActivity>;

        r1 = virtualinvoke $r2.<android.app.Activity: android.content.ContentResolver getContentResolver()>();

        $i0 = staticinvoke <android.provider.Settings$System: int getInt(android.content.ContentResolver,java.lang.String,int)>(r1, "accelerometer_rotation", 0);

        if $i0 == 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        r0.<com.android.camera.app.OrientationManagerImpl: boolean mRotationLockedSetting> = $z0;

        $r3 = r0.<com.android.camera.app.OrientationManagerImpl: com.android.camera.app.OrientationManagerImpl$MyOrientationEventListener mOrientationListener>;

        virtualinvoke $r3.<com.android.camera.app.OrientationManagerImpl$MyOrientationEventListener: void enable()>();

        return;
    }

    public void pause()
    {
        com.android.camera.app.OrientationManagerImpl r0;
        com.android.camera.app.OrientationManagerImpl$MyOrientationEventListener $r1;

        r0 := @this: com.android.camera.app.OrientationManagerImpl;

        $r1 = r0.<com.android.camera.app.OrientationManagerImpl: com.android.camera.app.OrientationManagerImpl$MyOrientationEventListener mOrientationListener>;

        virtualinvoke $r1.<com.android.camera.app.OrientationManagerImpl$MyOrientationEventListener: void disable()>();

        return;
    }

    public void addOnOrientationChangeListener(android.os.Handler, com.android.camera.app.OrientationManager$OnOrientationChangeListener)
    {
        com.android.camera.app.OrientationManagerImpl r0;
        android.os.Handler r1;
        com.android.camera.app.OrientationManager$OnOrientationChangeListener r2;
        com.android.camera.app.OrientationManagerImpl$OrientationChangeCallback r3, $r4;
        java.util.List $r5, $r6;
        boolean $z0;

        r0 := @this: com.android.camera.app.OrientationManagerImpl;

        r1 := @parameter0: android.os.Handler;

        r2 := @parameter1: com.android.camera.app.OrientationManager$OnOrientationChangeListener;

        $r4 = new com.android.camera.app.OrientationManagerImpl$OrientationChangeCallback;

        specialinvoke $r4.<com.android.camera.app.OrientationManagerImpl$OrientationChangeCallback: void <init>(android.os.Handler,com.android.camera.app.OrientationManager$OnOrientationChangeListener)>(r1, r2);

        r3 = $r4;

        $r5 = r0.<com.android.camera.app.OrientationManagerImpl: java.util.List mListeners>;

        $z0 = interfaceinvoke $r5.<java.util.List: boolean contains(java.lang.Object)>(r3);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r6 = r0.<com.android.camera.app.OrientationManagerImpl: java.util.List mListeners>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r3);

        return;
    }

    public void removeOnOrientationChangeListener(android.os.Handler, com.android.camera.app.OrientationManager$OnOrientationChangeListener)
    {
        com.android.camera.app.OrientationManagerImpl r0;
        android.os.Handler r1;
        com.android.camera.app.OrientationManager$OnOrientationChangeListener r2;
        com.android.camera.app.OrientationManagerImpl$OrientationChangeCallback r3, $r4;
        java.util.List $r5;
        boolean $z0;
        com.android.camera.debug.Log$Tag $r6;

        r0 := @this: com.android.camera.app.OrientationManagerImpl;

        r1 := @parameter0: android.os.Handler;

        r2 := @parameter1: com.android.camera.app.OrientationManager$OnOrientationChangeListener;

        $r4 = new com.android.camera.app.OrientationManagerImpl$OrientationChangeCallback;

        specialinvoke $r4.<com.android.camera.app.OrientationManagerImpl$OrientationChangeCallback: void <init>(android.os.Handler,com.android.camera.app.OrientationManager$OnOrientationChangeListener)>(r1, r2);

        r3 = $r4;

        $r5 = r0.<com.android.camera.app.OrientationManagerImpl: java.util.List mListeners>;

        $z0 = interfaceinvoke $r5.<java.util.List: boolean remove(java.lang.Object)>(r3);

        if $z0 != 0 goto label1;

        $r6 = <com.android.camera.app.OrientationManagerImpl: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void v(com.android.camera.debug.Log$Tag,java.lang.String)>($r6, "Removing non-existing listener.");

     label1:
        return;
    }

    public void lockOrientation()
    {
        com.android.camera.app.OrientationManagerImpl r0;
        boolean $z0, $z1, $z2;
        android.app.Activity $r1, $r2;
        int $i0;

        r0 := @this: com.android.camera.app.OrientationManagerImpl;

        $z0 = r0.<com.android.camera.app.OrientationManagerImpl: boolean mOrientationLocked>;

        if $z0 != 0 goto label1;

        $z1 = r0.<com.android.camera.app.OrientationManagerImpl: boolean mRotationLockedSetting>;

        if $z1 == 0 goto label2;

     label1:
        return;

     label2:
        r0.<com.android.camera.app.OrientationManagerImpl: boolean mOrientationLocked> = 1;

        $z2 = <com.android.camera.util.ApiHelper: boolean HAS_ORIENTATION_LOCK>;

        if $z2 == 0 goto label3;

        $r2 = r0.<com.android.camera.app.OrientationManagerImpl: android.app.Activity mActivity>;

        virtualinvoke $r2.<android.app.Activity: void setRequestedOrientation(int)>(14);

        goto label4;

     label3:
        $r1 = r0.<com.android.camera.app.OrientationManagerImpl: android.app.Activity mActivity>;

        $i0 = specialinvoke r0.<com.android.camera.app.OrientationManagerImpl: int calculateCurrentScreenOrientation()>();

        virtualinvoke $r1.<android.app.Activity: void setRequestedOrientation(int)>($i0);

     label4:
        return;
    }

    public void unlockOrientation()
    {
        com.android.camera.app.OrientationManagerImpl r0;
        boolean $z0, $z1;
        com.android.camera.debug.Log$Tag $r1;
        android.app.Activity $r2;

        r0 := @this: com.android.camera.app.OrientationManagerImpl;

        $z0 = r0.<com.android.camera.app.OrientationManagerImpl: boolean mOrientationLocked>;

        if $z0 == 0 goto label1;

        $z1 = r0.<com.android.camera.app.OrientationManagerImpl: boolean mRotationLockedSetting>;

        if $z1 == 0 goto label2;

     label1:
        return;

     label2:
        r0.<com.android.camera.app.OrientationManagerImpl: boolean mOrientationLocked> = 0;

        $r1 = <com.android.camera.app.OrientationManagerImpl: com.android.camera.debug.Log$Tag TAG>;

        staticinvoke <com.android.camera.debug.Log: void d(com.android.camera.debug.Log$Tag,java.lang.String)>($r1, "unlock orientation");

        $r2 = r0.<com.android.camera.app.OrientationManagerImpl: android.app.Activity mActivity>;

        virtualinvoke $r2.<android.app.Activity: void setRequestedOrientation(int)>(10);

        return;
    }

    public boolean isOrientationLocked()
    {
        com.android.camera.app.OrientationManagerImpl r0;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.camera.app.OrientationManagerImpl;

        $z0 = r0.<com.android.camera.app.OrientationManagerImpl: boolean mOrientationLocked>;

        if $z0 != 0 goto label1;

        $z1 = r0.<com.android.camera.app.OrientationManagerImpl: boolean mRotationLockedSetting>;

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    private int calculateCurrentScreenOrientation()
    {
        com.android.camera.app.OrientationManagerImpl r0;
        int i0, $i1;
        boolean z0, $z1, $z2;
        android.app.Activity $r1;
        android.content.res.Resources $r2;
        android.content.res.Configuration $r3;
        byte $b2, $b3;

        r0 := @this: com.android.camera.app.OrientationManagerImpl;

        i0 = virtualinvoke r0.<com.android.camera.app.OrientationManagerImpl: int getDisplayRotation()>();

        if i0 >= 180 goto label01;

        $z2 = 1;

        goto label02;

     label01:
        $z2 = 0;

     label02:
        z0 = $z2;

        $r1 = r0.<com.android.camera.app.OrientationManagerImpl: android.app.Activity mActivity>;

        $r2 = virtualinvoke $r1.<android.app.Activity: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i1 = $r3.<android.content.res.Configuration: int orientation>;

        if $i1 != 2 goto label05;

        if z0 == 0 goto label03;

        $b3 = 0;

        goto label04;

     label03:
        $b3 = 8;

     label04:
        return $b3;

     label05:
        if i0 == 90 goto label06;

        if i0 != 270 goto label09;

     label06:
        if z0 != 0 goto label07;

        $z1 = 1;

        goto label08;

     label07:
        $z1 = 0;

     label08:
        z0 = $z1;

     label09:
        if z0 == 0 goto label10;

        $b2 = 1;

        goto label11;

     label10:
        $b2 = 9;

     label11:
        return $b2;
    }

    public int getDisplayRotation()
    {
        com.android.camera.app.OrientationManagerImpl r0;
        android.app.Activity $r1;
        int $i0;

        r0 := @this: com.android.camera.app.OrientationManagerImpl;

        $r1 = r0.<com.android.camera.app.OrientationManagerImpl: android.app.Activity mActivity>;

        $i0 = staticinvoke <com.android.camera.app.OrientationManagerImpl: int getDisplayRotation(android.app.Activity)>($r1);

        return $i0;
    }

    private static int roundOrientation(int, int)
    {
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        boolean $z1, z2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 != -1 goto label1;

        z2 = 1;

        goto label4;

     label1:
        $i3 = i0 - i1;

        i2 = staticinvoke <java.lang.Math: int abs(int)>($i3);

        $i4 = 360 - i2;

        i9 = staticinvoke <java.lang.Math: int min(int,int)>(i2, $i4);

        if i9 < 50 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        z2 = $z1;

     label4:
        if z2 == 0 goto label5;

        $i5 = i0 + 45;

        $i6 = $i5 / 90;

        $i7 = $i6 * 90;

        $i8 = $i7 % 360;

        return $i8;

     label5:
        return i1;
    }

    private static int getDisplayRotation(android.app.Activity)
    {
        android.app.Activity r0;
        int i0;
        android.view.WindowManager $r1;
        android.view.Display $r2;

        r0 := @parameter0: android.app.Activity;

        $r1 = virtualinvoke r0.<android.app.Activity: android.view.WindowManager getWindowManager()>();

        $r2 = interfaceinvoke $r1.<android.view.WindowManager: android.view.Display getDefaultDisplay()>();

        i0 = virtualinvoke $r2.<android.view.Display: int getRotation()>();

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label5;
        };

     label1:
        return 0;

     label2:
        return 90;

     label3:
        return 180;

     label4:
        return 270;

     label5:
        return 0;
    }

    static int access$100(int, int)
    {
        int i0, i1, $i2;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = staticinvoke <com.android.camera.app.OrientationManagerImpl: int roundOrientation(int,int)>(i0, i1);

        return $i2;
    }

    static java.util.List access$200(com.android.camera.app.OrientationManagerImpl)
    {
        com.android.camera.app.OrientationManagerImpl r0;
        java.util.List $r1;

        r0 := @parameter0: com.android.camera.app.OrientationManagerImpl;

        $r1 = r0.<com.android.camera.app.OrientationManagerImpl: java.util.List mListeners>;

        return $r1;
    }

    static void <clinit>()
    {
        com.android.camera.debug.Log$Tag $r0;

        <com.android.camera.app.OrientationManagerImpl: int ORIENTATION_HYSTERESIS> = 5;

        $r0 = new com.android.camera.debug.Log$Tag;

        specialinvoke $r0.<com.android.camera.debug.Log$Tag: void <init>(java.lang.String)>("OrientMgrImpl");

        <com.android.camera.app.OrientationManagerImpl: com.android.camera.debug.Log$Tag TAG> = $r0;

        return;
    }
}
