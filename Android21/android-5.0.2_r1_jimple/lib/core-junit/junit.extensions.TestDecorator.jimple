public class junit.extensions.TestDecorator extends junit.framework.Assert implements junit.framework.Test
{
    protected junit.framework.Test fTest;

    public void <init>(junit.framework.Test)
    {
        junit.extensions.TestDecorator r0;
        junit.framework.Test r1;

        r0 := @this: junit.extensions.TestDecorator;

        r1 := @parameter0: junit.framework.Test;

        specialinvoke r0.<junit.framework.Assert: void <init>()>();

        r0.<junit.extensions.TestDecorator: junit.framework.Test fTest> = r1;

        return;
    }

    public void basicRun(junit.framework.TestResult)
    {
        junit.extensions.TestDecorator r0;
        junit.framework.TestResult r1;
        junit.framework.Test $r2;

        r0 := @this: junit.extensions.TestDecorator;

        r1 := @parameter0: junit.framework.TestResult;

        $r2 = r0.<junit.extensions.TestDecorator: junit.framework.Test fTest>;

        interfaceinvoke $r2.<junit.framework.Test: void run(junit.framework.TestResult)>(r1);

        return;
    }

    public int countTestCases()
    {
        junit.extensions.TestDecorator r0;
        junit.framework.Test $r1;
        int $i0;

        r0 := @this: junit.extensions.TestDecorator;

        $r1 = r0.<junit.extensions.TestDecorator: junit.framework.Test fTest>;

        $i0 = interfaceinvoke $r1.<junit.framework.Test: int countTestCases()>();

        return $i0;
    }

    public void run(junit.framework.TestResult)
    {
        junit.extensions.TestDecorator r0;
        junit.framework.TestResult r1;

        r0 := @this: junit.extensions.TestDecorator;

        r1 := @parameter0: junit.framework.TestResult;

        virtualinvoke r0.<junit.extensions.TestDecorator: void basicRun(junit.framework.TestResult)>(r1);

        return;
    }

    public java.lang.String toString()
    {
        junit.extensions.TestDecorator r0;
        junit.framework.Test $r1;
        java.lang.String $r2;

        r0 := @this: junit.extensions.TestDecorator;

        $r1 = r0.<junit.extensions.TestDecorator: junit.framework.Test fTest>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public junit.framework.Test getTest()
    {
        junit.extensions.TestDecorator r0;
        junit.framework.Test $r1;

        r0 := @this: junit.extensions.TestDecorator;

        $r1 = r0.<junit.extensions.TestDecorator: junit.framework.Test fTest>;

        return $r1;
    }
}
