public class junit.framework.TestFailure extends java.lang.Object
{
    protected junit.framework.Test fFailedTest;
    protected java.lang.Throwable fThrownException;

    public void <init>(junit.framework.Test, java.lang.Throwable)
    {
        junit.framework.TestFailure r0;
        junit.framework.Test r1;
        java.lang.Throwable r2;

        r0 := @this: junit.framework.TestFailure;

        r1 := @parameter0: junit.framework.Test;

        r2 := @parameter1: java.lang.Throwable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<junit.framework.TestFailure: junit.framework.Test fFailedTest> = r1;

        r0.<junit.framework.TestFailure: java.lang.Throwable fThrownException> = r2;

        return;
    }

    public junit.framework.Test failedTest()
    {
        junit.framework.TestFailure r0;
        junit.framework.Test $r1;

        r0 := @this: junit.framework.TestFailure;

        $r1 = r0.<junit.framework.TestFailure: junit.framework.Test fFailedTest>;

        return $r1;
    }

    public java.lang.Throwable thrownException()
    {
        junit.framework.TestFailure r0;
        java.lang.Throwable $r1;

        r0 := @this: junit.framework.TestFailure;

        $r1 = r0.<junit.framework.TestFailure: java.lang.Throwable fThrownException>;

        return $r1;
    }

    public java.lang.String toString()
    {
        junit.framework.TestFailure r0;
        java.lang.StringBuffer r1, $r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r9;
        junit.framework.Test $r4;
        java.lang.Throwable $r7;
        java.lang.String $r8, $r10, $r12;

        r0 := @this: junit.framework.TestFailure;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        r1 = $r2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = r0.<junit.framework.TestFailure: junit.framework.Test fFailedTest>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r7 = r0.<junit.framework.TestFailure: java.lang.Throwable fThrownException>;

        $r8 = virtualinvoke $r7.<java.lang.Throwable: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r12;
    }

    public java.lang.String trace()
    {
        junit.framework.TestFailure r0;
        java.io.StringWriter r1, $r4;
        java.io.PrintWriter r2, $r5;
        java.lang.StringBuffer r3;
        java.lang.Throwable $r6;
        java.lang.String $r7;

        r0 := @this: junit.framework.TestFailure;

        $r4 = new java.io.StringWriter;

        specialinvoke $r4.<java.io.StringWriter: void <init>()>();

        r1 = $r4;

        $r5 = new java.io.PrintWriter;

        specialinvoke $r5.<java.io.PrintWriter: void <init>(java.io.Writer)>(r1);

        r2 = $r5;

        $r6 = virtualinvoke r0.<junit.framework.TestFailure: java.lang.Throwable thrownException()>();

        virtualinvoke $r6.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>(r2);

        r3 = virtualinvoke r1.<java.io.StringWriter: java.lang.StringBuffer getBuffer()>();

        $r7 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;
    }

    public java.lang.String exceptionMessage()
    {
        junit.framework.TestFailure r0;
        java.lang.Throwable $r1;
        java.lang.String $r2;

        r0 := @this: junit.framework.TestFailure;

        $r1 = virtualinvoke r0.<junit.framework.TestFailure: java.lang.Throwable thrownException()>();

        $r2 = virtualinvoke $r1.<java.lang.Throwable: java.lang.String getMessage()>();

        return $r2;
    }

    public boolean isFailure()
    {
        junit.framework.TestFailure r0;
        java.lang.Throwable $r1;
        boolean $z0;

        r0 := @this: junit.framework.TestFailure;

        $r1 = virtualinvoke r0.<junit.framework.TestFailure: java.lang.Throwable thrownException()>();

        $z0 = $r1 instanceof junit.framework.AssertionFailedError;

        return $z0;
    }
}
