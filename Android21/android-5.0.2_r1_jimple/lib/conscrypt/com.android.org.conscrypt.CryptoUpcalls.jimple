public final class com.android.org.conscrypt.CryptoUpcalls extends java.lang.Object
{
    private static final java.lang.String RSA_CRYPTO_ALGORITHM;

    private void <init>()
    {
        com.android.org.conscrypt.CryptoUpcalls r0;

        r0 := @this: com.android.org.conscrypt.CryptoUpcalls;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.security.Provider getExternalProvider(java.lang.String)
    {
        java.lang.String r0, $r8;
        java.security.Provider r1, r3;
        java.security.Provider[] r2;
        int i0, i1;
        java.lang.StringBuilder $r4, $r6, $r7;
        java.io.PrintStream $r5;
        java.lang.Class $r9, $r11;
        java.lang.ClassLoader $r10, $r12;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 = null;

        r2 = staticinvoke <java.security.Security: java.security.Provider[] getProviders(java.lang.String)>(r0);

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = r2[i1];

        $r9 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r11 = class "com/android/org/conscrypt/CryptoUpcalls";

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $z0 = virtualinvoke $r10.<java.lang.Object: boolean equals(java.lang.Object)>($r12);

        if $z0 != 0 goto label2;

        r1 = r3;

        goto label3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        if r1 != null goto label4;

        $r5 = <java.lang.System: java.io.PrintStream err>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not find external provider for algorithm: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r8);

     label4:
        return r1;
    }

    public static byte[] rawSignDigestWithPrivateKey(java.security.PrivateKey, byte[])
    {
        java.security.PrivateKey r0;
        byte[] r1, $r14;
        java.security.Provider r2;
        java.security.Signature r3;
        boolean $z0, $z1, $z2;
        java.lang.RuntimeException $r4;
        java.lang.StringBuilder $r5, $r6, $r8, $r10, $r11, $r12, $r16, $r18, $r20, $r21, $r23, $r25, $r28;
        java.lang.String $r7, $r9, $r13, $r17, $r19, $r26, $r27, r30;
        java.io.PrintStream $r15, $r24;
        java.lang.Exception $r22, r31;
        java.security.NoSuchAlgorithmException $r29;

        r0 := @parameter0: java.security.PrivateKey;

        r1 := @parameter1: byte[];

        $z0 = r0 instanceof java.security.interfaces.RSAPrivateKey;

        if $z0 == 0 goto label01;

        r30 = "NONEwithRSA";

        goto label04;

     label01:
        $z1 = r0 instanceof java.security.interfaces.DSAPrivateKey;

        if $z1 == 0 goto label02;

        r30 = "NONEwithDSA";

        goto label04;

     label02:
        $z2 = r0 instanceof java.security.interfaces.ECPrivateKey;

        if $z2 == 0 goto label03;

        r30 = "NONEwithECDSA";

        goto label04;

     label03:
        $r4 = new java.lang.RuntimeException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected key type: ");

        $r7 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label04:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Signature.");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        r2 = staticinvoke <com.android.org.conscrypt.CryptoUpcalls: java.security.Provider getExternalProvider(java.lang.String)>($r13);

        if r2 != null goto label05;

        return null;

     label05:
        r3 = null;

     label06:
        r3 = staticinvoke <java.security.Signature: java.security.Signature getInstance(java.lang.String,java.security.Provider)>(r30, r2);

     label07:
        goto label09;

     label08:
        $r29 := @caughtexception;

     label09:
        if r3 != null goto label10;

        $r15 = <java.lang.System: java.io.PrintStream err>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported private key algorithm: ");

        $r17 = interfaceinvoke r0.<java.security.PrivateKey: java.lang.String getAlgorithm()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r19);

        return null;

     label10:
        virtualinvoke r3.<java.security.Signature: void initSign(java.security.PrivateKey)>(r0);

        virtualinvoke r3.<java.security.Signature: void update(byte[])>(r1);

        $r14 = virtualinvoke r3.<java.security.Signature: byte[] sign()>();

     label11:
        return $r14;

     label12:
        $r22 := @caughtexception;

        r31 = $r22;

        $r24 = <java.lang.System: java.io.PrintStream err>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception while signing message with ");

        $r27 = interfaceinvoke r0.<java.security.PrivateKey: java.lang.String getAlgorithm()>();

        $r28 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r25 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" private key:");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r26);

        virtualinvoke r31.<java.lang.Exception: void printStackTrace()>();

        return null;

        catch java.security.NoSuchAlgorithmException from label06 to label07 with label08;
        catch java.lang.Exception from label10 to label11 with label12;
    }

    public static byte[] rawCipherWithPrivateKey(java.security.PrivateKey, boolean, byte[])
    {
        java.security.PrivateKey r0;
        boolean z0, $z1;
        byte[] r1, $r5;
        java.security.Provider r2;
        javax.crypto.Cipher r3;
        byte $b0;
        java.lang.StringBuilder $r6, $r8, $r10, $r11, $r13, $r15, $r22, $r24, $r25, $r26;
        java.io.PrintStream $r7, $r14, $r21;
        java.lang.String $r9, $r12, $r16, $r18, $r23, $r27;
        javax.crypto.NoSuchPaddingException $r17;
        java.lang.Exception $r19, r29;
        java.security.NoSuchAlgorithmException $r20;

        r0 := @parameter0: java.security.PrivateKey;

        z0 := @parameter1: boolean;

        r1 := @parameter2: byte[];

        $z1 = r0 instanceof java.security.interfaces.RSAPrivateKey;

        if $z1 != 0 goto label01;

        $r14 = <java.lang.System: java.io.PrintStream err>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected key type: ");

        $r16 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r18);

        return null;

     label01:
        r2 = staticinvoke <com.android.org.conscrypt.CryptoUpcalls: java.security.Provider getExternalProvider(java.lang.String)>("Cipher.RSA/ECB/PKCS1Padding");

        if r2 != null goto label02;

        return null;

     label02:
        r3 = null;

     label03:
        r3 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String,java.security.Provider)>("RSA/ECB/PKCS1Padding", r2);

     label04:
        goto label07;

     label05:
        $r20 := @caughtexception;

        goto label07;

     label06:
        $r17 := @caughtexception;

     label07:
        if r3 != null goto label08;

        $r7 = <java.lang.System: java.io.PrintStream err>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported private key algorithm: ");

        $r9 = interfaceinvoke r0.<java.security.PrivateKey: java.lang.String getAlgorithm()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r12);

     label08:
        if z0 == 0 goto label09;

        $b0 = 1;

        goto label10;

     label09:
        $b0 = 2;

     label10:
        virtualinvoke r3.<javax.crypto.Cipher: void init(int,java.security.Key)>($b0, r0);

        $r5 = virtualinvoke r3.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r1);

     label11:
        return $r5;

     label12:
        $r19 := @caughtexception;

        r29 = $r19;

        $r21 = <java.lang.System: java.io.PrintStream err>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception while ciphering message with ");

        $r23 = interfaceinvoke r0.<java.security.PrivateKey: java.lang.String getAlgorithm()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" private key:");

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r27);

        virtualinvoke r29.<java.lang.Exception: void printStackTrace()>();

        return null;

        catch java.security.NoSuchAlgorithmException from label03 to label04 with label05;
        catch javax.crypto.NoSuchPaddingException from label03 to label04 with label06;
        catch java.lang.Exception from label08 to label11 with label12;
    }

    public static void <clinit>()
    {
        <com.android.org.conscrypt.CryptoUpcalls: java.lang.String RSA_CRYPTO_ALGORITHM> = "RSA/ECB/PKCS1Padding";

        return;
    }
}
