public final class com.android.org.conscrypt.TrustedCertificateIndex extends java.lang.Object
{
    private final java.util.Map subjectToTrustAnchors;

    public void <init>()
    {
        com.android.org.conscrypt.TrustedCertificateIndex r0;
        java.util.HashMap $r1;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateIndex;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.android.org.conscrypt.TrustedCertificateIndex: java.util.Map subjectToTrustAnchors> = $r1;

        return;
    }

    public void <init>(java.util.Set)
    {
        com.android.org.conscrypt.TrustedCertificateIndex r0;
        java.util.Set r1;
        java.util.HashMap $r2;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateIndex;

        r1 := @parameter0: java.util.Set;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.android.org.conscrypt.TrustedCertificateIndex: java.util.Map subjectToTrustAnchors> = $r2;

        specialinvoke r0.<com.android.org.conscrypt.TrustedCertificateIndex: void index(java.util.Set)>(r1);

        return;
    }

    private void index(java.util.Set)
    {
        com.android.org.conscrypt.TrustedCertificateIndex r0;
        java.util.Set r1;
        java.util.Iterator r2;
        java.security.cert.TrustAnchor r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateIndex;

        r1 := @parameter0: java.util.Set;

        r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.security.cert.TrustAnchor) $r4;

        virtualinvoke r0.<com.android.org.conscrypt.TrustedCertificateIndex: void index(java.security.cert.TrustAnchor)>(r3);

        goto label1;

     label2:
        return;
    }

    public java.security.cert.TrustAnchor index(java.security.cert.X509Certificate)
    {
        com.android.org.conscrypt.TrustedCertificateIndex r0;
        java.security.cert.X509Certificate r1;
        java.security.cert.TrustAnchor r2, $r3;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateIndex;

        r1 := @parameter0: java.security.cert.X509Certificate;

        $r3 = new java.security.cert.TrustAnchor;

        specialinvoke $r3.<java.security.cert.TrustAnchor: void <init>(java.security.cert.X509Certificate,byte[])>(r1, null);

        r2 = $r3;

        virtualinvoke r0.<com.android.org.conscrypt.TrustedCertificateIndex: void index(java.security.cert.TrustAnchor)>(r2);

        return r2;
    }

    public void index(java.security.cert.TrustAnchor)
    {
        com.android.org.conscrypt.TrustedCertificateIndex r0;
        java.security.cert.TrustAnchor r1;
        java.security.cert.X509Certificate r2;
        javax.security.auth.x500.X500Principal r3;
        java.util.Map r4, $r7, $r8, $r11;
        java.util.List r5;
        java.lang.Throwable r6, $r13;
        java.lang.Object $r9;
        java.util.ArrayList $r10;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateIndex;

        r1 := @parameter0: java.security.cert.TrustAnchor;

        r2 = virtualinvoke r1.<java.security.cert.TrustAnchor: java.security.cert.X509Certificate getTrustedCert()>();

        if r2 == null goto label1;

        r3 = virtualinvoke r2.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

        goto label2;

     label1:
        r3 = virtualinvoke r1.<java.security.cert.TrustAnchor: javax.security.auth.x500.X500Principal getCA()>();

     label2:
        $r7 = r0.<com.android.org.conscrypt.TrustedCertificateIndex: java.util.Map subjectToTrustAnchors>;

        r4 = $r7;

        entermonitor $r7;

     label3:
        $r8 = r0.<com.android.org.conscrypt.TrustedCertificateIndex: java.util.Map subjectToTrustAnchors>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r5 = (java.util.List) $r9;

        if r5 != null goto label4;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>(int)>(1);

        r5 = $r10;

        $r11 = r0.<com.android.org.conscrypt.TrustedCertificateIndex: java.util.Map subjectToTrustAnchors>;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r5);

     label4:
        interfaceinvoke r5.<java.util.List: boolean add(java.lang.Object)>(r1);

        exitmonitor r4;

     label5:
        goto label8;

     label6:
        $r13 := @caughtexception;

        r6 = $r13;

        exitmonitor r4;

     label7:
        throw r6;

     label8:
        return;

        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void reset()
    {
        com.android.org.conscrypt.TrustedCertificateIndex r0;
        java.util.Map r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateIndex;

        $r3 = r0.<com.android.org.conscrypt.TrustedCertificateIndex: java.util.Map subjectToTrustAnchors>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $r4 = r0.<com.android.org.conscrypt.TrustedCertificateIndex: java.util.Map subjectToTrustAnchors>;

        interfaceinvoke $r4.<java.util.Map: void clear()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void reset(java.util.Set)
    {
        com.android.org.conscrypt.TrustedCertificateIndex r0;
        java.util.Set r1;
        java.util.Map r2, $r4;
        java.lang.Throwable r3, $r5;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateIndex;

        r1 := @parameter0: java.util.Set;

        $r4 = r0.<com.android.org.conscrypt.TrustedCertificateIndex: java.util.Map subjectToTrustAnchors>;

        r2 = $r4;

        entermonitor $r4;

     label1:
        virtualinvoke r0.<com.android.org.conscrypt.TrustedCertificateIndex: void reset()>();

        specialinvoke r0.<com.android.org.conscrypt.TrustedCertificateIndex: void index(java.util.Set)>(r1);

        exitmonitor r2;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r3 = $r5;

        exitmonitor r2;

     label4:
        throw r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.security.cert.TrustAnchor findByIssuerAndSignature(java.security.cert.X509Certificate)
    {
        com.android.org.conscrypt.TrustedCertificateIndex r0;
        java.security.cert.X509Certificate r1, r7;
        javax.security.auth.x500.X500Principal r2;
        java.util.Map r3, $r10, $r11;
        java.util.List r4;
        java.util.Iterator r5;
        java.security.cert.TrustAnchor r6;
        java.security.PublicKey r8;
        java.lang.Throwable r9, $r14;
        java.lang.Object $r12, $r13;
        boolean $z0;
        java.lang.Exception $r15;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateIndex;

        r1 := @parameter0: java.security.cert.X509Certificate;

        r2 = virtualinvoke r1.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $r10 = r0.<com.android.org.conscrypt.TrustedCertificateIndex: java.util.Map subjectToTrustAnchors>;

        r3 = $r10;

        entermonitor $r10;

     label01:
        $r11 = r0.<com.android.org.conscrypt.TrustedCertificateIndex: java.util.Map subjectToTrustAnchors>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r4 = (java.util.List) $r12;

        if r4 != null goto label03;

        exitmonitor r3;

     label02:
        return null;

     label03:
        r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r13 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.security.cert.TrustAnchor) $r13;

     label05:
        r7 = virtualinvoke r6.<java.security.cert.TrustAnchor: java.security.cert.X509Certificate getTrustedCert()>();

        if r7 == null goto label06;

        r8 = virtualinvoke r7.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

        goto label07;

     label06:
        r8 = virtualinvoke r6.<java.security.cert.TrustAnchor: java.security.PublicKey getCAPublicKey()>();

     label07:
        virtualinvoke r1.<java.security.cert.X509Certificate: void verify(java.security.PublicKey)>(r8);

     label08:
        exitmonitor r3;

     label09:
        return r6;

     label10:
        $r15 := @caughtexception;

        goto label04;

     label11:
        exitmonitor r3;

     label12:
        goto label15;

     label13:
        $r14 := @caughtexception;

        r9 = $r14;

        exitmonitor r3;

     label14:
        throw r9;

     label15:
        return null;

        catch java.lang.Exception from label05 to label08 with label10;
        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label09 with label13;
        catch java.lang.Throwable from label10 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public java.security.cert.TrustAnchor findBySubjectAndPublicKey(java.security.cert.X509Certificate)
    {
        com.android.org.conscrypt.TrustedCertificateIndex r0;
        java.security.cert.X509Certificate r1;
        javax.security.auth.x500.X500Principal r2;
        java.util.Map r3, $r6, $r7;
        java.util.List r4;
        java.lang.Throwable r5, $r10;
        java.lang.Object $r8;
        java.security.cert.TrustAnchor $r9;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateIndex;

        r1 := @parameter0: java.security.cert.X509Certificate;

        r2 = virtualinvoke r1.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

        $r6 = r0.<com.android.org.conscrypt.TrustedCertificateIndex: java.util.Map subjectToTrustAnchors>;

        r3 = $r6;

        entermonitor $r6;

     label1:
        $r7 = r0.<com.android.org.conscrypt.TrustedCertificateIndex: java.util.Map subjectToTrustAnchors>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r4 = (java.util.List) $r8;

        if r4 != null goto label3;

        exitmonitor r3;

     label2:
        return null;

     label3:
        $r9 = staticinvoke <com.android.org.conscrypt.TrustedCertificateIndex: java.security.cert.TrustAnchor findBySubjectAndPublicKey(java.security.cert.X509Certificate,java.util.Collection)>(r1, r4);

        exitmonitor r3;

     label4:
        return $r9;

     label5:
        $r10 := @caughtexception;

        r5 = $r10;

        exitmonitor r3;

     label6:
        throw r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private static java.security.cert.TrustAnchor findBySubjectAndPublicKey(java.security.cert.X509Certificate, java.util.Collection)
    {
        java.security.cert.X509Certificate r0, r5;
        java.util.Collection r1;
        java.security.PublicKey r2, r6;
        java.util.Iterator r3;
        java.security.cert.TrustAnchor r4;
        boolean $z0, $z1;
        java.lang.Object $r7;
        java.lang.Exception $r8;

        r0 := @parameter0: java.security.cert.X509Certificate;

        r1 := @parameter1: java.util.Collection;

        r2 = virtualinvoke r0.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

        r3 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label9;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.security.cert.TrustAnchor) $r7;

     label2:
        r5 = virtualinvoke r4.<java.security.cert.TrustAnchor: java.security.cert.X509Certificate getTrustedCert()>();

        if r5 == null goto label3;

        r6 = virtualinvoke r5.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

        goto label4;

     label3:
        r6 = virtualinvoke r4.<java.security.cert.TrustAnchor: java.security.PublicKey getCAPublicKey()>();

     label4:
        $z1 = virtualinvoke r6.<java.lang.Object: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label6;

     label5:
        return r4;

     label6:
        goto label8;

     label7:
        $r8 := @caughtexception;

     label8:
        goto label1;

     label9:
        return null;

        catch java.lang.Exception from label2 to label5 with label7;
    }
}
