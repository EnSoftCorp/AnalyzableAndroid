public final class com.android.org.conscrypt.DefaultSSLContextImpl extends com.android.org.conscrypt.OpenSSLContextImpl
{
    private static javax.net.ssl.KeyManager[] KEY_MANAGERS;
    private static javax.net.ssl.TrustManager[] TRUST_MANAGERS;

    public void <init>() throws java.security.GeneralSecurityException, java.io.IOException
    {
        com.android.org.conscrypt.DefaultSSLContextImpl r0;

        r0 := @this: com.android.org.conscrypt.DefaultSSLContextImpl;

        specialinvoke r0.<com.android.org.conscrypt.OpenSSLContextImpl: void <init>(com.android.org.conscrypt.DefaultSSLContextImpl)>(null);

        return;
    }

    javax.net.ssl.KeyManager[] getKeyManagers() throws java.security.GeneralSecurityException, java.io.IOException
    {
        com.android.org.conscrypt.DefaultSSLContextImpl r0;
        java.lang.String r1, r2, $r10, r17;
        char[] r3, $r9;
        java.security.KeyStore r4;
        java.io.BufferedInputStream r5, $r11;
        java.lang.Throwable r6, $r15;
        javax.net.ssl.KeyManagerFactory r7;
        javax.net.ssl.KeyManager[] $r8, $r13, $r14, $r16;
        java.io.FileInputStream $r12;

        r0 := @this: com.android.org.conscrypt.DefaultSSLContextImpl;

        $r8 = <com.android.org.conscrypt.DefaultSSLContextImpl: javax.net.ssl.KeyManager[] KEY_MANAGERS>;

        if $r8 == null goto label01;

        $r16 = <com.android.org.conscrypt.DefaultSSLContextImpl: javax.net.ssl.KeyManager[] KEY_MANAGERS>;

        return $r16;

     label01:
        r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("javax.net.ssl.keyStore");

        if r1 != null goto label02;

        return null;

     label02:
        r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("javax.net.ssl.keyStorePassword");

        if r2 != null goto label03;

        $r9 = null;

        goto label04;

     label03:
        $r9 = virtualinvoke r2.<java.lang.String: char[] toCharArray()>();

     label04:
        r3 = $r9;

        $r10 = staticinvoke <java.security.KeyStore: java.lang.String getDefaultType()>();

        r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r10);

        r5 = null;

     label05:
        $r11 = new java.io.BufferedInputStream;

        $r12 = new java.io.FileInputStream;

        specialinvoke $r12.<java.io.FileInputStream: void <init>(java.lang.String)>(r1);

        specialinvoke $r11.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r12);

        r5 = $r11;

        virtualinvoke r4.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r5, r3);

     label06:
        if r5 == null goto label10;

        virtualinvoke r5.<java.io.InputStream: void close()>();

        goto label10;

     label07:
        $r15 := @caughtexception;

        r6 = $r15;

     label08:
        if r5 == null goto label09;

        virtualinvoke r5.<java.io.InputStream: void close()>();

     label09:
        throw r6;

     label10:
        r17 = staticinvoke <javax.net.ssl.KeyManagerFactory: java.lang.String getDefaultAlgorithm()>();

        r7 = staticinvoke <javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManagerFactory getInstance(java.lang.String)>(r17);

        virtualinvoke r7.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(r4, r3);

        $r14 = virtualinvoke r7.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>();

        <com.android.org.conscrypt.DefaultSSLContextImpl: javax.net.ssl.KeyManager[] KEY_MANAGERS> = $r14;

        $r13 = <com.android.org.conscrypt.DefaultSSLContextImpl: javax.net.ssl.KeyManager[] KEY_MANAGERS>;

        return $r13;

        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    javax.net.ssl.TrustManager[] getTrustManagers() throws java.security.GeneralSecurityException, java.io.IOException
    {
        com.android.org.conscrypt.DefaultSSLContextImpl r0;
        java.lang.String r1, r2, $r10, r17;
        char[] r3, $r9;
        java.security.KeyStore r4;
        java.io.BufferedInputStream r5, $r11;
        java.lang.Throwable r6, $r15;
        javax.net.ssl.TrustManagerFactory r7;
        javax.net.ssl.TrustManager[] $r8, $r13, $r14, $r16;
        java.io.FileInputStream $r12;

        r0 := @this: com.android.org.conscrypt.DefaultSSLContextImpl;

        $r8 = <com.android.org.conscrypt.DefaultSSLContextImpl: javax.net.ssl.TrustManager[] TRUST_MANAGERS>;

        if $r8 == null goto label01;

        $r16 = <com.android.org.conscrypt.DefaultSSLContextImpl: javax.net.ssl.TrustManager[] TRUST_MANAGERS>;

        return $r16;

     label01:
        r1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("javax.net.ssl.trustStore");

        if r1 != null goto label02;

        return null;

     label02:
        r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("javax.net.ssl.trustStorePassword");

        if r2 != null goto label03;

        $r9 = null;

        goto label04;

     label03:
        $r9 = virtualinvoke r2.<java.lang.String: char[] toCharArray()>();

     label04:
        r3 = $r9;

        $r10 = staticinvoke <java.security.KeyStore: java.lang.String getDefaultType()>();

        r4 = staticinvoke <java.security.KeyStore: java.security.KeyStore getInstance(java.lang.String)>($r10);

        r5 = null;

     label05:
        $r11 = new java.io.BufferedInputStream;

        $r12 = new java.io.FileInputStream;

        specialinvoke $r12.<java.io.FileInputStream: void <init>(java.lang.String)>(r1);

        specialinvoke $r11.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r12);

        r5 = $r11;

        virtualinvoke r4.<java.security.KeyStore: void load(java.io.InputStream,char[])>(r5, r3);

     label06:
        if r5 == null goto label10;

        virtualinvoke r5.<java.io.InputStream: void close()>();

        goto label10;

     label07:
        $r15 := @caughtexception;

        r6 = $r15;

     label08:
        if r5 == null goto label09;

        virtualinvoke r5.<java.io.InputStream: void close()>();

     label09:
        throw r6;

     label10:
        r17 = staticinvoke <javax.net.ssl.TrustManagerFactory: java.lang.String getDefaultAlgorithm()>();

        r7 = staticinvoke <javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManagerFactory getInstance(java.lang.String)>(r17);

        virtualinvoke r7.<javax.net.ssl.TrustManagerFactory: void init(java.security.KeyStore)>(r4);

        $r14 = virtualinvoke r7.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>();

        <com.android.org.conscrypt.DefaultSSLContextImpl: javax.net.ssl.TrustManager[] TRUST_MANAGERS> = $r14;

        $r13 = <com.android.org.conscrypt.DefaultSSLContextImpl: javax.net.ssl.TrustManager[] TRUST_MANAGERS>;

        return $r13;

        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    public void engineInit(javax.net.ssl.KeyManager[], javax.net.ssl.TrustManager[], java.security.SecureRandom) throws java.security.KeyManagementException
    {
        com.android.org.conscrypt.DefaultSSLContextImpl r0;
        javax.net.ssl.KeyManager[] r1;
        javax.net.ssl.TrustManager[] r2;
        java.security.SecureRandom r3;
        java.security.KeyManagementException $r4;

        r0 := @this: com.android.org.conscrypt.DefaultSSLContextImpl;

        r1 := @parameter0: javax.net.ssl.KeyManager[];

        r2 := @parameter1: javax.net.ssl.TrustManager[];

        r3 := @parameter2: java.security.SecureRandom;

        $r4 = new java.security.KeyManagementException;

        specialinvoke $r4.<java.security.KeyManagementException: void <init>(java.lang.String)>("Do not init() the default SSLContext ");

        throw $r4;
    }
}
