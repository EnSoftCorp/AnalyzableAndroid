public final class com.android.org.conscrypt.TrustedCertificateStore extends java.lang.Object
{
    private static final java.lang.String PREFIX_SYSTEM;
    private static final java.lang.String PREFIX_USER;
    private static java.io.File defaultCaCertsSystemDir;
    private static java.io.File defaultCaCertsAddedDir;
    private static java.io.File defaultCaCertsDeletedDir;
    private static final java.security.cert.CertificateFactory CERT_FACTORY;
    private final java.io.File systemDir;
    private final java.io.File addedDir;
    private final java.io.File deletedDir;

    public static final boolean isSystem(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("system:");

        return $z0;
    }

    public static final boolean isUser(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("user:");

        return $z0;
    }

    public static void setDefaultUserDirectory(java.io.File)
    {
        java.io.File r0, $r1, $r2;

        r0 := @parameter0: java.io.File;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>(r0, "cacerts-added");

        <com.android.org.conscrypt.TrustedCertificateStore: java.io.File defaultCaCertsAddedDir> = $r1;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>(r0, "cacerts-removed");

        <com.android.org.conscrypt.TrustedCertificateStore: java.io.File defaultCaCertsDeletedDir> = $r2;

        return;
    }

    public void <init>()
    {
        com.android.org.conscrypt.TrustedCertificateStore r0;
        java.io.File $r1, $r2, $r3;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateStore;

        $r3 = <com.android.org.conscrypt.TrustedCertificateStore: java.io.File defaultCaCertsSystemDir>;

        $r2 = <com.android.org.conscrypt.TrustedCertificateStore: java.io.File defaultCaCertsAddedDir>;

        $r1 = <com.android.org.conscrypt.TrustedCertificateStore: java.io.File defaultCaCertsDeletedDir>;

        specialinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: void <init>(java.io.File,java.io.File,java.io.File)>($r3, $r2, $r1);

        return;
    }

    public void <init>(java.io.File, java.io.File, java.io.File)
    {
        com.android.org.conscrypt.TrustedCertificateStore r0;
        java.io.File r1, r2, r3;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateStore;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.io.File;

        r3 := @parameter2: java.io.File;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.org.conscrypt.TrustedCertificateStore: java.io.File systemDir> = r1;

        r0.<com.android.org.conscrypt.TrustedCertificateStore: java.io.File addedDir> = r2;

        r0.<com.android.org.conscrypt.TrustedCertificateStore: java.io.File deletedDir> = r3;

        return;
    }

    public java.security.cert.Certificate getCertificate(java.lang.String)
    {
        com.android.org.conscrypt.TrustedCertificateStore r0;
        java.lang.String r1;
        java.security.cert.Certificate $r2;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateStore;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: java.security.cert.Certificate getCertificate(java.lang.String,boolean)>(r1, 0);

        return $r2;
    }

    public java.security.cert.Certificate getCertificate(java.lang.String, boolean)
    {
        com.android.org.conscrypt.TrustedCertificateStore r0;
        java.lang.String r1;
        boolean z0, $z1, $z2, $z3, $z4;
        java.io.File r2;
        java.security.cert.X509Certificate r3;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateStore;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 = specialinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: java.io.File fileForAlias(java.lang.String)>(r1);

        if r2 == null goto label1;

        $z1 = staticinvoke <com.android.org.conscrypt.TrustedCertificateStore: boolean isUser(java.lang.String)>(r1);

        if $z1 == 0 goto label2;

        $z4 = specialinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: boolean isTombstone(java.io.File)>(r2);

        if $z4 == 0 goto label2;

     label1:
        return null;

     label2:
        r3 = specialinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: java.security.cert.X509Certificate readCertificate(java.io.File)>(r2);

        if r3 == null goto label3;

        $z2 = staticinvoke <com.android.org.conscrypt.TrustedCertificateStore: boolean isSystem(java.lang.String)>(r1);

        if $z2 == 0 goto label4;

        if z0 != 0 goto label4;

        $z3 = specialinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: boolean isDeletedSystemCertificate(java.security.cert.X509Certificate)>(r3);

        if $z3 == 0 goto label4;

     label3:
        return null;

     label4:
        return r3;
    }

    private java.io.File fileForAlias(java.lang.String)
    {
        com.android.org.conscrypt.TrustedCertificateStore r0;
        java.lang.String r1, $r4, $r6, $r8, $r11;
        java.io.File r2, $r3, $r5, $r7, $r9;
        boolean $z0, $z1, $z2, $z3;
        int $i0, $i1;
        java.lang.NullPointerException $r10;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateStore;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r10 = new java.lang.NullPointerException;

        specialinvoke $r10.<java.lang.NullPointerException: void <init>(java.lang.String)>("alias == null");

        throw $r10;

     label1:
        $z0 = staticinvoke <com.android.org.conscrypt.TrustedCertificateStore: boolean isSystem(java.lang.String)>(r1);

        if $z0 == 0 goto label2;

        $r7 = new java.io.File;

        $r9 = r0.<com.android.org.conscrypt.TrustedCertificateStore: java.io.File systemDir>;

        $r8 = "system:";

        $i1 = virtualinvoke $r8.<java.lang.String: int length()>();

        $r11 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i1);

        specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>($r9, $r11);

        r2 = $r7;

        goto label4;

     label2:
        $z1 = staticinvoke <com.android.org.conscrypt.TrustedCertificateStore: boolean isUser(java.lang.String)>(r1);

        if $z1 == 0 goto label3;

        $r3 = new java.io.File;

        $r5 = r0.<com.android.org.conscrypt.TrustedCertificateStore: java.io.File addedDir>;

        $r4 = "user:";

        $i0 = virtualinvoke $r4.<java.lang.String: int length()>();

        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i0);

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, $r6);

        r2 = $r3;

        goto label4;

     label3:
        return null;

     label4:
        $z2 = virtualinvoke r2.<java.io.File: boolean exists()>();

        if $z2 == 0 goto label5;

        $z3 = specialinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: boolean isTombstone(java.io.File)>(r2);

        if $z3 == 0 goto label6;

     label5:
        return null;

     label6:
        return r2;
    }

    private boolean isTombstone(java.io.File)
    {
        com.android.org.conscrypt.TrustedCertificateStore r0;
        java.io.File r1;
        long $l0;
        byte $b1;
        boolean $z0;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateStore;

        r1 := @parameter0: java.io.File;

        $l0 = virtualinvoke r1.<java.io.File: long length()>();

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private java.security.cert.X509Certificate readCertificate(java.io.File)
    {
        com.android.org.conscrypt.TrustedCertificateStore r0;
        java.io.File r1;
        java.io.BufferedInputStream r2, $r5;
        java.security.cert.X509Certificate r3;
        java.lang.Throwable r4, $r11;
        boolean $z0;
        java.io.FileInputStream $r6;
        java.security.cert.CertificateFactory $r7;
        java.security.cert.Certificate $r8;
        java.io.IOException $r9;
        java.security.cert.CertificateException $r10;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateStore;

        r1 := @parameter0: java.io.File;

        $z0 = virtualinvoke r1.<java.io.File: boolean isFile()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        r2 = null;

     label2:
        $r5 = new java.io.BufferedInputStream;

        $r6 = new java.io.FileInputStream;

        specialinvoke $r6.<java.io.FileInputStream: void <init>(java.io.File)>(r1);

        specialinvoke $r5.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r6);

        r2 = $r5;

        $r7 = <com.android.org.conscrypt.TrustedCertificateStore: java.security.cert.CertificateFactory CERT_FACTORY>;

        $r8 = virtualinvoke $r7.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>(r2);

        r3 = (java.security.cert.X509Certificate) $r8;

     label3:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r2);

        return r3;

     label4:
        $r9 := @caughtexception;

     label5:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r2);

        return null;

     label6:
        $r10 := @caughtexception;

     label7:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r2);

        return null;

     label8:
        $r11 := @caughtexception;

        r4 = $r11;

     label9:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r2);

        throw r4;

        catch java.io.IOException from label2 to label3 with label4;
        catch java.security.cert.CertificateException from label2 to label3 with label6;
        catch java.lang.Throwable from label2 to label3 with label8;
        catch java.lang.Throwable from label4 to label5 with label8;
        catch java.lang.Throwable from label6 to label7 with label8;
        catch java.lang.Throwable from label8 to label9 with label8;
    }

    private void writeCertificate(java.io.File, java.security.cert.X509Certificate) throws java.io.IOException, java.security.cert.CertificateException
    {
        com.android.org.conscrypt.TrustedCertificateStore r0;
        java.io.File r1, r3;
        java.security.cert.X509Certificate r2;
        java.io.FileOutputStream r4, $r6;
        java.lang.Throwable r5, $r8;
        byte[] $r7;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateStore;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.security.cert.X509Certificate;

        r3 = virtualinvoke r1.<java.io.File: java.io.File getParentFile()>();

        virtualinvoke r3.<java.io.File: boolean mkdirs()>();

        virtualinvoke r3.<java.io.File: boolean setReadable(boolean,boolean)>(1, 0);

        virtualinvoke r3.<java.io.File: boolean setExecutable(boolean,boolean)>(1, 0);

        r4 = null;

     label1:
        $r6 = new java.io.FileOutputStream;

        specialinvoke $r6.<java.io.FileOutputStream: void <init>(java.io.File)>(r1);

        r4 = $r6;

        $r7 = virtualinvoke r2.<java.security.cert.X509Certificate: byte[] getEncoded()>();

        virtualinvoke r4.<java.io.OutputStream: void write(byte[])>($r7);

     label2:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        goto label5;

     label3:
        $r8 := @caughtexception;

        r5 = $r8;

     label4:
        staticinvoke <libcore.io.IoUtils: void closeQuietly(java.lang.AutoCloseable)>(r4);

        throw r5;

     label5:
        virtualinvoke r1.<java.io.File: boolean setReadable(boolean,boolean)>(1, 0);

        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private boolean isDeletedSystemCertificate(java.security.cert.X509Certificate)
    {
        com.android.org.conscrypt.TrustedCertificateStore r0;
        java.security.cert.X509Certificate r1;
        java.io.File $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateStore;

        r1 := @parameter0: java.security.cert.X509Certificate;

        $r2 = r0.<com.android.org.conscrypt.TrustedCertificateStore: java.io.File deletedDir>;

        $r3 = specialinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: java.io.File getCertificateFile(java.io.File,java.security.cert.X509Certificate)>($r2, r1);

        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        return $z0;
    }

    public java.util.Date getCreationDate(java.lang.String)
    {
        com.android.org.conscrypt.TrustedCertificateStore r0;
        java.lang.String r1;
        java.io.File r2;
        long l0;
        boolean $z0;
        byte $b1;
        java.util.Date $r3;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateStore;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: boolean containsAlias(java.lang.String)>(r1);

        if $z0 != 0 goto label1;

        return null;

     label1:
        r2 = specialinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: java.io.File fileForAlias(java.lang.String)>(r1);

        if r2 != null goto label2;

        return null;

     label2:
        l0 = virtualinvoke r2.<java.io.File: long lastModified()>();

        $b1 = l0 cmp 0L;

        if $b1 != 0 goto label3;

        return null;

     label3:
        $r3 = new java.util.Date;

        specialinvoke $r3.<java.util.Date: void <init>(long)>(l0);

        return $r3;
    }

    public java.util.Set aliases()
    {
        com.android.org.conscrypt.TrustedCertificateStore r0;
        java.util.HashSet r1, $r2;
        java.io.File $r3, $r4;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateStore;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r1 = $r2;

        $r3 = r0.<com.android.org.conscrypt.TrustedCertificateStore: java.io.File addedDir>;

        specialinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: void addAliases(java.util.Set,java.lang.String,java.io.File)>(r1, "user:", $r3);

        $r4 = r0.<com.android.org.conscrypt.TrustedCertificateStore: java.io.File systemDir>;

        specialinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: void addAliases(java.util.Set,java.lang.String,java.io.File)>(r1, "system:", $r4);

        return r1;
    }

    public java.util.Set userAliases()
    {
        com.android.org.conscrypt.TrustedCertificateStore r0;
        java.util.HashSet r1, $r2;
        java.io.File $r3;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateStore;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r1 = $r2;

        $r3 = r0.<com.android.org.conscrypt.TrustedCertificateStore: java.io.File addedDir>;

        specialinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: void addAliases(java.util.Set,java.lang.String,java.io.File)>(r1, "user:", $r3);

        return r1;
    }

    private void addAliases(java.util.Set, java.lang.String, java.io.File)
    {
        com.android.org.conscrypt.TrustedCertificateStore r0;
        java.util.Set r1;
        java.lang.String r2, r6, r7;
        java.io.File r3;
        java.lang.String[] r4, r5;
        int i0, i1;
        java.lang.StringBuilder $r8, $r9, $r10;
        boolean $z0;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateStore;

        r1 := @parameter0: java.util.Set;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.io.File;

        r4 = virtualinvoke r3.<java.io.File: java.lang.String[] list()>();

        if r4 != null goto label1;

        return;

     label1:
        r5 = r4;

        i0 = lengthof r5;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        r6 = r5[i1];

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        r7 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: boolean containsAlias(java.lang.String)>(r7);

        if $z0 == 0 goto label3;

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r7);

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return;
    }

    public java.util.Set allSystemAliases()
    {
        com.android.org.conscrypt.TrustedCertificateStore r0;
        java.util.HashSet r1, $r6;
        java.lang.String[] r2, r3;
        int i0, i1;
        java.lang.String r4, r5;
        java.io.File $r7;
        java.lang.StringBuilder $r8, $r9, $r10;
        boolean $z0;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateStore;

        $r6 = new java.util.HashSet;

        specialinvoke $r6.<java.util.HashSet: void <init>()>();

        r1 = $r6;

        $r7 = r0.<com.android.org.conscrypt.TrustedCertificateStore: java.io.File systemDir>;

        r2 = virtualinvoke $r7.<java.io.File: java.lang.String[] list()>();

        if r2 != null goto label1;

        return r1;

     label1:
        r3 = r2;

        i0 = lengthof r3;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        r4 = r3[i1];

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("system:");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = specialinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: boolean containsAlias(java.lang.String,boolean)>(r5, 1);

        if $z0 == 0 goto label3;

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r5);

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return r1;
    }

    public boolean containsAlias(java.lang.String)
    {
        com.android.org.conscrypt.TrustedCertificateStore r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateStore;

        r1 := @parameter0: java.lang.String;

        $z0 = specialinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: boolean containsAlias(java.lang.String,boolean)>(r1, 0);

        return $z0;
    }

    private boolean containsAlias(java.lang.String, boolean)
    {
        com.android.org.conscrypt.TrustedCertificateStore r0;
        java.lang.String r1;
        boolean z0, $z1;
        java.security.cert.Certificate $r2;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateStore;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r2 = virtualinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: java.security.cert.Certificate getCertificate(java.lang.String,boolean)>(r1, z0);

        if $r2 == null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public java.lang.String getCertificateAlias(java.security.cert.Certificate)
    {
        com.android.org.conscrypt.TrustedCertificateStore r0;
        java.security.cert.Certificate r1;
        java.lang.String $r2;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateStore;

        r1 := @parameter0: java.security.cert.Certificate;

        $r2 = virtualinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: java.lang.String getCertificateAlias(java.security.cert.Certificate,boolean)>(r1, 0);

        return $r2;
    }

    public java.lang.String getCertificateAlias(java.security.cert.Certificate, boolean)
    {
        com.android.org.conscrypt.TrustedCertificateStore r0;
        java.security.cert.Certificate r1;
        boolean z0, $z1, $z2, $z3, $z4;
        java.security.cert.X509Certificate r2;
        java.io.File r3, r4, $r5, $r6;
        java.lang.StringBuilder $r7, $r8, $r11, $r12, $r14, $r16;
        java.lang.String $r9, $r10, $r13, $r15;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateStore;

        r1 := @parameter0: java.security.cert.Certificate;

        z0 := @parameter1: boolean;

        if r1 == null goto label1;

        $z1 = r1 instanceof java.security.cert.X509Certificate;

        if $z1 != 0 goto label2;

     label1:
        return null;

     label2:
        r2 = (java.security.cert.X509Certificate) r1;

        $r5 = r0.<com.android.org.conscrypt.TrustedCertificateStore: java.io.File addedDir>;

        r3 = specialinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: java.io.File getCertificateFile(java.io.File,java.security.cert.X509Certificate)>($r5, r2);

        $z2 = virtualinvoke r3.<java.io.File: boolean exists()>();

        if $z2 == 0 goto label3;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("user:");

        $r13 = virtualinvoke r3.<java.io.File: java.lang.String getName()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r15;

     label3:
        if z0 != 0 goto label4;

        $z4 = specialinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: boolean isDeletedSystemCertificate(java.security.cert.X509Certificate)>(r2);

        if $z4 == 0 goto label4;

        return null;

     label4:
        $r6 = r0.<com.android.org.conscrypt.TrustedCertificateStore: java.io.File systemDir>;

        r4 = specialinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: java.io.File getCertificateFile(java.io.File,java.security.cert.X509Certificate)>($r6, r2);

        $z3 = virtualinvoke r4.<java.io.File: boolean exists()>();

        if $z3 == 0 goto label5;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("system:");

        $r9 = virtualinvoke r4.<java.io.File: java.lang.String getName()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;

     label5:
        return null;
    }

    public boolean isUserAddedCertificate(java.security.cert.X509Certificate)
    {
        com.android.org.conscrypt.TrustedCertificateStore r0;
        java.security.cert.X509Certificate r1;
        java.io.File $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateStore;

        r1 := @parameter0: java.security.cert.X509Certificate;

        $r2 = r0.<com.android.org.conscrypt.TrustedCertificateStore: java.io.File addedDir>;

        $r3 = specialinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: java.io.File getCertificateFile(java.io.File,java.security.cert.X509Certificate)>($r2, r1);

        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        return $z0;
    }

    private java.io.File getCertificateFile(java.io.File, java.security.cert.X509Certificate)
    {
        com.android.org.conscrypt.TrustedCertificateStore r0;
        java.io.File r1, $r7;
        java.security.cert.X509Certificate r2;
        com.android.org.conscrypt.TrustedCertificateStore$1 r3, $r4;
        javax.security.auth.x500.X500Principal $r5;
        java.lang.Object $r6;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateStore;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.security.cert.X509Certificate;

        $r4 = new com.android.org.conscrypt.TrustedCertificateStore$1;

        specialinvoke $r4.<com.android.org.conscrypt.TrustedCertificateStore$1: void <init>(com.android.org.conscrypt.TrustedCertificateStore,java.security.cert.X509Certificate)>(r0, r2);

        r3 = $r4;

        $r5 = virtualinvoke r2.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

        $r6 = specialinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: java.lang.Object findCert(java.io.File,javax.security.auth.x500.X500Principal,com.android.org.conscrypt.TrustedCertificateStore$CertSelector,java.lang.Class)>(r1, $r5, r3, class "java/io/File");

        $r7 = (java.io.File) $r6;

        return $r7;
    }

    public java.security.cert.X509Certificate getTrustAnchor(java.security.cert.X509Certificate)
    {
        com.android.org.conscrypt.TrustedCertificateStore r0;
        java.security.cert.X509Certificate r1, r3, r4;
        com.android.org.conscrypt.TrustedCertificateStore$2 r2, $r5;
        java.io.File $r6, $r9;
        javax.security.auth.x500.X500Principal $r7, $r10;
        java.lang.Object $r8, $r11;
        boolean $z0;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateStore;

        r1 := @parameter0: java.security.cert.X509Certificate;

        $r5 = new com.android.org.conscrypt.TrustedCertificateStore$2;

        specialinvoke $r5.<com.android.org.conscrypt.TrustedCertificateStore$2: void <init>(com.android.org.conscrypt.TrustedCertificateStore,java.security.cert.X509Certificate)>(r0, r1);

        r2 = $r5;

        $r6 = r0.<com.android.org.conscrypt.TrustedCertificateStore: java.io.File addedDir>;

        $r7 = virtualinvoke r1.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

        $r8 = specialinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: java.lang.Object findCert(java.io.File,javax.security.auth.x500.X500Principal,com.android.org.conscrypt.TrustedCertificateStore$CertSelector,java.lang.Class)>($r6, $r7, r2, class "java/security/cert/X509Certificate");

        r3 = (java.security.cert.X509Certificate) $r8;

        if r3 == null goto label1;

        return r3;

     label1:
        $r9 = r0.<com.android.org.conscrypt.TrustedCertificateStore: java.io.File systemDir>;

        $r10 = virtualinvoke r1.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

        $r11 = specialinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: java.lang.Object findCert(java.io.File,javax.security.auth.x500.X500Principal,com.android.org.conscrypt.TrustedCertificateStore$CertSelector,java.lang.Class)>($r9, $r10, r2, class "java/security/cert/X509Certificate");

        r4 = (java.security.cert.X509Certificate) $r11;

        if r4 == null goto label2;

        $z0 = specialinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: boolean isDeletedSystemCertificate(java.security.cert.X509Certificate)>(r4);

        if $z0 != 0 goto label2;

        return r4;

     label2:
        return null;
    }

    public java.security.cert.X509Certificate findIssuer(java.security.cert.X509Certificate)
    {
        com.android.org.conscrypt.TrustedCertificateStore r0;
        java.security.cert.X509Certificate r1, r4, r5;
        com.android.org.conscrypt.TrustedCertificateStore$3 r2, $r6;
        javax.security.auth.x500.X500Principal r3;
        java.io.File $r7, $r9;
        java.lang.Object $r8, $r10;
        boolean $z0;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateStore;

        r1 := @parameter0: java.security.cert.X509Certificate;

        $r6 = new com.android.org.conscrypt.TrustedCertificateStore$3;

        specialinvoke $r6.<com.android.org.conscrypt.TrustedCertificateStore$3: void <init>(com.android.org.conscrypt.TrustedCertificateStore,java.security.cert.X509Certificate)>(r0, r1);

        r2 = $r6;

        r3 = virtualinvoke r1.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $r7 = r0.<com.android.org.conscrypt.TrustedCertificateStore: java.io.File addedDir>;

        $r8 = specialinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: java.lang.Object findCert(java.io.File,javax.security.auth.x500.X500Principal,com.android.org.conscrypt.TrustedCertificateStore$CertSelector,java.lang.Class)>($r7, r3, r2, class "java/security/cert/X509Certificate");

        r4 = (java.security.cert.X509Certificate) $r8;

        if r4 == null goto label1;

        return r4;

     label1:
        $r9 = r0.<com.android.org.conscrypt.TrustedCertificateStore: java.io.File systemDir>;

        $r10 = specialinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: java.lang.Object findCert(java.io.File,javax.security.auth.x500.X500Principal,com.android.org.conscrypt.TrustedCertificateStore$CertSelector,java.lang.Class)>($r9, r3, r2, class "java/security/cert/X509Certificate");

        r5 = (java.security.cert.X509Certificate) $r10;

        if r5 == null goto label2;

        $z0 = specialinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: boolean isDeletedSystemCertificate(java.security.cert.X509Certificate)>(r5);

        if $z0 != 0 goto label2;

        return r5;

     label2:
        return null;
    }

    private static boolean isSelfIssuedCertificate(com.android.org.conscrypt.OpenSSLX509Certificate)
    {
        com.android.org.conscrypt.OpenSSLX509Certificate r0;
        long l0;
        int $i1;
        boolean $z0;

        r0 := @parameter0: com.android.org.conscrypt.OpenSSLX509Certificate;

        l0 = virtualinvoke r0.<com.android.org.conscrypt.OpenSSLX509Certificate: long getContext()>();

        $i1 = staticinvoke <com.android.org.conscrypt.NativeCrypto: int X509_check_issued(long,long)>(l0, l0);

        if $i1 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static com.android.org.conscrypt.OpenSSLX509Certificate convertToOpenSSLIfNeeded(java.security.cert.X509Certificate) throws java.security.cert.CertificateException
    {
        java.security.cert.X509Certificate r0;
        java.lang.Exception r1, $r5;
        boolean $z0;
        byte[] $r2;
        com.android.org.conscrypt.OpenSSLX509Certificate $r3, $r4;
        java.security.cert.CertificateException $r6;

        r0 := @parameter0: java.security.cert.X509Certificate;

        if r0 != null goto label1;

        return null;

     label1:
        $z0 = r0 instanceof com.android.org.conscrypt.OpenSSLX509Certificate;

        if $z0 == 0 goto label2;

        $r4 = (com.android.org.conscrypt.OpenSSLX509Certificate) r0;

        return $r4;

     label2:
        $r2 = virtualinvoke r0.<java.security.cert.X509Certificate: byte[] getEncoded()>();

        $r3 = staticinvoke <com.android.org.conscrypt.OpenSSLX509Certificate: com.android.org.conscrypt.OpenSSLX509Certificate fromX509Der(byte[])>($r2);

     label3:
        return $r3;

     label4:
        $r5 := @caughtexception;

        r1 = $r5;

        $r6 = new java.security.cert.CertificateException;

        specialinvoke $r6.<java.security.cert.CertificateException: void <init>(java.lang.Throwable)>(r1);

        throw $r6;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public java.util.List getCertificateChain(java.security.cert.X509Certificate) throws java.security.cert.CertificateException
    {
        com.android.org.conscrypt.TrustedCertificateStore r0;
        java.security.cert.X509Certificate r1, $r8;
        java.util.ArrayList r2, $r5, $r9;
        int i0;
        com.android.org.conscrypt.OpenSSLX509Certificate r3, r4, $r6;
        java.lang.Object $r7;
        boolean $z1;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateStore;

        r1 := @parameter0: java.security.cert.X509Certificate;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r2 = $r5;

        $r6 = staticinvoke <com.android.org.conscrypt.TrustedCertificateStore: com.android.org.conscrypt.OpenSSLX509Certificate convertToOpenSSLIfNeeded(java.security.cert.X509Certificate)>(r1);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r6);

        i0 = 0;

     label1:
        $r7 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i0);

        r3 = (com.android.org.conscrypt.OpenSSLX509Certificate) $r7;

        $z1 = staticinvoke <com.android.org.conscrypt.TrustedCertificateStore: boolean isSelfIssuedCertificate(com.android.org.conscrypt.OpenSSLX509Certificate)>(r3);

        if $z1 == 0 goto label2;

        goto label4;

     label2:
        $r8 = virtualinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: java.security.cert.X509Certificate findIssuer(java.security.cert.X509Certificate)>(r3);

        r4 = staticinvoke <com.android.org.conscrypt.TrustedCertificateStore: com.android.org.conscrypt.OpenSSLX509Certificate convertToOpenSSLIfNeeded(java.security.cert.X509Certificate)>($r8);

        if r4 != null goto label3;

        goto label4;

     label3:
        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r4);

        i0 = i0 + 1;

        goto label1;

     label4:
        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>(java.util.Collection)>(r2);

        return $r9;
    }

    private java.lang.Object findCert(java.io.File, javax.security.auth.x500.X500Principal, com.android.org.conscrypt.TrustedCertificateStore$CertSelector, java.lang.Class)
    {
        com.android.org.conscrypt.TrustedCertificateStore r0;
        java.io.File r1, r6;
        javax.security.auth.x500.X500Principal r2;
        com.android.org.conscrypt.TrustedCertificateStore$CertSelector r3;
        java.lang.Class r4;
        java.lang.String r5;
        int i0;
        java.security.cert.X509Certificate r7;
        boolean $z0, $z1, $z2;
        java.lang.AssertionError $r8;
        java.lang.Boolean $r9, $r10;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateStore;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: javax.security.auth.x500.X500Principal;

        r3 := @parameter2: com.android.org.conscrypt.TrustedCertificateStore$CertSelector;

        r4 := @parameter3: java.lang.Class;

        r5 = specialinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: java.lang.String hash(javax.security.auth.x500.X500Principal)>(r2);

        i0 = 0;

     label01:
        r6 = specialinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: java.io.File file(java.io.File,java.lang.String,int)>(r1, r5, i0);

        $z0 = virtualinvoke r6.<java.io.File: boolean isFile()>();

        if $z0 != 0 goto label04;

        if r4 != class "java/lang/Boolean" goto label02;

        $r9 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r9;

     label02:
        if r4 != class "java/io/File" goto label03;

        return r6;

     label03:
        return null;

     label04:
        $z1 = specialinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: boolean isTombstone(java.io.File)>(r6);

        if $z1 == 0 goto label05;

        goto label10;

     label05:
        r7 = specialinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: java.security.cert.X509Certificate readCertificate(java.io.File)>(r6);

        if r7 != null goto label06;

        goto label10;

     label06:
        $z2 = interfaceinvoke r3.<com.android.org.conscrypt.TrustedCertificateStore$CertSelector: boolean match(java.security.cert.X509Certificate)>(r7);

        if $z2 == 0 goto label10;

        if r4 != class "java/security/cert/X509Certificate" goto label07;

        return r7;

     label07:
        if r4 != class "java/lang/Boolean" goto label08;

        $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return $r10;

     label08:
        if r4 != class "java/io/File" goto label09;

        return r6;

     label09:
        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label10:
        i0 = i0 + 1;

        goto label01;
    }

    private java.lang.String hash(javax.security.auth.x500.X500Principal)
    {
        com.android.org.conscrypt.TrustedCertificateStore r0;
        javax.security.auth.x500.X500Principal r1;
        int i0;
        java.lang.String $r2;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateStore;

        r1 := @parameter0: javax.security.auth.x500.X500Principal;

        i0 = staticinvoke <com.android.org.conscrypt.NativeCrypto: int X509_NAME_hash_old(javax.security.auth.x500.X500Principal)>(r1);

        $r2 = staticinvoke <java.lang.IntegralToString: java.lang.String intToHexString(int,boolean,int)>(i0, 0, 8);

        return $r2;
    }

    private java.io.File file(java.io.File, java.lang.String, int)
    {
        com.android.org.conscrypt.TrustedCertificateStore r0;
        java.io.File r1, $r3;
        java.lang.String r2, $r8;
        int i0;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateStore;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r3 = new java.io.File;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, $r8);

        return $r3;
    }

    public void installCertificate(java.security.cert.X509Certificate) throws java.io.IOException, java.security.cert.CertificateException
    {
        com.android.org.conscrypt.TrustedCertificateStore r0;
        java.security.cert.X509Certificate r1;
        java.io.File r2, r3, $r4, $r5, $r6, r13;
        boolean $z0, $z1, $z2, $z3;
        java.io.IOException $r7;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.NullPointerException $r11;
        java.lang.String $r12;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateStore;

        r1 := @parameter0: java.security.cert.X509Certificate;

        if r1 != null goto label1;

        $r11 = new java.lang.NullPointerException;

        specialinvoke $r11.<java.lang.NullPointerException: void <init>(java.lang.String)>("cert == null");

        throw $r11;

     label1:
        $r4 = r0.<com.android.org.conscrypt.TrustedCertificateStore: java.io.File systemDir>;

        r2 = specialinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: java.io.File getCertificateFile(java.io.File,java.security.cert.X509Certificate)>($r4, r1);

        $z0 = virtualinvoke r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label4;

        $r6 = r0.<com.android.org.conscrypt.TrustedCertificateStore: java.io.File deletedDir>;

        r3 = specialinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: java.io.File getCertificateFile(java.io.File,java.security.cert.X509Certificate)>($r6, r1);

        $z2 = virtualinvoke r3.<java.io.File: boolean exists()>();

        if $z2 == 0 goto label3;

        $z3 = virtualinvoke r3.<java.io.File: boolean delete()>();

        if $z3 != 0 goto label2;

        $r7 = new java.io.IOException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not remove ");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>($r12);

        throw $r7;

     label2:
        return;

     label3:
        return;

     label4:
        $r5 = r0.<com.android.org.conscrypt.TrustedCertificateStore: java.io.File addedDir>;

        r13 = specialinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: java.io.File getCertificateFile(java.io.File,java.security.cert.X509Certificate)>($r5, r1);

        $z1 = virtualinvoke r13.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label5;

        return;

     label5:
        specialinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: void writeCertificate(java.io.File,java.security.cert.X509Certificate)>(r13, r1);

        return;
    }

    public void deleteCertificateEntry(java.lang.String) throws java.io.IOException, java.security.cert.CertificateException
    {
        com.android.org.conscrypt.TrustedCertificateStore r0;
        java.lang.String r1;
        java.io.File r2, r4, $r6;
        java.security.cert.X509Certificate r3;
        boolean $z0, $z1, $z2;
        java.io.FileOutputStream $r5;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateStore;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        return;

     label1:
        r2 = specialinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: java.io.File fileForAlias(java.lang.String)>(r1);

        if r2 != null goto label2;

        return;

     label2:
        $z0 = staticinvoke <com.android.org.conscrypt.TrustedCertificateStore: boolean isSystem(java.lang.String)>(r1);

        if $z0 == 0 goto label5;

        r3 = specialinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: java.security.cert.X509Certificate readCertificate(java.io.File)>(r2);

        if r3 != null goto label3;

        return;

     label3:
        $r6 = r0.<com.android.org.conscrypt.TrustedCertificateStore: java.io.File deletedDir>;

        r4 = specialinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: java.io.File getCertificateFile(java.io.File,java.security.cert.X509Certificate)>($r6, r3);

        $z2 = virtualinvoke r4.<java.io.File: boolean exists()>();

        if $z2 == 0 goto label4;

        return;

     label4:
        specialinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: void writeCertificate(java.io.File,java.security.cert.X509Certificate)>(r4, r3);

        return;

     label5:
        $z1 = staticinvoke <com.android.org.conscrypt.TrustedCertificateStore: boolean isUser(java.lang.String)>(r1);

        if $z1 == 0 goto label6;

        $r5 = new java.io.FileOutputStream;

        specialinvoke $r5.<java.io.FileOutputStream: void <init>(java.io.File)>(r2);

        virtualinvoke $r5.<java.io.FileOutputStream: void close()>();

        specialinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: void removeUnnecessaryTombstones(java.lang.String)>(r1);

        return;

     label6:
        return;
    }

    private void removeUnnecessaryTombstones(java.lang.String) throws java.io.IOException
    {
        com.android.org.conscrypt.TrustedCertificateStore r0;
        java.lang.String r1, r2, $r4, $r5, $r14;
        int i0, i1, $i2, $i3, $i4;
        java.io.File r3, $r6, $r7, $r8;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r9, $r11, $r12;
        java.io.IOException $r10;
        java.lang.AssertionError $r13, $r15;

        r0 := @this: com.android.org.conscrypt.TrustedCertificateStore;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <com.android.org.conscrypt.TrustedCertificateStore: boolean isUser(java.lang.String)>(r1);

        if $z0 != 0 goto label1;

        $r15 = new java.lang.AssertionError;

        specialinvoke $r15.<java.lang.AssertionError: void <init>(java.lang.Object)>(r1);

        throw $r15;

     label1:
        i0 = virtualinvoke r1.<java.lang.String: int lastIndexOf(int)>(46);

        if i0 != -1 goto label2;

        $r13 = new java.lang.AssertionError;

        specialinvoke $r13.<java.lang.AssertionError: void <init>(java.lang.Object)>(r1);

        throw $r13;

     label2:
        $r4 = "user:";

        $i2 = virtualinvoke $r4.<java.lang.String: int length()>();

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i2, i0);

        $i3 = i0 + 1;

        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i3);

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

        $r6 = r0.<com.android.org.conscrypt.TrustedCertificateStore: java.io.File addedDir>;

        $i4 = i1 + 1;

        $r7 = specialinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: java.io.File file(java.io.File,java.lang.String,int)>($r6, r2, $i4);

        $z1 = virtualinvoke $r7.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label3;

        return;

     label3:
        if i1 < 0 goto label6;

        $r8 = r0.<com.android.org.conscrypt.TrustedCertificateStore: java.io.File addedDir>;

        r3 = specialinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: java.io.File file(java.io.File,java.lang.String,int)>($r8, r2, i1);

        $z3 = specialinvoke r0.<com.android.org.conscrypt.TrustedCertificateStore: boolean isTombstone(java.io.File)>(r3);

        if $z3 != 0 goto label4;

        goto label6;

     label4:
        $z2 = virtualinvoke r3.<java.io.File: boolean delete()>();

        if $z2 != 0 goto label5;

        $r10 = new java.io.IOException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not remove ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.io.IOException: void <init>(java.lang.String)>($r14);

        throw $r10;

     label5:
        i1 = i1 + -1;

        goto label3;

     label6:
        return;
    }

    static void <clinit>()
    {
        java.lang.String r0, r1, $r7, $r12;
        java.security.cert.CertificateException r2, $r15;
        java.io.File $r3, $r8;
        java.lang.StringBuilder $r4, $r5, $r6, $r9, $r10, $r11;
        java.security.cert.CertificateFactory $r13;
        java.lang.AssertionError $r14;

        <com.android.org.conscrypt.TrustedCertificateStore: java.lang.String PREFIX_USER> = "user:";

        <com.android.org.conscrypt.TrustedCertificateStore: java.lang.String PREFIX_SYSTEM> = "system:";

        r0 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("ANDROID_ROOT");

        r1 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("ANDROID_DATA");

        $r3 = new java.io.File;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/etc/security/cacerts");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>($r7);

        <com.android.org.conscrypt.TrustedCertificateStore: java.io.File defaultCaCertsSystemDir> = $r3;

        $r8 = new java.io.File;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/misc/keychain");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.io.File: void <init>(java.lang.String)>($r12);

        staticinvoke <com.android.org.conscrypt.TrustedCertificateStore: void setDefaultUserDirectory(java.io.File)>($r8);

     label1:
        $r13 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>("X509");

        <com.android.org.conscrypt.TrustedCertificateStore: java.security.cert.CertificateFactory CERT_FACTORY> = $r13;

     label2:
        goto label4;

     label3:
        $r15 := @caughtexception;

        r2 = $r15;

        $r14 = new java.lang.AssertionError;

        specialinvoke $r14.<java.lang.AssertionError: void <init>(java.lang.Object)>(r2);

        throw $r14;

     label4:
        return;

        catch java.security.cert.CertificateException from label1 to label2 with label3;
    }
}
