final enum class com.android.org.conscrypt.OpenSSLEngineImpl$EngineState extends java.lang.Enum
{
    public static final enum com.android.org.conscrypt.OpenSSLEngineImpl$EngineState NEW;
    public static final enum com.android.org.conscrypt.OpenSSLEngineImpl$EngineState MODE_SET;
    public static final enum com.android.org.conscrypt.OpenSSLEngineImpl$EngineState HANDSHAKE_WANTED;
    public static final enum com.android.org.conscrypt.OpenSSLEngineImpl$EngineState HANDSHAKE_STARTED;
    public static final enum com.android.org.conscrypt.OpenSSLEngineImpl$EngineState HANDSHAKE_COMPLETED;
    public static final enum com.android.org.conscrypt.OpenSSLEngineImpl$EngineState READY_HANDSHAKE_CUT_THROUGH;
    public static final enum com.android.org.conscrypt.OpenSSLEngineImpl$EngineState READY;
    public static final enum com.android.org.conscrypt.OpenSSLEngineImpl$EngineState CLOSED_INBOUND;
    public static final enum com.android.org.conscrypt.OpenSSLEngineImpl$EngineState CLOSED_OUTBOUND;
    public static final enum com.android.org.conscrypt.OpenSSLEngineImpl$EngineState CLOSED;
    private static final com.android.org.conscrypt.OpenSSLEngineImpl$EngineState[] $VALUES;

    public static com.android.org.conscrypt.OpenSSLEngineImpl$EngineState[] values()
    {
        com.android.org.conscrypt.OpenSSLEngineImpl$EngineState[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <com.android.org.conscrypt.OpenSSLEngineImpl$EngineState: com.android.org.conscrypt.OpenSSLEngineImpl$EngineState[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (com.android.org.conscrypt.OpenSSLEngineImpl$EngineState[]) $r1;

        return $r2;
    }

    public static com.android.org.conscrypt.OpenSSLEngineImpl$EngineState valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        com.android.org.conscrypt.OpenSSLEngineImpl$EngineState $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "com/android/org/conscrypt/OpenSSLEngineImpl$EngineState", r0);

        $r2 = (com.android.org.conscrypt.OpenSSLEngineImpl$EngineState) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int)
    {
        com.android.org.conscrypt.OpenSSLEngineImpl$EngineState r0;
        java.lang.String r1;
        int i0;

        r0 := @this: com.android.org.conscrypt.OpenSSLEngineImpl$EngineState;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        return;
    }

    static void <clinit>()
    {
        com.android.org.conscrypt.OpenSSLEngineImpl$EngineState $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20;
        com.android.org.conscrypt.OpenSSLEngineImpl$EngineState[] $r10;

        $r0 = new com.android.org.conscrypt.OpenSSLEngineImpl$EngineState;

        specialinvoke $r0.<com.android.org.conscrypt.OpenSSLEngineImpl$EngineState: void <init>(java.lang.String,int)>("NEW", 0);

        <com.android.org.conscrypt.OpenSSLEngineImpl$EngineState: com.android.org.conscrypt.OpenSSLEngineImpl$EngineState NEW> = $r0;

        $r1 = new com.android.org.conscrypt.OpenSSLEngineImpl$EngineState;

        specialinvoke $r1.<com.android.org.conscrypt.OpenSSLEngineImpl$EngineState: void <init>(java.lang.String,int)>("MODE_SET", 1);

        <com.android.org.conscrypt.OpenSSLEngineImpl$EngineState: com.android.org.conscrypt.OpenSSLEngineImpl$EngineState MODE_SET> = $r1;

        $r2 = new com.android.org.conscrypt.OpenSSLEngineImpl$EngineState;

        specialinvoke $r2.<com.android.org.conscrypt.OpenSSLEngineImpl$EngineState: void <init>(java.lang.String,int)>("HANDSHAKE_WANTED", 2);

        <com.android.org.conscrypt.OpenSSLEngineImpl$EngineState: com.android.org.conscrypt.OpenSSLEngineImpl$EngineState HANDSHAKE_WANTED> = $r2;

        $r3 = new com.android.org.conscrypt.OpenSSLEngineImpl$EngineState;

        specialinvoke $r3.<com.android.org.conscrypt.OpenSSLEngineImpl$EngineState: void <init>(java.lang.String,int)>("HANDSHAKE_STARTED", 3);

        <com.android.org.conscrypt.OpenSSLEngineImpl$EngineState: com.android.org.conscrypt.OpenSSLEngineImpl$EngineState HANDSHAKE_STARTED> = $r3;

        $r4 = new com.android.org.conscrypt.OpenSSLEngineImpl$EngineState;

        specialinvoke $r4.<com.android.org.conscrypt.OpenSSLEngineImpl$EngineState: void <init>(java.lang.String,int)>("HANDSHAKE_COMPLETED", 4);

        <com.android.org.conscrypt.OpenSSLEngineImpl$EngineState: com.android.org.conscrypt.OpenSSLEngineImpl$EngineState HANDSHAKE_COMPLETED> = $r4;

        $r5 = new com.android.org.conscrypt.OpenSSLEngineImpl$EngineState;

        specialinvoke $r5.<com.android.org.conscrypt.OpenSSLEngineImpl$EngineState: void <init>(java.lang.String,int)>("READY_HANDSHAKE_CUT_THROUGH", 5);

        <com.android.org.conscrypt.OpenSSLEngineImpl$EngineState: com.android.org.conscrypt.OpenSSLEngineImpl$EngineState READY_HANDSHAKE_CUT_THROUGH> = $r5;

        $r6 = new com.android.org.conscrypt.OpenSSLEngineImpl$EngineState;

        specialinvoke $r6.<com.android.org.conscrypt.OpenSSLEngineImpl$EngineState: void <init>(java.lang.String,int)>("READY", 6);

        <com.android.org.conscrypt.OpenSSLEngineImpl$EngineState: com.android.org.conscrypt.OpenSSLEngineImpl$EngineState READY> = $r6;

        $r7 = new com.android.org.conscrypt.OpenSSLEngineImpl$EngineState;

        specialinvoke $r7.<com.android.org.conscrypt.OpenSSLEngineImpl$EngineState: void <init>(java.lang.String,int)>("CLOSED_INBOUND", 7);

        <com.android.org.conscrypt.OpenSSLEngineImpl$EngineState: com.android.org.conscrypt.OpenSSLEngineImpl$EngineState CLOSED_INBOUND> = $r7;

        $r8 = new com.android.org.conscrypt.OpenSSLEngineImpl$EngineState;

        specialinvoke $r8.<com.android.org.conscrypt.OpenSSLEngineImpl$EngineState: void <init>(java.lang.String,int)>("CLOSED_OUTBOUND", 8);

        <com.android.org.conscrypt.OpenSSLEngineImpl$EngineState: com.android.org.conscrypt.OpenSSLEngineImpl$EngineState CLOSED_OUTBOUND> = $r8;

        $r9 = new com.android.org.conscrypt.OpenSSLEngineImpl$EngineState;

        specialinvoke $r9.<com.android.org.conscrypt.OpenSSLEngineImpl$EngineState: void <init>(java.lang.String,int)>("CLOSED", 9);

        <com.android.org.conscrypt.OpenSSLEngineImpl$EngineState: com.android.org.conscrypt.OpenSSLEngineImpl$EngineState CLOSED> = $r9;

        $r10 = newarray (com.android.org.conscrypt.OpenSSLEngineImpl$EngineState)[10];

        $r11 = <com.android.org.conscrypt.OpenSSLEngineImpl$EngineState: com.android.org.conscrypt.OpenSSLEngineImpl$EngineState NEW>;

        $r10[0] = $r11;

        $r12 = <com.android.org.conscrypt.OpenSSLEngineImpl$EngineState: com.android.org.conscrypt.OpenSSLEngineImpl$EngineState MODE_SET>;

        $r10[1] = $r12;

        $r13 = <com.android.org.conscrypt.OpenSSLEngineImpl$EngineState: com.android.org.conscrypt.OpenSSLEngineImpl$EngineState HANDSHAKE_WANTED>;

        $r10[2] = $r13;

        $r14 = <com.android.org.conscrypt.OpenSSLEngineImpl$EngineState: com.android.org.conscrypt.OpenSSLEngineImpl$EngineState HANDSHAKE_STARTED>;

        $r10[3] = $r14;

        $r15 = <com.android.org.conscrypt.OpenSSLEngineImpl$EngineState: com.android.org.conscrypt.OpenSSLEngineImpl$EngineState HANDSHAKE_COMPLETED>;

        $r10[4] = $r15;

        $r17 = <com.android.org.conscrypt.OpenSSLEngineImpl$EngineState: com.android.org.conscrypt.OpenSSLEngineImpl$EngineState READY_HANDSHAKE_CUT_THROUGH>;

        $r10[5] = $r17;

        $r16 = <com.android.org.conscrypt.OpenSSLEngineImpl$EngineState: com.android.org.conscrypt.OpenSSLEngineImpl$EngineState READY>;

        $r10[6] = $r16;

        $r19 = <com.android.org.conscrypt.OpenSSLEngineImpl$EngineState: com.android.org.conscrypt.OpenSSLEngineImpl$EngineState CLOSED_INBOUND>;

        $r10[7] = $r19;

        $r18 = <com.android.org.conscrypt.OpenSSLEngineImpl$EngineState: com.android.org.conscrypt.OpenSSLEngineImpl$EngineState CLOSED_OUTBOUND>;

        $r10[8] = $r18;

        $r20 = <com.android.org.conscrypt.OpenSSLEngineImpl$EngineState: com.android.org.conscrypt.OpenSSLEngineImpl$EngineState CLOSED>;

        $r10[9] = $r20;

        <com.android.org.conscrypt.OpenSSLEngineImpl$EngineState: com.android.org.conscrypt.OpenSSLEngineImpl$EngineState[] $VALUES> = $r10;

        return;
    }
}
