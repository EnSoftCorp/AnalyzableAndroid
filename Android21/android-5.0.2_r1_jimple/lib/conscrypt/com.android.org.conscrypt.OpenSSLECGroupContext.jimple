public final class com.android.org.conscrypt.OpenSSLECGroupContext extends java.lang.Object
{
    private final long groupCtx;

    public void <init>(long)
    {
        com.android.org.conscrypt.OpenSSLECGroupContext r0;
        long l0;

        r0 := @this: com.android.org.conscrypt.OpenSSLECGroupContext;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.org.conscrypt.OpenSSLECGroupContext: long groupCtx> = l0;

        return;
    }

    public static com.android.org.conscrypt.OpenSSLECGroupContext getCurveByName(java.lang.String)
    {
        java.lang.String r0, $r1, $r2;
        long l0;
        boolean $z0, $z1;
        byte $b1;
        com.android.org.conscrypt.OpenSSLECGroupContext $r3;

        r0 := @parameter0: java.lang.String;

        $r1 = "secp256r1";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        r0 = "prime256v1";

        goto label2;

     label1:
        $r2 = "secp192r1";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label2;

        r0 = "prime192v1";

     label2:
        l0 = staticinvoke <com.android.org.conscrypt.NativeCrypto: long EC_GROUP_new_by_curve_name(java.lang.String)>(r0);

        $b1 = l0 cmp 0L;

        if $b1 != 0 goto label3;

        return null;

     label3:
        staticinvoke <com.android.org.conscrypt.NativeCrypto: void EC_GROUP_set_point_conversion_form(long,int)>(l0, 4);

        staticinvoke <com.android.org.conscrypt.NativeCrypto: void EC_GROUP_set_asn1_flag(long,int)>(l0, 1);

        $r3 = new com.android.org.conscrypt.OpenSSLECGroupContext;

        specialinvoke $r3.<com.android.org.conscrypt.OpenSSLECGroupContext: void <init>(long)>(l0);

        return $r3;
    }

    public static com.android.org.conscrypt.OpenSSLECGroupContext getInstance(int, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger, java.math.BigInteger)
    {
        int i0;
        java.math.BigInteger r0, r1, r2, r3, r4, r5, r6;
        long l1, $l3, $l4, $l5;
        com.android.org.conscrypt.OpenSSLECGroupContext r7, $r12;
        com.android.org.conscrypt.OpenSSLECPointContext r8, $r13;
        byte[] $r9, $r10, $r11, $r14, $r15, $r16, $r17;
        byte $b2;

        i0 := @parameter0: int;

        r0 := @parameter1: java.math.BigInteger;

        r1 := @parameter2: java.math.BigInteger;

        r2 := @parameter3: java.math.BigInteger;

        r3 := @parameter4: java.math.BigInteger;

        r4 := @parameter5: java.math.BigInteger;

        r5 := @parameter6: java.math.BigInteger;

        r6 := @parameter7: java.math.BigInteger;

        $r9 = virtualinvoke r0.<java.math.BigInteger: byte[] toByteArray()>();

        $r10 = virtualinvoke r1.<java.math.BigInteger: byte[] toByteArray()>();

        $r11 = virtualinvoke r2.<java.math.BigInteger: byte[] toByteArray()>();

        l1 = staticinvoke <com.android.org.conscrypt.NativeCrypto: long EC_GROUP_new_curve(int,byte[],byte[],byte[])>(i0, $r9, $r10, $r11);

        $b2 = l1 cmp 0L;

        if $b2 != 0 goto label1;

        return null;

     label1:
        staticinvoke <com.android.org.conscrypt.NativeCrypto: void EC_GROUP_set_point_conversion_form(long,int)>(l1, 4);

        $r12 = new com.android.org.conscrypt.OpenSSLECGroupContext;

        specialinvoke $r12.<com.android.org.conscrypt.OpenSSLECGroupContext: void <init>(long)>(l1);

        r7 = $r12;

        $r13 = new com.android.org.conscrypt.OpenSSLECPointContext;

        $l3 = staticinvoke <com.android.org.conscrypt.NativeCrypto: long EC_POINT_new(long)>(l1);

        specialinvoke $r13.<com.android.org.conscrypt.OpenSSLECPointContext: void <init>(com.android.org.conscrypt.OpenSSLECGroupContext,long)>(r7, $l3);

        r8 = $r13;

        $l4 = virtualinvoke r8.<com.android.org.conscrypt.OpenSSLECPointContext: long getContext()>();

        $r14 = virtualinvoke r3.<java.math.BigInteger: byte[] toByteArray()>();

        $r15 = virtualinvoke r4.<java.math.BigInteger: byte[] toByteArray()>();

        staticinvoke <com.android.org.conscrypt.NativeCrypto: void EC_POINT_set_affine_coordinates(long,long,byte[],byte[])>(l1, $l4, $r14, $r15);

        $l5 = virtualinvoke r8.<com.android.org.conscrypt.OpenSSLECPointContext: long getContext()>();

        $r17 = virtualinvoke r5.<java.math.BigInteger: byte[] toByteArray()>();

        $r16 = virtualinvoke r6.<java.math.BigInteger: byte[] toByteArray()>();

        staticinvoke <com.android.org.conscrypt.NativeCrypto: void EC_GROUP_set_generator(long,long,byte[],byte[])>(l1, $l5, $r17, $r16);

        return r7;
    }

    protected void finalize() throws java.lang.Throwable
    {
        com.android.org.conscrypt.OpenSSLECGroupContext r0;
        java.lang.Throwable r1, $r2;
        long $l0, $l2;
        byte $b1;

        r0 := @this: com.android.org.conscrypt.OpenSSLECGroupContext;

     label1:
        $l0 = r0.<com.android.org.conscrypt.OpenSSLECGroupContext: long groupCtx>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label2;

        $l2 = r0.<com.android.org.conscrypt.OpenSSLECGroupContext: long groupCtx>;

        staticinvoke <com.android.org.conscrypt.NativeCrypto: void EC_GROUP_clear_free(long)>($l2);

     label2:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        goto label5;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

     label4:
        specialinvoke r0.<java.lang.Object: void finalize()>();

        throw r1;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean equals(java.lang.Object)
    {
        com.android.org.conscrypt.OpenSSLECGroupContext r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;
        long $l0, $l1;

        r0 := @this: com.android.org.conscrypt.OpenSSLECGroupContext;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof com.android.org.conscrypt.OpenSSLECGroupContext;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (com.android.org.conscrypt.OpenSSLECGroupContext) r1;

        $l1 = r0.<com.android.org.conscrypt.OpenSSLECGroupContext: long groupCtx>;

        $l0 = r2.<com.android.org.conscrypt.OpenSSLECGroupContext: long groupCtx>;

        $z1 = staticinvoke <com.android.org.conscrypt.NativeCrypto: boolean EC_GROUP_cmp(long,long)>($l1, $l0);

        return $z1;
    }

    public int hashCode()
    {
        com.android.org.conscrypt.OpenSSLECGroupContext r0;
        int $i0;

        r0 := @this: com.android.org.conscrypt.OpenSSLECGroupContext;

        $i0 = specialinvoke r0.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public long getContext()
    {
        com.android.org.conscrypt.OpenSSLECGroupContext r0;
        long $l0;

        r0 := @this: com.android.org.conscrypt.OpenSSLECGroupContext;

        $l0 = r0.<com.android.org.conscrypt.OpenSSLECGroupContext: long groupCtx>;

        return $l0;
    }

    public static com.android.org.conscrypt.OpenSSLECGroupContext getInstance(java.security.spec.ECParameterSpec) throws java.security.InvalidAlgorithmParameterException
    {
        java.security.spec.ECParameterSpec r0;
        java.lang.String r1, $r11, $r13;
        java.security.spec.EllipticCurve r2;
        java.security.spec.ECField r3;
        byte b0;
        java.math.BigInteger r4, $r14, $r15, $r16, $r17, $r18, $r19;
        java.security.spec.ECPoint r5;
        boolean $z0, $z1;
        java.security.InvalidParameterException $r6;
        java.lang.StringBuilder $r7, $r8, $r10;
        java.lang.Class $r9;
        java.security.spec.ECFieldF2m $r12;
        int $i1;
        long $l2;
        java.security.spec.ECFieldFp $r20;
        com.android.org.conscrypt.OpenSSLECGroupContext $r21, $r22;

        r0 := @parameter0: java.security.spec.ECParameterSpec;

        r1 = staticinvoke <com.android.org.conscrypt.Platform: java.lang.String getCurveName(java.security.spec.ECParameterSpec)>(r0);

        if r1 == null goto label1;

        $r22 = staticinvoke <com.android.org.conscrypt.OpenSSLECGroupContext: com.android.org.conscrypt.OpenSSLECGroupContext getCurveByName(java.lang.String)>(r1);

        return $r22;

     label1:
        r2 = virtualinvoke r0.<java.security.spec.ECParameterSpec: java.security.spec.EllipticCurve getCurve()>();

        r3 = virtualinvoke r2.<java.security.spec.EllipticCurve: java.security.spec.ECField getField()>();

        $z0 = r3 instanceof java.security.spec.ECFieldFp;

        if $z0 == 0 goto label2;

        b0 = 1;

        $r20 = (java.security.spec.ECFieldFp) r3;

        r4 = virtualinvoke $r20.<java.security.spec.ECFieldFp: java.math.BigInteger getP()>();

        goto label4;

     label2:
        $z1 = r3 instanceof java.security.spec.ECFieldF2m;

        if $z1 == 0 goto label3;

        b0 = 2;

        $r12 = (java.security.spec.ECFieldF2m) r3;

        r4 = virtualinvoke $r12.<java.security.spec.ECFieldF2m: java.math.BigInteger getReductionPolynomial()>();

        goto label4;

     label3:
        $r6 = new java.security.InvalidParameterException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unhandled field class ");

        $r9 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.security.InvalidParameterException: void <init>(java.lang.String)>($r13);

        throw $r6;

     label4:
        r5 = virtualinvoke r0.<java.security.spec.ECParameterSpec: java.security.spec.ECPoint getGenerator()>();

        $r15 = virtualinvoke r2.<java.security.spec.EllipticCurve: java.math.BigInteger getA()>();

        $r14 = virtualinvoke r2.<java.security.spec.EllipticCurve: java.math.BigInteger getB()>();

        $r17 = virtualinvoke r5.<java.security.spec.ECPoint: java.math.BigInteger getAffineX()>();

        $r16 = virtualinvoke r5.<java.security.spec.ECPoint: java.math.BigInteger getAffineY()>();

        $r18 = virtualinvoke r0.<java.security.spec.ECParameterSpec: java.math.BigInteger getOrder()>();

        $i1 = virtualinvoke r0.<java.security.spec.ECParameterSpec: int getCofactor()>();

        $l2 = (long) $i1;

        $r19 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>($l2);

        $r21 = staticinvoke <com.android.org.conscrypt.OpenSSLECGroupContext: com.android.org.conscrypt.OpenSSLECGroupContext getInstance(int,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger,java.math.BigInteger)>(b0, r4, $r15, $r14, $r17, $r16, $r18, $r19);

        return $r21;
    }

    public java.security.spec.ECParameterSpec getECParameterSpec()
    {
        com.android.org.conscrypt.OpenSSLECGroupContext r0;
        java.lang.String r1, $r24;
        byte[][] r2;
        java.math.BigInteger r3, r4, r5, r10, r11, $r14, $r16, $r18, $r27, $r28;
        int i0, $i4, $i5, $i10;
        java.security.spec.ECField r6;
        java.security.spec.EllipticCurve r7, $r25;
        com.android.org.conscrypt.OpenSSLECPointContext r8, $r26;
        java.security.spec.ECPoint r9;
        java.security.spec.ECParameterSpec r12, $r32;
        long $l1, $l2, $l3, $l6, $l7, $l8, $l9;
        byte[] $r13, $r15, $r17, $r29, $r31;
        java.lang.StringBuilder $r19, $r21, $r22;
        java.lang.RuntimeException $r20;
        java.security.spec.ECFieldF2m $r23;
        java.security.spec.ECFieldFp $r30;

        r0 := @this: com.android.org.conscrypt.OpenSSLECGroupContext;

        $l1 = r0.<com.android.org.conscrypt.OpenSSLECGroupContext: long groupCtx>;

        r1 = staticinvoke <com.android.org.conscrypt.NativeCrypto: java.lang.String EC_GROUP_get_curve_name(long)>($l1);

        $l2 = r0.<com.android.org.conscrypt.OpenSSLECGroupContext: long groupCtx>;

        r2 = staticinvoke <com.android.org.conscrypt.NativeCrypto: byte[][] EC_GROUP_get_curve(long)>($l2);

        $r14 = new java.math.BigInteger;

        $r13 = r2[0];

        specialinvoke $r14.<java.math.BigInteger: void <init>(byte[])>($r13);

        r3 = $r14;

        $r16 = new java.math.BigInteger;

        $r15 = r2[1];

        specialinvoke $r16.<java.math.BigInteger: void <init>(byte[])>($r15);

        r4 = $r16;

        $r18 = new java.math.BigInteger;

        $r17 = r2[2];

        specialinvoke $r18.<java.math.BigInteger: void <init>(byte[])>($r17);

        r5 = $r18;

        $l3 = r0.<com.android.org.conscrypt.OpenSSLECGroupContext: long groupCtx>;

        i0 = staticinvoke <com.android.org.conscrypt.NativeCrypto: int get_EC_GROUP_type(long)>($l3);

        if i0 != 1 goto label1;

        $r30 = new java.security.spec.ECFieldFp;

        specialinvoke $r30.<java.security.spec.ECFieldFp: void <init>(java.math.BigInteger)>(r3);

        r6 = $r30;

        goto label3;

     label1:
        if i0 != 2 goto label2;

        $r23 = new java.security.spec.ECFieldF2m;

        $i4 = virtualinvoke r3.<java.math.BigInteger: int bitLength()>();

        $i5 = $i4 - 1;

        specialinvoke $r23.<java.security.spec.ECFieldF2m: void <init>(int,java.math.BigInteger)>($i5, r3);

        r6 = $r23;

        goto label3;

     label2:
        $r20 = new java.lang.RuntimeException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unknown curve type ");

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.lang.RuntimeException: void <init>(java.lang.String)>($r24);

        throw $r20;

     label3:
        $r25 = new java.security.spec.EllipticCurve;

        specialinvoke $r25.<java.security.spec.EllipticCurve: void <init>(java.security.spec.ECField,java.math.BigInteger,java.math.BigInteger)>(r6, r4, r5);

        r7 = $r25;

        $r26 = new com.android.org.conscrypt.OpenSSLECPointContext;

        $l6 = r0.<com.android.org.conscrypt.OpenSSLECGroupContext: long groupCtx>;

        $l7 = staticinvoke <com.android.org.conscrypt.NativeCrypto: long EC_GROUP_get_generator(long)>($l6);

        specialinvoke $r26.<com.android.org.conscrypt.OpenSSLECPointContext: void <init>(com.android.org.conscrypt.OpenSSLECGroupContext,long)>(r0, $l7);

        r8 = $r26;

        r9 = virtualinvoke r8.<com.android.org.conscrypt.OpenSSLECPointContext: java.security.spec.ECPoint getECPoint()>();

        $r27 = new java.math.BigInteger;

        $l9 = r0.<com.android.org.conscrypt.OpenSSLECGroupContext: long groupCtx>;

        $r29 = staticinvoke <com.android.org.conscrypt.NativeCrypto: byte[] EC_GROUP_get_order(long)>($l9);

        specialinvoke $r27.<java.math.BigInteger: void <init>(byte[])>($r29);

        r10 = $r27;

        $r28 = new java.math.BigInteger;

        $l8 = r0.<com.android.org.conscrypt.OpenSSLECGroupContext: long groupCtx>;

        $r31 = staticinvoke <com.android.org.conscrypt.NativeCrypto: byte[] EC_GROUP_get_cofactor(long)>($l8);

        specialinvoke $r28.<java.math.BigInteger: void <init>(byte[])>($r31);

        r11 = $r28;

        $r32 = new java.security.spec.ECParameterSpec;

        $i10 = virtualinvoke r11.<java.math.BigInteger: int intValue()>();

        specialinvoke $r32.<java.security.spec.ECParameterSpec: void <init>(java.security.spec.EllipticCurve,java.security.spec.ECPoint,java.math.BigInteger,int)>(r7, r9, r10, $i10);

        r12 = $r32;

        staticinvoke <com.android.org.conscrypt.Platform: void setCurveName(java.security.spec.ECParameterSpec,java.lang.String)>(r12, r1);

        return r12;
    }
}
