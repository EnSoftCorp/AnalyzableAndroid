public class com.android.org.conscrypt.FileClientSessionCache extends java.lang.Object
{
    public static final int MAX_SIZE;
    static final java.util.Map caches;

    private void <init>()
    {
        com.android.org.conscrypt.FileClientSessionCache r0;

        r0 := @this: com.android.org.conscrypt.FileClientSessionCache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static synchronized com.android.org.conscrypt.SSLClientSessionCache usingDirectory(java.io.File) throws java.io.IOException
    {
        java.io.File r0;
        com.android.org.conscrypt.FileClientSessionCache$Impl r1, $r4;
        java.util.Map $r2, $r5;
        java.lang.Object $r3;

        r0 := @parameter0: java.io.File;

        $r2 = <com.android.org.conscrypt.FileClientSessionCache: java.util.Map caches>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r1 = (com.android.org.conscrypt.FileClientSessionCache$Impl) $r3;

        if r1 != null goto label1;

        $r4 = new com.android.org.conscrypt.FileClientSessionCache$Impl;

        specialinvoke $r4.<com.android.org.conscrypt.FileClientSessionCache$Impl: void <init>(java.io.File)>(r0);

        r1 = $r4;

        $r5 = <com.android.org.conscrypt.FileClientSessionCache: java.util.Map caches>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1);

     label1:
        return r1;
    }

    static synchronized void reset()
    {
        java.util.Map $r0;

        $r0 = <com.android.org.conscrypt.FileClientSessionCache: java.util.Map caches>;

        interfaceinvoke $r0.<java.util.Map: void clear()>();

        return;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;

        <com.android.org.conscrypt.FileClientSessionCache: int MAX_SIZE> = 12;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <com.android.org.conscrypt.FileClientSessionCache: java.util.Map caches> = $r0;

        return;
    }
}
