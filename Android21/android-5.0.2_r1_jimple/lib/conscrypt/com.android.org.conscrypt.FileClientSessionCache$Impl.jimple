class com.android.org.conscrypt.FileClientSessionCache$Impl extends java.lang.Object implements com.android.org.conscrypt.SSLClientSessionCache
{
    final java.io.File directory;
    java.util.Map accessOrder;
    int size;
    java.lang.String[] initialFiles;

    void <init>(java.io.File) throws java.io.IOException
    {
        com.android.org.conscrypt.FileClientSessionCache$Impl r0;
        java.io.File r1;
        boolean z0, $z1, $z2;
        java.util.Map $r2;
        java.io.IOException $r3, $r13, $r18;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r14, $r15, $r17, $r19, $r20, $r22;
        java.lang.String $r8, $r16, $r21;
        java.lang.String[] $r9, $r10, $r11, $r12;
        int $i0;

        r0 := @this: com.android.org.conscrypt.FileClientSessionCache$Impl;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.android.org.conscrypt.FileClientSessionCache$Impl: java.util.Map newAccessOrder()>();

        r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.util.Map accessOrder> = $r2;

        z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if z0 == 0 goto label1;

        $z2 = virtualinvoke r1.<java.io.File: boolean isDirectory()>();

        if $z2 != 0 goto label1;

        $r18 = new java.io.IOException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exists but is not a directory.");

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.io.IOException: void <init>(java.lang.String)>($r21);

        throw $r18;

     label1:
        if z0 == 0 goto label3;

        $r9 = virtualinvoke r1.<java.io.File: java.lang.String[] list()>();

        r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.lang.String[] initialFiles> = $r9;

        $r10 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.lang.String[] initialFiles>;

        if $r10 != null goto label2;

        $r13 = new java.io.IOException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exists but cannot list contents.");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.io.IOException: void <init>(java.lang.String)>($r16);

        throw $r13;

     label2:
        $r11 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.lang.String[] initialFiles>;

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[])>($r11);

        $r12 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.lang.String[] initialFiles>;

        $i0 = lengthof $r12;

        r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: int size> = $i0;

        goto label5;

     label3:
        $z1 = virtualinvoke r1.<java.io.File: boolean mkdirs()>();

        if $z1 != 0 goto label4;

        $r3 = new java.io.IOException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creation of ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" directory failed.");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label4:
        r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: int size> = 0;

     label5:
        r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.io.File directory> = r1;

        return;
    }

    private static java.util.Map newAccessOrder()
    {
        java.util.LinkedHashMap $r0;

        $r0 = new java.util.LinkedHashMap;

        specialinvoke $r0.<java.util.LinkedHashMap: void <init>(int,float,boolean)>(12, 0.75F, 1);

        return $r0;
    }

    private static java.lang.String fileName(java.lang.String, int)
    {
        java.lang.String r0, $r5;
        int i0;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;
        java.lang.NullPointerException $r6;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if r0 != null goto label1;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("host == null");

        throw $r6;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public synchronized byte[] getSessionData(java.lang.String, int)
    {
        com.android.org.conscrypt.FileClientSessionCache$Impl r0;
        java.lang.String r1, r2;
        int i0, $i2, i3;
        java.io.File r3, $r17, $r19;
        java.io.FileInputStream r4, $r13;
        java.io.FileNotFoundException r5, $r20;
        byte[] r6, r7;
        java.lang.RuntimeException r8, r10, $r21, $r23, $r27, r30;
        java.lang.Throwable r9, $r24;
        java.util.Map $r11, $r18;
        java.lang.Object $r12;
        java.io.DataInputStream $r14;
        long $l1;
        java.lang.String[] $r15, $r16;
        java.lang.Exception $r22, $r26, $r28;
        java.io.IOException $r25, r29;

        r0 := @this: com.android.org.conscrypt.FileClientSessionCache$Impl;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 = staticinvoke <com.android.org.conscrypt.FileClientSessionCache$Impl: java.lang.String fileName(java.lang.String,int)>(r1, i0);

        $r11 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.util.Map accessOrder>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r3 = (java.io.File) $r12;

        if r3 != null goto label03;

        $r16 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.lang.String[] initialFiles>;

        if $r16 != null goto label01;

        return null;

     label01:
        $r15 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.lang.String[] initialFiles>;

        $i2 = staticinvoke <java.util.Arrays: int binarySearch(java.lang.Object[],java.lang.Object)>($r15, r2);

        if $i2 >= 0 goto label02;

        return null;

     label02:
        $r17 = new java.io.File;

        $r19 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.io.File directory>;

        specialinvoke $r17.<java.io.File: void <init>(java.io.File,java.lang.String)>($r19, r2);

        r3 = $r17;

        $r18 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.util.Map accessOrder>;

        interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

     label03:
        $r13 = new java.io.FileInputStream;

        specialinvoke $r13.<java.io.FileInputStream: void <init>(java.io.File)>(r3);

        r4 = $r13;

     label04:
        goto label06;

     label05:
        $r20 := @caughtexception;

        r5 = $r20;

        staticinvoke <com.android.org.conscrypt.FileClientSessionCache$Impl: void logReadError(java.lang.String,java.io.File,java.lang.Throwable)>(r1, r3, r5);

        return null;

     label06:
        $l1 = virtualinvoke r3.<java.io.File: long length()>();

        i3 = (int) $l1;

        r6 = newarray (byte)[i3];

        $r14 = new java.io.DataInputStream;

        specialinvoke $r14.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r4);

        virtualinvoke $r14.<java.io.DataInputStream: void readFully(byte[])>(r6);

        r7 = r6;

     label07:
        if r4 == null goto label12;

     label08:
        virtualinvoke r4.<java.io.FileInputStream: void close()>();

     label09:
        goto label12;

     label10:
        $r21 := @caughtexception;

        r8 = $r21;

        throw r8;

     label11:
        $r26 := @caughtexception;

     label12:
        return r7;

     label13:
        $r25 := @caughtexception;

        r29 = $r25;

        staticinvoke <com.android.org.conscrypt.FileClientSessionCache$Impl: void logReadError(java.lang.String,java.io.File,java.lang.Throwable)>(r1, r3, r29);

     label14:
        if r4 == null goto label19;

     label15:
        virtualinvoke r4.<java.io.FileInputStream: void close()>();

     label16:
        goto label19;

     label17:
        $r27 := @caughtexception;

        r30 = $r27;

        throw r30;

     label18:
        $r28 := @caughtexception;

     label19:
        return null;

     label20:
        $r24 := @caughtexception;

        r9 = $r24;

     label21:
        if r4 == null goto label26;

     label22:
        virtualinvoke r4.<java.io.FileInputStream: void close()>();

     label23:
        goto label26;

     label24:
        $r23 := @caughtexception;

        r10 = $r23;

        throw r10;

     label25:
        $r22 := @caughtexception;

     label26:
        throw r9;

        catch java.io.FileNotFoundException from label03 to label04 with label05;
        catch java.lang.RuntimeException from label08 to label09 with label10;
        catch java.lang.Exception from label08 to label09 with label11;
        catch java.io.IOException from label06 to label07 with label13;
        catch java.lang.RuntimeException from label15 to label16 with label17;
        catch java.lang.Exception from label15 to label16 with label18;
        catch java.lang.Throwable from label06 to label07 with label20;
        catch java.lang.Throwable from label13 to label14 with label20;
        catch java.lang.RuntimeException from label22 to label23 with label24;
        catch java.lang.Exception from label22 to label23 with label25;
        catch java.lang.Throwable from label20 to label21 with label20;
    }

    static void logReadError(java.lang.String, java.io.File, java.lang.Throwable)
    {
        java.lang.String r0, $r10;
        java.io.File r1;
        java.lang.Throwable r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r7, $r8, $r9;
        java.io.PrintStream $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.io.File;

        r2 := @parameter2: java.lang.Throwable;

        $r4 = <java.lang.System: java.io.PrintStream err>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FileClientSessionCache: Error reading session data for ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r10);

        virtualinvoke r2.<java.lang.Throwable: void printStackTrace()>();

        return;
    }

    public synchronized void putSessionData(javax.net.ssl.SSLSession, byte[])
    {
        com.android.org.conscrypt.FileClientSessionCache$Impl r0;
        javax.net.ssl.SSLSession r1;
        byte[] r2;
        java.lang.String r3, r4;
        java.io.File r5, $r14, $r15;
        boolean z0, z1, z2, z3, z4, z5, z6, z7, z8;
        java.io.FileOutputStream r6, $r16;
        java.io.FileNotFoundException r7, $r27;
        java.io.IOException r8, r12, $r24, $r25, $r38, $r39, r45, r46;
        java.lang.Throwable r9, r10, r11, r13, $r19, $r28, $r31, $r42;
        int $i0, $i1, $i2;
        java.util.Map $r18, $r22, $r26, $r29, $r32, $r33, $r35, $r41, $r44;
        java.lang.NullPointerException $r20;

        r0 := @this: com.android.org.conscrypt.FileClientSessionCache$Impl;

        r1 := @parameter0: javax.net.ssl.SSLSession;

        r2 := @parameter1: byte[];

        r3 = interfaceinvoke r1.<javax.net.ssl.SSLSession: java.lang.String getPeerHost()>();

        if r2 != null goto label01;

        $r20 = new java.lang.NullPointerException;

        specialinvoke $r20.<java.lang.NullPointerException: void <init>(java.lang.String)>("sessionData == null");

        throw $r20;

     label01:
        $i0 = interfaceinvoke r1.<javax.net.ssl.SSLSession: int getPeerPort()>();

        r4 = staticinvoke <com.android.org.conscrypt.FileClientSessionCache$Impl: java.lang.String fileName(java.lang.String,int)>(r3, $i0);

        $r15 = new java.io.File;

        $r14 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.io.File directory>;

        specialinvoke $r15.<java.io.File: void <init>(java.io.File,java.lang.String)>($r14, r4);

        r5 = $r15;

        z0 = virtualinvoke r5.<java.io.File: boolean exists()>();

     label02:
        $r16 = new java.io.FileOutputStream;

        specialinvoke $r16.<java.io.FileOutputStream: void <init>(java.io.File)>(r5);

        r6 = $r16;

     label03:
        goto label05;

     label04:
        $r27 := @caughtexception;

        r7 = $r27;

        staticinvoke <com.android.org.conscrypt.FileClientSessionCache$Impl: void logWriteError(java.lang.String,java.io.File,java.lang.Throwable)>(r3, r5, r7);

        return;

     label05:
        if z0 != 0 goto label06;

        $i2 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: int size>;

        $i1 = $i2 + 1;

        r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: int size> = $i1;

        specialinvoke r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: void makeRoom()>();

     label06:
        z3 = 0;

     label07:
        virtualinvoke r6.<java.io.FileOutputStream: void write(byte[])>(r2);

        z4 = 1;

     label08:
        z1 = 0;

     label09:
        virtualinvoke r6.<java.io.FileOutputStream: void close()>();

        z5 = 1;

     label10:
        if z4 == 0 goto label11;

        if z5 != 0 goto label12;

     label11:
        specialinvoke r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: void delete(java.io.File)>(r5);

        goto label22;

     label12:
        $r18 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.util.Map accessOrder>;

        interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r5);

        goto label22;

     label13:
        $r39 := @caughtexception;

        r8 = $r39;

        staticinvoke <com.android.org.conscrypt.FileClientSessionCache$Impl: void logWriteError(java.lang.String,java.io.File,java.lang.Throwable)>(r3, r5, r8);

     label14:
        if z4 == 0 goto label15;

        if z1 != 0 goto label16;

     label15:
        specialinvoke r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: void delete(java.io.File)>(r5);

        goto label22;

     label16:
        $r44 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.util.Map accessOrder>;

        interfaceinvoke $r44.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r5);

        goto label22;

     label17:
        $r19 := @caughtexception;

        r9 = $r19;

     label18:
        if z4 == 0 goto label19;

        if z1 != 0 goto label20;

     label19:
        specialinvoke r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: void delete(java.io.File)>(r5);

        goto label21;

     label20:
        $r22 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.util.Map accessOrder>;

        interfaceinvoke $r22.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r5);

     label21:
        throw r9;

     label22:
        goto label55;

     label23:
        $r38 := @caughtexception;

        r45 = $r38;

        staticinvoke <com.android.org.conscrypt.FileClientSessionCache$Impl: void logWriteError(java.lang.String,java.io.File,java.lang.Throwable)>(r3, r5, r45);

     label24:
        z6 = 0;

     label25:
        virtualinvoke r6.<java.io.FileOutputStream: void close()>();

        z7 = 1;

     label26:
        if z3 == 0 goto label27;

        if z7 != 0 goto label28;

     label27:
        specialinvoke r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: void delete(java.io.File)>(r5);

        goto label38;

     label28:
        $r35 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.util.Map accessOrder>;

        interfaceinvoke $r35.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r5);

        goto label38;

     label29:
        $r25 := @caughtexception;

        r46 = $r25;

        staticinvoke <com.android.org.conscrypt.FileClientSessionCache$Impl: void logWriteError(java.lang.String,java.io.File,java.lang.Throwable)>(r3, r5, r46);

     label30:
        if z3 == 0 goto label31;

        if z6 != 0 goto label32;

     label31:
        specialinvoke r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: void delete(java.io.File)>(r5);

        goto label38;

     label32:
        $r26 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.util.Map accessOrder>;

        interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r5);

        goto label38;

     label33:
        $r28 := @caughtexception;

        r10 = $r28;

     label34:
        if z3 == 0 goto label35;

        if z6 != 0 goto label36;

     label35:
        specialinvoke r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: void delete(java.io.File)>(r5);

        goto label37;

     label36:
        $r33 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.util.Map accessOrder>;

        interfaceinvoke $r33.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r5);

     label37:
        throw r10;

     label38:
        goto label55;

     label39:
        $r42 := @caughtexception;

        r11 = $r42;

     label40:
        z2 = 0;

     label41:
        virtualinvoke r6.<java.io.FileOutputStream: void close()>();

        z8 = 1;

     label42:
        if z3 == 0 goto label43;

        if z8 != 0 goto label44;

     label43:
        specialinvoke r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: void delete(java.io.File)>(r5);

        goto label54;

     label44:
        $r41 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.util.Map accessOrder>;

        interfaceinvoke $r41.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r5);

        goto label54;

     label45:
        $r24 := @caughtexception;

        r12 = $r24;

        staticinvoke <com.android.org.conscrypt.FileClientSessionCache$Impl: void logWriteError(java.lang.String,java.io.File,java.lang.Throwable)>(r3, r5, r12);

     label46:
        if z3 == 0 goto label47;

        if z2 != 0 goto label48;

     label47:
        specialinvoke r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: void delete(java.io.File)>(r5);

        goto label54;

     label48:
        $r29 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.util.Map accessOrder>;

        interfaceinvoke $r29.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r5);

        goto label54;

     label49:
        $r31 := @caughtexception;

        r13 = $r31;

     label50:
        if z3 == 0 goto label51;

        if z2 != 0 goto label52;

     label51:
        specialinvoke r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: void delete(java.io.File)>(r5);

        goto label53;

     label52:
        $r32 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.util.Map accessOrder>;

        interfaceinvoke $r32.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r4, r5);

     label53:
        throw r13;

     label54:
        throw r11;

     label55:
        return;

        catch java.io.FileNotFoundException from label02 to label03 with label04;
        catch java.io.IOException from label09 to label10 with label13;
        catch java.lang.Throwable from label09 to label10 with label17;
        catch java.lang.Throwable from label13 to label14 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
        catch java.io.IOException from label07 to label08 with label23;
        catch java.io.IOException from label25 to label26 with label29;
        catch java.lang.Throwable from label25 to label26 with label33;
        catch java.lang.Throwable from label29 to label30 with label33;
        catch java.lang.Throwable from label33 to label34 with label33;
        catch java.lang.Throwable from label07 to label08 with label39;
        catch java.lang.Throwable from label23 to label24 with label39;
        catch java.io.IOException from label41 to label42 with label45;
        catch java.lang.Throwable from label41 to label42 with label49;
        catch java.lang.Throwable from label45 to label46 with label49;
        catch java.lang.Throwable from label49 to label50 with label49;
        catch java.lang.Throwable from label39 to label40 with label39;
    }

    private void makeRoom()
    {
        com.android.org.conscrypt.FileClientSessionCache$Impl r0;
        int i0, $i1, $i2;
        java.util.Iterator r1;
        java.util.Map $r2;
        java.util.Collection $r3;
        java.lang.Object $r4;
        java.io.File $r5;

        r0 := @this: com.android.org.conscrypt.FileClientSessionCache$Impl;

        $i1 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: int size>;

        if $i1 > 12 goto label1;

        return;

     label1:
        specialinvoke r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: void indexFiles()>();

        $i2 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: int size>;

        i0 = $i2 - 12;

        $r2 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.util.Map accessOrder>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        r1 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.io.File) $r4;

        specialinvoke r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: void delete(java.io.File)>($r5);

        interfaceinvoke r1.<java.util.Iterator: void remove()>();

        i0 = i0 + -1;

        if i0 > 0 goto label2;

        return;
    }

    private void indexFiles()
    {
        com.android.org.conscrypt.FileClientSessionCache$Impl r0;
        java.lang.String[] r1, r3;
        java.util.TreeSet r2, $r5;
        int i0, i1;
        java.lang.String r4, $r8;
        boolean $z0, $z1, $z2;
        java.util.Map $r6, $r10, r13;
        java.lang.Object $r7;
        java.io.File $r11;
        com.android.org.conscrypt.FileClientSessionCache$CacheFile $r12, r15;
        java.util.Iterator r14;

        r0 := @this: com.android.org.conscrypt.FileClientSessionCache$Impl;

        r1 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.lang.String[] initialFiles>;

        if r1 == null goto label6;

        r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.lang.String[] initialFiles> = null;

        $r5 = new java.util.TreeSet;

        specialinvoke $r5.<java.util.TreeSet: void <init>()>();

        r2 = $r5;

        r3 = r1;

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r4 = r3[i1];

        $r10 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.util.Map accessOrder>;

        $z2 = interfaceinvoke $r10.<java.util.Map: boolean containsKey(java.lang.Object)>(r4);

        if $z2 != 0 goto label2;

        $r12 = new com.android.org.conscrypt.FileClientSessionCache$CacheFile;

        $r11 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.io.File directory>;

        specialinvoke $r12.<com.android.org.conscrypt.FileClientSessionCache$CacheFile: void <init>(java.io.File,java.lang.String)>($r11, r4);

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>($r12);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $z0 = interfaceinvoke r2.<java.util.Set: boolean isEmpty()>();

        if $z0 != 0 goto label6;

        r13 = staticinvoke <com.android.org.conscrypt.FileClientSessionCache$Impl: java.util.Map newAccessOrder()>();

        r14 = interfaceinvoke r2.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r14.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r7 = interfaceinvoke r14.<java.util.Iterator: java.lang.Object next()>();

        r15 = (com.android.org.conscrypt.FileClientSessionCache$CacheFile) $r7;

        $r8 = r15.<com.android.org.conscrypt.FileClientSessionCache$CacheFile: java.lang.String name>;

        interfaceinvoke r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, r15);

        goto label4;

     label5:
        $r6 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.util.Map accessOrder>;

        interfaceinvoke r13.<java.util.Map: void putAll(java.util.Map)>($r6);

        r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: java.util.Map accessOrder> = r13;

     label6:
        return;
    }

    private void delete(java.io.File)
    {
        com.android.org.conscrypt.FileClientSessionCache$Impl r0;
        java.io.File r1;
        boolean $z0;
        int $i0, $i1;
        java.io.IOException $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: com.android.org.conscrypt.FileClientSessionCache$Impl;

        r1 := @parameter0: java.io.File;

        $z0 = virtualinvoke r1.<java.io.File: boolean delete()>();

        if $z0 != 0 goto label1;

        $r2 = new java.io.IOException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FileClientSessionCache: Failed to delete ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r7);

        virtualinvoke $r2.<java.io.IOException: void printStackTrace()>();

     label1:
        $i0 = r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: int size>;

        $i1 = $i0 - 1;

        r0.<com.android.org.conscrypt.FileClientSessionCache$Impl: int size> = $i1;

        return;
    }

    static void logWriteError(java.lang.String, java.io.File, java.lang.Throwable)
    {
        java.lang.String r0, $r10;
        java.io.File r1;
        java.lang.Throwable r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r7, $r8, $r9;
        java.io.PrintStream $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.io.File;

        r2 := @parameter2: java.lang.Throwable;

        $r4 = <java.lang.System: java.io.PrintStream err>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FileClientSessionCache: Error writing session data for ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r10);

        virtualinvoke r2.<java.lang.Throwable: void printStackTrace()>();

        return;
    }
}
