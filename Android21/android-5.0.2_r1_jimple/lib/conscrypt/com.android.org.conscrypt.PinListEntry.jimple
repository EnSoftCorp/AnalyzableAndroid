public class com.android.org.conscrypt.PinListEntry extends java.lang.Object
{
    private final java.lang.String cn;
    private final boolean enforcing;
    private final java.util.Set pinnedFingerprints;
    private final com.android.org.conscrypt.TrustedCertificateStore certStore;

    public java.lang.String getCommonName()
    {
        com.android.org.conscrypt.PinListEntry r0;
        java.lang.String $r1;

        r0 := @this: com.android.org.conscrypt.PinListEntry;

        $r1 = r0.<com.android.org.conscrypt.PinListEntry: java.lang.String cn>;

        return $r1;
    }

    public boolean getEnforcing()
    {
        com.android.org.conscrypt.PinListEntry r0;
        boolean $z0;

        r0 := @this: com.android.org.conscrypt.PinListEntry;

        $z0 = r0.<com.android.org.conscrypt.PinListEntry: boolean enforcing>;

        return $z0;
    }

    public void <init>(java.lang.String, com.android.org.conscrypt.TrustedCertificateStore) throws com.android.org.conscrypt.PinEntryException
    {
        com.android.org.conscrypt.PinListEntry r0;
        java.lang.String r1, $r5, $r6;
        com.android.org.conscrypt.TrustedCertificateStore r2;
        java.lang.String[] r3, $r8;
        java.util.HashSet $r4;
        int $i0, $i1;
        boolean $z0;
        java.lang.Object[] $r7;
        com.android.org.conscrypt.PinEntryException $r9;
        java.lang.NullPointerException $r10;

        r0 := @this: com.android.org.conscrypt.PinListEntry;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.org.conscrypt.TrustedCertificateStore;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r0.<com.android.org.conscrypt.PinListEntry: java.util.Set pinnedFingerprints> = $r4;

        if r1 != null goto label1;

        $r10 = new java.lang.NullPointerException;

        specialinvoke $r10.<java.lang.NullPointerException: void <init>(java.lang.String)>("entry == null");

        throw $r10;

     label1:
        r0.<com.android.org.conscrypt.PinListEntry: com.android.org.conscrypt.TrustedCertificateStore certStore> = r2;

        r3 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>("[=,|]");

        $i0 = lengthof r3;

        if $i0 >= 3 goto label2;

        $r9 = new com.android.org.conscrypt.PinEntryException;

        specialinvoke $r9.<com.android.org.conscrypt.PinEntryException: void <init>(java.lang.String)>("Received malformed pin entry");

        throw $r9;

     label2:
        $r5 = r3[0];

        r0.<com.android.org.conscrypt.PinListEntry: java.lang.String cn> = $r5;

        $r6 = r3[1];

        $z0 = staticinvoke <com.android.org.conscrypt.PinListEntry: boolean enforcementValueFromString(java.lang.String)>($r6);

        r0.<com.android.org.conscrypt.PinListEntry: boolean enforcing> = $z0;

        $i1 = lengthof r3;

        $r7 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>(r3, 2, $i1);

        $r8 = (java.lang.String[]) $r7;

        specialinvoke r0.<com.android.org.conscrypt.PinListEntry: void addPins(java.lang.String[])>($r8);

        return;
    }

    private static boolean enforcementValueFromString(java.lang.String) throws com.android.org.conscrypt.PinEntryException
    {
        java.lang.String r0;
        boolean $z0, $z1;
        com.android.org.conscrypt.PinEntryException $r1;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("true");

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("false");

        if $z1 == 0 goto label2;

        return 0;

     label2:
        $r1 = new com.android.org.conscrypt.PinEntryException;

        specialinvoke $r1.<com.android.org.conscrypt.PinEntryException: void <init>(java.lang.String)>("Enforcement status is not a valid value");

        throw $r1;
    }

    public boolean isChainValid(java.util.List)
    {
        com.android.org.conscrypt.PinListEntry r0;
        java.util.List r1;
        boolean z0, $z1, $z2, $z3, $z4;
        java.util.Iterator r2;
        java.security.cert.X509Certificate r3;
        java.lang.String r4;
        java.lang.Object $r5;
        java.util.Set $r6;

        r0 := @this: com.android.org.conscrypt.PinListEntry;

        r1 := @parameter0: java.util.List;

        z0 = specialinvoke r0.<com.android.org.conscrypt.PinListEntry: boolean chainContainsUserCert(java.util.List)>(r1);

        if z0 != 0 goto label3;

        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label3;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.security.cert.X509Certificate) $r5;

        r4 = staticinvoke <com.android.org.conscrypt.PinListEntry: java.lang.String getFingerprint(java.security.cert.X509Certificate)>(r3);

        $r6 = r0.<com.android.org.conscrypt.PinListEntry: java.util.Set pinnedFingerprints>;

        $z4 = interfaceinvoke $r6.<java.util.Set: boolean contains(java.lang.Object)>(r4);

        if $z4 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        specialinvoke r0.<com.android.org.conscrypt.PinListEntry: void logPinFailure(java.util.List,boolean)>(r1, z0);

        $z1 = r0.<com.android.org.conscrypt.PinListEntry: boolean enforcing>;

        if $z1 == 0 goto label4;

        if z0 == 0 goto label5;

     label4:
        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        return $z2;
    }

    private static java.lang.String getFingerprint(java.security.cert.X509Certificate)
    {
        java.security.cert.X509Certificate r0;
        java.security.MessageDigest r1;
        byte[] r2, r3;
        java.security.PublicKey $r4;
        java.lang.String $r5;
        java.security.NoSuchAlgorithmException $r6, r8;
        java.lang.AssertionError $r7;

        r0 := @parameter0: java.security.cert.X509Certificate;

     label1:
        r1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA512");

        $r4 = virtualinvoke r0.<java.security.cert.X509Certificate: java.security.PublicKey getPublicKey()>();

        r2 = interfaceinvoke $r4.<java.security.PublicKey: byte[] getEncoded()>();

        r3 = virtualinvoke r1.<java.security.MessageDigest: byte[] digest(byte[])>(r2);

        $r5 = staticinvoke <java.lang.IntegralToString: java.lang.String bytesToHexString(byte[],boolean)>(r3, 0);

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        r8 = $r6;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>(java.lang.Object)>(r8);

        throw $r7;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
    }

    private void addPins(java.lang.String[])
    {
        com.android.org.conscrypt.PinListEntry r0;
        java.lang.String[] r1, r2;
        int i0, i1;
        java.lang.String r3;
        java.util.Set $r4;

        r0 := @this: com.android.org.conscrypt.PinListEntry;

        r1 := @parameter0: java.lang.String[];

        r2 = r1;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = r2[i1];

        staticinvoke <com.android.org.conscrypt.PinListEntry: void validatePin(java.lang.String)>(r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r4 = r0.<com.android.org.conscrypt.PinListEntry: java.util.Set pinnedFingerprints>;

        staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>($r4, r1);

        return;
    }

    private static void validatePin(java.lang.String)
    {
        java.lang.String r0;
        java.lang.NumberFormatException r1, $r4;
        int $i0;
        java.math.BigInteger $r2;
        java.lang.IllegalArgumentException $r3, $r5;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 == 128 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Pin is not a valid length");

        throw $r3;

     label1:
        $r2 = new java.math.BigInteger;

        specialinvoke $r2.<java.math.BigInteger: void <init>(java.lang.String,int)>(r0, 16);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>("Pin is not a valid hex string", r1);

        throw $r5;

     label4:
        return;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    private boolean chainContainsUserCert(java.util.List)
    {
        com.android.org.conscrypt.PinListEntry r0;
        java.util.List r1;
        java.util.Iterator r2;
        java.security.cert.X509Certificate r3;
        com.android.org.conscrypt.TrustedCertificateStore $r4, $r6;
        boolean $z0, $z1;
        java.lang.Object $r5;

        r0 := @this: com.android.org.conscrypt.PinListEntry;

        r1 := @parameter0: java.util.List;

        $r4 = r0.<com.android.org.conscrypt.PinListEntry: com.android.org.conscrypt.TrustedCertificateStore certStore>;

        if $r4 != null goto label1;

        return 0;

     label1:
        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.security.cert.X509Certificate) $r5;

        $r6 = r0.<com.android.org.conscrypt.PinListEntry: com.android.org.conscrypt.TrustedCertificateStore certStore>;

        $z1 = virtualinvoke $r6.<com.android.org.conscrypt.TrustedCertificateStore: boolean isUserAddedCertificate(java.security.cert.X509Certificate)>(r3);

        if $z1 == 0 goto label3;

        return 1;

     label3:
        goto label2;

     label4:
        return 0;
    }

    private void logPinFailure(java.util.List, boolean)
    {
        com.android.org.conscrypt.PinListEntry r0;
        java.util.List r1;
        boolean z0, $z1;
        java.lang.String $r2;

        r0 := @this: com.android.org.conscrypt.PinListEntry;

        r1 := @parameter0: java.util.List;

        z0 := @parameter1: boolean;

        $r2 = r0.<com.android.org.conscrypt.PinListEntry: java.lang.String cn>;

        $z1 = r0.<com.android.org.conscrypt.PinListEntry: boolean enforcing>;

        staticinvoke <com.android.org.conscrypt.PinFailureLogger: void log(java.lang.String,boolean,boolean,java.util.List)>($r2, z0, $z1, r1);

        return;
    }
}
