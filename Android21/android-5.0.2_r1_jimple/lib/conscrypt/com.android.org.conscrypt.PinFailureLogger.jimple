public class com.android.org.conscrypt.PinFailureLogger extends java.lang.Object
{
    private static final long LOG_INTERVAL_NANOS;
    private static long lastLoggedNanos;

    public void <init>()
    {
        com.android.org.conscrypt.PinFailureLogger r0;

        r0 := @this: com.android.org.conscrypt.PinFailureLogger;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static synchronized void log(java.lang.String, boolean, boolean, java.util.List)
    {
        java.lang.String r0;
        boolean z0, z1, $z2;
        java.util.List r1;
        long $l0;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        r1 := @parameter3: java.util.List;

        $z2 = staticinvoke <com.android.org.conscrypt.PinFailureLogger: boolean timeToLog()>();

        if $z2 != 0 goto label1;

        return;

     label1:
        staticinvoke <com.android.org.conscrypt.PinFailureLogger: void writeToLog(java.lang.String,boolean,boolean,java.util.List)>(r0, z0, z1, r1);

        $l0 = staticinvoke <java.lang.System: long nanoTime()>();

        <com.android.org.conscrypt.PinFailureLogger: long lastLoggedNanos> = $l0;

        return;
    }

    protected static synchronized void writeToLog(java.lang.String, boolean, boolean, java.util.List)
    {
        java.lang.String r0, $r14, $r15;
        boolean z0, z1, $z2;
        java.util.List r1;
        java.lang.StringBuilder r2, $r6;
        java.util.Iterator r3;
        java.security.cert.X509Certificate r4;
        java.lang.Object $r13;
        byte[] $r16;
        java.security.cert.CertificateEncodingException $r20;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        r1 := @parameter3: java.util.List;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        r2 = $r6;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|");

        r3 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r13 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.security.cert.X509Certificate) $r13;

     label2:
        $r16 = virtualinvoke r4.<java.security.cert.X509Certificate: byte[] getEncoded()>();

        $r15 = staticinvoke <libcore.io.Base64: java.lang.String encode(byte[])>($r16);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

     label3:
        goto label5;

     label4:
        $r20 := @caughtexception;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: could not encode certificate");

     label5:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("|");

        goto label1;

     label6:
        $r14 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <libcore.io.DropBox: void addText(java.lang.String,java.lang.String)>("exp_det_cert_pin_failure", $r14);

        return;

        catch java.security.cert.CertificateEncodingException from label2 to label3 with label4;
    }

    protected static boolean timeToLog()
    {
        long l0, $l1, $l2;
        byte $b3;
        boolean $z0;

        l0 = staticinvoke <java.lang.System: long nanoTime()>();

        $l1 = <com.android.org.conscrypt.PinFailureLogger: long lastLoggedNanos>;

        $l2 = l0 - $l1;

        $b3 = $l2 cmp 817405952L;

        if $b3 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static void <clinit>()
    {
        <com.android.org.conscrypt.PinFailureLogger: long LOG_INTERVAL_NANOS> = 817405952L;

        <com.android.org.conscrypt.PinFailureLogger: long lastLoggedNanos> = 0L;

        return;
    }
}
