public class com.android.org.conscrypt.CertPinManager extends java.lang.Object
{
    private long lastModified;
    private final java.util.Map entries;
    private final libcore.util.BasicLruCache hostnameCache;
    private boolean initialized;
    private static final boolean DEBUG;
    private final java.io.File pinFile;
    private final com.android.org.conscrypt.TrustedCertificateStore certStore;

    public void <init>(com.android.org.conscrypt.TrustedCertificateStore) throws com.android.org.conscrypt.PinManagerException
    {
        com.android.org.conscrypt.CertPinManager r0;
        com.android.org.conscrypt.TrustedCertificateStore r1;
        java.util.HashMap $r2;
        libcore.util.BasicLruCache $r3;
        java.io.File $r4;

        r0 := @this: com.android.org.conscrypt.CertPinManager;

        r1 := @parameter0: com.android.org.conscrypt.TrustedCertificateStore;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.android.org.conscrypt.CertPinManager: java.util.Map entries> = $r2;

        $r3 = new libcore.util.BasicLruCache;

        specialinvoke $r3.<libcore.util.BasicLruCache: void <init>(int)>(10);

        r0.<com.android.org.conscrypt.CertPinManager: libcore.util.BasicLruCache hostnameCache> = $r3;

        r0.<com.android.org.conscrypt.CertPinManager: boolean initialized> = 0;

        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>("/data/misc/keychain/pins");

        r0.<com.android.org.conscrypt.CertPinManager: java.io.File pinFile> = $r4;

        r0.<com.android.org.conscrypt.CertPinManager: com.android.org.conscrypt.TrustedCertificateStore certStore> = r1;

        return;
    }

    public void <init>(java.lang.String, com.android.org.conscrypt.TrustedCertificateStore) throws com.android.org.conscrypt.PinManagerException
    {
        com.android.org.conscrypt.CertPinManager r0;
        java.lang.String r1;
        com.android.org.conscrypt.TrustedCertificateStore r2;
        java.util.HashMap $r3;
        libcore.util.BasicLruCache $r4;
        java.io.File $r5;
        java.lang.NullPointerException $r6;

        r0 := @this: com.android.org.conscrypt.CertPinManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.org.conscrypt.TrustedCertificateStore;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<com.android.org.conscrypt.CertPinManager: java.util.Map entries> = $r3;

        $r4 = new libcore.util.BasicLruCache;

        specialinvoke $r4.<libcore.util.BasicLruCache: void <init>(int)>(10);

        r0.<com.android.org.conscrypt.CertPinManager: libcore.util.BasicLruCache hostnameCache> = $r4;

        r0.<com.android.org.conscrypt.CertPinManager: boolean initialized> = 0;

        if r1 != null goto label1;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("path == null");

        throw $r6;

     label1:
        $r5 = new java.io.File;

        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>(r1);

        r0.<com.android.org.conscrypt.CertPinManager: java.io.File pinFile> = $r5;

        r0.<com.android.org.conscrypt.CertPinManager: com.android.org.conscrypt.TrustedCertificateStore certStore> = r2;

        return;
    }

    public boolean isChainValid(java.lang.String, java.util.List) throws com.android.org.conscrypt.PinManagerException
    {
        com.android.org.conscrypt.CertPinManager r0;
        java.lang.String r1;
        java.util.List r2;
        com.android.org.conscrypt.PinListEntry r3;
        boolean $z0;

        r0 := @this: com.android.org.conscrypt.CertPinManager;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        r3 = specialinvoke r0.<com.android.org.conscrypt.CertPinManager: com.android.org.conscrypt.PinListEntry lookup(java.lang.String)>(r1);

        if r3 != null goto label1;

        return 1;

     label1:
        $z0 = virtualinvoke r3.<com.android.org.conscrypt.PinListEntry: boolean isChainValid(java.util.List)>(r2);

        return $z0;
    }

    private synchronized boolean ensureInitialized() throws com.android.org.conscrypt.PinManagerException
    {
        com.android.org.conscrypt.CertPinManager r0;
        java.lang.String r1, r3, $r9, $r16;
        java.lang.String[] r2;
        int i0, i1;
        com.android.org.conscrypt.PinListEntry r4, $r7;
        boolean $z0, $z1, $z2;
        libcore.util.BasicLruCache $r5;
        java.io.File $r6;
        long $l2;
        com.android.org.conscrypt.TrustedCertificateStore $r8;
        java.util.Map $r10;
        java.lang.StringBuilder $r12, $r14, $r15;
        com.android.org.conscrypt.PinEntryException $r13, r17;

        r0 := @this: com.android.org.conscrypt.CertPinManager;

        $z0 = r0.<com.android.org.conscrypt.CertPinManager: boolean initialized>;

        if $z0 == 0 goto label1;

        $z2 = specialinvoke r0.<com.android.org.conscrypt.CertPinManager: boolean isCacheValid()>();

        if $z2 == 0 goto label1;

        return 1;

     label1:
        r1 = specialinvoke r0.<com.android.org.conscrypt.CertPinManager: java.lang.String readPinFile()>();

        if r1 == null goto label8;

        r2 = staticinvoke <com.android.org.conscrypt.CertPinManager: java.lang.String[] getPinFileEntries(java.lang.String)>(r1);

        i0 = lengthof r2;

        i1 = 0;

     label2:
        if i1 >= i0 goto label7;

        r3 = r2[i1];

     label3:
        $r7 = new com.android.org.conscrypt.PinListEntry;

        $r8 = r0.<com.android.org.conscrypt.CertPinManager: com.android.org.conscrypt.TrustedCertificateStore certStore>;

        specialinvoke $r7.<com.android.org.conscrypt.PinListEntry: void <init>(java.lang.String,com.android.org.conscrypt.TrustedCertificateStore)>(r3, $r8);

        r4 = $r7;

        $r10 = r0.<com.android.org.conscrypt.CertPinManager: java.util.Map entries>;

        $r9 = virtualinvoke r4.<com.android.org.conscrypt.PinListEntry: java.lang.String getCommonName()>();

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, r4);

     label4:
        goto label6;

     label5:
        $r13 := @caughtexception;

        r17 = $r13;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Pinlist contains a malformed pin: ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.org.conscrypt.CertPinManager: void log(java.lang.String,java.lang.Exception)>($r16, r17);

     label6:
        i1 = i1 + 1;

        goto label2;

     label7:
        $r5 = r0.<com.android.org.conscrypt.CertPinManager: libcore.util.BasicLruCache hostnameCache>;

        virtualinvoke $r5.<libcore.util.BasicLruCache: void evictAll()>();

        $r6 = r0.<com.android.org.conscrypt.CertPinManager: java.io.File pinFile>;

        $l2 = virtualinvoke $r6.<java.io.File: long lastModified()>();

        r0.<com.android.org.conscrypt.CertPinManager: long lastModified> = $l2;

        r0.<com.android.org.conscrypt.CertPinManager: boolean initialized> = 1;

     label8:
        $z1 = r0.<com.android.org.conscrypt.CertPinManager: boolean initialized>;

        return $z1;

        catch com.android.org.conscrypt.PinEntryException from label3 to label4 with label5;
    }

    private java.lang.String readPinFile() throws com.android.org.conscrypt.PinManagerException
    {
        com.android.org.conscrypt.CertPinManager r0;
        java.io.File $r2;
        java.lang.String $r3, $r4;
        java.io.IOException $r5, r8;
        com.android.org.conscrypt.PinManagerException $r6;
        java.io.FileNotFoundException $r7;

        r0 := @this: com.android.org.conscrypt.CertPinManager;

     label1:
        $r2 = r0.<com.android.org.conscrypt.CertPinManager: java.io.File pinFile>;

        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String getPath()>();

        $r4 = staticinvoke <libcore.io.IoUtils: java.lang.String readFileAsString(java.lang.String)>($r3);

     label2:
        return $r4;

     label3:
        $r7 := @caughtexception;

        return null;

     label4:
        $r5 := @caughtexception;

        r8 = $r5;

        $r6 = new com.android.org.conscrypt.PinManagerException;

        specialinvoke $r6.<com.android.org.conscrypt.PinManagerException: void <init>(java.lang.String,java.lang.Exception)>("Unexpected error reading pin list; failing.", r8);

        throw $r6;

        catch java.io.FileNotFoundException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label4;
    }

    private static java.lang.String[] getPinFileEntries(java.lang.String)
    {
        java.lang.String r0;
        java.lang.String[] $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("\n");

        return $r1;
    }

    private synchronized com.android.org.conscrypt.PinListEntry lookup(java.lang.String) throws com.android.org.conscrypt.PinManagerException
    {
        com.android.org.conscrypt.CertPinManager r0;
        java.lang.String r1, r2, r13;
        boolean $z0;
        libcore.util.BasicLruCache $r3, $r5;
        java.lang.Object $r4, $r8, $r11;
        java.util.Map $r7, $r10;
        com.android.org.conscrypt.PinListEntry $r9, $r12;

        r0 := @this: com.android.org.conscrypt.CertPinManager;

        r1 := @parameter0: java.lang.String;

        $z0 = specialinvoke r0.<com.android.org.conscrypt.CertPinManager: boolean ensureInitialized()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r3 = r0.<com.android.org.conscrypt.CertPinManager: libcore.util.BasicLruCache hostnameCache>;

        $r4 = virtualinvoke $r3.<libcore.util.BasicLruCache: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (java.lang.String) $r4;

        if r2 == null goto label2;

        $r10 = r0.<com.android.org.conscrypt.CertPinManager: java.util.Map entries>;

        $r11 = interfaceinvoke $r10.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        $r12 = (com.android.org.conscrypt.PinListEntry) $r11;

        return $r12;

     label2:
        r13 = specialinvoke r0.<com.android.org.conscrypt.CertPinManager: java.lang.String getMatchingCN(java.lang.String)>(r1);

        if r13 == null goto label3;

        $r5 = r0.<com.android.org.conscrypt.CertPinManager: libcore.util.BasicLruCache hostnameCache>;

        virtualinvoke $r5.<libcore.util.BasicLruCache: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r13);

        $r7 = r0.<com.android.org.conscrypt.CertPinManager: java.util.Map entries>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r13);

        $r9 = (com.android.org.conscrypt.PinListEntry) $r8;

        return $r9;

     label3:
        return null;
    }

    private boolean isCacheValid()
    {
        com.android.org.conscrypt.CertPinManager r0;
        java.io.File $r1;
        long $l0, $l1;
        byte $b2;
        boolean $z0;

        r0 := @this: com.android.org.conscrypt.CertPinManager;

        $r1 = r0.<com.android.org.conscrypt.CertPinManager: java.io.File pinFile>;

        $l0 = virtualinvoke $r1.<java.io.File: long lastModified()>();

        $l1 = r0.<com.android.org.conscrypt.CertPinManager: long lastModified>;

        $b2 = $l0 cmp $l1;

        if $b2 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private java.lang.String getMatchingCN(java.lang.String)
    {
        com.android.org.conscrypt.CertPinManager r0;
        java.lang.String r1, r2, r4;
        java.util.Iterator r3;
        java.util.Map $r5;
        java.util.Set $r6;
        boolean $z0, $z1;
        java.lang.Object $r7;
        int $i0, $i1;

        r0 := @this: com.android.org.conscrypt.CertPinManager;

        r1 := @parameter0: java.lang.String;

        r2 = "";

        $r5 = r0.<com.android.org.conscrypt.CertPinManager: java.util.Map entries>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Set keySet()>();

        r3 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r7;

        $i0 = virtualinvoke r4.<java.lang.String: int length()>();

        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i0 >= $i1 goto label2;

        goto label1;

     label2:
        $z1 = staticinvoke <com.android.org.conscrypt.CertPinManager: boolean isHostnameMatchedBy(java.lang.String,java.lang.String)>(r1, r4);

        if $z1 == 0 goto label3;

        r2 = r4;

     label3:
        goto label1;

     label4:
        return r2;
    }

    private static boolean isHostnameMatchedBy(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, r3;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.util.Locale $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        $z0 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        if r1 == null goto label1;

        $z1 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>();

        if $z1 == 0 goto label2;

     label1:
        return 0;

     label2:
        $r2 = <java.util.Locale: java.util.Locale US>;

        r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2);

        $z2 = virtualinvoke r3.<java.lang.String: boolean contains(java.lang.CharSequence)>("*");

        if $z2 != 0 goto label3;

        $z7 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        return $z7;

     label3:
        $z3 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("*.");

        if $z3 == 0 goto label4;

        $i9 = virtualinvoke r3.<java.lang.String: int length()>();

        $i10 = $i9 - 2;

        $z6 = virtualinvoke r0.<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>(0, r3, 2, $i10);

        if $z6 == 0 goto label4;

        return 1;

     label4:
        i0 = virtualinvoke r3.<java.lang.String: int indexOf(int)>(42);

        i1 = virtualinvoke r3.<java.lang.String: int indexOf(int)>(46);

        if i0 <= i1 goto label5;

        return 0;

     label5:
        $z4 = virtualinvoke r0.<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>(0, r3, 0, i0);

        if $z4 != 0 goto label6;

        return 0;

     label6:
        $i4 = virtualinvoke r3.<java.lang.String: int length()>();

        $i6 = i0 + 1;

        i2 = $i4 - $i6;

        $i5 = virtualinvoke r0.<java.lang.String: int length()>();

        i3 = $i5 - i2;

        $i8 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(46, i0);

        if $i8 >= i3 goto label7;

        return 0;

     label7:
        $i7 = i0 + 1;

        $z5 = virtualinvoke r0.<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>(i3, r3, $i7, i2);

        if $z5 != 0 goto label8;

        return 0;

     label8:
        return 1;
    }

    private static void log(java.lang.String, java.lang.Exception)
    {
        java.lang.String r0;
        java.lang.Exception r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Exception;

        return;
    }

    public static void <clinit>()
    {
        <com.android.org.conscrypt.CertPinManager: boolean DEBUG> = 0;

        return;
    }
}
