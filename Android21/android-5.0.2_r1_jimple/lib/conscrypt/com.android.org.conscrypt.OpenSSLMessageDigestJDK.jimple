public class com.android.org.conscrypt.OpenSSLMessageDigestJDK extends java.security.MessageDigestSpi implements java.lang.Cloneable
{
    private com.android.org.conscrypt.OpenSSLDigestContext ctx;
    private final long evp_md;
    private final int size;
    private final byte[] singleByte;

    private void <init>(long, int) throws java.security.NoSuchAlgorithmException
    {
        com.android.org.conscrypt.OpenSSLMessageDigestJDK r0;
        long l0;
        int i1;
        byte[] $r1;

        r0 := @this: com.android.org.conscrypt.OpenSSLMessageDigestJDK;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        specialinvoke r0.<java.security.MessageDigestSpi: void <init>()>();

        $r1 = newarray (byte)[1];

        r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: byte[] singleByte> = $r1;

        r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: long evp_md> = l0;

        r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: int size> = i1;

        specialinvoke r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: void resetContext()>();

        return;
    }

    private void <init>(long, int, com.android.org.conscrypt.OpenSSLDigestContext)
    {
        com.android.org.conscrypt.OpenSSLMessageDigestJDK r0;
        long l0;
        int i1;
        com.android.org.conscrypt.OpenSSLDigestContext r1;
        byte[] $r2;

        r0 := @this: com.android.org.conscrypt.OpenSSLMessageDigestJDK;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r1 := @parameter2: com.android.org.conscrypt.OpenSSLDigestContext;

        specialinvoke r0.<java.security.MessageDigestSpi: void <init>()>();

        $r2 = newarray (byte)[1];

        r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: byte[] singleByte> = $r2;

        r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: long evp_md> = l0;

        r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: int size> = i1;

        r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: com.android.org.conscrypt.OpenSSLDigestContext ctx> = r1;

        return;
    }

    private final void resetContext()
    {
        com.android.org.conscrypt.OpenSSLMessageDigestJDK r0;
        com.android.org.conscrypt.OpenSSLDigestContext r1, $r2;
        long $l0, $l1;

        r0 := @this: com.android.org.conscrypt.OpenSSLMessageDigestJDK;

        $r2 = new com.android.org.conscrypt.OpenSSLDigestContext;

        $l0 = staticinvoke <com.android.org.conscrypt.NativeCrypto: long EVP_MD_CTX_create()>();

        specialinvoke $r2.<com.android.org.conscrypt.OpenSSLDigestContext: void <init>(long)>($l0);

        r1 = $r2;

        staticinvoke <com.android.org.conscrypt.NativeCrypto: void EVP_MD_CTX_init(com.android.org.conscrypt.OpenSSLDigestContext)>(r1);

        $l1 = r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: long evp_md>;

        staticinvoke <com.android.org.conscrypt.NativeCrypto: int EVP_DigestInit(com.android.org.conscrypt.OpenSSLDigestContext,long)>(r1, $l1);

        r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: com.android.org.conscrypt.OpenSSLDigestContext ctx> = r1;

        return;
    }

    protected void engineReset()
    {
        com.android.org.conscrypt.OpenSSLMessageDigestJDK r0;

        r0 := @this: com.android.org.conscrypt.OpenSSLMessageDigestJDK;

        specialinvoke r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: void resetContext()>();

        return;
    }

    protected int engineGetDigestLength()
    {
        com.android.org.conscrypt.OpenSSLMessageDigestJDK r0;
        int $i0;

        r0 := @this: com.android.org.conscrypt.OpenSSLMessageDigestJDK;

        $i0 = r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: int size>;

        return $i0;
    }

    protected void engineUpdate(byte)
    {
        com.android.org.conscrypt.OpenSSLMessageDigestJDK r0;
        byte b0;
        byte[] $r1, $r2;

        r0 := @this: com.android.org.conscrypt.OpenSSLMessageDigestJDK;

        b0 := @parameter0: byte;

        $r1 = r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: byte[] singleByte>;

        $r1[0] = b0;

        $r2 = r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: byte[] singleByte>;

        virtualinvoke r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: void engineUpdate(byte[],int,int)>($r2, 0, 1);

        return;
    }

    protected void engineUpdate(byte[], int, int)
    {
        com.android.org.conscrypt.OpenSSLMessageDigestJDK r0;
        byte[] r1;
        int i0, i1;
        com.android.org.conscrypt.OpenSSLDigestContext $r2;

        r0 := @this: com.android.org.conscrypt.OpenSSLMessageDigestJDK;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: com.android.org.conscrypt.OpenSSLDigestContext ctx>;

        staticinvoke <com.android.org.conscrypt.NativeCrypto: void EVP_DigestUpdate(com.android.org.conscrypt.OpenSSLDigestContext,byte[],int,int)>($r2, r1, i0, i1);

        return;
    }

    protected byte[] engineDigest()
    {
        com.android.org.conscrypt.OpenSSLMessageDigestJDK r0;
        byte[] r1;
        int $i0;
        com.android.org.conscrypt.OpenSSLDigestContext $r2;

        r0 := @this: com.android.org.conscrypt.OpenSSLMessageDigestJDK;

        $i0 = r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: int size>;

        r1 = newarray (byte)[$i0];

        $r2 = r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: com.android.org.conscrypt.OpenSSLDigestContext ctx>;

        staticinvoke <com.android.org.conscrypt.NativeCrypto: int EVP_DigestFinal(com.android.org.conscrypt.OpenSSLDigestContext,byte[],int)>($r2, r1, 0);

        specialinvoke r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: void resetContext()>();

        return r1;
    }

    public java.lang.Object clone()
    {
        com.android.org.conscrypt.OpenSSLMessageDigestJDK r0, $r4;
        com.android.org.conscrypt.OpenSSLDigestContext r1, $r2, $r3;
        long $l0, $l3;
        int $i2;

        r0 := @this: com.android.org.conscrypt.OpenSSLMessageDigestJDK;

        $r2 = new com.android.org.conscrypt.OpenSSLDigestContext;

        $l0 = staticinvoke <com.android.org.conscrypt.NativeCrypto: long EVP_MD_CTX_create()>();

        specialinvoke $r2.<com.android.org.conscrypt.OpenSSLDigestContext: void <init>(long)>($l0);

        r1 = $r2;

        staticinvoke <com.android.org.conscrypt.NativeCrypto: void EVP_MD_CTX_init(com.android.org.conscrypt.OpenSSLDigestContext)>(r1);

        $r3 = r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: com.android.org.conscrypt.OpenSSLDigestContext ctx>;

        staticinvoke <com.android.org.conscrypt.NativeCrypto: int EVP_MD_CTX_copy(com.android.org.conscrypt.OpenSSLDigestContext,com.android.org.conscrypt.OpenSSLDigestContext)>(r1, $r3);

        $r4 = new com.android.org.conscrypt.OpenSSLMessageDigestJDK;

        $l3 = r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: long evp_md>;

        $i2 = r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: int size>;

        specialinvoke $r4.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: void <init>(long,int,com.android.org.conscrypt.OpenSSLDigestContext)>($l3, $i2, r1);

        return $r4;
    }

    void <init>(long, int, com.android.org.conscrypt.OpenSSLMessageDigestJDK$1) throws java.security.NoSuchAlgorithmException
    {
        com.android.org.conscrypt.OpenSSLMessageDigestJDK r0;
        long l0;
        int i1;
        com.android.org.conscrypt.OpenSSLMessageDigestJDK$1 r1;

        r0 := @this: com.android.org.conscrypt.OpenSSLMessageDigestJDK;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        r1 := @parameter2: com.android.org.conscrypt.OpenSSLMessageDigestJDK$1;

        specialinvoke r0.<com.android.org.conscrypt.OpenSSLMessageDigestJDK: void <init>(long,int)>(l0, i1);

        return;
    }
}
