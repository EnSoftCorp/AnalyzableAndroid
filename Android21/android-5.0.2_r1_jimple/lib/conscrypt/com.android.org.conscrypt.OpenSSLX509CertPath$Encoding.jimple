final enum class com.android.org.conscrypt.OpenSSLX509CertPath$Encoding extends java.lang.Enum
{
    public static final enum com.android.org.conscrypt.OpenSSLX509CertPath$Encoding PKI_PATH;
    public static final enum com.android.org.conscrypt.OpenSSLX509CertPath$Encoding PKCS7;
    private final java.lang.String apiName;
    private static final com.android.org.conscrypt.OpenSSLX509CertPath$Encoding[] $VALUES;

    public static com.android.org.conscrypt.OpenSSLX509CertPath$Encoding[] values()
    {
        com.android.org.conscrypt.OpenSSLX509CertPath$Encoding[] $r0, $r2;
        java.lang.Object $r1;

        $r0 = <com.android.org.conscrypt.OpenSSLX509CertPath$Encoding: com.android.org.conscrypt.OpenSSLX509CertPath$Encoding[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (com.android.org.conscrypt.OpenSSLX509CertPath$Encoding[]) $r1;

        return $r2;
    }

    public static com.android.org.conscrypt.OpenSSLX509CertPath$Encoding valueOf(java.lang.String)
    {
        java.lang.String r0;
        java.lang.Enum $r1;
        com.android.org.conscrypt.OpenSSLX509CertPath$Encoding $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "com/android/org/conscrypt/OpenSSLX509CertPath$Encoding", r0);

        $r2 = (com.android.org.conscrypt.OpenSSLX509CertPath$Encoding) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, java.lang.String)
    {
        com.android.org.conscrypt.OpenSSLX509CertPath$Encoding r0;
        java.lang.String r1, r2;
        int i0;

        r0 := @this: com.android.org.conscrypt.OpenSSLX509CertPath$Encoding;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<com.android.org.conscrypt.OpenSSLX509CertPath$Encoding: java.lang.String apiName> = r2;

        return;
    }

    static com.android.org.conscrypt.OpenSSLX509CertPath$Encoding findByApiName(java.lang.String) throws java.security.cert.CertificateEncodingException
    {
        java.lang.String r0, $r3;
        com.android.org.conscrypt.OpenSSLX509CertPath$Encoding[] r1;
        int i0, i1;
        com.android.org.conscrypt.OpenSSLX509CertPath$Encoding r2;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 = staticinvoke <com.android.org.conscrypt.OpenSSLX509CertPath$Encoding: com.android.org.conscrypt.OpenSSLX509CertPath$Encoding[] values()>();

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r2 = r1[i1];

        $r3 = r2.<com.android.org.conscrypt.OpenSSLX509CertPath$Encoding: java.lang.String apiName>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

        return r2;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    static java.lang.String access$000(com.android.org.conscrypt.OpenSSLX509CertPath$Encoding)
    {
        com.android.org.conscrypt.OpenSSLX509CertPath$Encoding r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.org.conscrypt.OpenSSLX509CertPath$Encoding;

        $r1 = r0.<com.android.org.conscrypt.OpenSSLX509CertPath$Encoding: java.lang.String apiName>;

        return $r1;
    }

    static void <clinit>()
    {
        com.android.org.conscrypt.OpenSSLX509CertPath$Encoding $r0, $r1, $r3, $r4;
        com.android.org.conscrypt.OpenSSLX509CertPath$Encoding[] $r2;

        $r0 = new com.android.org.conscrypt.OpenSSLX509CertPath$Encoding;

        specialinvoke $r0.<com.android.org.conscrypt.OpenSSLX509CertPath$Encoding: void <init>(java.lang.String,int,java.lang.String)>("PKI_PATH", 0, "PkiPath");

        <com.android.org.conscrypt.OpenSSLX509CertPath$Encoding: com.android.org.conscrypt.OpenSSLX509CertPath$Encoding PKI_PATH> = $r0;

        $r1 = new com.android.org.conscrypt.OpenSSLX509CertPath$Encoding;

        specialinvoke $r1.<com.android.org.conscrypt.OpenSSLX509CertPath$Encoding: void <init>(java.lang.String,int,java.lang.String)>("PKCS7", 1, "PKCS7");

        <com.android.org.conscrypt.OpenSSLX509CertPath$Encoding: com.android.org.conscrypt.OpenSSLX509CertPath$Encoding PKCS7> = $r1;

        $r2 = newarray (com.android.org.conscrypt.OpenSSLX509CertPath$Encoding)[2];

        $r3 = <com.android.org.conscrypt.OpenSSLX509CertPath$Encoding: com.android.org.conscrypt.OpenSSLX509CertPath$Encoding PKI_PATH>;

        $r2[0] = $r3;

        $r4 = <com.android.org.conscrypt.OpenSSLX509CertPath$Encoding: com.android.org.conscrypt.OpenSSLX509CertPath$Encoding PKCS7>;

        $r2[1] = $r4;

        <com.android.org.conscrypt.OpenSSLX509CertPath$Encoding: com.android.org.conscrypt.OpenSSLX509CertPath$Encoding[] $VALUES> = $r2;

        return;
    }
}
