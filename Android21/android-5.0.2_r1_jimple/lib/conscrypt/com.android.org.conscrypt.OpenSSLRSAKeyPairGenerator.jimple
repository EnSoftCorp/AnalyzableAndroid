public class com.android.org.conscrypt.OpenSSLRSAKeyPairGenerator extends java.security.KeyPairGeneratorSpi
{
    private byte[] publicExponent;
    private int modulusBits;

    public void <init>()
    {
        com.android.org.conscrypt.OpenSSLRSAKeyPairGenerator r0;
        byte[] $r1;

        r0 := @this: com.android.org.conscrypt.OpenSSLRSAKeyPairGenerator;

        specialinvoke r0.<java.security.KeyPairGeneratorSpi: void <init>()>();

        $r1 = newarray (byte)[3];

        $r1[0] = 1;

        $r1[1] = 0;

        $r1[2] = 1;

        r0.<com.android.org.conscrypt.OpenSSLRSAKeyPairGenerator: byte[] publicExponent> = $r1;

        r0.<com.android.org.conscrypt.OpenSSLRSAKeyPairGenerator: int modulusBits> = 2048;

        return;
    }

    public java.security.KeyPair generateKeyPair()
    {
        com.android.org.conscrypt.OpenSSLRSAKeyPairGenerator r0;
        com.android.org.conscrypt.OpenSSLKey r1, $r4;
        com.android.org.conscrypt.OpenSSLRSAPrivateKey r2;
        com.android.org.conscrypt.OpenSSLRSAPublicKey r3, $r6;
        byte[] $r5;
        int $i0;
        long $l1;
        java.security.KeyPair $r7;

        r0 := @this: com.android.org.conscrypt.OpenSSLRSAKeyPairGenerator;

        $r4 = new com.android.org.conscrypt.OpenSSLKey;

        $i0 = r0.<com.android.org.conscrypt.OpenSSLRSAKeyPairGenerator: int modulusBits>;

        $r5 = r0.<com.android.org.conscrypt.OpenSSLRSAKeyPairGenerator: byte[] publicExponent>;

        $l1 = staticinvoke <com.android.org.conscrypt.NativeCrypto: long RSA_generate_key_ex(int,byte[])>($i0, $r5);

        specialinvoke $r4.<com.android.org.conscrypt.OpenSSLKey: void <init>(long)>($l1);

        r1 = $r4;

        r2 = staticinvoke <com.android.org.conscrypt.OpenSSLRSAPrivateKey: com.android.org.conscrypt.OpenSSLRSAPrivateKey getInstance(com.android.org.conscrypt.OpenSSLKey)>(r1);

        $r6 = new com.android.org.conscrypt.OpenSSLRSAPublicKey;

        specialinvoke $r6.<com.android.org.conscrypt.OpenSSLRSAPublicKey: void <init>(com.android.org.conscrypt.OpenSSLKey)>(r1);

        r3 = $r6;

        $r7 = new java.security.KeyPair;

        specialinvoke $r7.<java.security.KeyPair: void <init>(java.security.PublicKey,java.security.PrivateKey)>(r3, r2);

        return $r7;
    }

    public void initialize(int, java.security.SecureRandom)
    {
        com.android.org.conscrypt.OpenSSLRSAKeyPairGenerator r0;
        int i0;
        java.security.SecureRandom r1;

        r0 := @this: com.android.org.conscrypt.OpenSSLRSAKeyPairGenerator;

        i0 := @parameter0: int;

        r1 := @parameter1: java.security.SecureRandom;

        r0.<com.android.org.conscrypt.OpenSSLRSAKeyPairGenerator: int modulusBits> = i0;

        return;
    }

    public void initialize(java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) throws java.security.InvalidAlgorithmParameterException
    {
        com.android.org.conscrypt.OpenSSLRSAKeyPairGenerator r0;
        java.security.spec.AlgorithmParameterSpec r1;
        java.security.SecureRandom r2;
        java.security.spec.RSAKeyGenParameterSpec r3;
        java.math.BigInteger r4;
        boolean $z0;
        int $i0;
        byte[] $r5;
        java.security.InvalidAlgorithmParameterException $r6;

        r0 := @this: com.android.org.conscrypt.OpenSSLRSAKeyPairGenerator;

        r1 := @parameter0: java.security.spec.AlgorithmParameterSpec;

        r2 := @parameter1: java.security.SecureRandom;

        $z0 = r1 instanceof java.security.spec.RSAKeyGenParameterSpec;

        if $z0 != 0 goto label1;

        $r6 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r6.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("Only RSAKeyGenParameterSpec supported");

        throw $r6;

     label1:
        r3 = (java.security.spec.RSAKeyGenParameterSpec) r1;

        r4 = virtualinvoke r3.<java.security.spec.RSAKeyGenParameterSpec: java.math.BigInteger getPublicExponent()>();

        if r4 == null goto label2;

        $r5 = virtualinvoke r4.<java.math.BigInteger: byte[] toByteArray()>();

        r0.<com.android.org.conscrypt.OpenSSLRSAKeyPairGenerator: byte[] publicExponent> = $r5;

     label2:
        $i0 = virtualinvoke r3.<java.security.spec.RSAKeyGenParameterSpec: int getKeysize()>();

        r0.<com.android.org.conscrypt.OpenSSLRSAKeyPairGenerator: int modulusBits> = $i0;

        return;
    }
}
