public final class com.android.org.conscrypt.SSLNullSession extends java.lang.Object implements javax.net.ssl.SSLSession, java.lang.Cloneable
{
    private final java.util.HashMap values;
    long creationTime;
    long lastAccessedTime;

    public static javax.net.ssl.SSLSession getNullSession()
    {
        com.android.org.conscrypt.SSLNullSession $r0;

        $r0 = <com.android.org.conscrypt.SSLNullSession$DefaultHolder: com.android.org.conscrypt.SSLNullSession NULL_SESSION>;

        return $r0;
    }

    public void <init>()
    {
        com.android.org.conscrypt.SSLNullSession r0;
        java.util.HashMap $r1;
        long $l0, $l1;

        r0 := @this: com.android.org.conscrypt.SSLNullSession;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.android.org.conscrypt.SSLNullSession: java.util.HashMap values> = $r1;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.android.org.conscrypt.SSLNullSession: long creationTime> = $l0;

        $l1 = r0.<com.android.org.conscrypt.SSLNullSession: long creationTime>;

        r0.<com.android.org.conscrypt.SSLNullSession: long lastAccessedTime> = $l1;

        return;
    }

    public int getApplicationBufferSize()
    {
        com.android.org.conscrypt.SSLNullSession r0;

        r0 := @this: com.android.org.conscrypt.SSLNullSession;

        return 16384;
    }

    public java.lang.String getCipherSuite()
    {
        com.android.org.conscrypt.SSLNullSession r0;

        r0 := @this: com.android.org.conscrypt.SSLNullSession;

        return "SSL_NULL_WITH_NULL_NULL";
    }

    public long getCreationTime()
    {
        com.android.org.conscrypt.SSLNullSession r0;
        long $l0;

        r0 := @this: com.android.org.conscrypt.SSLNullSession;

        $l0 = r0.<com.android.org.conscrypt.SSLNullSession: long creationTime>;

        return $l0;
    }

    public byte[] getId()
    {
        com.android.org.conscrypt.SSLNullSession r0;
        byte[] $r1;

        r0 := @this: com.android.org.conscrypt.SSLNullSession;

        $r1 = <com.android.org.conscrypt.util.EmptyArray: byte[] BYTE>;

        return $r1;
    }

    public long getLastAccessedTime()
    {
        com.android.org.conscrypt.SSLNullSession r0;
        long $l0;

        r0 := @this: com.android.org.conscrypt.SSLNullSession;

        $l0 = r0.<com.android.org.conscrypt.SSLNullSession: long lastAccessedTime>;

        return $l0;
    }

    public java.security.cert.Certificate[] getLocalCertificates()
    {
        com.android.org.conscrypt.SSLNullSession r0;

        r0 := @this: com.android.org.conscrypt.SSLNullSession;

        return null;
    }

    public java.security.Principal getLocalPrincipal()
    {
        com.android.org.conscrypt.SSLNullSession r0;

        r0 := @this: com.android.org.conscrypt.SSLNullSession;

        return null;
    }

    public int getPacketBufferSize()
    {
        com.android.org.conscrypt.SSLNullSession r0;

        r0 := @this: com.android.org.conscrypt.SSLNullSession;

        return 18437;
    }

    public javax.security.cert.X509Certificate[] getPeerCertificateChain() throws javax.net.ssl.SSLPeerUnverifiedException
    {
        com.android.org.conscrypt.SSLNullSession r0;
        javax.net.ssl.SSLPeerUnverifiedException $r1;

        r0 := @this: com.android.org.conscrypt.SSLNullSession;

        $r1 = new javax.net.ssl.SSLPeerUnverifiedException;

        specialinvoke $r1.<javax.net.ssl.SSLPeerUnverifiedException: void <init>(java.lang.String)>("No peer certificate");

        throw $r1;
    }

    public java.security.cert.Certificate[] getPeerCertificates() throws javax.net.ssl.SSLPeerUnverifiedException
    {
        com.android.org.conscrypt.SSLNullSession r0;
        javax.net.ssl.SSLPeerUnverifiedException $r1;

        r0 := @this: com.android.org.conscrypt.SSLNullSession;

        $r1 = new javax.net.ssl.SSLPeerUnverifiedException;

        specialinvoke $r1.<javax.net.ssl.SSLPeerUnverifiedException: void <init>(java.lang.String)>("No peer certificate");

        throw $r1;
    }

    public java.lang.String getPeerHost()
    {
        com.android.org.conscrypt.SSLNullSession r0;

        r0 := @this: com.android.org.conscrypt.SSLNullSession;

        return null;
    }

    public int getPeerPort()
    {
        com.android.org.conscrypt.SSLNullSession r0;

        r0 := @this: com.android.org.conscrypt.SSLNullSession;

        return -1;
    }

    public java.security.Principal getPeerPrincipal() throws javax.net.ssl.SSLPeerUnverifiedException
    {
        com.android.org.conscrypt.SSLNullSession r0;
        javax.net.ssl.SSLPeerUnverifiedException $r1;

        r0 := @this: com.android.org.conscrypt.SSLNullSession;

        $r1 = new javax.net.ssl.SSLPeerUnverifiedException;

        specialinvoke $r1.<javax.net.ssl.SSLPeerUnverifiedException: void <init>(java.lang.String)>("No peer certificate");

        throw $r1;
    }

    public java.lang.String getProtocol()
    {
        com.android.org.conscrypt.SSLNullSession r0;

        r0 := @this: com.android.org.conscrypt.SSLNullSession;

        return "NONE";
    }

    public javax.net.ssl.SSLSessionContext getSessionContext()
    {
        com.android.org.conscrypt.SSLNullSession r0;

        r0 := @this: com.android.org.conscrypt.SSLNullSession;

        return null;
    }

    public java.lang.Object getValue(java.lang.String)
    {
        com.android.org.conscrypt.SSLNullSession r0;
        java.lang.String r1;
        java.util.HashMap $r2;
        java.lang.Object $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: com.android.org.conscrypt.SSLNullSession;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("name == null");

        throw $r4;

     label1:
        $r2 = r0.<com.android.org.conscrypt.SSLNullSession: java.util.HashMap values>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        return $r3;
    }

    public java.lang.String[] getValueNames()
    {
        com.android.org.conscrypt.SSLNullSession r0;
        java.util.HashMap $r1, $r3;
        java.util.Set $r2;
        int $i0;
        java.lang.String[] $r4, $r6;
        java.lang.Object[] $r5;

        r0 := @this: com.android.org.conscrypt.SSLNullSession;

        $r1 = r0.<com.android.org.conscrypt.SSLNullSession: java.util.HashMap values>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.util.Set keySet()>();

        $r3 = r0.<com.android.org.conscrypt.SSLNullSession: java.util.HashMap values>;

        $i0 = virtualinvoke $r3.<java.util.HashMap: int size()>();

        $r4 = newarray (java.lang.String)[$i0];

        $r5 = interfaceinvoke $r2.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        $r6 = (java.lang.String[]) $r5;

        return $r6;
    }

    public void invalidate()
    {
        com.android.org.conscrypt.SSLNullSession r0;

        r0 := @this: com.android.org.conscrypt.SSLNullSession;

        return;
    }

    public boolean isValid()
    {
        com.android.org.conscrypt.SSLNullSession r0;

        r0 := @this: com.android.org.conscrypt.SSLNullSession;

        return 0;
    }

    public void putValue(java.lang.String, java.lang.Object)
    {
        com.android.org.conscrypt.SSLNullSession r0;
        java.lang.String r1;
        java.lang.Object r2, r3;
        java.lang.IllegalArgumentException $r4;
        java.util.HashMap $r5;
        boolean $z0, $z1;
        javax.net.ssl.SSLSessionBindingEvent $r6, $r8;
        javax.net.ssl.SSLSessionBindingListener $r7, $r9;

        r0 := @this: com.android.org.conscrypt.SSLNullSession;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("name == null || value == null");

        throw $r4;

     label2:
        $r5 = r0.<com.android.org.conscrypt.SSLNullSession: java.util.HashMap values>;

        r3 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $z0 = r2 instanceof javax.net.ssl.SSLSessionBindingListener;

        if $z0 == 0 goto label3;

        $r9 = (javax.net.ssl.SSLSessionBindingListener) r2;

        $r8 = new javax.net.ssl.SSLSessionBindingEvent;

        specialinvoke $r8.<javax.net.ssl.SSLSessionBindingEvent: void <init>(javax.net.ssl.SSLSession,java.lang.String)>(r0, r1);

        interfaceinvoke $r9.<javax.net.ssl.SSLSessionBindingListener: void valueBound(javax.net.ssl.SSLSessionBindingEvent)>($r8);

     label3:
        $z1 = r3 instanceof javax.net.ssl.SSLSessionBindingListener;

        if $z1 == 0 goto label4;

        $r7 = (javax.net.ssl.SSLSessionBindingListener) r3;

        $r6 = new javax.net.ssl.SSLSessionBindingEvent;

        specialinvoke $r6.<javax.net.ssl.SSLSessionBindingEvent: void <init>(javax.net.ssl.SSLSession,java.lang.String)>(r0, r1);

        interfaceinvoke $r7.<javax.net.ssl.SSLSessionBindingListener: void valueUnbound(javax.net.ssl.SSLSessionBindingEvent)>($r6);

     label4:
        return;
    }

    public void removeValue(java.lang.String)
    {
        com.android.org.conscrypt.SSLNullSession r0;
        java.lang.String r1;
        java.lang.Object r2;
        javax.net.ssl.SSLSessionBindingListener r3;
        java.util.HashMap $r4;
        boolean $z0;
        javax.net.ssl.SSLSessionBindingEvent $r5;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: com.android.org.conscrypt.SSLNullSession;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("name == null");

        throw $r6;

     label1:
        $r4 = r0.<com.android.org.conscrypt.SSLNullSession: java.util.HashMap values>;

        r2 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r1);

        $z0 = r2 instanceof javax.net.ssl.SSLSessionBindingListener;

        if $z0 == 0 goto label2;

        r3 = (javax.net.ssl.SSLSessionBindingListener) r2;

        $r5 = new javax.net.ssl.SSLSessionBindingEvent;

        specialinvoke $r5.<javax.net.ssl.SSLSessionBindingEvent: void <init>(javax.net.ssl.SSLSession,java.lang.String)>(r0, r1);

        interfaceinvoke r3.<javax.net.ssl.SSLSessionBindingListener: void valueUnbound(javax.net.ssl.SSLSessionBindingEvent)>($r5);

     label2:
        return;
    }
}
