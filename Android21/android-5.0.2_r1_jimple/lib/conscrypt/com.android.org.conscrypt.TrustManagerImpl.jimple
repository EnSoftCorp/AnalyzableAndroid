public final class com.android.org.conscrypt.TrustManagerImpl extends java.lang.Object implements javax.net.ssl.X509TrustManager
{
    private final java.security.KeyStore rootKeyStore;
    private com.android.org.conscrypt.CertPinManager pinManager;
    private final com.android.org.conscrypt.TrustedCertificateStore trustedCertificateStore;
    private final java.security.cert.CertPathValidator validator;
    private final com.android.org.conscrypt.TrustedCertificateIndex trustedCertificateIndex;
    private final java.security.cert.X509Certificate[] acceptedIssuers;
    private final java.lang.Exception err;
    private final java.security.cert.CertificateFactory factory;

    public void <init>(java.security.KeyStore)
    {
        com.android.org.conscrypt.TrustManagerImpl r0;
        java.security.KeyStore r1;

        r0 := @this: com.android.org.conscrypt.TrustManagerImpl;

        r1 := @parameter0: java.security.KeyStore;

        specialinvoke r0.<com.android.org.conscrypt.TrustManagerImpl: void <init>(java.security.KeyStore,com.android.org.conscrypt.CertPinManager)>(r1, null);

        return;
    }

    public void <init>(java.security.KeyStore, com.android.org.conscrypt.CertPinManager)
    {
        com.android.org.conscrypt.TrustManagerImpl r0;
        java.security.KeyStore r1;
        com.android.org.conscrypt.CertPinManager r2;

        r0 := @this: com.android.org.conscrypt.TrustManagerImpl;

        r1 := @parameter0: java.security.KeyStore;

        r2 := @parameter1: com.android.org.conscrypt.CertPinManager;

        specialinvoke r0.<com.android.org.conscrypt.TrustManagerImpl: void <init>(java.security.KeyStore,com.android.org.conscrypt.CertPinManager,com.android.org.conscrypt.TrustedCertificateStore)>(r1, r2, null);

        return;
    }

    public void <init>(java.security.KeyStore, com.android.org.conscrypt.CertPinManager, com.android.org.conscrypt.TrustedCertificateStore)
    {
        com.android.org.conscrypt.TrustManagerImpl r0;
        java.security.KeyStore r1, r6;
        com.android.org.conscrypt.CertPinManager r2, $r17;
        com.android.org.conscrypt.TrustedCertificateStore r3, r7, $r16;
        java.security.cert.CertPathValidator r4;
        java.security.cert.CertificateFactory r5;
        com.android.org.conscrypt.TrustedCertificateIndex r8, $r15, $r19;
        java.security.cert.X509Certificate[] r9;
        java.lang.Exception r10, r11, $r20;
        java.lang.String $r12, $r13;
        boolean $z0;
        java.util.Set $r14;
        com.android.org.conscrypt.PinManagerException $r18, r22;
        java.lang.SecurityException $r21;

        r0 := @this: com.android.org.conscrypt.TrustManagerImpl;

        r1 := @parameter0: java.security.KeyStore;

        r2 := @parameter1: com.android.org.conscrypt.CertPinManager;

        r3 := @parameter2: com.android.org.conscrypt.TrustedCertificateStore;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r4 = null;

        r5 = null;

        r6 = null;

        r7 = null;

        r8 = null;

        r9 = null;

        r10 = null;

     label01:
        r4 = staticinvoke <java.security.cert.CertPathValidator: java.security.cert.CertPathValidator getInstance(java.lang.String)>("PKIX");

        r5 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String)>("X509");

        $r12 = "AndroidCAStore";

        $r13 = virtualinvoke r1.<java.security.KeyStore: java.lang.String getType()>();

        $z0 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z0 == 0 goto label04;

        r6 = r1;

        if r3 == null goto label02;

        $r16 = r3;

        goto label03;

     label02:
        $r16 = new com.android.org.conscrypt.TrustedCertificateStore;

        specialinvoke $r16.<com.android.org.conscrypt.TrustedCertificateStore: void <init>()>();

     label03:
        r7 = $r16;

        r9 = null;

        $r19 = new com.android.org.conscrypt.TrustedCertificateIndex;

        specialinvoke $r19.<com.android.org.conscrypt.TrustedCertificateIndex: void <init>()>();

        r8 = $r19;

        goto label05;

     label04:
        r6 = null;

        r7 = r3;

        r9 = staticinvoke <com.android.org.conscrypt.TrustManagerImpl: java.security.cert.X509Certificate[] acceptedIssuers(java.security.KeyStore)>(r1);

        $r15 = new com.android.org.conscrypt.TrustedCertificateIndex;

        $r14 = staticinvoke <com.android.org.conscrypt.TrustManagerImpl: java.util.Set trustAnchors(java.security.cert.X509Certificate[])>(r9);

        specialinvoke $r15.<com.android.org.conscrypt.TrustedCertificateIndex: void <init>(java.util.Set)>($r14);

        r8 = $r15;

     label05:
        goto label07;

     label06:
        $r20 := @caughtexception;

        r11 = $r20;

        r10 = r11;

     label07:
        if r2 == null goto label08;

        r0.<com.android.org.conscrypt.TrustManagerImpl: com.android.org.conscrypt.CertPinManager pinManager> = r2;

        goto label11;

     label08:
        $r17 = new com.android.org.conscrypt.CertPinManager;

        specialinvoke $r17.<com.android.org.conscrypt.CertPinManager: void <init>(com.android.org.conscrypt.TrustedCertificateStore)>(r7);

        r0.<com.android.org.conscrypt.TrustManagerImpl: com.android.org.conscrypt.CertPinManager pinManager> = $r17;

     label09:
        goto label11;

     label10:
        $r18 := @caughtexception;

        r22 = $r18;

        $r21 = new java.lang.SecurityException;

        specialinvoke $r21.<java.lang.SecurityException: void <init>(java.lang.String,java.lang.Throwable)>("Could not initialize CertPinManager", r22);

        throw $r21;

     label11:
        r0.<com.android.org.conscrypt.TrustManagerImpl: java.security.KeyStore rootKeyStore> = r6;

        r0.<com.android.org.conscrypt.TrustManagerImpl: com.android.org.conscrypt.TrustedCertificateStore trustedCertificateStore> = r7;

        r0.<com.android.org.conscrypt.TrustManagerImpl: java.security.cert.CertPathValidator validator> = r4;

        r0.<com.android.org.conscrypt.TrustManagerImpl: java.security.cert.CertificateFactory factory> = r5;

        r0.<com.android.org.conscrypt.TrustManagerImpl: com.android.org.conscrypt.TrustedCertificateIndex trustedCertificateIndex> = r8;

        r0.<com.android.org.conscrypt.TrustManagerImpl: java.security.cert.X509Certificate[] acceptedIssuers> = r9;

        r0.<com.android.org.conscrypt.TrustManagerImpl: java.lang.Exception err> = r10;

        return;

        catch java.lang.Exception from label01 to label05 with label06;
        catch com.android.org.conscrypt.PinManagerException from label08 to label09 with label10;
    }

    private static java.security.cert.X509Certificate[] acceptedIssuers(java.security.KeyStore)
    {
        java.security.KeyStore r0;
        java.util.ArrayList r1, $r5;
        java.util.Enumeration r2;
        java.lang.String r3;
        java.security.cert.X509Certificate r4;
        boolean $z0;
        int $i0;
        java.security.cert.X509Certificate[] $r6, $r8, $r12;
        java.lang.Object[] $r7;
        java.lang.Object $r9;
        java.security.cert.Certificate $r10;
        java.security.KeyStoreException $r11;

        r0 := @parameter0: java.security.KeyStore;

     label1:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r1 = $r5;

        r2 = virtualinvoke r0.<java.security.KeyStore: java.util.Enumeration aliases()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label4;

        $r9 = interfaceinvoke r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        r3 = (java.lang.String) $r9;

        $r10 = virtualinvoke r0.<java.security.KeyStore: java.security.cert.Certificate getCertificate(java.lang.String)>(r3);

        r4 = (java.security.cert.X509Certificate) $r10;

        if r4 == null goto label3;

        interfaceinvoke r1.<java.util.List: boolean add(java.lang.Object)>(r4);

     label3:
        goto label2;

     label4:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        $r6 = newarray (java.security.cert.X509Certificate)[$i0];

        $r7 = interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r6);

        $r8 = (java.security.cert.X509Certificate[]) $r7;

     label5:
        return $r8;

     label6:
        $r11 := @caughtexception;

        $r12 = newarray (java.security.cert.X509Certificate)[0];

        return $r12;

        catch java.security.KeyStoreException from label1 to label5 with label6;
    }

    private static java.util.Set trustAnchors(java.security.cert.X509Certificate[])
    {
        java.security.cert.X509Certificate[] r0, r2;
        java.util.HashSet r1, $r4;
        int i0, i1, $i2;
        java.security.cert.X509Certificate r3;
        java.security.cert.TrustAnchor $r5;

        r0 := @parameter0: java.security.cert.X509Certificate[];

        $r4 = new java.util.HashSet;

        $i2 = lengthof r0;

        specialinvoke $r4.<java.util.HashSet: void <init>(int)>($i2);

        r1 = $r4;

        r2 = r0;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = r2[i1];

        $r5 = new java.security.cert.TrustAnchor;

        specialinvoke $r5.<java.security.cert.TrustAnchor: void <init>(java.security.cert.X509Certificate,byte[])>(r3, null);

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>($r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r1;
    }

    public void checkClientTrusted(java.security.cert.X509Certificate[], java.lang.String) throws java.security.cert.CertificateException
    {
        com.android.org.conscrypt.TrustManagerImpl r0;
        java.security.cert.X509Certificate[] r1;
        java.lang.String r2;

        r0 := @this: com.android.org.conscrypt.TrustManagerImpl;

        r1 := @parameter0: java.security.cert.X509Certificate[];

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.org.conscrypt.TrustManagerImpl: java.util.List checkTrusted(java.security.cert.X509Certificate[],java.lang.String,java.lang.String,boolean)>(r1, r2, null, 1);

        return;
    }

    public void checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String) throws java.security.cert.CertificateException
    {
        com.android.org.conscrypt.TrustManagerImpl r0;
        java.security.cert.X509Certificate[] r1;
        java.lang.String r2;

        r0 := @this: com.android.org.conscrypt.TrustManagerImpl;

        r1 := @parameter0: java.security.cert.X509Certificate[];

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.org.conscrypt.TrustManagerImpl: java.util.List checkTrusted(java.security.cert.X509Certificate[],java.lang.String,java.lang.String,boolean)>(r1, r2, null, 0);

        return;
    }

    public java.util.List checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String, java.lang.String) throws java.security.cert.CertificateException
    {
        com.android.org.conscrypt.TrustManagerImpl r0;
        java.security.cert.X509Certificate[] r1;
        java.lang.String r2, r3;
        java.util.List $r4;

        r0 := @this: com.android.org.conscrypt.TrustManagerImpl;

        r1 := @parameter0: java.security.cert.X509Certificate[];

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r4 = specialinvoke r0.<com.android.org.conscrypt.TrustManagerImpl: java.util.List checkTrusted(java.security.cert.X509Certificate[],java.lang.String,java.lang.String,boolean)>(r1, r2, r3, 0);

        return $r4;
    }

    public boolean isUserAddedCertificate(java.security.cert.X509Certificate)
    {
        com.android.org.conscrypt.TrustManagerImpl r0;
        java.security.cert.X509Certificate r1;
        com.android.org.conscrypt.TrustedCertificateStore $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.org.conscrypt.TrustManagerImpl;

        r1 := @parameter0: java.security.cert.X509Certificate;

        $r2 = r0.<com.android.org.conscrypt.TrustManagerImpl: com.android.org.conscrypt.TrustedCertificateStore trustedCertificateStore>;

        if $r2 != null goto label1;

        return 0;

     label1:
        $r3 = r0.<com.android.org.conscrypt.TrustManagerImpl: com.android.org.conscrypt.TrustedCertificateStore trustedCertificateStore>;

        $z0 = virtualinvoke $r3.<com.android.org.conscrypt.TrustedCertificateStore: boolean isUserAddedCertificate(java.security.cert.X509Certificate)>(r1);

        return $z0;
    }

    public java.util.List checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String, javax.net.ssl.SSLSession) throws java.security.cert.CertificateException
    {
        com.android.org.conscrypt.TrustManagerImpl r0;
        java.security.cert.X509Certificate[] r1;
        java.lang.String r2, $r4;
        javax.net.ssl.SSLSession r3;
        java.util.List $r5;

        r0 := @this: com.android.org.conscrypt.TrustManagerImpl;

        r1 := @parameter0: java.security.cert.X509Certificate[];

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: javax.net.ssl.SSLSession;

        $r4 = interfaceinvoke r3.<javax.net.ssl.SSLSession: java.lang.String getPeerHost()>();

        $r5 = specialinvoke r0.<com.android.org.conscrypt.TrustManagerImpl: java.util.List checkTrusted(java.security.cert.X509Certificate[],java.lang.String,java.lang.String,boolean)>(r1, r2, $r4, 0);

        return $r5;
    }

    public void handleTrustStorageUpdate()
    {
        com.android.org.conscrypt.TrustManagerImpl r0;
        java.security.cert.X509Certificate[] $r1, $r2;
        com.android.org.conscrypt.TrustedCertificateIndex $r3, $r5;
        java.util.Set $r4;

        r0 := @this: com.android.org.conscrypt.TrustManagerImpl;

        $r1 = r0.<com.android.org.conscrypt.TrustManagerImpl: java.security.cert.X509Certificate[] acceptedIssuers>;

        if $r1 != null goto label1;

        $r5 = r0.<com.android.org.conscrypt.TrustManagerImpl: com.android.org.conscrypt.TrustedCertificateIndex trustedCertificateIndex>;

        virtualinvoke $r5.<com.android.org.conscrypt.TrustedCertificateIndex: void reset()>();

        goto label2;

     label1:
        $r3 = r0.<com.android.org.conscrypt.TrustManagerImpl: com.android.org.conscrypt.TrustedCertificateIndex trustedCertificateIndex>;

        $r2 = r0.<com.android.org.conscrypt.TrustManagerImpl: java.security.cert.X509Certificate[] acceptedIssuers>;

        $r4 = staticinvoke <com.android.org.conscrypt.TrustManagerImpl: java.util.Set trustAnchors(java.security.cert.X509Certificate[])>($r2);

        virtualinvoke $r3.<com.android.org.conscrypt.TrustedCertificateIndex: void reset(java.util.Set)>($r4);

     label2:
        return;
    }

    private java.util.List checkTrusted(java.security.cert.X509Certificate[], java.lang.String, java.lang.String, boolean) throws java.security.cert.CertificateException
    {
        com.android.org.conscrypt.TrustManagerImpl r0;
        java.security.cert.X509Certificate[] r1, r5;
        java.lang.String r2, r3;
        boolean z0, $z2, $z3, z7;
        java.util.HashSet r4, $r13;
        java.util.ArrayList r6, $r15;
        java.util.Iterator r7;
        java.security.cert.TrustAnchor r8, r44;
        java.security.cert.X509Certificate r9, $r23, $r27, $r32, r43;
        com.android.org.conscrypt.PinManagerException r10, $r35;
        java.lang.IllegalArgumentException $r11;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.Exception $r12, $r36;
        java.util.List $r14, $r19;
        java.lang.Object $r16, $r33;
        com.android.org.conscrypt.TrustedCertificateIndex $r17, $r28;
        java.security.cert.CertificateFactory $r18;
        java.security.cert.PKIXParameters $r20, r46;
        com.android.org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker $r21;
        java.security.cert.CertPathValidator $r24;
        java.security.cert.CertificateException $r26, $r29, $r37, $r39, $r41, $r42;
        java.security.cert.CertPathValidatorException $r30, $r34, $r38, r48;
        com.android.org.conscrypt.CertPinManager $r31;
        java.security.InvalidAlgorithmParameterException $r40, r47;
        java.security.cert.CertPath r45;

        r0 := @this: com.android.org.conscrypt.TrustManagerImpl;

        r1 := @parameter0: java.security.cert.X509Certificate[];

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        if r1 == null goto label01;

        $i0 = lengthof r1;

        if $i0 == 0 goto label01;

        if r2 == null goto label01;

        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i1 != 0 goto label02;

     label01:
        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null or zero-length parameter");

        throw $r11;

     label02:
        $r12 = r0.<com.android.org.conscrypt.TrustManagerImpl: java.lang.Exception err>;

        if $r12 == null goto label03;

        $r37 = new java.security.cert.CertificateException;

        $r36 = r0.<com.android.org.conscrypt.TrustManagerImpl: java.lang.Exception err>;

        specialinvoke $r37.<java.security.cert.CertificateException: void <init>(java.lang.Throwable)>($r36);

        throw $r37;

     label03:
        $r13 = new java.util.HashSet;

        specialinvoke $r13.<java.util.HashSet: void <init>()>();

        r4 = $r13;

        r5 = specialinvoke r0.<com.android.org.conscrypt.TrustManagerImpl: java.security.cert.X509Certificate[] cleanupCertChainAndFindTrustAnchors(java.security.cert.X509Certificate[],java.util.Set)>(r1, r4);

        $r15 = new java.util.ArrayList;

        specialinvoke $r15.<java.util.ArrayList: void <init>()>();

        r6 = $r15;

        $r14 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r5);

        interfaceinvoke r6.<java.util.List: boolean addAll(java.util.Collection)>($r14);

        r7 = interfaceinvoke r4.<java.util.Set: java.util.Iterator iterator()>();

     label04:
        $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label05;

        $r33 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.security.cert.TrustAnchor) $r33;

        $r32 = virtualinvoke r8.<java.security.cert.TrustAnchor: java.security.cert.X509Certificate getTrustedCert()>();

        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>($r32);

        goto label04;

     label05:
        $i2 = interfaceinvoke r6.<java.util.List: int size()>();

        $i3 = $i2 - 1;

        $r16 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>($i3);

        r43 = (java.security.cert.X509Certificate) $r16;

     label06:
        $r17 = r0.<com.android.org.conscrypt.TrustManagerImpl: com.android.org.conscrypt.TrustedCertificateIndex trustedCertificateIndex>;

        r44 = virtualinvoke $r17.<com.android.org.conscrypt.TrustedCertificateIndex: java.security.cert.TrustAnchor findByIssuerAndSignature(java.security.cert.X509Certificate)>(r43);

        if r44 != null goto label07;

        goto label08;

     label07:
        r9 = virtualinvoke r44.<java.security.cert.TrustAnchor: java.security.cert.X509Certificate getTrustedCert()>();

        if r9 == r43 goto label08;

        interfaceinvoke r6.<java.util.List: boolean add(java.lang.Object)>(r9);

        r43 = r9;

        goto label06;

     label08:
        $r18 = r0.<com.android.org.conscrypt.TrustManagerImpl: java.security.cert.CertificateFactory factory>;

        $r19 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r5);

        r45 = virtualinvoke $r18.<java.security.cert.CertificateFactory: java.security.cert.CertPath generateCertPath(java.util.List)>($r19);

        if r3 == null goto label13;

     label09:
        $r31 = r0.<com.android.org.conscrypt.TrustManagerImpl: com.android.org.conscrypt.CertPinManager pinManager>;

        z7 = virtualinvoke $r31.<com.android.org.conscrypt.CertPinManager: boolean isChainValid(java.lang.String,java.util.List)>(r3, r6);

     label10:
        goto label12;

     label11:
        $r35 := @caughtexception;

        r10 = $r35;

        $r41 = new java.security.cert.CertificateException;

        specialinvoke $r41.<java.security.cert.CertificateException: void <init>(java.lang.Throwable)>(r10);

        throw $r41;

     label12:
        if z7 != 0 goto label13;

        $r29 = new java.security.cert.CertificateException;

        $r34 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r34.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Certificate path is not properly pinned.", null, r45, -1);

        specialinvoke $r29.<java.security.cert.CertificateException: void <init>(java.lang.Throwable)>($r34);

        throw $r29;

     label13:
        $i4 = lengthof r5;

        if $i4 != 0 goto label14;

        return r6;

     label14:
        $z3 = interfaceinvoke r4.<java.util.Set: boolean isEmpty()>();

        if $z3 == 0 goto label15;

        $r26 = new java.security.cert.CertificateException;

        $r30 = new java.security.cert.CertPathValidatorException;

        specialinvoke $r30.<java.security.cert.CertPathValidatorException: void <init>(java.lang.String,java.lang.Throwable,java.security.cert.CertPath,int)>("Trust anchor for certification path not found.", null, r45, -1);

        specialinvoke $r26.<java.security.cert.CertificateException: void <init>(java.lang.Throwable)>($r30);

        throw $r26;

     label15:
        staticinvoke <com.android.org.conscrypt.ChainStrengthAnalyzer: void check(java.security.cert.X509Certificate[])>(r5);

     label16:
        $r20 = new java.security.cert.PKIXParameters;

        specialinvoke $r20.<java.security.cert.PKIXParameters: void <init>(java.util.Set)>(r4);

        r46 = $r20;

        virtualinvoke r46.<java.security.cert.PKIXParameters: void setRevocationEnabled(boolean)>(0);

        $r21 = new com.android.org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker;

        $r23 = r5[0];

        specialinvoke $r21.<com.android.org.conscrypt.TrustManagerImpl$ExtendedKeyUsagePKIXCertPathChecker: void <init>(boolean,java.security.cert.X509Certificate,com.android.org.conscrypt.TrustManagerImpl$1)>(z0, $r23, null);

        virtualinvoke r46.<java.security.cert.PKIXParameters: void addCertPathChecker(java.security.cert.PKIXCertPathChecker)>($r21);

        $r24 = r0.<com.android.org.conscrypt.TrustManagerImpl: java.security.cert.CertPathValidator validator>;

        virtualinvoke $r24.<java.security.cert.CertPathValidator: java.security.cert.CertPathValidatorResult validate(java.security.cert.CertPath,java.security.cert.CertPathParameters)>(r45, r46);

        i6 = 1;

     label17:
        $i5 = lengthof r5;

        if i6 >= $i5 goto label18;

        $r28 = r0.<com.android.org.conscrypt.TrustManagerImpl: com.android.org.conscrypt.TrustedCertificateIndex trustedCertificateIndex>;

        $r27 = r5[i6];

        virtualinvoke $r28.<com.android.org.conscrypt.TrustedCertificateIndex: java.security.cert.TrustAnchor index(java.security.cert.X509Certificate)>($r27);

        i6 = i6 + 1;

        goto label17;

     label18:
        goto label21;

     label19:
        $r40 := @caughtexception;

        r47 = $r40;

        $r39 = new java.security.cert.CertificateException;

        specialinvoke $r39.<java.security.cert.CertificateException: void <init>(java.lang.Throwable)>(r47);

        throw $r39;

     label20:
        $r38 := @caughtexception;

        r48 = $r38;

        $r42 = new java.security.cert.CertificateException;

        specialinvoke $r42.<java.security.cert.CertificateException: void <init>(java.lang.Throwable)>(r48);

        throw $r42;

     label21:
        return r6;

        catch com.android.org.conscrypt.PinManagerException from label09 to label10 with label11;
        catch java.security.InvalidAlgorithmParameterException from label16 to label18 with label19;
        catch java.security.cert.CertPathValidatorException from label16 to label18 with label20;
    }

    private java.security.cert.X509Certificate[] cleanupCertChainAndFindTrustAnchors(java.security.cert.X509Certificate[], java.util.Set)
    {
        com.android.org.conscrypt.TrustManagerImpl r0;
        java.security.cert.X509Certificate[] r1, r3, $r8, r17;
        java.util.Set r2;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10;
        boolean z0, $z1, $z4;
        java.security.cert.X509Certificate r4, $r7, $r9, $r11, $r13, $r14;
        java.security.cert.TrustAnchor r5, r16;
        java.lang.Object[] $r6;
        java.security.Principal $r10, $r12;
        java.lang.Object $r15;

        r0 := @this: com.android.org.conscrypt.TrustManagerImpl;

        r1 := @parameter0: java.security.cert.X509Certificate[];

        r2 := @parameter1: java.util.Set;

        r3 = r1;

        i0 = 0;

     label01:
        $i2 = lengthof r1;

        if i0 >= $i2 goto label07;

        z0 = 0;

        i1 = i0 + 1;

     label02:
        $i5 = lengthof r1;

        if i1 >= $i5 goto label05;

        $r11 = r1[i0];

        $r10 = virtualinvoke $r11.<java.security.cert.X509Certificate: java.security.Principal getIssuerDN()>();

        $r13 = r1[i1];

        $r12 = virtualinvoke $r13.<java.security.cert.X509Certificate: java.security.Principal getSubjectDN()>();

        $z4 = interfaceinvoke $r10.<java.security.Principal: boolean equals(java.lang.Object)>($r12);

        if $z4 == 0 goto label04;

        z0 = 1;

        $i6 = i0 + 1;

        if i1 == $i6 goto label05;

        if r1 != r3 goto label03;

        $r15 = virtualinvoke r3.<java.lang.Object: java.lang.Object clone()>();

        r1 = (java.security.cert.X509Certificate[]) $r15;

     label03:
        r4 = r1[i1];

        $i7 = i0 + 1;

        $r14 = r1[$i7];

        r1[i1] = $r14;

        $i8 = i0 + 1;

        r1[$i8] = r4;

        goto label05;

     label04:
        i1 = i1 + 1;

        goto label02;

     label05:
        if z0 != 0 goto label06;

        goto label07;

     label06:
        i0 = i0 + 1;

        goto label01;

     label07:
        i9 = 0;

     label08:
        if i9 > i0 goto label10;

        $r9 = r1[i9];

        r16 = specialinvoke r0.<com.android.org.conscrypt.TrustManagerImpl: java.security.cert.TrustAnchor findTrustAnchorBySubjectAndPublicKey(java.security.cert.X509Certificate)>($r9);

        if r16 == null goto label09;

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>(r16);

        goto label10;

     label09:
        i9 = i9 + 1;

        goto label08;

     label10:
        i10 = i9;

        $i3 = lengthof r1;

        if i10 != $i3 goto label11;

        $r8 = r1;

        goto label12;

     label11:
        $r6 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r1, i10);

        $r8 = (java.security.cert.X509Certificate[]) $r6;

     label12:
        r17 = $r8;

        $z1 = interfaceinvoke r2.<java.util.Set: boolean isEmpty()>();

        if $z1 == 0 goto label13;

        $i4 = i9 - 1;

        $r7 = r17[$i4];

        r5 = specialinvoke r0.<com.android.org.conscrypt.TrustManagerImpl: java.security.cert.TrustAnchor findTrustAnchorByIssuerAndSignature(java.security.cert.X509Certificate)>($r7);

        if r5 == null goto label13;

        interfaceinvoke r2.<java.util.Set: boolean add(java.lang.Object)>(r5);

     label13:
        return r17;
    }

    private java.security.cert.TrustAnchor findTrustAnchorByIssuerAndSignature(java.security.cert.X509Certificate)
    {
        com.android.org.conscrypt.TrustManagerImpl r0;
        java.security.cert.X509Certificate r1, r3;
        java.security.cert.TrustAnchor r2, $r8;
        com.android.org.conscrypt.TrustedCertificateIndex $r4, $r7;
        com.android.org.conscrypt.TrustedCertificateStore $r5, $r6;

        r0 := @this: com.android.org.conscrypt.TrustManagerImpl;

        r1 := @parameter0: java.security.cert.X509Certificate;

        $r4 = r0.<com.android.org.conscrypt.TrustManagerImpl: com.android.org.conscrypt.TrustedCertificateIndex trustedCertificateIndex>;

        r2 = virtualinvoke $r4.<com.android.org.conscrypt.TrustedCertificateIndex: java.security.cert.TrustAnchor findByIssuerAndSignature(java.security.cert.X509Certificate)>(r1);

        if r2 == null goto label1;

        return r2;

     label1:
        $r5 = r0.<com.android.org.conscrypt.TrustManagerImpl: com.android.org.conscrypt.TrustedCertificateStore trustedCertificateStore>;

        if $r5 != null goto label2;

        return null;

     label2:
        $r6 = r0.<com.android.org.conscrypt.TrustManagerImpl: com.android.org.conscrypt.TrustedCertificateStore trustedCertificateStore>;

        r3 = virtualinvoke $r6.<com.android.org.conscrypt.TrustedCertificateStore: java.security.cert.X509Certificate findIssuer(java.security.cert.X509Certificate)>(r1);

        if r3 == null goto label3;

        $r7 = r0.<com.android.org.conscrypt.TrustManagerImpl: com.android.org.conscrypt.TrustedCertificateIndex trustedCertificateIndex>;

        $r8 = virtualinvoke $r7.<com.android.org.conscrypt.TrustedCertificateIndex: java.security.cert.TrustAnchor index(java.security.cert.X509Certificate)>(r3);

        return $r8;

     label3:
        return null;
    }

    private java.security.cert.TrustAnchor findTrustAnchorBySubjectAndPublicKey(java.security.cert.X509Certificate)
    {
        com.android.org.conscrypt.TrustManagerImpl r0;
        java.security.cert.X509Certificate r1, r3;
        java.security.cert.TrustAnchor r2, $r8;
        com.android.org.conscrypt.TrustedCertificateIndex $r4, $r7;
        com.android.org.conscrypt.TrustedCertificateStore $r5, $r6;

        r0 := @this: com.android.org.conscrypt.TrustManagerImpl;

        r1 := @parameter0: java.security.cert.X509Certificate;

        $r4 = r0.<com.android.org.conscrypt.TrustManagerImpl: com.android.org.conscrypt.TrustedCertificateIndex trustedCertificateIndex>;

        r2 = virtualinvoke $r4.<com.android.org.conscrypt.TrustedCertificateIndex: java.security.cert.TrustAnchor findBySubjectAndPublicKey(java.security.cert.X509Certificate)>(r1);

        if r2 == null goto label1;

        return r2;

     label1:
        $r5 = r0.<com.android.org.conscrypt.TrustManagerImpl: com.android.org.conscrypt.TrustedCertificateStore trustedCertificateStore>;

        if $r5 != null goto label2;

        return null;

     label2:
        $r6 = r0.<com.android.org.conscrypt.TrustManagerImpl: com.android.org.conscrypt.TrustedCertificateStore trustedCertificateStore>;

        r3 = virtualinvoke $r6.<com.android.org.conscrypt.TrustedCertificateStore: java.security.cert.X509Certificate getTrustAnchor(java.security.cert.X509Certificate)>(r1);

        if r3 == null goto label3;

        $r7 = r0.<com.android.org.conscrypt.TrustManagerImpl: com.android.org.conscrypt.TrustedCertificateIndex trustedCertificateIndex>;

        $r8 = virtualinvoke $r7.<com.android.org.conscrypt.TrustedCertificateIndex: java.security.cert.TrustAnchor index(java.security.cert.X509Certificate)>(r3);

        return $r8;

     label3:
        return null;
    }

    public java.security.cert.X509Certificate[] getAcceptedIssuers()
    {
        com.android.org.conscrypt.TrustManagerImpl r0;
        java.security.cert.X509Certificate[] $r1, $r3, $r4;
        java.security.KeyStore $r2;
        java.lang.Object $r5;

        r0 := @this: com.android.org.conscrypt.TrustManagerImpl;

        $r1 = r0.<com.android.org.conscrypt.TrustManagerImpl: java.security.cert.X509Certificate[] acceptedIssuers>;

        if $r1 == null goto label1;

        $r4 = r0.<com.android.org.conscrypt.TrustManagerImpl: java.security.cert.X509Certificate[] acceptedIssuers>;

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (java.security.cert.X509Certificate[]) $r5;

        goto label2;

     label1:
        $r2 = r0.<com.android.org.conscrypt.TrustManagerImpl: java.security.KeyStore rootKeyStore>;

        $r3 = staticinvoke <com.android.org.conscrypt.TrustManagerImpl: java.security.cert.X509Certificate[] acceptedIssuers(java.security.KeyStore)>($r2);

     label2:
        return $r3;
    }
}
