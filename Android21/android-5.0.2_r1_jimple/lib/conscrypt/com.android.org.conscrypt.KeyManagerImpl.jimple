public class com.android.org.conscrypt.KeyManagerImpl extends javax.net.ssl.X509ExtendedKeyManager
{
    private final java.util.Hashtable hash;

    public void <init>(java.security.KeyStore, char[])
    {
        com.android.org.conscrypt.KeyManagerImpl r0;
        java.security.KeyStore r1;
        char[] r2;
        java.util.Enumeration r3;
        java.security.KeyStore$PrivateKeyEntry r5;
        java.util.Hashtable $r6, $r10;
        boolean $z0, $z1;
        java.lang.Object $r7;
        java.security.KeyStore$PasswordProtection $r8;
        java.security.KeyStore$Entry $r9;
        java.security.NoSuchAlgorithmException $r12;
        java.security.KeyStoreException $r13, $r14;
        java.security.UnrecoverableEntryException $r15;
        java.lang.String r16;

        r0 := @this: com.android.org.conscrypt.KeyManagerImpl;

        r1 := @parameter0: java.security.KeyStore;

        r2 := @parameter1: char[];

        specialinvoke r0.<javax.net.ssl.X509ExtendedKeyManager: void <init>()>();

        $r6 = new java.util.Hashtable;

        specialinvoke $r6.<java.util.Hashtable: void <init>()>();

        r0.<com.android.org.conscrypt.KeyManagerImpl: java.util.Hashtable hash> = $r6;

     label01:
        r3 = virtualinvoke r1.<java.security.KeyStore: java.util.Enumeration aliases()>();

     label02:
        goto label04;

     label03:
        $r14 := @caughtexception;

        return;

     label04:
        $z0 = interfaceinvoke r3.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label11;

        $r7 = interfaceinvoke r3.<java.util.Enumeration: java.lang.Object nextElement()>();

        r16 = (java.lang.String) $r7;

     label05:
        $z1 = virtualinvoke r1.<java.security.KeyStore: boolean entryInstanceOf(java.lang.String,java.lang.Class)>(r16, class "java/security/KeyStore$PrivateKeyEntry");

        if $z1 == 0 goto label06;

        $r8 = new java.security.KeyStore$PasswordProtection;

        specialinvoke $r8.<java.security.KeyStore$PasswordProtection: void <init>(char[])>(r2);

        $r9 = virtualinvoke r1.<java.security.KeyStore: java.security.KeyStore$Entry getEntry(java.lang.String,java.security.KeyStore$ProtectionParameter)>(r16, $r8);

        r5 = (java.security.KeyStore$PrivateKeyEntry) $r9;

        $r10 = r0.<com.android.org.conscrypt.KeyManagerImpl: java.util.Hashtable hash>;

        virtualinvoke $r10.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r16, r5);

     label06:
        goto label10;

     label07:
        $r13 := @caughtexception;

        goto label04;

     label08:
        $r15 := @caughtexception;

        goto label04;

     label09:
        $r12 := @caughtexception;

        goto label04;

     label10:
        goto label04;

     label11:
        return;

        catch java.security.KeyStoreException from label01 to label02 with label03;
        catch java.security.KeyStoreException from label05 to label06 with label07;
        catch java.security.UnrecoverableEntryException from label05 to label06 with label08;
        catch java.security.NoSuchAlgorithmException from label05 to label06 with label09;
    }

    public java.lang.String chooseClientAlias(java.lang.String[], java.security.Principal[], java.net.Socket)
    {
        com.android.org.conscrypt.KeyManagerImpl r0;
        java.lang.String[] r1, r4;
        java.security.Principal[] r2;
        java.net.Socket r3;
        java.lang.String $r5;

        r0 := @this: com.android.org.conscrypt.KeyManagerImpl;

        r1 := @parameter0: java.lang.String[];

        r2 := @parameter1: java.security.Principal[];

        r3 := @parameter2: java.net.Socket;

        r4 = specialinvoke r0.<com.android.org.conscrypt.KeyManagerImpl: java.lang.String[] chooseAlias(java.lang.String[],java.security.Principal[])>(r1, r2);

        if r4 != null goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r5 = r4[0];

     label2:
        return $r5;
    }

    public java.lang.String chooseServerAlias(java.lang.String, java.security.Principal[], java.net.Socket)
    {
        com.android.org.conscrypt.KeyManagerImpl r0;
        java.lang.String r1, $r6;
        java.security.Principal[] r2;
        java.net.Socket r3;
        java.lang.String[] r4, $r5;

        r0 := @this: com.android.org.conscrypt.KeyManagerImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.security.Principal[];

        r3 := @parameter2: java.net.Socket;

        $r5 = newarray (java.lang.String)[1];

        $r5[0] = r1;

        r4 = specialinvoke r0.<com.android.org.conscrypt.KeyManagerImpl: java.lang.String[] chooseAlias(java.lang.String[],java.security.Principal[])>($r5, r2);

        if r4 != null goto label1;

        $r6 = null;

        goto label2;

     label1:
        $r6 = r4[0];

     label2:
        return $r6;
    }

    public java.security.cert.X509Certificate[] getCertificateChain(java.lang.String)
    {
        com.android.org.conscrypt.KeyManagerImpl r0;
        java.lang.String r1;
        java.security.cert.Certificate[] r2;
        java.security.cert.X509Certificate[] r3;
        int i0, $i1, $i2;
        java.util.Hashtable $r4, $r5;
        boolean $z0, $z1;
        java.lang.Object $r6;
        java.security.KeyStore$PrivateKeyEntry $r7;
        java.security.cert.Certificate $r8, $r9;
        java.security.cert.X509Certificate $r10;

        r0 := @this: com.android.org.conscrypt.KeyManagerImpl;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        return null;

     label1:
        $r4 = r0.<com.android.org.conscrypt.KeyManagerImpl: java.util.Hashtable hash>;

        $z0 = virtualinvoke $r4.<java.util.Hashtable: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label4;

        $r5 = r0.<com.android.org.conscrypt.KeyManagerImpl: java.util.Hashtable hash>;

        $r6 = virtualinvoke $r5.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        $r7 = (java.security.KeyStore$PrivateKeyEntry) $r6;

        r2 = virtualinvoke $r7.<java.security.KeyStore$PrivateKeyEntry: java.security.cert.Certificate[] getCertificateChain()>();

        $r8 = r2[0];

        $z1 = $r8 instanceof java.security.cert.X509Certificate;

        if $z1 == 0 goto label4;

        $i1 = lengthof r2;

        r3 = newarray (java.security.cert.X509Certificate)[$i1];

        i0 = 0;

     label2:
        $i2 = lengthof r2;

        if i0 >= $i2 goto label3;

        $r9 = r2[i0];

        $r10 = (java.security.cert.X509Certificate) $r9;

        r3[i0] = $r10;

        i0 = i0 + 1;

        goto label2;

     label3:
        return r3;

     label4:
        return null;
    }

    public java.lang.String[] getClientAliases(java.lang.String, java.security.Principal[])
    {
        com.android.org.conscrypt.KeyManagerImpl r0;
        java.lang.String r1;
        java.security.Principal[] r2;
        java.lang.String[] $r3, $r4;

        r0 := @this: com.android.org.conscrypt.KeyManagerImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.security.Principal[];

        $r3 = newarray (java.lang.String)[1];

        $r3[0] = r1;

        $r4 = specialinvoke r0.<com.android.org.conscrypt.KeyManagerImpl: java.lang.String[] chooseAlias(java.lang.String[],java.security.Principal[])>($r3, r2);

        return $r4;
    }

    public java.lang.String[] getServerAliases(java.lang.String, java.security.Principal[])
    {
        com.android.org.conscrypt.KeyManagerImpl r0;
        java.lang.String r1;
        java.security.Principal[] r2;
        java.lang.String[] $r3, $r4;

        r0 := @this: com.android.org.conscrypt.KeyManagerImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.security.Principal[];

        $r3 = newarray (java.lang.String)[1];

        $r3[0] = r1;

        $r4 = specialinvoke r0.<com.android.org.conscrypt.KeyManagerImpl: java.lang.String[] chooseAlias(java.lang.String[],java.security.Principal[])>($r3, r2);

        return $r4;
    }

    public java.security.PrivateKey getPrivateKey(java.lang.String)
    {
        com.android.org.conscrypt.KeyManagerImpl r0;
        java.lang.String r1;
        java.util.Hashtable $r2, $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.security.KeyStore$PrivateKeyEntry $r5;
        java.security.PrivateKey $r6;

        r0 := @this: com.android.org.conscrypt.KeyManagerImpl;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<com.android.org.conscrypt.KeyManagerImpl: java.util.Hashtable hash>;

        $z0 = virtualinvoke $r2.<java.util.Hashtable: boolean containsKey(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        $r3 = r0.<com.android.org.conscrypt.KeyManagerImpl: java.util.Hashtable hash>;

        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        $r5 = (java.security.KeyStore$PrivateKeyEntry) $r4;

        $r6 = virtualinvoke $r5.<java.security.KeyStore$PrivateKeyEntry: java.security.PrivateKey getPrivateKey()>();

        return $r6;

     label2:
        return null;
    }

    public java.lang.String chooseEngineClientAlias(java.lang.String[], java.security.Principal[], javax.net.ssl.SSLEngine)
    {
        com.android.org.conscrypt.KeyManagerImpl r0;
        java.lang.String[] r1, r4;
        java.security.Principal[] r2;
        javax.net.ssl.SSLEngine r3;
        java.lang.String $r5;

        r0 := @this: com.android.org.conscrypt.KeyManagerImpl;

        r1 := @parameter0: java.lang.String[];

        r2 := @parameter1: java.security.Principal[];

        r3 := @parameter2: javax.net.ssl.SSLEngine;

        r4 = specialinvoke r0.<com.android.org.conscrypt.KeyManagerImpl: java.lang.String[] chooseAlias(java.lang.String[],java.security.Principal[])>(r1, r2);

        if r4 != null goto label1;

        $r5 = null;

        goto label2;

     label1:
        $r5 = r4[0];

     label2:
        return $r5;
    }

    public java.lang.String chooseEngineServerAlias(java.lang.String, java.security.Principal[], javax.net.ssl.SSLEngine)
    {
        com.android.org.conscrypt.KeyManagerImpl r0;
        java.lang.String r1, $r6;
        java.security.Principal[] r2;
        javax.net.ssl.SSLEngine r3;
        java.lang.String[] r4, $r5;

        r0 := @this: com.android.org.conscrypt.KeyManagerImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.security.Principal[];

        r3 := @parameter2: javax.net.ssl.SSLEngine;

        $r5 = newarray (java.lang.String)[1];

        $r5[0] = r1;

        r4 = specialinvoke r0.<com.android.org.conscrypt.KeyManagerImpl: java.lang.String[] chooseAlias(java.lang.String[],java.security.Principal[])>($r5, r2);

        if r4 != null goto label1;

        $r6 = null;

        goto label2;

     label1:
        $r6 = r4[0];

     label2:
        return $r6;
    }

    private java.lang.String[] chooseAlias(java.lang.String[], java.security.Principal[])
    {
        com.android.org.conscrypt.KeyManagerImpl r0;
        java.lang.String[] r1, r12, $r22, $r24;
        java.security.Principal[] r2;
        java.util.List r3, $r19;
        java.util.ArrayList r4, $r21;
        java.util.Enumeration r5;
        java.lang.String r6, r10, r11, r13, r14, $r29, $r31;
        java.security.KeyStore$PrivateKeyEntry r7;
        java.security.cert.Certificate[] r8, r15;
        java.security.cert.Certificate r9, r16;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8;
        javax.security.auth.x500.X500Principal r17;
        java.security.cert.X509Certificate r18, $r30;
        java.util.Hashtable $r20, $r27;
        boolean $z0, $z1, $z2, $z3, $z5, $z6, $z7;
        java.lang.Object $r23, $r28;
        java.lang.Object[] $r25;
        java.security.PublicKey $r26;
        java.util.Locale $r32;

        r0 := @this: com.android.org.conscrypt.KeyManagerImpl;

        r1 := @parameter0: java.lang.String[];

        r2 := @parameter1: java.security.Principal[];

        if r1 == null goto label01;

        $i5 = lengthof r1;

        if $i5 != 0 goto label02;

     label01:
        return null;

     label02:
        if r2 != null goto label03;

        $r19 = null;

        goto label04;

     label03:
        $r19 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r2);

     label04:
        r3 = $r19;

        $r21 = new java.util.ArrayList;

        specialinvoke $r21.<java.util.ArrayList: void <init>()>();

        r4 = $r21;

        $r20 = r0.<com.android.org.conscrypt.KeyManagerImpl: java.util.Hashtable hash>;

        r5 = virtualinvoke $r20.<java.util.Hashtable: java.util.Enumeration keys()>();

     label05:
        $z0 = interfaceinvoke r5.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label21;

        $r23 = interfaceinvoke r5.<java.util.Enumeration: java.lang.Object nextElement()>();

        r6 = (java.lang.String) $r23;

        $r27 = r0.<com.android.org.conscrypt.KeyManagerImpl: java.util.Hashtable hash>;

        $r28 = virtualinvoke $r27.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r6);

        r7 = (java.security.KeyStore$PrivateKeyEntry) $r28;

        r8 = virtualinvoke r7.<java.security.KeyStore$PrivateKeyEntry: java.security.cert.Certificate[] getCertificateChain()>();

        r9 = r8[0];

        $r26 = virtualinvoke r9.<java.security.cert.Certificate: java.security.PublicKey getPublicKey()>();

        r10 = interfaceinvoke $r26.<java.security.PublicKey: java.lang.String getAlgorithm()>();

        $z2 = r9 instanceof java.security.cert.X509Certificate;

        if $z2 == 0 goto label06;

        $r30 = (java.security.cert.X509Certificate) r9;

        $r29 = virtualinvoke $r30.<java.security.cert.X509Certificate: java.lang.String getSigAlgName()>();

        $r32 = <java.util.Locale: java.util.Locale US>;

        $r31 = virtualinvoke $r29.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r32);

        goto label07;

     label06:
        $r31 = null;

     label07:
        r11 = $r31;

        r12 = r1;

        i0 = lengthof r12;

        i1 = 0;

     label08:
        if i1 >= i0 goto label20;

        r13 = r12[i1];

        if r13 != null goto label09;

        goto label19;

     label09:
        i2 = virtualinvoke r13.<java.lang.String: int indexOf(int)>(95);

        if i2 != -1 goto label10;

        r14 = null;

        goto label11;

     label10:
        $i7 = i2 + 1;

        r14 = virtualinvoke r13.<java.lang.String: java.lang.String substring(int)>($i7);

        r13 = virtualinvoke r13.<java.lang.String: java.lang.String substring(int,int)>(0, i2);

     label11:
        $z3 = virtualinvoke r10.<java.lang.String: boolean equals(java.lang.Object)>(r13);

        if $z3 != 0 goto label12;

        goto label19;

     label12:
        if r14 == null goto label13;

        if r11 == null goto label13;

        $z7 = virtualinvoke r11.<java.lang.String: boolean contains(java.lang.CharSequence)>(r14);

        if $z7 != 0 goto label13;

        goto label19;

     label13:
        if r2 == null goto label14;

        $i8 = lengthof r2;

        if $i8 != 0 goto label15;

     label14:
        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

        goto label19;

     label15:
        r15 = r8;

        i3 = lengthof r15;

        i4 = 0;

     label16:
        if i4 >= i3 goto label19;

        r16 = r15[i4];

        $z6 = r16 instanceof java.security.cert.X509Certificate;

        if $z6 != 0 goto label17;

        goto label18;

     label17:
        r18 = (java.security.cert.X509Certificate) r16;

        r17 = virtualinvoke r18.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $z5 = interfaceinvoke r3.<java.util.List: boolean contains(java.lang.Object)>(r17);

        if $z5 == 0 goto label18;

        virtualinvoke r4.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

     label18:
        i4 = i4 + 1;

        goto label16;

     label19:
        i1 = i1 + 1;

        goto label08;

     label20:
        goto label05;

     label21:
        $z1 = virtualinvoke r4.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 != 0 goto label22;

        $i6 = virtualinvoke r4.<java.util.ArrayList: int size()>();

        $r24 = newarray (java.lang.String)[$i6];

        $r25 = virtualinvoke r4.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r24);

        $r22 = (java.lang.String[]) $r25;

        return $r22;

     label22:
        return null;
    }
}
