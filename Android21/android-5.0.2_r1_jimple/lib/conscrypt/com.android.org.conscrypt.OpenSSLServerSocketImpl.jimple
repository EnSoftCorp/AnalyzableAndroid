public class com.android.org.conscrypt.OpenSSLServerSocketImpl extends javax.net.ssl.SSLServerSocket
{
    private final com.android.org.conscrypt.SSLParametersImpl sslParameters;
    private boolean channelIdEnabled;

    protected void <init>(com.android.org.conscrypt.SSLParametersImpl) throws java.io.IOException
    {
        com.android.org.conscrypt.OpenSSLServerSocketImpl r0;
        com.android.org.conscrypt.SSLParametersImpl r1;

        r0 := @this: com.android.org.conscrypt.OpenSSLServerSocketImpl;

        r1 := @parameter0: com.android.org.conscrypt.SSLParametersImpl;

        specialinvoke r0.<javax.net.ssl.SSLServerSocket: void <init>()>();

        r0.<com.android.org.conscrypt.OpenSSLServerSocketImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters> = r1;

        return;
    }

    protected void <init>(int, com.android.org.conscrypt.SSLParametersImpl) throws java.io.IOException
    {
        com.android.org.conscrypt.OpenSSLServerSocketImpl r0;
        int i0;
        com.android.org.conscrypt.SSLParametersImpl r1;

        r0 := @this: com.android.org.conscrypt.OpenSSLServerSocketImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.org.conscrypt.SSLParametersImpl;

        specialinvoke r0.<javax.net.ssl.SSLServerSocket: void <init>(int)>(i0);

        r0.<com.android.org.conscrypt.OpenSSLServerSocketImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters> = r1;

        return;
    }

    protected void <init>(int, int, com.android.org.conscrypt.SSLParametersImpl) throws java.io.IOException
    {
        com.android.org.conscrypt.OpenSSLServerSocketImpl r0;
        int i0, i1;
        com.android.org.conscrypt.SSLParametersImpl r1;

        r0 := @this: com.android.org.conscrypt.OpenSSLServerSocketImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: com.android.org.conscrypt.SSLParametersImpl;

        specialinvoke r0.<javax.net.ssl.SSLServerSocket: void <init>(int,int)>(i0, i1);

        r0.<com.android.org.conscrypt.OpenSSLServerSocketImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters> = r1;

        return;
    }

    protected void <init>(int, int, java.net.InetAddress, com.android.org.conscrypt.SSLParametersImpl) throws java.io.IOException
    {
        com.android.org.conscrypt.OpenSSLServerSocketImpl r0;
        int i0, i1;
        java.net.InetAddress r1;
        com.android.org.conscrypt.SSLParametersImpl r2;

        r0 := @this: com.android.org.conscrypt.OpenSSLServerSocketImpl;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.net.InetAddress;

        r2 := @parameter3: com.android.org.conscrypt.SSLParametersImpl;

        specialinvoke r0.<javax.net.ssl.SSLServerSocket: void <init>(int,int,java.net.InetAddress)>(i0, i1, r1);

        r0.<com.android.org.conscrypt.OpenSSLServerSocketImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters> = r2;

        return;
    }

    public boolean getEnableSessionCreation()
    {
        com.android.org.conscrypt.OpenSSLServerSocketImpl r0;
        com.android.org.conscrypt.SSLParametersImpl $r1;
        boolean $z0;

        r0 := @this: com.android.org.conscrypt.OpenSSLServerSocketImpl;

        $r1 = r0.<com.android.org.conscrypt.OpenSSLServerSocketImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters>;

        $z0 = virtualinvoke $r1.<com.android.org.conscrypt.SSLParametersImpl: boolean getEnableSessionCreation()>();

        return $z0;
    }

    public void setEnableSessionCreation(boolean)
    {
        com.android.org.conscrypt.OpenSSLServerSocketImpl r0;
        boolean z0;
        com.android.org.conscrypt.SSLParametersImpl $r1;

        r0 := @this: com.android.org.conscrypt.OpenSSLServerSocketImpl;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.org.conscrypt.OpenSSLServerSocketImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters>;

        virtualinvoke $r1.<com.android.org.conscrypt.SSLParametersImpl: void setEnableSessionCreation(boolean)>(z0);

        return;
    }

    public java.lang.String[] getSupportedProtocols()
    {
        com.android.org.conscrypt.OpenSSLServerSocketImpl r0;
        java.lang.String[] $r1;

        r0 := @this: com.android.org.conscrypt.OpenSSLServerSocketImpl;

        $r1 = staticinvoke <com.android.org.conscrypt.NativeCrypto: java.lang.String[] getSupportedProtocols()>();

        return $r1;
    }

    public java.lang.String[] getEnabledProtocols()
    {
        com.android.org.conscrypt.OpenSSLServerSocketImpl r0;
        com.android.org.conscrypt.SSLParametersImpl $r1;
        java.lang.String[] $r2;

        r0 := @this: com.android.org.conscrypt.OpenSSLServerSocketImpl;

        $r1 = r0.<com.android.org.conscrypt.OpenSSLServerSocketImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters>;

        $r2 = virtualinvoke $r1.<com.android.org.conscrypt.SSLParametersImpl: java.lang.String[] getEnabledProtocols()>();

        return $r2;
    }

    public void setEnabledProtocols(java.lang.String[])
    {
        com.android.org.conscrypt.OpenSSLServerSocketImpl r0;
        java.lang.String[] r1;
        com.android.org.conscrypt.SSLParametersImpl $r2;

        r0 := @this: com.android.org.conscrypt.OpenSSLServerSocketImpl;

        r1 := @parameter0: java.lang.String[];

        $r2 = r0.<com.android.org.conscrypt.OpenSSLServerSocketImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters>;

        virtualinvoke $r2.<com.android.org.conscrypt.SSLParametersImpl: void setEnabledProtocols(java.lang.String[])>(r1);

        return;
    }

    public java.lang.String[] getSupportedCipherSuites()
    {
        com.android.org.conscrypt.OpenSSLServerSocketImpl r0;
        java.lang.String[] $r1;

        r0 := @this: com.android.org.conscrypt.OpenSSLServerSocketImpl;

        $r1 = staticinvoke <com.android.org.conscrypt.NativeCrypto: java.lang.String[] getSupportedCipherSuites()>();

        return $r1;
    }

    public java.lang.String[] getEnabledCipherSuites()
    {
        com.android.org.conscrypt.OpenSSLServerSocketImpl r0;
        com.android.org.conscrypt.SSLParametersImpl $r1;
        java.lang.String[] $r2;

        r0 := @this: com.android.org.conscrypt.OpenSSLServerSocketImpl;

        $r1 = r0.<com.android.org.conscrypt.OpenSSLServerSocketImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters>;

        $r2 = virtualinvoke $r1.<com.android.org.conscrypt.SSLParametersImpl: java.lang.String[] getEnabledCipherSuites()>();

        return $r2;
    }

    public void setChannelIdEnabled(boolean)
    {
        com.android.org.conscrypt.OpenSSLServerSocketImpl r0;
        boolean z0;

        r0 := @this: com.android.org.conscrypt.OpenSSLServerSocketImpl;

        z0 := @parameter0: boolean;

        r0.<com.android.org.conscrypt.OpenSSLServerSocketImpl: boolean channelIdEnabled> = z0;

        return;
    }

    public boolean isChannelIdEnabled()
    {
        com.android.org.conscrypt.OpenSSLServerSocketImpl r0;
        boolean $z0;

        r0 := @this: com.android.org.conscrypt.OpenSSLServerSocketImpl;

        $z0 = r0.<com.android.org.conscrypt.OpenSSLServerSocketImpl: boolean channelIdEnabled>;

        return $z0;
    }

    public void setEnabledCipherSuites(java.lang.String[])
    {
        com.android.org.conscrypt.OpenSSLServerSocketImpl r0;
        java.lang.String[] r1;
        com.android.org.conscrypt.SSLParametersImpl $r2;

        r0 := @this: com.android.org.conscrypt.OpenSSLServerSocketImpl;

        r1 := @parameter0: java.lang.String[];

        $r2 = r0.<com.android.org.conscrypt.OpenSSLServerSocketImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters>;

        virtualinvoke $r2.<com.android.org.conscrypt.SSLParametersImpl: void setEnabledCipherSuites(java.lang.String[])>(r1);

        return;
    }

    public boolean getWantClientAuth()
    {
        com.android.org.conscrypt.OpenSSLServerSocketImpl r0;
        com.android.org.conscrypt.SSLParametersImpl $r1;
        boolean $z0;

        r0 := @this: com.android.org.conscrypt.OpenSSLServerSocketImpl;

        $r1 = r0.<com.android.org.conscrypt.OpenSSLServerSocketImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters>;

        $z0 = virtualinvoke $r1.<com.android.org.conscrypt.SSLParametersImpl: boolean getWantClientAuth()>();

        return $z0;
    }

    public void setWantClientAuth(boolean)
    {
        com.android.org.conscrypt.OpenSSLServerSocketImpl r0;
        boolean z0;
        com.android.org.conscrypt.SSLParametersImpl $r1;

        r0 := @this: com.android.org.conscrypt.OpenSSLServerSocketImpl;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.org.conscrypt.OpenSSLServerSocketImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters>;

        virtualinvoke $r1.<com.android.org.conscrypt.SSLParametersImpl: void setWantClientAuth(boolean)>(z0);

        return;
    }

    public boolean getNeedClientAuth()
    {
        com.android.org.conscrypt.OpenSSLServerSocketImpl r0;
        com.android.org.conscrypt.SSLParametersImpl $r1;
        boolean $z0;

        r0 := @this: com.android.org.conscrypt.OpenSSLServerSocketImpl;

        $r1 = r0.<com.android.org.conscrypt.OpenSSLServerSocketImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters>;

        $z0 = virtualinvoke $r1.<com.android.org.conscrypt.SSLParametersImpl: boolean getNeedClientAuth()>();

        return $z0;
    }

    public void setNeedClientAuth(boolean)
    {
        com.android.org.conscrypt.OpenSSLServerSocketImpl r0;
        boolean z0;
        com.android.org.conscrypt.SSLParametersImpl $r1;

        r0 := @this: com.android.org.conscrypt.OpenSSLServerSocketImpl;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.org.conscrypt.OpenSSLServerSocketImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters>;

        virtualinvoke $r1.<com.android.org.conscrypt.SSLParametersImpl: void setNeedClientAuth(boolean)>(z0);

        return;
    }

    public void setUseClientMode(boolean)
    {
        com.android.org.conscrypt.OpenSSLServerSocketImpl r0;
        boolean z0;
        com.android.org.conscrypt.SSLParametersImpl $r1;

        r0 := @this: com.android.org.conscrypt.OpenSSLServerSocketImpl;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.org.conscrypt.OpenSSLServerSocketImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters>;

        virtualinvoke $r1.<com.android.org.conscrypt.SSLParametersImpl: void setUseClientMode(boolean)>(z0);

        return;
    }

    public boolean getUseClientMode()
    {
        com.android.org.conscrypt.OpenSSLServerSocketImpl r0;
        com.android.org.conscrypt.SSLParametersImpl $r1;
        boolean $z0;

        r0 := @this: com.android.org.conscrypt.OpenSSLServerSocketImpl;

        $r1 = r0.<com.android.org.conscrypt.OpenSSLServerSocketImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters>;

        $z0 = virtualinvoke $r1.<com.android.org.conscrypt.SSLParametersImpl: boolean getUseClientMode()>();

        return $z0;
    }

    public java.net.Socket accept() throws java.io.IOException
    {
        com.android.org.conscrypt.OpenSSLServerSocketImpl r0;
        com.android.org.conscrypt.OpenSSLSocketImpl r1, $r2;
        com.android.org.conscrypt.SSLParametersImpl $r3;
        boolean $z0;

        r0 := @this: com.android.org.conscrypt.OpenSSLServerSocketImpl;

        $r2 = new com.android.org.conscrypt.OpenSSLSocketImpl;

        $r3 = r0.<com.android.org.conscrypt.OpenSSLServerSocketImpl: com.android.org.conscrypt.SSLParametersImpl sslParameters>;

        specialinvoke $r2.<com.android.org.conscrypt.OpenSSLSocketImpl: void <init>(com.android.org.conscrypt.SSLParametersImpl)>($r3);

        r1 = $r2;

        $z0 = r0.<com.android.org.conscrypt.OpenSSLServerSocketImpl: boolean channelIdEnabled>;

        virtualinvoke r1.<com.android.org.conscrypt.OpenSSLSocketImpl: void setChannelIdEnabled(boolean)>($z0);

        virtualinvoke r0.<com.android.org.conscrypt.OpenSSLServerSocketImpl: void implAccept(java.net.Socket)>(r1);

        return r1;
    }
}
