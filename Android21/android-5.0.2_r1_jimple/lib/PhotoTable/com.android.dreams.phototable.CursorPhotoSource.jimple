public abstract class com.android.dreams.phototable.CursorPhotoSource extends com.android.dreams.phototable.PhotoSource
{
    protected static final int UNINITIALIZED;
    protected static final int INVALID;

    public void <init>(android.content.Context, android.content.SharedPreferences)
    {
        com.android.dreams.phototable.CursorPhotoSource r0;
        android.content.Context r1;
        android.content.SharedPreferences r2;

        r0 := @this: com.android.dreams.phototable.CursorPhotoSource;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.SharedPreferences;

        specialinvoke r0.<com.android.dreams.phototable.PhotoSource: void <init>(android.content.Context,android.content.SharedPreferences)>(r1, r2);

        return;
    }

    public void <init>(android.content.Context, android.content.SharedPreferences, com.android.dreams.phototable.PhotoSource)
    {
        com.android.dreams.phototable.CursorPhotoSource r0;
        android.content.Context r1;
        android.content.SharedPreferences r2;
        com.android.dreams.phototable.PhotoSource r3;

        r0 := @this: com.android.dreams.phototable.CursorPhotoSource;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.SharedPreferences;

        r3 := @parameter2: com.android.dreams.phototable.PhotoSource;

        specialinvoke r0.<com.android.dreams.phototable.PhotoSource: void <init>(android.content.Context,android.content.SharedPreferences,com.android.dreams.phototable.PhotoSource)>(r1, r2, r3);

        return;
    }

    protected com.android.dreams.phototable.PhotoSource$ImageData naturalNext(com.android.dreams.phototable.PhotoSource$ImageData)
    {
        com.android.dreams.phototable.CursorPhotoSource r0;
        com.android.dreams.phototable.PhotoSource$ImageData r1, r2;
        android.database.Cursor $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        int $i0, $i1;
        boolean $z2, $z3;

        r0 := @this: com.android.dreams.phototable.CursorPhotoSource;

        r1 := @parameter0: com.android.dreams.phototable.PhotoSource$ImageData;

        $r3 = r1.<com.android.dreams.phototable.PhotoSource$ImageData: android.database.Cursor cursor>;

        if $r3 == null goto label1;

        $r10 = r1.<com.android.dreams.phototable.PhotoSource$ImageData: android.database.Cursor cursor>;

        $z3 = interfaceinvoke $r10.<android.database.Cursor: boolean isClosed()>();

        if $z3 == 0 goto label2;

     label1:
        virtualinvoke r0.<com.android.dreams.phototable.CursorPhotoSource: void openCursor(com.android.dreams.phototable.PhotoSource$ImageData)>(r1);

     label2:
        virtualinvoke r0.<com.android.dreams.phototable.CursorPhotoSource: void findPosition(com.android.dreams.phototable.PhotoSource$ImageData)>(r1);

        $r4 = r1.<com.android.dreams.phototable.PhotoSource$ImageData: android.database.Cursor cursor>;

        $i0 = r1.<com.android.dreams.phototable.PhotoSource$ImageData: int position>;

        interfaceinvoke $r4.<android.database.Cursor: boolean moveToPosition(int)>($i0);

        $r5 = r1.<com.android.dreams.phototable.PhotoSource$ImageData: android.database.Cursor cursor>;

        interfaceinvoke $r5.<android.database.Cursor: boolean moveToNext()>();

        r2 = null;

        $r6 = r1.<com.android.dreams.phototable.PhotoSource$ImageData: android.database.Cursor cursor>;

        $z2 = interfaceinvoke $r6.<android.database.Cursor: boolean isAfterLast()>();

        if $z2 != 0 goto label3;

        $r7 = r1.<com.android.dreams.phototable.PhotoSource$ImageData: android.database.Cursor cursor>;

        r2 = virtualinvoke r0.<com.android.dreams.phototable.CursorPhotoSource: com.android.dreams.phototable.PhotoSource$ImageData unpackImageData(android.database.Cursor,com.android.dreams.phototable.PhotoSource$ImageData)>($r7, null);

        $r8 = r1.<com.android.dreams.phototable.PhotoSource$ImageData: android.database.Cursor cursor>;

        r2.<com.android.dreams.phototable.PhotoSource$ImageData: android.database.Cursor cursor> = $r8;

        $r9 = r1.<com.android.dreams.phototable.PhotoSource$ImageData: android.database.Cursor cursor>;

        $i1 = interfaceinvoke $r9.<android.database.Cursor: int getPosition()>();

        r2.<com.android.dreams.phototable.PhotoSource$ImageData: int position> = $i1;

     label3:
        return r2;
    }

    protected com.android.dreams.phototable.PhotoSource$ImageData naturalPrevious(com.android.dreams.phototable.PhotoSource$ImageData)
    {
        com.android.dreams.phototable.CursorPhotoSource r0;
        com.android.dreams.phototable.PhotoSource$ImageData r1, r2;
        android.database.Cursor $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        int $i0, $i1;
        boolean $z2, $z3;

        r0 := @this: com.android.dreams.phototable.CursorPhotoSource;

        r1 := @parameter0: com.android.dreams.phototable.PhotoSource$ImageData;

        $r3 = r1.<com.android.dreams.phototable.PhotoSource$ImageData: android.database.Cursor cursor>;

        if $r3 == null goto label1;

        $r10 = r1.<com.android.dreams.phototable.PhotoSource$ImageData: android.database.Cursor cursor>;

        $z3 = interfaceinvoke $r10.<android.database.Cursor: boolean isClosed()>();

        if $z3 == 0 goto label2;

     label1:
        virtualinvoke r0.<com.android.dreams.phototable.CursorPhotoSource: void openCursor(com.android.dreams.phototable.PhotoSource$ImageData)>(r1);

     label2:
        virtualinvoke r0.<com.android.dreams.phototable.CursorPhotoSource: void findPosition(com.android.dreams.phototable.PhotoSource$ImageData)>(r1);

        $r4 = r1.<com.android.dreams.phototable.PhotoSource$ImageData: android.database.Cursor cursor>;

        $i0 = r1.<com.android.dreams.phototable.PhotoSource$ImageData: int position>;

        interfaceinvoke $r4.<android.database.Cursor: boolean moveToPosition(int)>($i0);

        $r5 = r1.<com.android.dreams.phototable.PhotoSource$ImageData: android.database.Cursor cursor>;

        interfaceinvoke $r5.<android.database.Cursor: boolean moveToPrevious()>();

        r2 = null;

        $r6 = r1.<com.android.dreams.phototable.PhotoSource$ImageData: android.database.Cursor cursor>;

        $z2 = interfaceinvoke $r6.<android.database.Cursor: boolean isBeforeFirst()>();

        if $z2 != 0 goto label3;

        $r7 = r1.<com.android.dreams.phototable.PhotoSource$ImageData: android.database.Cursor cursor>;

        r2 = virtualinvoke r0.<com.android.dreams.phototable.CursorPhotoSource: com.android.dreams.phototable.PhotoSource$ImageData unpackImageData(android.database.Cursor,com.android.dreams.phototable.PhotoSource$ImageData)>($r7, null);

        $r8 = r1.<com.android.dreams.phototable.PhotoSource$ImageData: android.database.Cursor cursor>;

        r2.<com.android.dreams.phototable.PhotoSource$ImageData: android.database.Cursor cursor> = $r8;

        $r9 = r1.<com.android.dreams.phototable.PhotoSource$ImageData: android.database.Cursor cursor>;

        $i1 = interfaceinvoke $r9.<android.database.Cursor: int getPosition()>();

        r2.<com.android.dreams.phototable.PhotoSource$ImageData: int position> = $i1;

     label3:
        return r2;
    }

    protected void donePaging(com.android.dreams.phototable.PhotoSource$ImageData)
    {
        com.android.dreams.phototable.CursorPhotoSource r0;
        com.android.dreams.phototable.PhotoSource$ImageData r1;
        android.database.Cursor $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: com.android.dreams.phototable.CursorPhotoSource;

        r1 := @parameter0: com.android.dreams.phototable.PhotoSource$ImageData;

        $r2 = r1.<com.android.dreams.phototable.PhotoSource$ImageData: android.database.Cursor cursor>;

        if $r2 == null goto label1;

        $r3 = r1.<com.android.dreams.phototable.PhotoSource$ImageData: android.database.Cursor cursor>;

        $z0 = interfaceinvoke $r3.<android.database.Cursor: boolean isClosed()>();

        if $z0 != 0 goto label1;

        $r4 = r1.<com.android.dreams.phototable.PhotoSource$ImageData: android.database.Cursor cursor>;

        interfaceinvoke $r4.<android.database.Cursor: void close()>();

     label1:
        return;
    }

    protected abstract void openCursor(com.android.dreams.phototable.PhotoSource$ImageData);

    protected abstract void findPosition(com.android.dreams.phototable.PhotoSource$ImageData);

    protected abstract com.android.dreams.phototable.PhotoSource$ImageData unpackImageData(android.database.Cursor, com.android.dreams.phototable.PhotoSource$ImageData);

    public static void <clinit>()
    {
        <com.android.dreams.phototable.CursorPhotoSource: int INVALID> = -2;

        <com.android.dreams.phototable.CursorPhotoSource: int UNINITIALIZED> = -1;

        return;
    }
}
