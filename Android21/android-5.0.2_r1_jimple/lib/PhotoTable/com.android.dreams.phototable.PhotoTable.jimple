public class com.android.dreams.phototable.PhotoTable extends android.widget.FrameLayout
{
    private static final java.lang.String TAG;
    private static final boolean DEBUG;
    private static final int NEXT;
    private static final int PREV;
    private static java.util.Random sRNG;
    private final com.android.dreams.phototable.PhotoTable$Launcher mLauncher;
    private final com.android.dreams.phototable.PhotoTable$FocusReaper mFocusReaper;
    private final com.android.dreams.phototable.PhotoTable$SelectionReaper mSelectionReaper;
    private final java.util.LinkedList mOnTable;
    private final int mDropPeriod;
    private final int mFastDropPeriod;
    private final int mNowDropDelay;
    private final float mImageRatio;
    private final float mTableRatio;
    private final float mImageRotationLimit;
    private final float mThrowRotation;
    private final float mThrowSpeed;
    private final boolean mTapToExit;
    private final int mTableCapacity;
    private final int mRedealCount;
    private final int mInset;
    private final com.android.dreams.phototable.PhotoSource mPhotoSource;
    private final android.content.res.Resources mResources;
    private final android.view.animation.Interpolator mThrowInterpolator;
    private final android.view.animation.Interpolator mDropInterpolator;
    private final com.android.dreams.phototable.DragGestureDetector mDragGestureDetector;
    private final com.android.dreams.phototable.EdgeSwipeDetector mEdgeSwipeDetector;
    private final com.android.dreams.phototable.KeyboardInterpreter mKeyboardInterpreter;
    private final boolean mStoryModeEnabled;
    private final boolean mBackgroudOptimization;
    private final long mPickUpDuration;
    private final int mMaxSelectionTime;
    private final int mMaxFocusTime;
    private android.service.dreams.DreamService mDream;
    private com.android.dreams.phototable.PhotoTable$PhotoLaunchTask mPhotoLaunchTask;
    private com.android.dreams.phototable.PhotoTable$LoadNaturalSiblingTask[] mLoadOnDeckTasks;
    private boolean mStarted;
    private boolean mIsLandscape;
    private int mLongSide;
    private int mShortSide;
    private int mWidth;
    private int mHeight;
    private android.view.View mSelection;
    private android.view.View[] mOnDeck;
    private android.view.View mFocus;
    private int mHighlightColor;
    private android.view.ViewGroup mBackground;
    private android.view.ViewGroup mStageLeft;
    private android.view.View mScrim;
    private final java.util.Set mWaitingToJoinBackground;
    static final boolean $assertionsDisabled;

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.content.Context r1, $r27, $r28;
        android.util.AttributeSet r2;
        android.content.res.Resources $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r22, $r23, $r24, $r25;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        long $l7;
        boolean $z0, $z1, $z2;
        com.android.dreams.phototable.SoftLandingInterpolator $r21;
        android.view.animation.DecelerateInterpolator $r26;
        com.android.dreams.phototable.PhotoSourcePlexor $r29;
        java.util.LinkedList $r30;
        com.android.dreams.phototable.PhotoTable$SelectionReaper $r31;
        com.android.dreams.phototable.DragGestureDetector $r32;
        com.android.dreams.phototable.EdgeSwipeDetector $r33;
        com.android.dreams.phototable.KeyboardInterpreter $r34;
        android.content.SharedPreferences $r35;
        java.util.HashSet $r36;
        com.android.dreams.phototable.PhotoTable$Launcher $r37;
        com.android.dreams.phototable.PhotoTable$FocusReaper $r38;
        com.android.dreams.phototable.PhotoTable$LoadNaturalSiblingTask[] $r39;
        android.view.View[] $r40;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        $r3 = virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: android.content.res.Resources getResources()>();

        r0.<com.android.dreams.phototable.PhotoTable: android.content.res.Resources mResources> = $r3;

        $r4 = r0.<com.android.dreams.phototable.PhotoTable: android.content.res.Resources mResources>;

        $i0 = virtualinvoke $r4.<android.content.res.Resources: int getDimensionPixelSize(int)>(2131361792);

        r0.<com.android.dreams.phototable.PhotoTable: int mInset> = $i0;

        $r5 = r0.<com.android.dreams.phototable.PhotoTable: android.content.res.Resources mResources>;

        $i1 = virtualinvoke $r5.<android.content.res.Resources: int getInteger(int)>(2131230720);

        r0.<com.android.dreams.phototable.PhotoTable: int mDropPeriod> = $i1;

        $r6 = r0.<com.android.dreams.phototable.PhotoTable: android.content.res.Resources mResources>;

        $i2 = virtualinvoke $r6.<android.content.res.Resources: int getInteger(int)>(2131230721);

        r0.<com.android.dreams.phototable.PhotoTable: int mFastDropPeriod> = $i2;

        $r7 = r0.<com.android.dreams.phototable.PhotoTable: android.content.res.Resources mResources>;

        $i3 = virtualinvoke $r7.<android.content.res.Resources: int getInteger(int)>(2131230723);

        r0.<com.android.dreams.phototable.PhotoTable: int mNowDropDelay> = $i3;

        $r8 = r0.<com.android.dreams.phototable.PhotoTable: android.content.res.Resources mResources>;

        $i4 = virtualinvoke $r8.<android.content.res.Resources: int getInteger(int)>(2131230727);

        $f0 = (float) $i4;

        $f1 = $f0 / 1000000.0F;

        r0.<com.android.dreams.phototable.PhotoTable: float mImageRatio> = $f1;

        $r9 = r0.<com.android.dreams.phototable.PhotoTable: android.content.res.Resources mResources>;

        $i5 = virtualinvoke $r9.<android.content.res.Resources: int getInteger(int)>(2131230728);

        $f3 = (float) $i5;

        $f2 = $f3 / 1000000.0F;

        r0.<com.android.dreams.phototable.PhotoTable: float mTableRatio> = $f2;

        $r10 = r0.<com.android.dreams.phototable.PhotoTable: android.content.res.Resources mResources>;

        $i6 = virtualinvoke $r10.<android.content.res.Resources: int getInteger(int)>(2131230729);

        $f4 = (float) $i6;

        r0.<com.android.dreams.phototable.PhotoTable: float mImageRotationLimit> = $f4;

        $r11 = r0.<com.android.dreams.phototable.PhotoTable: android.content.res.Resources mResources>;

        $f5 = virtualinvoke $r11.<android.content.res.Resources: float getDimension(int)>(2131361793);

        r0.<com.android.dreams.phototable.PhotoTable: float mThrowSpeed> = $f5;

        $r12 = r0.<com.android.dreams.phototable.PhotoTable: android.content.res.Resources mResources>;

        $i8 = virtualinvoke $r12.<android.content.res.Resources: int getInteger(int)>(2131230744);

        $l7 = (long) $i8;

        r0.<com.android.dreams.phototable.PhotoTable: long mPickUpDuration> = $l7;

        $r13 = r0.<com.android.dreams.phototable.PhotoTable: android.content.res.Resources mResources>;

        $i9 = virtualinvoke $r13.<android.content.res.Resources: int getInteger(int)>(2131230734);

        $f6 = (float) $i9;

        r0.<com.android.dreams.phototable.PhotoTable: float mThrowRotation> = $f6;

        $r14 = r0.<com.android.dreams.phototable.PhotoTable: android.content.res.Resources mResources>;

        $i11 = virtualinvoke $r14.<android.content.res.Resources: int getInteger(int)>(2131230725);

        r0.<com.android.dreams.phototable.PhotoTable: int mTableCapacity> = $i11;

        $r16 = r0.<com.android.dreams.phototable.PhotoTable: android.content.res.Resources mResources>;

        $i10 = virtualinvoke $r16.<android.content.res.Resources: int getInteger(int)>(2131230726);

        r0.<com.android.dreams.phototable.PhotoTable: int mRedealCount> = $i10;

        $r15 = r0.<com.android.dreams.phototable.PhotoTable: android.content.res.Resources mResources>;

        $z1 = virtualinvoke $r15.<android.content.res.Resources: boolean getBoolean(int)>(2131296258);

        r0.<com.android.dreams.phototable.PhotoTable: boolean mTapToExit> = $z1;

        $r18 = r0.<com.android.dreams.phototable.PhotoTable: android.content.res.Resources mResources>;

        $z0 = virtualinvoke $r18.<android.content.res.Resources: boolean getBoolean(int)>(2131296259);

        r0.<com.android.dreams.phototable.PhotoTable: boolean mStoryModeEnabled> = $z0;

        $r17 = r0.<com.android.dreams.phototable.PhotoTable: android.content.res.Resources mResources>;

        $z2 = virtualinvoke $r17.<android.content.res.Resources: boolean getBoolean(int)>(2131296260);

        r0.<com.android.dreams.phototable.PhotoTable: boolean mBackgroudOptimization> = $z2;

        $r20 = r0.<com.android.dreams.phototable.PhotoTable: android.content.res.Resources mResources>;

        $i12 = virtualinvoke $r20.<android.content.res.Resources: int getColor(int)>(2131165188);

        r0.<com.android.dreams.phototable.PhotoTable: int mHighlightColor> = $i12;

        $r19 = r0.<com.android.dreams.phototable.PhotoTable: android.content.res.Resources mResources>;

        $i14 = virtualinvoke $r19.<android.content.res.Resources: int getInteger(int)>(2131230745);

        r0.<com.android.dreams.phototable.PhotoTable: int mMaxSelectionTime> = $i14;

        $r22 = r0.<com.android.dreams.phototable.PhotoTable: android.content.res.Resources mResources>;

        $i13 = virtualinvoke $r22.<android.content.res.Resources: int getInteger(int)>(2131230746);

        r0.<com.android.dreams.phototable.PhotoTable: int mMaxFocusTime> = $i13;

        $r21 = new com.android.dreams.phototable.SoftLandingInterpolator;

        $r24 = r0.<com.android.dreams.phototable.PhotoTable: android.content.res.Resources mResources>;

        $i15 = virtualinvoke $r24.<android.content.res.Resources: int getInteger(int)>(2131230735);

        $f7 = (float) $i15;

        $f10 = $f7 / 1000000.0F;

        $r23 = r0.<com.android.dreams.phototable.PhotoTable: android.content.res.Resources mResources>;

        $i16 = virtualinvoke $r23.<android.content.res.Resources: int getInteger(int)>(2131230736);

        $f9 = (float) $i16;

        $f8 = $f9 / 1000000.0F;

        specialinvoke $r21.<com.android.dreams.phototable.SoftLandingInterpolator: void <init>(float,float)>($f10, $f8);

        r0.<com.android.dreams.phototable.PhotoTable: android.view.animation.Interpolator mThrowInterpolator> = $r21;

        $r26 = new android.view.animation.DecelerateInterpolator;

        $r25 = r0.<com.android.dreams.phototable.PhotoTable: android.content.res.Resources mResources>;

        $i17 = virtualinvoke $r25.<android.content.res.Resources: int getInteger(int)>(2131230737);

        $f11 = (float) $i17;

        specialinvoke $r26.<android.view.animation.DecelerateInterpolator: void <init>(float)>($f11);

        r0.<com.android.dreams.phototable.PhotoTable: android.view.animation.Interpolator mDropInterpolator> = $r26;

        $r30 = new java.util.LinkedList;

        specialinvoke $r30.<java.util.LinkedList: void <init>()>();

        r0.<com.android.dreams.phototable.PhotoTable: java.util.LinkedList mOnTable> = $r30;

        $r29 = new com.android.dreams.phototable.PhotoSourcePlexor;

        $r28 = virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: android.content.Context getContext()>();

        $r27 = virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: android.content.Context getContext()>();

        $r35 = virtualinvoke $r27.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("PhotoTableDream", 0);

        specialinvoke $r29.<com.android.dreams.phototable.PhotoSourcePlexor: void <init>(android.content.Context,android.content.SharedPreferences)>($r28, $r35);

        r0.<com.android.dreams.phototable.PhotoTable: com.android.dreams.phototable.PhotoSource mPhotoSource> = $r29;

        $r36 = new java.util.HashSet;

        specialinvoke $r36.<java.util.HashSet: void <init>()>();

        r0.<com.android.dreams.phototable.PhotoTable: java.util.Set mWaitingToJoinBackground> = $r36;

        $r37 = new com.android.dreams.phototable.PhotoTable$Launcher;

        specialinvoke $r37.<com.android.dreams.phototable.PhotoTable$Launcher: void <init>(com.android.dreams.phototable.PhotoTable)>(r0);

        r0.<com.android.dreams.phototable.PhotoTable: com.android.dreams.phototable.PhotoTable$Launcher mLauncher> = $r37;

        $r38 = new com.android.dreams.phototable.PhotoTable$FocusReaper;

        specialinvoke $r38.<com.android.dreams.phototable.PhotoTable$FocusReaper: void <init>(com.android.dreams.phototable.PhotoTable)>(r0);

        r0.<com.android.dreams.phototable.PhotoTable: com.android.dreams.phototable.PhotoTable$FocusReaper mFocusReaper> = $r38;

        $r31 = new com.android.dreams.phototable.PhotoTable$SelectionReaper;

        specialinvoke $r31.<com.android.dreams.phototable.PhotoTable$SelectionReaper: void <init>(com.android.dreams.phototable.PhotoTable)>(r0);

        r0.<com.android.dreams.phototable.PhotoTable: com.android.dreams.phototable.PhotoTable$SelectionReaper mSelectionReaper> = $r31;

        $r32 = new com.android.dreams.phototable.DragGestureDetector;

        specialinvoke $r32.<com.android.dreams.phototable.DragGestureDetector: void <init>(android.content.Context,com.android.dreams.phototable.PhotoTable)>(r1, r0);

        r0.<com.android.dreams.phototable.PhotoTable: com.android.dreams.phototable.DragGestureDetector mDragGestureDetector> = $r32;

        $r33 = new com.android.dreams.phototable.EdgeSwipeDetector;

        specialinvoke $r33.<com.android.dreams.phototable.EdgeSwipeDetector: void <init>(android.content.Context,com.android.dreams.phototable.PhotoTable)>(r1, r0);

        r0.<com.android.dreams.phototable.PhotoTable: com.android.dreams.phototable.EdgeSwipeDetector mEdgeSwipeDetector> = $r33;

        $r34 = new com.android.dreams.phototable.KeyboardInterpreter;

        specialinvoke $r34.<com.android.dreams.phototable.KeyboardInterpreter: void <init>(com.android.dreams.phototable.PhotoTable)>(r0);

        r0.<com.android.dreams.phototable.PhotoTable: com.android.dreams.phototable.KeyboardInterpreter mKeyboardInterpreter> = $r34;

        $r39 = newarray (com.android.dreams.phototable.PhotoTable$LoadNaturalSiblingTask)[2];

        r0.<com.android.dreams.phototable.PhotoTable: com.android.dreams.phototable.PhotoTable$LoadNaturalSiblingTask[] mLoadOnDeckTasks> = $r39;

        $r40 = newarray (android.view.View)[2];

        r0.<com.android.dreams.phototable.PhotoTable: android.view.View[] mOnDeck> = $r40;

        r0.<com.android.dreams.phototable.PhotoTable: boolean mStarted> = 0;

        return;
    }

    public void onFinishInflate()
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.view.View $r1, $r3, $r5;
        android.view.ViewGroup $r2, $r4;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        $r1 = virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: android.view.View findViewById(int)>(2131427344);

        $r2 = (android.view.ViewGroup) $r1;

        r0.<com.android.dreams.phototable.PhotoTable: android.view.ViewGroup mBackground> = $r2;

        $r3 = virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: android.view.View findViewById(int)>(2131427343);

        $r4 = (android.view.ViewGroup) $r3;

        r0.<com.android.dreams.phototable.PhotoTable: android.view.ViewGroup mStageLeft> = $r4;

        $r5 = virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: android.view.View findViewById(int)>(2131427342);

        r0.<com.android.dreams.phototable.PhotoTable: android.view.View mScrim> = $r5;

        return;
    }

    public void setDream(android.service.dreams.DreamService)
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.service.dreams.DreamService r1;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        r1 := @parameter0: android.service.dreams.DreamService;

        r0.<com.android.dreams.phototable.PhotoTable: android.service.dreams.DreamService mDream> = r1;

        return;
    }

    public boolean hasSelection()
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.view.View $r1;
        boolean $z0;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        $r1 = r0.<com.android.dreams.phototable.PhotoTable: android.view.View mSelection>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public android.view.View getSelection()
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.view.View $r1;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        $r1 = r0.<com.android.dreams.phototable.PhotoTable: android.view.View mSelection>;

        return $r1;
    }

    public void clearSelection()
    {
        com.android.dreams.phototable.PhotoTable r0;
        int i0, $i1;
        boolean $z0, $z2;
        android.view.View[] $r1, $r2, $r12, $r14;
        android.view.View $r3, $r15, $r16, $r17, $r20;
        com.android.dreams.phototable.PhotoTable$LoadNaturalSiblingTask[] $r4, $r6, $r10, $r13;
        com.android.dreams.phototable.PhotoTable$LoadNaturalSiblingTask $r5, $r7, $r11;
        android.os.AsyncTask$Status $r8, $r9;
        android.graphics.Bitmap $r18;
        com.android.dreams.phototable.PhotoSource $r19;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        $z0 = virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: boolean hasSelection()>();

        if $z0 == 0 goto label2;

        $r17 = r0.<com.android.dreams.phototable.PhotoTable: android.view.View mSelection>;

        virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: void dropOnTable(android.view.View)>($r17);

        $r19 = r0.<com.android.dreams.phototable.PhotoTable: com.android.dreams.phototable.PhotoSource mPhotoSource>;

        $r16 = r0.<com.android.dreams.phototable.PhotoTable: android.view.View mSelection>;

        $r18 = specialinvoke r0.<com.android.dreams.phototable.PhotoTable: android.graphics.Bitmap getBitmap(android.view.View)>($r16);

        virtualinvoke $r19.<com.android.dreams.phototable.PhotoSource: void donePaging(android.graphics.Bitmap)>($r18);

        $z2 = r0.<com.android.dreams.phototable.PhotoTable: boolean mStoryModeEnabled>;

        if $z2 == 0 goto label1;

        $r20 = r0.<com.android.dreams.phototable.PhotoTable: android.view.View mSelection>;

        virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: void fadeInBackground(android.view.View)>($r20);

     label1:
        r0.<com.android.dreams.phototable.PhotoTable: android.view.View mSelection> = null;

     label2:
        i0 = 0;

     label3:
        $r1 = r0.<com.android.dreams.phototable.PhotoTable: android.view.View[] mOnDeck>;

        $i1 = lengthof $r1;

        if i0 >= $i1 goto label6;

        $r2 = r0.<com.android.dreams.phototable.PhotoTable: android.view.View[] mOnDeck>;

        $r3 = $r2[i0];

        if $r3 == null goto label4;

        $r12 = r0.<com.android.dreams.phototable.PhotoTable: android.view.View[] mOnDeck>;

        $r15 = $r12[i0];

        virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: void fadeAway(android.view.View,boolean)>($r15, 0);

        $r14 = r0.<com.android.dreams.phototable.PhotoTable: android.view.View[] mOnDeck>;

        $r14[i0] = null;

     label4:
        $r4 = r0.<com.android.dreams.phototable.PhotoTable: com.android.dreams.phototable.PhotoTable$LoadNaturalSiblingTask[] mLoadOnDeckTasks>;

        $r5 = $r4[i0];

        if $r5 == null goto label5;

        $r6 = r0.<com.android.dreams.phototable.PhotoTable: com.android.dreams.phototable.PhotoTable$LoadNaturalSiblingTask[] mLoadOnDeckTasks>;

        $r7 = $r6[i0];

        $r8 = virtualinvoke $r7.<com.android.dreams.phototable.PhotoTable$LoadNaturalSiblingTask: android.os.AsyncTask$Status getStatus()>();

        $r9 = <android.os.AsyncTask$Status: android.os.AsyncTask$Status FINISHED>;

        if $r8 == $r9 goto label5;

        $r10 = r0.<com.android.dreams.phototable.PhotoTable: com.android.dreams.phototable.PhotoTable$LoadNaturalSiblingTask[] mLoadOnDeckTasks>;

        $r11 = $r10[i0];

        virtualinvoke $r11.<com.android.dreams.phototable.PhotoTable$LoadNaturalSiblingTask: boolean cancel(boolean)>(1);

        $r13 = r0.<com.android.dreams.phototable.PhotoTable: com.android.dreams.phototable.PhotoTable$LoadNaturalSiblingTask[] mLoadOnDeckTasks>;

        $r13[i0] = null;

     label5:
        i0 = i0 + 1;

        goto label3;

     label6:
        return;
    }

    public void setSelection(android.view.View)
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.view.View r1, $r2;
        boolean $z0;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        r1 := @parameter0: android.view.View;

        if r1 == null goto label1;

        virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: void clearSelection()>();

        r0.<com.android.dreams.phototable.PhotoTable: android.view.View mSelection> = r1;

        specialinvoke r0.<com.android.dreams.phototable.PhotoTable: void promoteSelection()>();

        $z0 = r0.<com.android.dreams.phototable.PhotoTable: boolean mStoryModeEnabled>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.dreams.phototable.PhotoTable: android.view.View mSelection>;

        virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: void fadeOutBackground(android.view.View)>($r2);

     label1:
        return;
    }

    public void selectNext()
    {
        com.android.dreams.phototable.PhotoTable r0;
        boolean $z0, $z1;
        java.lang.Object[] $r1;
        android.view.View[] $r2, $r5, $r7;
        android.view.View $r3, $r4, $r6;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        $z0 = r0.<com.android.dreams.phototable.PhotoTable: boolean mStoryModeEnabled>;

        if $z0 == 0 goto label1;

        $r1 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.dreams.phototable.PhotoTable: void log(java.lang.String,java.lang.Object[])>("selectNext", $r1);

        $z1 = virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: boolean hasSelection()>();

        if $z1 == 0 goto label2;

        $r2 = r0.<com.android.dreams.phototable.PhotoTable: android.view.View[] mOnDeck>;

        $r3 = $r2[1];

        if $r3 == null goto label2;

        $r4 = r0.<com.android.dreams.phototable.PhotoTable: android.view.View mSelection>;

        specialinvoke r0.<com.android.dreams.phototable.PhotoTable: void placeOnDeck(android.view.View,int)>($r4, 0);

        $r5 = r0.<com.android.dreams.phototable.PhotoTable: android.view.View[] mOnDeck>;

        $r6 = $r5[1];

        r0.<com.android.dreams.phototable.PhotoTable: android.view.View mSelection> = $r6;

        $r7 = r0.<com.android.dreams.phototable.PhotoTable: android.view.View[] mOnDeck>;

        $r7[1] = null;

        specialinvoke r0.<com.android.dreams.phototable.PhotoTable: void promoteSelection()>();

        goto label2;

     label1:
        virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: void clearSelection()>();

     label2:
        return;
    }

    public void selectPrevious()
    {
        com.android.dreams.phototable.PhotoTable r0;
        boolean $z0, $z1;
        java.lang.Object[] $r1;
        android.view.View[] $r2, $r5, $r7;
        android.view.View $r3, $r4, $r6;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        $z0 = r0.<com.android.dreams.phototable.PhotoTable: boolean mStoryModeEnabled>;

        if $z0 == 0 goto label1;

        $r1 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.dreams.phototable.PhotoTable: void log(java.lang.String,java.lang.Object[])>("selectPrevious", $r1);

        $z1 = virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: boolean hasSelection()>();

        if $z1 == 0 goto label2;

        $r2 = r0.<com.android.dreams.phototable.PhotoTable: android.view.View[] mOnDeck>;

        $r3 = $r2[0];

        if $r3 == null goto label2;

        $r4 = r0.<com.android.dreams.phototable.PhotoTable: android.view.View mSelection>;

        specialinvoke r0.<com.android.dreams.phototable.PhotoTable: void placeOnDeck(android.view.View,int)>($r4, 1);

        $r5 = r0.<com.android.dreams.phototable.PhotoTable: android.view.View[] mOnDeck>;

        $r6 = $r5[0];

        r0.<com.android.dreams.phototable.PhotoTable: android.view.View mSelection> = $r6;

        $r7 = r0.<com.android.dreams.phototable.PhotoTable: android.view.View[] mOnDeck>;

        $r7[0] = null;

        specialinvoke r0.<com.android.dreams.phototable.PhotoTable: void promoteSelection()>();

        goto label2;

     label1:
        virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: void clearSelection()>();

     label2:
        return;
    }

    private void promoteSelection()
    {
        com.android.dreams.phototable.PhotoTable r0;
        int i0, $i1, $i2;
        boolean $z0, $z1;
        android.view.View $r1, $r3, $r4, $r5, $r10, $r16;
        android.view.ViewPropertyAnimator $r2;
        android.view.View[] $r6, $r9, $r13;
        com.android.dreams.phototable.PhotoTable$LoadNaturalSiblingTask[] $r7, $r11, $r14, $r17, $r21;
        com.android.dreams.phototable.PhotoTable$LoadNaturalSiblingTask $r8, $r12, $r15, $r20, $r23;
        android.os.AsyncTask$Status $r19, $r22;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        $z0 = virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: boolean hasSelection()>();

        if $z0 == 0 goto label4;

        $i1 = r0.<com.android.dreams.phototable.PhotoTable: int mMaxSelectionTime>;

        virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: void scheduleSelectionReaper(int)>($i1);

        $r1 = r0.<com.android.dreams.phototable.PhotoTable: android.view.View mSelection>;

        $r2 = virtualinvoke $r1.<android.view.View: android.view.ViewPropertyAnimator animate()>();

        virtualinvoke $r2.<android.view.ViewPropertyAnimator: void cancel()>();

        $r3 = r0.<com.android.dreams.phototable.PhotoTable: android.view.View mSelection>;

        virtualinvoke $r3.<android.view.View: void setAlpha(float)>(1.0F);

        $r4 = r0.<com.android.dreams.phototable.PhotoTable: android.view.View mSelection>;

        virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: void moveToTopOfPile(android.view.View)>($r4);

        $r5 = r0.<com.android.dreams.phototable.PhotoTable: android.view.View mSelection>;

        specialinvoke r0.<com.android.dreams.phototable.PhotoTable: void pickUp(android.view.View)>($r5);

        $z1 = r0.<com.android.dreams.phototable.PhotoTable: boolean mStoryModeEnabled>;

        if $z1 == 0 goto label4;

        i0 = 0;

     label1:
        $r6 = r0.<com.android.dreams.phototable.PhotoTable: android.view.View[] mOnDeck>;

        $i2 = lengthof $r6;

        if i0 >= $i2 goto label4;

        $r7 = r0.<com.android.dreams.phototable.PhotoTable: com.android.dreams.phototable.PhotoTable$LoadNaturalSiblingTask[] mLoadOnDeckTasks>;

        $r8 = $r7[i0];

        if $r8 == null goto label2;

        $r17 = r0.<com.android.dreams.phototable.PhotoTable: com.android.dreams.phototable.PhotoTable$LoadNaturalSiblingTask[] mLoadOnDeckTasks>;

        $r20 = $r17[i0];

        $r19 = virtualinvoke $r20.<com.android.dreams.phototable.PhotoTable$LoadNaturalSiblingTask: android.os.AsyncTask$Status getStatus()>();

        $r22 = <android.os.AsyncTask$Status: android.os.AsyncTask$Status FINISHED>;

        if $r19 == $r22 goto label2;

        $r21 = r0.<com.android.dreams.phototable.PhotoTable: com.android.dreams.phototable.PhotoTable$LoadNaturalSiblingTask[] mLoadOnDeckTasks>;

        $r23 = $r21[i0];

        virtualinvoke $r23.<com.android.dreams.phototable.PhotoTable$LoadNaturalSiblingTask: boolean cancel(boolean)>(1);

     label2:
        $r9 = r0.<com.android.dreams.phototable.PhotoTable: android.view.View[] mOnDeck>;

        $r10 = $r9[i0];

        if $r10 != null goto label3;

        $r11 = r0.<com.android.dreams.phototable.PhotoTable: com.android.dreams.phototable.PhotoTable$LoadNaturalSiblingTask[] mLoadOnDeckTasks>;

        $r12 = new com.android.dreams.phototable.PhotoTable$LoadNaturalSiblingTask;

        specialinvoke $r12.<com.android.dreams.phototable.PhotoTable$LoadNaturalSiblingTask: void <init>(com.android.dreams.phototable.PhotoTable,int)>(r0, i0);

        $r11[i0] = $r12;

        $r14 = r0.<com.android.dreams.phototable.PhotoTable: com.android.dreams.phototable.PhotoTable$LoadNaturalSiblingTask[] mLoadOnDeckTasks>;

        $r15 = $r14[i0];

        $r13 = newarray (android.view.View)[1];

        $r16 = r0.<com.android.dreams.phototable.PhotoTable: android.view.View mSelection>;

        $r13[0] = $r16;

        virtualinvoke $r15.<com.android.dreams.phototable.PhotoTable$LoadNaturalSiblingTask: android.os.AsyncTask execute(java.lang.Object[])>($r13);

     label3:
        i0 = i0 + 1;

        goto label1;

     label4:
        return;
    }

    public boolean hasFocus()
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.view.View $r1;
        boolean $z0;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        $r1 = r0.<com.android.dreams.phototable.PhotoTable: android.view.View mFocus>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public android.view.View getFocus()
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.view.View $r1;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        $r1 = r0.<com.android.dreams.phototable.PhotoTable: android.view.View mFocus>;

        return $r1;
    }

    public void clearFocus()
    {
        com.android.dreams.phototable.PhotoTable r0;
        boolean $z0;
        android.view.View $r1;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        $z0 = virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: boolean hasFocus()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: android.view.View getFocus()>();

        virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: void setHighlight(android.view.View,boolean)>($r1, 0);

     label1:
        r0.<com.android.dreams.phototable.PhotoTable: android.view.View mFocus> = null;

        return;
    }

    public void setDefaultFocus()
    {
        com.android.dreams.phototable.PhotoTable r0;
        java.util.LinkedList $r1, $r2;
        int $i0;
        java.lang.Object $r3;
        android.view.View $r4;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        $r1 = r0.<com.android.dreams.phototable.PhotoTable: java.util.LinkedList mOnTable>;

        $i0 = virtualinvoke $r1.<java.util.LinkedList: int size()>();

        if $i0 <= 0 goto label1;

        $r2 = r0.<com.android.dreams.phototable.PhotoTable: java.util.LinkedList mOnTable>;

        $r3 = virtualinvoke $r2.<java.util.LinkedList: java.lang.Object getLast()>();

        $r4 = (android.view.View) $r3;

        virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: void setFocus(android.view.View)>($r4);

     label1:
        return;
    }

    public void setFocus(android.view.View)
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.view.View r1;
        boolean $z0;
        int $i0;
        java.lang.AssertionError $r2;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        r1 := @parameter0: android.view.View;

        $z0 = <com.android.dreams.phototable.PhotoTable: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r1 != null goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: void clearFocus()>();

        r0.<com.android.dreams.phototable.PhotoTable: android.view.View mFocus> = r1;

        virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: void moveToTopOfPile(android.view.View)>(r1);

        virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: void setHighlight(android.view.View,boolean)>(r1, 1);

        $i0 = r0.<com.android.dreams.phototable.PhotoTable: int mMaxFocusTime>;

        virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: void scheduleFocusReaper(int)>($i0);

        return;
    }

    static float lerp(float, float, float)
    {
        float f0, f1, f2, $f3, $f4, $f5;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        $f3 = f1 - f0;

        $f4 = $f3 * f2;

        $f5 = $f4 + f0;

        return $f5;
    }

    static float randfrange(float, float)
    {
        float f0, f1, $f2, $f3;
        java.util.Random $r0;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r0 = <com.android.dreams.phototable.PhotoTable: java.util.Random sRNG>;

        $f2 = virtualinvoke $r0.<java.util.Random: float nextFloat()>();

        $f3 = staticinvoke <com.android.dreams.phototable.PhotoTable: float lerp(float,float,float)>(f0, f1, $f2);

        return $f3;
    }

    static android.graphics.PointF randFromCurve(float, android.graphics.PointF[])
    {
        float f0, f1, f2, f3, f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35;
        android.graphics.PointF[] r0;
        android.graphics.PointF r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        int $i0;
        byte $b1, $b2;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;

        f0 := @parameter0: float;

        r0 := @parameter1: android.graphics.PointF[];

        $r2 = new android.graphics.PointF;

        specialinvoke $r2.<android.graphics.PointF: void <init>()>();

        r1 = $r2;

        $i0 = lengthof r0;

        if $i0 != 4 goto label1;

        $b1 = f0 cmpl 0.0F;

        if $b1 < 0 goto label1;

        $b2 = f0 cmpg 1.0F;

        if $b2 > 0 goto label1;

        $f5 = 1.0F - f0;

        $d0 = (double) $f5;

        $d1 = staticinvoke <java.lang.Math: double pow(double,double)>($d0, 3.0);

        f1 = (float) $d1;

        $f6 = 1.0F - f0;

        $d2 = (double) $f6;

        $d3 = staticinvoke <java.lang.Math: double pow(double,double)>($d2, 2.0);

        $f7 = (float) $d3;

        f2 = $f7 * f0;

        $f8 = 1.0F - f0;

        $d4 = (double) f0;

        $d5 = staticinvoke <java.lang.Math: double pow(double,double)>($d4, 2.0);

        $f9 = (float) $d5;

        f3 = $f8 * $f9;

        $d7 = (double) f0;

        $d6 = staticinvoke <java.lang.Math: double pow(double,double)>($d7, 3.0);

        f4 = (float) $d6;

        $r3 = r0[0];

        $f10 = $r3.<android.graphics.PointF: float x>;

        $f14 = f1 * $f10;

        $f13 = 3.0F * f2;

        $r4 = r0[1];

        $f11 = $r4.<android.graphics.PointF: float x>;

        $f12 = $f13 * $f11;

        $f16 = $f14 + $f12;

        $f18 = 3.0F * f3;

        $r5 = r0[2];

        $f17 = $r5.<android.graphics.PointF: float x>;

        $f15 = $f18 * $f17;

        $f20 = $f16 + $f15;

        $r6 = r0[3];

        $f21 = $r6.<android.graphics.PointF: float x>;

        $f19 = f4 * $f21;

        $f23 = $f20 + $f19;

        r1.<android.graphics.PointF: float x> = $f23;

        $r8 = r0[0];

        $f22 = $r8.<android.graphics.PointF: float y>;

        $f25 = f1 * $f22;

        $f27 = 3.0F * f2;

        $r7 = r0[1];

        $f26 = $r7.<android.graphics.PointF: float y>;

        $f24 = $f27 * $f26;

        $f33 = $f25 + $f24;

        $f29 = 3.0F * f3;

        $r9 = r0[2];

        $f30 = $r9.<android.graphics.PointF: float y>;

        $f28 = $f29 * $f30;

        $f35 = $f33 + $f28;

        $r10 = r0[3];

        $f32 = $r10.<android.graphics.PointF: float y>;

        $f31 = f4 * $f32;

        $f34 = $f35 + $f31;

        r1.<android.graphics.PointF: float y> = $f34;

     label1:
        return r1;
    }

    private static android.graphics.PointF randMultiDrop(int, float, float, int, int)
    {
        int i0, i1, i2, $i3, $i4, $i5, $i6, i7;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17;
        float[] r0, r1, $r9, $r10;
        android.graphics.PointF r2, $r11;
        java.lang.Object[] $r3, $r12;
        java.lang.Integer $r4, $r7, $r8;
        java.lang.Float $r5, $r6, $r13, $r14;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $r3 = newarray (java.lang.Object)[5];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3[0] = $r4;

        $r5 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        $r3[1] = $r5;

        $r6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f1);

        $r3[2] = $r6;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r3[3] = $r7;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r3[4] = $r8;

        staticinvoke <com.android.dreams.phototable.PhotoTable: void log(java.lang.String,java.lang.Object[])>("randMultiDrop (%d, %f, %f, %d, %d)", $r3);

        $r10 = newarray (float)[5];

        $r10[0] = 0.3F;

        $r10[1] = 0.3F;

        $r10[2] = 0.5F;

        $r10[3] = 0.7F;

        $r10[4] = 0.7F;

        r0 = $r10;

        $r9 = newarray (float)[5];

        $r9[0] = 0.3F;

        $r9[1] = 0.7F;

        $r9[2] = 0.5F;

        $r9[3] = 0.3F;

        $r9[4] = 0.7F;

        r1 = $r9;

        i7 = staticinvoke <java.lang.Math: int abs(int)>(i0);

        $i3 = lengthof r0;

        $i5 = i7 % $i3;

        f2 = r0[$i5];

        $i4 = lengthof r0;

        $i6 = i7 % $i4;

        f3 = r1[$i6];

        $r11 = new android.graphics.PointF;

        specialinvoke $r11.<android.graphics.PointF: void <init>()>();

        r2 = $r11;

        $f5 = (float) i1;

        $f6 = f2 * $f5;

        $f4 = (float) i1;

        $f8 = 0.05F * $f4;

        $f9 = $f8 * f0;

        $f7 = $f6 + $f9;

        r2.<android.graphics.PointF: float x> = $f7;

        $f12 = (float) i2;

        $f15 = f3 * $f12;

        $f13 = (float) i2;

        $f10 = 0.05F * $f13;

        $f11 = $f10 * f1;

        $f16 = $f15 + $f11;

        r2.<android.graphics.PointF: float y> = $f16;

        $r12 = newarray (java.lang.Object)[2];

        $f14 = r2.<android.graphics.PointF: float x>;

        $r13 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f14);

        $r12[0] = $r13;

        $f17 = r2.<android.graphics.PointF: float y>;

        $r14 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f17);

        $r12[1] = $r14;

        staticinvoke <com.android.dreams.phototable.PhotoTable: void log(java.lang.String,java.lang.Object[])>("randInCenter returning %f, %f", $r12);

        return r2;
    }

    private double cross(double[], double[])
    {
        com.android.dreams.phototable.PhotoTable r0;
        double[] r1, r2;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        r1 := @parameter0: double[];

        r2 := @parameter1: double[];

        $d1 = r1[0];

        $d0 = r2[1];

        $d5 = $d1 * $d0;

        $d3 = r1[1];

        $d2 = r2[0];

        $d4 = $d3 * $d2;

        $d6 = $d5 - $d4;

        return $d6;
    }

    private double norm(double[])
    {
        com.android.dreams.phototable.PhotoTable r0;
        double[] r1;
        double $d0, $d1, $d2;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        r1 := @parameter0: double[];

        $d1 = r1[0];

        $d0 = r1[1];

        $d2 = staticinvoke <java.lang.Math: double hypot(double,double)>($d1, $d0);

        return $d2;
    }

    private double[] getCenter(android.view.View)
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.view.View r1;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        double[] r2, $r7;
        java.lang.Object $r3, $r5;
        java.lang.Integer $r4, $r6;
        int $i0, $i1;
        double $d0, $d1;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        r1 := @parameter0: android.view.View;

        $r3 = virtualinvoke r1.<android.view.View: java.lang.Object getTag(int)>(2131427329);

        $r4 = (java.lang.Integer) $r3;

        $i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        f0 = (float) $i0;

        $r5 = virtualinvoke r1.<android.view.View: java.lang.Object getTag(int)>(2131427328);

        $r6 = (java.lang.Integer) $r5;

        $i1 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        f1 = (float) $i1;

        $r7 = newarray (double)[2];

        $f2 = virtualinvoke r1.<android.view.View: float getX()>();

        $f3 = f0 / 2.0F;

        $f4 = $f2 + $f3;

        $d0 = (double) $f4;

        $r7[0] = $d0;

        $f6 = virtualinvoke r1.<android.view.View: float getY()>();

        $f5 = f1 / 2.0F;

        $f8 = $f6 + $f5;

        $f7 = neg $f8;

        $d1 = (double) $f7;

        $r7[1] = $d1;

        r2 = $r7;

        return r2;
    }

    public android.view.View moveFocus(android.view.View, float)
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.view.View r1, $r2;
        float f0;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        $r2 = virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: android.view.View moveFocus(android.view.View,float,float)>(r1, f0, 90.0F);

        return $r2;
    }

    public android.view.View moveFocus(android.view.View, float, float)
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.view.View r1, r5, r7, $r13, $r15, $r20;
        float f0, f1, $f2, $f3;
        double d0, d1, d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21;
        double[] r2, r3, r4, r8, r9, $r10, $r11, $r16;
        java.util.Iterator r6;
        boolean $z0;
        java.util.LinkedList $r12, $r17, $r18;
        java.lang.Object $r14, $r19;
        byte $b0, $b1, $b2, $b4;
        int $i3;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        if r1 != null goto label1;

        $r17 = r0.<com.android.dreams.phototable.PhotoTable: java.util.LinkedList mOnTable>;

        $i3 = virtualinvoke $r17.<java.util.LinkedList: int size()>();

        if $i3 <= 0 goto label6;

        $r18 = r0.<com.android.dreams.phototable.PhotoTable: java.util.LinkedList mOnTable>;

        $r19 = virtualinvoke $r18.<java.util.LinkedList: java.lang.Object getLast()>();

        $r20 = (android.view.View) $r19;

        virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: void setFocus(android.view.View)>($r20);

        goto label6;

     label1:
        $d4 = (double) f0;

        d0 = staticinvoke <java.lang.Math: double toRadians(double)>($d4);

        $f3 = staticinvoke <java.lang.Math: float min(float,float)>(f1, 180.0F);

        $f2 = $f3 / 2.0F;

        $d5 = (double) $f2;

        d1 = staticinvoke <java.lang.Math: double toRadians(double)>($d5);

        $r10 = newarray (double)[2];

        $d6 = d0 - d1;

        $d7 = staticinvoke <java.lang.Math: double sin(double)>($d6);

        $r10[0] = $d7;

        $d8 = d0 - d1;

        $d10 = staticinvoke <java.lang.Math: double cos(double)>($d8);

        $r10[1] = $d10;

        r2 = $r10;

        $r11 = newarray (double)[2];

        $d9 = d0 + d1;

        $d12 = staticinvoke <java.lang.Math: double sin(double)>($d9);

        $r11[0] = $d12;

        $d13 = d0 + d1;

        $d11 = staticinvoke <java.lang.Math: double cos(double)>($d13);

        $r11[1] = $d11;

        r3 = $r11;

        r4 = specialinvoke r0.<com.android.dreams.phototable.PhotoTable: double[] getCenter(android.view.View)>(r1);

        r5 = null;

        d2 = 1.7976931348623157E308;

        $r12 = r0.<com.android.dreams.phototable.PhotoTable: java.util.LinkedList mOnTable>;

        r6 = virtualinvoke $r12.<java.util.LinkedList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r14 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        r7 = (android.view.View) $r14;

        if r7 == r1 goto label3;

        r9 = specialinvoke r0.<com.android.dreams.phototable.PhotoTable: double[] getCenter(android.view.View)>(r7);

        $r16 = newarray (double)[2];

        $d14 = r9[0];

        $d15 = r4[0];

        $d19 = $d14 - $d15;

        $r16[0] = $d19;

        $d17 = r9[1];

        $d18 = r4[1];

        $d16 = $d17 - $d18;

        $r16[1] = $d16;

        r8 = $r16;

        $d21 = specialinvoke r0.<com.android.dreams.phototable.PhotoTable: double cross(double[],double[])>(r8, r2);

        $b2 = $d21 cmpl 0.0;

        if $b2 <= 0 goto label3;

        $d20 = specialinvoke r0.<com.android.dreams.phototable.PhotoTable: double cross(double[],double[])>(r8, r3);

        $b1 = $d20 cmpg 0.0;

        if $b1 >= 0 goto label3;

        d3 = specialinvoke r0.<com.android.dreams.phototable.PhotoTable: double norm(double[])>(r8);

        $b4 = d2 cmpl d3;

        if $b4 <= 0 goto label3;

        d2 = d3;

        r5 = r7;

     label3:
        goto label2;

     label4:
        if r5 != null goto label5;

        $b0 = f1 cmpg 180.0F;

        if $b0 >= 0 goto label6;

        $r13 = virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: android.view.View moveFocus(android.view.View,float,float)>(r1, f0, 180.0F);

        return $r13;

     label5:
        virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: void setFocus(android.view.View)>(r5);

     label6:
        $r15 = virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: android.view.View getFocus()>();

        return $r15;
    }

    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        com.android.dreams.phototable.PhotoTable r0;
        int i0;
        android.view.KeyEvent r1;
        com.android.dreams.phototable.KeyboardInterpreter $r2;
        boolean $z0;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        $r2 = r0.<com.android.dreams.phototable.PhotoTable: com.android.dreams.phototable.KeyboardInterpreter mKeyboardInterpreter>;

        $z0 = virtualinvoke $r2.<com.android.dreams.phototable.KeyboardInterpreter: boolean onKeyDown(int,android.view.KeyEvent)>(i0, r1);

        return $z0;
    }

    public boolean onGenericMotionEvent(android.view.MotionEvent)
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.view.MotionEvent r1;
        com.android.dreams.phototable.EdgeSwipeDetector $r2;
        boolean $z0, $z1, $z2;
        com.android.dreams.phototable.DragGestureDetector $r3;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<com.android.dreams.phototable.PhotoTable: com.android.dreams.phototable.EdgeSwipeDetector mEdgeSwipeDetector>;

        $z0 = virtualinvoke $r2.<com.android.dreams.phototable.EdgeSwipeDetector: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<com.android.dreams.phototable.PhotoTable: com.android.dreams.phototable.DragGestureDetector mDragGestureDetector>;

        $z1 = virtualinvoke $r3.<com.android.dreams.phototable.DragGestureDetector: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.view.MotionEvent r1;
        int $i0;
        boolean $z0, $z1;
        android.service.dreams.DreamService $r2, $r3;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        if $i0 != 0 goto label3;

        $z0 = virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: boolean hasSelection()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: void clearSelection()>();

        goto label2;

     label1:
        $z1 = r0.<com.android.dreams.phototable.PhotoTable: boolean mTapToExit>;

        if $z1 == 0 goto label2;

        $r2 = r0.<com.android.dreams.phototable.PhotoTable: android.service.dreams.DreamService mDream>;

        if $r2 == null goto label2;

        $r3 = r0.<com.android.dreams.phototable.PhotoTable: android.service.dreams.DreamService mDream>;

        virtualinvoke $r3.<android.service.dreams.DreamService: void finish()>();

     label2:
        return 1;

     label3:
        return 0;
    }

    public void onLayout(boolean, int, int, int, int)
    {
        com.android.dreams.phototable.PhotoTable r0;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17;
        java.util.Iterator r1;
        android.view.View r2, $r9, $r11, $r14, $r16;
        java.lang.Object[] $r3;
        java.lang.Integer $r4, $r5, $r6, $r7;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        java.util.LinkedList $r8;
        android.view.View[] $r10, $r12, $r13;
        java.lang.Object $r15;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        specialinvoke r0.<android.widget.FrameLayout: void onLayout(boolean,int,int,int,int)>(z0, i0, i1, i2, i3);

        $r3 = newarray (java.lang.Object)[4];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3[0] = $r4;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r3[1] = $r5;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        $r3[2] = $r6;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r3[3] = $r7;

        staticinvoke <com.android.dreams.phototable.PhotoTable: void log(java.lang.String,java.lang.Object[])>("onLayout (%d, %d, %d, %d)", $r3);

        $i4 = i3 - i1;

        r0.<com.android.dreams.phototable.PhotoTable: int mHeight> = $i4;

        $i6 = i2 - i0;

        r0.<com.android.dreams.phototable.PhotoTable: int mWidth> = $i6;

        $f0 = r0.<com.android.dreams.phototable.PhotoTable: float mImageRatio>;

        $i7 = r0.<com.android.dreams.phototable.PhotoTable: int mWidth>;

        $i5 = r0.<com.android.dreams.phototable.PhotoTable: int mHeight>;

        $i8 = staticinvoke <java.lang.Math: int max(int,int)>($i7, $i5);

        $f1 = (float) $i8;

        $f2 = $f0 * $f1;

        $i9 = (int) $f2;

        r0.<com.android.dreams.phototable.PhotoTable: int mLongSide> = $i9;

        $f3 = r0.<com.android.dreams.phototable.PhotoTable: float mImageRatio>;

        $i10 = r0.<com.android.dreams.phototable.PhotoTable: int mWidth>;

        $i11 = r0.<com.android.dreams.phototable.PhotoTable: int mHeight>;

        $i12 = staticinvoke <java.lang.Math: int min(int,int)>($i10, $i11);

        $f4 = (float) $i12;

        $f5 = $f3 * $f4;

        $i13 = (int) $f5;

        r0.<com.android.dreams.phototable.PhotoTable: int mShortSide> = $i13;

        $i15 = r0.<com.android.dreams.phototable.PhotoTable: int mWidth>;

        $i14 = r0.<com.android.dreams.phototable.PhotoTable: int mHeight>;

        if $i15 <= $i14 goto label1;

        $z5 = 1;

        goto label2;

     label1:
        $z5 = 0;

     label2:
        z1 = $z5;

        $z2 = r0.<com.android.dreams.phototable.PhotoTable: boolean mIsLandscape>;

        if $z2 == z1 goto label9;

        $r8 = r0.<com.android.dreams.phototable.PhotoTable: java.util.LinkedList mOnTable>;

        r1 = virtualinvoke $r8.<java.util.LinkedList: java.util.Iterator iterator()>();

     label3:
        $z3 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r15 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.view.View) $r15;

        $r14 = virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: android.view.View getSelection()>();

        if r2 == $r14 goto label4;

        virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: void dropOnTable(android.view.View)>(r2);

     label4:
        goto label3;

     label5:
        $z4 = virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: boolean hasSelection()>();

        if $z4 == 0 goto label8;

        $r9 = virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: android.view.View getSelection()>();

        specialinvoke r0.<com.android.dreams.phototable.PhotoTable: void pickUp(android.view.View)>($r9);

        i17 = 0;

     label6:
        $r10 = r0.<com.android.dreams.phototable.PhotoTable: android.view.View[] mOnDeck>;

        $i16 = lengthof $r10;

        if i17 >= $i16 goto label8;

        $r13 = r0.<com.android.dreams.phototable.PhotoTable: android.view.View[] mOnDeck>;

        $r11 = $r13[i17];

        if $r11 == null goto label7;

        $r12 = r0.<com.android.dreams.phototable.PhotoTable: android.view.View[] mOnDeck>;

        $r16 = $r12[i17];

        specialinvoke r0.<com.android.dreams.phototable.PhotoTable: void placeOnDeck(android.view.View,int)>($r16, i17);

     label7:
        i17 = i17 + 1;

        goto label6;

     label8:
        r0.<com.android.dreams.phototable.PhotoTable: boolean mIsLandscape> = z1;

     label9:
        virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: void start()>();

        return;
    }

    public boolean isOpaque()
    {
        com.android.dreams.phototable.PhotoTable r0;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        return 1;
    }

    private static android.view.View applyFrame(com.android.dreams.phototable.PhotoTable, android.graphics.BitmapFactory$Options, android.graphics.Bitmap)
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.graphics.BitmapFactory$Options r1;
        android.graphics.Bitmap r2;
        android.view.LayoutInflater r3;
        android.view.View r4;
        android.widget.ImageView r5;
        android.graphics.drawable.Drawable[] r6;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        android.graphics.drawable.LayerDrawable r7, $r13;
        android.content.Context $r8, $r17;
        java.lang.Object $r9;
        android.graphics.drawable.BitmapDrawable $r10;
        android.content.res.Resources $r11, $r12;
        android.graphics.drawable.Drawable $r14;
        java.lang.Integer $r15, $r16;
        com.android.dreams.phototable.PhotoTouchListener $r18;

        r0 := @parameter0: com.android.dreams.phototable.PhotoTable;

        r1 := @parameter1: android.graphics.BitmapFactory$Options;

        r2 := @parameter2: android.graphics.Bitmap;

        $r8 = virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: android.content.Context getContext()>();

        $r9 = virtualinvoke $r8.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");

        r3 = (android.view.LayoutInflater) $r9;

        r4 = virtualinvoke r3.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(2130968580, null);

        r5 = (android.widget.ImageView) r4;

        r6 = newarray (android.graphics.drawable.Drawable)[2];

        i0 = r1.<android.graphics.BitmapFactory$Options: int outWidth>;

        i1 = r1.<android.graphics.BitmapFactory$Options: int outHeight>;

        if r2 == null goto label1;

        $i2 = r1.<android.graphics.BitmapFactory$Options: int outWidth>;

        if $i2 <= 0 goto label1;

        $i3 = r1.<android.graphics.BitmapFactory$Options: int outHeight>;

        if $i3 > 0 goto label2;

     label1:
        r4 = null;

        goto label3;

     label2:
        virtualinvoke r2.<android.graphics.Bitmap: void setHasMipMap(boolean)>(1);

        $r10 = new android.graphics.drawable.BitmapDrawable;

        $r11 = r0.<com.android.dreams.phototable.PhotoTable: android.content.res.Resources mResources>;

        specialinvoke $r10.<android.graphics.drawable.BitmapDrawable: void <init>(android.content.res.Resources,android.graphics.Bitmap)>($r11, r2);

        r6[0] = $r10;

        $r12 = r0.<com.android.dreams.phototable.PhotoTable: android.content.res.Resources mResources>;

        $r14 = virtualinvoke $r12.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(2130837505);

        r6[1] = $r14;

        $r13 = new android.graphics.drawable.LayerDrawable;

        specialinvoke $r13.<android.graphics.drawable.LayerDrawable: void <init>(android.graphics.drawable.Drawable[])>(r6);

        r7 = $r13;

        $i6 = r0.<com.android.dreams.phototable.PhotoTable: int mInset>;

        $i7 = r0.<com.android.dreams.phototable.PhotoTable: int mInset>;

        $i4 = r0.<com.android.dreams.phototable.PhotoTable: int mInset>;

        $i5 = r0.<com.android.dreams.phototable.PhotoTable: int mInset>;

        virtualinvoke r7.<android.graphics.drawable.LayerDrawable: void setLayerInset(int,int,int,int,int)>(0, $i6, $i7, $i4, $i5);

        virtualinvoke r5.<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>(r7);

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke r4.<android.view.View: void setTag(int,java.lang.Object)>(2131427329, $r15);

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke r4.<android.view.View: void setTag(int,java.lang.Object)>(2131427328, $r16);

        $r18 = new com.android.dreams.phototable.PhotoTouchListener;

        $r17 = virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: android.content.Context getContext()>();

        specialinvoke $r18.<com.android.dreams.phototable.PhotoTouchListener: void <init>(android.content.Context,com.android.dreams.phototable.PhotoTable)>($r17, r0);

        virtualinvoke r4.<android.view.View: void setOnTouchListener(android.view.View$OnTouchListener)>($r18);

     label3:
        return r4;
    }

    public void launch()
    {
        com.android.dreams.phototable.PhotoTable r0;
        java.lang.Object[] $r1, $r2;
        boolean $z0;
        com.android.dreams.phototable.PhotoTable$PhotoLaunchTask $r3, $r4, $r6, $r8;
        java.lang.Void[] $r5;
        android.os.AsyncTask$Status $r9, $r10;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        $r1 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.dreams.phototable.PhotoTable: void log(java.lang.String,java.lang.Object[])>("launching", $r1);

        virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: void setSystemUiVisibility(int)>(1);

        $z0 = virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: boolean hasSelection()>();

        if $z0 != 0 goto label2;

        $r2 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.dreams.phototable.PhotoTable: void log(java.lang.String,java.lang.Object[])>("inflate it", $r2);

        $r3 = r0.<com.android.dreams.phototable.PhotoTable: com.android.dreams.phototable.PhotoTable$PhotoLaunchTask mPhotoLaunchTask>;

        if $r3 == null goto label1;

        $r8 = r0.<com.android.dreams.phototable.PhotoTable: com.android.dreams.phototable.PhotoTable$PhotoLaunchTask mPhotoLaunchTask>;

        $r9 = virtualinvoke $r8.<com.android.dreams.phototable.PhotoTable$PhotoLaunchTask: android.os.AsyncTask$Status getStatus()>();

        $r10 = <android.os.AsyncTask$Status: android.os.AsyncTask$Status FINISHED>;

        if $r9 != $r10 goto label2;

     label1:
        $r4 = new com.android.dreams.phototable.PhotoTable$PhotoLaunchTask;

        specialinvoke $r4.<com.android.dreams.phototable.PhotoTable$PhotoLaunchTask: void <init>(com.android.dreams.phototable.PhotoTable)>(r0);

        r0.<com.android.dreams.phototable.PhotoTable: com.android.dreams.phototable.PhotoTable$PhotoLaunchTask mPhotoLaunchTask> = $r4;

        $r6 = r0.<com.android.dreams.phototable.PhotoTable: com.android.dreams.phototable.PhotoTable$PhotoLaunchTask mPhotoLaunchTask>;

        $r5 = newarray (java.lang.Void)[0];

        virtualinvoke $r6.<com.android.dreams.phototable.PhotoTable$PhotoLaunchTask: android.os.AsyncTask execute(java.lang.Object[])>($r5);

     label2:
        return;
    }

    public void fadeOutBackground(android.view.View)
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.view.View r1, $r2, $r3, $r4, $r5;
        boolean $z0;
        android.view.ViewPropertyAnimator $r6, $r7, $r8, $r11, $r12, $r14;
        long $l0, $l1;
        android.view.ViewGroup $r10;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        r1 := @parameter0: android.view.View;

        specialinvoke r0.<com.android.dreams.phototable.PhotoTable: void resolveBackgroundQueue()>();

        $z0 = r0.<com.android.dreams.phototable.PhotoTable: boolean mBackgroudOptimization>;

        if $z0 == 0 goto label1;

        $r10 = r0.<com.android.dreams.phototable.PhotoTable: android.view.ViewGroup mBackground>;

        $r11 = virtualinvoke $r10.<android.view.ViewGroup: android.view.ViewPropertyAnimator animate()>();

        $r12 = virtualinvoke $r11.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator withLayer()>();

        $l1 = r0.<com.android.dreams.phototable.PhotoTable: long mPickUpDuration>;

        $r14 = virtualinvoke $r12.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>($l1);

        virtualinvoke $r14.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alpha(float)>(0.0F);

        goto label2;

     label1:
        $r2 = r0.<com.android.dreams.phototable.PhotoTable: android.view.View mScrim>;

        virtualinvoke $r2.<android.view.View: void setAlpha(float)>(0.0F);

        $r3 = r0.<com.android.dreams.phototable.PhotoTable: android.view.View mScrim>;

        virtualinvoke $r3.<android.view.View: void setVisibility(int)>(0);

        $r4 = r0.<com.android.dreams.phototable.PhotoTable: android.view.View mScrim>;

        virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: void bringChildToFront(android.view.View)>($r4);

        virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: void bringChildToFront(android.view.View)>(r1);

        $r5 = r0.<com.android.dreams.phototable.PhotoTable: android.view.View mScrim>;

        $r6 = virtualinvoke $r5.<android.view.View: android.view.ViewPropertyAnimator animate()>();

        $r7 = virtualinvoke $r6.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator withLayer()>();

        $l0 = r0.<com.android.dreams.phototable.PhotoTable: long mPickUpDuration>;

        $r8 = virtualinvoke $r7.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>($l0);

        virtualinvoke $r8.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alpha(float)>(1.0F);

     label2:
        return;
    }

    public void fadeInBackground(android.view.View)
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.view.View r1, $r2, $r3;
        boolean $z0;
        android.view.ViewPropertyAnimator $r4, $r5, $r6, $r7, $r12, $r13, $r14, $r15;
        long $l0, $l1;
        com.android.dreams.phototable.PhotoTable$2 $r8;
        java.util.Set $r10;
        android.view.ViewGroup $r11;
        com.android.dreams.phototable.PhotoTable$1 $r17;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        r1 := @parameter0: android.view.View;

        $z0 = r0.<com.android.dreams.phototable.PhotoTable: boolean mBackgroudOptimization>;

        if $z0 == 0 goto label1;

        $r10 = r0.<com.android.dreams.phototable.PhotoTable: java.util.Set mWaitingToJoinBackground>;

        interfaceinvoke $r10.<java.util.Set: boolean add(java.lang.Object)>(r1);

        $r11 = r0.<com.android.dreams.phototable.PhotoTable: android.view.ViewGroup mBackground>;

        $r12 = virtualinvoke $r11.<android.view.ViewGroup: android.view.ViewPropertyAnimator animate()>();

        $r13 = virtualinvoke $r12.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator withLayer()>();

        $l1 = r0.<com.android.dreams.phototable.PhotoTable: long mPickUpDuration>;

        $r15 = virtualinvoke $r13.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>($l1);

        $r14 = virtualinvoke $r15.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alpha(float)>(1.0F);

        $r17 = new com.android.dreams.phototable.PhotoTable$1;

        specialinvoke $r17.<com.android.dreams.phototable.PhotoTable$1: void <init>(com.android.dreams.phototable.PhotoTable)>(r0);

        virtualinvoke $r14.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator withEndAction(java.lang.Runnable)>($r17);

        goto label2;

     label1:
        $r2 = r0.<com.android.dreams.phototable.PhotoTable: android.view.View mScrim>;

        virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: void bringChildToFront(android.view.View)>($r2);

        virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: void bringChildToFront(android.view.View)>(r1);

        $r3 = r0.<com.android.dreams.phototable.PhotoTable: android.view.View mScrim>;

        $r4 = virtualinvoke $r3.<android.view.View: android.view.ViewPropertyAnimator animate()>();

        $r5 = virtualinvoke $r4.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator withLayer()>();

        $l0 = r0.<com.android.dreams.phototable.PhotoTable: long mPickUpDuration>;

        $r6 = virtualinvoke $r5.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>($l0);

        $r7 = virtualinvoke $r6.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alpha(float)>(0.0F);

        $r8 = new com.android.dreams.phototable.PhotoTable$2;

        specialinvoke $r8.<com.android.dreams.phototable.PhotoTable$2: void <init>(com.android.dreams.phototable.PhotoTable)>(r0);

        virtualinvoke $r7.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator withEndAction(java.lang.Runnable)>($r8);

     label2:
        return;
    }

    private void resolveBackgroundQueue()
    {
        com.android.dreams.phototable.PhotoTable r0;
        java.util.Iterator r1;
        android.view.View r2;
        java.util.Set $r3, $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        $r3 = r0.<com.android.dreams.phototable.PhotoTable: java.util.Set mWaitingToJoinBackground>;

        r1 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.view.View) $r5;

        specialinvoke r0.<com.android.dreams.phototable.PhotoTable: void moveToBackground(android.view.View)>(r2);

        goto label1;

     label2:
        $r4 = r0.<com.android.dreams.phototable.PhotoTable: java.util.Set mWaitingToJoinBackground>;

        interfaceinvoke $r4.<java.util.Set: void clear()>();

        return;
    }

    public void fadeAway(android.view.View, boolean)
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.view.View r1;
        boolean z0;
        java.util.LinkedList $r2;
        android.view.ViewPropertyAnimator $r3, $r4, $r5, $r6, $r7;
        long $l0;
        com.android.dreams.phototable.PhotoTable$3 $r8;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        r1 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        $r2 = r0.<com.android.dreams.phototable.PhotoTable: java.util.LinkedList mOnTable>;

        virtualinvoke $r2.<java.util.LinkedList: boolean remove(java.lang.Object)>(r1);

        specialinvoke r0.<com.android.dreams.phototable.PhotoTable: void exitStageLeft(android.view.View)>(r1);

        virtualinvoke r1.<android.view.View: void setOnTouchListener(android.view.View$OnTouchListener)>(null);

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewPropertyAnimator animate()>();

        virtualinvoke $r3.<android.view.ViewPropertyAnimator: void cancel()>();

        $r4 = virtualinvoke r1.<android.view.View: android.view.ViewPropertyAnimator animate()>();

        $r5 = virtualinvoke $r4.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator withLayer()>();

        $r6 = virtualinvoke $r5.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alpha(float)>(0.0F);

        $l0 = r0.<com.android.dreams.phototable.PhotoTable: long mPickUpDuration>;

        $r7 = virtualinvoke $r6.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>($l0);

        $r8 = new com.android.dreams.phototable.PhotoTable$3;

        specialinvoke $r8.<com.android.dreams.phototable.PhotoTable$3: void <init>(com.android.dreams.phototable.PhotoTable,android.view.View,boolean)>(r0, r1, z0);

        virtualinvoke $r7.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator withEndAction(java.lang.Runnable)>($r8);

        return;
    }

    public void moveToTopOfPile(android.view.View)
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.view.View r1;
        boolean $z0;
        java.util.LinkedList $r2, $r3;
        android.view.ViewGroup $r4;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        r1 := @parameter0: android.view.View;

        $z0 = specialinvoke r0.<com.android.dreams.phototable.PhotoTable: boolean isInBackground(android.view.View)>(r1);

        if $z0 == 0 goto label1;

        $r4 = r0.<com.android.dreams.phototable.PhotoTable: android.view.ViewGroup mBackground>;

        virtualinvoke $r4.<android.view.ViewGroup: void bringChildToFront(android.view.View)>(r1);

        goto label2;

     label1:
        virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: void bringChildToFront(android.view.View)>(r1);

     label2:
        virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: void invalidate()>();

        $r2 = r0.<com.android.dreams.phototable.PhotoTable: java.util.LinkedList mOnTable>;

        virtualinvoke $r2.<java.util.LinkedList: boolean remove(java.lang.Object)>(r1);

        $r3 = r0.<com.android.dreams.phototable.PhotoTable: java.util.LinkedList mOnTable>;

        virtualinvoke $r3.<java.util.LinkedList: boolean offer(java.lang.Object)>(r1);

        return;
    }

    private void placeOnDeck(android.view.View, int)
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.view.View r1, $r4, $r18, $r20;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        float f0, f1, f2, f3, f4, f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, f22;
        android.view.View[] $r2, $r3, $r5, $r15, $r19;
        android.view.ViewPropertyAnimator $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        long $l10;
        android.view.animation.DecelerateInterpolator $r17;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.dreams.phototable.PhotoTable: android.view.View[] mOnDeck>;

        $i1 = lengthof $r2;

        if i0 >= $i1 goto label4;

        $r3 = r0.<com.android.dreams.phototable.PhotoTable: android.view.View[] mOnDeck>;

        $r4 = $r3[i0];

        if $r4 == null goto label1;

        $r15 = r0.<com.android.dreams.phototable.PhotoTable: android.view.View[] mOnDeck>;

        $r20 = $r15[i0];

        if $r20 == r1 goto label1;

        $r19 = r0.<com.android.dreams.phototable.PhotoTable: android.view.View[] mOnDeck>;

        $r18 = $r19[i0];

        virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: void fadeAway(android.view.View,boolean)>($r18, 0);

     label1:
        $r5 = r0.<com.android.dreams.phototable.PhotoTable: android.view.View[] mOnDeck>;

        $r5[i0] = r1;

        $i2 = virtualinvoke r1.<android.view.View: int getWidth()>();

        f0 = (float) $i2;

        $i3 = virtualinvoke r1.<android.view.View: int getHeight()>();

        f1 = (float) $i3;

        $i4 = virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: int getHeight()>();

        $f6 = (float) $i4;

        $f7 = $f6 / f1;

        $i5 = virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: int getWidth()>();

        $f9 = (float) $i5;

        $f8 = $f9 / f0;

        f2 = staticinvoke <java.lang.Math: float min(float,float)>($f7, $f8);

        $i6 = virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: int getWidth()>();

        $f11 = (float) $i6;

        $f10 = $f11 - f0;

        f3 = $f10 / 2.0F;

        $i7 = virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: int getHeight()>();

        $f12 = (float) $i7;

        $f13 = $f12 - f1;

        f4 = $f13 / 2.0F;

        $i8 = r0.<com.android.dreams.phototable.PhotoTable: int mWidth>;

        $f16 = (float) $i8;

        $i9 = r0.<com.android.dreams.phototable.PhotoTable: int mInset>;

        $f14 = (float) $i9;

        $f17 = 2.0F * $f14;

        $f18 = f0 - $f17;

        $f15 = f2 * $f18;

        $f19 = $f16 + $f15;

        f5 = $f19 / 2.0F;

        if i0 != 1 goto label2;

        $f21 = 1.0F;

        goto label3;

     label2:
        $f21 = -1.0F;

     label3:
        $f20 = $f21 * f5;

        f22 = f3 + $f20;

        $r6 = virtualinvoke r1.<android.view.View: android.view.ViewPropertyAnimator animate()>();

        $r7 = virtualinvoke $r6.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator withLayer()>();

        $r10 = virtualinvoke $r7.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator rotation(float)>(0.0F);

        $r11 = virtualinvoke $r10.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator rotationY(float)>(0.0F);

        $r8 = virtualinvoke $r11.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator scaleX(float)>(f2);

        $r9 = virtualinvoke $r8.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator scaleY(float)>(f2);

        $r13 = virtualinvoke $r9.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator x(float)>(f22);

        $r14 = virtualinvoke $r13.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator y(float)>(f4);

        $l10 = r0.<com.android.dreams.phototable.PhotoTable: long mPickUpDuration>;

        $r12 = virtualinvoke $r14.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>($l10);

        $r17 = new android.view.animation.DecelerateInterpolator;

        specialinvoke $r17.<android.view.animation.DecelerateInterpolator: void <init>(float)>(2.0F);

        virtualinvoke $r12.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setInterpolator(android.animation.TimeInterpolator)>($r17);

     label4:
        return;
    }

    public void move(android.view.View, float, float, float)
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.view.View r1;
        float f0, f1, f2, $f3, $f4, $f5;
        android.view.ViewPropertyAnimator $r2;
        int $i0, $i1, $i2;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        f2 := @parameter3: float;

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewPropertyAnimator animate()>();

        virtualinvoke $r2.<android.view.ViewPropertyAnimator: void cancel()>();

        virtualinvoke r1.<android.view.View: void setAlpha(float)>(1.0F);

        $i0 = (int) f0;

        $f3 = (float) $i0;

        virtualinvoke r1.<android.view.View: void setX(float)>($f3);

        $i1 = (int) f1;

        $f4 = (float) $i1;

        virtualinvoke r1.<android.view.View: void setY(float)>($f4);

        $i2 = (int) f2;

        $f5 = (float) $i2;

        virtualinvoke r1.<android.view.View: void setRotation(float)>($f5);

        return;
    }

    private void throwOnTable(android.view.View)
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.view.View r1;
        java.util.LinkedList $r2;
        java.lang.Object[] $r3;
        float $f0, $f1, $f2;
        int $i0, $i1, $i2, $i3;
        android.view.animation.Interpolator $r4;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<com.android.dreams.phototable.PhotoTable: java.util.LinkedList mOnTable>;

        virtualinvoke $r2.<java.util.LinkedList: boolean offer(java.lang.Object)>(r1);

        $r3 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.dreams.phototable.PhotoTable: void log(java.lang.String,java.lang.Object[])>("start offscreen", $r3);

        $f0 = r0.<com.android.dreams.phototable.PhotoTable: float mThrowRotation>;

        virtualinvoke r1.<android.view.View: void setRotation(float)>($f0);

        $i0 = r0.<com.android.dreams.phototable.PhotoTable: int mLongSide>;

        $i1 = neg $i0;

        $f1 = (float) $i1;

        virtualinvoke r1.<android.view.View: void setX(float)>($f1);

        $i2 = r0.<com.android.dreams.phototable.PhotoTable: int mLongSide>;

        $i3 = neg $i2;

        $f2 = (float) $i3;

        virtualinvoke r1.<android.view.View: void setY(float)>($f2);

        $r4 = r0.<com.android.dreams.phototable.PhotoTable: android.view.animation.Interpolator mThrowInterpolator>;

        virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: void dropOnTable(android.view.View,android.view.animation.Interpolator)>(r1, $r4);

        return;
    }

    public void move(android.view.View, float, float, boolean)
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.view.View r1;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7;
        boolean z0, $z1;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        java.lang.String $r12;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        z0 := @parameter3: boolean;

        if r1 == null goto label1;

        $f4 = virtualinvoke r1.<android.view.View: float getX()>();

        f2 = $f4 + f0;

        $f5 = virtualinvoke r1.<android.view.View: float getY()>();

        f3 = $f5 + f1;

        virtualinvoke r1.<android.view.View: void setX(float)>(f2);

        virtualinvoke r1.<android.view.View: void setY(float)>(f3);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $f6 = virtualinvoke r1.<android.view.View: float getX()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f6);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $f7 = virtualinvoke r1.<android.view.View: float getY()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f7);

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] + (");

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f0);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f1);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("PhotoTable", $r12);

        if z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: boolean photoOffTable(android.view.View)>(r1);

        if $z1 == 0 goto label1;

        virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: void fadeAway(android.view.View,boolean)>(r1, 1);

     label1:
        return;
    }

    public void fling(android.view.View)
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.view.View r1;
        float[] r2, r3, r4, r5, r6, $r7, $r8, $r9, $r10, $r11;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, $f45, $f46, $f47, $f48, $f49, $f50, $f51, $f52, $f53;
        int i0, $i1, $i2, $i3, $i4;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8;
        byte $b5;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        r1 := @parameter0: android.view.View;

        $r7 = newarray (float)[2];

        $i1 = r0.<com.android.dreams.phototable.PhotoTable: int mWidth>;

        $f3 = (float) $i1;

        $i2 = r0.<com.android.dreams.phototable.PhotoTable: int mLongSide>;

        $f1 = (float) $i2;

        $f2 = $f1 / 2.0F;

        $f4 = $f3 + $f2;

        $r7[0] = $f4;

        $i4 = r0.<com.android.dreams.phototable.PhotoTable: int mHeight>;

        $f8 = (float) $i4;

        $i3 = r0.<com.android.dreams.phototable.PhotoTable: int mLongSide>;

        $f6 = (float) $i3;

        $f5 = $f6 / 2.0F;

        $f7 = $f8 + $f5;

        $r7[1] = $f7;

        r2 = $r7;

        $r8 = newarray (float)[2];

        $f9 = virtualinvoke r1.<android.view.View: float getX()>();

        $r8[0] = $f9;

        $f10 = virtualinvoke r1.<android.view.View: float getY()>();

        $r8[1] = $f10;

        r3 = $r8;

        $r9 = newarray (float)[2];

        $f12 = r2[0];

        $r9[0] = $f12;

        $f14 = r3[1];

        $f11 = r2[0];

        $f16 = $f14 + $f11;

        $f13 = r3[0];

        $f17 = $f16 - $f13;

        $r9[1] = $f17;

        r4 = $r9;

        $r10 = newarray (float)[2];

        $f20 = r3[0];

        $f15 = r2[1];

        $f18 = $f20 + $f15;

        $f21 = r3[1];

        $f19 = $f18 - $f21;

        $r10[0] = $f19;

        $f24 = r2[1];

        $r10[1] = $f24;

        r5 = $r10;

        $r11 = newarray (float)[2];

        $r11[0] = 0.0F;

        $r11[1] = 0.0F;

        r6 = $r11;

        $f23 = r4[0];

        $f22 = r3[0];

        $f27 = $f23 - $f22;

        $d1 = (double) $f27;

        $f25 = r4[1];

        $f28 = r3[1];

        $f26 = $f25 - $f28;

        $d2 = (double) $f26;

        $d0 = staticinvoke <java.lang.Math: double hypot(double,double)>($d1, $d2);

        $f33 = r5[0];

        $f29 = r3[0];

        $f32 = $f33 - $f29;

        $d4 = (double) $f32;

        $f30 = r5[1];

        $f31 = r3[1];

        $f34 = $f30 - $f31;

        $d5 = (double) $f34;

        $d3 = staticinvoke <java.lang.Math: double hypot(double,double)>($d4, $d5);

        $b5 = $d0 cmpg $d3;

        if $b5 >= 0 goto label1;

        $f45 = r4[0];

        $f44 = r3[0];

        $f46 = $f45 - $f44;

        r6[0] = $f46;

        $f51 = r4[1];

        $f52 = r3[1];

        $f53 = $f51 - $f52;

        r6[1] = $f53;

        goto label2;

     label1:
        $f36 = r5[0];

        $f37 = r3[0];

        $f35 = $f36 - $f37;

        r6[0] = $f35;

        $f40 = r5[1];

        $f39 = r3[1];

        $f41 = $f40 - $f39;

        r6[1] = $f41;

     label2:
        $f42 = r6[0];

        $d7 = (double) $f42;

        $f38 = r6[1];

        $d6 = (double) $f38;

        $d8 = staticinvoke <java.lang.Math: double hypot(double,double)>($d7, $d6);

        f0 = (float) $d8;

        $f48 = 1000.0F * f0;

        $f47 = r0.<com.android.dreams.phototable.PhotoTable: float mThrowSpeed>;

        $f49 = $f48 / $f47;

        i0 = (int) $f49;

        $f43 = r6[0];

        $f50 = r6[1];

        virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: void fling(android.view.View,float,float,int,boolean)>(r1, $f43, $f50, i0, 1);

        return;
    }

    public void fling(android.view.View, float, float, int, boolean)
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.view.View r1, $r3, $r15;
        float f0, f1, $f2;
        int i0, $i2, $i3;
        boolean z0, $z1;
        android.view.ViewPropertyAnimator r2, $r4, $r5, $r6, $r7, $r8;
        long $l1;
        android.view.animation.DecelerateInterpolator $r9;
        java.lang.Object[] $r10;
        com.android.dreams.phototable.PhotoTable$4 $r12;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        f1 := @parameter2: float;

        i0 := @parameter3: int;

        z0 := @parameter4: boolean;

        $r3 = virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: android.view.View getFocus()>();

        if r1 != $r3 goto label1;

        $r15 = virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: android.view.View moveFocus(android.view.View,float)>(r1, 0.0F);

        if $r15 != null goto label1;

        virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: android.view.View moveFocus(android.view.View,float)>(r1, 180.0F);

     label1:
        specialinvoke r0.<com.android.dreams.phototable.PhotoTable: void moveToForeground(android.view.View)>(r1);

        $r4 = virtualinvoke r1.<android.view.View: android.view.ViewPropertyAnimator animate()>();

        $r5 = virtualinvoke $r4.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator withLayer()>();

        $r6 = virtualinvoke $r5.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator xBy(float)>(f0);

        $r7 = virtualinvoke $r6.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator yBy(float)>(f1);

        $l1 = (long) i0;

        $r8 = virtualinvoke $r7.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>($l1);

        $r9 = new android.view.animation.DecelerateInterpolator;

        specialinvoke $r9.<android.view.animation.DecelerateInterpolator: void <init>(float)>(2.0F);

        r2 = virtualinvoke $r8.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setInterpolator(android.animation.TimeInterpolator)>($r9);

        if z0 == 0 goto label2;

        $f2 = r0.<com.android.dreams.phototable.PhotoTable: float mThrowRotation>;

        virtualinvoke r2.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator rotation(float)>($f2);

     label2:
        $i2 = (int) f0;

        $i3 = (int) f1;

        $z1 = virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: boolean photoOffTable(android.view.View,int,int)>(r1, $i2, $i3);

        if $z1 == 0 goto label3;

        $r10 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.dreams.phototable.PhotoTable: void log(java.lang.String,java.lang.Object[])>("fling away", $r10);

        $r12 = new com.android.dreams.phototable.PhotoTable$4;

        specialinvoke $r12.<com.android.dreams.phototable.PhotoTable$4: void <init>(com.android.dreams.phototable.PhotoTable,android.view.View)>(r0, r1);

        virtualinvoke r2.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator withEndAction(java.lang.Runnable)>($r12);

     label3:
        return;
    }

    public boolean photoOffTable(android.view.View)
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.view.View r1;
        boolean $z0;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        r1 := @parameter0: android.view.View;

        $z0 = virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: boolean photoOffTable(android.view.View,int,int)>(r1, 0, 0);

        return $z0;
    }

    public boolean photoOffTable(android.view.View, int, int)
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.view.View r1;
        int i0, i1, $i2, $i4, $i5, $i6, $i8, $i9;
        android.graphics.Rect r2, $r3;
        float $f0, $f1;
        byte $b3, $b7;
        boolean $z0;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r2 = $r3;

        virtualinvoke r1.<android.view.View: void getHitRect(android.graphics.Rect)>(r2);

        virtualinvoke r2.<android.graphics.Rect: void offset(int,int)>(i0, i1);

        $i2 = r2.<android.graphics.Rect: int bottom>;

        $f0 = (float) $i2;

        $b3 = $f0 cmpg 0.0F;

        if $b3 < 0 goto label1;

        $i4 = r2.<android.graphics.Rect: int top>;

        $i5 = virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: int getHeight()>();

        if $i4 > $i5 goto label1;

        $i6 = r2.<android.graphics.Rect: int right>;

        $f1 = (float) $i6;

        $b7 = $f1 cmpg 0.0F;

        if $b7 < 0 goto label1;

        $i8 = r2.<android.graphics.Rect: int left>;

        $i9 = virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: int getWidth()>();

        if $i8 <= $i9 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public void dropOnTable(android.view.View)
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.view.View r1;
        android.view.animation.Interpolator $r2;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<com.android.dreams.phototable.PhotoTable: android.view.animation.Interpolator mDropInterpolator>;

        virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: void dropOnTable(android.view.View,android.view.animation.Interpolator)>(r1, $r2);

        return;
    }

    public void dropOnTable(android.view.View, android.view.animation.Interpolator)
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.view.View r1;
        android.view.animation.Interpolator r2;
        float f0, f1, f2, f3, f4, f5, f6, f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, f26, f27;
        android.graphics.PointF r3;
        int i0, $i1, $i2, $i3, $i4, $i5, i7;
        java.util.Random $r4, $r5, $r6;
        double $d0, $d1, $d2, $d3, $d4;
        java.lang.Object[] $r7, $r10, $r13;
        java.lang.Float $r8, $r9, $r11, $r12;
        android.view.ViewPropertyAnimator $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22;
        long $l6;
        com.android.dreams.phototable.PhotoTable$5 $r23;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.animation.Interpolator;

        $f8 = r0.<com.android.dreams.phototable.PhotoTable: float mImageRotationLimit>;

        $f10 = neg $f8;

        $f9 = r0.<com.android.dreams.phototable.PhotoTable: float mImageRotationLimit>;

        f0 = staticinvoke <com.android.dreams.phototable.PhotoTable: float randfrange(float,float)>($f10, $f9);

        $r4 = <com.android.dreams.phototable.PhotoTable: java.util.Random sRNG>;

        $i1 = virtualinvoke $r4.<java.util.Random: int nextInt()>();

        $r5 = <com.android.dreams.phototable.PhotoTable: java.util.Random sRNG>;

        $d0 = virtualinvoke $r5.<java.util.Random: double nextGaussian()>();

        $f11 = (float) $d0;

        $r6 = <com.android.dreams.phototable.PhotoTable: java.util.Random sRNG>;

        $d1 = virtualinvoke $r6.<java.util.Random: double nextGaussian()>();

        $f12 = (float) $d1;

        $i2 = r0.<com.android.dreams.phototable.PhotoTable: int mWidth>;

        $i3 = r0.<com.android.dreams.phototable.PhotoTable: int mHeight>;

        r3 = staticinvoke <com.android.dreams.phototable.PhotoTable: android.graphics.PointF randMultiDrop(int,float,float,int,int)>($i1, $f11, $f12, $i2, $i3);

        f1 = r3.<android.graphics.PointF: float x>;

        f2 = r3.<android.graphics.PointF: float y>;

        $r7 = newarray (java.lang.Object)[2];

        $r8 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f1);

        $r7[0] = $r8;

        $r9 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f2);

        $r7[1] = $r9;

        staticinvoke <com.android.dreams.phototable.PhotoTable: void log(java.lang.String,java.lang.Object[])>("drop it at %f, %f", $r7);

        f3 = virtualinvoke r1.<android.view.View: float getX()>();

        f4 = virtualinvoke r1.<android.view.View: float getY()>();

        $i5 = r0.<com.android.dreams.phototable.PhotoTable: int mLongSide>;

        $f14 = (float) $i5;

        $f13 = $f14 / 2.0F;

        f26 = f1 - $f13;

        $i4 = r0.<com.android.dreams.phototable.PhotoTable: int mShortSide>;

        $f15 = (float) $i4;

        $f16 = $f15 / 2.0F;

        f27 = f2 - $f16;

        $r10 = newarray (java.lang.Object)[2];

        $r12 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f26);

        $r10[0] = $r12;

        $r11 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f27);

        $r10[1] = $r11;

        staticinvoke <com.android.dreams.phototable.PhotoTable: void log(java.lang.String,java.lang.Object[])>("fixed offset is %f, %f ", $r10);

        f5 = f26 - f3;

        f6 = f27 - f4;

        $d3 = (double) f5;

        $d4 = (double) f6;

        $d2 = staticinvoke <java.lang.Math: double hypot(double,double)>($d3, $d4);

        f7 = (float) $d2;

        $f19 = 1000.0F * f7;

        $f17 = r0.<com.android.dreams.phototable.PhotoTable: float mThrowSpeed>;

        $f18 = $f19 / $f17;

        i0 = (int) $f18;

        i7 = staticinvoke <java.lang.Math: int max(int,int)>(i0, 1000);

        $r13 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.dreams.phototable.PhotoTable: void log(java.lang.String,java.lang.Object[])>("animate it", $r13);

        specialinvoke r0.<com.android.dreams.phototable.PhotoTable: void resolveBackgroundQueue()>();

        $r15 = virtualinvoke r1.<android.view.View: android.view.ViewPropertyAnimator animate()>();

        $r14 = virtualinvoke $r15.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator withLayer()>();

        $f20 = r0.<com.android.dreams.phototable.PhotoTable: float mTableRatio>;

        $f21 = r0.<com.android.dreams.phototable.PhotoTable: float mImageRatio>;

        $f24 = $f20 / $f21;

        $r16 = virtualinvoke $r14.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator scaleX(float)>($f24);

        $f22 = r0.<com.android.dreams.phototable.PhotoTable: float mTableRatio>;

        $f23 = r0.<com.android.dreams.phototable.PhotoTable: float mImageRatio>;

        $f25 = $f22 / $f23;

        $r20 = virtualinvoke $r16.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator scaleY(float)>($f25);

        $r21 = virtualinvoke $r20.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator rotation(float)>(f0);

        $r22 = virtualinvoke $r21.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator x(float)>(f26);

        $r17 = virtualinvoke $r22.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator y(float)>(f27);

        $l6 = (long) i7;

        $r18 = virtualinvoke $r17.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>($l6);

        $r19 = virtualinvoke $r18.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setInterpolator(android.animation.TimeInterpolator)>(r2);

        $r23 = new com.android.dreams.phototable.PhotoTable$5;

        specialinvoke $r23.<com.android.dreams.phototable.PhotoTable$5: void <init>(com.android.dreams.phototable.PhotoTable,android.view.View)>(r0, r1);

        virtualinvoke $r19.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator withEndAction(java.lang.Runnable)>($r23);

        return;
    }

    private void moveToBackground(android.view.View)
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.view.View r1;
        boolean $z0, $z1;
        android.widget.FrameLayout$LayoutParams $r2;
        android.view.ViewGroup $r3;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        r1 := @parameter0: android.view.View;

        $z0 = r0.<com.android.dreams.phototable.PhotoTable: boolean mBackgroudOptimization>;

        if $z0 == 0 goto label1;

        $z1 = specialinvoke r0.<com.android.dreams.phototable.PhotoTable: boolean isInBackground(android.view.View)>(r1);

        if $z1 != 0 goto label1;

        specialinvoke r0.<com.android.dreams.phototable.PhotoTable: void removeViewFromParent(android.view.View)>(r1);

        $r3 = r0.<com.android.dreams.phototable.PhotoTable: android.view.ViewGroup mBackground>;

        $r2 = new android.widget.FrameLayout$LayoutParams;

        specialinvoke $r2.<android.widget.FrameLayout$LayoutParams: void <init>(int,int)>(-2, -2);

        virtualinvoke $r3.<android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r1, $r2);

     label1:
        return;
    }

    private void exitStageLeft(android.view.View)
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.view.View r1;
        android.widget.FrameLayout$LayoutParams $r2;
        android.view.ViewGroup $r3;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        r1 := @parameter0: android.view.View;

        specialinvoke r0.<com.android.dreams.phototable.PhotoTable: void removeViewFromParent(android.view.View)>(r1);

        $r3 = r0.<com.android.dreams.phototable.PhotoTable: android.view.ViewGroup mStageLeft>;

        $r2 = new android.widget.FrameLayout$LayoutParams;

        specialinvoke $r2.<android.widget.FrameLayout$LayoutParams: void <init>(int,int)>(-2, -2);

        virtualinvoke $r3.<android.view.ViewGroup: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r1, $r2);

        return;
    }

    private void removeViewFromParent(android.view.View)
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.view.View r1;
        android.view.ViewParent r2;
        android.view.ViewGroup $r3;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        r1 := @parameter0: android.view.View;

        r2 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

        if r2 == null goto label1;

        $r3 = (android.view.ViewGroup) r2;

        virtualinvoke $r3.<android.view.ViewGroup: void removeView(android.view.View)>(r1);

     label1:
        return;
    }

    private void moveToForeground(android.view.View)
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.view.View r1;
        boolean $z0, $z1;
        android.view.ViewGroup $r2;
        android.widget.FrameLayout$LayoutParams $r3;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        r1 := @parameter0: android.view.View;

        $z0 = r0.<com.android.dreams.phototable.PhotoTable: boolean mBackgroudOptimization>;

        if $z0 == 0 goto label1;

        $z1 = specialinvoke r0.<com.android.dreams.phototable.PhotoTable: boolean isInBackground(android.view.View)>(r1);

        if $z1 == 0 goto label1;

        $r2 = r0.<com.android.dreams.phototable.PhotoTable: android.view.ViewGroup mBackground>;

        virtualinvoke $r2.<android.view.ViewGroup: void removeView(android.view.View)>(r1);

        $r3 = new android.widget.FrameLayout$LayoutParams;

        specialinvoke $r3.<android.widget.FrameLayout$LayoutParams: void <init>(int,int)>(-2, -2);

        virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r1, $r3);

     label1:
        return;
    }

    private boolean isInBackground(android.view.View)
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.view.View r1;
        boolean $z0, $z1;
        android.view.ViewGroup $r2;
        int $i0;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        r1 := @parameter0: android.view.View;

        $z0 = r0.<com.android.dreams.phototable.PhotoTable: boolean mBackgroudOptimization>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.dreams.phototable.PhotoTable: android.view.ViewGroup mBackground>;

        $i0 = virtualinvoke $r2.<android.view.ViewGroup: int indexOfChild(android.view.View)>(r1);

        if $i0 == -1 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    private float wrapAngle(float)
    {
        com.android.dreams.phototable.PhotoTable r0;
        float f0, f1, $f2, $f3, f4, f5;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        f0 := @parameter0: float;

        f1 = f0 + 180.0F;

        $f2 = f1 % 360.0F;

        $f3 = $f2 + 360.0F;

        f4 = $f3 % 360.0F;

        f5 = f4 - 180.0F;

        return f5;
    }

    private void pickUp(android.view.View)
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.view.View r1;
        float f0, f1, f2, f3, f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.Object[] $r2, $r4, $r5;
        java.lang.Float $r3;
        java.util.Set $r6;
        android.view.ViewPropertyAnimator $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r17, $r19;
        android.view.animation.DecelerateInterpolator $r16;
        long $l6;
        com.android.dreams.phototable.PhotoTable$6 $r20;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        r1 := @parameter0: android.view.View;

        $i0 = virtualinvoke r1.<android.view.View: int getWidth()>();

        f0 = (float) $i0;

        $i1 = virtualinvoke r1.<android.view.View: int getHeight()>();

        f1 = (float) $i1;

        $i2 = virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: int getHeight()>();

        $f5 = (float) $i2;

        $f6 = $f5 / f1;

        $i3 = virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: int getWidth()>();

        $f7 = (float) $i3;

        $f8 = $f7 / f0;

        f2 = staticinvoke <java.lang.Math: float min(float,float)>($f6, $f8);

        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f2);

        $r2[0] = $r3;

        staticinvoke <com.android.dreams.phototable.PhotoTable: void log(java.lang.String,java.lang.Object[])>("scale is %f", $r2);

        $r4 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.dreams.phototable.PhotoTable: void log(java.lang.String,java.lang.Object[])>("target it", $r4);

        $i4 = virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: int getWidth()>();

        $f10 = (float) $i4;

        $f9 = $f10 - f0;

        f3 = $f9 / 2.0F;

        $i5 = virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: int getHeight()>();

        $f11 = (float) $i5;

        $f13 = $f11 - f1;

        f4 = $f13 / 2.0F;

        $f12 = virtualinvoke r1.<android.view.View: float getRotation()>();

        $f14 = specialinvoke r0.<com.android.dreams.phototable.PhotoTable: float wrapAngle(float)>($f12);

        virtualinvoke r1.<android.view.View: void setRotation(float)>($f14);

        $r5 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.dreams.phototable.PhotoTable: void log(java.lang.String,java.lang.Object[])>("animate it", $r5);

        $r6 = r0.<com.android.dreams.phototable.PhotoTable: java.util.Set mWaitingToJoinBackground>;

        interfaceinvoke $r6.<java.util.Set: boolean remove(java.lang.Object)>(r1);

        specialinvoke r0.<com.android.dreams.phototable.PhotoTable: void moveToForeground(android.view.View)>(r1);

        $r9 = virtualinvoke r1.<android.view.View: android.view.ViewPropertyAnimator animate()>();

        $r10 = virtualinvoke $r9.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator withLayer()>();

        $r7 = virtualinvoke $r10.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator rotation(float)>(0.0F);

        $r8 = virtualinvoke $r7.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator rotationY(float)>(0.0F);

        $r13 = virtualinvoke $r8.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alpha(float)>(1.0F);

        $r14 = virtualinvoke $r13.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator scaleX(float)>(f2);

        $r11 = virtualinvoke $r14.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator scaleY(float)>(f2);

        $r12 = virtualinvoke $r11.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator x(float)>(f3);

        $r17 = virtualinvoke $r12.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator y(float)>(f4);

        $l6 = r0.<com.android.dreams.phototable.PhotoTable: long mPickUpDuration>;

        $r15 = virtualinvoke $r17.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>($l6);

        $r16 = new android.view.animation.DecelerateInterpolator;

        specialinvoke $r16.<android.view.animation.DecelerateInterpolator: void <init>(float)>(2.0F);

        $r19 = virtualinvoke $r15.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setInterpolator(android.animation.TimeInterpolator)>($r16);

        $r20 = new com.android.dreams.phototable.PhotoTable$6;

        specialinvoke $r20.<com.android.dreams.phototable.PhotoTable$6: void <init>(com.android.dreams.phototable.PhotoTable,android.view.View)>(r0, r1);

        virtualinvoke $r19.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator withEndAction(java.lang.Runnable)>($r20);

        return;
    }

    private android.graphics.Bitmap getBitmap(android.view.View)
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.view.View r1;
        android.widget.ImageView r2;
        android.graphics.drawable.LayerDrawable r3;
        android.graphics.drawable.BitmapDrawable r4;
        android.graphics.drawable.Drawable $r5, $r6;
        android.graphics.Bitmap $r7;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        r1 := @parameter0: android.view.View;

        if r1 != null goto label1;

        return null;

     label1:
        r2 = (android.widget.ImageView) r1;

        $r5 = virtualinvoke r2.<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>();

        r3 = (android.graphics.drawable.LayerDrawable) $r5;

        if r3 != null goto label2;

        return null;

     label2:
        $r6 = virtualinvoke r3.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable getDrawable(int)>(0);

        r4 = (android.graphics.drawable.BitmapDrawable) $r6;

        if r4 != null goto label3;

        return null;

     label3:
        $r7 = virtualinvoke r4.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>();

        return $r7;
    }

    private void recycle(android.view.View)
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.view.View r1;
        com.android.dreams.phototable.PhotoSource $r2;
        android.graphics.Bitmap $r3;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        r1 := @parameter0: android.view.View;

        if r1 == null goto label1;

        specialinvoke r0.<com.android.dreams.phototable.PhotoTable: void removeViewFromParent(android.view.View)>(r1);

        $r2 = r0.<com.android.dreams.phototable.PhotoTable: com.android.dreams.phototable.PhotoSource mPhotoSource>;

        $r3 = specialinvoke r0.<com.android.dreams.phototable.PhotoTable: android.graphics.Bitmap getBitmap(android.view.View)>(r1);

        virtualinvoke $r2.<com.android.dreams.phototable.PhotoSource: void recycle(android.graphics.Bitmap)>($r3);

     label1:
        return;
    }

    public void setHighlight(android.view.View, boolean)
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.view.View r1;
        boolean z0;
        android.widget.ImageView r2;
        android.graphics.drawable.LayerDrawable r3;
        android.graphics.drawable.Drawable $r4, $r5, $r6;
        android.graphics.PorterDuff$Mode $r7;
        int $i0;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        r1 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        r2 = (android.widget.ImageView) r1;

        $r4 = virtualinvoke r2.<android.widget.ImageView: android.graphics.drawable.Drawable getDrawable()>();

        r3 = (android.graphics.drawable.LayerDrawable) $r4;

        if z0 == 0 goto label1;

        $r6 = virtualinvoke r3.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable getDrawable(int)>(1);

        $i0 = r0.<com.android.dreams.phototable.PhotoTable: int mHighlightColor>;

        $r7 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_IN>;

        virtualinvoke $r6.<android.graphics.drawable.Drawable: void setColorFilter(int,android.graphics.PorterDuff$Mode)>($i0, $r7);

        goto label2;

     label1:
        $r5 = virtualinvoke r3.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable getDrawable(int)>(1);

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void clearColorFilter()>();

     label2:
        return;
    }

    public void start()
    {
        com.android.dreams.phototable.PhotoTable r0;
        boolean $z0;
        java.lang.Object[] $r1;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        $z0 = r0.<com.android.dreams.phototable.PhotoTable: boolean mStarted>;

        if $z0 != 0 goto label1;

        $r1 = newarray (java.lang.Object)[0];

        staticinvoke <com.android.dreams.phototable.PhotoTable: void log(java.lang.String,java.lang.Object[])>("kick it", $r1);

        r0.<com.android.dreams.phototable.PhotoTable: boolean mStarted> = 1;

        virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: void scheduleNext(int)>(0);

     label1:
        return;
    }

    public void refreshSelection()
    {
        com.android.dreams.phototable.PhotoTable r0;
        int $i0;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        $i0 = r0.<com.android.dreams.phototable.PhotoTable: int mMaxFocusTime>;

        virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: void scheduleSelectionReaper(int)>($i0);

        return;
    }

    public void scheduleSelectionReaper(int)
    {
        com.android.dreams.phototable.PhotoTable r0;
        int i0;
        com.android.dreams.phototable.PhotoTable$SelectionReaper $r1, $r2;
        long $l1;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.dreams.phototable.PhotoTable: com.android.dreams.phototable.PhotoTable$SelectionReaper mSelectionReaper>;

        virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: boolean removeCallbacks(java.lang.Runnable)>($r1);

        $r2 = r0.<com.android.dreams.phototable.PhotoTable: com.android.dreams.phototable.PhotoTable$SelectionReaper mSelectionReaper>;

        $l1 = (long) i0;

        virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: boolean postDelayed(java.lang.Runnable,long)>($r2, $l1);

        return;
    }

    public void refreshFocus()
    {
        com.android.dreams.phototable.PhotoTable r0;
        int $i0;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        $i0 = r0.<com.android.dreams.phototable.PhotoTable: int mMaxFocusTime>;

        virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: void scheduleFocusReaper(int)>($i0);

        return;
    }

    public void scheduleFocusReaper(int)
    {
        com.android.dreams.phototable.PhotoTable r0;
        int i0;
        com.android.dreams.phototable.PhotoTable$FocusReaper $r1, $r2;
        long $l1;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.dreams.phototable.PhotoTable: com.android.dreams.phototable.PhotoTable$FocusReaper mFocusReaper>;

        virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: boolean removeCallbacks(java.lang.Runnable)>($r1);

        $r2 = r0.<com.android.dreams.phototable.PhotoTable: com.android.dreams.phototable.PhotoTable$FocusReaper mFocusReaper>;

        $l1 = (long) i0;

        virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: boolean postDelayed(java.lang.Runnable,long)>($r2, $l1);

        return;
    }

    public void scheduleNext(int)
    {
        com.android.dreams.phototable.PhotoTable r0;
        int i0;
        com.android.dreams.phototable.PhotoTable$Launcher $r1, $r2;
        long $l1;

        r0 := @this: com.android.dreams.phototable.PhotoTable;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.dreams.phototable.PhotoTable: com.android.dreams.phototable.PhotoTable$Launcher mLauncher>;

        virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: boolean removeCallbacks(java.lang.Runnable)>($r1);

        $r2 = r0.<com.android.dreams.phototable.PhotoTable: com.android.dreams.phototable.PhotoTable$Launcher mLauncher>;

        $l1 = (long) i0;

        virtualinvoke r0.<com.android.dreams.phototable.PhotoTable: boolean postDelayed(java.lang.Runnable,long)>($r2, $l1);

        return;
    }

    private static transient void log(java.lang.String, java.lang.Object[])
    {
        java.lang.String r0;
        java.lang.Object[] r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object[];

        return;
    }

    static int access$000(com.android.dreams.phototable.PhotoTable)
    {
        com.android.dreams.phototable.PhotoTable r0;
        int $i0;

        r0 := @parameter0: com.android.dreams.phototable.PhotoTable;

        $i0 = r0.<com.android.dreams.phototable.PhotoTable: int mDropPeriod>;

        return $i0;
    }

    static void access$100(java.lang.String, java.lang.Object[])
    {
        java.lang.String r0;
        java.lang.Object[] r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object[];

        staticinvoke <com.android.dreams.phototable.PhotoTable: void log(java.lang.String,java.lang.Object[])>(r0, r1);

        return;
    }

    static android.graphics.Bitmap access$200(com.android.dreams.phototable.PhotoTable, android.view.View)
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.view.View r1;
        android.graphics.Bitmap $r2;

        r0 := @parameter0: com.android.dreams.phototable.PhotoTable;

        r1 := @parameter1: android.view.View;

        $r2 = specialinvoke r0.<com.android.dreams.phototable.PhotoTable: android.graphics.Bitmap getBitmap(android.view.View)>(r1);

        return $r2;
    }

    static int access$300(com.android.dreams.phototable.PhotoTable)
    {
        com.android.dreams.phototable.PhotoTable r0;
        int $i0;

        r0 := @parameter0: com.android.dreams.phototable.PhotoTable;

        $i0 = r0.<com.android.dreams.phototable.PhotoTable: int mLongSide>;

        return $i0;
    }

    static int access$400(com.android.dreams.phototable.PhotoTable)
    {
        com.android.dreams.phototable.PhotoTable r0;
        int $i0;

        r0 := @parameter0: com.android.dreams.phototable.PhotoTable;

        $i0 = r0.<com.android.dreams.phototable.PhotoTable: int mShortSide>;

        return $i0;
    }

    static com.android.dreams.phototable.PhotoSource access$500(com.android.dreams.phototable.PhotoTable)
    {
        com.android.dreams.phototable.PhotoTable r0;
        com.android.dreams.phototable.PhotoSource $r1;

        r0 := @parameter0: com.android.dreams.phototable.PhotoTable;

        $r1 = r0.<com.android.dreams.phototable.PhotoTable: com.android.dreams.phototable.PhotoSource mPhotoSource>;

        return $r1;
    }

    static android.view.View access$600(com.android.dreams.phototable.PhotoTable, android.graphics.BitmapFactory$Options, android.graphics.Bitmap)
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.graphics.BitmapFactory$Options r1;
        android.graphics.Bitmap r2;
        android.view.View $r3;

        r0 := @parameter0: com.android.dreams.phototable.PhotoTable;

        r1 := @parameter1: android.graphics.BitmapFactory$Options;

        r2 := @parameter2: android.graphics.Bitmap;

        $r3 = staticinvoke <com.android.dreams.phototable.PhotoTable: android.view.View applyFrame(com.android.dreams.phototable.PhotoTable,android.graphics.BitmapFactory$Options,android.graphics.Bitmap)>(r0, r1, r2);

        return $r3;
    }

    static android.view.View[] access$700(com.android.dreams.phototable.PhotoTable)
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.view.View[] $r1;

        r0 := @parameter0: com.android.dreams.phototable.PhotoTable;

        $r1 = r0.<com.android.dreams.phototable.PhotoTable: android.view.View[] mOnDeck>;

        return $r1;
    }

    static int access$800(com.android.dreams.phototable.PhotoTable)
    {
        com.android.dreams.phototable.PhotoTable r0;
        int $i0;

        r0 := @parameter0: com.android.dreams.phototable.PhotoTable;

        $i0 = r0.<com.android.dreams.phototable.PhotoTable: int mWidth>;

        return $i0;
    }

    static int access$900(com.android.dreams.phototable.PhotoTable)
    {
        com.android.dreams.phototable.PhotoTable r0;
        int $i0;

        r0 := @parameter0: com.android.dreams.phototable.PhotoTable;

        $i0 = r0.<com.android.dreams.phototable.PhotoTable: int mHeight>;

        return $i0;
    }

    static void access$1100(com.android.dreams.phototable.PhotoTable, android.view.View, int)
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.view.View r1;
        int i0;

        r0 := @parameter0: com.android.dreams.phototable.PhotoTable;

        r1 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.dreams.phototable.PhotoTable: void placeOnDeck(android.view.View,int)>(r1, i0);

        return;
    }

    static void access$1200(com.android.dreams.phototable.PhotoTable, android.view.View)
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.view.View r1;

        r0 := @parameter0: com.android.dreams.phototable.PhotoTable;

        r1 := @parameter1: android.view.View;

        specialinvoke r0.<com.android.dreams.phototable.PhotoTable: void recycle(android.view.View)>(r1);

        return;
    }

    static void access$1300(com.android.dreams.phototable.PhotoTable, android.view.View)
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.view.View r1;

        r0 := @parameter0: com.android.dreams.phototable.PhotoTable;

        r1 := @parameter1: android.view.View;

        specialinvoke r0.<com.android.dreams.phototable.PhotoTable: void throwOnTable(android.view.View)>(r1);

        return;
    }

    static java.util.LinkedList access$1400(com.android.dreams.phototable.PhotoTable)
    {
        com.android.dreams.phototable.PhotoTable r0;
        java.util.LinkedList $r1;

        r0 := @parameter0: com.android.dreams.phototable.PhotoTable;

        $r1 = r0.<com.android.dreams.phototable.PhotoTable: java.util.LinkedList mOnTable>;

        return $r1;
    }

    static int access$1500(com.android.dreams.phototable.PhotoTable)
    {
        com.android.dreams.phototable.PhotoTable r0;
        int $i0;

        r0 := @parameter0: com.android.dreams.phototable.PhotoTable;

        $i0 = r0.<com.android.dreams.phototable.PhotoTable: int mTableCapacity>;

        return $i0;
    }

    static int access$1600(com.android.dreams.phototable.PhotoTable)
    {
        com.android.dreams.phototable.PhotoTable r0;
        int $i0;

        r0 := @parameter0: com.android.dreams.phototable.PhotoTable;

        $i0 = r0.<com.android.dreams.phototable.PhotoTable: int mRedealCount>;

        return $i0;
    }

    static int access$1700(com.android.dreams.phototable.PhotoTable)
    {
        com.android.dreams.phototable.PhotoTable r0;
        int $i0;

        r0 := @parameter0: com.android.dreams.phototable.PhotoTable;

        $i0 = r0.<com.android.dreams.phototable.PhotoTable: int mFastDropPeriod>;

        return $i0;
    }

    static void access$1800(com.android.dreams.phototable.PhotoTable)
    {
        com.android.dreams.phototable.PhotoTable r0;

        r0 := @parameter0: com.android.dreams.phototable.PhotoTable;

        specialinvoke r0.<com.android.dreams.phototable.PhotoTable: void resolveBackgroundQueue()>();

        return;
    }

    static android.view.View access$1900(com.android.dreams.phototable.PhotoTable)
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.view.View $r1;

        r0 := @parameter0: com.android.dreams.phototable.PhotoTable;

        $r1 = r0.<com.android.dreams.phototable.PhotoTable: android.view.View mScrim>;

        return $r1;
    }

    static android.view.ViewGroup access$2000(com.android.dreams.phototable.PhotoTable)
    {
        com.android.dreams.phototable.PhotoTable r0;
        android.view.ViewGroup $r1;

        r0 := @parameter0: com.android.dreams.phototable.PhotoTable;

        $r1 = r0.<com.android.dreams.phototable.PhotoTable: android.view.ViewGroup mStageLeft>;

        return $r1;
    }

    static int access$2100(com.android.dreams.phototable.PhotoTable)
    {
        com.android.dreams.phototable.PhotoTable r0;
        int $i0;

        r0 := @parameter0: com.android.dreams.phototable.PhotoTable;

        $i0 = r0.<com.android.dreams.phototable.PhotoTable: int mNowDropDelay>;

        return $i0;
    }

    static java.util.Set access$2200(com.android.dreams.phototable.PhotoTable)
    {
        com.android.dreams.phototable.PhotoTable r0;
        java.util.Set $r1;

        r0 := @parameter0: com.android.dreams.phototable.PhotoTable;

        $r1 = r0.<com.android.dreams.phototable.PhotoTable: java.util.Set mWaitingToJoinBackground>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;
        java.util.Random $r1;

        <com.android.dreams.phototable.PhotoTable: int PREV> = 0;

        <com.android.dreams.phototable.PhotoTable: int NEXT> = 1;

        <com.android.dreams.phototable.PhotoTable: boolean DEBUG> = 0;

        <com.android.dreams.phototable.PhotoTable: java.lang.String TAG> = "PhotoTable";

        $r0 = class "com/android/dreams/phototable/PhotoTable";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.android.dreams.phototable.PhotoTable: boolean $assertionsDisabled> = $z1;

        $r1 = new java.util.Random;

        specialinvoke $r1.<java.util.Random: void <init>()>();

        <com.android.dreams.phototable.PhotoTable: java.util.Random sRNG> = $r1;

        return;
    }
}
