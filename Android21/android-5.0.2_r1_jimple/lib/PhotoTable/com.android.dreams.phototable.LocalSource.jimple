public class com.android.dreams.phototable.LocalSource extends com.android.dreams.phototable.CursorPhotoSource
{
    private static final java.lang.String TAG;
    private final java.lang.String mUnknownAlbumName;
    private final java.lang.String mLocalSourceName;
    private java.util.Set mFoundAlbumIds;
    private int mLastPosition;

    public void <init>(android.content.Context, android.content.SharedPreferences)
    {
        com.android.dreams.phototable.LocalSource r0;
        android.content.Context r1;
        android.content.SharedPreferences r2;
        java.lang.Object[] $r3, $r6;
        android.content.res.Resources $r4, $r7;
        java.lang.String $r5, $r8;

        r0 := @this: com.android.dreams.phototable.LocalSource;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.SharedPreferences;

        specialinvoke r0.<com.android.dreams.phototable.CursorPhotoSource: void <init>(android.content.Context,android.content.SharedPreferences)>(r1, r2);

        $r4 = r0.<com.android.dreams.phototable.LocalSource: android.content.res.Resources mResources>;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = "Photos on Device";

        $r5 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(2131492870, $r3);

        r0.<com.android.dreams.phototable.LocalSource: java.lang.String mLocalSourceName> = $r5;

        $r7 = r0.<com.android.dreams.phototable.LocalSource: android.content.res.Resources mResources>;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = "Unknown";

        $r8 = virtualinvoke $r7.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(2131492868, $r6);

        r0.<com.android.dreams.phototable.LocalSource: java.lang.String mUnknownAlbumName> = $r8;

        r0.<com.android.dreams.phototable.LocalSource: java.lang.String mSourceName> = "PhotoTable.LocalSource";

        r0.<com.android.dreams.phototable.LocalSource: int mLastPosition> = -2;

        virtualinvoke r0.<com.android.dreams.phototable.LocalSource: void fillQueue()>();

        return;
    }

    private java.util.Set getFoundAlbums()
    {
        com.android.dreams.phototable.LocalSource r0;
        java.util.Set $r1, $r2;

        r0 := @this: com.android.dreams.phototable.LocalSource;

        $r1 = r0.<com.android.dreams.phototable.LocalSource: java.util.Set mFoundAlbumIds>;

        if $r1 != null goto label1;

        virtualinvoke r0.<com.android.dreams.phototable.LocalSource: java.util.Collection findAlbums()>();

     label1:
        $r2 = r0.<com.android.dreams.phototable.LocalSource: java.util.Set mFoundAlbumIds>;

        return $r2;
    }

    public java.util.Collection findAlbums()
    {
        com.android.dreams.phototable.LocalSource r0;
        java.util.HashMap r1, $r2;
        java.lang.StringBuilder $r3, $r4, $r5, $r6;
        int $i0;
        java.lang.String $r7;
        java.util.Set $r8;
        java.util.Collection $r9;

        r0 := @this: com.android.dreams.phototable.LocalSource;

        staticinvoke <com.android.dreams.phototable.LocalSource: void log(java.lang.String,java.lang.String)>("PhotoTable.LocalSource", "finding albums");

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r1 = $r2;

        virtualinvoke r0.<com.android.dreams.phototable.LocalSource: void findAlbums(boolean,java.util.HashMap)>(0, r1);

        virtualinvoke r0.<com.android.dreams.phototable.LocalSource: void findAlbums(boolean,java.util.HashMap)>(1, r1);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("found ");

        $i0 = virtualinvoke r1.<java.util.HashMap: int size()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" items.");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.dreams.phototable.LocalSource: void log(java.lang.String,java.lang.String)>("PhotoTable.LocalSource", $r7);

        $r8 = virtualinvoke r1.<java.util.HashMap: java.util.Set keySet()>();

        r0.<com.android.dreams.phototable.LocalSource: java.util.Set mFoundAlbumIds> = $r8;

        $r9 = virtualinvoke r1.<java.util.HashMap: java.util.Collection values()>();

        return $r9;
    }

    public void findAlbums(boolean, java.util.HashMap)
    {
        com.android.dreams.phototable.LocalSource r0;
        boolean z0, $z2;
        java.util.HashMap r1;
        android.net.Uri r2, $r23;
        java.lang.String[] r3, $r7;
        android.database.Cursor r4;
        int i0, i1, i2, i3;
        java.lang.String r5, $r9, $r12, $r15, $r18, $r19, $r20, $r21;
        com.android.dreams.phototable.PhotoSource$AlbumData r6, $r14;
        long l4, $l6, $l7, $l8;
        android.content.ContentResolver $r8;
        java.lang.Object $r10, $r11;
        byte $b5;
        java.lang.StringBuilder $r13, $r16, $r17;

        r0 := @this: com.android.dreams.phototable.LocalSource;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.util.HashMap;

        if z0 == 0 goto label01;

        $r23 = <android.provider.MediaStore$Images$Media: android.net.Uri INTERNAL_CONTENT_URI>;

        goto label02;

     label01:
        $r23 = <android.provider.MediaStore$Images$Media: android.net.Uri EXTERNAL_CONTENT_URI>;

     label02:
        r2 = $r23;

        $r7 = newarray (java.lang.String)[4];

        $r7[0] = "_data";

        $r7[1] = "bucket_id";

        $r7[2] = "bucket_display_name";

        $r7[3] = "datetaken";

        r3 = $r7;

        $r8 = r0.<com.android.dreams.phototable.LocalSource: android.content.ContentResolver mResolver>;

        r4 = virtualinvoke $r8.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r2, r3, null, null, null);

        if r4 == null goto label12;

        interfaceinvoke r4.<android.database.Cursor: boolean moveToPosition(int)>(-1);

        i0 = interfaceinvoke r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("_data");

        i1 = interfaceinvoke r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("bucket_id");

        i2 = interfaceinvoke r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("bucket_display_name");

        i3 = interfaceinvoke r4.<android.database.Cursor: int getColumnIndex(java.lang.String)>("datetaken");

        if i1 >= 0 goto label03;

        staticinvoke <com.android.dreams.phototable.LocalSource: void log(java.lang.String,java.lang.String)>("PhotoTable.LocalSource", "can\'t find the ID column!");

        goto label11;

     label03:
        $z2 = interfaceinvoke r4.<android.database.Cursor: boolean moveToNext()>();

        if $z2 == 0 goto label11;

        $r9 = interfaceinvoke r4.<android.database.Cursor: java.lang.String getString(int)>(i1);

        r5 = staticinvoke <com.android.dreams.phototable.LocalSource: java.lang.String constructId(boolean,java.lang.String)>(z0, $r9);

        $r10 = virtualinvoke r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r5);

        r6 = (com.android.dreams.phototable.PhotoSource$AlbumData) $r10;

        $r11 = virtualinvoke r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r5);

        if $r11 != null goto label07;

        $r14 = new com.android.dreams.phototable.PhotoSource$AlbumData;

        specialinvoke $r14.<com.android.dreams.phototable.PhotoSource$AlbumData: void <init>(com.android.dreams.phototable.PhotoSource)>(r0);

        r6 = $r14;

        r6.<com.android.dreams.phototable.PhotoSource$AlbumData: java.lang.String id> = r5;

        $r15 = r0.<com.android.dreams.phototable.LocalSource: java.lang.String mLocalSourceName>;

        r6.<com.android.dreams.phototable.PhotoSource$AlbumData: java.lang.String account> = $r15;

        if i0 < 0 goto label04;

        $r20 = interfaceinvoke r4.<android.database.Cursor: java.lang.String getString(int)>(i0);

        r6.<com.android.dreams.phototable.PhotoSource$AlbumData: java.lang.String thumbnailUrl> = $r20;

     label04:
        if i2 < 0 goto label05;

        $r19 = interfaceinvoke r4.<android.database.Cursor: java.lang.String getString(int)>(i2);

        r6.<com.android.dreams.phototable.PhotoSource$AlbumData: java.lang.String title> = $r19;

        goto label06;

     label05:
        $r12 = r0.<com.android.dreams.phototable.LocalSource: java.lang.String mUnknownAlbumName>;

        r6.<com.android.dreams.phototable.PhotoSource$AlbumData: java.lang.String title> = $r12;

     label06:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r18 = r6.<com.android.dreams.phototable.PhotoSource$AlbumData: java.lang.String title>;

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" found");

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.dreams.phototable.LocalSource: void log(java.lang.String,java.lang.String)>("PhotoTable.LocalSource", $r21);

        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, r6);

     label07:
        if i3 < 0 goto label10;

        l4 = interfaceinvoke r4.<android.database.Cursor: long getLong(int)>(i3);

        $l6 = r6.<com.android.dreams.phototable.PhotoSource$AlbumData: long updated>;

        $b5 = $l6 cmp 0L;

        if $b5 != 0 goto label08;

        $l7 = l4;

        goto label09;

     label08:
        $l8 = r6.<com.android.dreams.phototable.PhotoSource$AlbumData: long updated>;

        $l7 = staticinvoke <java.lang.Math: long min(long,long)>($l8, l4);

     label09:
        r6.<com.android.dreams.phototable.PhotoSource$AlbumData: long updated> = $l7;

     label10:
        goto label03;

     label11:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

     label12:
        return;
    }

    public static java.lang.String constructId(boolean, java.lang.String)
    {
        boolean z0;
        java.lang.String r0, $r5, $r6;
        java.lang.StringBuilder $r1, $r2, $r3, $r4;

        z0 := @parameter0: boolean;

        r0 := @parameter1: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PhotoTable.LocalSource:");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        if z0 == 0 goto label1;

        $r6 = ":i";

        goto label2;

     label1:
        $r6 = "";

     label2:
        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    protected void openCursor(com.android.dreams.phototable.PhotoSource$ImageData)
    {
        com.android.dreams.phototable.LocalSource r0;
        com.android.dreams.phototable.PhotoSource$ImageData r1;
        java.lang.String[] r2, $r4;
        java.lang.String r3, $r7;
        java.lang.StringBuilder $r5, $r6, $r8, $r9;
        android.net.Uri $r10;
        android.content.ContentResolver $r11;
        android.database.Cursor $r12;

        r0 := @this: com.android.dreams.phototable.LocalSource;

        r1 := @parameter0: com.android.dreams.phototable.PhotoSource$ImageData;

        staticinvoke <com.android.dreams.phototable.LocalSource: void log(java.lang.String,java.lang.String)>("PhotoTable.LocalSource", "opening single album");

        $r4 = newarray (java.lang.String)[4];

        $r4[0] = "_data";

        $r4[1] = "orientation";

        $r4[2] = "bucket_id";

        $r4[3] = "bucket_display_name";

        r2 = $r4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bucket_id = \'");

        $r7 = r1.<com.android.dreams.phototable.PhotoSource$ImageData: java.lang.String albumId>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        r3 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = r0.<com.android.dreams.phototable.LocalSource: android.content.ContentResolver mResolver>;

        $r10 = r1.<com.android.dreams.phototable.PhotoSource$ImageData: android.net.Uri uri>;

        $r12 = virtualinvoke $r11.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r10, r2, r3, null, null);

        r1.<com.android.dreams.phototable.PhotoSource$ImageData: android.database.Cursor cursor> = $r12;

        return;
    }

    protected void findPosition(com.android.dreams.phototable.PhotoSource$ImageData)
    {
        com.android.dreams.phototable.LocalSource r0;
        com.android.dreams.phototable.PhotoSource$ImageData r1;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.String r2, $r9;
        android.database.Cursor $r3, $r4, $r5, $r6, $r7, $r8, $r10;
        boolean $z1, $z2;

        r0 := @this: com.android.dreams.phototable.LocalSource;

        r1 := @parameter0: com.android.dreams.phototable.PhotoSource$ImageData;

        $i1 = r1.<com.android.dreams.phototable.PhotoSource$ImageData: int position>;

        if $i1 != -1 goto label5;

        $r3 = r1.<com.android.dreams.phototable.PhotoSource$ImageData: android.database.Cursor cursor>;

        if $r3 != null goto label1;

        virtualinvoke r0.<com.android.dreams.phototable.LocalSource: void openCursor(com.android.dreams.phototable.PhotoSource$ImageData)>(r1);

     label1:
        $r4 = r1.<com.android.dreams.phototable.PhotoSource$ImageData: android.database.Cursor cursor>;

        if $r4 == null goto label5;

        $r5 = r1.<com.android.dreams.phototable.PhotoSource$ImageData: android.database.Cursor cursor>;

        i0 = interfaceinvoke $r5.<android.database.Cursor: int getColumnIndex(java.lang.String)>("_data");

        $r6 = r1.<com.android.dreams.phototable.PhotoSource$ImageData: android.database.Cursor cursor>;

        interfaceinvoke $r6.<android.database.Cursor: boolean moveToPosition(int)>(-1);

     label2:
        $i2 = r1.<com.android.dreams.phototable.PhotoSource$ImageData: int position>;

        if $i2 != -1 goto label4;

        $r7 = r1.<com.android.dreams.phototable.PhotoSource$ImageData: android.database.Cursor cursor>;

        $z1 = interfaceinvoke $r7.<android.database.Cursor: boolean moveToNext()>();

        if $z1 == 0 goto label4;

        $r8 = r1.<com.android.dreams.phototable.PhotoSource$ImageData: android.database.Cursor cursor>;

        r2 = interfaceinvoke $r8.<android.database.Cursor: java.lang.String getString(int)>(i0);

        if r2 == null goto label3;

        $r9 = r1.<com.android.dreams.phototable.PhotoSource$ImageData: java.lang.String url>;

        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z2 == 0 goto label3;

        $r10 = r1.<com.android.dreams.phototable.PhotoSource$ImageData: android.database.Cursor cursor>;

        $i4 = interfaceinvoke $r10.<android.database.Cursor: int getPosition()>();

        r1.<com.android.dreams.phototable.PhotoSource$ImageData: int position> = $i4;

     label3:
        goto label2;

     label4:
        $i3 = r1.<com.android.dreams.phototable.PhotoSource$ImageData: int position>;

        if $i3 != -1 goto label5;

        r1.<com.android.dreams.phototable.PhotoSource$ImageData: int position> = -2;

     label5:
        return;
    }

    protected com.android.dreams.phototable.PhotoSource$ImageData unpackImageData(android.database.Cursor, com.android.dreams.phototable.PhotoSource$ImageData)
    {
        com.android.dreams.phototable.LocalSource r0;
        android.database.Cursor r1;
        com.android.dreams.phototable.PhotoSource$ImageData r2, $r5;
        int i0, i1, i2, $i3;
        java.lang.String $r3, $r4;

        r0 := @this: com.android.dreams.phototable.LocalSource;

        r1 := @parameter0: android.database.Cursor;

        r2 := @parameter1: com.android.dreams.phototable.PhotoSource$ImageData;

        if r2 != null goto label1;

        $r5 = new com.android.dreams.phototable.PhotoSource$ImageData;

        specialinvoke $r5.<com.android.dreams.phototable.PhotoSource$ImageData: void <init>(com.android.dreams.phototable.PhotoSource)>(r0);

        r2 = $r5;

     label1:
        i0 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("_data");

        i1 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("orientation");

        i2 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndex(java.lang.String)>("bucket_id");

        $r3 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(i0);

        r2.<com.android.dreams.phototable.PhotoSource$ImageData: java.lang.String url> = $r3;

        $r4 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(i2);

        r2.<com.android.dreams.phototable.PhotoSource$ImageData: java.lang.String albumId> = $r4;

        r2.<com.android.dreams.phototable.PhotoSource$ImageData: int position> = -1;

        r2.<com.android.dreams.phototable.PhotoSource$ImageData: android.database.Cursor cursor> = null;

        $i3 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>(i1);

        r2.<com.android.dreams.phototable.PhotoSource$ImageData: int orientation> = $i3;

        return r2;
    }

    protected java.util.Collection findImages(int)
    {
        com.android.dreams.phototable.LocalSource r0;
        int i0, $i1, $i2, $i3, $i4;
        java.util.LinkedList r1, $r2;
        boolean z0, $z1, $z2;
        java.util.Random $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: com.android.dreams.phototable.LocalSource;

        i0 := @parameter0: int;

        staticinvoke <com.android.dreams.phototable.LocalSource: void log(java.lang.String,java.lang.String)>("PhotoTable.LocalSource", "finding images");

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        r1 = $r2;

        $r3 = r0.<com.android.dreams.phototable.LocalSource: java.util.Random mRNG>;

        $i1 = virtualinvoke $r3.<java.util.Random: int nextInt(int)>(2);

        if $i1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z0 = $z2;

        virtualinvoke r0.<com.android.dreams.phototable.LocalSource: void findImages(boolean,int,java.util.LinkedList)>(z0, i0, r1);

        if z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        $i2 = virtualinvoke r1.<java.util.LinkedList: int size()>();

        $i3 = i0 - $i2;

        virtualinvoke r0.<com.android.dreams.phototable.LocalSource: void findImages(boolean,int,java.util.LinkedList)>($z1, $i3, r1);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("found ");

        $i4 = virtualinvoke r1.<java.util.LinkedList: int size()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" items.");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.dreams.phototable.LocalSource: void log(java.lang.String,java.lang.String)>("PhotoTable.LocalSource", $r8);

        return r1;
    }

    protected void findImages(boolean, int, java.util.LinkedList)
    {
        com.android.dreams.phototable.LocalSource r0;
        boolean z0, $z1, $z2, $z4, $z5, $z6, $z8, $z9;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        java.util.LinkedList r1;
        android.net.Uri r2, $r22;
        java.lang.String[] r3, r7, $r8;
        java.lang.String r4, r6, $r18;
        java.util.Iterator r5;
        java.util.Set $r9;
        android.content.ContentResolver $r10;
        java.lang.Object $r11;
        com.android.dreams.phototable.AlbumSettings $r12;
        java.lang.StringBuilder $r13, $r14, $r15, $r16, $r17, $r19, $r20, $r21;
        android.database.Cursor r23;
        com.android.dreams.phototable.PhotoSource$ImageData r24;

        r0 := @this: com.android.dreams.phototable.LocalSource;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        r1 := @parameter2: java.util.LinkedList;

        if z0 == 0 goto label01;

        $r22 = <android.provider.MediaStore$Images$Media: android.net.Uri INTERNAL_CONTENT_URI>;

        goto label02;

     label01:
        $r22 = <android.provider.MediaStore$Images$Media: android.net.Uri EXTERNAL_CONTENT_URI>;

     label02:
        r2 = $r22;

        $r8 = newarray (java.lang.String)[4];

        $r8[0] = "_data";

        $r8[1] = "orientation";

        $r8[2] = "bucket_id";

        $r8[3] = "bucket_display_name";

        r3 = $r8;

        r4 = "";

        $r9 = specialinvoke r0.<com.android.dreams.phototable.LocalSource: java.util.Set getFoundAlbums()>();

        r5 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label06;

        $r11 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r11;

        $z9 = specialinvoke r0.<com.android.dreams.phototable.LocalSource: boolean isInternalId(java.lang.String)>(r6);

        if $z9 != z0 goto label05;

        $r12 = r0.<com.android.dreams.phototable.LocalSource: com.android.dreams.phototable.AlbumSettings mSettings>;

        $z8 = virtualinvoke $r12.<com.android.dreams.phototable.AlbumSettings: boolean isAlbumEnabled(java.lang.String)>(r6);

        if $z8 == 0 goto label05;

        r7 = virtualinvoke r6.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        $i8 = lengthof r7;

        if $i8 <= 1 goto label05;

        $i9 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i9 <= 0 goto label04;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" OR ");

        r4 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

     label04:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bucket_id = \'");

        $r18 = r7[1];

        $r15 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        r4 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

     label05:
        goto label03;

     label06:
        $z2 = virtualinvoke r4.<java.lang.String: boolean isEmpty()>();

        if $z2 == 0 goto label07;

        return;

     label07:
        $r10 = r0.<com.android.dreams.phototable.LocalSource: android.content.ContentResolver mResolver>;

        r23 = virtualinvoke $r10.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r2, r3, r4, null, null);

        if r23 == null goto label13;

        i10 = interfaceinvoke r23.<android.database.Cursor: int getColumnIndex(java.lang.String)>("_data");

        $i2 = interfaceinvoke r23.<android.database.Cursor: int getCount()>();

        if $i2 <= i0 goto label08;

        $i6 = r0.<com.android.dreams.phototable.LocalSource: int mLastPosition>;

        if $i6 != -2 goto label08;

        $i5 = interfaceinvoke r23.<android.database.Cursor: int getCount()>();

        $i7 = virtualinvoke r0.<com.android.dreams.phototable.LocalSource: int pickRandomStart(int,int)>($i5, i0);

        r0.<com.android.dreams.phototable.LocalSource: int mLastPosition> = $i7;

     label08:
        $i1 = r0.<com.android.dreams.phototable.LocalSource: int mLastPosition>;

        interfaceinvoke r23.<android.database.Cursor: boolean moveToPosition(int)>($i1);

        if i10 >= 0 goto label09;

        staticinvoke <com.android.dreams.phototable.LocalSource: void log(java.lang.String,java.lang.String)>("PhotoTable.LocalSource", "can\'t find the DATA column!");

        goto label12;

     label09:
        $i3 = virtualinvoke r1.<java.util.LinkedList: int size()>();

        if $i3 >= i0 goto label10;

        $z6 = interfaceinvoke r23.<android.database.Cursor: boolean moveToNext()>();

        if $z6 == 0 goto label10;

        r24 = virtualinvoke r0.<com.android.dreams.phototable.LocalSource: com.android.dreams.phototable.PhotoSource$ImageData unpackImageData(android.database.Cursor,com.android.dreams.phototable.PhotoSource$ImageData)>(r23, null);

        r24.<com.android.dreams.phototable.PhotoSource$ImageData: android.net.Uri uri> = r2;

        virtualinvoke r1.<java.util.LinkedList: boolean offer(java.lang.Object)>(r24);

        $i4 = interfaceinvoke r23.<android.database.Cursor: int getPosition()>();

        r0.<com.android.dreams.phototable.LocalSource: int mLastPosition> = $i4;

        goto label09;

     label10:
        $z5 = interfaceinvoke r23.<android.database.Cursor: boolean isAfterLast()>();

        if $z5 == 0 goto label11;

        r0.<com.android.dreams.phototable.LocalSource: int mLastPosition> = -1;

     label11:
        $z4 = interfaceinvoke r23.<android.database.Cursor: boolean isBeforeFirst()>();

        if $z4 == 0 goto label12;

        r0.<com.android.dreams.phototable.LocalSource: int mLastPosition> = -2;

     label12:
        interfaceinvoke r23.<android.database.Cursor: void close()>();

     label13:
        return;
    }

    private boolean isInternalId(java.lang.String)
    {
        com.android.dreams.phototable.LocalSource r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: com.android.dreams.phototable.LocalSource;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>("i");

        return $z0;
    }

    protected java.io.InputStream getStream(com.android.dreams.phototable.PhotoSource$ImageData, int)
    {
        com.android.dreams.phototable.LocalSource r0;
        com.android.dreams.phototable.PhotoSource$ImageData r1;
        int i0;
        java.lang.Exception r2, $r10;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5, $r7, $r9, $r11;
        java.io.FileInputStream $r8, r12;

        r0 := @this: com.android.dreams.phototable.LocalSource;

        r1 := @parameter0: com.android.dreams.phototable.PhotoSource$ImageData;

        i0 := @parameter1: int;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("opening:");

        $r5 = r1.<com.android.dreams.phototable.PhotoSource$ImageData: java.lang.String url>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.dreams.phototable.LocalSource: void log(java.lang.String,java.lang.String)>("PhotoTable.LocalSource", $r7);

        $r8 = new java.io.FileInputStream;

        $r9 = r1.<com.android.dreams.phototable.PhotoSource$ImageData: java.lang.String url>;

        specialinvoke $r8.<java.io.FileInputStream: void <init>(java.lang.String)>($r9);

        r12 = $r8;

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        r2 = $r10;

        $r11 = virtualinvoke r2.<java.lang.Exception: java.lang.String toString()>();

        staticinvoke <com.android.dreams.phototable.LocalSource: void log(java.lang.String,java.lang.String)>("PhotoTable.LocalSource", $r11);

        r12 = null;

     label4:
        return r12;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static void <clinit>()
    {
        <com.android.dreams.phototable.LocalSource: java.lang.String TAG> = "PhotoTable.LocalSource";

        return;
    }
}
