public class com.android.dreams.phototable.PhotoCarousel extends android.widget.FrameLayout
{
    private static final java.lang.String TAG;
    private static final boolean DEBUG;
    private static final int LANDSCAPE;
    private static final int PORTRAIT;
    private final com.android.dreams.phototable.PhotoCarousel$Flipper mFlipper;
    private final com.android.dreams.phototable.PhotoSourcePlexor mPhotoSource;
    private final android.view.GestureDetector mGestureDetector;
    private final android.view.View[] mPanel;
    private final int mFlipDuration;
    private final int mDropPeriod;
    private final int mBitmapQueueLimit;
    private final java.util.HashMap mBitmapStore;
    private final java.util.LinkedList mBitmapQueue;
    private final java.util.LinkedList mBitmapLoaders;
    private android.view.View mSpinner;
    private int mOrientation;
    private int mWidth;
    private int mHeight;
    private int mLongSide;
    private int mShortSide;
    private long mLastFlipTime;

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.android.dreams.phototable.PhotoCarousel r0;
        android.content.Context r1, $r5, $r6;
        android.util.AttributeSet r2;
        android.content.res.Resources r3;
        int $i0, $i1, $i2;
        com.android.dreams.phototable.PhotoSourcePlexor $r4;
        android.content.SharedPreferences $r7;
        java.util.HashMap $r8;
        java.util.LinkedList $r9, $r10;
        android.view.View[] $r11;
        android.view.GestureDetector $r12;
        com.android.dreams.phototable.PhotoCarousel$Flipper $r13;
        com.android.dreams.phototable.PhotoCarousel$1 $r14;

        r0 := @this: com.android.dreams.phototable.PhotoCarousel;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.FrameLayout: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        r3 = virtualinvoke r0.<com.android.dreams.phototable.PhotoCarousel: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke r3.<android.content.res.Resources: int getInteger(int)>(2131230722);

        r0.<com.android.dreams.phototable.PhotoCarousel: int mDropPeriod> = $i0;

        $i1 = virtualinvoke r3.<android.content.res.Resources: int getInteger(int)>(2131230740);

        r0.<com.android.dreams.phototable.PhotoCarousel: int mBitmapQueueLimit> = $i1;

        $i2 = virtualinvoke r3.<android.content.res.Resources: int getInteger(int)>(2131230724);

        r0.<com.android.dreams.phototable.PhotoCarousel: int mFlipDuration> = $i2;

        $r4 = new com.android.dreams.phototable.PhotoSourcePlexor;

        $r5 = virtualinvoke r0.<com.android.dreams.phototable.PhotoCarousel: android.content.Context getContext()>();

        $r6 = virtualinvoke r0.<com.android.dreams.phototable.PhotoCarousel: android.content.Context getContext()>();

        $r7 = virtualinvoke $r6.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("FlipperDream", 0);

        specialinvoke $r4.<com.android.dreams.phototable.PhotoSourcePlexor: void <init>(android.content.Context,android.content.SharedPreferences)>($r5, $r7);

        r0.<com.android.dreams.phototable.PhotoCarousel: com.android.dreams.phototable.PhotoSourcePlexor mPhotoSource> = $r4;

        $r8 = new java.util.HashMap;

        specialinvoke $r8.<java.util.HashMap: void <init>()>();

        r0.<com.android.dreams.phototable.PhotoCarousel: java.util.HashMap mBitmapStore> = $r8;

        $r9 = new java.util.LinkedList;

        specialinvoke $r9.<java.util.LinkedList: void <init>()>();

        r0.<com.android.dreams.phototable.PhotoCarousel: java.util.LinkedList mBitmapQueue> = $r9;

        $r10 = new java.util.LinkedList;

        specialinvoke $r10.<java.util.LinkedList: void <init>()>();

        r0.<com.android.dreams.phototable.PhotoCarousel: java.util.LinkedList mBitmapLoaders> = $r10;

        $r11 = newarray (android.view.View)[2];

        r0.<com.android.dreams.phototable.PhotoCarousel: android.view.View[] mPanel> = $r11;

        $r13 = new com.android.dreams.phototable.PhotoCarousel$Flipper;

        specialinvoke $r13.<com.android.dreams.phototable.PhotoCarousel$Flipper: void <init>(com.android.dreams.phototable.PhotoCarousel)>(r0);

        r0.<com.android.dreams.phototable.PhotoCarousel: com.android.dreams.phototable.PhotoCarousel$Flipper mFlipper> = $r13;

        $r12 = new android.view.GestureDetector;

        $r14 = new com.android.dreams.phototable.PhotoCarousel$1;

        specialinvoke $r14.<com.android.dreams.phototable.PhotoCarousel$1: void <init>(com.android.dreams.phototable.PhotoCarousel)>(r0);

        specialinvoke $r12.<android.view.GestureDetector: void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener)>(r1, $r14);

        r0.<com.android.dreams.phototable.PhotoCarousel: android.view.GestureDetector mGestureDetector> = $r12;

        return;
    }

    private float lockTo180(float)
    {
        com.android.dreams.phototable.PhotoCarousel r0;
        float f0, $f1, $f2, $f3;
        double $d0, $d1;

        r0 := @this: com.android.dreams.phototable.PhotoCarousel;

        f0 := @parameter0: float;

        $f1 = f0 / 180.0F;

        $d0 = (double) $f1;

        $d1 = staticinvoke <java.lang.Math: double floor(double)>($d0);

        $f2 = (float) $d1;

        $f3 = 180.0F * $f2;

        return $f3;
    }

    private float wrap360(float)
    {
        com.android.dreams.phototable.PhotoCarousel r0;
        float f0, $f1, $f2, $f3, $f4;
        double $d0, $d1;

        r0 := @this: com.android.dreams.phototable.PhotoCarousel;

        f0 := @parameter0: float;

        $f1 = f0 / 360.0F;

        $d0 = (double) $f1;

        $d1 = staticinvoke <java.lang.Math: double floor(double)>($d0);

        $f2 = (float) $d1;

        $f3 = 360.0F * $f2;

        $f4 = f0 - $f3;

        return $f4;
    }

    private void maybeLoadMore()
    {
        com.android.dreams.phototable.PhotoCarousel r0;
        java.util.ListIterator r1;
        com.android.dreams.phototable.PhotoCarousel$PhotoLoadTask r2, $r6, r14;
        java.util.LinkedList $r3, $r4, $r5, $r7, $r10;
        boolean $z0, $z2;
        int $i0, $i1, $i2, $i3;
        java.lang.Void[] $r8;
        java.lang.Object $r11;
        android.os.AsyncTask$Status $r12, $r13;

        r0 := @this: com.android.dreams.phototable.PhotoCarousel;

        $r3 = r0.<com.android.dreams.phototable.PhotoCarousel: java.util.LinkedList mBitmapLoaders>;

        $z0 = virtualinvoke $r3.<java.util.LinkedList: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        $r10 = r0.<com.android.dreams.phototable.PhotoCarousel: java.util.LinkedList mBitmapLoaders>;

        r1 = virtualinvoke $r10.<java.util.LinkedList: java.util.ListIterator listIterator(int)>(0);

     label1:
        $z2 = interfaceinvoke r1.<java.util.ListIterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r11 = interfaceinvoke r1.<java.util.ListIterator: java.lang.Object next()>();

        r2 = (com.android.dreams.phototable.PhotoCarousel$PhotoLoadTask) $r11;

        $r13 = virtualinvoke r2.<com.android.dreams.phototable.PhotoCarousel$PhotoLoadTask: android.os.AsyncTask$Status getStatus()>();

        $r12 = <android.os.AsyncTask$Status: android.os.AsyncTask$Status FINISHED>;

        if $r13 != $r12 goto label2;

        interfaceinvoke r1.<java.util.ListIterator: void remove()>();

     label2:
        goto label1;

     label3:
        $r4 = r0.<com.android.dreams.phototable.PhotoCarousel: java.util.LinkedList mBitmapLoaders>;

        $i0 = virtualinvoke $r4.<java.util.LinkedList: int size()>();

        $r5 = r0.<com.android.dreams.phototable.PhotoCarousel: java.util.LinkedList mBitmapQueue>;

        $i1 = virtualinvoke $r5.<java.util.LinkedList: int size()>();

        $i3 = $i0 + $i1;

        $i2 = r0.<com.android.dreams.phototable.PhotoCarousel: int mBitmapQueueLimit>;

        if $i3 >= $i2 goto label4;

        $r6 = new com.android.dreams.phototable.PhotoCarousel$PhotoLoadTask;

        specialinvoke $r6.<com.android.dreams.phototable.PhotoCarousel$PhotoLoadTask: void <init>(com.android.dreams.phototable.PhotoCarousel)>(r0);

        r14 = $r6;

        $r7 = r0.<com.android.dreams.phototable.PhotoCarousel: java.util.LinkedList mBitmapLoaders>;

        virtualinvoke $r7.<java.util.LinkedList: boolean offer(java.lang.Object)>(r14);

        $r8 = newarray (java.lang.Void)[0];

        virtualinvoke r14.<com.android.dreams.phototable.PhotoCarousel$PhotoLoadTask: android.os.AsyncTask execute(java.lang.Object[])>($r8);

     label4:
        return;
    }

    private android.widget.ImageView getBackface()
    {
        com.android.dreams.phototable.PhotoCarousel r0;
        android.view.View[] $r1, $r3, $r7;
        android.view.View $r2, $r4;
        float $f0;
        byte $b0;
        android.widget.ImageView $r5, $r6;

        r0 := @this: com.android.dreams.phototable.PhotoCarousel;

        $r1 = r0.<com.android.dreams.phototable.PhotoCarousel: android.view.View[] mPanel>;

        $r2 = $r1[0];

        $f0 = virtualinvoke $r2.<android.view.View: float getAlpha()>();

        $b0 = $f0 cmpg 0.5F;

        if $b0 >= 0 goto label1;

        $r7 = r0.<com.android.dreams.phototable.PhotoCarousel: android.view.View[] mPanel>;

        $r4 = $r7[0];

        goto label2;

     label1:
        $r3 = r0.<com.android.dreams.phototable.PhotoCarousel: android.view.View[] mPanel>;

        $r4 = $r3[1];

     label2:
        $r5 = (android.widget.ImageView) $r4;

        $r6 = (android.widget.ImageView) $r5;

        return $r6;
    }

    private boolean canFlip()
    {
        com.android.dreams.phototable.PhotoCarousel r0;
        java.util.HashMap $r1;
        android.widget.ImageView $r2;
        boolean $z0;

        r0 := @this: com.android.dreams.phototable.PhotoCarousel;

        $r1 = r0.<com.android.dreams.phototable.PhotoCarousel: java.util.HashMap mBitmapStore>;

        $r2 = specialinvoke r0.<com.android.dreams.phototable.PhotoCarousel: android.widget.ImageView getBackface()>();

        $z0 = virtualinvoke $r1.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r2);

        return $z0;
    }

    private boolean changePhoto()
    {
        com.android.dreams.phototable.PhotoCarousel r0;
        android.graphics.Bitmap r1, r3;
        android.widget.ImageView r2;
        int i0, i1;
        byte b2, $b3;
        java.util.LinkedList $r4;
        java.lang.Object $r5, $r9;
        java.lang.Integer $r6, $r7, $r8;
        java.util.HashMap $r10;
        com.android.dreams.phototable.PhotoSourcePlexor $r11;

        r0 := @this: com.android.dreams.phototable.PhotoCarousel;

        $r4 = r0.<com.android.dreams.phototable.PhotoCarousel: java.util.LinkedList mBitmapQueue>;

        $r5 = virtualinvoke $r4.<java.util.LinkedList: java.lang.Object poll()>();

        r1 = (android.graphics.Bitmap) $r5;

        if r1 == null goto label3;

        r2 = specialinvoke r0.<com.android.dreams.phototable.PhotoCarousel: android.widget.ImageView getBackface()>();

        i0 = virtualinvoke r1.<android.graphics.Bitmap: int getWidth()>();

        i1 = virtualinvoke r1.<android.graphics.Bitmap: int getHeight()>();

        if i0 <= i1 goto label1;

        $b3 = 1;

        goto label2;

     label1:
        $b3 = 2;

     label2:
        b2 = $b3;

        virtualinvoke r2.<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>(r1);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2);

        virtualinvoke r2.<android.widget.ImageView: void setTag(int,java.lang.Object)>(2131427330, $r6);

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke r2.<android.widget.ImageView: void setTag(int,java.lang.Object)>(2131427329, $r7);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke r2.<android.widget.ImageView: void setTag(int,java.lang.Object)>(2131427328, $r8);

        specialinvoke r0.<com.android.dreams.phototable.PhotoCarousel: void setScaleType(android.view.View)>(r2);

        $r10 = r0.<com.android.dreams.phototable.PhotoCarousel: java.util.HashMap mBitmapStore>;

        $r9 = virtualinvoke $r10.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1);

        r3 = (android.graphics.Bitmap) $r9;

        $r11 = r0.<com.android.dreams.phototable.PhotoCarousel: com.android.dreams.phototable.PhotoSourcePlexor mPhotoSource>;

        virtualinvoke $r11.<com.android.dreams.phototable.PhotoSourcePlexor: void recycle(android.graphics.Bitmap)>(r3);

        return 1;

     label3:
        return 0;
    }

    private void setScaleType(android.view.View)
    {
        com.android.dreams.phototable.PhotoCarousel r0;
        android.view.View r1;
        int i0, i1, i2, $i3, $i4, $i5;
        java.lang.Object $r2, $r3, $r5, $r7;
        java.lang.Integer $r4, $r6, $r8;
        android.widget.ImageView$ScaleType $r9, $r10, $r14;
        android.widget.ImageView $r11, $r12, $r13;

        r0 := @this: com.android.dreams.phototable.PhotoCarousel;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r1.<android.view.View: java.lang.Object getTag(int)>(2131427330);

        if $r2 == null goto label4;

        $r3 = virtualinvoke r1.<android.view.View: java.lang.Object getTag(int)>(2131427330);

        $r4 = (java.lang.Integer) $r3;

        i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        $r5 = virtualinvoke r1.<android.view.View: java.lang.Object getTag(int)>(2131427329);

        $r6 = (java.lang.Integer) $r5;

        i1 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        $r7 = virtualinvoke r1.<android.view.View: java.lang.Object getTag(int)>(2131427328);

        $r8 = (java.lang.Integer) $r7;

        i2 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        $i3 = r0.<com.android.dreams.phototable.PhotoCarousel: int mWidth>;

        if i1 >= $i3 goto label1;

        $i5 = r0.<com.android.dreams.phototable.PhotoCarousel: int mHeight>;

        if i2 >= $i5 goto label1;

        specialinvoke r0.<com.android.dreams.phototable.PhotoCarousel: void log(java.lang.String)>("too small: FIT_CENTER");

        $r13 = (android.widget.ImageView) r1;

        $r14 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType CENTER_CROP>;

        virtualinvoke $r13.<android.widget.ImageView: void setScaleType(android.widget.ImageView$ScaleType)>($r14);

        goto label3;

     label1:
        $i4 = r0.<com.android.dreams.phototable.PhotoCarousel: int mOrientation>;

        if i0 != $i4 goto label2;

        specialinvoke r0.<com.android.dreams.phototable.PhotoCarousel: void log(java.lang.String)>("orientations match: CENTER_CROP");

        $r12 = (android.widget.ImageView) r1;

        $r10 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType CENTER_CROP>;

        virtualinvoke $r12.<android.widget.ImageView: void setScaleType(android.widget.ImageView$ScaleType)>($r10);

        goto label3;

     label2:
        specialinvoke r0.<com.android.dreams.phototable.PhotoCarousel: void log(java.lang.String)>("orientations do not match: CENTER_INSIDE");

        $r11 = (android.widget.ImageView) r1;

        $r9 = <android.widget.ImageView$ScaleType: android.widget.ImageView$ScaleType CENTER_INSIDE>;

        virtualinvoke $r11.<android.widget.ImageView: void setScaleType(android.widget.ImageView$ScaleType)>($r9);

     label3:
        goto label5;

     label4:
        specialinvoke r0.<com.android.dreams.phototable.PhotoCarousel: void log(java.lang.String)>("no tag!");

     label5:
        return;
    }

    public void flip(float)
    {
        com.android.dreams.phototable.PhotoCarousel r0;
        float f0, f1, f2, f3, f4, $f5, $f6, $f7, $f8, f9, f10, f13, f14, f15, f16;
        android.view.ViewPropertyAnimator r1, r2, $r5, $r8, $r23, $r24, $r25, $r28, $r29, $r30, $r32;
        android.view.View[] $r3, $r6, $r9, $r11, $r14, $r15, $r18, $r20, $r21, $r26;
        android.view.View $r4, $r7, $r10, $r12, $r13, $r16, $r17, $r19, $r22, $r27;
        int $i0, $i2;
        long $l1, $l3;
        com.android.dreams.phototable.PhotoCarousel$2 $r31;

        r0 := @this: com.android.dreams.phototable.PhotoCarousel;

        f0 := @parameter0: float;

        $r3 = r0.<com.android.dreams.phototable.PhotoCarousel: android.view.View[] mPanel>;

        $r4 = $r3[0];

        $r5 = virtualinvoke $r4.<android.view.View: android.view.ViewPropertyAnimator animate()>();

        virtualinvoke $r5.<android.view.ViewPropertyAnimator: void cancel()>();

        $r6 = r0.<com.android.dreams.phototable.PhotoCarousel: android.view.View[] mPanel>;

        $r7 = $r6[1];

        $r8 = virtualinvoke $r7.<android.view.View: android.view.ViewPropertyAnimator animate()>();

        virtualinvoke $r8.<android.view.ViewPropertyAnimator: void cancel()>();

        $r9 = r0.<com.android.dreams.phototable.PhotoCarousel: android.view.View[] mPanel>;

        $r10 = $r9[0];

        f1 = virtualinvoke $r10.<android.view.View: float getRotationY()>();

        $r11 = r0.<com.android.dreams.phototable.PhotoCarousel: android.view.View[] mPanel>;

        $r12 = $r11[1];

        f2 = virtualinvoke $r12.<android.view.View: float getRotationY()>();

        $r14 = r0.<com.android.dreams.phototable.PhotoCarousel: android.view.View[] mPanel>;

        $r13 = $r14[0];

        f3 = virtualinvoke $r13.<android.view.View: float getAlpha()>();

        $r15 = r0.<com.android.dreams.phototable.PhotoCarousel: android.view.View[] mPanel>;

        $r16 = $r15[1];

        f4 = virtualinvoke $r16.<android.view.View: float getAlpha()>();

        f9 = specialinvoke r0.<com.android.dreams.phototable.PhotoCarousel: float wrap360(float)>(f1);

        f10 = specialinvoke r0.<com.android.dreams.phototable.PhotoCarousel: float wrap360(float)>(f2);

        $r18 = r0.<com.android.dreams.phototable.PhotoCarousel: android.view.View[] mPanel>;

        $r17 = $r18[0];

        virtualinvoke $r17.<android.view.View: void setRotationY(float)>(f9);

        $r20 = r0.<com.android.dreams.phototable.PhotoCarousel: android.view.View[] mPanel>;

        $r19 = $r20[1];

        virtualinvoke $r19.<android.view.View: void setRotationY(float)>(f10);

        $f6 = f0 * 180.0F;

        $f7 = f9 + $f6;

        specialinvoke r0.<com.android.dreams.phototable.PhotoCarousel: float lockTo180(float)>($f7);

        $f5 = f0 * 180.0F;

        $f8 = f10 + $f5;

        specialinvoke r0.<com.android.dreams.phototable.PhotoCarousel: float lockTo180(float)>($f8);

        f13 = 1.0F - f3;

        f14 = 1.0F - f4;

        f15 = 0.0F;

        f16 = 0.0F;

        $r21 = r0.<com.android.dreams.phototable.PhotoCarousel: android.view.View[] mPanel>;

        $r22 = $r21[0];

        $r24 = virtualinvoke $r22.<android.view.View: android.view.ViewPropertyAnimator animate()>();

        $r25 = virtualinvoke $r24.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator rotationY(float)>(f16);

        $r23 = virtualinvoke $r25.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alpha(float)>(f13);

        $i0 = r0.<com.android.dreams.phototable.PhotoCarousel: int mFlipDuration>;

        $l1 = (long) $i0;

        r1 = virtualinvoke $r23.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>($l1);

        $r26 = r0.<com.android.dreams.phototable.PhotoCarousel: android.view.View[] mPanel>;

        $r27 = $r26[1];

        $r30 = virtualinvoke $r27.<android.view.View: android.view.ViewPropertyAnimator animate()>();

        $r29 = virtualinvoke $r30.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator rotationY(float)>(f15);

        $r28 = virtualinvoke $r29.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator alpha(float)>(f14);

        $i2 = r0.<com.android.dreams.phototable.PhotoCarousel: int mFlipDuration>;

        $l3 = (long) $i2;

        $r32 = virtualinvoke $r28.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator setDuration(long)>($l3);

        $r31 = new com.android.dreams.phototable.PhotoCarousel$2;

        specialinvoke $r31.<com.android.dreams.phototable.PhotoCarousel$2: void <init>(com.android.dreams.phototable.PhotoCarousel)>(r0);

        r2 = virtualinvoke $r32.<android.view.ViewPropertyAnimator: android.view.ViewPropertyAnimator withEndAction(java.lang.Runnable)>($r31);

        virtualinvoke r1.<android.view.ViewPropertyAnimator: void start()>();

        virtualinvoke r2.<android.view.ViewPropertyAnimator: void start()>();

        return;
    }

    public void onAttachedToWindow()
    {
        com.android.dreams.phototable.PhotoCarousel r0;
        android.view.View[] $r1, $r3;
        android.view.View $r2, $r4, $r5;
        com.android.dreams.phototable.PhotoCarousel$Flipper $r6;

        r0 := @this: com.android.dreams.phototable.PhotoCarousel;

        $r1 = r0.<com.android.dreams.phototable.PhotoCarousel: android.view.View[] mPanel>;

        $r2 = virtualinvoke r0.<com.android.dreams.phototable.PhotoCarousel: android.view.View findViewById(int)>(2131427336);

        $r1[0] = $r2;

        $r3 = r0.<com.android.dreams.phototable.PhotoCarousel: android.view.View[] mPanel>;

        $r4 = virtualinvoke r0.<com.android.dreams.phototable.PhotoCarousel: android.view.View findViewById(int)>(2131427337);

        $r3[1] = $r4;

        $r5 = virtualinvoke r0.<com.android.dreams.phototable.PhotoCarousel: android.view.View findViewById(int)>(2131427338);

        r0.<com.android.dreams.phototable.PhotoCarousel: android.view.View mSpinner> = $r5;

        $r6 = r0.<com.android.dreams.phototable.PhotoCarousel: com.android.dreams.phototable.PhotoCarousel$Flipper mFlipper>;

        virtualinvoke $r6.<com.android.dreams.phototable.PhotoCarousel$Flipper: void run()>();

        return;
    }

    public void onLayout(boolean, int, int, int, int)
    {
        com.android.dreams.phototable.PhotoCarousel r0;
        boolean z0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        android.view.View $r1, $r3;
        android.view.View[] $r2, $r4;
        byte $b14;

        r0 := @this: com.android.dreams.phototable.PhotoCarousel;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        $i4 = i3 - i1;

        r0.<com.android.dreams.phototable.PhotoCarousel: int mHeight> = $i4;

        $i5 = i2 - i0;

        r0.<com.android.dreams.phototable.PhotoCarousel: int mWidth> = $i5;

        $i7 = r0.<com.android.dreams.phototable.PhotoCarousel: int mWidth>;

        $i6 = r0.<com.android.dreams.phototable.PhotoCarousel: int mHeight>;

        if $i7 <= $i6 goto label1;

        $b14 = 1;

        goto label2;

     label1:
        $b14 = 2;

     label2:
        r0.<com.android.dreams.phototable.PhotoCarousel: int mOrientation> = $b14;

        $i9 = r0.<com.android.dreams.phototable.PhotoCarousel: int mWidth>;

        $i8 = r0.<com.android.dreams.phototable.PhotoCarousel: int mHeight>;

        $i10 = staticinvoke <java.lang.Math: int max(int,int)>($i9, $i8);

        r0.<com.android.dreams.phototable.PhotoCarousel: int mLongSide> = $i10;

        $i12 = r0.<com.android.dreams.phototable.PhotoCarousel: int mWidth>;

        $i11 = r0.<com.android.dreams.phototable.PhotoCarousel: int mHeight>;

        $i13 = staticinvoke <java.lang.Math: int min(int,int)>($i12, $i11);

        r0.<com.android.dreams.phototable.PhotoCarousel: int mShortSide> = $i13;

        $r2 = r0.<com.android.dreams.phototable.PhotoCarousel: android.view.View[] mPanel>;

        $r1 = $r2[0];

        specialinvoke r0.<com.android.dreams.phototable.PhotoCarousel: void setScaleType(android.view.View)>($r1);

        $r4 = r0.<com.android.dreams.phototable.PhotoCarousel: android.view.View[] mPanel>;

        $r3 = $r4[1];

        specialinvoke r0.<com.android.dreams.phototable.PhotoCarousel: void setScaleType(android.view.View)>($r3);

        specialinvoke r0.<android.widget.FrameLayout: void onLayout(boolean,int,int,int,int)>(z0, i0, i1, i2, i3);

        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.android.dreams.phototable.PhotoCarousel r0;
        android.view.MotionEvent r1;
        android.view.GestureDetector $r2;

        r0 := @this: com.android.dreams.phototable.PhotoCarousel;

        r1 := @parameter0: android.view.MotionEvent;

        $r2 = r0.<com.android.dreams.phototable.PhotoCarousel: android.view.GestureDetector mGestureDetector>;

        virtualinvoke $r2.<android.view.GestureDetector: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        return 1;
    }

    private void log(java.lang.String)
    {
        com.android.dreams.phototable.PhotoCarousel r0;
        java.lang.String r1;

        r0 := @this: com.android.dreams.phototable.PhotoCarousel;

        r1 := @parameter0: java.lang.String;

        return;
    }

    static void access$000(com.android.dreams.phototable.PhotoCarousel)
    {
        com.android.dreams.phototable.PhotoCarousel r0;

        r0 := @parameter0: com.android.dreams.phototable.PhotoCarousel;

        specialinvoke r0.<com.android.dreams.phototable.PhotoCarousel: void maybeLoadMore()>();

        return;
    }

    static java.util.LinkedList access$100(com.android.dreams.phototable.PhotoCarousel)
    {
        com.android.dreams.phototable.PhotoCarousel r0;
        java.util.LinkedList $r1;

        r0 := @parameter0: com.android.dreams.phototable.PhotoCarousel;

        $r1 = r0.<com.android.dreams.phototable.PhotoCarousel: java.util.LinkedList mBitmapQueue>;

        return $r1;
    }

    static android.view.View access$200(com.android.dreams.phototable.PhotoCarousel)
    {
        com.android.dreams.phototable.PhotoCarousel r0;
        android.view.View $r1;

        r0 := @parameter0: com.android.dreams.phototable.PhotoCarousel;

        $r1 = r0.<com.android.dreams.phototable.PhotoCarousel: android.view.View mSpinner>;

        return $r1;
    }

    static long access$300(com.android.dreams.phototable.PhotoCarousel)
    {
        com.android.dreams.phototable.PhotoCarousel r0;
        long $l0;

        r0 := @parameter0: com.android.dreams.phototable.PhotoCarousel;

        $l0 = r0.<com.android.dreams.phototable.PhotoCarousel: long mLastFlipTime>;

        return $l0;
    }

    static int access$400(com.android.dreams.phototable.PhotoCarousel)
    {
        com.android.dreams.phototable.PhotoCarousel r0;
        int $i0;

        r0 := @parameter0: com.android.dreams.phototable.PhotoCarousel;

        $i0 = r0.<com.android.dreams.phototable.PhotoCarousel: int mDropPeriod>;

        return $i0;
    }

    static boolean access$500(com.android.dreams.phototable.PhotoCarousel)
    {
        com.android.dreams.phototable.PhotoCarousel r0;
        boolean $z0;

        r0 := @parameter0: com.android.dreams.phototable.PhotoCarousel;

        $z0 = specialinvoke r0.<com.android.dreams.phototable.PhotoCarousel: boolean changePhoto()>();

        return $z0;
    }

    static boolean access$600(com.android.dreams.phototable.PhotoCarousel)
    {
        com.android.dreams.phototable.PhotoCarousel r0;
        boolean $z0;

        r0 := @parameter0: com.android.dreams.phototable.PhotoCarousel;

        $z0 = specialinvoke r0.<com.android.dreams.phototable.PhotoCarousel: boolean canFlip()>();

        return $z0;
    }

    static long access$302(com.android.dreams.phototable.PhotoCarousel, long)
    {
        com.android.dreams.phototable.PhotoCarousel r0;
        long l0;

        r0 := @parameter0: com.android.dreams.phototable.PhotoCarousel;

        l0 := @parameter1: long;

        r0.<com.android.dreams.phototable.PhotoCarousel: long mLastFlipTime> = l0;

        return l0;
    }

    static com.android.dreams.phototable.PhotoCarousel$Flipper access$700(com.android.dreams.phototable.PhotoCarousel)
    {
        com.android.dreams.phototable.PhotoCarousel r0;
        com.android.dreams.phototable.PhotoCarousel$Flipper $r1;

        r0 := @parameter0: com.android.dreams.phototable.PhotoCarousel;

        $r1 = r0.<com.android.dreams.phototable.PhotoCarousel: com.android.dreams.phototable.PhotoCarousel$Flipper mFlipper>;

        return $r1;
    }

    static void access$800(com.android.dreams.phototable.PhotoCarousel, java.lang.String)
    {
        com.android.dreams.phototable.PhotoCarousel r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.dreams.phototable.PhotoCarousel;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.dreams.phototable.PhotoCarousel: void log(java.lang.String)>(r1);

        return;
    }

    static int access$900(com.android.dreams.phototable.PhotoCarousel)
    {
        com.android.dreams.phototable.PhotoCarousel r0;
        int $i0;

        r0 := @parameter0: com.android.dreams.phototable.PhotoCarousel;

        $i0 = r0.<com.android.dreams.phototable.PhotoCarousel: int mLongSide>;

        return $i0;
    }

    static int access$1000(com.android.dreams.phototable.PhotoCarousel)
    {
        com.android.dreams.phototable.PhotoCarousel r0;
        int $i0;

        r0 := @parameter0: com.android.dreams.phototable.PhotoCarousel;

        $i0 = r0.<com.android.dreams.phototable.PhotoCarousel: int mShortSide>;

        return $i0;
    }

    static com.android.dreams.phototable.PhotoSourcePlexor access$1100(com.android.dreams.phototable.PhotoCarousel)
    {
        com.android.dreams.phototable.PhotoCarousel r0;
        com.android.dreams.phototable.PhotoSourcePlexor $r1;

        r0 := @parameter0: com.android.dreams.phototable.PhotoCarousel;

        $r1 = r0.<com.android.dreams.phototable.PhotoCarousel: com.android.dreams.phototable.PhotoSourcePlexor mPhotoSource>;

        return $r1;
    }

    public static void <clinit>()
    {
        <com.android.dreams.phototable.PhotoCarousel: int PORTRAIT> = 2;

        <com.android.dreams.phototable.PhotoCarousel: int LANDSCAPE> = 1;

        <com.android.dreams.phototable.PhotoCarousel: boolean DEBUG> = 0;

        <com.android.dreams.phototable.PhotoCarousel: java.lang.String TAG> = "PhotoCarousel";

        return;
    }
}
