public class com.android.browser.PreloadController extends java.lang.Object implements com.android.browser.WebViewController
{
    private static final boolean LOGD_ENABLED;
    private static final java.lang.String LOGTAG;
    private android.content.Context mContext;

    public void <init>(android.content.Context)
    {
        com.android.browser.PreloadController r0;
        android.content.Context r1, $r2;

        r0 := @this: com.android.browser.PreloadController;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = virtualinvoke r1.<android.content.Context: android.content.Context getApplicationContext()>();

        r0.<com.android.browser.PreloadController: android.content.Context mContext> = $r2;

        return;
    }

    public android.content.Context getContext()
    {
        com.android.browser.PreloadController r0;
        android.content.Context $r1;

        r0 := @this: com.android.browser.PreloadController;

        $r1 = r0.<com.android.browser.PreloadController: android.content.Context mContext>;

        return $r1;
    }

    public android.app.Activity getActivity()
    {
        com.android.browser.PreloadController r0;

        r0 := @this: com.android.browser.PreloadController;

        return null;
    }

    public com.android.browser.TabControl getTabControl()
    {
        com.android.browser.PreloadController r0;

        r0 := @this: com.android.browser.PreloadController;

        return null;
    }

    public com.android.browser.WebViewFactory getWebViewFactory()
    {
        com.android.browser.PreloadController r0;

        r0 := @this: com.android.browser.PreloadController;

        return null;
    }

    public void onSetWebView(com.android.browser.Tab, android.webkit.WebView)
    {
        com.android.browser.PreloadController r0;
        com.android.browser.Tab r1;
        android.webkit.WebView r2;

        r0 := @this: com.android.browser.PreloadController;

        r1 := @parameter0: com.android.browser.Tab;

        r2 := @parameter1: android.webkit.WebView;

        return;
    }

    public void createSubWindow(com.android.browser.Tab)
    {
        com.android.browser.PreloadController r0;
        com.android.browser.Tab r1;

        r0 := @this: com.android.browser.PreloadController;

        r1 := @parameter0: com.android.browser.Tab;

        return;
    }

    public void onPageStarted(com.android.browser.Tab, android.webkit.WebView, android.graphics.Bitmap)
    {
        com.android.browser.PreloadController r0;
        com.android.browser.Tab r1;
        android.webkit.WebView r2;
        android.graphics.Bitmap r3;

        r0 := @this: com.android.browser.PreloadController;

        r1 := @parameter0: com.android.browser.Tab;

        r2 := @parameter1: android.webkit.WebView;

        r3 := @parameter2: android.graphics.Bitmap;

        if r2 == null goto label1;

        virtualinvoke r2.<android.webkit.WebView: void clearHistory()>();

     label1:
        return;
    }

    public void onPageFinished(com.android.browser.Tab)
    {
        com.android.browser.PreloadController r0;
        com.android.browser.Tab r1;
        android.webkit.WebView r2;

        r0 := @this: com.android.browser.PreloadController;

        r1 := @parameter0: com.android.browser.Tab;

        if r1 == null goto label1;

        r2 = virtualinvoke r1.<com.android.browser.Tab: android.webkit.WebView getWebView()>();

        if r2 == null goto label1;

        virtualinvoke r2.<android.webkit.WebView: void clearHistory()>();

     label1:
        return;
    }

    public void onProgressChanged(com.android.browser.Tab)
    {
        com.android.browser.PreloadController r0;
        com.android.browser.Tab r1;

        r0 := @this: com.android.browser.PreloadController;

        r1 := @parameter0: com.android.browser.Tab;

        return;
    }

    public void onReceivedTitle(com.android.browser.Tab, java.lang.String)
    {
        com.android.browser.PreloadController r0;
        com.android.browser.Tab r1;
        java.lang.String r2;

        r0 := @this: com.android.browser.PreloadController;

        r1 := @parameter0: com.android.browser.Tab;

        r2 := @parameter1: java.lang.String;

        return;
    }

    public void onFavicon(com.android.browser.Tab, android.webkit.WebView, android.graphics.Bitmap)
    {
        com.android.browser.PreloadController r0;
        com.android.browser.Tab r1;
        android.webkit.WebView r2;
        android.graphics.Bitmap r3;

        r0 := @this: com.android.browser.PreloadController;

        r1 := @parameter0: com.android.browser.Tab;

        r2 := @parameter1: android.webkit.WebView;

        r3 := @parameter2: android.graphics.Bitmap;

        return;
    }

    public boolean shouldOverrideUrlLoading(com.android.browser.Tab, android.webkit.WebView, java.lang.String)
    {
        com.android.browser.PreloadController r0;
        com.android.browser.Tab r1;
        android.webkit.WebView r2;
        java.lang.String r3;

        r0 := @this: com.android.browser.PreloadController;

        r1 := @parameter0: com.android.browser.Tab;

        r2 := @parameter1: android.webkit.WebView;

        r3 := @parameter2: java.lang.String;

        return 0;
    }

    public boolean shouldOverrideKeyEvent(android.view.KeyEvent)
    {
        com.android.browser.PreloadController r0;
        android.view.KeyEvent r1;

        r0 := @this: com.android.browser.PreloadController;

        r1 := @parameter0: android.view.KeyEvent;

        return 0;
    }

    public boolean onUnhandledKeyEvent(android.view.KeyEvent)
    {
        com.android.browser.PreloadController r0;
        android.view.KeyEvent r1;

        r0 := @this: com.android.browser.PreloadController;

        r1 := @parameter0: android.view.KeyEvent;

        return 0;
    }

    public void doUpdateVisitedHistory(com.android.browser.Tab, boolean)
    {
        com.android.browser.PreloadController r0;
        com.android.browser.Tab r1;
        boolean z0;

        r0 := @this: com.android.browser.PreloadController;

        r1 := @parameter0: com.android.browser.Tab;

        z0 := @parameter1: boolean;

        return;
    }

    public void getVisitedHistory(android.webkit.ValueCallback)
    {
        com.android.browser.PreloadController r0;
        android.webkit.ValueCallback r1;

        r0 := @this: com.android.browser.PreloadController;

        r1 := @parameter0: android.webkit.ValueCallback;

        return;
    }

    public void onReceivedHttpAuthRequest(com.android.browser.Tab, android.webkit.WebView, android.webkit.HttpAuthHandler, java.lang.String, java.lang.String)
    {
        com.android.browser.PreloadController r0;
        com.android.browser.Tab r1;
        android.webkit.WebView r2;
        android.webkit.HttpAuthHandler r3;
        java.lang.String r4, r5;

        r0 := @this: com.android.browser.PreloadController;

        r1 := @parameter0: com.android.browser.Tab;

        r2 := @parameter1: android.webkit.WebView;

        r3 := @parameter2: android.webkit.HttpAuthHandler;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        return;
    }

    public void onDownloadStart(com.android.browser.Tab, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, long)
    {
        com.android.browser.PreloadController r0;
        com.android.browser.Tab r1;
        java.lang.String r2, r3, r4, r5, r6;
        long l0;

        r0 := @this: com.android.browser.PreloadController;

        r1 := @parameter0: com.android.browser.Tab;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: java.lang.String;

        l0 := @parameter6: long;

        return;
    }

    public void showCustomView(com.android.browser.Tab, android.view.View, int, android.webkit.WebChromeClient$CustomViewCallback)
    {
        com.android.browser.PreloadController r0;
        com.android.browser.Tab r1;
        android.view.View r2;
        int i0;
        android.webkit.WebChromeClient$CustomViewCallback r3;

        r0 := @this: com.android.browser.PreloadController;

        r1 := @parameter0: com.android.browser.Tab;

        r2 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        r3 := @parameter3: android.webkit.WebChromeClient$CustomViewCallback;

        return;
    }

    public void hideCustomView()
    {
        com.android.browser.PreloadController r0;

        r0 := @this: com.android.browser.PreloadController;

        return;
    }

    public android.graphics.Bitmap getDefaultVideoPoster()
    {
        com.android.browser.PreloadController r0;

        r0 := @this: com.android.browser.PreloadController;

        return null;
    }

    public android.view.View getVideoLoadingProgressView()
    {
        com.android.browser.PreloadController r0;

        r0 := @this: com.android.browser.PreloadController;

        return null;
    }

    public void showSslCertificateOnError(android.webkit.WebView, android.webkit.SslErrorHandler, android.net.http.SslError)
    {
        com.android.browser.PreloadController r0;
        android.webkit.WebView r1;
        android.webkit.SslErrorHandler r2;
        android.net.http.SslError r3;

        r0 := @this: com.android.browser.PreloadController;

        r1 := @parameter0: android.webkit.WebView;

        r2 := @parameter1: android.webkit.SslErrorHandler;

        r3 := @parameter2: android.net.http.SslError;

        return;
    }

    public void onUserCanceledSsl(com.android.browser.Tab)
    {
        com.android.browser.PreloadController r0;
        com.android.browser.Tab r1;

        r0 := @this: com.android.browser.PreloadController;

        r1 := @parameter0: com.android.browser.Tab;

        return;
    }

    public boolean shouldShowErrorConsole()
    {
        com.android.browser.PreloadController r0;

        r0 := @this: com.android.browser.PreloadController;

        return 0;
    }

    public void onUpdatedSecurityState(com.android.browser.Tab)
    {
        com.android.browser.PreloadController r0;
        com.android.browser.Tab r1;

        r0 := @this: com.android.browser.PreloadController;

        r1 := @parameter0: com.android.browser.Tab;

        return;
    }

    public void showFileChooser(android.webkit.ValueCallback, android.webkit.WebChromeClient$FileChooserParams)
    {
        com.android.browser.PreloadController r0;
        android.webkit.ValueCallback r1;
        android.webkit.WebChromeClient$FileChooserParams r2;

        r0 := @this: com.android.browser.PreloadController;

        r1 := @parameter0: android.webkit.ValueCallback;

        r2 := @parameter1: android.webkit.WebChromeClient$FileChooserParams;

        return;
    }

    public void endActionMode()
    {
        com.android.browser.PreloadController r0;

        r0 := @this: com.android.browser.PreloadController;

        return;
    }

    public void attachSubWindow(com.android.browser.Tab)
    {
        com.android.browser.PreloadController r0;
        com.android.browser.Tab r1;

        r0 := @this: com.android.browser.PreloadController;

        r1 := @parameter0: com.android.browser.Tab;

        return;
    }

    public void dismissSubWindow(com.android.browser.Tab)
    {
        com.android.browser.PreloadController r0;
        com.android.browser.Tab r1;

        r0 := @this: com.android.browser.PreloadController;

        r1 := @parameter0: com.android.browser.Tab;

        return;
    }

    public com.android.browser.Tab openTab(java.lang.String, boolean, boolean, boolean)
    {
        com.android.browser.PreloadController r0;
        java.lang.String r1;
        boolean z0, z1, z2;

        r0 := @this: com.android.browser.PreloadController;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        z2 := @parameter3: boolean;

        return null;
    }

    public com.android.browser.Tab openTab(java.lang.String, com.android.browser.Tab, boolean, boolean)
    {
        com.android.browser.PreloadController r0;
        java.lang.String r1;
        com.android.browser.Tab r2;
        boolean z0, z1;

        r0 := @this: com.android.browser.PreloadController;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.browser.Tab;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        return null;
    }

    public boolean switchToTab(com.android.browser.Tab)
    {
        com.android.browser.PreloadController r0;
        com.android.browser.Tab r1;

        r0 := @this: com.android.browser.PreloadController;

        r1 := @parameter0: com.android.browser.Tab;

        return 0;
    }

    public void closeTab(com.android.browser.Tab)
    {
        com.android.browser.PreloadController r0;
        com.android.browser.Tab r1;

        r0 := @this: com.android.browser.PreloadController;

        r1 := @parameter0: com.android.browser.Tab;

        return;
    }

    public void bookmarkedStatusHasChanged(com.android.browser.Tab)
    {
        com.android.browser.PreloadController r0;
        com.android.browser.Tab r1;

        r0 := @this: com.android.browser.PreloadController;

        r1 := @parameter0: com.android.browser.Tab;

        return;
    }

    public void showAutoLogin(com.android.browser.Tab)
    {
        com.android.browser.PreloadController r0;
        com.android.browser.Tab r1;

        r0 := @this: com.android.browser.PreloadController;

        r1 := @parameter0: com.android.browser.Tab;

        return;
    }

    public void hideAutoLogin(com.android.browser.Tab)
    {
        com.android.browser.PreloadController r0;
        com.android.browser.Tab r1;

        r0 := @this: com.android.browser.PreloadController;

        r1 := @parameter0: com.android.browser.Tab;

        return;
    }

    public boolean shouldCaptureThumbnails()
    {
        com.android.browser.PreloadController r0;

        r0 := @this: com.android.browser.PreloadController;

        return 0;
    }

    public static void <clinit>()
    {
        <com.android.browser.PreloadController: java.lang.String LOGTAG> = "PreloadController";

        <com.android.browser.PreloadController: boolean LOGD_ENABLED> = 0;

        return;
    }
}
