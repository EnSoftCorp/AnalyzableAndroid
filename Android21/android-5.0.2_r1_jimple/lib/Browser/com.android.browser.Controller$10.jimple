class com.android.browser.Controller$10 extends android.os.AsyncTask
{
    final android.content.ContentResolver val$cr;
    final java.lang.String val$originalUrl;
    final java.lang.String val$url;
    final android.graphics.Bitmap val$bm;
    final com.android.browser.Controller this$0;

    void <init>(com.android.browser.Controller, android.content.ContentResolver, java.lang.String, java.lang.String, android.graphics.Bitmap)
    {
        com.android.browser.Controller$10 r0;
        com.android.browser.Controller r1;
        android.content.ContentResolver r2;
        java.lang.String r3, r4;
        android.graphics.Bitmap r5;

        r0 := @this: com.android.browser.Controller$10;

        r1 := @parameter0: com.android.browser.Controller;

        r2 := @parameter1: android.content.ContentResolver;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: android.graphics.Bitmap;

        r0.<com.android.browser.Controller$10: com.android.browser.Controller this$0> = r1;

        r0.<com.android.browser.Controller$10: android.content.ContentResolver val$cr> = r2;

        r0.<com.android.browser.Controller$10: java.lang.String val$originalUrl> = r3;

        r0.<com.android.browser.Controller$10: java.lang.String val$url> = r4;

        r0.<com.android.browser.Controller$10: android.graphics.Bitmap val$bm> = r5;

        specialinvoke r0.<android.os.AsyncTask: void <init>()>();

        return;
    }

    protected transient java.lang.Void doInBackground(java.lang.Void[])
    {
        com.android.browser.Controller$10 r0;
        java.lang.Void[] r1;
        android.database.Cursor r2;
        java.io.ByteArrayOutputStream r3, $r9;
        android.content.ContentValues r4, $r12;
        java.lang.Throwable r5, $r19;
        java.lang.String $r6, $r7, $r14;
        android.content.ContentResolver $r8, $r15;
        boolean $z0, $z2;
        android.graphics.Bitmap$CompressFormat $r10;
        android.graphics.Bitmap $r11;
        byte[] $r13;
        android.net.Uri $r16;
        android.database.sqlite.SQLiteException $r17, r21;
        java.lang.IllegalStateException $r18;

        r0 := @this: com.android.browser.Controller$10;

        r1 := @parameter0: java.lang.Void[];

        r2 = null;

     label01:
        $r8 = r0.<com.android.browser.Controller$10: android.content.ContentResolver val$cr>;

        $r7 = r0.<com.android.browser.Controller$10: java.lang.String val$originalUrl>;

        $r6 = r0.<com.android.browser.Controller$10: java.lang.String val$url>;

        r2 = staticinvoke <com.android.browser.Bookmarks: android.database.Cursor queryCombinedForUrl(android.content.ContentResolver,java.lang.String,java.lang.String)>($r8, $r7, $r6);

        if r2 == null goto label03;

        $z0 = interfaceinvoke r2.<android.database.Cursor: boolean moveToFirst()>();

        if $z0 == 0 goto label03;

        $r9 = new java.io.ByteArrayOutputStream;

        specialinvoke $r9.<java.io.ByteArrayOutputStream: void <init>()>();

        r3 = $r9;

        $r11 = r0.<com.android.browser.Controller$10: android.graphics.Bitmap val$bm>;

        $r10 = <android.graphics.Bitmap$CompressFormat: android.graphics.Bitmap$CompressFormat PNG>;

        virtualinvoke $r11.<android.graphics.Bitmap: boolean compress(android.graphics.Bitmap$CompressFormat,int,java.io.OutputStream)>($r10, 100, r3);

        $r12 = new android.content.ContentValues;

        specialinvoke $r12.<android.content.ContentValues: void <init>()>();

        r4 = $r12;

        $r13 = virtualinvoke r3.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,byte[])>("thumbnail", $r13);

     label02:
        $r14 = interfaceinvoke r2.<android.database.Cursor: java.lang.String getString(int)>(0);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("url_key", $r14);

        $r15 = r0.<com.android.browser.Controller$10: android.content.ContentResolver val$cr>;

        $r16 = <android.provider.BrowserContract$Images: android.net.Uri CONTENT_URI>;

        virtualinvoke $r15.<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>($r16, r4, null, null);

        $z2 = interfaceinvoke r2.<android.database.Cursor: boolean moveToNext()>();

        if $z2 != 0 goto label02;

     label03:
        if r2 == null goto label11;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

        goto label11;

     label04:
        $r18 := @caughtexception;

     label05:
        if r2 == null goto label11;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

        goto label11;

     label06:
        $r17 := @caughtexception;

        r21 = $r17;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("Controller", "Error when running updateScreenshot ", r21);

     label07:
        if r2 == null goto label11;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

        goto label11;

     label08:
        $r19 := @caughtexception;

        r5 = $r19;

     label09:
        if r2 == null goto label10;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

     label10:
        throw r5;

     label11:
        return null;

        catch java.lang.IllegalStateException from label01 to label03 with label04;
        catch android.database.sqlite.SQLiteException from label01 to label03 with label06;
        catch java.lang.Throwable from label01 to label03 with label08;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    protected volatile java.lang.Object doInBackground(java.lang.Object[])
    {
        com.android.browser.Controller$10 r0;
        java.lang.Object[] r1;
        java.lang.Void[] $r2;
        java.lang.Void $r3;

        r0 := @this: com.android.browser.Controller$10;

        r1 := @parameter0: java.lang.Object[];

        $r2 = (java.lang.Void[]) r1;

        $r3 = virtualinvoke r0.<com.android.browser.Controller$10: java.lang.Void doInBackground(java.lang.Void[])>($r2);

        return $r3;
    }
}
