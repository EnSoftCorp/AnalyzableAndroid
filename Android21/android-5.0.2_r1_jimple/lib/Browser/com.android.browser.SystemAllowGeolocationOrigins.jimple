class com.android.browser.SystemAllowGeolocationOrigins extends java.lang.Object
{
    private static final java.lang.String LAST_READ_ALLOW_GEOLOCATION_ORIGINS;
    private final android.content.Context mContext;
    private final com.android.browser.SystemAllowGeolocationOrigins$SettingObserver mSettingObserver;
    private java.lang.Runnable mMaybeApplySetting;

    public void <init>(android.content.Context)
    {
        com.android.browser.SystemAllowGeolocationOrigins r0;
        android.content.Context r1, $r3;
        com.android.browser.SystemAllowGeolocationOrigins$1 $r2;
        com.android.browser.SystemAllowGeolocationOrigins$SettingObserver $r4;

        r0 := @this: com.android.browser.SystemAllowGeolocationOrigins;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new com.android.browser.SystemAllowGeolocationOrigins$1;

        specialinvoke $r2.<com.android.browser.SystemAllowGeolocationOrigins$1: void <init>(com.android.browser.SystemAllowGeolocationOrigins)>(r0);

        r0.<com.android.browser.SystemAllowGeolocationOrigins: java.lang.Runnable mMaybeApplySetting> = $r2;

        $r3 = virtualinvoke r1.<android.content.Context: android.content.Context getApplicationContext()>();

        r0.<com.android.browser.SystemAllowGeolocationOrigins: android.content.Context mContext> = $r3;

        $r4 = new com.android.browser.SystemAllowGeolocationOrigins$SettingObserver;

        specialinvoke $r4.<com.android.browser.SystemAllowGeolocationOrigins$SettingObserver: void <init>(com.android.browser.SystemAllowGeolocationOrigins)>(r0);

        r0.<com.android.browser.SystemAllowGeolocationOrigins: com.android.browser.SystemAllowGeolocationOrigins$SettingObserver mSettingObserver> = $r4;

        return;
    }

    public void start()
    {
        com.android.browser.SystemAllowGeolocationOrigins r0;
        android.net.Uri r1;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        com.android.browser.SystemAllowGeolocationOrigins$SettingObserver $r4;

        r0 := @this: com.android.browser.SystemAllowGeolocationOrigins;

        r1 = staticinvoke <android.provider.Settings$Secure: android.net.Uri getUriFor(java.lang.String)>("allowed_geolocation_origins");

        $r2 = r0.<com.android.browser.SystemAllowGeolocationOrigins: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r4 = r0.<com.android.browser.SystemAllowGeolocationOrigins: com.android.browser.SystemAllowGeolocationOrigins$SettingObserver mSettingObserver>;

        virtualinvoke $r3.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>(r1, 0, $r4);

        virtualinvoke r0.<com.android.browser.SystemAllowGeolocationOrigins: void maybeApplySettingAsync()>();

        return;
    }

    public void stop()
    {
        com.android.browser.SystemAllowGeolocationOrigins r0;
        android.content.Context $r1;
        android.content.ContentResolver $r2;
        com.android.browser.SystemAllowGeolocationOrigins$SettingObserver $r3;

        r0 := @this: com.android.browser.SystemAllowGeolocationOrigins;

        $r1 = r0.<com.android.browser.SystemAllowGeolocationOrigins: android.content.Context mContext>;

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r3 = r0.<com.android.browser.SystemAllowGeolocationOrigins: com.android.browser.SystemAllowGeolocationOrigins$SettingObserver mSettingObserver>;

        virtualinvoke $r2.<android.content.ContentResolver: void unregisterContentObserver(android.database.ContentObserver)>($r3);

        return;
    }

    void maybeApplySettingAsync()
    {
        com.android.browser.SystemAllowGeolocationOrigins r0;
        java.lang.Runnable $r1;

        r0 := @this: com.android.browser.SystemAllowGeolocationOrigins;

        $r1 = r0.<com.android.browser.SystemAllowGeolocationOrigins: java.lang.Runnable mMaybeApplySetting>;

        staticinvoke <com.android.browser.BackgroundHandler: void execute(java.lang.Runnable)>($r1);

        return;
    }

    private static java.util.HashSet parseAllowGeolocationOrigins(java.lang.String)
    {
        java.lang.String r0, r3;
        java.util.HashSet r1, $r4;
        java.lang.String[] r2;
        int i0, i1;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r1 = $r4;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r0);

        if $z0 != 0 goto label3;

        r2 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\s+");

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r3 = r2[i1];

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z1 != 0 goto label2;

        virtualinvoke r1.<java.util.HashSet: boolean add(java.lang.Object)>(r3);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return r1;
    }

    private java.util.Set setMinus(java.util.Set, java.util.Set)
    {
        com.android.browser.SystemAllowGeolocationOrigins r0;
        java.util.Set r1, r2;
        java.util.HashSet r3, $r6;
        java.util.Iterator r4;
        java.lang.Object r5;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: com.android.browser.SystemAllowGeolocationOrigins;

        r1 := @parameter0: java.util.Set;

        r2 := @parameter1: java.util.Set;

        $r6 = new java.util.HashSet;

        $i0 = interfaceinvoke r1.<java.util.Set: int size()>();

        specialinvoke $r6.<java.util.HashSet: void <init>(int)>($i0);

        r3 = $r6;

        r4 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        r5 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        $z1 = interfaceinvoke r2.<java.util.Set: boolean contains(java.lang.Object)>(r5);

        if $z1 != 0 goto label2;

        virtualinvoke r3.<java.util.HashSet: boolean add(java.lang.Object)>(r5);

     label2:
        goto label1;

     label3:
        return r3;
    }

    private java.lang.String getSystemSetting()
    {
        com.android.browser.SystemAllowGeolocationOrigins r0;
        java.lang.String r1, $r4;
        android.content.Context $r2;
        android.content.ContentResolver $r3;

        r0 := @this: com.android.browser.SystemAllowGeolocationOrigins;

        $r2 = r0.<com.android.browser.SystemAllowGeolocationOrigins: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r1 = staticinvoke <android.provider.Settings$Secure: java.lang.String getString(android.content.ContentResolver,java.lang.String)>($r3, "allowed_geolocation_origins");

        if r1 != null goto label1;

        $r4 = "";

        goto label2;

     label1:
        $r4 = r1;

     label2:
        return $r4;
    }

    private void addOrigins(java.util.Set)
    {
        com.android.browser.SystemAllowGeolocationOrigins r0;
        java.util.Set r1;
        java.util.Iterator r2;
        java.lang.String r3;
        boolean $z0;
        java.lang.Object $r4;
        android.webkit.GeolocationPermissions $r5;

        r0 := @this: com.android.browser.SystemAllowGeolocationOrigins;

        r1 := @parameter0: java.util.Set;

        r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r4;

        $r5 = staticinvoke <android.webkit.GeolocationPermissions: android.webkit.GeolocationPermissions getInstance()>();

        virtualinvoke $r5.<android.webkit.GeolocationPermissions: void allow(java.lang.String)>(r3);

        goto label1;

     label2:
        return;
    }

    private void removeOrigins(java.util.Set)
    {
        com.android.browser.SystemAllowGeolocationOrigins r0;
        java.util.Set r1;
        java.util.Iterator r2;
        java.lang.String r3;
        boolean $z0;
        java.lang.Object $r4;
        android.webkit.GeolocationPermissions $r5;
        com.android.browser.SystemAllowGeolocationOrigins$2 $r6;

        r0 := @this: com.android.browser.SystemAllowGeolocationOrigins;

        r1 := @parameter0: java.util.Set;

        r2 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.String) $r4;

        $r5 = staticinvoke <android.webkit.GeolocationPermissions: android.webkit.GeolocationPermissions getInstance()>();

        $r6 = new com.android.browser.SystemAllowGeolocationOrigins$2;

        specialinvoke $r6.<com.android.browser.SystemAllowGeolocationOrigins$2: void <init>(com.android.browser.SystemAllowGeolocationOrigins,java.lang.String)>(r0, r3);

        virtualinvoke $r5.<android.webkit.GeolocationPermissions: void getAllowed(java.lang.String,android.webkit.ValueCallback)>(r3, $r6);

        goto label1;

     label2:
        return;
    }

    static java.lang.String access$000(com.android.browser.SystemAllowGeolocationOrigins)
    {
        com.android.browser.SystemAllowGeolocationOrigins r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.browser.SystemAllowGeolocationOrigins;

        $r1 = specialinvoke r0.<com.android.browser.SystemAllowGeolocationOrigins: java.lang.String getSystemSetting()>();

        return $r1;
    }

    static java.util.HashSet access$100(java.lang.String)
    {
        java.lang.String r0;
        java.util.HashSet $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.android.browser.SystemAllowGeolocationOrigins: java.util.HashSet parseAllowGeolocationOrigins(java.lang.String)>(r0);

        return $r1;
    }

    static java.util.Set access$200(com.android.browser.SystemAllowGeolocationOrigins, java.util.Set, java.util.Set)
    {
        com.android.browser.SystemAllowGeolocationOrigins r0;
        java.util.Set r1, r2, $r3;

        r0 := @parameter0: com.android.browser.SystemAllowGeolocationOrigins;

        r1 := @parameter1: java.util.Set;

        r2 := @parameter2: java.util.Set;

        $r3 = specialinvoke r0.<com.android.browser.SystemAllowGeolocationOrigins: java.util.Set setMinus(java.util.Set,java.util.Set)>(r1, r2);

        return $r3;
    }

    static void access$300(com.android.browser.SystemAllowGeolocationOrigins, java.util.Set)
    {
        com.android.browser.SystemAllowGeolocationOrigins r0;
        java.util.Set r1;

        r0 := @parameter0: com.android.browser.SystemAllowGeolocationOrigins;

        r1 := @parameter1: java.util.Set;

        specialinvoke r0.<com.android.browser.SystemAllowGeolocationOrigins: void removeOrigins(java.util.Set)>(r1);

        return;
    }

    static void access$400(com.android.browser.SystemAllowGeolocationOrigins, java.util.Set)
    {
        com.android.browser.SystemAllowGeolocationOrigins r0;
        java.util.Set r1;

        r0 := @parameter0: com.android.browser.SystemAllowGeolocationOrigins;

        r1 := @parameter1: java.util.Set;

        specialinvoke r0.<com.android.browser.SystemAllowGeolocationOrigins: void addOrigins(java.util.Set)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <com.android.browser.SystemAllowGeolocationOrigins: java.lang.String LAST_READ_ALLOW_GEOLOCATION_ORIGINS> = "last_read_allow_geolocation_origins";

        return;
    }
}
