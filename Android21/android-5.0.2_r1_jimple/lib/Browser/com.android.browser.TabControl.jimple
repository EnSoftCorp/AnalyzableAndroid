class com.android.browser.TabControl extends java.lang.Object
{
    private static final java.lang.String LOGTAG;
    private static long sNextId;
    private static final java.lang.String POSITIONS;
    private static final java.lang.String CURRENT;
    private int mMaxTabs;
    private java.util.ArrayList mTabs;
    private java.util.ArrayList mTabQueue;
    private int mCurrentTab;
    private final com.android.browser.Controller mController;
    private com.android.browser.TabControl$OnThumbnailUpdatedListener mOnThumbnailUpdatedListener;

    void <init>(com.android.browser.Controller)
    {
        com.android.browser.TabControl r0;
        com.android.browser.Controller r1, $r2;
        int $i0, $i1, $i2;
        java.util.ArrayList $r3, $r4;

        r0 := @this: com.android.browser.TabControl;

        r1 := @parameter0: com.android.browser.Controller;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.browser.TabControl: int mCurrentTab> = -1;

        r0.<com.android.browser.TabControl: com.android.browser.Controller mController> = r1;

        $r2 = r0.<com.android.browser.TabControl: com.android.browser.Controller mController>;

        $i0 = virtualinvoke $r2.<com.android.browser.Controller: int getMaxTabs()>();

        r0.<com.android.browser.TabControl: int mMaxTabs> = $i0;

        $r3 = new java.util.ArrayList;

        $i1 = r0.<com.android.browser.TabControl: int mMaxTabs>;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>($i1);

        r0.<com.android.browser.TabControl: java.util.ArrayList mTabs> = $r3;

        $r4 = new java.util.ArrayList;

        $i2 = r0.<com.android.browser.TabControl: int mMaxTabs>;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>($i2);

        r0.<com.android.browser.TabControl: java.util.ArrayList mTabQueue> = $r4;

        return;
    }

    static synchronized long getNextId()
    {
        long $l0, $l1;

        $l0 = <com.android.browser.TabControl: long sNextId>;

        $l1 = $l0 + 1L;

        <com.android.browser.TabControl: long sNextId> = $l1;

        return $l0;
    }

    android.webkit.WebView getCurrentWebView()
    {
        com.android.browser.TabControl r0;
        com.android.browser.Tab r1;
        int $i0;
        android.webkit.WebView $r2;

        r0 := @this: com.android.browser.TabControl;

        $i0 = r0.<com.android.browser.TabControl: int mCurrentTab>;

        r1 = virtualinvoke r0.<com.android.browser.TabControl: com.android.browser.Tab getTab(int)>($i0);

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r1.<com.android.browser.Tab: android.webkit.WebView getWebView()>();

        return $r2;
    }

    android.webkit.WebView getCurrentTopWebView()
    {
        com.android.browser.TabControl r0;
        com.android.browser.Tab r1;
        int $i0;
        android.webkit.WebView $r2;

        r0 := @this: com.android.browser.TabControl;

        $i0 = r0.<com.android.browser.TabControl: int mCurrentTab>;

        r1 = virtualinvoke r0.<com.android.browser.TabControl: com.android.browser.Tab getTab(int)>($i0);

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r1.<com.android.browser.Tab: android.webkit.WebView getTopWindow()>();

        return $r2;
    }

    android.webkit.WebView getCurrentSubWindow()
    {
        com.android.browser.TabControl r0;
        com.android.browser.Tab r1;
        int $i0;
        android.webkit.WebView $r2;

        r0 := @this: com.android.browser.TabControl;

        $i0 = r0.<com.android.browser.TabControl: int mCurrentTab>;

        r1 = virtualinvoke r0.<com.android.browser.TabControl: com.android.browser.Tab getTab(int)>($i0);

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r1.<com.android.browser.Tab: android.webkit.WebView getSubWebView()>();

        return $r2;
    }

    java.util.List getTabs()
    {
        com.android.browser.TabControl r0;
        java.util.ArrayList $r1;

        r0 := @this: com.android.browser.TabControl;

        $r1 = r0.<com.android.browser.TabControl: java.util.ArrayList mTabs>;

        return $r1;
    }

    com.android.browser.Tab getTab(int)
    {
        com.android.browser.TabControl r0;
        int i0, $i1;
        java.util.ArrayList $r1, $r2;
        java.lang.Object $r3;
        com.android.browser.Tab $r4;

        r0 := @this: com.android.browser.TabControl;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $r1 = r0.<com.android.browser.TabControl: java.util.ArrayList mTabs>;

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if i0 >= $i1 goto label1;

        $r2 = r0.<com.android.browser.TabControl: java.util.ArrayList mTabs>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r4 = (com.android.browser.Tab) $r3;

        return $r4;

     label1:
        return null;
    }

    com.android.browser.Tab getCurrentTab()
    {
        com.android.browser.TabControl r0;
        int $i0;
        com.android.browser.Tab $r1;

        r0 := @this: com.android.browser.TabControl;

        $i0 = r0.<com.android.browser.TabControl: int mCurrentTab>;

        $r1 = virtualinvoke r0.<com.android.browser.TabControl: com.android.browser.Tab getTab(int)>($i0);

        return $r1;
    }

    int getCurrentPosition()
    {
        com.android.browser.TabControl r0;
        int $i0;

        r0 := @this: com.android.browser.TabControl;

        $i0 = r0.<com.android.browser.TabControl: int mCurrentTab>;

        return $i0;
    }

    int getTabPosition(com.android.browser.Tab)
    {
        com.android.browser.TabControl r0;
        com.android.browser.Tab r1;
        java.util.ArrayList $r2;
        int $i0;

        r0 := @this: com.android.browser.TabControl;

        r1 := @parameter0: com.android.browser.Tab;

        if r1 != null goto label1;

        return -1;

     label1:
        $r2 = r0.<com.android.browser.TabControl: java.util.ArrayList mTabs>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int indexOf(java.lang.Object)>(r1);

        return $i0;
    }

    boolean canCreateNewTab()
    {
        com.android.browser.TabControl r0;
        java.util.ArrayList $r1;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.browser.TabControl;

        $i0 = r0.<com.android.browser.TabControl: int mMaxTabs>;

        $r1 = r0.<com.android.browser.TabControl: java.util.ArrayList mTabs>;

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if $i0 <= $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    boolean hasAnyOpenIncognitoTabs()
    {
        com.android.browser.TabControl r0;
        java.util.Iterator r1;
        com.android.browser.Tab r2;
        java.util.ArrayList $r3;
        boolean $z0, $z1;
        java.lang.Object $r4;
        android.webkit.WebView $r5, $r6;

        r0 := @this: com.android.browser.TabControl;

        $r3 = r0.<com.android.browser.TabControl: java.util.ArrayList mTabs>;

        r1 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.browser.Tab) $r4;

        $r5 = virtualinvoke r2.<com.android.browser.Tab: android.webkit.WebView getWebView()>();

        if $r5 == null goto label2;

        $r6 = virtualinvoke r2.<com.android.browser.Tab: android.webkit.WebView getWebView()>();

        $z1 = virtualinvoke $r6.<android.webkit.WebView: boolean isPrivateBrowsingEnabled()>();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    void addPreloadedTab(com.android.browser.Tab)
    {
        com.android.browser.TabControl r0;
        com.android.browser.Tab r1, r3;
        java.util.Iterator r2;
        java.util.ArrayList $r4, $r5;
        boolean $z0;
        com.android.browser.Controller $r6, $r7;
        android.webkit.WebView $r8;
        java.lang.Object $r9;
        long $l0, $l1, $l3;
        byte $b2;
        java.lang.StringBuilder $r10, $r12, $r13, $r14, $r15;
        java.lang.IllegalStateException $r11;
        java.lang.String $r16, $r17;

        r0 := @this: com.android.browser.TabControl;

        r1 := @parameter0: com.android.browser.Tab;

        $r4 = r0.<com.android.browser.TabControl: java.util.ArrayList mTabs>;

        r2 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.browser.Tab) $r9;

        if r3 == null goto label2;

        $l0 = virtualinvoke r3.<com.android.browser.Tab: long getId()>();

        $l1 = virtualinvoke r1.<com.android.browser.Tab: long getId()>();

        $b2 = $l0 cmp $l1;

        if $b2 != 0 goto label2;

        $r11 = new java.lang.IllegalStateException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Tab with id ");

        $l3 = virtualinvoke r1.<com.android.browser.Tab: long getId()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already exists: ");

        $r16 = virtualinvoke r3.<com.android.browser.Tab: java.lang.String toString()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r17);

        throw $r11;

     label2:
        goto label1;

     label3:
        $r5 = r0.<com.android.browser.TabControl: java.util.ArrayList mTabs>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $r6 = r0.<com.android.browser.TabControl: com.android.browser.Controller mController>;

        virtualinvoke r1.<com.android.browser.Tab: void setController(com.android.browser.WebViewController)>($r6);

        $r7 = r0.<com.android.browser.TabControl: com.android.browser.Controller mController>;

        $r8 = virtualinvoke r1.<com.android.browser.Tab: android.webkit.WebView getWebView()>();

        virtualinvoke $r7.<com.android.browser.Controller: void onSetWebView(com.android.browser.Tab,android.webkit.WebView)>(r1, $r8);

        virtualinvoke r1.<com.android.browser.Tab: void putInBackground()>();

        return;
    }

    com.android.browser.Tab createNewTab(boolean)
    {
        com.android.browser.TabControl r0;
        boolean z0;
        com.android.browser.Tab $r1;

        r0 := @this: com.android.browser.TabControl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<com.android.browser.TabControl: com.android.browser.Tab createNewTab(android.os.Bundle,boolean)>(null, z0);

        return $r1;
    }

    com.android.browser.Tab createNewTab(android.os.Bundle, boolean)
    {
        com.android.browser.TabControl r0;
        android.os.Bundle r1;
        boolean z0, $z1;
        android.webkit.WebView r2;
        com.android.browser.Tab r3, $r5;
        java.util.ArrayList $r4, $r7;
        com.android.browser.Controller $r6;

        r0 := @this: com.android.browser.TabControl;

        r1 := @parameter0: android.os.Bundle;

        z0 := @parameter1: boolean;

        $r4 = r0.<com.android.browser.TabControl: java.util.ArrayList mTabs>;

        virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $z1 = virtualinvoke r0.<com.android.browser.TabControl: boolean canCreateNewTab()>();

        if $z1 != 0 goto label1;

        return null;

     label1:
        r2 = specialinvoke r0.<com.android.browser.TabControl: android.webkit.WebView createNewWebView(boolean)>(z0);

        $r5 = new com.android.browser.Tab;

        $r6 = r0.<com.android.browser.TabControl: com.android.browser.Controller mController>;

        specialinvoke $r5.<com.android.browser.Tab: void <init>(com.android.browser.WebViewController,android.webkit.WebView,android.os.Bundle)>($r6, r2, r1);

        r3 = $r5;

        $r7 = r0.<com.android.browser.TabControl: java.util.ArrayList mTabs>;

        virtualinvoke $r7.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

        virtualinvoke r3.<com.android.browser.Tab: void putInBackground()>();

        return r3;
    }

    com.android.browser.Tab createNewTab()
    {
        com.android.browser.TabControl r0;
        com.android.browser.Tab $r1;

        r0 := @this: com.android.browser.TabControl;

        $r1 = virtualinvoke r0.<com.android.browser.TabControl: com.android.browser.Tab createNewTab(boolean)>(0);

        return $r1;
    }

    void removeParentChildRelationShips()
    {
        com.android.browser.TabControl r0;
        java.util.Iterator r1;
        com.android.browser.Tab r2;
        java.util.ArrayList $r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: com.android.browser.TabControl;

        $r3 = r0.<com.android.browser.TabControl: java.util.ArrayList mTabs>;

        r1 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.browser.Tab) $r4;

        virtualinvoke r2.<com.android.browser.Tab: void removeFromTree()>();

        goto label1;

     label2:
        return;
    }

    boolean removeTab(com.android.browser.Tab)
    {
        com.android.browser.TabControl r0;
        com.android.browser.Tab r1, r2;
        java.util.ArrayList $r3, $r4;
        int $i0;

        r0 := @this: com.android.browser.TabControl;

        r1 := @parameter0: com.android.browser.Tab;

        if r1 != null goto label1;

        return 0;

     label1:
        r2 = virtualinvoke r0.<com.android.browser.TabControl: com.android.browser.Tab getCurrentTab()>();

        $r3 = r0.<com.android.browser.TabControl: java.util.ArrayList mTabs>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        if r2 != r1 goto label2;

        virtualinvoke r1.<com.android.browser.Tab: void putInBackground()>();

        r0.<com.android.browser.TabControl: int mCurrentTab> = -1;

        goto label3;

     label2:
        $i0 = virtualinvoke r0.<com.android.browser.TabControl: int getTabPosition(com.android.browser.Tab)>(r2);

        r0.<com.android.browser.TabControl: int mCurrentTab> = $i0;

     label3:
        virtualinvoke r1.<com.android.browser.Tab: void destroy()>();

        virtualinvoke r1.<com.android.browser.Tab: void removeFromTree()>();

        $r4 = r0.<com.android.browser.TabControl: java.util.ArrayList mTabQueue>;

        virtualinvoke $r4.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        return 1;
    }

    void destroy()
    {
        com.android.browser.TabControl r0;
        java.util.Iterator r1;
        com.android.browser.Tab r2;
        java.util.ArrayList $r3, $r4, $r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: com.android.browser.TabControl;

        $r3 = r0.<com.android.browser.TabControl: java.util.ArrayList mTabs>;

        r1 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.browser.Tab) $r6;

        virtualinvoke r2.<com.android.browser.Tab: void destroy()>();

        goto label1;

     label2:
        $r4 = r0.<com.android.browser.TabControl: java.util.ArrayList mTabs>;

        virtualinvoke $r4.<java.util.ArrayList: void clear()>();

        $r5 = r0.<com.android.browser.TabControl: java.util.ArrayList mTabQueue>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

        return;
    }

    int getTabCount()
    {
        com.android.browser.TabControl r0;
        java.util.ArrayList $r1;
        int $i0;

        r0 := @this: com.android.browser.TabControl;

        $r1 = r0.<com.android.browser.TabControl: java.util.ArrayList mTabs>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        return $i0;
    }

    void saveState(android.os.Bundle)
    {
        com.android.browser.TabControl r0;
        android.os.Bundle r1, r5;
        int i0, i1, $i2, $i3;
        long[] r2;
        java.util.Iterator r3, r7;
        com.android.browser.Tab r4, r8, r15;
        java.lang.String r6, $r14;
        java.util.ArrayList $r9, $r11;
        boolean $z0, $z1, $z2, $z3;
        java.lang.Object $r10, $r13;
        long $l4, $l5, l7;
        java.lang.IllegalStateException $r12;

        r0 := @this: com.android.browser.TabControl;

        r1 := @parameter0: android.os.Bundle;

        i0 = virtualinvoke r0.<com.android.browser.TabControl: int getTabCount()>();

        if i0 != 0 goto label01;

        return;

     label01:
        r2 = newarray (long)[i0];

        i1 = 0;

        $r9 = r0.<com.android.browser.TabControl: java.util.ArrayList mTabs>;

        r3 = virtualinvoke $r9.<java.util.ArrayList: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label08;

        $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.browser.Tab) $r10;

        r5 = virtualinvoke r4.<com.android.browser.Tab: android.os.Bundle saveState()>();

        if r5 == null goto label06;

        $i2 = i1;

        i1 = i1 + 1;

        $l5 = virtualinvoke r4.<com.android.browser.Tab: long getId()>();

        r2[$i2] = $l5;

        $l4 = virtualinvoke r4.<com.android.browser.Tab: long getId()>();

        r6 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l4);

        $z2 = virtualinvoke r1.<android.os.Bundle: boolean containsKey(java.lang.String)>(r6);

        if $z2 == 0 goto label05;

        $r11 = r0.<com.android.browser.TabControl: java.util.ArrayList mTabs>;

        r7 = virtualinvoke $r11.<java.util.ArrayList: java.util.Iterator iterator()>();

     label03:
        $z3 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label04;

        $r13 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.android.browser.Tab) $r13;

        $r14 = virtualinvoke r8.<com.android.browser.Tab: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TabControl", $r14);

        goto label03;

     label04:
        $r12 = new java.lang.IllegalStateException;

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Error saving state, duplicate tab ids!");

        throw $r12;

     label05:
        virtualinvoke r1.<android.os.Bundle: void putBundle(java.lang.String,android.os.Bundle)>(r6, r5);

        goto label07;

     label06:
        $i3 = i1;

        i1 = i1 + 1;

        r2[$i3] = -1L;

        virtualinvoke r4.<com.android.browser.Tab: void deleteThumbnail()>();

     label07:
        goto label02;

     label08:
        $z1 = virtualinvoke r1.<android.os.Bundle: boolean isEmpty()>();

        if $z1 != 0 goto label10;

        virtualinvoke r1.<android.os.Bundle: void putLongArray(java.lang.String,long[])>("positions", r2);

        r15 = virtualinvoke r0.<com.android.browser.TabControl: com.android.browser.Tab getCurrentTab()>();

        l7 = -1L;

        if r15 == null goto label09;

        l7 = virtualinvoke r15.<com.android.browser.Tab: long getId()>();

     label09:
        virtualinvoke r1.<android.os.Bundle: void putLong(java.lang.String,long)>("current", l7);

     label10:
        return;
    }

    long canRestoreState(android.os.Bundle, boolean)
    {
        com.android.browser.TabControl r0;
        android.os.Bundle r1;
        boolean z0, $z1, $z2, $z3, $z4;
        long[] r2, r3, $r4;
        long l0, l1, l4;
        int i2, i3;

        r0 := @this: com.android.browser.TabControl;

        r1 := @parameter0: android.os.Bundle;

        z0 := @parameter1: boolean;

        if r1 != null goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r4 = virtualinvoke r1.<android.os.Bundle: long[] getLongArray(java.lang.String)>("positions");

     label2:
        r2 = $r4;

        if r2 != null goto label3;

        return -1L;

     label3:
        l0 = virtualinvoke r1.<android.os.Bundle: long getLong(java.lang.String)>("current");

        l1 = -1L;

        if z0 != 0 goto label4;

        $z1 = specialinvoke r0.<com.android.browser.TabControl: boolean hasState(long,android.os.Bundle)>(l0, r1);

        if $z1 == 0 goto label5;

        $z4 = specialinvoke r0.<com.android.browser.TabControl: boolean isIncognito(long,android.os.Bundle)>(l0, r1);

        if $z4 != 0 goto label5;

     label4:
        l1 = l0;

        goto label8;

     label5:
        r3 = r2;

        i2 = lengthof r3;

        i3 = 0;

     label6:
        if i3 >= i2 goto label8;

        l4 = r3[i3];

        $z3 = specialinvoke r0.<com.android.browser.TabControl: boolean hasState(long,android.os.Bundle)>(l4, r1);

        if $z3 == 0 goto label7;

        $z2 = specialinvoke r0.<com.android.browser.TabControl: boolean isIncognito(long,android.os.Bundle)>(l4, r1);

        if $z2 != 0 goto label7;

        l1 = l4;

        goto label8;

     label7:
        i3 = i3 + 1;

        goto label6;

     label8:
        return l1;
    }

    private boolean hasState(long, android.os.Bundle)
    {
        com.android.browser.TabControl r0;
        long l0;
        android.os.Bundle r1, r2;
        byte $b1;
        java.lang.String $r3;
        boolean $z0, $z1;

        r0 := @this: com.android.browser.TabControl;

        l0 := @parameter0: long;

        r1 := @parameter1: android.os.Bundle;

        $b1 = l0 cmp -1L;

        if $b1 != 0 goto label1;

        return 0;

     label1:
        $r3 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        r2 = virtualinvoke r1.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>($r3);

        if r2 == null goto label2;

        $z0 = virtualinvoke r2.<android.os.Bundle: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    private boolean isIncognito(long, android.os.Bundle)
    {
        com.android.browser.TabControl r0;
        long l0;
        android.os.Bundle r1, r2;
        java.lang.String $r3;
        boolean $z0, $z1;

        r0 := @this: com.android.browser.TabControl;

        l0 := @parameter0: long;

        r1 := @parameter1: android.os.Bundle;

        $r3 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        r2 = virtualinvoke r1.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>($r3);

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<android.os.Bundle: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r2.<android.os.Bundle: boolean getBoolean(java.lang.String)>("privateBrowsingEnabled");

        return $z1;

     label1:
        return 0;
    }

    void restoreState(android.os.Bundle, long, boolean, boolean)
    {
        com.android.browser.TabControl r0;
        android.os.Bundle r1, r7, r27;
        long l0, l1, l4, $l6, l15, l16;
        boolean z0, z1, $z3, $z6;
        long[] r2, r4, r25;
        java.util.HashMap r3, $r9;
        int i2, i3, $i7, $i9, i13, i14;
        java.lang.String r5, $r11;
        com.android.browser.Tab r6, r8, $r14, $r18, r24, r26;
        byte $b5, $b8, $b10, $b11, $b12;
        java.lang.Long $r10, $r13, $r16, $r22;
        java.lang.Object $r12, $r15;
        com.android.browser.Controller $r19;
        java.util.ArrayList $r20, $r23;

        r0 := @this: com.android.browser.TabControl;

        r1 := @parameter0: android.os.Bundle;

        l0 := @parameter1: long;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        $b5 = l0 cmp -1L;

        if $b5 != 0 goto label01;

        return;

     label01:
        r2 = virtualinvoke r1.<android.os.Bundle: long[] getLongArray(java.lang.String)>("positions");

        l1 = -9223372036854775807L;

        $r9 = new java.util.HashMap;

        specialinvoke $r9.<java.util.HashMap: void <init>()>();

        r3 = $r9;

        r4 = r2;

        i2 = lengthof r4;

        i3 = 0;

     label02:
        if i3 >= i2 goto label11;

        l4 = r4[i3];

        $b10 = l4 cmp l1;

        if $b10 <= 0 goto label03;

        l1 = l4;

     label03:
        r5 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l4);

        r7 = virtualinvoke r1.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>(r5);

        if r7 == null goto label10;

        $z3 = virtualinvoke r7.<android.os.Bundle: boolean isEmpty()>();

        if $z3 == 0 goto label04;

        goto label10;

     label04:
        if z0 != 0 goto label05;

        $z6 = virtualinvoke r7.<android.os.Bundle: boolean getBoolean(java.lang.String)>("privateBrowsingEnabled");

        if $z6 == 0 goto label05;

        goto label10;

     label05:
        $b11 = l4 cmp l0;

        if $b11 == 0 goto label06;

        if z1 == 0 goto label09;

     label06:
        r6 = virtualinvoke r0.<com.android.browser.TabControl: com.android.browser.Tab createNewTab(android.os.Bundle,boolean)>(r7, 0);

        if r6 != null goto label07;

        goto label10;

     label07:
        $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l4);

        virtualinvoke r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, r6);

        $b12 = l4 cmp l0;

        if $b12 != 0 goto label08;

        virtualinvoke r0.<com.android.browser.TabControl: boolean setCurrentTab(com.android.browser.Tab)>(r6);

     label08:
        goto label10;

     label09:
        $r18 = new com.android.browser.Tab;

        $r19 = r0.<com.android.browser.TabControl: com.android.browser.Controller mController>;

        specialinvoke $r18.<com.android.browser.Tab: void <init>(com.android.browser.WebViewController,android.os.Bundle)>($r19, r7);

        r24 = $r18;

        $r22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l4);

        virtualinvoke r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r22, r24);

        $r20 = r0.<com.android.browser.TabControl: java.util.ArrayList mTabs>;

        virtualinvoke $r20.<java.util.ArrayList: boolean add(java.lang.Object)>(r24);

        $r23 = r0.<com.android.browser.TabControl: java.util.ArrayList mTabQueue>;

        virtualinvoke $r23.<java.util.ArrayList: void add(int,java.lang.Object)>(0, r24);

     label10:
        i3 = i3 + 1;

        goto label02;

     label11:
        $l6 = l1 + 1L;

        <com.android.browser.TabControl: long sNextId> = $l6;

        $i7 = r0.<com.android.browser.TabControl: int mCurrentTab>;

        if $i7 != -1 goto label12;

        $i9 = virtualinvoke r0.<com.android.browser.TabControl: int getTabCount()>();

        if $i9 <= 0 goto label12;

        $r14 = virtualinvoke r0.<com.android.browser.TabControl: com.android.browser.Tab getTab(int)>(0);

        virtualinvoke r0.<com.android.browser.TabControl: boolean setCurrentTab(com.android.browser.Tab)>($r14);

     label12:
        r25 = r2;

        i13 = lengthof r25;

        i14 = 0;

     label13:
        if i14 >= i13 goto label15;

        l15 = r25[i14];

        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l15);

        $r12 = virtualinvoke r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r10);

        r26 = (com.android.browser.Tab) $r12;

        $r11 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l15);

        r27 = virtualinvoke r1.<android.os.Bundle: android.os.Bundle getBundle(java.lang.String)>($r11);

        if r27 == null goto label14;

        if r26 == null goto label14;

        l16 = virtualinvoke r27.<android.os.Bundle: long getLong(java.lang.String,long)>("parentTab", -1L);

        $b8 = l16 cmp -1L;

        if $b8 == 0 goto label14;

        $r13 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l16);

        $r15 = virtualinvoke r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r13);

        r8 = (com.android.browser.Tab) $r15;

        if r8 == null goto label14;

        virtualinvoke r8.<com.android.browser.Tab: void addChildTab(com.android.browser.Tab)>(r26);

     label14:
        i14 = i14 + 1;

        goto label13;

     label15:
        return;
    }

    void freeMemory()
    {
        com.android.browser.TabControl r0;
        java.util.Vector r1;
        java.util.Iterator r2;
        com.android.browser.Tab r3, $r4;
        int $i0, $i1, $i3;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        java.lang.String $r9;
        boolean $z0;
        java.lang.Object $r11;
        android.webkit.WebView r12;

        r0 := @this: com.android.browser.TabControl;

        $i0 = virtualinvoke r0.<com.android.browser.TabControl: int getTabCount()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        $r4 = virtualinvoke r0.<com.android.browser.TabControl: com.android.browser.Tab getCurrentTab()>();

        r1 = specialinvoke r0.<com.android.browser.TabControl: java.util.Vector getHalfLeastUsedTabs(com.android.browser.Tab)>($r4);

        $i1 = virtualinvoke r1.<java.util.Vector: int size()>();

        if $i1 <= 0 goto label4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Free ");

        $i3 = virtualinvoke r1.<java.util.Vector: int size()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" tabs in the browser");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TabControl", $r9);

        r2 = virtualinvoke r1.<java.util.Vector: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r11 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.browser.Tab) $r11;

        virtualinvoke r3.<com.android.browser.Tab: android.os.Bundle saveState()>();

        virtualinvoke r3.<com.android.browser.Tab: void destroy()>();

        goto label2;

     label3:
        return;

     label4:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("TabControl", "Free WebView\'s unused memory and cache");

        r12 = virtualinvoke r0.<com.android.browser.TabControl: android.webkit.WebView getCurrentWebView()>();

        if r12 == null goto label5;

        virtualinvoke r12.<android.webkit.WebView: void freeMemory()>();

     label5:
        return;
    }

    private java.util.Vector getHalfLeastUsedTabs(com.android.browser.Tab)
    {
        com.android.browser.TabControl r0;
        com.android.browser.Tab r1, r4, $r10;
        java.util.Vector r2, $r5;
        int i0, $i1, $i2, $i3, i4;
        java.util.Iterator r3;
        java.util.ArrayList $r6, $r7;
        boolean $z0;
        java.lang.Object $r8;
        android.webkit.WebView $r9;

        r0 := @this: com.android.browser.TabControl;

        r1 := @parameter0: com.android.browser.Tab;

        $r5 = new java.util.Vector;

        specialinvoke $r5.<java.util.Vector: void <init>()>();

        r2 = $r5;

        $i1 = virtualinvoke r0.<com.android.browser.TabControl: int getTabCount()>();

        if $i1 == 1 goto label1;

        if r1 != null goto label2;

     label1:
        return r2;

     label2:
        $r6 = r0.<com.android.browser.TabControl: java.util.ArrayList mTabQueue>;

        $i2 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        if $i2 != 0 goto label3;

        return r2;

     label3:
        i0 = 0;

        $r7 = r0.<com.android.browser.TabControl: java.util.ArrayList mTabQueue>;

        r3 = virtualinvoke $r7.<java.util.ArrayList: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.browser.Tab) $r8;

        if r4 == null goto label5;

        $r9 = virtualinvoke r4.<com.android.browser.Tab: android.webkit.WebView getWebView()>();

        if $r9 == null goto label5;

        i0 = i0 + 1;

        if r4 == r1 goto label5;

        $r10 = virtualinvoke r1.<com.android.browser.Tab: com.android.browser.Tab getParent()>();

        if r4 == $r10 goto label5;

        virtualinvoke r2.<java.util.Vector: boolean add(java.lang.Object)>(r4);

     label5:
        goto label4;

     label6:
        i4 = i0 / 2;

        $i3 = virtualinvoke r2.<java.util.Vector: int size()>();

        if $i3 <= i4 goto label7;

        virtualinvoke r2.<java.util.Vector: void setSize(int)>(i4);

     label7:
        return r2;
    }

    com.android.browser.Tab getLeastUsedTab(com.android.browser.Tab)
    {
        com.android.browser.TabControl r0;
        com.android.browser.Tab r1, r3, $r8;
        java.util.Iterator r2;
        int $i0, $i1;
        java.util.ArrayList $r4, $r5;
        boolean $z0;
        java.lang.Object $r6;
        android.webkit.WebView $r7;

        r0 := @this: com.android.browser.TabControl;

        r1 := @parameter0: com.android.browser.Tab;

        $i0 = virtualinvoke r0.<com.android.browser.TabControl: int getTabCount()>();

        if $i0 == 1 goto label1;

        if r1 != null goto label2;

     label1:
        return null;

     label2:
        $r4 = r0.<com.android.browser.TabControl: java.util.ArrayList mTabQueue>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i1 != 0 goto label3;

        return null;

     label3:
        $r5 = r0.<com.android.browser.TabControl: java.util.ArrayList mTabQueue>;

        r2 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.browser.Tab) $r6;

        if r3 == null goto label5;

        $r7 = virtualinvoke r3.<com.android.browser.Tab: android.webkit.WebView getWebView()>();

        if $r7 == null goto label5;

        if r3 == r1 goto label5;

        $r8 = virtualinvoke r1.<com.android.browser.Tab: com.android.browser.Tab getParent()>();

        if r3 == $r8 goto label5;

        return r3;

     label5:
        goto label4;

     label6:
        return null;
    }

    com.android.browser.Tab getTabFromView(android.webkit.WebView)
    {
        com.android.browser.TabControl r0;
        android.webkit.WebView r1, $r6, $r7;
        java.util.Iterator r2;
        com.android.browser.Tab r3;
        java.util.ArrayList $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: com.android.browser.TabControl;

        r1 := @parameter0: android.webkit.WebView;

        $r4 = r0.<com.android.browser.TabControl: java.util.ArrayList mTabs>;

        r2 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.browser.Tab) $r5;

        $r6 = virtualinvoke r3.<com.android.browser.Tab: android.webkit.WebView getSubWebView()>();

        if $r6 == r1 goto label2;

        $r7 = virtualinvoke r3.<com.android.browser.Tab: android.webkit.WebView getWebView()>();

        if $r7 != r1 goto label3;

     label2:
        return r3;

     label3:
        goto label1;

     label4:
        return null;
    }

    com.android.browser.Tab getTabFromAppId(java.lang.String)
    {
        com.android.browser.TabControl r0;
        java.lang.String r1, $r6;
        java.util.Iterator r2;
        com.android.browser.Tab r3;
        java.util.ArrayList $r4;
        boolean $z0, $z1;
        java.lang.Object $r5;

        r0 := @this: com.android.browser.TabControl;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        return null;

     label1:
        $r4 = r0.<com.android.browser.TabControl: java.util.ArrayList mTabs>;

        r2 = virtualinvoke $r4.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.browser.Tab) $r5;

        $r6 = virtualinvoke r3.<com.android.browser.Tab: java.lang.String getAppId()>();

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label3;

        return r3;

     label3:
        goto label2;

     label4:
        return null;
    }

    void stopAllLoading()
    {
        com.android.browser.TabControl r0;
        java.util.Iterator r1;
        com.android.browser.Tab r2;
        android.webkit.WebView r3, r4;
        java.util.ArrayList $r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: com.android.browser.TabControl;

        $r5 = r0.<com.android.browser.TabControl: java.util.ArrayList mTabs>;

        r1 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.browser.Tab) $r6;

        r3 = virtualinvoke r2.<com.android.browser.Tab: android.webkit.WebView getWebView()>();

        if r3 == null goto label2;

        virtualinvoke r3.<android.webkit.WebView: void stopLoading()>();

     label2:
        r4 = virtualinvoke r2.<com.android.browser.Tab: android.webkit.WebView getSubWebView()>();

        if r4 == null goto label3;

        virtualinvoke r4.<android.webkit.WebView: void stopLoading()>();

     label3:
        goto label1;

     label4:
        return;
    }

    private boolean tabMatchesUrl(com.android.browser.Tab, java.lang.String)
    {
        com.android.browser.TabControl r0;
        com.android.browser.Tab r1;
        java.lang.String r2, $r3, $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.browser.TabControl;

        r1 := @parameter0: com.android.browser.Tab;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r1.<com.android.browser.Tab: java.lang.String getUrl()>();

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        $r4 = virtualinvoke r1.<com.android.browser.Tab: java.lang.String getOriginalUrl()>();

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    com.android.browser.Tab findTabWithUrl(java.lang.String)
    {
        com.android.browser.TabControl r0;
        java.lang.String r1;
        com.android.browser.Tab r2, r4;
        java.util.Iterator r3;
        java.util.ArrayList $r5;
        boolean $z0, $z1, $z2;
        java.lang.Object $r6;

        r0 := @this: com.android.browser.TabControl;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        return null;

     label1:
        r2 = virtualinvoke r0.<com.android.browser.TabControl: com.android.browser.Tab getCurrentTab()>();

        if r2 == null goto label2;

        $z2 = specialinvoke r0.<com.android.browser.TabControl: boolean tabMatchesUrl(com.android.browser.Tab,java.lang.String)>(r2, r1);

        if $z2 == 0 goto label2;

        return r2;

     label2:
        $r5 = r0.<com.android.browser.TabControl: java.util.ArrayList mTabs>;

        r3 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.browser.Tab) $r6;

        $z1 = specialinvoke r0.<com.android.browser.TabControl: boolean tabMatchesUrl(com.android.browser.Tab,java.lang.String)>(r4, r1);

        if $z1 == 0 goto label4;

        return r4;

     label4:
        goto label3;

     label5:
        return null;
    }

    void recreateWebView(com.android.browser.Tab)
    {
        com.android.browser.TabControl r0;
        com.android.browser.Tab r1, $r4;
        android.webkit.WebView r2, $r3;

        r0 := @this: com.android.browser.TabControl;

        r1 := @parameter0: com.android.browser.Tab;

        r2 = virtualinvoke r1.<com.android.browser.Tab: android.webkit.WebView getWebView()>();

        if r2 == null goto label1;

        virtualinvoke r1.<com.android.browser.Tab: void destroy()>();

     label1:
        $r3 = specialinvoke r0.<com.android.browser.TabControl: android.webkit.WebView createNewWebView()>();

        virtualinvoke r1.<com.android.browser.Tab: void setWebView(android.webkit.WebView,boolean)>($r3, 0);

        $r4 = virtualinvoke r0.<com.android.browser.TabControl: com.android.browser.Tab getCurrentTab()>();

        if $r4 != r1 goto label2;

        specialinvoke r0.<com.android.browser.TabControl: boolean setCurrentTab(com.android.browser.Tab,boolean)>(r1, 1);

     label2:
        return;
    }

    private android.webkit.WebView createNewWebView()
    {
        com.android.browser.TabControl r0;
        android.webkit.WebView $r1;

        r0 := @this: com.android.browser.TabControl;

        $r1 = specialinvoke r0.<com.android.browser.TabControl: android.webkit.WebView createNewWebView(boolean)>(0);

        return $r1;
    }

    private android.webkit.WebView createNewWebView(boolean)
    {
        com.android.browser.TabControl r0;
        boolean z0;
        com.android.browser.Controller $r1;
        com.android.browser.WebViewFactory $r2;
        android.webkit.WebView $r3;

        r0 := @this: com.android.browser.TabControl;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.android.browser.TabControl: com.android.browser.Controller mController>;

        $r2 = virtualinvoke $r1.<com.android.browser.Controller: com.android.browser.WebViewFactory getWebViewFactory()>();

        $r3 = interfaceinvoke $r2.<com.android.browser.WebViewFactory: android.webkit.WebView createWebView(boolean)>(z0);

        return $r3;
    }

    boolean setCurrentTab(com.android.browser.Tab)
    {
        com.android.browser.TabControl r0;
        com.android.browser.Tab r1;
        boolean $z0;

        r0 := @this: com.android.browser.TabControl;

        r1 := @parameter0: com.android.browser.Tab;

        $z0 = specialinvoke r0.<com.android.browser.TabControl: boolean setCurrentTab(com.android.browser.Tab,boolean)>(r1, 0);

        return $z0;
    }

    private boolean setCurrentTab(com.android.browser.Tab, boolean)
    {
        com.android.browser.TabControl r0;
        com.android.browser.Tab r1, r2;
        boolean z0, z1, $z3;
        int i0, $i1, $i2;
        android.webkit.WebView r3, r9;
        java.util.ArrayList $r4, $r5, $r6, $r8;

        r0 := @this: com.android.browser.TabControl;

        r1 := @parameter0: com.android.browser.Tab;

        z0 := @parameter1: boolean;

        $i1 = r0.<com.android.browser.TabControl: int mCurrentTab>;

        r2 = virtualinvoke r0.<com.android.browser.TabControl: com.android.browser.Tab getTab(int)>($i1);

        if r2 != r1 goto label1;

        if z0 != 0 goto label1;

        return 1;

     label1:
        if r2 == null goto label2;

        virtualinvoke r2.<com.android.browser.Tab: void putInBackground()>();

        r0.<com.android.browser.TabControl: int mCurrentTab> = -1;

     label2:
        if r1 != null goto label3;

        return 0;

     label3:
        $r4 = r0.<com.android.browser.TabControl: java.util.ArrayList mTabQueue>;

        i0 = virtualinvoke $r4.<java.util.ArrayList: int indexOf(java.lang.Object)>(r1);

        if i0 == -1 goto label4;

        $r8 = r0.<com.android.browser.TabControl: java.util.ArrayList mTabQueue>;

        virtualinvoke $r8.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

     label4:
        $r5 = r0.<com.android.browser.TabControl: java.util.ArrayList mTabQueue>;

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        $r6 = r0.<com.android.browser.TabControl: java.util.ArrayList mTabs>;

        $i2 = virtualinvoke $r6.<java.util.ArrayList: int indexOf(java.lang.Object)>(r1);

        r0.<com.android.browser.TabControl: int mCurrentTab> = $i2;

        r3 = virtualinvoke r1.<com.android.browser.Tab: android.webkit.WebView getWebView()>();

        if r3 != null goto label5;

        $z3 = 1;

        goto label6;

     label5:
        $z3 = 0;

     label6:
        z1 = $z3;

        if z1 == 0 goto label7;

        r9 = specialinvoke r0.<com.android.browser.TabControl: android.webkit.WebView createNewWebView()>();

        virtualinvoke r1.<com.android.browser.Tab: void setWebView(android.webkit.WebView)>(r9);

     label7:
        virtualinvoke r1.<com.android.browser.Tab: void putInForeground()>();

        return 1;
    }

    public void setOnThumbnailUpdatedListener(com.android.browser.TabControl$OnThumbnailUpdatedListener)
    {
        com.android.browser.TabControl r0;
        com.android.browser.TabControl$OnThumbnailUpdatedListener r1;
        java.util.Iterator r2;
        com.android.browser.Tab r3, $r7;
        android.webkit.WebView r4;
        java.util.ArrayList $r5;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: com.android.browser.TabControl;

        r1 := @parameter0: com.android.browser.TabControl$OnThumbnailUpdatedListener;

        r0.<com.android.browser.TabControl: com.android.browser.TabControl$OnThumbnailUpdatedListener mOnThumbnailUpdatedListener> = r1;

        $r5 = r0.<com.android.browser.TabControl: java.util.ArrayList mTabs>;

        r2 = virtualinvoke $r5.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.browser.Tab) $r6;

        r4 = virtualinvoke r3.<com.android.browser.Tab: android.webkit.WebView getWebView()>();

        if r4 == null goto label4;

        if r1 == null goto label2;

        $r7 = r3;

        goto label3;

     label2:
        $r7 = null;

     label3:
        virtualinvoke r4.<android.webkit.WebView: void setPictureListener(android.webkit.WebView$PictureListener)>($r7);

     label4:
        goto label1;

     label5:
        return;
    }

    public com.android.browser.TabControl$OnThumbnailUpdatedListener getOnThumbnailUpdatedListener()
    {
        com.android.browser.TabControl r0;
        com.android.browser.TabControl$OnThumbnailUpdatedListener $r1;

        r0 := @this: com.android.browser.TabControl;

        $r1 = r0.<com.android.browser.TabControl: com.android.browser.TabControl$OnThumbnailUpdatedListener mOnThumbnailUpdatedListener>;

        return $r1;
    }

    static void <clinit>()
    {
        <com.android.browser.TabControl: java.lang.String CURRENT> = "current";

        <com.android.browser.TabControl: java.lang.String POSITIONS> = "positions";

        <com.android.browser.TabControl: java.lang.String LOGTAG> = "TabControl";

        <com.android.browser.TabControl: long sNextId> = 1L;

        return;
    }
}
