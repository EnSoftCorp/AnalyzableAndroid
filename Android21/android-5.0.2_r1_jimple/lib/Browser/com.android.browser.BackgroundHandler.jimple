public class com.android.browser.BackgroundHandler extends java.lang.Object
{
    static android.os.HandlerThread sLooperThread;
    static java.util.concurrent.ExecutorService mThreadPool;

    public static void execute(java.lang.Runnable)
    {
        java.lang.Runnable r0;
        java.util.concurrent.ExecutorService $r1;

        r0 := @parameter0: java.lang.Runnable;

        $r1 = <com.android.browser.BackgroundHandler: java.util.concurrent.ExecutorService mThreadPool>;

        interfaceinvoke $r1.<java.util.concurrent.ExecutorService: void execute(java.lang.Runnable)>(r0);

        return;
    }

    public static android.os.Looper getLooper()
    {
        android.os.HandlerThread $r0;
        android.os.Looper $r1;

        $r0 = <com.android.browser.BackgroundHandler: android.os.HandlerThread sLooperThread>;

        $r1 = virtualinvoke $r0.<android.os.HandlerThread: android.os.Looper getLooper()>();

        return $r1;
    }

    private void <init>()
    {
        com.android.browser.BackgroundHandler r0;

        r0 := @this: com.android.browser.BackgroundHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        android.os.HandlerThread $r0, $r1;
        java.util.concurrent.ExecutorService $r2;

        $r0 = new android.os.HandlerThread;

        specialinvoke $r0.<android.os.HandlerThread: void <init>(java.lang.String,int)>("BackgroundHandler", 1);

        <com.android.browser.BackgroundHandler: android.os.HandlerThread sLooperThread> = $r0;

        $r1 = <com.android.browser.BackgroundHandler: android.os.HandlerThread sLooperThread>;

        virtualinvoke $r1.<android.os.HandlerThread: void start()>();

        $r2 = staticinvoke <java.util.concurrent.Executors: java.util.concurrent.ExecutorService newCachedThreadPool()>();

        <com.android.browser.BackgroundHandler: java.util.concurrent.ExecutorService mThreadPool> = $r2;

        return;
    }
}
