class com.android.browser.FetchUrlMimeType extends java.lang.Thread
{
    private static final java.lang.String LOGTAG;
    private android.content.Context mContext;
    private android.app.DownloadManager$Request mRequest;
    private java.lang.String mUri;
    private java.lang.String mCookies;
    private java.lang.String mUserAgent;

    public void <init>(android.content.Context, android.app.DownloadManager$Request, java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.browser.FetchUrlMimeType r0;
        android.content.Context r1, $r6;
        android.app.DownloadManager$Request r2;
        java.lang.String r3, r4, r5;

        r0 := @this: com.android.browser.FetchUrlMimeType;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.app.DownloadManager$Request;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        $r6 = virtualinvoke r1.<android.content.Context: android.content.Context getApplicationContext()>();

        r0.<com.android.browser.FetchUrlMimeType: android.content.Context mContext> = $r6;

        r0.<com.android.browser.FetchUrlMimeType: android.app.DownloadManager$Request mRequest> = r2;

        r0.<com.android.browser.FetchUrlMimeType: java.lang.String mUri> = r3;

        r0.<com.android.browser.FetchUrlMimeType: java.lang.String mCookies> = r4;

        r0.<com.android.browser.FetchUrlMimeType: java.lang.String mUserAgent> = r5;

        return;
    }

    public void run()
    {
        com.android.browser.FetchUrlMimeType r0;
        android.net.http.AndroidHttpClient r1;
        org.apache.http.HttpHost r2;
        java.lang.IllegalArgumentException r3, $r32, $r33;
        org.apache.http.HttpResponse r4;
        java.lang.String r5, r6, $r9, $r10, $r13, $r14, $r19, $r21, $r22, $r25, $r28, $r30, $r34, r43, r44;
        org.apache.http.Header r7, r40;
        int i0, $i1, $i3;
        java.lang.Throwable r8, $r37;
        android.content.Context $r11, $r16;
        org.apache.http.client.methods.HttpHead $r12, r39;
        org.apache.http.StatusLine $r15;
        android.app.DownloadManager$Request $r17, $r24, $r26;
        java.lang.Object $r18;
        boolean $z0, $z1;
        android.webkit.MimeTypeMap $r20;
        org.apache.http.params.HttpParams $r29;
        java.lang.StringBuilder $r31, $r35, $r36;
        java.io.IOException $r38;
        android.app.DownloadManager r45;

        r0 := @this: com.android.browser.FetchUrlMimeType;

        $r9 = r0.<com.android.browser.FetchUrlMimeType: java.lang.String mUserAgent>;

        r1 = staticinvoke <android.net.http.AndroidHttpClient: android.net.http.AndroidHttpClient newInstance(java.lang.String)>($r9);

     label01:
        $r11 = r0.<com.android.browser.FetchUrlMimeType: android.content.Context mContext>;

        $r10 = r0.<com.android.browser.FetchUrlMimeType: java.lang.String mUri>;

        r2 = staticinvoke <android.net.Proxy: org.apache.http.HttpHost getPreferredHttpHost(android.content.Context,java.lang.String)>($r11, $r10);

        if r2 == null goto label02;

        $r29 = virtualinvoke r1.<android.net.http.AndroidHttpClient: org.apache.http.params.HttpParams getParams()>();

        staticinvoke <org.apache.http.conn.params.ConnRouteParams: void setDefaultProxy(org.apache.http.params.HttpParams,org.apache.http.HttpHost)>($r29, r2);

     label02:
        goto label04;

     label03:
        $r32 := @caughtexception;

        r3 = $r32;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Download failed: ");

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("FetchUrlMimeType", $r34);

        virtualinvoke r1.<android.net.http.AndroidHttpClient: void close()>();

        return;

     label04:
        $r12 = new org.apache.http.client.methods.HttpHead;

        $r14 = r0.<com.android.browser.FetchUrlMimeType: java.lang.String mUri>;

        specialinvoke $r12.<org.apache.http.client.methods.HttpHead: void <init>(java.lang.String)>($r14);

        r39 = $r12;

        $r13 = r0.<com.android.browser.FetchUrlMimeType: java.lang.String mCookies>;

        if $r13 == null goto label05;

        $r30 = r0.<com.android.browser.FetchUrlMimeType: java.lang.String mCookies>;

        $i3 = virtualinvoke $r30.<java.lang.String: int length()>();

        if $i3 <= 0 goto label05;

        $r28 = r0.<com.android.browser.FetchUrlMimeType: java.lang.String mCookies>;

        virtualinvoke r39.<org.apache.http.client.methods.HttpHead: void addHeader(java.lang.String,java.lang.String)>("Cookie", $r28);

     label05:
        r5 = null;

        r6 = null;

     label06:
        r4 = virtualinvoke r1.<android.net.http.AndroidHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)>(r39);

        $r15 = interfaceinvoke r4.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $i1 = interfaceinvoke $r15.<org.apache.http.StatusLine: int getStatusCode()>();

        if $i1 != 200 goto label08;

        r7 = interfaceinvoke r4.<org.apache.http.HttpResponse: org.apache.http.Header getFirstHeader(java.lang.String)>("Content-Type");

        if r7 == null goto label07;

        r5 = interfaceinvoke r7.<org.apache.http.Header: java.lang.String getValue()>();

        i0 = virtualinvoke r5.<java.lang.String: int indexOf(int)>(59);

        if i0 == -1 goto label07;

        r5 = virtualinvoke r5.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

     label07:
        r40 = interfaceinvoke r4.<org.apache.http.HttpResponse: org.apache.http.Header getFirstHeader(java.lang.String)>("Content-Disposition");

        if r40 == null goto label08;

        r6 = interfaceinvoke r40.<org.apache.http.Header: java.lang.String getValue()>();

     label08:
        virtualinvoke r1.<android.net.http.AndroidHttpClient: void close()>();

        goto label15;

     label09:
        $r33 := @caughtexception;

        if r39 == null goto label10;

        virtualinvoke r39.<org.apache.http.client.methods.HttpHead: void abort()>();

     label10:
        virtualinvoke r1.<android.net.http.AndroidHttpClient: void close()>();

        goto label15;

     label11:
        $r38 := @caughtexception;

        if r39 == null goto label12;

        virtualinvoke r39.<org.apache.http.client.methods.HttpHead: void abort()>();

     label12:
        virtualinvoke r1.<android.net.http.AndroidHttpClient: void close()>();

        goto label15;

     label13:
        $r37 := @caughtexception;

        r8 = $r37;

     label14:
        virtualinvoke r1.<android.net.http.AndroidHttpClient: void close()>();

        throw r8;

     label15:
        if r5 == null goto label18;

        $z0 = virtualinvoke r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("text/plain");

        if $z0 != 0 goto label16;

        $z1 = virtualinvoke r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("application/octet-stream");

        if $z1 == 0 goto label17;

     label16:
        $r20 = staticinvoke <android.webkit.MimeTypeMap: android.webkit.MimeTypeMap getSingleton()>();

        $r19 = r0.<com.android.browser.FetchUrlMimeType: java.lang.String mUri>;

        $r21 = staticinvoke <android.webkit.MimeTypeMap: java.lang.String getFileExtensionFromUrl(java.lang.String)>($r19);

        r43 = virtualinvoke $r20.<android.webkit.MimeTypeMap: java.lang.String getMimeTypeFromExtension(java.lang.String)>($r21);

        if r43 == null goto label17;

        r5 = r43;

        $r24 = r0.<com.android.browser.FetchUrlMimeType: android.app.DownloadManager$Request mRequest>;

        virtualinvoke $r24.<android.app.DownloadManager$Request: android.app.DownloadManager$Request setMimeType(java.lang.String)>(r43);

     label17:
        $r22 = r0.<com.android.browser.FetchUrlMimeType: java.lang.String mUri>;

        r44 = staticinvoke <android.webkit.URLUtil: java.lang.String guessFileName(java.lang.String,java.lang.String,java.lang.String)>($r22, r6, r5);

        $r26 = r0.<com.android.browser.FetchUrlMimeType: android.app.DownloadManager$Request mRequest>;

        $r25 = <android.os.Environment: java.lang.String DIRECTORY_DOWNLOADS>;

        virtualinvoke $r26.<android.app.DownloadManager$Request: android.app.DownloadManager$Request setDestinationInExternalPublicDir(java.lang.String,java.lang.String)>($r25, r44);

     label18:
        $r16 = r0.<com.android.browser.FetchUrlMimeType: android.content.Context mContext>;

        $r18 = virtualinvoke $r16.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("download");

        r45 = (android.app.DownloadManager) $r18;

        $r17 = r0.<com.android.browser.FetchUrlMimeType: android.app.DownloadManager$Request mRequest>;

        virtualinvoke r45.<android.app.DownloadManager: long enqueue(android.app.DownloadManager$Request)>($r17);

        return;

        catch java.lang.IllegalArgumentException from label01 to label02 with label03;
        catch java.lang.IllegalArgumentException from label06 to label08 with label09;
        catch java.io.IOException from label06 to label08 with label11;
        catch java.lang.Throwable from label06 to label08 with label13;
        catch java.lang.Throwable from label09 to label10 with label13;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    public static void <clinit>()
    {
        <com.android.browser.FetchUrlMimeType: java.lang.String LOGTAG> = "FetchUrlMimeType";

        return;
    }
}
