final class com.google.common.collect.Interners$1 extends java.lang.Object implements com.google.common.collect.Interner
{
    final java.util.concurrent.ConcurrentMap val$map;

    void <init>(java.util.concurrent.ConcurrentMap)
    {
        com.google.common.collect.Interners$1 r0;
        java.util.concurrent.ConcurrentMap r1;

        r0 := @this: com.google.common.collect.Interners$1;

        r1 := @parameter0: java.util.concurrent.ConcurrentMap;

        r0.<com.google.common.collect.Interners$1: java.util.concurrent.ConcurrentMap val$map> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object intern(java.lang.Object)
    {
        com.google.common.collect.Interners$1 r0;
        java.lang.Object r1, r2, $r4, $r5;
        java.util.concurrent.ConcurrentMap $r3;

        r0 := @this: com.google.common.collect.Interners$1;

        r1 := @parameter0: java.lang.Object;

        $r3 = r0.<com.google.common.collect.Interners$1: java.util.concurrent.ConcurrentMap val$map>;

        $r4 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        r2 = interfaceinvoke $r3.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>($r4, r1);

        if r2 != null goto label1;

        $r5 = r1;

        goto label2;

     label1:
        $r5 = r2;

     label2:
        return $r5;
    }
}
