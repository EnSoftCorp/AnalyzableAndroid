public class com.android.common.Rfc822Validator extends java.lang.Object implements android.widget.AutoCompleteTextView$Validator
{
    private static final java.lang.String EMAIL_ADDRESS_LOCALPART_REGEXP;
    private static final java.lang.String GOOD_IRI_CHAR;
    private static final java.lang.String LABEL_REGEXP;
    private static final java.lang.String DOMAIN_REGEXP;
    private static final java.util.regex.Pattern EMAIL_ADDRESS_PATTERN;
    private java.lang.String mDomain;
    private boolean mRemoveInvalid;

    public void <init>(java.lang.String)
    {
        com.android.common.Rfc822Validator r0;
        java.lang.String r1;

        r0 := @this: com.android.common.Rfc822Validator;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.common.Rfc822Validator: boolean mRemoveInvalid> = 0;

        r0.<com.android.common.Rfc822Validator: java.lang.String mDomain> = r1;

        return;
    }

    public boolean isValid(java.lang.CharSequence)
    {
        com.android.common.Rfc822Validator r0;
        java.lang.CharSequence r1;
        android.text.util.Rfc822Token[] r2;
        int $i0;
        android.text.util.Rfc822Token $r3;
        java.util.regex.Pattern $r4;
        java.lang.String $r5;
        java.util.regex.Matcher $r6;
        boolean $z0, $z1;

        r0 := @this: com.android.common.Rfc822Validator;

        r1 := @parameter0: java.lang.CharSequence;

        r2 = staticinvoke <android.text.util.Rfc822Tokenizer: android.text.util.Rfc822Token[] tokenize(java.lang.CharSequence)>(r1);

        $i0 = lengthof r2;

        if $i0 != 1 goto label1;

        $r4 = <com.android.common.Rfc822Validator: java.util.regex.Pattern EMAIL_ADDRESS_PATTERN>;

        $r3 = r2[0];

        $r5 = virtualinvoke $r3.<android.text.util.Rfc822Token: java.lang.String getAddress()>();

        $r6 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r5);

        $z0 = virtualinvoke $r6.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void setRemoveInvalid(boolean)
    {
        com.android.common.Rfc822Validator r0;
        boolean z0;

        r0 := @this: com.android.common.Rfc822Validator;

        z0 := @parameter0: boolean;

        r0.<com.android.common.Rfc822Validator: boolean mRemoveInvalid> = z0;

        return;
    }

    private java.lang.String removeIllegalCharacters(java.lang.String)
    {
        com.android.common.Rfc822Validator r0;
        java.lang.String r1, $r4;
        java.lang.StringBuilder r2, $r3;
        int i0, i1;
        char c2;

        r0 := @this: com.android.common.Rfc822Validator;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r2 = $r3;

        i0 = virtualinvoke r1.<java.lang.String: int length()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label5;

        c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1);

        if c2 <= 32 goto label4;

        if c2 <= 126 goto label2;

        goto label4;

     label2:
        if c2 == 40 goto label4;

        if c2 == 41 goto label4;

        if c2 == 60 goto label4;

        if c2 == 62 goto label4;

        if c2 == 64 goto label4;

        if c2 == 44 goto label4;

        if c2 == 59 goto label4;

        if c2 == 58 goto label4;

        if c2 == 92 goto label4;

        if c2 == 34 goto label4;

        if c2 == 91 goto label4;

        if c2 != 93 goto label3;

        goto label4;

     label3:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c2);

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        $r4 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public java.lang.CharSequence fixText(java.lang.CharSequence)
    {
        com.android.common.Rfc822Validator r0;
        java.lang.CharSequence r1;
        android.text.util.Rfc822Token[] r2;
        java.lang.StringBuilder r3, $r7, $r11, $r12, $r15, $r17, $r26, $r28, $r29, $r30;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String r4, r5, r6, $r9, $r10, $r14, $r16, $r20, $r21, $r24, $r25, $r27, $r31;
        boolean z0, $z1, $z2, $z3, $z4;
        android.text.util.Rfc822Token $r8, $r13, $r19, $r23;

        r0 := @this: com.android.common.Rfc822Validator;

        r1 := @parameter0: java.lang.CharSequence;

        $i2 = staticinvoke <android.text.TextUtils: int getTrimmedLength(java.lang.CharSequence)>(r1);

        if $i2 != 0 goto label01;

        return "";

     label01:
        r2 = staticinvoke <android.text.util.Rfc822Tokenizer: android.text.util.Rfc822Token[] tokenize(java.lang.CharSequence)>(r1);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        r3 = $r7;

        i0 = 0;

     label02:
        $i3 = lengthof r2;

        if i0 >= $i3 goto label13;

        $r8 = r2[i0];

        r4 = virtualinvoke $r8.<android.text.util.Rfc822Token: java.lang.String getAddress()>();

        $z1 = r0.<com.android.common.Rfc822Validator: boolean mRemoveInvalid>;

        if $z1 == 0 goto label03;

        $z4 = virtualinvoke r0.<com.android.common.Rfc822Validator: boolean isValid(java.lang.CharSequence)>(r4);

        if $z4 != 0 goto label03;

        goto label12;

     label03:
        i1 = virtualinvoke r4.<java.lang.String: int indexOf(int)>(64);

        if i1 >= 0 goto label04;

        $r25 = r0.<com.android.common.Rfc822Validator: java.lang.String mDomain>;

        if $r25 == null goto label11;

        $r23 = r2[i0];

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r24 = specialinvoke r0.<com.android.common.Rfc822Validator: java.lang.String removeIllegalCharacters(java.lang.String)>(r4);

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r27 = r0.<com.android.common.Rfc822Validator: java.lang.String mDomain>;

        $r28 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r23.<android.text.util.Rfc822Token: void setAddress(java.lang.String)>($r31);

        goto label11;

     label04:
        $r9 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

        r5 = specialinvoke r0.<com.android.common.Rfc822Validator: java.lang.String removeIllegalCharacters(java.lang.String)>($r9);

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r5);

        if $z2 == 0 goto label05;

        goto label12;

     label05:
        $i4 = i1 + 1;

        $r10 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>($i4);

        r6 = specialinvoke r0.<com.android.common.Rfc822Validator: java.lang.String removeIllegalCharacters(java.lang.String)>($r10);

        $i5 = virtualinvoke r6.<java.lang.String: int length()>();

        if $i5 != 0 goto label06;

        $z3 = 1;

        goto label07;

     label06:
        $z3 = 0;

     label07:
        z0 = $z3;

        if z0 == 0 goto label08;

        $r21 = r0.<com.android.common.Rfc822Validator: java.lang.String mDomain>;

        if $r21 == null goto label11;

     label08:
        $r13 = r2[i0];

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        if z0 != 0 goto label09;

        $r14 = r6;

        goto label10;

     label09:
        $r14 = r0.<com.android.common.Rfc822Validator: java.lang.String mDomain>;

     label10:
        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<android.text.util.Rfc822Token: void setAddress(java.lang.String)>($r16);

     label11:
        $r19 = r2[i0];

        $r20 = virtualinvoke $r19.<android.text.util.Rfc822Token: java.lang.String toString()>();

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $i7 = i0 + 1;

        $i6 = lengthof r2;

        if $i7 >= $i6 goto label12;

        virtualinvoke r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label12:
        i0 = i0 + 1;

        goto label02;

     label13:
        return r3;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        <com.android.common.Rfc822Validator: java.lang.String DOMAIN_REGEXP> = "(([a-zA-Z0-9\u00a0-\ud7ff\uf900-\ufdcf\ufdf0-\uffef][a-zA-Z0-9\u00a0-\ud7ff\uf900-\ufdcf\ufdf0-\uffef\\-]{0,61})?[a-zA-Z0-9\u00a0-\ud7ff\uf900-\ufdcf\ufdf0-\uffef]\\.)+[a-zA-Z0-9\u00a0-\ud7ff\uf900-\ufdcf\ufdf0-\uffef][a-zA-Z0-9\u00a0-\ud7ff\uf900-\ufdcf\ufdf0-\uffef\\-]{0,61}[a-zA-Z0-9\u00a0-\ud7ff\uf900-\ufdcf\ufdf0-\uffef]";

        <com.android.common.Rfc822Validator: java.lang.String LABEL_REGEXP> = "([a-zA-Z0-9\u00a0-\ud7ff\uf900-\ufdcf\ufdf0-\uffef][a-zA-Z0-9\u00a0-\ud7ff\uf900-\ufdcf\ufdf0-\uffef\\-]{0,61})?[a-zA-Z0-9\u00a0-\ud7ff\uf900-\ufdcf\ufdf0-\uffef]";

        <com.android.common.Rfc822Validator: java.lang.String GOOD_IRI_CHAR> = "a-zA-Z0-9\u00a0-\ud7ff\uf900-\ufdcf\ufdf0-\uffef";

        <com.android.common.Rfc822Validator: java.lang.String EMAIL_ADDRESS_LOCALPART_REGEXP> = "((?!\\s)[\\.\\w!#$%&\'*+\\-/=?^`{|}~\u0080-\ufffe])+";

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("((?!\\s)[\\.\\w!#$%&\'*+\\-/=?^`{|}~\u0080-\ufffe])+@(([a-zA-Z0-9\u00a0-\ud7ff\uf900-\ufdcf\ufdf0-\uffef][a-zA-Z0-9\u00a0-\ud7ff\uf900-\ufdcf\ufdf0-\uffef\\-]{0,61})?[a-zA-Z0-9\u00a0-\ud7ff\uf900-\ufdcf\ufdf0-\uffef]\\.)+[a-zA-Z0-9\u00a0-\ud7ff\uf900-\ufdcf\ufdf0-\uffef][a-zA-Z0-9\u00a0-\ud7ff\uf900-\ufdcf\ufdf0-\uffef\\-]{0,61}[a-zA-Z0-9\u00a0-\ud7ff\uf900-\ufdcf\ufdf0-\uffef]");

        <com.android.common.Rfc822Validator: java.util.regex.Pattern EMAIL_ADDRESS_PATTERN> = $r0;

        return;
    }
}
