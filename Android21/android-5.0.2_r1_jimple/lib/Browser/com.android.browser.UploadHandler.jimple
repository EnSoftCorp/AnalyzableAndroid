public class com.android.browser.UploadHandler extends java.lang.Object
{
    private static final java.lang.String IMAGE_MIME_TYPE;
    private static final java.lang.String VIDEO_MIME_TYPE;
    private static final java.lang.String AUDIO_MIME_TYPE;
    private static final java.lang.String FILE_PROVIDER_AUTHORITY;
    private android.webkit.ValueCallback mUploadMessage;
    private boolean mHandled;
    private com.android.browser.Controller mController;
    private android.webkit.WebChromeClient$FileChooserParams mParams;
    private android.net.Uri mCapturedMedia;
    static final boolean $assertionsDisabled;

    public void <init>(com.android.browser.Controller)
    {
        com.android.browser.UploadHandler r0;
        com.android.browser.Controller r1;

        r0 := @this: com.android.browser.UploadHandler;

        r1 := @parameter0: com.android.browser.Controller;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.browser.UploadHandler: com.android.browser.Controller mController> = r1;

        return;
    }

    boolean handled()
    {
        com.android.browser.UploadHandler r0;
        boolean $z0;

        r0 := @this: com.android.browser.UploadHandler;

        $z0 = r0.<com.android.browser.UploadHandler: boolean mHandled>;

        return $z0;
    }

    void onResult(int, android.content.Intent)
    {
        com.android.browser.UploadHandler r0;
        int i0;
        android.content.Intent r1;
        android.net.Uri[] r2;
        android.webkit.ValueCallback $r3;

        r0 := @this: com.android.browser.UploadHandler;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        r2 = specialinvoke r0.<com.android.browser.UploadHandler: android.net.Uri[] parseResult(int,android.content.Intent)>(i0, r1);

        $r3 = r0.<com.android.browser.UploadHandler: android.webkit.ValueCallback mUploadMessage>;

        interfaceinvoke $r3.<android.webkit.ValueCallback: void onReceiveValue(java.lang.Object)>(r2);

        r0.<com.android.browser.UploadHandler: boolean mHandled> = 1;

        return;
    }

    void openFileChooser(android.webkit.ValueCallback, android.webkit.WebChromeClient$FileChooserParams)
    {
        com.android.browser.UploadHandler r0;
        android.webkit.ValueCallback r1, $r4;
        android.webkit.WebChromeClient$FileChooserParams r2;
        android.content.Intent[] r3;
        boolean $z0, $z1;
        android.content.Intent $r5, $r6, r8;
        int $i0, $i1;
        java.lang.AssertionError $r7;

        r0 := @this: com.android.browser.UploadHandler;

        r1 := @parameter0: android.webkit.ValueCallback;

        r2 := @parameter1: android.webkit.WebChromeClient$FileChooserParams;

        $r4 = r0.<com.android.browser.UploadHandler: android.webkit.ValueCallback mUploadMessage>;

        if $r4 == null goto label1;

        return;

     label1:
        r0.<com.android.browser.UploadHandler: android.webkit.ValueCallback mUploadMessage> = r1;

        r0.<com.android.browser.UploadHandler: android.webkit.WebChromeClient$FileChooserParams mParams> = r2;

        r3 = specialinvoke r0.<com.android.browser.UploadHandler: android.content.Intent[] createCaptureIntent()>();

        $z0 = <com.android.browser.UploadHandler: boolean $assertionsDisabled>;

        if $z0 != 0 goto label3;

        if r3 == null goto label2;

        $i1 = lengthof r3;

        if $i1 > 0 goto label3;

     label2:
        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label3:
        $z1 = virtualinvoke r2.<android.webkit.WebChromeClient$FileChooserParams: boolean isCaptureEnabled()>();

        if $z1 == 0 goto label4;

        $i0 = lengthof r3;

        if $i0 != 1 goto label4;

        r8 = r3[0];

        goto label5;

     label4:
        $r5 = new android.content.Intent;

        specialinvoke $r5.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.CHOOSER");

        r8 = $r5;

        virtualinvoke r8.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable[])>("android.intent.extra.INITIAL_INTENTS", r3);

        $r6 = virtualinvoke r2.<android.webkit.WebChromeClient$FileChooserParams: android.content.Intent createIntent()>();

        virtualinvoke r8.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.INTENT", $r6);

     label5:
        specialinvoke r0.<com.android.browser.UploadHandler: void startActivity(android.content.Intent)>(r8);

        return;
    }

    private android.net.Uri[] parseResult(int, android.content.Intent)
    {
        com.android.browser.UploadHandler r0;
        int i0;
        android.content.Intent r1;
        android.net.Uri r2, $r4, $r5;
        android.net.Uri[] r3;

        r0 := @this: com.android.browser.UploadHandler;

        i0 := @parameter0: int;

        r1 := @parameter1: android.content.Intent;

        if i0 != 0 goto label1;

        return null;

     label1:
        if r1 == null goto label2;

        if i0 == -1 goto label3;

     label2:
        $r5 = null;

        goto label4;

     label3:
        $r5 = virtualinvoke r1.<android.content.Intent: android.net.Uri getData()>();

     label4:
        r2 = $r5;

        if r2 != null goto label5;

        if r1 != null goto label5;

        if i0 != -1 goto label5;

        $r4 = r0.<com.android.browser.UploadHandler: android.net.Uri mCapturedMedia>;

        if $r4 == null goto label5;

        r2 = r0.<com.android.browser.UploadHandler: android.net.Uri mCapturedMedia>;

     label5:
        r3 = null;

        if r2 == null goto label6;

        r3 = newarray (android.net.Uri)[1];

        r3[0] = r2;

     label6:
        return r3;
    }

    private void startActivity(android.content.Intent)
    {
        com.android.browser.UploadHandler r0;
        android.content.Intent r1;
        com.android.browser.Controller $r3, $r6;
        android.app.Activity $r4, $r7;
        android.content.ActivityNotFoundException $r5;
        android.widget.Toast $r8;

        r0 := @this: com.android.browser.UploadHandler;

        r1 := @parameter0: android.content.Intent;

     label1:
        $r3 = r0.<com.android.browser.UploadHandler: com.android.browser.Controller mController>;

        $r4 = virtualinvoke $r3.<com.android.browser.Controller: android.app.Activity getActivity()>();

        virtualinvoke $r4.<android.app.Activity: void startActivityForResult(android.content.Intent,int)>(r1, 4);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = r0.<com.android.browser.UploadHandler: com.android.browser.Controller mController>;

        $r7 = virtualinvoke $r6.<com.android.browser.Controller: android.app.Activity getActivity()>();

        $r8 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,int,int)>($r7, 2131492867, 1);

        virtualinvoke $r8.<android.widget.Toast: void show()>();

     label4:
        return;

        catch android.content.ActivityNotFoundException from label1 to label2 with label3;
    }

    private android.content.Intent[] createCaptureIntent()
    {
        com.android.browser.UploadHandler r0;
        java.lang.String r1;
        java.lang.String[] r2;
        android.content.Intent[] r3;
        android.webkit.WebChromeClient$FileChooserParams $r4;
        boolean $z0, $z1, $z2;
        android.net.Uri $r5, $r11;
        android.content.Intent $r6, $r7, $r8, $r9, $r10, $r12;
        int $i0;

        r0 := @this: com.android.browser.UploadHandler;

        r1 = "*/*";

        $r4 = r0.<com.android.browser.UploadHandler: android.webkit.WebChromeClient$FileChooserParams mParams>;

        r2 = virtualinvoke $r4.<android.webkit.WebChromeClient$FileChooserParams: java.lang.String[] getAcceptTypes()>();

        if r2 == null goto label1;

        $i0 = lengthof r2;

        if $i0 <= 0 goto label1;

        r1 = r2[0];

     label1:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("image/*");

        if $z0 == 0 goto label2;

        r3 = newarray (android.content.Intent)[1];

        $r11 = specialinvoke r0.<com.android.browser.UploadHandler: android.net.Uri createTempFileContentUri(java.lang.String)>(".jpg");

        $r12 = specialinvoke r0.<com.android.browser.UploadHandler: android.content.Intent createCameraIntent(android.net.Uri)>($r11);

        r3[0] = $r12;

        goto label5;

     label2:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("video/*");

        if $z1 == 0 goto label3;

        r3 = newarray (android.content.Intent)[1];

        $r10 = specialinvoke r0.<com.android.browser.UploadHandler: android.content.Intent createCamcorderIntent()>();

        r3[0] = $r10;

        goto label5;

     label3:
        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("audio/*");

        if $z2 == 0 goto label4;

        r3 = newarray (android.content.Intent)[1];

        $r9 = specialinvoke r0.<com.android.browser.UploadHandler: android.content.Intent createSoundRecorderIntent()>();

        r3[0] = $r9;

        goto label5;

     label4:
        r3 = newarray (android.content.Intent)[3];

        $r5 = specialinvoke r0.<com.android.browser.UploadHandler: android.net.Uri createTempFileContentUri(java.lang.String)>(".jpg");

        $r6 = specialinvoke r0.<com.android.browser.UploadHandler: android.content.Intent createCameraIntent(android.net.Uri)>($r5);

        r3[0] = $r6;

        $r7 = specialinvoke r0.<com.android.browser.UploadHandler: android.content.Intent createCamcorderIntent()>();

        r3[1] = $r7;

        $r8 = specialinvoke r0.<com.android.browser.UploadHandler: android.content.Intent createSoundRecorderIntent()>();

        r3[2] = $r8;

     label5:
        return r3;
    }

    private android.net.Uri createTempFileContentUri(java.lang.String)
    {
        com.android.browser.UploadHandler r0;
        java.lang.String r1, $r8;
        java.io.File r2, r3, $r4, $r7;
        com.android.browser.Controller $r5, $r9;
        android.app.Activity $r6, $r10;
        boolean $z0, $z1;
        long $l0;
        android.net.Uri $r11;
        java.io.IOException $r12, r15;
        java.lang.RuntimeException $r13, $r14;

        r0 := @this: com.android.browser.UploadHandler;

        r1 := @parameter0: java.lang.String;

     label1:
        $r4 = new java.io.File;

        $r5 = r0.<com.android.browser.UploadHandler: com.android.browser.Controller mController>;

        $r6 = virtualinvoke $r5.<com.android.browser.Controller: android.app.Activity getActivity()>();

        $r7 = virtualinvoke $r6.<android.app.Activity: java.io.File getFilesDir()>();

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, "captured_media");

        r2 = $r4;

        $z0 = virtualinvoke r2.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r2.<java.io.File: boolean mkdir()>();

        if $z1 != 0 goto label2;

        $r13 = new java.lang.RuntimeException;

        specialinvoke $r13.<java.lang.RuntimeException: void <init>(java.lang.String)>("Folder cannot be created.");

        throw $r13;

     label2:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0);

        r3 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>($r8, r1, r2);

        $r9 = r0.<com.android.browser.UploadHandler: com.android.browser.Controller mController>;

        $r10 = virtualinvoke $r9.<com.android.browser.Controller: android.app.Activity getActivity()>();

        $r11 = staticinvoke <android.support.v4.content.FileProvider: android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File)>($r10, "com.android.browser-classic.file", r3);

     label3:
        return $r11;

     label4:
        $r12 := @caughtexception;

        r15 = $r12;

        $r14 = new java.lang.RuntimeException;

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r15);

        throw $r14;

        catch java.io.IOException from label1 to label3 with label4;
    }

    private android.content.Intent createCameraIntent(android.net.Uri)
    {
        com.android.browser.UploadHandler r0;
        android.net.Uri r1, $r5, $r10;
        android.content.Intent r2, $r3;
        com.android.browser.Controller $r7;
        android.app.Activity $r8;
        android.content.ContentResolver $r9;
        android.content.ClipData $r11;
        java.lang.IllegalArgumentException $r12;

        r0 := @this: com.android.browser.UploadHandler;

        r1 := @parameter0: android.net.Uri;

        if r1 != null goto label1;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r12;

     label1:
        r0.<com.android.browser.UploadHandler: android.net.Uri mCapturedMedia> = r1;

        $r3 = new android.content.Intent;

        specialinvoke $r3.<android.content.Intent: void <init>(java.lang.String)>("android.media.action.IMAGE_CAPTURE");

        r2 = $r3;

        virtualinvoke r2.<android.content.Intent: android.content.Intent setFlags(int)>(3);

        $r5 = r0.<com.android.browser.UploadHandler: android.net.Uri mCapturedMedia>;

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("output", $r5);

        $r7 = r0.<com.android.browser.UploadHandler: com.android.browser.Controller mController>;

        $r8 = virtualinvoke $r7.<com.android.browser.Controller: android.app.Activity getActivity()>();

        $r9 = virtualinvoke $r8.<android.app.Activity: android.content.ContentResolver getContentResolver()>();

        $r10 = r0.<com.android.browser.UploadHandler: android.net.Uri mCapturedMedia>;

        $r11 = staticinvoke <android.content.ClipData: android.content.ClipData newUri(android.content.ContentResolver,java.lang.CharSequence,android.net.Uri)>($r9, "com.android.browser-classic.file", $r10);

        virtualinvoke r2.<android.content.Intent: void setClipData(android.content.ClipData)>($r11);

        return r2;
    }

    private android.content.Intent createCamcorderIntent()
    {
        com.android.browser.UploadHandler r0;
        android.content.Intent $r1;

        r0 := @this: com.android.browser.UploadHandler;

        $r1 = new android.content.Intent;

        specialinvoke $r1.<android.content.Intent: void <init>(java.lang.String)>("android.media.action.VIDEO_CAPTURE");

        return $r1;
    }

    private android.content.Intent createSoundRecorderIntent()
    {
        com.android.browser.UploadHandler r0;
        android.content.Intent $r1;

        r0 := @this: com.android.browser.UploadHandler;

        $r1 = new android.content.Intent;

        specialinvoke $r1.<android.content.Intent: void <init>(java.lang.String)>("android.provider.MediaStore.RECORD_SOUND");

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <com.android.browser.UploadHandler: java.lang.String FILE_PROVIDER_AUTHORITY> = "com.android.browser-classic.file";

        <com.android.browser.UploadHandler: java.lang.String AUDIO_MIME_TYPE> = "audio/*";

        <com.android.browser.UploadHandler: java.lang.String VIDEO_MIME_TYPE> = "video/*";

        <com.android.browser.UploadHandler: java.lang.String IMAGE_MIME_TYPE> = "image/*";

        $r0 = class "com/android/browser/UploadHandler";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.android.browser.UploadHandler: boolean $assertionsDisabled> = $z1;

        return;
    }
}
