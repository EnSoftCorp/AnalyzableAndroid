class com.google.common.base.Predicates$ContainsPatternPredicate extends java.lang.Object implements com.google.common.base.Predicate, java.io.Serializable
{
    final java.util.regex.Pattern pattern;
    private static final long serialVersionUID;

    void <init>(java.util.regex.Pattern)
    {
        com.google.common.base.Predicates$ContainsPatternPredicate r0;
        java.util.regex.Pattern r1, $r3;
        java.lang.Object $r2;

        r0 := @this: com.google.common.base.Predicates$ContainsPatternPredicate;

        r1 := @parameter0: java.util.regex.Pattern;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (java.util.regex.Pattern) $r2;

        r0.<com.google.common.base.Predicates$ContainsPatternPredicate: java.util.regex.Pattern pattern> = $r3;

        return;
    }

    void <init>(java.lang.String)
    {
        com.google.common.base.Predicates$ContainsPatternPredicate r0;
        java.lang.String r1;
        java.util.regex.Pattern $r2;

        r0 := @this: com.google.common.base.Predicates$ContainsPatternPredicate;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r1);

        specialinvoke r0.<com.google.common.base.Predicates$ContainsPatternPredicate: void <init>(java.util.regex.Pattern)>($r2);

        return;
    }

    public boolean apply(java.lang.CharSequence)
    {
        com.google.common.base.Predicates$ContainsPatternPredicate r0;
        java.lang.CharSequence r1;
        java.util.regex.Pattern $r2;
        java.util.regex.Matcher $r3;
        boolean $z0;

        r0 := @this: com.google.common.base.Predicates$ContainsPatternPredicate;

        r1 := @parameter0: java.lang.CharSequence;

        $r2 = r0.<com.google.common.base.Predicates$ContainsPatternPredicate: java.util.regex.Pattern pattern>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean find()>();

        return $z0;
    }

    public int hashCode()
    {
        com.google.common.base.Predicates$ContainsPatternPredicate r0;
        java.lang.Object[] $r1;
        java.util.regex.Pattern $r2, $r4;
        java.lang.String $r3;
        int $i0, $i1;
        java.lang.Integer $r5;

        r0 := @this: com.google.common.base.Predicates$ContainsPatternPredicate;

        $r1 = newarray (java.lang.Object)[2];

        $r2 = r0.<com.google.common.base.Predicates$ContainsPatternPredicate: java.util.regex.Pattern pattern>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.lang.String pattern()>();

        $r1[0] = $r3;

        $r4 = r0.<com.google.common.base.Predicates$ContainsPatternPredicate: java.util.regex.Pattern pattern>;

        $i0 = virtualinvoke $r4.<java.util.regex.Pattern: int flags()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r1[1] = $r5;

        $i1 = staticinvoke <com.google.common.base.Objects: int hashCode(java.lang.Object[])>($r1);

        return $i1;
    }

    public boolean equals(java.lang.Object)
    {
        com.google.common.base.Predicates$ContainsPatternPredicate r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3;
        java.util.regex.Pattern $r3, $r5, $r7, $r9;
        java.lang.String $r4, $r6;
        int $i0, $i1;
        java.lang.Integer $r8, $r10;

        r0 := @this: com.google.common.base.Predicates$ContainsPatternPredicate;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof com.google.common.base.Predicates$ContainsPatternPredicate;

        if $z0 == 0 goto label3;

        r2 = (com.google.common.base.Predicates$ContainsPatternPredicate) r1;

        $r3 = r0.<com.google.common.base.Predicates$ContainsPatternPredicate: java.util.regex.Pattern pattern>;

        $r4 = virtualinvoke $r3.<java.util.regex.Pattern: java.lang.String pattern()>();

        $r5 = r2.<com.google.common.base.Predicates$ContainsPatternPredicate: java.util.regex.Pattern pattern>;

        $r6 = virtualinvoke $r5.<java.util.regex.Pattern: java.lang.String pattern()>();

        $z1 = staticinvoke <com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r4, $r6);

        if $z1 == 0 goto label1;

        $r7 = r0.<com.google.common.base.Predicates$ContainsPatternPredicate: java.util.regex.Pattern pattern>;

        $i0 = virtualinvoke $r7.<java.util.regex.Pattern: int flags()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r9 = r2.<com.google.common.base.Predicates$ContainsPatternPredicate: java.util.regex.Pattern pattern>;

        $i1 = virtualinvoke $r9.<java.util.regex.Pattern: int flags()>();

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $z2 = staticinvoke <com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r8, $r10);

        if $z2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;

     label3:
        return 0;
    }

    public java.lang.String toString()
    {
        com.google.common.base.Predicates$ContainsPatternPredicate r0;
        com.google.common.base.Objects$ToStringHelper $r1, $r3, $r6;
        java.util.regex.Pattern $r2, $r4;
        int $i0;
        java.lang.String $r5, $r7;

        r0 := @this: com.google.common.base.Predicates$ContainsPatternPredicate;

        $r1 = staticinvoke <com.google.common.base.Objects: com.google.common.base.Objects$ToStringHelper toStringHelper(java.lang.Object)>(r0);

        $r2 = r0.<com.google.common.base.Predicates$ContainsPatternPredicate: java.util.regex.Pattern pattern>;

        $r3 = virtualinvoke $r1.<com.google.common.base.Objects$ToStringHelper: com.google.common.base.Objects$ToStringHelper add(java.lang.String,java.lang.Object)>("pattern", $r2);

        $r4 = r0.<com.google.common.base.Predicates$ContainsPatternPredicate: java.util.regex.Pattern pattern>;

        $i0 = virtualinvoke $r4.<java.util.regex.Pattern: int flags()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        $r6 = virtualinvoke $r3.<com.google.common.base.Objects$ToStringHelper: com.google.common.base.Objects$ToStringHelper add(java.lang.String,java.lang.Object)>("pattern.flags", $r5);

        $r7 = virtualinvoke $r6.<com.google.common.base.Objects$ToStringHelper: java.lang.String toString()>();

        return $r7;
    }

    public volatile boolean apply(java.lang.Object)
    {
        com.google.common.base.Predicates$ContainsPatternPredicate r0;
        java.lang.Object r1;
        java.lang.CharSequence $r2;
        boolean $z0;

        r0 := @this: com.google.common.base.Predicates$ContainsPatternPredicate;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.lang.CharSequence) r1;

        $z0 = virtualinvoke r0.<com.google.common.base.Predicates$ContainsPatternPredicate: boolean apply(java.lang.CharSequence)>($r2);

        return $z0;
    }

    public static void <clinit>()
    {
        <com.google.common.base.Predicates$ContainsPatternPredicate: long serialVersionUID> = 0L;

        return;
    }
}
