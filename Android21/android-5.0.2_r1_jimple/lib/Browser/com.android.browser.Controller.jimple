public class com.android.browser.Controller extends java.lang.Object implements com.android.browser.WebViewController, com.android.browser.UiController, com.android.browser.ActivityController
{
    private static final java.lang.String LOGTAG;
    private static final java.lang.String SEND_APP_ID_EXTRA;
    private static final java.lang.String INCOGNITO_URI;
    public static final int LOAD_URL;
    public static final int STOP_LOAD;
    private static final int FOCUS_NODE_HREF;
    private static final int RELEASE_WAKELOCK;
    static final int UPDATE_BOOKMARK_THUMBNAIL;
    private static final int OPEN_BOOKMARKS;
    private static final int EMPTY_MENU;
    static final int COMBO_VIEW;
    static final int PREFERENCES_PAGE;
    static final int FILE_SELECTED;
    static final int VOICE_RESULT;
    private static final int WAKELOCK_TIMEOUT;
    private static final int[] WINDOW_SHORTCUT_ID_ARRAY;
    static final java.lang.String GOOGLE_SEARCH_SOURCE_SEARCHKEY;
    static final java.lang.String GOOGLE_SEARCH_SOURCE_TYPE;
    static final java.lang.String NO_CRASH_RECOVERY;
    private static android.graphics.Bitmap sThumbnailBitmap;
    private android.app.Activity mActivity;
    private com.android.browser.UI mUi;
    private com.android.browser.TabControl mTabControl;
    private com.android.browser.BrowserSettings mSettings;
    private com.android.browser.WebViewFactory mFactory;
    private android.os.PowerManager$WakeLock mWakeLock;
    private com.android.browser.UrlHandler mUrlHandler;
    private com.android.browser.UploadHandler mUploadHandler;
    private com.android.browser.IntentHandler mIntentHandler;
    private com.android.browser.PageDialogsHandler mPageDialogsHandler;
    private com.android.browser.NetworkStateHandler mNetworkHandler;
    private android.os.Message mAutoFillSetupMessage;
    private boolean mShouldShowErrorConsole;
    private com.android.browser.SystemAllowGeolocationOrigins mSystemAllowGeolocationOrigins;
    private int mCurrentMenuState;
    private int mMenuState;
    private int mOldMenuState;
    private android.view.Menu mCachedMenu;
    private boolean mMenuIsDown;
    private android.view.ActionMode mActionMode;
    private boolean mConfigChanged;
    private boolean mOptionsMenuOpen;
    private boolean mExtendedMenuOpen;
    private boolean mActivityPaused;
    private boolean mLoadStopped;
    private android.os.Handler mHandler;
    private android.database.ContentObserver mBookmarksObserver;
    private com.android.browser.CrashRecoveryHandler mCrashRecoveryHandler;
    private boolean mBlockEvents;
    private java.lang.String mVoiceResult;
    static final boolean $assertionsDisabled;

    public void <init>(android.app.Activity)
    {
        com.android.browser.Controller r0;
        android.app.Activity r1, $r10, $r12, $r18, $r20;
        com.android.browser.BrowserSettings $r2, $r4;
        com.android.browser.TabControl $r3;
        com.android.browser.CrashRecoveryHandler $r5, $r6;
        com.android.browser.BrowserWebViewFactory $r7;
        com.android.browser.UrlHandler $r8;
        com.android.browser.IntentHandler $r9;
        com.android.browser.PageDialogsHandler $r11;
        com.android.browser.Controller$1 $r13;
        android.os.Handler $r14;
        android.content.ContentResolver $r15;
        android.net.Uri $r16;
        android.database.ContentObserver $r17;
        com.android.browser.NetworkStateHandler $r19;
        com.android.browser.SystemAllowGeolocationOrigins $r21, $r22;
        android.content.Context $r23;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: android.app.Activity;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.browser.Controller: int mCurrentMenuState> = 0;

        r0.<com.android.browser.Controller: int mMenuState> = 2131558563;

        r0.<com.android.browser.Controller: int mOldMenuState> = -1;

        r0.<com.android.browser.Controller: boolean mActivityPaused> = 1;

        r0.<com.android.browser.Controller: android.app.Activity mActivity> = r1;

        $r2 = staticinvoke <com.android.browser.BrowserSettings: com.android.browser.BrowserSettings getInstance()>();

        r0.<com.android.browser.Controller: com.android.browser.BrowserSettings mSettings> = $r2;

        $r3 = new com.android.browser.TabControl;

        specialinvoke $r3.<com.android.browser.TabControl: void <init>(com.android.browser.Controller)>(r0);

        r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl> = $r3;

        $r4 = r0.<com.android.browser.Controller: com.android.browser.BrowserSettings mSettings>;

        virtualinvoke $r4.<com.android.browser.BrowserSettings: void setController(com.android.browser.Controller)>(r0);

        $r5 = staticinvoke <com.android.browser.CrashRecoveryHandler: com.android.browser.CrashRecoveryHandler initialize(com.android.browser.Controller)>(r0);

        r0.<com.android.browser.Controller: com.android.browser.CrashRecoveryHandler mCrashRecoveryHandler> = $r5;

        $r6 = r0.<com.android.browser.Controller: com.android.browser.CrashRecoveryHandler mCrashRecoveryHandler>;

        virtualinvoke $r6.<com.android.browser.CrashRecoveryHandler: void preloadCrashState()>();

        $r7 = new com.android.browser.BrowserWebViewFactory;

        specialinvoke $r7.<com.android.browser.BrowserWebViewFactory: void <init>(android.content.Context)>(r1);

        r0.<com.android.browser.Controller: com.android.browser.WebViewFactory mFactory> = $r7;

        $r8 = new com.android.browser.UrlHandler;

        specialinvoke $r8.<com.android.browser.UrlHandler: void <init>(com.android.browser.Controller)>(r0);

        r0.<com.android.browser.Controller: com.android.browser.UrlHandler mUrlHandler> = $r8;

        $r9 = new com.android.browser.IntentHandler;

        $r10 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        specialinvoke $r9.<com.android.browser.IntentHandler: void <init>(android.app.Activity,com.android.browser.Controller)>($r10, r0);

        r0.<com.android.browser.Controller: com.android.browser.IntentHandler mIntentHandler> = $r9;

        $r11 = new com.android.browser.PageDialogsHandler;

        $r12 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        specialinvoke $r11.<com.android.browser.PageDialogsHandler: void <init>(android.content.Context,com.android.browser.Controller)>($r12, r0);

        r0.<com.android.browser.Controller: com.android.browser.PageDialogsHandler mPageDialogsHandler> = $r11;

        specialinvoke r0.<com.android.browser.Controller: void startHandler()>();

        $r13 = new com.android.browser.Controller$1;

        $r14 = r0.<com.android.browser.Controller: android.os.Handler mHandler>;

        specialinvoke $r13.<com.android.browser.Controller$1: void <init>(com.android.browser.Controller,android.os.Handler)>(r0, $r14);

        r0.<com.android.browser.Controller: android.database.ContentObserver mBookmarksObserver> = $r13;

        $r15 = virtualinvoke r1.<android.app.Activity: android.content.ContentResolver getContentResolver()>();

        $r16 = <android.provider.BrowserContract$Bookmarks: android.net.Uri CONTENT_URI>;

        $r17 = r0.<com.android.browser.Controller: android.database.ContentObserver mBookmarksObserver>;

        virtualinvoke $r15.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r16, 1, $r17);

        $r19 = new com.android.browser.NetworkStateHandler;

        $r18 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        specialinvoke $r19.<com.android.browser.NetworkStateHandler: void <init>(android.app.Activity,com.android.browser.Controller)>($r18, r0);

        r0.<com.android.browser.Controller: com.android.browser.NetworkStateHandler mNetworkHandler> = $r19;

        $r21 = new com.android.browser.SystemAllowGeolocationOrigins;

        $r20 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        $r23 = virtualinvoke $r20.<android.app.Activity: android.content.Context getApplicationContext()>();

        specialinvoke $r21.<com.android.browser.SystemAllowGeolocationOrigins: void <init>(android.content.Context)>($r23);

        r0.<com.android.browser.Controller: com.android.browser.SystemAllowGeolocationOrigins mSystemAllowGeolocationOrigins> = $r21;

        $r22 = r0.<com.android.browser.Controller: com.android.browser.SystemAllowGeolocationOrigins mSystemAllowGeolocationOrigins>;

        virtualinvoke $r22.<com.android.browser.SystemAllowGeolocationOrigins: void start()>();

        specialinvoke r0.<com.android.browser.Controller: void openIconDatabase()>();

        return;
    }

    public void start(android.content.Intent)
    {
        com.android.browser.Controller r0;
        android.content.Intent r1;
        com.android.browser.CrashRecoveryHandler $r2;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: android.content.Intent;

        $r2 = r0.<com.android.browser.Controller: com.android.browser.CrashRecoveryHandler mCrashRecoveryHandler>;

        virtualinvoke $r2.<com.android.browser.CrashRecoveryHandler: void startRecovery(android.content.Intent)>(r1);

        return;
    }

    void doStart(android.os.Bundle, android.content.Intent)
    {
        com.android.browser.Controller r0;
        android.os.Bundle r1;
        android.content.Intent r2;
        java.util.Calendar r3, r4, r5, $r10;
        boolean z0, $z1, $z2, $z3;
        long l0;
        com.android.browser.TabControl $r6;
        byte $b1;
        com.android.browser.Controller$2 $r7;
        android.app.Activity $r8;
        android.webkit.CookieManager $r9;
        java.io.Serializable $r11;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: android.content.Intent;

        if r1 == null goto label1;

        $r11 = virtualinvoke r1.<android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)>("lastActiveDate");

        $r10 = (java.util.Calendar) $r11;

        goto label2;

     label1:
        $r10 = null;

     label2:
        r3 = $r10;

        r4 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        r5 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        virtualinvoke r5.<java.util.Calendar: void add(int,int)>(5, -1);

        if r3 == null goto label3;

        $z1 = virtualinvoke r3.<java.util.Calendar: boolean before(java.lang.Object)>(r5);

        if $z1 != 0 goto label3;

        $z3 = virtualinvoke r3.<java.util.Calendar: boolean after(java.lang.Object)>(r4);

        if $z3 != 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        z0 = $z2;

        $r6 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        l0 = virtualinvoke $r6.<com.android.browser.TabControl: long canRestoreState(android.os.Bundle,boolean)>(r1, z0);

        $b1 = l0 cmp -1L;

        if $b1 != 0 goto label5;

        $r9 = staticinvoke <android.webkit.CookieManager: android.webkit.CookieManager getInstance()>();

        virtualinvoke $r9.<android.webkit.CookieManager: void removeSessionCookie()>();

     label5:
        $r8 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        $r7 = new com.android.browser.Controller$2;

        specialinvoke $r7.<com.android.browser.Controller$2: void <init>(com.android.browser.Controller,android.os.Bundle,android.content.Intent,long,boolean)>(r0, r1, r2, l0, z0);

        staticinvoke <com.android.browser.GoogleAccountLogin: void startLoginIfNeeded(android.app.Activity,java.lang.Runnable)>($r8, $r7);

        return;
    }

    private void onPreloginFinished(android.os.Bundle, android.content.Intent, long, boolean)
    {
        com.android.browser.Controller r0;
        android.os.Bundle r1, r3;
        android.content.Intent r2;
        long l0, $l5;
        boolean z0, $z1, $z2, $z3, $z4;
        com.android.browser.IntentHandler$UrlData r4;
        android.webkit.WebView r5;
        int i1, $i3, $i4;
        byte $b2;
        com.android.browser.UI $r6, $r13, $r25;
        com.android.browser.TabControl $r7, $r8, $r12, $r24;
        java.util.ArrayList $r9, r30;
        com.android.browser.Controller$PruneThumbnails $r10, $r21;
        android.app.Activity $r11, $r23;
        com.android.browser.BrowserSettings $r14;
        com.android.browser.Tab $r15, r28, r32;
        java.lang.String $r16, $r17, $r26;
        java.lang.Object $r18;
        com.android.browser.UI$ComboViews $r19;
        com.android.browser.IntentHandler $r20;
        java.lang.Long $r22;
        java.util.List $r27, r29;
        java.util.Iterator r31;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: android.os.Bundle;

        r2 := @parameter1: android.content.Intent;

        l0 := @parameter2: long;

        z0 := @parameter3: boolean;

        $b2 = l0 cmp -1L;

        if $b2 != 0 goto label06;

        $r21 = new com.android.browser.Controller$PruneThumbnails;

        $r23 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        specialinvoke $r21.<com.android.browser.Controller$PruneThumbnails: void <init>(android.content.Context,java.util.List)>($r23, null);

        staticinvoke <com.android.browser.BackgroundHandler: void execute(java.lang.Runnable)>($r21);

        if r2 != null goto label01;

        virtualinvoke r0.<com.android.browser.Controller: com.android.browser.Tab openTabToHomePage()>();

        goto label05;

     label01:
        r3 = virtualinvoke r2.<android.content.Intent: android.os.Bundle getExtras()>();

        r4 = staticinvoke <com.android.browser.IntentHandler: com.android.browser.IntentHandler$UrlData getUrlDataFromIntent(android.content.Intent)>(r2);

        $z4 = virtualinvoke r4.<com.android.browser.IntentHandler$UrlData: boolean isEmpty()>();

        if $z4 == 0 goto label02;

        r28 = virtualinvoke r0.<com.android.browser.Controller: com.android.browser.Tab openTabToHomePage()>();

        goto label03;

     label02:
        r28 = virtualinvoke r0.<com.android.browser.Controller: com.android.browser.Tab openTab(com.android.browser.IntentHandler$UrlData)>(r4);

     label03:
        if r28 == null goto label04;

        $r26 = virtualinvoke r2.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("com.android.browser.application_id");

        virtualinvoke r28.<com.android.browser.Tab: void setAppId(java.lang.String)>($r26);

     label04:
        r5 = virtualinvoke r28.<com.android.browser.Tab: android.webkit.WebView getWebView()>();

        if r3 == null goto label05;

        i1 = virtualinvoke r3.<android.os.Bundle: int getInt(java.lang.String,int)>("browser.initialZoomLevel", 0);

        if i1 <= 0 goto label05;

        if i1 > 1000 goto label05;

        virtualinvoke r5.<android.webkit.WebView: void setInitialScale(int)>(i1);

     label05:
        $r25 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        $r24 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        $r27 = virtualinvoke $r24.<com.android.browser.TabControl: java.util.List getTabs()>();

        interfaceinvoke $r25.<com.android.browser.UI: void updateTabs(java.util.List)>($r27);

        goto label10;

     label06:
        $r7 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        $r6 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        $z1 = interfaceinvoke $r6.<com.android.browser.UI: boolean needsRestoreAllTabs()>();

        virtualinvoke $r7.<com.android.browser.TabControl: void restoreState(android.os.Bundle,long,boolean,boolean)>(r1, l0, z0, $z1);

        $r8 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        r29 = virtualinvoke $r8.<com.android.browser.TabControl: java.util.List getTabs()>();

        $r9 = new java.util.ArrayList;

        $i3 = interfaceinvoke r29.<java.util.List: int size()>();

        specialinvoke $r9.<java.util.ArrayList: void <init>(int)>($i3);

        r30 = $r9;

        r31 = interfaceinvoke r29.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z2 = interfaceinvoke r31.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label08;

        $r18 = interfaceinvoke r31.<java.util.Iterator: java.lang.Object next()>();

        r32 = (com.android.browser.Tab) $r18;

        $l5 = virtualinvoke r32.<com.android.browser.Tab: long getId()>();

        $r22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l5);

        virtualinvoke r30.<java.util.ArrayList: boolean add(java.lang.Object)>($r22);

        goto label07;

     label08:
        $r10 = new com.android.browser.Controller$PruneThumbnails;

        $r11 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        specialinvoke $r10.<com.android.browser.Controller$PruneThumbnails: void <init>(android.content.Context,java.util.List)>($r11, r30);

        staticinvoke <com.android.browser.BackgroundHandler: void execute(java.lang.Runnable)>($r10);

        $i4 = interfaceinvoke r29.<java.util.List: int size()>();

        if $i4 != 0 goto label09;

        virtualinvoke r0.<com.android.browser.Controller: com.android.browser.Tab openTabToHomePage()>();

     label09:
        $r13 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        interfaceinvoke $r13.<com.android.browser.UI: void updateTabs(java.util.List)>(r29);

        $r12 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        $r15 = virtualinvoke $r12.<com.android.browser.TabControl: com.android.browser.Tab getCurrentTab()>();

        virtualinvoke r0.<com.android.browser.Controller: void setActiveTab(com.android.browser.Tab)>($r15);

        if r2 == null goto label10;

        $r20 = r0.<com.android.browser.Controller: com.android.browser.IntentHandler mIntentHandler>;

        virtualinvoke $r20.<com.android.browser.IntentHandler: void onNewIntent(android.content.Intent)>(r2);

     label10:
        $r14 = virtualinvoke r0.<com.android.browser.Controller: com.android.browser.BrowserSettings getSettings()>();

        virtualinvoke $r14.<com.android.browser.BrowserSettings: java.lang.String getJsEngineFlags()>();

        if r2 == null goto label11;

        $r16 = "show_bookmarks";

        $r17 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();

        $z3 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r17);

        if $z3 == 0 goto label11;

        $r19 = <com.android.browser.UI$ComboViews: com.android.browser.UI$ComboViews Bookmarks>;

        virtualinvoke r0.<com.android.browser.Controller: void bookmarksOrHistoryPicker(com.android.browser.UI$ComboViews)>($r19);

     label11:
        return;
    }

    public com.android.browser.WebViewFactory getWebViewFactory()
    {
        com.android.browser.Controller r0;
        com.android.browser.WebViewFactory $r1;

        r0 := @this: com.android.browser.Controller;

        $r1 = r0.<com.android.browser.Controller: com.android.browser.WebViewFactory mFactory>;

        return $r1;
    }

    public void onSetWebView(com.android.browser.Tab, android.webkit.WebView)
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab r1;
        android.webkit.WebView r2;
        com.android.browser.UI $r3;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: com.android.browser.Tab;

        r2 := @parameter1: android.webkit.WebView;

        $r3 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        interfaceinvoke $r3.<com.android.browser.UI: void onSetWebView(com.android.browser.Tab,android.webkit.WebView)>(r1, r2);

        return;
    }

    public void createSubWindow(com.android.browser.Tab)
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab r1;
        android.webkit.WebView r2, r3;
        com.android.browser.WebViewFactory $r4;
        boolean $z0;
        com.android.browser.UI $r5;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: com.android.browser.Tab;

        virtualinvoke r0.<com.android.browser.Controller: void endActionMode()>();

        r2 = virtualinvoke r1.<com.android.browser.Tab: android.webkit.WebView getWebView()>();

        $r4 = r0.<com.android.browser.Controller: com.android.browser.WebViewFactory mFactory>;

        if r2 != null goto label1;

        $z0 = 0;

        goto label2;

     label1:
        $z0 = virtualinvoke r2.<android.webkit.WebView: boolean isPrivateBrowsingEnabled()>();

     label2:
        r3 = interfaceinvoke $r4.<com.android.browser.WebViewFactory: android.webkit.WebView createWebView(boolean)>($z0);

        $r5 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        interfaceinvoke $r5.<com.android.browser.UI: void createSubWindow(com.android.browser.Tab,android.webkit.WebView)>(r1, r3);

        return;
    }

    public android.content.Context getContext()
    {
        com.android.browser.Controller r0;
        android.app.Activity $r1;

        r0 := @this: com.android.browser.Controller;

        $r1 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        return $r1;
    }

    public android.app.Activity getActivity()
    {
        com.android.browser.Controller r0;
        android.app.Activity $r1;

        r0 := @this: com.android.browser.Controller;

        $r1 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        return $r1;
    }

    void setUi(com.android.browser.UI)
    {
        com.android.browser.Controller r0;
        com.android.browser.UI r1;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: com.android.browser.UI;

        r0.<com.android.browser.Controller: com.android.browser.UI mUi> = r1;

        return;
    }

    public com.android.browser.BrowserSettings getSettings()
    {
        com.android.browser.Controller r0;
        com.android.browser.BrowserSettings $r1;

        r0 := @this: com.android.browser.Controller;

        $r1 = r0.<com.android.browser.Controller: com.android.browser.BrowserSettings mSettings>;

        return $r1;
    }

    com.android.browser.IntentHandler getIntentHandler()
    {
        com.android.browser.Controller r0;
        com.android.browser.IntentHandler $r1;

        r0 := @this: com.android.browser.Controller;

        $r1 = r0.<com.android.browser.Controller: com.android.browser.IntentHandler mIntentHandler>;

        return $r1;
    }

    public com.android.browser.UI getUi()
    {
        com.android.browser.Controller r0;
        com.android.browser.UI $r1;

        r0 := @this: com.android.browser.Controller;

        $r1 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        return $r1;
    }

    int getMaxTabs()
    {
        com.android.browser.Controller r0;
        android.app.Activity $r1;
        android.content.res.Resources $r2;
        int $i0;

        r0 := @this: com.android.browser.Controller;

        $r1 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        $r2 = virtualinvoke $r1.<android.app.Activity: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r2.<android.content.res.Resources: int getInteger(int)>(2131623938);

        return $i0;
    }

    public com.android.browser.TabControl getTabControl()
    {
        com.android.browser.Controller r0;
        com.android.browser.TabControl $r1;

        r0 := @this: com.android.browser.Controller;

        $r1 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        return $r1;
    }

    public java.util.List getTabs()
    {
        com.android.browser.Controller r0;
        com.android.browser.TabControl $r1;
        java.util.List $r2;

        r0 := @this: com.android.browser.Controller;

        $r1 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        $r2 = virtualinvoke $r1.<com.android.browser.TabControl: java.util.List getTabs()>();

        return $r2;
    }

    private void openIconDatabase()
    {
        com.android.browser.Controller r0;
        android.webkit.WebIconDatabase r1;
        com.android.browser.Controller$3 $r2;

        r0 := @this: com.android.browser.Controller;

        r1 = staticinvoke <android.webkit.WebIconDatabase: android.webkit.WebIconDatabase getInstance()>();

        $r2 = new com.android.browser.Controller$3;

        specialinvoke $r2.<com.android.browser.Controller$3: void <init>(com.android.browser.Controller,android.webkit.WebIconDatabase)>(r0, r1);

        staticinvoke <com.android.browser.BackgroundHandler: void execute(java.lang.Runnable)>($r2);

        return;
    }

    private void startHandler()
    {
        com.android.browser.Controller r0;
        com.android.browser.Controller$4 $r1;

        r0 := @this: com.android.browser.Controller;

        $r1 = new com.android.browser.Controller$4;

        specialinvoke $r1.<com.android.browser.Controller$4: void <init>(com.android.browser.Controller)>(r0);

        r0.<com.android.browser.Controller: android.os.Handler mHandler> = $r1;

        return;
    }

    public com.android.browser.Tab getCurrentTab()
    {
        com.android.browser.Controller r0;
        com.android.browser.TabControl $r1;
        com.android.browser.Tab $r2;

        r0 := @this: com.android.browser.Controller;

        $r1 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        $r2 = virtualinvoke $r1.<com.android.browser.TabControl: com.android.browser.Tab getCurrentTab()>();

        return $r2;
    }

    public void shareCurrentPage()
    {
        com.android.browser.Controller r0;
        com.android.browser.TabControl $r1;
        com.android.browser.Tab $r2;

        r0 := @this: com.android.browser.Controller;

        $r1 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        $r2 = virtualinvoke $r1.<com.android.browser.TabControl: com.android.browser.Tab getCurrentTab()>();

        specialinvoke r0.<com.android.browser.Controller: void shareCurrentPage(com.android.browser.Tab)>($r2);

        return;
    }

    private void shareCurrentPage(com.android.browser.Tab)
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab r1;
        android.app.Activity $r2, $r7, $r8;
        java.lang.String $r3, $r4;
        android.graphics.Bitmap $r5, $r9;
        android.webkit.WebView $r6;
        int $i0, $i1;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: com.android.browser.Tab;

        if r1 == null goto label1;

        $r2 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        $r3 = virtualinvoke r1.<com.android.browser.Tab: java.lang.String getTitle()>();

        $r4 = virtualinvoke r1.<com.android.browser.Tab: java.lang.String getUrl()>();

        $r5 = virtualinvoke r1.<com.android.browser.Tab: android.graphics.Bitmap getFavicon()>();

        $r6 = virtualinvoke r1.<com.android.browser.Tab: android.webkit.WebView getWebView()>();

        $r7 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        $i0 = staticinvoke <com.android.browser.Controller: int getDesiredThumbnailWidth(android.content.Context)>($r7);

        $r8 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        $i1 = staticinvoke <com.android.browser.Controller: int getDesiredThumbnailHeight(android.content.Context)>($r8);

        $r9 = staticinvoke <com.android.browser.Controller: android.graphics.Bitmap createScreenshot(android.webkit.WebView,int,int)>($r6, $i0, $i1);

        staticinvoke <com.android.browser.Controller: void sharePage(android.content.Context,java.lang.String,java.lang.String,android.graphics.Bitmap,android.graphics.Bitmap)>($r2, $r3, $r4, $r5, $r9);

     label1:
        return;
    }

    static final void sharePage(android.content.Context, java.lang.String, java.lang.String, android.graphics.Bitmap, android.graphics.Bitmap)
    {
        android.content.Context r0;
        java.lang.String r1, r2, $r13;
        android.graphics.Bitmap r3, r4;
        android.content.Intent r5, $r7, $r14;
        android.content.ActivityNotFoundException $r15;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: android.graphics.Bitmap;

        r4 := @parameter4: android.graphics.Bitmap;

        $r7 = new android.content.Intent;

        specialinvoke $r7.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.SEND");

        r5 = $r7;

        virtualinvoke r5.<android.content.Intent: android.content.Intent setType(java.lang.String)>("text/plain");

        virtualinvoke r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.intent.extra.TEXT", r2);

        virtualinvoke r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.intent.extra.SUBJECT", r1);

        virtualinvoke r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("share_favicon", r3);

        virtualinvoke r5.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("share_screenshot", r4);

     label1:
        $r13 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int)>(2131492971);

        $r14 = staticinvoke <android.content.Intent: android.content.Intent createChooser(android.content.Intent,java.lang.CharSequence)>(r5, $r13);

        virtualinvoke r0.<android.content.Context: void startActivity(android.content.Intent)>($r14);

     label2:
        goto label4;

     label3:
        $r15 := @caughtexception;

     label4:
        return;

        catch android.content.ActivityNotFoundException from label1 to label2 with label3;
    }

    private void copy(java.lang.CharSequence)
    {
        java.lang.Object $r0;
        com.android.browser.Controller r1;
        java.lang.CharSequence r2;
        android.content.ClipboardManager r3;
        android.app.Activity $r4;

        r1 := @this: com.android.browser.Controller;

        r2 := @parameter0: java.lang.CharSequence;

        $r4 = r1.<com.android.browser.Controller: android.app.Activity mActivity>;

        $r0 = virtualinvoke $r4.<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>("clipboard");

        r3 = (android.content.ClipboardManager) $r0;

        virtualinvoke r3.<android.content.ClipboardManager: void setText(java.lang.CharSequence)>(r2);

        return;
    }

    public void onConfgurationChanged(android.content.res.Configuration)
    {
        com.android.browser.Controller r0;
        android.content.res.Configuration r1;
        android.app.Activity $r2;
        com.android.browser.PageDialogsHandler $r3, $r5;
        com.android.browser.UI $r4;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: android.content.res.Configuration;

        r0.<com.android.browser.Controller: boolean mConfigChanged> = 1;

        $r2 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        virtualinvoke $r2.<android.app.Activity: void invalidateOptionsMenu()>();

        $r3 = r0.<com.android.browser.Controller: com.android.browser.PageDialogsHandler mPageDialogsHandler>;

        if $r3 == null goto label1;

        $r5 = r0.<com.android.browser.Controller: com.android.browser.PageDialogsHandler mPageDialogsHandler>;

        virtualinvoke $r5.<com.android.browser.PageDialogsHandler: void onConfigurationChanged(android.content.res.Configuration)>(r1);

     label1:
        $r4 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        interfaceinvoke $r4.<com.android.browser.UI: void onConfigurationChanged(android.content.res.Configuration)>(r1);

        return;
    }

    public void handleNewIntent(android.content.Intent)
    {
        com.android.browser.Controller r0;
        android.content.Intent r1;
        com.android.browser.UI $r2, $r4;
        boolean $z0;
        com.android.browser.IntentHandler $r3;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: android.content.Intent;

        $r2 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        $z0 = interfaceinvoke $r2.<com.android.browser.UI: boolean isWebShowing()>();

        if $z0 != 0 goto label1;

        $r4 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        interfaceinvoke $r4.<com.android.browser.UI: void showWeb(boolean)>(0);

     label1:
        $r3 = r0.<com.android.browser.Controller: com.android.browser.IntentHandler mIntentHandler>;

        virtualinvoke $r3.<com.android.browser.IntentHandler: void onNewIntent(android.content.Intent)>(r1);

        return;
    }

    public void onPause()
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab r1;
        android.os.PowerManager r2;
        com.android.browser.UI $r3, $r5;
        boolean $z0, $z1, $z2;
        com.android.browser.TabControl $r4;
        com.android.browser.NetworkStateHandler $r6;
        android.app.Activity $r7, $r16;
        android.graphics.Bitmap $r8, $r9;
        android.os.PowerManager$WakeLock $r10, $r11, $r17;
        android.os.Handler $r12, $r13;
        android.os.Message $r14;
        java.lang.Object $r15;

        r0 := @this: com.android.browser.Controller;

        $r3 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        $z0 = interfaceinvoke $r3.<com.android.browser.UI: boolean isCustomViewShowing()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.android.browser.Controller: void hideCustomView()>();

     label1:
        $z1 = r0.<com.android.browser.Controller: boolean mActivityPaused>;

        if $z1 == 0 goto label2;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Controller", "BrowserActivity is already paused.");

        return;

     label2:
        r0.<com.android.browser.Controller: boolean mActivityPaused> = 1;

        $r4 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        r1 = virtualinvoke $r4.<com.android.browser.TabControl: com.android.browser.Tab getCurrentTab()>();

        if r1 == null goto label4;

        virtualinvoke r1.<com.android.browser.Tab: void pause()>();

        $z2 = specialinvoke r0.<com.android.browser.Controller: boolean pauseWebViewTimers(com.android.browser.Tab)>(r1);

        if $z2 != 0 goto label4;

        $r10 = r0.<com.android.browser.Controller: android.os.PowerManager$WakeLock mWakeLock>;

        if $r10 != null goto label3;

        $r16 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        $r15 = virtualinvoke $r16.<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>("power");

        r2 = (android.os.PowerManager) $r15;

        $r17 = virtualinvoke r2.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, "Browser");

        r0.<com.android.browser.Controller: android.os.PowerManager$WakeLock mWakeLock> = $r17;

     label3:
        $r11 = r0.<com.android.browser.Controller: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r11.<android.os.PowerManager$WakeLock: void acquire()>();

        $r12 = r0.<com.android.browser.Controller: android.os.Handler mHandler>;

        $r13 = r0.<com.android.browser.Controller: android.os.Handler mHandler>;

        $r14 = virtualinvoke $r13.<android.os.Handler: android.os.Message obtainMessage(int)>(107);

        virtualinvoke $r12.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r14, 300000L);

     label4:
        $r5 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        interfaceinvoke $r5.<com.android.browser.UI: void onPause()>();

        $r6 = r0.<com.android.browser.Controller: com.android.browser.NetworkStateHandler mNetworkHandler>;

        virtualinvoke $r6.<com.android.browser.NetworkStateHandler: void onPause()>();

        staticinvoke <android.webkit.WebView: void disablePlatformNotifications()>();

        $r7 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        staticinvoke <com.android.browser.NfcHandler: void unregister(android.app.Activity)>($r7);

        $r8 = <com.android.browser.Controller: android.graphics.Bitmap sThumbnailBitmap>;

        if $r8 == null goto label5;

        $r9 = <com.android.browser.Controller: android.graphics.Bitmap sThumbnailBitmap>;

        virtualinvoke $r9.<android.graphics.Bitmap: void recycle()>();

        <com.android.browser.Controller: android.graphics.Bitmap sThumbnailBitmap> = null;

     label5:
        return;
    }

    public void onSaveInstanceState(android.os.Bundle)
    {
        com.android.browser.Controller r0;
        android.os.Bundle r1, r2;
        com.android.browser.CrashRecoveryHandler $r3;
        com.android.browser.BrowserSettings $r4;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: android.os.Bundle;

        r2 = virtualinvoke r0.<com.android.browser.Controller: android.os.Bundle createSaveState()>();

        $r3 = r0.<com.android.browser.Controller: com.android.browser.CrashRecoveryHandler mCrashRecoveryHandler>;

        virtualinvoke $r3.<com.android.browser.CrashRecoveryHandler: void writeState(android.os.Bundle)>(r2);

        $r4 = r0.<com.android.browser.Controller: com.android.browser.BrowserSettings mSettings>;

        virtualinvoke $r4.<com.android.browser.BrowserSettings: void setLastRunPaused(boolean)>(1);

        return;
    }

    android.os.Bundle createSaveState()
    {
        com.android.browser.Controller r0;
        android.os.Bundle r1, $r2;
        com.android.browser.TabControl $r3;
        boolean $z0;
        java.util.Calendar $r4;

        r0 := @this: com.android.browser.Controller;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        r1 = $r2;

        $r3 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        virtualinvoke $r3.<com.android.browser.TabControl: void saveState(android.os.Bundle)>(r1);

        $z0 = virtualinvoke r1.<android.os.Bundle: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r4 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        virtualinvoke r1.<android.os.Bundle: void putSerializable(java.lang.String,java.io.Serializable)>("lastActiveDate", $r4);

     label1:
        return r1;
    }

    public void onResume()
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab r1;
        boolean $z0;
        com.android.browser.BrowserSettings $r2;
        com.android.browser.TabControl $r3;
        com.android.browser.UI $r4, $r9;
        com.android.browser.NetworkStateHandler $r5;
        android.app.Activity $r6;
        java.lang.String $r7, $r8;

        r0 := @this: com.android.browser.Controller;

        $z0 = r0.<com.android.browser.Controller: boolean mActivityPaused>;

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Controller", "BrowserActivity is already resumed.");

        return;

     label1:
        $r2 = r0.<com.android.browser.Controller: com.android.browser.BrowserSettings mSettings>;

        virtualinvoke $r2.<com.android.browser.BrowserSettings: void setLastRunPaused(boolean)>(0);

        r0.<com.android.browser.Controller: boolean mActivityPaused> = 0;

        $r3 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        r1 = virtualinvoke $r3.<com.android.browser.TabControl: com.android.browser.Tab getCurrentTab()>();

        if r1 == null goto label2;

        virtualinvoke r1.<com.android.browser.Tab: void resume()>();

        specialinvoke r0.<com.android.browser.Controller: void resumeWebViewTimers(com.android.browser.Tab)>(r1);

     label2:
        specialinvoke r0.<com.android.browser.Controller: void releaseWakeLock()>();

        $r4 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        interfaceinvoke $r4.<com.android.browser.UI: void onResume()>();

        $r5 = r0.<com.android.browser.Controller: com.android.browser.NetworkStateHandler mNetworkHandler>;

        virtualinvoke $r5.<com.android.browser.NetworkStateHandler: void onResume()>();

        staticinvoke <android.webkit.WebView: void enablePlatformNotifications()>();

        $r6 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        staticinvoke <com.android.browser.NfcHandler: void register(android.app.Activity,com.android.browser.Controller)>($r6, r0);

        $r7 = r0.<com.android.browser.Controller: java.lang.String mVoiceResult>;

        if $r7 == null goto label3;

        $r9 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        $r8 = r0.<com.android.browser.Controller: java.lang.String mVoiceResult>;

        interfaceinvoke $r9.<com.android.browser.UI: void onVoiceResult(java.lang.String)>($r8);

        r0.<com.android.browser.Controller: java.lang.String mVoiceResult> = null;

     label3:
        return;
    }

    private void releaseWakeLock()
    {
        com.android.browser.Controller r0;
        android.os.PowerManager$WakeLock $r1, $r2, $r4;
        boolean $z0;
        android.os.Handler $r3;

        r0 := @this: com.android.browser.Controller;

        $r1 = r0.<com.android.browser.Controller: android.os.PowerManager$WakeLock mWakeLock>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.browser.Controller: android.os.PowerManager$WakeLock mWakeLock>;

        $z0 = virtualinvoke $r2.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.browser.Controller: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.os.Handler: void removeMessages(int)>(107);

        $r4 = r0.<com.android.browser.Controller: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r4.<android.os.PowerManager$WakeLock: void release()>();

     label1:
        return;
    }

    private void resumeWebViewTimers(com.android.browser.Tab)
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab r1;
        boolean z0, $z1, $z2;
        android.webkit.WebView r2;
        android.webkit.CookieSyncManager $r3;
        com.android.browser.WebViewTimersControl $r4;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: com.android.browser.Tab;

        z0 = virtualinvoke r1.<com.android.browser.Tab: boolean inPageLoad()>();

        $z1 = r0.<com.android.browser.Controller: boolean mActivityPaused>;

        if $z1 != 0 goto label1;

        if z0 == 0 goto label2;

     label1:
        $z2 = r0.<com.android.browser.Controller: boolean mActivityPaused>;

        if $z2 == 0 goto label3;

        if z0 == 0 goto label3;

     label2:
        $r3 = staticinvoke <android.webkit.CookieSyncManager: android.webkit.CookieSyncManager getInstance()>();

        virtualinvoke $r3.<android.webkit.CookieSyncManager: void startSync()>();

        r2 = virtualinvoke r1.<com.android.browser.Tab: android.webkit.WebView getWebView()>();

        $r4 = staticinvoke <com.android.browser.WebViewTimersControl: com.android.browser.WebViewTimersControl getInstance()>();

        virtualinvoke $r4.<com.android.browser.WebViewTimersControl: void onBrowserActivityResume(android.webkit.WebView)>(r2);

     label3:
        return;
    }

    private boolean pauseWebViewTimers(com.android.browser.Tab)
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab r1;
        boolean $z0;
        android.webkit.CookieSyncManager $r2;
        com.android.browser.WebViewTimersControl $r3;
        android.webkit.WebView $r4;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: com.android.browser.Tab;

        if r1 != null goto label1;

        return 1;

     label1:
        $z0 = virtualinvoke r1.<com.android.browser.Tab: boolean inPageLoad()>();

        if $z0 != 0 goto label2;

        $r2 = staticinvoke <android.webkit.CookieSyncManager: android.webkit.CookieSyncManager getInstance()>();

        virtualinvoke $r2.<android.webkit.CookieSyncManager: void stopSync()>();

        $r3 = staticinvoke <com.android.browser.WebViewTimersControl: com.android.browser.WebViewTimersControl getInstance()>();

        $r4 = virtualinvoke r0.<com.android.browser.Controller: android.webkit.WebView getCurrentWebView()>();

        virtualinvoke $r3.<com.android.browser.WebViewTimersControl: void onBrowserActivityPause(android.webkit.WebView)>($r4);

        return 1;

     label2:
        return 0;
    }

    public void onDestroy()
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab r1;
        com.android.browser.UploadHandler $r2, $r12, $r13;
        com.android.browser.TabControl $r3, $r5, $r9;
        com.android.browser.UI $r4;
        android.app.Activity $r6;
        android.content.ContentResolver $r7;
        android.database.ContentObserver $r8;
        android.webkit.WebIconDatabase $r10;
        com.android.browser.SystemAllowGeolocationOrigins $r11;
        boolean $z0;

        r0 := @this: com.android.browser.Controller;

        $r2 = r0.<com.android.browser.Controller: com.android.browser.UploadHandler mUploadHandler>;

        if $r2 == null goto label1;

        $r12 = r0.<com.android.browser.Controller: com.android.browser.UploadHandler mUploadHandler>;

        $z0 = virtualinvoke $r12.<com.android.browser.UploadHandler: boolean handled()>();

        if $z0 != 0 goto label1;

        $r13 = r0.<com.android.browser.Controller: com.android.browser.UploadHandler mUploadHandler>;

        virtualinvoke $r13.<com.android.browser.UploadHandler: void onResult(int,android.content.Intent)>(0, null);

        r0.<com.android.browser.Controller: com.android.browser.UploadHandler mUploadHandler> = null;

     label1:
        $r3 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        if $r3 != null goto label2;

        return;

     label2:
        $r4 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        interfaceinvoke $r4.<com.android.browser.UI: void onDestroy()>();

        $r5 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        r1 = virtualinvoke $r5.<com.android.browser.TabControl: com.android.browser.Tab getCurrentTab()>();

        if r1 == null goto label3;

        virtualinvoke r0.<com.android.browser.Controller: void dismissSubWindow(com.android.browser.Tab)>(r1);

        virtualinvoke r0.<com.android.browser.Controller: void removeTab(com.android.browser.Tab)>(r1);

     label3:
        $r6 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        $r7 = virtualinvoke $r6.<android.app.Activity: android.content.ContentResolver getContentResolver()>();

        $r8 = r0.<com.android.browser.Controller: android.database.ContentObserver mBookmarksObserver>;

        virtualinvoke $r7.<android.content.ContentResolver: void unregisterContentObserver(android.database.ContentObserver)>($r8);

        $r9 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        virtualinvoke $r9.<com.android.browser.TabControl: void destroy()>();

        $r10 = staticinvoke <android.webkit.WebIconDatabase: android.webkit.WebIconDatabase getInstance()>();

        virtualinvoke $r10.<android.webkit.WebIconDatabase: void close()>();

        $r11 = r0.<com.android.browser.Controller: com.android.browser.SystemAllowGeolocationOrigins mSystemAllowGeolocationOrigins>;

        virtualinvoke $r11.<com.android.browser.SystemAllowGeolocationOrigins: void stop()>();

        r0.<com.android.browser.Controller: com.android.browser.SystemAllowGeolocationOrigins mSystemAllowGeolocationOrigins> = null;

        return;
    }

    protected boolean isActivityPaused()
    {
        com.android.browser.Controller r0;
        boolean $z0;

        r0 := @this: com.android.browser.Controller;

        $z0 = r0.<com.android.browser.Controller: boolean mActivityPaused>;

        return $z0;
    }

    public void onLowMemory()
    {
        com.android.browser.Controller r0;
        com.android.browser.TabControl $r1;

        r0 := @this: com.android.browser.Controller;

        $r1 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        virtualinvoke $r1.<com.android.browser.TabControl: void freeMemory()>();

        return;
    }

    public boolean shouldShowErrorConsole()
    {
        com.android.browser.Controller r0;
        boolean $z0;

        r0 := @this: com.android.browser.Controller;

        $z0 = r0.<com.android.browser.Controller: boolean mShouldShowErrorConsole>;

        return $z0;
    }

    protected void setShouldShowErrorConsole(boolean)
    {
        com.android.browser.Controller r0;
        boolean z0, $z1;
        com.android.browser.Tab r1;
        com.android.browser.TabControl $r2;
        com.android.browser.UI $r3;

        r0 := @this: com.android.browser.Controller;

        z0 := @parameter0: boolean;

        $z1 = r0.<com.android.browser.Controller: boolean mShouldShowErrorConsole>;

        if z0 != $z1 goto label1;

        return;

     label1:
        r0.<com.android.browser.Controller: boolean mShouldShowErrorConsole> = z0;

        $r2 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        r1 = virtualinvoke $r2.<com.android.browser.TabControl: com.android.browser.Tab getCurrentTab()>();

        if r1 != null goto label2;

        return;

     label2:
        $r3 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        interfaceinvoke $r3.<com.android.browser.UI: void setShouldShowErrorConsole(com.android.browser.Tab,boolean)>(r1, z0);

        return;
    }

    public void stopLoading()
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab r1;
        android.webkit.WebView r2;
        com.android.browser.TabControl $r3;
        com.android.browser.UI $r4;

        r0 := @this: com.android.browser.Controller;

        r0.<com.android.browser.Controller: boolean mLoadStopped> = 1;

        $r3 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        r1 = virtualinvoke $r3.<com.android.browser.TabControl: com.android.browser.Tab getCurrentTab()>();

        r2 = virtualinvoke r0.<com.android.browser.Controller: android.webkit.WebView getCurrentTopWebView()>();

        if r2 == null goto label1;

        virtualinvoke r2.<android.webkit.WebView: void stopLoading()>();

        $r4 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        interfaceinvoke $r4.<com.android.browser.UI: void onPageStopped(com.android.browser.Tab)>(r1);

     label1:
        return;
    }

    boolean didUserStopLoading()
    {
        com.android.browser.Controller r0;
        boolean $z0;

        r0 := @this: com.android.browser.Controller;

        $z0 = r0.<com.android.browser.Controller: boolean mLoadStopped>;

        return $z0;
    }

    public void onPageStarted(com.android.browser.Tab, android.webkit.WebView, android.graphics.Bitmap)
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab r1;
        android.webkit.WebView r2;
        android.graphics.Bitmap r3;
        java.lang.String r4;
        android.os.Handler $r5;
        android.webkit.CookieSyncManager $r6;
        com.android.browser.NetworkStateHandler $r7;
        boolean $z0, $z1;
        com.android.browser.UI $r8;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: com.android.browser.Tab;

        r2 := @parameter1: android.webkit.WebView;

        r3 := @parameter2: android.graphics.Bitmap;

        $r5 = r0.<com.android.browser.Controller: android.os.Handler mHandler>;

        virtualinvoke $r5.<android.os.Handler: void removeMessages(int,java.lang.Object)>(108, r1);

        $r6 = staticinvoke <android.webkit.CookieSyncManager: android.webkit.CookieSyncManager getInstance()>();

        virtualinvoke $r6.<android.webkit.CookieSyncManager: void resetSync()>();

        $r7 = r0.<com.android.browser.Controller: com.android.browser.NetworkStateHandler mNetworkHandler>;

        $z0 = virtualinvoke $r7.<com.android.browser.NetworkStateHandler: boolean isNetworkUp()>();

        if $z0 != 0 goto label1;

        virtualinvoke r2.<android.webkit.WebView: void setNetworkAvailable(boolean)>(0);

     label1:
        $z1 = r0.<com.android.browser.Controller: boolean mActivityPaused>;

        if $z1 == 0 goto label2;

        specialinvoke r0.<com.android.browser.Controller: void resumeWebViewTimers(com.android.browser.Tab)>(r1);

     label2:
        r0.<com.android.browser.Controller: boolean mLoadStopped> = 0;

        virtualinvoke r0.<com.android.browser.Controller: void endActionMode()>();

        $r8 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        interfaceinvoke $r8.<com.android.browser.UI: void onTabDataChanged(com.android.browser.Tab)>(r1);

        r4 = virtualinvoke r1.<com.android.browser.Tab: java.lang.String getUrl()>();

        specialinvoke r0.<com.android.browser.Controller: void maybeUpdateFavicon(com.android.browser.Tab,java.lang.String,java.lang.String,android.graphics.Bitmap)>(r1, null, r4, r3);

        staticinvoke <com.android.browser.Performance: void tracePageStart(java.lang.String)>(r4);

        return;
    }

    public void onPageFinished(com.android.browser.Tab)
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab r1;
        com.android.browser.CrashRecoveryHandler $r2;
        com.android.browser.UI $r3;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: com.android.browser.Tab;

        $r2 = r0.<com.android.browser.Controller: com.android.browser.CrashRecoveryHandler mCrashRecoveryHandler>;

        virtualinvoke $r2.<com.android.browser.CrashRecoveryHandler: void backupState()>();

        $r3 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        interfaceinvoke $r3.<com.android.browser.UI: void onTabDataChanged(com.android.browser.Tab)>(r1);

        staticinvoke <com.android.browser.Performance: void tracePageFinished()>();

        return;
    }

    public void onProgressChanged(com.android.browser.Tab)
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab r1;
        int i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z12;
        com.android.browser.UI $r2;
        android.view.Menu $r3, $r10;
        android.webkit.CookieSyncManager $r4;
        java.lang.String $r5;
        android.os.Handler $r6, $r7, $r9;
        android.os.Message $r8;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: com.android.browser.Tab;

        i0 = virtualinvoke r1.<com.android.browser.Tab: int getLoadProgress()>();

        if i0 != 100 goto label5;

        $r4 = staticinvoke <android.webkit.CookieSyncManager: android.webkit.CookieSyncManager getInstance()>();

        virtualinvoke $r4.<android.webkit.CookieSyncManager: void sync()>();

        $z1 = virtualinvoke r1.<com.android.browser.Tab: boolean inPageLoad()>();

        if $z1 == 0 goto label1;

        $r10 = r0.<com.android.browser.Controller: android.view.Menu mCachedMenu>;

        specialinvoke r0.<com.android.browser.Controller: void updateInLoadMenuItems(android.view.Menu,com.android.browser.Tab)>($r10, r1);

        goto label2;

     label1:
        $z2 = r0.<com.android.browser.Controller: boolean mActivityPaused>;

        if $z2 == 0 goto label2;

        $z12 = specialinvoke r0.<com.android.browser.Controller: boolean pauseWebViewTimers(com.android.browser.Tab)>(r1);

        if $z12 == 0 goto label2;

        specialinvoke r0.<com.android.browser.Controller: void releaseWakeLock()>();

     label2:
        $z3 = virtualinvoke r1.<com.android.browser.Tab: boolean isPrivateBrowsingEnabled()>();

        if $z3 != 0 goto label6;

        $r5 = virtualinvoke r1.<com.android.browser.Tab: java.lang.String getUrl()>();

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r5);

        if $z4 != 0 goto label6;

        $z5 = virtualinvoke r1.<com.android.browser.Tab: boolean isSnapshot()>();

        if $z5 != 0 goto label6;

        $z6 = virtualinvoke r1.<com.android.browser.Tab: boolean shouldUpdateThumbnail()>();

        if $z6 == 0 goto label6;

        $z7 = virtualinvoke r1.<com.android.browser.Tab: boolean inForeground()>();

        if $z7 == 0 goto label3;

        $z10 = virtualinvoke r0.<com.android.browser.Controller: boolean didUserStopLoading()>();

        if $z10 == 0 goto label4;

     label3:
        $z8 = virtualinvoke r1.<com.android.browser.Tab: boolean inForeground()>();

        if $z8 != 0 goto label6;

     label4:
        $r6 = r0.<com.android.browser.Controller: android.os.Handler mHandler>;

        $z9 = virtualinvoke $r6.<android.os.Handler: boolean hasMessages(int,java.lang.Object)>(108, r1);

        if $z9 != 0 goto label6;

        $r9 = r0.<com.android.browser.Controller: android.os.Handler mHandler>;

        $r7 = r0.<com.android.browser.Controller: android.os.Handler mHandler>;

        $r8 = virtualinvoke $r7.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(108, 0, 0, r1);

        virtualinvoke $r9.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>($r8, 500L);

        goto label6;

     label5:
        $z0 = virtualinvoke r1.<com.android.browser.Tab: boolean inPageLoad()>();

        if $z0 != 0 goto label6;

        $r3 = r0.<com.android.browser.Controller: android.view.Menu mCachedMenu>;

        specialinvoke r0.<com.android.browser.Controller: void updateInLoadMenuItems(android.view.Menu,com.android.browser.Tab)>($r3, r1);

     label6:
        $r2 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        interfaceinvoke $r2.<com.android.browser.UI: void onProgressChanged(com.android.browser.Tab)>(r1);

        return;
    }

    public void onUpdatedSecurityState(com.android.browser.Tab)
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab r1;
        com.android.browser.UI $r2;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: com.android.browser.Tab;

        $r2 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        interfaceinvoke $r2.<com.android.browser.UI: void onTabDataChanged(com.android.browser.Tab)>(r1);

        return;
    }

    public void onReceivedTitle(com.android.browser.Tab, java.lang.String)
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab r1;
        java.lang.String r2, r3;
        com.android.browser.UI $r4;
        boolean $z0, $z1;
        int $i0;
        android.app.Activity $r5;
        com.android.browser.DataController $r6;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: com.android.browser.Tab;

        r2 := @parameter1: java.lang.String;

        $r4 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        interfaceinvoke $r4.<com.android.browser.UI: void onTabDataChanged(com.android.browser.Tab)>(r1);

        r3 = virtualinvoke r1.<com.android.browser.Tab: java.lang.String getOriginalUrl()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z0 != 0 goto label1;

        $i0 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i0 < 50000 goto label2;

     label1:
        return;

     label2:
        $z1 = virtualinvoke r1.<com.android.browser.Tab: boolean isPrivateBrowsingEnabled()>();

        if $z1 != 0 goto label3;

        $r5 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        $r6 = staticinvoke <com.android.browser.DataController: com.android.browser.DataController getInstance(android.content.Context)>($r5);

        virtualinvoke $r6.<com.android.browser.DataController: void updateHistoryTitle(java.lang.String,java.lang.String)>(r3, r2);

     label3:
        return;
    }

    public void onFavicon(com.android.browser.Tab, android.webkit.WebView, android.graphics.Bitmap)
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab r1;
        android.webkit.WebView r2;
        android.graphics.Bitmap r3;
        com.android.browser.UI $r4;
        java.lang.String $r5, $r6;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: com.android.browser.Tab;

        r2 := @parameter1: android.webkit.WebView;

        r3 := @parameter2: android.graphics.Bitmap;

        $r4 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        interfaceinvoke $r4.<com.android.browser.UI: void onTabDataChanged(com.android.browser.Tab)>(r1);

        $r5 = virtualinvoke r2.<android.webkit.WebView: java.lang.String getOriginalUrl()>();

        $r6 = virtualinvoke r2.<android.webkit.WebView: java.lang.String getUrl()>();

        specialinvoke r0.<com.android.browser.Controller: void maybeUpdateFavicon(com.android.browser.Tab,java.lang.String,java.lang.String,android.graphics.Bitmap)>(r1, $r5, $r6, r3);

        return;
    }

    public boolean shouldOverrideUrlLoading(com.android.browser.Tab, android.webkit.WebView, java.lang.String)
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab r1;
        android.webkit.WebView r2;
        java.lang.String r3;
        com.android.browser.UrlHandler $r4;
        boolean $z0;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: com.android.browser.Tab;

        r2 := @parameter1: android.webkit.WebView;

        r3 := @parameter2: java.lang.String;

        $r4 = r0.<com.android.browser.Controller: com.android.browser.UrlHandler mUrlHandler>;

        $z0 = virtualinvoke $r4.<com.android.browser.UrlHandler: boolean shouldOverrideUrlLoading(com.android.browser.Tab,android.webkit.WebView,java.lang.String)>(r1, r2, r3);

        return $z0;
    }

    public boolean shouldOverrideKeyEvent(android.view.KeyEvent)
    {
        com.android.browser.Controller r0;
        android.view.KeyEvent r1;
        boolean $z0, $z1;
        android.app.Activity $r2;
        android.view.Window $r3;
        int $i0;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: android.view.KeyEvent;

        $z0 = r0.<com.android.browser.Controller: boolean mMenuIsDown>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        $r3 = virtualinvoke $r2.<android.app.Activity: android.view.Window getWindow()>();

        $i0 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        $z1 = virtualinvoke $r3.<android.view.Window: boolean isShortcutKey(int,android.view.KeyEvent)>($i0, r1);

        return $z1;

     label1:
        return 0;
    }

    public boolean onUnhandledKeyEvent(android.view.KeyEvent)
    {
        com.android.browser.Controller r0;
        android.view.KeyEvent r1;
        boolean $z0, $z1, $z2;
        int $i0, $i1, $i2;
        android.app.Activity $r2, $r3;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: android.view.KeyEvent;

        $z0 = virtualinvoke r0.<com.android.browser.Controller: boolean isActivityPaused()>();

        if $z0 != 0 goto label2;

        $i0 = virtualinvoke r1.<android.view.KeyEvent: int getAction()>();

        if $i0 != 0 goto label1;

        $r3 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        $i2 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        $z2 = virtualinvoke $r3.<android.app.Activity: boolean onKeyDown(int,android.view.KeyEvent)>($i2, r1);

        return $z2;

     label1:
        $r2 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        $i1 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        $z1 = virtualinvoke $r2.<android.app.Activity: boolean onKeyUp(int,android.view.KeyEvent)>($i1, r1);

        return $z1;

     label2:
        return 0;
    }

    public void doUpdateVisitedHistory(com.android.browser.Tab, boolean)
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab r1;
        boolean z0, $z1, $z2, $z3;
        java.lang.String r2;
        android.app.Activity $r3;
        com.android.browser.DataController $r4;
        com.android.browser.CrashRecoveryHandler $r5;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: com.android.browser.Tab;

        z0 := @parameter1: boolean;

        $z1 = virtualinvoke r1.<com.android.browser.Tab: boolean isPrivateBrowsingEnabled()>();

        if $z1 == 0 goto label1;

        return;

     label1:
        r2 = virtualinvoke r1.<com.android.browser.Tab: java.lang.String getOriginalUrl()>();

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z2 != 0 goto label2;

        $z3 = virtualinvoke r2.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, "about:", 0, 6);

        if $z3 == 0 goto label3;

     label2:
        return;

     label3:
        $r3 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        $r4 = staticinvoke <com.android.browser.DataController: com.android.browser.DataController getInstance(android.content.Context)>($r3);

        virtualinvoke $r4.<com.android.browser.DataController: void updateVisitedHistory(java.lang.String)>(r2);

        $r5 = r0.<com.android.browser.Controller: com.android.browser.CrashRecoveryHandler mCrashRecoveryHandler>;

        virtualinvoke $r5.<com.android.browser.CrashRecoveryHandler: void backupState()>();

        return;
    }

    public void getVisitedHistory(android.webkit.ValueCallback)
    {
        com.android.browser.Controller r0;
        android.webkit.ValueCallback r1;
        com.android.browser.Controller$5 r2, $r3;
        java.lang.Void[] $r4;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: android.webkit.ValueCallback;

        $r3 = new com.android.browser.Controller$5;

        specialinvoke $r3.<com.android.browser.Controller$5: void <init>(com.android.browser.Controller,android.webkit.ValueCallback)>(r0, r1);

        r2 = $r3;

        $r4 = newarray (java.lang.Void)[0];

        virtualinvoke r2.<android.os.AsyncTask: android.os.AsyncTask execute(java.lang.Object[])>($r4);

        return;
    }

    public void onReceivedHttpAuthRequest(com.android.browser.Tab, android.webkit.WebView, android.webkit.HttpAuthHandler, java.lang.String, java.lang.String)
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab r1;
        android.webkit.WebView r2;
        android.webkit.HttpAuthHandler r3;
        java.lang.String r4, r5, r6, r7;
        boolean z0, $z1, $z2;
        java.lang.String[] r8;
        com.android.browser.PageDialogsHandler $r9;
        int $i0;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: com.android.browser.Tab;

        r2 := @parameter1: android.webkit.WebView;

        r3 := @parameter2: android.webkit.HttpAuthHandler;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 = null;

        r7 = null;

        z0 = virtualinvoke r3.<android.webkit.HttpAuthHandler: boolean useHttpAuthUsernamePassword()>();

        if z0 == 0 goto label1;

        if r2 == null goto label1;

        r8 = virtualinvoke r2.<android.webkit.WebView: java.lang.String[] getHttpAuthUsernamePassword(java.lang.String,java.lang.String)>(r4, r5);

        if r8 == null goto label1;

        $i0 = lengthof r8;

        if $i0 != 2 goto label1;

        r6 = r8[0];

        r7 = r8[1];

     label1:
        if r6 == null goto label2;

        if r7 == null goto label2;

        virtualinvoke r3.<android.webkit.HttpAuthHandler: void proceed(java.lang.String,java.lang.String)>(r6, r7);

        goto label4;

     label2:
        $z1 = virtualinvoke r1.<com.android.browser.Tab: boolean inForeground()>();

        if $z1 == 0 goto label3;

        $z2 = virtualinvoke r3.<android.webkit.HttpAuthHandler: boolean suppressDialog()>();

        if $z2 != 0 goto label3;

        $r9 = r0.<com.android.browser.Controller: com.android.browser.PageDialogsHandler mPageDialogsHandler>;

        virtualinvoke $r9.<com.android.browser.PageDialogsHandler: void showHttpAuthentication(com.android.browser.Tab,android.webkit.HttpAuthHandler,java.lang.String,java.lang.String)>(r1, r3, r4, r5);

        goto label4;

     label3:
        virtualinvoke r3.<android.webkit.HttpAuthHandler: void cancel()>();

     label4:
        return;
    }

    public void onDownloadStart(com.android.browser.Tab, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, long)
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab r1, $r11;
        java.lang.String r2, r3, r4, r5, r6;
        long l0;
        android.webkit.WebView r7;
        android.app.Activity $r8;
        boolean $z0;
        android.webkit.WebBackForwardList $r9;
        int $i1;
        com.android.browser.TabControl $r10;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: com.android.browser.Tab;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r6 := @parameter5: java.lang.String;

        l0 := @parameter6: long;

        r7 = virtualinvoke r1.<com.android.browser.Tab: android.webkit.WebView getWebView()>();

        $r8 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        $z0 = virtualinvoke r7.<android.webkit.WebView: boolean isPrivateBrowsingEnabled()>();

        staticinvoke <com.android.browser.DownloadHandler: void onDownloadStart(android.app.Activity,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>($r8, r2, r3, r4, r5, r6, $z0);

        $r9 = virtualinvoke r7.<android.webkit.WebView: android.webkit.WebBackForwardList copyBackForwardList()>();

        $i1 = virtualinvoke $r9.<android.webkit.WebBackForwardList: int getSize()>();

        if $i1 != 0 goto label2;

        $r10 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        $r11 = virtualinvoke $r10.<com.android.browser.TabControl: com.android.browser.Tab getCurrentTab()>();

        if r1 != $r11 goto label1;

        virtualinvoke r0.<com.android.browser.Controller: void goBackOnePageOrQuit()>();

        goto label2;

     label1:
        virtualinvoke r0.<com.android.browser.Controller: void closeTab(com.android.browser.Tab)>(r1);

     label2:
        return;
    }

    public android.graphics.Bitmap getDefaultVideoPoster()
    {
        com.android.browser.Controller r0;
        com.android.browser.UI $r1;
        android.graphics.Bitmap $r2;

        r0 := @this: com.android.browser.Controller;

        $r1 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        $r2 = interfaceinvoke $r1.<com.android.browser.UI: android.graphics.Bitmap getDefaultVideoPoster()>();

        return $r2;
    }

    public android.view.View getVideoLoadingProgressView()
    {
        com.android.browser.Controller r0;
        com.android.browser.UI $r1;
        android.view.View $r2;

        r0 := @this: com.android.browser.Controller;

        $r1 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        $r2 = interfaceinvoke $r1.<com.android.browser.UI: android.view.View getVideoLoadingProgressView()>();

        return $r2;
    }

    public void showSslCertificateOnError(android.webkit.WebView, android.webkit.SslErrorHandler, android.net.http.SslError)
    {
        com.android.browser.Controller r0;
        android.webkit.WebView r1;
        android.webkit.SslErrorHandler r2;
        android.net.http.SslError r3;
        com.android.browser.PageDialogsHandler $r4;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: android.webkit.WebView;

        r2 := @parameter1: android.webkit.SslErrorHandler;

        r3 := @parameter2: android.net.http.SslError;

        $r4 = r0.<com.android.browser.Controller: com.android.browser.PageDialogsHandler mPageDialogsHandler>;

        virtualinvoke $r4.<com.android.browser.PageDialogsHandler: void showSSLCertificateOnError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError)>(r1, r2, r3);

        return;
    }

    public void showAutoLogin(com.android.browser.Tab)
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab r1;
        boolean $z0, $z1;
        com.android.browser.UI $r2;
        java.lang.AssertionError $r3;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: com.android.browser.Tab;

        $z0 = <com.android.browser.Controller: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r1.<com.android.browser.Tab: boolean inForeground()>();

        if $z1 != 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $r2 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        interfaceinvoke $r2.<com.android.browser.UI: void showAutoLogin(com.android.browser.Tab)>(r1);

        return;
    }

    public void hideAutoLogin(com.android.browser.Tab)
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab r1;
        boolean $z0, $z1;
        com.android.browser.UI $r2;
        java.lang.AssertionError $r3;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: com.android.browser.Tab;

        $z0 = <com.android.browser.Controller: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r1.<com.android.browser.Tab: boolean inForeground()>();

        if $z1 != 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $r2 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        interfaceinvoke $r2.<com.android.browser.UI: void hideAutoLogin(com.android.browser.Tab)>(r1);

        return;
    }

    private void maybeUpdateFavicon(com.android.browser.Tab, java.lang.String, java.lang.String, android.graphics.Bitmap)
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab r1;
        java.lang.String r2, r3;
        android.graphics.Bitmap r4;
        boolean $z0;
        android.app.Activity $r5;
        android.content.ContentResolver $r6;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: com.android.browser.Tab;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: android.graphics.Bitmap;

        if r4 != null goto label1;

        return;

     label1:
        $z0 = virtualinvoke r1.<com.android.browser.Tab: boolean isPrivateBrowsingEnabled()>();

        if $z0 != 0 goto label2;

        $r5 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        $r6 = virtualinvoke $r5.<android.app.Activity: android.content.ContentResolver getContentResolver()>();

        staticinvoke <com.android.browser.Bookmarks: void updateFavicon(android.content.ContentResolver,java.lang.String,java.lang.String,android.graphics.Bitmap)>($r6, r2, r3, r4);

     label2:
        return;
    }

    public void bookmarkedStatusHasChanged(com.android.browser.Tab)
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab r1;
        com.android.browser.UI $r2;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: com.android.browser.Tab;

        $r2 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        interfaceinvoke $r2.<com.android.browser.UI: void bookmarkedStatusHasChanged(com.android.browser.Tab)>(r1);

        return;
    }

    protected void pageUp()
    {
        com.android.browser.Controller r0;
        android.webkit.WebView $r1;

        r0 := @this: com.android.browser.Controller;

        $r1 = virtualinvoke r0.<com.android.browser.Controller: android.webkit.WebView getCurrentTopWebView()>();

        virtualinvoke $r1.<android.webkit.WebView: boolean pageUp(boolean)>(0);

        return;
    }

    protected void pageDown()
    {
        com.android.browser.Controller r0;
        android.webkit.WebView $r1;

        r0 := @this: com.android.browser.Controller;

        $r1 = virtualinvoke r0.<com.android.browser.Controller: android.webkit.WebView getCurrentTopWebView()>();

        virtualinvoke $r1.<android.webkit.WebView: boolean pageDown(boolean)>(0);

        return;
    }

    public void editUrl()
    {
        com.android.browser.Controller r0;
        boolean $z0;
        com.android.browser.UI $r1;
        android.app.Activity $r2;

        r0 := @this: com.android.browser.Controller;

        $z0 = r0.<com.android.browser.Controller: boolean mOptionsMenuOpen>;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        virtualinvoke $r2.<android.app.Activity: void closeOptionsMenu()>();

     label1:
        $r1 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        interfaceinvoke $r1.<com.android.browser.UI: void editUrl(boolean,boolean)>(0, 1);

        return;
    }

    public void showCustomView(com.android.browser.Tab, android.view.View, int, android.webkit.WebChromeClient$CustomViewCallback)
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab r1;
        android.view.View r2;
        int i0, $i1;
        android.webkit.WebChromeClient$CustomViewCallback r3;
        boolean $z0, $z1;
        com.android.browser.UI $r4, $r5;
        android.app.Activity $r6;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: com.android.browser.Tab;

        r2 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        r3 := @parameter3: android.webkit.WebChromeClient$CustomViewCallback;

        $z0 = virtualinvoke r1.<com.android.browser.Tab: boolean inForeground()>();

        if $z0 == 0 goto label2;

        $r4 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        $z1 = interfaceinvoke $r4.<com.android.browser.UI: boolean isCustomViewShowing()>();

        if $z1 == 0 goto label1;

        interfaceinvoke r3.<android.webkit.WebChromeClient$CustomViewCallback: void onCustomViewHidden()>();

        return;

     label1:
        $r5 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        interfaceinvoke $r5.<com.android.browser.UI: void showCustomView(android.view.View,int,android.webkit.WebChromeClient$CustomViewCallback)>(r2, i0, r3);

        $i1 = r0.<com.android.browser.Controller: int mMenuState>;

        r0.<com.android.browser.Controller: int mOldMenuState> = $i1;

        r0.<com.android.browser.Controller: int mMenuState> = -1;

        $r6 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        virtualinvoke $r6.<android.app.Activity: void invalidateOptionsMenu()>();

     label2:
        return;
    }

    public void hideCustomView()
    {
        com.android.browser.Controller r0;
        com.android.browser.UI $r1, $r2;
        boolean $z0;
        int $i0;
        android.app.Activity $r3;

        r0 := @this: com.android.browser.Controller;

        $r1 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        $z0 = interfaceinvoke $r1.<com.android.browser.UI: boolean isCustomViewShowing()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        interfaceinvoke $r2.<com.android.browser.UI: void onHideCustomView()>();

        $i0 = r0.<com.android.browser.Controller: int mOldMenuState>;

        r0.<com.android.browser.Controller: int mMenuState> = $i0;

        r0.<com.android.browser.Controller: int mOldMenuState> = -1;

        $r3 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        virtualinvoke $r3.<android.app.Activity: void invalidateOptionsMenu()>();

     label1:
        return;
    }

    public void onActivityResult(int, int, android.content.Intent)
    {
        com.android.browser.Controller r0;
        int i0, i1, i2, i3, $i4;
        android.content.Intent r1;
        java.lang.String r2, r5, $r8, $r12, $r15, $r16, $r20;
        android.net.Uri r3;
        java.lang.String[] r4, r22;
        android.webkit.WebView $r6, $r7;
        boolean $z1, $z2, $z3, $z4, $z5, $z6;
        com.android.browser.TabControl $r9;
        java.lang.Object $r10;
        com.android.browser.UploadHandler $r11, $r14;
        com.android.browser.UI $r13;
        android.app.Activity $r17;
        byte $b5;
        com.android.browser.BrowserSettings $r18;
        android.widget.Toast $r19;
        com.android.browser.Tab r21, r23;
        long l6;
        java.util.ArrayList r24;

        r0 := @this: com.android.browser.Controller;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.content.Intent;

        $r6 = virtualinvoke r0.<com.android.browser.Controller: android.webkit.WebView getCurrentTopWebView()>();

        if $r6 != null goto label01;

        return;

     label01:
        tableswitch(i0)
        {
            case 1: goto label06;
            case 2: goto label17;
            case 3: goto label02;
            case 4: goto label04;
            case 5: goto label17;
            case 6: goto label15;
            default: goto label17;
        };

     label02:
        if i1 != -1 goto label17;

        if r1 == null goto label17;

        r2 = virtualinvoke r1.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("android.intent.extra.TEXT");

        $r8 = "privacy_clear_history";

        $z1 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label03;

        $r9 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        virtualinvoke $r9.<com.android.browser.TabControl: void removeParentChildRelationShips()>();

     label03:
        goto label17;

     label04:
        $r11 = r0.<com.android.browser.Controller: com.android.browser.UploadHandler mUploadHandler>;

        if null != $r11 goto label05;

        goto label17;

     label05:
        $r14 = r0.<com.android.browser.Controller: com.android.browser.UploadHandler mUploadHandler>;

        virtualinvoke $r14.<com.android.browser.UploadHandler: void onResult(int,android.content.Intent)>(i1, r1);

        goto label17;

     label06:
        if r1 == null goto label17;

        if i1 == -1 goto label07;

        goto label17;

     label07:
        $r13 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        interfaceinvoke $r13.<com.android.browser.UI: void showWeb(boolean)>(0);

        $r16 = "android.intent.action.VIEW";

        $r15 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();

        $z3 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r15);

        if $z3 == 0 goto label08;

        r21 = virtualinvoke r0.<com.android.browser.Controller: com.android.browser.Tab getCurrentTab()>();

        r3 = virtualinvoke r1.<android.content.Intent: android.net.Uri getData()>();

        $r20 = virtualinvoke r3.<android.net.Uri: java.lang.String toString()>();

        virtualinvoke r0.<com.android.browser.Controller: void loadUrl(com.android.browser.Tab,java.lang.String)>(r21, $r20);

        goto label17;

     label08:
        $z2 = virtualinvoke r1.<android.content.Intent: boolean hasExtra(java.lang.String)>("open_all");

        if $z2 == 0 goto label13;

        r22 = virtualinvoke r1.<android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)>("open_all");

        r23 = virtualinvoke r0.<com.android.browser.Controller: com.android.browser.Tab getCurrentTab()>();

        r4 = r22;

        i2 = lengthof r4;

        i3 = 0;

     label09:
        if i3 >= i2 goto label12;

        r5 = r4[i3];

        $r18 = r0.<com.android.browser.Controller: com.android.browser.BrowserSettings mSettings>;

        $z6 = virtualinvoke $r18.<com.android.browser.BrowserSettings: boolean openInBackground()>();

        if $z6 != 0 goto label10;

        $z5 = 1;

        goto label11;

     label10:
        $z5 = 0;

     label11:
        r23 = virtualinvoke r0.<com.android.browser.Controller: com.android.browser.Tab openTab(java.lang.String,com.android.browser.Tab,boolean,boolean)>(r5, r23, $z5, 1);

        i3 = i3 + 1;

        goto label09;

     label12:
        goto label17;

     label13:
        $z4 = virtualinvoke r1.<android.content.Intent: boolean hasExtra(java.lang.String)>("snapshot_id");

        if $z4 == 0 goto label17;

        l6 = virtualinvoke r1.<android.content.Intent: long getLongExtra(java.lang.String,long)>("snapshot_id", -1L);

        $b5 = l6 cmp 0L;

        if $b5 < 0 goto label14;

        $r17 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        $r19 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r17, "Snapshot Tab no longer supported", 1);

        virtualinvoke $r19.<android.widget.Toast: void show()>();

     label14:
        goto label17;

     label15:
        if i1 != -1 goto label17;

        if r1 == null goto label17;

        r24 = virtualinvoke r1.<android.content.Intent: java.util.ArrayList getStringArrayListExtra(java.lang.String)>("android.speech.extra.RESULTS");

        $i4 = virtualinvoke r24.<java.util.ArrayList: int size()>();

        if $i4 < 1 goto label16;

        $r10 = virtualinvoke r24.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r12 = (java.lang.String) $r10;

        r0.<com.android.browser.Controller: java.lang.String mVoiceResult> = $r12;

     label16:
        goto label17;

     label17:
        $r7 = virtualinvoke r0.<com.android.browser.Controller: android.webkit.WebView getCurrentTopWebView()>();

        virtualinvoke $r7.<android.webkit.WebView: boolean requestFocus()>();

        return;
    }

    public void bookmarksOrHistoryPicker(com.android.browser.UI$ComboViews)
    {
        com.android.browser.Controller r0;
        com.android.browser.UI$ComboViews r1;
        android.os.Bundle r2, $r5;
        com.android.browser.TabControl $r3, $r6;
        android.webkit.WebView $r4;
        boolean $z0, $z1, $z2;
        com.android.browser.UI $r8;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: com.android.browser.UI$ComboViews;

        $r3 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        $r4 = virtualinvoke $r3.<com.android.browser.TabControl: android.webkit.WebView getCurrentWebView()>();

        if $r4 != null goto label1;

        return;

     label1:
        $z0 = virtualinvoke r0.<com.android.browser.Controller: boolean isInCustomActionMode()>();

        if $z0 == 0 goto label2;

        virtualinvoke r0.<com.android.browser.Controller: void endActionMode()>();

     label2:
        $r5 = new android.os.Bundle;

        specialinvoke $r5.<android.os.Bundle: void <init>()>();

        r2 = $r5;

        $r6 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        $z1 = virtualinvoke $r6.<com.android.browser.TabControl: boolean canCreateNewTab()>();

        if $z1 != 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        virtualinvoke r2.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("disable_new_window", $z2);

        $r8 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        interfaceinvoke $r8.<com.android.browser.UI: void showComboView(com.android.browser.UI$ComboViews,android.os.Bundle)>(r1, r2);

        return;
    }

    protected void onBackKey()
    {
        com.android.browser.Controller r0;
        android.webkit.WebView r1;
        com.android.browser.UI $r2;
        boolean $z0, $z1;
        com.android.browser.TabControl $r3, $r4;
        com.android.browser.Tab $r5;

        r0 := @this: com.android.browser.Controller;

        $r2 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        $z0 = interfaceinvoke $r2.<com.android.browser.UI: boolean onBackKey()>();

        if $z0 != 0 goto label3;

        $r3 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        r1 = virtualinvoke $r3.<com.android.browser.TabControl: android.webkit.WebView getCurrentSubWindow()>();

        if r1 == null goto label2;

        $z1 = virtualinvoke r1.<android.webkit.WebView: boolean canGoBack()>();

        if $z1 == 0 goto label1;

        virtualinvoke r1.<android.webkit.WebView: void goBack()>();

        goto label3;

     label1:
        $r4 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        $r5 = virtualinvoke $r4.<com.android.browser.TabControl: com.android.browser.Tab getCurrentTab()>();

        virtualinvoke r0.<com.android.browser.Controller: void dismissSubWindow(com.android.browser.Tab)>($r5);

        goto label3;

     label2:
        virtualinvoke r0.<com.android.browser.Controller: void goBackOnePageOrQuit()>();

     label3:
        return;
    }

    protected boolean onMenuKey()
    {
        com.android.browser.Controller r0;
        com.android.browser.UI $r1;
        boolean $z0;

        r0 := @this: com.android.browser.Controller;

        $r1 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        $z0 = interfaceinvoke $r1.<com.android.browser.UI: boolean onMenuKey()>();

        return $z0;
    }

    public boolean onCreateOptionsMenu(android.view.Menu)
    {
        com.android.browser.Controller r0;
        android.view.Menu r1;
        android.view.MenuInflater r2;
        int $i0;
        android.app.Activity $r3;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: android.view.Menu;

        $i0 = r0.<com.android.browser.Controller: int mMenuState>;

        if $i0 != -1 goto label1;

        return 0;

     label1:
        $r3 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        r2 = virtualinvoke $r3.<android.app.Activity: android.view.MenuInflater getMenuInflater()>();

        virtualinvoke r2.<android.view.MenuInflater: void inflate(int,android.view.Menu)>(2131755010, r1);

        return 1;
    }

    public void onCreateContextMenu(android.view.ContextMenu, android.view.View, android.view.ContextMenu$ContextMenuInfo)
    {
        com.android.browser.Controller r0;
        android.view.ContextMenu r1;
        android.view.View r2;
        android.view.ContextMenu$ContextMenuInfo r3;
        android.webkit.WebView r4;
        android.webkit.WebView$HitTestResult r5;
        int i0, $i1;
        android.view.MenuInflater r6;
        java.lang.String r7, $r13, $r20, $r25, $r48, $r69, $r72, $r81;
        android.content.Intent r8, $r14, $r21, $r57, $r76;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        android.view.MenuItem r9, r10, $r15, $r26, $r28, $r38, $r41, $r46, $r56, $r62, $r73, $r80;
        android.app.Activity $r11, $r43, $r52;
        java.lang.StringBuilder $r16, $r17, $r18, $r58, $r66, $r67, $r70, $r71, $r75;
        android.net.Uri $r19, $r68, $r82;
        com.android.browser.Controller$Copy $r27, $r65, $r77;
        com.android.browser.TabControl $r31;
        com.android.browser.UI $r33;
        com.android.browser.BrowserSettings $r34;
        com.android.browser.Controller$9 $r40;
        android.webkit.WebSettings $r42;
        com.android.browser.Controller$Download $r44;
        com.android.browser.WallpaperHandler $r45;
        com.android.browser.Controller$7 $r50;
        com.android.browser.Controller$8 $r55;
        com.android.browser.Controller$6 $r59;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: android.view.ContextMenu;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.view.ContextMenu$ContextMenuInfo;

        $z1 = r2 instanceof com.android.browser.TitleBar;

        if $z1 == 0 goto label01;

        return;

     label01:
        $z2 = r2 instanceof android.webkit.WebView;

        if $z2 != 0 goto label02;

        return;

     label02:
        r4 = (android.webkit.WebView) r2;

        r5 = virtualinvoke r4.<android.webkit.WebView: android.webkit.WebView$HitTestResult getHitTestResult()>();

        if r5 != null goto label03;

        return;

     label03:
        i0 = virtualinvoke r5.<android.webkit.WebView$HitTestResult: int getType()>();

        if i0 != 0 goto label04;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Controller", "We should not show context menu when nothing is touched");

        return;

     label04:
        if i0 != 9 goto label05;

        return;

     label05:
        $r11 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        r6 = virtualinvoke $r11.<android.app.Activity: android.view.MenuInflater getMenuInflater()>();

        virtualinvoke r6.<android.view.MenuInflater: void inflate(int,android.view.Menu)>(2131755011, r1);

        r7 = virtualinvoke r5.<android.webkit.WebView$HitTestResult: java.lang.String getExtra()>();

        if r7 != null goto label06;

        return;

     label06:
        if i0 != 2 goto label07;

        $z8 = 1;

        goto label08;

     label07:
        $z8 = 0;

     label08:
        interfaceinvoke r1.<android.view.ContextMenu: void setGroupVisible(int,boolean)>(2131558601, $z8);

        if i0 != 4 goto label09;

        $z7 = 1;

        goto label10;

     label09:
        $z7 = 0;

     label10:
        interfaceinvoke r1.<android.view.ContextMenu: void setGroupVisible(int,boolean)>(2131558605, $z7);

        if i0 != 3 goto label11;

        $z10 = 1;

        goto label12;

     label11:
        $z10 = 0;

     label12:
        interfaceinvoke r1.<android.view.ContextMenu: void setGroupVisible(int,boolean)>(2131558608, $z10);

        if i0 == 5 goto label13;

        if i0 != 8 goto label14;

     label13:
        $z9 = 1;

        goto label15;

     label14:
        $z9 = 0;

     label15:
        interfaceinvoke r1.<android.view.ContextMenu: void setGroupVisible(int,boolean)>(2131558615, $z9);

        if i0 == 7 goto label16;

        if i0 != 8 goto label17;

     label16:
        $z6 = 1;

        goto label18;

     label17:
        $z6 = 0;

     label18:
        interfaceinvoke r1.<android.view.ContextMenu: void setGroupVisible(int,boolean)>(2131558611, $z6);

        tableswitch(i0)
        {
            case 2: goto label19;
            case 3: goto label21;
            case 4: goto label20;
            case 5: goto label27;
            case 6: goto label31;
            case 7: goto label22;
            case 8: goto label22;
            default: goto label31;
        };

     label19:
        $r13 = staticinvoke <android.net.Uri: java.lang.String decode(java.lang.String)>(r7);

        interfaceinvoke r1.<android.view.ContextMenu: android.view.ContextMenu setHeaderTitle(java.lang.CharSequence)>($r13);

        $r15 = interfaceinvoke r1.<android.view.ContextMenu: android.view.MenuItem findItem(int)>(2131558602);

        $r14 = new android.content.Intent;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tel:");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r20);

        specialinvoke $r14.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.VIEW", $r19);

        interfaceinvoke $r15.<android.view.MenuItem: android.view.MenuItem setIntent(android.content.Intent)>($r14);

        $r21 = new android.content.Intent;

        specialinvoke $r21.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.INSERT_OR_EDIT");

        r8 = $r21;

        $r25 = staticinvoke <android.net.Uri: java.lang.String decode(java.lang.String)>(r7);

        virtualinvoke r8.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("phone", $r25);

        virtualinvoke r8.<android.content.Intent: android.content.Intent setType(java.lang.String)>("vnd.android.cursor.item/contact");

        $r28 = interfaceinvoke r1.<android.view.ContextMenu: android.view.MenuItem findItem(int)>(2131558603);

        interfaceinvoke $r28.<android.view.MenuItem: android.view.MenuItem setIntent(android.content.Intent)>(r8);

        $r26 = interfaceinvoke r1.<android.view.ContextMenu: android.view.MenuItem findItem(int)>(2131558604);

        $r27 = new com.android.browser.Controller$Copy;

        specialinvoke $r27.<com.android.browser.Controller$Copy: void <init>(com.android.browser.Controller,java.lang.CharSequence)>(r0, r7);

        interfaceinvoke $r26.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r27);

        goto label32;

     label20:
        interfaceinvoke r1.<android.view.ContextMenu: android.view.ContextMenu setHeaderTitle(java.lang.CharSequence)>(r7);

        $r56 = interfaceinvoke r1.<android.view.ContextMenu: android.view.MenuItem findItem(int)>(2131558606);

        $r57 = new android.content.Intent;

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r67 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mailto:");

        $r66 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r69 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        $r68 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r69);

        specialinvoke $r57.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.VIEW", $r68);

        interfaceinvoke $r56.<android.view.MenuItem: android.view.MenuItem setIntent(android.content.Intent)>($r57);

        $r62 = interfaceinvoke r1.<android.view.ContextMenu: android.view.MenuItem findItem(int)>(2131558607);

        $r65 = new com.android.browser.Controller$Copy;

        specialinvoke $r65.<com.android.browser.Controller$Copy: void <init>(com.android.browser.Controller,java.lang.CharSequence)>(r0, r7);

        interfaceinvoke $r62.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r65);

        goto label32;

     label21:
        interfaceinvoke r1.<android.view.ContextMenu: android.view.ContextMenu setHeaderTitle(java.lang.CharSequence)>(r7);

        $r73 = interfaceinvoke r1.<android.view.ContextMenu: android.view.MenuItem findItem(int)>(2131558609);

        $r76 = new android.content.Intent;

        $r75 = new java.lang.StringBuilder;

        specialinvoke $r75.<java.lang.StringBuilder: void <init>()>();

        $r70 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("geo:0,0?q=");

        $r72 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String)>(r7);

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r72);

        $r81 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>();

        $r82 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r81);

        specialinvoke $r76.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.VIEW", $r82);

        interfaceinvoke $r73.<android.view.MenuItem: android.view.MenuItem setIntent(android.content.Intent)>($r76);

        $r80 = interfaceinvoke r1.<android.view.ContextMenu: android.view.MenuItem findItem(int)>(2131558610);

        $r77 = new com.android.browser.Controller$Copy;

        specialinvoke $r77.<com.android.browser.Controller$Copy: void <init>(com.android.browser.Controller,java.lang.CharSequence)>(r0, r7);

        interfaceinvoke $r80.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r77);

        goto label32;

     label22:
        interfaceinvoke r1.<android.view.ContextMenu: android.view.ContextMenu setHeaderTitle(java.lang.CharSequence)>(r7);

        $r31 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        z0 = virtualinvoke $r31.<com.android.browser.TabControl: boolean canCreateNewTab()>();

        r9 = interfaceinvoke r1.<android.view.ContextMenu: android.view.MenuItem findItem(int)>(2131558612);

        $r34 = virtualinvoke r0.<com.android.browser.Controller: com.android.browser.BrowserSettings getSettings()>();

        $z3 = virtualinvoke $r34.<com.android.browser.BrowserSettings: boolean openInBackground()>();

        if $z3 == 0 goto label23;

        $i1 = 2131492959;

        goto label24;

     label23:
        $i1 = 2131492958;

     label24:
        interfaceinvoke r9.<android.view.MenuItem: android.view.MenuItem setTitle(int)>($i1);

        interfaceinvoke r9.<android.view.MenuItem: android.view.MenuItem setVisible(boolean)>(z0);

        if z0 == 0 goto label26;

        if 8 != i0 goto label25;

        $r59 = new com.android.browser.Controller$6;

        specialinvoke $r59.<com.android.browser.Controller$6: void <init>(com.android.browser.Controller,android.webkit.WebView)>(r0, r4);

        interfaceinvoke r9.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r59);

        goto label26;

     label25:
        $r50 = new com.android.browser.Controller$7;

        specialinvoke $r50.<com.android.browser.Controller$7: void <init>(com.android.browser.Controller,java.lang.String)>(r0, r7);

        interfaceinvoke r9.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r50);

     label26:
        if i0 != 7 goto label27;

        goto label32;

     label27:
        r10 = interfaceinvoke r1.<android.view.ContextMenu: android.view.MenuItem findItem(int)>(2131558558);

        if i0 != 5 goto label28;

        $z5 = 1;

        goto label29;

     label28:
        $z5 = 0;

     label29:
        interfaceinvoke r10.<android.view.MenuItem: android.view.MenuItem setVisible(boolean)>($z5);

        if i0 != 5 goto label30;

        interfaceinvoke r1.<android.view.ContextMenu: android.view.ContextMenu setHeaderTitle(java.lang.CharSequence)>(r7);

        $r55 = new com.android.browser.Controller$8;

        specialinvoke $r55.<com.android.browser.Controller$8: void <init>(com.android.browser.Controller,java.lang.String)>(r0, r7);

        interfaceinvoke r10.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r55);

     label30:
        $r41 = interfaceinvoke r1.<android.view.ContextMenu: android.view.MenuItem findItem(int)>(2131558617);

        $r40 = new com.android.browser.Controller$9;

        specialinvoke $r40.<com.android.browser.Controller$9: void <init>(com.android.browser.Controller,java.lang.String)>(r0, r7);

        interfaceinvoke $r41.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r40);

        $r38 = interfaceinvoke r1.<android.view.ContextMenu: android.view.MenuItem findItem(int)>(2131558616);

        $r44 = new com.android.browser.Controller$Download;

        $r43 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        $z4 = virtualinvoke r4.<android.webkit.WebView: boolean isPrivateBrowsingEnabled()>();

        $r42 = virtualinvoke r4.<android.webkit.WebView: android.webkit.WebSettings getSettings()>();

        $r48 = virtualinvoke $r42.<android.webkit.WebSettings: java.lang.String getUserAgentString()>();

        specialinvoke $r44.<com.android.browser.Controller$Download: void <init>(android.app.Activity,java.lang.String,boolean,java.lang.String)>($r43, r7, $z4, $r48);

        interfaceinvoke $r38.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r44);

        $r46 = interfaceinvoke r1.<android.view.ContextMenu: android.view.MenuItem findItem(int)>(2131558618);

        $r45 = new com.android.browser.WallpaperHandler;

        $r52 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        specialinvoke $r45.<com.android.browser.WallpaperHandler: void <init>(android.content.Context,java.lang.String)>($r52, r7);

        interfaceinvoke $r46.<android.view.MenuItem: android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener)>($r45);

        goto label32;

     label31:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Controller", "We should not get here.");

     label32:
        $r33 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        interfaceinvoke $r33.<com.android.browser.UI: void onContextMenuCreated(android.view.Menu)>(r1);

        return;
    }

    private void updateInLoadMenuItems(android.view.Menu, com.android.browser.Tab)
    {
        com.android.browser.Controller r0;
        android.view.Menu r1;
        com.android.browser.Tab r2;
        android.view.MenuItem r3, r4, $r5;
        android.graphics.drawable.Drawable $r6;
        java.lang.CharSequence $r8;
        boolean $z0;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: android.view.Menu;

        r2 := @parameter1: com.android.browser.Tab;

        if r1 != null goto label1;

        return;

     label1:
        r3 = interfaceinvoke r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2131558565);

        if r2 == null goto label2;

        $z0 = virtualinvoke r2.<com.android.browser.Tab: boolean inPageLoad()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2131558599);

        goto label3;

     label2:
        $r5 = interfaceinvoke r1.<android.view.Menu: android.view.MenuItem findItem(int)>(2131558600);

     label3:
        r4 = $r5;

        if r4 == null goto label4;

        $r6 = interfaceinvoke r4.<android.view.MenuItem: android.graphics.drawable.Drawable getIcon()>();

        interfaceinvoke r3.<android.view.MenuItem: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)>($r6);

        $r8 = interfaceinvoke r4.<android.view.MenuItem: java.lang.CharSequence getTitle()>();

        interfaceinvoke r3.<android.view.MenuItem: android.view.MenuItem setTitle(java.lang.CharSequence)>($r8);

     label4:
        return;
    }

    public boolean onPrepareOptionsMenu(android.view.Menu)
    {
        com.android.browser.Controller r0;
        android.view.Menu r1;
        com.android.browser.Tab $r2, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        com.android.browser.UI $r3;
        boolean $z0;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: android.view.Menu;

        $r2 = virtualinvoke r0.<com.android.browser.Controller: com.android.browser.Tab getCurrentTab()>();

        specialinvoke r0.<com.android.browser.Controller: void updateInLoadMenuItems(android.view.Menu,com.android.browser.Tab)>(r1, $r2);

        r0.<com.android.browser.Controller: android.view.Menu mCachedMenu> = r1;

        $i0 = r0.<com.android.browser.Controller: int mMenuState>;

        lookupswitch($i0)
        {
            case -1: goto label1;
            default: goto label2;
        };

     label1:
        $i2 = r0.<com.android.browser.Controller: int mCurrentMenuState>;

        $i1 = r0.<com.android.browser.Controller: int mMenuState>;

        if $i2 == $i1 goto label4;

        interfaceinvoke r1.<android.view.Menu: void setGroupVisible(int,boolean)>(2131558563, 0);

        interfaceinvoke r1.<android.view.Menu: void setGroupEnabled(int,boolean)>(2131558563, 0);

        interfaceinvoke r1.<android.view.Menu: void setGroupEnabled(int,boolean)>(2131558583, 0);

        goto label4;

     label2:
        $i5 = r0.<com.android.browser.Controller: int mCurrentMenuState>;

        $i4 = r0.<com.android.browser.Controller: int mMenuState>;

        if $i5 == $i4 goto label3;

        interfaceinvoke r1.<android.view.Menu: void setGroupVisible(int,boolean)>(2131558563, 1);

        interfaceinvoke r1.<android.view.Menu: void setGroupEnabled(int,boolean)>(2131558563, 1);

        interfaceinvoke r1.<android.view.Menu: void setGroupEnabled(int,boolean)>(2131558583, 1);

     label3:
        $r4 = virtualinvoke r0.<com.android.browser.Controller: com.android.browser.Tab getCurrentTab()>();

        virtualinvoke r0.<com.android.browser.Controller: void updateMenuState(com.android.browser.Tab,android.view.Menu)>($r4, r1);

     label4:
        $i3 = r0.<com.android.browser.Controller: int mMenuState>;

        r0.<com.android.browser.Controller: int mCurrentMenuState> = $i3;

        $r3 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        $z0 = interfaceinvoke $r3.<com.android.browser.UI: boolean onPrepareOptionsMenu(android.view.Menu)>(r1);

        return $z0;
    }

    public void updateMenuState(com.android.browser.Tab, android.view.Menu)
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab r1;
        android.view.Menu r2;
        boolean z0, z1, z2, z3, z4, z5, $z7, $z8, $z9, $z10, $z11, $z12;
        android.view.MenuItem r3, r4, r5, r6, r7, r11, r12, $r18;
        android.content.pm.PackageManager r8;
        android.content.Intent r9, $r17;
        android.content.pm.ResolveInfo r10;
        android.app.Activity $r16;
        com.android.browser.BrowserSettings $r22, $r24, $r33, $r35;
        com.android.browser.UI $r26;
        android.graphics.drawable.Drawable $r28;
        java.lang.CharSequence $r30;
        int $i0;
        java.lang.String $r31, $r32;
        android.webkit.WebView $r34;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: com.android.browser.Tab;

        r2 := @parameter1: android.view.Menu;

        z0 = 0;

        z1 = 0;

        z2 = 0;

        z3 = 0;

        z4 = 0;

        if r1 == null goto label03;

        z0 = virtualinvoke r1.<com.android.browser.Tab: boolean canGoBack()>();

        z1 = virtualinvoke r1.<com.android.browser.Tab: boolean canGoForward()>();

        $r33 = r0.<com.android.browser.Controller: com.android.browser.BrowserSettings mSettings>;

        $r32 = virtualinvoke $r33.<com.android.browser.BrowserSettings: java.lang.String getHomePage()>();

        $r31 = virtualinvoke r1.<com.android.browser.Tab: java.lang.String getUrl()>();

        z2 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>($r31);

        $r35 = r0.<com.android.browser.Controller: com.android.browser.BrowserSettings mSettings>;

        $r34 = virtualinvoke r1.<com.android.browser.Tab: android.webkit.WebView getWebView()>();

        z3 = virtualinvoke $r35.<com.android.browser.BrowserSettings: boolean hasDesktopUseragent(android.webkit.WebView)>($r34);

        $z11 = virtualinvoke r1.<com.android.browser.Tab: boolean isSnapshot()>();

        if $z11 != 0 goto label01;

        $z12 = 1;

        goto label02;

     label01:
        $z12 = 0;

     label02:
        z4 = $z12;

     label03:
        r3 = interfaceinvoke r2.<android.view.Menu: android.view.MenuItem findItem(int)>(2131558596);

        interfaceinvoke r3.<android.view.MenuItem: android.view.MenuItem setEnabled(boolean)>(z0);

        r4 = interfaceinvoke r2.<android.view.Menu: android.view.MenuItem findItem(int)>(2131558585);

        if z2 != 0 goto label04;

        $z10 = 1;

        goto label05;

     label04:
        $z10 = 0;

     label05:
        interfaceinvoke r4.<android.view.MenuItem: android.view.MenuItem setEnabled(boolean)>($z10);

        r5 = interfaceinvoke r2.<android.view.Menu: android.view.MenuItem findItem(int)>(2131558566);

        interfaceinvoke r5.<android.view.MenuItem: android.view.MenuItem setEnabled(boolean)>(z1);

        $z7 = virtualinvoke r0.<com.android.browser.Controller: boolean isInLoad()>();

        if $z7 == 0 goto label06;

        $i0 = 2131558599;

        goto label07;

     label06:
        $i0 = 2131558600;

     label07:
        r6 = interfaceinvoke r2.<android.view.Menu: android.view.MenuItem findItem(int)>($i0);

        r7 = interfaceinvoke r2.<android.view.Menu: android.view.MenuItem findItem(int)>(2131558565);

        if r6 == null goto label08;

        if r7 == null goto label08;

        $r30 = interfaceinvoke r6.<android.view.MenuItem: java.lang.CharSequence getTitle()>();

        interfaceinvoke r7.<android.view.MenuItem: android.view.MenuItem setTitle(java.lang.CharSequence)>($r30);

        $r28 = interfaceinvoke r6.<android.view.MenuItem: android.graphics.drawable.Drawable getIcon()>();

        interfaceinvoke r7.<android.view.MenuItem: android.view.MenuItem setIcon(android.graphics.drawable.Drawable)>($r28);

     label08:
        interfaceinvoke r2.<android.view.Menu: void setGroupVisible(int,boolean)>(2131558564, z4);

        $r16 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        r8 = virtualinvoke $r16.<android.app.Activity: android.content.pm.PackageManager getPackageManager()>();

        $r17 = new android.content.Intent;

        specialinvoke $r17.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.SEND");

        r9 = $r17;

        virtualinvoke r9.<android.content.Intent: android.content.Intent setType(java.lang.String)>("text/plain");

        r10 = virtualinvoke r8.<android.content.pm.PackageManager: android.content.pm.ResolveInfo resolveActivity(android.content.Intent,int)>(r9, 65536);

        $r18 = interfaceinvoke r2.<android.view.Menu: android.view.MenuItem findItem(int)>(2131558571);

        if r10 == null goto label09;

        $z9 = 1;

        goto label10;

     label09:
        $z9 = 0;

     label10:
        interfaceinvoke $r18.<android.view.MenuItem: android.view.MenuItem setVisible(boolean)>($z9);

        $r22 = r0.<com.android.browser.Controller: com.android.browser.BrowserSettings mSettings>;

        z5 = virtualinvoke $r22.<com.android.browser.BrowserSettings: boolean enableNavDump()>();

        r11 = interfaceinvoke r2.<android.view.Menu: android.view.MenuItem findItem(int)>(2131558582);

        interfaceinvoke r11.<android.view.MenuItem: android.view.MenuItem setVisible(boolean)>(z5);

        interfaceinvoke r11.<android.view.MenuItem: android.view.MenuItem setEnabled(boolean)>(z5);

        $r24 = r0.<com.android.browser.Controller: com.android.browser.BrowserSettings mSettings>;

        virtualinvoke $r24.<com.android.browser.BrowserSettings: boolean isDebugEnabled()>();

        r12 = interfaceinvoke r2.<android.view.Menu: android.view.MenuItem findItem(int)>(2131558573);

        interfaceinvoke r12.<android.view.MenuItem: android.view.MenuItem setChecked(boolean)>(z3);

        interfaceinvoke r2.<android.view.Menu: void setGroupVisible(int,boolean)>(2131558570, z4);

        if z4 != 0 goto label11;

        $z8 = 1;

        goto label12;

     label11:
        $z8 = 0;

     label12:
        interfaceinvoke r2.<android.view.Menu: void setGroupVisible(int,boolean)>(2131558574, $z8);

        interfaceinvoke r2.<android.view.Menu: void setGroupVisible(int,boolean)>(2131558576, 0);

        $r26 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        interfaceinvoke $r26.<com.android.browser.UI: void updateMenuState(com.android.browser.Tab,android.view.Menu)>(r1, r2);

        return;
    }

    public boolean onOptionsItemSelected(android.view.MenuItem)
    {
        com.android.browser.Controller r0;
        android.view.MenuItem r1;
        com.android.browser.Tab r2, r3, r4, $r10, $r12, $r16, $r27;
        int i0, i1, $i2, $i3, $i4;
        android.webkit.WebView $r5, $r9, $r18, $r19, $r25, $r29;
        boolean $z0, $z1, $z5;
        com.android.browser.UI $r6;
        com.android.browser.TabControl $r8, $r11, $r15, $r17, $r21, $r28;
        int[] $r13, $r14;
        com.android.browser.BrowserSettings $r20;
        com.android.browser.UI$ComboViews $r22, $r23, $r26;
        java.lang.String $r24;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: android.view.MenuItem;

        $r5 = virtualinvoke r0.<com.android.browser.Controller: android.webkit.WebView getCurrentTopWebView()>();

        if null != $r5 goto label01;

        return 0;

     label01:
        $z0 = r0.<com.android.browser.Controller: boolean mMenuIsDown>;

        if $z0 == 0 goto label02;

        r0.<com.android.browser.Controller: boolean mMenuIsDown> = 0;

     label02:
        $r6 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        $z1 = interfaceinvoke $r6.<com.android.browser.UI: boolean onOptionsItemSelected(android.view.MenuItem)>(r1);

        if $z1 == 0 goto label03;

        return 1;

     label03:
        $i2 = interfaceinvoke r1.<android.view.MenuItem: int getItemId()>();

        tableswitch($i2)
        {
            case 2131558565: goto label11;
            case 2131558566: goto label14;
            case 2131558567: goto label04;
            case 2131558568: goto label07;
            case 2131558569: goto label10;
            case 2131558570: goto label33;
            case 2131558571: goto label22;
            case 2131558572: goto label19;
            case 2131558573: goto label28;
            case 2131558574: goto label33;
            case 2131558575: goto label21;
            case 2131558576: goto label33;
            case 2131558577: goto label05;
            case 2131558578: goto label08;
            case 2131558579: goto label09;
            case 2131558580: goto label20;
            case 2131558581: goto label18;
            case 2131558582: goto label24;
            case 2131558583: goto label33;
            case 2131558584: goto label27;
            case 2131558585: goto label17;
            case 2131558586: goto label25;
            case 2131558587: goto label26;
            case 2131558588: goto label29;
            case 2131558589: goto label29;
            case 2131558590: goto label29;
            case 2131558591: goto label29;
            case 2131558592: goto label29;
            case 2131558593: goto label29;
            case 2131558594: goto label29;
            case 2131558595: goto label29;
            case 2131558596: goto label13;
            case 2131558597: goto label06;
            case 2131558598: goto label15;
            default: goto label33;
        };

     label04:
        virtualinvoke r0.<com.android.browser.Controller: com.android.browser.Tab openTabToHomePage()>();

        goto label34;

     label05:
        virtualinvoke r0.<com.android.browser.Controller: void closeOtherTabs()>();

        goto label34;

     label06:
        virtualinvoke r0.<com.android.browser.Controller: void editUrl()>();

        goto label34;

     label07:
        $r26 = <com.android.browser.UI$ComboViews: com.android.browser.UI$ComboViews Bookmarks>;

        virtualinvoke r0.<com.android.browser.Controller: void bookmarksOrHistoryPicker(com.android.browser.UI$ComboViews)>($r26);

        goto label34;

     label08:
        $r23 = <com.android.browser.UI$ComboViews: com.android.browser.UI$ComboViews History>;

        virtualinvoke r0.<com.android.browser.Controller: void bookmarksOrHistoryPicker(com.android.browser.UI$ComboViews)>($r23);

        goto label34;

     label09:
        $r22 = <com.android.browser.UI$ComboViews: com.android.browser.UI$ComboViews Snapshots>;

        virtualinvoke r0.<com.android.browser.Controller: void bookmarksOrHistoryPicker(com.android.browser.UI$ComboViews)>($r22);

        goto label34;

     label10:
        virtualinvoke r0.<com.android.browser.Controller: void bookmarkCurrentPage()>();

        goto label34;

     label11:
        $z5 = virtualinvoke r0.<com.android.browser.Controller: boolean isInLoad()>();

        if $z5 == 0 goto label12;

        virtualinvoke r0.<com.android.browser.Controller: void stopLoading()>();

        goto label34;

     label12:
        $r29 = virtualinvoke r0.<com.android.browser.Controller: android.webkit.WebView getCurrentTopWebView()>();

        virtualinvoke $r29.<android.webkit.WebView: void reload()>();

        goto label34;

     label13:
        $r12 = virtualinvoke r0.<com.android.browser.Controller: com.android.browser.Tab getCurrentTab()>();

        virtualinvoke $r12.<com.android.browser.Tab: void goBack()>();

        goto label34;

     label14:
        $r27 = virtualinvoke r0.<com.android.browser.Controller: com.android.browser.Tab getCurrentTab()>();

        virtualinvoke $r27.<com.android.browser.Tab: void goForward()>();

        goto label34;

     label15:
        $r8 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        $r9 = virtualinvoke $r8.<com.android.browser.TabControl: android.webkit.WebView getCurrentSubWindow()>();

        if $r9 == null goto label16;

        $r11 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        $r10 = virtualinvoke $r11.<com.android.browser.TabControl: com.android.browser.Tab getCurrentTab()>();

        virtualinvoke r0.<com.android.browser.Controller: void dismissSubWindow(com.android.browser.Tab)>($r10);

        goto label34;

     label16:
        virtualinvoke r0.<com.android.browser.Controller: void closeCurrentTab()>();

        goto label34;

     label17:
        $r21 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        r2 = virtualinvoke $r21.<com.android.browser.TabControl: com.android.browser.Tab getCurrentTab()>();

        $r20 = r0.<com.android.browser.Controller: com.android.browser.BrowserSettings mSettings>;

        $r24 = virtualinvoke $r20.<com.android.browser.BrowserSettings: java.lang.String getHomePage()>();

        virtualinvoke r0.<com.android.browser.Controller: void loadUrl(com.android.browser.Tab,java.lang.String)>(r2, $r24);

        goto label34;

     label18:
        virtualinvoke r0.<com.android.browser.Controller: void openPreferences()>();

        goto label34;

     label19:
        virtualinvoke r0.<com.android.browser.Controller: void findOnPage()>();

        goto label34;

     label20:
        virtualinvoke r0.<com.android.browser.Controller: void showPageInfo()>();

        goto label34;

     label21:
        specialinvoke r0.<com.android.browser.Controller: void goLive()>();

        return 1;

     label22:
        $r28 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        r3 = virtualinvoke $r28.<com.android.browser.TabControl: com.android.browser.Tab getCurrentTab()>();

        if null != r3 goto label23;

        return 0;

     label23:
        specialinvoke r0.<com.android.browser.Controller: void shareCurrentPage(com.android.browser.Tab)>(r3);

        goto label34;

     label24:
        $r25 = virtualinvoke r0.<com.android.browser.Controller: android.webkit.WebView getCurrentTopWebView()>();

        virtualinvoke $r25.<android.webkit.WebView: void debugDump()>();

        goto label34;

     label25:
        $r19 = virtualinvoke r0.<com.android.browser.Controller: android.webkit.WebView getCurrentTopWebView()>();

        virtualinvoke $r19.<android.webkit.WebView: boolean zoomIn()>();

        goto label34;

     label26:
        $r18 = virtualinvoke r0.<com.android.browser.Controller: android.webkit.WebView getCurrentTopWebView()>();

        virtualinvoke $r18.<android.webkit.WebView: boolean zoomOut()>();

        goto label34;

     label27:
        virtualinvoke r0.<com.android.browser.Controller: void viewDownloads()>();

        goto label34;

     label28:
        virtualinvoke r0.<com.android.browser.Controller: void toggleUserAgent()>();

        goto label34;

     label29:
        i0 = interfaceinvoke r1.<android.view.MenuItem: int getItemId()>();

        i1 = 0;

     label30:
        $r13 = <com.android.browser.Controller: int[] WINDOW_SHORTCUT_ID_ARRAY>;

        $i3 = lengthof $r13;

        if i1 >= $i3 goto label32;

        $r14 = <com.android.browser.Controller: int[] WINDOW_SHORTCUT_ID_ARRAY>;

        $i4 = $r14[i1];

        if $i4 != i0 goto label31;

        $r15 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        r4 = virtualinvoke $r15.<com.android.browser.TabControl: com.android.browser.Tab getTab(int)>(i1);

        if r4 == null goto label32;

        $r17 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        $r16 = virtualinvoke $r17.<com.android.browser.TabControl: com.android.browser.Tab getCurrentTab()>();

        if r4 == $r16 goto label32;

        virtualinvoke r0.<com.android.browser.Controller: boolean switchToTab(com.android.browser.Tab)>(r4);

        goto label32;

     label31:
        i1 = i1 + 1;

        goto label30;

     label32:
        goto label34;

     label33:
        return 0;

     label34:
        return 1;
    }

    public void toggleUserAgent()
    {
        com.android.browser.Controller r0;
        android.webkit.WebView r1;
        com.android.browser.BrowserSettings $r2;
        java.lang.String $r3;

        r0 := @this: com.android.browser.Controller;

        r1 = virtualinvoke r0.<com.android.browser.Controller: android.webkit.WebView getCurrentWebView()>();

        $r2 = r0.<com.android.browser.Controller: com.android.browser.BrowserSettings mSettings>;

        virtualinvoke $r2.<com.android.browser.BrowserSettings: void toggleDesktopUseragent(android.webkit.WebView)>(r1);

        $r3 = virtualinvoke r1.<android.webkit.WebView: java.lang.String getOriginalUrl()>();

        virtualinvoke r1.<android.webkit.WebView: void loadUrl(java.lang.String)>($r3);

        return;
    }

    public void findOnPage()
    {
        com.android.browser.Controller r0;
        android.webkit.WebView $r1;

        r0 := @this: com.android.browser.Controller;

        $r1 = virtualinvoke r0.<com.android.browser.Controller: android.webkit.WebView getCurrentTopWebView()>();

        virtualinvoke $r1.<android.webkit.WebView: boolean showFindDialog(java.lang.String,boolean)>(null, 1);

        return;
    }

    public void openPreferences()
    {
        com.android.browser.Controller r0;
        android.content.Intent r1, $r2;
        android.app.Activity $r3, $r7;
        android.webkit.WebView $r4;
        java.lang.String $r5;

        r0 := @this: com.android.browser.Controller;

        $r2 = new android.content.Intent;

        $r3 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        specialinvoke $r2.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r3, class "com/android/browser/BrowserPreferencesPage");

        r1 = $r2;

        $r4 = virtualinvoke r0.<com.android.browser.Controller: android.webkit.WebView getCurrentTopWebView()>();

        $r5 = virtualinvoke $r4.<android.webkit.WebView: java.lang.String getUrl()>();

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("currentPage", $r5);

        $r7 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        virtualinvoke $r7.<android.app.Activity: void startActivityForResult(android.content.Intent,int)>(r1, 3);

        return;
    }

    public void bookmarkCurrentPage()
    {
        com.android.browser.Controller r0;
        android.content.Intent r1;
        android.app.Activity $r2;

        r0 := @this: com.android.browser.Controller;

        r1 = virtualinvoke r0.<com.android.browser.Controller: android.content.Intent createBookmarkCurrentPageIntent(boolean)>(0);

        if r1 == null goto label1;

        $r2 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        virtualinvoke $r2.<android.app.Activity: void startActivity(android.content.Intent)>(r1);

     label1:
        return;
    }

    private void goLive()
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab r1;
        java.lang.String $r2;

        r0 := @this: com.android.browser.Controller;

        r1 = virtualinvoke r0.<com.android.browser.Controller: com.android.browser.Tab getCurrentTab()>();

        $r2 = virtualinvoke r1.<com.android.browser.Tab: java.lang.String getUrl()>();

        virtualinvoke r1.<com.android.browser.Tab: void loadUrl(java.lang.String,java.util.Map)>($r2, null);

        return;
    }

    public void showPageInfo()
    {
        com.android.browser.Controller r0;
        com.android.browser.TabControl $r1;
        com.android.browser.PageDialogsHandler $r2;
        com.android.browser.Tab $r3;

        r0 := @this: com.android.browser.Controller;

        $r2 = r0.<com.android.browser.Controller: com.android.browser.PageDialogsHandler mPageDialogsHandler>;

        $r1 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        $r3 = virtualinvoke $r1.<com.android.browser.TabControl: com.android.browser.Tab getCurrentTab()>();

        virtualinvoke $r2.<com.android.browser.PageDialogsHandler: void showPageInfo(com.android.browser.Tab,boolean,java.lang.String)>($r3, 0, null);

        return;
    }

    public boolean onContextItemSelected(android.view.MenuItem)
    {
        com.android.browser.Controller r0;
        android.view.MenuItem r1;
        int i0, $i1;
        boolean z0;
        android.webkit.WebView r2;
        java.util.HashMap r3, $r5;
        android.os.Message r4;
        android.os.Handler $r7;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: android.view.MenuItem;

        $i1 = interfaceinvoke r1.<android.view.MenuItem: int getGroupId()>();

        if $i1 != 2131558622 goto label1;

        return 0;

     label1:
        i0 = interfaceinvoke r1.<android.view.MenuItem: int getItemId()>();

        z0 = 1;

        lookupswitch(i0)
        {
            case 2131558433: goto label2;
            case 2131558613: goto label2;
            case 2131558614: goto label2;
            default: goto label4;
        };

     label2:
        r2 = virtualinvoke r0.<com.android.browser.Controller: android.webkit.WebView getCurrentTopWebView()>();

        if null != r2 goto label3;

        z0 = 0;

        goto label5;

     label3:
        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r3 = $r5;

        virtualinvoke r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("webview", r2);

        $r7 = r0.<com.android.browser.Controller: android.os.Handler mHandler>;

        r4 = virtualinvoke $r7.<android.os.Handler: android.os.Message obtainMessage(int,int,int,java.lang.Object)>(102, i0, 0, r3);

        virtualinvoke r2.<android.webkit.WebView: void requestFocusNodeHref(android.os.Message)>(r4);

        goto label5;

     label4:
        z0 = virtualinvoke r0.<com.android.browser.Controller: boolean onOptionsItemSelected(android.view.MenuItem)>(r1);

     label5:
        return z0;
    }

    public void openContextMenu(android.view.View)
    {
        com.android.browser.Controller r0;
        android.view.View r1;
        android.app.Activity $r2;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        virtualinvoke $r2.<android.app.Activity: void openContextMenu(android.view.View)>(r1);

        return;
    }

    public void openOptionsMenu()
    {
        com.android.browser.Controller r0;
        android.app.Activity $r1;

        r0 := @this: com.android.browser.Controller;

        $r1 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        virtualinvoke $r1.<android.app.Activity: void openOptionsMenu()>();

        return;
    }

    public boolean onMenuOpened(int, android.view.Menu)
    {
        com.android.browser.Controller r0;
        int i0;
        android.view.Menu r1;
        boolean $z0, $z1, $z2, $z3;
        com.android.browser.UI $r2, $r3, $r4;

        r0 := @this: com.android.browser.Controller;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.Menu;

        $z0 = r0.<com.android.browser.Controller: boolean mOptionsMenuOpen>;

        if $z0 == 0 goto label3;

        $z1 = r0.<com.android.browser.Controller: boolean mConfigChanged>;

        if $z1 == 0 goto label1;

        r0.<com.android.browser.Controller: boolean mConfigChanged> = 0;

        goto label4;

     label1:
        $z2 = r0.<com.android.browser.Controller: boolean mExtendedMenuOpen>;

        if $z2 != 0 goto label2;

        r0.<com.android.browser.Controller: boolean mExtendedMenuOpen> = 1;

        $r4 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        interfaceinvoke $r4.<com.android.browser.UI: void onExtendedMenuOpened()>();

        goto label4;

     label2:
        r0.<com.android.browser.Controller: boolean mExtendedMenuOpen> = 0;

        $r3 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        $z3 = virtualinvoke r0.<com.android.browser.Controller: boolean isInLoad()>();

        interfaceinvoke $r3.<com.android.browser.UI: void onExtendedMenuClosed(boolean)>($z3);

        goto label4;

     label3:
        r0.<com.android.browser.Controller: boolean mOptionsMenuOpen> = 1;

        r0.<com.android.browser.Controller: boolean mConfigChanged> = 0;

        r0.<com.android.browser.Controller: boolean mExtendedMenuOpen> = 0;

        $r2 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        interfaceinvoke $r2.<com.android.browser.UI: void onOptionsMenuOpened()>();

     label4:
        return 1;
    }

    public void onOptionsMenuClosed(android.view.Menu)
    {
        com.android.browser.Controller r0;
        android.view.Menu r1;
        com.android.browser.UI $r2;
        boolean $z0;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: android.view.Menu;

        r0.<com.android.browser.Controller: boolean mOptionsMenuOpen> = 0;

        $r2 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        $z0 = virtualinvoke r0.<com.android.browser.Controller: boolean isInLoad()>();

        interfaceinvoke $r2.<com.android.browser.UI: void onOptionsMenuClosed(boolean)>($z0);

        return;
    }

    public void onContextMenuClosed(android.view.Menu)
    {
        com.android.browser.Controller r0;
        android.view.Menu r1;
        com.android.browser.UI $r2;
        boolean $z0;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: android.view.Menu;

        $r2 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        $z0 = virtualinvoke r0.<com.android.browser.Controller: boolean isInLoad()>();

        interfaceinvoke $r2.<com.android.browser.UI: void onContextMenuClosed(android.view.Menu,boolean)>(r1, $z0);

        return;
    }

    public android.webkit.WebView getCurrentTopWebView()
    {
        com.android.browser.Controller r0;
        com.android.browser.TabControl $r1;
        android.webkit.WebView $r2;

        r0 := @this: com.android.browser.Controller;

        $r1 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        $r2 = virtualinvoke $r1.<com.android.browser.TabControl: android.webkit.WebView getCurrentTopWebView()>();

        return $r2;
    }

    public android.webkit.WebView getCurrentWebView()
    {
        com.android.browser.Controller r0;
        com.android.browser.TabControl $r1;
        android.webkit.WebView $r2;

        r0 := @this: com.android.browser.Controller;

        $r1 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        $r2 = virtualinvoke $r1.<com.android.browser.TabControl: android.webkit.WebView getCurrentWebView()>();

        return $r2;
    }

    void viewDownloads()
    {
        com.android.browser.Controller r0;
        android.content.Intent r1, $r2;
        android.app.Activity $r3;

        r0 := @this: com.android.browser.Controller;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.VIEW_DOWNLOADS");

        r1 = $r2;

        $r3 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        virtualinvoke $r3.<android.app.Activity: void startActivity(android.content.Intent)>(r1);

        return;
    }

    int getActionModeHeight()
    {
        com.android.browser.Controller r0;
        android.content.res.TypedArray r1;
        int i0;
        int[] $r2;
        android.app.Activity $r3;
        float $f0;

        r0 := @this: com.android.browser.Controller;

        $r3 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        $r2 = newarray (int)[1];

        $r2[0] = 16843499;

        r1 = virtualinvoke $r3.<android.app.Activity: android.content.res.TypedArray obtainStyledAttributes(int[])>($r2);

        $f0 = virtualinvoke r1.<android.content.res.TypedArray: float getDimension(int,float)>(0, 0.0F);

        i0 = (int) $f0;

        virtualinvoke r1.<android.content.res.TypedArray: void recycle()>();

        return i0;
    }

    public void onActionModeStarted(android.view.ActionMode)
    {
        com.android.browser.Controller r0;
        android.view.ActionMode r1;
        com.android.browser.UI $r2;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: android.view.ActionMode;

        $r2 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        interfaceinvoke $r2.<com.android.browser.UI: void onActionModeStarted(android.view.ActionMode)>(r1);

        r0.<com.android.browser.Controller: android.view.ActionMode mActionMode> = r1;

        return;
    }

    public boolean isInCustomActionMode()
    {
        com.android.browser.Controller r0;
        android.view.ActionMode $r1;
        boolean $z0;

        r0 := @this: com.android.browser.Controller;

        $r1 = r0.<com.android.browser.Controller: android.view.ActionMode mActionMode>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void endActionMode()
    {
        com.android.browser.Controller r0;
        android.view.ActionMode $r1, $r2;

        r0 := @this: com.android.browser.Controller;

        $r1 = r0.<com.android.browser.Controller: android.view.ActionMode mActionMode>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.browser.Controller: android.view.ActionMode mActionMode>;

        virtualinvoke $r2.<android.view.ActionMode: void finish()>();

     label1:
        return;
    }

    public void onActionModeFinished(android.view.ActionMode)
    {
        com.android.browser.Controller r0;
        android.view.ActionMode r1;
        boolean $z0, $z1;
        com.android.browser.UI $r2;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: android.view.ActionMode;

        $z0 = virtualinvoke r0.<com.android.browser.Controller: boolean isInCustomActionMode()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        $z1 = virtualinvoke r0.<com.android.browser.Controller: boolean isInLoad()>();

        interfaceinvoke $r2.<com.android.browser.UI: void onActionModeFinished(boolean)>($z1);

        r0.<com.android.browser.Controller: android.view.ActionMode mActionMode> = null;

        return;
    }

    boolean isInLoad()
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab r1;
        boolean $z0, $z1;

        r0 := @this: com.android.browser.Controller;

        r1 = virtualinvoke r0.<com.android.browser.Controller: com.android.browser.Tab getCurrentTab()>();

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<com.android.browser.Tab: boolean inPageLoad()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public android.content.Intent createBookmarkCurrentPageIntent(boolean)
    {
        com.android.browser.Controller r0;
        boolean z0;
        android.webkit.WebView r1;
        android.content.Intent r2, $r5;
        java.lang.String r3, $r7, $r9, $r20;
        android.webkit.WebSettings r4;
        android.app.Activity $r6, $r11, $r12;
        int $i0, $i1;
        android.graphics.Bitmap $r13, $r16;

        r0 := @this: com.android.browser.Controller;

        z0 := @parameter0: boolean;

        r1 = virtualinvoke r0.<com.android.browser.Controller: android.webkit.WebView getCurrentTopWebView()>();

        if r1 != null goto label1;

        return null;

     label1:
        $r5 = new android.content.Intent;

        $r6 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        specialinvoke $r5.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>($r6, class "com/android/browser/AddBookmarkPage");

        r2 = $r5;

        $r7 = virtualinvoke r1.<android.webkit.WebView: java.lang.String getUrl()>();

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("url", $r7);

        $r9 = virtualinvoke r1.<android.webkit.WebView: java.lang.String getTitle()>();

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("title", $r9);

        r3 = virtualinvoke r1.<android.webkit.WebView: java.lang.String getTouchIconUrl()>();

        if r3 == null goto label2;

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("touch_icon_url", r3);

        r4 = virtualinvoke r1.<android.webkit.WebView: android.webkit.WebSettings getSettings()>();

        if r4 == null goto label2;

        $r20 = virtualinvoke r4.<android.webkit.WebSettings: java.lang.String getUserAgentString()>();

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("user_agent", $r20);

     label2:
        $r11 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        $i0 = staticinvoke <com.android.browser.Controller: int getDesiredThumbnailWidth(android.content.Context)>($r11);

        $r12 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        $i1 = staticinvoke <com.android.browser.Controller: int getDesiredThumbnailHeight(android.content.Context)>($r12);

        $r13 = staticinvoke <com.android.browser.Controller: android.graphics.Bitmap createScreenshot(android.webkit.WebView,int,int)>(r1, $i0, $i1);

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("thumbnail", $r13);

        $r16 = virtualinvoke r1.<android.webkit.WebView: android.graphics.Bitmap getFavicon()>();

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("favicon", $r16);

        if z0 == 0 goto label3;

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("check_for_dupe", 1);

     label3:
        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("gravity", 53);

        return r2;
    }

    public void showFileChooser(android.webkit.ValueCallback, android.webkit.WebChromeClient$FileChooserParams)
    {
        com.android.browser.Controller r0;
        android.webkit.ValueCallback r1;
        android.webkit.WebChromeClient$FileChooserParams r2;
        com.android.browser.UploadHandler $r3, $r4;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: android.webkit.ValueCallback;

        r2 := @parameter1: android.webkit.WebChromeClient$FileChooserParams;

        $r3 = new com.android.browser.UploadHandler;

        specialinvoke $r3.<com.android.browser.UploadHandler: void <init>(com.android.browser.Controller)>(r0);

        r0.<com.android.browser.Controller: com.android.browser.UploadHandler mUploadHandler> = $r3;

        $r4 = r0.<com.android.browser.Controller: com.android.browser.UploadHandler mUploadHandler>;

        virtualinvoke $r4.<com.android.browser.UploadHandler: void openFileChooser(android.webkit.ValueCallback,android.webkit.WebChromeClient$FileChooserParams)>(r1, r2);

        return;
    }

    static int getDesiredThumbnailWidth(android.content.Context)
    {
        android.content.Context r0;
        android.content.res.Resources $r1;
        int $i0;

        r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r1.<android.content.res.Resources: int getDimensionPixelOffset(int)>(2131427335);

        return $i0;
    }

    static int getDesiredThumbnailHeight(android.content.Context)
    {
        android.content.Context r0;
        android.content.res.Resources $r1;
        int $i0;

        r0 := @parameter0: android.content.Context;

        $r1 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r1.<android.content.res.Resources: int getDimensionPixelOffset(int)>(2131427336);

        return $i0;
    }

    static android.graphics.Bitmap createScreenshot(android.webkit.WebView, int, int)
    {
        android.webkit.WebView r0;
        int i0, i1, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11;
        android.graphics.Canvas r1, $r7;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6;
        android.graphics.Bitmap $r2, $r3, $r5, $r6, $r8, $r11, $r12, $r13, r14;
        android.graphics.Bitmap$Config $r4;
        boolean $z0, $z1;
        com.android.browser.BrowserWebView $r9, $r10;

        r0 := @parameter0: android.webkit.WebView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        if r0 == null goto label1;

        $i7 = virtualinvoke r0.<android.webkit.WebView: int getContentHeight()>();

        if $i7 == 0 goto label1;

        $i8 = virtualinvoke r0.<android.webkit.WebView: int getContentWidth()>();

        if $i8 != 0 goto label2;

     label1:
        return null;

     label2:
        i3 = i0 * 2;

        i4 = i1 * 2;

        $r2 = <com.android.browser.Controller: android.graphics.Bitmap sThumbnailBitmap>;

        if $r2 == null goto label3;

        $r13 = <com.android.browser.Controller: android.graphics.Bitmap sThumbnailBitmap>;

        $i10 = virtualinvoke $r13.<android.graphics.Bitmap: int getWidth()>();

        if $i10 != i3 goto label3;

        $r11 = <com.android.browser.Controller: android.graphics.Bitmap sThumbnailBitmap>;

        $i11 = virtualinvoke $r11.<android.graphics.Bitmap: int getHeight()>();

        if $i11 == i4 goto label5;

     label3:
        $r3 = <com.android.browser.Controller: android.graphics.Bitmap sThumbnailBitmap>;

        if $r3 == null goto label4;

        $r12 = <com.android.browser.Controller: android.graphics.Bitmap sThumbnailBitmap>;

        virtualinvoke $r12.<android.graphics.Bitmap: void recycle()>();

        <com.android.browser.Controller: android.graphics.Bitmap sThumbnailBitmap> = null;

     label4:
        $r4 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config RGB_565>;

        $r5 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i3, i4, $r4);

        <com.android.browser.Controller: android.graphics.Bitmap sThumbnailBitmap> = $r5;

     label5:
        $r7 = new android.graphics.Canvas;

        $r6 = <com.android.browser.Controller: android.graphics.Bitmap sThumbnailBitmap>;

        specialinvoke $r7.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>($r6);

        r1 = $r7;

        i5 = virtualinvoke r0.<android.webkit.WebView: int getContentWidth()>();

        $f1 = (float) i3;

        $f3 = virtualinvoke r0.<android.webkit.WebView: float getScale()>();

        $f2 = (float) i5;

        $f4 = $f3 * $f2;

        f0 = $f1 / $f4;

        $z0 = r0 instanceof com.android.browser.BrowserWebView;

        if $z0 == 0 goto label6;

        $r10 = (com.android.browser.BrowserWebView) r0;

        $i9 = virtualinvoke $r10.<com.android.browser.BrowserWebView: int getTitleHeight()>();

        i6 = neg $i9;

        $f6 = (float) i6;

        $f5 = $f6 * f0;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>(0.0F, $f5);

     label6:
        virtualinvoke r1.<android.graphics.Canvas: void scale(float,float)>(f0, f0);

        $z1 = r0 instanceof com.android.browser.BrowserWebView;

        if $z1 == 0 goto label7;

        $r9 = (com.android.browser.BrowserWebView) r0;

        virtualinvoke $r9.<com.android.browser.BrowserWebView: void drawContent(android.graphics.Canvas)>(r1);

        goto label8;

     label7:
        virtualinvoke r0.<android.webkit.WebView: void draw(android.graphics.Canvas)>(r1);

     label8:
        $r8 = <com.android.browser.Controller: android.graphics.Bitmap sThumbnailBitmap>;

        r14 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createScaledBitmap(android.graphics.Bitmap,int,int,boolean)>($r8, i0, i1, 1);

        virtualinvoke r1.<android.graphics.Canvas: void setBitmap(android.graphics.Bitmap)>(null);

        return r14;
    }

    private void updateScreenshot(com.android.browser.Tab)
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab r1;
        android.webkit.WebView r2;
        java.lang.String r3, r4;
        android.graphics.Bitmap r5;
        android.content.ContentResolver r6;
        boolean $z0, $z1, $z2;
        java.util.regex.Pattern $r7;
        java.util.regex.Matcher $r8;
        android.app.Activity $r9, $r10, $r11;
        int $i0, $i1;
        com.android.browser.Controller$10 $r12;
        java.lang.Void[] $r14;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: com.android.browser.Tab;

        r2 = virtualinvoke r1.<com.android.browser.Tab: android.webkit.WebView getWebView()>();

        if r2 != null goto label1;

        return;

     label1:
        r3 = virtualinvoke r1.<com.android.browser.Tab: java.lang.String getUrl()>();

        r4 = virtualinvoke r2.<android.webkit.WebView: java.lang.String getOriginalUrl()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z0 == 0 goto label2;

        return;

     label2:
        $r7 = <android.util.Patterns: java.util.regex.Pattern WEB_URL>;

        $r8 = virtualinvoke $r7.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r3);

        $z1 = virtualinvoke $r8.<java.util.regex.Matcher: boolean matches()>();

        if $z1 != 0 goto label3;

        $z2 = virtualinvoke r1.<com.android.browser.Tab: boolean isBookmarkedSite()>();

        if $z2 != 0 goto label3;

        return;

     label3:
        $r9 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        $i0 = staticinvoke <com.android.browser.Controller: int getDesiredThumbnailWidth(android.content.Context)>($r9);

        $r10 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        $i1 = staticinvoke <com.android.browser.Controller: int getDesiredThumbnailHeight(android.content.Context)>($r10);

        r5 = staticinvoke <com.android.browser.Controller: android.graphics.Bitmap createScreenshot(android.webkit.WebView,int,int)>(r2, $i0, $i1);

        if r5 != null goto label4;

        return;

     label4:
        $r11 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        r6 = virtualinvoke $r11.<android.app.Activity: android.content.ContentResolver getContentResolver()>();

        $r12 = new com.android.browser.Controller$10;

        specialinvoke $r12.<com.android.browser.Controller$10: void <init>(com.android.browser.Controller,android.content.ContentResolver,java.lang.String,java.lang.String,android.graphics.Bitmap)>(r0, r6, r4, r3, r5);

        $r14 = newarray (java.lang.Void)[0];

        virtualinvoke $r12.<com.android.browser.Controller$10: android.os.AsyncTask execute(java.lang.Object[])>($r14);

        return;
    }

    protected void addTab(com.android.browser.Tab)
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab r1;
        com.android.browser.UI $r2;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: com.android.browser.Tab;

        $r2 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        interfaceinvoke $r2.<com.android.browser.UI: void addTab(com.android.browser.Tab)>(r1);

        return;
    }

    protected void removeTab(com.android.browser.Tab)
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab r1;
        com.android.browser.UI $r2;
        com.android.browser.TabControl $r3;
        com.android.browser.CrashRecoveryHandler $r4;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: com.android.browser.Tab;

        $r2 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        interfaceinvoke $r2.<com.android.browser.UI: void removeTab(com.android.browser.Tab)>(r1);

        $r3 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        virtualinvoke $r3.<com.android.browser.TabControl: boolean removeTab(com.android.browser.Tab)>(r1);

        $r4 = r0.<com.android.browser.Controller: com.android.browser.CrashRecoveryHandler mCrashRecoveryHandler>;

        virtualinvoke $r4.<com.android.browser.CrashRecoveryHandler: void backupState()>();

        return;
    }

    public void setActiveTab(com.android.browser.Tab)
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab r1;
        com.android.browser.TabControl $r2;
        com.android.browser.UI $r3;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: com.android.browser.Tab;

        if r1 == null goto label1;

        $r2 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        virtualinvoke $r2.<com.android.browser.TabControl: boolean setCurrentTab(com.android.browser.Tab)>(r1);

        $r3 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        interfaceinvoke $r3.<com.android.browser.UI: void setActiveTab(com.android.browser.Tab)>(r1);

     label1:
        return;
    }

    protected void closeEmptyTab()
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab r1;
        com.android.browser.TabControl $r2;
        android.webkit.WebView $r3;
        android.webkit.WebBackForwardList $r4;
        int $i0;

        r0 := @this: com.android.browser.Controller;

        $r2 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        r1 = virtualinvoke $r2.<com.android.browser.TabControl: com.android.browser.Tab getCurrentTab()>();

        if r1 == null goto label1;

        $r3 = virtualinvoke r1.<com.android.browser.Tab: android.webkit.WebView getWebView()>();

        $r4 = virtualinvoke $r3.<android.webkit.WebView: android.webkit.WebBackForwardList copyBackForwardList()>();

        $i0 = virtualinvoke $r4.<android.webkit.WebBackForwardList: int getSize()>();

        if $i0 != 0 goto label1;

        virtualinvoke r0.<com.android.browser.Controller: void closeCurrentTab()>();

     label1:
        return;
    }

    protected void reuseTab(com.android.browser.Tab, com.android.browser.IntentHandler$UrlData)
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab r1, $r7;
        com.android.browser.IntentHandler$UrlData r2;
        com.android.browser.UI $r3, $r5;
        com.android.browser.TabControl $r4, $r6;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: com.android.browser.Tab;

        r2 := @parameter1: com.android.browser.IntentHandler$UrlData;

        virtualinvoke r0.<com.android.browser.Controller: void dismissSubWindow(com.android.browser.Tab)>(r1);

        $r3 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        interfaceinvoke $r3.<com.android.browser.UI: void detachTab(com.android.browser.Tab)>(r1);

        $r4 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        virtualinvoke $r4.<com.android.browser.TabControl: void recreateWebView(com.android.browser.Tab)>(r1);

        $r5 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        interfaceinvoke $r5.<com.android.browser.UI: void attachTab(com.android.browser.Tab)>(r1);

        $r6 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        $r7 = virtualinvoke $r6.<com.android.browser.TabControl: com.android.browser.Tab getCurrentTab()>();

        if $r7 == r1 goto label1;

        virtualinvoke r0.<com.android.browser.Controller: boolean switchToTab(com.android.browser.Tab)>(r1);

        virtualinvoke r0.<com.android.browser.Controller: void loadUrlDataIn(com.android.browser.Tab,com.android.browser.IntentHandler$UrlData)>(r1, r2);

        goto label2;

     label1:
        virtualinvoke r0.<com.android.browser.Controller: void setActiveTab(com.android.browser.Tab)>(r1);

        virtualinvoke r0.<com.android.browser.Controller: void loadUrlDataIn(com.android.browser.Tab,com.android.browser.IntentHandler$UrlData)>(r1, r2);

     label2:
        return;
    }

    public void dismissSubWindow(com.android.browser.Tab)
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab r1;
        android.webkit.WebView r2;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: com.android.browser.Tab;

        virtualinvoke r0.<com.android.browser.Controller: void removeSubWindow(com.android.browser.Tab)>(r1);

        virtualinvoke r1.<com.android.browser.Tab: void dismissSubWindow()>();

        r2 = virtualinvoke r0.<com.android.browser.Controller: android.webkit.WebView getCurrentTopWebView()>();

        if r2 == null goto label1;

        virtualinvoke r2.<android.webkit.WebView: boolean requestFocus()>();

     label1:
        return;
    }

    public void removeSubWindow(com.android.browser.Tab)
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab r1;
        android.webkit.WebView $r2;
        com.android.browser.UI $r3;
        android.view.View $r4;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: com.android.browser.Tab;

        $r2 = virtualinvoke r1.<com.android.browser.Tab: android.webkit.WebView getSubWebView()>();

        if $r2 == null goto label1;

        $r3 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        $r4 = virtualinvoke r1.<com.android.browser.Tab: android.view.View getSubViewContainer()>();

        interfaceinvoke $r3.<com.android.browser.UI: void removeSubWindow(android.view.View)>($r4);

     label1:
        return;
    }

    public void attachSubWindow(com.android.browser.Tab)
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab r1;
        android.webkit.WebView $r2, $r5;
        com.android.browser.UI $r3;
        android.view.View $r4;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: com.android.browser.Tab;

        $r2 = virtualinvoke r1.<com.android.browser.Tab: android.webkit.WebView getSubWebView()>();

        if $r2 == null goto label1;

        $r3 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        $r4 = virtualinvoke r1.<com.android.browser.Tab: android.view.View getSubViewContainer()>();

        interfaceinvoke $r3.<com.android.browser.UI: void attachSubWindow(android.view.View)>($r4);

        $r5 = virtualinvoke r0.<com.android.browser.Controller: android.webkit.WebView getCurrentTopWebView()>();

        virtualinvoke $r5.<android.webkit.WebView: boolean requestFocus()>();

     label1:
        return;
    }

    private com.android.browser.Tab showPreloadedTab(com.android.browser.IntentHandler$UrlData)
    {
        com.android.browser.Controller r0;
        com.android.browser.IntentHandler$UrlData r1;
        com.android.browser.PreloadedTabControl r2;
        java.lang.String r3, $r10;
        com.android.browser.Tab r4, $r8, r11;
        boolean $z0, $z1, $z2;
        com.android.browser.TabControl $r5, $r6, $r7;
        java.util.Map $r9;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: com.android.browser.IntentHandler$UrlData;

        $z0 = virtualinvoke r1.<com.android.browser.IntentHandler$UrlData: boolean isPreloaded()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        r2 = virtualinvoke r1.<com.android.browser.IntentHandler$UrlData: com.android.browser.PreloadedTabControl getPreloadedTab()>();

        r3 = virtualinvoke r1.<com.android.browser.IntentHandler$UrlData: java.lang.String getSearchBoxQueryToSubmit()>();

        if r3 == null goto label2;

        $r10 = r1.<com.android.browser.IntentHandler$UrlData: java.lang.String mUrl>;

        $r9 = r1.<com.android.browser.IntentHandler$UrlData: java.util.Map mHeaders>;

        $z2 = virtualinvoke r2.<com.android.browser.PreloadedTabControl: boolean searchBoxSubmit(java.lang.String,java.lang.String,java.util.Map)>(r3, $r10, $r9);

        if $z2 != 0 goto label2;

        virtualinvoke r2.<com.android.browser.PreloadedTabControl: void destroy()>();

        return null;

     label2:
        $r5 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        $z1 = virtualinvoke $r5.<com.android.browser.TabControl: boolean canCreateNewTab()>();

        if $z1 != 0 goto label3;

        $r7 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        $r8 = virtualinvoke r0.<com.android.browser.Controller: com.android.browser.Tab getCurrentTab()>();

        r4 = virtualinvoke $r7.<com.android.browser.TabControl: com.android.browser.Tab getLeastUsedTab(com.android.browser.Tab)>($r8);

        if r4 == null goto label3;

        virtualinvoke r0.<com.android.browser.Controller: void closeTab(com.android.browser.Tab)>(r4);

     label3:
        r11 = virtualinvoke r2.<com.android.browser.PreloadedTabControl: com.android.browser.Tab getTab()>();

        virtualinvoke r11.<com.android.browser.Tab: void refreshIdAfterPreload()>();

        $r6 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        virtualinvoke $r6.<com.android.browser.TabControl: void addPreloadedTab(com.android.browser.Tab)>(r11);

        virtualinvoke r0.<com.android.browser.Controller: void addTab(com.android.browser.Tab)>(r11);

        virtualinvoke r0.<com.android.browser.Controller: void setActiveTab(com.android.browser.Tab)>(r11);

        return r11;
    }

    public com.android.browser.Tab openTab(com.android.browser.IntentHandler$UrlData)
    {
        com.android.browser.Controller r0;
        com.android.browser.IntentHandler$UrlData r1;
        com.android.browser.Tab r2;
        boolean $z0;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: com.android.browser.IntentHandler$UrlData;

        r2 = specialinvoke r0.<com.android.browser.Controller: com.android.browser.Tab showPreloadedTab(com.android.browser.IntentHandler$UrlData)>(r1);

        if r2 != null goto label1;

        r2 = specialinvoke r0.<com.android.browser.Controller: com.android.browser.Tab createNewTab(boolean,boolean,boolean)>(0, 1, 1);

        if r2 == null goto label1;

        $z0 = virtualinvoke r1.<com.android.browser.IntentHandler$UrlData: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<com.android.browser.Controller: void loadUrlDataIn(com.android.browser.Tab,com.android.browser.IntentHandler$UrlData)>(r2, r1);

     label1:
        return r2;
    }

    public com.android.browser.Tab openTabToHomePage()
    {
        com.android.browser.Controller r0;
        com.android.browser.BrowserSettings $r1;
        java.lang.String $r2;
        com.android.browser.Tab $r3;

        r0 := @this: com.android.browser.Controller;

        $r1 = r0.<com.android.browser.Controller: com.android.browser.BrowserSettings mSettings>;

        $r2 = virtualinvoke $r1.<com.android.browser.BrowserSettings: java.lang.String getHomePage()>();

        $r3 = virtualinvoke r0.<com.android.browser.Controller: com.android.browser.Tab openTab(java.lang.String,boolean,boolean,boolean)>($r2, 0, 1, 0);

        return $r3;
    }

    public com.android.browser.Tab openIncognitoTab()
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab $r1;

        r0 := @this: com.android.browser.Controller;

        $r1 = virtualinvoke r0.<com.android.browser.Controller: com.android.browser.Tab openTab(java.lang.String,boolean,boolean,boolean)>("browser:incognito", 1, 1, 0);

        return $r1;
    }

    public com.android.browser.Tab openTab(java.lang.String, boolean, boolean, boolean)
    {
        com.android.browser.Controller r0;
        java.lang.String r1;
        boolean z0, z1, z2;
        com.android.browser.Tab $r2;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        z2 := @parameter3: boolean;

        $r2 = virtualinvoke r0.<com.android.browser.Controller: com.android.browser.Tab openTab(java.lang.String,boolean,boolean,boolean,com.android.browser.Tab)>(r1, z0, z1, z2, null);

        return $r2;
    }

    public com.android.browser.Tab openTab(java.lang.String, com.android.browser.Tab, boolean, boolean)
    {
        com.android.browser.Controller r0;
        java.lang.String r1;
        com.android.browser.Tab r2, $r3;
        boolean z0, z1, $z2, $z3;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.android.browser.Tab;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        if r2 == null goto label1;

        $z2 = virtualinvoke r2.<com.android.browser.Tab: boolean isPrivateBrowsingEnabled()>();

        if $z2 == 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        $r3 = virtualinvoke r0.<com.android.browser.Controller: com.android.browser.Tab openTab(java.lang.String,boolean,boolean,boolean,com.android.browser.Tab)>(r1, $z3, z0, z1, r2);

        return $r3;
    }

    public com.android.browser.Tab openTab(java.lang.String, boolean, boolean, boolean, com.android.browser.Tab)
    {
        com.android.browser.Controller r0;
        java.lang.String r1;
        boolean z0, z1, z2;
        com.android.browser.Tab r2, r3;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        z2 := @parameter3: boolean;

        r2 := @parameter4: com.android.browser.Tab;

        r3 = specialinvoke r0.<com.android.browser.Controller: com.android.browser.Tab createNewTab(boolean,boolean,boolean)>(z0, z1, z2);

        if r3 == null goto label2;

        if r2 == null goto label1;

        if r2 == r3 goto label1;

        virtualinvoke r2.<com.android.browser.Tab: void addChildTab(com.android.browser.Tab)>(r3);

     label1:
        if r1 == null goto label2;

        virtualinvoke r0.<com.android.browser.Controller: void loadUrl(com.android.browser.Tab,java.lang.String)>(r3, r1);

     label2:
        return r3;
    }

    private com.android.browser.Tab createNewTab(boolean, boolean, boolean)
    {
        com.android.browser.Controller r0;
        boolean z0, z1, z2, $z3;
        com.android.browser.Tab r1;
        com.android.browser.TabControl $r2, $r4, $r5;
        com.android.browser.UI $r3;

        r0 := @this: com.android.browser.Controller;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        z2 := @parameter2: boolean;

        r1 = null;

        $r2 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        $z3 = virtualinvoke $r2.<com.android.browser.TabControl: boolean canCreateNewTab()>();

        if $z3 == 0 goto label1;

        $r5 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        r1 = virtualinvoke $r5.<com.android.browser.TabControl: com.android.browser.Tab createNewTab(boolean)>(z0);

        virtualinvoke r0.<com.android.browser.Controller: void addTab(com.android.browser.Tab)>(r1);

        if z1 == 0 goto label3;

        virtualinvoke r0.<com.android.browser.Controller: void setActiveTab(com.android.browser.Tab)>(r1);

        goto label3;

     label1:
        if z2 == 0 goto label2;

        $r4 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        r1 = virtualinvoke $r4.<com.android.browser.TabControl: com.android.browser.Tab getCurrentTab()>();

        virtualinvoke r0.<com.android.browser.Controller: void reuseTab(com.android.browser.Tab,com.android.browser.IntentHandler$UrlData)>(r1, null);

        goto label3;

     label2:
        $r3 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        interfaceinvoke $r3.<com.android.browser.UI: void showMaxTabsWarning()>();

     label3:
        return r1;
    }

    public boolean switchToTab(com.android.browser.Tab)
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab r1, r2;
        com.android.browser.TabControl $r3;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: com.android.browser.Tab;

        $r3 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        r2 = virtualinvoke $r3.<com.android.browser.TabControl: com.android.browser.Tab getCurrentTab()>();

        if r1 == null goto label1;

        if r1 != r2 goto label2;

     label1:
        return 0;

     label2:
        virtualinvoke r0.<com.android.browser.Controller: void setActiveTab(com.android.browser.Tab)>(r1);

        return 1;
    }

    public void closeCurrentTab()
    {
        com.android.browser.Controller r0;

        r0 := @this: com.android.browser.Controller;

        virtualinvoke r0.<com.android.browser.Controller: void closeCurrentTab(boolean)>(0);

        return;
    }

    protected void closeCurrentTab(boolean)
    {
        com.android.browser.Controller r0;
        boolean z0, $z1;
        com.android.browser.Tab r1, r2, $r10;
        int i0, $i1, $i2, $i3;
        com.android.browser.TabControl $r3, $r4, $r5, $r6, $r7, $r8, $r11;
        com.android.browser.CrashRecoveryHandler $r9;
        android.app.Activity $r12;

        r0 := @this: com.android.browser.Controller;

        z0 := @parameter0: boolean;

        $r3 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        $i1 = virtualinvoke $r3.<com.android.browser.TabControl: int getTabCount()>();

        if $i1 != 1 goto label1;

        $r9 = r0.<com.android.browser.Controller: com.android.browser.CrashRecoveryHandler mCrashRecoveryHandler>;

        virtualinvoke $r9.<com.android.browser.CrashRecoveryHandler: void clearState()>();

        $r11 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        $r10 = virtualinvoke r0.<com.android.browser.Controller: com.android.browser.Tab getCurrentTab()>();

        virtualinvoke $r11.<com.android.browser.TabControl: boolean removeTab(com.android.browser.Tab)>($r10);

        $r12 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        virtualinvoke $r12.<android.app.Activity: void finish()>();

        return;

     label1:
        $r4 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        r1 = virtualinvoke $r4.<com.android.browser.TabControl: com.android.browser.Tab getCurrentTab()>();

        $r5 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        i0 = virtualinvoke $r5.<com.android.browser.TabControl: int getCurrentPosition()>();

        r2 = virtualinvoke r1.<com.android.browser.Tab: com.android.browser.Tab getParent()>();

        if r2 != null goto label2;

        $r7 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        $i2 = i0 + 1;

        r2 = virtualinvoke $r7.<com.android.browser.TabControl: com.android.browser.Tab getTab(int)>($i2);

        if r2 != null goto label2;

        $r8 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        $i3 = i0 - 1;

        r2 = virtualinvoke $r8.<com.android.browser.TabControl: com.android.browser.Tab getTab(int)>($i3);

     label2:
        if z0 == 0 goto label3;

        $r6 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        virtualinvoke $r6.<com.android.browser.TabControl: boolean setCurrentTab(com.android.browser.Tab)>(r2);

        virtualinvoke r0.<com.android.browser.Controller: void closeTab(com.android.browser.Tab)>(r1);

        goto label4;

     label3:
        $z1 = virtualinvoke r0.<com.android.browser.Controller: boolean switchToTab(com.android.browser.Tab)>(r2);

        if $z1 == 0 goto label4;

        virtualinvoke r0.<com.android.browser.Controller: void closeTab(com.android.browser.Tab)>(r1);

     label4:
        return;
    }

    public void closeTab(com.android.browser.Tab)
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab r1, $r3;
        com.android.browser.TabControl $r2;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: com.android.browser.Tab;

        $r2 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        $r3 = virtualinvoke $r2.<com.android.browser.TabControl: com.android.browser.Tab getCurrentTab()>();

        if r1 != $r3 goto label1;

        virtualinvoke r0.<com.android.browser.Controller: void closeCurrentTab()>();

        goto label2;

     label1:
        virtualinvoke r0.<com.android.browser.Controller: void removeTab(com.android.browser.Tab)>(r1);

     label2:
        return;
    }

    public void closeOtherTabs()
    {
        com.android.browser.Controller r0;
        int i0, i1, $i2;
        com.android.browser.Tab r1, $r5;
        com.android.browser.TabControl $r2, $r3, $r4;

        r0 := @this: com.android.browser.Controller;

        $r2 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        $i2 = virtualinvoke $r2.<com.android.browser.TabControl: int getTabCount()>();

        i0 = $i2 - 1;

        i1 = i0;

     label1:
        if i1 < 0 goto label3;

        $r3 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        r1 = virtualinvoke $r3.<com.android.browser.TabControl: com.android.browser.Tab getTab(int)>(i1);

        $r4 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        $r5 = virtualinvoke $r4.<com.android.browser.TabControl: com.android.browser.Tab getCurrentTab()>();

        if r1 == $r5 goto label2;

        virtualinvoke r0.<com.android.browser.Controller: void removeTab(com.android.browser.Tab)>(r1);

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return;
    }

    protected void loadUrlFromContext(java.lang.String)
    {
        com.android.browser.Controller r0;
        java.lang.String r1, r7;
        com.android.browser.Tab r2;
        android.webkit.WebView r3, $r6;
        int $i0;
        com.android.browser.BrowserWebView $r4;
        android.webkit.WebViewClient $r5;
        boolean $z0;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<com.android.browser.Controller: com.android.browser.Tab getCurrentTab()>();

        if r2 == null goto label1;

        $r6 = virtualinvoke r2.<com.android.browser.Tab: android.webkit.WebView getWebView()>();

        goto label2;

     label1:
        $r6 = null;

     label2:
        r3 = $r6;

        if r1 == null goto label3;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 == 0 goto label3;

        if r2 == null goto label3;

        if r3 == null goto label3;

        r7 = staticinvoke <com.android.browser.UrlUtils: java.lang.String smartUrlFilter(java.lang.String)>(r1);

        $r4 = (com.android.browser.BrowserWebView) r3;

        $r5 = virtualinvoke $r4.<com.android.browser.BrowserWebView: android.webkit.WebViewClient getWebViewClient()>();

        $z0 = virtualinvoke $r5.<android.webkit.WebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)>(r3, r7);

        if $z0 != 0 goto label3;

        virtualinvoke r0.<com.android.browser.Controller: void loadUrl(com.android.browser.Tab,java.lang.String)>(r2, r7);

     label3:
        return;
    }

    public void loadUrl(com.android.browser.Tab, java.lang.String)
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab r1;
        java.lang.String r2;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: com.android.browser.Tab;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.browser.Controller: void loadUrl(com.android.browser.Tab,java.lang.String,java.util.Map)>(r1, r2, null);

        return;
    }

    protected void loadUrl(com.android.browser.Tab, java.lang.String, java.util.Map)
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab r1;
        java.lang.String r2;
        java.util.Map r3;
        com.android.browser.UI $r4;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: com.android.browser.Tab;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.Map;

        if r1 == null goto label1;

        virtualinvoke r0.<com.android.browser.Controller: void dismissSubWindow(com.android.browser.Tab)>(r1);

        virtualinvoke r1.<com.android.browser.Tab: void loadUrl(java.lang.String,java.util.Map)>(r2, r3);

        $r4 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        interfaceinvoke $r4.<com.android.browser.UI: void onProgressChanged(com.android.browser.Tab)>(r1);

     label1:
        return;
    }

    protected void loadUrlDataIn(com.android.browser.Tab, com.android.browser.IntentHandler$UrlData)
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab r1;
        com.android.browser.IntentHandler$UrlData r2;
        boolean $z0, $z1;
        java.util.Map $r3;
        java.lang.String $r4;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: com.android.browser.Tab;

        r2 := @parameter1: com.android.browser.IntentHandler$UrlData;

        if r2 == null goto label3;

        $z0 = virtualinvoke r2.<com.android.browser.IntentHandler$UrlData: boolean isPreloaded()>();

        if $z0 == 0 goto label1;

        goto label3;

     label1:
        if r1 == null goto label2;

        $z1 = r2.<com.android.browser.IntentHandler$UrlData: boolean mDisableUrlOverride>;

        if $z1 == 0 goto label2;

        virtualinvoke r1.<com.android.browser.Tab: void disableUrlOverridingForLoad()>();

     label2:
        $r4 = r2.<com.android.browser.IntentHandler$UrlData: java.lang.String mUrl>;

        $r3 = r2.<com.android.browser.IntentHandler$UrlData: java.util.Map mHeaders>;

        virtualinvoke r0.<com.android.browser.Controller: void loadUrl(com.android.browser.Tab,java.lang.String,java.util.Map)>(r1, $r4, $r3);

     label3:
        return;
    }

    public void onUserCanceledSsl(com.android.browser.Tab)
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab r1;
        boolean $z0;
        com.android.browser.BrowserSettings $r2;
        java.lang.String $r3;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: com.android.browser.Tab;

        $z0 = virtualinvoke r1.<com.android.browser.Tab: boolean canGoBack()>();

        if $z0 == 0 goto label1;

        virtualinvoke r1.<com.android.browser.Tab: void goBack()>();

        goto label2;

     label1:
        $r2 = r0.<com.android.browser.Controller: com.android.browser.BrowserSettings mSettings>;

        $r3 = virtualinvoke $r2.<com.android.browser.BrowserSettings: java.lang.String getHomePage()>();

        virtualinvoke r1.<com.android.browser.Tab: void loadUrl(java.lang.String,java.util.Map)>($r3, null);

     label2:
        return;
    }

    void goBackOnePageOrQuit()
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab r1, r2;
        com.android.browser.TabControl $r3;
        boolean $z0, $z2;
        java.lang.String $r4;
        android.app.Activity $r5, $r6;

        r0 := @this: com.android.browser.Controller;

        $r3 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        r1 = virtualinvoke $r3.<com.android.browser.TabControl: com.android.browser.Tab getCurrentTab()>();

        if r1 != null goto label1;

        $r6 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        virtualinvoke $r6.<android.app.Activity: boolean moveTaskToBack(boolean)>(1);

        return;

     label1:
        $z0 = virtualinvoke r1.<com.android.browser.Tab: boolean canGoBack()>();

        if $z0 == 0 goto label2;

        virtualinvoke r1.<com.android.browser.Tab: void goBack()>();

        goto label6;

     label2:
        r2 = virtualinvoke r1.<com.android.browser.Tab: com.android.browser.Tab getParent()>();

        if r2 == null goto label3;

        virtualinvoke r0.<com.android.browser.Controller: boolean switchToTab(com.android.browser.Tab)>(r2);

        virtualinvoke r0.<com.android.browser.Controller: void closeTab(com.android.browser.Tab)>(r1);

        goto label6;

     label3:
        $r4 = virtualinvoke r1.<com.android.browser.Tab: java.lang.String getAppId()>();

        if $r4 != null goto label4;

        $z2 = virtualinvoke r1.<com.android.browser.Tab: boolean closeOnBack()>();

        if $z2 == 0 goto label5;

     label4:
        virtualinvoke r0.<com.android.browser.Controller: void closeCurrentTab(boolean)>(1);

     label5:
        $r5 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        virtualinvoke $r5.<android.app.Activity: boolean moveTaskToBack(boolean)>(1);

     label6:
        return;
    }

    private com.android.browser.Tab getNextTab()
    {
        com.android.browser.Controller r0;
        int i0, $i1, $i2;
        com.android.browser.TabControl $r1, $r2, $r3;
        com.android.browser.Tab $r4;

        r0 := @this: com.android.browser.Controller;

        $r1 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        $i1 = virtualinvoke $r1.<com.android.browser.TabControl: int getCurrentPosition()>();

        i0 = $i1 + 1;

        $r2 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        $i2 = virtualinvoke $r2.<com.android.browser.TabControl: int getTabCount()>();

        if i0 < $i2 goto label1;

        i0 = 0;

     label1:
        $r3 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        $r4 = virtualinvoke $r3.<com.android.browser.TabControl: com.android.browser.Tab getTab(int)>(i0);

        return $r4;
    }

    private com.android.browser.Tab getPrevTab()
    {
        com.android.browser.Controller r0;
        int i0, $i1, $i2;
        com.android.browser.TabControl $r1, $r2, $r4;
        com.android.browser.Tab $r3;

        r0 := @this: com.android.browser.Controller;

        $r1 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        $i1 = virtualinvoke $r1.<com.android.browser.TabControl: int getCurrentPosition()>();

        i0 = $i1 - 1;

        if i0 >= 0 goto label1;

        $r4 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        $i2 = virtualinvoke $r4.<com.android.browser.TabControl: int getTabCount()>();

        i0 = $i2 - 1;

     label1:
        $r2 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        $r3 = virtualinvoke $r2.<com.android.browser.TabControl: com.android.browser.Tab getTab(int)>(i0);

        return $r3;
    }

    boolean isMenuOrCtrlKey(int)
    {
        com.android.browser.Controller r0;
        int i0;
        boolean $z0;

        r0 := @this: com.android.browser.Controller;

        i0 := @parameter0: int;

        if 82 == i0 goto label1;

        if 113 == i0 goto label1;

        if 114 != i0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        com.android.browser.Controller r0;
        int i0;
        android.view.KeyEvent r1;
        boolean z0, z1, z2, $z3, $z4, $z5, $z7, $z9, $z10;
        android.webkit.WebView r2;
        com.android.browser.Tab r3, $r5, $r6;
        com.android.browser.UI $r4;

        r0 := @this: com.android.browser.Controller;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        z0 = virtualinvoke r1.<android.view.KeyEvent: boolean hasNoModifiers()>();

        if z0 != 0 goto label01;

        $z10 = virtualinvoke r0.<com.android.browser.Controller: boolean isMenuOrCtrlKey(int)>(i0);

        if $z10 == 0 goto label01;

        r0.<com.android.browser.Controller: boolean mMenuIsDown> = 1;

        return 0;

     label01:
        r2 = virtualinvoke r0.<com.android.browser.Controller: android.webkit.WebView getCurrentTopWebView()>();

        r3 = virtualinvoke r0.<com.android.browser.Controller: com.android.browser.Tab getCurrentTab()>();

        if r2 == null goto label02;

        if r3 != null goto label03;

     label02:
        return 0;

     label03:
        z1 = virtualinvoke r1.<android.view.KeyEvent: boolean hasModifiers(int)>(4096);

        z2 = virtualinvoke r1.<android.view.KeyEvent: boolean hasModifiers(int)>(1);

        lookupswitch(i0)
        {
            case 4: goto label10;
            case 21: goto label14;
            case 22: goto label15;
            case 48: goto label16;
            case 61: goto label04;
            case 62: goto label07;
            case 125: goto label12;
            default: goto label19;
        };

     label04:
        $z4 = virtualinvoke r1.<android.view.KeyEvent: boolean isCtrlPressed()>();

        if $z4 == 0 goto label19;

        $z5 = virtualinvoke r1.<android.view.KeyEvent: boolean isShiftPressed()>();

        if $z5 == 0 goto label05;

        $r6 = specialinvoke r0.<com.android.browser.Controller: com.android.browser.Tab getPrevTab()>();

        virtualinvoke r0.<com.android.browser.Controller: boolean switchToTab(com.android.browser.Tab)>($r6);

        goto label06;

     label05:
        $r5 = specialinvoke r0.<com.android.browser.Controller: com.android.browser.Tab getNextTab()>();

        virtualinvoke r0.<com.android.browser.Controller: boolean switchToTab(com.android.browser.Tab)>($r5);

     label06:
        return 1;

     label07:
        if z2 == 0 goto label08;

        virtualinvoke r0.<com.android.browser.Controller: void pageUp()>();

        goto label09;

     label08:
        if z0 == 0 goto label09;

        virtualinvoke r0.<com.android.browser.Controller: void pageDown()>();

     label09:
        return 1;

     label10:
        if z0 != 0 goto label11;

        goto label19;

     label11:
        virtualinvoke r1.<android.view.KeyEvent: void startTracking()>();

        return 1;

     label12:
        if z0 != 0 goto label13;

        goto label19;

     label13:
        virtualinvoke r3.<com.android.browser.Tab: void goForward()>();

        return 1;

     label14:
        if z1 == 0 goto label19;

        virtualinvoke r3.<com.android.browser.Tab: void goBack()>();

        return 1;

     label15:
        if z1 == 0 goto label19;

        virtualinvoke r3.<com.android.browser.Tab: void goForward()>();

        return 1;

     label16:
        $z7 = virtualinvoke r1.<android.view.KeyEvent: boolean isCtrlPressed()>();

        if $z7 == 0 goto label19;

        $z9 = virtualinvoke r1.<android.view.KeyEvent: boolean isShiftPressed()>();

        if $z9 == 0 goto label17;

        virtualinvoke r0.<com.android.browser.Controller: com.android.browser.Tab openIncognitoTab()>();

        goto label18;

     label17:
        virtualinvoke r0.<com.android.browser.Controller: com.android.browser.Tab openTabToHomePage()>();

     label18:
        return 1;

     label19:
        $r4 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        $z3 = interfaceinvoke $r4.<com.android.browser.UI: boolean dispatchKey(int,android.view.KeyEvent)>(i0, r1);

        return $z3;
    }

    public boolean onKeyLongPress(int, android.view.KeyEvent)
    {
        com.android.browser.Controller r0;
        int i0;
        android.view.KeyEvent r1;
        com.android.browser.UI $r2;
        boolean $z0;
        com.android.browser.UI$ComboViews $r3;

        r0 := @this: com.android.browser.Controller;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        lookupswitch(i0)
        {
            case 4: goto label1;
            default: goto label2;
        };

     label1:
        $r2 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        $z0 = interfaceinvoke $r2.<com.android.browser.UI: boolean isWebShowing()>();

        if $z0 == 0 goto label2;

        $r3 = <com.android.browser.UI$ComboViews: com.android.browser.UI$ComboViews History>;

        virtualinvoke r0.<com.android.browser.Controller: void bookmarksOrHistoryPicker(com.android.browser.UI$ComboViews)>($r3);

        return 1;

     label2:
        return 0;
    }

    public boolean onKeyUp(int, android.view.KeyEvent)
    {
        com.android.browser.Controller r0;
        int i0;
        android.view.KeyEvent r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;

        r0 := @this: com.android.browser.Controller;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        $z0 = virtualinvoke r0.<com.android.browser.Controller: boolean isMenuOrCtrlKey(int)>(i0);

        if $z0 == 0 goto label1;

        r0.<com.android.browser.Controller: boolean mMenuIsDown> = 0;

        if 82 != i0 goto label1;

        $z4 = virtualinvoke r1.<android.view.KeyEvent: boolean isTracking()>();

        if $z4 == 0 goto label1;

        $z5 = virtualinvoke r1.<android.view.KeyEvent: boolean isCanceled()>();

        if $z5 != 0 goto label1;

        $z6 = virtualinvoke r0.<com.android.browser.Controller: boolean onMenuKey()>();

        return $z6;

     label1:
        $z1 = virtualinvoke r1.<android.view.KeyEvent: boolean hasNoModifiers()>();

        if $z1 != 0 goto label2;

        return 0;

     label2:
        lookupswitch(i0)
        {
            case 4: goto label3;
            default: goto label4;
        };

     label3:
        $z2 = virtualinvoke r1.<android.view.KeyEvent: boolean isTracking()>();

        if $z2 == 0 goto label4;

        $z3 = virtualinvoke r1.<android.view.KeyEvent: boolean isCanceled()>();

        if $z3 != 0 goto label4;

        virtualinvoke r0.<com.android.browser.Controller: void onBackKey()>();

        return 1;

     label4:
        return 0;
    }

    public boolean isMenuDown()
    {
        com.android.browser.Controller r0;
        boolean $z0;

        r0 := @this: com.android.browser.Controller;

        $z0 = r0.<com.android.browser.Controller: boolean mMenuIsDown>;

        return $z0;
    }

    public boolean onSearchRequested()
    {
        com.android.browser.Controller r0;
        com.android.browser.UI $r1;

        r0 := @this: com.android.browser.Controller;

        $r1 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        interfaceinvoke $r1.<com.android.browser.UI: void editUrl(boolean,boolean)>(0, 1);

        return 1;
    }

    public boolean shouldCaptureThumbnails()
    {
        com.android.browser.Controller r0;
        com.android.browser.UI $r1;
        boolean $z0;

        r0 := @this: com.android.browser.Controller;

        $r1 = r0.<com.android.browser.Controller: com.android.browser.UI mUi>;

        $z0 = interfaceinvoke $r1.<com.android.browser.UI: boolean shouldCaptureThumbnails()>();

        return $z0;
    }

    public boolean supportsVoice()
    {
        com.android.browser.Controller r0;
        android.content.pm.PackageManager r1;
        java.util.List r2;
        android.app.Activity $r3;
        android.content.Intent $r4;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.browser.Controller;

        $r3 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        r1 = virtualinvoke $r3.<android.app.Activity: android.content.pm.PackageManager getPackageManager()>();

        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("android.speech.action.RECOGNIZE_SPEECH");

        r2 = virtualinvoke r1.<android.content.pm.PackageManager: java.util.List queryIntentActivities(android.content.Intent,int)>($r4, 0);

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void startVoiceRecognizer()
    {
        com.android.browser.Controller r0;
        android.content.Intent r1, $r2;
        android.app.Activity $r5;

        r0 := @this: com.android.browser.Controller;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.speech.action.RECOGNIZE_SPEECH");

        r1 = $r2;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.speech.extra.LANGUAGE_MODEL", "free_form");

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.speech.extra.MAX_RESULTS", 1);

        $r5 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        virtualinvoke $r5.<android.app.Activity: void startActivityForResult(android.content.Intent,int)>(r1, 6);

        return;
    }

    public void setBlockEvents(boolean)
    {
        com.android.browser.Controller r0;
        boolean z0;

        r0 := @this: com.android.browser.Controller;

        z0 := @parameter0: boolean;

        r0.<com.android.browser.Controller: boolean mBlockEvents> = z0;

        return;
    }

    public boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        com.android.browser.Controller r0;
        android.view.KeyEvent r1;
        boolean $z0;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: android.view.KeyEvent;

        $z0 = r0.<com.android.browser.Controller: boolean mBlockEvents>;

        return $z0;
    }

    public boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
    {
        com.android.browser.Controller r0;
        android.view.KeyEvent r1;
        boolean $z0;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: android.view.KeyEvent;

        $z0 = r0.<com.android.browser.Controller: boolean mBlockEvents>;

        return $z0;
    }

    public boolean dispatchTouchEvent(android.view.MotionEvent)
    {
        com.android.browser.Controller r0;
        android.view.MotionEvent r1;
        boolean $z0;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = r0.<com.android.browser.Controller: boolean mBlockEvents>;

        return $z0;
    }

    public boolean dispatchTrackballEvent(android.view.MotionEvent)
    {
        com.android.browser.Controller r0;
        android.view.MotionEvent r1;
        boolean $z0;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = r0.<com.android.browser.Controller: boolean mBlockEvents>;

        return $z0;
    }

    public boolean dispatchGenericMotionEvent(android.view.MotionEvent)
    {
        com.android.browser.Controller r0;
        android.view.MotionEvent r1;
        boolean $z0;

        r0 := @this: com.android.browser.Controller;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = r0.<com.android.browser.Controller: boolean mBlockEvents>;

        return $z0;
    }

    static com.android.browser.TabControl access$000(com.android.browser.Controller)
    {
        com.android.browser.Controller r0;
        com.android.browser.TabControl $r1;

        r0 := @parameter0: com.android.browser.Controller;

        $r1 = r0.<com.android.browser.Controller: com.android.browser.TabControl mTabControl>;

        return $r1;
    }

    static void access$100(com.android.browser.Controller, android.os.Bundle, android.content.Intent, long, boolean)
    {
        com.android.browser.Controller r0;
        android.os.Bundle r1;
        android.content.Intent r2;
        long l0;
        boolean z0;

        r0 := @parameter0: com.android.browser.Controller;

        r1 := @parameter1: android.os.Bundle;

        r2 := @parameter2: android.content.Intent;

        l0 := @parameter3: long;

        z0 := @parameter4: boolean;

        specialinvoke r0.<com.android.browser.Controller: void onPreloginFinished(android.os.Bundle,android.content.Intent,long,boolean)>(r1, r2, l0, z0);

        return;
    }

    static android.app.Activity access$200(com.android.browser.Controller)
    {
        com.android.browser.Controller r0;
        android.app.Activity $r1;

        r0 := @parameter0: com.android.browser.Controller;

        $r1 = r0.<com.android.browser.Controller: android.app.Activity mActivity>;

        return $r1;
    }

    static com.android.browser.BrowserSettings access$300(com.android.browser.Controller)
    {
        com.android.browser.Controller r0;
        com.android.browser.BrowserSettings $r1;

        r0 := @parameter0: com.android.browser.Controller;

        $r1 = r0.<com.android.browser.Controller: com.android.browser.BrowserSettings mSettings>;

        return $r1;
    }

    static void access$400(com.android.browser.Controller, java.lang.CharSequence)
    {
        com.android.browser.Controller r0;
        java.lang.CharSequence r1;

        r0 := @parameter0: com.android.browser.Controller;

        r1 := @parameter1: java.lang.CharSequence;

        specialinvoke r0.<com.android.browser.Controller: void copy(java.lang.CharSequence)>(r1);

        return;
    }

    static android.os.PowerManager$WakeLock access$500(com.android.browser.Controller)
    {
        com.android.browser.Controller r0;
        android.os.PowerManager$WakeLock $r1;

        r0 := @parameter0: com.android.browser.Controller;

        $r1 = r0.<com.android.browser.Controller: android.os.PowerManager$WakeLock mWakeLock>;

        return $r1;
    }

    static void access$600(com.android.browser.Controller, com.android.browser.Tab)
    {
        com.android.browser.Controller r0;
        com.android.browser.Tab r1;

        r0 := @parameter0: com.android.browser.Controller;

        r1 := @parameter1: com.android.browser.Tab;

        specialinvoke r0.<com.android.browser.Controller: void updateScreenshot(com.android.browser.Tab)>(r1);

        return;
    }

    static android.os.Handler access$700(com.android.browser.Controller)
    {
        com.android.browser.Controller r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.browser.Controller;

        $r1 = r0.<com.android.browser.Controller: android.os.Handler mHandler>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;
        int[] $r1;

        <com.android.browser.Controller: java.lang.String NO_CRASH_RECOVERY> = "no-crash-recovery";

        <com.android.browser.Controller: java.lang.String GOOGLE_SEARCH_SOURCE_TYPE> = "browser-type";

        <com.android.browser.Controller: java.lang.String GOOGLE_SEARCH_SOURCE_SEARCHKEY> = "browser-key";

        <com.android.browser.Controller: int WAKELOCK_TIMEOUT> = 300000;

        <com.android.browser.Controller: int VOICE_RESULT> = 6;

        <com.android.browser.Controller: int FILE_SELECTED> = 4;

        <com.android.browser.Controller: int PREFERENCES_PAGE> = 3;

        <com.android.browser.Controller: int COMBO_VIEW> = 1;

        <com.android.browser.Controller: int EMPTY_MENU> = -1;

        <com.android.browser.Controller: int OPEN_BOOKMARKS> = 201;

        <com.android.browser.Controller: int UPDATE_BOOKMARK_THUMBNAIL> = 108;

        <com.android.browser.Controller: int RELEASE_WAKELOCK> = 107;

        <com.android.browser.Controller: int FOCUS_NODE_HREF> = 102;

        <com.android.browser.Controller: int STOP_LOAD> = 1002;

        <com.android.browser.Controller: int LOAD_URL> = 1001;

        <com.android.browser.Controller: java.lang.String INCOGNITO_URI> = "browser:incognito";

        <com.android.browser.Controller: java.lang.String SEND_APP_ID_EXTRA> = "android.speech.extras.SEND_APPLICATION_ID_EXTRA";

        <com.android.browser.Controller: java.lang.String LOGTAG> = "Controller";

        $r0 = class "com/android/browser/Controller";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.android.browser.Controller: boolean $assertionsDisabled> = $z1;

        $r1 = newarray (int)[8];

        $r1[0] = 2131558588;

        $r1[1] = 2131558589;

        $r1[2] = 2131558590;

        $r1[3] = 2131558591;

        $r1[4] = 2131558592;

        $r1[5] = 2131558593;

        $r1[6] = 2131558594;

        $r1[7] = 2131558595;

        <com.android.browser.Controller: int[] WINDOW_SHORTCUT_ID_ARRAY> = $r1;

        return;
    }
}
