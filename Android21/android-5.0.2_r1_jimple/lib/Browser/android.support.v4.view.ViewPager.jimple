public class android.support.v4.view.ViewPager extends android.view.ViewGroup
{
    private static final java.lang.String TAG;
    private static final boolean DEBUG;
    private static final boolean USE_CACHE;
    private static final int DEFAULT_OFFSCREEN_PAGES;
    private static final int MAX_SETTLE_DURATION;
    private static final int MIN_DISTANCE_FOR_FLING;
    private static final int DEFAULT_GUTTER_SIZE;
    private static final int MIN_FLING_VELOCITY;
    private static final int[] LAYOUT_ATTRS;
    private int mExpectedAdapterCount;
    private static final java.util.Comparator COMPARATOR;
    private static final android.view.animation.Interpolator sInterpolator;
    private final java.util.ArrayList mItems;
    private final android.support.v4.view.ViewPager$ItemInfo mTempItem;
    private final android.graphics.Rect mTempRect;
    private android.support.v4.view.PagerAdapter mAdapter;
    private int mCurItem;
    private int mRestoredCurItem;
    private android.os.Parcelable mRestoredAdapterState;
    private java.lang.ClassLoader mRestoredClassLoader;
    private android.widget.Scroller mScroller;
    private android.support.v4.view.ViewPager$PagerObserver mObserver;
    private int mPageMargin;
    private android.graphics.drawable.Drawable mMarginDrawable;
    private int mTopPageBounds;
    private int mBottomPageBounds;
    private float mFirstOffset;
    private float mLastOffset;
    private int mChildWidthMeasureSpec;
    private int mChildHeightMeasureSpec;
    private boolean mInLayout;
    private boolean mScrollingCacheEnabled;
    private boolean mPopulatePending;
    private int mOffscreenPageLimit;
    private boolean mIsBeingDragged;
    private boolean mIsUnableToDrag;
    private boolean mIgnoreGutter;
    private int mDefaultGutterSize;
    private int mGutterSize;
    private int mTouchSlop;
    private float mLastMotionX;
    private float mLastMotionY;
    private float mInitialMotionX;
    private float mInitialMotionY;
    private int mActivePointerId;
    private static final int INVALID_POINTER;
    private android.view.VelocityTracker mVelocityTracker;
    private int mMinimumVelocity;
    private int mMaximumVelocity;
    private int mFlingDistance;
    private int mCloseEnough;
    private static final int CLOSE_ENOUGH;
    private boolean mFakeDragging;
    private long mFakeDragBeginTime;
    private android.support.v4.widget.EdgeEffectCompat mLeftEdge;
    private android.support.v4.widget.EdgeEffectCompat mRightEdge;
    private boolean mFirstLayout;
    private boolean mNeedCalculatePageOffsets;
    private boolean mCalledSuper;
    private int mDecorChildCount;
    private android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener;
    private android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener;
    private android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener;
    private android.support.v4.view.ViewPager$PageTransformer mPageTransformer;
    private java.lang.reflect.Method mSetChildrenDrawingOrderEnabled;
    private static final int DRAW_ORDER_DEFAULT;
    private static final int DRAW_ORDER_FORWARD;
    private static final int DRAW_ORDER_REVERSE;
    private int mDrawingOrder;
    private java.util.ArrayList mDrawingOrderedChildren;
    private static final android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator;
    public static final int SCROLL_STATE_IDLE;
    public static final int SCROLL_STATE_DRAGGING;
    public static final int SCROLL_STATE_SETTLING;
    private final java.lang.Runnable mEndScrollRunnable;
    private int mScrollState;

    public void <init>(android.content.Context)
    {
        android.support.v4.view.ViewPager r0;
        android.content.Context r1;
        java.util.ArrayList $r2;
        android.support.v4.view.ViewPager$ItemInfo $r3;
        android.graphics.Rect $r4;
        android.support.v4.view.ViewPager$3 $r5;

        r0 := @this: android.support.v4.view.ViewPager;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context)>(r1);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems> = $r2;

        $r3 = new android.support.v4.view.ViewPager$ItemInfo;

        specialinvoke $r3.<android.support.v4.view.ViewPager$ItemInfo: void <init>()>();

        r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo mTempItem> = $r3;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<android.support.v4.view.ViewPager: android.graphics.Rect mTempRect> = $r4;

        r0.<android.support.v4.view.ViewPager: int mRestoredCurItem> = -1;

        r0.<android.support.v4.view.ViewPager: android.os.Parcelable mRestoredAdapterState> = null;

        r0.<android.support.v4.view.ViewPager: java.lang.ClassLoader mRestoredClassLoader> = null;

        r0.<android.support.v4.view.ViewPager: float mFirstOffset> = -3.4028235E38F;

        r0.<android.support.v4.view.ViewPager: float mLastOffset> = 3.4028235E38F;

        r0.<android.support.v4.view.ViewPager: int mOffscreenPageLimit> = 1;

        r0.<android.support.v4.view.ViewPager: int mActivePointerId> = -1;

        r0.<android.support.v4.view.ViewPager: boolean mFirstLayout> = 1;

        r0.<android.support.v4.view.ViewPager: boolean mNeedCalculatePageOffsets> = 0;

        $r5 = new android.support.v4.view.ViewPager$3;

        specialinvoke $r5.<android.support.v4.view.ViewPager$3: void <init>(android.support.v4.view.ViewPager)>(r0);

        r0.<android.support.v4.view.ViewPager: java.lang.Runnable mEndScrollRunnable> = $r5;

        r0.<android.support.v4.view.ViewPager: int mScrollState> = 0;

        virtualinvoke r0.<android.support.v4.view.ViewPager: void initViewPager()>();

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.v4.view.ViewPager r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        java.util.ArrayList $r3;
        android.support.v4.view.ViewPager$ItemInfo $r4;
        android.graphics.Rect $r5;
        android.support.v4.view.ViewPager$3 $r6;

        r0 := @this: android.support.v4.view.ViewPager;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems> = $r3;

        $r4 = new android.support.v4.view.ViewPager$ItemInfo;

        specialinvoke $r4.<android.support.v4.view.ViewPager$ItemInfo: void <init>()>();

        r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo mTempItem> = $r4;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<android.support.v4.view.ViewPager: android.graphics.Rect mTempRect> = $r5;

        r0.<android.support.v4.view.ViewPager: int mRestoredCurItem> = -1;

        r0.<android.support.v4.view.ViewPager: android.os.Parcelable mRestoredAdapterState> = null;

        r0.<android.support.v4.view.ViewPager: java.lang.ClassLoader mRestoredClassLoader> = null;

        r0.<android.support.v4.view.ViewPager: float mFirstOffset> = -3.4028235E38F;

        r0.<android.support.v4.view.ViewPager: float mLastOffset> = 3.4028235E38F;

        r0.<android.support.v4.view.ViewPager: int mOffscreenPageLimit> = 1;

        r0.<android.support.v4.view.ViewPager: int mActivePointerId> = -1;

        r0.<android.support.v4.view.ViewPager: boolean mFirstLayout> = 1;

        r0.<android.support.v4.view.ViewPager: boolean mNeedCalculatePageOffsets> = 0;

        $r6 = new android.support.v4.view.ViewPager$3;

        specialinvoke $r6.<android.support.v4.view.ViewPager$3: void <init>(android.support.v4.view.ViewPager)>(r0);

        r0.<android.support.v4.view.ViewPager: java.lang.Runnable mEndScrollRunnable> = $r6;

        r0.<android.support.v4.view.ViewPager: int mScrollState> = 0;

        virtualinvoke r0.<android.support.v4.view.ViewPager: void initViewPager()>();

        return;
    }

    void initViewPager()
    {
        android.support.v4.view.ViewPager r0;
        android.content.Context r1;
        android.view.ViewConfiguration r2;
        float f0, $f1, $f2, $f3, $f4;
        android.widget.Scroller $r3;
        android.view.animation.Interpolator $r4;
        android.content.res.Resources $r5;
        android.util.DisplayMetrics $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.support.v4.widget.EdgeEffectCompat $r7, $r8;
        android.support.v4.view.ViewPager$MyAccessibilityDelegate $r9;

        r0 := @this: android.support.v4.view.ViewPager;

        virtualinvoke r0.<android.support.v4.view.ViewPager: void setWillNotDraw(boolean)>(0);

        virtualinvoke r0.<android.support.v4.view.ViewPager: void setDescendantFocusability(int)>(262144);

        virtualinvoke r0.<android.support.v4.view.ViewPager: void setFocusable(boolean)>(1);

        r1 = virtualinvoke r0.<android.support.v4.view.ViewPager: android.content.Context getContext()>();

        $r3 = new android.widget.Scroller;

        $r4 = <android.support.v4.view.ViewPager: android.view.animation.Interpolator sInterpolator>;

        specialinvoke $r3.<android.widget.Scroller: void <init>(android.content.Context,android.view.animation.Interpolator)>(r1, $r4);

        r0.<android.support.v4.view.ViewPager: android.widget.Scroller mScroller> = $r3;

        r2 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>(r1);

        $r5 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        f0 = $r6.<android.util.DisplayMetrics: float density>;

        $i0 = staticinvoke <android.support.v4.view.ViewConfigurationCompat: int getScaledPagingTouchSlop(android.view.ViewConfiguration)>(r2);

        r0.<android.support.v4.view.ViewPager: int mTouchSlop> = $i0;

        $f1 = 400.0F * f0;

        $i1 = (int) $f1;

        r0.<android.support.v4.view.ViewPager: int mMinimumVelocity> = $i1;

        $i2 = virtualinvoke r2.<android.view.ViewConfiguration: int getScaledMaximumFlingVelocity()>();

        r0.<android.support.v4.view.ViewPager: int mMaximumVelocity> = $i2;

        $r7 = new android.support.v4.widget.EdgeEffectCompat;

        specialinvoke $r7.<android.support.v4.widget.EdgeEffectCompat: void <init>(android.content.Context)>(r1);

        r0.<android.support.v4.view.ViewPager: android.support.v4.widget.EdgeEffectCompat mLeftEdge> = $r7;

        $r8 = new android.support.v4.widget.EdgeEffectCompat;

        specialinvoke $r8.<android.support.v4.widget.EdgeEffectCompat: void <init>(android.content.Context)>(r1);

        r0.<android.support.v4.view.ViewPager: android.support.v4.widget.EdgeEffectCompat mRightEdge> = $r8;

        $f2 = 25.0F * f0;

        $i3 = (int) $f2;

        r0.<android.support.v4.view.ViewPager: int mFlingDistance> = $i3;

        $f3 = 2.0F * f0;

        $i4 = (int) $f3;

        r0.<android.support.v4.view.ViewPager: int mCloseEnough> = $i4;

        $f4 = 16.0F * f0;

        $i5 = (int) $f4;

        r0.<android.support.v4.view.ViewPager: int mDefaultGutterSize> = $i5;

        $r9 = new android.support.v4.view.ViewPager$MyAccessibilityDelegate;

        specialinvoke $r9.<android.support.v4.view.ViewPager$MyAccessibilityDelegate: void <init>(android.support.v4.view.ViewPager)>(r0);

        staticinvoke <android.support.v4.view.ViewCompat: void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)>(r0, $r9);

        $i6 = staticinvoke <android.support.v4.view.ViewCompat: int getImportantForAccessibility(android.view.View)>(r0);

        if $i6 != 0 goto label1;

        staticinvoke <android.support.v4.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>(r0, 1);

     label1:
        return;
    }

    protected void onDetachedFromWindow()
    {
        android.support.v4.view.ViewPager r0;
        java.lang.Runnable $r1;

        r0 := @this: android.support.v4.view.ViewPager;

        $r1 = r0.<android.support.v4.view.ViewPager: java.lang.Runnable mEndScrollRunnable>;

        virtualinvoke r0.<android.support.v4.view.ViewPager: boolean removeCallbacks(java.lang.Runnable)>($r1);

        specialinvoke r0.<android.view.ViewGroup: void onDetachedFromWindow()>();

        return;
    }

    private void setScrollState(int)
    {
        android.support.v4.view.ViewPager r0;
        int i0, $i1;
        android.support.v4.view.ViewPager$PageTransformer $r1;
        android.support.v4.view.ViewPager$OnPageChangeListener $r2, $r3;
        boolean $z0;

        r0 := @this: android.support.v4.view.ViewPager;

        i0 := @parameter0: int;

        $i1 = r0.<android.support.v4.view.ViewPager: int mScrollState>;

        if $i1 != i0 goto label1;

        return;

     label1:
        r0.<android.support.v4.view.ViewPager: int mScrollState> = i0;

        $r1 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$PageTransformer mPageTransformer>;

        if $r1 == null goto label4;

        if i0 == 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        specialinvoke r0.<android.support.v4.view.ViewPager: void enableLayers(boolean)>($z0);

     label4:
        $r2 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener>;

        if $r2 == null goto label5;

        $r3 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener>;

        interfaceinvoke $r3.<android.support.v4.view.ViewPager$OnPageChangeListener: void onPageScrollStateChanged(int)>(i0);

     label5:
        return;
    }

    public void setAdapter(android.support.v4.view.PagerAdapter)
    {
        android.support.v4.view.ViewPager r0;
        android.support.v4.view.PagerAdapter r1, $r3, $r4, $r9, $r10, $r13, $r16, $r17, $r20, $r24, r25;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.support.v4.view.ViewPager$ItemInfo r2;
        android.support.v4.view.ViewPager$OnAdapterChangeListener $r5, $r6;
        android.support.v4.view.ViewPager$PagerObserver $r7, $r8, $r14, $r15;
        java.lang.ClassLoader $r11;
        android.os.Parcelable $r12;
        java.util.ArrayList $r18, $r19, $r22;
        java.lang.Object $r21, $r23;
        boolean z0;

        r0 := @this: android.support.v4.view.ViewPager;

        r1 := @parameter0: android.support.v4.view.PagerAdapter;

        $r3 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        if $r3 == null goto label3;

        $r17 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $r14 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$PagerObserver mObserver>;

        virtualinvoke $r17.<android.support.v4.view.PagerAdapter: void unregisterDataSetObserver(android.database.DataSetObserver)>($r14);

        $r16 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        virtualinvoke $r16.<android.support.v4.view.PagerAdapter: void startUpdate(android.view.ViewGroup)>(r0);

        i0 = 0;

     label1:
        $r18 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i4 = virtualinvoke $r18.<java.util.ArrayList: int size()>();

        if i0 >= $i4 goto label2;

        $r22 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r21 = virtualinvoke $r22.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r2 = (android.support.v4.view.ViewPager$ItemInfo) $r21;

        $r24 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $i5 = r2.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $r23 = r2.<android.support.v4.view.ViewPager$ItemInfo: java.lang.Object object>;

        virtualinvoke $r24.<android.support.v4.view.PagerAdapter: void destroyItem(android.view.ViewGroup,int,java.lang.Object)>(r0, $i5, $r23);

        i0 = i0 + 1;

        goto label1;

     label2:
        $r20 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        virtualinvoke $r20.<android.support.v4.view.PagerAdapter: void finishUpdate(android.view.ViewGroup)>(r0);

        $r19 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        virtualinvoke $r19.<java.util.ArrayList: void clear()>();

        specialinvoke r0.<android.support.v4.view.ViewPager: void removeNonDecorViews()>();

        r0.<android.support.v4.view.ViewPager: int mCurItem> = 0;

        virtualinvoke r0.<android.support.v4.view.ViewPager: void scrollTo(int,int)>(0, 0);

     label3:
        r25 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter> = r1;

        r0.<android.support.v4.view.ViewPager: int mExpectedAdapterCount> = 0;

        $r4 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        if $r4 == null goto label7;

        $r7 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$PagerObserver mObserver>;

        if $r7 != null goto label4;

        $r15 = new android.support.v4.view.ViewPager$PagerObserver;

        specialinvoke $r15.<android.support.v4.view.ViewPager$PagerObserver: void <init>(android.support.v4.view.ViewPager,android.support.v4.view.ViewPager$1)>(r0, null);

        r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$PagerObserver mObserver> = $r15;

     label4:
        $r9 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $r8 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$PagerObserver mObserver>;

        virtualinvoke $r9.<android.support.v4.view.PagerAdapter: void registerDataSetObserver(android.database.DataSetObserver)>($r8);

        r0.<android.support.v4.view.ViewPager: boolean mPopulatePending> = 0;

        z0 = r0.<android.support.v4.view.ViewPager: boolean mFirstLayout>;

        r0.<android.support.v4.view.ViewPager: boolean mFirstLayout> = 1;

        $r10 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $i1 = virtualinvoke $r10.<android.support.v4.view.PagerAdapter: int getCount()>();

        r0.<android.support.v4.view.ViewPager: int mExpectedAdapterCount> = $i1;

        $i2 = r0.<android.support.v4.view.ViewPager: int mRestoredCurItem>;

        if $i2 < 0 goto label5;

        $r13 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $r12 = r0.<android.support.v4.view.ViewPager: android.os.Parcelable mRestoredAdapterState>;

        $r11 = r0.<android.support.v4.view.ViewPager: java.lang.ClassLoader mRestoredClassLoader>;

        virtualinvoke $r13.<android.support.v4.view.PagerAdapter: void restoreState(android.os.Parcelable,java.lang.ClassLoader)>($r12, $r11);

        $i3 = r0.<android.support.v4.view.ViewPager: int mRestoredCurItem>;

        virtualinvoke r0.<android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean)>($i3, 0, 1);

        r0.<android.support.v4.view.ViewPager: int mRestoredCurItem> = -1;

        r0.<android.support.v4.view.ViewPager: android.os.Parcelable mRestoredAdapterState> = null;

        r0.<android.support.v4.view.ViewPager: java.lang.ClassLoader mRestoredClassLoader> = null;

        goto label7;

     label5:
        if z0 != 0 goto label6;

        virtualinvoke r0.<android.support.v4.view.ViewPager: void populate()>();

        goto label7;

     label6:
        virtualinvoke r0.<android.support.v4.view.ViewPager: void requestLayout()>();

     label7:
        $r5 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener>;

        if $r5 == null goto label8;

        if r25 == r1 goto label8;

        $r6 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener>;

        interfaceinvoke $r6.<android.support.v4.view.ViewPager$OnAdapterChangeListener: void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter)>(r25, r1);

     label8:
        return;
    }

    private void removeNonDecorViews()
    {
        android.support.v4.view.ViewPager r0;
        int i0, $i1;
        android.view.View r1;
        android.support.v4.view.ViewPager$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;
        boolean $z0;

        r0 := @this: android.support.v4.view.ViewPager;

        i0 = 0;

     label1:
        $i1 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getChildCount()>();

        if i0 >= $i1 goto label3;

        r1 = virtualinvoke r0.<android.support.v4.view.ViewPager: android.view.View getChildAt(int)>(i0);

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.support.v4.view.ViewPager$LayoutParams) $r3;

        $z0 = r2.<android.support.v4.view.ViewPager$LayoutParams: boolean isDecor>;

        if $z0 != 0 goto label2;

        virtualinvoke r0.<android.support.v4.view.ViewPager: void removeViewAt(int)>(i0);

        i0 = i0 + -1;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return;
    }

    public android.support.v4.view.PagerAdapter getAdapter()
    {
        android.support.v4.view.ViewPager r0;
        android.support.v4.view.PagerAdapter $r1;

        r0 := @this: android.support.v4.view.ViewPager;

        $r1 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        return $r1;
    }

    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener)
    {
        android.support.v4.view.ViewPager r0;
        android.support.v4.view.ViewPager$OnAdapterChangeListener r1;

        r0 := @this: android.support.v4.view.ViewPager;

        r1 := @parameter0: android.support.v4.view.ViewPager$OnAdapterChangeListener;

        r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener> = r1;

        return;
    }

    private int getClientWidth()
    {
        android.support.v4.view.ViewPager r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.support.v4.view.ViewPager;

        $i0 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getMeasuredWidth()>();

        $i1 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getPaddingLeft()>();

        $i2 = $i0 - $i1;

        $i3 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getPaddingRight()>();

        $i4 = $i2 - $i3;

        return $i4;
    }

    public void setCurrentItem(int)
    {
        android.support.v4.view.ViewPager r0;
        int i0;
        boolean $z0, $z1;

        r0 := @this: android.support.v4.view.ViewPager;

        i0 := @parameter0: int;

        r0.<android.support.v4.view.ViewPager: boolean mPopulatePending> = 0;

        $z0 = r0.<android.support.v4.view.ViewPager: boolean mFirstLayout>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        virtualinvoke r0.<android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean)>(i0, $z1, 0);

        return;
    }

    public void setCurrentItem(int, boolean)
    {
        android.support.v4.view.ViewPager r0;
        int i0;
        boolean z0;

        r0 := @this: android.support.v4.view.ViewPager;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r0.<android.support.v4.view.ViewPager: boolean mPopulatePending> = 0;

        virtualinvoke r0.<android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean)>(i0, z0, 0);

        return;
    }

    public int getCurrentItem()
    {
        android.support.v4.view.ViewPager r0;
        int $i0;

        r0 := @this: android.support.v4.view.ViewPager;

        $i0 = r0.<android.support.v4.view.ViewPager: int mCurItem>;

        return $i0;
    }

    void setCurrentItemInternal(int, boolean, boolean)
    {
        android.support.v4.view.ViewPager r0;
        int i0;
        boolean z0, z1;

        r0 := @this: android.support.v4.view.ViewPager;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        virtualinvoke r0.<android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>(i0, z0, z1, 0);

        return;
    }

    void setCurrentItemInternal(int, boolean, boolean, int)
    {
        android.support.v4.view.ViewPager r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        boolean z0, z1, $z2, $z3, z4;
        android.support.v4.view.PagerAdapter $r1, $r2, $r3, $r12;
        java.util.ArrayList $r4, $r9, $r13;
        android.support.v4.view.ViewPager$OnPageChangeListener $r5, $r6, $r7, $r8;
        android.support.v4.view.ViewPager$ItemInfo $r10;
        java.lang.Object $r11;

        r0 := @this: android.support.v4.view.ViewPager;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        i1 := @parameter3: int;

        $r1 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        if $r1 == null goto label01;

        $r2 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $i4 = virtualinvoke $r2.<android.support.v4.view.PagerAdapter: int getCount()>();

        if $i4 > 0 goto label02;

     label01:
        specialinvoke r0.<android.support.v4.view.ViewPager: void setScrollingCacheEnabled(boolean)>(0);

        return;

     label02:
        if z1 != 0 goto label03;

        $i13 = r0.<android.support.v4.view.ViewPager: int mCurItem>;

        if $i13 != i0 goto label03;

        $r13 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i14 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

        if $i14 == 0 goto label03;

        specialinvoke r0.<android.support.v4.view.ViewPager: void setScrollingCacheEnabled(boolean)>(0);

        return;

     label03:
        if i0 >= 0 goto label04;

        i0 = 0;

        goto label05;

     label04:
        $r3 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $i5 = virtualinvoke $r3.<android.support.v4.view.PagerAdapter: int getCount()>();

        if i0 < $i5 goto label05;

        $r12 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $i12 = virtualinvoke $r12.<android.support.v4.view.PagerAdapter: int getCount()>();

        i0 = $i12 - 1;

     label05:
        i2 = r0.<android.support.v4.view.ViewPager: int mOffscreenPageLimit>;

        $i6 = r0.<android.support.v4.view.ViewPager: int mCurItem>;

        $i7 = $i6 + i2;

        if i0 > $i7 goto label06;

        $i11 = r0.<android.support.v4.view.ViewPager: int mCurItem>;

        $i10 = $i11 - i2;

        if i0 >= $i10 goto label08;

     label06:
        i3 = 0;

     label07:
        $r4 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i8 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if i3 >= $i8 goto label08;

        $r9 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r11 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r10 = (android.support.v4.view.ViewPager$ItemInfo) $r11;

        $r10.<android.support.v4.view.ViewPager$ItemInfo: boolean scrolling> = 1;

        i3 = i3 + 1;

        goto label07;

     label08:
        $i9 = r0.<android.support.v4.view.ViewPager: int mCurItem>;

        if $i9 == i0 goto label09;

        $z3 = 1;

        goto label10;

     label09:
        $z3 = 0;

     label10:
        z4 = $z3;

        $z2 = r0.<android.support.v4.view.ViewPager: boolean mFirstLayout>;

        if $z2 == 0 goto label13;

        r0.<android.support.v4.view.ViewPager: int mCurItem> = i0;

        if z4 == 0 goto label11;

        $r8 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener>;

        if $r8 == null goto label11;

        $r7 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener>;

        interfaceinvoke $r7.<android.support.v4.view.ViewPager$OnPageChangeListener: void onPageSelected(int)>(i0);

     label11:
        if z4 == 0 goto label12;

        $r6 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener>;

        if $r6 == null goto label12;

        $r5 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener>;

        interfaceinvoke $r5.<android.support.v4.view.ViewPager$OnPageChangeListener: void onPageSelected(int)>(i0);

     label12:
        virtualinvoke r0.<android.support.v4.view.ViewPager: void requestLayout()>();

        goto label14;

     label13:
        virtualinvoke r0.<android.support.v4.view.ViewPager: void populate(int)>(i0);

        specialinvoke r0.<android.support.v4.view.ViewPager: void scrollToItem(int,boolean,int,boolean)>(i0, z0, i1, z4);

     label14:
        return;
    }

    private void scrollToItem(int, boolean, int, boolean)
    {
        android.support.v4.view.ViewPager r0;
        int i0, i1, i2, i3;
        boolean z0, z1;
        android.support.v4.view.ViewPager$ItemInfo r1;
        android.support.v4.view.ViewPager$OnPageChangeListener $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;

        r0 := @this: android.support.v4.view.ViewPager;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        i1 := @parameter2: int;

        z1 := @parameter3: boolean;

        r1 = virtualinvoke r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForPosition(int)>(i0);

        i2 = 0;

        if r1 == null goto label1;

        i3 = specialinvoke r0.<android.support.v4.view.ViewPager: int getClientWidth()>();

        $f1 = (float) i3;

        $f4 = r0.<android.support.v4.view.ViewPager: float mFirstOffset>;

        $f2 = r1.<android.support.v4.view.ViewPager$ItemInfo: float offset>;

        $f0 = r0.<android.support.v4.view.ViewPager: float mLastOffset>;

        $f3 = staticinvoke <java.lang.Math: float min(float,float)>($f2, $f0);

        $f6 = staticinvoke <java.lang.Math: float max(float,float)>($f4, $f3);

        $f5 = $f1 * $f6;

        i2 = (int) $f5;

     label1:
        if z0 == 0 goto label3;

        virtualinvoke r0.<android.support.v4.view.ViewPager: void smoothScrollTo(int,int,int)>(i2, 0, i1);

        if z1 == 0 goto label2;

        $r9 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener>;

        if $r9 == null goto label2;

        $r8 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener>;

        interfaceinvoke $r8.<android.support.v4.view.ViewPager$OnPageChangeListener: void onPageSelected(int)>(i0);

     label2:
        if z1 == 0 goto label6;

        $r6 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener>;

        if $r6 == null goto label6;

        $r7 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener>;

        interfaceinvoke $r7.<android.support.v4.view.ViewPager$OnPageChangeListener: void onPageSelected(int)>(i0);

        goto label6;

     label3:
        if z1 == 0 goto label4;

        $r4 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener>;

        if $r4 == null goto label4;

        $r5 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener>;

        interfaceinvoke $r5.<android.support.v4.view.ViewPager$OnPageChangeListener: void onPageSelected(int)>(i0);

     label4:
        if z1 == 0 goto label5;

        $r2 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener>;

        if $r2 == null goto label5;

        $r3 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener>;

        interfaceinvoke $r3.<android.support.v4.view.ViewPager$OnPageChangeListener: void onPageSelected(int)>(i0);

     label5:
        specialinvoke r0.<android.support.v4.view.ViewPager: void completeScroll(boolean)>(0);

        virtualinvoke r0.<android.support.v4.view.ViewPager: void scrollTo(int,int)>(i2, 0);

        specialinvoke r0.<android.support.v4.view.ViewPager: boolean pageScrolled(int)>(i2);

     label6:
        return;
    }

    public void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)
    {
        android.support.v4.view.ViewPager r0;
        android.support.v4.view.ViewPager$OnPageChangeListener r1;

        r0 := @this: android.support.v4.view.ViewPager;

        r1 := @parameter0: android.support.v4.view.ViewPager$OnPageChangeListener;

        r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener> = r1;

        return;
    }

    public void setPageTransformer(boolean, android.support.v4.view.ViewPager$PageTransformer)
    {
        android.support.v4.view.ViewPager r0;
        boolean z0, z1, z2, $z3, $z4, $z5;
        android.support.v4.view.ViewPager$PageTransformer r1, $r2;
        int $i0;
        byte $b1;

        r0 := @this: android.support.v4.view.ViewPager;

        z0 := @parameter0: boolean;

        r1 := @parameter1: android.support.v4.view.ViewPager$PageTransformer;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 11 goto label11;

        if r1 == null goto label01;

        $z5 = 1;

        goto label02;

     label01:
        $z5 = 0;

     label02:
        z1 = $z5;

        $r2 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$PageTransformer mPageTransformer>;

        if $r2 == null goto label03;

        $z4 = 1;

        goto label04;

     label03:
        $z4 = 0;

     label04:
        if z1 == $z4 goto label05;

        $z3 = 1;

        goto label06;

     label05:
        $z3 = 0;

     label06:
        z2 = $z3;

        r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$PageTransformer mPageTransformer> = r1;

        virtualinvoke r0.<android.support.v4.view.ViewPager: void setChildrenDrawingOrderEnabledCompat(boolean)>(z1);

        if z1 == 0 goto label09;

        if z0 == 0 goto label07;

        $b1 = 2;

        goto label08;

     label07:
        $b1 = 1;

     label08:
        r0.<android.support.v4.view.ViewPager: int mDrawingOrder> = $b1;

        goto label10;

     label09:
        r0.<android.support.v4.view.ViewPager: int mDrawingOrder> = 0;

     label10:
        if z2 == 0 goto label11;

        virtualinvoke r0.<android.support.v4.view.ViewPager: void populate()>();

     label11:
        return;
    }

    void setChildrenDrawingOrderEnabledCompat(boolean)
    {
        android.support.v4.view.ViewPager r0;
        boolean z0;
        java.lang.NoSuchMethodException r1, $r12;
        int $i0;
        java.lang.reflect.Method $r2, $r4, $r10;
        java.lang.Object[] $r3;
        java.lang.Boolean $r5;
        java.lang.Class[] $r7;
        java.lang.Class $r8, $r9;
        java.lang.Exception $r11, r13;

        r0 := @this: android.support.v4.view.ViewPager;

        z0 := @parameter0: boolean;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 7 goto label7;

        $r2 = r0.<android.support.v4.view.ViewPager: java.lang.reflect.Method mSetChildrenDrawingOrderEnabled>;

        if $r2 != null goto label4;

     label1:
        $r9 = class "android/view/ViewGroup";

        $r7 = newarray (java.lang.Class)[1];

        $r8 = <java.lang.Boolean: java.lang.Class TYPE>;

        $r7[0] = $r8;

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("setChildrenDrawingOrderEnabled", $r7);

        r0.<android.support.v4.view.ViewPager: java.lang.reflect.Method mSetChildrenDrawingOrderEnabled> = $r10;

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        r1 = $r12;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewPager", "Can\'t find setChildrenDrawingOrderEnabled", r1);

     label4:
        $r4 = r0.<android.support.v4.view.ViewPager: java.lang.reflect.Method mSetChildrenDrawingOrderEnabled>;

        $r3 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        $r3[0] = $r5;

        virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r3);

     label5:
        goto label7;

     label6:
        $r11 := @caughtexception;

        r13 = $r11;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("ViewPager", "Error changing children drawing order", r13);

     label7:
        return;

        catch java.lang.NoSuchMethodException from label1 to label2 with label3;
        catch java.lang.Exception from label4 to label5 with label6;
    }

    protected int getChildDrawingOrder(int, int)
    {
        android.support.v4.view.ViewPager r0;
        int i0, i1, i2, i3, $i4, $i5, $i6;
        java.util.ArrayList $r1;
        java.lang.Object $r2;
        android.view.View $r3;
        android.view.ViewGroup$LayoutParams $r4;
        android.support.v4.view.ViewPager$LayoutParams $r5;

        r0 := @this: android.support.v4.view.ViewPager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i4 = r0.<android.support.v4.view.ViewPager: int mDrawingOrder>;

        if $i4 != 2 goto label1;

        $i5 = i0 - 1;

        $i6 = $i5 - i1;

        goto label2;

     label1:
        $i6 = i1;

     label2:
        i2 = $i6;

        $r1 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mDrawingOrderedChildren>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        $r3 = (android.view.View) $r2;

        $r4 = virtualinvoke $r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r5 = (android.support.v4.view.ViewPager$LayoutParams) $r4;

        i3 = $r5.<android.support.v4.view.ViewPager$LayoutParams: int childIndex>;

        return i3;
    }

    android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener)
    {
        android.support.v4.view.ViewPager r0;
        android.support.v4.view.ViewPager$OnPageChangeListener r1, r2;

        r0 := @this: android.support.v4.view.ViewPager;

        r1 := @parameter0: android.support.v4.view.ViewPager$OnPageChangeListener;

        r2 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener>;

        r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener> = r1;

        return r2;
    }

    public int getOffscreenPageLimit()
    {
        android.support.v4.view.ViewPager r0;
        int $i0;

        r0 := @this: android.support.v4.view.ViewPager;

        $i0 = r0.<android.support.v4.view.ViewPager: int mOffscreenPageLimit>;

        return $i0;
    }

    public void setOffscreenPageLimit(int)
    {
        android.support.v4.view.ViewPager r0;
        int i0, $i1;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: android.support.v4.view.ViewPager;

        i0 := @parameter0: int;

        if i0 >= 1 goto label1;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested offscreen page limit ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" too small; defaulting to ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("ViewPager", $r6);

        i0 = 1;

     label1:
        $i1 = r0.<android.support.v4.view.ViewPager: int mOffscreenPageLimit>;

        if i0 == $i1 goto label2;

        r0.<android.support.v4.view.ViewPager: int mOffscreenPageLimit> = i0;

        virtualinvoke r0.<android.support.v4.view.ViewPager: void populate()>();

     label2:
        return;
    }

    public void setPageMargin(int)
    {
        android.support.v4.view.ViewPager r0;
        int i0, i1, i2;

        r0 := @this: android.support.v4.view.ViewPager;

        i0 := @parameter0: int;

        i1 = r0.<android.support.v4.view.ViewPager: int mPageMargin>;

        r0.<android.support.v4.view.ViewPager: int mPageMargin> = i0;

        i2 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getWidth()>();

        specialinvoke r0.<android.support.v4.view.ViewPager: void recomputeScrollPosition(int,int,int,int)>(i2, i2, i0, i1);

        virtualinvoke r0.<android.support.v4.view.ViewPager: void requestLayout()>();

        return;
    }

    public int getPageMargin()
    {
        android.support.v4.view.ViewPager r0;
        int $i0;

        r0 := @this: android.support.v4.view.ViewPager;

        $i0 = r0.<android.support.v4.view.ViewPager: int mPageMargin>;

        return $i0;
    }

    public void setPageMarginDrawable(android.graphics.drawable.Drawable)
    {
        android.support.v4.view.ViewPager r0;
        android.graphics.drawable.Drawable r1;
        boolean $z0;

        r0 := @this: android.support.v4.view.ViewPager;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r0.<android.support.v4.view.ViewPager: android.graphics.drawable.Drawable mMarginDrawable> = r1;

        if r1 == null goto label1;

        virtualinvoke r0.<android.support.v4.view.ViewPager: void refreshDrawableState()>();

     label1:
        if r1 != null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        virtualinvoke r0.<android.support.v4.view.ViewPager: void setWillNotDraw(boolean)>($z0);

        virtualinvoke r0.<android.support.v4.view.ViewPager: void invalidate()>();

        return;
    }

    public void setPageMarginDrawable(int)
    {
        android.support.v4.view.ViewPager r0;
        int i0;
        android.content.Context $r1;
        android.content.res.Resources $r2;
        android.graphics.drawable.Drawable $r3;

        r0 := @this: android.support.v4.view.ViewPager;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.support.v4.view.ViewPager: android.content.Context getContext()>();

        $r2 = virtualinvoke $r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r3 = virtualinvoke $r2.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(i0);

        virtualinvoke r0.<android.support.v4.view.ViewPager: void setPageMarginDrawable(android.graphics.drawable.Drawable)>($r3);

        return;
    }

    protected boolean verifyDrawable(android.graphics.drawable.Drawable)
    {
        android.support.v4.view.ViewPager r0;
        android.graphics.drawable.Drawable r1, $r2;
        boolean $z0, $z1;

        r0 := @this: android.support.v4.view.ViewPager;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $z0 = specialinvoke r0.<android.view.ViewGroup: boolean verifyDrawable(android.graphics.drawable.Drawable)>(r1);

        if $z0 != 0 goto label1;

        $r2 = r0.<android.support.v4.view.ViewPager: android.graphics.drawable.Drawable mMarginDrawable>;

        if r1 != $r2 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    protected void drawableStateChanged()
    {
        android.support.v4.view.ViewPager r0;
        android.graphics.drawable.Drawable r1;
        boolean $z0;
        int[] $r2;

        r0 := @this: android.support.v4.view.ViewPager;

        specialinvoke r0.<android.view.ViewGroup: void drawableStateChanged()>();

        r1 = r0.<android.support.v4.view.ViewPager: android.graphics.drawable.Drawable mMarginDrawable>;

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.graphics.drawable.Drawable: boolean isStateful()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<android.support.v4.view.ViewPager: int[] getDrawableState()>();

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean setState(int[])>($r2);

     label1:
        return;
    }

    float distanceInfluenceForSnapDuration(float)
    {
        android.support.v4.view.ViewPager r0;
        float f0, $f1, f2, f3;
        double $d0, $d1, $d2, $d3;

        r0 := @this: android.support.v4.view.ViewPager;

        f0 := @parameter0: float;

        f2 = f0 - 0.5F;

        $d0 = (double) f2;

        $d1 = $d0 * 0.4712389167638204;

        f3 = (float) $d1;

        $d2 = (double) f3;

        $d3 = staticinvoke <java.lang.Math: double sin(double)>($d2);

        $f1 = (float) $d3;

        return $f1;
    }

    void smoothScrollTo(int, int)
    {
        android.support.v4.view.ViewPager r0;
        int i0, i1;

        r0 := @this: android.support.v4.view.ViewPager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<android.support.v4.view.ViewPager: void smoothScrollTo(int,int,int)>(i0, i1, 0);

        return;
    }

    void smoothScrollTo(int, int, int)
    {
        android.support.v4.view.ViewPager r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, i16, i17;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22;
        android.support.v4.view.PagerAdapter $r1;
        android.widget.Scroller $r2;

        r0 := @this: android.support.v4.view.ViewPager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i9 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getChildCount()>();

        if $i9 != 0 goto label1;

        specialinvoke r0.<android.support.v4.view.ViewPager: void setScrollingCacheEnabled(boolean)>(0);

        return;

     label1:
        i3 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getScrollX()>();

        i4 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getScrollY()>();

        i5 = i0 - i3;

        i6 = i1 - i4;

        if i5 != 0 goto label2;

        if i6 != 0 goto label2;

        specialinvoke r0.<android.support.v4.view.ViewPager: void completeScroll(boolean)>(0);

        virtualinvoke r0.<android.support.v4.view.ViewPager: void populate()>();

        specialinvoke r0.<android.support.v4.view.ViewPager: void setScrollState(int)>(0);

        return;

     label2:
        specialinvoke r0.<android.support.v4.view.ViewPager: void setScrollingCacheEnabled(boolean)>(1);

        specialinvoke r0.<android.support.v4.view.ViewPager: void setScrollState(int)>(2);

        i7 = specialinvoke r0.<android.support.v4.view.ViewPager: int getClientWidth()>();

        i8 = i7 / 2;

        $i10 = staticinvoke <java.lang.Math: int abs(int)>(i5);

        $f5 = (float) $i10;

        $f7 = 1.0F * $f5;

        $f4 = (float) i7;

        $f6 = $f7 / $f4;

        f0 = staticinvoke <java.lang.Math: float min(float,float)>(1.0F, $f6);

        $f8 = (float) i8;

        $f10 = (float) i8;

        $f9 = virtualinvoke r0.<android.support.v4.view.ViewPager: float distanceInfluenceForSnapDuration(float)>(f0);

        $f11 = $f10 * $f9;

        f1 = $f8 + $f11;

        i15 = staticinvoke <java.lang.Math: int abs(int)>(i2);

        if i15 <= 0 goto label3;

        $f20 = (float) i15;

        $f19 = f1 / $f20;

        $f22 = staticinvoke <java.lang.Math: float abs(float)>($f19);

        $f21 = 1000.0F * $f22;

        $i14 = staticinvoke <java.lang.Math: int round(float)>($f21);

        i16 = 4 * $i14;

        goto label4;

     label3:
        $f12 = (float) i7;

        $r1 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $i11 = r0.<android.support.v4.view.ViewPager: int mCurItem>;

        $f13 = virtualinvoke $r1.<android.support.v4.view.PagerAdapter: float getPageWidth(int)>($i11);

        f2 = $f12 * $f13;

        $i12 = staticinvoke <java.lang.Math: int abs(int)>(i5);

        $f17 = (float) $i12;

        $i13 = r0.<android.support.v4.view.ViewPager: int mPageMargin>;

        $f14 = (float) $i13;

        $f15 = f2 + $f14;

        f3 = $f17 / $f15;

        $f18 = f3 + 1.0F;

        $f16 = $f18 * 100.0F;

        i16 = (int) $f16;

     label4:
        i17 = staticinvoke <java.lang.Math: int min(int,int)>(i16, 600);

        $r2 = r0.<android.support.v4.view.ViewPager: android.widget.Scroller mScroller>;

        virtualinvoke $r2.<android.widget.Scroller: void startScroll(int,int,int,int,int)>(i3, i4, i5, i6, i17);

        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(r0);

        return;
    }

    android.support.v4.view.ViewPager$ItemInfo addNewItem(int, int)
    {
        android.support.v4.view.ViewPager r0;
        int i0, i1, $i2;
        android.support.v4.view.ViewPager$ItemInfo r1, $r2;
        android.support.v4.view.PagerAdapter $r3, $r5;
        java.lang.Object $r4;
        float $f0;
        java.util.ArrayList $r6, $r7, $r8;

        r0 := @this: android.support.v4.view.ViewPager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = new android.support.v4.view.ViewPager$ItemInfo;

        specialinvoke $r2.<android.support.v4.view.ViewPager$ItemInfo: void <init>()>();

        r1 = $r2;

        r1.<android.support.v4.view.ViewPager$ItemInfo: int position> = i0;

        $r3 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $r4 = virtualinvoke $r3.<android.support.v4.view.PagerAdapter: java.lang.Object instantiateItem(android.view.ViewGroup,int)>(r0, i0);

        r1.<android.support.v4.view.ViewPager$ItemInfo: java.lang.Object object> = $r4;

        $r5 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $f0 = virtualinvoke $r5.<android.support.v4.view.PagerAdapter: float getPageWidth(int)>(i0);

        r1.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor> = $f0;

        if i1 < 0 goto label1;

        $r7 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i2 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        if i1 < $i2 goto label2;

     label1:
        $r6 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        goto label3;

     label2:
        $r8 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        virtualinvoke $r8.<java.util.ArrayList: void add(int,java.lang.Object)>(i1, r1);

     label3:
        return r1;
    }

    void dataSetChanged()
    {
        android.support.v4.view.ViewPager r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, i20;
        boolean z0, z1, $z2, $z3;
        android.support.v4.view.ViewPager$ItemInfo r1;
        android.support.v4.view.ViewPager$LayoutParams r2;
        android.support.v4.view.PagerAdapter $r3, $r10, $r13, $r17, $r19;
        java.util.ArrayList $r4, $r5, $r6, $r9, $r16, $r18;
        java.util.Comparator $r7;
        android.view.ViewGroup$LayoutParams $r8;
        java.lang.Object $r11, $r12, $r15;
        android.view.View r20;

        r0 := @this: android.support.v4.view.ViewPager;

        $r3 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        i0 = virtualinvoke $r3.<android.support.v4.view.PagerAdapter: int getCount()>();

        r0.<android.support.v4.view.ViewPager: int mExpectedAdapterCount> = i0;

        $r4 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i4 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $i5 = r0.<android.support.v4.view.ViewPager: int mOffscreenPageLimit>;

        $i6 = $i5 * 2;

        $i7 = $i6 + 1;

        if $i4 >= $i7 goto label01;

        $r18 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i18 = virtualinvoke $r18.<java.util.ArrayList: int size()>();

        if $i18 >= i0 goto label01;

        $z3 = 1;

        goto label02;

     label01:
        $z3 = 0;

     label02:
        z0 = $z3;

        i1 = r0.<android.support.v4.view.ViewPager: int mCurItem>;

        z1 = 0;

        i2 = 0;

     label03:
        $r5 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i8 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if i2 >= $i8 goto label09;

        $r9 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r12 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r1 = (android.support.v4.view.ViewPager$ItemInfo) $r12;

        $r13 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $r11 = r1.<android.support.v4.view.ViewPager$ItemInfo: java.lang.Object object>;

        i3 = virtualinvoke $r13.<android.support.v4.view.PagerAdapter: int getItemPosition(java.lang.Object)>($r11);

        if i3 != -1 goto label04;

        goto label08;

     label04:
        if i3 != -2 goto label06;

        $r16 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        virtualinvoke $r16.<java.util.ArrayList: java.lang.Object remove(int)>(i2);

        i2 = i2 + -1;

        if z1 != 0 goto label05;

        $r19 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        virtualinvoke $r19.<android.support.v4.view.PagerAdapter: void startUpdate(android.view.ViewGroup)>(r0);

        z1 = 1;

     label05:
        $r17 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $i14 = r1.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $r15 = r1.<android.support.v4.view.ViewPager$ItemInfo: java.lang.Object object>;

        virtualinvoke $r17.<android.support.v4.view.PagerAdapter: void destroyItem(android.view.ViewGroup,int,java.lang.Object)>(r0, $i14, $r15);

        z0 = 1;

        $i13 = r0.<android.support.v4.view.ViewPager: int mCurItem>;

        $i12 = r1.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if $i13 != $i12 goto label08;

        $i17 = r0.<android.support.v4.view.ViewPager: int mCurItem>;

        $i16 = i0 - 1;

        $i15 = staticinvoke <java.lang.Math: int min(int,int)>($i17, $i16);

        i1 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i15);

        z0 = 1;

        goto label08;

     label06:
        $i10 = r1.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if $i10 == i3 goto label08;

        $i11 = r1.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $i9 = r0.<android.support.v4.view.ViewPager: int mCurItem>;

        if $i11 != $i9 goto label07;

        i1 = i3;

     label07:
        r1.<android.support.v4.view.ViewPager$ItemInfo: int position> = i3;

        z0 = 1;

     label08:
        i2 = i2 + 1;

        goto label03;

     label09:
        if z1 == 0 goto label10;

        $r10 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        virtualinvoke $r10.<android.support.v4.view.PagerAdapter: void finishUpdate(android.view.ViewGroup)>(r0);

     label10:
        $r6 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r7 = <android.support.v4.view.ViewPager: java.util.Comparator COMPARATOR>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r6, $r7);

        if z0 == 0 goto label14;

        i19 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getChildCount()>();

        i20 = 0;

     label11:
        if i20 >= i19 goto label13;

        r20 = virtualinvoke r0.<android.support.v4.view.ViewPager: android.view.View getChildAt(int)>(i20);

        $r8 = virtualinvoke r20.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.support.v4.view.ViewPager$LayoutParams) $r8;

        $z2 = r2.<android.support.v4.view.ViewPager$LayoutParams: boolean isDecor>;

        if $z2 != 0 goto label12;

        r2.<android.support.v4.view.ViewPager$LayoutParams: float widthFactor> = 0.0F;

     label12:
        i20 = i20 + 1;

        goto label11;

     label13:
        virtualinvoke r0.<android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean)>(i1, 0, 1);

        virtualinvoke r0.<android.support.v4.view.ViewPager: void requestLayout()>();

     label14:
        return;
    }

    void populate()
    {
        android.support.v4.view.ViewPager r0;
        int $i0;

        r0 := @this: android.support.v4.view.ViewPager;

        $i0 = r0.<android.support.v4.view.ViewPager: int mCurItem>;

        virtualinvoke r0.<android.support.v4.view.ViewPager: void populate(int)>($i0);

        return;
    }

    void populate(int)
    {
        android.support.v4.view.ViewPager r0;
        int i0, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i25, $i26, $i27, $i28, $i29, $i31, $i32, $i34, $i35, $i36, $i37, $i38, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, i54, i55, i56, i57, i58;
        android.support.v4.view.ViewPager$ItemInfo r1, r4, r5, $r14, $r22, $r27, $r31, $r36, $r38, $r40, $r44, $r54, r72, r73, r74, r75, r78, r80, r82;
        byte b1, $b24, $b30, $b33, $b39, $b52;
        java.lang.String r2, $r63;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, f18, f19;
        android.support.v4.view.PagerAdapter $r6, $r8, $r9, $r11, $r12, $r25, $r47, $r60;
        android.os.IBinder $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.ArrayList $r10, $r16, $r17, $r18, $r19, $r21, $r24, $r29, $r32, $r34, $r37, $r39, $r42, $r43, $r46, $r57;
        android.view.ViewGroup$LayoutParams $r13;
        java.lang.Object $r15, $r20, $r26, $r28, $r30, $r33, $r35, $r41, $r45, $r48, $r55, $r56;
        android.content.res.Resources $r50;
        java.lang.IllegalStateException $r51;
        java.lang.StringBuilder $r52, $r53, $r58, $r59, $r62, $r64, $r65, $r66, $r67, $r68, $r69;
        java.lang.Class $r61, $r70;
        android.content.res.Resources$NotFoundException $r71;
        android.view.View r76, r79, r81;
        android.support.v4.view.ViewPager$LayoutParams r77;

        r0 := @this: android.support.v4.view.ViewPager;

        i0 := @parameter0: int;

        r1 = null;

        b1 = 2;

        $i10 = r0.<android.support.v4.view.ViewPager: int mCurItem>;

        if $i10 == i0 goto label03;

        $i48 = r0.<android.support.v4.view.ViewPager: int mCurItem>;

        if $i48 >= i0 goto label01;

        $b52 = 66;

        goto label02;

     label01:
        $b52 = 17;

     label02:
        b1 = $b52;

        $i49 = r0.<android.support.v4.view.ViewPager: int mCurItem>;

        r1 = virtualinvoke r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForPosition(int)>($i49);

        r0.<android.support.v4.view.ViewPager: int mCurItem> = i0;

     label03:
        $r6 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        if $r6 != null goto label04;

        specialinvoke r0.<android.support.v4.view.ViewPager: void sortChildDrawingOrder()>();

        return;

     label04:
        $z0 = r0.<android.support.v4.view.ViewPager: boolean mPopulatePending>;

        if $z0 == 0 goto label05;

        specialinvoke r0.<android.support.v4.view.ViewPager: void sortChildDrawingOrder()>();

        return;

     label05:
        $r7 = virtualinvoke r0.<android.support.v4.view.ViewPager: android.os.IBinder getWindowToken()>();

        if $r7 != null goto label06;

        return;

     label06:
        $r8 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        virtualinvoke $r8.<android.support.v4.view.PagerAdapter: void startUpdate(android.view.ViewGroup)>(r0);

        i2 = r0.<android.support.v4.view.ViewPager: int mOffscreenPageLimit>;

        $i11 = r0.<android.support.v4.view.ViewPager: int mCurItem>;

        $i12 = $i11 - i2;

        i3 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i12);

        $r9 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        i4 = virtualinvoke $r9.<android.support.v4.view.PagerAdapter: int getCount()>();

        $i15 = i4 - 1;

        $i14 = r0.<android.support.v4.view.ViewPager: int mCurItem>;

        $i13 = $i14 + i2;

        i5 = staticinvoke <java.lang.Math: int min(int,int)>($i15, $i13);

        $i18 = r0.<android.support.v4.view.ViewPager: int mExpectedAdapterCount>;

        if i4 == $i18 goto label11;

     label07:
        $r50 = virtualinvoke r0.<android.support.v4.view.ViewPager: android.content.res.Resources getResources()>();

        $i44 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getId()>();

        r2 = virtualinvoke $r50.<android.content.res.Resources: java.lang.String getResourceName(int)>($i44);

     label08:
        goto label10;

     label09:
        $r71 := @caughtexception;

        $i51 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getId()>();

        r2 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i51);

     label10:
        $r51 = new java.lang.IllegalStateException;

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The application\'s PagerAdapter changed the adapter\'s contents without calling PagerAdapter#notifyDataSetChanged! Expected adapter item count: ");

        $i50 = r0.<android.support.v4.view.ViewPager: int mExpectedAdapterCount>;

        $r64 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i50);

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", found: ");

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Pager id: ");

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Pager class: ");

        $r70 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r58 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r70);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Problematic adapter: ");

        $r60 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $r61 = virtualinvoke $r60.<java.lang.Object: java.lang.Class getClass()>();

        $r62 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r61);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r51.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r63);

        throw $r51;

     label11:
        r72 = null;

        i54 = 0;

     label12:
        $r10 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i16 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        if i54 >= $i16 goto label14;

        $r57 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r56 = virtualinvoke $r57.<java.util.ArrayList: java.lang.Object get(int)>(i54);

        r4 = (android.support.v4.view.ViewPager$ItemInfo) $r56;

        $i46 = r4.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $i47 = r0.<android.support.v4.view.ViewPager: int mCurItem>;

        if $i46 < $i47 goto label13;

        $i42 = r4.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $i43 = r0.<android.support.v4.view.ViewPager: int mCurItem>;

        if $i42 != $i43 goto label14;

        r72 = r4;

        goto label14;

     label13:
        i54 = i54 + 1;

        goto label12;

     label14:
        if r72 != null goto label15;

        if i4 <= 0 goto label15;

        $i45 = r0.<android.support.v4.view.ViewPager: int mCurItem>;

        r72 = virtualinvoke r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int)>($i45, i54);

     label15:
        if r72 == null goto label48;

        f18 = 0.0F;

        i6 = i54 - 1;

        if i6 < 0 goto label16;

        $r43 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r55 = virtualinvoke $r43.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        $r54 = (android.support.v4.view.ViewPager$ItemInfo) $r55;

        goto label17;

     label16:
        $r54 = null;

     label17:
        r5 = $r54;

        i7 = specialinvoke r0.<android.support.v4.view.ViewPager: int getClientWidth()>();

        if i7 > 0 goto label18;

        $f17 = 0.0F;

        goto label19;

     label18:
        $f6 = r72.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor>;

        $f5 = 2.0F - $f6;

        $i26 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getPaddingLeft()>();

        $f8 = (float) $i26;

        $f4 = (float) i7;

        $f9 = $f8 / $f4;

        $f17 = $f5 + $f9;

     label19:
        f0 = $f17;

        $i29 = r0.<android.support.v4.view.ViewPager: int mCurItem>;

        i8 = $i29 - 1;

     label20:
        if i8 < 0 goto label31;

        $b39 = f18 cmpl f0;

        if $b39 < 0 goto label24;

        if i8 >= i3 goto label24;

        if r5 != null goto label21;

        goto label31;

     label21:
        $i40 = r5.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if i8 != $i40 goto label30;

        $z5 = r5.<android.support.v4.view.ViewPager$ItemInfo: boolean scrolling>;

        if $z5 != 0 goto label30;

        $r39 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        virtualinvoke $r39.<java.util.ArrayList: java.lang.Object remove(int)>(i6);

        $r47 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $r48 = r5.<android.support.v4.view.ViewPager$ItemInfo: java.lang.Object object>;

        virtualinvoke $r47.<android.support.v4.view.PagerAdapter: void destroyItem(android.view.ViewGroup,int,java.lang.Object)>(r0, i8, $r48);

        i6 = i6 + -1;

        i54 = i54 + -1;

        if i6 < 0 goto label22;

        $r46 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r45 = virtualinvoke $r46.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        $r44 = (android.support.v4.view.ViewPager$ItemInfo) $r45;

        goto label23;

     label22:
        $r44 = null;

     label23:
        r5 = $r44;

        goto label30;

     label24:
        if r5 == null goto label27;

        $i41 = r5.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if i8 != $i41 goto label27;

        $f16 = r5.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor>;

        f18 = f18 + $f16;

        i6 = i6 + -1;

        if i6 < 0 goto label25;

        $r42 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r41 = virtualinvoke $r42.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        $r40 = (android.support.v4.view.ViewPager$ItemInfo) $r41;

        goto label26;

     label25:
        $r40 = null;

     label26:
        r5 = $r40;

        goto label30;

     label27:
        $i38 = i6 + 1;

        r73 = virtualinvoke r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int)>(i8, $i38);

        $f15 = r73.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor>;

        f18 = f18 + $f15;

        i54 = i54 + 1;

        if i6 < 0 goto label28;

        $r37 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r35 = virtualinvoke $r37.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        $r36 = (android.support.v4.view.ViewPager$ItemInfo) $r35;

        goto label29;

     label28:
        $r36 = null;

     label29:
        r5 = $r36;

     label30:
        i8 = i8 + -1;

        goto label20;

     label31:
        f19 = r72.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor>;

        i55 = i54 + 1;

        $b30 = f19 cmpg 2.0F;

        if $b30 >= 0 goto label47;

        $r16 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i27 = virtualinvoke $r16.<java.util.ArrayList: int size()>();

        if i55 >= $i27 goto label32;

        $r29 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r30 = virtualinvoke $r29.<java.util.ArrayList: java.lang.Object get(int)>(i55);

        $r38 = (android.support.v4.view.ViewPager$ItemInfo) $r30;

        goto label33;

     label32:
        $r38 = null;

     label33:
        r74 = $r38;

        if i7 > 0 goto label34;

        $f14 = 0.0F;

        goto label35;

     label34:
        $i28 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getPaddingRight()>();

        $f11 = (float) $i28;

        $f7 = (float) i7;

        $f12 = $f11 / $f7;

        $f14 = $f12 + 2.0F;

     label35:
        f1 = $f14;

        $i32 = r0.<android.support.v4.view.ViewPager: int mCurItem>;

        i9 = $i32 + 1;

     label36:
        if i9 >= i4 goto label47;

        $b33 = f19 cmpl f1;

        if $b33 < 0 goto label40;

        if i9 <= i5 goto label40;

        if r74 != null goto label37;

        goto label47;

     label37:
        $i36 = r74.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if i9 != $i36 goto label46;

        $z4 = r74.<android.support.v4.view.ViewPager$ItemInfo: boolean scrolling>;

        if $z4 != 0 goto label46;

        $r24 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        virtualinvoke $r24.<java.util.ArrayList: java.lang.Object remove(int)>(i55);

        $r25 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $r26 = r74.<android.support.v4.view.ViewPager$ItemInfo: java.lang.Object object>;

        virtualinvoke $r25.<android.support.v4.view.PagerAdapter: void destroyItem(android.view.ViewGroup,int,java.lang.Object)>(r0, i9, $r26);

        $r34 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i37 = virtualinvoke $r34.<java.util.ArrayList: int size()>();

        if i55 >= $i37 goto label38;

        $r32 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r33 = virtualinvoke $r32.<java.util.ArrayList: java.lang.Object get(int)>(i55);

        $r31 = (android.support.v4.view.ViewPager$ItemInfo) $r33;

        goto label39;

     label38:
        $r31 = null;

     label39:
        r74 = $r31;

        goto label46;

     label40:
        if r74 == null goto label43;

        $i35 = r74.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if i9 != $i35 goto label43;

        $f13 = r74.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor>;

        f19 = f19 + $f13;

        i55 = i55 + 1;

        $r18 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i34 = virtualinvoke $r18.<java.util.ArrayList: int size()>();

        if i55 >= $i34 goto label41;

        $r19 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r28 = virtualinvoke $r19.<java.util.ArrayList: java.lang.Object get(int)>(i55);

        $r27 = (android.support.v4.view.ViewPager$ItemInfo) $r28;

        goto label42;

     label41:
        $r27 = null;

     label42:
        r74 = $r27;

        goto label46;

     label43:
        r75 = virtualinvoke r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int)>(i9, i55);

        i55 = i55 + 1;

        $f10 = r75.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor>;

        f19 = f19 + $f10;

        $r17 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i31 = virtualinvoke $r17.<java.util.ArrayList: int size()>();

        if i55 >= $i31 goto label44;

        $r21 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r20 = virtualinvoke $r21.<java.util.ArrayList: java.lang.Object get(int)>(i55);

        $r22 = (android.support.v4.view.ViewPager$ItemInfo) $r20;

        goto label45;

     label44:
        $r22 = null;

     label45:
        r74 = $r22;

     label46:
        i9 = i9 + 1;

        goto label36;

     label47:
        specialinvoke r0.<android.support.v4.view.ViewPager: void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo)>(r72, i54, r1);

     label48:
        $r11 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $i17 = r0.<android.support.v4.view.ViewPager: int mCurItem>;

        if r72 == null goto label49;

        $r15 = r72.<android.support.v4.view.ViewPager$ItemInfo: java.lang.Object object>;

        goto label50;

     label49:
        $r15 = null;

     label50:
        virtualinvoke $r11.<android.support.v4.view.PagerAdapter: void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object)>(r0, $i17, $r15);

        $r12 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        virtualinvoke $r12.<android.support.v4.view.PagerAdapter: void finishUpdate(android.view.ViewGroup)>(r0);

        i56 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getChildCount()>();

        i57 = 0;

     label51:
        if i57 >= i56 goto label53;

        r76 = virtualinvoke r0.<android.support.v4.view.ViewPager: android.view.View getChildAt(int)>(i57);

        $r13 = virtualinvoke r76.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r77 = (android.support.v4.view.ViewPager$LayoutParams) $r13;

        r77.<android.support.v4.view.ViewPager$LayoutParams: int childIndex> = i57;

        $z3 = r77.<android.support.v4.view.ViewPager$LayoutParams: boolean isDecor>;

        if $z3 != 0 goto label52;

        $f2 = r77.<android.support.v4.view.ViewPager$LayoutParams: float widthFactor>;

        $b24 = $f2 cmpl 0.0F;

        if $b24 != 0 goto label52;

        r78 = virtualinvoke r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View)>(r76);

        if r78 == null goto label52;

        $f3 = r78.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor>;

        r77.<android.support.v4.view.ViewPager$LayoutParams: float widthFactor> = $f3;

        $i25 = r78.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        r77.<android.support.v4.view.ViewPager$LayoutParams: int position> = $i25;

     label52:
        i57 = i57 + 1;

        goto label51;

     label53:
        specialinvoke r0.<android.support.v4.view.ViewPager: void sortChildDrawingOrder()>();

        $z1 = virtualinvoke r0.<android.support.v4.view.ViewPager: boolean hasFocus()>();

        if $z1 == 0 goto label59;

        r79 = virtualinvoke r0.<android.support.v4.view.ViewPager: android.view.View findFocus()>();

        if r79 == null goto label54;

        $r14 = virtualinvoke r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View)>(r79);

        goto label55;

     label54:
        $r14 = null;

     label55:
        r80 = $r14;

        if r80 == null goto label56;

        $i23 = r80.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $i20 = r0.<android.support.v4.view.ViewPager: int mCurItem>;

        if $i23 == $i20 goto label59;

     label56:
        i58 = 0;

     label57:
        $i19 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getChildCount()>();

        if i58 >= $i19 goto label59;

        r81 = virtualinvoke r0.<android.support.v4.view.ViewPager: android.view.View getChildAt(int)>(i58);

        r82 = virtualinvoke r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View)>(r81);

        if r82 == null goto label58;

        $i22 = r82.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $i21 = r0.<android.support.v4.view.ViewPager: int mCurItem>;

        if $i22 != $i21 goto label58;

        $z2 = virtualinvoke r81.<android.view.View: boolean requestFocus(int)>(b1);

        if $z2 == 0 goto label58;

        goto label59;

     label58:
        i58 = i58 + 1;

        goto label57;

     label59:
        return;

        catch android.content.res.Resources$NotFoundException from label07 to label08 with label09;
    }

    private void sortChildDrawingOrder()
    {
        android.support.v4.view.ViewPager r0;
        int i0, i1, $i2;
        android.view.View r1;
        java.util.ArrayList $r2, $r3, $r5, $r6, $r7;
        android.support.v4.view.ViewPager$ViewPositionComparator $r4;

        r0 := @this: android.support.v4.view.ViewPager;

        $i2 = r0.<android.support.v4.view.ViewPager: int mDrawingOrder>;

        if $i2 == 0 goto label5;

        $r2 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mDrawingOrderedChildren>;

        if $r2 != null goto label1;

        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r0.<android.support.v4.view.ViewPager: java.util.ArrayList mDrawingOrderedChildren> = $r7;

        goto label2;

     label1:
        $r3 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mDrawingOrderedChildren>;

        virtualinvoke $r3.<java.util.ArrayList: void clear()>();

     label2:
        i0 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getChildCount()>();

        i1 = 0;

     label3:
        if i1 >= i0 goto label4;

        r1 = virtualinvoke r0.<android.support.v4.view.ViewPager: android.view.View getChildAt(int)>(i1);

        $r6 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mDrawingOrderedChildren>;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        i1 = i1 + 1;

        goto label3;

     label4:
        $r5 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mDrawingOrderedChildren>;

        $r4 = <android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator>;

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r5, $r4);

     label5:
        return;
    }

    private void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo, int, android.support.v4.view.ViewPager$ItemInfo)
    {
        android.support.v4.view.ViewPager r0;
        android.support.v4.view.ViewPager$ItemInfo r1, r2, r24, r25, r26, r27;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, i31, i32, i33, i34, i35, i36, i37;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, f35, f36, f37;
        android.support.v4.view.PagerAdapter $r3, $r8, $r10, $r16, $r21;
        java.util.ArrayList $r4, $r5, $r7, $r11, $r12, $r14, $r17, $r19, $r20, $r23;
        java.lang.Object $r6, $r9, $r13, $r15, $r18, $r22;

        r0 := @this: android.support.v4.view.ViewPager;

        r1 := @parameter0: android.support.v4.view.ViewPager$ItemInfo;

        i0 := @parameter1: int;

        r2 := @parameter2: android.support.v4.view.ViewPager$ItemInfo;

        $r3 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        i1 = virtualinvoke $r3.<android.support.v4.view.PagerAdapter: int getCount()>();

        i2 = specialinvoke r0.<android.support.v4.view.ViewPager: int getClientWidth()>();

        if i2 <= 0 goto label01;

        $i30 = r0.<android.support.v4.view.ViewPager: int mPageMargin>;

        $f33 = (float) $i30;

        $f34 = (float) i2;

        $f32 = $f33 / $f34;

        goto label02;

     label01:
        $f32 = 0.0F;

     label02:
        f0 = $f32;

        if r2 == null goto label13;

        i3 = r2.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $i19 = r1.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if i3 >= $i19 goto label08;

        i4 = 0;

        $f23 = r2.<android.support.v4.view.ViewPager$ItemInfo: float offset>;

        $f22 = r2.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor>;

        $f27 = $f23 + $f22;

        f1 = $f27 + f0;

        i5 = i3 + 1;

     label03:
        $i26 = r1.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if i5 > $i26 goto label07;

        $r19 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i27 = virtualinvoke $r19.<java.util.ArrayList: int size()>();

        if i4 >= $i27 goto label07;

        $r17 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r18 = virtualinvoke $r17.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r24 = (android.support.v4.view.ViewPager$ItemInfo) $r18;

     label04:
        $i24 = r24.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if i5 <= $i24 goto label05;

        $r20 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i29 = virtualinvoke $r20.<java.util.ArrayList: int size()>();

        $i28 = $i29 - 1;

        if i4 >= $i28 goto label05;

        i4 = i4 + 1;

        $r23 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r22 = virtualinvoke $r23.<java.util.ArrayList: java.lang.Object get(int)>(i4);

        r24 = (android.support.v4.view.ViewPager$ItemInfo) $r22;

        goto label04;

     label05:
        $i25 = r24.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if i5 >= $i25 goto label06;

        $r21 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $f31 = virtualinvoke $r21.<android.support.v4.view.PagerAdapter: float getPageWidth(int)>(i5);

        $f28 = $f31 + f0;

        f1 = f1 + $f28;

        i5 = i5 + 1;

        goto label05;

     label06:
        r24.<android.support.v4.view.ViewPager$ItemInfo: float offset> = f1;

        $f30 = r24.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor>;

        $f29 = $f30 + f0;

        f1 = f1 + $f29;

        i5 = i5 + 1;

        goto label03;

     label07:
        goto label13;

     label08:
        $i18 = r1.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if i3 <= $i18 goto label13;

        $r12 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i21 = virtualinvoke $r12.<java.util.ArrayList: int size()>();

        i31 = $i21 - 1;

        f35 = r2.<android.support.v4.view.ViewPager$ItemInfo: float offset>;

        i32 = i3 - 1;

     label09:
        $i20 = r1.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if i32 < $i20 goto label13;

        if i31 < 0 goto label13;

        $r11 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r13 = virtualinvoke $r11.<java.util.ArrayList: java.lang.Object get(int)>(i31);

        r25 = (android.support.v4.view.ViewPager$ItemInfo) $r13;

     label10:
        $i23 = r25.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if i32 >= $i23 goto label11;

        if i31 <= 0 goto label11;

        i31 = i31 + -1;

        $r14 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r15 = virtualinvoke $r14.<java.util.ArrayList: java.lang.Object get(int)>(i31);

        r25 = (android.support.v4.view.ViewPager$ItemInfo) $r15;

        goto label10;

     label11:
        $i22 = r25.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if i32 <= $i22 goto label12;

        $r16 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $f25 = virtualinvoke $r16.<android.support.v4.view.PagerAdapter: float getPageWidth(int)>(i32);

        $f26 = $f25 + f0;

        f35 = f35 - $f26;

        i32 = i32 + -1;

        goto label11;

     label12:
        $f21 = r25.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor>;

        $f24 = $f21 + f0;

        f35 = f35 - $f24;

        r25.<android.support.v4.view.ViewPager$ItemInfo: float offset> = f35;

        i32 = i32 + -1;

        goto label09;

     label13:
        $r4 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        i33 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        f36 = r1.<android.support.v4.view.ViewPager$ItemInfo: float offset>;

        $i6 = r1.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        i34 = $i6 - 1;

        $i8 = r1.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if $i8 != 0 goto label14;

        $f19 = r1.<android.support.v4.view.ViewPager$ItemInfo: float offset>;

        goto label15;

     label14:
        $f19 = -3.4028235E38F;

     label15:
        r0.<android.support.v4.view.ViewPager: float mFirstOffset> = $f19;

        $i9 = r1.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $i7 = i1 - 1;

        if $i9 != $i7 goto label16;

        $f16 = r1.<android.support.v4.view.ViewPager$ItemInfo: float offset>;

        $f17 = r1.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor>;

        $f15 = $f16 + $f17;

        $f20 = $f15 - 1.0F;

        goto label17;

     label16:
        $f20 = 3.4028235E38F;

     label17:
        r0.<android.support.v4.view.ViewPager: float mLastOffset> = $f20;

        i35 = i0 - 1;

     label18:
        if i35 < 0 goto label22;

        $r7 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r9 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i35);

        r26 = (android.support.v4.view.ViewPager$ItemInfo) $r9;

     label19:
        $i15 = r26.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if i34 <= $i15 goto label20;

        $r10 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $i17 = i34;

        i34 = i34 + -1;

        $f14 = virtualinvoke $r10.<android.support.v4.view.PagerAdapter: float getPageWidth(int)>($i17);

        $f18 = $f14 + f0;

        f36 = f36 - $f18;

        goto label19;

     label20:
        $f12 = r26.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor>;

        $f13 = $f12 + f0;

        f36 = f36 - $f13;

        r26.<android.support.v4.view.ViewPager$ItemInfo: float offset> = f36;

        $i16 = r26.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if $i16 != 0 goto label21;

        r0.<android.support.v4.view.ViewPager: float mFirstOffset> = f36;

     label21:
        i35 = i35 + -1;

        i34 = i34 + -1;

        goto label18;

     label22:
        $f4 = r1.<android.support.v4.view.ViewPager$ItemInfo: float offset>;

        $f2 = r1.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor>;

        $f3 = $f4 + $f2;

        f37 = $f3 + f0;

        $i10 = r1.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        i36 = $i10 + 1;

        i37 = i0 + 1;

     label23:
        if i37 >= i33 goto label27;

        $r5 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i37);

        r27 = (android.support.v4.view.ViewPager$ItemInfo) $r6;

     label24:
        $i11 = r27.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if i36 >= $i11 goto label25;

        $r8 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $i14 = i36;

        i36 = i36 + 1;

        $f11 = virtualinvoke $r8.<android.support.v4.view.PagerAdapter: float getPageWidth(int)>($i14);

        $f10 = $f11 + f0;

        f37 = f37 + $f10;

        goto label24;

     label25:
        $i12 = r27.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $i13 = i1 - 1;

        if $i12 != $i13 goto label26;

        $f8 = r27.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor>;

        $f9 = f37 + $f8;

        $f7 = $f9 - 1.0F;

        r0.<android.support.v4.view.ViewPager: float mLastOffset> = $f7;

     label26:
        r27.<android.support.v4.view.ViewPager$ItemInfo: float offset> = f37;

        $f6 = r27.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor>;

        $f5 = $f6 + f0;

        f37 = f37 + $f5;

        i37 = i37 + 1;

        i36 = i36 + 1;

        goto label23;

     label27:
        r0.<android.support.v4.view.ViewPager: boolean mNeedCalculatePageOffsets> = 0;

        return;
    }

    public android.os.Parcelable onSaveInstanceState()
    {
        android.support.v4.view.ViewPager r0;
        android.os.Parcelable r1, $r6;
        android.support.v4.view.ViewPager$SavedState r2, $r3;
        int $i0;
        android.support.v4.view.PagerAdapter $r4, $r5;

        r0 := @this: android.support.v4.view.ViewPager;

        r1 = specialinvoke r0.<android.view.ViewGroup: android.os.Parcelable onSaveInstanceState()>();

        $r3 = new android.support.v4.view.ViewPager$SavedState;

        specialinvoke $r3.<android.support.v4.view.ViewPager$SavedState: void <init>(android.os.Parcelable)>(r1);

        r2 = $r3;

        $i0 = r0.<android.support.v4.view.ViewPager: int mCurItem>;

        r2.<android.support.v4.view.ViewPager$SavedState: int position> = $i0;

        $r4 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        if $r4 == null goto label1;

        $r5 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $r6 = virtualinvoke $r5.<android.support.v4.view.PagerAdapter: android.os.Parcelable saveState()>();

        r2.<android.support.v4.view.ViewPager$SavedState: android.os.Parcelable adapterState> = $r6;

     label1:
        return r2;
    }

    public void onRestoreInstanceState(android.os.Parcelable)
    {
        android.support.v4.view.ViewPager r0;
        android.os.Parcelable r1, $r3, $r5, $r8;
        android.support.v4.view.ViewPager$SavedState r2;
        boolean $z0;
        android.support.v4.view.PagerAdapter $r4, $r9;
        int $i0, $i1;
        java.lang.ClassLoader $r6, $r7;

        r0 := @this: android.support.v4.view.ViewPager;

        r1 := @parameter0: android.os.Parcelable;

        $z0 = r1 instanceof android.support.v4.view.ViewPager$SavedState;

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.view.ViewGroup: void onRestoreInstanceState(android.os.Parcelable)>(r1);

        return;

     label1:
        r2 = (android.support.v4.view.ViewPager$SavedState) r1;

        $r3 = virtualinvoke r2.<android.support.v4.view.ViewPager$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.view.ViewGroup: void onRestoreInstanceState(android.os.Parcelable)>($r3);

        $r4 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        if $r4 == null goto label2;

        $r9 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $r8 = r2.<android.support.v4.view.ViewPager$SavedState: android.os.Parcelable adapterState>;

        $r7 = r2.<android.support.v4.view.ViewPager$SavedState: java.lang.ClassLoader loader>;

        virtualinvoke $r9.<android.support.v4.view.PagerAdapter: void restoreState(android.os.Parcelable,java.lang.ClassLoader)>($r8, $r7);

        $i1 = r2.<android.support.v4.view.ViewPager$SavedState: int position>;

        virtualinvoke r0.<android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean)>($i1, 0, 1);

        goto label3;

     label2:
        $i0 = r2.<android.support.v4.view.ViewPager$SavedState: int position>;

        r0.<android.support.v4.view.ViewPager: int mRestoredCurItem> = $i0;

        $r5 = r2.<android.support.v4.view.ViewPager$SavedState: android.os.Parcelable adapterState>;

        r0.<android.support.v4.view.ViewPager: android.os.Parcelable mRestoredAdapterState> = $r5;

        $r6 = r2.<android.support.v4.view.ViewPager$SavedState: java.lang.ClassLoader loader>;

        r0.<android.support.v4.view.ViewPager: java.lang.ClassLoader mRestoredClassLoader> = $r6;

     label3:
        return;
    }

    public void addView(android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        android.support.v4.view.ViewPager r0;
        android.view.View r1;
        int i0;
        android.view.ViewGroup$LayoutParams r2;
        android.support.v4.view.ViewPager$LayoutParams r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z6;
        java.lang.IllegalStateException $r4;

        r0 := @this: android.support.v4.view.ViewPager;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: android.view.ViewGroup$LayoutParams;

        $z0 = virtualinvoke r0.<android.support.v4.view.ViewPager: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>(r2);

        if $z0 != 0 goto label1;

        r2 = virtualinvoke r0.<android.support.v4.view.ViewPager: android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)>(r2);

     label1:
        r3 = (android.support.v4.view.ViewPager$LayoutParams) r2;

        $z2 = r3.<android.support.v4.view.ViewPager$LayoutParams: boolean isDecor>;

        $z1 = r1 instanceof android.support.v4.view.ViewPager$Decor;

        $z3 = $z2 | $z1;

        r3.<android.support.v4.view.ViewPager$LayoutParams: boolean isDecor> = $z3;

        $z4 = r0.<android.support.v4.view.ViewPager: boolean mInLayout>;

        if $z4 == 0 goto label3;

        if r3 == null goto label2;

        $z6 = r3.<android.support.v4.view.ViewPager$LayoutParams: boolean isDecor>;

        if $z6 == 0 goto label2;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot add pager decor view during layout");

        throw $r4;

     label2:
        r3.<android.support.v4.view.ViewPager$LayoutParams: boolean needsMeasure> = 1;

        virtualinvoke r0.<android.support.v4.view.ViewPager: boolean addViewInLayout(android.view.View,int,android.view.ViewGroup$LayoutParams)>(r1, i0, r2);

        goto label4;

     label3:
        specialinvoke r0.<android.view.ViewGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>(r1, i0, r2);

     label4:
        return;
    }

    public void removeView(android.view.View)
    {
        android.support.v4.view.ViewPager r0;
        android.view.View r1;
        boolean $z0;

        r0 := @this: android.support.v4.view.ViewPager;

        r1 := @parameter0: android.view.View;

        $z0 = r0.<android.support.v4.view.ViewPager: boolean mInLayout>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.support.v4.view.ViewPager: void removeViewInLayout(android.view.View)>(r1);

        goto label2;

     label1:
        specialinvoke r0.<android.view.ViewGroup: void removeView(android.view.View)>(r1);

     label2:
        return;
    }

    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View)
    {
        android.support.v4.view.ViewPager r0;
        android.view.View r1;
        int i0, $i1;
        android.support.v4.view.ViewPager$ItemInfo r2;
        java.util.ArrayList $r3, $r4;
        java.lang.Object $r5, $r6;
        android.support.v4.view.PagerAdapter $r7;
        boolean $z0;

        r0 := @this: android.support.v4.view.ViewPager;

        r1 := @parameter0: android.view.View;

        i0 = 0;

     label1:
        $r3 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i1 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i0 >= $i1 goto label3;

        $r4 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r2 = (android.support.v4.view.ViewPager$ItemInfo) $r5;

        $r7 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $r6 = r2.<android.support.v4.view.ViewPager$ItemInfo: java.lang.Object object>;

        $z0 = virtualinvoke $r7.<android.support.v4.view.PagerAdapter: boolean isViewFromObject(android.view.View,java.lang.Object)>(r1, $r6);

        if $z0 == 0 goto label2;

        return r2;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return null;
    }

    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View)
    {
        android.support.v4.view.ViewPager r0;
        android.view.View r1;
        android.view.ViewParent r2, $r3;
        android.support.v4.view.ViewPager$ItemInfo $r4;
        boolean $z0;

        r0 := @this: android.support.v4.view.ViewPager;

        r1 := @parameter0: android.view.View;

     label1:
        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

        r2 = $r3;

        if $r3 == r0 goto label4;

        if r2 == null goto label2;

        $z0 = r2 instanceof android.view.View;

        if $z0 != 0 goto label3;

     label2:
        return null;

     label3:
        r1 = (android.view.View) r2;

        goto label1;

     label4:
        $r4 = virtualinvoke r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View)>(r1);

        return $r4;
    }

    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int)
    {
        android.support.v4.view.ViewPager r0;
        int i0, i1, $i2, $i3;
        android.support.v4.view.ViewPager$ItemInfo r1;
        java.util.ArrayList $r2, $r3;
        java.lang.Object $r4;

        r0 := @this: android.support.v4.view.ViewPager;

        i0 := @parameter0: int;

        i1 = 0;

     label1:
        $r2 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i2 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i1 >= $i2 goto label3;

        $r3 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r1 = (android.support.v4.view.ViewPager$ItemInfo) $r4;

        $i3 = r1.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if $i3 != i0 goto label2;

        return r1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    protected void onAttachedToWindow()
    {
        android.support.v4.view.ViewPager r0;

        r0 := @this: android.support.v4.view.ViewPager;

        specialinvoke r0.<android.view.ViewGroup: void onAttachedToWindow()>();

        r0.<android.support.v4.view.ViewPager: boolean mFirstLayout> = 1;

        return;
    }

    protected void onMeasure(int, int)
    {
        android.support.v4.view.ViewPager r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, $i15, i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, i41, i42, i43;
        android.view.View r1, r5;
        android.support.v4.view.ViewPager$LayoutParams r2, r6;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        android.view.ViewGroup$LayoutParams $r3, $r4;
        float $f0, $f1, $f2;

        r0 := @this: android.support.v4.view.ViewPager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i15 = staticinvoke <android.support.v4.view.ViewPager: int getDefaultSize(int,int)>(0, i0);

        $i17 = staticinvoke <android.support.v4.view.ViewPager: int getDefaultSize(int,int)>(0, i1);

        virtualinvoke r0.<android.support.v4.view.ViewPager: void setMeasuredDimension(int,int)>($i15, $i17);

        i2 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getMeasuredWidth()>();

        i3 = i2 / 10;

        $i19 = r0.<android.support.v4.view.ViewPager: int mDefaultGutterSize>;

        $i18 = staticinvoke <java.lang.Math: int min(int,int)>(i3, $i19);

        r0.<android.support.v4.view.ViewPager: int mGutterSize> = $i18;

        $i21 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getPaddingLeft()>();

        $i20 = i2 - $i21;

        $i23 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getPaddingRight()>();

        i4 = $i20 - $i23;

        $i22 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getMeasuredHeight()>();

        $i25 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getPaddingTop()>();

        $i24 = $i22 - $i25;

        $i28 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getPaddingBottom()>();

        i5 = $i24 - $i28;

        i6 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getChildCount()>();

        i7 = 0;

     label01:
        if i7 >= i6 goto label14;

        r1 = virtualinvoke r0.<android.support.v4.view.ViewPager: android.view.View getChildAt(int)>(i7);

        $i33 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i33 == 8 goto label13;

        $r4 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.support.v4.view.ViewPager$LayoutParams) $r4;

        if r2 == null goto label13;

        $z3 = r2.<android.support.v4.view.ViewPager$LayoutParams: boolean isDecor>;

        if $z3 == 0 goto label13;

        $i32 = r2.<android.support.v4.view.ViewPager$LayoutParams: int gravity>;

        i8 = $i32 & 7;

        $i36 = r2.<android.support.v4.view.ViewPager$LayoutParams: int gravity>;

        i9 = $i36 & 112;

        i10 = -2147483648;

        i11 = -2147483648;

        if i9 == 48 goto label02;

        if i9 != 80 goto label03;

     label02:
        $z4 = 1;

        goto label04;

     label03:
        $z4 = 0;

     label04:
        z0 = $z4;

        if i8 == 3 goto label05;

        if i8 != 5 goto label06;

     label05:
        $z5 = 1;

        goto label07;

     label06:
        $z5 = 0;

     label07:
        z1 = $z5;

        if z0 == 0 goto label08;

        i10 = 1073741824;

        goto label09;

     label08:
        if z1 == 0 goto label09;

        i11 = 1073741824;

     label09:
        i12 = i4;

        i14 = i5;

        $i35 = r2.<android.support.v4.view.ViewPager$LayoutParams: int width>;

        if $i35 == -2 goto label10;

        i10 = 1073741824;

        $i40 = r2.<android.support.v4.view.ViewPager$LayoutParams: int width>;

        if $i40 == -1 goto label10;

        i12 = r2.<android.support.v4.view.ViewPager$LayoutParams: int width>;

     label10:
        $i34 = r2.<android.support.v4.view.ViewPager$LayoutParams: int height>;

        if $i34 == -2 goto label11;

        i11 = 1073741824;

        $i37 = r2.<android.support.v4.view.ViewPager$LayoutParams: int height>;

        if $i37 == -1 goto label11;

        i14 = r2.<android.support.v4.view.ViewPager$LayoutParams: int height>;

     label11:
        i13 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i12, i10);

        i16 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i14, i11);

        virtualinvoke r1.<android.view.View: void measure(int,int)>(i13, i16);

        if z0 == 0 goto label12;

        $i38 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        i5 = i5 - $i38;

        goto label13;

     label12:
        if z1 == 0 goto label13;

        $i39 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        i4 = i4 - $i39;

     label13:
        i7 = i7 + 1;

        goto label01;

     label14:
        $i26 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i4, 1073741824);

        r0.<android.support.v4.view.ViewPager: int mChildWidthMeasureSpec> = $i26;

        $i27 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i5, 1073741824);

        r0.<android.support.v4.view.ViewPager: int mChildHeightMeasureSpec> = $i27;

        r0.<android.support.v4.view.ViewPager: boolean mInLayout> = 1;

        virtualinvoke r0.<android.support.v4.view.ViewPager: void populate()>();

        r0.<android.support.v4.view.ViewPager: boolean mInLayout> = 0;

        i41 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getChildCount()>();

        i42 = 0;

     label15:
        if i42 >= i41 goto label18;

        r5 = virtualinvoke r0.<android.support.v4.view.ViewPager: android.view.View getChildAt(int)>(i42);

        $i29 = virtualinvoke r5.<android.view.View: int getVisibility()>();

        if $i29 == 8 goto label17;

        $r3 = virtualinvoke r5.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r6 = (android.support.v4.view.ViewPager$LayoutParams) $r3;

        if r6 == null goto label16;

        $z2 = r6.<android.support.v4.view.ViewPager$LayoutParams: boolean isDecor>;

        if $z2 != 0 goto label17;

     label16:
        $f2 = (float) i4;

        $f1 = r6.<android.support.v4.view.ViewPager$LayoutParams: float widthFactor>;

        $f0 = $f2 * $f1;

        $i30 = (int) $f0;

        i43 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i30, 1073741824);

        $i31 = r0.<android.support.v4.view.ViewPager: int mChildHeightMeasureSpec>;

        virtualinvoke r5.<android.view.View: void measure(int,int)>(i43, $i31);

     label17:
        i42 = i42 + 1;

        goto label15;

     label18:
        return;
    }

    protected void onSizeChanged(int, int, int, int)
    {
        android.support.v4.view.ViewPager r0;
        int i0, i1, i2, i3, $i4, $i5;

        r0 := @this: android.support.v4.view.ViewPager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<android.view.ViewGroup: void onSizeChanged(int,int,int,int)>(i0, i1, i2, i3);

        if i0 == i2 goto label1;

        $i5 = r0.<android.support.v4.view.ViewPager: int mPageMargin>;

        $i4 = r0.<android.support.v4.view.ViewPager: int mPageMargin>;

        specialinvoke r0.<android.support.v4.view.ViewPager: void recomputeScrollPosition(int,int,int,int)>(i0, i2, $i5, $i4);

     label1:
        return;
    }

    private void recomputeScrollPosition(int, int, int, int)
    {
        android.support.v4.view.ViewPager r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, i29;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, f13;
        android.support.v4.view.ViewPager$ItemInfo r1, r7;
        java.util.ArrayList $r2;
        boolean $z0, $z1;
        android.widget.Scroller $r3, $r4, $r5, $r6;

        r0 := @this: android.support.v4.view.ViewPager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        if i1 <= 0 goto label2;

        $r2 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $i16 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getPaddingLeft()>();

        $i18 = i0 - $i16;

        $i17 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getPaddingRight()>();

        $i20 = $i18 - $i17;

        i4 = $i20 + i2;

        $i19 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getPaddingLeft()>();

        $i22 = i1 - $i19;

        $i23 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getPaddingRight()>();

        $i21 = $i22 - $i23;

        i5 = $i21 + i3;

        i6 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getScrollX()>();

        $f9 = (float) i6;

        $f8 = (float) i5;

        f0 = $f9 / $f8;

        $f6 = (float) i4;

        $f7 = f0 * $f6;

        i7 = (int) $f7;

        $i24 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getScrollY()>();

        virtualinvoke r0.<android.support.v4.view.ViewPager: void scrollTo(int,int)>(i7, $i24);

        $r4 = r0.<android.support.v4.view.ViewPager: android.widget.Scroller mScroller>;

        $z1 = virtualinvoke $r4.<android.widget.Scroller: boolean isFinished()>();

        if $z1 != 0 goto label1;

        $r3 = r0.<android.support.v4.view.ViewPager: android.widget.Scroller mScroller>;

        $i27 = virtualinvoke $r3.<android.widget.Scroller: int getDuration()>();

        $r5 = r0.<android.support.v4.view.ViewPager: android.widget.Scroller mScroller>;

        $i25 = virtualinvoke $r5.<android.widget.Scroller: int timePassed()>();

        i8 = $i27 - $i25;

        $i26 = r0.<android.support.v4.view.ViewPager: int mCurItem>;

        r1 = virtualinvoke r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForPosition(int)>($i26);

        $r6 = r0.<android.support.v4.view.ViewPager: android.widget.Scroller mScroller>;

        $f11 = r1.<android.support.v4.view.ViewPager$ItemInfo: float offset>;

        $f12 = (float) i0;

        $f10 = $f11 * $f12;

        $i28 = (int) $f10;

        virtualinvoke $r6.<android.widget.Scroller: void startScroll(int,int,int,int,int)>(i7, 0, $i28, 0, i8);

     label1:
        goto label5;

     label2:
        $i9 = r0.<android.support.v4.view.ViewPager: int mCurItem>;

        r7 = virtualinvoke r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForPosition(int)>($i9);

        if r7 == null goto label3;

        $f3 = r7.<android.support.v4.view.ViewPager$ItemInfo: float offset>;

        $f4 = r0.<android.support.v4.view.ViewPager: float mLastOffset>;

        $f5 = staticinvoke <java.lang.Math: float min(float,float)>($f3, $f4);

        goto label4;

     label3:
        $f5 = 0.0F;

     label4:
        f13 = $f5;

        $i10 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getPaddingLeft()>();

        $i11 = i0 - $i10;

        $i13 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getPaddingRight()>();

        $i12 = $i11 - $i13;

        $f2 = (float) $i12;

        $f1 = f13 * $f2;

        i29 = (int) $f1;

        $i15 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getScrollX()>();

        if i29 == $i15 goto label5;

        specialinvoke r0.<android.support.v4.view.ViewPager: void completeScroll(boolean)>(0);

        $i14 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getScrollY()>();

        virtualinvoke r0.<android.support.v4.view.ViewPager: void scrollTo(int,int)>(i29, $i14);

     label5:
        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.support.v4.view.ViewPager r0;
        boolean z0, $z3, $z4, $z5, $z6;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, i51, i52, i53, i54, i55, i56, i57;
        android.support.v4.view.ViewPager$LayoutParams r1, r7;
        android.view.View r2, r6;
        android.support.v4.view.ViewPager$ItemInfo $r3, r8;
        android.view.ViewGroup$LayoutParams $r4, $r5;
        float $f0, $f1, $f2, $f3, $f4, $f5;

        r0 := @this: android.support.v4.view.ViewPager;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getChildCount()>();

        i5 = i2 - i0;

        i6 = i3 - i1;

        i7 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getPaddingLeft()>();

        i8 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getPaddingTop()>();

        i9 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getPaddingRight()>();

        i10 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getPaddingBottom()>();

        i11 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getScrollX()>();

        i12 = 0;

        i13 = 0;

     label01:
        if i13 >= i4 goto label13;

        r2 = virtualinvoke r0.<android.support.v4.view.ViewPager: android.view.View getChildAt(int)>(i13);

        $i30 = virtualinvoke r2.<android.view.View: int getVisibility()>();

        if $i30 == 8 goto label12;

        $r5 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r1 = (android.support.v4.view.ViewPager$LayoutParams) $r5;

        $z6 = r1.<android.support.v4.view.ViewPager$LayoutParams: boolean isDecor>;

        if $z6 == 0 goto label12;

        $i34 = r1.<android.support.v4.view.ViewPager$LayoutParams: int gravity>;

        i15 = $i34 & 7;

        $i33 = r1.<android.support.v4.view.ViewPager$LayoutParams: int gravity>;

        i14 = $i33 & 112;

        tableswitch(i15)
        {
            case 1: goto label04;
            case 2: goto label02;
            case 3: goto label03;
            case 4: goto label02;
            case 5: goto label05;
            default: goto label02;
        };

     label02:
        i51 = i7;

        goto label06;

     label03:
        i51 = i7;

        $i44 = virtualinvoke r2.<android.view.View: int getMeasuredWidth()>();

        i7 = i7 + $i44;

        goto label06;

     label04:
        $i45 = virtualinvoke r2.<android.view.View: int getMeasuredWidth()>();

        $i46 = i5 - $i45;

        $i50 = $i46 / 2;

        i51 = staticinvoke <java.lang.Math: int max(int,int)>($i50, i7);

        goto label06;

     label05:
        $i48 = i5 - i9;

        $i49 = virtualinvoke r2.<android.view.View: int getMeasuredWidth()>();

        i51 = $i48 - $i49;

        $i43 = virtualinvoke r2.<android.view.View: int getMeasuredWidth()>();

        i9 = i9 + $i43;

     label06:
        lookupswitch(i14)
        {
            case 16: goto label09;
            case 48: goto label08;
            case 80: goto label10;
            default: goto label07;
        };

     label07:
        i52 = i8;

        goto label11;

     label08:
        i52 = i8;

        $i36 = virtualinvoke r2.<android.view.View: int getMeasuredHeight()>();

        i8 = i8 + $i36;

        goto label11;

     label09:
        $i37 = virtualinvoke r2.<android.view.View: int getMeasuredHeight()>();

        $i38 = i6 - $i37;

        $i47 = $i38 / 2;

        i52 = staticinvoke <java.lang.Math: int max(int,int)>($i47, i8);

        goto label11;

     label10:
        $i32 = i6 - i10;

        $i31 = virtualinvoke r2.<android.view.View: int getMeasuredHeight()>();

        i52 = $i32 - $i31;

        $i39 = virtualinvoke r2.<android.view.View: int getMeasuredHeight()>();

        i10 = i10 + $i39;

     label11:
        i53 = i51 + i11;

        $i40 = virtualinvoke r2.<android.view.View: int getMeasuredWidth()>();

        $i41 = i53 + $i40;

        $i42 = virtualinvoke r2.<android.view.View: int getMeasuredHeight()>();

        $i35 = i52 + $i42;

        virtualinvoke r2.<android.view.View: void layout(int,int,int,int)>(i53, i52, $i41, $i35);

        i12 = i12 + 1;

     label12:
        i13 = i13 + 1;

        goto label01;

     label13:
        $i19 = i5 - i7;

        i54 = $i19 - i9;

        i55 = 0;

     label14:
        if i55 >= i4 goto label17;

        r6 = virtualinvoke r0.<android.support.v4.view.ViewPager: android.view.View getChildAt(int)>(i55);

        $i22 = virtualinvoke r6.<android.view.View: int getVisibility()>();

        if $i22 == 8 goto label16;

        $r4 = virtualinvoke r6.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r7 = (android.support.v4.view.ViewPager$LayoutParams) $r4;

        $z4 = r7.<android.support.v4.view.ViewPager$LayoutParams: boolean isDecor>;

        if $z4 != 0 goto label16;

        $r3 = virtualinvoke r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View)>(r6);

        r8 = $r3;

        if $r3 == null goto label16;

        $f2 = (float) i54;

        $f1 = r8.<android.support.v4.view.ViewPager$ItemInfo: float offset>;

        $f0 = $f2 * $f1;

        i56 = (int) $f0;

        i57 = i7 + i56;

        i17 = i8;

        $z5 = r7.<android.support.v4.view.ViewPager$LayoutParams: boolean needsMeasure>;

        if $z5 == 0 goto label15;

        r7.<android.support.v4.view.ViewPager$LayoutParams: boolean needsMeasure> = 0;

        $f4 = (float) i54;

        $f5 = r7.<android.support.v4.view.ViewPager$LayoutParams: float widthFactor>;

        $f3 = $f4 * $f5;

        $i27 = (int) $f3;

        i16 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i27, 1073741824);

        $i29 = i6 - i8;

        $i28 = $i29 - i10;

        i18 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i28, 1073741824);

        virtualinvoke r6.<android.view.View: void measure(int,int)>(i16, i18);

     label15:
        $i25 = virtualinvoke r6.<android.view.View: int getMeasuredWidth()>();

        $i26 = i57 + $i25;

        $i23 = virtualinvoke r6.<android.view.View: int getMeasuredHeight()>();

        $i24 = i17 + $i23;

        virtualinvoke r6.<android.view.View: void layout(int,int,int,int)>(i57, i17, $i26, $i24);

     label16:
        i55 = i55 + 1;

        goto label14;

     label17:
        r0.<android.support.v4.view.ViewPager: int mTopPageBounds> = i8;

        $i21 = i6 - i10;

        r0.<android.support.v4.view.ViewPager: int mBottomPageBounds> = $i21;

        r0.<android.support.v4.view.ViewPager: int mDecorChildCount> = i12;

        $z3 = r0.<android.support.v4.view.ViewPager: boolean mFirstLayout>;

        if $z3 == 0 goto label18;

        $i20 = r0.<android.support.v4.view.ViewPager: int mCurItem>;

        specialinvoke r0.<android.support.v4.view.ViewPager: void scrollToItem(int,boolean,int,boolean)>($i20, 0, 0, 0);

     label18:
        r0.<android.support.v4.view.ViewPager: boolean mFirstLayout> = 0;

        return;
    }

    public void computeScroll()
    {
        android.support.v4.view.ViewPager r0;
        int i0, i1, i2, i3;
        android.widget.Scroller $r1, $r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z2;

        r0 := @this: android.support.v4.view.ViewPager;

        $r1 = r0.<android.support.v4.view.ViewPager: android.widget.Scroller mScroller>;

        $z0 = virtualinvoke $r1.<android.widget.Scroller: boolean isFinished()>();

        if $z0 != 0 goto label3;

        $r2 = r0.<android.support.v4.view.ViewPager: android.widget.Scroller mScroller>;

        $z1 = virtualinvoke $r2.<android.widget.Scroller: boolean computeScrollOffset()>();

        if $z1 == 0 goto label3;

        i0 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getScrollX()>();

        i1 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getScrollY()>();

        $r3 = r0.<android.support.v4.view.ViewPager: android.widget.Scroller mScroller>;

        i2 = virtualinvoke $r3.<android.widget.Scroller: int getCurrX()>();

        $r4 = r0.<android.support.v4.view.ViewPager: android.widget.Scroller mScroller>;

        i3 = virtualinvoke $r4.<android.widget.Scroller: int getCurrY()>();

        if i0 != i2 goto label1;

        if i1 == i3 goto label2;

     label1:
        virtualinvoke r0.<android.support.v4.view.ViewPager: void scrollTo(int,int)>(i2, i3);

        $z2 = specialinvoke r0.<android.support.v4.view.ViewPager: boolean pageScrolled(int)>(i2);

        if $z2 != 0 goto label2;

        $r5 = r0.<android.support.v4.view.ViewPager: android.widget.Scroller mScroller>;

        virtualinvoke $r5.<android.widget.Scroller: void abortAnimation()>();

        virtualinvoke r0.<android.support.v4.view.ViewPager: void scrollTo(int,int)>(0, i3);

     label2:
        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(r0);

        return;

     label3:
        specialinvoke r0.<android.support.v4.view.ViewPager: void completeScroll(boolean)>(1);

        return;
    }

    private boolean pageScrolled(int)
    {
        android.support.v4.view.ViewPager r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7;
        android.support.v4.view.ViewPager$ItemInfo r1;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;
        java.util.ArrayList $r2;
        java.lang.IllegalStateException $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: android.support.v4.view.ViewPager;

        i0 := @parameter0: int;

        $r2 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i5 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i5 != 0 goto label2;

        r0.<android.support.v4.view.ViewPager: boolean mCalledSuper> = 0;

        virtualinvoke r0.<android.support.v4.view.ViewPager: void onPageScrolled(int,float,int)>(0, 0.0F, 0);

        $z1 = r0.<android.support.v4.view.ViewPager: boolean mCalledSuper>;

        if $z1 != 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("onPageScrolled did not call superclass implementation");

        throw $r4;

     label1:
        return 0;

     label2:
        r1 = specialinvoke r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition()>();

        i1 = specialinvoke r0.<android.support.v4.view.ViewPager: int getClientWidth()>();

        $i6 = r0.<android.support.v4.view.ViewPager: int mPageMargin>;

        i2 = i1 + $i6;

        $i7 = r0.<android.support.v4.view.ViewPager: int mPageMargin>;

        $f4 = (float) $i7;

        $f2 = (float) i1;

        f0 = $f4 / $f2;

        i3 = r1.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $f6 = (float) i0;

        $f3 = (float) i1;

        $f8 = $f6 / $f3;

        $f5 = r1.<android.support.v4.view.ViewPager$ItemInfo: float offset>;

        $f9 = $f8 - $f5;

        $f7 = r1.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor>;

        $f10 = $f7 + f0;

        f1 = $f9 / $f10;

        $f12 = (float) i2;

        $f11 = f1 * $f12;

        i4 = (int) $f11;

        r0.<android.support.v4.view.ViewPager: boolean mCalledSuper> = 0;

        virtualinvoke r0.<android.support.v4.view.ViewPager: void onPageScrolled(int,float,int)>(i3, f1, i4);

        $z0 = r0.<android.support.v4.view.ViewPager: boolean mCalledSuper>;

        if $z0 != 0 goto label3;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("onPageScrolled did not call superclass implementation");

        throw $r3;

     label3:
        return 1;
    }

    protected void onPageScrolled(int, float, int)
    {
        android.support.v4.view.ViewPager r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23, i24, i25, i26, i27;
        float f0, $f1, $f2, f3;
        android.view.View r1, r11;
        android.support.v4.view.ViewPager$LayoutParams r2, r12;
        android.support.v4.view.ViewPager$OnPageChangeListener $r3, $r4, $r8, $r9;
        android.support.v4.view.ViewPager$PageTransformer $r5, $r7;
        boolean $z1, $z2;
        android.view.ViewGroup$LayoutParams $r6, $r10;

        r0 := @this: android.support.v4.view.ViewPager;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        i1 := @parameter2: int;

        $i10 = r0.<android.support.v4.view.ViewPager: int mDecorChildCount>;

        if $i10 <= 0 goto label09;

        i2 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getScrollX()>();

        i3 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getPaddingLeft()>();

        i4 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getPaddingRight()>();

        i5 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getWidth()>();

        i6 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getChildCount()>();

        i7 = 0;

     label01:
        if i7 >= i6 goto label09;

        r1 = virtualinvoke r0.<android.support.v4.view.ViewPager: android.view.View getChildAt(int)>(i7);

        $r10 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.support.v4.view.ViewPager$LayoutParams) $r10;

        $z2 = r2.<android.support.v4.view.ViewPager$LayoutParams: boolean isDecor>;

        if $z2 != 0 goto label02;

        goto label08;

     label02:
        $i16 = r2.<android.support.v4.view.ViewPager$LayoutParams: int gravity>;

        i8 = $i16 & 7;

        tableswitch(i8)
        {
            case 1: goto label05;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label03;
            case 5: goto label06;
            default: goto label03;
        };

     label03:
        i23 = i3;

        goto label07;

     label04:
        i23 = i3;

        $i21 = virtualinvoke r1.<android.view.View: int getWidth()>();

        i3 = i3 + $i21;

        goto label07;

     label05:
        $i18 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        $i19 = i5 - $i18;

        $i22 = $i19 / 2;

        i23 = staticinvoke <java.lang.Math: int max(int,int)>($i22, i3);

        goto label07;

     label06:
        $i14 = i5 - i4;

        $i15 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        i23 = $i14 - $i15;

        $i20 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        i4 = i4 + $i20;

     label07:
        i24 = i23 + i2;

        $i17 = virtualinvoke r1.<android.view.View: int getLeft()>();

        i9 = i24 - $i17;

        if i9 == 0 goto label08;

        virtualinvoke r1.<android.view.View: void offsetLeftAndRight(int)>(i9);

     label08:
        i7 = i7 + 1;

        goto label01;

     label09:
        $r4 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener>;

        if $r4 == null goto label10;

        $r8 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener>;

        interfaceinvoke $r8.<android.support.v4.view.ViewPager$OnPageChangeListener: void onPageScrolled(int,float,int)>(i0, f0, i1);

     label10:
        $r3 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener>;

        if $r3 == null goto label11;

        $r9 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener>;

        interfaceinvoke $r9.<android.support.v4.view.ViewPager$OnPageChangeListener: void onPageScrolled(int,float,int)>(i0, f0, i1);

     label11:
        $r5 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$PageTransformer mPageTransformer>;

        if $r5 == null goto label15;

        i25 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getScrollX()>();

        i26 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getChildCount()>();

        i27 = 0;

     label12:
        if i27 >= i26 goto label15;

        r11 = virtualinvoke r0.<android.support.v4.view.ViewPager: android.view.View getChildAt(int)>(i27);

        $r6 = virtualinvoke r11.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r12 = (android.support.v4.view.ViewPager$LayoutParams) $r6;

        $z1 = r12.<android.support.v4.view.ViewPager$LayoutParams: boolean isDecor>;

        if $z1 == 0 goto label13;

        goto label14;

     label13:
        $i12 = virtualinvoke r11.<android.view.View: int getLeft()>();

        $i11 = $i12 - i25;

        $f1 = (float) $i11;

        $i13 = specialinvoke r0.<android.support.v4.view.ViewPager: int getClientWidth()>();

        $f2 = (float) $i13;

        f3 = $f1 / $f2;

        $r7 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$PageTransformer mPageTransformer>;

        interfaceinvoke $r7.<android.support.v4.view.ViewPager$PageTransformer: void transformPage(android.view.View,float)>(r11, f3);

     label14:
        i27 = i27 + 1;

        goto label12;

     label15:
        r0.<android.support.v4.view.ViewPager: boolean mCalledSuper> = 1;

        return;
    }

    private void completeScroll(boolean)
    {
        android.support.v4.view.ViewPager r0;
        boolean z0, z1, $z2, $z3;
        int i0, i1, i2, i3, $i4, $i5, i6;
        java.util.ArrayList $r1, $r4;
        java.lang.Runnable $r2, $r3;
        java.lang.Object $r5;
        android.widget.Scroller $r6, $r7, $r8;
        android.support.v4.view.ViewPager$ItemInfo r9;

        r0 := @this: android.support.v4.view.ViewPager;

        z0 := @parameter0: boolean;

        $i4 = r0.<android.support.v4.view.ViewPager: int mScrollState>;

        if $i4 != 2 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        z1 = $z3;

        if z1 == 0 goto label4;

        specialinvoke r0.<android.support.v4.view.ViewPager: void setScrollingCacheEnabled(boolean)>(0);

        $r6 = r0.<android.support.v4.view.ViewPager: android.widget.Scroller mScroller>;

        virtualinvoke $r6.<android.widget.Scroller: void abortAnimation()>();

        i0 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getScrollX()>();

        i1 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getScrollY()>();

        $r7 = r0.<android.support.v4.view.ViewPager: android.widget.Scroller mScroller>;

        i2 = virtualinvoke $r7.<android.widget.Scroller: int getCurrX()>();

        $r8 = r0.<android.support.v4.view.ViewPager: android.widget.Scroller mScroller>;

        i3 = virtualinvoke $r8.<android.widget.Scroller: int getCurrY()>();

        if i0 != i2 goto label3;

        if i1 == i3 goto label4;

     label3:
        virtualinvoke r0.<android.support.v4.view.ViewPager: void scrollTo(int,int)>(i2, i3);

     label4:
        r0.<android.support.v4.view.ViewPager: boolean mPopulatePending> = 0;

        i6 = 0;

     label5:
        $r1 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i5 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if i6 >= $i5 goto label7;

        $r4 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i6);

        r9 = (android.support.v4.view.ViewPager$ItemInfo) $r5;

        $z2 = r9.<android.support.v4.view.ViewPager$ItemInfo: boolean scrolling>;

        if $z2 == 0 goto label6;

        z1 = 1;

        r9.<android.support.v4.view.ViewPager$ItemInfo: boolean scrolling> = 0;

     label6:
        i6 = i6 + 1;

        goto label5;

     label7:
        if z1 == 0 goto label9;

        if z0 == 0 goto label8;

        $r3 = r0.<android.support.v4.view.ViewPager: java.lang.Runnable mEndScrollRunnable>;

        staticinvoke <android.support.v4.view.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)>(r0, $r3);

        goto label9;

     label8:
        $r2 = r0.<android.support.v4.view.ViewPager: java.lang.Runnable mEndScrollRunnable>;

        interfaceinvoke $r2.<java.lang.Runnable: void run()>();

     label9:
        return;
    }

    private boolean isGutterDrag(float, float)
    {
        android.support.v4.view.ViewPager r0;
        float f0, f1, $f2, $f3;
        int $i0, $i2, $i3, $i4;
        byte $b1, $b5, $b6, $b7;
        boolean $z0;

        r0 := @this: android.support.v4.view.ViewPager;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $i0 = r0.<android.support.v4.view.ViewPager: int mGutterSize>;

        $f2 = (float) $i0;

        $b1 = f0 cmpg $f2;

        if $b1 >= 0 goto label1;

        $b7 = f1 cmpl 0.0F;

        if $b7 > 0 goto label2;

     label1:
        $i2 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getWidth()>();

        $i3 = r0.<android.support.v4.view.ViewPager: int mGutterSize>;

        $i4 = $i2 - $i3;

        $f3 = (float) $i4;

        $b5 = f0 cmpl $f3;

        if $b5 <= 0 goto label3;

        $b6 = f1 cmpg 0.0F;

        if $b6 >= 0 goto label3;

     label2:
        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    private void enableLayers(boolean)
    {
        android.support.v4.view.ViewPager r0;
        boolean z0;
        int i0, i1;
        byte b2, $b3;
        android.view.View $r1;

        r0 := @this: android.support.v4.view.ViewPager;

        z0 := @parameter0: boolean;

        i0 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getChildCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        if z0 == 0 goto label2;

        $b3 = 2;

        goto label3;

     label2:
        $b3 = 0;

     label3:
        b2 = $b3;

        $r1 = virtualinvoke r0.<android.support.v4.view.ViewPager: android.view.View getChildAt(int)>(i1);

        staticinvoke <android.support.v4.view.ViewCompat: void setLayerType(android.view.View,int,android.graphics.Paint)>($r1, b2, null);

        i1 = i1 + 1;

        goto label1;

     label4:
        return;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        android.support.v4.view.ViewPager r0;
        android.view.MotionEvent r1;
        int i0, i1, i2, $i3, $i5, $i6, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22;
        float f0, f1, f2, f3, f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18;
        android.view.VelocityTracker $r2, $r3, $r4, $r5, $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z6, $z7;
        byte $b4, $b7, $b8, $b9, $b10;
        android.widget.Scroller $r7, $r8, $r9, $r10;

        r0 := @this: android.support.v4.view.ViewPager;

        r1 := @parameter0: android.view.MotionEvent;

        $i3 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        i0 = $i3 & 255;

        if i0 == 3 goto label01;

        if i0 != 1 goto label03;

     label01:
        r0.<android.support.v4.view.ViewPager: boolean mIsBeingDragged> = 0;

        r0.<android.support.v4.view.ViewPager: boolean mIsUnableToDrag> = 0;

        r0.<android.support.v4.view.ViewPager: int mActivePointerId> = -1;

        $r2 = r0.<android.support.v4.view.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        if $r2 == null goto label02;

        $r3 = r0.<android.support.v4.view.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r3.<android.view.VelocityTracker: void recycle()>();

        r0.<android.support.v4.view.ViewPager: android.view.VelocityTracker mVelocityTracker> = null;

     label02:
        return 0;

     label03:
        if i0 == 0 goto label05;

        $z6 = r0.<android.support.v4.view.ViewPager: boolean mIsBeingDragged>;

        if $z6 == 0 goto label04;

        return 1;

     label04:
        $z7 = r0.<android.support.v4.view.ViewPager: boolean mIsUnableToDrag>;

        if $z7 == 0 goto label05;

        return 0;

     label05:
        lookupswitch(i0)
        {
            case 0: goto label13;
            case 2: goto label06;
            case 6: goto label15;
            default: goto label16;
        };

     label06:
        i1 = r0.<android.support.v4.view.ViewPager: int mActivePointerId>;

        if i1 != -1 goto label07;

        goto label16;

     label07:
        i2 = staticinvoke <android.support.v4.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)>(r1, i1);

        f0 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>(r1, i2);

        $f5 = r0.<android.support.v4.view.ViewPager: float mLastMotionX>;

        f1 = f0 - $f5;

        f2 = staticinvoke <java.lang.Math: float abs(float)>(f1);

        f3 = staticinvoke <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>(r1, i2);

        $f7 = r0.<android.support.v4.view.ViewPager: float mInitialMotionY>;

        $f6 = f3 - $f7;

        f4 = staticinvoke <java.lang.Math: float abs(float)>($f6);

        $b4 = f1 cmpl 0.0F;

        if $b4 == 0 goto label08;

        $f16 = r0.<android.support.v4.view.ViewPager: float mLastMotionX>;

        $z3 = specialinvoke r0.<android.support.v4.view.ViewPager: boolean isGutterDrag(float,float)>($f16, f1);

        if $z3 != 0 goto label08;

        $i15 = (int) f1;

        $i14 = (int) f0;

        $i13 = (int) f3;

        $z4 = virtualinvoke r0.<android.support.v4.view.ViewPager: boolean canScroll(android.view.View,boolean,int,int,int)>(r0, 0, $i15, $i14, $i13);

        if $z4 == 0 goto label08;

        r0.<android.support.v4.view.ViewPager: float mLastMotionX> = f0;

        r0.<android.support.v4.view.ViewPager: float mLastMotionY> = f3;

        r0.<android.support.v4.view.ViewPager: boolean mIsUnableToDrag> = 1;

        return 0;

     label08:
        $i5 = r0.<android.support.v4.view.ViewPager: int mTouchSlop>;

        $f8 = (float) $i5;

        $b7 = f2 cmpl $f8;

        if $b7 <= 0 goto label11;

        $f10 = f2 * 0.5F;

        $b9 = $f10 cmpl f4;

        if $b9 <= 0 goto label11;

        r0.<android.support.v4.view.ViewPager: boolean mIsBeingDragged> = 1;

        specialinvoke r0.<android.support.v4.view.ViewPager: void requestParentDisallowInterceptTouchEvent(boolean)>(1);

        specialinvoke r0.<android.support.v4.view.ViewPager: void setScrollState(int)>(1);

        $b10 = f1 cmpl 0.0F;

        if $b10 <= 0 goto label09;

        $f14 = r0.<android.support.v4.view.ViewPager: float mInitialMotionX>;

        $i12 = r0.<android.support.v4.view.ViewPager: int mTouchSlop>;

        $f13 = (float) $i12;

        $f15 = $f14 + $f13;

        goto label10;

     label09:
        $f12 = r0.<android.support.v4.view.ViewPager: float mInitialMotionX>;

        $i11 = r0.<android.support.v4.view.ViewPager: int mTouchSlop>;

        $f11 = (float) $i11;

        $f15 = $f12 - $f11;

     label10:
        r0.<android.support.v4.view.ViewPager: float mLastMotionX> = $f15;

        r0.<android.support.v4.view.ViewPager: float mLastMotionY> = f3;

        specialinvoke r0.<android.support.v4.view.ViewPager: void setScrollingCacheEnabled(boolean)>(1);

        goto label12;

     label11:
        $i6 = r0.<android.support.v4.view.ViewPager: int mTouchSlop>;

        $f9 = (float) $i6;

        $b8 = f4 cmpl $f9;

        if $b8 <= 0 goto label12;

        r0.<android.support.v4.view.ViewPager: boolean mIsUnableToDrag> = 1;

     label12:
        $z1 = r0.<android.support.v4.view.ViewPager: boolean mIsBeingDragged>;

        if $z1 == 0 goto label16;

        $z2 = specialinvoke r0.<android.support.v4.view.ViewPager: boolean performDrag(float)>(f0);

        if $z2 == 0 goto label16;

        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(r0);

        goto label16;

     label13:
        $f18 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        r0.<android.support.v4.view.ViewPager: float mInitialMotionX> = $f18;

        r0.<android.support.v4.view.ViewPager: float mLastMotionX> = $f18;

        $f17 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        r0.<android.support.v4.view.ViewPager: float mInitialMotionY> = $f17;

        r0.<android.support.v4.view.ViewPager: float mLastMotionY> = $f17;

        $i17 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>(r1, 0);

        r0.<android.support.v4.view.ViewPager: int mActivePointerId> = $i17;

        r0.<android.support.v4.view.ViewPager: boolean mIsUnableToDrag> = 0;

        $r7 = r0.<android.support.v4.view.ViewPager: android.widget.Scroller mScroller>;

        virtualinvoke $r7.<android.widget.Scroller: boolean computeScrollOffset()>();

        $i16 = r0.<android.support.v4.view.ViewPager: int mScrollState>;

        if $i16 != 2 goto label14;

        $r9 = r0.<android.support.v4.view.ViewPager: android.widget.Scroller mScroller>;

        $i19 = virtualinvoke $r9.<android.widget.Scroller: int getFinalX()>();

        $r8 = r0.<android.support.v4.view.ViewPager: android.widget.Scroller mScroller>;

        $i18 = virtualinvoke $r8.<android.widget.Scroller: int getCurrX()>();

        $i22 = $i19 - $i18;

        $i21 = staticinvoke <java.lang.Math: int abs(int)>($i22);

        $i20 = r0.<android.support.v4.view.ViewPager: int mCloseEnough>;

        if $i21 <= $i20 goto label14;

        $r10 = r0.<android.support.v4.view.ViewPager: android.widget.Scroller mScroller>;

        virtualinvoke $r10.<android.widget.Scroller: void abortAnimation()>();

        r0.<android.support.v4.view.ViewPager: boolean mPopulatePending> = 0;

        virtualinvoke r0.<android.support.v4.view.ViewPager: void populate()>();

        r0.<android.support.v4.view.ViewPager: boolean mIsBeingDragged> = 1;

        specialinvoke r0.<android.support.v4.view.ViewPager: void requestParentDisallowInterceptTouchEvent(boolean)>(1);

        specialinvoke r0.<android.support.v4.view.ViewPager: void setScrollState(int)>(1);

        goto label16;

     label14:
        specialinvoke r0.<android.support.v4.view.ViewPager: void completeScroll(boolean)>(0);

        r0.<android.support.v4.view.ViewPager: boolean mIsBeingDragged> = 0;

        goto label16;

     label15:
        specialinvoke r0.<android.support.v4.view.ViewPager: void onSecondaryPointerUp(android.view.MotionEvent)>(r1);

     label16:
        $r4 = r0.<android.support.v4.view.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        if $r4 != null goto label17;

        $r6 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<android.support.v4.view.ViewPager: android.view.VelocityTracker mVelocityTracker> = $r6;

     label17:
        $r5 = r0.<android.support.v4.view.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r5.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r1);

        $z0 = r0.<android.support.v4.view.ViewPager: boolean mIsBeingDragged>;

        return $z0;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.support.v4.view.ViewPager r0;
        android.view.MotionEvent r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i17, $i18, $i20, $i21, $i22, $i23, $i24, i25, i26, i27, i28, i29, i30;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        float f0, f1, f2, f3, f4, f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, f31, f32;
        android.view.ViewParent r2;
        android.support.v4.view.PagerAdapter $r3, $r4;
        android.view.VelocityTracker $r5, $r6, $r11, r13;
        android.widget.Scroller $r7;
        android.support.v4.widget.EdgeEffectCompat $r8, $r9, $r10, $r12;
        byte $b15, $b16, $b19;
        android.support.v4.view.ViewPager$ItemInfo r14;

        r0 := @this: android.support.v4.view.ViewPager;

        r1 := @parameter0: android.view.MotionEvent;

        $z1 = r0.<android.support.v4.view.ViewPager: boolean mFakeDragging>;

        if $z1 == 0 goto label01;

        return 1;

     label01:
        $i5 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        if $i5 != 0 goto label02;

        $i24 = virtualinvoke r1.<android.view.MotionEvent: int getEdgeFlags()>();

        if $i24 == 0 goto label02;

        return 0;

     label02:
        $r3 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        if $r3 == null goto label03;

        $r4 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $i6 = virtualinvoke $r4.<android.support.v4.view.PagerAdapter: int getCount()>();

        if $i6 != 0 goto label04;

     label03:
        return 0;

     label04:
        $r6 = r0.<android.support.v4.view.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        if $r6 != null goto label05;

        $r11 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<android.support.v4.view.ViewPager: android.view.VelocityTracker mVelocityTracker> = $r11;

     label05:
        $r5 = r0.<android.support.v4.view.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r5.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r1);

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        z0 = 0;

        $i7 = i0 & 255;

        tableswitch($i7)
        {
            case 0: goto label06;
            case 1: goto label11;
            case 2: goto label07;
            case 3: goto label12;
            case 4: goto label15;
            case 5: goto label13;
            case 6: goto label14;
            default: goto label15;
        };

     label06:
        $r7 = r0.<android.support.v4.view.ViewPager: android.widget.Scroller mScroller>;

        virtualinvoke $r7.<android.widget.Scroller: void abortAnimation()>();

        r0.<android.support.v4.view.ViewPager: boolean mPopulatePending> = 0;

        virtualinvoke r0.<android.support.v4.view.ViewPager: void populate()>();

        $f6 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        r0.<android.support.v4.view.ViewPager: float mInitialMotionX> = $f6;

        r0.<android.support.v4.view.ViewPager: float mLastMotionX> = $f6;

        $f7 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        r0.<android.support.v4.view.ViewPager: float mInitialMotionY> = $f7;

        r0.<android.support.v4.view.ViewPager: float mLastMotionY> = $f7;

        $i8 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>(r1, 0);

        r0.<android.support.v4.view.ViewPager: int mActivePointerId> = $i8;

        goto label15;

     label07:
        $z5 = r0.<android.support.v4.view.ViewPager: boolean mIsBeingDragged>;

        if $z5 != 0 goto label10;

        $i14 = r0.<android.support.v4.view.ViewPager: int mActivePointerId>;

        i1 = staticinvoke <android.support.v4.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)>(r1, $i14);

        f0 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>(r1, i1);

        $f10 = r0.<android.support.v4.view.ViewPager: float mLastMotionX>;

        $f9 = f0 - $f10;

        f1 = staticinvoke <java.lang.Math: float abs(float)>($f9);

        f2 = staticinvoke <android.support.v4.view.MotionEventCompat: float getY(android.view.MotionEvent,int)>(r1, i1);

        $f12 = r0.<android.support.v4.view.ViewPager: float mLastMotionY>;

        $f11 = f2 - $f12;

        f3 = staticinvoke <java.lang.Math: float abs(float)>($f11);

        $i17 = r0.<android.support.v4.view.ViewPager: int mTouchSlop>;

        $f13 = (float) $i17;

        $b16 = f1 cmpl $f13;

        if $b16 <= 0 goto label10;

        $b15 = f1 cmpl f3;

        if $b15 <= 0 goto label10;

        r0.<android.support.v4.view.ViewPager: boolean mIsBeingDragged> = 1;

        specialinvoke r0.<android.support.v4.view.ViewPager: void requestParentDisallowInterceptTouchEvent(boolean)>(1);

        $f15 = r0.<android.support.v4.view.ViewPager: float mInitialMotionX>;

        $f14 = f0 - $f15;

        $b19 = $f14 cmpl 0.0F;

        if $b19 <= 0 goto label08;

        $f17 = r0.<android.support.v4.view.ViewPager: float mInitialMotionX>;

        $i20 = r0.<android.support.v4.view.ViewPager: int mTouchSlop>;

        $f16 = (float) $i20;

        $f20 = $f17 + $f16;

        goto label09;

     label08:
        $f19 = r0.<android.support.v4.view.ViewPager: float mInitialMotionX>;

        $i18 = r0.<android.support.v4.view.ViewPager: int mTouchSlop>;

        $f18 = (float) $i18;

        $f20 = $f19 - $f18;

     label09:
        r0.<android.support.v4.view.ViewPager: float mLastMotionX> = $f20;

        r0.<android.support.v4.view.ViewPager: float mLastMotionY> = f2;

        specialinvoke r0.<android.support.v4.view.ViewPager: void setScrollState(int)>(1);

        specialinvoke r0.<android.support.v4.view.ViewPager: void setScrollingCacheEnabled(boolean)>(1);

        r2 = virtualinvoke r0.<android.support.v4.view.ViewPager: android.view.ViewParent getParent()>();

        if r2 == null goto label10;

        interfaceinvoke r2.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(1);

     label10:
        $z6 = r0.<android.support.v4.view.ViewPager: boolean mIsBeingDragged>;

        if $z6 == 0 goto label15;

        $i13 = r0.<android.support.v4.view.ViewPager: int mActivePointerId>;

        i25 = staticinvoke <android.support.v4.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)>(r1, $i13);

        f31 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>(r1, i25);

        $z7 = specialinvoke r0.<android.support.v4.view.ViewPager: boolean performDrag(float)>(f31);

        z0 = z0 | $z7;

        goto label15;

     label11:
        $z8 = r0.<android.support.v4.view.ViewPager: boolean mIsBeingDragged>;

        if $z8 == 0 goto label15;

        r13 = r0.<android.support.v4.view.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        $i21 = r0.<android.support.v4.view.ViewPager: int mMaximumVelocity>;

        $f22 = (float) $i21;

        virtualinvoke r13.<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>(1000, $f22);

        $i22 = r0.<android.support.v4.view.ViewPager: int mActivePointerId>;

        $f23 = staticinvoke <android.support.v4.view.VelocityTrackerCompat: float getXVelocity(android.view.VelocityTracker,int)>(r13, $i22);

        i26 = (int) $f23;

        r0.<android.support.v4.view.ViewPager: boolean mPopulatePending> = 1;

        i27 = specialinvoke r0.<android.support.v4.view.ViewPager: int getClientWidth()>();

        i28 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getScrollX()>();

        r14 = specialinvoke r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition()>();

        i29 = r14.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $f26 = (float) i28;

        $f21 = (float) i27;

        $f28 = $f26 / $f21;

        $f25 = r14.<android.support.v4.view.ViewPager$ItemInfo: float offset>;

        $f24 = $f28 - $f25;

        $f27 = r14.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor>;

        f4 = $f24 / $f27;

        $i23 = r0.<android.support.v4.view.ViewPager: int mActivePointerId>;

        i2 = staticinvoke <android.support.v4.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)>(r1, $i23);

        f5 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>(r1, i2);

        $f30 = r0.<android.support.v4.view.ViewPager: float mInitialMotionX>;

        $f29 = f5 - $f30;

        i3 = (int) $f29;

        i4 = specialinvoke r0.<android.support.v4.view.ViewPager: int determineTargetPage(int,float,int,int)>(i29, f4, i26, i3);

        virtualinvoke r0.<android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>(i4, 1, 1, i26);

        r0.<android.support.v4.view.ViewPager: int mActivePointerId> = -1;

        specialinvoke r0.<android.support.v4.view.ViewPager: void endDrag()>();

        $r12 = r0.<android.support.v4.view.ViewPager: android.support.v4.widget.EdgeEffectCompat mLeftEdge>;

        $z9 = virtualinvoke $r12.<android.support.v4.widget.EdgeEffectCompat: boolean onRelease()>();

        $r10 = r0.<android.support.v4.view.ViewPager: android.support.v4.widget.EdgeEffectCompat mRightEdge>;

        $z10 = virtualinvoke $r10.<android.support.v4.widget.EdgeEffectCompat: boolean onRelease()>();

        z0 = $z9 | $z10;

        goto label15;

     label12:
        $z2 = r0.<android.support.v4.view.ViewPager: boolean mIsBeingDragged>;

        if $z2 == 0 goto label15;

        $i11 = r0.<android.support.v4.view.ViewPager: int mCurItem>;

        specialinvoke r0.<android.support.v4.view.ViewPager: void scrollToItem(int,boolean,int,boolean)>($i11, 1, 0, 0);

        r0.<android.support.v4.view.ViewPager: int mActivePointerId> = -1;

        specialinvoke r0.<android.support.v4.view.ViewPager: void endDrag()>();

        $r9 = r0.<android.support.v4.view.ViewPager: android.support.v4.widget.EdgeEffectCompat mLeftEdge>;

        $z4 = virtualinvoke $r9.<android.support.v4.widget.EdgeEffectCompat: boolean onRelease()>();

        $r8 = r0.<android.support.v4.view.ViewPager: android.support.v4.widget.EdgeEffectCompat mRightEdge>;

        $z3 = virtualinvoke $r8.<android.support.v4.widget.EdgeEffectCompat: boolean onRelease()>();

        z0 = $z4 | $z3;

        goto label15;

     label13:
        i30 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)>(r1);

        f32 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>(r1, i30);

        r0.<android.support.v4.view.ViewPager: float mLastMotionX> = f32;

        $i12 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>(r1, i30);

        r0.<android.support.v4.view.ViewPager: int mActivePointerId> = $i12;

        goto label15;

     label14:
        specialinvoke r0.<android.support.v4.view.ViewPager: void onSecondaryPointerUp(android.view.MotionEvent)>(r1);

        $i10 = r0.<android.support.v4.view.ViewPager: int mActivePointerId>;

        $i9 = staticinvoke <android.support.v4.view.MotionEventCompat: int findPointerIndex(android.view.MotionEvent,int)>(r1, $i10);

        $f8 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>(r1, $i9);

        r0.<android.support.v4.view.ViewPager: float mLastMotionX> = $f8;

     label15:
        if z0 == 0 goto label16;

        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(r0);

     label16:
        return 1;
    }

    private void requestParentDisallowInterceptTouchEvent(boolean)
    {
        android.support.v4.view.ViewPager r0;
        boolean z0;
        android.view.ViewParent r1;

        r0 := @this: android.support.v4.view.ViewPager;

        z0 := @parameter0: boolean;

        r1 = virtualinvoke r0.<android.support.v4.view.ViewPager: android.view.ViewParent getParent()>();

        if r1 == null goto label1;

        interfaceinvoke r1.<android.view.ViewParent: void requestDisallowInterceptTouchEvent(boolean)>(z0);

     label1:
        return;
    }

    private boolean performDrag(float)
    {
        android.support.v4.view.ViewPager r0;
        float f0, f1, f2, f3, f4, f5, f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, f26;
        boolean z0, z1, z2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i11, $i12, $i13;
        android.support.v4.view.ViewPager$ItemInfo r1, r2;
        java.util.ArrayList $r3, $r4, $r6;
        java.lang.Object $r5, $r7;
        android.support.v4.view.PagerAdapter $r8;
        byte $b7, $b10;
        android.support.v4.widget.EdgeEffectCompat $r9, $r10;

        r0 := @this: android.support.v4.view.ViewPager;

        f0 := @parameter0: float;

        z0 = 0;

        $f7 = r0.<android.support.v4.view.ViewPager: float mLastMotionX>;

        f1 = $f7 - f0;

        r0.<android.support.v4.view.ViewPager: float mLastMotionX> = f0;

        $i1 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getScrollX()>();

        f2 = (float) $i1;

        f3 = f2 + f1;

        i0 = specialinvoke r0.<android.support.v4.view.ViewPager: int getClientWidth()>();

        $f10 = (float) i0;

        $f8 = r0.<android.support.v4.view.ViewPager: float mFirstOffset>;

        f4 = $f10 * $f8;

        $f11 = (float) i0;

        $f9 = r0.<android.support.v4.view.ViewPager: float mLastOffset>;

        f5 = $f11 * $f9;

        z1 = 1;

        z2 = 1;

        $r3 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r5 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r1 = (android.support.v4.view.ViewPager$ItemInfo) $r5;

        $r6 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r4 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i2 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $i3 = $i2 - 1;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>($i3);

        r2 = (android.support.v4.view.ViewPager$ItemInfo) $r7;

        $i4 = r1.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if $i4 == 0 goto label1;

        z1 = 0;

        $f24 = r1.<android.support.v4.view.ViewPager$ItemInfo: float offset>;

        $f25 = (float) i0;

        f4 = $f24 * $f25;

     label1:
        $i6 = r2.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $r8 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $i5 = virtualinvoke $r8.<android.support.v4.view.PagerAdapter: int getCount()>();

        $i9 = $i5 - 1;

        if $i6 == $i9 goto label2;

        z2 = 0;

        $f21 = r2.<android.support.v4.view.ViewPager$ItemInfo: float offset>;

        $f22 = (float) i0;

        f5 = $f21 * $f22;

     label2:
        $b10 = f3 cmpg f4;

        if $b10 >= 0 goto label4;

        if z1 == 0 goto label3;

        f6 = f4 - f3;

        $r10 = r0.<android.support.v4.view.ViewPager: android.support.v4.widget.EdgeEffectCompat mLeftEdge>;

        $f20 = staticinvoke <java.lang.Math: float abs(float)>(f6);

        $f19 = (float) i0;

        $f23 = $f20 / $f19;

        z0 = virtualinvoke $r10.<android.support.v4.widget.EdgeEffectCompat: boolean onPull(float)>($f23);

     label3:
        f3 = f4;

        goto label6;

     label4:
        $b7 = f3 cmpl f5;

        if $b7 <= 0 goto label6;

        if z2 == 0 goto label5;

        f26 = f3 - f5;

        $r9 = r0.<android.support.v4.view.ViewPager: android.support.v4.widget.EdgeEffectCompat mRightEdge>;

        $f18 = staticinvoke <java.lang.Math: float abs(float)>(f26);

        $f16 = (float) i0;

        $f17 = $f18 / $f16;

        z0 = virtualinvoke $r9.<android.support.v4.widget.EdgeEffectCompat: boolean onPull(float)>($f17);

     label5:
        f3 = f5;

     label6:
        $f12 = r0.<android.support.v4.view.ViewPager: float mLastMotionX>;

        $i8 = (int) f3;

        $f14 = (float) $i8;

        $f15 = f3 - $f14;

        $f13 = $f12 + $f15;

        r0.<android.support.v4.view.ViewPager: float mLastMotionX> = $f13;

        $i12 = (int) f3;

        $i13 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getScrollY()>();

        virtualinvoke r0.<android.support.v4.view.ViewPager: void scrollTo(int,int)>($i12, $i13);

        $i11 = (int) f3;

        specialinvoke r0.<android.support.v4.view.ViewPager: boolean pageScrolled(int)>($i11);

        return z0;
    }

    private android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition()
    {
        android.support.v4.view.ViewPager r0;
        int i0, i1, i2, $i3, $i5, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        float f0, f1, f2, f3, f4, f5, f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17;
        boolean z0;
        android.support.v4.view.ViewPager$ItemInfo r1, r2;
        java.util.ArrayList $r3, $r4, $r6;
        java.lang.Object $r5;
        byte $b4, $b6;
        android.support.v4.view.PagerAdapter $r7;

        r0 := @this: android.support.v4.view.ViewPager;

        i0 = specialinvoke r0.<android.support.v4.view.ViewPager: int getClientWidth()>();

        if i0 <= 0 goto label01;

        $i13 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getScrollX()>();

        $f16 = (float) $i13;

        $f13 = (float) i0;

        $f17 = $f16 / $f13;

        goto label02;

     label01:
        $f17 = 0.0F;

     label02:
        f0 = $f17;

        if i0 <= 0 goto label03;

        $i12 = r0.<android.support.v4.view.ViewPager: int mPageMargin>;

        $f14 = (float) $i12;

        $f11 = (float) i0;

        $f15 = $f14 / $f11;

        goto label04;

     label03:
        $f15 = 0.0F;

     label04:
        f1 = $f15;

        i1 = -1;

        f2 = 0.0F;

        f3 = 0.0F;

        z0 = 1;

        r1 = null;

        i2 = 0;

     label05:
        $r3 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i3 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        if i2 >= $i3 goto label11;

        $r4 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r2 = (android.support.v4.view.ViewPager$ItemInfo) $r5;

        if z0 != 0 goto label06;

        $i8 = r2.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $i9 = i1 + 1;

        if $i8 == $i9 goto label06;

        r2 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo mTempItem>;

        $f10 = f2 + f3;

        $f9 = $f10 + f1;

        r2.<android.support.v4.view.ViewPager$ItemInfo: float offset> = $f9;

        $i11 = i1 + 1;

        r2.<android.support.v4.view.ViewPager$ItemInfo: int position> = $i11;

        $r7 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $i10 = r2.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $f12 = virtualinvoke $r7.<android.support.v4.view.PagerAdapter: float getPageWidth(int)>($i10);

        r2.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor> = $f12;

        i2 = i2 + -1;

     label06:
        f4 = r2.<android.support.v4.view.ViewPager$ItemInfo: float offset>;

        f5 = f4;

        $f7 = r2.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor>;

        $f8 = f4 + $f7;

        f6 = $f8 + f1;

        if z0 != 0 goto label07;

        $b6 = f0 cmpl f5;

        if $b6 < 0 goto label09;

     label07:
        $b4 = f0 cmpg f6;

        if $b4 < 0 goto label08;

        $r6 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i5 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        $i7 = $i5 - 1;

        if i2 != $i7 goto label10;

     label08:
        return r2;

     label09:
        return r1;

     label10:
        z0 = 0;

        i1 = r2.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        f2 = f4;

        f3 = r2.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor>;

        r1 = r2;

        i2 = i2 + 1;

        goto label05;

     label11:
        return r1;
    }

    private int determineTargetPage(int, float, int, int)
    {
        android.support.v4.view.ViewPager r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        float f0, f1, $f2, $f3, $f4, $f5;
        android.support.v4.view.ViewPager$ItemInfo r1, r8;
        java.util.ArrayList $r2, $r4, $r5, $r6;
        java.lang.Object $r3, $r7;

        r0 := @this: android.support.v4.view.ViewPager;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $i4 = staticinvoke <java.lang.Math: int abs(int)>(i2);

        $i5 = r0.<android.support.v4.view.ViewPager: int mFlingDistance>;

        if $i4 <= $i5 goto label3;

        $i14 = staticinvoke <java.lang.Math: int abs(int)>(i1);

        $i13 = r0.<android.support.v4.view.ViewPager: int mMinimumVelocity>;

        if $i14 <= $i13 goto label3;

        if i1 <= 0 goto label1;

        $i15 = i0;

        goto label2;

     label1:
        $i15 = i0 + 1;

     label2:
        i3 = $i15;

        goto label6;

     label3:
        $i6 = r0.<android.support.v4.view.ViewPager: int mCurItem>;

        if i0 < $i6 goto label4;

        $f5 = 0.4F;

        goto label5;

     label4:
        $f5 = 0.6F;

     label5:
        f1 = $f5;

        $f2 = (float) i0;

        $f3 = $f2 + f0;

        $f4 = $f3 + f1;

        i3 = (int) $f4;

     label6:
        $r2 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i7 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if $i7 <= 0 goto label7;

        $r4 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r3 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r8 = (android.support.v4.view.ViewPager$ItemInfo) $r3;

        $r5 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r6 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i9 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        $i8 = $i9 - 1;

        $r7 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i8);

        r1 = (android.support.v4.view.ViewPager$ItemInfo) $r7;

        $i12 = r8.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $i10 = r1.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $i11 = staticinvoke <java.lang.Math: int min(int,int)>(i3, $i10);

        i3 = staticinvoke <java.lang.Math: int max(int,int)>($i12, $i11);

     label7:
        return i3;
    }

    public void draw(android.graphics.Canvas)
    {
        android.support.v4.view.ViewPager r0;
        android.graphics.Canvas r1;
        boolean z0, $z1, $z2, $z3, $z4;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19, i20;
        android.support.v4.widget.EdgeEffectCompat $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r10;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        android.support.v4.view.PagerAdapter $r9, $r11;

        r0 := @this: android.support.v4.view.ViewPager;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.view.ViewGroup: void draw(android.graphics.Canvas)>(r1);

        z0 = 0;

        i0 = staticinvoke <android.support.v4.view.ViewCompat: int getOverScrollMode(android.view.View)>(r0);

        if i0 == 0 goto label1;

        if i0 != 1 goto label3;

        $r9 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        if $r9 == null goto label3;

        $r11 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $i17 = virtualinvoke $r11.<android.support.v4.view.PagerAdapter: int getCount()>();

        if $i17 <= 1 goto label3;

     label1:
        $r2 = r0.<android.support.v4.view.ViewPager: android.support.v4.widget.EdgeEffectCompat mLeftEdge>;

        $z1 = virtualinvoke $r2.<android.support.v4.widget.EdgeEffectCompat: boolean isFinished()>();

        if $z1 != 0 goto label2;

        i1 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

        $i11 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getHeight()>();

        $i10 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getPaddingTop()>();

        $i13 = $i11 - $i10;

        $i14 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getPaddingBottom()>();

        i2 = $i13 - $i14;

        i3 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getWidth()>();

        virtualinvoke r1.<android.graphics.Canvas: void rotate(float)>(270.0F);

        $i12 = neg i2;

        $i15 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getPaddingTop()>();

        $i16 = $i12 + $i15;

        $f9 = (float) $i16;

        $f7 = r0.<android.support.v4.view.ViewPager: float mFirstOffset>;

        $f6 = (float) i3;

        $f8 = $f7 * $f6;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f9, $f8);

        $r6 = r0.<android.support.v4.view.ViewPager: android.support.v4.widget.EdgeEffectCompat mLeftEdge>;

        virtualinvoke $r6.<android.support.v4.widget.EdgeEffectCompat: void setSize(int,int)>(i2, i3);

        $r7 = r0.<android.support.v4.view.ViewPager: android.support.v4.widget.EdgeEffectCompat mLeftEdge>;

        $z4 = virtualinvoke $r7.<android.support.v4.widget.EdgeEffectCompat: boolean draw(android.graphics.Canvas)>(r1);

        z0 = z0 | $z4;

        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i1);

     label2:
        $r3 = r0.<android.support.v4.view.ViewPager: android.support.v4.widget.EdgeEffectCompat mRightEdge>;

        $z2 = virtualinvoke $r3.<android.support.v4.widget.EdgeEffectCompat: boolean isFinished()>();

        if $z2 != 0 goto label4;

        i18 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

        i19 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getWidth()>();

        $i4 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getHeight()>();

        $i5 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getPaddingTop()>();

        $i7 = $i4 - $i5;

        $i6 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getPaddingBottom()>();

        i20 = $i7 - $i6;

        virtualinvoke r1.<android.graphics.Canvas: void rotate(float)>(90.0F);

        $i9 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getPaddingTop()>();

        $i8 = neg $i9;

        $f4 = (float) $i8;

        $f1 = r0.<android.support.v4.view.ViewPager: float mLastOffset>;

        $f0 = $f1 + 1.0F;

        $f2 = neg $f0;

        $f3 = (float) i19;

        $f5 = $f2 * $f3;

        virtualinvoke r1.<android.graphics.Canvas: void translate(float,float)>($f4, $f5);

        $r5 = r0.<android.support.v4.view.ViewPager: android.support.v4.widget.EdgeEffectCompat mRightEdge>;

        virtualinvoke $r5.<android.support.v4.widget.EdgeEffectCompat: void setSize(int,int)>(i20, i19);

        $r4 = r0.<android.support.v4.view.ViewPager: android.support.v4.widget.EdgeEffectCompat mRightEdge>;

        $z3 = virtualinvoke $r4.<android.support.v4.widget.EdgeEffectCompat: boolean draw(android.graphics.Canvas)>(r1);

        z0 = z0 | $z3;

        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i18);

        goto label4;

     label3:
        $r10 = r0.<android.support.v4.view.ViewPager: android.support.v4.widget.EdgeEffectCompat mLeftEdge>;

        virtualinvoke $r10.<android.support.v4.widget.EdgeEffectCompat: void finish()>();

        $r8 = r0.<android.support.v4.view.ViewPager: android.support.v4.widget.EdgeEffectCompat mRightEdge>;

        virtualinvoke $r8.<android.support.v4.widget.EdgeEffectCompat: void finish()>();

     label4:
        if z0 == 0 goto label5;

        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(r0);

     label5:
        return;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        android.support.v4.view.ViewPager r0;
        android.graphics.Canvas r1;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i16, $i17, $i18, $i19, $i20, $i21;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22;
        android.support.v4.view.ViewPager$ItemInfo r2, $r10;
        android.graphics.drawable.Drawable $r3, $r13, $r14;
        java.util.ArrayList $r4, $r7, $r8, $r9, $r15;
        android.support.v4.view.PagerAdapter $r5, $r12;
        java.lang.Object $r6, $r11, $r16;
        byte $b14, $b15;

        r0 := @this: android.support.v4.view.ViewPager;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.view.ViewGroup: void onDraw(android.graphics.Canvas)>(r1);

        $i7 = r0.<android.support.v4.view.ViewPager: int mPageMargin>;

        if $i7 <= 0 goto label8;

        $r3 = r0.<android.support.v4.view.ViewPager: android.graphics.drawable.Drawable mMarginDrawable>;

        if $r3 == null goto label8;

        $r4 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i8 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i8 <= 0 goto label8;

        $r5 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        if $r5 == null goto label8;

        i0 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getScrollX()>();

        i1 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getWidth()>();

        $i9 = r0.<android.support.v4.view.ViewPager: int mPageMargin>;

        $f4 = (float) $i9;

        $f5 = (float) i1;

        f0 = $f4 / $f5;

        i2 = 0;

        $r7 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r6 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r2 = (android.support.v4.view.ViewPager$ItemInfo) $r6;

        f1 = r2.<android.support.v4.view.ViewPager$ItemInfo: float offset>;

        $r8 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        i3 = virtualinvoke $r8.<java.util.ArrayList: int size()>();

        i4 = r2.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $r9 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i10 = i3 - 1;

        $r11 = virtualinvoke $r9.<java.util.ArrayList: java.lang.Object get(int)>($i10);

        $r10 = (android.support.v4.view.ViewPager$ItemInfo) $r11;

        i5 = $r10.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        i6 = i4;

     label1:
        if i6 >= i5 goto label8;

     label2:
        $i11 = r2.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if i6 <= $i11 goto label3;

        if i2 >= i3 goto label3;

        $r15 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        i2 = i2 + 1;

        $r16 = virtualinvoke $r15.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r2 = (android.support.v4.view.ViewPager$ItemInfo) $r16;

        goto label2;

     label3:
        $i12 = r2.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if i6 != $i12 goto label4;

        $f17 = r2.<android.support.v4.view.ViewPager$ItemInfo: float offset>;

        $f18 = r2.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor>;

        $f22 = $f17 + $f18;

        $f16 = (float) i1;

        f2 = $f22 * $f16;

        $f20 = r2.<android.support.v4.view.ViewPager$ItemInfo: float offset>;

        $f21 = r2.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor>;

        $f19 = $f20 + $f21;

        f1 = $f19 + f0;

        goto label5;

     label4:
        $r12 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        f3 = virtualinvoke $r12.<android.support.v4.view.PagerAdapter: float getPageWidth(int)>(i6);

        $f8 = f1 + f3;

        $f7 = (float) i1;

        f2 = $f8 * $f7;

        $f6 = f3 + f0;

        f1 = f1 + $f6;

     label5:
        $i13 = r0.<android.support.v4.view.ViewPager: int mPageMargin>;

        $f10 = (float) $i13;

        $f9 = f2 + $f10;

        $f11 = (float) i0;

        $b14 = $f9 cmpl $f11;

        if $b14 <= 0 goto label6;

        $r13 = r0.<android.support.v4.view.ViewPager: android.graphics.drawable.Drawable mMarginDrawable>;

        $i19 = (int) f2;

        $i20 = r0.<android.support.v4.view.ViewPager: int mTopPageBounds>;

        $i16 = r0.<android.support.v4.view.ViewPager: int mPageMargin>;

        $f15 = (float) $i16;

        $f14 = f2 + $f15;

        $f13 = $f14 + 0.5F;

        $i21 = (int) $f13;

        $i18 = r0.<android.support.v4.view.ViewPager: int mBottomPageBounds>;

        virtualinvoke $r13.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i19, $i20, $i21, $i18);

        $r14 = r0.<android.support.v4.view.ViewPager: android.graphics.drawable.Drawable mMarginDrawable>;

        virtualinvoke $r14.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

     label6:
        $i17 = i0 + i1;

        $f12 = (float) $i17;

        $b15 = f2 cmpl $f12;

        if $b15 <= 0 goto label7;

        goto label8;

     label7:
        i6 = i6 + 1;

        goto label1;

     label8:
        return;
    }

    public boolean beginFakeDrag()
    {
        android.support.v4.view.ViewPager r0;
        long l0;
        android.view.MotionEvent r1;
        boolean $z0;
        android.view.VelocityTracker $r2, $r3, $r4, $r5;

        r0 := @this: android.support.v4.view.ViewPager;

        $z0 = r0.<android.support.v4.view.ViewPager: boolean mIsBeingDragged>;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        r0.<android.support.v4.view.ViewPager: boolean mFakeDragging> = 1;

        specialinvoke r0.<android.support.v4.view.ViewPager: void setScrollState(int)>(1);

        r0.<android.support.v4.view.ViewPager: float mLastMotionX> = 0.0F;

        r0.<android.support.v4.view.ViewPager: float mInitialMotionX> = 0.0F;

        $r2 = r0.<android.support.v4.view.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        if $r2 != null goto label2;

        $r5 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<android.support.v4.view.ViewPager: android.view.VelocityTracker mVelocityTracker> = $r5;

        goto label3;

     label2:
        $r3 = r0.<android.support.v4.view.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r3.<android.view.VelocityTracker: void clear()>();

     label3:
        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r1 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>(l0, l0, 0, 0.0F, 0.0F, 0);

        $r4 = r0.<android.support.v4.view.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r4.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r1);

        virtualinvoke r1.<android.view.MotionEvent: void recycle()>();

        r0.<android.support.v4.view.ViewPager: long mFakeDragBeginTime> = l0;

        return 1;
    }

    public void endFakeDrag()
    {
        android.support.v4.view.ViewPager r0;
        android.view.VelocityTracker r1;
        int i0, i1, i2, i3, i4, i5, $i6, $i7;
        android.support.v4.view.ViewPager$ItemInfo r2;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        boolean $z0;
        java.lang.IllegalStateException $r3;

        r0 := @this: android.support.v4.view.ViewPager;

        $z0 = r0.<android.support.v4.view.ViewPager: boolean mFakeDragging>;

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No fake drag in progress. Call beginFakeDrag first.");

        throw $r3;

     label1:
        r1 = r0.<android.support.v4.view.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        $i6 = r0.<android.support.v4.view.ViewPager: int mMaximumVelocity>;

        $f1 = (float) $i6;

        virtualinvoke r1.<android.view.VelocityTracker: void computeCurrentVelocity(int,float)>(1000, $f1);

        $i7 = r0.<android.support.v4.view.ViewPager: int mActivePointerId>;

        $f2 = staticinvoke <android.support.v4.view.VelocityTrackerCompat: float getXVelocity(android.view.VelocityTracker,int)>(r1, $i7);

        i0 = (int) $f2;

        r0.<android.support.v4.view.ViewPager: boolean mPopulatePending> = 1;

        i1 = specialinvoke r0.<android.support.v4.view.ViewPager: int getClientWidth()>();

        i2 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getScrollX()>();

        r2 = specialinvoke r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition()>();

        i3 = r2.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $f3 = (float) i2;

        $f4 = (float) i1;

        $f5 = $f3 / $f4;

        $f6 = r2.<android.support.v4.view.ViewPager$ItemInfo: float offset>;

        $f7 = $f5 - $f6;

        $f8 = r2.<android.support.v4.view.ViewPager$ItemInfo: float widthFactor>;

        f0 = $f7 / $f8;

        $f9 = r0.<android.support.v4.view.ViewPager: float mLastMotionX>;

        $f10 = r0.<android.support.v4.view.ViewPager: float mInitialMotionX>;

        $f11 = $f9 - $f10;

        i4 = (int) $f11;

        i5 = specialinvoke r0.<android.support.v4.view.ViewPager: int determineTargetPage(int,float,int,int)>(i3, f0, i0, i4);

        virtualinvoke r0.<android.support.v4.view.ViewPager: void setCurrentItemInternal(int,boolean,boolean,int)>(i5, 1, 1, i0);

        specialinvoke r0.<android.support.v4.view.ViewPager: void endDrag()>();

        r0.<android.support.v4.view.ViewPager: boolean mFakeDragging> = 0;

        return;
    }

    public void fakeDragBy(float)
    {
        android.support.v4.view.ViewPager r0;
        float f0, f1, f2, f3, f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i12, $i13, $i14;
        android.support.v4.view.ViewPager$ItemInfo r1, r2;
        long l1, $l15;
        android.view.MotionEvent r3;
        boolean $z0;
        java.util.ArrayList $r4, $r5, $r7;
        java.lang.Object $r6, $r8;
        android.support.v4.view.PagerAdapter $r9;
        byte $b8, $b11;
        android.view.VelocityTracker $r10;
        java.lang.IllegalStateException $r11;

        r0 := @this: android.support.v4.view.ViewPager;

        f0 := @parameter0: float;

        $z0 = r0.<android.support.v4.view.ViewPager: boolean mFakeDragging>;

        if $z0 != 0 goto label1;

        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No fake drag in progress. Call beginFakeDrag first.");

        throw $r11;

     label1:
        $f5 = r0.<android.support.v4.view.ViewPager: float mLastMotionX>;

        $f6 = $f5 + f0;

        r0.<android.support.v4.view.ViewPager: float mLastMotionX> = $f6;

        $i2 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getScrollX()>();

        f1 = (float) $i2;

        f2 = f1 - f0;

        i0 = specialinvoke r0.<android.support.v4.view.ViewPager: int getClientWidth()>();

        $f9 = (float) i0;

        $f7 = r0.<android.support.v4.view.ViewPager: float mFirstOffset>;

        f3 = $f9 * $f7;

        $f10 = (float) i0;

        $f8 = r0.<android.support.v4.view.ViewPager: float mLastOffset>;

        f4 = $f10 * $f8;

        $r4 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r6 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r1 = (android.support.v4.view.ViewPager$ItemInfo) $r6;

        $r7 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $r5 = r0.<android.support.v4.view.ViewPager: java.util.ArrayList mItems>;

        $i3 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        $i4 = $i3 - 1;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>($i4);

        r2 = (android.support.v4.view.ViewPager$ItemInfo) $r8;

        $i5 = r1.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        if $i5 == 0 goto label2;

        $f19 = r1.<android.support.v4.view.ViewPager$ItemInfo: float offset>;

        $f16 = (float) i0;

        f3 = $f19 * $f16;

     label2:
        $i7 = r2.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $r9 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $i6 = virtualinvoke $r9.<android.support.v4.view.PagerAdapter: int getCount()>();

        $i10 = $i6 - 1;

        if $i7 == $i10 goto label3;

        $f17 = r2.<android.support.v4.view.ViewPager$ItemInfo: float offset>;

        $f18 = (float) i0;

        f4 = $f17 * $f18;

     label3:
        $b11 = f2 cmpg f3;

        if $b11 >= 0 goto label4;

        f2 = f3;

        goto label5;

     label4:
        $b8 = f2 cmpl f4;

        if $b8 <= 0 goto label5;

        f2 = f4;

     label5:
        $f11 = r0.<android.support.v4.view.ViewPager: float mLastMotionX>;

        $i9 = (int) f2;

        $f13 = (float) $i9;

        $f14 = f2 - $f13;

        $f12 = $f11 + $f14;

        r0.<android.support.v4.view.ViewPager: float mLastMotionX> = $f12;

        $i13 = (int) f2;

        $i14 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getScrollY()>();

        virtualinvoke r0.<android.support.v4.view.ViewPager: void scrollTo(int,int)>($i13, $i14);

        $i12 = (int) f2;

        specialinvoke r0.<android.support.v4.view.ViewPager: boolean pageScrolled(int)>($i12);

        l1 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l15 = r0.<android.support.v4.view.ViewPager: long mFakeDragBeginTime>;

        $f15 = r0.<android.support.v4.view.ViewPager: float mLastMotionX>;

        r3 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>($l15, l1, 2, $f15, 0.0F, 0);

        $r10 = r0.<android.support.v4.view.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r10.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r3);

        virtualinvoke r3.<android.view.MotionEvent: void recycle()>();

        return;
    }

    public boolean isFakeDragging()
    {
        android.support.v4.view.ViewPager r0;
        boolean $z0;

        r0 := @this: android.support.v4.view.ViewPager;

        $z0 = r0.<android.support.v4.view.ViewPager: boolean mFakeDragging>;

        return $z0;
    }

    private void onSecondaryPointerUp(android.view.MotionEvent)
    {
        android.support.v4.view.ViewPager r0;
        android.view.MotionEvent r1;
        int i0, i1, $i3, $i4;
        byte b2, $b5;
        float $f0;
        android.view.VelocityTracker $r2, $r3;

        r0 := @this: android.support.v4.view.ViewPager;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionIndex(android.view.MotionEvent)>(r1);

        i1 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>(r1, i0);

        $i3 = r0.<android.support.v4.view.ViewPager: int mActivePointerId>;

        if i1 != $i3 goto label3;

        if i0 != 0 goto label1;

        $b5 = 1;

        goto label2;

     label1:
        $b5 = 0;

     label2:
        b2 = $b5;

        $f0 = staticinvoke <android.support.v4.view.MotionEventCompat: float getX(android.view.MotionEvent,int)>(r1, b2);

        r0.<android.support.v4.view.ViewPager: float mLastMotionX> = $f0;

        $i4 = staticinvoke <android.support.v4.view.MotionEventCompat: int getPointerId(android.view.MotionEvent,int)>(r1, b2);

        r0.<android.support.v4.view.ViewPager: int mActivePointerId> = $i4;

        $r2 = r0.<android.support.v4.view.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        if $r2 == null goto label3;

        $r3 = r0.<android.support.v4.view.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r3.<android.view.VelocityTracker: void clear()>();

     label3:
        return;
    }

    private void endDrag()
    {
        android.support.v4.view.ViewPager r0;
        android.view.VelocityTracker $r1, $r2;

        r0 := @this: android.support.v4.view.ViewPager;

        r0.<android.support.v4.view.ViewPager: boolean mIsBeingDragged> = 0;

        r0.<android.support.v4.view.ViewPager: boolean mIsUnableToDrag> = 0;

        $r1 = r0.<android.support.v4.view.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        if $r1 == null goto label1;

        $r2 = r0.<android.support.v4.view.ViewPager: android.view.VelocityTracker mVelocityTracker>;

        virtualinvoke $r2.<android.view.VelocityTracker: void recycle()>();

        r0.<android.support.v4.view.ViewPager: android.view.VelocityTracker mVelocityTracker> = null;

     label1:
        return;
    }

    private void setScrollingCacheEnabled(boolean)
    {
        android.support.v4.view.ViewPager r0;
        boolean z0, $z1;

        r0 := @this: android.support.v4.view.ViewPager;

        z0 := @parameter0: boolean;

        $z1 = r0.<android.support.v4.view.ViewPager: boolean mScrollingCacheEnabled>;

        if $z1 == z0 goto label1;

        r0.<android.support.v4.view.ViewPager: boolean mScrollingCacheEnabled> = z0;

     label1:
        return;
    }

    public boolean canScrollHorizontally(int)
    {
        android.support.v4.view.ViewPager r0;
        int i0, i1, i2, $i3, $i4;
        android.support.v4.view.PagerAdapter $r1;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        boolean $z0, $z1;

        r0 := @this: android.support.v4.view.ViewPager;

        i0 := @parameter0: int;

        $r1 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        if $r1 != null goto label1;

        return 0;

     label1:
        i1 = specialinvoke r0.<android.support.v4.view.ViewPager: int getClientWidth()>();

        i2 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getScrollX()>();

        if i0 >= 0 goto label4;

        $f4 = (float) i1;

        $f3 = r0.<android.support.v4.view.ViewPager: float mFirstOffset>;

        $f5 = $f4 * $f3;

        $i4 = (int) $f5;

        if i2 <= $i4 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;

     label4:
        if i0 <= 0 goto label7;

        $f1 = (float) i1;

        $f0 = r0.<android.support.v4.view.ViewPager: float mLastOffset>;

        $f2 = $f1 * $f0;

        $i3 = (int) $f2;

        if i2 >= $i3 goto label5;

        $z0 = 1;

        goto label6;

     label5:
        $z0 = 0;

     label6:
        return $z0;

     label7:
        return 0;
    }

    protected boolean canScroll(android.view.View, boolean, int, int, int)
    {
        android.support.v4.view.ViewPager r0;
        android.view.View r1, r3;
        boolean z0, $z1, $z2, $z3, $z4;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        android.view.ViewGroup r2;

        r0 := @this: android.support.v4.view.ViewPager;

        r1 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $z1 = r1 instanceof android.view.ViewGroup;

        if $z1 == 0 goto label3;

        r2 = (android.view.ViewGroup) r1;

        i3 = virtualinvoke r1.<android.view.View: int getScrollX()>();

        i4 = virtualinvoke r1.<android.view.View: int getScrollY()>();

        i5 = virtualinvoke r2.<android.view.ViewGroup: int getChildCount()>();

        i6 = i5 - 1;

     label1:
        if i6 < 0 goto label3;

        r3 = virtualinvoke r2.<android.view.ViewGroup: android.view.View getChildAt(int)>(i6);

        $i9 = i1 + i3;

        $i8 = virtualinvoke r3.<android.view.View: int getLeft()>();

        if $i9 < $i8 goto label2;

        $i11 = i1 + i3;

        $i10 = virtualinvoke r3.<android.view.View: int getRight()>();

        if $i11 >= $i10 goto label2;

        $i13 = i2 + i4;

        $i12 = virtualinvoke r3.<android.view.View: int getTop()>();

        if $i13 < $i12 goto label2;

        $i15 = i2 + i4;

        $i14 = virtualinvoke r3.<android.view.View: int getBottom()>();

        if $i15 >= $i14 goto label2;

        $i16 = i1 + i3;

        $i18 = virtualinvoke r3.<android.view.View: int getLeft()>();

        $i17 = $i16 - $i18;

        $i20 = i2 + i4;

        $i21 = virtualinvoke r3.<android.view.View: int getTop()>();

        $i19 = $i20 - $i21;

        $z4 = virtualinvoke r0.<android.support.v4.view.ViewPager: boolean canScroll(android.view.View,boolean,int,int,int)>(r3, 1, i0, $i17, $i19);

        if $z4 == 0 goto label2;

        return 1;

     label2:
        i6 = i6 + -1;

        goto label1;

     label3:
        if z0 == 0 goto label4;

        $i7 = neg i0;

        $z2 = staticinvoke <android.support.v4.view.ViewCompat: boolean canScrollHorizontally(android.view.View,int)>(r1, $i7);

        if $z2 == 0 goto label4;

        $z3 = 1;

        goto label5;

     label4:
        $z3 = 0;

     label5:
        return $z3;
    }

    public boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        android.support.v4.view.ViewPager r0;
        android.view.KeyEvent r1;
        boolean $z0, $z1, $z2;

        r0 := @this: android.support.v4.view.ViewPager;

        r1 := @parameter0: android.view.KeyEvent;

        $z0 = specialinvoke r0.<android.view.ViewGroup: boolean dispatchKeyEvent(android.view.KeyEvent)>(r1);

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<android.support.v4.view.ViewPager: boolean executeKeyEvent(android.view.KeyEvent)>(r1);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public boolean executeKeyEvent(android.view.KeyEvent)
    {
        android.support.v4.view.ViewPager r0;
        android.view.KeyEvent r1;
        boolean z0, $z1, $z2;
        int $i0, $i1, $i2;

        r0 := @this: android.support.v4.view.ViewPager;

        r1 := @parameter0: android.view.KeyEvent;

        z0 = 0;

        $i0 = virtualinvoke r1.<android.view.KeyEvent: int getAction()>();

        if $i0 != 0 goto label5;

        $i1 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        lookupswitch($i1)
        {
            case 21: goto label1;
            case 22: goto label2;
            case 61: goto label3;
            default: goto label5;
        };

     label1:
        z0 = virtualinvoke r0.<android.support.v4.view.ViewPager: boolean arrowScroll(int)>(17);

        goto label5;

     label2:
        z0 = virtualinvoke r0.<android.support.v4.view.ViewPager: boolean arrowScroll(int)>(66);

        goto label5;

     label3:
        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 11 goto label5;

        $z1 = staticinvoke <android.support.v4.view.KeyEventCompat: boolean hasNoModifiers(android.view.KeyEvent)>(r1);

        if $z1 == 0 goto label4;

        z0 = virtualinvoke r0.<android.support.v4.view.ViewPager: boolean arrowScroll(int)>(2);

        goto label5;

     label4:
        $z2 = staticinvoke <android.support.v4.view.KeyEventCompat: boolean hasModifiers(android.view.KeyEvent,int)>(r1, 1);

        if $z2 == 0 goto label5;

        z0 = virtualinvoke r0.<android.support.v4.view.ViewPager: boolean arrowScroll(int)>(1);

     label5:
        return z0;
    }

    public boolean arrowScroll(int)
    {
        android.support.v4.view.ViewPager r0;
        int i0, i1, $i2, i4, i5, i6;
        android.view.View r1, r27;
        boolean z0, $z1, $z2, z3;
        android.view.ViewParent r2, r3;
        android.view.FocusFinder $r4;
        android.graphics.Rect $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        java.lang.StringBuilder $r13, $r17, $r18, $r21, $r24, r26;
        java.lang.String $r14, $r19, $r20, $r22;
        java.lang.Class $r15, $r25;

        r0 := @this: android.support.v4.view.ViewPager;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<android.support.v4.view.ViewPager: android.view.View findFocus()>();

        if r1 != r0 goto label01;

        r1 = null;

        goto label07;

     label01:
        if r1 == null goto label07;

        z0 = 0;

        r2 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

     label02:
        $z1 = r2 instanceof android.view.ViewGroup;

        if $z1 == 0 goto label04;

        if r2 != r0 goto label03;

        z0 = 1;

        goto label04;

     label03:
        r2 = interfaceinvoke r2.<android.view.ViewParent: android.view.ViewParent getParent()>();

        goto label02;

     label04:
        if z0 != 0 goto label07;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        r26 = $r13;

        $r15 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = virtualinvoke $r15.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        r3 = virtualinvoke r1.<android.view.View: android.view.ViewParent getParent()>();

     label05:
        $z2 = r3 instanceof android.view.ViewGroup;

        if $z2 == 0 goto label06;

        $r24 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" => ");

        $r25 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r22 = virtualinvoke $r25.<java.lang.Class: java.lang.String getSimpleName()>();

        virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        r3 = interfaceinvoke r3.<android.view.ViewParent: android.view.ViewParent getParent()>();

        goto label05;

     label06:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("arrowScroll tried to find focus based on non-child current focused view ");

        $r20 = virtualinvoke r26.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r19 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("ViewPager", $r19);

        r1 = null;

     label07:
        z3 = 0;

        $r4 = staticinvoke <android.view.FocusFinder: android.view.FocusFinder getInstance()>();

        r27 = virtualinvoke $r4.<android.view.FocusFinder: android.view.View findNextFocus(android.view.ViewGroup,android.view.View,int)>(r0, r1, i0);

        if r27 == null goto label13;

        if r27 == r1 goto label13;

        if i0 != 17 goto label10;

        $r9 = r0.<android.support.v4.view.ViewPager: android.graphics.Rect mTempRect>;

        $r11 = specialinvoke r0.<android.support.v4.view.ViewPager: android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)>($r9, r27);

        i4 = $r11.<android.graphics.Rect: int left>;

        $r10 = r0.<android.support.v4.view.ViewPager: android.graphics.Rect mTempRect>;

        $r12 = specialinvoke r0.<android.support.v4.view.ViewPager: android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)>($r10, r1);

        i1 = $r12.<android.graphics.Rect: int left>;

        if r1 == null goto label08;

        if i4 < i1 goto label08;

        z3 = virtualinvoke r0.<android.support.v4.view.ViewPager: boolean pageLeft()>();

        goto label09;

     label08:
        z3 = virtualinvoke r27.<android.view.View: boolean requestFocus()>();

     label09:
        goto label17;

     label10:
        if i0 != 66 goto label17;

        $r5 = r0.<android.support.v4.view.ViewPager: android.graphics.Rect mTempRect>;

        $r6 = specialinvoke r0.<android.support.v4.view.ViewPager: android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)>($r5, r27);

        i5 = $r6.<android.graphics.Rect: int left>;

        $r7 = r0.<android.support.v4.view.ViewPager: android.graphics.Rect mTempRect>;

        $r8 = specialinvoke r0.<android.support.v4.view.ViewPager: android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View)>($r7, r1);

        i6 = $r8.<android.graphics.Rect: int left>;

        if r1 == null goto label11;

        if i5 > i6 goto label11;

        z3 = virtualinvoke r0.<android.support.v4.view.ViewPager: boolean pageRight()>();

        goto label12;

     label11:
        z3 = virtualinvoke r27.<android.view.View: boolean requestFocus()>();

     label12:
        goto label17;

     label13:
        if i0 == 17 goto label14;

        if i0 != 1 goto label15;

     label14:
        z3 = virtualinvoke r0.<android.support.v4.view.ViewPager: boolean pageLeft()>();

        goto label17;

     label15:
        if i0 == 66 goto label16;

        if i0 != 2 goto label17;

     label16:
        z3 = virtualinvoke r0.<android.support.v4.view.ViewPager: boolean pageRight()>();

     label17:
        if z3 == 0 goto label18;

        $i2 = staticinvoke <android.view.SoundEffectConstants: int getContantForFocusDirection(int)>(i0);

        virtualinvoke r0.<android.support.v4.view.ViewPager: void playSoundEffect(int)>($i2);

     label18:
        return z3;
    }

    private android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect, android.view.View)
    {
        android.support.v4.view.ViewPager r0;
        android.graphics.Rect r1, $r5;
        android.view.View r2;
        android.view.ViewParent r3;
        android.view.ViewGroup r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        boolean $z0;

        r0 := @this: android.support.v4.view.ViewPager;

        r1 := @parameter0: android.graphics.Rect;

        r2 := @parameter1: android.view.View;

        if r1 != null goto label1;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r1 = $r5;

     label1:
        if r2 != null goto label2;

        virtualinvoke r1.<android.graphics.Rect: void set(int,int,int,int)>(0, 0, 0, 0);

        return r1;

     label2:
        $i0 = virtualinvoke r2.<android.view.View: int getLeft()>();

        r1.<android.graphics.Rect: int left> = $i0;

        $i1 = virtualinvoke r2.<android.view.View: int getRight()>();

        r1.<android.graphics.Rect: int right> = $i1;

        $i2 = virtualinvoke r2.<android.view.View: int getTop()>();

        r1.<android.graphics.Rect: int top> = $i2;

        $i3 = virtualinvoke r2.<android.view.View: int getBottom()>();

        r1.<android.graphics.Rect: int bottom> = $i3;

        r3 = virtualinvoke r2.<android.view.View: android.view.ViewParent getParent()>();

     label3:
        $z0 = r3 instanceof android.view.ViewGroup;

        if $z0 == 0 goto label4;

        if r3 == r0 goto label4;

        r4 = (android.view.ViewGroup) r3;

        $i4 = r1.<android.graphics.Rect: int left>;

        $i5 = virtualinvoke r4.<android.view.ViewGroup: int getLeft()>();

        $i6 = $i4 + $i5;

        r1.<android.graphics.Rect: int left> = $i6;

        $i7 = r1.<android.graphics.Rect: int right>;

        $i8 = virtualinvoke r4.<android.view.ViewGroup: int getRight()>();

        $i10 = $i7 + $i8;

        r1.<android.graphics.Rect: int right> = $i10;

        $i9 = r1.<android.graphics.Rect: int top>;

        $i12 = virtualinvoke r4.<android.view.ViewGroup: int getTop()>();

        $i11 = $i9 + $i12;

        r1.<android.graphics.Rect: int top> = $i11;

        $i14 = r1.<android.graphics.Rect: int bottom>;

        $i13 = virtualinvoke r4.<android.view.ViewGroup: int getBottom()>();

        $i15 = $i14 + $i13;

        r1.<android.graphics.Rect: int bottom> = $i15;

        r3 = virtualinvoke r4.<android.view.ViewGroup: android.view.ViewParent getParent()>();

        goto label3;

     label4:
        return r1;
    }

    boolean pageLeft()
    {
        android.support.v4.view.ViewPager r0;
        int $i0, $i1, $i2;

        r0 := @this: android.support.v4.view.ViewPager;

        $i0 = r0.<android.support.v4.view.ViewPager: int mCurItem>;

        if $i0 <= 0 goto label1;

        $i1 = r0.<android.support.v4.view.ViewPager: int mCurItem>;

        $i2 = $i1 - 1;

        virtualinvoke r0.<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)>($i2, 1);

        return 1;

     label1:
        return 0;
    }

    boolean pageRight()
    {
        android.support.v4.view.ViewPager r0;
        android.support.v4.view.PagerAdapter $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: android.support.v4.view.ViewPager;

        $r1 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        if $r1 == null goto label1;

        $i0 = r0.<android.support.v4.view.ViewPager: int mCurItem>;

        $r2 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        $i1 = virtualinvoke $r2.<android.support.v4.view.PagerAdapter: int getCount()>();

        $i2 = $i1 - 1;

        if $i0 >= $i2 goto label1;

        $i3 = r0.<android.support.v4.view.ViewPager: int mCurItem>;

        $i4 = $i3 + 1;

        virtualinvoke r0.<android.support.v4.view.ViewPager: void setCurrentItem(int,boolean)>($i4, 1);

        return 1;

     label1:
        return 0;
    }

    public void addFocusables(java.util.ArrayList, int, int)
    {
        android.support.v4.view.ViewPager r0;
        java.util.ArrayList r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10;
        android.view.View r2;
        android.support.v4.view.ViewPager$ItemInfo r3;
        boolean $z0, $z2, $z3;

        r0 := @this: android.support.v4.view.ViewPager;

        r1 := @parameter0: java.util.ArrayList;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i3 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getDescendantFocusability()>();

        if i3 == 393216 goto label3;

        i4 = 0;

     label1:
        $i6 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getChildCount()>();

        if i4 >= $i6 goto label3;

        r2 = virtualinvoke r0.<android.support.v4.view.ViewPager: android.view.View getChildAt(int)>(i4);

        $i8 = virtualinvoke r2.<android.view.View: int getVisibility()>();

        if $i8 != 0 goto label2;

        r3 = virtualinvoke r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View)>(r2);

        if r3 == null goto label2;

        $i10 = r3.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $i9 = r0.<android.support.v4.view.ViewPager: int mCurItem>;

        if $i10 != $i9 goto label2;

        virtualinvoke r2.<android.view.View: void addFocusables(java.util.ArrayList,int,int)>(r1, i0, i1);

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        if i3 != 262144 goto label4;

        $i7 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i2 != $i7 goto label7;

     label4:
        $z0 = virtualinvoke r0.<android.support.v4.view.ViewPager: boolean isFocusable()>();

        if $z0 != 0 goto label5;

        return;

     label5:
        $i5 = i1 & 1;

        if $i5 != 1 goto label6;

        $z2 = virtualinvoke r0.<android.support.v4.view.ViewPager: boolean isInTouchMode()>();

        if $z2 == 0 goto label6;

        $z3 = virtualinvoke r0.<android.support.v4.view.ViewPager: boolean isFocusableInTouchMode()>();

        if $z3 != 0 goto label6;

        return;

     label6:
        if r1 == null goto label7;

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>(r0);

     label7:
        return;
    }

    public void addTouchables(java.util.ArrayList)
    {
        android.support.v4.view.ViewPager r0;
        java.util.ArrayList r1;
        int i0, $i1, $i2, $i3, $i4;
        android.view.View r2;
        android.support.v4.view.ViewPager$ItemInfo r3;

        r0 := @this: android.support.v4.view.ViewPager;

        r1 := @parameter0: java.util.ArrayList;

        i0 = 0;

     label1:
        $i1 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getChildCount()>();

        if i0 >= $i1 goto label3;

        r2 = virtualinvoke r0.<android.support.v4.view.ViewPager: android.view.View getChildAt(int)>(i0);

        $i2 = virtualinvoke r2.<android.view.View: int getVisibility()>();

        if $i2 != 0 goto label2;

        r3 = virtualinvoke r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View)>(r2);

        if r3 == null goto label2;

        $i4 = r3.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $i3 = r0.<android.support.v4.view.ViewPager: int mCurItem>;

        if $i4 != $i3 goto label2;

        virtualinvoke r2.<android.view.View: void addTouchables(java.util.ArrayList)>(r1);

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return;
    }

    protected boolean onRequestFocusInDescendants(int, android.graphics.Rect)
    {
        android.support.v4.view.ViewPager r0;
        int i0, i1, i3, i4, i5, $i6, $i7, $i8, $i9;
        android.graphics.Rect r1;
        byte b2;
        android.view.View r2;
        android.support.v4.view.ViewPager$ItemInfo r3;
        boolean $z0;

        r0 := @this: android.support.v4.view.ViewPager;

        i0 := @parameter0: int;

        r1 := @parameter1: android.graphics.Rect;

        i4 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getChildCount()>();

        $i6 = i0 & 2;

        if $i6 == 0 goto label1;

        i1 = 0;

        b2 = 1;

        i3 = i4;

        goto label2;

     label1:
        i1 = i4 - 1;

        b2 = -1;

        i3 = -1;

     label2:
        i5 = i1;

     label3:
        if i5 == i3 goto label5;

        r2 = virtualinvoke r0.<android.support.v4.view.ViewPager: android.view.View getChildAt(int)>(i5);

        $i7 = virtualinvoke r2.<android.view.View: int getVisibility()>();

        if $i7 != 0 goto label4;

        r3 = virtualinvoke r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View)>(r2);

        if r3 == null goto label4;

        $i9 = r3.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $i8 = r0.<android.support.v4.view.ViewPager: int mCurItem>;

        if $i9 != $i8 goto label4;

        $z0 = virtualinvoke r2.<android.view.View: boolean requestFocus(int,android.graphics.Rect)>(i0, r1);

        if $z0 == 0 goto label4;

        return 1;

     label4:
        i5 = i5 + b2;

        goto label3;

     label5:
        return 0;
    }

    public boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        android.support.v4.view.ViewPager r0;
        android.view.accessibility.AccessibilityEvent r1;
        int i0, i1, $i2, $i3, $i4, $i5;
        android.view.View r2;
        android.support.v4.view.ViewPager$ItemInfo r3;
        boolean $z0, $z1;

        r0 := @this: android.support.v4.view.ViewPager;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $i2 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: int getEventType()>();

        if $i2 != 4096 goto label1;

        $z1 = specialinvoke r0.<android.view.ViewGroup: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        return $z1;

     label1:
        i0 = virtualinvoke r0.<android.support.v4.view.ViewPager: int getChildCount()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        r2 = virtualinvoke r0.<android.support.v4.view.ViewPager: android.view.View getChildAt(int)>(i1);

        $i3 = virtualinvoke r2.<android.view.View: int getVisibility()>();

        if $i3 != 0 goto label3;

        r3 = virtualinvoke r0.<android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View)>(r2);

        if r3 == null goto label3;

        $i5 = r3.<android.support.v4.view.ViewPager$ItemInfo: int position>;

        $i4 = r0.<android.support.v4.view.ViewPager: int mCurItem>;

        if $i5 != $i4 goto label3;

        $z0 = virtualinvoke r2.<android.view.View: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 0;
    }

    protected android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        android.support.v4.view.ViewPager r0;
        android.support.v4.view.ViewPager$LayoutParams $r1;

        r0 := @this: android.support.v4.view.ViewPager;

        $r1 = new android.support.v4.view.ViewPager$LayoutParams;

        specialinvoke $r1.<android.support.v4.view.ViewPager$LayoutParams: void <init>()>();

        return $r1;
    }

    protected android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.support.v4.view.ViewPager r0;
        android.view.ViewGroup$LayoutParams r1, $r2;

        r0 := @this: android.support.v4.view.ViewPager;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $r2 = virtualinvoke r0.<android.support.v4.view.ViewPager: android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()>();

        return $r2;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.support.v4.view.ViewPager r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0, $z1, $z2;

        r0 := @this: android.support.v4.view.ViewPager;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof android.support.v4.view.ViewPager$LayoutParams;

        if $z0 == 0 goto label1;

        $z1 = specialinvoke r0.<android.view.ViewGroup: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>(r1);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.support.v4.view.ViewPager r0;
        android.util.AttributeSet r1;
        android.support.v4.view.ViewPager$LayoutParams $r2;
        android.content.Context $r3;

        r0 := @this: android.support.v4.view.ViewPager;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = new android.support.v4.view.ViewPager$LayoutParams;

        $r3 = virtualinvoke r0.<android.support.v4.view.ViewPager: android.content.Context getContext()>();

        specialinvoke $r2.<android.support.v4.view.ViewPager$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, r1);

        return $r2;
    }

    static void access$000(android.support.v4.view.ViewPager, int)
    {
        android.support.v4.view.ViewPager r0;
        int i0;

        r0 := @parameter0: android.support.v4.view.ViewPager;

        i0 := @parameter1: int;

        specialinvoke r0.<android.support.v4.view.ViewPager: void setScrollState(int)>(i0);

        return;
    }

    static android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager)
    {
        android.support.v4.view.ViewPager r0;
        android.support.v4.view.PagerAdapter $r1;

        r0 := @parameter0: android.support.v4.view.ViewPager;

        $r1 = r0.<android.support.v4.view.ViewPager: android.support.v4.view.PagerAdapter mAdapter>;

        return $r1;
    }

    static int access$300(android.support.v4.view.ViewPager)
    {
        android.support.v4.view.ViewPager r0;
        int $i0;

        r0 := @parameter0: android.support.v4.view.ViewPager;

        $i0 = r0.<android.support.v4.view.ViewPager: int mCurItem>;

        return $i0;
    }

    static int[] access$400()
    {
        int[] $r0;

        $r0 = <android.support.v4.view.ViewPager: int[] LAYOUT_ATTRS>;

        return $r0;
    }

    static void <clinit>()
    {
        int[] $r0;
        android.support.v4.view.ViewPager$1 $r1;
        android.support.v4.view.ViewPager$2 $r2;
        android.support.v4.view.ViewPager$ViewPositionComparator $r3;

        <android.support.v4.view.ViewPager: int SCROLL_STATE_SETTLING> = 2;

        <android.support.v4.view.ViewPager: int SCROLL_STATE_DRAGGING> = 1;

        <android.support.v4.view.ViewPager: int SCROLL_STATE_IDLE> = 0;

        <android.support.v4.view.ViewPager: int DRAW_ORDER_REVERSE> = 2;

        <android.support.v4.view.ViewPager: int DRAW_ORDER_FORWARD> = 1;

        <android.support.v4.view.ViewPager: int DRAW_ORDER_DEFAULT> = 0;

        <android.support.v4.view.ViewPager: int CLOSE_ENOUGH> = 2;

        <android.support.v4.view.ViewPager: int INVALID_POINTER> = -1;

        <android.support.v4.view.ViewPager: int MIN_FLING_VELOCITY> = 400;

        <android.support.v4.view.ViewPager: int DEFAULT_GUTTER_SIZE> = 16;

        <android.support.v4.view.ViewPager: int MIN_DISTANCE_FOR_FLING> = 25;

        <android.support.v4.view.ViewPager: int MAX_SETTLE_DURATION> = 600;

        <android.support.v4.view.ViewPager: int DEFAULT_OFFSCREEN_PAGES> = 1;

        <android.support.v4.view.ViewPager: boolean USE_CACHE> = 0;

        <android.support.v4.view.ViewPager: boolean DEBUG> = 0;

        <android.support.v4.view.ViewPager: java.lang.String TAG> = "ViewPager";

        $r0 = newarray (int)[1];

        $r0[0] = 16842931;

        <android.support.v4.view.ViewPager: int[] LAYOUT_ATTRS> = $r0;

        $r1 = new android.support.v4.view.ViewPager$1;

        specialinvoke $r1.<android.support.v4.view.ViewPager$1: void <init>()>();

        <android.support.v4.view.ViewPager: java.util.Comparator COMPARATOR> = $r1;

        $r2 = new android.support.v4.view.ViewPager$2;

        specialinvoke $r2.<android.support.v4.view.ViewPager$2: void <init>()>();

        <android.support.v4.view.ViewPager: android.view.animation.Interpolator sInterpolator> = $r2;

        $r3 = new android.support.v4.view.ViewPager$ViewPositionComparator;

        specialinvoke $r3.<android.support.v4.view.ViewPager$ViewPositionComparator: void <init>()>();

        <android.support.v4.view.ViewPager: android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator> = $r3;

        return;
    }
}
