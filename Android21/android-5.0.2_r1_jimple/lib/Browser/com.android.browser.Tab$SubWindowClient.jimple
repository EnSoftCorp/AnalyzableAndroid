class com.android.browser.Tab$SubWindowClient extends android.webkit.WebViewClient
{
    private final android.webkit.WebViewClient mClient;
    private final com.android.browser.WebViewController mController;

    void <init>(android.webkit.WebViewClient, com.android.browser.WebViewController)
    {
        com.android.browser.Tab$SubWindowClient r0;
        android.webkit.WebViewClient r1;
        com.android.browser.WebViewController r2;

        r0 := @this: com.android.browser.Tab$SubWindowClient;

        r1 := @parameter0: android.webkit.WebViewClient;

        r2 := @parameter1: com.android.browser.WebViewController;

        specialinvoke r0.<android.webkit.WebViewClient: void <init>()>();

        r0.<com.android.browser.Tab$SubWindowClient: android.webkit.WebViewClient mClient> = r1;

        r0.<com.android.browser.Tab$SubWindowClient: com.android.browser.WebViewController mController> = r2;

        return;
    }

    public void onPageStarted(android.webkit.WebView, java.lang.String, android.graphics.Bitmap)
    {
        com.android.browser.Tab$SubWindowClient r0;
        android.webkit.WebView r1;
        java.lang.String r2;
        android.graphics.Bitmap r3;
        com.android.browser.WebViewController $r4;

        r0 := @this: com.android.browser.Tab$SubWindowClient;

        r1 := @parameter0: android.webkit.WebView;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: android.graphics.Bitmap;

        $r4 = r0.<com.android.browser.Tab$SubWindowClient: com.android.browser.WebViewController mController>;

        interfaceinvoke $r4.<com.android.browser.WebViewController: void endActionMode()>();

        return;
    }

    public void doUpdateVisitedHistory(android.webkit.WebView, java.lang.String, boolean)
    {
        com.android.browser.Tab$SubWindowClient r0;
        android.webkit.WebView r1;
        java.lang.String r2;
        boolean z0;
        android.webkit.WebViewClient $r3;

        r0 := @this: com.android.browser.Tab$SubWindowClient;

        r1 := @parameter0: android.webkit.WebView;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r3 = r0.<com.android.browser.Tab$SubWindowClient: android.webkit.WebViewClient mClient>;

        virtualinvoke $r3.<android.webkit.WebViewClient: void doUpdateVisitedHistory(android.webkit.WebView,java.lang.String,boolean)>(r1, r2, z0);

        return;
    }

    public boolean shouldOverrideUrlLoading(android.webkit.WebView, java.lang.String)
    {
        com.android.browser.Tab$SubWindowClient r0;
        android.webkit.WebView r1;
        java.lang.String r2;
        android.webkit.WebViewClient $r3;
        boolean $z0;

        r0 := @this: com.android.browser.Tab$SubWindowClient;

        r1 := @parameter0: android.webkit.WebView;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.android.browser.Tab$SubWindowClient: android.webkit.WebViewClient mClient>;

        $z0 = virtualinvoke $r3.<android.webkit.WebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)>(r1, r2);

        return $z0;
    }

    public void onReceivedSslError(android.webkit.WebView, android.webkit.SslErrorHandler, android.net.http.SslError)
    {
        com.android.browser.Tab$SubWindowClient r0;
        android.webkit.WebView r1;
        android.webkit.SslErrorHandler r2;
        android.net.http.SslError r3;
        android.webkit.WebViewClient $r4;

        r0 := @this: com.android.browser.Tab$SubWindowClient;

        r1 := @parameter0: android.webkit.WebView;

        r2 := @parameter1: android.webkit.SslErrorHandler;

        r3 := @parameter2: android.net.http.SslError;

        $r4 = r0.<com.android.browser.Tab$SubWindowClient: android.webkit.WebViewClient mClient>;

        virtualinvoke $r4.<android.webkit.WebViewClient: void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError)>(r1, r2, r3);

        return;
    }

    public void onReceivedClientCertRequest(android.webkit.WebView, android.webkit.ClientCertRequest)
    {
        com.android.browser.Tab$SubWindowClient r0;
        android.webkit.WebView r1;
        android.webkit.ClientCertRequest r2;
        android.webkit.WebViewClient $r3;

        r0 := @this: com.android.browser.Tab$SubWindowClient;

        r1 := @parameter0: android.webkit.WebView;

        r2 := @parameter1: android.webkit.ClientCertRequest;

        $r3 = r0.<com.android.browser.Tab$SubWindowClient: android.webkit.WebViewClient mClient>;

        virtualinvoke $r3.<android.webkit.WebViewClient: void onReceivedClientCertRequest(android.webkit.WebView,android.webkit.ClientCertRequest)>(r1, r2);

        return;
    }

    public void onReceivedHttpAuthRequest(android.webkit.WebView, android.webkit.HttpAuthHandler, java.lang.String, java.lang.String)
    {
        com.android.browser.Tab$SubWindowClient r0;
        android.webkit.WebView r1;
        android.webkit.HttpAuthHandler r2;
        java.lang.String r3, r4;
        android.webkit.WebViewClient $r5;

        r0 := @this: com.android.browser.Tab$SubWindowClient;

        r1 := @parameter0: android.webkit.WebView;

        r2 := @parameter1: android.webkit.HttpAuthHandler;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        $r5 = r0.<com.android.browser.Tab$SubWindowClient: android.webkit.WebViewClient mClient>;

        virtualinvoke $r5.<android.webkit.WebViewClient: void onReceivedHttpAuthRequest(android.webkit.WebView,android.webkit.HttpAuthHandler,java.lang.String,java.lang.String)>(r1, r2, r3, r4);

        return;
    }

    public void onFormResubmission(android.webkit.WebView, android.os.Message, android.os.Message)
    {
        com.android.browser.Tab$SubWindowClient r0;
        android.webkit.WebView r1;
        android.os.Message r2, r3;
        android.webkit.WebViewClient $r4;

        r0 := @this: com.android.browser.Tab$SubWindowClient;

        r1 := @parameter0: android.webkit.WebView;

        r2 := @parameter1: android.os.Message;

        r3 := @parameter2: android.os.Message;

        $r4 = r0.<com.android.browser.Tab$SubWindowClient: android.webkit.WebViewClient mClient>;

        virtualinvoke $r4.<android.webkit.WebViewClient: void onFormResubmission(android.webkit.WebView,android.os.Message,android.os.Message)>(r1, r2, r3);

        return;
    }

    public void onReceivedError(android.webkit.WebView, int, java.lang.String, java.lang.String)
    {
        com.android.browser.Tab$SubWindowClient r0;
        android.webkit.WebView r1;
        int i0;
        java.lang.String r2, r3;
        android.webkit.WebViewClient $r4;

        r0 := @this: com.android.browser.Tab$SubWindowClient;

        r1 := @parameter0: android.webkit.WebView;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $r4 = r0.<com.android.browser.Tab$SubWindowClient: android.webkit.WebViewClient mClient>;

        virtualinvoke $r4.<android.webkit.WebViewClient: void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String)>(r1, i0, r2, r3);

        return;
    }

    public boolean shouldOverrideKeyEvent(android.webkit.WebView, android.view.KeyEvent)
    {
        com.android.browser.Tab$SubWindowClient r0;
        android.webkit.WebView r1;
        android.view.KeyEvent r2;
        android.webkit.WebViewClient $r3;
        boolean $z0;

        r0 := @this: com.android.browser.Tab$SubWindowClient;

        r1 := @parameter0: android.webkit.WebView;

        r2 := @parameter1: android.view.KeyEvent;

        $r3 = r0.<com.android.browser.Tab$SubWindowClient: android.webkit.WebViewClient mClient>;

        $z0 = virtualinvoke $r3.<android.webkit.WebViewClient: boolean shouldOverrideKeyEvent(android.webkit.WebView,android.view.KeyEvent)>(r1, r2);

        return $z0;
    }

    public void onUnhandledKeyEvent(android.webkit.WebView, android.view.KeyEvent)
    {
        com.android.browser.Tab$SubWindowClient r0;
        android.webkit.WebView r1;
        android.view.KeyEvent r2;
        android.webkit.WebViewClient $r3;

        r0 := @this: com.android.browser.Tab$SubWindowClient;

        r1 := @parameter0: android.webkit.WebView;

        r2 := @parameter1: android.view.KeyEvent;

        $r3 = r0.<com.android.browser.Tab$SubWindowClient: android.webkit.WebViewClient mClient>;

        virtualinvoke $r3.<android.webkit.WebViewClient: void onUnhandledKeyEvent(android.webkit.WebView,android.view.KeyEvent)>(r1, r2);

        return;
    }
}
