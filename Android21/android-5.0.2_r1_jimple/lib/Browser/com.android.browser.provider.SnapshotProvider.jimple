public class com.android.browser.provider.SnapshotProvider extends android.content.ContentProvider
{
    public static final java.lang.String AUTHORITY;
    public static final android.net.Uri AUTHORITY_URI;
    static final java.lang.String TABLE_SNAPSHOTS;
    static final int SNAPSHOTS;
    static final int SNAPSHOTS_ID;
    static final android.content.UriMatcher URI_MATCHER;
    static final byte[] NULL_BLOB_HACK;
    com.android.browser.provider.SnapshotProvider$SnapshotDatabaseHelper mOpenHelper;
    static final java.lang.String[] DELETE_PROJECTION;

    public void <init>()
    {
        com.android.browser.provider.SnapshotProvider r0;

        r0 := @this: com.android.browser.provider.SnapshotProvider;

        specialinvoke r0.<android.content.ContentProvider: void <init>()>();

        return;
    }

    static java.io.File getOldDatabasePath(android.content.Context)
    {
        android.content.Context r0;
        java.io.File r1, $r2;

        r0 := @parameter0: android.content.Context;

        r1 = virtualinvoke r0.<android.content.Context: java.io.File getExternalFilesDir(java.lang.String)>(null);

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "snapshots.db");

        return $r2;
    }

    private void migrateToDataFolder()
    {
        com.android.browser.provider.SnapshotProvider r0;
        java.io.File r1, r2;
        android.content.Context $r3, $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.browser.provider.SnapshotProvider;

        $r3 = virtualinvoke r0.<com.android.browser.provider.SnapshotProvider: android.content.Context getContext()>();

        r1 = virtualinvoke $r3.<android.content.Context: java.io.File getDatabasePath(java.lang.String)>("snapshots.db");

        $z0 = virtualinvoke r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $r4 = virtualinvoke r0.<com.android.browser.provider.SnapshotProvider: android.content.Context getContext()>();

        r2 = staticinvoke <com.android.browser.provider.SnapshotProvider: java.io.File getOldDatabasePath(android.content.Context)>($r4);

        $z1 = virtualinvoke r2.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label3;

        $z2 = virtualinvoke r2.<java.io.File: boolean renameTo(java.io.File)>(r1);

        if $z2 != 0 goto label2;

        staticinvoke <android.os.FileUtils: boolean copyFile(java.io.File,java.io.File)>(r2, r1);

     label2:
        virtualinvoke r2.<java.io.File: boolean delete()>();

     label3:
        return;
    }

    public boolean onCreate()
    {
        com.android.browser.provider.SnapshotProvider r0;
        com.android.browser.provider.SnapshotProvider$SnapshotDatabaseHelper $r1;
        android.content.Context $r2;

        r0 := @this: com.android.browser.provider.SnapshotProvider;

        specialinvoke r0.<com.android.browser.provider.SnapshotProvider: void migrateToDataFolder()>();

        $r1 = new com.android.browser.provider.SnapshotProvider$SnapshotDatabaseHelper;

        $r2 = virtualinvoke r0.<com.android.browser.provider.SnapshotProvider: android.content.Context getContext()>();

        specialinvoke $r1.<com.android.browser.provider.SnapshotProvider$SnapshotDatabaseHelper: void <init>(android.content.Context)>($r2);

        r0.<com.android.browser.provider.SnapshotProvider: com.android.browser.provider.SnapshotProvider$SnapshotDatabaseHelper mOpenHelper> = $r1;

        return 1;
    }

    android.database.sqlite.SQLiteDatabase getWritableDatabase()
    {
        com.android.browser.provider.SnapshotProvider r0;
        com.android.browser.provider.SnapshotProvider$SnapshotDatabaseHelper $r1;
        android.database.sqlite.SQLiteDatabase $r2;

        r0 := @this: com.android.browser.provider.SnapshotProvider;

        $r1 = r0.<com.android.browser.provider.SnapshotProvider: com.android.browser.provider.SnapshotProvider$SnapshotDatabaseHelper mOpenHelper>;

        $r2 = virtualinvoke $r1.<com.android.browser.provider.SnapshotProvider$SnapshotDatabaseHelper: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        return $r2;
    }

    android.database.sqlite.SQLiteDatabase getReadableDatabase()
    {
        com.android.browser.provider.SnapshotProvider r0;
        com.android.browser.provider.SnapshotProvider$SnapshotDatabaseHelper $r1;
        android.database.sqlite.SQLiteDatabase $r2;

        r0 := @this: com.android.browser.provider.SnapshotProvider;

        $r1 = r0.<com.android.browser.provider.SnapshotProvider: com.android.browser.provider.SnapshotProvider$SnapshotDatabaseHelper mOpenHelper>;

        $r2 = virtualinvoke $r1.<com.android.browser.provider.SnapshotProvider$SnapshotDatabaseHelper: android.database.sqlite.SQLiteDatabase getReadableDatabase()>();

        return $r2;
    }

    public android.database.Cursor query(android.net.Uri, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String)
    {
        com.android.browser.provider.SnapshotProvider r0;
        android.net.Uri r1, $r15;
        java.lang.String[] r2, r4, $r12;
        java.lang.String r3, r5, r8, $r13, $r19, $r21;
        android.database.sqlite.SQLiteDatabase r6;
        int i0;
        android.database.sqlite.SQLiteQueryBuilder r7, $r11;
        android.database.Cursor r9;
        android.content.UriMatcher $r10;
        long $l1;
        android.content.Context $r14;
        android.content.ContentResolver $r16;
        java.lang.StringBuilder $r17, $r20, $r22;
        java.lang.UnsupportedOperationException $r18;

        r0 := @this: com.android.browser.provider.SnapshotProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        r5 := @parameter4: java.lang.String;

        r6 = virtualinvoke r0.<com.android.browser.provider.SnapshotProvider: android.database.sqlite.SQLiteDatabase getReadableDatabase()>();

        if r6 != null goto label1;

        return null;

     label1:
        $r10 = <com.android.browser.provider.SnapshotProvider: android.content.UriMatcher URI_MATCHER>;

        i0 = virtualinvoke $r10.<android.content.UriMatcher: int match(android.net.Uri)>(r1);

        $r11 = new android.database.sqlite.SQLiteQueryBuilder;

        specialinvoke $r11.<android.database.sqlite.SQLiteQueryBuilder: void <init>()>();

        r7 = $r11;

        r8 = virtualinvoke r1.<android.net.Uri: java.lang.String getQueryParameter(java.lang.String)>("limit");

        lookupswitch(i0)
        {
            case 10: goto label3;
            case 11: goto label2;
            default: goto label4;
        };

     label2:
        r3 = staticinvoke <android.database.DatabaseUtils: java.lang.String concatenateWhere(java.lang.String,java.lang.String)>(r3, "_id=?");

        $r12 = newarray (java.lang.String)[1];

        $l1 = staticinvoke <android.content.ContentUris: long parseId(android.net.Uri)>(r1);

        $r13 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l1);

        $r12[0] = $r13;

        r4 = staticinvoke <android.database.DatabaseUtils: java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[])>(r4, $r12);

     label3:
        virtualinvoke r7.<android.database.sqlite.SQLiteQueryBuilder: void setTables(java.lang.String)>("snapshots");

        goto label5;

     label4:
        $r18 = new java.lang.UnsupportedOperationException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown URL ");

        $r19 = virtualinvoke r1.<android.net.Uri: java.lang.String toString()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r21);

        throw $r18;

     label5:
        r9 = virtualinvoke r7.<android.database.sqlite.SQLiteQueryBuilder: android.database.Cursor query(android.database.sqlite.SQLiteDatabase,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r6, r2, r3, r4, null, null, r5, r8);

        $r14 = virtualinvoke r0.<com.android.browser.provider.SnapshotProvider: android.content.Context getContext()>();

        $r16 = virtualinvoke $r14.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        $r15 = <com.android.browser.provider.SnapshotProvider: android.net.Uri AUTHORITY_URI>;

        interfaceinvoke r9.<android.database.Cursor: void setNotificationUri(android.content.ContentResolver,android.net.Uri)>($r16, $r15);

        return r9;
    }

    public java.lang.String getType(android.net.Uri)
    {
        com.android.browser.provider.SnapshotProvider r0;
        android.net.Uri r1;

        r0 := @this: com.android.browser.provider.SnapshotProvider;

        r1 := @parameter0: android.net.Uri;

        return null;
    }

    public android.net.Uri insert(android.net.Uri, android.content.ContentValues)
    {
        com.android.browser.provider.SnapshotProvider r0;
        android.net.Uri r1, r4;
        android.content.ContentValues r2;
        android.database.sqlite.SQLiteDatabase r3;
        int i0;
        android.content.UriMatcher $r5;
        boolean $z0;
        byte $b2;
        android.content.Context $r6;
        byte[] $r7;
        android.content.ContentResolver $r8;
        java.lang.StringBuilder $r9, $r11, $r12;
        java.lang.UnsupportedOperationException $r10;
        java.lang.String $r13;
        long l3;

        r0 := @this: com.android.browser.provider.SnapshotProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.ContentValues;

        r3 = virtualinvoke r0.<com.android.browser.provider.SnapshotProvider: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        if r3 != null goto label1;

        return null;

     label1:
        $r5 = <com.android.browser.provider.SnapshotProvider: android.content.UriMatcher URI_MATCHER>;

        i0 = virtualinvoke $r5.<android.content.UriMatcher: int match(android.net.Uri)>(r1);

        lookupswitch(i0)
        {
            case 10: goto label2;
            default: goto label4;
        };

     label2:
        $z0 = virtualinvoke r2.<android.content.ContentValues: boolean containsKey(java.lang.String)>("view_state");

        if $z0 != 0 goto label3;

        $r7 = <com.android.browser.provider.SnapshotProvider: byte[] NULL_BLOB_HACK>;

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,byte[])>("view_state", $r7);

     label3:
        l3 = virtualinvoke r3.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("snapshots", "title", r2);

        goto label5;

     label4:
        $r10 = new java.lang.UnsupportedOperationException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown insert URI ");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r13);

        throw $r10;

     label5:
        $b2 = l3 cmp 0L;

        if $b2 >= 0 goto label6;

        return null;

     label6:
        r4 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>(r1, l3);

        $r6 = virtualinvoke r0.<com.android.browser.provider.SnapshotProvider: android.content.Context getContext()>();

        $r8 = virtualinvoke $r6.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r8.<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver,boolean)>(r4, null, 0);

        return r4;
    }

    private void deleteDataFiles(android.database.sqlite.SQLiteDatabase, java.lang.String, java.lang.String[])
    {
        com.android.browser.provider.SnapshotProvider r0;
        android.database.sqlite.SQLiteDatabase r1;
        java.lang.String r2, r6;
        java.lang.String[] r3, $r8;
        android.database.Cursor r4;
        android.content.Context r5;
        java.io.File r7;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.android.browser.provider.SnapshotProvider;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String[];

        $r8 = <com.android.browser.provider.SnapshotProvider: java.lang.String[] DELETE_PROJECTION>;

        r4 = virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("snapshots", $r8, r2, r3, null, null, null);

        r5 = virtualinvoke r0.<com.android.browser.provider.SnapshotProvider: android.content.Context getContext()>();

     label1:
        $z0 = interfaceinvoke r4.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label4;

        r6 = interfaceinvoke r4.<android.database.Cursor: java.lang.String getString(int)>(0);

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r6);

        if $z1 == 0 goto label2;

        goto label1;

     label2:
        r7 = virtualinvoke r5.<android.content.Context: java.io.File getFileStreamPath(java.lang.String)>(r6);

        $z2 = virtualinvoke r7.<java.io.File: boolean exists()>();

        if $z2 == 0 goto label3;

        $z3 = virtualinvoke r7.<java.io.File: boolean delete()>();

        if $z3 != 0 goto label3;

        virtualinvoke r7.<java.io.File: void deleteOnExit()>();

     label3:
        goto label1;

     label4:
        interfaceinvoke r4.<android.database.Cursor: void close()>();

        return;
    }

    public int delete(android.net.Uri, java.lang.String, java.lang.String[])
    {
        com.android.browser.provider.SnapshotProvider r0;
        android.net.Uri r1;
        java.lang.String r2, $r7, $r13;
        java.lang.String[] r3, $r6;
        android.database.sqlite.SQLiteDatabase r4;
        int i0, i2;
        android.content.UriMatcher $r5;
        long $l1;
        android.content.Context $r8;
        java.lang.UnsupportedOperationException $r9;
        android.content.ContentResolver $r10;
        java.lang.StringBuilder $r11, $r12, $r14;

        r0 := @this: com.android.browser.provider.SnapshotProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String[];

        r4 = virtualinvoke r0.<com.android.browser.provider.SnapshotProvider: android.database.sqlite.SQLiteDatabase getWritableDatabase()>();

        if r4 != null goto label1;

        return 0;

     label1:
        $r5 = <com.android.browser.provider.SnapshotProvider: android.content.UriMatcher URI_MATCHER>;

        i0 = virtualinvoke $r5.<android.content.UriMatcher: int match(android.net.Uri)>(r1);

        lookupswitch(i0)
        {
            case 10: goto label3;
            case 11: goto label2;
            default: goto label4;
        };

     label2:
        r2 = staticinvoke <android.database.DatabaseUtils: java.lang.String concatenateWhere(java.lang.String,java.lang.String)>(r2, "snapshots._id=?");

        $r6 = newarray (java.lang.String)[1];

        $l1 = staticinvoke <android.content.ContentUris: long parseId(android.net.Uri)>(r1);

        $r7 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l1);

        $r6[0] = $r7;

        r3 = staticinvoke <android.database.DatabaseUtils: java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[])>(r3, $r6);

     label3:
        specialinvoke r0.<com.android.browser.provider.SnapshotProvider: void deleteDataFiles(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>(r4, r2, r3);

        i2 = virtualinvoke r4.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("snapshots", r2, r3);

        goto label5;

     label4:
        $r9 = new java.lang.UnsupportedOperationException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown delete URI ");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r13);

        throw $r9;

     label5:
        if i2 <= 0 goto label6;

        $r8 = virtualinvoke r0.<com.android.browser.provider.SnapshotProvider: android.content.Context getContext()>();

        $r10 = virtualinvoke $r8.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r10.<android.content.ContentResolver: void notifyChange(android.net.Uri,android.database.ContentObserver,boolean)>(r1, null, 0);

     label6:
        return i2;
    }

    public int update(android.net.Uri, android.content.ContentValues, java.lang.String, java.lang.String[])
    {
        com.android.browser.provider.SnapshotProvider r0;
        android.net.Uri r1;
        android.content.ContentValues r2;
        java.lang.String r3;
        java.lang.String[] r4;
        java.lang.UnsupportedOperationException $r5;

        r0 := @this: com.android.browser.provider.SnapshotProvider;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.content.ContentValues;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        $r5 = new java.lang.UnsupportedOperationException;

        specialinvoke $r5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("not implemented");

        throw $r5;
    }

    static void <clinit>()
    {
        android.net.Uri $r0;
        android.content.UriMatcher $r1, $r3, $r4;
        byte[] $r2;
        java.lang.String[] $r5;

        <com.android.browser.provider.SnapshotProvider: int SNAPSHOTS_ID> = 11;

        <com.android.browser.provider.SnapshotProvider: int SNAPSHOTS> = 10;

        <com.android.browser.provider.SnapshotProvider: java.lang.String TABLE_SNAPSHOTS> = "snapshots";

        <com.android.browser.provider.SnapshotProvider: java.lang.String AUTHORITY> = "com.android.browser.snapshots";

        $r0 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>("content://com.android.browser.snapshots");

        <com.android.browser.provider.SnapshotProvider: android.net.Uri AUTHORITY_URI> = $r0;

        $r1 = new android.content.UriMatcher;

        specialinvoke $r1.<android.content.UriMatcher: void <init>(int)>(-1);

        <com.android.browser.provider.SnapshotProvider: android.content.UriMatcher URI_MATCHER> = $r1;

        $r2 = newarray (byte)[0];

        <com.android.browser.provider.SnapshotProvider: byte[] NULL_BLOB_HACK> = $r2;

        $r3 = <com.android.browser.provider.SnapshotProvider: android.content.UriMatcher URI_MATCHER>;

        virtualinvoke $r3.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>("com.android.browser.snapshots", "snapshots", 10);

        $r4 = <com.android.browser.provider.SnapshotProvider: android.content.UriMatcher URI_MATCHER>;

        virtualinvoke $r4.<android.content.UriMatcher: void addURI(java.lang.String,java.lang.String,int)>("com.android.browser.snapshots", "snapshots/#", 11);

        $r5 = newarray (java.lang.String)[1];

        $r5[0] = "viewstate_path";

        <com.android.browser.provider.SnapshotProvider: java.lang.String[] DELETE_PROJECTION> = $r5;

        return;
    }
}
