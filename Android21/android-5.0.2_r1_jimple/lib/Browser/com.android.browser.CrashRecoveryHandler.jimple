public class com.android.browser.CrashRecoveryHandler extends java.lang.Object
{
    private static final boolean LOGV_ENABLED;
    private static final java.lang.String LOGTAG;
    private static final java.lang.String STATE_FILE;
    private static final int BUFFER_SIZE;
    private static final long BACKUP_DELAY;
    private static final long PROMPT_INTERVAL;
    private static final int MSG_WRITE_STATE;
    private static final int MSG_CLEAR_STATE;
    private static final int MSG_PRELOAD_STATE;
    private static com.android.browser.CrashRecoveryHandler sInstance;
    private com.android.browser.Controller mController;
    private android.content.Context mContext;
    private android.os.Handler mForegroundHandler;
    private android.os.Handler mBackgroundHandler;
    private boolean mIsPreloading;
    private boolean mDidPreload;
    private android.os.Bundle mRecoveryState;
    private java.lang.Runnable mCreateState;

    public static com.android.browser.CrashRecoveryHandler initialize(com.android.browser.Controller)
    {
        com.android.browser.Controller r0;
        com.android.browser.CrashRecoveryHandler $r1, $r2, $r3, $r4;

        r0 := @parameter0: com.android.browser.Controller;

        $r1 = <com.android.browser.CrashRecoveryHandler: com.android.browser.CrashRecoveryHandler sInstance>;

        if $r1 != null goto label1;

        $r4 = new com.android.browser.CrashRecoveryHandler;

        specialinvoke $r4.<com.android.browser.CrashRecoveryHandler: void <init>(com.android.browser.Controller)>(r0);

        <com.android.browser.CrashRecoveryHandler: com.android.browser.CrashRecoveryHandler sInstance> = $r4;

        goto label2;

     label1:
        $r2 = <com.android.browser.CrashRecoveryHandler: com.android.browser.CrashRecoveryHandler sInstance>;

        $r2.<com.android.browser.CrashRecoveryHandler: com.android.browser.Controller mController> = r0;

     label2:
        $r3 = <com.android.browser.CrashRecoveryHandler: com.android.browser.CrashRecoveryHandler sInstance>;

        return $r3;
    }

    public static com.android.browser.CrashRecoveryHandler getInstance()
    {
        com.android.browser.CrashRecoveryHandler $r0;

        $r0 = <com.android.browser.CrashRecoveryHandler: com.android.browser.CrashRecoveryHandler sInstance>;

        return $r0;
    }

    private void <init>(com.android.browser.Controller)
    {
        com.android.browser.CrashRecoveryHandler r0;
        com.android.browser.Controller r1, $r3;
        com.android.browser.CrashRecoveryHandler$2 $r2;
        android.app.Activity $r4;
        android.content.Context $r5;
        android.os.Handler $r6;
        com.android.browser.CrashRecoveryHandler$1 $r7;
        android.os.Looper $r8;

        r0 := @this: com.android.browser.CrashRecoveryHandler;

        r1 := @parameter0: com.android.browser.Controller;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.browser.CrashRecoveryHandler: boolean mIsPreloading> = 0;

        r0.<com.android.browser.CrashRecoveryHandler: boolean mDidPreload> = 0;

        r0.<com.android.browser.CrashRecoveryHandler: android.os.Bundle mRecoveryState> = null;

        $r2 = new com.android.browser.CrashRecoveryHandler$2;

        specialinvoke $r2.<com.android.browser.CrashRecoveryHandler$2: void <init>(com.android.browser.CrashRecoveryHandler)>(r0);

        r0.<com.android.browser.CrashRecoveryHandler: java.lang.Runnable mCreateState> = $r2;

        r0.<com.android.browser.CrashRecoveryHandler: com.android.browser.Controller mController> = r1;

        $r3 = r0.<com.android.browser.CrashRecoveryHandler: com.android.browser.Controller mController>;

        $r4 = virtualinvoke $r3.<com.android.browser.Controller: android.app.Activity getActivity()>();

        $r5 = virtualinvoke $r4.<android.app.Activity: android.content.Context getApplicationContext()>();

        r0.<com.android.browser.CrashRecoveryHandler: android.content.Context mContext> = $r5;

        $r6 = new android.os.Handler;

        specialinvoke $r6.<android.os.Handler: void <init>()>();

        r0.<com.android.browser.CrashRecoveryHandler: android.os.Handler mForegroundHandler> = $r6;

        $r7 = new com.android.browser.CrashRecoveryHandler$1;

        $r8 = staticinvoke <com.android.browser.BackgroundHandler: android.os.Looper getLooper()>();

        specialinvoke $r7.<com.android.browser.CrashRecoveryHandler$1: void <init>(com.android.browser.CrashRecoveryHandler,android.os.Looper)>(r0, $r8);

        r0.<com.android.browser.CrashRecoveryHandler: android.os.Handler mBackgroundHandler> = $r7;

        return;
    }

    public void backupState()
    {
        com.android.browser.CrashRecoveryHandler r0;
        java.lang.Runnable $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.browser.CrashRecoveryHandler;

        $r2 = r0.<com.android.browser.CrashRecoveryHandler: android.os.Handler mForegroundHandler>;

        $r1 = r0.<com.android.browser.CrashRecoveryHandler: java.lang.Runnable mCreateState>;

        virtualinvoke $r2.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r1, 500L);

        return;
    }

    public void clearState()
    {
        com.android.browser.CrashRecoveryHandler r0;
        android.os.Handler $r1;

        r0 := @this: com.android.browser.CrashRecoveryHandler;

        $r1 = r0.<com.android.browser.CrashRecoveryHandler: android.os.Handler mBackgroundHandler>;

        virtualinvoke $r1.<android.os.Handler: boolean sendEmptyMessage(int)>(2);

        specialinvoke r0.<com.android.browser.CrashRecoveryHandler: void updateLastRecovered(long)>(0L);

        return;
    }

    private boolean shouldRestore()
    {
        com.android.browser.CrashRecoveryHandler r0;
        com.android.browser.BrowserSettings r1;
        long l0, l1, $l2;
        byte $b3;
        boolean $z0, $z1;

        r0 := @this: com.android.browser.CrashRecoveryHandler;

        r1 = staticinvoke <com.android.browser.BrowserSettings: com.android.browser.BrowserSettings getInstance()>();

        l0 = virtualinvoke r1.<com.android.browser.BrowserSettings: long getLastRecovered()>();

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l1 = $l2 - l0;

        $b3 = l1 cmp 300000L;

        if $b3 > 0 goto label1;

        $z0 = virtualinvoke r1.<com.android.browser.BrowserSettings: boolean wasLastRunPaused()>();

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    private void updateLastRecovered(long)
    {
        com.android.browser.CrashRecoveryHandler r0;
        long l0;
        com.android.browser.BrowserSettings r1;

        r0 := @this: com.android.browser.CrashRecoveryHandler;

        l0 := @parameter0: long;

        r1 = staticinvoke <com.android.browser.BrowserSettings: com.android.browser.BrowserSettings getInstance()>();

        virtualinvoke r1.<com.android.browser.BrowserSettings: void setLastRecovered(long)>(l0);

        return;
    }

    private synchronized android.os.Bundle loadCrashState()
    {
        com.android.browser.CrashRecoveryHandler r0;
        com.android.browser.BrowserSettings r1;
        android.os.Parcel r2;
        java.io.FileInputStream r3, $r14;
        java.io.File r4, $r10, $r11;
        java.io.ByteArrayOutputStream r5, $r13;
        byte[] r6, r7;
        int i0, $i1, $i2;
        android.os.Bundle r8, r23;
        java.lang.Throwable r9, $r16, $r22, r24;
        boolean $z0, $z1;
        android.content.Context $r12;
        java.io.IOException $r15, $r18, $r19, $r20, $r21;
        java.io.FileNotFoundException $r17;

        r0 := @this: com.android.browser.CrashRecoveryHandler;

        $z0 = specialinvoke r0.<com.android.browser.CrashRecoveryHandler: boolean shouldRestore()>();

        if $z0 != 0 goto label01;

        return null;

     label01:
        r1 = staticinvoke <com.android.browser.BrowserSettings: com.android.browser.BrowserSettings getInstance()>();

        virtualinvoke r1.<com.android.browser.BrowserSettings: void setLastRunPaused(boolean)>(0);

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

        r3 = null;

     label02:
        $r10 = new java.io.File;

        $r12 = r0.<com.android.browser.CrashRecoveryHandler: android.content.Context mContext>;

        $r11 = virtualinvoke $r12.<android.content.Context: java.io.File getCacheDir()>();

        specialinvoke $r10.<java.io.File: void <init>(java.io.File,java.lang.String)>($r11, "browser_state.parcel");

        r4 = $r10;

        $r14 = new java.io.FileInputStream;

        specialinvoke $r14.<java.io.FileInputStream: void <init>(java.io.File)>(r4);

        r3 = $r14;

        $r13 = new java.io.ByteArrayOutputStream;

        specialinvoke $r13.<java.io.ByteArrayOutputStream: void <init>()>();

        r5 = $r13;

        r6 = newarray (byte)[4096];

     label03:
        $i1 = virtualinvoke r3.<java.io.FileInputStream: int read(byte[])>(r6);

        i0 = $i1;

        if $i1 <= 0 goto label04;

        virtualinvoke r5.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r6, 0, i0);

        goto label03;

     label04:
        r7 = virtualinvoke r5.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $i2 = lengthof r7;

        virtualinvoke r2.<android.os.Parcel: void unmarshall(byte[],int,int)>(r7, 0, $i2);

        virtualinvoke r2.<android.os.Parcel: void setDataPosition(int)>(0);

        r23 = virtualinvoke r2.<android.os.Parcel: android.os.Bundle readBundle()>();

        if r23 == null goto label10;

        $z1 = virtualinvoke r23.<android.os.Bundle: boolean isEmpty()>();

        if $z1 != 0 goto label10;

        r8 = r23;

     label05:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        if r3 == null goto label09;

     label06:
        virtualinvoke r3.<java.io.FileInputStream: void close()>();

     label07:
        goto label09;

     label08:
        $r18 := @caughtexception;

     label09:
        return r8;

     label10:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        if r3 == null goto label30;

     label11:
        virtualinvoke r3.<java.io.FileInputStream: void close()>();

     label12:
        goto label30;

     label13:
        $r15 := @caughtexception;

        goto label30;

     label14:
        $r17 := @caughtexception;

     label15:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        if r3 == null goto label30;

     label16:
        virtualinvoke r3.<java.io.FileInputStream: void close()>();

     label17:
        goto label30;

     label18:
        $r19 := @caughtexception;

        goto label30;

     label19:
        $r16 := @caughtexception;

        r24 = $r16;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("BrowserCrashRecovery", "Failed to recover state!", r24);

     label20:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        if r3 == null goto label30;

     label21:
        virtualinvoke r3.<java.io.FileInputStream: void close()>();

     label22:
        goto label30;

     label23:
        $r21 := @caughtexception;

        goto label30;

     label24:
        $r22 := @caughtexception;

        r9 = $r22;

     label25:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        if r3 == null goto label29;

     label26:
        virtualinvoke r3.<java.io.FileInputStream: void close()>();

     label27:
        goto label29;

     label28:
        $r20 := @caughtexception;

     label29:
        throw r9;

     label30:
        return null;

        catch java.io.IOException from label06 to label07 with label08;
        catch java.io.IOException from label11 to label12 with label13;
        catch java.io.FileNotFoundException from label02 to label05 with label14;
        catch java.io.IOException from label16 to label17 with label18;
        catch java.lang.Throwable from label02 to label05 with label19;
        catch java.io.IOException from label21 to label22 with label23;
        catch java.lang.Throwable from label02 to label05 with label24;
        catch java.lang.Throwable from label14 to label15 with label24;
        catch java.lang.Throwable from label19 to label20 with label24;
        catch java.io.IOException from label26 to label27 with label28;
        catch java.lang.Throwable from label24 to label25 with label24;
    }

    public void startRecovery(android.content.Intent)
    {
        com.android.browser.CrashRecoveryHandler r0, r2;
        android.content.Intent r1;
        java.lang.Throwable r4, $r11;
        boolean $z0, $z1;
        android.os.Bundle $r6, $r7, $r9;
        com.android.browser.Controller $r8;
        long $l0;
        java.lang.InterruptedException $r10;

        r0 := @this: com.android.browser.CrashRecoveryHandler;

        r1 := @parameter0: android.content.Intent;

        r2 = r0;

        entermonitor r0;

     label01:
        $z0 = r0.<com.android.browser.CrashRecoveryHandler: boolean mIsPreloading>;

        if $z0 == 0 goto label05;

     label02:
        virtualinvoke r0.<java.lang.Object: void wait()>();

     label03:
        goto label01;

     label04:
        $r10 := @caughtexception;

        goto label01;

     label05:
        exitmonitor r2;

     label06:
        goto label09;

     label07:
        $r11 := @caughtexception;

        r4 = $r11;

        exitmonitor r2;

     label08:
        throw r4;

     label09:
        $z1 = r0.<com.android.browser.CrashRecoveryHandler: boolean mDidPreload>;

        if $z1 != 0 goto label10;

        $r9 = specialinvoke r0.<com.android.browser.CrashRecoveryHandler: android.os.Bundle loadCrashState()>();

        r0.<com.android.browser.CrashRecoveryHandler: android.os.Bundle mRecoveryState> = $r9;

     label10:
        $r6 = r0.<com.android.browser.CrashRecoveryHandler: android.os.Bundle mRecoveryState>;

        if $r6 == null goto label11;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        goto label12;

     label11:
        $l0 = 0L;

     label12:
        specialinvoke r0.<com.android.browser.CrashRecoveryHandler: void updateLastRecovered(long)>($l0);

        $r8 = r0.<com.android.browser.CrashRecoveryHandler: com.android.browser.Controller mController>;

        $r7 = r0.<com.android.browser.CrashRecoveryHandler: android.os.Bundle mRecoveryState>;

        virtualinvoke $r8.<com.android.browser.Controller: void doStart(android.os.Bundle,android.content.Intent)>($r7, r1);

        r0.<com.android.browser.CrashRecoveryHandler: android.os.Bundle mRecoveryState> = null;

        return;

        catch java.lang.InterruptedException from label02 to label03 with label04;
        catch java.lang.Throwable from label01 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    public void preloadCrashState()
    {
        com.android.browser.CrashRecoveryHandler r0, r1;
        java.lang.Throwable r2, $r5;
        boolean $z0;
        android.os.Handler $r4;

        r0 := @this: com.android.browser.CrashRecoveryHandler;

        r1 = r0;

        entermonitor r0;

     label1:
        $z0 = r0.<com.android.browser.CrashRecoveryHandler: boolean mIsPreloading>;

        if $z0 == 0 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        r0.<com.android.browser.CrashRecoveryHandler: boolean mIsPreloading> = 1;

        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label6:
        throw r2;

     label7:
        $r4 = r0.<com.android.browser.CrashRecoveryHandler: android.os.Handler mBackgroundHandler>;

        virtualinvoke $r4.<android.os.Handler: boolean sendEmptyMessage(int)>(3);

        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    synchronized void writeState(android.os.Bundle)
    {
        com.android.browser.CrashRecoveryHandler r0;
        android.os.Bundle r1;
        android.os.Parcel r2;
        java.io.File r3, r5, $r7, $r9, $r12, $r14;
        java.io.FileOutputStream r4, $r10;
        java.lang.Throwable r6, $r15, $r16, r17;
        android.content.Context $r8, $r13;
        byte[] $r11;
        boolean $z1;

        r0 := @this: com.android.browser.CrashRecoveryHandler;

        r1 := @parameter0: android.os.Bundle;

        r2 = staticinvoke <android.os.Parcel: android.os.Parcel obtain()>();

     label1:
        virtualinvoke r1.<android.os.Bundle: void writeToParcel(android.os.Parcel,int)>(r2, 0);

        $r7 = new java.io.File;

        $r8 = r0.<com.android.browser.CrashRecoveryHandler: android.content.Context mContext>;

        $r9 = virtualinvoke $r8.<android.content.Context: java.io.File getCacheDir()>();

        specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>($r9, "browser_state.parcel.journal");

        r3 = $r7;

        $r10 = new java.io.FileOutputStream;

        specialinvoke $r10.<java.io.FileOutputStream: void <init>(java.io.File)>(r3);

        r4 = $r10;

        $r11 = virtualinvoke r2.<android.os.Parcel: byte[] marshall()>();

        virtualinvoke r4.<java.io.FileOutputStream: void write(byte[])>($r11);

        virtualinvoke r4.<java.io.FileOutputStream: void close()>();

        $r12 = new java.io.File;

        $r13 = r0.<com.android.browser.CrashRecoveryHandler: android.content.Context mContext>;

        $r14 = virtualinvoke $r13.<android.content.Context: java.io.File getCacheDir()>();

        specialinvoke $r12.<java.io.File: void <init>(java.io.File,java.lang.String)>($r14, "browser_state.parcel");

        r5 = $r12;

        $z1 = virtualinvoke r3.<java.io.File: boolean renameTo(java.io.File)>(r5);

        if $z1 != 0 goto label2;

        virtualinvoke r5.<java.io.File: boolean delete()>();

        virtualinvoke r3.<java.io.File: boolean renameTo(java.io.File)>(r5);

     label2:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label7;

     label3:
        $r15 := @caughtexception;

        r17 = $r15;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>("BrowserCrashRecovery", "Failed to save persistent state", r17);

     label4:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        goto label7;

     label5:
        $r16 := @caughtexception;

        r6 = $r16;

     label6:
        virtualinvoke r2.<android.os.Parcel: void recycle()>();

        throw r6;

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    static android.content.Context access$000(com.android.browser.CrashRecoveryHandler)
    {
        com.android.browser.CrashRecoveryHandler r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.browser.CrashRecoveryHandler;

        $r1 = r0.<com.android.browser.CrashRecoveryHandler: android.content.Context mContext>;

        return $r1;
    }

    static android.os.Bundle access$102(com.android.browser.CrashRecoveryHandler, android.os.Bundle)
    {
        com.android.browser.CrashRecoveryHandler r0;
        android.os.Bundle r1;

        r0 := @parameter0: com.android.browser.CrashRecoveryHandler;

        r1 := @parameter1: android.os.Bundle;

        r0.<com.android.browser.CrashRecoveryHandler: android.os.Bundle mRecoveryState> = r1;

        return r1;
    }

    static android.os.Bundle access$200(com.android.browser.CrashRecoveryHandler)
    {
        com.android.browser.CrashRecoveryHandler r0;
        android.os.Bundle $r1;

        r0 := @parameter0: com.android.browser.CrashRecoveryHandler;

        $r1 = specialinvoke r0.<com.android.browser.CrashRecoveryHandler: android.os.Bundle loadCrashState()>();

        return $r1;
    }

    static boolean access$302(com.android.browser.CrashRecoveryHandler, boolean)
    {
        com.android.browser.CrashRecoveryHandler r0;
        boolean z0;

        r0 := @parameter0: com.android.browser.CrashRecoveryHandler;

        z0 := @parameter1: boolean;

        r0.<com.android.browser.CrashRecoveryHandler: boolean mIsPreloading> = z0;

        return z0;
    }

    static boolean access$402(com.android.browser.CrashRecoveryHandler, boolean)
    {
        com.android.browser.CrashRecoveryHandler r0;
        boolean z0;

        r0 := @parameter0: com.android.browser.CrashRecoveryHandler;

        z0 := @parameter1: boolean;

        r0.<com.android.browser.CrashRecoveryHandler: boolean mDidPreload> = z0;

        return z0;
    }

    static com.android.browser.Controller access$500(com.android.browser.CrashRecoveryHandler)
    {
        com.android.browser.CrashRecoveryHandler r0;
        com.android.browser.Controller $r1;

        r0 := @parameter0: com.android.browser.CrashRecoveryHandler;

        $r1 = r0.<com.android.browser.CrashRecoveryHandler: com.android.browser.Controller mController>;

        return $r1;
    }

    static android.os.Handler access$600(com.android.browser.CrashRecoveryHandler)
    {
        com.android.browser.CrashRecoveryHandler r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.browser.CrashRecoveryHandler;

        $r1 = r0.<com.android.browser.CrashRecoveryHandler: android.os.Handler mBackgroundHandler>;

        return $r1;
    }

    static java.lang.Runnable access$700(com.android.browser.CrashRecoveryHandler)
    {
        com.android.browser.CrashRecoveryHandler r0;
        java.lang.Runnable $r1;

        r0 := @parameter0: com.android.browser.CrashRecoveryHandler;

        $r1 = r0.<com.android.browser.CrashRecoveryHandler: java.lang.Runnable mCreateState>;

        return $r1;
    }

    static android.os.Handler access$800(com.android.browser.CrashRecoveryHandler)
    {
        com.android.browser.CrashRecoveryHandler r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.browser.CrashRecoveryHandler;

        $r1 = r0.<com.android.browser.CrashRecoveryHandler: android.os.Handler mForegroundHandler>;

        return $r1;
    }

    public static void <clinit>()
    {
        <com.android.browser.CrashRecoveryHandler: int MSG_PRELOAD_STATE> = 3;

        <com.android.browser.CrashRecoveryHandler: int MSG_CLEAR_STATE> = 2;

        <com.android.browser.CrashRecoveryHandler: int MSG_WRITE_STATE> = 1;

        <com.android.browser.CrashRecoveryHandler: long PROMPT_INTERVAL> = 300000L;

        <com.android.browser.CrashRecoveryHandler: long BACKUP_DELAY> = 500L;

        <com.android.browser.CrashRecoveryHandler: int BUFFER_SIZE> = 4096;

        <com.android.browser.CrashRecoveryHandler: java.lang.String STATE_FILE> = "browser_state.parcel";

        <com.android.browser.CrashRecoveryHandler: java.lang.String LOGTAG> = "BrowserCrashRecovery";

        <com.android.browser.CrashRecoveryHandler: boolean LOGV_ENABLED> = 0;

        return;
    }
}
