public class com.android.browser.TabBar extends android.widget.LinearLayout implements android.view.View$OnClickListener
{
    private static final int PROGRESS_MAX;
    private android.app.Activity mActivity;
    private com.android.browser.UiController mUiController;
    private com.android.browser.TabControl mTabControl;
    private com.android.browser.XLargeUi mUi;
    private int mTabWidth;
    private com.android.browser.TabScrollView mTabs;
    private android.widget.ImageButton mNewTab;
    private int mButtonWidth;
    private java.util.Map mTabMap;
    private int mCurrentTextureWidth;
    private int mCurrentTextureHeight;
    private android.graphics.drawable.Drawable mActiveDrawable;
    private android.graphics.drawable.Drawable mInactiveDrawable;
    private final android.graphics.Paint mActiveShaderPaint;
    private final android.graphics.Paint mInactiveShaderPaint;
    private final android.graphics.Paint mFocusPaint;
    private final android.graphics.Matrix mActiveMatrix;
    private final android.graphics.Matrix mInactiveMatrix;
    private android.graphics.BitmapShader mActiveShader;
    private android.graphics.BitmapShader mInactiveShader;
    private int mTabOverlap;
    private int mAddTabOverlap;
    private int mTabSliceWidth;
    private boolean mUseQuickControls;

    public void <init>(android.app.Activity, com.android.browser.UiController, com.android.browser.XLargeUi)
    {
        com.android.browser.TabBar r0;
        android.app.Activity r1;
        com.android.browser.UiController r2, $r11, $r21;
        com.android.browser.XLargeUi r3;
        android.content.res.Resources r4;
        android.view.LayoutInflater r5;
        android.graphics.Paint $r6, $r7, $r8, $r24, $r25, $r27, $r30, $r31, $r32, $r33, $r34;
        android.graphics.Matrix $r9, $r10;
        com.android.browser.TabControl $r12;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.graphics.drawable.Drawable $r13, $r14;
        java.util.HashMap $r15;
        com.android.browser.TabScrollView $r17;
        android.view.View $r18, $r20;
        android.widget.ImageButton $r19, $r22;
        java.util.List $r23;
        android.graphics.Paint$Style $r26, $r28, $r29;

        r0 := @this: com.android.browser.TabBar;

        r1 := @parameter0: android.app.Activity;

        r2 := @parameter1: com.android.browser.UiController;

        r3 := @parameter2: com.android.browser.XLargeUi;

        specialinvoke r0.<android.widget.LinearLayout: void <init>(android.content.Context)>(r1);

        r0.<com.android.browser.TabBar: int mCurrentTextureWidth> = 0;

        r0.<com.android.browser.TabBar: int mCurrentTextureHeight> = 0;

        $r6 = new android.graphics.Paint;

        specialinvoke $r6.<android.graphics.Paint: void <init>()>();

        r0.<com.android.browser.TabBar: android.graphics.Paint mActiveShaderPaint> = $r6;

        $r7 = new android.graphics.Paint;

        specialinvoke $r7.<android.graphics.Paint: void <init>()>();

        r0.<com.android.browser.TabBar: android.graphics.Paint mInactiveShaderPaint> = $r7;

        $r8 = new android.graphics.Paint;

        specialinvoke $r8.<android.graphics.Paint: void <init>()>();

        r0.<com.android.browser.TabBar: android.graphics.Paint mFocusPaint> = $r8;

        $r9 = new android.graphics.Matrix;

        specialinvoke $r9.<android.graphics.Matrix: void <init>()>();

        r0.<com.android.browser.TabBar: android.graphics.Matrix mActiveMatrix> = $r9;

        $r10 = new android.graphics.Matrix;

        specialinvoke $r10.<android.graphics.Matrix: void <init>()>();

        r0.<com.android.browser.TabBar: android.graphics.Matrix mInactiveMatrix> = $r10;

        r0.<com.android.browser.TabBar: android.app.Activity mActivity> = r1;

        r0.<com.android.browser.TabBar: com.android.browser.UiController mUiController> = r2;

        $r11 = r0.<com.android.browser.TabBar: com.android.browser.UiController mUiController>;

        $r12 = interfaceinvoke $r11.<com.android.browser.UiController: com.android.browser.TabControl getTabControl()>();

        r0.<com.android.browser.TabBar: com.android.browser.TabControl mTabControl> = $r12;

        r0.<com.android.browser.TabBar: com.android.browser.XLargeUi mUi> = r3;

        r4 = virtualinvoke r1.<android.app.Activity: android.content.res.Resources getResources()>();

        $f0 = virtualinvoke r4.<android.content.res.Resources: float getDimension(int)>(2131427328);

        $i0 = (int) $f0;

        r0.<com.android.browser.TabBar: int mTabWidth> = $i0;

        $r14 = virtualinvoke r4.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(2130837508);

        r0.<com.android.browser.TabBar: android.graphics.drawable.Drawable mActiveDrawable> = $r14;

        $r13 = virtualinvoke r4.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(2130837522);

        r0.<com.android.browser.TabBar: android.graphics.drawable.Drawable mInactiveDrawable> = $r13;

        $r15 = new java.util.HashMap;

        specialinvoke $r15.<java.util.HashMap: void <init>()>();

        r0.<com.android.browser.TabBar: java.util.Map mTabMap> = $r15;

        r5 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>(r1);

        virtualinvoke r5.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(2130968624, r0);

        $f1 = virtualinvoke r4.<android.content.res.Resources: float getDimension(int)>(2131427355);

        $i1 = (int) $f1;

        virtualinvoke r0.<com.android.browser.TabBar: void setPadding(int,int,int,int)>(0, $i1, 0, 0);

        $r18 = virtualinvoke r0.<com.android.browser.TabBar: android.view.View findViewById(int)>(2131558515);

        $r17 = (com.android.browser.TabScrollView) $r18;

        r0.<com.android.browser.TabBar: com.android.browser.TabScrollView mTabs> = $r17;

        $r20 = virtualinvoke r0.<com.android.browser.TabBar: android.view.View findViewById(int)>(2131558487);

        $r19 = (android.widget.ImageButton) $r20;

        r0.<com.android.browser.TabBar: android.widget.ImageButton mNewTab> = $r19;

        $r22 = r0.<com.android.browser.TabBar: android.widget.ImageButton mNewTab>;

        virtualinvoke $r22.<android.widget.ImageButton: void setOnClickListener(android.view.View$OnClickListener)>(r0);

        $r21 = r0.<com.android.browser.TabBar: com.android.browser.UiController mUiController>;

        $r23 = interfaceinvoke $r21.<com.android.browser.UiController: java.util.List getTabs()>();

        virtualinvoke r0.<com.android.browser.TabBar: void updateTabs(java.util.List)>($r23);

        r0.<com.android.browser.TabBar: int mButtonWidth> = -1;

        $f2 = virtualinvoke r4.<android.content.res.Resources: float getDimension(int)>(2131427330);

        $i3 = (int) $f2;

        r0.<com.android.browser.TabBar: int mTabOverlap> = $i3;

        $f4 = virtualinvoke r4.<android.content.res.Resources: float getDimension(int)>(2131427331);

        $i2 = (int) $f4;

        r0.<com.android.browser.TabBar: int mAddTabOverlap> = $i2;

        $f3 = virtualinvoke r4.<android.content.res.Resources: float getDimension(int)>(2131427332);

        $i4 = (int) $f3;

        r0.<com.android.browser.TabBar: int mTabSliceWidth> = $i4;

        $r24 = r0.<com.android.browser.TabBar: android.graphics.Paint mActiveShaderPaint>;

        $r26 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r24.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r26);

        $r25 = r0.<com.android.browser.TabBar: android.graphics.Paint mActiveShaderPaint>;

        virtualinvoke $r25.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r30 = r0.<com.android.browser.TabBar: android.graphics.Paint mInactiveShaderPaint>;

        $r29 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r30.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r29);

        $r27 = r0.<com.android.browser.TabBar: android.graphics.Paint mInactiveShaderPaint>;

        virtualinvoke $r27.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r32 = r0.<com.android.browser.TabBar: android.graphics.Paint mFocusPaint>;

        $r28 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r32.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r28);

        $r33 = r0.<com.android.browser.TabBar: android.graphics.Paint mFocusPaint>;

        $f5 = virtualinvoke r4.<android.content.res.Resources: float getDimension(int)>(2131427333);

        virtualinvoke $r33.<android.graphics.Paint: void setStrokeWidth(float)>($f5);

        $r31 = r0.<com.android.browser.TabBar: android.graphics.Paint mFocusPaint>;

        virtualinvoke $r31.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r34 = r0.<com.android.browser.TabBar: android.graphics.Paint mFocusPaint>;

        $i5 = virtualinvoke r4.<android.content.res.Resources: int getColor(int)>(2131361801);

        virtualinvoke $r34.<android.graphics.Paint: void setColor(int)>($i5);

        return;
    }

    public void onConfigurationChanged(android.content.res.Configuration)
    {
        com.android.browser.TabBar r0;
        android.content.res.Configuration r1;
        android.content.res.Resources r2;
        android.app.Activity $r3;
        float $f0;
        int $i0;
        com.android.browser.TabScrollView $r4;

        r0 := @this: com.android.browser.TabBar;

        r1 := @parameter0: android.content.res.Configuration;

        specialinvoke r0.<android.widget.LinearLayout: void onConfigurationChanged(android.content.res.Configuration)>(r1);

        $r3 = r0.<com.android.browser.TabBar: android.app.Activity mActivity>;

        r2 = virtualinvoke $r3.<android.app.Activity: android.content.res.Resources getResources()>();

        $f0 = virtualinvoke r2.<android.content.res.Resources: float getDimension(int)>(2131427328);

        $i0 = (int) $f0;

        r0.<com.android.browser.TabBar: int mTabWidth> = $i0;

        $r4 = r0.<com.android.browser.TabBar: com.android.browser.TabScrollView mTabs>;

        virtualinvoke $r4.<com.android.browser.TabScrollView: void updateLayout()>();

        return;
    }

    void setUseQuickControls(boolean)
    {
        com.android.browser.TabBar r0;
        boolean z0, $z1;
        android.widget.ImageButton $r1;
        byte $b0;

        r0 := @this: com.android.browser.TabBar;

        z0 := @parameter0: boolean;

        r0.<com.android.browser.TabBar: boolean mUseQuickControls> = z0;

        $r1 = r0.<com.android.browser.TabBar: android.widget.ImageButton mNewTab>;

        $z1 = r0.<com.android.browser.TabBar: boolean mUseQuickControls>;

        if $z1 == 0 goto label1;

        $b0 = 8;

        goto label2;

     label1:
        $b0 = 0;

     label2:
        virtualinvoke $r1.<android.widget.ImageButton: void setVisibility(int)>($b0);

        return;
    }

    int getTabCount()
    {
        com.android.browser.TabBar r0;
        java.util.Map $r1;
        int $i0;

        r0 := @this: com.android.browser.TabBar;

        $r1 = r0.<com.android.browser.TabBar: java.util.Map mTabMap>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        return $i0;
    }

    void updateTabs(java.util.List)
    {
        com.android.browser.TabBar r0;
        java.util.List r1;
        java.util.Iterator r2;
        com.android.browser.Tab r3;
        com.android.browser.TabBar$TabView r4;
        com.android.browser.TabScrollView $r5, $r8, $r10;
        java.util.Map $r6;
        boolean $z0;
        com.android.browser.TabControl $r7;
        int $i0;
        java.lang.Object $r9;

        r0 := @this: com.android.browser.TabBar;

        r1 := @parameter0: java.util.List;

        $r5 = r0.<com.android.browser.TabBar: com.android.browser.TabScrollView mTabs>;

        virtualinvoke $r5.<com.android.browser.TabScrollView: void clearTabs()>();

        $r6 = r0.<com.android.browser.TabBar: java.util.Map mTabMap>;

        interfaceinvoke $r6.<java.util.Map: void clear()>();

        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.browser.Tab) $r9;

        r4 = specialinvoke r0.<com.android.browser.TabBar: com.android.browser.TabBar$TabView buildTabView(com.android.browser.Tab)>(r3);

        $r10 = r0.<com.android.browser.TabBar: com.android.browser.TabScrollView mTabs>;

        virtualinvoke $r10.<com.android.browser.TabScrollView: void addTab(android.view.View)>(r4);

        goto label1;

     label2:
        $r8 = r0.<com.android.browser.TabBar: com.android.browser.TabScrollView mTabs>;

        $r7 = r0.<com.android.browser.TabBar: com.android.browser.TabControl mTabControl>;

        $i0 = virtualinvoke $r7.<com.android.browser.TabControl: int getCurrentPosition()>();

        virtualinvoke $r8.<com.android.browser.TabScrollView: void setSelectedTab(int)>($i0);

        return;
    }

    protected void onMeasure(int, int)
    {
        com.android.browser.TabBar r0;
        int i0, i1, i2, $i3, $i4;
        boolean $z0;

        r0 := @this: com.android.browser.TabBar;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<android.widget.LinearLayout: void onMeasure(int,int)>(i0, i1);

        i2 = virtualinvoke r0.<com.android.browser.TabBar: int getMeasuredWidth()>();

        $z0 = r0.<com.android.browser.TabBar: boolean mUseQuickControls>;

        if $z0 != 0 goto label1;

        $i4 = r0.<com.android.browser.TabBar: int mAddTabOverlap>;

        i2 = i2 - $i4;

     label1:
        $i3 = virtualinvoke r0.<com.android.browser.TabBar: int getMeasuredHeight()>();

        virtualinvoke r0.<com.android.browser.TabBar: void setMeasuredDimension(int,int)>(i2, $i3);

        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        com.android.browser.TabBar r0;
        boolean z0, $z1, $z2;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25;
        com.android.browser.TabScrollView $r1, $r3;
        android.widget.ImageButton $r2, $r4;

        r0 := @this: com.android.browser.TabBar;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 = virtualinvoke r0.<com.android.browser.TabBar: int getPaddingLeft()>();

        i5 = virtualinvoke r0.<com.android.browser.TabBar: int getPaddingTop()>();

        $r1 = r0.<com.android.browser.TabBar: com.android.browser.TabScrollView mTabs>;

        i6 = virtualinvoke $r1.<com.android.browser.TabScrollView: int getMeasuredWidth()>();

        $i8 = i2 - i0;

        i7 = $i8 - i4;

        $z1 = r0.<com.android.browser.TabBar: boolean mUseQuickControls>;

        if $z1 == 0 goto label1;

        r0.<com.android.browser.TabBar: int mButtonWidth> = 0;

        goto label2;

     label1:
        $r2 = r0.<com.android.browser.TabBar: android.widget.ImageButton mNewTab>;

        $i9 = virtualinvoke $r2.<android.widget.ImageButton: int getMeasuredWidth()>();

        $i11 = r0.<com.android.browser.TabBar: int mAddTabOverlap>;

        $i10 = $i9 - $i11;

        r0.<com.android.browser.TabBar: int mButtonWidth> = $i10;

        $i12 = i7 - i6;

        $i13 = r0.<com.android.browser.TabBar: int mButtonWidth>;

        if $i12 >= $i13 goto label2;

        $i25 = r0.<com.android.browser.TabBar: int mButtonWidth>;

        i6 = i7 - $i25;

     label2:
        $r3 = r0.<com.android.browser.TabBar: com.android.browser.TabScrollView mTabs>;

        $i14 = i4 + i6;

        $i15 = i3 - i1;

        virtualinvoke $r3.<com.android.browser.TabScrollView: void layout(int,int,int,int)>(i4, i5, $i14, $i15);

        $z2 = r0.<com.android.browser.TabBar: boolean mUseQuickControls>;

        if $z2 != 0 goto label3;

        $r4 = r0.<com.android.browser.TabBar: android.widget.ImageButton mNewTab>;

        $i16 = i4 + i6;

        $i17 = r0.<com.android.browser.TabBar: int mAddTabOverlap>;

        $i22 = $i16 - $i17;

        $i18 = i4 + i6;

        $i19 = r0.<com.android.browser.TabBar: int mButtonWidth>;

        $i20 = $i18 + $i19;

        $i21 = r0.<com.android.browser.TabBar: int mAddTabOverlap>;

        $i24 = $i20 - $i21;

        $i23 = i3 - i1;

        virtualinvoke $r4.<android.widget.ImageButton: void layout(int,int,int,int)>($i22, i5, $i24, $i23);

     label3:
        return;
    }

    public void onClick(android.view.View)
    {
        com.android.browser.TabBar r0;
        android.view.View r1, $r5;
        com.android.browser.Tab r2;
        int i0;
        android.widget.ImageButton $r3;
        com.android.browser.TabScrollView $r4, $r7, $r8;
        boolean $z0, $z2, $z3, $z4, $z5, $z6;
        com.android.browser.TabBar$TabView $r6;
        com.android.browser.UiController $r9, $r17;
        com.android.browser.XLargeUi $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r18;

        r0 := @this: com.android.browser.TabBar;

        r1 := @parameter0: android.view.View;

        $r3 = r0.<com.android.browser.TabBar: android.widget.ImageButton mNewTab>;

        if $r3 != r1 goto label1;

        $r17 = r0.<com.android.browser.TabBar: com.android.browser.UiController mUiController>;

        interfaceinvoke $r17.<com.android.browser.UiController: com.android.browser.Tab openTabToHomePage()>();

        goto label6;

     label1:
        $r4 = r0.<com.android.browser.TabBar: com.android.browser.TabScrollView mTabs>;

        $r5 = virtualinvoke $r4.<com.android.browser.TabScrollView: android.view.View getSelectedTab()>();

        if $r5 != r1 goto label5;

        $z2 = r0.<com.android.browser.TabBar: boolean mUseQuickControls>;

        if $z2 == 0 goto label3;

        $r13 = r0.<com.android.browser.TabBar: com.android.browser.XLargeUi mUi>;

        $z5 = virtualinvoke $r13.<com.android.browser.XLargeUi: boolean isTitleBarShowing()>();

        if $z5 == 0 goto label2;

        $z6 = specialinvoke r0.<com.android.browser.TabBar: boolean isLoading()>();

        if $z6 != 0 goto label2;

        $r16 = r0.<com.android.browser.TabBar: com.android.browser.XLargeUi mUi>;

        virtualinvoke $r16.<com.android.browser.XLargeUi: void stopEditingUrl()>();

        $r18 = r0.<com.android.browser.TabBar: com.android.browser.XLargeUi mUi>;

        virtualinvoke $r18.<com.android.browser.XLargeUi: void hideTitleBar()>();

        goto label6;

     label2:
        $r15 = r0.<com.android.browser.TabBar: com.android.browser.XLargeUi mUi>;

        virtualinvoke $r15.<com.android.browser.XLargeUi: void stopWebViewScrolling()>();

        $r14 = r0.<com.android.browser.TabBar: com.android.browser.XLargeUi mUi>;

        virtualinvoke $r14.<com.android.browser.XLargeUi: void editUrl(boolean,boolean)>(0, 0);

        goto label6;

     label3:
        $r10 = r0.<com.android.browser.TabBar: com.android.browser.XLargeUi mUi>;

        $z4 = virtualinvoke $r10.<com.android.browser.XLargeUi: boolean isTitleBarShowing()>();

        if $z4 == 0 goto label4;

        $z3 = specialinvoke r0.<com.android.browser.TabBar: boolean isLoading()>();

        if $z3 != 0 goto label4;

        $r12 = r0.<com.android.browser.TabBar: com.android.browser.XLargeUi mUi>;

        virtualinvoke $r12.<com.android.browser.XLargeUi: void stopEditingUrl()>();

        $r11 = r0.<com.android.browser.TabBar: com.android.browser.XLargeUi mUi>;

        virtualinvoke $r11.<com.android.browser.XLargeUi: void hideTitleBar()>();

        goto label6;

     label4:
        specialinvoke r0.<com.android.browser.TabBar: void showUrlBar()>();

        goto label6;

     label5:
        $z0 = r1 instanceof com.android.browser.TabBar$TabView;

        if $z0 == 0 goto label6;

        $r6 = (com.android.browser.TabBar$TabView) r1;

        r2 = $r6.<com.android.browser.TabBar$TabView: com.android.browser.Tab mTab>;

        $r7 = r0.<com.android.browser.TabBar: com.android.browser.TabScrollView mTabs>;

        i0 = virtualinvoke $r7.<com.android.browser.TabScrollView: int getChildIndex(android.view.View)>(r1);

        if i0 < 0 goto label6;

        $r8 = r0.<com.android.browser.TabBar: com.android.browser.TabScrollView mTabs>;

        virtualinvoke $r8.<com.android.browser.TabScrollView: void setSelectedTab(int)>(i0);

        $r9 = r0.<com.android.browser.TabBar: com.android.browser.UiController mUiController>;

        interfaceinvoke $r9.<com.android.browser.UiController: boolean switchToTab(com.android.browser.Tab)>(r2);

     label6:
        return;
    }

    private void showUrlBar()
    {
        com.android.browser.TabBar r0;
        com.android.browser.XLargeUi $r1, $r2;

        r0 := @this: com.android.browser.TabBar;

        $r1 = r0.<com.android.browser.TabBar: com.android.browser.XLargeUi mUi>;

        virtualinvoke $r1.<com.android.browser.XLargeUi: void stopWebViewScrolling()>();

        $r2 = r0.<com.android.browser.TabBar: com.android.browser.XLargeUi mUi>;

        virtualinvoke $r2.<com.android.browser.XLargeUi: void showTitleBar()>();

        return;
    }

    private com.android.browser.TabBar$TabView buildTabView(com.android.browser.Tab)
    {
        com.android.browser.TabBar r0;
        com.android.browser.Tab r1;
        com.android.browser.TabBar$TabView r2, $r3;
        android.app.Activity $r4;
        java.util.Map $r5;

        r0 := @this: com.android.browser.TabBar;

        r1 := @parameter0: com.android.browser.Tab;

        $r3 = new com.android.browser.TabBar$TabView;

        $r4 = r0.<com.android.browser.TabBar: android.app.Activity mActivity>;

        specialinvoke $r3.<com.android.browser.TabBar$TabView: void <init>(com.android.browser.TabBar,android.content.Context,com.android.browser.Tab)>(r0, $r4, r1);

        r2 = $r3;

        $r5 = r0.<com.android.browser.TabBar: java.util.Map mTabMap>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        virtualinvoke r2.<com.android.browser.TabBar$TabView: void setOnClickListener(android.view.View$OnClickListener)>(r0);

        return r2;
    }

    private static android.graphics.Bitmap getDrawableAsBitmap(android.graphics.drawable.Drawable, int, int)
    {
        android.graphics.drawable.Drawable r0;
        int i0, i1;
        android.graphics.Bitmap r1;
        android.graphics.Canvas r2, $r4;
        android.graphics.Bitmap$Config $r3;

        r0 := @parameter0: android.graphics.drawable.Drawable;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r3 = <android.graphics.Bitmap$Config: android.graphics.Bitmap$Config ARGB_8888>;

        r1 = staticinvoke <android.graphics.Bitmap: android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config)>(i0, i1, $r3);

        $r4 = new android.graphics.Canvas;

        specialinvoke $r4.<android.graphics.Canvas: void <init>(android.graphics.Bitmap)>(r1);

        r2 = $r4;

        virtualinvoke r0.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, i0, i1);

        virtualinvoke r0.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r2);

        virtualinvoke r2.<android.graphics.Canvas: void setBitmap(android.graphics.Bitmap)>(null);

        return r1;
    }

    private void animateTabOut(com.android.browser.Tab, com.android.browser.TabBar$TabView)
    {
        com.android.browser.TabBar r0;
        com.android.browser.Tab r1;
        com.android.browser.TabBar$TabView r2;
        android.animation.ObjectAnimator r3, r4, r5;
        android.animation.AnimatorSet r6, $r10;
        float[] $r7, $r8, $r9;
        android.animation.Animator[] $r11;
        com.android.browser.TabBar$1 $r13;

        r0 := @this: com.android.browser.TabBar;

        r1 := @parameter0: com.android.browser.Tab;

        r2 := @parameter1: com.android.browser.TabBar$TabView;

        $r7 = newarray (float)[2];

        $r7[0] = 1.0F;

        $r7[1] = 0.0F;

        r3 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>(r2, "scaleX", $r7);

        $r8 = newarray (float)[2];

        $r8[0] = 1.0F;

        $r8[1] = 0.0F;

        r4 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>(r2, "scaleY", $r8);

        $r9 = newarray (float)[2];

        $r9[0] = 1.0F;

        $r9[1] = 0.0F;

        r5 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>(r2, "alpha", $r9);

        $r10 = new android.animation.AnimatorSet;

        specialinvoke $r10.<android.animation.AnimatorSet: void <init>()>();

        r6 = $r10;

        $r11 = newarray (android.animation.Animator)[3];

        $r11[0] = r3;

        $r11[1] = r4;

        $r11[2] = r5;

        virtualinvoke r6.<android.animation.AnimatorSet: void playTogether(android.animation.Animator[])>($r11);

        virtualinvoke r6.<android.animation.AnimatorSet: android.animation.AnimatorSet setDuration(long)>(150L);

        $r13 = new com.android.browser.TabBar$1;

        specialinvoke $r13.<com.android.browser.TabBar$1: void <init>(com.android.browser.TabBar,com.android.browser.TabBar$TabView,com.android.browser.Tab)>(r0, r2, r1);

        virtualinvoke r6.<android.animation.AnimatorSet: void addListener(android.animation.Animator$AnimatorListener)>($r13);

        virtualinvoke r6.<android.animation.AnimatorSet: void start()>();

        return;
    }

    private void animateTabIn(com.android.browser.Tab, com.android.browser.TabBar$TabView)
    {
        com.android.browser.TabBar r0;
        com.android.browser.Tab r1;
        com.android.browser.TabBar$TabView r2;
        android.animation.ObjectAnimator r3;
        float[] $r4;
        com.android.browser.TabBar$2 $r6;

        r0 := @this: com.android.browser.TabBar;

        r1 := @parameter0: com.android.browser.Tab;

        r2 := @parameter1: com.android.browser.TabBar$TabView;

        $r4 = newarray (float)[2];

        $r4[0] = 0.0F;

        $r4[1] = 1.0F;

        r3 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofFloat(java.lang.Object,java.lang.String,float[])>(r2, "scaleX", $r4);

        virtualinvoke r3.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>(150L);

        $r6 = new com.android.browser.TabBar$2;

        specialinvoke $r6.<com.android.browser.TabBar$2: void <init>(com.android.browser.TabBar,com.android.browser.Tab,com.android.browser.TabBar$TabView)>(r0, r1, r2);

        virtualinvoke r3.<android.animation.ObjectAnimator: void addListener(android.animation.Animator$AnimatorListener)>($r6);

        virtualinvoke r3.<android.animation.ObjectAnimator: void start()>();

        return;
    }

    public void onSetActiveTab(com.android.browser.Tab)
    {
        com.android.browser.TabBar r0;
        com.android.browser.Tab r1;
        com.android.browser.TabControl $r2;
        com.android.browser.TabScrollView $r3;
        int $i0;

        r0 := @this: com.android.browser.TabBar;

        r1 := @parameter0: com.android.browser.Tab;

        $r3 = r0.<com.android.browser.TabBar: com.android.browser.TabScrollView mTabs>;

        $r2 = r0.<com.android.browser.TabBar: com.android.browser.TabControl mTabControl>;

        $i0 = virtualinvoke $r2.<com.android.browser.TabControl: int getTabPosition(com.android.browser.Tab)>(r1);

        virtualinvoke $r3.<com.android.browser.TabScrollView: void setSelectedTab(int)>($i0);

        return;
    }

    public void onFavicon(com.android.browser.Tab, android.graphics.Bitmap)
    {
        com.android.browser.TabBar r0;
        com.android.browser.Tab r1;
        android.graphics.Bitmap r2;
        com.android.browser.TabBar$TabView r3;
        java.util.Map $r4;
        java.lang.Object $r5;
        com.android.browser.XLargeUi $r6;
        android.graphics.drawable.Drawable $r7;

        r0 := @this: com.android.browser.TabBar;

        r1 := @parameter0: com.android.browser.Tab;

        r2 := @parameter1: android.graphics.Bitmap;

        $r4 = r0.<com.android.browser.TabBar: java.util.Map mTabMap>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (com.android.browser.TabBar$TabView) $r5;

        if r3 == null goto label1;

        $r6 = r0.<com.android.browser.TabBar: com.android.browser.XLargeUi mUi>;

        $r7 = virtualinvoke $r6.<com.android.browser.XLargeUi: android.graphics.drawable.Drawable getFaviconDrawable(android.graphics.Bitmap)>(r2);

        virtualinvoke r3.<com.android.browser.TabBar$TabView: void setFavicon(android.graphics.drawable.Drawable)>($r7);

     label1:
        return;
    }

    public void onNewTab(com.android.browser.Tab)
    {
        com.android.browser.TabBar r0;
        com.android.browser.Tab r1;
        com.android.browser.TabBar$TabView r2;

        r0 := @this: com.android.browser.TabBar;

        r1 := @parameter0: com.android.browser.Tab;

        r2 = specialinvoke r0.<com.android.browser.TabBar: com.android.browser.TabBar$TabView buildTabView(com.android.browser.Tab)>(r1);

        specialinvoke r0.<com.android.browser.TabBar: void animateTabIn(com.android.browser.Tab,com.android.browser.TabBar$TabView)>(r1, r2);

        return;
    }

    public void onRemoveTab(com.android.browser.Tab)
    {
        com.android.browser.TabBar r0;
        com.android.browser.Tab r1;
        com.android.browser.TabBar$TabView r2;
        java.util.Map $r3, $r5;
        java.lang.Object $r4;

        r0 := @this: com.android.browser.TabBar;

        r1 := @parameter0: com.android.browser.Tab;

        $r3 = r0.<com.android.browser.TabBar: java.util.Map mTabMap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (com.android.browser.TabBar$TabView) $r4;

        if r2 == null goto label1;

        specialinvoke r0.<com.android.browser.TabBar: void animateTabOut(com.android.browser.Tab,com.android.browser.TabBar$TabView)>(r1, r2);

        goto label2;

     label1:
        $r5 = r0.<com.android.browser.TabBar: java.util.Map mTabMap>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

     label2:
        return;
    }

    public void onUrlAndTitle(com.android.browser.Tab, java.lang.String, java.lang.String)
    {
        com.android.browser.TabBar r0;
        com.android.browser.Tab r1;
        java.lang.String r2, r3, $r7;
        com.android.browser.TabBar$TabView r4;
        java.util.Map $r5;
        java.lang.Object $r6;

        r0 := @this: com.android.browser.TabBar;

        r1 := @parameter0: com.android.browser.Tab;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r5 = r0.<com.android.browser.TabBar: java.util.Map mTabMap>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (com.android.browser.TabBar$TabView) $r6;

        if r4 == null goto label3;

        if r3 == null goto label1;

        virtualinvoke r4.<com.android.browser.TabBar$TabView: void setDisplayTitle(java.lang.String)>(r3);

        goto label2;

     label1:
        if r2 == null goto label2;

        $r7 = staticinvoke <com.android.browser.UrlUtils: java.lang.String stripUrl(java.lang.String)>(r2);

        virtualinvoke r4.<com.android.browser.TabBar$TabView: void setDisplayTitle(java.lang.String)>($r7);

     label2:
        staticinvoke <com.android.browser.TabBar$TabView: void access$2100(com.android.browser.TabBar$TabView)>(r4);

     label3:
        return;
    }

    private boolean isLoading()
    {
        com.android.browser.TabBar r0;
        com.android.browser.Tab r1;
        com.android.browser.TabControl $r2;
        boolean $z0;

        r0 := @this: com.android.browser.TabBar;

        $r2 = r0.<com.android.browser.TabBar: com.android.browser.TabControl mTabControl>;

        r1 = virtualinvoke $r2.<com.android.browser.TabControl: com.android.browser.Tab getCurrentTab()>();

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<com.android.browser.Tab: boolean inPageLoad()>();

        return $z0;

     label1:
        return 0;
    }

    static int access$000(com.android.browser.TabBar)
    {
        com.android.browser.TabBar r0;
        int $i0;

        r0 := @parameter0: com.android.browser.TabBar;

        $i0 = r0.<com.android.browser.TabBar: int mTabOverlap>;

        return $i0;
    }

    static int access$100(com.android.browser.TabBar)
    {
        com.android.browser.TabBar r0;
        int $i0;

        r0 := @parameter0: com.android.browser.TabBar;

        $i0 = r0.<com.android.browser.TabBar: int mTabSliceWidth>;

        return $i0;
    }

    static com.android.browser.XLargeUi access$200(com.android.browser.TabBar)
    {
        com.android.browser.TabBar r0;
        com.android.browser.XLargeUi $r1;

        r0 := @parameter0: com.android.browser.TabBar;

        $r1 = r0.<com.android.browser.TabBar: com.android.browser.XLargeUi mUi>;

        return $r1;
    }

    static android.app.Activity access$300(com.android.browser.TabBar)
    {
        com.android.browser.TabBar r0;
        android.app.Activity $r1;

        r0 := @parameter0: com.android.browser.TabBar;

        $r1 = r0.<com.android.browser.TabBar: android.app.Activity mActivity>;

        return $r1;
    }

    static int access$400(com.android.browser.TabBar)
    {
        com.android.browser.TabBar r0;
        int $i0;

        r0 := @parameter0: com.android.browser.TabBar;

        $i0 = r0.<com.android.browser.TabBar: int mTabWidth>;

        return $i0;
    }

    static com.android.browser.TabControl access$500(com.android.browser.TabBar)
    {
        com.android.browser.TabBar r0;
        com.android.browser.TabControl $r1;

        r0 := @parameter0: com.android.browser.TabBar;

        $r1 = r0.<com.android.browser.TabBar: com.android.browser.TabControl mTabControl>;

        return $r1;
    }

    static com.android.browser.UiController access$600(com.android.browser.TabBar)
    {
        com.android.browser.TabBar r0;
        com.android.browser.UiController $r1;

        r0 := @parameter0: com.android.browser.TabBar;

        $r1 = r0.<com.android.browser.TabBar: com.android.browser.UiController mUiController>;

        return $r1;
    }

    static int access$700(com.android.browser.TabBar)
    {
        com.android.browser.TabBar r0;
        int $i0;

        r0 := @parameter0: com.android.browser.TabBar;

        $i0 = r0.<com.android.browser.TabBar: int mCurrentTextureWidth>;

        return $i0;
    }

    static int access$800(com.android.browser.TabBar)
    {
        com.android.browser.TabBar r0;
        int $i0;

        r0 := @parameter0: com.android.browser.TabBar;

        $i0 = r0.<com.android.browser.TabBar: int mCurrentTextureHeight>;

        return $i0;
    }

    static int access$702(com.android.browser.TabBar, int)
    {
        com.android.browser.TabBar r0;
        int i0;

        r0 := @parameter0: com.android.browser.TabBar;

        i0 := @parameter1: int;

        r0.<com.android.browser.TabBar: int mCurrentTextureWidth> = i0;

        return i0;
    }

    static int access$802(com.android.browser.TabBar, int)
    {
        com.android.browser.TabBar r0;
        int i0;

        r0 := @parameter0: com.android.browser.TabBar;

        i0 := @parameter1: int;

        r0.<com.android.browser.TabBar: int mCurrentTextureHeight> = i0;

        return i0;
    }

    static android.graphics.drawable.Drawable access$900(com.android.browser.TabBar)
    {
        com.android.browser.TabBar r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @parameter0: com.android.browser.TabBar;

        $r1 = r0.<com.android.browser.TabBar: android.graphics.drawable.Drawable mActiveDrawable>;

        return $r1;
    }

    static android.graphics.Bitmap access$1000(android.graphics.drawable.Drawable, int, int)
    {
        android.graphics.drawable.Drawable r0;
        int i0, i1;
        android.graphics.Bitmap $r1;

        r0 := @parameter0: android.graphics.drawable.Drawable;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = staticinvoke <com.android.browser.TabBar: android.graphics.Bitmap getDrawableAsBitmap(android.graphics.drawable.Drawable,int,int)>(r0, i0, i1);

        return $r1;
    }

    static android.graphics.drawable.Drawable access$1100(com.android.browser.TabBar)
    {
        com.android.browser.TabBar r0;
        android.graphics.drawable.Drawable $r1;

        r0 := @parameter0: com.android.browser.TabBar;

        $r1 = r0.<com.android.browser.TabBar: android.graphics.drawable.Drawable mInactiveDrawable>;

        return $r1;
    }

    static android.graphics.BitmapShader access$1202(com.android.browser.TabBar, android.graphics.BitmapShader)
    {
        com.android.browser.TabBar r0;
        android.graphics.BitmapShader r1;

        r0 := @parameter0: com.android.browser.TabBar;

        r1 := @parameter1: android.graphics.BitmapShader;

        r0.<com.android.browser.TabBar: android.graphics.BitmapShader mActiveShader> = r1;

        return r1;
    }

    static android.graphics.BitmapShader access$1200(com.android.browser.TabBar)
    {
        com.android.browser.TabBar r0;
        android.graphics.BitmapShader $r1;

        r0 := @parameter0: com.android.browser.TabBar;

        $r1 = r0.<com.android.browser.TabBar: android.graphics.BitmapShader mActiveShader>;

        return $r1;
    }

    static android.graphics.Paint access$1300(com.android.browser.TabBar)
    {
        com.android.browser.TabBar r0;
        android.graphics.Paint $r1;

        r0 := @parameter0: com.android.browser.TabBar;

        $r1 = r0.<com.android.browser.TabBar: android.graphics.Paint mActiveShaderPaint>;

        return $r1;
    }

    static android.graphics.BitmapShader access$1402(com.android.browser.TabBar, android.graphics.BitmapShader)
    {
        com.android.browser.TabBar r0;
        android.graphics.BitmapShader r1;

        r0 := @parameter0: com.android.browser.TabBar;

        r1 := @parameter1: android.graphics.BitmapShader;

        r0.<com.android.browser.TabBar: android.graphics.BitmapShader mInactiveShader> = r1;

        return r1;
    }

    static android.graphics.BitmapShader access$1400(com.android.browser.TabBar)
    {
        com.android.browser.TabBar r0;
        android.graphics.BitmapShader $r1;

        r0 := @parameter0: com.android.browser.TabBar;

        $r1 = r0.<com.android.browser.TabBar: android.graphics.BitmapShader mInactiveShader>;

        return $r1;
    }

    static android.graphics.Paint access$1500(com.android.browser.TabBar)
    {
        com.android.browser.TabBar r0;
        android.graphics.Paint $r1;

        r0 := @parameter0: com.android.browser.TabBar;

        $r1 = r0.<com.android.browser.TabBar: android.graphics.Paint mInactiveShaderPaint>;

        return $r1;
    }

    static android.graphics.Matrix access$1600(com.android.browser.TabBar)
    {
        com.android.browser.TabBar r0;
        android.graphics.Matrix $r1;

        r0 := @parameter0: com.android.browser.TabBar;

        $r1 = r0.<com.android.browser.TabBar: android.graphics.Matrix mActiveMatrix>;

        return $r1;
    }

    static android.graphics.Matrix access$1700(com.android.browser.TabBar)
    {
        com.android.browser.TabBar r0;
        android.graphics.Matrix $r1;

        r0 := @parameter0: com.android.browser.TabBar;

        $r1 = r0.<com.android.browser.TabBar: android.graphics.Matrix mInactiveMatrix>;

        return $r1;
    }

    static android.graphics.Paint access$1800(com.android.browser.TabBar)
    {
        com.android.browser.TabBar r0;
        android.graphics.Paint $r1;

        r0 := @parameter0: com.android.browser.TabBar;

        $r1 = r0.<com.android.browser.TabBar: android.graphics.Paint mFocusPaint>;

        return $r1;
    }

    static com.android.browser.TabScrollView access$1900(com.android.browser.TabBar)
    {
        com.android.browser.TabBar r0;
        com.android.browser.TabScrollView $r1;

        r0 := @parameter0: com.android.browser.TabBar;

        $r1 = r0.<com.android.browser.TabBar: com.android.browser.TabScrollView mTabs>;

        return $r1;
    }

    static java.util.Map access$2000(com.android.browser.TabBar)
    {
        com.android.browser.TabBar r0;
        java.util.Map $r1;

        r0 := @parameter0: com.android.browser.TabBar;

        $r1 = r0.<com.android.browser.TabBar: java.util.Map mTabMap>;

        return $r1;
    }

    public static void <clinit>()
    {
        <com.android.browser.TabBar: int PROGRESS_MAX> = 100;

        return;
    }
}
