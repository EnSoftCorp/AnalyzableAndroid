public class com.android.common.content.SyncStateContentProviderHelper extends java.lang.Object
{
    private static final java.lang.String SELECT_BY_ACCOUNT;
    private static final java.lang.String SYNC_STATE_TABLE;
    private static final java.lang.String SYNC_STATE_META_TABLE;
    private static final java.lang.String SYNC_STATE_META_VERSION_COLUMN;
    private static long DB_VERSION;
    private static final java.lang.String[] ACCOUNT_PROJECTION;
    public static final java.lang.String PATH;
    private static final java.lang.String QUERY_COUNT_SYNC_STATE_ROWS;

    public void <init>()
    {
        com.android.common.content.SyncStateContentProviderHelper r0;

        r0 := @this: com.android.common.content.SyncStateContentProviderHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void createDatabase(android.database.sqlite.SQLiteDatabase)
    {
        com.android.common.content.SyncStateContentProviderHelper r0;
        android.database.sqlite.SQLiteDatabase r1;
        android.content.ContentValues r2, $r3;
        long $l0;
        java.lang.Long $r4;

        r0 := @this: com.android.common.content.SyncStateContentProviderHelper;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS _sync_state");

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE _sync_state (_id INTEGER PRIMARY KEY,account_name TEXT NOT NULL,account_type TEXT NOT NULL,data TEXT,UNIQUE(account_name, account_type));");

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS _sync_state_metadata");

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE _sync_state_metadata (version INTEGER);");

        $r3 = new android.content.ContentValues;

        specialinvoke $r3.<android.content.ContentValues: void <init>()>();

        r2 = $r3;

        $l0 = <com.android.common.content.SyncStateContentProviderHelper: long DB_VERSION>;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        virtualinvoke r2.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("version", $r4);

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: long insert(java.lang.String,java.lang.String,android.content.ContentValues)>("_sync_state_metadata", "version", r2);

        return;
    }

    public void onDatabaseOpened(android.database.sqlite.SQLiteDatabase)
    {
        com.android.common.content.SyncStateContentProviderHelper r0;
        android.database.sqlite.SQLiteDatabase r1;
        long l0, $l1;
        byte $b2;

        r0 := @this: com.android.common.content.SyncStateContentProviderHelper;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        l0 = staticinvoke <android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>(r1, "SELECT version FROM _sync_state_metadata", null);

        $l1 = <com.android.common.content.SyncStateContentProviderHelper: long DB_VERSION>;

        $b2 = l0 cmp $l1;

        if $b2 == 0 goto label1;

        virtualinvoke r0.<com.android.common.content.SyncStateContentProviderHelper: void createDatabase(android.database.sqlite.SQLiteDatabase)>(r1);

     label1:
        return;
    }

    public android.database.Cursor query(android.database.sqlite.SQLiteDatabase, java.lang.String[], java.lang.String, java.lang.String[], java.lang.String)
    {
        com.android.common.content.SyncStateContentProviderHelper r0;
        android.database.sqlite.SQLiteDatabase r1;
        java.lang.String[] r2, r4;
        java.lang.String r3, r5;
        android.database.Cursor $r6;

        r0 := @this: com.android.common.content.SyncStateContentProviderHelper;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        r5 := @parameter4: java.lang.String;

        $r6 = virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("_sync_state", r2, r3, r4, null, null, r5);

        return $r6;
    }

    public long insert(android.database.sqlite.SQLiteDatabase, android.content.ContentValues)
    {
        com.android.common.content.SyncStateContentProviderHelper r0;
        android.database.sqlite.SQLiteDatabase r1;
        android.content.ContentValues r2;
        long $l0;

        r0 := @this: com.android.common.content.SyncStateContentProviderHelper;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r2 := @parameter1: android.content.ContentValues;

        $l0 = virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: long replace(java.lang.String,java.lang.String,android.content.ContentValues)>("_sync_state", "account_name", r2);

        return $l0;
    }

    public int delete(android.database.sqlite.SQLiteDatabase, java.lang.String, java.lang.String[])
    {
        com.android.common.content.SyncStateContentProviderHelper r0;
        android.database.sqlite.SQLiteDatabase r1;
        java.lang.String r2;
        java.lang.String[] r3;
        int $i0;

        r0 := @this: com.android.common.content.SyncStateContentProviderHelper;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String[];

        $i0 = virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("_sync_state", r2, r3);

        return $i0;
    }

    public int update(android.database.sqlite.SQLiteDatabase, android.content.ContentValues, java.lang.String, java.lang.String[])
    {
        com.android.common.content.SyncStateContentProviderHelper r0;
        android.database.sqlite.SQLiteDatabase r1;
        android.content.ContentValues r2;
        java.lang.String r3;
        java.lang.String[] r4;
        int $i0;

        r0 := @this: com.android.common.content.SyncStateContentProviderHelper;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r2 := @parameter1: android.content.ContentValues;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String[];

        $i0 = virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: int update(java.lang.String,android.content.ContentValues,java.lang.String,java.lang.String[])>("_sync_state", r2, r3, r4);

        return $i0;
    }

    public int update(android.database.sqlite.SQLiteDatabase, long, java.lang.Object)
    {
        com.android.common.content.SyncStateContentProviderHelper r0;
        android.database.sqlite.SQLiteDatabase r1;
        long l0, $l1;
        java.lang.Object r2;
        java.lang.String[] $r3;
        java.lang.String $r4, $r8;
        byte $b2;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.Object[] $r9;

        r0 := @this: com.android.common.content.SyncStateContentProviderHelper;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        l0 := @parameter1: long;

        r2 := @parameter2: java.lang.Object;

        $r3 = newarray (java.lang.String)[1];

        $r4 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        $r3[0] = $r4;

        $l1 = staticinvoke <android.database.DatabaseUtils: long longForQuery(android.database.sqlite.SQLiteDatabase,java.lang.String,java.lang.String[])>(r1, "SELECT count(*) FROM _sync_state WHERE _id=?", $r3);

        $b2 = $l1 cmp 1L;

        if $b2 >= 0 goto label1;

        return 0;

     label1:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UPDATE _sync_state SET data=? WHERE _id=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = newarray (java.lang.Object)[1];

        $r9[0] = r2;

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String,java.lang.Object[])>($r8, $r9);

        return 1;
    }

    public void onAccountsChanged(android.database.sqlite.SQLiteDatabase, android.accounts.Account[])
    {
        com.android.common.content.SyncStateContentProviderHelper r0;
        android.database.sqlite.SQLiteDatabase r1;
        android.accounts.Account[] r2;
        android.database.Cursor r3;
        java.lang.String r4, r5;
        android.accounts.Account r6, $r9;
        java.lang.Throwable r7, $r11;
        java.lang.String[] $r8, $r10;
        boolean $z0, $z1;

        r0 := @this: com.android.common.content.SyncStateContentProviderHelper;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        r2 := @parameter1: android.accounts.Account[];

        $r8 = <com.android.common.content.SyncStateContentProviderHelper: java.lang.String[] ACCOUNT_PROJECTION>;

        r3 = virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: android.database.Cursor query(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)>("_sync_state", $r8, null, null, null, null, null);

     label1:
        $z0 = interfaceinvoke r3.<android.database.Cursor: boolean moveToNext()>();

        if $z0 == 0 goto label3;

        r4 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(0);

        r5 = interfaceinvoke r3.<android.database.Cursor: java.lang.String getString(int)>(1);

        $r9 = new android.accounts.Account;

        specialinvoke $r9.<android.accounts.Account: void <init>(java.lang.String,java.lang.String)>(r4, r5);

        r6 = $r9;

        $z1 = staticinvoke <com.android.common.content.SyncStateContentProviderHelper: boolean contains(java.lang.Object[],java.lang.Object)>(r2, r6);

        if $z1 != 0 goto label2;

        $r10 = newarray (java.lang.String)[2];

        $r10[0] = r4;

        $r10[1] = r5;

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: int delete(java.lang.String,java.lang.String,java.lang.String[])>("_sync_state", "account_name=? AND account_type=?", $r10);

     label2:
        goto label1;

     label3:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        goto label6;

     label4:
        $r11 := @caughtexception;

        r7 = $r11;

     label5:
        interfaceinvoke r3.<android.database.Cursor: void close()>();

        throw r7;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private static boolean contains(java.lang.Object[], java.lang.Object)
    {
        java.lang.Object[] r0, r2;
        java.lang.Object r1, r3;
        int i0, i1;
        boolean $z0;

        r0 := @parameter0: java.lang.Object[];

        r1 := @parameter1: java.lang.Object;

        r2 = r0;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        r3 = r2[i1];

        if r3 != null goto label2;

        if r1 != null goto label3;

        return 1;

     label2:
        if r1 == null goto label3;

        $z0 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return 0;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;

        <com.android.common.content.SyncStateContentProviderHelper: java.lang.String QUERY_COUNT_SYNC_STATE_ROWS> = "SELECT count(*) FROM _sync_state WHERE _id=?";

        <com.android.common.content.SyncStateContentProviderHelper: java.lang.String PATH> = "syncstate";

        <com.android.common.content.SyncStateContentProviderHelper: java.lang.String SYNC_STATE_META_VERSION_COLUMN> = "version";

        <com.android.common.content.SyncStateContentProviderHelper: java.lang.String SYNC_STATE_META_TABLE> = "_sync_state_metadata";

        <com.android.common.content.SyncStateContentProviderHelper: java.lang.String SYNC_STATE_TABLE> = "_sync_state";

        <com.android.common.content.SyncStateContentProviderHelper: java.lang.String SELECT_BY_ACCOUNT> = "account_name=? AND account_type=?";

        <com.android.common.content.SyncStateContentProviderHelper: long DB_VERSION> = 1L;

        $r0 = newarray (java.lang.String)[2];

        $r0[0] = "account_name";

        $r0[1] = "account_type";

        <com.android.common.content.SyncStateContentProviderHelper: java.lang.String[] ACCOUNT_PROJECTION> = $r0;

        return;
    }
}
