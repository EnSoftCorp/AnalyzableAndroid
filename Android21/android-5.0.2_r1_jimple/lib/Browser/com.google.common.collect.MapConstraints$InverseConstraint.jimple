class com.google.common.collect.MapConstraints$InverseConstraint extends java.lang.Object implements com.google.common.collect.MapConstraint
{
    final com.google.common.collect.MapConstraint constraint;

    public void <init>(com.google.common.collect.MapConstraint)
    {
        com.google.common.collect.MapConstraints$InverseConstraint r0;
        com.google.common.collect.MapConstraint r1, $r3;
        java.lang.Object $r2;

        r0 := @this: com.google.common.collect.MapConstraints$InverseConstraint;

        r1 := @parameter0: com.google.common.collect.MapConstraint;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = (com.google.common.collect.MapConstraint) $r2;

        r0.<com.google.common.collect.MapConstraints$InverseConstraint: com.google.common.collect.MapConstraint constraint> = $r3;

        return;
    }

    public void checkKeyValue(java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.MapConstraints$InverseConstraint r0;
        java.lang.Object r1, r2;
        com.google.common.collect.MapConstraint $r3;

        r0 := @this: com.google.common.collect.MapConstraints$InverseConstraint;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<com.google.common.collect.MapConstraints$InverseConstraint: com.google.common.collect.MapConstraint constraint>;

        interfaceinvoke $r3.<com.google.common.collect.MapConstraint: void checkKeyValue(java.lang.Object,java.lang.Object)>(r2, r1);

        return;
    }
}
