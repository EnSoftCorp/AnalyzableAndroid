public final class com.google.common.io.FileBackedOutputStream extends java.io.OutputStream
{
    private final int fileThreshold;
    private final boolean resetOnFinalize;
    private final com.google.common.io.InputSupplier supplier;
    private java.io.OutputStream out;
    private com.google.common.io.FileBackedOutputStream$MemoryOutput memory;
    private java.io.File file;

    synchronized java.io.File getFile()
    {
        com.google.common.io.FileBackedOutputStream r0;
        java.io.File $r1;

        r0 := @this: com.google.common.io.FileBackedOutputStream;

        $r1 = r0.<com.google.common.io.FileBackedOutputStream: java.io.File file>;

        return $r1;
    }

    public void <init>(int)
    {
        com.google.common.io.FileBackedOutputStream r0;
        int i0;

        r0 := @this: com.google.common.io.FileBackedOutputStream;

        i0 := @parameter0: int;

        specialinvoke r0.<com.google.common.io.FileBackedOutputStream: void <init>(int,boolean)>(i0, 0);

        return;
    }

    public void <init>(int, boolean)
    {
        com.google.common.io.FileBackedOutputStream r0;
        int i0;
        boolean z0;
        com.google.common.io.FileBackedOutputStream$MemoryOutput $r1, $r2;
        com.google.common.io.FileBackedOutputStream$2 $r3;
        com.google.common.io.FileBackedOutputStream$1 $r4;

        r0 := @this: com.google.common.io.FileBackedOutputStream;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.io.OutputStream: void <init>()>();

        r0.<com.google.common.io.FileBackedOutputStream: int fileThreshold> = i0;

        r0.<com.google.common.io.FileBackedOutputStream: boolean resetOnFinalize> = z0;

        $r1 = new com.google.common.io.FileBackedOutputStream$MemoryOutput;

        specialinvoke $r1.<com.google.common.io.FileBackedOutputStream$MemoryOutput: void <init>(com.google.common.io.FileBackedOutputStream$1)>(null);

        r0.<com.google.common.io.FileBackedOutputStream: com.google.common.io.FileBackedOutputStream$MemoryOutput memory> = $r1;

        $r2 = r0.<com.google.common.io.FileBackedOutputStream: com.google.common.io.FileBackedOutputStream$MemoryOutput memory>;

        r0.<com.google.common.io.FileBackedOutputStream: java.io.OutputStream out> = $r2;

        if z0 == 0 goto label1;

        $r4 = new com.google.common.io.FileBackedOutputStream$1;

        specialinvoke $r4.<com.google.common.io.FileBackedOutputStream$1: void <init>(com.google.common.io.FileBackedOutputStream)>(r0);

        r0.<com.google.common.io.FileBackedOutputStream: com.google.common.io.InputSupplier supplier> = $r4;

        goto label2;

     label1:
        $r3 = new com.google.common.io.FileBackedOutputStream$2;

        specialinvoke $r3.<com.google.common.io.FileBackedOutputStream$2: void <init>(com.google.common.io.FileBackedOutputStream)>(r0);

        r0.<com.google.common.io.FileBackedOutputStream: com.google.common.io.InputSupplier supplier> = $r3;

     label2:
        return;
    }

    public com.google.common.io.InputSupplier getSupplier()
    {
        com.google.common.io.FileBackedOutputStream r0;
        com.google.common.io.InputSupplier $r1;

        r0 := @this: com.google.common.io.FileBackedOutputStream;

        $r1 = r0.<com.google.common.io.FileBackedOutputStream: com.google.common.io.InputSupplier supplier>;

        return $r1;
    }

    private synchronized java.io.InputStream openStream() throws java.io.IOException
    {
        com.google.common.io.FileBackedOutputStream r0;
        java.io.File $r1, $r7;
        java.io.ByteArrayInputStream $r2;
        com.google.common.io.FileBackedOutputStream$MemoryOutput $r3, $r5;
        byte[] $r4;
        int $i0;
        java.io.FileInputStream $r6;

        r0 := @this: com.google.common.io.FileBackedOutputStream;

        $r1 = r0.<com.google.common.io.FileBackedOutputStream: java.io.File file>;

        if $r1 == null goto label1;

        $r6 = new java.io.FileInputStream;

        $r7 = r0.<com.google.common.io.FileBackedOutputStream: java.io.File file>;

        specialinvoke $r6.<java.io.FileInputStream: void <init>(java.io.File)>($r7);

        return $r6;

     label1:
        $r2 = new java.io.ByteArrayInputStream;

        $r3 = r0.<com.google.common.io.FileBackedOutputStream: com.google.common.io.FileBackedOutputStream$MemoryOutput memory>;

        $r4 = virtualinvoke $r3.<com.google.common.io.FileBackedOutputStream$MemoryOutput: byte[] getBuffer()>();

        $r5 = r0.<com.google.common.io.FileBackedOutputStream: com.google.common.io.FileBackedOutputStream$MemoryOutput memory>;

        $i0 = virtualinvoke $r5.<com.google.common.io.FileBackedOutputStream$MemoryOutput: int getCount()>();

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>($r4, 0, $i0);

        return $r2;
    }

    public synchronized void reset() throws java.io.IOException
    {
        com.google.common.io.FileBackedOutputStream r0;
        java.io.File r1, r3, $r7, $r17;
        java.lang.Throwable r2, $r14;
        com.google.common.io.FileBackedOutputStream$MemoryOutput $r4, $r5, $r6, $r13, $r15, $r16, $r18, $r24;
        boolean $z0, $z1;
        java.io.IOException $r8, $r19;
        java.lang.StringBuilder $r9, $r10, $r11, $r20, $r21, $r23;
        java.lang.String $r12, $r22;

        r0 := @this: com.google.common.io.FileBackedOutputStream;

     label01:
        virtualinvoke r0.<com.google.common.io.FileBackedOutputStream: void close()>();

     label02:
        $r4 = r0.<com.google.common.io.FileBackedOutputStream: com.google.common.io.FileBackedOutputStream$MemoryOutput memory>;

        if $r4 != null goto label03;

        $r13 = new com.google.common.io.FileBackedOutputStream$MemoryOutput;

        specialinvoke $r13.<com.google.common.io.FileBackedOutputStream$MemoryOutput: void <init>(com.google.common.io.FileBackedOutputStream$1)>(null);

        r0.<com.google.common.io.FileBackedOutputStream: com.google.common.io.FileBackedOutputStream$MemoryOutput memory> = $r13;

        goto label04;

     label03:
        $r5 = r0.<com.google.common.io.FileBackedOutputStream: com.google.common.io.FileBackedOutputStream$MemoryOutput memory>;

        virtualinvoke $r5.<com.google.common.io.FileBackedOutputStream$MemoryOutput: void reset()>();

     label04:
        $r6 = r0.<com.google.common.io.FileBackedOutputStream: com.google.common.io.FileBackedOutputStream$MemoryOutput memory>;

        r0.<com.google.common.io.FileBackedOutputStream: java.io.OutputStream out> = $r6;

        $r7 = r0.<com.google.common.io.FileBackedOutputStream: java.io.File file>;

        if $r7 == null goto label11;

        r1 = r0.<com.google.common.io.FileBackedOutputStream: java.io.File file>;

        r0.<com.google.common.io.FileBackedOutputStream: java.io.File file> = null;

        $z0 = virtualinvoke r1.<java.io.File: boolean delete()>();

        if $z0 != 0 goto label05;

        $r8 = new java.io.IOException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not delete: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>($r12);

        throw $r8;

     label05:
        goto label11;

     label06:
        $r14 := @caughtexception;

        r2 = $r14;

     label07:
        $r16 = r0.<com.google.common.io.FileBackedOutputStream: com.google.common.io.FileBackedOutputStream$MemoryOutput memory>;

        if $r16 != null goto label08;

        $r24 = new com.google.common.io.FileBackedOutputStream$MemoryOutput;

        specialinvoke $r24.<com.google.common.io.FileBackedOutputStream$MemoryOutput: void <init>(com.google.common.io.FileBackedOutputStream$1)>(null);

        r0.<com.google.common.io.FileBackedOutputStream: com.google.common.io.FileBackedOutputStream$MemoryOutput memory> = $r24;

        goto label09;

     label08:
        $r15 = r0.<com.google.common.io.FileBackedOutputStream: com.google.common.io.FileBackedOutputStream$MemoryOutput memory>;

        virtualinvoke $r15.<com.google.common.io.FileBackedOutputStream$MemoryOutput: void reset()>();

     label09:
        $r18 = r0.<com.google.common.io.FileBackedOutputStream: com.google.common.io.FileBackedOutputStream$MemoryOutput memory>;

        r0.<com.google.common.io.FileBackedOutputStream: java.io.OutputStream out> = $r18;

        $r17 = r0.<com.google.common.io.FileBackedOutputStream: java.io.File file>;

        if $r17 == null goto label10;

        r3 = r0.<com.google.common.io.FileBackedOutputStream: java.io.File file>;

        r0.<com.google.common.io.FileBackedOutputStream: java.io.File file> = null;

        $z1 = virtualinvoke r3.<java.io.File: boolean delete()>();

        if $z1 != 0 goto label10;

        $r19 = new java.io.IOException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not delete: ");

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.io.IOException: void <init>(java.lang.String)>($r22);

        throw $r19;

     label10:
        throw r2;

     label11:
        return;

        catch java.lang.Throwable from label01 to label02 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
    }

    public synchronized void write(int) throws java.io.IOException
    {
        com.google.common.io.FileBackedOutputStream r0;
        int i0;
        java.io.OutputStream $r1;

        r0 := @this: com.google.common.io.FileBackedOutputStream;

        i0 := @parameter0: int;

        specialinvoke r0.<com.google.common.io.FileBackedOutputStream: void update(int)>(1);

        $r1 = r0.<com.google.common.io.FileBackedOutputStream: java.io.OutputStream out>;

        virtualinvoke $r1.<java.io.OutputStream: void write(int)>(i0);

        return;
    }

    public synchronized void write(byte[]) throws java.io.IOException
    {
        com.google.common.io.FileBackedOutputStream r0;
        byte[] r1;
        int $i0;

        r0 := @this: com.google.common.io.FileBackedOutputStream;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        virtualinvoke r0.<com.google.common.io.FileBackedOutputStream: void write(byte[],int,int)>(r1, 0, $i0);

        return;
    }

    public synchronized void write(byte[], int, int) throws java.io.IOException
    {
        com.google.common.io.FileBackedOutputStream r0;
        byte[] r1;
        int i0, i1;
        java.io.OutputStream $r2;

        r0 := @this: com.google.common.io.FileBackedOutputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<com.google.common.io.FileBackedOutputStream: void update(int)>(i1);

        $r2 = r0.<com.google.common.io.FileBackedOutputStream: java.io.OutputStream out>;

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[],int,int)>(r1, i0, i1);

        return;
    }

    public synchronized void close() throws java.io.IOException
    {
        com.google.common.io.FileBackedOutputStream r0;
        java.io.OutputStream $r1;

        r0 := @this: com.google.common.io.FileBackedOutputStream;

        $r1 = r0.<com.google.common.io.FileBackedOutputStream: java.io.OutputStream out>;

        virtualinvoke $r1.<java.io.OutputStream: void close()>();

        return;
    }

    public synchronized void flush() throws java.io.IOException
    {
        com.google.common.io.FileBackedOutputStream r0;
        java.io.OutputStream $r1;

        r0 := @this: com.google.common.io.FileBackedOutputStream;

        $r1 = r0.<com.google.common.io.FileBackedOutputStream: java.io.OutputStream out>;

        virtualinvoke $r1.<java.io.OutputStream: void flush()>();

        return;
    }

    private void update(int) throws java.io.IOException
    {
        com.google.common.io.FileBackedOutputStream r0;
        int i0, $i1, $i2, $i3, $i4;
        java.io.File r1, $r3;
        java.io.FileOutputStream r2, $r5;
        com.google.common.io.FileBackedOutputStream$MemoryOutput $r4, $r6, $r8;
        boolean $z0;
        byte[] $r7;

        r0 := @this: com.google.common.io.FileBackedOutputStream;

        i0 := @parameter0: int;

        $r3 = r0.<com.google.common.io.FileBackedOutputStream: java.io.File file>;

        if $r3 != null goto label2;

        $r4 = r0.<com.google.common.io.FileBackedOutputStream: com.google.common.io.FileBackedOutputStream$MemoryOutput memory>;

        $i1 = virtualinvoke $r4.<com.google.common.io.FileBackedOutputStream$MemoryOutput: int getCount()>();

        $i3 = $i1 + i0;

        $i2 = r0.<com.google.common.io.FileBackedOutputStream: int fileThreshold>;

        if $i3 <= $i2 goto label2;

        r1 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>("FileBackedOutputStream", null);

        $z0 = r0.<com.google.common.io.FileBackedOutputStream: boolean resetOnFinalize>;

        if $z0 == 0 goto label1;

        virtualinvoke r1.<java.io.File: void deleteOnExit()>();

     label1:
        $r5 = new java.io.FileOutputStream;

        specialinvoke $r5.<java.io.FileOutputStream: void <init>(java.io.File)>(r1);

        r2 = $r5;

        $r6 = r0.<com.google.common.io.FileBackedOutputStream: com.google.common.io.FileBackedOutputStream$MemoryOutput memory>;

        $r7 = virtualinvoke $r6.<com.google.common.io.FileBackedOutputStream$MemoryOutput: byte[] getBuffer()>();

        $r8 = r0.<com.google.common.io.FileBackedOutputStream: com.google.common.io.FileBackedOutputStream$MemoryOutput memory>;

        $i4 = virtualinvoke $r8.<com.google.common.io.FileBackedOutputStream$MemoryOutput: int getCount()>();

        virtualinvoke r2.<java.io.FileOutputStream: void write(byte[],int,int)>($r7, 0, $i4);

        virtualinvoke r2.<java.io.FileOutputStream: void flush()>();

        r0.<com.google.common.io.FileBackedOutputStream: java.io.OutputStream out> = r2;

        r0.<com.google.common.io.FileBackedOutputStream: java.io.File file> = r1;

        r0.<com.google.common.io.FileBackedOutputStream: com.google.common.io.FileBackedOutputStream$MemoryOutput memory> = null;

     label2:
        return;
    }

    static java.io.InputStream access$100(com.google.common.io.FileBackedOutputStream) throws java.io.IOException
    {
        com.google.common.io.FileBackedOutputStream r0;
        java.io.InputStream $r1;

        r0 := @parameter0: com.google.common.io.FileBackedOutputStream;

        $r1 = specialinvoke r0.<com.google.common.io.FileBackedOutputStream: java.io.InputStream openStream()>();

        return $r1;
    }
}
