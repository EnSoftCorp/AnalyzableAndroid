class com.google.common.util.concurrent.AbstractScheduledService$1$1 extends java.lang.Object implements java.lang.Runnable
{
    final com.google.common.util.concurrent.AbstractScheduledService$1 this$1;

    void <init>(com.google.common.util.concurrent.AbstractScheduledService$1)
    {
        com.google.common.util.concurrent.AbstractScheduledService$1$1 r0;
        com.google.common.util.concurrent.AbstractScheduledService$1 r1;

        r0 := @this: com.google.common.util.concurrent.AbstractScheduledService$1$1;

        r1 := @parameter0: com.google.common.util.concurrent.AbstractScheduledService$1;

        r0.<com.google.common.util.concurrent.AbstractScheduledService$1$1: com.google.common.util.concurrent.AbstractScheduledService$1 this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        com.google.common.util.concurrent.AbstractScheduledService$1$1 r0;
        java.lang.Throwable r1, r3, $r10, $r19;
        java.lang.Exception r2, $r13;
        com.google.common.util.concurrent.AbstractScheduledService$1 $r4, $r6, $r8, $r11, $r17, $r18;
        java.util.concurrent.locks.ReentrantLock $r5, $r9, $r12;
        com.google.common.util.concurrent.AbstractScheduledService $r7, $r20;
        java.util.logging.Logger $r14;
        java.util.logging.Level $r15;
        java.lang.RuntimeException $r16;

        r0 := @this: com.google.common.util.concurrent.AbstractScheduledService$1$1;

        $r4 = r0.<com.google.common.util.concurrent.AbstractScheduledService$1$1: com.google.common.util.concurrent.AbstractScheduledService$1 this$1>;

        $r5 = staticinvoke <com.google.common.util.concurrent.AbstractScheduledService$1: java.util.concurrent.locks.ReentrantLock access$100(com.google.common.util.concurrent.AbstractScheduledService$1)>($r4);

        virtualinvoke $r5.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label01:
        $r6 = r0.<com.google.common.util.concurrent.AbstractScheduledService$1$1: com.google.common.util.concurrent.AbstractScheduledService$1 this$1>;

        $r7 = $r6.<com.google.common.util.concurrent.AbstractScheduledService$1: com.google.common.util.concurrent.AbstractScheduledService this$0>;

        virtualinvoke $r7.<com.google.common.util.concurrent.AbstractScheduledService: void runOneIteration()>();

     label02:
        $r8 = r0.<com.google.common.util.concurrent.AbstractScheduledService$1$1: com.google.common.util.concurrent.AbstractScheduledService$1 this$1>;

        $r9 = staticinvoke <com.google.common.util.concurrent.AbstractScheduledService$1: java.util.concurrent.locks.ReentrantLock access$100(com.google.common.util.concurrent.AbstractScheduledService$1)>($r8);

        virtualinvoke $r9.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label10;

     label03:
        $r19 := @caughtexception;

        r1 = $r19;

     label04:
        $r18 = r0.<com.google.common.util.concurrent.AbstractScheduledService$1$1: com.google.common.util.concurrent.AbstractScheduledService$1 this$1>;

        $r20 = $r18.<com.google.common.util.concurrent.AbstractScheduledService$1: com.google.common.util.concurrent.AbstractScheduledService this$0>;

        virtualinvoke $r20.<com.google.common.util.concurrent.AbstractScheduledService: void shutDown()>();

     label05:
        goto label07;

     label06:
        $r13 := @caughtexception;

        r2 = $r13;

        $r14 = staticinvoke <com.google.common.util.concurrent.AbstractScheduledService: java.util.logging.Logger access$200()>();

        $r15 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        virtualinvoke $r14.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r15, "Error while attempting to shut down the service after failure.", r2);

     label07:
        $r17 = r0.<com.google.common.util.concurrent.AbstractScheduledService$1$1: com.google.common.util.concurrent.AbstractScheduledService$1 this$1>;

        virtualinvoke $r17.<com.google.common.util.concurrent.AbstractScheduledService$1: void notifyFailed(java.lang.Throwable)>(r1);

        $r16 = staticinvoke <com.google.common.base.Throwables: java.lang.RuntimeException propagate(java.lang.Throwable)>(r1);

        throw $r16;

     label08:
        $r10 := @caughtexception;

        r3 = $r10;

     label09:
        $r11 = r0.<com.google.common.util.concurrent.AbstractScheduledService$1$1: com.google.common.util.concurrent.AbstractScheduledService$1 this$1>;

        $r12 = staticinvoke <com.google.common.util.concurrent.AbstractScheduledService$1: java.util.concurrent.locks.ReentrantLock access$100(com.google.common.util.concurrent.AbstractScheduledService$1)>($r11);

        virtualinvoke $r12.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw r3;

     label10:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Exception from label04 to label05 with label06;
        catch java.lang.Throwable from label01 to label02 with label08;
        catch java.lang.Throwable from label03 to label09 with label08;
    }
}
