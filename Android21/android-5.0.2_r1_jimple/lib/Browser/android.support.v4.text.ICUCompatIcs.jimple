class android.support.v4.text.ICUCompatIcs extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static java.lang.reflect.Method sGetScriptMethod;
    private static java.lang.reflect.Method sAddLikelySubtagsMethod;

    void <init>()
    {
        android.support.v4.text.ICUCompatIcs r0;

        r0 := @this: android.support.v4.text.ICUCompatIcs;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String getScript(java.lang.String)
    {
        java.lang.String r0, $r6;
        java.lang.Object[] r1, $r3;
        java.lang.reflect.Method $r2, $r4;
        java.lang.Object $r5;
        java.lang.reflect.InvocationTargetException $r7, r10;
        java.lang.IllegalAccessException $r8, r9;

        r0 := @parameter0: java.lang.String;

     label1:
        $r2 = <android.support.v4.text.ICUCompatIcs: java.lang.reflect.Method sGetScriptMethod>;

        if $r2 == null goto label3;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r0;

        r1 = $r3;

        $r4 = <android.support.v4.text.ICUCompatIcs: java.lang.reflect.Method sGetScriptMethod>;

        $r5 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, r1);

        $r6 = (java.lang.String) $r5;

     label2:
        return $r6;

     label3:
        goto label6;

     label4:
        $r8 := @caughtexception;

        r9 = $r8;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>("ICUCompatIcs", r9);

        goto label6;

     label5:
        $r7 := @caughtexception;

        r10 = $r7;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>("ICUCompatIcs", r10);

     label6:
        return null;

        catch java.lang.IllegalAccessException from label1 to label2 with label4;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label5;
    }

    public static java.lang.String addLikelySubtags(java.lang.String)
    {
        java.lang.String r0, $r6;
        java.lang.Object[] r1, $r3;
        java.lang.reflect.Method $r2, $r4;
        java.lang.Object $r5;
        java.lang.IllegalAccessException $r7, r9;
        java.lang.reflect.InvocationTargetException $r8, r10;

        r0 := @parameter0: java.lang.String;

     label1:
        $r2 = <android.support.v4.text.ICUCompatIcs: java.lang.reflect.Method sAddLikelySubtagsMethod>;

        if $r2 == null goto label3;

        $r3 = newarray (java.lang.Object)[1];

        $r3[0] = r0;

        r1 = $r3;

        $r4 = <android.support.v4.text.ICUCompatIcs: java.lang.reflect.Method sAddLikelySubtagsMethod>;

        $r5 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, r1);

        $r6 = (java.lang.String) $r5;

     label2:
        return $r6;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        r9 = $r7;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>("ICUCompatIcs", r9);

        goto label6;

     label5:
        $r8 := @caughtexception;

        r10 = $r8;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>("ICUCompatIcs", r10);

     label6:
        return r0;

        catch java.lang.IllegalAccessException from label1 to label2 with label4;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label5;
    }

    static void <clinit>()
    {
        java.lang.Class r0;
        java.lang.Class[] $r1, $r3;
        java.lang.reflect.Method $r2, $r4;
        java.lang.Exception $r5, r6;

        <android.support.v4.text.ICUCompatIcs: java.lang.String TAG> = "ICUCompatIcs";

     label1:
        r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("libcore.icu.ICU");

        if r0 == null goto label2;

        $r1 = newarray (java.lang.Class)[1];

        $r1[0] = class "java/lang/String";

        $r2 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getScript", $r1);

        <android.support.v4.text.ICUCompatIcs: java.lang.reflect.Method sGetScriptMethod> = $r2;

        $r3 = newarray (java.lang.Class)[1];

        $r3[0] = class "java/lang/String";

        $r4 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("addLikelySubtags", $r3);

        <android.support.v4.text.ICUCompatIcs: java.lang.reflect.Method sAddLikelySubtagsMethod> = $r4;

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r6 = $r5;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>("ICUCompatIcs", r6);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
