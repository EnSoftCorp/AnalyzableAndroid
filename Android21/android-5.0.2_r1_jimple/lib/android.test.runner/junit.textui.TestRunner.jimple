public class junit.textui.TestRunner extends junit.runner.BaseTestRunner
{
    private junit.textui.ResultPrinter fPrinter;
    public static final int SUCCESS_EXIT;
    public static final int FAILURE_EXIT;
    public static final int EXCEPTION_EXIT;

    public void <init>()
    {
        junit.textui.TestRunner r0;
        java.io.PrintStream $r1;

        r0 := @this: junit.textui.TestRunner;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        specialinvoke r0.<junit.textui.TestRunner: void <init>(java.io.PrintStream)>($r1);

        return;
    }

    public void <init>(java.io.PrintStream)
    {
        junit.textui.TestRunner r0;
        java.io.PrintStream r1;
        junit.textui.ResultPrinter $r2;

        r0 := @this: junit.textui.TestRunner;

        r1 := @parameter0: java.io.PrintStream;

        $r2 = new junit.textui.ResultPrinter;

        specialinvoke $r2.<junit.textui.ResultPrinter: void <init>(java.io.PrintStream)>(r1);

        specialinvoke r0.<junit.textui.TestRunner: void <init>(junit.textui.ResultPrinter)>($r2);

        return;
    }

    public void <init>(junit.textui.ResultPrinter)
    {
        junit.textui.TestRunner r0;
        junit.textui.ResultPrinter r1;

        r0 := @this: junit.textui.TestRunner;

        r1 := @parameter0: junit.textui.ResultPrinter;

        specialinvoke r0.<junit.runner.BaseTestRunner: void <init>()>();

        r0.<junit.textui.TestRunner: junit.textui.ResultPrinter fPrinter> = r1;

        return;
    }

    public static void run(java.lang.Class)
    {
        java.lang.Class r0;
        junit.framework.TestSuite $r1;

        r0 := @parameter0: java.lang.Class;

        $r1 = new junit.framework.TestSuite;

        specialinvoke $r1.<junit.framework.TestSuite: void <init>(java.lang.Class)>(r0);

        staticinvoke <junit.textui.TestRunner: junit.framework.TestResult run(junit.framework.Test)>($r1);

        return;
    }

    public static junit.framework.TestResult run(junit.framework.Test)
    {
        junit.framework.Test r0;
        junit.textui.TestRunner r1, $r2;
        junit.framework.TestResult $r3;

        r0 := @parameter0: junit.framework.Test;

        $r2 = new junit.textui.TestRunner;

        specialinvoke $r2.<junit.textui.TestRunner: void <init>()>();

        r1 = $r2;

        $r3 = virtualinvoke r1.<junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test)>(r0);

        return $r3;
    }

    public static void runAndWait(junit.framework.Test)
    {
        junit.framework.Test r0;
        junit.textui.TestRunner r1, $r2;

        r0 := @parameter0: junit.framework.Test;

        $r2 = new junit.textui.TestRunner;

        specialinvoke $r2.<junit.textui.TestRunner: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>(r0, 1);

        return;
    }

    public void testFailed(int, junit.framework.Test, java.lang.Throwable)
    {
        junit.textui.TestRunner r0;
        int i0;
        junit.framework.Test r1;
        java.lang.Throwable r2;

        r0 := @this: junit.textui.TestRunner;

        i0 := @parameter0: int;

        r1 := @parameter1: junit.framework.Test;

        r2 := @parameter2: java.lang.Throwable;

        return;
    }

    public void testStarted(java.lang.String)
    {
        junit.textui.TestRunner r0;
        java.lang.String r1;

        r0 := @this: junit.textui.TestRunner;

        r1 := @parameter0: java.lang.String;

        return;
    }

    public void testEnded(java.lang.String)
    {
        junit.textui.TestRunner r0;
        java.lang.String r1;

        r0 := @this: junit.textui.TestRunner;

        r1 := @parameter0: java.lang.String;

        return;
    }

    protected junit.framework.TestResult createTestResult()
    {
        junit.textui.TestRunner r0;
        junit.framework.TestResult $r1;

        r0 := @this: junit.textui.TestRunner;

        $r1 = new junit.framework.TestResult;

        specialinvoke $r1.<junit.framework.TestResult: void <init>()>();

        return $r1;
    }

    public junit.framework.TestResult doRun(junit.framework.Test)
    {
        junit.textui.TestRunner r0;
        junit.framework.Test r1;
        junit.framework.TestResult $r2;

        r0 := @this: junit.textui.TestRunner;

        r1 := @parameter0: junit.framework.Test;

        $r2 = virtualinvoke r0.<junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>(r1, 0);

        return $r2;
    }

    public junit.framework.TestResult doRun(junit.framework.Test, boolean)
    {
        junit.textui.TestRunner r0;
        junit.framework.Test r1;
        boolean z0;
        junit.framework.TestResult r2;
        long l0, l1, l2;
        junit.textui.ResultPrinter $r3, $r4;

        r0 := @this: junit.textui.TestRunner;

        r1 := @parameter0: junit.framework.Test;

        z0 := @parameter1: boolean;

        r2 = virtualinvoke r0.<junit.textui.TestRunner: junit.framework.TestResult createTestResult()>();

        $r3 = r0.<junit.textui.TestRunner: junit.textui.ResultPrinter fPrinter>;

        virtualinvoke r2.<junit.framework.TestResult: void addListener(junit.framework.TestListener)>($r3);

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        interfaceinvoke r1.<junit.framework.Test: void run(junit.framework.TestResult)>(r2);

        l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l2 = l1 - l0;

        $r4 = r0.<junit.textui.TestRunner: junit.textui.ResultPrinter fPrinter>;

        virtualinvoke $r4.<junit.textui.ResultPrinter: void print(junit.framework.TestResult,long)>(r2, l2);

        virtualinvoke r0.<junit.textui.TestRunner: void pause(boolean)>(z0);

        return r2;
    }

    protected void pause(boolean)
    {
        junit.textui.TestRunner r0;
        boolean z0;
        junit.textui.ResultPrinter $r2;
        java.io.InputStream $r3;
        java.lang.Exception $r4;

        r0 := @this: junit.textui.TestRunner;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label1;

        return;

     label1:
        $r2 = r0.<junit.textui.TestRunner: junit.textui.ResultPrinter fPrinter>;

        virtualinvoke $r2.<junit.textui.ResultPrinter: void printWaitPrompt()>();

     label2:
        $r3 = <java.lang.System: java.io.InputStream in>;

        virtualinvoke $r3.<java.io.InputStream: int read()>();

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

     label5:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;
        junit.textui.TestRunner r1, $r3;
        junit.framework.TestResult r2;
        boolean $z0;
        java.lang.Exception $r4, r7;
        java.io.PrintStream $r5;
        java.lang.String $r6;

        r0 := @parameter0: java.lang.String[];

        $r3 = new junit.textui.TestRunner;

        specialinvoke $r3.<junit.textui.TestRunner: void <init>()>();

        r1 = $r3;

     label1:
        r2 = virtualinvoke r1.<junit.textui.TestRunner: junit.framework.TestResult start(java.lang.String[])>(r0);

        $z0 = virtualinvoke r2.<junit.framework.TestResult: boolean wasSuccessful()>();

        if $z0 != 0 goto label2;

        staticinvoke <java.lang.System: void exit(int)>(1);

     label2:
        staticinvoke <java.lang.System: void exit(int)>(0);

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

        r7 = $r4;

        $r5 = <java.lang.System: java.io.PrintStream err>;

        $r6 = virtualinvoke r7.<java.lang.Exception: java.lang.String getMessage()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r6);

        staticinvoke <java.lang.System: void exit(int)>(2);

     label5:
        return;

        catch java.lang.Exception from label1 to label3 with label4;
    }

    public junit.framework.TestResult start(java.lang.String[]) throws java.lang.Exception
    {
        junit.textui.TestRunner r0;
        java.lang.String[] r1;
        java.lang.String r2, r3, r4, $r8, $r9, $r10, $r11, $r16, $r17, $r19, $r25;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        int i0, i1, $i2, $i3;
        junit.framework.TestResult $r5, $r6;
        java.lang.Exception $r7, $r22, $r23, r27;
        java.lang.StringBuilder $r12, $r13, $r15, $r18, $r20, $r21, $r24;
        java.io.PrintStream $r14;
        junit.framework.Test r26;

        r0 := @this: junit.textui.TestRunner;

        r1 := @parameter0: java.lang.String[];

        r2 = "";

        r3 = "";

        z0 = 0;

        i0 = 0;

     label01:
        $i2 = lengthof r1;

        if i0 >= $i2 goto label07;

        $r8 = r1[i0];

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("-wait");

        if $z3 == 0 goto label02;

        z0 = 1;

        goto label06;

     label02:
        $r9 = r1[i0];

        $z4 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("-c");

        if $z4 == 0 goto label03;

        i0 = i0 + 1;

        $r19 = r1[i0];

        r2 = virtualinvoke r0.<junit.textui.TestRunner: java.lang.String extractClassName(java.lang.String)>($r19);

        goto label06;

     label03:
        $r10 = r1[i0];

        $z5 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("-m");

        if $z5 == 0 goto label04;

        i0 = i0 + 1;

        r4 = r1[i0];

        i1 = virtualinvoke r4.<java.lang.String: int lastIndexOf(int)>(46);

        r2 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

        $i3 = i1 + 1;

        r3 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int)>($i3);

        goto label06;

     label04:
        $r11 = r1[i0];

        $z6 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("-v");

        if $z6 == 0 goto label05;

        $r14 = <java.lang.System: java.io.PrintStream err>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("JUnit ");

        $r16 = staticinvoke <junit.runner.Version: java.lang.String id()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" by Kent Beck and Erich Gamma");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r17);

        goto label06;

     label05:
        r2 = r1[i0];

     label06:
        i0 = i0 + 1;

        goto label01;

     label07:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z1 == 0 goto label08;

        $r7 = new java.lang.Exception;

        specialinvoke $r7.<java.lang.Exception: void <init>(java.lang.String)>("Usage: TestRunner [-wait] testCaseName, where name is the name of the TestCase class");

        throw $r7;

     label08:
        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z2 != 0 goto label10;

        $r6 = virtualinvoke r0.<junit.textui.TestRunner: junit.framework.TestResult runSingleMethod(java.lang.String,java.lang.String,boolean)>(r2, r3, z0);

     label09:
        return $r6;

     label10:
        r26 = virtualinvoke r0.<junit.textui.TestRunner: junit.framework.Test getTest(java.lang.String)>(r2);

        $r5 = virtualinvoke r0.<junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>(r26, z0);

     label11:
        return $r5;

     label12:
        $r22 := @caughtexception;

        r27 = $r22;

        $r23 = new java.lang.Exception;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not create and run test suite: ");

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r27);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.Exception: void <init>(java.lang.String)>($r25);

        throw $r23;

        catch java.lang.Exception from label08 to label09 with label12;
        catch java.lang.Exception from label10 to label11 with label12;
    }

    protected junit.framework.TestResult runSingleMethod(java.lang.String, java.lang.String, boolean) throws java.lang.Exception
    {
        junit.textui.TestRunner r0;
        java.lang.String r1, r2;
        boolean z0;
        java.lang.Class r3, $r5;
        junit.framework.Test r4;
        junit.framework.TestResult $r6;

        r0 := @this: junit.textui.TestRunner;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r5 = virtualinvoke r0.<junit.textui.TestRunner: java.lang.Class loadSuiteClass(java.lang.String)>(r1);

        r3 = virtualinvoke $r5.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "junit/framework/TestCase");

        r4 = staticinvoke <junit.framework.TestSuite: junit.framework.Test createTest(java.lang.Class,java.lang.String)>(r3, r2);

        $r6 = virtualinvoke r0.<junit.textui.TestRunner: junit.framework.TestResult doRun(junit.framework.Test,boolean)>(r4, z0);

        return $r6;
    }

    protected void runFailed(java.lang.String)
    {
        junit.textui.TestRunner r0;
        java.lang.String r1;
        java.io.PrintStream $r2;

        r0 := @this: junit.textui.TestRunner;

        r1 := @parameter0: java.lang.String;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>(r1);

        staticinvoke <java.lang.System: void exit(int)>(1);

        return;
    }

    public void setPrinter(junit.textui.ResultPrinter)
    {
        junit.textui.TestRunner r0;
        junit.textui.ResultPrinter r1;

        r0 := @this: junit.textui.TestRunner;

        r1 := @parameter0: junit.textui.ResultPrinter;

        r0.<junit.textui.TestRunner: junit.textui.ResultPrinter fPrinter> = r1;

        return;
    }

    public static void <clinit>()
    {
        <junit.textui.TestRunner: int EXCEPTION_EXIT> = 2;

        <junit.textui.TestRunner: int FAILURE_EXIT> = 1;

        <junit.textui.TestRunner: int SUCCESS_EXIT> = 0;

        return;
    }
}
