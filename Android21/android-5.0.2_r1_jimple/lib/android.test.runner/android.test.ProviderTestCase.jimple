public abstract class android.test.ProviderTestCase extends android.test.InstrumentationTestCase
{
    java.lang.Class mProviderClass;
    java.lang.String mProviderAuthority;
    private android.test.IsolatedContext mProviderContext;
    private android.test.mock.MockContentResolver mResolver;
    private android.content.ContentProvider mProvider;

    public void <init>(java.lang.Class, java.lang.String)
    {
        android.test.ProviderTestCase r0;
        java.lang.Class r1;
        java.lang.String r2;

        r0 := @this: android.test.ProviderTestCase;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<android.test.InstrumentationTestCase: void <init>()>();

        r0.<android.test.ProviderTestCase: java.lang.Class mProviderClass> = r1;

        r0.<android.test.ProviderTestCase: java.lang.String mProviderAuthority> = r2;

        return;
    }

    public android.content.ContentProvider getProvider()
    {
        android.test.ProviderTestCase r0;
        android.content.ContentProvider $r1;

        r0 := @this: android.test.ProviderTestCase;

        $r1 = r0.<android.test.ProviderTestCase: android.content.ContentProvider mProvider>;

        return $r1;
    }

    protected void setUp() throws java.lang.Exception
    {
        android.test.ProviderTestCase r0;
        android.test.RenamingDelegatingContext r2, $r4;
        android.test.mock.MockContentResolver $r3, $r9, $r14;
        android.test.mock.MockContext $r5;
        android.app.Instrumentation $r6;
        android.content.Context $r7;
        android.test.IsolatedContext $r8, $r12;
        java.lang.String $r10, $r15;
        java.lang.Class $r11;
        android.content.ContentProvider $r13, $r16;

        r0 := @this: android.test.ProviderTestCase;

        specialinvoke r0.<android.test.InstrumentationTestCase: void setUp()>();

        $r3 = new android.test.mock.MockContentResolver;

        specialinvoke $r3.<android.test.mock.MockContentResolver: void <init>()>();

        r0.<android.test.ProviderTestCase: android.test.mock.MockContentResolver mResolver> = $r3;

        $r4 = new android.test.RenamingDelegatingContext;

        $r5 = new android.test.mock.MockContext;

        specialinvoke $r5.<android.test.mock.MockContext: void <init>()>();

        $r6 = virtualinvoke r0.<android.test.ProviderTestCase: android.app.Instrumentation getInstrumentation()>();

        $r7 = virtualinvoke $r6.<android.app.Instrumentation: android.content.Context getTargetContext()>();

        specialinvoke $r4.<android.test.RenamingDelegatingContext: void <init>(android.content.Context,android.content.Context,java.lang.String)>($r5, $r7, "test.");

        r2 = $r4;

        $r8 = new android.test.IsolatedContext;

        $r9 = r0.<android.test.ProviderTestCase: android.test.mock.MockContentResolver mResolver>;

        specialinvoke $r8.<android.test.IsolatedContext: void <init>(android.content.ContentResolver,android.content.Context)>($r9, r2);

        r0.<android.test.ProviderTestCase: android.test.IsolatedContext mProviderContext> = $r8;

        $r12 = r0.<android.test.ProviderTestCase: android.test.IsolatedContext mProviderContext>;

        $r11 = r0.<android.test.ProviderTestCase: java.lang.Class mProviderClass>;

        $r10 = r0.<android.test.ProviderTestCase: java.lang.String mProviderAuthority>;

        $r13 = staticinvoke <android.test.ProviderTestCase2: android.content.ContentProvider createProviderForTest(android.content.Context,java.lang.Class,java.lang.String)>($r12, $r11, $r10);

        r0.<android.test.ProviderTestCase: android.content.ContentProvider mProvider> = $r13;

        $r14 = r0.<android.test.ProviderTestCase: android.test.mock.MockContentResolver mResolver>;

        $r15 = r0.<android.test.ProviderTestCase: java.lang.String mProviderAuthority>;

        $r16 = virtualinvoke r0.<android.test.ProviderTestCase: android.content.ContentProvider getProvider()>();

        virtualinvoke $r14.<android.test.mock.MockContentResolver: void addProvider(java.lang.String,android.content.ContentProvider)>($r15, $r16);

        return;
    }

    protected void tearDown() throws java.lang.Exception
    {
        android.test.ProviderTestCase r0;
        android.content.ContentProvider $r1;

        r0 := @this: android.test.ProviderTestCase;

        $r1 = r0.<android.test.ProviderTestCase: android.content.ContentProvider mProvider>;

        virtualinvoke $r1.<android.content.ContentProvider: void shutdown()>();

        specialinvoke r0.<android.test.InstrumentationTestCase: void tearDown()>();

        return;
    }

    public android.test.mock.MockContentResolver getMockContentResolver()
    {
        android.test.ProviderTestCase r0;
        android.test.mock.MockContentResolver $r1;

        r0 := @this: android.test.ProviderTestCase;

        $r1 = r0.<android.test.ProviderTestCase: android.test.mock.MockContentResolver mResolver>;

        return $r1;
    }

    public android.test.IsolatedContext getMockContext()
    {
        android.test.ProviderTestCase r0;
        android.test.IsolatedContext $r1;

        r0 := @this: android.test.ProviderTestCase;

        $r1 = r0.<android.test.ProviderTestCase: android.test.IsolatedContext mProviderContext>;

        return $r1;
    }

    public static android.content.ContentResolver newResolverWithContentProviderFromSql(android.content.Context, java.lang.Class, java.lang.String, java.lang.String, int, java.lang.String) throws java.lang.IllegalAccessException, java.lang.InstantiationException
    {
        android.content.Context r0;
        java.lang.Class r1;
        java.lang.String r2, r3, r4;
        int i0;
        android.test.mock.MockContentResolver r6, $r10;
        android.test.RenamingDelegatingContext r7, $r11;
        android.test.IsolatedContext r8, $r13;
        android.content.ContentProvider r9;
        android.test.mock.MockContext $r12;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        r4 := @parameter5: java.lang.String;

        $r10 = new android.test.mock.MockContentResolver;

        specialinvoke $r10.<android.test.mock.MockContentResolver: void <init>()>();

        r6 = $r10;

        $r11 = new android.test.RenamingDelegatingContext;

        $r12 = new android.test.mock.MockContext;

        specialinvoke $r12.<android.test.mock.MockContext: void <init>()>();

        specialinvoke $r11.<android.test.RenamingDelegatingContext: void <init>(android.content.Context,android.content.Context,java.lang.String)>($r12, r0, "test.");

        r7 = $r11;

        $r13 = new android.test.IsolatedContext;

        specialinvoke $r13.<android.test.IsolatedContext: void <init>(android.content.ContentResolver,android.content.Context)>(r6, r7);

        r8 = $r13;

        staticinvoke <android.database.DatabaseUtils: void createDbFromSqlStatements(android.content.Context,java.lang.String,int,java.lang.String)>(r8, r3, i0, r4);

        r9 = staticinvoke <android.test.ProviderTestCase2: android.content.ContentProvider createProviderForTest(android.content.Context,java.lang.Class,java.lang.String)>(r8, r1, r2);

        virtualinvoke r6.<android.test.mock.MockContentResolver: void addProvider(java.lang.String,android.content.ContentProvider)>(r2, r9);

        return r6;
    }
}
