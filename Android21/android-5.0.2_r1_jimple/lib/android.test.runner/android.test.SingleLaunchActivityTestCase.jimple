public abstract class android.test.SingleLaunchActivityTestCase extends android.test.InstrumentationTestCase
{
    java.lang.String mPackage;
    java.lang.Class mActivityClass;
    private static int sTestCaseCounter;
    private static boolean sActivityLaunchedFlag;
    private static android.app.Activity sActivity;

    public void <init>(java.lang.String, java.lang.Class)
    {
        android.test.SingleLaunchActivityTestCase r0;
        java.lang.String r1;
        java.lang.Class r2;
        int $i0, $i1;

        r0 := @this: android.test.SingleLaunchActivityTestCase;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        specialinvoke r0.<android.test.InstrumentationTestCase: void <init>()>();

        r0.<android.test.SingleLaunchActivityTestCase: java.lang.String mPackage> = r1;

        r0.<android.test.SingleLaunchActivityTestCase: java.lang.Class mActivityClass> = r2;

        $i0 = <android.test.SingleLaunchActivityTestCase: int sTestCaseCounter>;

        $i1 = $i0 + 1;

        <android.test.SingleLaunchActivityTestCase: int sTestCaseCounter> = $i1;

        return;
    }

    public android.app.Activity getActivity()
    {
        android.test.SingleLaunchActivityTestCase r0;
        android.app.Activity $r1;

        r0 := @this: android.test.SingleLaunchActivityTestCase;

        $r1 = <android.test.SingleLaunchActivityTestCase: android.app.Activity sActivity>;

        return $r1;
    }

    protected void setUp() throws java.lang.Exception
    {
        android.test.SingleLaunchActivityTestCase r0;
        boolean $z0;
        android.app.Instrumentation $r1;
        java.lang.Class $r2;
        java.lang.String $r3;
        android.app.Activity $r4;

        r0 := @this: android.test.SingleLaunchActivityTestCase;

        specialinvoke r0.<android.test.InstrumentationTestCase: void setUp()>();

        $z0 = <android.test.SingleLaunchActivityTestCase: boolean sActivityLaunchedFlag>;

        if $z0 != 0 goto label1;

        $r1 = virtualinvoke r0.<android.test.SingleLaunchActivityTestCase: android.app.Instrumentation getInstrumentation()>();

        virtualinvoke $r1.<android.app.Instrumentation: void setInTouchMode(boolean)>(0);

        $r3 = r0.<android.test.SingleLaunchActivityTestCase: java.lang.String mPackage>;

        $r2 = r0.<android.test.SingleLaunchActivityTestCase: java.lang.Class mActivityClass>;

        $r4 = virtualinvoke r0.<android.test.SingleLaunchActivityTestCase: android.app.Activity launchActivity(java.lang.String,java.lang.Class,android.os.Bundle)>($r3, $r2, null);

        <android.test.SingleLaunchActivityTestCase: android.app.Activity sActivity> = $r4;

        <android.test.SingleLaunchActivityTestCase: boolean sActivityLaunchedFlag> = 1;

     label1:
        return;
    }

    protected void tearDown() throws java.lang.Exception
    {
        android.test.SingleLaunchActivityTestCase r0;
        int $i0, $i1, $i2;
        android.app.Activity $r1;

        r0 := @this: android.test.SingleLaunchActivityTestCase;

        $i0 = <android.test.SingleLaunchActivityTestCase: int sTestCaseCounter>;

        $i1 = $i0 - 1;

        <android.test.SingleLaunchActivityTestCase: int sTestCaseCounter> = $i1;

        $i2 = <android.test.SingleLaunchActivityTestCase: int sTestCaseCounter>;

        if $i2 != 0 goto label1;

        $r1 = <android.test.SingleLaunchActivityTestCase: android.app.Activity sActivity>;

        virtualinvoke $r1.<android.app.Activity: void finish()>();

     label1:
        specialinvoke r0.<android.test.InstrumentationTestCase: void tearDown()>();

        return;
    }

    public void testActivityTestCaseSetUpProperly() throws java.lang.Exception
    {
        android.test.SingleLaunchActivityTestCase r0;
        android.app.Activity $r1;

        r0 := @this: android.test.SingleLaunchActivityTestCase;

        $r1 = <android.test.SingleLaunchActivityTestCase: android.app.Activity sActivity>;

        staticinvoke <android.test.SingleLaunchActivityTestCase: void assertNotNull(java.lang.String,java.lang.Object)>("activity should be launched successfully", $r1);

        return;
    }

    static void <clinit>()
    {
        <android.test.SingleLaunchActivityTestCase: int sTestCaseCounter> = 0;

        <android.test.SingleLaunchActivityTestCase: boolean sActivityLaunchedFlag> = 0;

        return;
    }
}
