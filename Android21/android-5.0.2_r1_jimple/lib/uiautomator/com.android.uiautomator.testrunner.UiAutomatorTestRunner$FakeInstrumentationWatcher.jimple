class com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher extends java.lang.Object implements android.app.IInstrumentationWatcher
{
    private final boolean mRawMode;
    final com.android.uiautomator.testrunner.UiAutomatorTestRunner this$0;

    private void <init>(com.android.uiautomator.testrunner.UiAutomatorTestRunner)
    {
        com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher r0;
        com.android.uiautomator.testrunner.UiAutomatorTestRunner r1;

        r0 := @this: com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher;

        r1 := @parameter0: com.android.uiautomator.testrunner.UiAutomatorTestRunner;

        r0.<com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher: com.android.uiautomator.testrunner.UiAutomatorTestRunner this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher: boolean mRawMode> = 1;

        return;
    }

    public android.os.IBinder asBinder()
    {
        com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher r0;
        java.lang.UnsupportedOperationException $r1;

        r0 := @this: com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher;

        $r1 = new java.lang.UnsupportedOperationException;

        specialinvoke $r1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("I\'m just a fake!");

        throw $r1;
    }

    public void instrumentationStatus(android.content.ComponentName, int, android.os.Bundle)
    {
        com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher r0, r3;
        android.content.ComponentName r1;
        int i0;
        android.os.Bundle r2;
        java.util.Iterator r4;
        java.lang.String r5, $r12, $r21;
        java.lang.Throwable r6, $r23;
        java.lang.StringBuilder $r8, $r10, $r11, $r16, $r17, $r18, $r20, $r22;
        java.io.PrintStream $r9, $r15;
        java.util.Set $r13;
        java.lang.Object $r14, $r19;
        boolean $z0;

        r0 := @this: com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        r3 = r0;

        entermonitor r0;

     label1:
        goto label2;

     label2:
        if r2 == null goto label4;

        $r13 = virtualinvoke r2.<android.os.Bundle: java.util.Set keySet()>();

        r4 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r14;

        $r15 = <java.lang.System: java.io.PrintStream out>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INSTRUMENTATION_STATUS: ");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r19 = virtualinvoke r2.<android.os.Bundle: java.lang.Object get(java.lang.String)>(r5);

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r21);

        goto label3;

     label4:
        $r9 = <java.lang.System: java.io.PrintStream out>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INSTRUMENTATION_STATUS_CODE: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r12);

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r3;

     label5:
        goto label8;

     label6:
        $r23 := @caughtexception;

        r6 = $r23;

        exitmonitor r3;

     label7:
        throw r6;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void instrumentationFinished(android.content.ComponentName, int, android.os.Bundle)
    {
        com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher r0, r3;
        android.content.ComponentName r1;
        int i0;
        android.os.Bundle r2;
        java.util.Iterator r4;
        java.lang.String r5, $r12, $r21;
        java.lang.Throwable r6, $r23;
        java.lang.StringBuilder $r8, $r10, $r11, $r16, $r17, $r18, $r20, $r22;
        java.io.PrintStream $r9, $r15;
        java.util.Set $r13;
        java.lang.Object $r14, $r19;
        boolean $z0;

        r0 := @this: com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher;

        r1 := @parameter0: android.content.ComponentName;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.Bundle;

        r3 = r0;

        entermonitor r0;

     label1:
        goto label2;

     label2:
        if r2 == null goto label4;

        $r13 = virtualinvoke r2.<android.os.Bundle: java.util.Set keySet()>();

        r4 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r14 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r14;

        $r15 = <java.lang.System: java.io.PrintStream out>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INSTRUMENTATION_RESULT: ");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r19 = virtualinvoke r2.<android.os.Bundle: java.lang.Object get(java.lang.String)>(r5);

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r21);

        goto label3;

     label4:
        $r9 = <java.lang.System: java.io.PrintStream out>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("INSTRUMENTATION_CODE: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r12);

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r3;

     label5:
        goto label8;

     label6:
        $r23 := @caughtexception;

        r6 = $r23;

        exitmonitor r3;

     label7:
        throw r6;

     label8:
        return;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    void <init>(com.android.uiautomator.testrunner.UiAutomatorTestRunner, com.android.uiautomator.testrunner.UiAutomatorTestRunner$1)
    {
        com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher r0;
        com.android.uiautomator.testrunner.UiAutomatorTestRunner r1;
        com.android.uiautomator.testrunner.UiAutomatorTestRunner$1 r2;

        r0 := @this: com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher;

        r1 := @parameter0: com.android.uiautomator.testrunner.UiAutomatorTestRunner;

        r2 := @parameter1: com.android.uiautomator.testrunner.UiAutomatorTestRunner$1;

        specialinvoke r0.<com.android.uiautomator.testrunner.UiAutomatorTestRunner$FakeInstrumentationWatcher: void <init>(com.android.uiautomator.testrunner.UiAutomatorTestRunner)>(r1);

        return;
    }
}
