class com.android.uiautomator.core.InteractionController extends java.lang.Object
{
    private static final java.lang.String LOG_TAG;
    private static final boolean DEBUG;
    private final android.view.KeyCharacterMap mKeyCharacterMap;
    private final com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge;
    private static final long REGULAR_CLICK_LENGTH;
    private long mDownTime;
    private static final int MOTION_EVENT_INJECTION_DELAY_MILLIS;

    public void <init>(com.android.uiautomator.core.UiAutomatorBridge)
    {
        com.android.uiautomator.core.InteractionController r0;
        com.android.uiautomator.core.UiAutomatorBridge r1;
        android.view.KeyCharacterMap $r2;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        r1 := @parameter0: com.android.uiautomator.core.UiAutomatorBridge;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <android.view.KeyCharacterMap: android.view.KeyCharacterMap load(int)>(-1);

        r0.<com.android.uiautomator.core.InteractionController: android.view.KeyCharacterMap mKeyCharacterMap> = $r2;

        r0.<com.android.uiautomator.core.InteractionController: com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge> = r1;

        return;
    }

    private android.view.accessibility.AccessibilityEvent runAndWaitForEvents(java.lang.Runnable, android.app.UiAutomation$AccessibilityEventFilter, long)
    {
        com.android.uiautomator.core.InteractionController r0;
        java.lang.Runnable r1;
        android.app.UiAutomation$AccessibilityEventFilter r2;
        long l0;
        com.android.uiautomator.core.UiAutomatorBridge $r4;
        android.view.accessibility.AccessibilityEvent $r5;
        java.util.concurrent.TimeoutException $r6;
        java.lang.String $r7, $r9;
        java.lang.Exception $r8, r10;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        r1 := @parameter0: java.lang.Runnable;

        r2 := @parameter1: android.app.UiAutomation$AccessibilityEventFilter;

        l0 := @parameter2: long;

     label1:
        $r4 = r0.<com.android.uiautomator.core.InteractionController: com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge>;

        $r5 = virtualinvoke $r4.<com.android.uiautomator.core.UiAutomatorBridge: android.view.accessibility.AccessibilityEvent executeCommandAndWaitForAccessibilityEvent(java.lang.Runnable,android.app.UiAutomation$AccessibilityEventFilter,long)>(r1, r2, l0);

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        $r7 = <com.android.uiautomator.core.InteractionController: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>($r7, "runAndwaitForEvent timedout waiting for events");

        return null;

     label4:
        $r8 := @caughtexception;

        r10 = $r8;

        $r9 = <com.android.uiautomator.core.InteractionController: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>($r9, "exception from executeCommandAndWaitForAccessibilityEvent", r10);

        return null;

        catch java.util.concurrent.TimeoutException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    public boolean sendKeyAndWaitForEvent(int, int, int, long)
    {
        com.android.uiautomator.core.InteractionController r0;
        int i0, i1, i2;
        long l3;
        com.android.uiautomator.core.InteractionController$1 r1, $r2;
        com.android.uiautomator.core.InteractionController$WaitForAnyEventPredicate $r3;
        android.view.accessibility.AccessibilityEvent $r4;
        boolean $z0;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        l3 := @parameter3: long;

        $r2 = new com.android.uiautomator.core.InteractionController$1;

        specialinvoke $r2.<com.android.uiautomator.core.InteractionController$1: void <init>(com.android.uiautomator.core.InteractionController,int,int)>(r0, i0, i1);

        r1 = $r2;

        $r3 = new com.android.uiautomator.core.InteractionController$WaitForAnyEventPredicate;

        specialinvoke $r3.<com.android.uiautomator.core.InteractionController$WaitForAnyEventPredicate: void <init>(com.android.uiautomator.core.InteractionController,int)>(r0, i2);

        $r4 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: android.view.accessibility.AccessibilityEvent runAndWaitForEvents(java.lang.Runnable,android.app.UiAutomation$AccessibilityEventFilter,long)>(r1, $r3, l3);

        if $r4 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean clickNoSync(int, int)
    {
        com.android.uiautomator.core.InteractionController r0;
        int i0, i1;
        java.lang.StringBuilder $r1, $r3, $r4, $r5, $r6, $r7;
        java.lang.String $r2, $r8;
        boolean $z0, $z1;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = <com.android.uiautomator.core.InteractionController: java.lang.String LOG_TAG>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("clickNoSync (");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r2, $r8);

        $z0 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean touchDown(int,int)>(i0, i1);

        if $z0 == 0 goto label1;

        staticinvoke <android.os.SystemClock: void sleep(long)>(100L);

        $z1 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean touchUp(int,int)>(i0, i1);

        if $z1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean clickAndSync(int, int, long)
    {
        com.android.uiautomator.core.InteractionController r0;
        int i0, i1;
        long l2;
        java.lang.String r1, $r5;
        java.lang.Object[] $r2;
        java.lang.Integer $r3, $r4;
        java.lang.Runnable $r6;
        android.view.accessibility.AccessibilityEvent $r7;
        com.android.uiautomator.core.InteractionController$WaitForAnyEventPredicate $r8;
        boolean $z0;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        $r2 = newarray (java.lang.Object)[2];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2[0] = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r2[1] = $r4;

        r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("clickAndSync(%d, %d)", $r2);

        $r5 = <com.android.uiautomator.core.InteractionController: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r5, r1);

        $r6 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: java.lang.Runnable clickRunnable(int,int)>(i0, i1);

        $r8 = new com.android.uiautomator.core.InteractionController$WaitForAnyEventPredicate;

        specialinvoke $r8.<com.android.uiautomator.core.InteractionController$WaitForAnyEventPredicate: void <init>(com.android.uiautomator.core.InteractionController,int)>(r0, 2052);

        $r7 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: android.view.accessibility.AccessibilityEvent runAndWaitForEvents(java.lang.Runnable,android.app.UiAutomation$AccessibilityEventFilter,long)>($r6, $r8, l2);

        if $r7 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean clickAndWaitForNewWindow(int, int, long)
    {
        com.android.uiautomator.core.InteractionController r0;
        int i0, i1;
        long l2;
        java.lang.String r1, $r5;
        java.lang.Object[] $r2;
        java.lang.Integer $r3, $r4;
        java.lang.Runnable $r6;
        android.view.accessibility.AccessibilityEvent $r7;
        com.android.uiautomator.core.InteractionController$WaitForAllEventPredicate $r8;
        boolean $z0;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        $r2 = newarray (java.lang.Object)[2];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2[0] = $r3;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r2[1] = $r4;

        r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("clickAndWaitForNewWindow(%d, %d)", $r2);

        $r5 = <com.android.uiautomator.core.InteractionController: java.lang.String LOG_TAG>;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r5, r1);

        $r6 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: java.lang.Runnable clickRunnable(int,int)>(i0, i1);

        $r8 = new com.android.uiautomator.core.InteractionController$WaitForAllEventPredicate;

        specialinvoke $r8.<com.android.uiautomator.core.InteractionController$WaitForAllEventPredicate: void <init>(com.android.uiautomator.core.InteractionController,int)>(r0, 2080);

        $r7 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: android.view.accessibility.AccessibilityEvent runAndWaitForEvents(java.lang.Runnable,android.app.UiAutomation$AccessibilityEventFilter,long)>($r6, $r8, l2);

        if $r7 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private java.lang.Runnable clickRunnable(int, int)
    {
        com.android.uiautomator.core.InteractionController r0;
        int i0, i1;
        com.android.uiautomator.core.InteractionController$2 $r1;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new com.android.uiautomator.core.InteractionController$2;

        specialinvoke $r1.<com.android.uiautomator.core.InteractionController$2: void <init>(com.android.uiautomator.core.InteractionController,int,int)>(r0, i0, i1);

        return $r1;
    }

    public boolean longTapNoSync(int, int)
    {
        com.android.uiautomator.core.InteractionController r0;
        int i0, i1;
        boolean $z0, $z1, $z2;
        com.android.uiautomator.core.UiAutomatorBridge $r1;
        long $l2;
        java.lang.StringBuilder $r2, $r4, $r5, $r6, $r7, $r8;
        java.lang.String $r3, $r9;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = <com.android.uiautomator.core.InteractionController: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r3 = <com.android.uiautomator.core.InteractionController: java.lang.String LOG_TAG>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("longTapNoSync (");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r3, $r9);

     label1:
        $z1 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean touchDown(int,int)>(i0, i1);

        if $z1 == 0 goto label2;

        $r1 = r0.<com.android.uiautomator.core.InteractionController: com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge>;

        $l2 = virtualinvoke $r1.<com.android.uiautomator.core.UiAutomatorBridge: long getSystemLongPressTime()>();

        staticinvoke <android.os.SystemClock: void sleep(long)>($l2);

        $z2 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean touchUp(int,int)>(i0, i1);

        if $z2 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    private boolean touchDown(int, int)
    {
        com.android.uiautomator.core.InteractionController r0;
        int i0, i1;
        android.view.MotionEvent r1;
        boolean $z0, $z1;
        long $l2, $l3, $l4;
        float $f0, $f1;
        java.lang.StringBuilder $r2, $r4, $r5, $r6, $r7, $r9;
        java.lang.String $r3, $r8;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = <com.android.uiautomator.core.InteractionController: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r3 = <com.android.uiautomator.core.InteractionController: java.lang.String LOG_TAG>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("touchDown (");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r3, $r8);

     label1:
        $l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<com.android.uiautomator.core.InteractionController: long mDownTime> = $l2;

        $l4 = r0.<com.android.uiautomator.core.InteractionController: long mDownTime>;

        $l3 = r0.<com.android.uiautomator.core.InteractionController: long mDownTime>;

        $f1 = (float) i0;

        $f0 = (float) i1;

        r1 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>($l4, $l3, 0, $f1, $f0, 1);

        virtualinvoke r1.<android.view.MotionEvent: void setSource(int)>(4098);

        $z1 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean injectEventSync(android.view.InputEvent)>(r1);

        return $z1;
    }

    private boolean touchUp(int, int)
    {
        com.android.uiautomator.core.InteractionController r0;
        int i0, i1;
        long l2, $l3;
        android.view.MotionEvent r1;
        boolean $z0, $z1;
        float $f0, $f1;
        java.lang.StringBuilder $r2, $r4, $r5, $r6, $r7, $r8;
        java.lang.String $r3, $r9;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = <com.android.uiautomator.core.InteractionController: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r3 = <com.android.uiautomator.core.InteractionController: java.lang.String LOG_TAG>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("touchUp (");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r3, $r9);

     label1:
        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l3 = r0.<com.android.uiautomator.core.InteractionController: long mDownTime>;

        $f1 = (float) i0;

        $f0 = (float) i1;

        r1 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>($l3, l2, 1, $f1, $f0, 1);

        virtualinvoke r1.<android.view.MotionEvent: void setSource(int)>(4098);

        r0.<com.android.uiautomator.core.InteractionController: long mDownTime> = 0L;

        $z1 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean injectEventSync(android.view.InputEvent)>(r1);

        return $z1;
    }

    private boolean touchMove(int, int)
    {
        com.android.uiautomator.core.InteractionController r0;
        int i0, i1;
        long l2, $l3;
        android.view.MotionEvent r1;
        boolean $z0, $z1;
        float $f0, $f1;
        java.lang.StringBuilder $r2, $r4, $r5, $r6, $r7, $r8;
        java.lang.String $r3, $r9;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = <com.android.uiautomator.core.InteractionController: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r3 = <com.android.uiautomator.core.InteractionController: java.lang.String LOG_TAG>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("touchMove (");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r3, $r9);

     label1:
        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l3 = r0.<com.android.uiautomator.core.InteractionController: long mDownTime>;

        $f1 = (float) i0;

        $f0 = (float) i1;

        r1 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>($l3, l2, 2, $f1, $f0, 1);

        virtualinvoke r1.<android.view.MotionEvent: void setSource(int)>(4098);

        $z1 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean injectEventSync(android.view.InputEvent)>(r1);

        return $z1;
    }

    public boolean scrollSwipe(int, int, int, int, int)
    {
        com.android.uiautomator.core.InteractionController r0;
        int i0, i1, i2, i3, i4, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i16, $i18, $i19, $i20, $i22, $i23, $i24;
        com.android.uiautomator.core.InteractionController$3 r1, $r18;
        java.util.ArrayList r2, $r20;
        android.view.accessibility.AccessibilityEvent r3;
        boolean z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r17, $r24, $r25, $r26, $r28, $r30, $r31, $r33, $r35, $r36;
        java.lang.String $r5, $r16, $r23, $r27, $r29, $r32, $r34, $r37;
        com.android.uiautomator.core.InteractionController$EventCollectingPredicate $r19;
        long $l6;
        com.android.uiautomator.core.Configurator $r21;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        $r5 = <com.android.uiautomator.core.InteractionController: java.lang.String LOG_TAG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("scrollSwipe (");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r5, $r16);

        $r18 = new com.android.uiautomator.core.InteractionController$3;

        specialinvoke $r18.<com.android.uiautomator.core.InteractionController$3: void <init>(com.android.uiautomator.core.InteractionController,int,int,int,int,int)>(r0, i0, i1, i2, i3, i4);

        r1 = $r18;

        $r20 = new java.util.ArrayList;

        specialinvoke $r20.<java.util.ArrayList: void <init>()>();

        r2 = $r20;

        $r19 = new com.android.uiautomator.core.InteractionController$EventCollectingPredicate;

        specialinvoke $r19.<com.android.uiautomator.core.InteractionController$EventCollectingPredicate: void <init>(com.android.uiautomator.core.InteractionController,int,java.util.List)>(r0, 4096, r2);

        $r21 = staticinvoke <com.android.uiautomator.core.Configurator: com.android.uiautomator.core.Configurator getInstance()>();

        $l6 = virtualinvoke $r21.<com.android.uiautomator.core.Configurator: long getScrollAcknowledgmentTimeout()>();

        specialinvoke r0.<com.android.uiautomator.core.InteractionController: android.view.accessibility.AccessibilityEvent runAndWaitForEvents(java.lang.Runnable,android.app.UiAutomation$AccessibilityEventFilter,long)>(r1, $r19, $l6);

        r3 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: android.view.accessibility.AccessibilityEvent getLastMatchingEvent(java.util.List,int)>(r2, 4096);

        if r3 != null goto label01;

        specialinvoke r0.<com.android.uiautomator.core.InteractionController: void recycleAccessibilityEvents(java.util.List)>(r2);

        return 0;

     label01:
        z0 = 0;

        $i8 = virtualinvoke r3.<android.view.accessibility.AccessibilityEvent: int getFromIndex()>();

        if $i8 == -1 goto label05;

        $i20 = virtualinvoke r3.<android.view.accessibility.AccessibilityEvent: int getToIndex()>();

        if $i20 == -1 goto label05;

        $i19 = virtualinvoke r3.<android.view.accessibility.AccessibilityEvent: int getItemCount()>();

        if $i19 == -1 goto label05;

        $i18 = virtualinvoke r3.<android.view.accessibility.AccessibilityEvent: int getFromIndex()>();

        if $i18 == 0 goto label02;

        $i22 = virtualinvoke r3.<android.view.accessibility.AccessibilityEvent: int getItemCount()>();

        $i23 = $i22 - 1;

        $i24 = virtualinvoke r3.<android.view.accessibility.AccessibilityEvent: int getToIndex()>();

        if $i23 != $i24 goto label03;

     label02:
        $z4 = 1;

        goto label04;

     label03:
        $z4 = 0;

     label04:
        z0 = $z4;

        $r37 = <com.android.uiautomator.core.InteractionController: java.lang.String LOG_TAG>;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("scrollSwipe reached scroll end: ");

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r37, $r34);

        goto label13;

     label05:
        $i9 = virtualinvoke r3.<android.view.accessibility.AccessibilityEvent: int getScrollX()>();

        if $i9 == -1 goto label13;

        $i7 = virtualinvoke r3.<android.view.accessibility.AccessibilityEvent: int getScrollY()>();

        if $i7 == -1 goto label13;

        if i0 != i2 goto label09;

        $i13 = virtualinvoke r3.<android.view.accessibility.AccessibilityEvent: int getScrollY()>();

        if $i13 == 0 goto label06;

        $i16 = virtualinvoke r3.<android.view.accessibility.AccessibilityEvent: int getScrollY()>();

        $i15 = virtualinvoke r3.<android.view.accessibility.AccessibilityEvent: int getMaxScrollY()>();

        if $i16 != $i15 goto label07;

     label06:
        $z3 = 1;

        goto label08;

     label07:
        $z3 = 0;

     label08:
        z0 = $z3;

        $r32 = <com.android.uiautomator.core.InteractionController: java.lang.String LOG_TAG>;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Vertical scrollSwipe reached scroll end: ");

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r32, $r29);

        goto label13;

     label09:
        if i1 != i3 goto label13;

        $i10 = virtualinvoke r3.<android.view.accessibility.AccessibilityEvent: int getScrollX()>();

        if $i10 == 0 goto label10;

        $i12 = virtualinvoke r3.<android.view.accessibility.AccessibilityEvent: int getScrollX()>();

        $i14 = virtualinvoke r3.<android.view.accessibility.AccessibilityEvent: int getMaxScrollX()>();

        if $i12 != $i14 goto label11;

     label10:
        $z2 = 1;

        goto label12;

     label11:
        $z2 = 0;

     label12:
        z0 = $z2;

        $r23 = <com.android.uiautomator.core.InteractionController: java.lang.String LOG_TAG>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Horizontal scrollSwipe reached scroll end: ");

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r23, $r27);

     label13:
        specialinvoke r0.<com.android.uiautomator.core.InteractionController: void recycleAccessibilityEvents(java.util.List)>(r2);

        if z0 != 0 goto label14;

        $z1 = 1;

        goto label15;

     label14:
        $z1 = 0;

     label15:
        return $z1;
    }

    private android.view.accessibility.AccessibilityEvent getLastMatchingEvent(java.util.List, int)
    {
        com.android.uiautomator.core.InteractionController r0;
        java.util.List r1;
        int i0, i1, $i2, $i3;
        android.view.accessibility.AccessibilityEvent r2;
        java.lang.Object $r3;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        r1 := @parameter0: java.util.List;

        i0 := @parameter1: int;

        i1 = interfaceinvoke r1.<java.util.List: int size()>();

     label1:
        if i1 <= 0 goto label3;

        $i2 = i1 - 1;

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>($i2);

        r2 = (android.view.accessibility.AccessibilityEvent) $r3;

        $i3 = virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: int getEventType()>();

        if $i3 != i0 goto label2;

        return r2;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return null;
    }

    private void recycleAccessibilityEvents(java.util.List)
    {
        com.android.uiautomator.core.InteractionController r0;
        java.util.List r1;
        java.util.Iterator r2;
        android.view.accessibility.AccessibilityEvent r3;
        boolean $z0;
        java.lang.Object $r4;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        r1 := @parameter0: java.util.List;

        r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.view.accessibility.AccessibilityEvent) $r4;

        virtualinvoke r3.<android.view.accessibility.AccessibilityEvent: void recycle()>();

        goto label1;

     label2:
        interfaceinvoke r1.<java.util.List: void clear()>();

        return;
    }

    public boolean swipe(int, int, int, int, int)
    {
        com.android.uiautomator.core.InteractionController r0;
        int i0, i1, i2, i3, i4;
        boolean $z0;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        $z0 = virtualinvoke r0.<com.android.uiautomator.core.InteractionController: boolean swipe(int,int,int,int,int,boolean)>(i0, i1, i2, i3, i4, 0);

        return $z0;
    }

    public boolean swipe(int, int, int, int, int, boolean)
    {
        com.android.uiautomator.core.InteractionController r0;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12;
        boolean z0, $z2, $z3, z4, z5;
        double $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, d10, d11;
        com.android.uiautomator.core.UiAutomatorBridge $r1;
        long $l13;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        z0 := @parameter5: boolean;

        i5 = i4;

        if i5 != 0 goto label1;

        i5 = 1;

     label1:
        $i7 = i2 - i0;

        $d3 = (double) $i7;

        $d2 = (double) i5;

        d10 = $d3 / $d2;

        $i8 = i3 - i1;

        $d4 = (double) $i8;

        $d5 = (double) i5;

        d11 = $d4 / $d5;

        z4 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean touchDown(int,int)>(i0, i1);

        if z0 == 0 goto label2;

        $r1 = r0.<com.android.uiautomator.core.InteractionController: com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge>;

        $l13 = virtualinvoke $r1.<com.android.uiautomator.core.UiAutomatorBridge: long getSystemLongPressTime()>();

        staticinvoke <android.os.SystemClock: void sleep(long)>($l13);

     label2:
        i6 = 1;

     label3:
        if i6 >= i5 goto label5;

        $d7 = (double) i6;

        $d6 = d10 * $d7;

        $i9 = (int) $d6;

        $i11 = i0 + $i9;

        $d8 = (double) i6;

        $d9 = d11 * $d8;

        $i10 = (int) $d9;

        $i12 = i1 + $i10;

        $z3 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean touchMove(int,int)>($i11, $i12);

        z4 = z4 & $z3;

        if z4 != 0 goto label4;

        goto label5;

     label4:
        staticinvoke <android.os.SystemClock: void sleep(long)>(5L);

        i6 = i6 + 1;

        goto label3;

     label5:
        if z0 == 0 goto label6;

        staticinvoke <android.os.SystemClock: void sleep(long)>(100L);

     label6:
        $z2 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean touchUp(int,int)>(i2, i3);

        z5 = z4 & $z2;

        return z5;
    }

    public boolean swipe(android.graphics.Point[], int)
    {
        com.android.uiautomator.core.InteractionController r0;
        android.graphics.Point[] r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29;
        android.graphics.Point $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        boolean $z1, $z2, z3, z4;
        double $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, d10, d11;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        r1 := @parameter0: android.graphics.Point[];

        i0 := @parameter1: int;

        i1 = i0;

        if i0 != 0 goto label1;

        i0 = 1;

     label1:
        $i4 = lengthof r1;

        if $i4 != 0 goto label2;

        return 0;

     label2:
        $r2 = r1[0];

        $i6 = $r2.<android.graphics.Point: int x>;

        $r3 = r1[0];

        $i5 = $r3.<android.graphics.Point: int y>;

        z3 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean touchDown(int,int)>($i6, $i5);

        i2 = 0;

     label3:
        $i7 = lengthof r1;

        if i2 >= $i7 goto label7;

        $i16 = i2 + 1;

        $i14 = lengthof r1;

        if $i16 >= $i14 goto label6;

        $i15 = i2 + 1;

        $r7 = r1[$i15];

        $i19 = $r7.<android.graphics.Point: int x>;

        $r6 = r1[i2];

        $i18 = $r6.<android.graphics.Point: int x>;

        $i17 = $i19 - $i18;

        $d3 = (double) $i17;

        $d2 = (double) i0;

        d10 = $d3 / $d2;

        $i20 = i2 + 1;

        $r8 = r1[$i20];

        $i23 = $r8.<android.graphics.Point: int y>;

        $r9 = r1[i2];

        $i22 = $r9.<android.graphics.Point: int y>;

        $i21 = $i23 - $i22;

        $d7 = (double) $i21;

        $d4 = (double) i0;

        d11 = $d7 / $d4;

        i3 = 1;

     label4:
        if i3 >= i1 goto label6;

        $r10 = r1[i2];

        $i24 = $r10.<android.graphics.Point: int x>;

        $d5 = (double) i3;

        $d6 = d10 * $d5;

        $i25 = (int) $d6;

        $i29 = $i24 + $i25;

        $r11 = r1[i2];

        $i27 = $r11.<android.graphics.Point: int y>;

        $d8 = (double) i3;

        $d9 = d11 * $d8;

        $i28 = (int) $d9;

        $i26 = $i27 + $i28;

        $z2 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean touchMove(int,int)>($i29, $i26);

        z3 = z3 & $z2;

        if z3 != 0 goto label5;

        goto label6;

     label5:
        staticinvoke <android.os.SystemClock: void sleep(long)>(5L);

        i3 = i3 + 1;

        goto label4;

     label6:
        i2 = i2 + 1;

        goto label3;

     label7:
        $i9 = lengthof r1;

        $i8 = $i9 - 1;

        $r4 = r1[$i8];

        $i12 = $r4.<android.graphics.Point: int x>;

        $i10 = lengthof r1;

        $i11 = $i10 - 1;

        $r5 = r1[$i11];

        $i13 = $r5.<android.graphics.Point: int y>;

        $z1 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean touchUp(int,int)>($i12, $i13);

        z4 = z3 & $z1;

        return z4;
    }

    public boolean sendText(java.lang.String)
    {
        com.android.uiautomator.core.InteractionController r0;
        java.lang.String r1, $r11, $r14;
        android.view.KeyEvent[] r2, r3;
        long l0, $l3;
        int i1, i2;
        android.view.KeyEvent r4, r5;
        boolean $z0, $z1;
        android.view.KeyCharacterMap $r6;
        char[] $r7;
        com.android.uiautomator.core.Configurator $r8;
        java.lang.StringBuilder $r9, $r10, $r12, $r13;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        r1 := @parameter0: java.lang.String;

        $z0 = <com.android.uiautomator.core.InteractionController: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r11 = <com.android.uiautomator.core.InteractionController: java.lang.String LOG_TAG>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendText (");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r11, $r14);

     label1:
        $r6 = r0.<com.android.uiautomator.core.InteractionController: android.view.KeyCharacterMap mKeyCharacterMap>;

        $r7 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();

        r2 = virtualinvoke $r6.<android.view.KeyCharacterMap: android.view.KeyEvent[] getEvents(char[])>($r7);

        if r2 == null goto label4;

        $r8 = staticinvoke <com.android.uiautomator.core.Configurator: com.android.uiautomator.core.Configurator getInstance()>();

        l0 = virtualinvoke $r8.<com.android.uiautomator.core.Configurator: long getKeyInjectionDelay()>();

        r3 = r2;

        i1 = lengthof r3;

        i2 = 0;

     label2:
        if i2 >= i1 goto label4;

        r4 = r3[i2];

        $l3 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r5 = staticinvoke <android.view.KeyEvent: android.view.KeyEvent changeTimeRepeat(android.view.KeyEvent,long,int)>(r4, $l3, 0);

        $z1 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean injectEventSync(android.view.InputEvent)>(r5);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        staticinvoke <android.os.SystemClock: void sleep(long)>(l0);

        i2 = i2 + 1;

        goto label2;

     label4:
        return 1;
    }

    public boolean sendKey(int, int)
    {
        com.android.uiautomator.core.InteractionController r0;
        int i0, i1;
        long l2;
        android.view.KeyEvent r1, r2, $r3, $r4;
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder $r5, $r7, $r8, $r9, $r10, $r11;
        java.lang.String $r6, $r12;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = <com.android.uiautomator.core.InteractionController: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r6 = <com.android.uiautomator.core.InteractionController: java.lang.String LOG_TAG>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendKey (");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>($r6, $r12);

     label1:
        l2 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $r3 = new android.view.KeyEvent;

        specialinvoke $r3.<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int,int,int)>(l2, l2, 0, i0, 0, i1, -1, 0, 0, 257);

        r1 = $r3;

        $z1 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean injectEventSync(android.view.InputEvent)>(r1);

        if $z1 == 0 goto label2;

        $r4 = new android.view.KeyEvent;

        specialinvoke $r4.<android.view.KeyEvent: void <init>(long,long,int,int,int,int,int,int,int,int)>(l2, l2, 1, i0, 0, i1, -1, 0, 0, 257);

        r2 = $r4;

        $z2 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean injectEventSync(android.view.InputEvent)>(r2);

        if $z2 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public void setRotationRight()
    {
        com.android.uiautomator.core.InteractionController r0;
        com.android.uiautomator.core.UiAutomatorBridge $r1;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        $r1 = r0.<com.android.uiautomator.core.InteractionController: com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge>;

        virtualinvoke $r1.<com.android.uiautomator.core.UiAutomatorBridge: boolean setRotation(int)>(3);

        return;
    }

    public void setRotationLeft()
    {
        com.android.uiautomator.core.InteractionController r0;
        com.android.uiautomator.core.UiAutomatorBridge $r1;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        $r1 = r0.<com.android.uiautomator.core.InteractionController: com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge>;

        virtualinvoke $r1.<com.android.uiautomator.core.UiAutomatorBridge: boolean setRotation(int)>(1);

        return;
    }

    public void setRotationNatural()
    {
        com.android.uiautomator.core.InteractionController r0;
        com.android.uiautomator.core.UiAutomatorBridge $r1;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        $r1 = r0.<com.android.uiautomator.core.InteractionController: com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge>;

        virtualinvoke $r1.<com.android.uiautomator.core.UiAutomatorBridge: boolean setRotation(int)>(0);

        return;
    }

    public void freezeRotation()
    {
        com.android.uiautomator.core.InteractionController r0;
        com.android.uiautomator.core.UiAutomatorBridge $r1;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        $r1 = r0.<com.android.uiautomator.core.InteractionController: com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge>;

        virtualinvoke $r1.<com.android.uiautomator.core.UiAutomatorBridge: boolean setRotation(int)>(-1);

        return;
    }

    public void unfreezeRotation()
    {
        com.android.uiautomator.core.InteractionController r0;
        com.android.uiautomator.core.UiAutomatorBridge $r1;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        $r1 = r0.<com.android.uiautomator.core.InteractionController: com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge>;

        virtualinvoke $r1.<com.android.uiautomator.core.UiAutomatorBridge: boolean setRotation(int)>(-2);

        return;
    }

    public boolean wakeDevice() throws android.os.RemoteException
    {
        com.android.uiautomator.core.InteractionController r0;
        boolean $z0;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        $z0 = virtualinvoke r0.<com.android.uiautomator.core.InteractionController: boolean isScreenOn()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<com.android.uiautomator.core.InteractionController: boolean sendKey(int,int)>(26, 0);

        return 1;

     label1:
        return 0;
    }

    public boolean sleepDevice() throws android.os.RemoteException
    {
        com.android.uiautomator.core.InteractionController r0;
        boolean $z0;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        $z0 = virtualinvoke r0.<com.android.uiautomator.core.InteractionController: boolean isScreenOn()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<com.android.uiautomator.core.InteractionController: boolean sendKey(int,int)>(26, 0);

        return 1;

     label1:
        return 0;
    }

    public boolean isScreenOn() throws android.os.RemoteException
    {
        com.android.uiautomator.core.InteractionController r0;
        com.android.uiautomator.core.UiAutomatorBridge $r1;
        boolean $z0;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        $r1 = r0.<com.android.uiautomator.core.InteractionController: com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge>;

        $z0 = virtualinvoke $r1.<com.android.uiautomator.core.UiAutomatorBridge: boolean isScreenOn()>();

        return $z0;
    }

    private boolean injectEventSync(android.view.InputEvent)
    {
        com.android.uiautomator.core.InteractionController r0;
        android.view.InputEvent r1;
        com.android.uiautomator.core.UiAutomatorBridge $r2;
        boolean $z0;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        r1 := @parameter0: android.view.InputEvent;

        $r2 = r0.<com.android.uiautomator.core.InteractionController: com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge>;

        $z0 = virtualinvoke $r2.<com.android.uiautomator.core.UiAutomatorBridge: boolean injectInputEvent(android.view.InputEvent,boolean)>(r1, 1);

        return $z0;
    }

    private int getPointerAction(int, int)
    {
        com.android.uiautomator.core.InteractionController r0;
        int i0, i1, $i2, $i3;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i2 = i1 << 8;

        $i3 = i0 + $i2;

        return $i3;
    }

    public transient boolean performMultiPointerGesture(android.view.MotionEvent$PointerCoords[][])
    {
        com.android.uiautomator.core.InteractionController r0;
        android.view.MotionEvent$PointerCoords[][] r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, z6, z7;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i18, $i19, $i20, $i21, $i23, $i24, $i25, $i26, $i27, $i29, $i30, $i31, $i32, i34, i35, i36;
        android.view.MotionEvent$PointerCoords[] r2, $r11, $r12, $r14, $r15, $r16, $r18, $r20, $r23, $r25;
        android.view.MotionEvent$PointerProperties r3, $r22;
        android.view.MotionEvent r4, r27, r28, r29, r30;
        long $l10, $l16, $l17, $l22, $l28, l33;
        java.lang.String $r5, $r10;
        java.lang.StringBuilder $r6, $r8, $r9;
        android.view.MotionEvent$PointerCoords $r7, $r13, $r17, $r19, $r24;
        float $f0;
        java.lang.IllegalArgumentException $r21;
        android.view.MotionEvent$PointerProperties[] r26;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        r1 := @parameter0: android.view.MotionEvent$PointerCoords[][];

        z0 = 1;

        $i5 = lengthof r1;

        if $i5 >= 2 goto label01;

        $r21 = new java.lang.IllegalArgumentException;

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must provide coordinates for at least 2 pointers");

        throw $r21;

     label01:
        i0 = 0;

        i1 = 0;

     label02:
        $i6 = lengthof r1;

        if i1 >= $i6 goto label05;

        $r25 = r1[i1];

        $i31 = lengthof $r25;

        if i0 >= $i31 goto label03;

        $r20 = r1[i1];

        $i32 = lengthof $r20;

        goto label04;

     label03:
        $i32 = i0;

     label04:
        i0 = $i32;

        i1 = i1 + 1;

        goto label02;

     label05:
        $i7 = lengthof r1;

        r26 = newarray (android.view.MotionEvent$PointerProperties)[$i7];

        $i8 = lengthof r1;

        r2 = newarray (android.view.MotionEvent$PointerCoords)[$i8];

        i2 = 0;

     label06:
        $i9 = lengthof r1;

        if i2 >= $i9 goto label07;

        $r22 = new android.view.MotionEvent$PointerProperties;

        specialinvoke $r22.<android.view.MotionEvent$PointerProperties: void <init>()>();

        r3 = $r22;

        r3.<android.view.MotionEvent$PointerProperties: int id> = i2;

        r3.<android.view.MotionEvent$PointerProperties: int toolType> = 1;

        r26[i2] = r3;

        $r23 = r1[i2];

        $r24 = $r23[0];

        r2[i2] = $r24;

        i2 = i2 + 1;

        goto label06;

     label07:
        l33 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $l10 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r4 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[],int,int,float,float,int,int,int,int)>(l33, $l10, 0, 1, r26, r2, 0, 0, 1.0F, 1.0F, 0, 0, 4098, 0);

        $z1 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean injectEventSync(android.view.InputEvent)>(r4);

        z6 = z0 & $z1;

        i3 = 1;

     label08:
        $i12 = lengthof r1;

        if i3 >= $i12 goto label09;

        $l28 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $i30 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: int getPointerAction(int,int)>(5, i3);

        $i29 = i3 + 1;

        r27 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[],int,int,float,float,int,int,int,int)>(l33, $l28, $i30, $i29, r26, r2, 0, 0, 1.0F, 1.0F, 0, 0, 4098, 0);

        $z5 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean injectEventSync(android.view.InputEvent)>(r27);

        z6 = z6 & $z5;

        i3 = i3 + 1;

        goto label08;

     label09:
        i34 = 1;

     label10:
        $i11 = i0 - 1;

        if i34 >= $i11 goto label15;

        i4 = 0;

     label11:
        $i24 = lengthof r1;

        if i4 >= $i24 goto label14;

        $r14 = r1[i4];

        $i25 = lengthof $r14;

        if $i25 <= i34 goto label12;

        $r18 = r1[i4];

        $r17 = $r18[i34];

        r2[i4] = $r17;

        goto label13;

     label12:
        $r15 = r1[i4];

        $r16 = r1[i4];

        $i27 = lengthof $r16;

        $i26 = $i27 - 1;

        $r19 = $r15[$i26];

        r2[i4] = $r19;

     label13:
        i4 = i4 + 1;

        goto label11;

     label14:
        $l22 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $i23 = lengthof r1;

        r28 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[],int,int,float,float,int,int,int,int)>(l33, $l22, 2, $i23, r26, r2, 0, 0, 1.0F, 1.0F, 0, 0, 4098, 0);

        $z4 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean injectEventSync(android.view.InputEvent)>(r28);

        z6 = z6 & $z4;

        staticinvoke <android.os.SystemClock: void sleep(long)>(5L);

        i34 = i34 + 1;

        goto label10;

     label15:
        i35 = 0;

     label16:
        $i14 = lengthof r1;

        if i35 >= $i14 goto label17;

        $r11 = r1[i35];

        $r12 = r1[i35];

        $i21 = lengthof $r12;

        $i20 = $i21 - 1;

        $r13 = $r11[$i20];

        r2[i35] = $r13;

        i35 = i35 + 1;

        goto label16;

     label17:
        i36 = 1;

     label18:
        $i13 = lengthof r1;

        if i36 >= $i13 goto label19;

        $l16 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        $i18 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: int getPointerAction(int,int)>(6, i36);

        $i19 = i36 + 1;

        r29 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[],int,int,float,float,int,int,int,int)>(l33, $l16, $i18, $i19, r26, r2, 0, 0, 1.0F, 1.0F, 0, 0, 4098, 0);

        $z3 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean injectEventSync(android.view.InputEvent)>(r29);

        z6 = z6 & $z3;

        i36 = i36 + 1;

        goto label18;

     label19:
        $r5 = <com.android.uiautomator.core.InteractionController: java.lang.String LOG_TAG>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("x ");

        $r7 = r2[0];

        $f0 = $r7.<android.view.MotionEvent$PointerCoords: float x>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>($r5, $r10);

        $l17 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r30 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,int,android.view.MotionEvent$PointerProperties[],android.view.MotionEvent$PointerCoords[],int,int,float,float,int,int,int,int)>(l33, $l17, 1, 1, r26, r2, 0, 0, 1.0F, 1.0F, 0, 0, 4098, 0);

        $z2 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean injectEventSync(android.view.InputEvent)>(r30);

        z7 = z6 & $z2;

        return z7;
    }

    public boolean toggleRecentApps()
    {
        com.android.uiautomator.core.InteractionController r0;
        com.android.uiautomator.core.UiAutomatorBridge $r1;
        boolean $z0;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        $r1 = r0.<com.android.uiautomator.core.InteractionController: com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge>;

        $z0 = virtualinvoke $r1.<com.android.uiautomator.core.UiAutomatorBridge: boolean performGlobalAction(int)>(3);

        return $z0;
    }

    public boolean openNotification()
    {
        com.android.uiautomator.core.InteractionController r0;
        com.android.uiautomator.core.UiAutomatorBridge $r1;
        boolean $z0;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        $r1 = r0.<com.android.uiautomator.core.InteractionController: com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge>;

        $z0 = virtualinvoke $r1.<com.android.uiautomator.core.UiAutomatorBridge: boolean performGlobalAction(int)>(4);

        return $z0;
    }

    public boolean openQuickSettings()
    {
        com.android.uiautomator.core.InteractionController r0;
        com.android.uiautomator.core.UiAutomatorBridge $r1;
        boolean $z0;

        r0 := @this: com.android.uiautomator.core.InteractionController;

        $r1 = r0.<com.android.uiautomator.core.InteractionController: com.android.uiautomator.core.UiAutomatorBridge mUiAutomatorBridge>;

        $z0 = virtualinvoke $r1.<com.android.uiautomator.core.UiAutomatorBridge: boolean performGlobalAction(int)>(5);

        return $z0;
    }

    static boolean access$000(com.android.uiautomator.core.InteractionController, android.view.InputEvent)
    {
        com.android.uiautomator.core.InteractionController r0;
        android.view.InputEvent r1;
        boolean $z0;

        r0 := @parameter0: com.android.uiautomator.core.InteractionController;

        r1 := @parameter1: android.view.InputEvent;

        $z0 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean injectEventSync(android.view.InputEvent)>(r1);

        return $z0;
    }

    static boolean access$100(com.android.uiautomator.core.InteractionController, int, int)
    {
        com.android.uiautomator.core.InteractionController r0;
        int i0, i1;
        boolean $z0;

        r0 := @parameter0: com.android.uiautomator.core.InteractionController;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean touchDown(int,int)>(i0, i1);

        return $z0;
    }

    static boolean access$200(com.android.uiautomator.core.InteractionController, int, int)
    {
        com.android.uiautomator.core.InteractionController r0;
        int i0, i1;
        boolean $z0;

        r0 := @parameter0: com.android.uiautomator.core.InteractionController;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = specialinvoke r0.<com.android.uiautomator.core.InteractionController: boolean touchUp(int,int)>(i0, i1);

        return $z0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1, $r2;
        boolean $z0;

        <com.android.uiautomator.core.InteractionController: int MOTION_EVENT_INJECTION_DELAY_MILLIS> = 5;

        <com.android.uiautomator.core.InteractionController: long REGULAR_CLICK_LENGTH> = 100L;

        $r0 = class "com/android/uiautomator/core/InteractionController";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getSimpleName()>();

        <com.android.uiautomator.core.InteractionController: java.lang.String LOG_TAG> = $r1;

        $r2 = <com.android.uiautomator.core.InteractionController: java.lang.String LOG_TAG>;

        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>($r2, 3);

        <com.android.uiautomator.core.InteractionController: boolean DEBUG> = $z0;

        return;
    }
}
