public abstract class com.android.wallpaper.RenderScriptScene extends java.lang.Object
{
    protected int mWidth;
    protected int mHeight;
    protected boolean mPreview;
    protected android.content.res.Resources mResources;
    protected android.renderscript.RenderScriptGL mRS;
    protected android.renderscript.ScriptC mScript;

    public void <init>(int, int)
    {
        com.android.wallpaper.RenderScriptScene r0;
        int i0, i1;

        r0 := @this: com.android.wallpaper.RenderScriptScene;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.wallpaper.RenderScriptScene: int mWidth> = i0;

        r0.<com.android.wallpaper.RenderScriptScene: int mHeight> = i1;

        return;
    }

    public void init(android.renderscript.RenderScriptGL, android.content.res.Resources, boolean)
    {
        com.android.wallpaper.RenderScriptScene r0;
        android.renderscript.RenderScriptGL r1;
        android.content.res.Resources r2;
        boolean z0;
        android.renderscript.ScriptC $r3;

        r0 := @this: com.android.wallpaper.RenderScriptScene;

        r1 := @parameter0: android.renderscript.RenderScriptGL;

        r2 := @parameter1: android.content.res.Resources;

        z0 := @parameter2: boolean;

        r0.<com.android.wallpaper.RenderScriptScene: android.renderscript.RenderScriptGL mRS> = r1;

        r0.<com.android.wallpaper.RenderScriptScene: android.content.res.Resources mResources> = r2;

        r0.<com.android.wallpaper.RenderScriptScene: boolean mPreview> = z0;

        $r3 = virtualinvoke r0.<com.android.wallpaper.RenderScriptScene: android.renderscript.ScriptC createScript()>();

        r0.<com.android.wallpaper.RenderScriptScene: android.renderscript.ScriptC mScript> = $r3;

        return;
    }

    public boolean isPreview()
    {
        com.android.wallpaper.RenderScriptScene r0;
        boolean $z0;

        r0 := @this: com.android.wallpaper.RenderScriptScene;

        $z0 = r0.<com.android.wallpaper.RenderScriptScene: boolean mPreview>;

        return $z0;
    }

    public int getWidth()
    {
        com.android.wallpaper.RenderScriptScene r0;
        int $i0;

        r0 := @this: com.android.wallpaper.RenderScriptScene;

        $i0 = r0.<com.android.wallpaper.RenderScriptScene: int mWidth>;

        return $i0;
    }

    public int getHeight()
    {
        com.android.wallpaper.RenderScriptScene r0;
        int $i0;

        r0 := @this: com.android.wallpaper.RenderScriptScene;

        $i0 = r0.<com.android.wallpaper.RenderScriptScene: int mHeight>;

        return $i0;
    }

    public android.content.res.Resources getResources()
    {
        com.android.wallpaper.RenderScriptScene r0;
        android.content.res.Resources $r1;

        r0 := @this: com.android.wallpaper.RenderScriptScene;

        $r1 = r0.<com.android.wallpaper.RenderScriptScene: android.content.res.Resources mResources>;

        return $r1;
    }

    public android.renderscript.RenderScriptGL getRS()
    {
        com.android.wallpaper.RenderScriptScene r0;
        android.renderscript.RenderScriptGL $r1;

        r0 := @this: com.android.wallpaper.RenderScriptScene;

        $r1 = r0.<com.android.wallpaper.RenderScriptScene: android.renderscript.RenderScriptGL mRS>;

        return $r1;
    }

    public android.renderscript.ScriptC getScript()
    {
        com.android.wallpaper.RenderScriptScene r0;
        android.renderscript.ScriptC $r1;

        r0 := @this: com.android.wallpaper.RenderScriptScene;

        $r1 = r0.<com.android.wallpaper.RenderScriptScene: android.renderscript.ScriptC mScript>;

        return $r1;
    }

    protected abstract android.renderscript.ScriptC createScript();

    public void stop()
    {
        com.android.wallpaper.RenderScriptScene r0;
        android.renderscript.RenderScriptGL $r1;

        r0 := @this: com.android.wallpaper.RenderScriptScene;

        $r1 = r0.<com.android.wallpaper.RenderScriptScene: android.renderscript.RenderScriptGL mRS>;

        virtualinvoke $r1.<android.renderscript.RenderScriptGL: void bindRootScript(android.renderscript.Script)>(null);

        return;
    }

    public void start()
    {
        com.android.wallpaper.RenderScriptScene r0;
        android.renderscript.ScriptC $r1;
        android.renderscript.RenderScriptGL $r2;

        r0 := @this: com.android.wallpaper.RenderScriptScene;

        $r2 = r0.<com.android.wallpaper.RenderScriptScene: android.renderscript.RenderScriptGL mRS>;

        $r1 = r0.<com.android.wallpaper.RenderScriptScene: android.renderscript.ScriptC mScript>;

        virtualinvoke $r2.<android.renderscript.RenderScriptGL: void bindRootScript(android.renderscript.Script)>($r1);

        return;
    }

    public void resize(int, int)
    {
        com.android.wallpaper.RenderScriptScene r0;
        int i0, i1;

        r0 := @this: com.android.wallpaper.RenderScriptScene;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<com.android.wallpaper.RenderScriptScene: int mWidth> = i0;

        r0.<com.android.wallpaper.RenderScriptScene: int mHeight> = i1;

        return;
    }

    public void setOffset(float, float, int, int)
    {
        com.android.wallpaper.RenderScriptScene r0;
        float f0, f1;
        int i0, i1;

        r0 := @this: com.android.wallpaper.RenderScriptScene;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        return;
    }

    public android.os.Bundle onCommand(java.lang.String, int, int, int, android.os.Bundle, boolean)
    {
        com.android.wallpaper.RenderScriptScene r0;
        java.lang.String r1;
        int i0, i1, i2;
        android.os.Bundle r2;
        boolean z0;

        r0 := @this: com.android.wallpaper.RenderScriptScene;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 := @parameter4: android.os.Bundle;

        z0 := @parameter5: boolean;

        return null;
    }
}
