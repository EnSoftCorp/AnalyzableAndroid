class com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette extends com.android.wallpaper.polarclock.PolarClockWallpaper$ClockPalette
{
    protected java.lang.String mId;
    protected int mBackgroundColor;
    protected float mSaturation;
    protected float mBrightness;
    private static final int COLORS_CACHE_COUNT;
    private final int[] mColors;
    private static com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette sFallbackPalette;

    public static com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette getFallback()
    {
        com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        $r0 = <com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette: com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette sFallbackPalette>;

        if $r0 != null goto label1;

        $r2 = new com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette;

        specialinvoke $r2.<com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette: void <init>()>();

        <com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette: com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette sFallbackPalette> = $r2;

        $r3 = <com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette: com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette sFallbackPalette>;

        $r3.<com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette: java.lang.String mId> = "default_c";

        $r4 = <com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette: com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette sFallbackPalette>;

        $r4.<com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette: int mBackgroundColor> = -1;

        $r5 = <com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette: com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette sFallbackPalette>;

        $r5.<com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette: float mSaturation> = 0.8F;

        $r6 = <com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette: com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette sFallbackPalette>;

        $r6.<com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette: float mBrightness> = 0.9F;

        $r7 = <com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette: com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette sFallbackPalette>;

        specialinvoke $r7.<com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette: void computeIntermediateColors()>();

     label1:
        $r1 = <com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette: com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette sFallbackPalette>;

        return $r1;
    }

    private void <init>()
    {
        com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette r0;
        int[] $r1;

        r0 := @this: com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette;

        specialinvoke r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockPalette: void <init>()>();

        $r1 = newarray (int)[720];

        r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette: int[] mColors> = $r1;

        return;
    }

    private void computeIntermediateColors()
    {
        com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette r0;
        int[] r1;
        int i0, i1, $i2;
        float f0, $f1, $f2, $f3, $f4;

        r0 := @this: com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette;

        r1 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette: int[] mColors>;

        i0 = lengthof r1;

        f0 = 0.0013888889F;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $f1 = (float) i1;

        $f4 = $f1 * f0;

        $f3 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette: float mSaturation>;

        $f2 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette: float mBrightness>;

        $i2 = staticinvoke <android.graphics.Color: int HSBtoColor(float,float,float)>($f4, $f3, $f2);

        r1[i1] = $i2;

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    public static com.android.wallpaper.polarclock.PolarClockWallpaper$ClockPalette parseXmlPaletteTag(android.content.res.XmlResourceParser)
    {
        android.content.res.XmlResourceParser r0;
        com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette r1, $r3;
        java.lang.String r2, $r4, $r5, $r6, $r7, $r8, r9, r10;
        float $f0, $f1;
        int $i0;

        r0 := @parameter0: android.content.res.XmlResourceParser;

        $r3 = new com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette;

        specialinvoke $r3.<com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette: void <init>()>();

        r1 = $r3;

        $r4 = interfaceinvoke r0.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "id");

        r1.<com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette: java.lang.String mId> = $r4;

        $r5 = interfaceinvoke r0.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "background");

        r2 = $r5;

        if $r5 == null goto label1;

        $i0 = staticinvoke <android.graphics.Color: int parseColor(java.lang.String)>(r2);

        r1.<com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette: int mBackgroundColor> = $i0;

     label1:
        $r6 = interfaceinvoke r0.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "saturation");

        r9 = $r6;

        if $r6 == null goto label2;

        $f1 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r9);

        r1.<com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette: float mSaturation> = $f1;

     label2:
        $r7 = interfaceinvoke r0.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "brightness");

        r10 = $r7;

        if $r7 == null goto label3;

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r10);

        r1.<com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette: float mBrightness> = $f0;

     label3:
        $r8 = r1.<com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette: java.lang.String mId>;

        if $r8 != null goto label4;

        return null;

     label4:
        specialinvoke r1.<com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette: void computeIntermediateColors()>();

        return r1;
    }

    public int getBackgroundColor()
    {
        com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette r0;
        int $i0;

        r0 := @this: com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette;

        $i0 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette: int mBackgroundColor>;

        return $i0;
    }

    public int getSecondColor(float)
    {
        com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette r0;
        float f0, $f1;
        byte $b0, $b3;
        int $i1, $i2;
        int[] $r1;

        r0 := @this: com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette;

        f0 := @parameter0: float;

        $b0 = f0 cmpl 1.0F;

        if $b0 >= 0 goto label1;

        $b3 = f0 cmpg 0.0F;

        if $b3 >= 0 goto label2;

     label1:
        f0 = 0.0F;

     label2:
        $r1 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette: int[] mColors>;

        $f1 = f0 * 720.0F;

        $i1 = (int) $f1;

        $i2 = $r1[$i1];

        return $i2;
    }

    public int getMinuteColor(float)
    {
        com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette r0;
        float f0, $f1;
        byte $b0, $b3;
        int $i1, $i2;
        int[] $r1;

        r0 := @this: com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette;

        f0 := @parameter0: float;

        $b0 = f0 cmpl 1.0F;

        if $b0 >= 0 goto label1;

        $b3 = f0 cmpg 0.0F;

        if $b3 >= 0 goto label2;

     label1:
        f0 = 0.0F;

     label2:
        $r1 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette: int[] mColors>;

        $f1 = f0 * 720.0F;

        $i1 = (int) $f1;

        $i2 = $r1[$i1];

        return $i2;
    }

    public int getHourColor(float)
    {
        com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette r0;
        float f0, $f1;
        byte $b0, $b3;
        int $i1, $i2;
        int[] $r1;

        r0 := @this: com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette;

        f0 := @parameter0: float;

        $b0 = f0 cmpl 1.0F;

        if $b0 >= 0 goto label1;

        $b3 = f0 cmpg 0.0F;

        if $b3 >= 0 goto label2;

     label1:
        f0 = 0.0F;

     label2:
        $r1 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette: int[] mColors>;

        $f1 = f0 * 720.0F;

        $i1 = (int) $f1;

        $i2 = $r1[$i1];

        return $i2;
    }

    public int getDayColor(float)
    {
        com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette r0;
        float f0, $f1;
        byte $b0, $b3;
        int $i1, $i2;
        int[] $r1;

        r0 := @this: com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette;

        f0 := @parameter0: float;

        $b0 = f0 cmpl 1.0F;

        if $b0 >= 0 goto label1;

        $b3 = f0 cmpg 0.0F;

        if $b3 >= 0 goto label2;

     label1:
        f0 = 0.0F;

     label2:
        $r1 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette: int[] mColors>;

        $f1 = f0 * 720.0F;

        $i1 = (int) $f1;

        $i2 = $r1[$i1];

        return $i2;
    }

    public int getMonthColor(float)
    {
        com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette r0;
        float f0, $f1;
        byte $b0, $b3;
        int $i1, $i2;
        int[] $r1;

        r0 := @this: com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette;

        f0 := @parameter0: float;

        $b0 = f0 cmpl 1.0F;

        if $b0 >= 0 goto label1;

        $b3 = f0 cmpg 0.0F;

        if $b3 >= 0 goto label2;

     label1:
        f0 = 0.0F;

     label2:
        $r1 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette: int[] mColors>;

        $f1 = f0 * 720.0F;

        $i1 = (int) $f1;

        $i2 = $r1[$i1];

        return $i2;
    }

    public java.lang.String getId()
    {
        com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette r0;
        java.lang.String $r1;

        r0 := @this: com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette;

        $r1 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette: java.lang.String mId>;

        return $r1;
    }

    static void <clinit>()
    {
        <com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette: int COLORS_CACHE_COUNT> = 720;

        <com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette: com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette sFallbackPalette> = null;

        return;
    }
}
