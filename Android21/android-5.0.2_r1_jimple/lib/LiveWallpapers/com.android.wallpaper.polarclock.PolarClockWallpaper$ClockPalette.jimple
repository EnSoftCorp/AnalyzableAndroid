abstract class com.android.wallpaper.polarclock.PolarClockWallpaper$ClockPalette extends java.lang.Object
{

    void <init>()
    {
        com.android.wallpaper.polarclock.PolarClockWallpaper$ClockPalette r0;

        r0 := @this: com.android.wallpaper.polarclock.PolarClockWallpaper$ClockPalette;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.android.wallpaper.polarclock.PolarClockWallpaper$ClockPalette parseXmlPaletteTag(android.content.res.XmlResourceParser)
    {
        android.content.res.XmlResourceParser r0;
        java.lang.String r1, $r2;
        boolean $z0;
        com.android.wallpaper.polarclock.PolarClockWallpaper$ClockPalette $r3, $r4;

        r0 := @parameter0: android.content.res.XmlResourceParser;

        r1 = interfaceinvoke r0.<android.content.res.XmlResourceParser: java.lang.String getAttributeValue(java.lang.String,java.lang.String)>(null, "kind");

        $r2 = "cycling";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r4 = staticinvoke <com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette: com.android.wallpaper.polarclock.PolarClockWallpaper$ClockPalette parseXmlPaletteTag(android.content.res.XmlResourceParser)>(r0);

        return $r4;

     label1:
        $r3 = staticinvoke <com.android.wallpaper.polarclock.PolarClockWallpaper$FixedClockPalette: com.android.wallpaper.polarclock.PolarClockWallpaper$ClockPalette parseXmlPaletteTag(android.content.res.XmlResourceParser)>(r0);

        return $r3;
    }

    public abstract int getBackgroundColor();

    public abstract int getSecondColor(float);

    public abstract int getMinuteColor(float);

    public abstract int getHourColor(float);

    public abstract int getDayColor(float);

    public abstract int getMonthColor(float);

    public abstract java.lang.String getId();
}
