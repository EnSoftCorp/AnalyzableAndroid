class com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine extends android.service.wallpaper.WallpaperService$Engine implements android.content.SharedPreferences$OnSharedPreferenceChangeListener
{
    private static final float SMALL_RING_THICKNESS;
    private static final float MEDIUM_RING_THICKNESS;
    private static final float LARGE_RING_THICKNESS;
    private static final float DEFAULT_RING_THICKNESS;
    private static final float SMALL_GAP;
    private static final float LARGE_GAP;
    private final java.util.HashMap mPalettes;
    private com.android.wallpaper.polarclock.PolarClockWallpaper$ClockPalette mPalette;
    private android.content.SharedPreferences mPrefs;
    private boolean mShowSeconds;
    private boolean mVariableLineWidth;
    private boolean mWatcherRegistered;
    private android.text.format.Time mCalendar;
    private final android.graphics.Paint mPaint;
    private final android.graphics.RectF mRect;
    private float mOffsetX;
    private final android.content.BroadcastReceiver mWatcher;
    private final java.lang.Runnable mDrawClock;
    private boolean mVisible;
    final com.android.wallpaper.polarclock.PolarClockWallpaper this$0;

    void <init>(com.android.wallpaper.polarclock.PolarClockWallpaper)
    {
        com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine r0;
        com.android.wallpaper.polarclock.PolarClockWallpaper r1;
        android.content.res.XmlResourceParser r2;
        int i0;
        com.android.wallpaper.polarclock.PolarClockWallpaper$ClockPalette r3;
        java.lang.Throwable r4, $r20;
        java.util.HashMap $r5, $r14;
        android.graphics.Paint $r6;
        android.graphics.RectF $r7;
        com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine$1 $r8;
        com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine$2 $r9;
        android.content.res.Resources $r10;
        com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette $r11;
        java.lang.String $r12, $r13, $r15, $r17;
        boolean $z0;
        org.xmlpull.v1.XmlPullParserException $r18, r22;
        java.io.IOException $r19, r21;

        r0 := @this: com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine;

        r1 := @parameter0: com.android.wallpaper.polarclock.PolarClockWallpaper;

        r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: com.android.wallpaper.polarclock.PolarClockWallpaper this$0> = r1;

        specialinvoke r0.<android.service.wallpaper.WallpaperService$Engine: void <init>(android.service.wallpaper.WallpaperService)>(r1);

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: java.util.HashMap mPalettes> = $r5;

        $r6 = new android.graphics.Paint;

        specialinvoke $r6.<android.graphics.Paint: void <init>()>();

        r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: android.graphics.Paint mPaint> = $r6;

        $r7 = new android.graphics.RectF;

        specialinvoke $r7.<android.graphics.RectF: void <init>()>();

        r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: android.graphics.RectF mRect> = $r7;

        $r8 = new com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine$1;

        specialinvoke $r8.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine$1: void <init>(com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine)>(r0);

        r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: android.content.BroadcastReceiver mWatcher> = $r8;

        $r9 = new com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine$2;

        specialinvoke $r9.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine$2: void <init>(com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine)>(r0);

        r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: java.lang.Runnable mDrawClock> = $r9;

        $r10 = virtualinvoke r1.<com.android.wallpaper.polarclock.PolarClockWallpaper: android.content.res.Resources getResources()>();

        r2 = virtualinvoke $r10.<android.content.res.Resources: android.content.res.XmlResourceParser getXml(int)>(2130903041);

     label01:
        i0 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int getEventType()>();

     label02:
        if i0 == 1 goto label04;

        if i0 != 2 goto label03;

        $r13 = "palette";

        $r12 = interfaceinvoke r2.<android.content.res.XmlResourceParser: java.lang.String getName()>();

        $z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z0 == 0 goto label03;

        r3 = staticinvoke <com.android.wallpaper.polarclock.PolarClockWallpaper$ClockPalette: com.android.wallpaper.polarclock.PolarClockWallpaper$ClockPalette parseXmlPaletteTag(android.content.res.XmlResourceParser)>(r2);

        $r15 = virtualinvoke r3.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockPalette: java.lang.String getId()>();

        if $r15 == null goto label03;

        $r14 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: java.util.HashMap mPalettes>;

        $r17 = virtualinvoke r3.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockPalette: java.lang.String getId()>();

        virtualinvoke $r14.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, r3);

     label03:
        i0 = interfaceinvoke r2.<android.content.res.XmlResourceParser: int next()>();

        goto label02;

     label04:
        interfaceinvoke r2.<android.content.res.XmlResourceParser: void close()>();

        goto label11;

     label05:
        $r19 := @caughtexception;

        r21 = $r19;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PolarClock", "An error occured during wallpaper configuration:", r21);

     label06:
        interfaceinvoke r2.<android.content.res.XmlResourceParser: void close()>();

        goto label11;

     label07:
        $r18 := @caughtexception;

        r22 = $r18;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("PolarClock", "An error occured during wallpaper configuration:", r22);

     label08:
        interfaceinvoke r2.<android.content.res.XmlResourceParser: void close()>();

        goto label11;

     label09:
        $r20 := @caughtexception;

        r4 = $r20;

     label10:
        interfaceinvoke r2.<android.content.res.XmlResourceParser: void close()>();

        throw r4;

     label11:
        $r11 = staticinvoke <com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette: com.android.wallpaper.polarclock.PolarClockWallpaper$CyclingClockPalette getFallback()>();

        r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: com.android.wallpaper.polarclock.PolarClockWallpaper$ClockPalette mPalette> = $r11;

        return;

        catch java.io.IOException from label01 to label04 with label05;
        catch org.xmlpull.v1.XmlPullParserException from label01 to label04 with label07;
        catch java.lang.Throwable from label01 to label04 with label09;
        catch java.lang.Throwable from label05 to label06 with label09;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    public void onCreate(android.view.SurfaceHolder)
    {
        com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine r0;
        android.view.SurfaceHolder r1;
        android.graphics.Paint r2;
        com.android.wallpaper.polarclock.PolarClockWallpaper $r3;
        android.content.SharedPreferences $r4, $r5, $r6;
        android.text.format.Time $r7, $r8;
        android.graphics.Paint$Cap $r9;
        android.graphics.Paint$Style $r10;
        boolean $z0;

        r0 := @this: com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine;

        r1 := @parameter0: android.view.SurfaceHolder;

        specialinvoke r0.<android.service.wallpaper.WallpaperService$Engine: void onCreate(android.view.SurfaceHolder)>(r1);

        $r3 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: com.android.wallpaper.polarclock.PolarClockWallpaper this$0>;

        $r4 = virtualinvoke $r3.<com.android.wallpaper.polarclock.PolarClockWallpaper: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("polar_clock_settings", 0);

        r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: android.content.SharedPreferences mPrefs> = $r4;

        $r5 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: android.content.SharedPreferences mPrefs>;

        interfaceinvoke $r5.<android.content.SharedPreferences: void registerOnSharedPreferenceChangeListener(android.content.SharedPreferences$OnSharedPreferenceChangeListener)>(r0);

        $r6 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: android.content.SharedPreferences mPrefs>;

        virtualinvoke r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: void onSharedPreferenceChanged(android.content.SharedPreferences,java.lang.String)>($r6, null);

        $r7 = new android.text.format.Time;

        specialinvoke $r7.<android.text.format.Time: void <init>()>();

        r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: android.text.format.Time mCalendar> = $r7;

        $r8 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: android.text.format.Time mCalendar>;

        virtualinvoke $r8.<android.text.format.Time: void setToNow()>();

        r2 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: android.graphics.Paint mPaint>;

        virtualinvoke r2.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        virtualinvoke r2.<android.graphics.Paint: void setStrokeWidth(float)>(24.0F);

        $r9 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap ROUND>;

        virtualinvoke r2.<android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)>($r9);

        $r10 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke r2.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r10);

        $z0 = virtualinvoke r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: boolean isPreview()>();

        if $z0 == 0 goto label1;

        r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: float mOffsetX> = 0.5F;

     label1:
        return;
    }

    public void onDestroy()
    {
        com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine r0;
        boolean $z0;
        com.android.wallpaper.polarclock.PolarClockWallpaper $r1, $r5;
        android.os.Handler $r2;
        java.lang.Runnable $r3;
        android.content.BroadcastReceiver $r4;

        r0 := @this: com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine;

        specialinvoke r0.<android.service.wallpaper.WallpaperService$Engine: void onDestroy()>();

        $z0 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: boolean mWatcherRegistered>;

        if $z0 == 0 goto label1;

        r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: boolean mWatcherRegistered> = 0;

        $r5 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: com.android.wallpaper.polarclock.PolarClockWallpaper this$0>;

        $r4 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: android.content.BroadcastReceiver mWatcher>;

        virtualinvoke $r5.<com.android.wallpaper.polarclock.PolarClockWallpaper: void unregisterReceiver(android.content.BroadcastReceiver)>($r4);

     label1:
        $r1 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: com.android.wallpaper.polarclock.PolarClockWallpaper this$0>;

        $r2 = staticinvoke <com.android.wallpaper.polarclock.PolarClockWallpaper: android.os.Handler access$100(com.android.wallpaper.polarclock.PolarClockWallpaper)>($r1);

        $r3 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: java.lang.Runnable mDrawClock>;

        virtualinvoke $r2.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r3);

        return;
    }

    public void onSharedPreferenceChanged(android.content.SharedPreferences, java.lang.String)
    {
        com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine r0;
        android.content.SharedPreferences r1;
        java.lang.String r2, r3, $r7, $r8, $r9;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        com.android.wallpaper.polarclock.PolarClockWallpaper$ClockPalette r4;
        java.util.HashMap $r5;
        java.lang.Object $r6;

        r0 := @this: com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine;

        r1 := @parameter0: android.content.SharedPreferences;

        r2 := @parameter1: java.lang.String;

        z0 = 0;

        if r2 == null goto label1;

        $r9 = "show_seconds";

        $z6 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z6 == 0 goto label2;

     label1:
        $z1 = interfaceinvoke r1.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("show_seconds", 1);

        r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: boolean mShowSeconds> = $z1;

        z0 = 1;

     label2:
        if r2 == null goto label3;

        $r8 = "variable_line_width";

        $z5 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z5 == 0 goto label4;

     label3:
        $z2 = interfaceinvoke r1.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("variable_line_width", 1);

        r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: boolean mVariableLineWidth> = $z2;

        z0 = 1;

     label4:
        if r2 == null goto label5;

        $r7 = "palette";

        $z4 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z4 == 0 goto label6;

     label5:
        r3 = interfaceinvoke r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("palette", "");

        $r5 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: java.util.HashMap mPalettes>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        r4 = (com.android.wallpaper.polarclock.PolarClockWallpaper$ClockPalette) $r6;

        if r4 == null goto label6;

        r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: com.android.wallpaper.polarclock.PolarClockWallpaper$ClockPalette mPalette> = r4;

        z0 = 1;

     label6:
        $z3 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: boolean mVisible>;

        if $z3 == 0 goto label7;

        if z0 == 0 goto label7;

        virtualinvoke r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: void drawFrame()>();

     label7:
        return;
    }

    public void onVisibilityChanged(boolean)
    {
        com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine r0;
        boolean z0, $z1, $z2;
        com.android.wallpaper.polarclock.PolarClockWallpaper $r1, $r5, $r8, $r9, $r12;
        android.os.Handler $r2, $r13;
        java.lang.Runnable $r3;
        android.content.BroadcastReceiver $r4, $r10;
        android.text.format.Time $r6, $r7;
        android.content.IntentFilter $r11;

        r0 := @this: com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine;

        z0 := @parameter0: boolean;

        r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: boolean mVisible> = z0;

        if z0 == 0 goto label2;

        $z2 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: boolean mWatcherRegistered>;

        if $z2 != 0 goto label1;

        r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: boolean mWatcherRegistered> = 1;

        $r9 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: com.android.wallpaper.polarclock.PolarClockWallpaper this$0>;

        $r10 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: android.content.BroadcastReceiver mWatcher>;

        $r8 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: com.android.wallpaper.polarclock.PolarClockWallpaper this$0>;

        $r11 = staticinvoke <com.android.wallpaper.polarclock.PolarClockWallpaper: android.content.IntentFilter access$200(com.android.wallpaper.polarclock.PolarClockWallpaper)>($r8);

        $r12 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: com.android.wallpaper.polarclock.PolarClockWallpaper this$0>;

        $r13 = staticinvoke <com.android.wallpaper.polarclock.PolarClockWallpaper: android.os.Handler access$100(com.android.wallpaper.polarclock.PolarClockWallpaper)>($r12);

        virtualinvoke $r9.<com.android.wallpaper.polarclock.PolarClockWallpaper: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler)>($r10, $r11, null, $r13);

     label1:
        $r6 = new android.text.format.Time;

        specialinvoke $r6.<android.text.format.Time: void <init>()>();

        r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: android.text.format.Time mCalendar> = $r6;

        $r7 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: android.text.format.Time mCalendar>;

        virtualinvoke $r7.<android.text.format.Time: void setToNow()>();

        goto label4;

     label2:
        $z1 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: boolean mWatcherRegistered>;

        if $z1 == 0 goto label3;

        r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: boolean mWatcherRegistered> = 0;

        $r5 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: com.android.wallpaper.polarclock.PolarClockWallpaper this$0>;

        $r4 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: android.content.BroadcastReceiver mWatcher>;

        virtualinvoke $r5.<com.android.wallpaper.polarclock.PolarClockWallpaper: void unregisterReceiver(android.content.BroadcastReceiver)>($r4);

     label3:
        $r1 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: com.android.wallpaper.polarclock.PolarClockWallpaper this$0>;

        $r2 = staticinvoke <com.android.wallpaper.polarclock.PolarClockWallpaper: android.os.Handler access$100(com.android.wallpaper.polarclock.PolarClockWallpaper)>($r1);

        $r3 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: java.lang.Runnable mDrawClock>;

        virtualinvoke $r2.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r3);

     label4:
        virtualinvoke r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: void drawFrame()>();

        return;
    }

    public void onSurfaceChanged(android.view.SurfaceHolder, int, int, int)
    {
        com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine r0;
        android.view.SurfaceHolder r1;
        int i0, i1, i2;

        r0 := @this: com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine;

        r1 := @parameter0: android.view.SurfaceHolder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<android.service.wallpaper.WallpaperService$Engine: void onSurfaceChanged(android.view.SurfaceHolder,int,int,int)>(r1, i0, i1, i2);

        virtualinvoke r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: void drawFrame()>();

        return;
    }

    public void onSurfaceCreated(android.view.SurfaceHolder)
    {
        com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine r0;
        android.view.SurfaceHolder r1;

        r0 := @this: com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine;

        r1 := @parameter0: android.view.SurfaceHolder;

        specialinvoke r0.<android.service.wallpaper.WallpaperService$Engine: void onSurfaceCreated(android.view.SurfaceHolder)>(r1);

        return;
    }

    public void onSurfaceDestroyed(android.view.SurfaceHolder)
    {
        com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine r0;
        android.view.SurfaceHolder r1;
        com.android.wallpaper.polarclock.PolarClockWallpaper $r2;
        android.os.Handler $r3;
        java.lang.Runnable $r4;

        r0 := @this: com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine;

        r1 := @parameter0: android.view.SurfaceHolder;

        specialinvoke r0.<android.service.wallpaper.WallpaperService$Engine: void onSurfaceDestroyed(android.view.SurfaceHolder)>(r1);

        r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: boolean mVisible> = 0;

        $r2 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: com.android.wallpaper.polarclock.PolarClockWallpaper this$0>;

        $r3 = staticinvoke <com.android.wallpaper.polarclock.PolarClockWallpaper: android.os.Handler access$100(com.android.wallpaper.polarclock.PolarClockWallpaper)>($r2);

        $r4 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: java.lang.Runnable mDrawClock>;

        virtualinvoke $r3.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r4);

        return;
    }

    public void onOffsetsChanged(float, float, float, float, int, int)
    {
        com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine r0;
        float f0, f1, f2, f3;
        int i0, i1;
        boolean $z0;

        r0 := @this: com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        $z0 = virtualinvoke r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: boolean isPreview()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: float mOffsetX> = f0;

        virtualinvoke r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: void drawFrame()>();

        return;
    }

    void drawFrame()
    {
        com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine r0;
        android.view.SurfaceHolder r1;
        android.graphics.Rect r2;
        int i0, i1, i3, i4, $i5, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i23;
        android.graphics.Canvas r3;
        android.text.format.Time r4;
        android.graphics.Paint r5;
        long l2, $l24;
        float f0, f1, f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, $f32, $f33, $f34, $f35, $f36, $f37, $f38, $f39, $f40, $f41, $f42, $f43, $f44, f45, f46, f47, f48, f49, f50, f51, f52, f53;
        android.graphics.RectF r6;
        com.android.wallpaper.polarclock.PolarClockWallpaper$ClockPalette $r7, $r18, $r19, $r20, $r21, $r22, $r24;
        java.lang.Throwable r8, $r23;
        com.android.wallpaper.polarclock.PolarClockWallpaper $r9, $r13, $r16;
        java.lang.Runnable $r10, $r14, $r15;
        android.os.Handler $r11, $r12, $r17;
        boolean $z0, $z1, $z4, $z5, $z6, $z7, $z8, $z9;

        r0 := @this: com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine;

        $r7 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: com.android.wallpaper.polarclock.PolarClockWallpaper$ClockPalette mPalette>;

        if $r7 != null goto label01;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PolarClockWallpaper", "no palette?!");

        return;

     label01:
        r1 = virtualinvoke r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: android.view.SurfaceHolder getSurfaceHolder()>();

        r2 = interfaceinvoke r1.<android.view.SurfaceHolder: android.graphics.Rect getSurfaceFrame()>();

        i0 = virtualinvoke r2.<android.graphics.Rect: int width()>();

        i1 = virtualinvoke r2.<android.graphics.Rect: int height()>();

        r3 = null;

     label02:
        r3 = interfaceinvoke r1.<android.view.SurfaceHolder: android.graphics.Canvas lockCanvas()>();

        if r3 == null goto label10;

        r4 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: android.text.format.Time mCalendar>;

        r5 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: android.graphics.Paint mPaint>;

        l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke r4.<android.text.format.Time: void set(long)>(l2);

        virtualinvoke r4.<android.text.format.Time: long normalize(boolean)>(0);

        i3 = i0 / 2;

        i4 = i1 / 2;

        $r18 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: com.android.wallpaper.polarclock.PolarClockWallpaper$ClockPalette mPalette>;

        $i5 = virtualinvoke $r18.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockPalette: int getBackgroundColor()>();

        virtualinvoke r3.<android.graphics.Canvas: void drawColor(int)>($i5);

        $f8 = (float) i3;

        $f4 = (float) i3;

        $i7 = neg i3;

        $f3 = (float) $i7;

        $f5 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: float mOffsetX>;

        $f9 = staticinvoke <android.util.MathUtils: float lerp(float,float,float)>($f4, $f3, $f5);

        $f7 = $f8 + $f9;

        $f6 = (float) i4;

        virtualinvoke r3.<android.graphics.Canvas: void translate(float,float)>($f7, $f6);

        virtualinvoke r3.<android.graphics.Canvas: void rotate(float)>(-90.0F);

        if i1 >= i0 goto label03;

        virtualinvoke r3.<android.graphics.Canvas: void scale(float,float)>(0.9F, 0.9F);

     label03:
        $i8 = staticinvoke <java.lang.Math: int min(int,int)>(i0, i1);

        $f12 = (float) $i8;

        $f11 = $f12 * 0.5F;

        f0 = $f11 - 24.0F;

        r6 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: android.graphics.RectF mRect>;

        $f15 = neg f0;

        $f10 = neg f0;

        virtualinvoke r6.<android.graphics.RectF: void set(float,float,float,float)>($f15, $f10, f0, f0);

        f2 = 24.0F;

        $z4 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: boolean mShowSeconds>;

        if $z4 == 0 goto label05;

        $l24 = l2 % 60000L;

        $f44 = (float) $l24;

        f1 = $f44 / 60000.0F;

        $r24 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: com.android.wallpaper.polarclock.PolarClockWallpaper$ClockPalette mPalette>;

        $i23 = virtualinvoke $r24.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockPalette: int getSecondColor(float)>(f1);

        virtualinvoke r5.<android.graphics.Paint: void setColor(int)>($i23);

        $z9 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: boolean mVariableLineWidth>;

        if $z9 == 0 goto label04;

        f2 = 8.0F;

        virtualinvoke r5.<android.graphics.Paint: void setStrokeWidth(float)>(f2);

     label04:
        $f43 = f1 * 360.0F;

        virtualinvoke r3.<android.graphics.Canvas: void drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)>(r6, 0.0F, $f43, 0, r5);

     label05:
        $f14 = 14.0F + f2;

        f45 = f0 - $f14;

        $f17 = neg f45;

        $f13 = neg f45;

        virtualinvoke r6.<android.graphics.RectF: void set(float,float,float,float)>($f17, $f13, f45, f45);

        $i10 = r4.<android.text.format.Time: int minute>;

        $f16 = (float) $i10;

        $f20 = $f16 * 60.0F;

        $i9 = r4.<android.text.format.Time: int second>;

        $f21 = (float) $i9;

        $f19 = $f20 + $f21;

        $f18 = $f19 % 3600.0F;

        f46 = $f18 / 3600.0F;

        $r19 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: com.android.wallpaper.polarclock.PolarClockWallpaper$ClockPalette mPalette>;

        $i12 = virtualinvoke $r19.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockPalette: int getMinuteColor(float)>(f46);

        virtualinvoke r5.<android.graphics.Paint: void setColor(int)>($i12);

        $z5 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: boolean mVariableLineWidth>;

        if $z5 == 0 goto label06;

        f2 = 16.0F;

        virtualinvoke r5.<android.graphics.Paint: void setStrokeWidth(float)>(f2);

     label06:
        $f25 = f46 * 360.0F;

        virtualinvoke r3.<android.graphics.Canvas: void drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)>(r6, 0.0F, $f25, 0, r5);

        $f22 = 14.0F + f2;

        f47 = f45 - $f22;

        $f24 = neg f47;

        $f23 = neg f47;

        virtualinvoke r6.<android.graphics.RectF: void set(float,float,float,float)>($f24, $f23, f47, f47);

        $i11 = r4.<android.text.format.Time: int hour>;

        $f28 = (float) $i11;

        $f30 = $f28 * 60.0F;

        $i14 = r4.<android.text.format.Time: int minute>;

        $f29 = (float) $i14;

        $f26 = $f30 + $f29;

        $f27 = $f26 % 1440.0F;

        f48 = $f27 / 1440.0F;

        $r20 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: com.android.wallpaper.polarclock.PolarClockWallpaper$ClockPalette mPalette>;

        $i13 = virtualinvoke $r20.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockPalette: int getHourColor(float)>(f48);

        virtualinvoke r5.<android.graphics.Paint: void setColor(int)>($i13);

        $z6 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: boolean mVariableLineWidth>;

        if $z6 == 0 goto label07;

        f2 = 32.0F;

        virtualinvoke r5.<android.graphics.Paint: void setStrokeWidth(float)>(f2);

     label07:
        $f33 = f48 * 360.0F;

        virtualinvoke r3.<android.graphics.Canvas: void drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)>(r6, 0.0F, $f33, 0, r5);

        $f35 = 38.0F + f2;

        f49 = f47 - $f35;

        $f31 = neg f49;

        $f34 = neg f49;

        virtualinvoke r6.<android.graphics.RectF: void set(float,float,float,float)>($f31, $f34, f49, f49);

        $i15 = r4.<android.text.format.Time: int monthDay>;

        $i16 = $i15 - 1;

        $f32 = (float) $i16;

        $i19 = virtualinvoke r4.<android.text.format.Time: int getActualMaximum(int)>(4);

        $i18 = $i19 - 1;

        $f38 = (float) $i18;

        f50 = $f32 / $f38;

        $r21 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: com.android.wallpaper.polarclock.PolarClockWallpaper$ClockPalette mPalette>;

        $i17 = virtualinvoke $r21.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockPalette: int getDayColor(float)>(f50);

        virtualinvoke r5.<android.graphics.Paint: void setColor(int)>($i17);

        $z7 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: boolean mVariableLineWidth>;

        if $z7 == 0 goto label08;

        f2 = 16.0F;

        virtualinvoke r5.<android.graphics.Paint: void setStrokeWidth(float)>(f2);

     label08:
        $f37 = f50 * 360.0F;

        virtualinvoke r3.<android.graphics.Canvas: void drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)>(r6, 0.0F, $f37, 0, r5);

        $f36 = 14.0F + f2;

        f51 = f49 - $f36;

        $f42 = neg f51;

        $f41 = neg f51;

        virtualinvoke r6.<android.graphics.RectF: void set(float,float,float,float)>($f42, $f41, f51, f51);

        $i21 = r4.<android.text.format.Time: int month>;

        $f40 = (float) $i21;

        f52 = $f40 / 11.0F;

        $r22 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: com.android.wallpaper.polarclock.PolarClockWallpaper$ClockPalette mPalette>;

        $i20 = virtualinvoke $r22.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockPalette: int getMonthColor(float)>(f52);

        virtualinvoke r5.<android.graphics.Paint: void setColor(int)>($i20);

        $z8 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: boolean mVariableLineWidth>;

        if $z8 == 0 goto label09;

        f53 = 32.0F;

        virtualinvoke r5.<android.graphics.Paint: void setStrokeWidth(float)>(f53);

     label09:
        $f39 = f52 * 360.0F;

        virtualinvoke r3.<android.graphics.Canvas: void drawArc(android.graphics.RectF,float,float,boolean,android.graphics.Paint)>(r6, 0.0F, $f39, 0, r5);

     label10:
        if r3 == null goto label14;

        interfaceinvoke r1.<android.view.SurfaceHolder: void unlockCanvasAndPost(android.graphics.Canvas)>(r3);

        goto label14;

     label11:
        $r23 := @caughtexception;

        r8 = $r23;

     label12:
        if r3 == null goto label13;

        interfaceinvoke r1.<android.view.SurfaceHolder: void unlockCanvasAndPost(android.graphics.Canvas)>(r3);

     label13:
        throw r8;

     label14:
        $r9 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: com.android.wallpaper.polarclock.PolarClockWallpaper this$0>;

        $r11 = staticinvoke <com.android.wallpaper.polarclock.PolarClockWallpaper: android.os.Handler access$100(com.android.wallpaper.polarclock.PolarClockWallpaper)>($r9);

        $r10 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: java.lang.Runnable mDrawClock>;

        virtualinvoke $r11.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r10);

        $z1 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: boolean mVisible>;

        if $z1 == 0 goto label16;

        $z0 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: boolean mShowSeconds>;

        if $z0 == 0 goto label15;

        $r16 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: com.android.wallpaper.polarclock.PolarClockWallpaper this$0>;

        $r17 = staticinvoke <com.android.wallpaper.polarclock.PolarClockWallpaper: android.os.Handler access$100(com.android.wallpaper.polarclock.PolarClockWallpaper)>($r16);

        $r15 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: java.lang.Runnable mDrawClock>;

        virtualinvoke $r17.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r15, 40L);

        goto label16;

     label15:
        $r13 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: com.android.wallpaper.polarclock.PolarClockWallpaper this$0>;

        $r12 = staticinvoke <com.android.wallpaper.polarclock.PolarClockWallpaper: android.os.Handler access$100(com.android.wallpaper.polarclock.PolarClockWallpaper)>($r13);

        $r14 = r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: java.lang.Runnable mDrawClock>;

        virtualinvoke $r12.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r14, 2000L);

     label16:
        return;

        catch java.lang.Throwable from label02 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    static android.text.format.Time access$002(com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine, android.text.format.Time)
    {
        com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine r0;
        android.text.format.Time r1;

        r0 := @parameter0: com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine;

        r1 := @parameter1: android.text.format.Time;

        r0.<com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: android.text.format.Time mCalendar> = r1;

        return r1;
    }

    public static void <clinit>()
    {
        <com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: float LARGE_GAP> = 38.0F;

        <com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: float SMALL_GAP> = 14.0F;

        <com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: float DEFAULT_RING_THICKNESS> = 24.0F;

        <com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: float LARGE_RING_THICKNESS> = 32.0F;

        <com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: float MEDIUM_RING_THICKNESS> = 16.0F;

        <com.android.wallpaper.polarclock.PolarClockWallpaper$ClockEngine: float SMALL_RING_THICKNESS> = 8.0F;

        return;
    }
}
