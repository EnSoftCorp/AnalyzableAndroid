public class org.apache.http.impl.client.DefaultRequestDirector extends java.lang.Object implements org.apache.http.client.RequestDirector
{
    private final org.apache.commons.logging.Log log;
    protected final org.apache.http.conn.ClientConnectionManager connManager;
    protected final org.apache.http.conn.routing.HttpRoutePlanner routePlanner;
    protected final org.apache.http.ConnectionReuseStrategy reuseStrategy;
    protected final org.apache.http.conn.ConnectionKeepAliveStrategy keepAliveStrategy;
    protected final org.apache.http.protocol.HttpRequestExecutor requestExec;
    protected final org.apache.http.protocol.HttpProcessor httpProcessor;
    protected final org.apache.http.client.HttpRequestRetryHandler retryHandler;
    protected final org.apache.http.client.RedirectHandler redirectHandler;
    private final org.apache.http.client.AuthenticationHandler targetAuthHandler;
    private final org.apache.http.client.AuthenticationHandler proxyAuthHandler;
    private final org.apache.http.client.UserTokenHandler userTokenHandler;
    protected final org.apache.http.params.HttpParams params;
    protected org.apache.http.conn.ManagedClientConnection managedConn;
    private int redirectCount;
    private int maxRedirects;
    private final org.apache.http.auth.AuthState targetAuthState;
    private final org.apache.http.auth.AuthState proxyAuthState;

    public void <init>(org.apache.http.protocol.HttpRequestExecutor, org.apache.http.conn.ClientConnectionManager, org.apache.http.ConnectionReuseStrategy, org.apache.http.conn.ConnectionKeepAliveStrategy, org.apache.http.conn.routing.HttpRoutePlanner, org.apache.http.protocol.HttpProcessor, org.apache.http.client.HttpRequestRetryHandler, org.apache.http.client.RedirectHandler, org.apache.http.client.AuthenticationHandler, org.apache.http.client.AuthenticationHandler, org.apache.http.client.UserTokenHandler, org.apache.http.params.HttpParams)
    {
        org.apache.http.impl.client.DefaultRequestDirector r0;
        org.apache.http.protocol.HttpRequestExecutor r1;
        org.apache.http.conn.ClientConnectionManager r2;
        org.apache.http.ConnectionReuseStrategy r3;
        org.apache.http.conn.ConnectionKeepAliveStrategy r4;
        org.apache.http.conn.routing.HttpRoutePlanner r5;
        org.apache.http.protocol.HttpProcessor r6;
        org.apache.http.client.HttpRequestRetryHandler r7;
        org.apache.http.client.RedirectHandler r8;
        org.apache.http.client.AuthenticationHandler r9, r10;
        org.apache.http.client.UserTokenHandler r11;
        org.apache.http.params.HttpParams r12, $r15;
        java.lang.Class $r13;
        org.apache.commons.logging.Log $r14;
        org.apache.http.auth.AuthState $r16, $r18;
        int $i0;
        java.lang.IllegalArgumentException $r17, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29;

        r0 := @this: org.apache.http.impl.client.DefaultRequestDirector;

        r1 := @parameter0: org.apache.http.protocol.HttpRequestExecutor;

        r2 := @parameter1: org.apache.http.conn.ClientConnectionManager;

        r3 := @parameter2: org.apache.http.ConnectionReuseStrategy;

        r4 := @parameter3: org.apache.http.conn.ConnectionKeepAliveStrategy;

        r5 := @parameter4: org.apache.http.conn.routing.HttpRoutePlanner;

        r6 := @parameter5: org.apache.http.protocol.HttpProcessor;

        r7 := @parameter6: org.apache.http.client.HttpRequestRetryHandler;

        r8 := @parameter7: org.apache.http.client.RedirectHandler;

        r9 := @parameter8: org.apache.http.client.AuthenticationHandler;

        r10 := @parameter9: org.apache.http.client.AuthenticationHandler;

        r11 := @parameter10: org.apache.http.client.UserTokenHandler;

        r12 := @parameter11: org.apache.http.params.HttpParams;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r13 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r13);

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log> = $r14;

        if r1 != null goto label01;

        $r29 = new java.lang.IllegalArgumentException;

        specialinvoke $r29.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Request executor may not be null.");

        throw $r29;

     label01:
        if r2 != null goto label02;

        $r27 = new java.lang.IllegalArgumentException;

        specialinvoke $r27.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Client connection manager may not be null.");

        throw $r27;

     label02:
        if r3 != null goto label03;

        $r28 = new java.lang.IllegalArgumentException;

        specialinvoke $r28.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Connection reuse strategy may not be null.");

        throw $r28;

     label03:
        if r4 != null goto label04;

        $r25 = new java.lang.IllegalArgumentException;

        specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Connection keep alive strategy may not be null.");

        throw $r25;

     label04:
        if r5 != null goto label05;

        $r26 = new java.lang.IllegalArgumentException;

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Route planner may not be null.");

        throw $r26;

     label05:
        if r6 != null goto label06;

        $r23 = new java.lang.IllegalArgumentException;

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP protocol processor may not be null.");

        throw $r23;

     label06:
        if r7 != null goto label07;

        $r24 = new java.lang.IllegalArgumentException;

        specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP request retry handler may not be null.");

        throw $r24;

     label07:
        if r8 != null goto label08;

        $r21 = new java.lang.IllegalArgumentException;

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Redirect handler may not be null.");

        throw $r21;

     label08:
        if r9 != null goto label09;

        $r22 = new java.lang.IllegalArgumentException;

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Target authentication handler may not be null.");

        throw $r22;

     label09:
        if r10 != null goto label10;

        $r19 = new java.lang.IllegalArgumentException;

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Proxy authentication handler may not be null.");

        throw $r19;

     label10:
        if r11 != null goto label11;

        $r20 = new java.lang.IllegalArgumentException;

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("User token handler may not be null.");

        throw $r20;

     label11:
        if r12 != null goto label12;

        $r17 = new java.lang.IllegalArgumentException;

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r17;

     label12:
        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.protocol.HttpRequestExecutor requestExec> = r1;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ClientConnectionManager connManager> = r2;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.ConnectionReuseStrategy reuseStrategy> = r3;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ConnectionKeepAliveStrategy keepAliveStrategy> = r4;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.routing.HttpRoutePlanner routePlanner> = r5;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.protocol.HttpProcessor httpProcessor> = r6;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.HttpRequestRetryHandler retryHandler> = r7;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.RedirectHandler redirectHandler> = r8;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.AuthenticationHandler targetAuthHandler> = r9;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.AuthenticationHandler proxyAuthHandler> = r10;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.UserTokenHandler userTokenHandler> = r11;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params> = r12;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn> = null;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: int redirectCount> = 0;

        $r15 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        $i0 = interfaceinvoke $r15.<org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>("http.protocol.max-redirects", 100);

        r0.<org.apache.http.impl.client.DefaultRequestDirector: int maxRedirects> = $i0;

        $r16 = new org.apache.http.auth.AuthState;

        specialinvoke $r16.<org.apache.http.auth.AuthState: void <init>()>();

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState targetAuthState> = $r16;

        $r18 = new org.apache.http.auth.AuthState;

        specialinvoke $r18.<org.apache.http.auth.AuthState: void <init>()>();

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState proxyAuthState> = $r18;

        return;
    }

    private org.apache.http.impl.client.RequestWrapper wrapRequest(org.apache.http.HttpRequest) throws org.apache.http.ProtocolException
    {
        org.apache.http.impl.client.DefaultRequestDirector r0;
        org.apache.http.HttpRequest r1;
        boolean $z0;
        org.apache.http.impl.client.RequestWrapper $r2;
        org.apache.http.impl.client.EntityEnclosingRequestWrapper $r3;
        org.apache.http.HttpEntityEnclosingRequest $r4;

        r0 := @this: org.apache.http.impl.client.DefaultRequestDirector;

        r1 := @parameter0: org.apache.http.HttpRequest;

        $z0 = r1 instanceof org.apache.http.HttpEntityEnclosingRequest;

        if $z0 == 0 goto label1;

        $r3 = new org.apache.http.impl.client.EntityEnclosingRequestWrapper;

        $r4 = (org.apache.http.HttpEntityEnclosingRequest) r1;

        specialinvoke $r3.<org.apache.http.impl.client.EntityEnclosingRequestWrapper: void <init>(org.apache.http.HttpEntityEnclosingRequest)>($r4);

        return $r3;

     label1:
        $r2 = new org.apache.http.impl.client.RequestWrapper;

        specialinvoke $r2.<org.apache.http.impl.client.RequestWrapper: void <init>(org.apache.http.HttpRequest)>(r1);

        return $r2;
    }

    protected void rewriteRequestURI(org.apache.http.impl.client.RequestWrapper, org.apache.http.conn.routing.HttpRoute) throws org.apache.http.ProtocolException
    {
        org.apache.http.impl.client.DefaultRequestDirector r0;
        org.apache.http.impl.client.RequestWrapper r1;
        org.apache.http.conn.routing.HttpRoute r2;
        java.net.URI r3, r14, r15;
        org.apache.http.HttpHost r4, $r5;
        boolean $z0, $z1, $z2;
        java.net.URISyntaxException $r6, r16;
        org.apache.http.ProtocolException $r7;
        java.lang.StringBuilder $r8, $r10, $r11;
        org.apache.http.RequestLine $r9;
        java.lang.String $r12, $r13;

        r0 := @this: org.apache.http.impl.client.DefaultRequestDirector;

        r1 := @parameter0: org.apache.http.impl.client.RequestWrapper;

        r2 := @parameter1: org.apache.http.conn.routing.HttpRoute;

     label1:
        r3 = virtualinvoke r1.<org.apache.http.impl.client.RequestWrapper: java.net.URI getURI()>();

        $r5 = virtualinvoke r2.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getProxyHost()>();

        if $r5 == null goto label2;

        $z1 = virtualinvoke r2.<org.apache.http.conn.routing.HttpRoute: boolean isTunnelled()>();

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke r3.<java.net.URI: boolean isAbsolute()>();

        if $z2 != 0 goto label3;

        r4 = virtualinvoke r2.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getTargetHost()>();

        r14 = staticinvoke <org.apache.http.client.utils.URIUtils: java.net.URI rewriteURI(java.net.URI,org.apache.http.HttpHost)>(r3, r4);

        virtualinvoke r1.<org.apache.http.impl.client.RequestWrapper: void setURI(java.net.URI)>(r14);

        goto label3;

     label2:
        $z0 = virtualinvoke r3.<java.net.URI: boolean isAbsolute()>();

        if $z0 == 0 goto label3;

        r15 = staticinvoke <org.apache.http.client.utils.URIUtils: java.net.URI rewriteURI(java.net.URI,org.apache.http.HttpHost)>(r3, null);

        virtualinvoke r1.<org.apache.http.impl.client.RequestWrapper: void setURI(java.net.URI)>(r15);

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        r16 = $r6;

        $r7 = new org.apache.http.ProtocolException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid URI: ");

        $r9 = virtualinvoke r1.<org.apache.http.impl.client.RequestWrapper: org.apache.http.RequestLine getRequestLine()>();

        $r12 = interfaceinvoke $r9.<org.apache.http.RequestLine: java.lang.String getUri()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<org.apache.http.ProtocolException: void <init>(java.lang.String,java.lang.Throwable)>($r13, r16);

        throw $r7;

     label5:
        return;

        catch java.net.URISyntaxException from label1 to label3 with label4;
    }

    public org.apache.http.HttpResponse execute(org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException
    {
        org.apache.http.impl.client.DefaultRequestDirector r0;
        org.apache.http.HttpHost r1, r108, r109;
        org.apache.http.HttpRequest r2, r4;
        org.apache.http.protocol.HttpContext r3;
        org.apache.http.impl.client.RequestWrapper r5, r9;
        org.apache.http.conn.routing.HttpRoute r6, r10, $r39, $r42;
        org.apache.http.impl.client.RoutedRequest r7, $r18, r111;
        long l0, l5;
        int i1, $i2, $i3, $i4;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, z15;
        org.apache.http.HttpResponse r8;
        org.apache.http.conn.ClientConnectionRequest r11;
        java.lang.Object r12, $r30, r112;
        java.io.InterruptedIOException r13, $r82;
        java.lang.InterruptedException r14, $r83;
        org.apache.http.HttpEntity r15, $r20, $r21, r113;
        org.apache.http.params.HttpParams $r16, $r17, $r27, $r29, $r38, $r63, $r71, $r98;
        org.apache.http.conn.ManagedClientConnection $r19, $r23, $r24, $r25, $r26, $r28, $r40, $r43, $r46, $r47, $r49, $r52, $r62, $r65, $r67, $r68, $r70, $r78, $r101;
        org.apache.http.conn.BasicManagedEntity $r22, r114;
        org.apache.http.protocol.HttpRequestExecutor $r31, $r36, $r50;
        org.apache.http.protocol.HttpProcessor $r32, $r37;
        org.apache.http.auth.AuthState $r33, $r34;
        org.apache.http.ConnectionReuseStrategy $r35;
        org.apache.http.client.UserTokenHandler $r41;
        org.apache.http.conn.ConnectionKeepAliveStrategy $r44;
        java.util.concurrent.TimeUnit $r45, $r61;
        org.apache.commons.logging.Log $r48, $r53, $r57, $r66, $r69, $r73, $r79, $r85, $r86, $r87, $r88, $r99, $r100, $r105;
        java.lang.StringBuilder $r51, $r56, $r58, $r59, $r92, $r93, $r94, $r102, $r104;
        java.lang.String $r54, $r84, $r90, $r95, $r97, $r103;
        org.apache.http.client.NonRepeatableRequestException $r55;
        org.apache.http.conn.ClientConnectionManager $r60;
        org.apache.http.client.methods.AbortableHttpRequest $r64, $r76;
        org.apache.http.impl.client.TunnelRefusedException $r72, r107;
        java.io.IOException $r74, $r77, $r80, r110, r116;
        java.lang.RuntimeException $r75, r117;
        org.apache.http.client.HttpRequestRetryHandler $r89;
        java.lang.Class $r91;
        org.apache.http.HttpException $r96, r115;

        r0 := @this: org.apache.http.impl.client.DefaultRequestDirector;

        r1 := @parameter0: org.apache.http.HttpHost;

        r2 := @parameter1: org.apache.http.HttpRequest;

        r3 := @parameter2: org.apache.http.protocol.HttpContext;

        r4 = r2;

        r5 = specialinvoke r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.impl.client.RequestWrapper wrapRequest(org.apache.http.HttpRequest)>(r4);

        $r16 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        virtualinvoke r5.<org.apache.http.impl.client.RequestWrapper: void setParams(org.apache.http.params.HttpParams)>($r16);

        r6 = virtualinvoke r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>(r1, r5, r3);

        $r18 = new org.apache.http.impl.client.RoutedRequest;

        specialinvoke $r18.<org.apache.http.impl.client.RoutedRequest: void <init>(org.apache.http.impl.client.RequestWrapper,org.apache.http.conn.routing.HttpRoute)>(r5, r6);

        r7 = $r18;

        $r17 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        l0 = staticinvoke <org.apache.http.conn.params.ConnManagerParams: long getTimeout(org.apache.http.params.HttpParams)>($r17);

        i1 = 0;

        z0 = 0;

        r8 = null;

        z1 = 0;

     label01:
        if z1 != 0 goto label38;

        r9 = virtualinvoke r7.<org.apache.http.impl.client.RoutedRequest: org.apache.http.impl.client.RequestWrapper getRequest()>();

        r10 = virtualinvoke r7.<org.apache.http.impl.client.RoutedRequest: org.apache.http.conn.routing.HttpRoute getRoute()>();

        r12 = interfaceinvoke r3.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.user-token");

        $r25 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        if $r25 != null goto label09;

        $r60 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ClientConnectionManager connManager>;

        r11 = interfaceinvoke $r60.<org.apache.http.conn.ClientConnectionManager: org.apache.http.conn.ClientConnectionRequest requestConnection(org.apache.http.conn.routing.HttpRoute,java.lang.Object)>(r10, r12);

        $z8 = r4 instanceof org.apache.http.client.methods.AbortableHttpRequest;

        if $z8 == 0 goto label02;

        $r76 = (org.apache.http.client.methods.AbortableHttpRequest) r4;

        interfaceinvoke $r76.<org.apache.http.client.methods.AbortableHttpRequest: void setConnectionRequest(org.apache.http.conn.ClientConnectionRequest)>(r11);

     label02:
        $r61 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $r70 = interfaceinvoke r11.<org.apache.http.conn.ClientConnectionRequest: org.apache.http.conn.ManagedClientConnection getConnection(long,java.util.concurrent.TimeUnit)>(l0, $r61);

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn> = $r70;

     label03:
        goto label05;

     label04:
        $r83 := @caughtexception;

        r14 = $r83;

        $r82 = new java.io.InterruptedIOException;

        specialinvoke $r82.<java.io.InterruptedIOException: void <init>()>();

        r13 = $r82;

        virtualinvoke r13.<java.io.InterruptedIOException: java.lang.Throwable initCause(java.lang.Throwable)>(r14);

        throw r13;

     label05:
        $r71 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        $z10 = staticinvoke <org.apache.http.params.HttpConnectionParams: boolean isStaleCheckingEnabled(org.apache.http.params.HttpParams)>($r71);

        if $z10 == 0 goto label09;

        $r69 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r69.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Stale connection check");

        $r68 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        $z9 = interfaceinvoke $r68.<org.apache.http.conn.ManagedClientConnection: boolean isStale()>();

        if $z9 == 0 goto label09;

        $r66 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r66.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Stale connection detected");

     label06:
        $r67 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r67.<org.apache.http.conn.ManagedClientConnection: void close()>();

     label07:
        goto label09;

     label08:
        $r77 := @caughtexception;

     label09:
        $z3 = r4 instanceof org.apache.http.client.methods.AbortableHttpRequest;

        if $z3 == 0 goto label10;

        $r64 = (org.apache.http.client.methods.AbortableHttpRequest) r4;

        $r65 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r64.<org.apache.http.client.methods.AbortableHttpRequest: void setReleaseTrigger(org.apache.http.conn.ConnectionReleaseTrigger)>($r65);

     label10:
        $r24 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        $z4 = interfaceinvoke $r24.<org.apache.http.conn.ManagedClientConnection: boolean isOpen()>();

        if $z4 != 0 goto label11;

        $r62 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        $r63 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        interfaceinvoke $r62.<org.apache.http.conn.ManagedClientConnection: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>(r10, r3, $r63);

        goto label12;

     label11:
        $r26 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        $r27 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        $i2 = staticinvoke <org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>($r27);

        interfaceinvoke $r26.<org.apache.http.conn.ManagedClientConnection: void setSocketTimeout(int)>($i2);

     label12:
        virtualinvoke r0.<org.apache.http.impl.client.DefaultRequestDirector: void establishRoute(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext)>(r10, r3);

     label13:
        goto label16;

     label14:
        $r72 := @caughtexception;

        r107 = $r72;

        $r73 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $z11 = interfaceinvoke $r73.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z11 == 0 goto label15;

        $r85 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $r84 = virtualinvoke r107.<org.apache.http.impl.client.TunnelRefusedException: java.lang.String getMessage()>();

        interfaceinvoke $r85.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r84);

     label15:
        r8 = virtualinvoke r107.<org.apache.http.impl.client.TunnelRefusedException: org.apache.http.HttpResponse getResponse()>();

        goto label38;

     label16:
        virtualinvoke r9.<org.apache.http.impl.client.RequestWrapper: void resetHeaders()>();

        virtualinvoke r0.<org.apache.http.impl.client.DefaultRequestDirector: void rewriteRequestURI(org.apache.http.impl.client.RequestWrapper,org.apache.http.conn.routing.HttpRoute)>(r9, r10);

        $r29 = virtualinvoke r9.<org.apache.http.impl.client.RequestWrapper: org.apache.http.params.HttpParams getParams()>();

        $r30 = interfaceinvoke $r29.<org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>("http.virtual-host");

        r108 = (org.apache.http.HttpHost) $r30;

        if r108 != null goto label17;

        r108 = virtualinvoke r10.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getTargetHost()>();

     label17:
        r109 = virtualinvoke r10.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getProxyHost()>();

        interfaceinvoke r3.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.target_host", r108);

        interfaceinvoke r3.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.proxy_host", r109);

        $r28 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke r3.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.connection", $r28);

        $r34 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState targetAuthState>;

        interfaceinvoke r3.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.auth.target-scope", $r34);

        $r33 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState proxyAuthState>;

        interfaceinvoke r3.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.auth.proxy-scope", $r33);

        $r31 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.protocol.HttpRequestExecutor requestExec>;

        $r32 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.protocol.HttpProcessor httpProcessor>;

        virtualinvoke $r31.<org.apache.http.protocol.HttpRequestExecutor: void preProcess(org.apache.http.HttpRequest,org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpContext)>(r9, $r32, r3);

        interfaceinvoke r3.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.request", r9);

        z15 = 1;

     label18:
        if z15 == 0 goto label29;

        i1 = i1 + 1;

        virtualinvoke r9.<org.apache.http.impl.client.RequestWrapper: void incrementExecCount()>();

        $i3 = virtualinvoke r9.<org.apache.http.impl.client.RequestWrapper: int getExecCount()>();

        if $i3 <= 1 goto label19;

        $z7 = virtualinvoke r9.<org.apache.http.impl.client.RequestWrapper: boolean isRepeatable()>();

        if $z7 != 0 goto label19;

        $r55 = new org.apache.http.client.NonRepeatableRequestException;

        specialinvoke $r55.<org.apache.http.client.NonRepeatableRequestException: void <init>(java.lang.String)>("Cannot retry request with a non-repeatable request entity");

        throw $r55;

     label19:
        $r53 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $z6 = interfaceinvoke $r53.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z6 == 0 goto label20;

        $r57 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempt ");

        $r59 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r58 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to execute request");

        $r54 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r57.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r54);

     label20:
        $r50 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.protocol.HttpRequestExecutor requestExec>;

        $r49 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        r8 = virtualinvoke $r50.<org.apache.http.protocol.HttpRequestExecutor: org.apache.http.HttpResponse execute(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext)>(r9, $r49, r3);

        z15 = 0;

     label21:
        goto label18;

     label22:
        $r80 := @caughtexception;

        r110 = $r80;

        $r79 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r79.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Closing the connection.");

        $r78 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r78.<org.apache.http.conn.ManagedClientConnection: void close()>();

        $r89 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.HttpRequestRetryHandler retryHandler>;

        $z14 = interfaceinvoke $r89.<org.apache.http.client.HttpRequestRetryHandler: boolean retryRequest(java.io.IOException,int,org.apache.http.protocol.HttpContext)>(r110, i1, r3);

        if $z14 == 0 goto label25;

        $r88 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $z13 = interfaceinvoke $r88.<org.apache.commons.logging.Log: boolean isInfoEnabled()>();

        if $z13 == 0 goto label23;

        $r105 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $r102 = new java.lang.StringBuilder;

        specialinvoke $r102.<java.lang.StringBuilder: void <init>()>();

        $r104 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("I/O exception (");

        $r91 = virtualinvoke r110.<java.lang.Object: java.lang.Class getClass()>();

        $r90 = virtualinvoke $r91.<java.lang.Class: java.lang.String getName()>();

        $r93 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r90);

        $r92 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") caught when processing request: ");

        $r95 = virtualinvoke r110.<java.io.IOException: java.lang.String getMessage()>();

        $r94 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r95);

        $r97 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r105.<org.apache.commons.logging.Log: void info(java.lang.Object)>($r97);

     label23:
        $r87 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $z12 = interfaceinvoke $r87.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z12 == 0 goto label24;

        $r100 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $r103 = virtualinvoke r110.<java.io.IOException: java.lang.String getMessage()>();

        interfaceinvoke $r100.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>($r103, r110);

     label24:
        $r86 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r86.<org.apache.commons.logging.Log: void info(java.lang.Object)>("Retrying request");

        goto label26;

     label25:
        throw r110;

     label26:
        $i4 = virtualinvoke r10.<org.apache.http.conn.routing.HttpRoute: int getHopCount()>();

        if $i4 != 1 goto label27;

        $r99 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r99.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Reopening the direct connection.");

        $r101 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        $r98 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        interfaceinvoke $r101.<org.apache.http.conn.ManagedClientConnection: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>(r10, r3, $r98);

        goto label28;

     label27:
        throw r110;

     label28:
        goto label18;

     label29:
        $r38 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        interfaceinvoke r8.<org.apache.http.HttpResponse: void setParams(org.apache.http.params.HttpParams)>($r38);

        $r36 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.protocol.HttpRequestExecutor requestExec>;

        $r37 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.protocol.HttpProcessor httpProcessor>;

        virtualinvoke $r36.<org.apache.http.protocol.HttpRequestExecutor: void postProcess(org.apache.http.HttpResponse,org.apache.http.protocol.HttpProcessor,org.apache.http.protocol.HttpContext)>(r8, $r37, r3);

        $r35 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.ConnectionReuseStrategy reuseStrategy>;

        z0 = interfaceinvoke $r35.<org.apache.http.ConnectionReuseStrategy: boolean keepAlive(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>(r8, r3);

        if z0 == 0 goto label30;

        $r44 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ConnectionKeepAliveStrategy keepAliveStrategy>;

        l5 = interfaceinvoke $r44.<org.apache.http.conn.ConnectionKeepAliveStrategy: long getKeepAliveDuration(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>(r8, r3);

        $r52 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        $r45 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        interfaceinvoke $r52.<org.apache.http.conn.ManagedClientConnection: void setIdleDuration(long,java.util.concurrent.TimeUnit)>(l5, $r45);

     label30:
        r111 = virtualinvoke r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.impl.client.RoutedRequest handleResponse(org.apache.http.impl.client.RoutedRequest,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>(r7, r8, r3);

        if r111 != null goto label31;

        z1 = 1;

        goto label36;

     label31:
        if z0 == 0 goto label33;

        $r48 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r48.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Connection kept alive");

        r15 = interfaceinvoke r8.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        if r15 == null goto label32;

        interfaceinvoke r15.<org.apache.http.HttpEntity: void consumeContent()>();

     label32:
        $r43 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r43.<org.apache.http.conn.ManagedClientConnection: void markReusable()>();

        goto label34;

     label33:
        $r40 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r40.<org.apache.http.conn.ManagedClientConnection: void close()>();

     label34:
        $r39 = virtualinvoke r111.<org.apache.http.impl.client.RoutedRequest: org.apache.http.conn.routing.HttpRoute getRoute()>();

        $r42 = virtualinvoke r7.<org.apache.http.impl.client.RoutedRequest: org.apache.http.conn.routing.HttpRoute getRoute()>();

        $z5 = virtualinvoke $r39.<org.apache.http.conn.routing.HttpRoute: boolean equals(java.lang.Object)>($r42);

        if $z5 != 0 goto label35;

        virtualinvoke r0.<org.apache.http.impl.client.DefaultRequestDirector: void releaseConnection()>();

     label35:
        r7 = r111;

     label36:
        $r41 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.UserTokenHandler userTokenHandler>;

        r112 = interfaceinvoke $r41.<org.apache.http.client.UserTokenHandler: java.lang.Object getUserToken(org.apache.http.protocol.HttpContext)>(r3);

        interfaceinvoke r3.<org.apache.http.protocol.HttpContext: void setAttribute(java.lang.String,java.lang.Object)>("http.user-token", r112);

        $r46 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        if $r46 == null goto label37;

        $r47 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r47.<org.apache.http.conn.ManagedClientConnection: void setState(java.lang.Object)>(r112);

     label37:
        goto label01;

     label38:
        if r8 == null goto label39;

        $r21 = interfaceinvoke r8.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        if $r21 == null goto label39;

        $r20 = interfaceinvoke r8.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $z2 = interfaceinvoke $r20.<org.apache.http.HttpEntity: boolean isStreaming()>();

        if $z2 != 0 goto label41;

     label39:
        if z0 == 0 goto label40;

        $r19 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r19.<org.apache.http.conn.ManagedClientConnection: void markReusable()>();

     label40:
        virtualinvoke r0.<org.apache.http.impl.client.DefaultRequestDirector: void releaseConnection()>();

        goto label42;

     label41:
        r113 = interfaceinvoke r8.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        $r22 = new org.apache.http.conn.BasicManagedEntity;

        $r23 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        specialinvoke $r22.<org.apache.http.conn.BasicManagedEntity: void <init>(org.apache.http.HttpEntity,org.apache.http.conn.ManagedClientConnection,boolean)>(r113, $r23, z0);

        r114 = $r22;

        interfaceinvoke r8.<org.apache.http.HttpResponse: void setEntity(org.apache.http.HttpEntity)>(r114);

     label42:
        return r8;

     label43:
        $r96 := @caughtexception;

        r115 = $r96;

        specialinvoke r0.<org.apache.http.impl.client.DefaultRequestDirector: void abortConnection()>();

        throw r115;

     label44:
        $r74 := @caughtexception;

        r116 = $r74;

        specialinvoke r0.<org.apache.http.impl.client.DefaultRequestDirector: void abortConnection()>();

        throw r116;

     label45:
        $r75 := @caughtexception;

        r117 = $r75;

        specialinvoke r0.<org.apache.http.impl.client.DefaultRequestDirector: void abortConnection()>();

        throw r117;

        catch java.lang.InterruptedException from label02 to label03 with label04;
        catch java.io.IOException from label06 to label07 with label08;
        catch org.apache.http.impl.client.TunnelRefusedException from label12 to label13 with label14;
        catch java.io.IOException from label19 to label21 with label22;
        catch org.apache.http.HttpException from label01 to label42 with label43;
        catch java.io.IOException from label01 to label42 with label44;
        catch java.lang.RuntimeException from label01 to label42 with label45;
    }

    protected void releaseConnection()
    {
        org.apache.http.impl.client.DefaultRequestDirector r0;
        java.io.IOException r1, $r3;
        org.apache.http.conn.ManagedClientConnection $r2;
        org.apache.commons.logging.Log $r4;

        r0 := @this: org.apache.http.impl.client.DefaultRequestDirector;

     label1:
        $r2 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r2.<org.apache.http.conn.ManagedClientConnection: void releaseConnection()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        $r4 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r4.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>("IOException releasing connection", r1);

     label4:
        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn> = null;

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    protected org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost, org.apache.http.HttpRequest, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException
    {
        org.apache.http.impl.client.DefaultRequestDirector r0;
        org.apache.http.HttpHost r1;
        org.apache.http.HttpRequest r2;
        org.apache.http.protocol.HttpContext r3;
        java.lang.String r4, r5, r6, $r17;
        java.net.URI r7, $r19;
        org.apache.http.conn.routing.HttpRoutePlanner $r8;
        org.apache.http.conn.routing.HttpRoute $r9;
        boolean $z0;
        java.lang.IllegalStateException $r10;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r15, $r16, $r18;
        org.apache.http.client.methods.HttpUriRequest $r20;
        org.apache.http.params.HttpParams $r21;
        java.lang.Object $r22;

        r0 := @this: org.apache.http.impl.client.DefaultRequestDirector;

        r1 := @parameter0: org.apache.http.HttpHost;

        r2 := @parameter1: org.apache.http.HttpRequest;

        r3 := @parameter2: org.apache.http.protocol.HttpContext;

        if r1 != null goto label1;

        $r21 = interfaceinvoke r2.<org.apache.http.HttpRequest: org.apache.http.params.HttpParams getParams()>();

        $r22 = interfaceinvoke $r21.<org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>("http.default-host");

        r1 = (org.apache.http.HttpHost) $r22;

     label1:
        if r1 != null goto label3;

        r4 = null;

        r5 = null;

        r6 = null;

        $z0 = r2 instanceof org.apache.http.client.methods.HttpUriRequest;

        if $z0 == 0 goto label2;

        $r20 = (org.apache.http.client.methods.HttpUriRequest) r2;

        $r19 = interfaceinvoke $r20.<org.apache.http.client.methods.HttpUriRequest: java.net.URI getURI()>();

        r7 = $r19;

        if $r19 == null goto label2;

        r4 = virtualinvoke r7.<java.net.URI: java.lang.String getScheme()>();

        r5 = virtualinvoke r7.<java.net.URI: java.lang.String getHost()>();

        r6 = virtualinvoke r7.<java.net.URI: java.lang.String getPath()>();

     label2:
        $r10 = new java.lang.IllegalStateException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Target host must not be null, or set in parameters. scheme=");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", host=");

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", path=");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r17);

        throw $r10;

     label3:
        $r8 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.routing.HttpRoutePlanner routePlanner>;

        $r9 = interfaceinvoke $r8.<org.apache.http.conn.routing.HttpRoutePlanner: org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>(r1, r2, r3);

        return $r9;
    }

    protected void establishRoute(org.apache.http.conn.routing.HttpRoute, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException
    {
        org.apache.http.impl.client.DefaultRequestDirector r0;
        org.apache.http.conn.routing.HttpRoute r1, r4;
        org.apache.http.protocol.HttpContext r2;
        org.apache.http.conn.routing.BasicRouteDirector r3, $r5;
        int i0, $i1, i2;
        boolean z0, z1;
        org.apache.http.conn.ManagedClientConnection $r6, $r8, $r10, $r11, $r16;
        org.apache.http.params.HttpParams $r7, $r9, $r13, $r17;
        org.apache.commons.logging.Log $r12, $r15;
        org.apache.http.HttpHost $r14;
        java.lang.StringBuilder $r18, $r20, $r21, $r22, $r23, $r24, $r25, $r29, $r30;
        java.lang.IllegalStateException $r19, $r27;
        java.lang.String $r26, $r28;

        r0 := @this: org.apache.http.impl.client.DefaultRequestDirector;

        r1 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        r2 := @parameter1: org.apache.http.protocol.HttpContext;

        $r5 = new org.apache.http.conn.routing.BasicRouteDirector;

        specialinvoke $r5.<org.apache.http.conn.routing.BasicRouteDirector: void <init>()>();

        r3 = $r5;

     label1:
        $r6 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        r4 = interfaceinvoke $r6.<org.apache.http.conn.ManagedClientConnection: org.apache.http.conn.routing.HttpRoute getRoute()>();

        i0 = interfaceinvoke r3.<org.apache.http.conn.routing.HttpRouteDirector: int nextStep(org.apache.http.conn.routing.RouteInfo,org.apache.http.conn.routing.RouteInfo)>(r1, r4);

        tableswitch(i0)
        {
            case -1: goto label6;
            case 0: goto label7;
            case 1: goto label2;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            default: goto label8;
        };

     label2:
        $r8 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        $r7 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        interfaceinvoke $r8.<org.apache.http.conn.ManagedClientConnection: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>(r1, r2, $r7);

        goto label9;

     label3:
        z0 = virtualinvoke r0.<org.apache.http.impl.client.DefaultRequestDirector: boolean createTunnelToTarget(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext)>(r1, r2);

        $r15 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r15.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Tunnel to target created.");

        $r16 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        $r17 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        interfaceinvoke $r16.<org.apache.http.conn.ManagedClientConnection: void tunnelTarget(boolean,org.apache.http.params.HttpParams)>(z0, $r17);

        goto label9;

     label4:
        $i1 = virtualinvoke r4.<org.apache.http.conn.routing.HttpRoute: int getHopCount()>();

        i2 = $i1 - 1;

        z1 = virtualinvoke r0.<org.apache.http.impl.client.DefaultRequestDirector: boolean createTunnelToProxy(org.apache.http.conn.routing.HttpRoute,int,org.apache.http.protocol.HttpContext)>(r1, i2, r2);

        $r12 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r12.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Tunnel to proxy created.");

        $r11 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        $r14 = virtualinvoke r1.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getHopTarget(int)>(i2);

        $r13 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        interfaceinvoke $r11.<org.apache.http.conn.ManagedClientConnection: void tunnelProxy(org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams)>($r14, z1, $r13);

        goto label9;

     label5:
        $r10 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        $r9 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        interfaceinvoke $r10.<org.apache.http.conn.ManagedClientConnection: void layerProtocol(org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>(r2, $r9);

        goto label9;

     label6:
        $r19 = new java.lang.IllegalStateException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to establish route.\nplanned = ");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\ncurrent = ");

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r26);

        throw $r19;

     label7:
        goto label9;

     label8:
        $r27 = new java.lang.IllegalStateException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown step indicator ");

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from RouteDirector.");

        $r28 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r28);

        throw $r27;

     label9:
        if i0 > 0 goto label1;

        return;
    }

    protected boolean createTunnelToTarget(org.apache.http.conn.routing.HttpRoute, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException
    {
        org.apache.http.impl.client.DefaultRequestDirector r0;
        org.apache.http.conn.routing.HttpRoute r1;
        org.apache.http.protocol.HttpContext r2;
        org.apache.http.HttpHost r3, r4;
        org.apache.http.HttpResponse r5;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.apache.http.HttpRequest r6;
        java.lang.String r7, $r24, $r28, $r56, $r59, $r65, $r68, $r69;
        org.apache.http.auth.AuthScheme r8;
        org.apache.http.auth.AuthScope r9;
        org.apache.http.auth.Credentials r10, $r44;
        org.apache.http.auth.AuthenticationException r11, r14, $r54, $r62;
        org.apache.http.client.CredentialsProvider r12;
        java.util.Map r13;
        org.apache.http.StatusLine $r15, $r22, $r32, $r48;
        org.apache.http.conn.ManagedClientConnection $r16, $r18, $r25, $r30, $r50, $r53;
        org.apache.http.impl.client.TunnelRefusedException $r17;
        java.lang.StringBuilder $r19, $r20, $r21, $r46, $r47, $r49, $r60, $r64, $r66, $r67, $r70, $r71;
        org.apache.http.entity.BufferedHttpEntity $r23;
        org.apache.http.params.HttpParams $r26, $r35, $r58;
        org.apache.http.auth.AuthState $r27, $r29, $r31, $r39, $r40, $r41, $r45;
        org.apache.http.protocol.HttpRequestExecutor $r33;
        org.apache.http.client.AuthenticationHandler $r34, $r37, $r42;
        java.lang.Object $r36;
        org.apache.commons.logging.Log $r38, $r51, $r55, $r61, $r63, $r72;
        org.apache.http.ConnectionReuseStrategy $r43;
        org.apache.http.HttpException $r52;
        org.apache.http.Header $r57;
        int i0, i1;
        org.apache.http.HttpEntity r73, r74;

        r0 := @this: org.apache.http.impl.client.DefaultRequestDirector;

        r1 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        r2 := @parameter1: org.apache.http.protocol.HttpContext;

        r3 = virtualinvoke r1.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getProxyHost()>();

        r4 = virtualinvoke r1.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getTargetHost()>();

        r5 = null;

        z0 = 0;

     label01:
        if z0 != 0 goto label18;

        z0 = 1;

        $r25 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        $z1 = interfaceinvoke $r25.<org.apache.http.conn.ManagedClientConnection: boolean isOpen()>();

        if $z1 != 0 goto label02;

        $r53 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        $r58 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        interfaceinvoke $r53.<org.apache.http.conn.ManagedClientConnection: void open(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>(r1, r2, $r58);

     label02:
        r6 = virtualinvoke r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.HttpRequest createConnectRequest(org.apache.http.conn.routing.HttpRoute,org.apache.http.protocol.HttpContext)>(r1, r2);

        $r26 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        r7 = staticinvoke <org.apache.http.params.HttpProtocolParams: java.lang.String getUserAgent(org.apache.http.params.HttpParams)>($r26);

        if r7 == null goto label03;

        interfaceinvoke r6.<org.apache.http.HttpRequest: void addHeader(java.lang.String,java.lang.String)>("User-Agent", r7);

     label03:
        $r28 = virtualinvoke r4.<org.apache.http.HttpHost: java.lang.String toHostString()>();

        interfaceinvoke r6.<org.apache.http.HttpRequest: void addHeader(java.lang.String,java.lang.String)>("Host", $r28);

        $r29 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState proxyAuthState>;

        r8 = virtualinvoke $r29.<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScheme getAuthScheme()>();

        $r27 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState proxyAuthState>;

        r9 = virtualinvoke $r27.<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScope getAuthScope()>();

        $r31 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState proxyAuthState>;

        r10 = virtualinvoke $r31.<org.apache.http.auth.AuthState: org.apache.http.auth.Credentials getCredentials()>();

        if r10 == null goto label07;

        if r9 != null goto label04;

        $z6 = interfaceinvoke r8.<org.apache.http.auth.AuthScheme: boolean isConnectionBased()>();

        if $z6 != 0 goto label07;

     label04:
        $r57 = interfaceinvoke r8.<org.apache.http.auth.AuthScheme: org.apache.http.Header authenticate(org.apache.http.auth.Credentials,org.apache.http.HttpRequest)>(r10, r6);

        interfaceinvoke r6.<org.apache.http.HttpRequest: void addHeader(org.apache.http.Header)>($r57);

     label05:
        goto label07;

     label06:
        $r54 := @caughtexception;

        r11 = $r54;

        $r55 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $z5 = interfaceinvoke $r55.<org.apache.commons.logging.Log: boolean isErrorEnabled()>();

        if $z5 == 0 goto label07;

        $r63 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        $r66 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Proxy authentication error: ");

        $r65 = virtualinvoke r11.<org.apache.http.auth.AuthenticationException: java.lang.String getMessage()>();

        $r60 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

        $r59 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r63.<org.apache.commons.logging.Log: void error(java.lang.Object)>($r59);

     label07:
        $r33 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.protocol.HttpRequestExecutor requestExec>;

        $r30 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        r5 = virtualinvoke $r33.<org.apache.http.protocol.HttpRequestExecutor: org.apache.http.HttpResponse execute(org.apache.http.HttpRequest,org.apache.http.HttpClientConnection,org.apache.http.protocol.HttpContext)>(r6, $r30, r2);

        $r32 = interfaceinvoke r5.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        i0 = interfaceinvoke $r32.<org.apache.http.StatusLine: int getStatusCode()>();

        if i0 >= 200 goto label08;

        $r52 = new org.apache.http.HttpException;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected response to CONNECT request: ");

        $r48 = interfaceinvoke r5.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r48);

        $r56 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r52.<org.apache.http.HttpException: void <init>(java.lang.String)>($r56);

        throw $r52;

     label08:
        $r36 = interfaceinvoke r2.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.auth.credentials-provider");

        r12 = (org.apache.http.client.CredentialsProvider) $r36;

        if r12 == null goto label17;

        $r35 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        $z2 = staticinvoke <org.apache.http.client.params.HttpClientParams: boolean isAuthenticating(org.apache.http.params.HttpParams)>($r35);

        if $z2 == 0 goto label17;

        $r34 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.AuthenticationHandler proxyAuthHandler>;

        $z3 = interfaceinvoke $r34.<org.apache.http.client.AuthenticationHandler: boolean isAuthenticationRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>(r5, r2);

        if $z3 == 0 goto label16;

        $r38 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r38.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Proxy requested authentication");

        $r37 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.AuthenticationHandler proxyAuthHandler>;

        r13 = interfaceinvoke $r37.<org.apache.http.client.AuthenticationHandler: java.util.Map getChallenges(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>(r5, r2);

     label09:
        $r41 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState proxyAuthState>;

        $r42 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.AuthenticationHandler proxyAuthHandler>;

        specialinvoke r0.<org.apache.http.impl.client.DefaultRequestDirector: void processChallenges(java.util.Map,org.apache.http.auth.AuthState,org.apache.http.client.AuthenticationHandler,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>(r13, $r41, $r42, r5, r2);

     label10:
        goto label12;

     label11:
        $r62 := @caughtexception;

        r14 = $r62;

        $r61 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $z7 = interfaceinvoke $r61.<org.apache.commons.logging.Log: boolean isWarnEnabled()>();

        if $z7 == 0 goto label12;

        $r72 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $r70 = new java.lang.StringBuilder;

        specialinvoke $r70.<java.lang.StringBuilder: void <init>()>();

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Authentication error: ");

        $r68 = virtualinvoke r14.<org.apache.http.auth.AuthenticationException: java.lang.String getMessage()>();

        $r67 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r68);

        $r69 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r72.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r69);

        goto label18;

     label12:
        $r40 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState proxyAuthState>;

        specialinvoke r0.<org.apache.http.impl.client.DefaultRequestDirector: void updateAuthState(org.apache.http.auth.AuthState,org.apache.http.HttpHost,org.apache.http.client.CredentialsProvider)>($r40, r3, r12);

        $r45 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState proxyAuthState>;

        $r44 = virtualinvoke $r45.<org.apache.http.auth.AuthState: org.apache.http.auth.Credentials getCredentials()>();

        if $r44 == null goto label15;

        z0 = 0;

        $r43 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.ConnectionReuseStrategy reuseStrategy>;

        $z4 = interfaceinvoke $r43.<org.apache.http.ConnectionReuseStrategy: boolean keepAlive(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>(r5, r2);

        if $z4 == 0 goto label14;

        $r51 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r51.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Connection kept alive");

        r73 = interfaceinvoke r5.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        if r73 == null goto label13;

        interfaceinvoke r73.<org.apache.http.HttpEntity: void consumeContent()>();

     label13:
        goto label15;

     label14:
        $r50 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r50.<org.apache.http.conn.ManagedClientConnection: void close()>();

     label15:
        goto label17;

     label16:
        $r39 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState proxyAuthState>;

        virtualinvoke $r39.<org.apache.http.auth.AuthState: void setAuthScope(org.apache.http.auth.AuthScope)>(null);

     label17:
        goto label01;

     label18:
        $r15 = interfaceinvoke r5.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        i1 = interfaceinvoke $r15.<org.apache.http.StatusLine: int getStatusCode()>();

        if i1 <= 299 goto label20;

        r74 = interfaceinvoke r5.<org.apache.http.HttpResponse: org.apache.http.HttpEntity getEntity()>();

        if r74 == null goto label19;

        $r23 = new org.apache.http.entity.BufferedHttpEntity;

        specialinvoke $r23.<org.apache.http.entity.BufferedHttpEntity: void <init>(org.apache.http.HttpEntity)>(r74);

        interfaceinvoke r5.<org.apache.http.HttpResponse: void setEntity(org.apache.http.HttpEntity)>($r23);

     label19:
        $r18 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r18.<org.apache.http.conn.ManagedClientConnection: void close()>();

        $r17 = new org.apache.http.impl.client.TunnelRefusedException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CONNECT refused by proxy: ");

        $r22 = interfaceinvoke r5.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r22);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<org.apache.http.impl.client.TunnelRefusedException: void <init>(java.lang.String,org.apache.http.HttpResponse)>($r24, r5);

        throw $r17;

     label20:
        $r16 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        interfaceinvoke $r16.<org.apache.http.conn.ManagedClientConnection: void markReusable()>();

        return 0;

        catch org.apache.http.auth.AuthenticationException from label04 to label05 with label06;
        catch org.apache.http.auth.AuthenticationException from label09 to label10 with label11;
    }

    protected boolean createTunnelToProxy(org.apache.http.conn.routing.HttpRoute, int, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException
    {
        org.apache.http.impl.client.DefaultRequestDirector r0;
        org.apache.http.conn.routing.HttpRoute r1;
        int i0;
        org.apache.http.protocol.HttpContext r2;
        java.lang.UnsupportedOperationException $r3;

        r0 := @this: org.apache.http.impl.client.DefaultRequestDirector;

        r1 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.http.protocol.HttpContext;

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Proxy chains are not supported.");

        throw $r3;
    }

    protected org.apache.http.HttpRequest createConnectRequest(org.apache.http.conn.routing.HttpRoute, org.apache.http.protocol.HttpContext)
    {
        org.apache.http.impl.client.DefaultRequestDirector r0;
        org.apache.http.conn.routing.HttpRoute r1;
        org.apache.http.protocol.HttpContext r2;
        org.apache.http.HttpHost r3;
        java.lang.String r4, r6, $r13, $r18;
        int i0, $i1, $i2;
        org.apache.http.conn.scheme.Scheme r5;
        org.apache.http.ProtocolVersion r7;
        org.apache.http.message.BasicHttpRequest r8, $r15;
        java.lang.StringBuilder $r9, r19;
        org.apache.http.params.HttpParams $r14;
        org.apache.http.conn.scheme.SchemeRegistry $r16;
        org.apache.http.conn.ClientConnectionManager $r17;

        r0 := @this: org.apache.http.impl.client.DefaultRequestDirector;

        r1 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        r2 := @parameter1: org.apache.http.protocol.HttpContext;

        r3 = virtualinvoke r1.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getTargetHost()>();

        r4 = virtualinvoke r3.<org.apache.http.HttpHost: java.lang.String getHostName()>();

        i0 = virtualinvoke r3.<org.apache.http.HttpHost: int getPort()>();

        if i0 >= 0 goto label1;

        $r17 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ClientConnectionManager connManager>;

        $r16 = interfaceinvoke $r17.<org.apache.http.conn.ClientConnectionManager: org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry()>();

        $r18 = virtualinvoke r3.<org.apache.http.HttpHost: java.lang.String getSchemeName()>();

        r5 = virtualinvoke $r16.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme getScheme(java.lang.String)>($r18);

        i0 = virtualinvoke r5.<org.apache.http.conn.scheme.Scheme: int getDefaultPort()>();

     label1:
        $r9 = new java.lang.StringBuilder;

        $i1 = virtualinvoke r4.<java.lang.String: int length()>();

        $i2 = $i1 + 6;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(int)>($i2);

        r19 = $r9;

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r13 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        r6 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.params.HttpParams params>;

        r7 = staticinvoke <org.apache.http.params.HttpProtocolParams: org.apache.http.ProtocolVersion getVersion(org.apache.http.params.HttpParams)>($r14);

        $r15 = new org.apache.http.message.BasicHttpRequest;

        specialinvoke $r15.<org.apache.http.message.BasicHttpRequest: void <init>(java.lang.String,java.lang.String,org.apache.http.ProtocolVersion)>("CONNECT", r6, r7);

        r8 = $r15;

        return r8;
    }

    protected org.apache.http.impl.client.RoutedRequest handleResponse(org.apache.http.impl.client.RoutedRequest, org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException
    {
        org.apache.http.impl.client.DefaultRequestDirector r0;
        org.apache.http.impl.client.RoutedRequest r1, r14, $r41;
        org.apache.http.HttpResponse r2;
        org.apache.http.protocol.HttpContext r3;
        org.apache.http.conn.routing.HttpRoute r4, r13;
        org.apache.http.HttpHost r5, r9, $r37, r75;
        org.apache.http.impl.client.RequestWrapper r6, r12, $r42;
        org.apache.http.params.HttpParams r7;
        java.net.URI r8;
        org.apache.http.client.methods.HttpGet r10, $r39;
        org.apache.http.HttpRequest r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.Object $r15, $r28;
        org.apache.http.client.AuthenticationHandler $r16, $r17, $r20, $r22, $r27, $r32;
        org.apache.http.auth.AuthState $r18, $r19, $r23, $r25, $r26, $r30, $r31, $r33;
        org.apache.commons.logging.Log $r21, $r29, $r48, $r50, $r59, $r62, $r65, $r71;
        org.apache.http.auth.Credentials $r24, $r35;
        org.apache.http.client.RedirectHandler $r34, $r38;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r36, $r40, $r53, $r54, $r61, $r67, $r70, $r73;
        org.apache.http.Header[] $r43;
        java.lang.StringBuilder $r44, $r45, $r46, $r47, $r49, $r51, $r52, $r56, $r57, $r58, $r60, $r64, $r66, $r68, $r72;
        org.apache.http.client.RedirectException $r55;
        org.apache.http.auth.AuthenticationException $r63, $r69, r77, r79;
        org.apache.http.client.CredentialsProvider r74;
        java.util.Map r76, r78;

        r0 := @this: org.apache.http.impl.client.DefaultRequestDirector;

        r1 := @parameter0: org.apache.http.impl.client.RoutedRequest;

        r2 := @parameter1: org.apache.http.HttpResponse;

        r3 := @parameter2: org.apache.http.protocol.HttpContext;

        r4 = virtualinvoke r1.<org.apache.http.impl.client.RoutedRequest: org.apache.http.conn.routing.HttpRoute getRoute()>();

        r5 = virtualinvoke r4.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getProxyHost()>();

        r6 = virtualinvoke r1.<org.apache.http.impl.client.RoutedRequest: org.apache.http.impl.client.RequestWrapper getRequest()>();

        r7 = virtualinvoke r6.<org.apache.http.impl.client.RequestWrapper: org.apache.http.params.HttpParams getParams()>();

        $z0 = staticinvoke <org.apache.http.client.params.HttpClientParams: boolean isRedirecting(org.apache.http.params.HttpParams)>(r7);

        if $z0 == 0 goto label03;

        $r34 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.RedirectHandler redirectHandler>;

        $z4 = interfaceinvoke $r34.<org.apache.http.client.RedirectHandler: boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>(r2, r3);

        if $z4 == 0 goto label03;

        $i2 = r0.<org.apache.http.impl.client.DefaultRequestDirector: int redirectCount>;

        $i3 = r0.<org.apache.http.impl.client.DefaultRequestDirector: int maxRedirects>;

        if $i2 < $i3 goto label01;

        $r55 = new org.apache.http.client.RedirectException;

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Maximum redirects (");

        $i5 = r0.<org.apache.http.impl.client.DefaultRequestDirector: int maxRedirects>;

        $r51 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") exceeded");

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r55.<org.apache.http.client.RedirectException: void <init>(java.lang.String)>($r53);

        throw $r55;

     label01:
        $i1 = r0.<org.apache.http.impl.client.DefaultRequestDirector: int redirectCount>;

        $i0 = $i1 + 1;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: int redirectCount> = $i0;

        $r38 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.RedirectHandler redirectHandler>;

        r8 = interfaceinvoke $r38.<org.apache.http.client.RedirectHandler: java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>(r2, r3);

        $r37 = new org.apache.http.HttpHost;

        $r36 = virtualinvoke r8.<java.net.URI: java.lang.String getHost()>();

        $i4 = virtualinvoke r8.<java.net.URI: int getPort()>();

        $r40 = virtualinvoke r8.<java.net.URI: java.lang.String getScheme()>();

        specialinvoke $r37.<org.apache.http.HttpHost: void <init>(java.lang.String,int,java.lang.String)>($r36, $i4, $r40);

        r9 = $r37;

        $r39 = new org.apache.http.client.methods.HttpGet;

        specialinvoke $r39.<org.apache.http.client.methods.HttpGet: void <init>(java.net.URI)>(r8);

        r10 = $r39;

        r11 = virtualinvoke r6.<org.apache.http.impl.client.RequestWrapper: org.apache.http.HttpRequest getOriginal()>();

        $r43 = interfaceinvoke r11.<org.apache.http.HttpRequest: org.apache.http.Header[] getAllHeaders()>();

        virtualinvoke r10.<org.apache.http.client.methods.HttpGet: void setHeaders(org.apache.http.Header[])>($r43);

        $r42 = new org.apache.http.impl.client.RequestWrapper;

        specialinvoke $r42.<org.apache.http.impl.client.RequestWrapper: void <init>(org.apache.http.HttpRequest)>(r10);

        r12 = $r42;

        virtualinvoke r12.<org.apache.http.impl.client.RequestWrapper: void setParams(org.apache.http.params.HttpParams)>(r7);

        r13 = virtualinvoke r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.routing.HttpRoute determineRoute(org.apache.http.HttpHost,org.apache.http.HttpRequest,org.apache.http.protocol.HttpContext)>(r9, r12, r3);

        $r41 = new org.apache.http.impl.client.RoutedRequest;

        specialinvoke $r41.<org.apache.http.impl.client.RoutedRequest: void <init>(org.apache.http.impl.client.RequestWrapper,org.apache.http.conn.routing.HttpRoute)>(r12, r13);

        r14 = $r41;

        $r48 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $z5 = interfaceinvoke $r48.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z5 == 0 goto label02;

        $r50 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Redirecting to \'");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' via ");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r13);

        $r54 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r50.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r54);

     label02:
        return r14;

     label03:
        $r15 = interfaceinvoke r3.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.auth.credentials-provider");

        r74 = (org.apache.http.client.CredentialsProvider) $r15;

        if r74 == null goto label17;

        $z1 = staticinvoke <org.apache.http.client.params.HttpClientParams: boolean isAuthenticating(org.apache.http.params.HttpParams)>(r7);

        if $z1 == 0 goto label17;

        $r16 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.AuthenticationHandler targetAuthHandler>;

        $z2 = interfaceinvoke $r16.<org.apache.http.client.AuthenticationHandler: boolean isAuthenticationRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>(r2, r3);

        if $z2 == 0 goto label10;

        $r28 = interfaceinvoke r3.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.target_host");

        r75 = (org.apache.http.HttpHost) $r28;

        if r75 != null goto label04;

        r75 = virtualinvoke r4.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getTargetHost()>();

     label04:
        $r29 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r29.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Target requested authentication");

        $r27 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.AuthenticationHandler targetAuthHandler>;

        r76 = interfaceinvoke $r27.<org.apache.http.client.AuthenticationHandler: java.util.Map getChallenges(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>(r2, r3);

     label05:
        $r33 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState targetAuthState>;

        $r32 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.AuthenticationHandler targetAuthHandler>;

        specialinvoke r0.<org.apache.http.impl.client.DefaultRequestDirector: void processChallenges(java.util.Map,org.apache.http.auth.AuthState,org.apache.http.client.AuthenticationHandler,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>(r76, $r33, $r32, r2, r3);

     label06:
        goto label08;

     label07:
        $r63 := @caughtexception;

        r77 = $r63;

        $r62 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $z6 = interfaceinvoke $r62.<org.apache.commons.logging.Log: boolean isWarnEnabled()>();

        if $z6 == 0 goto label08;

        $r59 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        $r58 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Authentication error: ");

        $r61 = virtualinvoke r77.<org.apache.http.auth.AuthenticationException: java.lang.String getMessage()>();

        $r60 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        $r70 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r59.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r70);

        return null;

     label08:
        $r30 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState targetAuthState>;

        specialinvoke r0.<org.apache.http.impl.client.DefaultRequestDirector: void updateAuthState(org.apache.http.auth.AuthState,org.apache.http.HttpHost,org.apache.http.client.CredentialsProvider)>($r30, r75, r74);

        $r31 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState targetAuthState>;

        $r35 = virtualinvoke $r31.<org.apache.http.auth.AuthState: org.apache.http.auth.Credentials getCredentials()>();

        if $r35 == null goto label09;

        return r1;

     label09:
        return null;

     label10:
        $r18 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState targetAuthState>;

        virtualinvoke $r18.<org.apache.http.auth.AuthState: void setAuthScope(org.apache.http.auth.AuthScope)>(null);

        $r17 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.AuthenticationHandler proxyAuthHandler>;

        $z3 = interfaceinvoke $r17.<org.apache.http.client.AuthenticationHandler: boolean isAuthenticationRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>(r2, r3);

        if $z3 == 0 goto label16;

        $r21 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r21.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Proxy requested authentication");

        $r20 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.AuthenticationHandler proxyAuthHandler>;

        r78 = interfaceinvoke $r20.<org.apache.http.client.AuthenticationHandler: java.util.Map getChallenges(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>(r2, r3);

     label11:
        $r25 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState proxyAuthState>;

        $r22 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.client.AuthenticationHandler proxyAuthHandler>;

        specialinvoke r0.<org.apache.http.impl.client.DefaultRequestDirector: void processChallenges(java.util.Map,org.apache.http.auth.AuthState,org.apache.http.client.AuthenticationHandler,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>(r78, $r25, $r22, r2, r3);

     label12:
        goto label14;

     label13:
        $r69 := @caughtexception;

        r79 = $r69;

        $r71 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $z7 = interfaceinvoke $r71.<org.apache.commons.logging.Log: boolean isWarnEnabled()>();

        if $z7 == 0 goto label14;

        $r65 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r68 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Authentication error: ");

        $r67 = virtualinvoke r79.<org.apache.http.auth.AuthenticationException: java.lang.String getMessage()>();

        $r72 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r67);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r65.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r73);

        return null;

     label14:
        $r26 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState proxyAuthState>;

        specialinvoke r0.<org.apache.http.impl.client.DefaultRequestDirector: void updateAuthState(org.apache.http.auth.AuthState,org.apache.http.HttpHost,org.apache.http.client.CredentialsProvider)>($r26, r5, r74);

        $r23 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState proxyAuthState>;

        $r24 = virtualinvoke $r23.<org.apache.http.auth.AuthState: org.apache.http.auth.Credentials getCredentials()>();

        if $r24 == null goto label15;

        return r1;

     label15:
        return null;

     label16:
        $r19 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.auth.AuthState proxyAuthState>;

        virtualinvoke $r19.<org.apache.http.auth.AuthState: void setAuthScope(org.apache.http.auth.AuthScope)>(null);

     label17:
        return null;

        catch org.apache.http.auth.AuthenticationException from label05 to label06 with label07;
        catch org.apache.http.auth.AuthenticationException from label11 to label12 with label13;
    }

    private void abortConnection()
    {
        org.apache.http.impl.client.DefaultRequestDirector r0;
        org.apache.http.conn.ManagedClientConnection r1;
        java.io.IOException r2, $r3, $r5, r9;
        org.apache.commons.logging.Log $r4, $r6, $r7;
        boolean $z0;
        java.lang.String $r8;

        r0 := @this: org.apache.http.impl.client.DefaultRequestDirector;

        r1 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn>;

        if r1 == null goto label7;

        r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ManagedClientConnection managedConn> = null;

     label1:
        interfaceinvoke r1.<org.apache.http.conn.ManagedClientConnection: void abortConnection()>();

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        $r6 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r6.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label4;

        $r7 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $r8 = virtualinvoke r2.<java.io.IOException: java.lang.String getMessage()>();

        interfaceinvoke $r7.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>($r8, r2);

     label4:
        interfaceinvoke r1.<org.apache.http.conn.ManagedClientConnection: void releaseConnection()>();

     label5:
        goto label7;

     label6:
        $r3 := @caughtexception;

        r9 = $r3;

        $r4 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r4.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>("Error releasing connection", r9);

     label7:
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.io.IOException from label4 to label5 with label6;
    }

    private void processChallenges(java.util.Map, org.apache.http.auth.AuthState, org.apache.http.client.AuthenticationHandler, org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext) throws org.apache.http.auth.MalformedChallengeException, org.apache.http.auth.AuthenticationException
    {
        org.apache.http.impl.client.DefaultRequestDirector r0;
        java.util.Map r1;
        org.apache.http.auth.AuthState r2;
        org.apache.http.client.AuthenticationHandler r3;
        org.apache.http.HttpResponse r4;
        org.apache.http.protocol.HttpContext r5;
        org.apache.http.auth.AuthScheme r6;
        java.lang.String r7, $r10, $r16;
        org.apache.http.Header r8;
        java.util.Locale $r9;
        java.lang.Object $r11;
        org.apache.commons.logging.Log $r12;
        org.apache.http.auth.AuthenticationException $r13;
        java.lang.StringBuilder $r14, $r15, $r17;

        r0 := @this: org.apache.http.impl.client.DefaultRequestDirector;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: org.apache.http.auth.AuthState;

        r3 := @parameter2: org.apache.http.client.AuthenticationHandler;

        r4 := @parameter3: org.apache.http.HttpResponse;

        r5 := @parameter4: org.apache.http.protocol.HttpContext;

        r6 = virtualinvoke r2.<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScheme getAuthScheme()>();

        if r6 != null goto label1;

        r6 = interfaceinvoke r3.<org.apache.http.client.AuthenticationHandler: org.apache.http.auth.AuthScheme selectScheme(java.util.Map,org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext)>(r1, r4, r5);

        virtualinvoke r2.<org.apache.http.auth.AuthState: void setAuthScheme(org.apache.http.auth.AuthScheme)>(r6);

     label1:
        r7 = interfaceinvoke r6.<org.apache.http.auth.AuthScheme: java.lang.String getSchemeName()>();

        $r9 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r10 = virtualinvoke r7.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r9);

        $r11 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r10);

        r8 = (org.apache.http.Header) $r11;

        if r8 != null goto label2;

        $r13 = new org.apache.http.auth.AuthenticationException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" authorization challenge expected, but not found");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<org.apache.http.auth.AuthenticationException: void <init>(java.lang.String)>($r16);

        throw $r13;

     label2:
        interfaceinvoke r6.<org.apache.http.auth.AuthScheme: void processChallenge(org.apache.http.Header)>(r8);

        $r12 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r12.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Authorization challenge processed");

        return;
    }

    private void updateAuthState(org.apache.http.auth.AuthState, org.apache.http.HttpHost, org.apache.http.client.CredentialsProvider)
    {
        org.apache.http.impl.client.DefaultRequestDirector r0;
        org.apache.http.auth.AuthState r1;
        org.apache.http.HttpHost r2;
        org.apache.http.client.CredentialsProvider r3;
        java.lang.String r4, $r9, $r10, $r21;
        int i0;
        org.apache.http.conn.scheme.Scheme r5;
        org.apache.http.auth.AuthScope r6, $r8;
        org.apache.http.auth.Credentials r7;
        boolean $z0, $z1, $z2, $z3;
        org.apache.commons.logging.Log $r11, $r12, $r13, $r14, $r15, $r16;
        java.lang.StringBuilder $r17, $r18, $r19;
        org.apache.http.conn.ClientConnectionManager $r20;
        org.apache.http.conn.scheme.SchemeRegistry $r22;
        org.apache.http.auth.AuthScheme r23;

        r0 := @this: org.apache.http.impl.client.DefaultRequestDirector;

        r1 := @parameter0: org.apache.http.auth.AuthState;

        r2 := @parameter1: org.apache.http.HttpHost;

        r3 := @parameter2: org.apache.http.client.CredentialsProvider;

        $z0 = virtualinvoke r1.<org.apache.http.auth.AuthState: boolean isValid()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        r4 = virtualinvoke r2.<org.apache.http.HttpHost: java.lang.String getHostName()>();

        i0 = virtualinvoke r2.<org.apache.http.HttpHost: int getPort()>();

        if i0 >= 0 goto label2;

        $r20 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.http.conn.ClientConnectionManager connManager>;

        $r22 = interfaceinvoke $r20.<org.apache.http.conn.ClientConnectionManager: org.apache.http.conn.scheme.SchemeRegistry getSchemeRegistry()>();

        r5 = virtualinvoke $r22.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme getScheme(org.apache.http.HttpHost)>(r2);

        i0 = virtualinvoke r5.<org.apache.http.conn.scheme.Scheme: int getDefaultPort()>();

     label2:
        r23 = virtualinvoke r1.<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScheme getAuthScheme()>();

        $r8 = new org.apache.http.auth.AuthScope;

        $r9 = interfaceinvoke r23.<org.apache.http.auth.AuthScheme: java.lang.String getRealm()>();

        $r10 = interfaceinvoke r23.<org.apache.http.auth.AuthScheme: java.lang.String getSchemeName()>();

        specialinvoke $r8.<org.apache.http.auth.AuthScope: void <init>(java.lang.String,int,java.lang.String,java.lang.String)>(r4, i0, $r9, $r10);

        r6 = $r8;

        $r11 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $z1 = interfaceinvoke $r11.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z1 == 0 goto label3;

        $r16 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Authentication scope: ");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r16.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r21);

     label3:
        r7 = virtualinvoke r1.<org.apache.http.auth.AuthState: org.apache.http.auth.Credentials getCredentials()>();

        if r7 != null goto label5;

        r7 = interfaceinvoke r3.<org.apache.http.client.CredentialsProvider: org.apache.http.auth.Credentials getCredentials(org.apache.http.auth.AuthScope)>(r6);

        $r13 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        $z3 = interfaceinvoke $r13.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z3 == 0 goto label6;

        if r7 == null goto label4;

        $r14 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r14.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Found credentials");

        goto label6;

     label4:
        $r15 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r15.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Credentials not found");

        goto label6;

     label5:
        $z2 = interfaceinvoke r23.<org.apache.http.auth.AuthScheme: boolean isComplete()>();

        if $z2 == 0 goto label6;

        $r12 = r0.<org.apache.http.impl.client.DefaultRequestDirector: org.apache.commons.logging.Log log>;

        interfaceinvoke $r12.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Authentication failed");

        r7 = null;

     label6:
        virtualinvoke r1.<org.apache.http.auth.AuthState: void setAuthScope(org.apache.http.auth.AuthScope)>(r6);

        virtualinvoke r1.<org.apache.http.auth.AuthState: void setCredentials(org.apache.http.auth.Credentials)>(r7);

        return;
    }
}
