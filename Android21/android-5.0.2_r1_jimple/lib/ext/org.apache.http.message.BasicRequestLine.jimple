public class org.apache.http.message.BasicRequestLine extends java.lang.Object implements org.apache.http.RequestLine, java.lang.Cloneable
{
    private final org.apache.http.ProtocolVersion protoversion;
    private final java.lang.String method;
    private final java.lang.String uri;

    public void <init>(java.lang.String, java.lang.String, org.apache.http.ProtocolVersion)
    {
        org.apache.http.message.BasicRequestLine r0;
        java.lang.String r1, r2;
        org.apache.http.ProtocolVersion r3;
        java.lang.IllegalArgumentException $r4, $r5, $r6;

        r0 := @this: org.apache.http.message.BasicRequestLine;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.http.ProtocolVersion;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Method must not be null.");

        throw $r6;

     label1:
        if r2 != null goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("URI must not be null.");

        throw $r5;

     label2:
        if r3 != null goto label3;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Protocol version must not be null.");

        throw $r4;

     label3:
        r0.<org.apache.http.message.BasicRequestLine: java.lang.String method> = r1;

        r0.<org.apache.http.message.BasicRequestLine: java.lang.String uri> = r2;

        r0.<org.apache.http.message.BasicRequestLine: org.apache.http.ProtocolVersion protoversion> = r3;

        return;
    }

    public java.lang.String getMethod()
    {
        org.apache.http.message.BasicRequestLine r0;
        java.lang.String $r1;

        r0 := @this: org.apache.http.message.BasicRequestLine;

        $r1 = r0.<org.apache.http.message.BasicRequestLine: java.lang.String method>;

        return $r1;
    }

    public org.apache.http.ProtocolVersion getProtocolVersion()
    {
        org.apache.http.message.BasicRequestLine r0;
        org.apache.http.ProtocolVersion $r1;

        r0 := @this: org.apache.http.message.BasicRequestLine;

        $r1 = r0.<org.apache.http.message.BasicRequestLine: org.apache.http.ProtocolVersion protoversion>;

        return $r1;
    }

    public java.lang.String getUri()
    {
        org.apache.http.message.BasicRequestLine r0;
        java.lang.String $r1;

        r0 := @this: org.apache.http.message.BasicRequestLine;

        $r1 = r0.<org.apache.http.message.BasicRequestLine: java.lang.String uri>;

        return $r1;
    }

    public java.lang.String toString()
    {
        org.apache.http.message.BasicRequestLine r0;
        org.apache.http.message.BasicLineFormatter $r1;
        org.apache.http.util.CharArrayBuffer $r2;
        java.lang.String $r3;

        r0 := @this: org.apache.http.message.BasicRequestLine;

        $r1 = <org.apache.http.message.BasicLineFormatter: org.apache.http.message.BasicLineFormatter DEFAULT>;

        $r2 = virtualinvoke $r1.<org.apache.http.message.BasicLineFormatter: org.apache.http.util.CharArrayBuffer formatRequestLine(org.apache.http.util.CharArrayBuffer,org.apache.http.RequestLine)>(null, r0);

        $r3 = virtualinvoke $r2.<org.apache.http.util.CharArrayBuffer: java.lang.String toString()>();

        return $r3;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.http.message.BasicRequestLine r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.http.message.BasicRequestLine;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        return $r1;
    }
}
