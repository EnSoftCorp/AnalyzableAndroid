public class org.apache.http.message.HeaderGroup extends java.lang.Object implements java.lang.Cloneable
{
    private java.util.List headers;

    public void <init>()
    {
        org.apache.http.message.HeaderGroup r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.http.message.HeaderGroup;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>(16);

        r0.<org.apache.http.message.HeaderGroup: java.util.List headers> = $r1;

        return;
    }

    public void clear()
    {
        org.apache.http.message.HeaderGroup r0;
        java.util.List $r1;

        r0 := @this: org.apache.http.message.HeaderGroup;

        $r1 = r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return;
    }

    public void addHeader(org.apache.http.Header)
    {
        org.apache.http.message.HeaderGroup r0;
        org.apache.http.Header r1;
        java.util.List $r2;

        r0 := @this: org.apache.http.message.HeaderGroup;

        r1 := @parameter0: org.apache.http.Header;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void removeHeader(org.apache.http.Header)
    {
        org.apache.http.message.HeaderGroup r0;
        org.apache.http.Header r1;
        java.util.List $r2;

        r0 := @this: org.apache.http.message.HeaderGroup;

        r1 := @parameter0: org.apache.http.Header;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        interfaceinvoke $r2.<java.util.List: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public void updateHeader(org.apache.http.Header)
    {
        org.apache.http.message.HeaderGroup r0;
        org.apache.http.Header r1, r2;
        int i0, $i1;
        java.util.List $r3, $r4, $r5, $r9;
        java.lang.Object $r6;
        java.lang.String $r7, $r8;
        boolean $z1;

        r0 := @this: org.apache.http.message.HeaderGroup;

        r1 := @parameter0: org.apache.http.Header;

        if r1 != null goto label1;

        return;

     label1:
        i0 = 0;

     label2:
        $r3 = r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        if i0 >= $i1 goto label4;

        $r5 = r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(i0);

        r2 = (org.apache.http.Header) $r6;

        $r7 = interfaceinvoke r2.<org.apache.http.Header: java.lang.String getName()>();

        $r8 = interfaceinvoke r1.<org.apache.http.Header: java.lang.String getName()>();

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r8);

        if $z1 == 0 goto label3;

        $r9 = r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        interfaceinvoke $r9.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r1);

        return;

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        $r4 = r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void setHeaders(org.apache.http.Header[])
    {
        org.apache.http.message.HeaderGroup r0;
        org.apache.http.Header[] r1;
        int i0, $i1;
        org.apache.http.Header $r2;
        java.util.List $r3;

        r0 := @this: org.apache.http.message.HeaderGroup;

        r1 := @parameter0: org.apache.http.Header[];

        virtualinvoke r0.<org.apache.http.message.HeaderGroup: void clear()>();

        if r1 != null goto label1;

        return;

     label1:
        i0 = 0;

     label2:
        $i1 = lengthof r1;

        if i0 >= $i1 goto label3;

        $r3 = r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        $r2 = r1[i0];

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r2);

        i0 = i0 + 1;

        goto label2;

     label3:
        return;
    }

    public org.apache.http.Header getCondensedHeader(java.lang.String)
    {
        org.apache.http.message.HeaderGroup r0;
        java.lang.String r1, $r6, $r9, $r10, $r11;
        org.apache.http.Header[] r2;
        org.apache.http.util.CharArrayBuffer r3, $r4;
        int i0, $i1, $i2, $i3;
        org.apache.http.Header $r5, $r12, $r13;
        org.apache.http.message.BasicHeader $r7;
        java.util.Locale $r8;

        r0 := @this: org.apache.http.message.HeaderGroup;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<org.apache.http.message.HeaderGroup: org.apache.http.Header[] getHeaders(java.lang.String)>(r1);

        $i1 = lengthof r2;

        if $i1 != 0 goto label1;

        return null;

     label1:
        $i2 = lengthof r2;

        if $i2 != 1 goto label2;

        $r13 = r2[0];

        return $r13;

     label2:
        $r4 = new org.apache.http.util.CharArrayBuffer;

        specialinvoke $r4.<org.apache.http.util.CharArrayBuffer: void <init>(int)>(128);

        r3 = $r4;

        $r5 = r2[0];

        $r6 = interfaceinvoke $r5.<org.apache.http.Header: java.lang.String getValue()>();

        virtualinvoke r3.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>($r6);

        i0 = 1;

     label3:
        $i3 = lengthof r2;

        if i0 >= $i3 goto label4;

        virtualinvoke r3.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>(", ");

        $r12 = r2[i0];

        $r11 = interfaceinvoke $r12.<org.apache.http.Header: java.lang.String getValue()>();

        virtualinvoke r3.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>($r11);

        i0 = i0 + 1;

        goto label3;

     label4:
        $r7 = new org.apache.http.message.BasicHeader;

        $r8 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r9 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r8);

        $r10 = virtualinvoke r3.<org.apache.http.util.CharArrayBuffer: java.lang.String toString()>();

        specialinvoke $r7.<org.apache.http.message.BasicHeader: void <init>(java.lang.String,java.lang.String)>($r9, $r10);

        return $r7;
    }

    public org.apache.http.Header[] getHeaders(java.lang.String)
    {
        org.apache.http.message.HeaderGroup r0;
        java.lang.String r1, $r12;
        java.util.ArrayList r2, $r4;
        int i0, $i1, $i2;
        org.apache.http.Header r3;
        java.util.List $r5, $r10;
        org.apache.http.Header[] $r6, $r8, $r9;
        java.lang.Object[] $r7;
        java.lang.Object $r11;
        boolean $z1;

        r0 := @this: org.apache.http.message.HeaderGroup;

        r1 := @parameter0: java.lang.String;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r2 = $r4;

        i0 = 0;

     label1:
        $r5 = r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        if i0 >= $i1 goto label3;

        $r10 = r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i0);

        r3 = (org.apache.http.Header) $r11;

        $r12 = interfaceinvoke r3.<org.apache.http.Header: java.lang.String getName()>();

        $z1 = virtualinvoke $r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z1 == 0 goto label2;

        virtualinvoke r2.<java.util.ArrayList: boolean add(java.lang.Object)>(r3);

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $i2 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        $r6 = newarray (org.apache.http.Header)[$i2];

        $r7 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r6);

        $r8 = (org.apache.http.Header[]) $r7;

        $r9 = (org.apache.http.Header[]) $r8;

        return $r9;
    }

    public org.apache.http.Header getFirstHeader(java.lang.String)
    {
        org.apache.http.message.HeaderGroup r0;
        java.lang.String r1, $r6;
        int i0, $i1;
        org.apache.http.Header r2;
        java.util.List $r3, $r4;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: org.apache.http.message.HeaderGroup;

        r1 := @parameter0: java.lang.String;

        i0 = 0;

     label1:
        $r3 = r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        if i0 >= $i1 goto label3;

        $r4 = r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i0);

        r2 = (org.apache.http.Header) $r5;

        $r6 = interfaceinvoke r2.<org.apache.http.Header: java.lang.String getName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z0 == 0 goto label2;

        return r2;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return null;
    }

    public org.apache.http.Header getLastHeader(java.lang.String)
    {
        org.apache.http.message.HeaderGroup r0;
        java.lang.String r1, $r6;
        int i0, $i1;
        org.apache.http.Header r2;
        java.util.List $r3, $r4;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: org.apache.http.message.HeaderGroup;

        r1 := @parameter0: java.lang.String;

        $r3 = r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        i0 = $i1 - 1;

     label1:
        if i0 < 0 goto label3;

        $r4 = r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i0);

        r2 = (org.apache.http.Header) $r5;

        $r6 = interfaceinvoke r2.<org.apache.http.Header: java.lang.String getName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z0 == 0 goto label2;

        return r2;

     label2:
        i0 = i0 + -1;

        goto label1;

     label3:
        return null;
    }

    public org.apache.http.Header[] getAllHeaders()
    {
        org.apache.http.message.HeaderGroup r0;
        java.util.List $r1, $r2;
        int $i0;
        org.apache.http.Header[] $r3, $r5, $r6;
        java.lang.Object[] $r4;

        r0 := @this: org.apache.http.message.HeaderGroup;

        $r2 = r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        $r1 = r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r3 = newarray (org.apache.http.Header)[$i0];

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (org.apache.http.Header[]) $r4;

        $r6 = (org.apache.http.Header[]) $r5;

        return $r6;
    }

    public boolean containsHeader(java.lang.String)
    {
        org.apache.http.message.HeaderGroup r0;
        java.lang.String r1, $r6;
        int i0, $i1;
        org.apache.http.Header r2;
        java.util.List $r3, $r4;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: org.apache.http.message.HeaderGroup;

        r1 := @parameter0: java.lang.String;

        i0 = 0;

     label1:
        $r3 = r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        if i0 >= $i1 goto label3;

        $r4 = r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i0);

        r2 = (org.apache.http.Header) $r5;

        $r6 = interfaceinvoke r2.<org.apache.http.Header: java.lang.String getName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return 0;
    }

    public org.apache.http.HeaderIterator iterator()
    {
        org.apache.http.message.HeaderGroup r0;
        org.apache.http.message.BasicListHeaderIterator $r1;
        java.util.List $r2;

        r0 := @this: org.apache.http.message.HeaderGroup;

        $r1 = new org.apache.http.message.BasicListHeaderIterator;

        $r2 = r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        specialinvoke $r1.<org.apache.http.message.BasicListHeaderIterator: void <init>(java.util.List,java.lang.String)>($r2, null);

        return $r1;
    }

    public org.apache.http.HeaderIterator iterator(java.lang.String)
    {
        org.apache.http.message.HeaderGroup r0;
        java.lang.String r1;
        org.apache.http.message.BasicListHeaderIterator $r2;
        java.util.List $r3;

        r0 := @this: org.apache.http.message.HeaderGroup;

        r1 := @parameter0: java.lang.String;

        $r2 = new org.apache.http.message.BasicListHeaderIterator;

        $r3 = r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        specialinvoke $r2.<org.apache.http.message.BasicListHeaderIterator: void <init>(java.util.List,java.lang.String)>($r3, r1);

        return $r2;
    }

    public org.apache.http.message.HeaderGroup copy()
    {
        org.apache.http.message.HeaderGroup r0, r1, $r2;
        java.util.List $r3, $r4;

        r0 := @this: org.apache.http.message.HeaderGroup;

        $r2 = new org.apache.http.message.HeaderGroup;

        specialinvoke $r2.<org.apache.http.message.HeaderGroup: void <init>()>();

        r1 = $r2;

        $r4 = r1.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        $r3 = r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        interfaceinvoke $r4.<java.util.List: boolean addAll(java.util.Collection)>($r3);

        return r1;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.http.message.HeaderGroup r0, r1;
        java.lang.Object $r2;
        java.util.ArrayList $r3;
        java.util.List $r4;

        r0 := @this: org.apache.http.message.HeaderGroup;

        $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r1 = (org.apache.http.message.HeaderGroup) $r2;

        $r3 = new java.util.ArrayList;

        $r4 = r0.<org.apache.http.message.HeaderGroup: java.util.List headers>;

        specialinvoke $r3.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        r1.<org.apache.http.message.HeaderGroup: java.util.List headers> = $r3;

        return r1;
    }
}
