final class org.apache.commons.logging.impl.WeakHashtable$Referenced extends java.lang.Object
{
    private final java.lang.ref.WeakReference reference;
    private final int hashCode;

    private void <init>(java.lang.Object)
    {
        org.apache.commons.logging.impl.WeakHashtable$Referenced r0;
        java.lang.Object r1;
        java.lang.ref.WeakReference $r2;
        int $i0;

        r0 := @this: org.apache.commons.logging.impl.WeakHashtable$Referenced;

        r1 := @parameter0: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.lang.ref.WeakReference;

        specialinvoke $r2.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r1);

        r0.<org.apache.commons.logging.impl.WeakHashtable$Referenced: java.lang.ref.WeakReference reference> = $r2;

        $i0 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        r0.<org.apache.commons.logging.impl.WeakHashtable$Referenced: int hashCode> = $i0;

        return;
    }

    private void <init>(java.lang.Object, java.lang.ref.ReferenceQueue)
    {
        org.apache.commons.logging.impl.WeakHashtable$Referenced r0;
        java.lang.Object r1;
        java.lang.ref.ReferenceQueue r2;
        org.apache.commons.logging.impl.WeakHashtable$WeakKey $r3;
        int $i0;

        r0 := @this: org.apache.commons.logging.impl.WeakHashtable$Referenced;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.ref.ReferenceQueue;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new org.apache.commons.logging.impl.WeakHashtable$WeakKey;

        specialinvoke $r3.<org.apache.commons.logging.impl.WeakHashtable$WeakKey: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue,org.apache.commons.logging.impl.WeakHashtable$Referenced,org.apache.commons.logging.impl.WeakHashtable$1)>(r1, r2, r0, null);

        r0.<org.apache.commons.logging.impl.WeakHashtable$Referenced: java.lang.ref.WeakReference reference> = $r3;

        $i0 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        r0.<org.apache.commons.logging.impl.WeakHashtable$Referenced: int hashCode> = $i0;

        return;
    }

    public int hashCode()
    {
        org.apache.commons.logging.impl.WeakHashtable$Referenced r0;
        int $i0;

        r0 := @this: org.apache.commons.logging.impl.WeakHashtable$Referenced;

        $i0 = r0.<org.apache.commons.logging.impl.WeakHashtable$Referenced: int hashCode>;

        return $i0;
    }

    private java.lang.Object getValue()
    {
        org.apache.commons.logging.impl.WeakHashtable$Referenced r0;
        java.lang.ref.WeakReference $r1;
        java.lang.Object $r2;

        r0 := @this: org.apache.commons.logging.impl.WeakHashtable$Referenced;

        $r1 = r0.<org.apache.commons.logging.impl.WeakHashtable$Referenced: java.lang.ref.WeakReference reference>;

        $r2 = virtualinvoke $r1.<java.lang.ref.WeakReference: java.lang.Object get()>();

        return $r2;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.commons.logging.impl.WeakHashtable$Referenced r0, r2;
        java.lang.Object r1, r3, r4;
        boolean z0, $z1, $z2, $z3;
        int $i0, $i1;

        r0 := @this: org.apache.commons.logging.impl.WeakHashtable$Referenced;

        r1 := @parameter0: java.lang.Object;

        z0 = 0;

        $z1 = r1 instanceof org.apache.commons.logging.impl.WeakHashtable$Referenced;

        if $z1 == 0 goto label6;

        r2 = (org.apache.commons.logging.impl.WeakHashtable$Referenced) r1;

        r3 = specialinvoke r0.<org.apache.commons.logging.impl.WeakHashtable$Referenced: java.lang.Object getValue()>();

        r4 = specialinvoke r2.<org.apache.commons.logging.impl.WeakHashtable$Referenced: java.lang.Object getValue()>();

        if r3 != null goto label5;

        if r4 != null goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        z0 = $z3;

        if z0 != 1 goto label6;

        $i0 = virtualinvoke r0.<org.apache.commons.logging.impl.WeakHashtable$Referenced: int hashCode()>();

        $i1 = virtualinvoke r2.<org.apache.commons.logging.impl.WeakHashtable$Referenced: int hashCode()>();

        if $i0 != $i1 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        z0 = $z2;

        goto label6;

     label5:
        z0 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(r4);

     label6:
        return z0;
    }

    void <init>(java.lang.Object, org.apache.commons.logging.impl.WeakHashtable$1)
    {
        org.apache.commons.logging.impl.WeakHashtable$Referenced r0;
        java.lang.Object r1;
        org.apache.commons.logging.impl.WeakHashtable$1 r2;

        r0 := @this: org.apache.commons.logging.impl.WeakHashtable$Referenced;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.commons.logging.impl.WeakHashtable$1;

        specialinvoke r0.<org.apache.commons.logging.impl.WeakHashtable$Referenced: void <init>(java.lang.Object)>(r1);

        return;
    }

    static java.lang.Object access$100(org.apache.commons.logging.impl.WeakHashtable$Referenced)
    {
        org.apache.commons.logging.impl.WeakHashtable$Referenced r0;
        java.lang.Object $r1;

        r0 := @parameter0: org.apache.commons.logging.impl.WeakHashtable$Referenced;

        $r1 = specialinvoke r0.<org.apache.commons.logging.impl.WeakHashtable$Referenced: java.lang.Object getValue()>();

        return $r1;
    }

    void <init>(java.lang.Object, java.lang.ref.ReferenceQueue, org.apache.commons.logging.impl.WeakHashtable$1)
    {
        org.apache.commons.logging.impl.WeakHashtable$Referenced r0;
        java.lang.Object r1;
        java.lang.ref.ReferenceQueue r2;
        org.apache.commons.logging.impl.WeakHashtable$1 r3;

        r0 := @this: org.apache.commons.logging.impl.WeakHashtable$Referenced;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.ref.ReferenceQueue;

        r3 := @parameter2: org.apache.commons.logging.impl.WeakHashtable$1;

        specialinvoke r0.<org.apache.commons.logging.impl.WeakHashtable$Referenced: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>(r1, r2);

        return;
    }
}
