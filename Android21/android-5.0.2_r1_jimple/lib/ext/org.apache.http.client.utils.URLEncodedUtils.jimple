public class org.apache.http.client.utils.URLEncodedUtils extends java.lang.Object
{
    public static final java.lang.String CONTENT_TYPE;
    private static final java.lang.String PARAMETER_SEPARATOR;
    private static final java.lang.String NAME_VALUE_SEPARATOR;

    public void <init>()
    {
        org.apache.http.client.utils.URLEncodedUtils r0;

        r0 := @this: org.apache.http.client.utils.URLEncodedUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.util.List parse(java.net.URI, java.lang.String)
    {
        java.net.URI r0;
        java.lang.String r1, r3;
        java.util.List r2;
        int $i0;
        java.util.ArrayList $r4;
        java.util.Scanner $r5;

        r0 := @parameter0: java.net.URI;

        r1 := @parameter1: java.lang.String;

        r2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r3 = virtualinvoke r0.<java.net.URI: java.lang.String getRawQuery()>();

        if r3 == null goto label1;

        $i0 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r2 = $r4;

        $r5 = new java.util.Scanner;

        specialinvoke $r5.<java.util.Scanner: void <init>(java.lang.String)>(r3);

        staticinvoke <org.apache.http.client.utils.URLEncodedUtils: void parse(java.util.List,java.util.Scanner,java.lang.String)>(r2, $r5, r1);

     label1:
        return r2;
    }

    public static java.util.List parse(org.apache.http.HttpEntity) throws java.io.IOException
    {
        org.apache.http.HttpEntity r0;
        java.util.List r1;
        java.lang.String r2, $r6;
        org.apache.http.Header r3;
        boolean $z0;
        int $i0;
        java.util.ArrayList $r4;
        java.util.Scanner $r5;

        r0 := @parameter0: org.apache.http.HttpEntity;

        r1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        $z0 = staticinvoke <org.apache.http.client.utils.URLEncodedUtils: boolean isEncoded(org.apache.http.HttpEntity)>(r0);

        if $z0 == 0 goto label3;

        r2 = staticinvoke <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity)>(r0);

        r3 = interfaceinvoke r0.<org.apache.http.HttpEntity: org.apache.http.Header getContentEncoding()>();

        if r2 == null goto label3;

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r1 = $r4;

        $r5 = new java.util.Scanner;

        specialinvoke $r5.<java.util.Scanner: void <init>(java.lang.String)>(r2);

        if r3 == null goto label1;

        $r6 = interfaceinvoke r3.<org.apache.http.Header: java.lang.String getValue()>();

        goto label2;

     label1:
        $r6 = null;

     label2:
        staticinvoke <org.apache.http.client.utils.URLEncodedUtils: void parse(java.util.List,java.util.Scanner,java.lang.String)>(r1, $r5, $r6);

     label3:
        return r1;
    }

    public static boolean isEncoded(org.apache.http.HttpEntity)
    {
        org.apache.http.HttpEntity r0;
        org.apache.http.Header r1;
        java.lang.String $r2;
        boolean $z0, $z1;

        r0 := @parameter0: org.apache.http.HttpEntity;

        r1 = interfaceinvoke r0.<org.apache.http.HttpEntity: org.apache.http.Header getContentType()>();

        if r1 == null goto label1;

        $r2 = interfaceinvoke r1.<org.apache.http.Header: java.lang.String getValue()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("application/x-www-form-urlencoded");

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public static void parse(java.util.List, java.util.Scanner, java.lang.String)
    {
        java.util.List r0;
        java.util.Scanner r1;
        java.lang.String r2, r4, r5, $r7, $r9, $r11;
        java.lang.String[] r3;
        boolean $z0;
        int $i0, $i1, $i2;
        java.lang.IllegalArgumentException $r8;
        org.apache.http.message.BasicNameValuePair $r10;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.Scanner;

        r2 := @parameter2: java.lang.String;

        virtualinvoke r1.<java.util.Scanner: java.util.Scanner useDelimiter(java.lang.String)>("&");

     label1:
        $z0 = virtualinvoke r1.<java.util.Scanner: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r7 = virtualinvoke r1.<java.util.Scanner: java.lang.String next()>();

        r3 = virtualinvoke $r7.<java.lang.String: java.lang.String[] split(java.lang.String)>("=");

        $i0 = lengthof r3;

        if $i0 == 0 goto label2;

        $i1 = lengthof r3;

        if $i1 <= 2 goto label3;

     label2:
        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("bad parameter");

        throw $r8;

     label3:
        $r9 = r3[0];

        r4 = staticinvoke <org.apache.http.client.utils.URLEncodedUtils: java.lang.String decode(java.lang.String,java.lang.String)>($r9, r2);

        r5 = null;

        $i2 = lengthof r3;

        if $i2 != 2 goto label4;

        $r11 = r3[1];

        r5 = staticinvoke <org.apache.http.client.utils.URLEncodedUtils: java.lang.String decode(java.lang.String,java.lang.String)>($r11, r2);

     label4:
        $r10 = new org.apache.http.message.BasicNameValuePair;

        specialinvoke $r10.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>(r4, r5);

        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>($r10);

        goto label1;

     label5:
        return;
    }

    public static java.lang.String format(java.util.List, java.lang.String)
    {
        java.util.List r0;
        java.lang.String r1, r5, r6, r7, $r9, $r11, $r15;
        java.lang.StringBuilder r2, $r8;
        java.util.Iterator r3;
        org.apache.http.NameValuePair r4;
        boolean $z0;
        java.lang.Object $r10;
        int $i0;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.lang.String;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        r2 = $r8;

        r3 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r10 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.http.NameValuePair) $r10;

        $r11 = interfaceinvoke r4.<org.apache.http.NameValuePair: java.lang.String getName()>();

        r5 = staticinvoke <org.apache.http.client.utils.URLEncodedUtils: java.lang.String encode(java.lang.String,java.lang.String)>($r11, r1);

        r6 = interfaceinvoke r4.<org.apache.http.NameValuePair: java.lang.String getValue()>();

        if r6 == null goto label2;

        $r15 = staticinvoke <org.apache.http.client.utils.URLEncodedUtils: java.lang.String encode(java.lang.String,java.lang.String)>(r6, r1);

        goto label3;

     label2:
        $r15 = "";

     label3:
        r7 = $r15;

        $i0 = virtualinvoke r2.<java.lang.StringBuilder: int length()>();

        if $i0 <= 0 goto label4;

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("&");

     label4:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        goto label1;

     label5:
        $r9 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    private static java.lang.String decode(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r3, $r4;
        java.io.UnsupportedEncodingException r2, $r5;
        java.lang.IllegalArgumentException $r6;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

     label1:
        if r1 == null goto label2;

        $r4 = r1;

        goto label3;

     label2:
        $r4 = "ISO-8859-1";

     label3:
        $r3 = staticinvoke <java.net.URLDecoder: java.lang.String decode(java.lang.String,java.lang.String)>(r0, $r4);

     label4:
        return $r3;

     label5:
        $r5 := @caughtexception;

        r2 = $r5;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>(r2);

        throw $r6;

        catch java.io.UnsupportedEncodingException from label1 to label4 with label5;
    }

    private static java.lang.String encode(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1, $r3, $r4;
        java.io.UnsupportedEncodingException r2, $r5;
        java.lang.IllegalArgumentException $r6;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

     label1:
        if r1 == null goto label2;

        $r4 = r1;

        goto label3;

     label2:
        $r4 = "ISO-8859-1";

     label3:
        $r3 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>(r0, $r4);

     label4:
        return $r3;

     label5:
        $r5 := @caughtexception;

        r2 = $r5;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>(r2);

        throw $r6;

        catch java.io.UnsupportedEncodingException from label1 to label4 with label5;
    }

    public static void <clinit>()
    {
        <org.apache.http.client.utils.URLEncodedUtils: java.lang.String NAME_VALUE_SEPARATOR> = "=";

        <org.apache.http.client.utils.URLEncodedUtils: java.lang.String PARAMETER_SEPARATOR> = "&";

        <org.apache.http.client.utils.URLEncodedUtils: java.lang.String CONTENT_TYPE> = "application/x-www-form-urlencoded";

        return;
    }
}
