public class gov.nist.javax.sip.parser.ErrorInfoParser extends gov.nist.javax.sip.parser.ParametersParser
{

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.ErrorInfoParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.ErrorInfoParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.ParametersParser: void <init>(java.lang.String)>(r1);

        return;
    }

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.ErrorInfoParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.ErrorInfoParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.ParametersParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    public gov.nist.javax.sip.header.SIPHeader parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.ErrorInfoParser r0;
        gov.nist.javax.sip.header.ErrorInfoList r1, $r6, r22;
        gov.nist.javax.sip.header.ErrorInfo r2, $r8;
        gov.nist.javax.sip.parser.URLParser r3, $r12;
        gov.nist.javax.sip.address.GenericURI r4;
        java.lang.Throwable r5, $r20;
        boolean $z0, $z1, $z3;
        gov.nist.core.LexerCore $r7, $r9, $r10, $r14, $r15, $r16, $r18, $r19;
        char $c0, $c1;
        gov.nist.javax.sip.parser.Lexer $r13;

        r0 := @this: gov.nist.javax.sip.parser.ErrorInfoParser;

        $z0 = <gov.nist.javax.sip.parser.ErrorInfoParser: boolean debug>;

        if $z0 == 0 goto label01;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ErrorInfoParser: void dbg_enter(java.lang.String)>("ErrorInfoParser.parse");

     label01:
        $r6 = new gov.nist.javax.sip.header.ErrorInfoList;

        specialinvoke $r6.<gov.nist.javax.sip.header.ErrorInfoList: void <init>()>();

        r1 = $r6;

     label02:
        virtualinvoke r0.<gov.nist.javax.sip.parser.ErrorInfoParser: void headerName(int)>(2058);

     label03:
        $r7 = r0.<gov.nist.javax.sip.parser.ErrorInfoParser: gov.nist.core.LexerCore lexer>;

        $c0 = virtualinvoke $r7.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c0 == 10 goto label05;

     label04:
        $r8 = new gov.nist.javax.sip.header.ErrorInfo;

        specialinvoke $r8.<gov.nist.javax.sip.header.ErrorInfo: void <init>()>();

        r2 = $r8;

        virtualinvoke r2.<gov.nist.javax.sip.header.ErrorInfo: void setHeaderName(java.lang.String)>("Error-Info");

        $r9 = r0.<gov.nist.javax.sip.parser.ErrorInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r9.<gov.nist.core.LexerCore: void SPorHT()>();

        $r10 = r0.<gov.nist.javax.sip.parser.ErrorInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r10.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(60);

        $r12 = new gov.nist.javax.sip.parser.URLParser;

        $r14 = r0.<gov.nist.javax.sip.parser.ErrorInfoParser: gov.nist.core.LexerCore lexer>;

        $r13 = (gov.nist.javax.sip.parser.Lexer) $r14;

        specialinvoke $r12.<gov.nist.javax.sip.parser.URLParser: void <init>(gov.nist.javax.sip.parser.Lexer)>($r13);

        r3 = $r12;

        r4 = virtualinvoke r3.<gov.nist.javax.sip.parser.URLParser: gov.nist.javax.sip.address.GenericURI uriReference(boolean)>(1);

        virtualinvoke r2.<gov.nist.javax.sip.header.ErrorInfo: void setErrorInfo(javax.sip.address.URI)>(r4);

        $r15 = r0.<gov.nist.javax.sip.parser.ErrorInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r15.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(62);

        $r16 = r0.<gov.nist.javax.sip.parser.ErrorInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r16.<gov.nist.core.LexerCore: void SPorHT()>();

        specialinvoke r0.<gov.nist.javax.sip.parser.ParametersParser: void parse(gov.nist.javax.sip.header.ParametersHeader)>(r2);

        virtualinvoke r1.<gov.nist.javax.sip.header.ErrorInfoList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r2);

        $r18 = r0.<gov.nist.javax.sip.parser.ErrorInfoParser: gov.nist.core.LexerCore lexer>;

        $c1 = virtualinvoke $r18.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c1 != 44 goto label03;

        $r19 = r0.<gov.nist.javax.sip.parser.ErrorInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r19.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(44);

        goto label04;

     label05:
        r22 = r1;

     label06:
        $z1 = <gov.nist.javax.sip.parser.ErrorInfoParser: boolean debug>;

        if $z1 == 0 goto label07;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ErrorInfoParser: void dbg_leave(java.lang.String)>("ErrorInfoParser.parse");

     label07:
        return r22;

     label08:
        $r20 := @caughtexception;

        r5 = $r20;

     label09:
        $z3 = <gov.nist.javax.sip.parser.ErrorInfoParser: boolean debug>;

        if $z3 == 0 goto label10;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ErrorInfoParser: void dbg_leave(java.lang.String)>("ErrorInfoParser.parse");

     label10:
        throw r5;

        catch java.lang.Throwable from label02 to label06 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }
}
