public abstract class org.apache.http.params.AbstractHttpParams extends java.lang.Object implements org.apache.http.params.HttpParams
{

    protected void <init>()
    {
        org.apache.http.params.AbstractHttpParams r0;

        r0 := @this: org.apache.http.params.AbstractHttpParams;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public long getLongParameter(java.lang.String, long)
    {
        org.apache.http.params.AbstractHttpParams r0;
        java.lang.String r1;
        long l0, $l1;
        java.lang.Object r2;
        java.lang.Long $r3;

        r0 := @this: org.apache.http.params.AbstractHttpParams;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        r2 = virtualinvoke r0.<org.apache.http.params.AbstractHttpParams: java.lang.Object getParameter(java.lang.String)>(r1);

        if r2 != null goto label1;

        return l0;

     label1:
        $r3 = (java.lang.Long) r2;

        $l1 = virtualinvoke $r3.<java.lang.Long: long longValue()>();

        return $l1;
    }

    public org.apache.http.params.HttpParams setLongParameter(java.lang.String, long)
    {
        org.apache.http.params.AbstractHttpParams r0;
        java.lang.String r1;
        long l0;
        java.lang.Long $r2;

        r0 := @this: org.apache.http.params.AbstractHttpParams;

        r1 := @parameter0: java.lang.String;

        l0 := @parameter1: long;

        $r2 = new java.lang.Long;

        specialinvoke $r2.<java.lang.Long: void <init>(long)>(l0);

        virtualinvoke r0.<org.apache.http.params.AbstractHttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>(r1, $r2);

        return r0;
    }

    public int getIntParameter(java.lang.String, int)
    {
        org.apache.http.params.AbstractHttpParams r0;
        java.lang.String r1;
        int i0, $i1;
        java.lang.Object r2;
        java.lang.Integer $r3;

        r0 := @this: org.apache.http.params.AbstractHttpParams;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 = virtualinvoke r0.<org.apache.http.params.AbstractHttpParams: java.lang.Object getParameter(java.lang.String)>(r1);

        if r2 != null goto label1;

        return i0;

     label1:
        $r3 = (java.lang.Integer) r2;

        $i1 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        return $i1;
    }

    public org.apache.http.params.HttpParams setIntParameter(java.lang.String, int)
    {
        org.apache.http.params.AbstractHttpParams r0;
        java.lang.String r1;
        int i0;
        java.lang.Integer $r2;

        r0 := @this: org.apache.http.params.AbstractHttpParams;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = new java.lang.Integer;

        specialinvoke $r2.<java.lang.Integer: void <init>(int)>(i0);

        virtualinvoke r0.<org.apache.http.params.AbstractHttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>(r1, $r2);

        return r0;
    }

    public double getDoubleParameter(java.lang.String, double)
    {
        org.apache.http.params.AbstractHttpParams r0;
        java.lang.String r1;
        double d0, $d1;
        java.lang.Object r2;
        java.lang.Double $r3;

        r0 := @this: org.apache.http.params.AbstractHttpParams;

        r1 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        r2 = virtualinvoke r0.<org.apache.http.params.AbstractHttpParams: java.lang.Object getParameter(java.lang.String)>(r1);

        if r2 != null goto label1;

        return d0;

     label1:
        $r3 = (java.lang.Double) r2;

        $d1 = virtualinvoke $r3.<java.lang.Double: double doubleValue()>();

        return $d1;
    }

    public org.apache.http.params.HttpParams setDoubleParameter(java.lang.String, double)
    {
        org.apache.http.params.AbstractHttpParams r0;
        java.lang.String r1;
        double d0;
        java.lang.Double $r2;

        r0 := @this: org.apache.http.params.AbstractHttpParams;

        r1 := @parameter0: java.lang.String;

        d0 := @parameter1: double;

        $r2 = new java.lang.Double;

        specialinvoke $r2.<java.lang.Double: void <init>(double)>(d0);

        virtualinvoke r0.<org.apache.http.params.AbstractHttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>(r1, $r2);

        return r0;
    }

    public boolean getBooleanParameter(java.lang.String, boolean)
    {
        org.apache.http.params.AbstractHttpParams r0;
        java.lang.String r1;
        boolean z0, $z1;
        java.lang.Object r2;
        java.lang.Boolean $r3;

        r0 := @this: org.apache.http.params.AbstractHttpParams;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 = virtualinvoke r0.<org.apache.http.params.AbstractHttpParams: java.lang.Object getParameter(java.lang.String)>(r1);

        if r2 != null goto label1;

        return z0;

     label1:
        $r3 = (java.lang.Boolean) r2;

        $z1 = virtualinvoke $r3.<java.lang.Boolean: boolean booleanValue()>();

        return $z1;
    }

    public org.apache.http.params.HttpParams setBooleanParameter(java.lang.String, boolean)
    {
        org.apache.http.params.AbstractHttpParams r0;
        java.lang.String r1;
        boolean z0;
        java.lang.Boolean $r2;

        r0 := @this: org.apache.http.params.AbstractHttpParams;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r2 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label2;

     label1:
        $r2 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label2:
        virtualinvoke r0.<org.apache.http.params.AbstractHttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>(r1, $r2);

        return r0;
    }

    public boolean isParameterTrue(java.lang.String)
    {
        org.apache.http.params.AbstractHttpParams r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.apache.http.params.AbstractHttpParams;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<org.apache.http.params.AbstractHttpParams: boolean getBooleanParameter(java.lang.String,boolean)>(r1, 0);

        return $z0;
    }

    public boolean isParameterFalse(java.lang.String)
    {
        org.apache.http.params.AbstractHttpParams r0;
        java.lang.String r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.http.params.AbstractHttpParams;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<org.apache.http.params.AbstractHttpParams: boolean getBooleanParameter(java.lang.String,boolean)>(r1, 0);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }
}
