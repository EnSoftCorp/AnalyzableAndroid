public class gov.nist.javax.sip.parser.RequestLineParser extends gov.nist.javax.sip.parser.Parser
{

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.RequestLineParser r0;
        java.lang.String r1;
        gov.nist.javax.sip.parser.Lexer $r2;

        r0 := @this: gov.nist.javax.sip.parser.RequestLineParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.Parser: void <init>()>();

        $r2 = new gov.nist.javax.sip.parser.Lexer;

        specialinvoke $r2.<gov.nist.javax.sip.parser.Lexer: void <init>(java.lang.String,java.lang.String)>("method_keywordLexer", r1);

        r0.<gov.nist.javax.sip.parser.RequestLineParser: gov.nist.core.LexerCore lexer> = $r2;

        return;
    }

    public void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.RequestLineParser r0;
        gov.nist.javax.sip.parser.Lexer r1;
        gov.nist.core.LexerCore $r2;

        r0 := @this: gov.nist.javax.sip.parser.RequestLineParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.Parser: void <init>()>();

        r0.<gov.nist.javax.sip.parser.RequestLineParser: gov.nist.core.LexerCore lexer> = r1;

        $r2 = r0.<gov.nist.javax.sip.parser.RequestLineParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r2.<gov.nist.core.LexerCore: void selectLexer(java.lang.String)>("method_keywordLexer");

        return;
    }

    public gov.nist.javax.sip.header.RequestLine parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.RequestLineParser r0;
        gov.nist.javax.sip.header.RequestLine r1, r6, $r8;
        java.lang.String r2, r5;
        gov.nist.javax.sip.parser.URLParser r3, $r11;
        gov.nist.javax.sip.address.GenericURI r4;
        java.lang.Throwable r7, $r18;
        boolean $z0, $z1, $z2;
        gov.nist.core.LexerCore $r9, $r10, $r13, $r14, $r15, $r17;
        gov.nist.javax.sip.parser.Lexer $r12;

        r0 := @this: gov.nist.javax.sip.parser.RequestLineParser;

        $z0 = <gov.nist.javax.sip.parser.RequestLineParser: boolean debug>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<gov.nist.javax.sip.parser.RequestLineParser: void dbg_enter(java.lang.String)>("parse");

     label1:
        $r8 = new gov.nist.javax.sip.header.RequestLine;

        specialinvoke $r8.<gov.nist.javax.sip.header.RequestLine: void <init>()>();

        r1 = $r8;

        r2 = virtualinvoke r0.<gov.nist.javax.sip.parser.RequestLineParser: java.lang.String method()>();

        $r9 = r0.<gov.nist.javax.sip.parser.RequestLineParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r9.<gov.nist.core.LexerCore: void SPorHT()>();

        virtualinvoke r1.<gov.nist.javax.sip.header.RequestLine: void setMethod(java.lang.String)>(r2);

        $r10 = r0.<gov.nist.javax.sip.parser.RequestLineParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r10.<gov.nist.core.LexerCore: void selectLexer(java.lang.String)>("sip_urlLexer");

        $r11 = new gov.nist.javax.sip.parser.URLParser;

        $r12 = virtualinvoke r0.<gov.nist.javax.sip.parser.RequestLineParser: gov.nist.javax.sip.parser.Lexer getLexer()>();

        specialinvoke $r11.<gov.nist.javax.sip.parser.URLParser: void <init>(gov.nist.javax.sip.parser.Lexer)>($r12);

        r3 = $r11;

        r4 = virtualinvoke r3.<gov.nist.javax.sip.parser.URLParser: gov.nist.javax.sip.address.GenericURI uriReference(boolean)>(1);

        $r14 = r0.<gov.nist.javax.sip.parser.RequestLineParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r14.<gov.nist.core.LexerCore: void SPorHT()>();

        virtualinvoke r1.<gov.nist.javax.sip.header.RequestLine: void setUri(javax.sip.address.URI)>(r4);

        $r13 = r0.<gov.nist.javax.sip.parser.RequestLineParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r13.<gov.nist.core.LexerCore: void selectLexer(java.lang.String)>("request_lineLexer");

        r5 = virtualinvoke r0.<gov.nist.javax.sip.parser.RequestLineParser: java.lang.String sipVersion()>();

        virtualinvoke r1.<gov.nist.javax.sip.header.RequestLine: void setSipVersion(java.lang.String)>(r5);

        $r15 = r0.<gov.nist.javax.sip.parser.RequestLineParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r15.<gov.nist.core.LexerCore: void SPorHT()>();

        $r17 = r0.<gov.nist.javax.sip.parser.RequestLineParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r17.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(10);

        r6 = r1;

     label2:
        $z1 = <gov.nist.javax.sip.parser.RequestLineParser: boolean debug>;

        if $z1 == 0 goto label3;

        virtualinvoke r0.<gov.nist.javax.sip.parser.RequestLineParser: void dbg_leave(java.lang.String)>("parse");

     label3:
        return r6;

     label4:
        $r18 := @caughtexception;

        r7 = $r18;

     label5:
        $z2 = <gov.nist.javax.sip.parser.RequestLineParser: boolean debug>;

        if $z2 == 0 goto label6;

        virtualinvoke r0.<gov.nist.javax.sip.parser.RequestLineParser: void dbg_leave(java.lang.String)>("parse");

     label6:
        throw r7;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static void main(java.lang.String[]) throws java.text.ParseException
    {
        java.lang.String[] r0, r1, $r4;
        int i0, $i1;
        gov.nist.javax.sip.parser.RequestLineParser r2, $r5;
        gov.nist.javax.sip.header.RequestLine r3;
        java.lang.String $r6, $r10, $r12;
        java.lang.StringBuilder $r7, $r9, $r11;
        java.io.PrintStream $r8;

        r0 := @parameter0: java.lang.String[];

        $r4 = newarray (java.lang.String)[9];

        $r4[0] = "REGISTER sip:192.168.0.68 SIP/2.0\n";

        $r4[1] = "REGISTER sip:company.com SIP/2.0\n";

        $r4[2] = "INVITE sip:3660@166.35.231.140 SIP/2.0\n";

        $r4[3] = "INVITE sip:user@company.com SIP/2.0\n";

        $r4[4] = "REGISTER sip:[2001::1]:5060;transport=tcp SIP/2.0\n";

        $r4[5] = "REGISTER sip:[2002:800:700:600:30:4:6:1]:5060;transport=udp SIP/2.0\n";

        $r4[6] = "REGISTER sip:[3ffe:800:700::30:4:6:1]:5060;transport=tls SIP/2.0\n";

        $r4[7] = "REGISTER sip:[2001:720:1710:0:201:29ff:fe21:f403]:5060;transport=udp SIP/2.0\n";

        $r4[8] = "OPTIONS sip:135.180.130.133 SIP/2.0\n";

        r1 = $r4;

        i0 = 0;

     label1:
        $i1 = lengthof r1;

        if i0 >= $i1 goto label2;

        $r5 = new gov.nist.javax.sip.parser.RequestLineParser;

        $r6 = r1[i0];

        specialinvoke $r5.<gov.nist.javax.sip.parser.RequestLineParser: void <init>(java.lang.String)>($r6);

        r2 = $r5;

        r3 = virtualinvoke r2.<gov.nist.javax.sip.parser.RequestLineParser: gov.nist.javax.sip.header.RequestLine parse()>();

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("encoded = ");

        $r10 = virtualinvoke r3.<gov.nist.javax.sip.header.RequestLine: java.lang.String encode()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r12);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }
}
