public abstract class org.apache.http.impl.cookie.CookieSpecBase extends org.apache.http.impl.cookie.AbstractCookieSpec
{

    public void <init>()
    {
        org.apache.http.impl.cookie.CookieSpecBase r0;

        r0 := @this: org.apache.http.impl.cookie.CookieSpecBase;

        specialinvoke r0.<org.apache.http.impl.cookie.AbstractCookieSpec: void <init>()>();

        return;
    }

    protected static java.lang.String getDefaultPath(org.apache.http.cookie.CookieOrigin)
    {
        org.apache.http.cookie.CookieOrigin r0;
        java.lang.String r1;
        int i0;

        r0 := @parameter0: org.apache.http.cookie.CookieOrigin;

        r1 = virtualinvoke r0.<org.apache.http.cookie.CookieOrigin: java.lang.String getPath()>();

        i0 = virtualinvoke r1.<java.lang.String: int lastIndexOf(int)>(47);

        if i0 < 0 goto label2;

        if i0 != 0 goto label1;

        i0 = 1;

     label1:
        r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

     label2:
        return r1;
    }

    protected static java.lang.String getDefaultDomain(org.apache.http.cookie.CookieOrigin)
    {
        org.apache.http.cookie.CookieOrigin r0;
        java.lang.String $r1;

        r0 := @parameter0: org.apache.http.cookie.CookieOrigin;

        $r1 = virtualinvoke r0.<org.apache.http.cookie.CookieOrigin: java.lang.String getHost()>();

        return $r1;
    }

    protected java.util.List parse(org.apache.http.HeaderElement[], org.apache.http.cookie.CookieOrigin) throws org.apache.http.cookie.MalformedCookieException
    {
        org.apache.http.impl.cookie.CookieSpecBase r0;
        org.apache.http.HeaderElement[] r1, r4;
        org.apache.http.cookie.CookieOrigin r2;
        java.util.ArrayList r3, $r13;
        int i0, i1, i2, $i3, $i4, $i5;
        org.apache.http.HeaderElement r5;
        java.lang.String r6, r7, r11, $r15, $r17, $r19, $r20, $r21;
        org.apache.http.impl.cookie.BasicClientCookie r8, $r16;
        org.apache.http.NameValuePair[] r9;
        org.apache.http.NameValuePair r10;
        org.apache.http.cookie.CookieAttributeHandler r12;
        org.apache.http.cookie.MalformedCookieException $r14;
        java.util.Locale $r18;

        r0 := @this: org.apache.http.impl.cookie.CookieSpecBase;

        r1 := @parameter0: org.apache.http.HeaderElement[];

        r2 := @parameter1: org.apache.http.cookie.CookieOrigin;

        $r13 = new java.util.ArrayList;

        $i3 = lengthof r1;

        specialinvoke $r13.<java.util.ArrayList: void <init>(int)>($i3);

        r3 = $r13;

        r4 = r1;

        i0 = lengthof r4;

        i1 = 0;

     label1:
        if i1 >= i0 goto label7;

        r5 = r4[i1];

        r6 = interfaceinvoke r5.<org.apache.http.HeaderElement: java.lang.String getName()>();

        r7 = interfaceinvoke r5.<org.apache.http.HeaderElement: java.lang.String getValue()>();

        if r6 == null goto label2;

        $i4 = virtualinvoke r6.<java.lang.String: int length()>();

        if $i4 != 0 goto label3;

     label2:
        $r14 = new org.apache.http.cookie.MalformedCookieException;

        specialinvoke $r14.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>("Cookie name may not be empty");

        throw $r14;

     label3:
        $r16 = new org.apache.http.impl.cookie.BasicClientCookie;

        specialinvoke $r16.<org.apache.http.impl.cookie.BasicClientCookie: void <init>(java.lang.String,java.lang.String)>(r6, r7);

        r8 = $r16;

        $r15 = staticinvoke <org.apache.http.impl.cookie.CookieSpecBase: java.lang.String getDefaultPath(org.apache.http.cookie.CookieOrigin)>(r2);

        virtualinvoke r8.<org.apache.http.impl.cookie.BasicClientCookie: void setPath(java.lang.String)>($r15);

        $r17 = staticinvoke <org.apache.http.impl.cookie.CookieSpecBase: java.lang.String getDefaultDomain(org.apache.http.cookie.CookieOrigin)>(r2);

        virtualinvoke r8.<org.apache.http.impl.cookie.BasicClientCookie: void setDomain(java.lang.String)>($r17);

        r9 = interfaceinvoke r5.<org.apache.http.HeaderElement: org.apache.http.NameValuePair[] getParameters()>();

        $i5 = lengthof r9;

        i2 = $i5 - 1;

     label4:
        if i2 < 0 goto label6;

        r10 = r9[i2];

        $r19 = interfaceinvoke r10.<org.apache.http.NameValuePair: java.lang.String getName()>();

        $r18 = <java.util.Locale: java.util.Locale ENGLISH>;

        r11 = virtualinvoke $r19.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r18);

        $r20 = interfaceinvoke r10.<org.apache.http.NameValuePair: java.lang.String getValue()>();

        virtualinvoke r8.<org.apache.http.impl.cookie.BasicClientCookie: void setAttribute(java.lang.String,java.lang.String)>(r11, $r20);

        r12 = virtualinvoke r0.<org.apache.http.impl.cookie.CookieSpecBase: org.apache.http.cookie.CookieAttributeHandler findAttribHandler(java.lang.String)>(r11);

        if r12 == null goto label5;

        $r21 = interfaceinvoke r10.<org.apache.http.NameValuePair: java.lang.String getValue()>();

        interfaceinvoke r12.<org.apache.http.cookie.CookieAttributeHandler: void parse(org.apache.http.cookie.SetCookie,java.lang.String)>(r8, $r21);

     label5:
        i2 = i2 + -1;

        goto label4;

     label6:
        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r8);

        i1 = i1 + 1;

        goto label1;

     label7:
        return r3;
    }

    public void validate(org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin) throws org.apache.http.cookie.MalformedCookieException
    {
        org.apache.http.impl.cookie.CookieSpecBase r0;
        org.apache.http.cookie.Cookie r1;
        org.apache.http.cookie.CookieOrigin r2;
        java.util.Iterator r3;
        org.apache.http.cookie.CookieAttributeHandler r4;
        java.util.Collection $r5;
        boolean $z0;
        java.lang.Object $r6;
        java.lang.IllegalArgumentException $r7, $r8;

        r0 := @this: org.apache.http.impl.cookie.CookieSpecBase;

        r1 := @parameter0: org.apache.http.cookie.Cookie;

        r2 := @parameter1: org.apache.http.cookie.CookieOrigin;

        if r1 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r8;

     label1:
        if r2 != null goto label2;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie origin may not be null");

        throw $r7;

     label2:
        $r5 = virtualinvoke r0.<org.apache.http.impl.cookie.CookieSpecBase: java.util.Collection getAttribHandlers()>();

        r3 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.http.cookie.CookieAttributeHandler) $r6;

        interfaceinvoke r4.<org.apache.http.cookie.CookieAttributeHandler: void validate(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>(r1, r2);

        goto label3;

     label4:
        return;
    }

    public boolean match(org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin)
    {
        org.apache.http.impl.cookie.CookieSpecBase r0;
        org.apache.http.cookie.Cookie r1;
        org.apache.http.cookie.CookieOrigin r2;
        java.util.Iterator r3;
        org.apache.http.cookie.CookieAttributeHandler r4;
        java.util.Collection $r5;
        boolean $z0, $z1;
        java.lang.Object $r6;
        java.lang.IllegalArgumentException $r7, $r8;

        r0 := @this: org.apache.http.impl.cookie.CookieSpecBase;

        r1 := @parameter0: org.apache.http.cookie.Cookie;

        r2 := @parameter1: org.apache.http.cookie.CookieOrigin;

        if r1 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r8;

     label1:
        if r2 != null goto label2;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie origin may not be null");

        throw $r7;

     label2:
        $r5 = virtualinvoke r0.<org.apache.http.impl.cookie.CookieSpecBase: java.util.Collection getAttribHandlers()>();

        r3 = interfaceinvoke $r5.<java.util.Collection: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.http.cookie.CookieAttributeHandler) $r6;

        $z1 = interfaceinvoke r4.<org.apache.http.cookie.CookieAttributeHandler: boolean match(org.apache.http.cookie.Cookie,org.apache.http.cookie.CookieOrigin)>(r1, r2);

        if $z1 != 0 goto label4;

        return 0;

     label4:
        goto label3;

     label5:
        return 1;
    }
}
