public final class org.apache.http.cookie.CookieSpecRegistry extends java.lang.Object
{
    private final java.util.Map registeredSpecs;

    public void <init>()
    {
        org.apache.http.cookie.CookieSpecRegistry r0;
        java.util.LinkedHashMap $r1;

        r0 := @this: org.apache.http.cookie.CookieSpecRegistry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        r0.<org.apache.http.cookie.CookieSpecRegistry: java.util.Map registeredSpecs> = $r1;

        return;
    }

    public synchronized void register(java.lang.String, org.apache.http.cookie.CookieSpecFactory)
    {
        org.apache.http.cookie.CookieSpecRegistry r0;
        java.lang.String r1, $r5;
        org.apache.http.cookie.CookieSpecFactory r2;
        java.util.Locale $r3;
        java.util.Map $r4;
        java.lang.IllegalArgumentException $r7, $r8;

        r0 := @this: org.apache.http.cookie.CookieSpecRegistry;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.http.cookie.CookieSpecFactory;

        if r1 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Name may not be null");

        throw $r8;

     label1:
        if r2 != null goto label2;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie spec factory may not be null");

        throw $r7;

     label2:
        $r4 = r0.<org.apache.http.cookie.CookieSpecRegistry: java.util.Map registeredSpecs>;

        $r3 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r5 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r3);

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r2);

        return;
    }

    public synchronized void unregister(java.lang.String)
    {
        org.apache.http.cookie.CookieSpecRegistry r0;
        java.lang.String r1, $r4;
        java.util.Locale $r2;
        java.util.Map $r3;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: org.apache.http.cookie.CookieSpecRegistry;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Id may not be null");

        throw $r6;

     label1:
        $r3 = r0.<org.apache.http.cookie.CookieSpecRegistry: java.util.Map registeredSpecs>;

        $r2 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2);

        interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r4);

        return;
    }

    public synchronized org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String, org.apache.http.params.HttpParams) throws java.lang.IllegalStateException
    {
        org.apache.http.cookie.CookieSpecRegistry r0;
        java.lang.String r1, $r6, $r12;
        org.apache.http.params.HttpParams r2;
        org.apache.http.cookie.CookieSpecFactory r3;
        java.util.Locale $r4;
        java.util.Map $r5;
        java.lang.Object $r7;
        java.lang.IllegalStateException $r8;
        java.lang.StringBuilder $r9, $r10, $r11;
        org.apache.http.cookie.CookieSpec $r13;
        java.lang.IllegalArgumentException $r14;

        r0 := @this: org.apache.http.cookie.CookieSpecRegistry;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.http.params.HttpParams;

        if r1 != null goto label1;

        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Name may not be null");

        throw $r14;

     label1:
        $r5 = r0.<org.apache.http.cookie.CookieSpecRegistry: java.util.Map registeredSpecs>;

        $r4 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r4);

        $r7 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        r3 = (org.apache.http.cookie.CookieSpecFactory) $r7;

        if r3 == null goto label2;

        $r13 = interfaceinvoke r3.<org.apache.http.cookie.CookieSpecFactory: org.apache.http.cookie.CookieSpec newInstance(org.apache.http.params.HttpParams)>(r2);

        return $r13;

     label2:
        $r8 = new java.lang.IllegalStateException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported cookie spec: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        throw $r8;
    }

    public synchronized org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String) throws java.lang.IllegalStateException
    {
        org.apache.http.cookie.CookieSpecRegistry r0;
        java.lang.String r1;
        org.apache.http.cookie.CookieSpec $r2;

        r0 := @this: org.apache.http.cookie.CookieSpecRegistry;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.http.cookie.CookieSpecRegistry: org.apache.http.cookie.CookieSpec getCookieSpec(java.lang.String,org.apache.http.params.HttpParams)>(r1, null);

        return $r2;
    }

    public synchronized java.util.List getSpecNames()
    {
        org.apache.http.cookie.CookieSpecRegistry r0;
        java.util.ArrayList $r1;
        java.util.Map $r2;
        java.util.Set $r3;

        r0 := @this: org.apache.http.cookie.CookieSpecRegistry;

        $r1 = new java.util.ArrayList;

        $r2 = r0.<org.apache.http.cookie.CookieSpecRegistry: java.util.Map registeredSpecs>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        return $r1;
    }

    public synchronized void setItems(java.util.Map)
    {
        org.apache.http.cookie.CookieSpecRegistry r0;
        java.util.Map r1, $r2, $r3;

        r0 := @this: org.apache.http.cookie.CookieSpecRegistry;

        r1 := @parameter0: java.util.Map;

        if r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<org.apache.http.cookie.CookieSpecRegistry: java.util.Map registeredSpecs>;

        interfaceinvoke $r2.<java.util.Map: void clear()>();

        $r3 = r0.<org.apache.http.cookie.CookieSpecRegistry: java.util.Map registeredSpecs>;

        interfaceinvoke $r3.<java.util.Map: void putAll(java.util.Map)>(r1);

        return;
    }
}
