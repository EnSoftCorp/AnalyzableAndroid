public class org.apache.http.impl.conn.DefaultClientConnectionOperator extends java.lang.Object implements org.apache.http.conn.ClientConnectionOperator
{
    private static final org.apache.http.conn.scheme.PlainSocketFactory staticPlainSocketFactory;
    protected org.apache.http.conn.scheme.SchemeRegistry schemeRegistry;

    public void <init>(org.apache.http.conn.scheme.SchemeRegistry)
    {
        org.apache.http.impl.conn.DefaultClientConnectionOperator r0;
        org.apache.http.conn.scheme.SchemeRegistry r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.http.impl.conn.DefaultClientConnectionOperator;

        r1 := @parameter0: org.apache.http.conn.scheme.SchemeRegistry;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Scheme registry must not be null.");

        throw $r2;

     label1:
        r0.<org.apache.http.impl.conn.DefaultClientConnectionOperator: org.apache.http.conn.scheme.SchemeRegistry schemeRegistry> = r1;

        return;
    }

    public org.apache.http.conn.OperatedClientConnection createConnection()
    {
        org.apache.http.impl.conn.DefaultClientConnectionOperator r0;
        org.apache.http.impl.conn.DefaultClientConnection $r1;

        r0 := @this: org.apache.http.impl.conn.DefaultClientConnectionOperator;

        $r1 = new org.apache.http.impl.conn.DefaultClientConnection;

        specialinvoke $r1.<org.apache.http.impl.conn.DefaultClientConnection: void <init>()>();

        return $r1;
    }

    public void openConnection(org.apache.http.conn.OperatedClientConnection, org.apache.http.HttpHost, java.net.InetAddress, org.apache.http.protocol.HttpContext, org.apache.http.params.HttpParams) throws java.io.IOException
    {
        org.apache.http.impl.conn.DefaultClientConnectionOperator r0;
        org.apache.http.conn.OperatedClientConnection r1;
        org.apache.http.HttpHost r2;
        java.net.InetAddress r3, $r17;
        org.apache.http.protocol.HttpContext r4;
        org.apache.http.params.HttpParams r5;
        org.apache.http.conn.scheme.Scheme r6;
        org.apache.http.conn.scheme.SocketFactory r7, r8;
        org.apache.http.conn.scheme.LayeredSocketFactory r9;
        java.net.InetAddress[] r10;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.net.Socket r11, r12, r13;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String $r14, $r16, $r18, $r19, $r28;
        org.apache.http.conn.scheme.SchemeRegistry $r15;
        java.lang.IllegalArgumentException $r20, $r21, $r22, $r23;
        java.net.SocketException $r24, r29;
        org.apache.http.conn.HttpHostConnectException $r25;
        org.apache.http.conn.ConnectTimeoutException $r26, r31;
        java.net.ConnectException $r27, r30;

        r0 := @this: org.apache.http.impl.conn.DefaultClientConnectionOperator;

        r1 := @parameter0: org.apache.http.conn.OperatedClientConnection;

        r2 := @parameter1: org.apache.http.HttpHost;

        r3 := @parameter2: java.net.InetAddress;

        r4 := @parameter3: org.apache.http.protocol.HttpContext;

        r5 := @parameter4: org.apache.http.params.HttpParams;

        if r1 != null goto label01;

        $r21 = new java.lang.IllegalArgumentException;

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Connection must not be null.");

        throw $r21;

     label01:
        if r2 != null goto label02;

        $r20 = new java.lang.IllegalArgumentException;

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Target host must not be null.");

        throw $r20;

     label02:
        if r5 != null goto label03;

        $r23 = new java.lang.IllegalArgumentException;

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameters must not be null.");

        throw $r23;

     label03:
        $z0 = interfaceinvoke r1.<org.apache.http.conn.OperatedClientConnection: boolean isOpen()>();

        if $z0 == 0 goto label04;

        $r22 = new java.lang.IllegalArgumentException;

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Connection must not be open.");

        throw $r22;

     label04:
        $r15 = r0.<org.apache.http.impl.conn.DefaultClientConnectionOperator: org.apache.http.conn.scheme.SchemeRegistry schemeRegistry>;

        $r14 = virtualinvoke r2.<org.apache.http.HttpHost: java.lang.String getSchemeName()>();

        r6 = virtualinvoke $r15.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme getScheme(java.lang.String)>($r14);

        r7 = virtualinvoke r6.<org.apache.http.conn.scheme.Scheme: org.apache.http.conn.scheme.SocketFactory getSocketFactory()>();

        $z1 = r7 instanceof org.apache.http.conn.scheme.LayeredSocketFactory;

        if $z1 == 0 goto label05;

        r8 = <org.apache.http.impl.conn.DefaultClientConnectionOperator: org.apache.http.conn.scheme.PlainSocketFactory staticPlainSocketFactory>;

        r9 = (org.apache.http.conn.scheme.LayeredSocketFactory) r7;

        goto label06;

     label05:
        r8 = r7;

        r9 = null;

     label06:
        $r16 = virtualinvoke r2.<org.apache.http.HttpHost: java.lang.String getHostName()>();

        r10 = staticinvoke <java.net.InetAddress: java.net.InetAddress[] getAllByName(java.lang.String)>($r16);

        i0 = 0;

     label07:
        $i1 = lengthof r10;

        if i0 >= $i1 goto label19;

        r11 = interfaceinvoke r8.<org.apache.http.conn.scheme.SocketFactory: java.net.Socket createSocket()>();

        interfaceinvoke r1.<org.apache.http.conn.OperatedClientConnection: void opening(java.net.Socket,org.apache.http.HttpHost)>(r11, r2);

     label08:
        $r17 = r10[i0];

        $r18 = virtualinvoke $r17.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $i2 = virtualinvoke r2.<org.apache.http.HttpHost: int getPort()>();

        $i3 = virtualinvoke r6.<org.apache.http.conn.scheme.Scheme: int resolvePort(int)>($i2);

        r12 = interfaceinvoke r8.<org.apache.http.conn.scheme.SocketFactory: java.net.Socket connectSocket(java.net.Socket,java.lang.String,int,java.net.InetAddress,int,org.apache.http.params.HttpParams)>(r11, $r18, $i3, r3, 0, r5);

        if r11 == r12 goto label09;

        r11 = r12;

        interfaceinvoke r1.<org.apache.http.conn.OperatedClientConnection: void opening(java.net.Socket,org.apache.http.HttpHost)>(r11, r2);

     label09:
        virtualinvoke r0.<org.apache.http.impl.conn.DefaultClientConnectionOperator: void prepareSocket(java.net.Socket,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>(r11, r4, r5);

        if r9 == null goto label11;

        $r19 = virtualinvoke r2.<org.apache.http.HttpHost: java.lang.String getHostName()>();

        $i4 = virtualinvoke r2.<org.apache.http.HttpHost: int getPort()>();

        $i5 = virtualinvoke r6.<org.apache.http.conn.scheme.Scheme: int resolvePort(int)>($i4);

        r13 = interfaceinvoke r9.<org.apache.http.conn.scheme.LayeredSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>(r11, $r19, $i5, 1);

        if r13 == r11 goto label10;

        interfaceinvoke r1.<org.apache.http.conn.OperatedClientConnection: void opening(java.net.Socket,org.apache.http.HttpHost)>(r13, r2);

     label10:
        $z3 = interfaceinvoke r7.<org.apache.http.conn.scheme.SocketFactory: boolean isSecure(java.net.Socket)>(r13);

        interfaceinvoke r1.<org.apache.http.conn.OperatedClientConnection: void openCompleted(boolean,org.apache.http.params.HttpParams)>($z3, r5);

        goto label12;

     label11:
        $z2 = interfaceinvoke r7.<org.apache.http.conn.scheme.SocketFactory: boolean isSecure(java.net.Socket)>(r11);

        interfaceinvoke r1.<org.apache.http.conn.OperatedClientConnection: void openCompleted(boolean,org.apache.http.params.HttpParams)>($z2, r5);

     label12:
        goto label19;

     label13:
        $r24 := @caughtexception;

        r29 = $r24;

        $i7 = lengthof r10;

        $i6 = $i7 - 1;

        if i0 != $i6 goto label16;

        $z4 = r29 instanceof java.net.ConnectException;

        if $z4 == 0 goto label14;

        $r27 = (java.net.ConnectException) r29;

        goto label15;

     label14:
        $r27 = new java.net.ConnectException;

        $r28 = virtualinvoke r29.<java.net.SocketException: java.lang.String getMessage()>();

        specialinvoke $r27.<java.net.ConnectException: void <init>(java.lang.String,java.lang.Throwable)>($r28, r29);

     label15:
        r30 = $r27;

        $r25 = new org.apache.http.conn.HttpHostConnectException;

        specialinvoke $r25.<org.apache.http.conn.HttpHostConnectException: void <init>(org.apache.http.HttpHost,java.net.ConnectException)>(r2, r30);

        throw $r25;

     label16:
        goto label18;

     label17:
        $r26 := @caughtexception;

        r31 = $r26;

        $i9 = lengthof r10;

        $i8 = $i9 - 1;

        if i0 != $i8 goto label18;

        throw r31;

     label18:
        i0 = i0 + 1;

        goto label07;

     label19:
        return;

        catch java.net.SocketException from label08 to label12 with label13;
        catch org.apache.http.conn.ConnectTimeoutException from label08 to label12 with label17;
    }

    public void updateSecureConnection(org.apache.http.conn.OperatedClientConnection, org.apache.http.HttpHost, org.apache.http.protocol.HttpContext, org.apache.http.params.HttpParams) throws java.io.IOException
    {
        org.apache.http.impl.conn.DefaultClientConnectionOperator r0;
        org.apache.http.conn.OperatedClientConnection r1;
        org.apache.http.HttpHost r2;
        org.apache.http.protocol.HttpContext r3;
        org.apache.http.params.HttpParams r4;
        org.apache.http.conn.scheme.Scheme r5;
        org.apache.http.conn.scheme.LayeredSocketFactory r6;
        java.net.Socket r7, $r14;
        java.net.ConnectException r8, $r27;
        boolean $z0, $z1, $z2;
        org.apache.http.conn.scheme.SchemeRegistry $r9;
        java.lang.String $r10, $r13, $r17, $r22;
        org.apache.http.conn.scheme.SocketFactory $r11, $r12;
        int $i0, $i1;
        java.lang.StringBuilder $r15, $r18, $r19, $r20;
        java.lang.IllegalArgumentException $r16, $r21, $r23, $r24, $r26;
        org.apache.http.conn.HttpHostConnectException $r25;

        r0 := @this: org.apache.http.impl.conn.DefaultClientConnectionOperator;

        r1 := @parameter0: org.apache.http.conn.OperatedClientConnection;

        r2 := @parameter1: org.apache.http.HttpHost;

        r3 := @parameter2: org.apache.http.protocol.HttpContext;

        r4 := @parameter3: org.apache.http.params.HttpParams;

        if r1 != null goto label1;

        $r26 = new java.lang.IllegalArgumentException;

        specialinvoke $r26.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Connection must not be null.");

        throw $r26;

     label1:
        if r2 != null goto label2;

        $r23 = new java.lang.IllegalArgumentException;

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Target host must not be null.");

        throw $r23;

     label2:
        if r4 != null goto label3;

        $r24 = new java.lang.IllegalArgumentException;

        specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Parameters must not be null.");

        throw $r24;

     label3:
        $z0 = interfaceinvoke r1.<org.apache.http.conn.OperatedClientConnection: boolean isOpen()>();

        if $z0 != 0 goto label4;

        $r21 = new java.lang.IllegalArgumentException;

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Connection must be open.");

        throw $r21;

     label4:
        $r9 = r0.<org.apache.http.impl.conn.DefaultClientConnectionOperator: org.apache.http.conn.scheme.SchemeRegistry schemeRegistry>;

        $r10 = virtualinvoke r2.<org.apache.http.HttpHost: java.lang.String getSchemeName()>();

        r5 = virtualinvoke $r9.<org.apache.http.conn.scheme.SchemeRegistry: org.apache.http.conn.scheme.Scheme getScheme(java.lang.String)>($r10);

        $r11 = virtualinvoke r5.<org.apache.http.conn.scheme.Scheme: org.apache.http.conn.scheme.SocketFactory getSocketFactory()>();

        $z1 = $r11 instanceof org.apache.http.conn.scheme.LayeredSocketFactory;

        if $z1 != 0 goto label5;

        $r16 = new java.lang.IllegalArgumentException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Target scheme (");

        $r17 = virtualinvoke r5.<org.apache.http.conn.scheme.Scheme: java.lang.String getName()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") must have layered socket factory.");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);

        throw $r16;

     label5:
        $r12 = virtualinvoke r5.<org.apache.http.conn.scheme.Scheme: org.apache.http.conn.scheme.SocketFactory getSocketFactory()>();

        r6 = (org.apache.http.conn.scheme.LayeredSocketFactory) $r12;

     label6:
        $r14 = interfaceinvoke r1.<org.apache.http.conn.OperatedClientConnection: java.net.Socket getSocket()>();

        $r13 = virtualinvoke r2.<org.apache.http.HttpHost: java.lang.String getHostName()>();

        $i1 = virtualinvoke r2.<org.apache.http.HttpHost: int getPort()>();

        $i0 = virtualinvoke r5.<org.apache.http.conn.scheme.Scheme: int resolvePort(int)>($i1);

        r7 = interfaceinvoke r6.<org.apache.http.conn.scheme.LayeredSocketFactory: java.net.Socket createSocket(java.net.Socket,java.lang.String,int,boolean)>($r14, $r13, $i0, 1);

     label7:
        goto label9;

     label8:
        $r27 := @caughtexception;

        r8 = $r27;

        $r25 = new org.apache.http.conn.HttpHostConnectException;

        specialinvoke $r25.<org.apache.http.conn.HttpHostConnectException: void <init>(org.apache.http.HttpHost,java.net.ConnectException)>(r2, r8);

        throw $r25;

     label9:
        virtualinvoke r0.<org.apache.http.impl.conn.DefaultClientConnectionOperator: void prepareSocket(java.net.Socket,org.apache.http.protocol.HttpContext,org.apache.http.params.HttpParams)>(r7, r3, r4);

        $z2 = interfaceinvoke r6.<org.apache.http.conn.scheme.LayeredSocketFactory: boolean isSecure(java.net.Socket)>(r7);

        interfaceinvoke r1.<org.apache.http.conn.OperatedClientConnection: void update(java.net.Socket,org.apache.http.HttpHost,boolean,org.apache.http.params.HttpParams)>(r7, r2, $z2, r4);

        return;

        catch java.net.ConnectException from label6 to label7 with label8;
    }

    protected void prepareSocket(java.net.Socket, org.apache.http.protocol.HttpContext, org.apache.http.params.HttpParams) throws java.io.IOException
    {
        org.apache.http.impl.conn.DefaultClientConnectionOperator r0;
        java.net.Socket r1;
        org.apache.http.protocol.HttpContext r2;
        org.apache.http.params.HttpParams r3;
        int i0, $i1;
        boolean $z0, $z1;

        r0 := @this: org.apache.http.impl.conn.DefaultClientConnectionOperator;

        r1 := @parameter0: java.net.Socket;

        r2 := @parameter1: org.apache.http.protocol.HttpContext;

        r3 := @parameter2: org.apache.http.params.HttpParams;

        $z0 = staticinvoke <org.apache.http.params.HttpConnectionParams: boolean getTcpNoDelay(org.apache.http.params.HttpParams)>(r3);

        virtualinvoke r1.<java.net.Socket: void setTcpNoDelay(boolean)>($z0);

        $i1 = staticinvoke <org.apache.http.params.HttpConnectionParams: int getSoTimeout(org.apache.http.params.HttpParams)>(r3);

        virtualinvoke r1.<java.net.Socket: void setSoTimeout(int)>($i1);

        i0 = staticinvoke <org.apache.http.params.HttpConnectionParams: int getLinger(org.apache.http.params.HttpParams)>(r3);

        if i0 < 0 goto label3;

        if i0 <= 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        virtualinvoke r1.<java.net.Socket: void setSoLinger(boolean,int)>($z1, i0);

     label3:
        return;
    }

    static void <clinit>()
    {
        org.apache.http.conn.scheme.PlainSocketFactory $r0;

        $r0 = new org.apache.http.conn.scheme.PlainSocketFactory;

        specialinvoke $r0.<org.apache.http.conn.scheme.PlainSocketFactory: void <init>()>();

        <org.apache.http.impl.conn.DefaultClientConnectionOperator: org.apache.http.conn.scheme.PlainSocketFactory staticPlainSocketFactory> = $r0;

        return;
    }
}
