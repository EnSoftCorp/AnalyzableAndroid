public class org.apache.commons.codec.language.Soundex extends java.lang.Object implements org.apache.commons.codec.StringEncoder
{
    public static final org.apache.commons.codec.language.Soundex US_ENGLISH;
    public static final java.lang.String US_ENGLISH_MAPPING_STRING;
    public static final char[] US_ENGLISH_MAPPING;
    private int maxLength;
    private char[] soundexMapping;

    public int difference(java.lang.String, java.lang.String) throws org.apache.commons.codec.EncoderException
    {
        org.apache.commons.codec.language.Soundex r0;
        java.lang.String r1, r2;
        int $i0;

        r0 := @this: org.apache.commons.codec.language.Soundex;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $i0 = staticinvoke <org.apache.commons.codec.language.SoundexUtils: int difference(org.apache.commons.codec.StringEncoder,java.lang.String,java.lang.String)>(r0, r1, r2);

        return $i0;
    }

    public void <init>()
    {
        org.apache.commons.codec.language.Soundex r0;
        char[] $r1;

        r0 := @this: org.apache.commons.codec.language.Soundex;

        $r1 = <org.apache.commons.codec.language.Soundex: char[] US_ENGLISH_MAPPING>;

        specialinvoke r0.<org.apache.commons.codec.language.Soundex: void <init>(char[])>($r1);

        return;
    }

    public void <init>(char[])
    {
        org.apache.commons.codec.language.Soundex r0;
        char[] r1;

        r0 := @this: org.apache.commons.codec.language.Soundex;

        r1 := @parameter0: char[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.codec.language.Soundex: int maxLength> = 4;

        specialinvoke r0.<org.apache.commons.codec.language.Soundex: void setSoundexMapping(char[])>(r1);

        return;
    }

    public java.lang.Object encode(java.lang.Object) throws org.apache.commons.codec.EncoderException
    {
        org.apache.commons.codec.language.Soundex r0;
        java.lang.Object r1;
        boolean $z0;
        java.lang.String $r2, $r3;
        org.apache.commons.codec.EncoderException $r4;

        r0 := @this: org.apache.commons.codec.language.Soundex;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof java.lang.String;

        if $z0 != 0 goto label1;

        $r4 = new org.apache.commons.codec.EncoderException;

        specialinvoke $r4.<org.apache.commons.codec.EncoderException: void <init>(java.lang.String)>("Parameter supplied to Soundex encode is not of type java.lang.String");

        throw $r4;

     label1:
        $r2 = (java.lang.String) r1;

        $r3 = virtualinvoke r0.<org.apache.commons.codec.language.Soundex: java.lang.String soundex(java.lang.String)>($r2);

        return $r3;
    }

    public java.lang.String encode(java.lang.String)
    {
        org.apache.commons.codec.language.Soundex r0;
        java.lang.String r1, $r2;

        r0 := @this: org.apache.commons.codec.language.Soundex;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.commons.codec.language.Soundex: java.lang.String soundex(java.lang.String)>(r1);

        return $r2;
    }

    private char getMappingCode(java.lang.String, int)
    {
        org.apache.commons.codec.language.Soundex r0;
        java.lang.String r1;
        int i0, $i6, $i7;
        char c1, c2, c3, c4, $c5;

        r0 := @this: org.apache.commons.codec.language.Soundex;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $c5 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);

        c1 = specialinvoke r0.<org.apache.commons.codec.language.Soundex: char map(char)>($c5);

        if i0 <= 1 goto label3;

        if c1 == 48 goto label3;

        $i6 = i0 - 1;

        c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i6);

        if 72 == c2 goto label1;

        if 87 != c2 goto label3;

     label1:
        $i7 = i0 - 2;

        c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i7);

        c4 = specialinvoke r0.<org.apache.commons.codec.language.Soundex: char map(char)>(c3);

        if c4 == c1 goto label2;

        if 72 == c3 goto label2;

        if 87 != c3 goto label3;

     label2:
        return 0;

     label3:
        return c1;
    }

    public int getMaxLength()
    {
        org.apache.commons.codec.language.Soundex r0;
        int $i0;

        r0 := @this: org.apache.commons.codec.language.Soundex;

        $i0 = r0.<org.apache.commons.codec.language.Soundex: int maxLength>;

        return $i0;
    }

    private char[] getSoundexMapping()
    {
        org.apache.commons.codec.language.Soundex r0;
        char[] $r1;

        r0 := @this: org.apache.commons.codec.language.Soundex;

        $r1 = r0.<org.apache.commons.codec.language.Soundex: char[] soundexMapping>;

        return $r1;
    }

    private char map(char)
    {
        org.apache.commons.codec.language.Soundex r0;
        char c0, $c3;
        int i1, $i2;
        java.lang.IllegalArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;
        char[] $r6, $r7;

        r0 := @this: org.apache.commons.codec.language.Soundex;

        c0 := @parameter0: char;

        i1 = c0 - 65;

        if i1 < 0 goto label1;

        $r6 = specialinvoke r0.<org.apache.commons.codec.language.Soundex: char[] getSoundexMapping()>();

        $i2 = lengthof $r6;

        if i1 < $i2 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The character is not mapped: ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label2:
        $r7 = specialinvoke r0.<org.apache.commons.codec.language.Soundex: char[] getSoundexMapping()>();

        $c3 = $r7[i1];

        return $c3;
    }

    public void setMaxLength(int)
    {
        org.apache.commons.codec.language.Soundex r0;
        int i0;

        r0 := @this: org.apache.commons.codec.language.Soundex;

        i0 := @parameter0: int;

        r0.<org.apache.commons.codec.language.Soundex: int maxLength> = i0;

        return;
    }

    private void setSoundexMapping(char[])
    {
        org.apache.commons.codec.language.Soundex r0;
        char[] r1;

        r0 := @this: org.apache.commons.codec.language.Soundex;

        r1 := @parameter0: char[];

        r0.<org.apache.commons.codec.language.Soundex: char[] soundexMapping> = r1;

        return;
    }

    public java.lang.String soundex(java.lang.String)
    {
        org.apache.commons.codec.language.Soundex r0;
        java.lang.String r1, $r4, r5;
        char[] r2, $r3;
        char c0, c1, $c5;
        int i2, i3, $i4, $i6, $i7, $i8, $i9;

        r0 := @this: org.apache.commons.codec.language.Soundex;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        return null;

     label1:
        r5 = staticinvoke <org.apache.commons.codec.language.SoundexUtils: java.lang.String clean(java.lang.String)>(r1);

        $i4 = virtualinvoke r5.<java.lang.String: int length()>();

        if $i4 != 0 goto label2;

        return r5;

     label2:
        $r3 = newarray (char)[4];

        $r3[0] = 48;

        $r3[1] = 48;

        $r3[2] = 48;

        $r3[3] = 48;

        r2 = $r3;

        i2 = 1;

        i3 = 1;

        $c5 = virtualinvoke r5.<java.lang.String: char charAt(int)>(0);

        r2[0] = $c5;

        c0 = specialinvoke r0.<org.apache.commons.codec.language.Soundex: char getMappingCode(java.lang.String,int)>(r5, 0);

     label3:
        $i6 = virtualinvoke r5.<java.lang.String: int length()>();

        if i2 >= $i6 goto label5;

        $i7 = lengthof r2;

        if i3 >= $i7 goto label5;

        $i8 = i2;

        i2 = i2 + 1;

        c1 = specialinvoke r0.<org.apache.commons.codec.language.Soundex: char getMappingCode(java.lang.String,int)>(r5, $i8);

        if c1 == 0 goto label3;

        if c1 == 48 goto label4;

        if c1 == c0 goto label4;

        $i9 = i3;

        i3 = i3 + 1;

        r2[$i9] = c1;

     label4:
        c0 = c1;

        goto label3;

     label5:
        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(char[])>(r2);

        return $r4;
    }

    static void <clinit>()
    {
        org.apache.commons.codec.language.Soundex $r0;
        java.lang.String $r1;
        char[] $r2;

        <org.apache.commons.codec.language.Soundex: java.lang.String US_ENGLISH_MAPPING_STRING> = "01230120022455012623010202";

        $r0 = new org.apache.commons.codec.language.Soundex;

        specialinvoke $r0.<org.apache.commons.codec.language.Soundex: void <init>()>();

        <org.apache.commons.codec.language.Soundex: org.apache.commons.codec.language.Soundex US_ENGLISH> = $r0;

        $r1 = "01230120022455012623010202";

        $r2 = virtualinvoke $r1.<java.lang.String: char[] toCharArray()>();

        <org.apache.commons.codec.language.Soundex: char[] US_ENGLISH_MAPPING> = $r2;

        return;
    }
}
