public class gov.nist.javax.sip.stack.SIPServerTransaction extends gov.nist.javax.sip.stack.SIPTransaction implements gov.nist.javax.sip.stack.ServerRequestInterface, javax.sip.ServerTransaction, gov.nist.javax.sip.ServerTransactionExt
{
    private int rseqNumber;
    private transient gov.nist.javax.sip.stack.ServerRequestInterface requestOf;
    private gov.nist.javax.sip.stack.SIPDialog dialog;
    private gov.nist.javax.sip.message.SIPResponse pendingReliableResponse;
    private gov.nist.javax.sip.stack.SIPServerTransaction$ProvisionalResponseTask provisionalResponseTask;
    private boolean retransmissionAlertEnabled;
    private gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask retransmissionAlertTimerTask;
    protected boolean isAckSeen;
    private gov.nist.javax.sip.stack.SIPClientTransaction pendingSubscribeTransaction;
    private gov.nist.javax.sip.stack.SIPServerTransaction inviteTransaction;
    private java.util.concurrent.Semaphore provisionalResponseSem;

    private void sendResponse(gov.nist.javax.sip.message.SIPResponse) throws java.io.IOException
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        gov.nist.javax.sip.message.SIPResponse r1;
        gov.nist.javax.sip.header.Via r2;
        java.lang.String r3, $r7, $r12, $r14, $r20, r24;
        int i0, $i1;
        javax.sip.address.Hop r4;
        gov.nist.javax.sip.stack.MessageChannel r5, $r22;
        java.lang.Throwable r6, $r23;
        boolean $z0, $z1;
        gov.nist.javax.sip.stack.SIPTransactionStack $r8, $r11;
        gov.nist.core.net.AddressResolver $r9;
        gov.nist.javax.sip.stack.HopImpl $r10;
        gov.nist.javax.sip.SipProviderImpl $r13;
        javax.sip.ListeningPoint $r15;
        java.lang.StringBuilder $r16, $r18, $r19;
        java.io.IOException $r17, $r21;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        r1 := @parameter0: gov.nist.javax.sip.message.SIPResponse;

     label01:
        $z0 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isReliable()>();

        if $z0 == 0 goto label02;

        $r22 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.MessageChannel getMessageChannel()>();

        virtualinvoke $r22.<gov.nist.javax.sip.stack.MessageChannel: void sendMessage(gov.nist.javax.sip.message.SIPMessage)>(r1);

        goto label10;

     label02:
        r2 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.Via getTopmostVia()>();

        r3 = virtualinvoke r2.<gov.nist.javax.sip.header.Via: java.lang.String getTransport()>();

        if r3 != null goto label03;

        $r21 = new java.io.IOException;

        specialinvoke $r21.<java.io.IOException: void <init>(java.lang.String)>("missing transport!");

        throw $r21;

     label03:
        i0 = virtualinvoke r2.<gov.nist.javax.sip.header.Via: int getRPort()>();

        if i0 != -1 goto label04;

        i0 = virtualinvoke r2.<gov.nist.javax.sip.header.Via: int getPort()>();

     label04:
        if i0 != -1 goto label06;

        $z1 = virtualinvoke r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("TLS");

        if $z1 == 0 goto label05;

        i0 = 5061;

        goto label06;

     label05:
        i0 = 5060;

     label06:
        $r7 = virtualinvoke r2.<gov.nist.javax.sip.header.Via: java.lang.String getMAddr()>();

        if $r7 == null goto label07;

        r24 = virtualinvoke r2.<gov.nist.javax.sip.header.Via: java.lang.String getMAddr()>();

        goto label08;

     label07:
        r24 = virtualinvoke r2.<gov.nist.javax.sip.header.Via: java.lang.String getParameter(java.lang.String)>("received");

        if r24 != null goto label08;

        r24 = virtualinvoke r2.<gov.nist.javax.sip.header.Via: java.lang.String getHost()>();

     label08:
        $r8 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r9 = $r8.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.net.AddressResolver addressResolver>;

        $r10 = new gov.nist.javax.sip.stack.HopImpl;

        specialinvoke $r10.<gov.nist.javax.sip.stack.HopImpl: void <init>(java.lang.String,int,java.lang.String)>(r24, i0, r3);

        r4 = interfaceinvoke $r9.<gov.nist.core.net.AddressResolver: javax.sip.address.Hop resolveAddress(javax.sip.address.Hop)>($r10);

        $r11 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()>();

        $r13 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.SipProviderImpl getSipProvider()>();

        $r12 = interfaceinvoke r4.<javax.sip.address.Hop: java.lang.String getTransport()>();

        $r15 = virtualinvoke $r13.<gov.nist.javax.sip.SipProviderImpl: javax.sip.ListeningPoint getListeningPoint(java.lang.String)>($r12);

        $r14 = interfaceinvoke $r15.<javax.sip.ListeningPoint: java.lang.String getIPAddress()>();

        $i1 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: int getPort()>();

        r5 = virtualinvoke $r11.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.MessageChannel createRawMessageChannel(java.lang.String,int,javax.sip.address.Hop)>($r14, $i1, r4);

        if r5 == null goto label09;

        virtualinvoke r5.<gov.nist.javax.sip.stack.MessageChannel: void sendMessage(gov.nist.javax.sip.message.SIPMessage)>(r1);

        goto label10;

     label09:
        $r17 = new java.io.IOException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not create a message channel for ");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.io.IOException: void <init>(java.lang.String)>($r20);

        throw $r17;

     label10:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void startTransactionTimer()>();

        goto label13;

     label11:
        $r23 := @caughtexception;

        r6 = $r23;

     label12:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void startTransactionTimer()>();

        throw r6;

     label13:
        return;

        catch java.lang.Throwable from label01 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    protected void <init>(gov.nist.javax.sip.stack.SIPTransactionStack, gov.nist.javax.sip.stack.MessageChannel)
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        gov.nist.javax.sip.stack.SIPTransactionStack r1;
        gov.nist.javax.sip.stack.MessageChannel r2;
        java.util.concurrent.Semaphore $r3;
        int $i0, $i1, $i2, $i3;
        double $d0, $d1;
        boolean $z0;
        gov.nist.core.StackLogger $r4, $r10;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.lang.String $r7, $r9;
        gov.nist.javax.sip.stack.SIPServerTransaction$ListenerExecutionMaxTimer $r11;
        java.util.Timer $r12;
        long $l4;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        r1 := @parameter0: gov.nist.javax.sip.stack.SIPTransactionStack;

        r2 := @parameter1: gov.nist.javax.sip.stack.MessageChannel;

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPTransaction: void <init>(gov.nist.javax.sip.stack.SIPTransactionStack,gov.nist.javax.sip.stack.MessageChannel)>(r1, r2);

        $r3 = new java.util.concurrent.Semaphore;

        specialinvoke $r3.<java.util.concurrent.Semaphore: void <init>(int)>(1);

        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.util.concurrent.Semaphore provisionalResponseSem> = $r3;

        $i0 = r1.<gov.nist.javax.sip.stack.SIPTransactionStack: int maxListenerResponseTime>;

        if $i0 == -1 goto label1;

        $r12 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Timer getTimer()>();

        $r11 = new gov.nist.javax.sip.stack.SIPServerTransaction$ListenerExecutionMaxTimer;

        specialinvoke $r11.<gov.nist.javax.sip.stack.SIPServerTransaction$ListenerExecutionMaxTimer: void <init>(gov.nist.javax.sip.stack.SIPServerTransaction)>(r0);

        $i3 = r1.<gov.nist.javax.sip.stack.SIPTransactionStack: int maxListenerResponseTime>;

        $i2 = $i3 * 1000;

        $l4 = (long) $i2;

        virtualinvoke $r12.<java.util.Timer: void schedule(java.util.TimerTask,long)>($r11, $l4);

     label1:
        $d0 = staticinvoke <java.lang.Math: double random()>();

        $d1 = $d0 * 1000.0;

        $i1 = (int) $d1;

        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: int rseqNumber> = $i1;

        $z0 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label2;

        $r4 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating Server Transaction");

        $r7 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.lang.String getBranchId()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r9);

        $r10 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r10.<gov.nist.core.StackLogger: void logStackTrace()>();

     label2:
        return;
    }

    public void setRequestInterface(gov.nist.javax.sip.stack.ServerRequestInterface)
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        gov.nist.javax.sip.stack.ServerRequestInterface r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        r1 := @parameter0: gov.nist.javax.sip.stack.ServerRequestInterface;

        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.ServerRequestInterface requestOf> = r1;

        return;
    }

    public gov.nist.javax.sip.stack.MessageChannel getResponseChannel()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        return r0;
    }

    public boolean isMessagePartOfTransaction(gov.nist.javax.sip.message.SIPMessage)
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        gov.nist.javax.sip.message.SIPMessage r1;
        gov.nist.javax.sip.header.ViaList r2, $r26, $r42, $r55;
        gov.nist.javax.sip.header.Via r3, $r48, $r51;
        java.lang.String r4, r5, r6, r7, r8, r9, $r14, $r17, $r19, $r27, $r29, $r31, $r39, $r44, $r45, $r46, $r47, $r56;
        boolean z0, z1, z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25;
        javax.sip.header.CSeqHeader $r10, $r15, $r21, $r23, $r24, $r32, $r36;
        javax.sip.header.Header $r11, $r30, $r43, $r54;
        javax.sip.header.FromHeader $r12;
        javax.sip.header.ToHeader $r13;
        gov.nist.javax.sip.message.SIPRequest $r16, $r22, $r25, $r28, $r33, $r35, $r37, $r41, $r52;
        javax.sip.header.CallIdHeader $r18, $r20;
        long $l0, $l2;
        byte $b1;
        javax.sip.address.URI $r34, $r38;
        gov.nist.core.HostPort $r40, $r49, $r50, $r53;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        r1 := @parameter0: gov.nist.javax.sip.message.SIPMessage;

        z0 = 0;

        $r10 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CSeqHeader getCSeq()>();

        r5 = interfaceinvoke $r10.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        $z4 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z4 != 0 goto label01;

        $z25 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isTerminated()>();

        if $z25 != 0 goto label20;

     label01:
        r2 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ViaList getViaHeaders()>();

        if r2 == null goto label20;

        $r11 = virtualinvoke r2.<gov.nist.javax.sip.header.ViaList: javax.sip.header.Header getFirst()>();

        r3 = (gov.nist.javax.sip.header.Via) $r11;

        r4 = virtualinvoke r3.<gov.nist.javax.sip.header.Via: java.lang.String getBranch()>();

        if r4 == null goto label02;

        $r56 = virtualinvoke r4.<java.lang.String: java.lang.String toLowerCase()>();

        $z24 = virtualinvoke $r56.<java.lang.String: boolean startsWith(java.lang.String)>("z9hg4bk");

        if $z24 != 0 goto label02;

        r4 = null;

     label02:
        if r4 == null goto label08;

        $r44 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.lang.String getBranch()>();

        if $r44 == null goto label08;

        $z16 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>("CANCEL");

        if $z16 == 0 goto label05;

        $r46 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.lang.String getMethod()>();

        $z18 = virtualinvoke $r46.<java.lang.String: boolean equals(java.lang.Object)>("CANCEL");

        if $z18 == 0 goto label03;

        $r47 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.lang.String getBranch()>();

        $z19 = virtualinvoke $r47.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r4);

        if $z19 == 0 goto label03;

        $r53 = virtualinvoke r3.<gov.nist.javax.sip.header.Via: gov.nist.core.HostPort getSentBy()>();

        $r52 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r55 = virtualinvoke $r52.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.ViaList getViaHeaders()>();

        $r54 = virtualinvoke $r55.<gov.nist.javax.sip.header.ViaList: javax.sip.header.Header getFirst()>();

        $r51 = (gov.nist.javax.sip.header.Via) $r54;

        $r50 = virtualinvoke $r51.<gov.nist.javax.sip.header.Via: gov.nist.core.HostPort getSentBy()>();

        $z23 = virtualinvoke $r53.<gov.nist.core.HostPort: boolean equals(java.lang.Object)>($r50);

        if $z23 == 0 goto label03;

        $z22 = 1;

        goto label04;

     label03:
        $z22 = 0;

     label04:
        z0 = $z22;

        goto label20;

     label05:
        $r45 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.lang.String getBranch()>();

        $z17 = virtualinvoke $r45.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r4);

        if $z17 == 0 goto label06;

        $r40 = virtualinvoke r3.<gov.nist.javax.sip.header.Via: gov.nist.core.HostPort getSentBy()>();

        $r41 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r42 = virtualinvoke $r41.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.ViaList getViaHeaders()>();

        $r43 = virtualinvoke $r42.<gov.nist.javax.sip.header.ViaList: javax.sip.header.Header getFirst()>();

        $r48 = (gov.nist.javax.sip.header.Via) $r43;

        $r49 = virtualinvoke $r48.<gov.nist.javax.sip.header.Via: gov.nist.core.HostPort getSentBy()>();

        $z20 = virtualinvoke $r40.<gov.nist.core.HostPort: boolean equals(java.lang.Object)>($r49);

        if $z20 == 0 goto label06;

        $z21 = 1;

        goto label07;

     label06:
        $z21 = 0;

     label07:
        z0 = $z21;

        goto label20;

     label08:
        r6 = r0.<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String fromTag>;

        $r12 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.FromHeader getFrom()>();

        r7 = interfaceinvoke $r12.<javax.sip.header.FromHeader: java.lang.String getTag()>();

        if r6 == null goto label09;

        if r7 != null goto label10;

     label09:
        $z13 = 1;

        goto label11;

     label10:
        $z13 = 0;

     label11:
        z1 = $z13;

        r8 = r0.<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String toTag>;

        $r13 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ToHeader getTo()>();

        r9 = interfaceinvoke $r13.<javax.sip.header.ToHeader: java.lang.String getTag()>();

        if r8 == null goto label12;

        if r9 != null goto label13;

     label12:
        $z14 = 1;

        goto label14;

     label13:
        $z14 = 0;

     label14:
        z2 = $z14;

        z3 = r1 instanceof gov.nist.javax.sip.message.SIPResponse;

        $r15 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CSeqHeader getCSeq()>();

        $r14 = interfaceinvoke $r15.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        $z5 = virtualinvoke $r14.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("CANCEL");

        if $z5 == 0 goto label15;

        $r37 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r36 = virtualinvoke $r37.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CSeqHeader getCSeq()>();

        $r39 = interfaceinvoke $r36.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        $z15 = virtualinvoke $r39.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("CANCEL");

        if $z15 != 0 goto label15;

        z0 = 0;

        goto label20;

     label15:
        if z3 != 0 goto label16;

        $r35 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r34 = virtualinvoke $r35.<gov.nist.javax.sip.message.SIPRequest: javax.sip.address.URI getRequestURI()>();

        $r33 = (gov.nist.javax.sip.message.SIPRequest) r1;

        $r38 = virtualinvoke $r33.<gov.nist.javax.sip.message.SIPRequest: javax.sip.address.URI getRequestURI()>();

        $z12 = virtualinvoke $r34.<java.lang.Object: boolean equals(java.lang.Object)>($r38);

        if $z12 == 0 goto label20;

     label16:
        if z1 != 0 goto label17;

        if r6 == null goto label20;

        $z11 = virtualinvoke r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r7);

        if $z11 == 0 goto label20;

     label17:
        if z2 != 0 goto label18;

        if r8 == null goto label20;

        $z9 = virtualinvoke r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r9);

        if $z9 == 0 goto label20;

     label18:
        $r16 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r18 = virtualinvoke $r16.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CallIdHeader getCallId()>();

        $r17 = interfaceinvoke $r18.<javax.sip.header.CallIdHeader: java.lang.String getCallId()>();

        $r20 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CallIdHeader getCallId()>();

        $r19 = interfaceinvoke $r20.<javax.sip.header.CallIdHeader: java.lang.String getCallId()>();

        $z6 = virtualinvoke $r17.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r19);

        if $z6 == 0 goto label20;

        $r22 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r21 = virtualinvoke $r22.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CSeqHeader getCSeq()>();

        $l0 = interfaceinvoke $r21.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        $r24 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CSeqHeader getCSeq()>();

        $l2 = interfaceinvoke $r24.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        $b1 = $l0 cmp $l2;

        if $b1 != 0 goto label20;

        $r23 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CSeqHeader getCSeq()>();

        $r27 = interfaceinvoke $r23.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        $z7 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>("CANCEL");

        if $z7 == 0 goto label19;

        $r28 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r29 = virtualinvoke $r28.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $r32 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CSeqHeader getCSeq()>();

        $r31 = interfaceinvoke $r32.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        $z10 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>($r31);

        if $z10 == 0 goto label20;

     label19:
        $r25 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r26 = virtualinvoke $r25.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.ViaList getViaHeaders()>();

        $r30 = virtualinvoke $r26.<gov.nist.javax.sip.header.ViaList: javax.sip.header.Header getFirst()>();

        $z8 = virtualinvoke r3.<gov.nist.javax.sip.header.Via: boolean equals(java.lang.Object)>($r30);

        if $z8 == 0 goto label20;

        z0 = 1;

     label20:
        return z0;
    }

    protected void map()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        javax.sip.TransactionState r1, $r8;
        boolean $z0, $z1;
        gov.nist.javax.sip.stack.SIPTransactionStack $r2, $r3, $r5;
        java.util.Timer $r4, $r6;
        gov.nist.javax.sip.stack.SIPServerTransaction$SendTrying $r7;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        r1 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        if r1 == null goto label1;

        $r8 = <javax.sip.TransactionState: javax.sip.TransactionState TRYING>;

        if r1 != $r8 goto label3;

     label1:
        $z0 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isInviteTransaction()>();

        if $z0 == 0 goto label2;

        $z1 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isMapped>;

        if $z1 != 0 goto label2;

        $r3 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r4 = virtualinvoke $r3.<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Timer getTimer()>();

        if $r4 == null goto label2;

        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isMapped> = 1;

        $r5 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r6 = virtualinvoke $r5.<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Timer getTimer()>();

        $r7 = new gov.nist.javax.sip.stack.SIPServerTransaction$SendTrying;

        specialinvoke $r7.<gov.nist.javax.sip.stack.SIPServerTransaction$SendTrying: void <init>(gov.nist.javax.sip.stack.SIPServerTransaction)>(r0);

        virtualinvoke $r6.<java.util.Timer: void schedule(java.util.TimerTask,long)>($r7, 200L);

        goto label3;

     label2:
        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isMapped> = 1;

     label3:
        $r2 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        virtualinvoke $r2.<gov.nist.javax.sip.stack.SIPTransactionStack: void removePendingTransaction(gov.nist.javax.sip.stack.SIPServerTransaction)>(r0);

        return;
    }

    public boolean isTransactionMapped()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        $z0 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isMapped>;

        return $z0;
    }

    public void processRequest(gov.nist.javax.sip.message.SIPRequest, gov.nist.javax.sip.stack.MessageChannel)
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        gov.nist.javax.sip.message.SIPRequest r1, $r7, $r13, $r37;
        gov.nist.javax.sip.stack.MessageChannel r2;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19;
        gov.nist.javax.sip.stack.SIPDialog r3;
        gov.nist.javax.sip.stack.SIPTransactionStack $r4, $r15, $r16, $r23, $r27, $r41, $r47, $r67, $r69, $r76, $r80, $r84, $r92, $r101;
        javax.sip.TransactionState $r5, $r9, $r10, $r19, $r25, $r29, $r31, $r32, $r43, $r44, $r57, $r62, $r63, $r64, $r65, $r68, $r71, $r81, $r97;
        java.lang.String $r6, $r8, $r12, $r14, $r21, $r30, $r34, $r35, $r50, $r54, $r66, $r70, $r72, $r82, $r87, $r89, $r95;
        java.lang.StringBuilder $r17, $r20, $r22, $r45, $r48, $r49, $r51, $r53, $r56, $r58, $r59, $r73, $r74, $r75, $r77, $r86, $r88, $r91, $r96, $r98, $r99;
        gov.nist.core.StackLogger $r18, $r24, $r46, $r78, $r85, $r90, $r100;
        gov.nist.javax.sip.message.SIPResponse $r26, $r42, $r52, $r55, $r79;
        gov.nist.javax.sip.stack.ServerRequestInterface $r28, $r33, $r36, $r38, $r39, $r40, $r60, $r61, $r83;
        int $i0;
        java.io.IOException $r93, $r94, r103;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        r1 := @parameter0: gov.nist.javax.sip.message.SIPRequest;

        r2 := @parameter1: gov.nist.javax.sip.stack.MessageChannel;

        z0 = 0;

        $r4 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z1 = virtualinvoke $r4.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label01;

        $r80 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r90 = virtualinvoke $r80.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r91 = new java.lang.StringBuilder;

        specialinvoke $r91.<java.lang.StringBuilder: void <init>()>();

        $r88 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("processRequest: ");

        $r89 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getFirstLine()>();

        $r86 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r89);

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r90.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r87);

        $r84 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r85 = virtualinvoke $r84.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r99 = new java.lang.StringBuilder;

        specialinvoke $r99.<java.lang.StringBuilder: void <init>()>();

        $r98 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tx state = ");

        $r97 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        $r96 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r97);

        $r95 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r85.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r95);

     label01:
        $r5 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        if $r5 != null goto label02;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setOriginalRequest(gov.nist.javax.sip.message.SIPRequest)>(r1);

        $r81 = <javax.sip.TransactionState: javax.sip.TransactionState TRYING>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)>($r81);

        z0 = 1;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setPassToListener()>();

        $z17 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isInviteTransaction()>();

        if $z17 == 0 goto label14;

        $z18 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isMapped>;

        if $z18 == 0 goto label14;

        $r79 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.message.SIPResponse createResponse(int,java.lang.String)>(100, "Trying");

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void sendMessage(gov.nist.javax.sip.message.SIPMessage)>($r79);

        goto label14;

     label02:
        $z2 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isInviteTransaction()>();

        if $z2 == 0 goto label08;

        $r62 = <javax.sip.TransactionState: javax.sip.TransactionState COMPLETED>;

        $r63 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        if $r62 != $r63 goto label08;

        $r70 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z14 = virtualinvoke $r70.<java.lang.String: boolean equals(java.lang.Object)>("ACK");

        if $z14 == 0 goto label08;

        $r71 = <javax.sip.TransactionState: javax.sip.TransactionState CONFIRMED>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)>($r71);

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void disableRetransmissionTimer()>();

        $z15 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isReliable()>();

        if $z15 != 0 goto label03;

        $i0 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: int TIMER_I>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void enableTimeoutTimer(int)>($i0);

        goto label04;

     label03:
        $r68 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)>($r68);

     label04:
        $r67 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z13 = virtualinvoke $r67.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isNon2XXAckPassedToListener()>();

        if $z13 == 0 goto label05;

        $r83 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.ServerRequestInterface requestOf>;

        interfaceinvoke $r83.<gov.nist.javax.sip.stack.ServerRequestInterface: void processRequest(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.MessageChannel)>(r1, r0);

        goto label07;

     label05:
        $r69 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z16 = virtualinvoke $r69.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z16 == 0 goto label06;

        $r76 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r78 = virtualinvoke $r76.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r77 = new java.lang.StringBuilder;

        specialinvoke $r77.<java.lang.StringBuilder: void <init>()>();

        $r73 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ACK received for server Tx ");

        $r72 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.lang.String getTransactionId()>();

        $r75 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r72);

        $r74 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not delivering to application!");

        $r82 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r78.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r82);

     label06:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void semRelease()>();

     label07:
        return;

     label08:
        $r6 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $r7 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r8 = virtualinvoke $r7.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z3 == 0 goto label14;

        $r44 = <javax.sip.TransactionState: javax.sip.TransactionState PROCEEDING>;

        $r43 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        if $r44 == $r43 goto label09;

        $r64 = <javax.sip.TransactionState: javax.sip.TransactionState COMPLETED>;

        $r65 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        if $r64 != $r65 goto label10;

     label09:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void semRelease()>();

        $r42 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse lastResponse>;

        if $r42 == null goto label12;

        $r55 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse lastResponse>;

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPTransaction: void sendMessage(gov.nist.javax.sip.message.SIPMessage)>($r55);

        goto label12;

     label10:
        $r66 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z12 = virtualinvoke $r66.<java.lang.String: boolean equals(java.lang.Object)>("ACK");

        if $z12 == 0 goto label12;

        $r60 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.ServerRequestInterface requestOf>;

        if $r60 == null goto label11;

        $r61 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.ServerRequestInterface requestOf>;

        interfaceinvoke $r61.<gov.nist.javax.sip.stack.ServerRequestInterface: void processRequest(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.MessageChannel)>(r1, r0);

        goto label12;

     label11:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void semRelease()>();

     label12:
        $r41 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z11 = virtualinvoke $r41.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z11 == 0 goto label13;

        $r47 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r46 = virtualinvoke $r47.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("completed processing retransmitted request : ");

        $r50 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getFirstLine()>();

        $r49 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r48 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r56 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" txState = ");

        $r57 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getState()>();

        $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r57);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" lastResponse = ");

        $r52 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse getLastResponse()>();

        $r53 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r52);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r46.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r54);

     label13:
        return;

     label14:
        $r9 = <javax.sip.TransactionState: javax.sip.TransactionState COMPLETED>;

        $r10 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        if $r9 == $r10 goto label18;

        $r31 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        $r32 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        if $r31 == $r32 goto label18;

        $r36 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.ServerRequestInterface requestOf>;

        if $r36 == null goto label18;

        $r37 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r34 = virtualinvoke $r37.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $r35 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z10 = virtualinvoke $r34.<java.lang.String: boolean equals(java.lang.Object)>($r35);

        if $z10 == 0 goto label16;

        if z0 == 0 goto label15;

        $r38 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.ServerRequestInterface requestOf>;

        interfaceinvoke $r38.<gov.nist.javax.sip.stack.ServerRequestInterface: void processRequest(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.MessageChannel)>(r1, r0);

        goto label29;

     label15:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void semRelease()>();

        goto label29;

     label16:
        $r40 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.ServerRequestInterface requestOf>;

        if $r40 == null goto label17;

        $r39 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.ServerRequestInterface requestOf>;

        interfaceinvoke $r39.<gov.nist.javax.sip.stack.ServerRequestInterface: void processRequest(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.MessageChannel)>(r1, r0);

        goto label29;

     label17:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void semRelease()>();

        goto label29;

     label18:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()>();

        $r13 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r12 = virtualinvoke $r13.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z4 = staticinvoke <gov.nist.javax.sip.stack.SIPTransactionStack: boolean isDialogCreated(java.lang.String)>($r12);

        if $z4 == 0 goto label23;

        $r25 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        $r29 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        if $r25 != $r29 goto label23;

        $r30 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z8 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>("ACK");

        if $z8 == 0 goto label23;

        $r28 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.ServerRequestInterface requestOf>;

        if $r28 == null goto label23;

        r3 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPDialog dialog>;

        if r3 == null goto label19;

        $z9 = r3.<gov.nist.javax.sip.stack.SIPDialog: boolean ackProcessed>;

        if $z9 != 0 goto label21;

     label19:
        if r3 == null goto label20;

        virtualinvoke r3.<gov.nist.javax.sip.stack.SIPDialog: void ackReceived(gov.nist.javax.sip.message.SIPRequest)>(r1);

        r3.<gov.nist.javax.sip.stack.SIPDialog: boolean ackProcessed> = 1;

     label20:
        $r33 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.ServerRequestInterface requestOf>;

        interfaceinvoke $r33.<gov.nist.javax.sip.stack.ServerRequestInterface: void processRequest(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.MessageChannel)>(r1, r0);

        goto label22;

     label21:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void semRelease()>();

     label22:
        goto label28;

     label23:
        $r14 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z5 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>("CANCEL");

        if $z5 == 0 goto label28;

        $r23 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z7 = virtualinvoke $r23.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z7 == 0 goto label24;

        $r27 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r24 = virtualinvoke $r27.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r24.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Too late to cancel Transaction");

     label24:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void semRelease()>();

     label25:
        $r26 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.message.SIPResponse createResponse(int)>(200);

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void sendMessage(gov.nist.javax.sip.message.SIPMessage)>($r26);

     label26:
        goto label28;

     label27:
        $r94 := @caughtexception;

     label28:
        $r15 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z6 = virtualinvoke $r15.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z6 == 0 goto label29;

        $r16 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r18 = virtualinvoke $r16.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dropping request ");

        $r19 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r18.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r21);

     label29:
        goto label32;

     label30:
        $r93 := @caughtexception;

        r103 = $r93;

        $r92 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z19 = virtualinvoke $r92.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z19 == 0 goto label31;

        $r101 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r100 = virtualinvoke $r101.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r100.<gov.nist.core.StackLogger: void logError(java.lang.String,java.lang.Exception)>("IOException ", r103);

     label31:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void semRelease()>();

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void raiseIOExceptionEvent()>();

     label32:
        return;

        catch java.io.IOException from label25 to label26 with label27;
        catch java.io.IOException from label01 to label07 with label30;
        catch java.io.IOException from label08 to label13 with label30;
        catch java.io.IOException from label14 to label29 with label30;
    }

    public void sendMessage(gov.nist.javax.sip.message.SIPMessage) throws java.io.IOException
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        gov.nist.javax.sip.message.SIPMessage r1;
        gov.nist.javax.sip.message.SIPResponse r2;
        int i0, $i1, $i2, $i3;
        java.text.ParseException r3, $r50;
        java.lang.Throwable r4, $r46;
        gov.nist.javax.sip.message.SIPRequest $r5, $r9, $r14;
        gov.nist.javax.sip.header.Via $r6, $r8, $r10, $r42, $r43;
        java.lang.String $r7, $r12, $r13, $r28, $r49;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        javax.sip.header.CSeqHeader $r11;
        javax.sip.TransactionState $r15, $r16, $r17, $r18, $r19, $r21, $r30, $r31, $r32, $r33, $r34, $r37, $r38, $r39, $r44, $r45, $r47;
        gov.nist.javax.sip.stack.SIPTransactionStack $r20, $r22;
        java.lang.StringBuilder $r23, $r25, $r26, $r27, $r29;
        gov.nist.core.StackLogger $r24;
        gov.nist.javax.sip.stack.SIPDialog $r35, $r36, $r40, $r41;
        java.io.IOException $r48, r51;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        r1 := @parameter0: gov.nist.javax.sip.message.SIPMessage;

     label01:
        r2 = (gov.nist.javax.sip.message.SIPResponse) r1;

        i0 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

     label02:
        $r5 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r6 = virtualinvoke $r5.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.Via getTopmostVia()>();

        $r7 = virtualinvoke $r6.<gov.nist.javax.sip.header.Via: java.lang.String getBranch()>();

        if $r7 == null goto label03;

        $r42 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.Via getTopmostVia()>();

        $r49 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.lang.String getBranch()>();

        virtualinvoke $r42.<gov.nist.javax.sip.header.Via: void setBranch(java.lang.String)>($r49);

        goto label04;

     label03:
        $r8 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.Via getTopmostVia()>();

        virtualinvoke $r8.<gov.nist.javax.sip.header.Via: void removeParameter(java.lang.String)>("branch");

     label04:
        $r9 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r10 = virtualinvoke $r9.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.Via getTopmostVia()>();

        $z0 = virtualinvoke $r10.<gov.nist.javax.sip.header.Via: boolean hasPort()>();

        if $z0 != 0 goto label05;

        $r43 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.Via getTopmostVia()>();

        virtualinvoke $r43.<gov.nist.javax.sip.header.Via: void removePort()>();

     label05:
        goto label07;

     label06:
        $r50 := @caughtexception;

        r3 = $r50;

        virtualinvoke r3.<java.text.ParseException: void printStackTrace()>();

     label07:
        $r11 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        $r12 = interfaceinvoke $r11.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        $r14 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r13 = virtualinvoke $r14.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z1 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z1 != 0 goto label09;

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void sendResponse(gov.nist.javax.sip.message.SIPResponse)>(r2);

     label08:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void startTransactionTimer()>();

        return;

     label09:
        $r15 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        $r17 = <javax.sip.TransactionState: javax.sip.TransactionState TRYING>;

        if $r15 != $r17 goto label15;

        $i2 = i0 / 100;

        if $i2 != 1 goto label10;

        $r44 = <javax.sip.TransactionState: javax.sip.TransactionState PROCEEDING>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)>($r44);

        goto label22;

     label10:
        if 200 > i0 goto label22;

        if i0 > 699 goto label22;

        $z6 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isInviteTransaction()>();

        if $z6 != 0 goto label12;

        $z8 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isReliable()>();

        if $z8 != 0 goto label11;

        $r45 = <javax.sip.TransactionState: javax.sip.TransactionState COMPLETED>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)>($r45);

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void enableTimeoutTimer(int)>(64);

        goto label22;

     label11:
        $r39 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)>($r39);

        goto label22;

     label12:
        $i3 = i0 / 100;

        if $i3 != 2 goto label13;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void disableRetransmissionTimer()>();

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void disableTimeoutTimer()>();

        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: int collectionTime> = 64;

        $r37 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)>($r37);

        $r41 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPDialog dialog>;

        if $r41 == null goto label22;

        $r40 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPDialog dialog>;

        virtualinvoke $r40.<gov.nist.javax.sip.stack.SIPDialog: void setRetransmissionTicks()>();

        goto label22;

     label13:
        $r38 = <javax.sip.TransactionState: javax.sip.TransactionState COMPLETED>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)>($r38);

        $z7 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isReliable()>();

        if $z7 != 0 goto label14;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void enableRetransmissionTimer()>();

     label14:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void enableTimeoutTimer(int)>(64);

        goto label22;

     label15:
        $r16 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        $r19 = <javax.sip.TransactionState: javax.sip.TransactionState PROCEEDING>;

        if $r16 != $r19 goto label20;

        $z4 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isInviteTransaction()>();

        if $z4 == 0 goto label18;

        $i1 = i0 / 100;

        if $i1 != 2 goto label16;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void disableRetransmissionTimer()>();

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void disableTimeoutTimer()>();

        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: int collectionTime> = 64;

        $r33 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)>($r33);

        $r35 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPDialog dialog>;

        if $r35 == null goto label22;

        $r36 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPDialog dialog>;

        virtualinvoke $r36.<gov.nist.javax.sip.stack.SIPDialog: void setRetransmissionTicks()>();

        goto label22;

     label16:
        if 300 > i0 goto label22;

        if i0 > 699 goto label22;

        $r34 = <javax.sip.TransactionState: javax.sip.TransactionState COMPLETED>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)>($r34);

        $z5 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isReliable()>();

        if $z5 != 0 goto label17;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void enableRetransmissionTimer()>();

     label17:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void enableTimeoutTimer(int)>(64);

        goto label22;

     label18:
        if 200 > i0 goto label22;

        if i0 > 699 goto label22;

        $r32 = <javax.sip.TransactionState: javax.sip.TransactionState COMPLETED>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)>($r32);

        $z3 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isReliable()>();

        if $z3 != 0 goto label19;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void disableRetransmissionTimer()>();

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void enableTimeoutTimer(int)>(64);

        goto label22;

     label19:
        $r31 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)>($r31);

        goto label22;

     label20:
        $r18 = <javax.sip.TransactionState: javax.sip.TransactionState COMPLETED>;

        $r21 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        if $r18 != $r21 goto label22;

     label21:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void startTransactionTimer()>();

        return;

     label22:
        $r20 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z2 = virtualinvoke $r20.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z2 == 0 goto label23;

        $r22 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r24 = virtualinvoke $r22.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendMessage : tx = ");

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r29 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" getState = ");

        $r30 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getState()>();

        $r27 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r30);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r24.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r28);

     label23:
        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse lastResponse> = r2;

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void sendResponse(gov.nist.javax.sip.message.SIPResponse)>(r2);

     label24:
        goto label26;

     label25:
        $r48 := @caughtexception;

        r51 = $r48;

        $r47 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)>($r47);

        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: int collectionTime> = 0;

        throw r51;

     label26:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void startTransactionTimer()>();

        goto label29;

     label27:
        $r46 := @caughtexception;

        r4 = $r46;

     label28:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void startTransactionTimer()>();

        throw r4;

     label29:
        return;

        catch java.text.ParseException from label02 to label05 with label06;
        catch java.io.IOException from label22 to label24 with label25;
        catch java.lang.Throwable from label01 to label08 with label27;
        catch java.lang.Throwable from label09 to label21 with label27;
        catch java.lang.Throwable from label22 to label26 with label27;
        catch java.lang.Throwable from label27 to label28 with label27;
    }

    public java.lang.String getViaHost()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        gov.nist.javax.sip.stack.MessageChannel $r1;
        java.lang.String $r2;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        $r1 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.MessageChannel getMessageChannel()>();

        $r2 = virtualinvoke $r1.<gov.nist.javax.sip.stack.MessageChannel: java.lang.String getViaHost()>();

        return $r2;
    }

    public int getViaPort()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        gov.nist.javax.sip.stack.MessageChannel $r1;
        int $i0;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        $r1 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.MessageChannel getMessageChannel()>();

        $i0 = virtualinvoke $r1.<gov.nist.javax.sip.stack.MessageChannel: int getViaPort()>();

        return $i0;
    }

    protected void fireRetransmissionTimer()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        gov.nist.javax.sip.SipProviderImpl r1;
        javax.sip.TimeoutEvent r2, $r9;
        gov.nist.javax.sip.stack.SIPTransactionStack $r3, $r7, $r11, $r12, $r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        gov.nist.javax.sip.message.SIPResponse $r4, $r5, $r6;
        int $i0, $i1;
        javax.sip.Timeout $r8;
        gov.nist.core.StackLogger $r10, $r15;
        java.io.IOException $r13, r16;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

     label1:
        $r3 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r3.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label2;

        $r11 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r10 = virtualinvoke $r11.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r10.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("fireRetransmissionTimer() -- ");

     label2:
        $z1 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isInviteTransaction()>();

        if $z1 == 0 goto label5;

        $r4 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse lastResponse>;

        if $r4 == null goto label5;

        $z2 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean retransmissionAlertEnabled>;

        if $z2 == 0 goto label3;

        $r7 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z4 = virtualinvoke $r7.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isTransactionPendingAck(gov.nist.javax.sip.stack.SIPServerTransaction)>(r0);

        if $z4 == 0 goto label4;

     label3:
        $r5 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse lastResponse>;

        $i0 = virtualinvoke $r5.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

        $i1 = $i0 / 100;

        if $i1 <= 2 goto label5;

        $z3 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isAckSeen>;

        if $z3 != 0 goto label5;

        $r6 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse lastResponse>;

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPTransaction: void sendMessage(gov.nist.javax.sip.message.SIPMessage)>($r6);

        goto label5;

     label4:
        r1 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.SipProviderImpl getSipProvider()>();

        $r9 = new javax.sip.TimeoutEvent;

        $r8 = <javax.sip.Timeout: javax.sip.Timeout RETRANSMIT>;

        specialinvoke $r9.<javax.sip.TimeoutEvent: void <init>(java.lang.Object,javax.sip.ServerTransaction,javax.sip.Timeout)>(r1, r0, $r8);

        r2 = $r9;

        virtualinvoke r1.<gov.nist.javax.sip.SipProviderImpl: void handleEvent(java.util.EventObject,gov.nist.javax.sip.stack.SIPTransaction)>(r2, r0);

     label5:
        goto label8;

     label6:
        $r13 := @caughtexception;

        r16 = $r13;

        $r12 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z5 = virtualinvoke $r12.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z5 == 0 goto label7;

        $r14 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r15 = virtualinvoke $r14.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r15.<gov.nist.core.StackLogger: void logException(java.lang.Throwable)>(r16);

     label7:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void raiseErrorEvent(int)>(2);

     label8:
        return;

        catch java.io.IOException from label1 to label5 with label6;
    }

    private void fireReliableResponseRetransmissionTimer()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        java.io.IOException r1, $r3;
        gov.nist.javax.sip.message.SIPResponse $r2;
        gov.nist.javax.sip.stack.SIPTransactionStack $r4, $r6;
        boolean $z0;
        javax.sip.TransactionState $r5;
        gov.nist.core.StackLogger $r7;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

     label1:
        $r2 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse pendingReliableResponse>;

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPTransaction: void sendMessage(gov.nist.javax.sip.message.SIPMessage)>($r2);

     label2:
        goto label5;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        $r4 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r4.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label4;

        $r6 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r7 = virtualinvoke $r6.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r7.<gov.nist.core.StackLogger: void logException(java.lang.Throwable)>(r1);

     label4:
        $r5 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)>($r5);

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void raiseErrorEvent(int)>(2);

     label5:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    protected void fireTimeoutTimer()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        gov.nist.javax.sip.stack.SIPDialog r1;
        gov.nist.javax.sip.stack.SIPTransactionStack $r2, $r22, $r24, $r27, $r31, $r33, $r34, $r36;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        java.lang.String $r3, $r6, $r8, $r45, $r47;
        gov.nist.javax.sip.message.SIPRequest $r5, $r7, $r48;
        javax.sip.TransactionState $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r23, $r25, $r26, $r28, $r29, $r30, $r32, $r43;
        int $i0, $i1, $i2;
        gov.nist.core.StackLogger $r35, $r40;
        java.lang.StringBuilder $r37, $r38, $r39, $r41, $r42, $r44, $r46;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        $r2 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r2.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label01;

        $r34 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r40 = virtualinvoke $r34.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SIPServerTransaction.fireTimeoutTimer this = ");

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r44 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" current state = ");

        $r43 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        $r42 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r43);

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" method = ");

        $r48 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r47 = virtualinvoke $r48.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $r46 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r40.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r45);

     label01:
        $r3 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.lang.String getMethod()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z1 == 0 goto label03;

        $r33 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z10 = virtualinvoke $r33.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean removeTransactionPendingAck(gov.nist.javax.sip.stack.SIPServerTransaction)>(r0);

        if $z10 == 0 goto label03;

        $r31 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z11 = virtualinvoke $r31.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z11 == 0 goto label02;

        $r36 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r35 = virtualinvoke $r36.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r35.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Found tx pending ACK - returning");

     label02:
        return;

     label03:
        r1 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPDialog dialog>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()>();

        $r5 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r6 = virtualinvoke $r5.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z2 = staticinvoke <gov.nist.javax.sip.stack.SIPTransactionStack: boolean isDialogCreated(java.lang.String)>($r6);

        if $z2 == 0 goto label05;

        $r29 = <javax.sip.TransactionState: javax.sip.TransactionState CALLING>;

        $r30 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        if $r29 == $r30 goto label04;

        $r28 = <javax.sip.TransactionState: javax.sip.TransactionState TRYING>;

        $r32 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        if $r28 != $r32 goto label05;

     label04:
        $i2 = <gov.nist.javax.sip.stack.SIPDialog: int TERMINATED_STATE>;

        virtualinvoke r1.<gov.nist.javax.sip.stack.SIPDialog: void setState(int)>($i2);

        goto label06;

     label05:
        $r7 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r8 = virtualinvoke $r7.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("BYE");

        if $z3 == 0 goto label06;

        if r1 == null goto label06;

        $z9 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPDialog: boolean isTerminatedOnBye()>();

        if $z9 == 0 goto label06;

        $i1 = <gov.nist.javax.sip.stack.SIPDialog: int TERMINATED_STATE>;

        virtualinvoke r1.<gov.nist.javax.sip.stack.SIPDialog: void setState(int)>($i1);

     label06:
        $r9 = <javax.sip.TransactionState: javax.sip.TransactionState COMPLETED>;

        $r10 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        if $r9 != $r10 goto label07;

        $z7 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isInviteTransaction()>();

        if $z7 == 0 goto label07;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void raiseErrorEvent(int)>(1);

        $r26 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)>($r26);

        $r27 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        virtualinvoke $r27.<gov.nist.javax.sip.stack.SIPTransactionStack: void removeTransaction(gov.nist.javax.sip.stack.SIPTransaction)>(r0);

        goto label12;

     label07:
        $r11 = <javax.sip.TransactionState: javax.sip.TransactionState COMPLETED>;

        $r13 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        if $r11 != $r13 goto label08;

        $z8 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isInviteTransaction()>();

        if $z8 != 0 goto label08;

        $r25 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)>($r25);

        $r24 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        virtualinvoke $r24.<gov.nist.javax.sip.stack.SIPTransactionStack: void removeTransaction(gov.nist.javax.sip.stack.SIPTransaction)>(r0);

        goto label12;

     label08:
        $r12 = <javax.sip.TransactionState: javax.sip.TransactionState CONFIRMED>;

        $r14 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        if $r12 != $r14 goto label09;

        $z6 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isInviteTransaction()>();

        if $z6 == 0 goto label09;

        $r23 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)>($r23);

        $r22 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        virtualinvoke $r22.<gov.nist.javax.sip.stack.SIPTransactionStack: void removeTransaction(gov.nist.javax.sip.stack.SIPTransaction)>(r0);

        goto label12;

     label09:
        $z4 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isInviteTransaction()>();

        if $z4 != 0 goto label11;

        $r18 = <javax.sip.TransactionState: javax.sip.TransactionState COMPLETED>;

        $r17 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        if $r18 == $r17 goto label10;

        $r19 = <javax.sip.TransactionState: javax.sip.TransactionState CONFIRMED>;

        $r21 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        if $r19 != $r21 goto label11;

     label10:
        $r20 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)>($r20);

        goto label12;

     label11:
        $z5 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isInviteTransaction()>();

        if $z5 == 0 goto label12;

        $r15 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        $r16 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        if $r15 != $r16 goto label12;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void raiseErrorEvent(int)>(1);

        if r1 == null goto label12;

        $i0 = <gov.nist.javax.sip.stack.SIPDialog: int TERMINATED_STATE>;

        virtualinvoke r1.<gov.nist.javax.sip.stack.SIPDialog: void setState(int)>($i0);

     label12:
        return;
    }

    public gov.nist.javax.sip.message.SIPResponse getLastResponse()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        gov.nist.javax.sip.message.SIPResponse $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse lastResponse>;

        return $r1;
    }

    public void setOriginalRequest(gov.nist.javax.sip.message.SIPRequest)
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        gov.nist.javax.sip.message.SIPRequest r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        r1 := @parameter0: gov.nist.javax.sip.message.SIPRequest;

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPTransaction: void setOriginalRequest(gov.nist.javax.sip.message.SIPRequest)>(r1);

        return;
    }

    public void sendResponse(javax.sip.message.Response) throws javax.sip.SipException
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        javax.sip.message.Response r1;
        gov.nist.javax.sip.message.SIPResponse r2, $r12, $r13, $r18, $r19, $r24, $r29, $r77, $r80, $r85;
        gov.nist.javax.sip.stack.SIPDialog r3;
        java.text.ParseException r4, $r99, $r104, r126;
        gov.nist.javax.sip.header.Expires r5, r120;
        javax.sip.DialogTerminatedEvent r6, $r31;
        javax.sip.header.CSeqHeader $r7, $r52, $r89;
        java.lang.String $r8, $r9, $r10, $r20, $r40, $r41, $r42, $r45, $r47, $r48, $r49, $r50, $r53, $r56, $r58, $r59, $r61, $r62, $r63, $r65, $r67, $r74, $r76, $r84, $r88, $r98, $r101, $r115, r122, r124;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z11, $z12, $z13, $z14, $z15, $z16, z17;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        gov.nist.javax.sip.message.SIPMessage $r11;
        gov.nist.javax.sip.message.SIPRequest $r14, $r95;
        javax.sip.message.Request $r15;
        javax.sip.header.FromHeader $r16, $r35;
        gov.nist.javax.sip.stack.SIPTransactionStack $r17, $r23, $r25, $r37, $r97, $r103, $r109, $r116, $r119;
        gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask $r21, $r22, $r30;
        java.util.Timer $r26;
        java.util.concurrent.ConcurrentHashMap $r27;
        gov.nist.javax.sip.SipProviderImpl $r32, $r38;
        javax.sip.DialogState $r33, $r34, r123;
        gov.nist.core.StackLogger $r36, $r100, $r112, $r117;
        javax.sip.SipException $r39, $r44, $r60, $r86, $r90, $r91, $r92, $r102, $r105, $r106, $r110, $r114;
        javax.sip.header.CallIdHeader $r43, $r46;
        java.lang.StringBuilder $r54, $r55, $r57, $r66, $r68;
        javax.sip.header.ToHeader $r64, $r73;
        gov.nist.javax.sip.stack.SIPServerTransaction$ProvisionalResponseTask $r69;
        javax.sip.TransactionState $r70, $r79, $r111, $r113;
        javax.sip.Dialog $r71;
        gov.nist.javax.sip.Utils $r72;
        gov.nist.javax.sip.header.ContentType $r75, $r78, $r83;
        java.util.concurrent.Semaphore $r81;
        java.util.concurrent.TimeUnit $r82;
        javax.sip.header.Header $r87, $r96;
        javax.sip.header.ExpiresHeader $r93, $r94;
        java.io.IOException $r107, r125;
        java.lang.NullPointerException $r108;
        java.lang.Exception $r118, r121;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        r1 := @parameter0: javax.sip.message.Response;

        r2 = (gov.nist.javax.sip.message.SIPResponse) r1;

        r3 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPDialog dialog>;

        if r1 != null goto label01;

        $r108 = new java.lang.NullPointerException;

        specialinvoke $r108.<java.lang.NullPointerException: void <init>(java.lang.String)>("null response");

        throw $r108;

     label01:
        virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: void checkHeaders()>();

     label02:
        goto label04;

     label03:
        $r99 := @caughtexception;

        r4 = $r99;

        $r102 = new javax.sip.SipException;

        $r101 = virtualinvoke r4.<java.text.ParseException: java.lang.String getMessage()>();

        specialinvoke $r102.<javax.sip.SipException: void <init>(java.lang.String)>($r101);

        throw $r102;

     label04:
        $r7 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        $r8 = interfaceinvoke $r7.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        $r9 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.lang.String getMethod()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z0 != 0 goto label05;

        $r105 = new javax.sip.SipException;

        specialinvoke $r105.<javax.sip.SipException: void <init>(java.lang.String)>("CSeq method does not match Request method of request that created the tx.");

        throw $r105;

     label05:
        $r10 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.lang.String getMethod()>();

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("SUBSCRIBE");

        if $z1 == 0 goto label07;

        $i8 = interfaceinvoke r1.<javax.sip.message.Response: int getStatusCode()>();

        $i11 = $i8 / 100;

        if $i11 != 2 goto label07;

        $r96 = interfaceinvoke r1.<javax.sip.message.Response: javax.sip.header.Header getHeader(java.lang.String)>("Expires");

        if $r96 != null goto label06;

        $r106 = new javax.sip.SipException;

        specialinvoke $r106.<javax.sip.SipException: void <init>(java.lang.String)>("Expires header is mandatory in 2xx response of SUBSCRIBE");

        throw $r106;

     label06:
        $r95 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r94 = virtualinvoke $r95.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.ExpiresHeader getExpires()>();

        r120 = (gov.nist.javax.sip.header.Expires) $r94;

        $r93 = interfaceinvoke r1.<javax.sip.message.Response: javax.sip.header.ExpiresHeader getExpires()>();

        r5 = (gov.nist.javax.sip.header.Expires) $r93;

        if r120 == null goto label07;

        $i10 = virtualinvoke r5.<gov.nist.javax.sip.header.Expires: int getExpires()>();

        $i9 = virtualinvoke r120.<gov.nist.javax.sip.header.Expires: int getExpires()>();

        if $i10 <= $i9 goto label07;

        $r92 = new javax.sip.SipException;

        specialinvoke $r92.<javax.sip.SipException: void <init>(java.lang.String)>("Response Expires time exceeds request Expires time : See RFC 3265 3.1.1");

        throw $r92;

     label07:
        $i0 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

        if $i0 != 200 goto label08;

        $r89 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        $r88 = interfaceinvoke $r89.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        $z14 = virtualinvoke $r88.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z14 == 0 goto label08;

        $r87 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.Header getHeader(java.lang.String)>("Contact");

        if $r87 != null goto label08;

        $r86 = new javax.sip.SipException;

        specialinvoke $r86.<javax.sip.SipException: void <init>(java.lang.String)>("Contact Header is mandatory for the OK to the INVITE");

        throw $r86;

     label08:
        $r11 = (gov.nist.javax.sip.message.SIPMessage) r1;

        $z2 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isMessagePartOfTransaction(gov.nist.javax.sip.message.SIPMessage)>($r11);

        if $z2 != 0 goto label09;

        $r90 = new javax.sip.SipException;

        specialinvoke $r90.<javax.sip.SipException: void <init>(java.lang.String)>("Response does not belong to this transaction.");

        throw $r90;

     label09:
        $r13 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse pendingReliableResponse>;

        if $r13 == null goto label13;

        $r71 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.Dialog getDialog()>();

        if $r71 == null goto label13;

        $r70 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getState()>();

        $r79 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        if $r70 == $r79 goto label13;

        $r80 = (gov.nist.javax.sip.message.SIPResponse) r1;

        $r78 = virtualinvoke $r80.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.ContentType getContentTypeHeader()>();

        if $r78 == null goto label13;

        $i7 = interfaceinvoke r1.<javax.sip.message.Response: int getStatusCode()>();

        $i6 = $i7 / 100;

        if $i6 != 2 goto label13;

        $r77 = (gov.nist.javax.sip.message.SIPResponse) r1;

        $r75 = virtualinvoke $r77.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.ContentType getContentTypeHeader()>();

        $r76 = virtualinvoke $r75.<gov.nist.javax.sip.header.ContentType: java.lang.String getContentType()>();

        $z13 = virtualinvoke $r76.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("application");

        if $z13 == 0 goto label13;

        $r85 = (gov.nist.javax.sip.message.SIPResponse) r1;

        $r83 = virtualinvoke $r85.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.ContentType getContentTypeHeader()>();

        $r84 = virtualinvoke $r83.<gov.nist.javax.sip.header.ContentType: java.lang.String getContentSubType()>();

        $z12 = virtualinvoke $r84.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("sdp");

        if $z12 == 0 goto label13;

     label10:
        $r81 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.util.concurrent.Semaphore provisionalResponseSem>;

        $r82 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        z17 = virtualinvoke $r81.<java.util.concurrent.Semaphore: boolean tryAcquire(long,java.util.concurrent.TimeUnit)>(1L, $r82);

        if z17 != 0 goto label11;

        $r91 = new javax.sip.SipException;

        specialinvoke $r91.<javax.sip.SipException: void <init>(java.lang.String)>("cannot send response -- unacked povisional");

        throw $r91;

     label11:
        goto label14;

     label12:
        $r118 := @caughtexception;

        r121 = $r118;

        $r119 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r112 = virtualinvoke $r119.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r112.<gov.nist.core.StackLogger: void logError(java.lang.String,java.lang.Exception)>("Could not acquire PRACK sem ", r121);

        goto label14;

     label13:
        $r12 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse pendingReliableResponse>;

        if $r12 == null goto label14;

        $z11 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: boolean isFinalResponse()>();

        if $z11 == 0 goto label14;

        $r69 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$ProvisionalResponseTask provisionalResponseTask>;

        virtualinvoke $r69.<gov.nist.javax.sip.stack.SIPServerTransaction$ProvisionalResponseTask: boolean cancel()>();

        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$ProvisionalResponseTask provisionalResponseTask> = null;

     label14:
        if r3 == null goto label18;

        $i5 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

        $i4 = $i5 / 100;

        if $i4 != 2 goto label17;

        $r52 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        $r53 = interfaceinvoke $r52.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        $z8 = staticinvoke <gov.nist.javax.sip.stack.SIPTransactionStack: boolean isDialogCreated(java.lang.String)>($r53);

        if $z8 == 0 goto label17;

        $r47 = virtualinvoke r3.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>();

        if $r47 != null goto label15;

        $r64 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.ToHeader getTo()>();

        $r63 = interfaceinvoke $r64.<javax.sip.header.ToHeader: java.lang.String getTag()>();

        if $r63 != null goto label15;

        $r73 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.ToHeader getTo()>();

        $r72 = staticinvoke <gov.nist.javax.sip.Utils: gov.nist.javax.sip.Utils getInstance()>();

        $r74 = virtualinvoke $r72.<gov.nist.javax.sip.Utils: java.lang.String generateTag()>();

        interfaceinvoke $r73.<javax.sip.header.ToHeader: void setTag(java.lang.String)>($r74);

        goto label17;

     label15:
        $r48 = virtualinvoke r3.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>();

        if $r48 == null goto label16;

        $r62 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getToTag()>();

        if $r62 != null goto label16;

        $r61 = virtualinvoke r3.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>();

        virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: void setToTag(java.lang.String)>($r61);

        goto label17;

     label16:
        $r49 = virtualinvoke r3.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>();

        if $r49 == null goto label17;

        $r50 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getToTag()>();

        if $r50 == null goto label17;

        $r58 = virtualinvoke r3.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>();

        $r59 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getToTag()>();

        $z9 = virtualinvoke $r58.<java.lang.String: boolean equals(java.lang.Object)>($r59);

        if $z9 != 0 goto label17;

        $r60 = new javax.sip.SipException;

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Tag mismatch dialogTag is ");

        $r56 = virtualinvoke r3.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>();

        $r57 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);

        $r66 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" responseTag is ");

        $r65 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getToTag()>();

        $r68 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

        $r67 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r60.<javax.sip.SipException: void <init>(java.lang.String)>($r67);

        throw $r60;

     label17:
        $r43 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CallIdHeader getCallId()>();

        $r42 = interfaceinvoke $r43.<javax.sip.header.CallIdHeader: java.lang.String getCallId()>();

        $r46 = virtualinvoke r3.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.header.CallIdHeader getCallId()>();

        $r45 = interfaceinvoke $r46.<javax.sip.header.CallIdHeader: java.lang.String getCallId()>();

        $z7 = virtualinvoke $r42.<java.lang.String: boolean equals(java.lang.Object)>($r45);

        if $z7 != 0 goto label18;

        $r44 = new javax.sip.SipException;

        specialinvoke $r44.<javax.sip.SipException: void <init>(java.lang.String)>("Dialog mismatch!");

        throw $r44;

     label18:
        $r15 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.message.Request getRequest()>();

        $r14 = (gov.nist.javax.sip.message.SIPRequest) $r15;

        $r16 = virtualinvoke $r14.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.FromHeader getFrom()>();

        r122 = interfaceinvoke $r16.<javax.sip.header.FromHeader: java.lang.String getTag()>();

        if r122 == null goto label19;

        $r41 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getFromTag()>();

        if $r41 == null goto label19;

        $r40 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getFromTag()>();

        $z6 = virtualinvoke $r40.<java.lang.String: boolean equals(java.lang.Object)>(r122);

        if $z6 != 0 goto label19;

        $r39 = new javax.sip.SipException;

        specialinvoke $r39.<javax.sip.SipException: void <init>(java.lang.String)>("From tag of request does not match response from tag");

        throw $r39;

     label19:
        if r122 == null goto label20;

        $r35 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.FromHeader getFrom()>();

        interfaceinvoke $r35.<javax.sip.header.FromHeader: void setTag(java.lang.String)>(r122);

        goto label21;

     label20:
        $r17 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z3 = virtualinvoke $r17.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z3 == 0 goto label21;

        $r37 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r36 = virtualinvoke $r37.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r36.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("WARNING -- Null From tag in request!!");

     label21:
        if r3 == null goto label23;

        $i3 = interfaceinvoke r1.<javax.sip.message.Response: int getStatusCode()>();

        if $i3 == 100 goto label23;

        virtualinvoke r3.<gov.nist.javax.sip.stack.SIPDialog: void setResponseTags(gov.nist.javax.sip.message.SIPResponse)>(r2);

        r123 = virtualinvoke r3.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $r29 = (gov.nist.javax.sip.message.SIPResponse) r1;

        virtualinvoke r3.<gov.nist.javax.sip.stack.SIPDialog: void setLastResponse(gov.nist.javax.sip.stack.SIPTransaction,gov.nist.javax.sip.message.SIPResponse)>(r0, $r29);

        if r123 != null goto label22;

        $r33 = virtualinvoke r3.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $r34 = <javax.sip.DialogState: javax.sip.DialogState TERMINATED>;

        if $r33 != $r34 goto label22;

        $r31 = new javax.sip.DialogTerminatedEvent;

        $r32 = virtualinvoke r3.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.SipProviderImpl getSipProvider()>();

        specialinvoke $r31.<javax.sip.DialogTerminatedEvent: void <init>(java.lang.Object,javax.sip.Dialog)>($r32, r3);

        r6 = $r31;

        $r38 = virtualinvoke r3.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.SipProviderImpl getSipProvider()>();

        virtualinvoke $r38.<gov.nist.javax.sip.SipProviderImpl: void handleEvent(java.util.EventObject,gov.nist.javax.sip.stack.SIPTransaction)>(r6, r0);

     label22:
        goto label24;

     label23:
        if r3 != null goto label24;

        $r20 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.lang.String getMethod()>();

        $z4 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z4 == 0 goto label24;

        $z5 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean retransmissionAlertEnabled>;

        if $z5 == 0 goto label24;

        $r21 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask retransmissionAlertTimerTask>;

        if $r21 != null goto label24;

        $i2 = interfaceinvoke r1.<javax.sip.message.Response: int getStatusCode()>();

        $i1 = $i2 / 100;

        if $i1 != 2 goto label24;

        $r24 = (gov.nist.javax.sip.message.SIPResponse) r1;

        r124 = virtualinvoke $r24.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getDialogId(boolean)>(1);

        $r22 = new gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask;

        specialinvoke $r22.<gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask: void <init>(gov.nist.javax.sip.stack.SIPServerTransaction,java.lang.String)>(r0, r124);

        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask retransmissionAlertTimerTask> = $r22;

        $r23 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r27 = $r23.<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.concurrent.ConcurrentHashMap retransmissionAlertTransactions>;

        virtualinvoke $r27.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r124, r0);

        $r25 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r26 = virtualinvoke $r25.<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Timer getTimer()>();

        $r30 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask retransmissionAlertTimerTask>;

        virtualinvoke $r26.<java.util.Timer: void schedule(java.util.TimerTask,long,long)>($r30, 0L, 500L);

     label24:
        $r19 = (gov.nist.javax.sip.message.SIPResponse) r1;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void sendMessage(gov.nist.javax.sip.message.SIPMessage)>($r19);

        if r3 == null goto label25;

        $r18 = (gov.nist.javax.sip.message.SIPResponse) r1;

        virtualinvoke r3.<gov.nist.javax.sip.stack.SIPDialog: void startRetransmitTimer(gov.nist.javax.sip.stack.SIPServerTransaction,javax.sip.message.Response)>(r0, $r18);

     label25:
        goto label30;

     label26:
        $r107 := @caughtexception;

        r125 = $r107;

        $r109 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z15 = virtualinvoke $r109.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z15 == 0 goto label27;

        $r97 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r100 = virtualinvoke $r97.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r100.<gov.nist.core.StackLogger: void logException(java.lang.Throwable)>(r125);

     label27:
        $r111 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)>($r111);

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void raiseErrorEvent(int)>(2);

        $r110 = new javax.sip.SipException;

        $r98 = virtualinvoke r125.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r110.<javax.sip.SipException: void <init>(java.lang.String)>($r98);

        throw $r110;

     label28:
        $r104 := @caughtexception;

        r126 = $r104;

        $r103 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z16 = virtualinvoke $r103.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z16 == 0 goto label29;

        $r116 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r117 = virtualinvoke $r116.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r117.<gov.nist.core.StackLogger: void logException(java.lang.Throwable)>(r126);

     label29:
        $r113 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)>($r113);

        $r114 = new javax.sip.SipException;

        $r115 = virtualinvoke r126.<java.text.ParseException: java.lang.String getMessage()>();

        specialinvoke $r114.<javax.sip.SipException: void <init>(java.lang.String)>($r115);

        throw $r114;

     label30:
        return;

        catch java.text.ParseException from label01 to label02 with label03;
        catch java.lang.Exception from label10 to label11 with label12;
        catch java.io.IOException from label09 to label25 with label26;
        catch java.text.ParseException from label09 to label25 with label28;
    }

    private javax.sip.TransactionState getRealState()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        javax.sip.TransactionState $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        $r1 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPTransaction: javax.sip.TransactionState getState()>();

        return $r1;
    }

    public javax.sip.TransactionState getState()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        boolean $z0;
        javax.sip.TransactionState $r1, $r2, $r3, $r4;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        $z0 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isInviteTransaction()>();

        if $z0 == 0 goto label1;

        $r2 = <javax.sip.TransactionState: javax.sip.TransactionState TRYING>;

        $r3 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPTransaction: javax.sip.TransactionState getState()>();

        if $r2 != $r3 goto label1;

        $r4 = <javax.sip.TransactionState: javax.sip.TransactionState PROCEEDING>;

        return $r4;

     label1:
        $r1 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPTransaction: javax.sip.TransactionState getState()>();

        return $r1;
    }

    public void setState(javax.sip.TransactionState)
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        javax.sip.TransactionState r1, $r2;
        boolean $z0, $z1;
        gov.nist.javax.sip.stack.SIPTransactionStack $r3;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        r1 := @parameter0: javax.sip.TransactionState;

        $r2 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        if r1 != $r2 goto label1;

        $z0 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isReliable()>();

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()>();

        $z1 = $r3.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean cacheServerConnections>;

        if $z1 != 0 goto label1;

        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: int collectionTime> = 64;

     label1:
        specialinvoke r0.<gov.nist.javax.sip.stack.SIPTransaction: void setState(javax.sip.TransactionState)>(r1);

        return;
    }

    protected void startTransactionTimer()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        gov.nist.javax.sip.stack.SIPServerTransaction$TransactionTimer r1, $r5;
        java.util.concurrent.atomic.AtomicBoolean $r2;
        boolean $z0;
        gov.nist.javax.sip.stack.SIPTransactionStack $r3, $r6;
        java.util.Timer $r4, $r7;
        int $i0, $i1;
        long $l2, $l3;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        $r2 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.util.concurrent.atomic.AtomicBoolean transactionTimerStarted>;

        $z0 = virtualinvoke $r2.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);

        if $z0 == 0 goto label1;

        $r3 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r4 = virtualinvoke $r3.<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Timer getTimer()>();

        if $r4 == null goto label1;

        $r5 = new gov.nist.javax.sip.stack.SIPServerTransaction$TransactionTimer;

        specialinvoke $r5.<gov.nist.javax.sip.stack.SIPServerTransaction$TransactionTimer: void <init>(gov.nist.javax.sip.stack.SIPServerTransaction)>(r0);

        r1 = $r5;

        $r6 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r7 = virtualinvoke $r6.<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Timer getTimer()>();

        $i0 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: int BASE_TIMER_INTERVAL>;

        $l3 = (long) $i0;

        $i1 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: int BASE_TIMER_INTERVAL>;

        $l2 = (long) $i1;

        virtualinvoke $r7.<java.util.Timer: void schedule(java.util.TimerTask,long,long)>(r1, $l3, $l2);

     label1:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0, r2;
        java.lang.Object r1;
        java.lang.Class $r3, $r4;
        boolean $z0, $z1;
        java.lang.String $r5, $r6;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        r1 := @parameter0: java.lang.Object;

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (gov.nist.javax.sip.stack.SIPServerTransaction) r1;

        $r5 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.lang.String getBranch()>();

        $r6 = virtualinvoke r2.<gov.nist.javax.sip.stack.SIPServerTransaction: java.lang.String getBranch()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r6);

        return $z1;
    }

    public javax.sip.Dialog getDialog()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        gov.nist.javax.sip.stack.SIPDialog $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPDialog dialog>;

        return $r1;
    }

    public void setDialog(gov.nist.javax.sip.stack.SIPDialog, java.lang.String)
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        gov.nist.javax.sip.stack.SIPDialog r1, $r14;
        java.lang.String r2, $r7, $r10, $r21;
        gov.nist.javax.sip.stack.SIPTransactionStack $r3, $r8, $r13;
        boolean $z0, $z1;
        gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask $r4, $r5, $r6, $r9;
        java.util.concurrent.ConcurrentHashMap $r11;
        java.lang.StringBuilder $r15, $r17, $r18, $r19, $r20;
        gov.nist.core.StackLogger $r16;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        r1 := @parameter0: gov.nist.javax.sip.stack.SIPDialog;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r3.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label1;

        $r13 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r16 = virtualinvoke $r13.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setDialog ");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dialog = ");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r16.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r21);

     label1:
        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPDialog dialog> = r1;

        if r2 == null goto label2;

        $r14 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPDialog dialog>;

        virtualinvoke $r14.<gov.nist.javax.sip.stack.SIPDialog: void setAssigned()>();

     label2:
        $z1 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean retransmissionAlertEnabled>;

        if $z1 == 0 goto label4;

        $r4 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask retransmissionAlertTimerTask>;

        if $r4 == null goto label4;

        $r5 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask retransmissionAlertTimerTask>;

        virtualinvoke $r5.<gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask: boolean cancel()>();

        $r6 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask retransmissionAlertTimerTask>;

        $r7 = $r6.<gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask: java.lang.String dialogId>;

        if $r7 == null goto label3;

        $r8 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r11 = $r8.<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.concurrent.ConcurrentHashMap retransmissionAlertTransactions>;

        $r9 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask retransmissionAlertTimerTask>;

        $r10 = $r9.<gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask: java.lang.String dialogId>;

        virtualinvoke $r11.<java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>($r10);

     label3:
        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask retransmissionAlertTimerTask> = null;

     label4:
        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean retransmissionAlertEnabled> = 0;

        return;
    }

    public void terminate() throws javax.sip.ObjectInUseException
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        javax.sip.TransactionState $r1;
        gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask $r2, $r3, $r4, $r7;
        java.lang.String $r5, $r8;
        gov.nist.javax.sip.stack.SIPTransactionStack $r6;
        java.util.concurrent.ConcurrentHashMap $r9;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        $r1 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void setState(javax.sip.TransactionState)>($r1);

        $r2 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask retransmissionAlertTimerTask>;

        if $r2 == null goto label2;

        $r3 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask retransmissionAlertTimerTask>;

        virtualinvoke $r3.<gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask: boolean cancel()>();

        $r4 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask retransmissionAlertTimerTask>;

        $r5 = $r4.<gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask: java.lang.String dialogId>;

        if $r5 == null goto label1;

        $r6 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r9 = $r6.<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.concurrent.ConcurrentHashMap retransmissionAlertTransactions>;

        $r7 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask retransmissionAlertTimerTask>;

        $r8 = $r7.<gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask: java.lang.String dialogId>;

        virtualinvoke $r9.<java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>($r8);

     label1:
        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask retransmissionAlertTimerTask> = null;

     label2:
        return;
    }

    protected void sendReliableProvisionalResponse(javax.sip.message.Response) throws javax.sip.SipException
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        javax.sip.message.Response r1;
        gov.nist.javax.sip.header.RSeq r2, $r16;
        boolean z0;
        gov.nist.javax.sip.message.SIPResponse $r3, $r4, $r7;
        javax.sip.header.Header $r5, $r6;
        int $i0, $i1, $i2;
        long $l3;
        javax.sip.Dialog $r8;
        gov.nist.javax.sip.message.SIPMessage $r9;
        gov.nist.javax.sip.stack.SIPServerTransaction$ProvisionalResponseTask $r10, $r14;
        java.util.Timer $r11;
        gov.nist.javax.sip.stack.SIPTransactionStack $r12;
        java.util.concurrent.TimeUnit $r13;
        java.util.concurrent.Semaphore $r15;
        javax.sip.SipException $r17, $r19;
        java.lang.Exception $r18, r20;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        r1 := @parameter0: javax.sip.message.Response;

        $r3 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse pendingReliableResponse>;

        if $r3 == null goto label1;

        $r19 = new javax.sip.SipException;

        specialinvoke $r19.<javax.sip.SipException: void <init>(java.lang.String)>("Unacknowledged response");

        throw $r19;

     label1:
        $r4 = (gov.nist.javax.sip.message.SIPResponse) r1;

        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse pendingReliableResponse> = $r4;

        $r5 = interfaceinvoke r1.<javax.sip.message.Response: javax.sip.header.Header getHeader(java.lang.String)>("RSeq");

        r2 = (gov.nist.javax.sip.header.RSeq) $r5;

        $r6 = interfaceinvoke r1.<javax.sip.message.Response: javax.sip.header.Header getHeader(java.lang.String)>("RSeq");

        if $r6 != null goto label2;

        $r16 = new gov.nist.javax.sip.header.RSeq;

        specialinvoke $r16.<gov.nist.javax.sip.header.RSeq: void <init>()>();

        r2 = $r16;

        interfaceinvoke r1.<javax.sip.message.Response: void setHeader(javax.sip.header.Header)>(r2);

     label2:
        $i0 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: int rseqNumber>;

        $i1 = $i0 + 1;

        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: int rseqNumber> = $i1;

        $i2 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: int rseqNumber>;

        $l3 = (long) $i2;

        virtualinvoke r2.<gov.nist.javax.sip.header.RSeq: void setSeqNumber(long)>($l3);

        $r7 = (gov.nist.javax.sip.message.SIPResponse) r1;

        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse lastResponse> = $r7;

        $r8 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.Dialog getDialog()>();

        if $r8 == null goto label3;

        $r15 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.util.concurrent.Semaphore provisionalResponseSem>;

        $r13 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        z0 = virtualinvoke $r15.<java.util.concurrent.Semaphore: boolean tryAcquire(long,java.util.concurrent.TimeUnit)>(1L, $r13);

        if z0 != 0 goto label3;

        $r17 = new javax.sip.SipException;

        specialinvoke $r17.<javax.sip.SipException: void <init>(java.lang.String)>("Unacknowledged response");

        throw $r17;

     label3:
        $r9 = (gov.nist.javax.sip.message.SIPMessage) r1;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void sendMessage(gov.nist.javax.sip.message.SIPMessage)>($r9);

        $r10 = new gov.nist.javax.sip.stack.SIPServerTransaction$ProvisionalResponseTask;

        specialinvoke $r10.<gov.nist.javax.sip.stack.SIPServerTransaction$ProvisionalResponseTask: void <init>(gov.nist.javax.sip.stack.SIPServerTransaction)>(r0);

        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$ProvisionalResponseTask provisionalResponseTask> = $r10;

        $r12 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r11 = virtualinvoke $r12.<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Timer getTimer()>();

        $r14 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$ProvisionalResponseTask provisionalResponseTask>;

        virtualinvoke $r11.<java.util.Timer: void schedule(java.util.TimerTask,long,long)>($r14, 0L, 500L);

     label4:
        goto label6;

     label5:
        $r18 := @caughtexception;

        r20 = $r18;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>(r20);

     label6:
        return;

        catch java.lang.Exception from label2 to label4 with label5;
    }

    public gov.nist.javax.sip.message.SIPResponse getReliableProvisionalResponse()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        gov.nist.javax.sip.message.SIPResponse $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse pendingReliableResponse>;

        return $r1;
    }

    public boolean prackRecieved()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        gov.nist.javax.sip.message.SIPResponse $r1;
        gov.nist.javax.sip.stack.SIPServerTransaction$ProvisionalResponseTask $r2, $r4;
        java.util.concurrent.Semaphore $r3;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse pendingReliableResponse>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$ProvisionalResponseTask provisionalResponseTask>;

        if $r2 == null goto label2;

        $r4 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$ProvisionalResponseTask provisionalResponseTask>;

        virtualinvoke $r4.<gov.nist.javax.sip.stack.SIPServerTransaction$ProvisionalResponseTask: boolean cancel()>();

     label2:
        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse pendingReliableResponse> = null;

        $r3 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.util.concurrent.Semaphore provisionalResponseSem>;

        virtualinvoke $r3.<java.util.concurrent.Semaphore: void release()>();

        return 1;
    }

    public void enableRetransmissionAlerts() throws javax.sip.SipException
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        javax.sip.Dialog $r1;
        java.lang.String $r2;
        boolean $z0;
        javax.sip.SipException $r3, $r4;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        $r1 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.Dialog getDialog()>();

        if $r1 == null goto label1;

        $r4 = new javax.sip.SipException;

        specialinvoke $r4.<javax.sip.SipException: void <init>(java.lang.String)>("Dialog associated with tx");

        throw $r4;

     label1:
        $r2 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.lang.String getMethod()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z0 != 0 goto label2;

        $r3 = new javax.sip.SipException;

        specialinvoke $r3.<javax.sip.SipException: void <init>(java.lang.String)>("Request Method must be INVITE");

        throw $r3;

     label2:
        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean retransmissionAlertEnabled> = 1;

        return;
    }

    public boolean isRetransmissionAlertEnabled()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        $z0 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean retransmissionAlertEnabled>;

        return $z0;
    }

    public void disableRetransmissionAlerts()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        java.lang.String r1;
        gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask $r2, $r3, $r4;
        boolean $z0;
        gov.nist.javax.sip.stack.SIPTransactionStack $r5;
        java.util.concurrent.ConcurrentHashMap $r6;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        $r2 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask retransmissionAlertTimerTask>;

        if $r2 == null goto label2;

        $z0 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean retransmissionAlertEnabled>;

        if $z0 == 0 goto label2;

        $r3 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask retransmissionAlertTimerTask>;

        virtualinvoke $r3.<gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask: boolean cancel()>();

        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean retransmissionAlertEnabled> = 0;

        $r4 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask retransmissionAlertTimerTask>;

        r1 = $r4.<gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask: java.lang.String dialogId>;

        if r1 == null goto label1;

        $r5 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r6 = $r5.<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.concurrent.ConcurrentHashMap retransmissionAlertTransactions>;

        virtualinvoke $r6.<java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>(r1);

     label1:
        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction$RetransmissionAlertTimerTask retransmissionAlertTimerTask> = null;

     label2:
        return;
    }

    public void setAckSeen()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isAckSeen> = 1;

        return;
    }

    public boolean ackSeen()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        $z0 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isAckSeen>;

        return $z0;
    }

    public void setMapped(boolean)
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        boolean z0;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        z0 := @parameter0: boolean;

        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isMapped> = 1;

        return;
    }

    public void setPendingSubscribe(gov.nist.javax.sip.stack.SIPClientTransaction)
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        gov.nist.javax.sip.stack.SIPClientTransaction r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        r1 := @parameter0: gov.nist.javax.sip.stack.SIPClientTransaction;

        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPClientTransaction pendingSubscribeTransaction> = r1;

        return;
    }

    public void releaseSem()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0, $r2, $r4;
        gov.nist.javax.sip.stack.SIPClientTransaction $r1, $r5;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPClientTransaction pendingSubscribeTransaction>;

        if $r1 == null goto label1;

        $r5 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPClientTransaction pendingSubscribeTransaction>;

        virtualinvoke $r5.<gov.nist.javax.sip.stack.SIPClientTransaction: void releaseSem()>();

        goto label2;

     label1:
        $r2 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction inviteTransaction>;

        if $r2 == null goto label2;

        $r3 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.lang.String getMethod()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("CANCEL");

        if $z0 == 0 goto label2;

        $r4 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction inviteTransaction>;

        virtualinvoke $r4.<gov.nist.javax.sip.stack.SIPServerTransaction: void releaseSem()>();

     label2:
        specialinvoke r0.<gov.nist.javax.sip.stack.SIPTransaction: void releaseSem()>();

        return;
    }

    public void setInviteTransaction(gov.nist.javax.sip.stack.SIPServerTransaction)
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0, r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        r1 := @parameter0: gov.nist.javax.sip.stack.SIPServerTransaction;

        r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction inviteTransaction> = r1;

        return;
    }

    public gov.nist.javax.sip.stack.SIPServerTransaction getCanceledInviteTransaction()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0, $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction inviteTransaction>;

        return $r1;
    }

    public void scheduleAckRemoval() throws java.lang.IllegalStateException
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        java.lang.String $r1, $r5, $r8, $r11, $r12;
        java.lang.IllegalStateException $r2;
        java.lang.StringBuilder $r3, $r4, $r6, $r7, $r9, $r10;
        boolean $z0, $z1;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        $r1 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.lang.String getMethod()>();

        if $r1 == null goto label1;

        $r12 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.lang.String getMethod()>();

        $z1 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>("ACK");

        if $z1 != 0 goto label4;

     label1:
        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Method is null[");

        $r5 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.lang.String getMethod()>();

        if $r5 != null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] or method is not ACK[");

        $r8 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: java.lang.String getMethod()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r11);

        throw $r2;

     label4:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void startTransactionTimer()>();

        return;
    }

    public volatile javax.sip.ServerTransaction getCanceledInviteTransaction()
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0, $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPServerTransaction;

        $r1 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.stack.SIPServerTransaction getCanceledInviteTransaction()>();

        return $r1;
    }

    static void access$000(gov.nist.javax.sip.stack.SIPServerTransaction)
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;

        r0 := @parameter0: gov.nist.javax.sip.stack.SIPServerTransaction;

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: void fireReliableResponseRetransmissionTimer()>();

        return;
    }

    static javax.sip.TransactionState access$100(gov.nist.javax.sip.stack.SIPServerTransaction)
    {
        gov.nist.javax.sip.stack.SIPServerTransaction r0;
        javax.sip.TransactionState $r1;

        r0 := @parameter0: gov.nist.javax.sip.stack.SIPServerTransaction;

        $r1 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.TransactionState getRealState()>();

        return $r1;
    }
}
