public class org.apache.http.impl.auth.DigestScheme extends org.apache.http.impl.auth.RFC2617Scheme
{
    private static final char[] HEXADECIMAL;
    private boolean complete;
    private static final java.lang.String NC;
    private static final int QOP_MISSING;
    private static final int QOP_AUTH_INT;
    private static final int QOP_AUTH;
    private int qopVariant;
    private java.lang.String cnonce;

    public void <init>()
    {
        org.apache.http.impl.auth.DigestScheme r0;

        r0 := @this: org.apache.http.impl.auth.DigestScheme;

        specialinvoke r0.<org.apache.http.impl.auth.RFC2617Scheme: void <init>()>();

        r0.<org.apache.http.impl.auth.DigestScheme: int qopVariant> = 0;

        r0.<org.apache.http.impl.auth.DigestScheme: boolean complete> = 0;

        return;
    }

    public void processChallenge(org.apache.http.Header) throws org.apache.http.auth.MalformedChallengeException
    {
        org.apache.http.impl.auth.DigestScheme r0;
        org.apache.http.Header r1;
        boolean z0, $z1, $z2, $z3;
        java.lang.String r2, r4, $r5, $r6, $r9;
        java.util.StringTokenizer r3, $r8;
        int $i0;
        org.apache.http.auth.MalformedChallengeException $r7, $r10, $r11;

        r0 := @this: org.apache.http.impl.auth.DigestScheme;

        r1 := @parameter0: org.apache.http.Header;

        specialinvoke r0.<org.apache.http.impl.auth.RFC2617Scheme: void processChallenge(org.apache.http.Header)>(r1);

        $r5 = virtualinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("realm");

        if $r5 != null goto label1;

        $r11 = new org.apache.http.auth.MalformedChallengeException;

        specialinvoke $r11.<org.apache.http.auth.MalformedChallengeException: void <init>(java.lang.String)>("missing realm in challange");

        throw $r11;

     label1:
        $r6 = virtualinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("nonce");

        if $r6 != null goto label2;

        $r10 = new org.apache.http.auth.MalformedChallengeException;

        specialinvoke $r10.<org.apache.http.auth.MalformedChallengeException: void <init>(java.lang.String)>("missing nonce in challange");

        throw $r10;

     label2:
        z0 = 0;

        r2 = virtualinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("qop");

        if r2 == null goto label7;

        $r8 = new java.util.StringTokenizer;

        specialinvoke $r8.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r2, ",");

        r3 = $r8;

     label3:
        $z1 = virtualinvoke r3.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 == 0 goto label7;

        $r9 = virtualinvoke r3.<java.util.StringTokenizer: java.lang.String nextToken()>();

        r4 = virtualinvoke $r9.<java.lang.String: java.lang.String trim()>();

        $z2 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("auth");

        if $z2 == 0 goto label4;

        r0.<org.apache.http.impl.auth.DigestScheme: int qopVariant> = 2;

        goto label7;

     label4:
        $z3 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("auth-int");

        if $z3 == 0 goto label5;

        r0.<org.apache.http.impl.auth.DigestScheme: int qopVariant> = 1;

        goto label6;

     label5:
        z0 = 1;

     label6:
        goto label3;

     label7:
        if z0 == 0 goto label8;

        $i0 = r0.<org.apache.http.impl.auth.DigestScheme: int qopVariant>;

        if $i0 != 0 goto label8;

        $r7 = new org.apache.http.auth.MalformedChallengeException;

        specialinvoke $r7.<org.apache.http.auth.MalformedChallengeException: void <init>(java.lang.String)>("None of the qop methods is supported");

        throw $r7;

     label8:
        r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String cnonce> = null;

        r0.<org.apache.http.impl.auth.DigestScheme: boolean complete> = 1;

        return;
    }

    public boolean isComplete()
    {
        org.apache.http.impl.auth.DigestScheme r0;
        java.lang.String r1, $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.http.impl.auth.DigestScheme;

        r1 = virtualinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("stale");

        $r2 = "true";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $z1 = r0.<org.apache.http.impl.auth.DigestScheme: boolean complete>;

        return $z1;
    }

    public java.lang.String getSchemeName()
    {
        org.apache.http.impl.auth.DigestScheme r0;

        r0 := @this: org.apache.http.impl.auth.DigestScheme;

        return "digest";
    }

    public boolean isConnectionBased()
    {
        org.apache.http.impl.auth.DigestScheme r0;

        r0 := @this: org.apache.http.impl.auth.DigestScheme;

        return 0;
    }

    public void overrideParamter(java.lang.String, java.lang.String)
    {
        org.apache.http.impl.auth.DigestScheme r0;
        java.lang.String r1, r2;
        java.util.Map $r3;

        r0 := @this: org.apache.http.impl.auth.DigestScheme;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = virtualinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.util.Map getParameters()>();

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    private java.lang.String getCnonce()
    {
        org.apache.http.impl.auth.DigestScheme r0;
        java.lang.String $r1, $r2, $r3;

        r0 := @this: org.apache.http.impl.auth.DigestScheme;

        $r1 = r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String cnonce>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <org.apache.http.impl.auth.DigestScheme: java.lang.String createCnonce()>();

        r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String cnonce> = $r3;

     label1:
        $r2 = r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String cnonce>;

        return $r2;
    }

    public org.apache.http.Header authenticate(org.apache.http.auth.Credentials, org.apache.http.HttpRequest) throws org.apache.http.auth.AuthenticationException
    {
        org.apache.http.impl.auth.DigestScheme r0;
        org.apache.http.auth.Credentials r1;
        org.apache.http.HttpRequest r2;
        java.lang.String r3, r4, $r7, $r11, r19;
        java.util.Map $r5, $r9, $r16;
        org.apache.http.RequestLine $r6, $r10;
        org.apache.http.Header $r13;
        org.apache.http.params.HttpParams $r14;
        java.lang.IllegalArgumentException $r17, $r18;

        r0 := @this: org.apache.http.impl.auth.DigestScheme;

        r1 := @parameter0: org.apache.http.auth.Credentials;

        r2 := @parameter1: org.apache.http.HttpRequest;

        if r1 != null goto label1;

        $r17 = new java.lang.IllegalArgumentException;

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Credentials may not be null");

        throw $r17;

     label1:
        if r2 != null goto label2;

        $r18 = new java.lang.IllegalArgumentException;

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP request may not be null");

        throw $r18;

     label2:
        $r5 = virtualinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.util.Map getParameters()>();

        $r6 = interfaceinvoke r2.<org.apache.http.HttpRequest: org.apache.http.RequestLine getRequestLine()>();

        $r7 = interfaceinvoke $r6.<org.apache.http.RequestLine: java.lang.String getMethod()>();

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("methodname", $r7);

        $r9 = virtualinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.util.Map getParameters()>();

        $r10 = interfaceinvoke r2.<org.apache.http.HttpRequest: org.apache.http.RequestLine getRequestLine()>();

        $r11 = interfaceinvoke $r10.<org.apache.http.RequestLine: java.lang.String getUri()>();

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("uri", $r11);

        r3 = virtualinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("charset");

        if r3 != null goto label3;

        $r14 = interfaceinvoke r2.<org.apache.http.HttpRequest: org.apache.http.params.HttpParams getParams()>();

        r19 = staticinvoke <org.apache.http.auth.params.AuthParams: java.lang.String getCredentialCharset(org.apache.http.params.HttpParams)>($r14);

        $r16 = virtualinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.util.Map getParameters()>();

        interfaceinvoke $r16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("charset", r19);

     label3:
        r4 = specialinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String createDigest(org.apache.http.auth.Credentials)>(r1);

        $r13 = specialinvoke r0.<org.apache.http.impl.auth.DigestScheme: org.apache.http.Header createDigestHeader(org.apache.http.auth.Credentials,java.lang.String)>(r1, r4);

        return $r13;
    }

    private static java.security.MessageDigest createMessageDigest(java.lang.String) throws org.apache.http.impl.auth.UnsupportedDigestAlgorithmException
    {
        java.lang.String r0, $r8;
        java.security.MessageDigest $r2;
        java.lang.Exception $r3;
        org.apache.http.impl.auth.UnsupportedDigestAlgorithmException $r4;
        java.lang.StringBuilder $r5, $r6, $r7;

        r0 := @parameter0: java.lang.String;

     label1:
        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(r0);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new org.apache.http.impl.auth.UnsupportedDigestAlgorithmException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported algorithm in HTTP Digest authentication: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.apache.http.impl.auth.UnsupportedDigestAlgorithmException: void <init>(java.lang.String)>($r8);

        throw $r4;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private java.lang.String createDigest(org.apache.http.auth.Credentials) throws org.apache.http.auth.AuthenticationException
    {
        org.apache.http.impl.auth.DigestScheme r0;
        org.apache.http.auth.Credentials r1;
        java.lang.String r2, r3, r4, r5, r6, r7, r9, r10, r12, r13, r14, r17, r19, $r36, $r61, r74, r75, r76, r77, r78;
        java.security.MessageDigest r8;
        java.lang.StringBuilder r11, r15, r16, r18, $r21, $r29, $r30, $r32, $r33, $r35, $r50, $r52, $r60, $r62, $r63, $r65;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31;
        java.security.Principal $r20;
        byte[] $r27, $r28, $r31, $r34, $r44, $r49, $r58, $r59;
        boolean $z0, $z1;
        org.apache.http.auth.AuthenticationException $r51, $r68;
        java.lang.IllegalStateException $r66, $r67, $r73;

        r0 := @this: org.apache.http.impl.auth.DigestScheme;

        r1 := @parameter0: org.apache.http.auth.Credentials;

        r2 = virtualinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("uri");

        r3 = virtualinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("realm");

        r4 = virtualinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("nonce");

        r5 = virtualinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("methodname");

        r6 = virtualinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("algorithm");

        if r2 != null goto label01;

        $r73 = new java.lang.IllegalStateException;

        specialinvoke $r73.<java.lang.IllegalStateException: void <init>(java.lang.String)>("URI may not be null");

        throw $r73;

     label01:
        if r3 != null goto label02;

        $r66 = new java.lang.IllegalStateException;

        specialinvoke $r66.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Realm may not be null");

        throw $r66;

     label02:
        if r4 != null goto label03;

        $r67 = new java.lang.IllegalStateException;

        specialinvoke $r67.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Nonce may not be null");

        throw $r67;

     label03:
        if r6 != null goto label04;

        r6 = "MD5";

     label04:
        r7 = virtualinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("charset");

        if r7 != null goto label05;

        r7 = "ISO-8859-1";

     label05:
        $i0 = r0.<org.apache.http.impl.auth.DigestScheme: int qopVariant>;

        if $i0 != 1 goto label06;

        $r68 = new org.apache.http.auth.AuthenticationException;

        specialinvoke $r68.<org.apache.http.auth.AuthenticationException: void <init>(java.lang.String)>("Unsupported qop in HTTP Digest authentication");

        throw $r68;

     label06:
        r8 = staticinvoke <org.apache.http.impl.auth.DigestScheme: java.security.MessageDigest createMessageDigest(java.lang.String)>("MD5");

        $r20 = interfaceinvoke r1.<org.apache.http.auth.Credentials: java.security.Principal getUserPrincipal()>();

        r9 = interfaceinvoke $r20.<java.security.Principal: java.lang.String getName()>();

        r10 = interfaceinvoke r1.<org.apache.http.auth.Credentials: java.lang.String getPassword()>();

        $r21 = new java.lang.StringBuilder;

        $i3 = virtualinvoke r9.<java.lang.String: int length()>();

        $i4 = virtualinvoke r3.<java.lang.String: int length()>();

        $i1 = $i3 + $i4;

        $i2 = virtualinvoke r10.<java.lang.String: int length()>();

        $i5 = $i1 + $i2;

        $i6 = $i5 + 2;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>(int)>($i6);

        r11 = $r21;

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        r12 = virtualinvoke r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = virtualinvoke r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("MD5-sess");

        if $z0 == 0 goto label07;

        r13 = specialinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getCnonce()>();

        $r59 = staticinvoke <org.apache.http.util.EncodingUtils: byte[] getBytes(java.lang.String,java.lang.String)>(r12, r7);

        $r58 = virtualinvoke r8.<java.security.MessageDigest: byte[] digest(byte[])>($r59);

        r14 = staticinvoke <org.apache.http.impl.auth.DigestScheme: java.lang.String encode(byte[])>($r58);

        $r65 = new java.lang.StringBuilder;

        $i31 = virtualinvoke r14.<java.lang.String: int length()>();

        $i30 = virtualinvoke r4.<java.lang.String: int length()>();

        $i29 = $i31 + $i30;

        $i28 = virtualinvoke r13.<java.lang.String: int length()>();

        $i27 = $i29 + $i28;

        $i26 = $i27 + 2;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>(int)>($i26);

        r15 = $r65;

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r14);

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);

        r12 = virtualinvoke r15.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label08;

     label07:
        $z1 = virtualinvoke r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("MD5");

        if $z1 != 0 goto label08;

        $r51 = new org.apache.http.auth.AuthenticationException;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unhandled algorithm ");

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r60 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" requested");

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r51.<org.apache.http.auth.AuthenticationException: void <init>(java.lang.String)>($r61);

        throw $r51;

     label08:
        $r27 = staticinvoke <org.apache.http.util.EncodingUtils: byte[] getBytes(java.lang.String,java.lang.String)>(r12, r7);

        $r28 = virtualinvoke r8.<java.security.MessageDigest: byte[] digest(byte[])>($r27);

        r74 = staticinvoke <org.apache.http.impl.auth.DigestScheme: java.lang.String encode(byte[])>($r28);

        r75 = null;

        $i7 = r0.<org.apache.http.impl.auth.DigestScheme: int qopVariant>;

        if $i7 != 1 goto label09;

        goto label10;

     label09:
        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        r75 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

     label10:
        $r31 = staticinvoke <org.apache.http.util.EncodingUtils: byte[] getAsciiBytes(java.lang.String)>(r75);

        $r34 = virtualinvoke r8.<java.security.MessageDigest: byte[] digest(byte[])>($r31);

        r76 = staticinvoke <org.apache.http.impl.auth.DigestScheme: java.lang.String encode(byte[])>($r34);

        $i8 = r0.<org.apache.http.impl.auth.DigestScheme: int qopVariant>;

        if $i8 != 0 goto label11;

        $r50 = new java.lang.StringBuilder;

        $i25 = virtualinvoke r74.<java.lang.String: int length()>();

        $i22 = virtualinvoke r4.<java.lang.String: int length()>();

        $i21 = $i25 + $i22;

        $i24 = virtualinvoke r76.<java.lang.String: int length()>();

        $i23 = $i21 + $i24;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>(int)>($i23);

        r16 = $r50;

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r74);

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r76);

        r17 = virtualinvoke r16.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label12;

     label11:
        r77 = specialinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getQopVariantString()>();

        r19 = specialinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getCnonce()>();

        $r35 = new java.lang.StringBuilder;

        $i10 = virtualinvoke r74.<java.lang.String: int length()>();

        $i9 = virtualinvoke r4.<java.lang.String: int length()>();

        $i15 = $i10 + $i9;

        $r36 = "00000001";

        $i16 = virtualinvoke $r36.<java.lang.String: int length()>();

        $i17 = $i15 + $i16;

        $i11 = virtualinvoke r19.<java.lang.String: int length()>();

        $i12 = $i17 + $i11;

        $i13 = virtualinvoke r77.<java.lang.String: int length()>();

        $i14 = $i12 + $i13;

        $i18 = virtualinvoke r76.<java.lang.String: int length()>();

        $i19 = $i14 + $i18;

        $i20 = $i19 + 5;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>(int)>($i20);

        r18 = $r35;

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r74);

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("00000001");

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r77);

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r76);

        r17 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

     label12:
        $r44 = staticinvoke <org.apache.http.util.EncodingUtils: byte[] getAsciiBytes(java.lang.String)>(r17);

        $r49 = virtualinvoke r8.<java.security.MessageDigest: byte[] digest(byte[])>($r44);

        r78 = staticinvoke <org.apache.http.impl.auth.DigestScheme: java.lang.String encode(byte[])>($r49);

        return r78;
    }

    private org.apache.http.Header createDigestHeader(org.apache.http.auth.Credentials, java.lang.String) throws org.apache.http.auth.AuthenticationException
    {
        org.apache.http.impl.auth.DigestScheme r0;
        org.apache.http.auth.Credentials r1;
        java.lang.String r2, r4, r5, r6, r7, r8, r9, r10, $r22, $r26, $r27, $r28, $r31, $r35;
        org.apache.http.util.CharArrayBuffer r3, $r13;
        java.util.ArrayList r11, $r16;
        int i0, $i1, $i2;
        org.apache.http.message.BasicNameValuePair r12, $r15, $r17, $r18, $r19, $r20, $r29, $r30, $r32, $r33, $r34;
        boolean z0, $z1, $z7, $z8, $z9, $z11;
        java.security.Principal $r14;
        java.lang.Object $r21;
        org.apache.http.message.BufferedHeader $r23;
        org.apache.http.message.BasicHeaderValueFormatter $r24;

        r0 := @this: org.apache.http.impl.auth.DigestScheme;

        r1 := @parameter0: org.apache.http.auth.Credentials;

        r2 := @parameter1: java.lang.String;

        $r13 = new org.apache.http.util.CharArrayBuffer;

        specialinvoke $r13.<org.apache.http.util.CharArrayBuffer: void <init>(int)>(128);

        r3 = $r13;

        $z1 = virtualinvoke r0.<org.apache.http.impl.auth.DigestScheme: boolean isProxy()>();

        if $z1 == 0 goto label01;

        virtualinvoke r3.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>("Proxy-Authorization");

        goto label02;

     label01:
        virtualinvoke r3.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>("Authorization");

     label02:
        virtualinvoke r3.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>(": Digest ");

        r4 = virtualinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("uri");

        r5 = virtualinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("realm");

        r6 = virtualinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("nonce");

        r7 = virtualinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("opaque");

        r8 = r2;

        r9 = virtualinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getParameter(java.lang.String)>("algorithm");

        $r14 = interfaceinvoke r1.<org.apache.http.auth.Credentials: java.security.Principal getUserPrincipal()>();

        r10 = interfaceinvoke $r14.<java.security.Principal: java.lang.String getName()>();

        $r16 = new java.util.ArrayList;

        specialinvoke $r16.<java.util.ArrayList: void <init>(int)>(20);

        r11 = $r16;

        $r15 = new org.apache.http.message.BasicNameValuePair;

        specialinvoke $r15.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("username", r10);

        interfaceinvoke r11.<java.util.List: boolean add(java.lang.Object)>($r15);

        $r17 = new org.apache.http.message.BasicNameValuePair;

        specialinvoke $r17.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("realm", r5);

        interfaceinvoke r11.<java.util.List: boolean add(java.lang.Object)>($r17);

        $r18 = new org.apache.http.message.BasicNameValuePair;

        specialinvoke $r18.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("nonce", r6);

        interfaceinvoke r11.<java.util.List: boolean add(java.lang.Object)>($r18);

        $r19 = new org.apache.http.message.BasicNameValuePair;

        specialinvoke $r19.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("uri", r4);

        interfaceinvoke r11.<java.util.List: boolean add(java.lang.Object)>($r19);

        $r20 = new org.apache.http.message.BasicNameValuePair;

        specialinvoke $r20.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("response", r8);

        interfaceinvoke r11.<java.util.List: boolean add(java.lang.Object)>($r20);

        $i1 = r0.<org.apache.http.impl.auth.DigestScheme: int qopVariant>;

        if $i1 == 0 goto label03;

        $r32 = new org.apache.http.message.BasicNameValuePair;

        $r31 = specialinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getQopVariantString()>();

        specialinvoke $r32.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("qop", $r31);

        interfaceinvoke r11.<java.util.List: boolean add(java.lang.Object)>($r32);

        $r34 = new org.apache.http.message.BasicNameValuePair;

        specialinvoke $r34.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("nc", "00000001");

        interfaceinvoke r11.<java.util.List: boolean add(java.lang.Object)>($r34);

        $r33 = new org.apache.http.message.BasicNameValuePair;

        $r35 = specialinvoke r0.<org.apache.http.impl.auth.DigestScheme: java.lang.String getCnonce()>();

        specialinvoke $r33.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("cnonce", $r35);

        interfaceinvoke r11.<java.util.List: boolean add(java.lang.Object)>($r33);

     label03:
        if r9 == null goto label04;

        $r29 = new org.apache.http.message.BasicNameValuePair;

        specialinvoke $r29.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("algorithm", r9);

        interfaceinvoke r11.<java.util.List: boolean add(java.lang.Object)>($r29);

     label04:
        if r7 == null goto label05;

        $r30 = new org.apache.http.message.BasicNameValuePair;

        specialinvoke $r30.<org.apache.http.message.BasicNameValuePair: void <init>(java.lang.String,java.lang.String)>("opaque", r7);

        interfaceinvoke r11.<java.util.List: boolean add(java.lang.Object)>($r30);

     label05:
        i0 = 0;

     label06:
        $i2 = interfaceinvoke r11.<java.util.List: int size()>();

        if i0 >= $i2 goto label13;

        $r21 = interfaceinvoke r11.<java.util.List: java.lang.Object get(int)>(i0);

        r12 = (org.apache.http.message.BasicNameValuePair) $r21;

        if i0 <= 0 goto label07;

        virtualinvoke r3.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>(", ");

     label07:
        $r22 = "nc";

        $r26 = virtualinvoke r12.<org.apache.http.message.BasicNameValuePair: java.lang.String getName()>();

        $z7 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>($r26);

        if $z7 != 0 goto label08;

        $r28 = "qop";

        $r27 = virtualinvoke r12.<org.apache.http.message.BasicNameValuePair: java.lang.String getName()>();

        $z8 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>($r27);

        if $z8 == 0 goto label09;

     label08:
        $z11 = 1;

        goto label10;

     label09:
        $z11 = 0;

     label10:
        z0 = $z11;

        $r24 = <org.apache.http.message.BasicHeaderValueFormatter: org.apache.http.message.BasicHeaderValueFormatter DEFAULT>;

        if z0 != 0 goto label11;

        $z9 = 1;

        goto label12;

     label11:
        $z9 = 0;

     label12:
        virtualinvoke $r24.<org.apache.http.message.BasicHeaderValueFormatter: org.apache.http.util.CharArrayBuffer formatNameValuePair(org.apache.http.util.CharArrayBuffer,org.apache.http.NameValuePair,boolean)>(r3, r12, $z9);

        i0 = i0 + 1;

        goto label06;

     label13:
        $r23 = new org.apache.http.message.BufferedHeader;

        specialinvoke $r23.<org.apache.http.message.BufferedHeader: void <init>(org.apache.http.util.CharArrayBuffer)>(r3);

        return $r23;
    }

    private java.lang.String getQopVariantString()
    {
        org.apache.http.impl.auth.DigestScheme r0;
        java.lang.String r1;
        int $i0;

        r0 := @this: org.apache.http.impl.auth.DigestScheme;

        $i0 = r0.<org.apache.http.impl.auth.DigestScheme: int qopVariant>;

        if $i0 != 1 goto label1;

        r1 = "auth-int";

        goto label2;

     label1:
        r1 = "auth";

     label2:
        return r1;
    }

    private static java.lang.String encode(byte[])
    {
        byte[] r0;
        char[] r1, $r3, $r4;
        int i0, $i3, $i8, $i9, $i11;
        byte b1, $b4, $b5;
        short s2, $s6;
        java.lang.String $r2;
        char $c7, $c10;

        r0 := @parameter0: byte[];

        $i3 = lengthof r0;

        if $i3 == 16 goto label1;

        return null;

     label1:
        r1 = newarray (char)[32];

        i0 = 0;

     label2:
        if i0 >= 16 goto label3;

        $b4 = r0[i0];

        b1 = $b4 & 15;

        $b5 = r0[i0];

        $s6 = $b5 & 240;

        s2 = $s6 >> 4;

        $i8 = i0 * 2;

        $r3 = <org.apache.http.impl.auth.DigestScheme: char[] HEXADECIMAL>;

        $c7 = $r3[s2];

        r1[$i8] = $c7;

        $i9 = i0 * 2;

        $i11 = $i9 + 1;

        $r4 = <org.apache.http.impl.auth.DigestScheme: char[] HEXADECIMAL>;

        $c10 = $r4[b1];

        r1[$i11] = $c10;

        i0 = i0 + 1;

        goto label2;

     label3:
        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>(r1);

        return $r2;
    }

    public static java.lang.String createCnonce()
    {
        java.lang.String r0, r4;
        java.security.MessageDigest r1;
        long $l0;
        byte[] $r2, $r3;

        r1 = staticinvoke <org.apache.http.impl.auth.DigestScheme: java.security.MessageDigest createMessageDigest(java.lang.String)>("MD5");

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        $r2 = staticinvoke <org.apache.http.util.EncodingUtils: byte[] getAsciiBytes(java.lang.String)>(r0);

        $r3 = virtualinvoke r1.<java.security.MessageDigest: byte[] digest(byte[])>($r2);

        r4 = staticinvoke <org.apache.http.impl.auth.DigestScheme: java.lang.String encode(byte[])>($r3);

        return r4;
    }

    static void <clinit>()
    {
        char[] $r0;

        <org.apache.http.impl.auth.DigestScheme: int QOP_AUTH> = 2;

        <org.apache.http.impl.auth.DigestScheme: int QOP_AUTH_INT> = 1;

        <org.apache.http.impl.auth.DigestScheme: int QOP_MISSING> = 0;

        <org.apache.http.impl.auth.DigestScheme: java.lang.String NC> = "00000001";

        $r0 = newarray (char)[16];

        $r0[0] = 48;

        $r0[1] = 49;

        $r0[2] = 50;

        $r0[3] = 51;

        $r0[4] = 52;

        $r0[5] = 53;

        $r0[6] = 54;

        $r0[7] = 55;

        $r0[8] = 56;

        $r0[9] = 57;

        $r0[10] = 97;

        $r0[11] = 98;

        $r0[12] = 99;

        $r0[13] = 100;

        $r0[14] = 101;

        $r0[15] = 102;

        <org.apache.http.impl.auth.DigestScheme: char[] HEXADECIMAL> = $r0;

        return;
    }
}
