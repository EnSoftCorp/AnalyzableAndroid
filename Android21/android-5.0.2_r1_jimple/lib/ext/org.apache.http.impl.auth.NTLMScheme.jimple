public class org.apache.http.impl.auth.NTLMScheme extends org.apache.http.impl.auth.AuthSchemeBase
{
    private final org.apache.http.impl.auth.NTLMEngine engine;
    private org.apache.http.impl.auth.NTLMScheme$State state;
    private java.lang.String challenge;

    public void <init>(org.apache.http.impl.auth.NTLMEngine)
    {
        org.apache.http.impl.auth.NTLMScheme r0;
        org.apache.http.impl.auth.NTLMEngine r1;
        org.apache.http.impl.auth.NTLMScheme$State $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: org.apache.http.impl.auth.NTLMScheme;

        r1 := @parameter0: org.apache.http.impl.auth.NTLMEngine;

        specialinvoke r0.<org.apache.http.impl.auth.AuthSchemeBase: void <init>()>();

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("NTLM engine may not be null");

        throw $r3;

     label1:
        r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMEngine engine> = r1;

        $r2 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State UNINITIATED>;

        r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state> = $r2;

        r0.<org.apache.http.impl.auth.NTLMScheme: java.lang.String challenge> = null;

        return;
    }

    public java.lang.String getSchemeName()
    {
        org.apache.http.impl.auth.NTLMScheme r0;

        r0 := @this: org.apache.http.impl.auth.NTLMScheme;

        return "ntlm";
    }

    public java.lang.String getParameter(java.lang.String)
    {
        org.apache.http.impl.auth.NTLMScheme r0;
        java.lang.String r1;

        r0 := @this: org.apache.http.impl.auth.NTLMScheme;

        r1 := @parameter0: java.lang.String;

        return null;
    }

    public java.lang.String getRealm()
    {
        org.apache.http.impl.auth.NTLMScheme r0;

        r0 := @this: org.apache.http.impl.auth.NTLMScheme;

        return null;
    }

    public boolean isConnectionBased()
    {
        org.apache.http.impl.auth.NTLMScheme r0;

        r0 := @this: org.apache.http.impl.auth.NTLMScheme;

        return 1;
    }

    protected void parseChallenge(org.apache.http.util.CharArrayBuffer, int, int) throws org.apache.http.auth.MalformedChallengeException
    {
        org.apache.http.impl.auth.NTLMScheme r0;
        org.apache.http.util.CharArrayBuffer r1;
        int i0, i1, $i2;
        java.lang.String r2;
        org.apache.http.impl.auth.NTLMScheme$State $r3, $r4, $r5, $r6, $r7;

        r0 := @this: org.apache.http.impl.auth.NTLMScheme;

        r1 := @parameter0: org.apache.http.util.CharArrayBuffer;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 = virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: java.lang.String substringTrimmed(int,int)>(i0, i1);

        $i2 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i2 != 0 goto label3;

        $r5 = r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state>;

        $r4 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State UNINITIATED>;

        if $r5 != $r4 goto label1;

        $r7 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State CHALLENGE_RECEIVED>;

        r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state> = $r7;

        goto label2;

     label1:
        $r6 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State FAILED>;

        r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state> = $r6;

     label2:
        r0.<org.apache.http.impl.auth.NTLMScheme: java.lang.String challenge> = null;

        goto label4;

     label3:
        $r3 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State MSG_TYPE2_RECEVIED>;

        r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state> = $r3;

        r0.<org.apache.http.impl.auth.NTLMScheme: java.lang.String challenge> = r2;

     label4:
        return;
    }

    public org.apache.http.Header authenticate(org.apache.http.auth.Credentials, org.apache.http.HttpRequest) throws org.apache.http.auth.AuthenticationException
    {
        org.apache.http.impl.auth.NTLMScheme r0;
        org.apache.http.auth.Credentials r1;
        org.apache.http.HttpRequest r2;
        org.apache.http.util.CharArrayBuffer r3, $r10;
        org.apache.http.impl.auth.NTLMScheme$State $r4, $r5, $r9, $r12, $r13, $r14, $r15, $r18, $r30;
        org.apache.http.impl.auth.NTLMEngine $r6, $r23;
        java.lang.String $r7, $r8, $r20, $r22, $r24, $r25, $r26, $r27, $r32, $r36, r38;
        boolean $z0;
        org.apache.http.message.BufferedHeader $r11;
        java.lang.StringBuilder $r16, $r19, $r21, $r33, $r34, $r35;
        org.apache.http.auth.AuthenticationException $r17;
        java.lang.ClassCastException $r28;
        org.apache.http.auth.InvalidCredentialsException $r29;
        java.lang.Class $r31;
        org.apache.http.auth.NTCredentials r37;

        r0 := @this: org.apache.http.impl.auth.NTLMScheme;

        r1 := @parameter0: org.apache.http.auth.Credentials;

        r2 := @parameter1: org.apache.http.HttpRequest;

     label01:
        r37 = (org.apache.http.auth.NTCredentials) r1;

     label02:
        goto label04;

     label03:
        $r28 := @caughtexception;

        $r29 = new org.apache.http.auth.InvalidCredentialsException;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Credentials cannot be used for NTLM authentication: ");

        $r31 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r32 = virtualinvoke $r31.<java.lang.Class: java.lang.String getName()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<org.apache.http.auth.InvalidCredentialsException: void <init>(java.lang.String)>($r36);

        throw $r29;

     label04:
        $r5 = r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state>;

        $r4 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State CHALLENGE_RECEIVED>;

        if $r5 == $r4 goto label05;

        $r12 = r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state>;

        $r13 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State FAILED>;

        if $r12 != $r13 goto label06;

     label05:
        $r6 = r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMEngine engine>;

        $r7 = virtualinvoke r37.<org.apache.http.auth.NTCredentials: java.lang.String getDomain()>();

        $r8 = virtualinvoke r37.<org.apache.http.auth.NTCredentials: java.lang.String getWorkstation()>();

        r38 = interfaceinvoke $r6.<org.apache.http.impl.auth.NTLMEngine: java.lang.String generateType1Msg(java.lang.String,java.lang.String)>($r7, $r8);

        $r9 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State MSG_TYPE1_GENERATED>;

        r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state> = $r9;

        goto label08;

     label06:
        $r14 = r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state>;

        $r15 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State MSG_TYPE2_RECEVIED>;

        if $r14 != $r15 goto label07;

        $r23 = r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMEngine engine>;

        $r22 = virtualinvoke r37.<org.apache.http.auth.NTCredentials: java.lang.String getUserName()>();

        $r25 = virtualinvoke r37.<org.apache.http.auth.NTCredentials: java.lang.String getPassword()>();

        $r24 = virtualinvoke r37.<org.apache.http.auth.NTCredentials: java.lang.String getDomain()>();

        $r27 = virtualinvoke r37.<org.apache.http.auth.NTCredentials: java.lang.String getWorkstation()>();

        $r26 = r0.<org.apache.http.impl.auth.NTLMScheme: java.lang.String challenge>;

        r38 = interfaceinvoke $r23.<org.apache.http.impl.auth.NTLMEngine: java.lang.String generateType3Msg(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r22, $r25, $r24, $r27, $r26);

        $r30 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State MSG_TYPE3_GENERATED>;

        r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state> = $r30;

        goto label08;

     label07:
        $r17 = new org.apache.http.auth.AuthenticationException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected state: ");

        $r18 = r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state>;

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<org.apache.http.auth.AuthenticationException: void <init>(java.lang.String)>($r20);

        throw $r17;

     label08:
        $r10 = new org.apache.http.util.CharArrayBuffer;

        specialinvoke $r10.<org.apache.http.util.CharArrayBuffer: void <init>(int)>(32);

        r3 = $r10;

        $z0 = virtualinvoke r0.<org.apache.http.impl.auth.NTLMScheme: boolean isProxy()>();

        if $z0 == 0 goto label09;

        virtualinvoke r3.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>("Proxy-Authorization");

        goto label10;

     label09:
        virtualinvoke r3.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>("Authorization");

     label10:
        virtualinvoke r3.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>(": NTLM ");

        virtualinvoke r3.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>(r38);

        $r11 = new org.apache.http.message.BufferedHeader;

        specialinvoke $r11.<org.apache.http.message.BufferedHeader: void <init>(org.apache.http.util.CharArrayBuffer)>(r3);

        return $r11;

        catch java.lang.ClassCastException from label01 to label02 with label03;
    }

    public boolean isComplete()
    {
        org.apache.http.impl.auth.NTLMScheme r0;
        org.apache.http.impl.auth.NTLMScheme$State $r1, $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: org.apache.http.impl.auth.NTLMScheme;

        $r2 = r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state>;

        $r1 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State MSG_TYPE3_GENERATED>;

        if $r2 == $r1 goto label1;

        $r4 = r0.<org.apache.http.impl.auth.NTLMScheme: org.apache.http.impl.auth.NTLMScheme$State state>;

        $r3 = <org.apache.http.impl.auth.NTLMScheme$State: org.apache.http.impl.auth.NTLMScheme$State FAILED>;

        if $r4 != $r3 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }
}
