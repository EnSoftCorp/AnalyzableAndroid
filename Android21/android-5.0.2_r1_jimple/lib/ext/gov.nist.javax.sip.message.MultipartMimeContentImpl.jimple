public class gov.nist.javax.sip.message.MultipartMimeContentImpl extends java.lang.Object implements gov.nist.javax.sip.message.MultipartMimeContent
{
    private java.util.List contentList;
    private javax.sip.header.ContentTypeHeader multipartMimeContentTypeHeader;
    private java.lang.String boundary;
    public static java.lang.String BOUNDARY;

    public void <init>(javax.sip.header.ContentTypeHeader)
    {
        gov.nist.javax.sip.message.MultipartMimeContentImpl r0;
        javax.sip.header.ContentTypeHeader r1;
        java.util.LinkedList $r2;
        java.lang.String $r3, $r4;

        r0 := @this: gov.nist.javax.sip.message.MultipartMimeContentImpl;

        r1 := @parameter0: javax.sip.header.ContentTypeHeader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: java.util.List contentList> = $r2;

        r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: javax.sip.header.ContentTypeHeader multipartMimeContentTypeHeader> = r1;

        $r3 = <gov.nist.javax.sip.message.MultipartMimeContentImpl: java.lang.String BOUNDARY>;

        $r4 = interfaceinvoke r1.<javax.sip.header.ContentTypeHeader: java.lang.String getParameter(java.lang.String)>($r3);

        r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: java.lang.String boundary> = $r4;

        return;
    }

    public boolean add(gov.nist.javax.sip.message.Content)
    {
        gov.nist.javax.sip.message.MultipartMimeContentImpl r0;
        gov.nist.javax.sip.message.Content r1;
        gov.nist.javax.sip.message.ContentImpl $r2;
        java.util.List $r3;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.message.MultipartMimeContentImpl;

        r1 := @parameter0: gov.nist.javax.sip.message.Content;

        $r3 = r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: java.util.List contentList>;

        $r2 = (gov.nist.javax.sip.message.ContentImpl) r1;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r2);

        return $z0;
    }

    public javax.sip.header.ContentTypeHeader getContentTypeHeader()
    {
        gov.nist.javax.sip.message.MultipartMimeContentImpl r0;
        javax.sip.header.ContentTypeHeader $r1;

        r0 := @this: gov.nist.javax.sip.message.MultipartMimeContentImpl;

        $r1 = r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: javax.sip.header.ContentTypeHeader multipartMimeContentTypeHeader>;

        return $r1;
    }

    public java.lang.String toString()
    {
        gov.nist.javax.sip.message.MultipartMimeContentImpl r0;
        java.lang.StringBuffer r1, $r4;
        java.util.Iterator r2;
        gov.nist.javax.sip.message.Content r3;
        java.util.List $r5;
        boolean $z0;
        java.lang.String $r6, $r8;
        java.lang.Object $r7;

        r0 := @this: gov.nist.javax.sip.message.MultipartMimeContentImpl;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        r1 = $r4;

        $r5 = r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: java.util.List contentList>;

        r2 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (gov.nist.javax.sip.message.Content) $r7;

        $r8 = interfaceinvoke r3.<gov.nist.javax.sip.message.Content: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        goto label1;

     label2:
        $r6 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }

    public void createContentList(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.message.MultipartMimeContentImpl r0;
        java.lang.String r1, r3, r6, r8, r9, r13, $r16, $r21, $r25, $r30, $r32, $r43, $r48, r54;
        gov.nist.javax.sip.header.HeaderFactoryImpl r2, $r14;
        gov.nist.javax.sip.message.ContentImpl r4, r10, $r24, $r46;
        java.lang.String[] r5, r11, r12, r53;
        int i0, i1, i2, i4, i5, $i6, $i7, $i8;
        java.lang.StringBuffer r7, $r23;
        byte b3;
        javax.sip.header.Header r15;
        javax.sip.header.ContentTypeHeader $r17, $r34, $r50;
        java.lang.StringBuilder $r18, $r19, $r20, $r22, $r26, $r27, $r31, $r36, $r37, $r38, $r39, $r40, $r41, $r47;
        boolean $z0, $z1;
        java.text.ParseException $r28, $r33, $r42, $r49;
        javax.sip.header.ContentDispositionHeader $r29;
        java.util.List $r35, $r51;
        char $c9, $c10;
        java.util.LinkedList $r45;
        java.lang.StringIndexOutOfBoundsException $r52;

        r0 := @this: gov.nist.javax.sip.message.MultipartMimeContentImpl;

        r1 := @parameter0: java.lang.String;

     label01:
        $r14 = new gov.nist.javax.sip.header.HeaderFactoryImpl;

        specialinvoke $r14.<gov.nist.javax.sip.header.HeaderFactoryImpl: void <init>()>();

        r2 = $r14;

        $r17 = virtualinvoke r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: javax.sip.header.ContentTypeHeader getContentTypeHeader()>();

        $r16 = <gov.nist.javax.sip.message.MultipartMimeContentImpl: java.lang.String BOUNDARY>;

        r3 = interfaceinvoke $r17.<javax.sip.header.ContentTypeHeader: java.lang.String getParameter(java.lang.String)>($r16);

        if r3 != null goto label03;

        $r45 = new java.util.LinkedList;

        specialinvoke $r45.<java.util.LinkedList: void <init>()>();

        r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: java.util.List contentList> = $r45;

        $r46 = new gov.nist.javax.sip.message.ContentImpl;

        specialinvoke $r46.<gov.nist.javax.sip.message.ContentImpl: void <init>(java.lang.String,java.lang.String)>(r1, r3);

        r4 = $r46;

        $r50 = virtualinvoke r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: javax.sip.header.ContentTypeHeader getContentTypeHeader()>();

        virtualinvoke r4.<gov.nist.javax.sip.message.ContentImpl: void setContentTypeHeader(javax.sip.header.ContentTypeHeader)>($r50);

        $r51 = r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: java.util.List contentList>;

        interfaceinvoke $r51.<java.util.List: boolean add(java.lang.Object)>(r4);

     label02:
        return;

     label03:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        r53 = virtualinvoke r1.<java.lang.String: java.lang.String[] split(java.lang.String)>($r21);

        r5 = r53;

        i0 = lengthof r5;

        i1 = 0;

     label04:
        if i1 >= i0 goto label19;

        r6 = r5[i1];

        if r6 != null goto label06;

     label05:
        return;

     label06:
        $r23 = new java.lang.StringBuffer;

        specialinvoke $r23.<java.lang.StringBuffer: void <init>(java.lang.String)>(r6);

        r7 = $r23;

     label07:
        $i6 = virtualinvoke r7.<java.lang.StringBuffer: int length()>();

        if $i6 <= 0 goto label09;

        $c10 = virtualinvoke r7.<java.lang.StringBuffer: char charAt(int)>(0);

        if $c10 == 13 goto label08;

        $c9 = virtualinvoke r7.<java.lang.StringBuffer: char charAt(int)>(0);

        if $c9 != 10 goto label09;

     label08:
        virtualinvoke r7.<java.lang.StringBuffer: java.lang.StringBuffer deleteCharAt(int)>(0);

        goto label07;

     label09:
        $i7 = virtualinvoke r7.<java.lang.StringBuffer: int length()>();

        if $i7 != 0 goto label10;

        goto label18;

     label10:
        r54 = virtualinvoke r7.<java.lang.StringBuffer: java.lang.String toString()>();

        i2 = virtualinvoke r54.<java.lang.String: int indexOf(java.lang.String)>("\r\n\r\n");

        b3 = 4;

        if i2 != -1 goto label11;

        i2 = virtualinvoke r54.<java.lang.String: int indexOf(java.lang.String)>("\n");

        b3 = 2;

     label11:
        if i2 != -1 goto label12;

        $r42 = new java.text.ParseException;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("no content type header found in ");

        $r47 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r54);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r42.<java.text.ParseException: void <init>(java.lang.String,int)>($r48, 0);

        throw $r42;

     label12:
        $i8 = i2 + b3;

        r8 = virtualinvoke r54.<java.lang.String: java.lang.String substring(int)>($i8);

        if r8 != null goto label13;

        $r33 = new java.text.ParseException;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No content [");

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r54);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r43 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<java.text.ParseException: void <init>(java.lang.String,int)>($r43, 0);

        throw $r33;

     label13:
        r9 = virtualinvoke r54.<java.lang.String: java.lang.String substring(int,int)>(0, i2);

        $r24 = new gov.nist.javax.sip.message.ContentImpl;

        $r25 = r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: java.lang.String boundary>;

        specialinvoke $r24.<gov.nist.javax.sip.message.ContentImpl: void <init>(java.lang.String,java.lang.String)>(r8, $r25);

        r10 = $r24;

        r11 = virtualinvoke r9.<java.lang.String: java.lang.String[] split(java.lang.String)>("\r\n");

        r12 = r11;

        i4 = lengthof r12;

        i5 = 0;

     label14:
        if i5 >= i4 goto label18;

        r13 = r12[i5];

        r15 = interfaceinvoke r2.<gov.nist.javax.sip.header.HeaderFactoryExt: javax.sip.header.Header createHeader(java.lang.String)>(r13);

        $z0 = r15 instanceof javax.sip.header.ContentTypeHeader;

        if $z0 == 0 goto label15;

        $r34 = (javax.sip.header.ContentTypeHeader) r15;

        virtualinvoke r10.<gov.nist.javax.sip.message.ContentImpl: void setContentTypeHeader(javax.sip.header.ContentTypeHeader)>($r34);

        goto label17;

     label15:
        $z1 = r15 instanceof javax.sip.header.ContentDispositionHeader;

        if $z1 == 0 goto label16;

        $r29 = (javax.sip.header.ContentDispositionHeader) r15;

        virtualinvoke r10.<gov.nist.javax.sip.message.ContentImpl: void setContentDispositionHeader(javax.sip.header.ContentDispositionHeader)>($r29);

        goto label17;

     label16:
        $r28 = new java.text.ParseException;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected header type ");

        $r32 = interfaceinvoke r15.<javax.sip.header.Header: java.lang.String getName()>();

        $r31 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r28.<java.text.ParseException: void <init>(java.lang.String,int)>($r30, 0);

        throw $r28;

     label17:
        $r35 = r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: java.util.List contentList>;

        interfaceinvoke $r35.<java.util.List: boolean add(java.lang.Object)>(r10);

        i5 = i5 + 1;

        goto label14;

     label18:
        i1 = i1 + 1;

        goto label04;

     label19:
        goto label21;

     label20:
        $r52 := @caughtexception;

        $r49 = new java.text.ParseException;

        specialinvoke $r49.<java.text.ParseException: void <init>(java.lang.String,int)>("Invalid Multipart mime format", 0);

        throw $r49;

     label21:
        return;

        catch java.lang.StringIndexOutOfBoundsException from label01 to label02 with label20;
        catch java.lang.StringIndexOutOfBoundsException from label03 to label05 with label20;
        catch java.lang.StringIndexOutOfBoundsException from label06 to label19 with label20;
    }

    public gov.nist.javax.sip.message.Content getContentByType(java.lang.String, java.lang.String)
    {
        gov.nist.javax.sip.message.MultipartMimeContentImpl r0;
        java.lang.String r1, r2, $r10, $r12;
        gov.nist.javax.sip.message.Content r3, r5;
        java.util.Iterator r4;
        java.util.List $r6, $r7;
        boolean $z0, $z1, $z2;
        java.lang.Object $r8;
        javax.sip.header.ContentTypeHeader $r9, $r11;

        r0 := @this: gov.nist.javax.sip.message.MultipartMimeContentImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 = null;

        $r6 = r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: java.util.List contentList>;

        if $r6 != null goto label1;

        return null;

     label1:
        $r7 = r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: java.util.List contentList>;

        r4 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (gov.nist.javax.sip.message.Content) $r8;

        $r9 = interfaceinvoke r5.<gov.nist.javax.sip.message.Content: javax.sip.header.ContentTypeHeader getContentTypeHeader()>();

        $r10 = interfaceinvoke $r9.<javax.sip.header.ContentTypeHeader: java.lang.String getContentType()>();

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z1 == 0 goto label3;

        $r11 = interfaceinvoke r5.<gov.nist.javax.sip.message.Content: javax.sip.header.ContentTypeHeader getContentTypeHeader()>();

        $r12 = interfaceinvoke $r11.<javax.sip.header.ContentTypeHeader: java.lang.String getContentSubType()>();

        $z2 = virtualinvoke $r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z2 == 0 goto label3;

        r3 = r5;

        goto label4;

     label3:
        goto label2;

     label4:
        return r3;
    }

    public void addContent(gov.nist.javax.sip.message.Content)
    {
        gov.nist.javax.sip.message.MultipartMimeContentImpl r0;
        gov.nist.javax.sip.message.Content r1;

        r0 := @this: gov.nist.javax.sip.message.MultipartMimeContentImpl;

        r1 := @parameter0: gov.nist.javax.sip.message.Content;

        virtualinvoke r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: boolean add(gov.nist.javax.sip.message.Content)>(r1);

        return;
    }

    public java.util.Iterator getContents()
    {
        gov.nist.javax.sip.message.MultipartMimeContentImpl r0;
        java.util.List $r1;
        java.util.Iterator $r2;

        r0 := @this: gov.nist.javax.sip.message.MultipartMimeContentImpl;

        $r1 = r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: java.util.List contentList>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        return $r2;
    }

    public int getContentCount()
    {
        gov.nist.javax.sip.message.MultipartMimeContentImpl r0;
        java.util.List $r1;
        int $i0;

        r0 := @this: gov.nist.javax.sip.message.MultipartMimeContentImpl;

        $r1 = r0.<gov.nist.javax.sip.message.MultipartMimeContentImpl: java.util.List contentList>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    static void <clinit>()
    {
        <gov.nist.javax.sip.message.MultipartMimeContentImpl: java.lang.String BOUNDARY> = "boundary";

        return;
    }
}
