public class gov.nist.javax.sip.parser.ContentLanguageParser extends gov.nist.javax.sip.parser.HeaderParser
{

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.ContentLanguageParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.ContentLanguageParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(java.lang.String)>(r1);

        return;
    }

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.ContentLanguageParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.ContentLanguageParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    public gov.nist.javax.sip.header.SIPHeader parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.ContentLanguageParser r0;
        gov.nist.javax.sip.header.ContentLanguageList r1, $r5, r31;
        gov.nist.core.Token r2, r29;
        gov.nist.javax.sip.header.ContentLanguage r3, $r11, $r22, r30;
        java.lang.Throwable r4, $r28;
        boolean $z0, $z1, $z4;
        gov.nist.core.LexerCore $r6, $r7, $r8, $r10, $r12, $r14, $r15, $r16, $r19, $r20, $r21, $r23;
        char $c0, $c1;
        java.lang.String $r13, $r24, $r25;
        java.text.ParseException $r26, $r27, r32;

        r0 := @this: gov.nist.javax.sip.parser.ContentLanguageParser;

        $z0 = <gov.nist.javax.sip.parser.ContentLanguageParser: boolean debug>;

        if $z0 == 0 goto label01;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ContentLanguageParser: void dbg_enter(java.lang.String)>("ContentLanguageParser.parse");

     label01:
        $r5 = new gov.nist.javax.sip.header.ContentLanguageList;

        specialinvoke $r5.<gov.nist.javax.sip.header.ContentLanguageList: void <init>()>();

        r1 = $r5;

     label02:
        virtualinvoke r0.<gov.nist.javax.sip.parser.ContentLanguageParser: void headerName(int)>(2075);

     label03:
        $r6 = r0.<gov.nist.javax.sip.parser.ContentLanguageParser: gov.nist.core.LexerCore lexer>;

        $c0 = virtualinvoke $r6.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c0 == 10 goto label06;

        $r7 = r0.<gov.nist.javax.sip.parser.ContentLanguageParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r7.<gov.nist.core.LexerCore: void SPorHT()>();

        $r8 = r0.<gov.nist.javax.sip.parser.ContentLanguageParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r8.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r10 = r0.<gov.nist.javax.sip.parser.ContentLanguageParser: gov.nist.core.LexerCore lexer>;

        r2 = virtualinvoke $r10.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        $r11 = new gov.nist.javax.sip.header.ContentLanguage;

        $r13 = virtualinvoke r2.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        specialinvoke $r11.<gov.nist.javax.sip.header.ContentLanguage: void <init>(java.lang.String)>($r13);

        r3 = $r11;

        $r12 = r0.<gov.nist.javax.sip.parser.ContentLanguageParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r12.<gov.nist.core.LexerCore: void SPorHT()>();

        virtualinvoke r1.<gov.nist.javax.sip.header.ContentLanguageList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r3);

     label04:
        $r14 = r0.<gov.nist.javax.sip.parser.ContentLanguageParser: gov.nist.core.LexerCore lexer>;

        $c1 = virtualinvoke $r14.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c1 != 44 goto label05;

        $r15 = r0.<gov.nist.javax.sip.parser.ContentLanguageParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r15.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(44);

        $r16 = r0.<gov.nist.javax.sip.parser.ContentLanguageParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r16.<gov.nist.core.LexerCore: void SPorHT()>();

        $r19 = r0.<gov.nist.javax.sip.parser.ContentLanguageParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r19.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r21 = r0.<gov.nist.javax.sip.parser.ContentLanguageParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r21.<gov.nist.core.LexerCore: void SPorHT()>();

        $r20 = r0.<gov.nist.javax.sip.parser.ContentLanguageParser: gov.nist.core.LexerCore lexer>;

        r29 = virtualinvoke $r20.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        $r22 = new gov.nist.javax.sip.header.ContentLanguage;

        $r24 = virtualinvoke r29.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        specialinvoke $r22.<gov.nist.javax.sip.header.ContentLanguage: void <init>(java.lang.String)>($r24);

        r30 = $r22;

        $r23 = r0.<gov.nist.javax.sip.parser.ContentLanguageParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r23.<gov.nist.core.LexerCore: void SPorHT()>();

        virtualinvoke r1.<gov.nist.javax.sip.header.ContentLanguageList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r30);

        goto label04;

     label05:
        goto label03;

     label06:
        r31 = r1;

     label07:
        $z1 = <gov.nist.javax.sip.parser.ContentLanguageParser: boolean debug>;

        if $z1 == 0 goto label08;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ContentLanguageParser: void dbg_leave(java.lang.String)>("ContentLanguageParser.parse");

     label08:
        return r31;

     label09:
        $r27 := @caughtexception;

        r32 = $r27;

        $r25 = virtualinvoke r32.<java.text.ParseException: java.lang.String getMessage()>();

        $r26 = virtualinvoke r0.<gov.nist.javax.sip.parser.ContentLanguageParser: java.text.ParseException createParseException(java.lang.String)>($r25);

        throw $r26;

     label10:
        $r28 := @caughtexception;

        r4 = $r28;

     label11:
        $z4 = <gov.nist.javax.sip.parser.ContentLanguageParser: boolean debug>;

        if $z4 == 0 goto label12;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ContentLanguageParser: void dbg_leave(java.lang.String)>("ContentLanguageParser.parse");

     label12:
        throw r4;

        catch java.text.ParseException from label02 to label07 with label09;
        catch java.lang.Throwable from label02 to label07 with label10;
        catch java.lang.Throwable from label09 to label11 with label10;
    }
}
