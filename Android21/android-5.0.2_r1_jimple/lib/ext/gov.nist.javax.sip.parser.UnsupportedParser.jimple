public class gov.nist.javax.sip.parser.UnsupportedParser extends gov.nist.javax.sip.parser.HeaderParser
{

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.UnsupportedParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.UnsupportedParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(java.lang.String)>(r1);

        return;
    }

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.UnsupportedParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.UnsupportedParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    public gov.nist.javax.sip.header.SIPHeader parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.UnsupportedParser r0;
        gov.nist.javax.sip.header.UnsupportedList r1, $r5;
        gov.nist.javax.sip.header.Unsupported r2, $r8, $r19, r25;
        gov.nist.core.Token r3, r26;
        java.lang.Throwable r4, $r24;
        boolean $z0, $z1, $z4;
        gov.nist.core.LexerCore $r6, $r7, $r9, $r11, $r12, $r14, $r15, $r16, $r18, $r20, $r23;
        char $c0, $c1;
        java.lang.String $r13, $r22;

        r0 := @this: gov.nist.javax.sip.parser.UnsupportedParser;

        $r5 = new gov.nist.javax.sip.header.UnsupportedList;

        specialinvoke $r5.<gov.nist.javax.sip.header.UnsupportedList: void <init>()>();

        r1 = $r5;

        $z0 = <gov.nist.javax.sip.parser.UnsupportedParser: boolean debug>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<gov.nist.javax.sip.parser.UnsupportedParser: void dbg_enter(java.lang.String)>("UnsupportedParser.parse");

     label1:
        virtualinvoke r0.<gov.nist.javax.sip.parser.UnsupportedParser: void headerName(int)>(2076);

     label2:
        $r6 = r0.<gov.nist.javax.sip.parser.UnsupportedParser: gov.nist.core.LexerCore lexer>;

        $c0 = virtualinvoke $r6.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c0 == 10 goto label5;

        $r7 = r0.<gov.nist.javax.sip.parser.UnsupportedParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r7.<gov.nist.core.LexerCore: void SPorHT()>();

        $r8 = new gov.nist.javax.sip.header.Unsupported;

        specialinvoke $r8.<gov.nist.javax.sip.header.Unsupported: void <init>()>();

        r2 = $r8;

        virtualinvoke r2.<gov.nist.javax.sip.header.Unsupported: void setHeaderName(java.lang.String)>("Unsupported");

        $r9 = r0.<gov.nist.javax.sip.parser.UnsupportedParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r9.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r11 = r0.<gov.nist.javax.sip.parser.UnsupportedParser: gov.nist.core.LexerCore lexer>;

        r3 = virtualinvoke $r11.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        $r13 = virtualinvoke r3.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        virtualinvoke r2.<gov.nist.javax.sip.header.Unsupported: void setOptionTag(java.lang.String)>($r13);

        $r12 = r0.<gov.nist.javax.sip.parser.UnsupportedParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r12.<gov.nist.core.LexerCore: void SPorHT()>();

        virtualinvoke r1.<gov.nist.javax.sip.header.UnsupportedList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r2);

     label3:
        $r14 = r0.<gov.nist.javax.sip.parser.UnsupportedParser: gov.nist.core.LexerCore lexer>;

        $c1 = virtualinvoke $r14.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c1 != 44 goto label4;

        $r15 = r0.<gov.nist.javax.sip.parser.UnsupportedParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r15.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(44);

        $r16 = r0.<gov.nist.javax.sip.parser.UnsupportedParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r16.<gov.nist.core.LexerCore: void SPorHT()>();

        $r19 = new gov.nist.javax.sip.header.Unsupported;

        specialinvoke $r19.<gov.nist.javax.sip.header.Unsupported: void <init>()>();

        r25 = $r19;

        $r18 = r0.<gov.nist.javax.sip.parser.UnsupportedParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r18.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r20 = r0.<gov.nist.javax.sip.parser.UnsupportedParser: gov.nist.core.LexerCore lexer>;

        r26 = virtualinvoke $r20.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        $r22 = virtualinvoke r26.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        virtualinvoke r25.<gov.nist.javax.sip.header.Unsupported: void setOptionTag(java.lang.String)>($r22);

        $r23 = r0.<gov.nist.javax.sip.parser.UnsupportedParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r23.<gov.nist.core.LexerCore: void SPorHT()>();

        virtualinvoke r1.<gov.nist.javax.sip.header.UnsupportedList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r25);

        goto label3;

     label4:
        goto label2;

     label5:
        $z1 = <gov.nist.javax.sip.parser.UnsupportedParser: boolean debug>;

        if $z1 == 0 goto label9;

        virtualinvoke r0.<gov.nist.javax.sip.parser.UnsupportedParser: void dbg_leave(java.lang.String)>("UnsupportedParser.parse");

        goto label9;

     label6:
        $r24 := @caughtexception;

        r4 = $r24;

     label7:
        $z4 = <gov.nist.javax.sip.parser.UnsupportedParser: boolean debug>;

        if $z4 == 0 goto label8;

        virtualinvoke r0.<gov.nist.javax.sip.parser.UnsupportedParser: void dbg_leave(java.lang.String)>("UnsupportedParser.parse");

     label8:
        throw r4;

     label9:
        return r1;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }
}
