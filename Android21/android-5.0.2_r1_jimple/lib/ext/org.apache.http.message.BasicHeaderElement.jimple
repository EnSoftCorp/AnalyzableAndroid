public class org.apache.http.message.BasicHeaderElement extends java.lang.Object implements org.apache.http.HeaderElement, java.lang.Cloneable
{
    private final java.lang.String name;
    private final java.lang.String value;
    private final org.apache.http.NameValuePair[] parameters;

    public void <init>(java.lang.String, java.lang.String, org.apache.http.NameValuePair[])
    {
        org.apache.http.message.BasicHeaderElement r0;
        java.lang.String r1, r2;
        org.apache.http.NameValuePair[] r3, $r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: org.apache.http.message.BasicHeaderElement;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.apache.http.NameValuePair[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Name may not be null");

        throw $r5;

     label1:
        r0.<org.apache.http.message.BasicHeaderElement: java.lang.String name> = r1;

        r0.<org.apache.http.message.BasicHeaderElement: java.lang.String value> = r2;

        if r3 == null goto label2;

        r0.<org.apache.http.message.BasicHeaderElement: org.apache.http.NameValuePair[] parameters> = r3;

        goto label3;

     label2:
        $r4 = newarray (org.apache.http.NameValuePair)[0];

        r0.<org.apache.http.message.BasicHeaderElement: org.apache.http.NameValuePair[] parameters> = $r4;

     label3:
        return;
    }

    public void <init>(java.lang.String, java.lang.String)
    {
        org.apache.http.message.BasicHeaderElement r0;
        java.lang.String r1, r2;

        r0 := @this: org.apache.http.message.BasicHeaderElement;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.http.message.BasicHeaderElement: void <init>(java.lang.String,java.lang.String,org.apache.http.NameValuePair[])>(r1, r2, null);

        return;
    }

    public java.lang.String getName()
    {
        org.apache.http.message.BasicHeaderElement r0;
        java.lang.String $r1;

        r0 := @this: org.apache.http.message.BasicHeaderElement;

        $r1 = r0.<org.apache.http.message.BasicHeaderElement: java.lang.String name>;

        return $r1;
    }

    public java.lang.String getValue()
    {
        org.apache.http.message.BasicHeaderElement r0;
        java.lang.String $r1;

        r0 := @this: org.apache.http.message.BasicHeaderElement;

        $r1 = r0.<org.apache.http.message.BasicHeaderElement: java.lang.String value>;

        return $r1;
    }

    public org.apache.http.NameValuePair[] getParameters()
    {
        org.apache.http.message.BasicHeaderElement r0;
        org.apache.http.NameValuePair[] $r1, $r3, $r4;
        java.lang.Object $r2;

        r0 := @this: org.apache.http.message.BasicHeaderElement;

        $r1 = r0.<org.apache.http.message.BasicHeaderElement: org.apache.http.NameValuePair[] parameters>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r3 = (org.apache.http.NameValuePair[]) $r2;

        $r4 = (org.apache.http.NameValuePair[]) $r3;

        return $r4;
    }

    public int getParameterCount()
    {
        org.apache.http.message.BasicHeaderElement r0;
        org.apache.http.NameValuePair[] $r1;
        int $i0;

        r0 := @this: org.apache.http.message.BasicHeaderElement;

        $r1 = r0.<org.apache.http.message.BasicHeaderElement: org.apache.http.NameValuePair[] parameters>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public org.apache.http.NameValuePair getParameter(int)
    {
        org.apache.http.message.BasicHeaderElement r0;
        int i0;
        org.apache.http.NameValuePair[] $r1;
        org.apache.http.NameValuePair $r2;

        r0 := @this: org.apache.http.message.BasicHeaderElement;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.http.message.BasicHeaderElement: org.apache.http.NameValuePair[] parameters>;

        $r2 = $r1[i0];

        return $r2;
    }

    public org.apache.http.NameValuePair getParameterByName(java.lang.String)
    {
        org.apache.http.message.BasicHeaderElement r0;
        java.lang.String r1, $r6;
        org.apache.http.NameValuePair r2, r3;
        int i0, $i1;
        org.apache.http.NameValuePair[] $r4, $r5;
        boolean $z0;
        java.lang.IllegalArgumentException $r7;

        r0 := @this: org.apache.http.message.BasicHeaderElement;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Name may not be null");

        throw $r7;

     label1:
        r2 = null;

        i0 = 0;

     label2:
        $r4 = r0.<org.apache.http.message.BasicHeaderElement: org.apache.http.NameValuePair[] parameters>;

        $i1 = lengthof $r4;

        if i0 >= $i1 goto label4;

        $r5 = r0.<org.apache.http.message.BasicHeaderElement: org.apache.http.NameValuePair[] parameters>;

        r3 = $r5[i0];

        $r6 = interfaceinvoke r3.<org.apache.http.NameValuePair: java.lang.String getName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z0 == 0 goto label3;

        r2 = r3;

        goto label4;

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        return r2;
    }

    public boolean equals(java.lang.Object)
    {
        org.apache.http.message.BasicHeaderElement r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.String $r3, $r4, $r5, $r6;
        org.apache.http.NameValuePair[] $r7, $r8;

        r0 := @this: org.apache.http.message.BasicHeaderElement;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return 0;

     label1:
        if r0 != r1 goto label2;

        return 1;

     label2:
        $z0 = r1 instanceof org.apache.http.HeaderElement;

        if $z0 == 0 goto label5;

        r2 = (org.apache.http.message.BasicHeaderElement) r1;

        $r4 = r0.<org.apache.http.message.BasicHeaderElement: java.lang.String name>;

        $r3 = r2.<org.apache.http.message.BasicHeaderElement: java.lang.String name>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label3;

        $r6 = r0.<org.apache.http.message.BasicHeaderElement: java.lang.String value>;

        $r5 = r2.<org.apache.http.message.BasicHeaderElement: java.lang.String value>;

        $z2 = staticinvoke <org.apache.http.util.LangUtils: boolean equals(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z2 == 0 goto label3;

        $r8 = r0.<org.apache.http.message.BasicHeaderElement: org.apache.http.NameValuePair[] parameters>;

        $r7 = r2.<org.apache.http.message.BasicHeaderElement: org.apache.http.NameValuePair[] parameters>;

        $z3 = staticinvoke <org.apache.http.util.LangUtils: boolean equals(java.lang.Object[],java.lang.Object[])>($r8, $r7);

        if $z3 == 0 goto label3;

        $z4 = 1;

        goto label4;

     label3:
        $z4 = 0;

     label4:
        return $z4;

     label5:
        return 0;
    }

    public int hashCode()
    {
        org.apache.http.message.BasicHeaderElement r0;
        byte b0;
        int i1, $i2, i3, i4;
        java.lang.String $r1, $r2;
        org.apache.http.NameValuePair[] $r3, $r4;
        org.apache.http.NameValuePair $r5;

        r0 := @this: org.apache.http.message.BasicHeaderElement;

        b0 = 17;

        $r1 = r0.<org.apache.http.message.BasicHeaderElement: java.lang.String name>;

        i3 = staticinvoke <org.apache.http.util.LangUtils: int hashCode(int,java.lang.Object)>(b0, $r1);

        $r2 = r0.<org.apache.http.message.BasicHeaderElement: java.lang.String value>;

        i4 = staticinvoke <org.apache.http.util.LangUtils: int hashCode(int,java.lang.Object)>(i3, $r2);

        i1 = 0;

     label1:
        $r3 = r0.<org.apache.http.message.BasicHeaderElement: org.apache.http.NameValuePair[] parameters>;

        $i2 = lengthof $r3;

        if i1 >= $i2 goto label2;

        $r4 = r0.<org.apache.http.message.BasicHeaderElement: org.apache.http.NameValuePair[] parameters>;

        $r5 = $r4[i1];

        i4 = staticinvoke <org.apache.http.util.LangUtils: int hashCode(int,java.lang.Object)>(i4, $r5);

        i1 = i1 + 1;

        goto label1;

     label2:
        return i4;
    }

    public java.lang.String toString()
    {
        org.apache.http.message.BasicHeaderElement r0;
        org.apache.http.util.CharArrayBuffer r1, $r2;
        int i0, $i1;
        java.lang.String $r3, $r4, $r6, $r9;
        org.apache.http.NameValuePair[] $r5, $r7;
        org.apache.http.NameValuePair $r8;

        r0 := @this: org.apache.http.message.BasicHeaderElement;

        $r2 = new org.apache.http.util.CharArrayBuffer;

        specialinvoke $r2.<org.apache.http.util.CharArrayBuffer: void <init>(int)>(64);

        r1 = $r2;

        $r3 = r0.<org.apache.http.message.BasicHeaderElement: java.lang.String name>;

        virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>($r3);

        $r4 = r0.<org.apache.http.message.BasicHeaderElement: java.lang.String value>;

        if $r4 == null goto label1;

        virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>("=");

        $r9 = r0.<org.apache.http.message.BasicHeaderElement: java.lang.String value>;

        virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>($r9);

     label1:
        i0 = 0;

     label2:
        $r5 = r0.<org.apache.http.message.BasicHeaderElement: org.apache.http.NameValuePair[] parameters>;

        $i1 = lengthof $r5;

        if i0 >= $i1 goto label3;

        virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>("; ");

        $r7 = r0.<org.apache.http.message.BasicHeaderElement: org.apache.http.NameValuePair[] parameters>;

        $r8 = $r7[i0];

        virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: void append(java.lang.Object)>($r8);

        i0 = i0 + 1;

        goto label2;

     label3:
        $r6 = virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: java.lang.String toString()>();

        return $r6;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.http.message.BasicHeaderElement r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.http.message.BasicHeaderElement;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        return $r1;
    }
}
