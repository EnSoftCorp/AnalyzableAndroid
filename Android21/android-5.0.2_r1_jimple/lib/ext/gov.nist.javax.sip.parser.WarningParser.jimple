public class gov.nist.javax.sip.parser.WarningParser extends gov.nist.javax.sip.parser.HeaderParser
{

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.WarningParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.WarningParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(java.lang.String)>(r1);

        return;
    }

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.WarningParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.WarningParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    public gov.nist.javax.sip.header.SIPHeader parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.WarningParser r0;
        gov.nist.javax.sip.header.WarningList r1, $r6;
        gov.nist.javax.sip.header.Warning r2, $r8, $r24, r82;
        gov.nist.core.Token r3, r4, r79, r80, r85, r86;
        int i0, i1;
        java.lang.Throwable r5, $r76;
        boolean $z0, $z1, $z4;
        gov.nist.core.LexerCore $r7, $r9, $r11, $r13, $r14, $r15, $r17, $r19, $r20, $r21, $r22, $r23, $r25, $r27, $r30, $r31, $r33, $r34, $r35, $r36, $r37, $r40, $r41, $r42, $r44, $r48, $r57, $r59;
        char $c2, $c3, $c4, $c5;
        java.lang.String $r12, $r18, $r28, $r38, $r45, $r47, $r50, $r54, $r60, $r64, $r66, $r71, $r73, $r74, r81, r87;
        java.lang.StringBuilder $r46, $r49, $r51, $r52, $r53, $r55, $r65, $r67;
        javax.sip.InvalidArgumentException $r61, $r75, r78, r84;
        java.lang.NumberFormatException $r62, $r68, r77, r83;
        java.text.ParseException $r63, $r69, $r70, $r72;

        r0 := @this: gov.nist.javax.sip.parser.WarningParser;

        $r6 = new gov.nist.javax.sip.header.WarningList;

        specialinvoke $r6.<gov.nist.javax.sip.header.WarningList: void <init>()>();

        r1 = $r6;

        $z0 = <gov.nist.javax.sip.parser.WarningParser: boolean debug>;

        if $z0 == 0 goto label01;

        virtualinvoke r0.<gov.nist.javax.sip.parser.WarningParser: void dbg_enter(java.lang.String)>("WarningParser.parse");

     label01:
        virtualinvoke r0.<gov.nist.javax.sip.parser.WarningParser: void headerName(int)>(2078);

     label02:
        $r7 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        $c2 = virtualinvoke $r7.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c2 == 10 goto label19;

        $r8 = new gov.nist.javax.sip.header.Warning;

        specialinvoke $r8.<gov.nist.javax.sip.header.Warning: void <init>()>();

        r2 = $r8;

        virtualinvoke r2.<gov.nist.javax.sip.header.Warning: void setHeaderName(java.lang.String)>("Warning");

        $r9 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r9.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r11 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        r3 = virtualinvoke $r11.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

     label03:
        $r12 = virtualinvoke r3.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r12);

        virtualinvoke r2.<gov.nist.javax.sip.header.Warning: void setCode(int)>(i0);

     label04:
        goto label07;

     label05:
        $r68 := @caughtexception;

        r77 = $r68;

        $r71 = virtualinvoke r77.<java.lang.NumberFormatException: java.lang.String getMessage()>();

        $r70 = virtualinvoke r0.<gov.nist.javax.sip.parser.WarningParser: java.text.ParseException createParseException(java.lang.String)>($r71);

        throw $r70;

     label06:
        $r61 := @caughtexception;

        r78 = $r61;

        $r60 = virtualinvoke r78.<javax.sip.InvalidArgumentException: java.lang.String getMessage()>();

        $r63 = virtualinvoke r0.<gov.nist.javax.sip.parser.WarningParser: java.text.ParseException createParseException(java.lang.String)>($r60);

        throw $r63;

     label07:
        $r14 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r14.<gov.nist.core.LexerCore: void SPorHT()>();

        $r13 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r13.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r15 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        r79 = virtualinvoke $r15.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        $r17 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        $c3 = virtualinvoke $r17.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c3 != 58 goto label08;

        $r48 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r48.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(58);

        $r57 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r57.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r59 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        r80 = virtualinvoke $r59.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke r79.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        $r65 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r64 = virtualinvoke r80.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        $r67 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r64);

        $r66 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<gov.nist.javax.sip.header.Warning: void setAgent(java.lang.String)>($r66);

        goto label09;

     label08:
        $r18 = virtualinvoke r79.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        virtualinvoke r2.<gov.nist.javax.sip.header.Warning: void setAgent(java.lang.String)>($r18);

     label09:
        $r20 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r20.<gov.nist.core.LexerCore: void SPorHT()>();

        $r19 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        r81 = virtualinvoke $r19.<gov.nist.core.LexerCore: java.lang.String quotedString()>();

        virtualinvoke r2.<gov.nist.javax.sip.header.Warning: void setText(java.lang.String)>(r81);

        $r21 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r21.<gov.nist.core.LexerCore: void SPorHT()>();

        virtualinvoke r1.<gov.nist.javax.sip.header.WarningList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r2);

     label10:
        $r23 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        $c4 = virtualinvoke $r23.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c4 != 44 goto label18;

        $r22 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r22.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(44);

        $r27 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r27.<gov.nist.core.LexerCore: void SPorHT()>();

        $r24 = new gov.nist.javax.sip.header.Warning;

        specialinvoke $r24.<gov.nist.javax.sip.header.Warning: void <init>()>();

        r82 = $r24;

        $r25 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r25.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r30 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        r4 = virtualinvoke $r30.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

     label11:
        $r28 = virtualinvoke r4.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r28);

        virtualinvoke r82.<gov.nist.javax.sip.header.Warning: void setCode(int)>(i1);

     label12:
        goto label15;

     label13:
        $r62 := @caughtexception;

        r83 = $r62;

        $r73 = virtualinvoke r83.<java.lang.NumberFormatException: java.lang.String getMessage()>();

        $r72 = virtualinvoke r0.<gov.nist.javax.sip.parser.WarningParser: java.text.ParseException createParseException(java.lang.String)>($r73);

        throw $r72;

     label14:
        $r75 := @caughtexception;

        r84 = $r75;

        $r74 = virtualinvoke r84.<javax.sip.InvalidArgumentException: java.lang.String getMessage()>();

        $r69 = virtualinvoke r0.<gov.nist.javax.sip.parser.WarningParser: java.text.ParseException createParseException(java.lang.String)>($r74);

        throw $r69;

     label15:
        $r33 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r33.<gov.nist.core.LexerCore: void SPorHT()>();

        $r31 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r31.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r35 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        r85 = virtualinvoke $r35.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        $r34 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        $c5 = virtualinvoke $r34.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c5 != 58 goto label16;

        $r40 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r40.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(58);

        $r44 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r44.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r42 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        r86 = virtualinvoke $r42.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke r85.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        $r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r45 = virtualinvoke r86.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        $r46 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r82.<gov.nist.javax.sip.header.Warning: void setAgent(java.lang.String)>($r47);

        goto label17;

     label16:
        $r38 = virtualinvoke r85.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        virtualinvoke r82.<gov.nist.javax.sip.header.Warning: void setAgent(java.lang.String)>($r38);

     label17:
        $r37 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r37.<gov.nist.core.LexerCore: void SPorHT()>();

        $r36 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        r87 = virtualinvoke $r36.<gov.nist.core.LexerCore: java.lang.String quotedString()>();

        virtualinvoke r82.<gov.nist.javax.sip.header.Warning: void setText(java.lang.String)>(r87);

        $r41 = r0.<gov.nist.javax.sip.parser.WarningParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r41.<gov.nist.core.LexerCore: void SPorHT()>();

        virtualinvoke r1.<gov.nist.javax.sip.header.WarningList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r82);

        goto label10;

     label18:
        goto label02;

     label19:
        $z1 = <gov.nist.javax.sip.parser.WarningParser: boolean debug>;

        if $z1 == 0 goto label23;

        virtualinvoke r0.<gov.nist.javax.sip.parser.WarningParser: void dbg_leave(java.lang.String)>("WarningParser.parse");

        goto label23;

     label20:
        $r76 := @caughtexception;

        r5 = $r76;

     label21:
        $z4 = <gov.nist.javax.sip.parser.WarningParser: boolean debug>;

        if $z4 == 0 goto label22;

        virtualinvoke r0.<gov.nist.javax.sip.parser.WarningParser: void dbg_leave(java.lang.String)>("WarningParser.parse");

     label22:
        throw r5;

     label23:
        return r1;

        catch java.lang.NumberFormatException from label03 to label04 with label05;
        catch javax.sip.InvalidArgumentException from label03 to label04 with label06;
        catch java.lang.NumberFormatException from label11 to label12 with label13;
        catch javax.sip.InvalidArgumentException from label11 to label12 with label14;
        catch java.lang.Throwable from label01 to label19 with label20;
        catch java.lang.Throwable from label20 to label21 with label20;
    }
}
