public class gov.nist.javax.sip.parser.extensions.ReplacesParser extends gov.nist.javax.sip.parser.ParametersParser
{

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.extensions.ReplacesParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.extensions.ReplacesParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.ParametersParser: void <init>(java.lang.String)>(r1);

        return;
    }

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.extensions.ReplacesParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.extensions.ReplacesParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.ParametersParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    public gov.nist.javax.sip.header.SIPHeader parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.extensions.ReplacesParser r0;
        gov.nist.javax.sip.header.extensions.Replaces r1, r3, $r5;
        java.lang.String r2;
        java.lang.Throwable r4, $r9;
        boolean $z0, $z1, $z2;
        gov.nist.core.LexerCore $r6, $r7, $r8;

        r0 := @this: gov.nist.javax.sip.parser.extensions.ReplacesParser;

        $z0 = <gov.nist.javax.sip.parser.extensions.ReplacesParser: boolean debug>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<gov.nist.javax.sip.parser.extensions.ReplacesParser: void dbg_enter(java.lang.String)>("parse");

     label1:
        virtualinvoke r0.<gov.nist.javax.sip.parser.extensions.ReplacesParser: void headerName(int)>(2135);

        $r5 = new gov.nist.javax.sip.header.extensions.Replaces;

        specialinvoke $r5.<gov.nist.javax.sip.header.extensions.Replaces: void <init>()>();

        r1 = $r5;

        $r6 = r0.<gov.nist.javax.sip.parser.extensions.ReplacesParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r6.<gov.nist.core.LexerCore: void SPorHT()>();

        $r7 = r0.<gov.nist.javax.sip.parser.extensions.ReplacesParser: gov.nist.core.LexerCore lexer>;

        r2 = virtualinvoke $r7.<gov.nist.core.LexerCore: java.lang.String byteStringNoSemicolon()>();

        $r8 = r0.<gov.nist.javax.sip.parser.extensions.ReplacesParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r8.<gov.nist.core.LexerCore: void SPorHT()>();

        specialinvoke r0.<gov.nist.javax.sip.parser.ParametersParser: void parse(gov.nist.javax.sip.header.ParametersHeader)>(r1);

        virtualinvoke r1.<gov.nist.javax.sip.header.extensions.Replaces: void setCallId(java.lang.String)>(r2);

        r3 = r1;

     label2:
        $z1 = <gov.nist.javax.sip.parser.extensions.ReplacesParser: boolean debug>;

        if $z1 == 0 goto label3;

        virtualinvoke r0.<gov.nist.javax.sip.parser.extensions.ReplacesParser: void dbg_leave(java.lang.String)>("parse");

     label3:
        return r3;

     label4:
        $r9 := @caughtexception;

        r4 = $r9;

     label5:
        $z2 = <gov.nist.javax.sip.parser.extensions.ReplacesParser: boolean debug>;

        if $z2 == 0 goto label6;

        virtualinvoke r0.<gov.nist.javax.sip.parser.extensions.ReplacesParser: void dbg_leave(java.lang.String)>("parse");

     label6:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public static void main(java.lang.String[]) throws java.text.ParseException
    {
        java.lang.String[] r0, r1, $r4;
        int i0, $i1;
        gov.nist.javax.sip.parser.extensions.ReplacesParser r2, $r5;
        gov.nist.javax.sip.header.extensions.Replaces r3;
        java.lang.String $r6, $r11, $r13, $r16, $r21, $r25, $r26, $r30, $r31;
        gov.nist.javax.sip.header.SIPHeader $r7;
        java.lang.StringBuilder $r8, $r10, $r12, $r15, $r17, $r18, $r19, $r20, $r22, $r24, $r27, $r28, $r29, $r32;
        java.io.PrintStream $r9, $r14, $r23;

        r0 := @parameter0: java.lang.String[];

        $r4 = newarray (java.lang.String)[2];

        $r4[0] = "Replaces: 12345th5z8z\n";

        $r4[1] = "Replaces: 12345th5z8z;to-tag=tozght6-45;from-tag=fromzght789-337-2\n";

        r1 = $r4;

        i0 = 0;

     label1:
        $i1 = lengthof r1;

        if i0 >= $i1 goto label2;

        $r5 = new gov.nist.javax.sip.parser.extensions.ReplacesParser;

        $r6 = r1[i0];

        specialinvoke $r5.<gov.nist.javax.sip.parser.extensions.ReplacesParser: void <init>(java.lang.String)>($r6);

        r2 = $r5;

        $r7 = virtualinvoke r2.<gov.nist.javax.sip.parser.extensions.ReplacesParser: gov.nist.javax.sip.header.SIPHeader parse()>();

        r3 = (gov.nist.javax.sip.header.extensions.Replaces) $r7;

        $r9 = <java.lang.System: java.io.PrintStream out>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parsing => ");

        $r11 = r1[i0];

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r13);

        $r14 = <java.lang.System: java.io.PrintStream out>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("encoded = ");

        $r16 = virtualinvoke r3.<gov.nist.javax.sip.header.extensions.Replaces: java.lang.String encode()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("==> ");

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<java.io.PrintStream: void print(java.lang.String)>($r21);

        $r23 = <java.lang.System: java.io.PrintStream out>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("callId ");

        $r25 = virtualinvoke r3.<gov.nist.javax.sip.header.extensions.Replaces: java.lang.String getCallId()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from-tag=");

        $r26 = virtualinvoke r3.<gov.nist.javax.sip.header.extensions.Replaces: java.lang.String getFromTag()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to-tag=");

        $r31 = virtualinvoke r3.<gov.nist.javax.sip.header.extensions.Replaces: java.lang.String getToTag()>();

        $r32 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r30 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r30);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }
}
