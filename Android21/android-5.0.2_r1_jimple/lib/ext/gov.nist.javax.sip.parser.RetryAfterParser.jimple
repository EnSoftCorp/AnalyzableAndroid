public class gov.nist.javax.sip.parser.RetryAfterParser extends gov.nist.javax.sip.parser.HeaderParser
{

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.RetryAfterParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.RetryAfterParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(java.lang.String)>(r1);

        return;
    }

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.RetryAfterParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.RetryAfterParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    public gov.nist.javax.sip.header.SIPHeader parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.RetryAfterParser r0;
        gov.nist.javax.sip.header.RetryAfter r1, $r5;
        java.lang.String r2, r3, $r33, $r35, $r38, $r40, r45, r47, r48;
        int i0, i1;
        java.lang.Throwable r4, $r29;
        boolean $z0, $z1, $z2, $z3;
        gov.nist.core.LexerCore $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r15, $r16, $r17, $r18, $r19, $r21, $r22, $r24, $r26, $r27, $r28, $r30;
        char $c2, $c3;
        javax.sip.InvalidArgumentException $r31, $r34, r44, r50;
        java.text.ParseException $r32, $r37, $r39, $r42;
        java.lang.NumberFormatException $r36, $r41, r43, r49;
        gov.nist.core.Token r46, r51;

        r0 := @this: gov.nist.javax.sip.parser.RetryAfterParser;

        $z0 = <gov.nist.javax.sip.parser.RetryAfterParser: boolean debug>;

        if $z0 == 0 goto label01;

        virtualinvoke r0.<gov.nist.javax.sip.parser.RetryAfterParser: void dbg_enter(java.lang.String)>("RetryAfterParser.parse");

     label01:
        $r5 = new gov.nist.javax.sip.header.RetryAfter;

        specialinvoke $r5.<gov.nist.javax.sip.header.RetryAfter: void <init>()>();

        r1 = $r5;

     label02:
        virtualinvoke r0.<gov.nist.javax.sip.parser.RetryAfterParser: void headerName(int)>(2073);

        $r6 = r0.<gov.nist.javax.sip.parser.RetryAfterParser: gov.nist.core.LexerCore lexer>;

        r2 = virtualinvoke $r6.<gov.nist.core.LexerCore: java.lang.String number()>();

     label03:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

        virtualinvoke r1.<gov.nist.javax.sip.header.RetryAfter: void setRetryAfter(int)>(i0);

     label04:
        goto label07;

     label05:
        $r36 := @caughtexception;

        r43 = $r36;

        $r35 = virtualinvoke r43.<java.lang.NumberFormatException: java.lang.String getMessage()>();

        $r42 = virtualinvoke r0.<gov.nist.javax.sip.parser.RetryAfterParser: java.text.ParseException createParseException(java.lang.String)>($r35);

        throw $r42;

     label06:
        $r31 := @caughtexception;

        r44 = $r31;

        $r38 = virtualinvoke r44.<javax.sip.InvalidArgumentException: java.lang.String getMessage()>();

        $r37 = virtualinvoke r0.<gov.nist.javax.sip.parser.RetryAfterParser: java.text.ParseException createParseException(java.lang.String)>($r38);

        throw $r37;

     label07:
        $r7 = r0.<gov.nist.javax.sip.parser.RetryAfterParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r7.<gov.nist.core.LexerCore: void SPorHT()>();

        $r8 = r0.<gov.nist.javax.sip.parser.RetryAfterParser: gov.nist.core.LexerCore lexer>;

        $c2 = virtualinvoke $r8.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c2 != 40 goto label08;

        $r30 = r0.<gov.nist.javax.sip.parser.RetryAfterParser: gov.nist.core.LexerCore lexer>;

        r45 = virtualinvoke $r30.<gov.nist.core.LexerCore: java.lang.String comment()>();

        virtualinvoke r1.<gov.nist.javax.sip.header.RetryAfter: void setComment(java.lang.String)>(r45);

     label08:
        $r9 = r0.<gov.nist.javax.sip.parser.RetryAfterParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r9.<gov.nist.core.LexerCore: void SPorHT()>();

     label09:
        $r10 = r0.<gov.nist.javax.sip.parser.RetryAfterParser: gov.nist.core.LexerCore lexer>;

        $c3 = virtualinvoke $r10.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c3 != 59 goto label16;

        $r11 = r0.<gov.nist.javax.sip.parser.RetryAfterParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r11.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(59);

        $r12 = r0.<gov.nist.javax.sip.parser.RetryAfterParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r12.<gov.nist.core.LexerCore: void SPorHT()>();

        $r15 = r0.<gov.nist.javax.sip.parser.RetryAfterParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r15.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r16 = r0.<gov.nist.javax.sip.parser.RetryAfterParser: gov.nist.core.LexerCore lexer>;

        r46 = virtualinvoke $r16.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        r47 = virtualinvoke r46.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        $z2 = virtualinvoke r47.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("duration");

        if $z2 == 0 goto label14;

        $r24 = r0.<gov.nist.javax.sip.parser.RetryAfterParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r24.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(61);

        $r27 = r0.<gov.nist.javax.sip.parser.RetryAfterParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r27.<gov.nist.core.LexerCore: void SPorHT()>();

        $r28 = r0.<gov.nist.javax.sip.parser.RetryAfterParser: gov.nist.core.LexerCore lexer>;

        r48 = virtualinvoke $r28.<gov.nist.core.LexerCore: java.lang.String number()>();

     label10:
        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r48);

        virtualinvoke r1.<gov.nist.javax.sip.header.RetryAfter: void setDuration(int)>(i1);

     label11:
        goto label15;

     label12:
        $r41 := @caughtexception;

        r49 = $r41;

        $r40 = virtualinvoke r49.<java.lang.NumberFormatException: java.lang.String getMessage()>();

        $r39 = virtualinvoke r0.<gov.nist.javax.sip.parser.RetryAfterParser: java.text.ParseException createParseException(java.lang.String)>($r40);

        throw $r39;

     label13:
        $r34 := @caughtexception;

        r50 = $r34;

        $r33 = virtualinvoke r50.<javax.sip.InvalidArgumentException: java.lang.String getMessage()>();

        $r32 = virtualinvoke r0.<gov.nist.javax.sip.parser.RetryAfterParser: java.text.ParseException createParseException(java.lang.String)>($r33);

        throw $r32;

     label14:
        $r18 = r0.<gov.nist.javax.sip.parser.RetryAfterParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r18.<gov.nist.core.LexerCore: void SPorHT()>();

        $r17 = r0.<gov.nist.javax.sip.parser.RetryAfterParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r17.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(61);

        $r19 = r0.<gov.nist.javax.sip.parser.RetryAfterParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r19.<gov.nist.core.LexerCore: void SPorHT()>();

        $r22 = r0.<gov.nist.javax.sip.parser.RetryAfterParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r22.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r21 = r0.<gov.nist.javax.sip.parser.RetryAfterParser: gov.nist.core.LexerCore lexer>;

        r51 = virtualinvoke $r21.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        r3 = virtualinvoke r51.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        virtualinvoke r1.<gov.nist.javax.sip.header.RetryAfter: void setParameter(java.lang.String,java.lang.String)>(r47, r3);

     label15:
        $r26 = r0.<gov.nist.javax.sip.parser.RetryAfterParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r26.<gov.nist.core.LexerCore: void SPorHT()>();

        goto label09;

     label16:
        $z1 = <gov.nist.javax.sip.parser.RetryAfterParser: boolean debug>;

        if $z1 == 0 goto label20;

        virtualinvoke r0.<gov.nist.javax.sip.parser.RetryAfterParser: void dbg_leave(java.lang.String)>("RetryAfterParser.parse");

        goto label20;

     label17:
        $r29 := @caughtexception;

        r4 = $r29;

     label18:
        $z3 = <gov.nist.javax.sip.parser.RetryAfterParser: boolean debug>;

        if $z3 == 0 goto label19;

        virtualinvoke r0.<gov.nist.javax.sip.parser.RetryAfterParser: void dbg_leave(java.lang.String)>("RetryAfterParser.parse");

     label19:
        throw r4;

     label20:
        return r1;

        catch java.lang.NumberFormatException from label03 to label04 with label05;
        catch javax.sip.InvalidArgumentException from label03 to label04 with label06;
        catch java.lang.NumberFormatException from label10 to label11 with label12;
        catch javax.sip.InvalidArgumentException from label10 to label11 with label13;
        catch java.lang.Throwable from label02 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }
}
