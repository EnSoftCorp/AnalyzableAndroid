public abstract class org.apache.http.impl.cookie.AbstractCookieSpec extends java.lang.Object implements org.apache.http.cookie.CookieSpec
{
    private final java.util.Map attribHandlerMap;

    public void <init>()
    {
        org.apache.http.impl.cookie.AbstractCookieSpec r0;
        java.util.HashMap $r1;

        r0 := @this: org.apache.http.impl.cookie.AbstractCookieSpec;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>(int)>(10);

        r0.<org.apache.http.impl.cookie.AbstractCookieSpec: java.util.Map attribHandlerMap> = $r1;

        return;
    }

    public void registerAttribHandler(java.lang.String, org.apache.http.cookie.CookieAttributeHandler)
    {
        org.apache.http.impl.cookie.AbstractCookieSpec r0;
        java.lang.String r1;
        org.apache.http.cookie.CookieAttributeHandler r2;
        java.util.Map $r3;
        java.lang.IllegalArgumentException $r5, $r6;

        r0 := @this: org.apache.http.impl.cookie.AbstractCookieSpec;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.http.cookie.CookieAttributeHandler;

        if r1 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Attribute name may not be null");

        throw $r6;

     label1:
        if r2 != null goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Attribute handler may not be null");

        throw $r5;

     label2:
        $r3 = r0.<org.apache.http.impl.cookie.AbstractCookieSpec: java.util.Map attribHandlerMap>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    protected org.apache.http.cookie.CookieAttributeHandler findAttribHandler(java.lang.String)
    {
        org.apache.http.impl.cookie.AbstractCookieSpec r0;
        java.lang.String r1;
        java.util.Map $r2;
        java.lang.Object $r3;
        org.apache.http.cookie.CookieAttributeHandler $r4;

        r0 := @this: org.apache.http.impl.cookie.AbstractCookieSpec;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.http.impl.cookie.AbstractCookieSpec: java.util.Map attribHandlerMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (org.apache.http.cookie.CookieAttributeHandler) $r3;

        return $r4;
    }

    protected org.apache.http.cookie.CookieAttributeHandler getAttribHandler(java.lang.String)
    {
        org.apache.http.impl.cookie.AbstractCookieSpec r0;
        java.lang.String r1, $r8;
        org.apache.http.cookie.CookieAttributeHandler r2;
        java.lang.IllegalStateException $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;

        r0 := @this: org.apache.http.impl.cookie.AbstractCookieSpec;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<org.apache.http.impl.cookie.AbstractCookieSpec: org.apache.http.cookie.CookieAttributeHandler findAttribHandler(java.lang.String)>(r1);

        if r2 != null goto label1;

        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Handler not registered for ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" attribute.");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label1:
        return r2;
    }

    protected java.util.Collection getAttribHandlers()
    {
        org.apache.http.impl.cookie.AbstractCookieSpec r0;
        java.util.Map $r1;
        java.util.Collection $r2;

        r0 := @this: org.apache.http.impl.cookie.AbstractCookieSpec;

        $r1 = r0.<org.apache.http.impl.cookie.AbstractCookieSpec: java.util.Map attribHandlerMap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        return $r2;
    }
}
