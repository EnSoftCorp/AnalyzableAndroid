class org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1 extends java.lang.Object implements org.apache.http.conn.ClientConnectionRequest
{
    final org.apache.http.impl.conn.tsccm.PoolEntryRequest val$poolRequest;
    final org.apache.http.conn.routing.HttpRoute val$route;
    final org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager this$0;

    void <init>(org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager, org.apache.http.impl.conn.tsccm.PoolEntryRequest, org.apache.http.conn.routing.HttpRoute)
    {
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1 r0;
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager r1;
        org.apache.http.impl.conn.tsccm.PoolEntryRequest r2;
        org.apache.http.conn.routing.HttpRoute r3;

        r0 := @this: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1;

        r1 := @parameter0: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager;

        r2 := @parameter1: org.apache.http.impl.conn.tsccm.PoolEntryRequest;

        r3 := @parameter2: org.apache.http.conn.routing.HttpRoute;

        r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager this$0> = r1;

        r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1: org.apache.http.impl.conn.tsccm.PoolEntryRequest val$poolRequest> = r2;

        r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1: org.apache.http.conn.routing.HttpRoute val$route> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void abortRequest()
    {
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1 r0;
        org.apache.http.impl.conn.tsccm.PoolEntryRequest $r1;

        r0 := @this: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1;

        $r1 = r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1: org.apache.http.impl.conn.tsccm.PoolEntryRequest val$poolRequest>;

        interfaceinvoke $r1.<org.apache.http.impl.conn.tsccm.PoolEntryRequest: void abortRequest()>();

        return;
    }

    public org.apache.http.conn.ManagedClientConnection getConnection(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, org.apache.http.conn.ConnectionPoolTimeoutException
    {
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1 r0;
        long l0;
        java.util.concurrent.TimeUnit r1;
        org.apache.http.impl.conn.tsccm.BasicPoolEntry r2;
        java.net.Socket r3;
        org.apache.http.conn.routing.HttpRoute $r4, $r15;
        org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager $r5, $r10, $r11, $r24;
        org.apache.commons.logging.Log $r6, $r14, $r23;
        boolean $z0;
        org.apache.http.impl.conn.tsccm.PoolEntryRequest $r7;
        org.apache.http.conn.OperatedClientConnection $r8;
        org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter $r9;
        dalvik.system.SocketTagger $r12;
        java.lang.StringBuilder $r13, $r16, $r17, $r18, $r20;
        java.lang.String $r19;
        java.io.IOException $r21, r25;
        java.lang.IllegalArgumentException $r22;

        r0 := @this: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.concurrent.TimeUnit;

        $r4 = r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1: org.apache.http.conn.routing.HttpRoute val$route>;

        if $r4 != null goto label1;

        $r22 = new java.lang.IllegalArgumentException;

        specialinvoke $r22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Route may not be null.");

        throw $r22;

     label1:
        $r5 = r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager this$0>;

        $r6 = staticinvoke <org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.commons.logging.Log access$000(org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager)>($r5);

        $z0 = interfaceinvoke $r6.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label2;

        $r11 = r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager this$0>;

        $r14 = staticinvoke <org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.commons.logging.Log access$000(org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager)>($r11);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ThreadSafeClientConnManager.getConnection: ");

        $r15 = r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1: org.apache.http.conn.routing.HttpRoute val$route>;

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", timeout = ");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r14.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r19);

     label2:
        $r7 = r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1: org.apache.http.impl.conn.tsccm.PoolEntryRequest val$poolRequest>;

        r2 = interfaceinvoke $r7.<org.apache.http.impl.conn.tsccm.PoolEntryRequest: org.apache.http.impl.conn.tsccm.BasicPoolEntry getPoolEntry(long,java.util.concurrent.TimeUnit)>(l0, r1);

     label3:
        $r8 = virtualinvoke r2.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.OperatedClientConnection getConnection()>();

        r3 = interfaceinvoke $r8.<org.apache.http.conn.OperatedClientConnection: java.net.Socket getSocket()>();

        if r3 == null goto label4;

        $r12 = staticinvoke <dalvik.system.SocketTagger: dalvik.system.SocketTagger get()>();

        virtualinvoke $r12.<dalvik.system.SocketTagger: void tag(java.net.Socket)>(r3);

     label4:
        goto label6;

     label5:
        $r21 := @caughtexception;

        r25 = $r21;

        $r24 = r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager this$0>;

        $r23 = staticinvoke <org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager: org.apache.commons.logging.Log access$000(org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager)>($r24);

        interfaceinvoke $r23.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>("Problem tagging socket.", r25);

     label6:
        $r9 = new org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter;

        $r10 = r0.<org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager$1: org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager this$0>;

        specialinvoke $r9.<org.apache.http.impl.conn.tsccm.BasicPooledConnAdapter: void <init>(org.apache.http.impl.conn.tsccm.ThreadSafeClientConnManager,org.apache.http.impl.conn.AbstractPoolEntry)>($r10, r2);

        return $r9;

        catch java.io.IOException from label3 to label4 with label5;
    }
}
