public final class org.apache.http.conn.params.ConnManagerParams extends java.lang.Object implements org.apache.http.conn.params.ConnManagerPNames
{
    public static final int DEFAULT_MAX_TOTAL_CONNECTIONS;
    private static final org.apache.http.conn.params.ConnPerRoute DEFAULT_CONN_PER_ROUTE;

    public void <init>()
    {
        org.apache.http.conn.params.ConnManagerParams r0;

        r0 := @this: org.apache.http.conn.params.ConnManagerParams;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static long getTimeout(org.apache.http.params.HttpParams)
    {
        org.apache.http.params.HttpParams r0;
        long $l0;
        java.lang.IllegalArgumentException $r1;

        r0 := @parameter0: org.apache.http.params.HttpParams;

        if r0 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r1;

     label1:
        $l0 = interfaceinvoke r0.<org.apache.http.params.HttpParams: long getLongParameter(java.lang.String,long)>("http.conn-manager.timeout", 0L);

        return $l0;
    }

    public static void setTimeout(org.apache.http.params.HttpParams, long)
    {
        org.apache.http.params.HttpParams r0;
        long l0;
        java.lang.IllegalArgumentException $r2;

        r0 := @parameter0: org.apache.http.params.HttpParams;

        l0 := @parameter1: long;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters may not be null");

        throw $r2;

     label1:
        interfaceinvoke r0.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setLongParameter(java.lang.String,long)>("http.conn-manager.timeout", l0);

        return;
    }

    public static void setMaxConnectionsPerRoute(org.apache.http.params.HttpParams, org.apache.http.conn.params.ConnPerRoute)
    {
        org.apache.http.params.HttpParams r0;
        org.apache.http.conn.params.ConnPerRoute r1;
        java.lang.IllegalArgumentException $r3;

        r0 := @parameter0: org.apache.http.params.HttpParams;

        r1 := @parameter1: org.apache.http.conn.params.ConnPerRoute;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters must not be null.");

        throw $r3;

     label1:
        interfaceinvoke r0.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setParameter(java.lang.String,java.lang.Object)>("http.conn-manager.max-per-route", r1);

        return;
    }

    public static org.apache.http.conn.params.ConnPerRoute getMaxConnectionsPerRoute(org.apache.http.params.HttpParams)
    {
        org.apache.http.params.HttpParams r0;
        org.apache.http.conn.params.ConnPerRoute r1;
        java.lang.Object $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @parameter0: org.apache.http.params.HttpParams;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters must not be null.");

        throw $r3;

     label1:
        $r2 = interfaceinvoke r0.<org.apache.http.params.HttpParams: java.lang.Object getParameter(java.lang.String)>("http.conn-manager.max-per-route");

        r1 = (org.apache.http.conn.params.ConnPerRoute) $r2;

        if r1 != null goto label2;

        r1 = <org.apache.http.conn.params.ConnManagerParams: org.apache.http.conn.params.ConnPerRoute DEFAULT_CONN_PER_ROUTE>;

     label2:
        return r1;
    }

    public static void setMaxTotalConnections(org.apache.http.params.HttpParams, int)
    {
        org.apache.http.params.HttpParams r0;
        int i0;
        java.lang.IllegalArgumentException $r2;

        r0 := @parameter0: org.apache.http.params.HttpParams;

        i0 := @parameter1: int;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters must not be null.");

        throw $r2;

     label1:
        interfaceinvoke r0.<org.apache.http.params.HttpParams: org.apache.http.params.HttpParams setIntParameter(java.lang.String,int)>("http.conn-manager.max-total", i0);

        return;
    }

    public static int getMaxTotalConnections(org.apache.http.params.HttpParams)
    {
        org.apache.http.params.HttpParams r0;
        int $i0;
        java.lang.IllegalArgumentException $r1;

        r0 := @parameter0: org.apache.http.params.HttpParams;

        if r0 != null goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP parameters must not be null.");

        throw $r1;

     label1:
        $i0 = interfaceinvoke r0.<org.apache.http.params.HttpParams: int getIntParameter(java.lang.String,int)>("http.conn-manager.max-total", 20);

        return $i0;
    }

    static void <clinit>()
    {
        org.apache.http.conn.params.ConnManagerParams$1 $r0;

        <org.apache.http.conn.params.ConnManagerParams: int DEFAULT_MAX_TOTAL_CONNECTIONS> = 20;

        $r0 = new org.apache.http.conn.params.ConnManagerParams$1;

        specialinvoke $r0.<org.apache.http.conn.params.ConnManagerParams$1: void <init>()>();

        <org.apache.http.conn.params.ConnManagerParams: org.apache.http.conn.params.ConnPerRoute DEFAULT_CONN_PER_ROUTE> = $r0;

        return;
    }
}
