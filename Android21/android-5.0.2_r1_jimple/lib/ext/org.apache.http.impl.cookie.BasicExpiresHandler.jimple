public class org.apache.http.impl.cookie.BasicExpiresHandler extends org.apache.http.impl.cookie.AbstractCookieAttributeHandler
{
    private final java.lang.String[] datepatterns;

    public void <init>(java.lang.String[])
    {
        org.apache.http.impl.cookie.BasicExpiresHandler r0;
        java.lang.String[] r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.http.impl.cookie.BasicExpiresHandler;

        r1 := @parameter0: java.lang.String[];

        specialinvoke r0.<org.apache.http.impl.cookie.AbstractCookieAttributeHandler: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Array of date patterns may not be null");

        throw $r2;

     label1:
        r0.<org.apache.http.impl.cookie.BasicExpiresHandler: java.lang.String[] datepatterns> = r1;

        return;
    }

    public void parse(org.apache.http.cookie.SetCookie, java.lang.String) throws org.apache.http.cookie.MalformedCookieException
    {
        org.apache.http.impl.cookie.BasicExpiresHandler r0;
        org.apache.http.cookie.SetCookie r1;
        java.lang.String r2, $r13;
        java.lang.String[] $r4;
        java.util.Date $r5;
        org.apache.http.cookie.MalformedCookieException $r6, $r9;
        java.lang.IllegalArgumentException $r7;
        org.apache.http.impl.cookie.DateParseException $r8;
        java.lang.StringBuilder $r10, $r11, $r12;

        r0 := @this: org.apache.http.impl.cookie.BasicExpiresHandler;

        r1 := @parameter0: org.apache.http.cookie.SetCookie;

        r2 := @parameter1: java.lang.String;

        if r1 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r7;

     label1:
        if r2 != null goto label2;

        $r6 = new org.apache.http.cookie.MalformedCookieException;

        specialinvoke $r6.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>("Missing value for expires attribute");

        throw $r6;

     label2:
        $r4 = r0.<org.apache.http.impl.cookie.BasicExpiresHandler: java.lang.String[] datepatterns>;

        $r5 = staticinvoke <org.apache.http.impl.cookie.DateUtils: java.util.Date parseDate(java.lang.String,java.lang.String[])>(r2, $r4);

        interfaceinvoke r1.<org.apache.http.cookie.SetCookie: void setExpiryDate(java.util.Date)>($r5);

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

        $r9 = new org.apache.http.cookie.MalformedCookieException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse expires attribute: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>($r13);

        throw $r9;

     label5:
        return;

        catch org.apache.http.impl.cookie.DateParseException from label2 to label3 with label4;
    }
}
