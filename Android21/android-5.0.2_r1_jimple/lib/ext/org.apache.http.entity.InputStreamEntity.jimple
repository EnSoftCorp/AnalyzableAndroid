public class org.apache.http.entity.InputStreamEntity extends org.apache.http.entity.AbstractHttpEntity
{
    private static final int BUFFER_SIZE;
    private final java.io.InputStream content;
    private final long length;
    private boolean consumed;

    public void <init>(java.io.InputStream, long)
    {
        org.apache.http.entity.InputStreamEntity r0;
        java.io.InputStream r1;
        long l0;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.http.entity.InputStreamEntity;

        r1 := @parameter0: java.io.InputStream;

        l0 := @parameter1: long;

        specialinvoke r0.<org.apache.http.entity.AbstractHttpEntity: void <init>()>();

        r0.<org.apache.http.entity.InputStreamEntity: boolean consumed> = 0;

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Source input stream may not be null");

        throw $r2;

     label1:
        r0.<org.apache.http.entity.InputStreamEntity: java.io.InputStream content> = r1;

        r0.<org.apache.http.entity.InputStreamEntity: long length> = l0;

        return;
    }

    public boolean isRepeatable()
    {
        org.apache.http.entity.InputStreamEntity r0;

        r0 := @this: org.apache.http.entity.InputStreamEntity;

        return 0;
    }

    public long getContentLength()
    {
        org.apache.http.entity.InputStreamEntity r0;
        long $l0;

        r0 := @this: org.apache.http.entity.InputStreamEntity;

        $l0 = r0.<org.apache.http.entity.InputStreamEntity: long length>;

        return $l0;
    }

    public java.io.InputStream getContent() throws java.io.IOException
    {
        org.apache.http.entity.InputStreamEntity r0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.http.entity.InputStreamEntity;

        $r1 = r0.<org.apache.http.entity.InputStreamEntity: java.io.InputStream content>;

        return $r1;
    }

    public void writeTo(java.io.OutputStream) throws java.io.IOException
    {
        org.apache.http.entity.InputStreamEntity r0;
        java.io.OutputStream r1;
        java.io.InputStream r2;
        byte[] r3;
        int i0, $i6, $i8, i9;
        long l1, $l2, $l5, $l7;
        byte $b3, $b4;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: org.apache.http.entity.InputStreamEntity;

        r1 := @parameter0: java.io.OutputStream;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Output stream may not be null");

        throw $r4;

     label1:
        r2 = r0.<org.apache.http.entity.InputStreamEntity: java.io.InputStream content>;

        r3 = newarray (byte)[2048];

        $l2 = r0.<org.apache.http.entity.InputStreamEntity: long length>;

        $b3 = $l2 cmp 0L;

        if $b3 >= 0 goto label3;

     label2:
        $i8 = virtualinvoke r2.<java.io.InputStream: int read(byte[])>(r3);

        i0 = $i8;

        if $i8 == -1 goto label6;

        virtualinvoke r1.<java.io.OutputStream: void write(byte[],int,int)>(r3, 0, i0);

        goto label2;

     label3:
        l1 = r0.<org.apache.http.entity.InputStreamEntity: long length>;

     label4:
        $b4 = l1 cmp 0L;

        if $b4 <= 0 goto label6;

        $l5 = staticinvoke <java.lang.Math: long min(long,long)>(2048L, l1);

        $i6 = (int) $l5;

        i9 = virtualinvoke r2.<java.io.InputStream: int read(byte[],int,int)>(r3, 0, $i6);

        if i9 != -1 goto label5;

        goto label6;

     label5:
        virtualinvoke r1.<java.io.OutputStream: void write(byte[],int,int)>(r3, 0, i9);

        $l7 = (long) i9;

        l1 = l1 - $l7;

        goto label4;

     label6:
        r0.<org.apache.http.entity.InputStreamEntity: boolean consumed> = 1;

        return;
    }

    public boolean isStreaming()
    {
        org.apache.http.entity.InputStreamEntity r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.http.entity.InputStreamEntity;

        $z0 = r0.<org.apache.http.entity.InputStreamEntity: boolean consumed>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void consumeContent() throws java.io.IOException
    {
        org.apache.http.entity.InputStreamEntity r0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.http.entity.InputStreamEntity;

        r0.<org.apache.http.entity.InputStreamEntity: boolean consumed> = 1;

        $r1 = r0.<org.apache.http.entity.InputStreamEntity: java.io.InputStream content>;

        virtualinvoke $r1.<java.io.InputStream: void close()>();

        return;
    }

    public static void <clinit>()
    {
        <org.apache.http.entity.InputStreamEntity: int BUFFER_SIZE> = 2048;

        return;
    }
}
