public class gov.nist.javax.sip.stack.SIPDialog extends java.lang.Object implements javax.sip.Dialog, gov.nist.javax.sip.DialogExt
{
    private static final long serialVersionUID;
    private transient boolean dialogTerminatedEventDelivered;
    private transient java.lang.String stackTrace;
    private java.lang.String method;
    private transient boolean isAssigned;
    private boolean reInviteFlag;
    private transient java.lang.Object applicationData;
    private transient gov.nist.javax.sip.message.SIPRequest originalRequest;
    private gov.nist.javax.sip.message.SIPResponse lastResponse;
    private transient gov.nist.javax.sip.stack.SIPTransaction firstTransaction;
    private transient gov.nist.javax.sip.stack.SIPTransaction lastTransaction;
    private java.lang.String dialogId;
    private transient java.lang.String earlyDialogId;
    private long localSequenceNumber;
    private long remoteSequenceNumber;
    protected java.lang.String myTag;
    protected java.lang.String hisTag;
    private gov.nist.javax.sip.header.RouteList routeList;
    private transient gov.nist.javax.sip.stack.SIPTransactionStack sipStack;
    private int dialogState;
    protected transient boolean ackSeen;
    private transient gov.nist.javax.sip.message.SIPRequest lastAckSent;
    private gov.nist.javax.sip.message.SIPRequest lastAckReceived;
    protected transient boolean ackProcessed;
    protected transient gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask timerTask;
    protected transient java.lang.Long nextSeqno;
    private transient int retransmissionTicksLeft;
    private transient int prevRetransmissionTicks;
    private long originalLocalSequenceNumber;
    private transient int ackLine;
    public transient long auditTag;
    protected javax.sip.address.Address localParty;
    protected javax.sip.address.Address remoteParty;
    protected javax.sip.header.CallIdHeader callIdHeader;
    public static final int NULL_STATE;
    public static final int EARLY_STATE;
    public static final int CONFIRMED_STATE;
    public static final int TERMINATED_STATE;
    private static final int DIALOG_LINGER_TIME;
    private boolean serverTransactionFlag;
    private transient gov.nist.javax.sip.SipProviderImpl sipProvider;
    private boolean terminateOnBye;
    private transient boolean byeSent;
    private javax.sip.address.Address remoteTarget;
    private javax.sip.header.EventHeader eventHeader;
    private transient long lastInviteOkReceived;
    private transient java.util.concurrent.Semaphore ackSem;
    private transient int reInviteWaitTime;
    private transient gov.nist.javax.sip.stack.SIPDialog$DialogDeleteTask dialogDeleteTask;
    private transient gov.nist.javax.sip.stack.SIPDialog$DialogDeleteIfNoAckSentTask dialogDeleteIfNoAckSentTask;
    private transient boolean isAcknowledged;
    private transient long highestSequenceNumberAcknowledged;
    private boolean isBackToBackUserAgent;
    private boolean sequenceNumberValidation;
    private transient java.util.Set eventListeners;
    private java.util.concurrent.Semaphore timerTaskLock;
    protected boolean firstTransactionSecure;
    protected boolean firstTransactionSeen;
    protected java.lang.String firstTransactionMethod;
    protected java.lang.String firstTransactionId;
    protected boolean firstTransactionIsServerTransaction;
    protected int firstTransactionPort;
    protected gov.nist.javax.sip.header.Contact contactHeader;

    private void <init>(gov.nist.javax.sip.SipProviderImpl)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.SipProviderImpl r1;
        java.util.concurrent.Semaphore $r2, $r3;
        gov.nist.javax.sip.header.RouteList $r4;
        java.util.concurrent.CopyOnWriteArraySet $r5;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: gov.nist.javax.sip.SipProviderImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: long auditTag> = 0L;

        $r2 = new java.util.concurrent.Semaphore;

        specialinvoke $r2.<java.util.concurrent.Semaphore: void <init>(int)>(1);

        r0.<gov.nist.javax.sip.stack.SIPDialog: java.util.concurrent.Semaphore ackSem> = $r2;

        r0.<gov.nist.javax.sip.stack.SIPDialog: int reInviteWaitTime> = 100;

        r0.<gov.nist.javax.sip.stack.SIPDialog: long highestSequenceNumberAcknowledged> = -1L;

        r0.<gov.nist.javax.sip.stack.SIPDialog: boolean sequenceNumberValidation> = 1;

        $r3 = new java.util.concurrent.Semaphore;

        specialinvoke $r3.<java.util.concurrent.Semaphore: void <init>(int)>(1);

        r0.<gov.nist.javax.sip.stack.SIPDialog: java.util.concurrent.Semaphore timerTaskLock> = $r3;

        r0.<gov.nist.javax.sip.stack.SIPDialog: int firstTransactionPort> = 5060;

        r0.<gov.nist.javax.sip.stack.SIPDialog: boolean terminateOnBye> = 1;

        $r4 = new gov.nist.javax.sip.header.RouteList;

        specialinvoke $r4.<gov.nist.javax.sip.header.RouteList: void <init>()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList routeList> = $r4;

        r0.<gov.nist.javax.sip.stack.SIPDialog: int dialogState> = -1;

        r0.<gov.nist.javax.sip.stack.SIPDialog: long localSequenceNumber> = 0L;

        r0.<gov.nist.javax.sip.stack.SIPDialog: long remoteSequenceNumber> = -1L;

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.SipProviderImpl sipProvider> = r1;

        $r5 = new java.util.concurrent.CopyOnWriteArraySet;

        specialinvoke $r5.<java.util.concurrent.CopyOnWriteArraySet: void <init>()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: java.util.Set eventListeners> = $r5;

        return;
    }

    private void recordStackTrace()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        java.io.StringWriter r1, $r3;
        java.io.PrintWriter r2, $r4;
        java.lang.Exception $r5;
        java.lang.StringBuffer $r6;
        java.lang.String $r7;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r3 = new java.io.StringWriter;

        specialinvoke $r3.<java.io.StringWriter: void <init>()>();

        r1 = $r3;

        $r4 = new java.io.PrintWriter;

        specialinvoke $r4.<java.io.PrintWriter: void <init>(java.io.Writer)>(r1);

        r2 = $r4;

        $r5 = new java.lang.Exception;

        specialinvoke $r5.<java.lang.Exception: void <init>()>();

        virtualinvoke $r5.<java.lang.Exception: void printStackTrace(java.io.PrintWriter)>(r2);

        $r6 = virtualinvoke r1.<java.io.StringWriter: java.lang.StringBuffer getBuffer()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String stackTrace> = $r7;

        return;
    }

    public void <init>(gov.nist.javax.sip.stack.SIPTransaction)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.stack.SIPTransaction r1;
        gov.nist.javax.sip.message.SIPRequest r2;
        gov.nist.javax.sip.SipProviderImpl $r3, $r8, $r9, $r22;
        javax.sip.message.Request $r4;
        javax.sip.header.CallIdHeader $r5;
        java.lang.String $r6, $r19, $r25;
        gov.nist.javax.sip.stack.SIPTransactionStack $r7, $r10, $r11, $r12, $r13, $r18, $r28;
        boolean $z0, $z1;
        java.lang.StringBuilder $r14, $r16, $r17, $r20, $r23, $r26;
        gov.nist.core.StackLogger $r15, $r21, $r27;
        int $i0;
        javax.sip.ListeningPoint $r24;
        java.lang.NullPointerException $r29, $r30;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: gov.nist.javax.sip.stack.SIPTransaction;

        $r3 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.SipProviderImpl getSipProvider()>();

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void <init>(gov.nist.javax.sip.SipProviderImpl)>($r3);

        $r4 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPTransaction: javax.sip.message.Request getRequest()>();

        r2 = (gov.nist.javax.sip.message.SIPRequest) $r4;

        $r5 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CallIdHeader getCallId()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.header.CallIdHeader callIdHeader> = $r5;

        $r6 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getDialogId(boolean)>(0);

        r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String earlyDialogId> = $r6;

        if r1 != null goto label1;

        $r30 = new java.lang.NullPointerException;

        specialinvoke $r30.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null tx");

        throw $r30;

     label1:
        $r7 = r1.<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack> = $r7;

        $r8 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.SipProviderImpl getSipProvider()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.SipProviderImpl sipProvider> = $r8;

        $r9 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.SipProviderImpl sipProvider>;

        if $r9 != null goto label2;

        $r29 = new java.lang.NullPointerException;

        specialinvoke $r29.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null Provider!");

        throw $r29;

     label2:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void addTransaction(gov.nist.javax.sip.stack.SIPTransaction)>(r1);

        $r10 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r10.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label3;

        $r13 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r15 = virtualinvoke $r13.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating a dialog : ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r15.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r19);

        $r18 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r21 = virtualinvoke $r18.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("provider port = ");

        $r22 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.SipProviderImpl sipProvider>;

        $r24 = virtualinvoke $r22.<gov.nist.javax.sip.SipProviderImpl: javax.sip.ListeningPoint getListeningPoint()>();

        $i0 = interfaceinvoke $r24.<javax.sip.ListeningPoint: int getPort()>();

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r21.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r25);

        $r28 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r27 = virtualinvoke $r28.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r27.<gov.nist.core.StackLogger: void logStackTrace()>();

     label3:
        $r11 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z1 = $r11.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isBackToBackUserAgent>;

        r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isBackToBackUserAgent> = $z1;

        $r12 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void addEventListener(gov.nist.javax.sip.stack.SIPDialogEventListener)>($r12);

        return;
    }

    public void <init>(gov.nist.javax.sip.stack.SIPClientTransaction, gov.nist.javax.sip.message.SIPResponse)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.stack.SIPClientTransaction r1;
        gov.nist.javax.sip.message.SIPResponse r2;
        gov.nist.javax.sip.stack.SIPTransactionStack $r3;
        boolean $z0;
        java.lang.NullPointerException $r4;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: gov.nist.javax.sip.stack.SIPClientTransaction;

        r2 := @parameter1: gov.nist.javax.sip.message.SIPResponse;

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void <init>(gov.nist.javax.sip.stack.SIPTransaction)>(r1);

        if r2 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null SipResponse");

        throw $r4;

     label1:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setLastResponse(gov.nist.javax.sip.stack.SIPTransaction,gov.nist.javax.sip.message.SIPResponse)>(r1, r2);

        $r3 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = $r3.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isBackToBackUserAgent>;

        r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isBackToBackUserAgent> = $z0;

        return;
    }

    public void <init>(gov.nist.javax.sip.SipProviderImpl, gov.nist.javax.sip.message.SIPResponse)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.SipProviderImpl r1;
        gov.nist.javax.sip.message.SIPResponse r2;
        javax.sip.SipStack $r3;
        gov.nist.javax.sip.stack.SIPTransactionStack $r4, $r16, $r18, $r19, $r21, $r27;
        javax.sip.header.CSeqHeader $r5, $r15;
        long $l0, $l1;
        javax.sip.header.FromHeader $r6, $r10;
        java.lang.String $r7, $r9, $r14, $r24;
        javax.sip.header.ToHeader $r8, $r12;
        javax.sip.address.Address $r11, $r13;
        javax.sip.header.CallIdHeader $r17;
        boolean $z0, $z1;
        gov.nist.core.StackLogger $r20, $r26;
        java.lang.StringBuilder $r22, $r23, $r25;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: gov.nist.javax.sip.SipProviderImpl;

        r2 := @parameter1: gov.nist.javax.sip.message.SIPResponse;

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void <init>(gov.nist.javax.sip.SipProviderImpl)>(r1);

        $r3 = virtualinvoke r1.<gov.nist.javax.sip.SipProviderImpl: javax.sip.SipStack getSipStack()>();

        $r4 = (gov.nist.javax.sip.stack.SIPTransactionStack) $r3;

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack> = $r4;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setLastResponse(gov.nist.javax.sip.stack.SIPTransaction,gov.nist.javax.sip.message.SIPResponse)>(null, r2);

        $r5 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        $l0 = interfaceinvoke $r5.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: long localSequenceNumber> = $l0;

        $l1 = r0.<gov.nist.javax.sip.stack.SIPDialog: long localSequenceNumber>;

        r0.<gov.nist.javax.sip.stack.SIPDialog: long originalLocalSequenceNumber> = $l1;

        $r6 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.FromHeader getFrom()>();

        $r7 = interfaceinvoke $r6.<javax.sip.header.FromHeader: java.lang.String getTag()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String myTag> = $r7;

        $r8 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.ToHeader getTo()>();

        $r9 = interfaceinvoke $r8.<javax.sip.header.ToHeader: java.lang.String getTag()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String hisTag> = $r9;

        $r10 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.FromHeader getFrom()>();

        $r11 = interfaceinvoke $r10.<javax.sip.header.FromHeader: javax.sip.address.Address getAddress()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address localParty> = $r11;

        $r12 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.ToHeader getTo()>();

        $r13 = interfaceinvoke $r12.<javax.sip.header.ToHeader: javax.sip.address.Address getAddress()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address remoteParty> = $r13;

        $r15 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        $r14 = interfaceinvoke $r15.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String method> = $r14;

        $r17 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CallIdHeader getCallId()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.header.CallIdHeader callIdHeader> = $r17;

        r0.<gov.nist.javax.sip.stack.SIPDialog: boolean serverTransactionFlag> = 0;

        $r16 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r16.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label1;

        $r21 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r20 = virtualinvoke $r21.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating a dialog : ");

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r20.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r24);

        $r27 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r26 = virtualinvoke $r27.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r26.<gov.nist.core.StackLogger: void logStackTrace()>();

     label1:
        $r18 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z1 = $r18.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isBackToBackUserAgent>;

        r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isBackToBackUserAgent> = $z1;

        $r19 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void addEventListener(gov.nist.javax.sip.stack.SIPDialogEventListener)>($r19);

        return;
    }

    private void printRouteList()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.stack.SIPTransactionStack $r1, $r2, $r8;
        boolean $z0;
        gov.nist.core.StackLogger $r3, $r9;
        java.lang.StringBuilder $r4, $r5, $r6, $r10, $r11, $r14;
        java.lang.String $r7, $r13, $r15;
        gov.nist.javax.sip.header.RouteList $r12;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r1.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r3 = virtualinvoke $r2.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("this : ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r7);

        $r8 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r9 = virtualinvoke $r8.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("printRouteList : ");

        $r12 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList routeList>;

        $r13 = virtualinvoke $r12.<gov.nist.javax.sip.header.RouteList: java.lang.String encode()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r15);

     label1:
        return;
    }

    private boolean isClientDialog()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.stack.SIPTransaction r1;
        javax.sip.Transaction $r2;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r2 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.Transaction getFirstTransaction()>();

        r1 = (gov.nist.javax.sip.stack.SIPTransaction) $r2;

        $z0 = r1 instanceof gov.nist.javax.sip.stack.SIPClientTransaction;

        return $z0;
    }

    private void raiseIOException(java.lang.String, int, java.lang.String)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        java.lang.String r1, r2;
        int i0, $i1;
        javax.sip.IOExceptionEvent r3, $r4;
        gov.nist.javax.sip.SipProviderImpl $r5;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $r4 = new javax.sip.IOExceptionEvent;

        specialinvoke $r4.<javax.sip.IOExceptionEvent: void <init>(java.lang.Object,java.lang.String,int,java.lang.String)>(r0, r1, i0, r2);

        r3 = $r4;

        $r5 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.SipProviderImpl sipProvider>;

        virtualinvoke $r5.<gov.nist.javax.sip.SipProviderImpl: void handleEvent(java.util.EventObject,gov.nist.javax.sip.stack.SIPTransaction)>(r3, null);

        $i1 = <gov.nist.javax.sip.stack.SIPDialog: int TERMINATED_STATE>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setState(int)>($i1);

        return;
    }

    private void raiseErrorEvent(int)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        int i0;
        gov.nist.javax.sip.stack.SIPDialogErrorEvent r1, $r6;
        java.util.Iterator r2;
        gov.nist.javax.sip.stack.SIPDialogEventListener r3;
        java.util.Set r4, $r7, $r8, $r9;
        java.lang.Throwable r5, $r11;
        boolean $z0;
        java.lang.Object $r10;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        i0 := @parameter0: int;

        $r6 = new gov.nist.javax.sip.stack.SIPDialogErrorEvent;

        specialinvoke $r6.<gov.nist.javax.sip.stack.SIPDialogErrorEvent: void <init>(gov.nist.javax.sip.stack.SIPDialog,int)>(r0, i0);

        r1 = $r6;

        $r7 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.util.Set eventListeners>;

        r4 = $r7;

        entermonitor $r7;

     label1:
        $r8 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.util.Set eventListeners>;

        r2 = interfaceinvoke $r8.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (gov.nist.javax.sip.stack.SIPDialogEventListener) $r10;

        interfaceinvoke r3.<gov.nist.javax.sip.stack.SIPDialogEventListener: void dialogErrorEvent(gov.nist.javax.sip.stack.SIPDialogErrorEvent)>(r1);

        goto label2;

     label3:
        exitmonitor r4;

     label4:
        goto label7;

     label5:
        $r11 := @caughtexception;

        r5 = $r11;

        exitmonitor r4;

     label6:
        throw r5;

     label7:
        $r9 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.util.Set eventListeners>;

        interfaceinvoke $r9.<java.util.Set: void clear()>();

        if i0 == 2 goto label8;

        if i0 == 1 goto label8;

        if i0 == 3 goto label8;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void delete()>();

     label8:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void stopTimer()>();

        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private void setRemoteParty(gov.nist.javax.sip.message.SIPMessage)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.message.SIPMessage r1;
        boolean $z0, $z1;
        javax.sip.header.FromHeader $r2;
        javax.sip.address.Address $r3, $r9, $r13;
        gov.nist.javax.sip.stack.SIPTransactionStack $r4, $r5;
        gov.nist.core.StackLogger $r6;
        java.lang.StringBuilder $r7, $r8, $r10;
        java.lang.String $r11;
        javax.sip.header.ToHeader $r12;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: gov.nist.javax.sip.message.SIPMessage;

        $z0 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isServer()>();

        if $z0 != 0 goto label1;

        $r12 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ToHeader getTo()>();

        $r13 = interfaceinvoke $r12.<javax.sip.header.ToHeader: javax.sip.address.Address getAddress()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address remoteParty> = $r13;

        goto label2;

     label1:
        $r2 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.FromHeader getFrom()>();

        $r3 = interfaceinvoke $r2.<javax.sip.header.FromHeader: javax.sip.address.Address getAddress()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address remoteParty> = $r3;

     label2:
        $r4 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z1 = virtualinvoke $r4.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label3;

        $r5 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r6 = virtualinvoke $r5.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("settingRemoteParty ");

        $r9 = r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address remoteParty>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r6.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r11);

     label3:
        return;
    }

    private void addRoute(gov.nist.javax.sip.header.RecordRouteList)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.header.RecordRouteList r1;
        java.util.ListIterator r2, r64;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z8, $z10, $z11, $z12, $z13, z14;
        gov.nist.javax.sip.header.RecordRoute r3, r65;
        gov.nist.javax.sip.header.Route r4, $r13, $r30, $r37, $r49, r66;
        gov.nist.javax.sip.address.AddressImpl r5, $r28, $r41, r67;
        java.lang.Throwable r6, $r48;
        java.util.Iterator r7, r68;
        javax.sip.address.SipURI r8, $r17, $r52, r69;
        gov.nist.javax.sip.header.RouteList $r9, $r12, $r35, $r36, $r43, $r53;
        gov.nist.javax.sip.stack.SIPTransactionStack $r10, $r18, $r20, $r23, $r47, $r59, $r60, $r61;
        gov.nist.core.StackLogger $r11, $r19, $r24, $r46, $r55, $r63;
        java.lang.Object $r14, $r29, $r31, $r33, $r38, $r40, $r45, $r54;
        javax.sip.address.URI $r15, $r51;
        javax.sip.address.Address $r16, $r27, $r42, $r50;
        java.lang.StringBuilder $r21, $r22, $r25, $r56, $r57, $r58;
        java.lang.String $r26, $r62;
        gov.nist.core.NameValueList $r32, $r34, $r39, $r44;
        int $i0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: gov.nist.javax.sip.header.RecordRouteList;

     label01:
        $z1 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isClientDialog()>();

        if $z1 == 0 goto label05;

        $r35 = new gov.nist.javax.sip.header.RouteList;

        specialinvoke $r35.<gov.nist.javax.sip.header.RouteList: void <init>()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList routeList> = $r35;

        $i0 = virtualinvoke r1.<gov.nist.javax.sip.header.RecordRouteList: int size()>();

        r2 = virtualinvoke r1.<gov.nist.javax.sip.header.RecordRouteList: java.util.ListIterator listIterator(int)>($i0);

        z0 = 1;

     label02:
        $z8 = interfaceinvoke r2.<java.util.ListIterator: boolean hasPrevious()>();

        if $z8 == 0 goto label04;

        $r38 = interfaceinvoke r2.<java.util.ListIterator: java.lang.Object previous()>();

        r3 = (gov.nist.javax.sip.header.RecordRoute) $r38;

        if z0 == 0 goto label03;

        $r37 = new gov.nist.javax.sip.header.Route;

        specialinvoke $r37.<gov.nist.javax.sip.header.Route: void <init>()>();

        r4 = $r37;

        $r42 = virtualinvoke r3.<gov.nist.javax.sip.header.RecordRoute: javax.sip.address.Address getAddress()>();

        $r41 = (gov.nist.javax.sip.address.AddressImpl) $r42;

        $r40 = virtualinvoke $r41.<gov.nist.javax.sip.address.AddressImpl: java.lang.Object clone()>();

        r5 = (gov.nist.javax.sip.address.AddressImpl) $r40;

        virtualinvoke r4.<gov.nist.javax.sip.header.Route: void setAddress(javax.sip.address.Address)>(r5);

        $r39 = virtualinvoke r3.<gov.nist.javax.sip.header.RecordRoute: gov.nist.core.NameValueList getParameters()>();

        $r45 = virtualinvoke $r39.<gov.nist.core.NameValueList: java.lang.Object clone()>();

        $r44 = (gov.nist.core.NameValueList) $r45;

        virtualinvoke r4.<gov.nist.javax.sip.header.Route: void setParameters(gov.nist.core.NameValueList)>($r44);

        $r43 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList routeList>;

        virtualinvoke $r43.<gov.nist.javax.sip.header.RouteList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r4);

     label03:
        goto label02;

     label04:
        goto label08;

     label05:
        $r9 = new gov.nist.javax.sip.header.RouteList;

        specialinvoke $r9.<gov.nist.javax.sip.header.RouteList: void <init>()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList routeList> = $r9;

        r64 = virtualinvoke r1.<gov.nist.javax.sip.header.RecordRouteList: java.util.ListIterator listIterator()>();

        z14 = 1;

     label06:
        $z2 = interfaceinvoke r64.<java.util.ListIterator: boolean hasNext()>();

        if $z2 == 0 goto label08;

        $r29 = interfaceinvoke r64.<java.util.ListIterator: java.lang.Object next()>();

        r65 = (gov.nist.javax.sip.header.RecordRoute) $r29;

        if z14 == 0 goto label07;

        $r30 = new gov.nist.javax.sip.header.Route;

        specialinvoke $r30.<gov.nist.javax.sip.header.Route: void <init>()>();

        r66 = $r30;

        $r27 = virtualinvoke r65.<gov.nist.javax.sip.header.RecordRoute: javax.sip.address.Address getAddress()>();

        $r28 = (gov.nist.javax.sip.address.AddressImpl) $r27;

        $r33 = virtualinvoke $r28.<gov.nist.javax.sip.address.AddressImpl: java.lang.Object clone()>();

        r67 = (gov.nist.javax.sip.address.AddressImpl) $r33;

        virtualinvoke r66.<gov.nist.javax.sip.header.Route: void setAddress(javax.sip.address.Address)>(r67);

        $r34 = virtualinvoke r65.<gov.nist.javax.sip.header.RecordRoute: gov.nist.core.NameValueList getParameters()>();

        $r31 = virtualinvoke $r34.<gov.nist.core.NameValueList: java.lang.Object clone()>();

        $r32 = (gov.nist.core.NameValueList) $r31;

        virtualinvoke r66.<gov.nist.javax.sip.header.Route: void setParameters(gov.nist.core.NameValueList)>($r32);

        $r36 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList routeList>;

        virtualinvoke $r36.<gov.nist.javax.sip.header.RouteList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r66);

     label07:
        goto label06;

     label08:
        $r10 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r11 = virtualinvoke $r10.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $z3 = interfaceinvoke $r11.<gov.nist.core.StackLogger: boolean isLoggingEnabled()>();

        if $z3 == 0 goto label17;

        $r12 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList routeList>;

        r68 = virtualinvoke $r12.<gov.nist.javax.sip.header.RouteList: java.util.Iterator iterator()>();

     label09:
        $z4 = interfaceinvoke r68.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label11;

        $r14 = interfaceinvoke r68.<java.util.Iterator: java.lang.Object next()>();

        $r13 = (gov.nist.javax.sip.header.Route) $r14;

        $r16 = virtualinvoke $r13.<gov.nist.javax.sip.header.Route: javax.sip.address.Address getAddress()>();

        $r15 = interfaceinvoke $r16.<javax.sip.address.Address: javax.sip.address.URI getURI()>();

        $r17 = (javax.sip.address.SipURI) $r15;

        r69 = (javax.sip.address.SipURI) $r17;

        $z5 = interfaceinvoke r69.<javax.sip.address.SipURI: boolean hasLrParam()>();

        if $z5 != 0 goto label10;

        $r18 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z6 = virtualinvoke $r18.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z6 == 0 goto label10;

        $r20 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r19 = virtualinvoke $r20.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NON LR route in Route set detected for dialog : ");

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r19.<gov.nist.core.StackLogger: void logWarning(java.lang.String)>($r26);

        $r23 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r24 = virtualinvoke $r23.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r24.<gov.nist.core.StackLogger: void logStackTrace()>();

     label10:
        goto label09;

     label11:
        goto label17;

     label12:
        $r48 := @caughtexception;

        r6 = $r48;

     label13:
        $r47 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r46 = virtualinvoke $r47.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $z10 = interfaceinvoke $r46.<gov.nist.core.StackLogger: boolean isLoggingEnabled()>();

        if $z10 == 0 goto label16;

        $r53 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList routeList>;

        r7 = virtualinvoke $r53.<gov.nist.javax.sip.header.RouteList: java.util.Iterator iterator()>();

     label14:
        $z11 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label16;

        $r54 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        $r49 = (gov.nist.javax.sip.header.Route) $r54;

        $r50 = virtualinvoke $r49.<gov.nist.javax.sip.header.Route: javax.sip.address.Address getAddress()>();

        $r51 = interfaceinvoke $r50.<javax.sip.address.Address: javax.sip.address.URI getURI()>();

        $r52 = (javax.sip.address.SipURI) $r51;

        r8 = (javax.sip.address.SipURI) $r52;

        $z12 = interfaceinvoke r8.<javax.sip.address.SipURI: boolean hasLrParam()>();

        if $z12 != 0 goto label15;

        $r59 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z13 = virtualinvoke $r59.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z13 == 0 goto label15;

        $r60 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r55 = virtualinvoke $r60.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NON LR route in Route set detected for dialog : ");

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r62 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r55.<gov.nist.core.StackLogger: void logWarning(java.lang.String)>($r62);

        $r61 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r63 = virtualinvoke $r61.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r63.<gov.nist.core.StackLogger: void logStackTrace()>();

     label15:
        goto label14;

     label16:
        throw r6;

     label17:
        return;

        catch java.lang.Throwable from label01 to label08 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    void setRemoteTarget(javax.sip.header.ContactHeader)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        javax.sip.header.ContactHeader r1;
        javax.sip.address.Address $r2, $r8;
        gov.nist.javax.sip.stack.SIPTransactionStack $r3, $r4, $r11;
        boolean $z0;
        gov.nist.core.StackLogger $r5, $r12;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.lang.String $r10;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: javax.sip.header.ContactHeader;

        $r2 = interfaceinvoke r1.<javax.sip.header.ContactHeader: javax.sip.address.Address getAddress()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address remoteTarget> = $r2;

        $r3 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r3.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r5 = virtualinvoke $r4.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dialog.setRemoteTarget: ");

        $r8 = r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address remoteTarget>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r5.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r10);

        $r11 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r12 = virtualinvoke $r11.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r12.<gov.nist.core.StackLogger: void logStackTrace()>();

     label1:
        return;
    }

    private synchronized void addRoute(gov.nist.javax.sip.message.SIPResponse)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.message.SIPResponse r1;
        gov.nist.javax.sip.header.ContactList r2, r42;
        java.lang.Throwable r3, $r34;
        gov.nist.javax.sip.stack.SIPTransactionStack $r4, $r5, $r6, $r15, $r16, $r20, $r23, $r24, $r26, $r28, $r39, $r40;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        gov.nist.core.StackLogger $r7, $r17, $r25, $r27, $r29, $r38;
        javax.sip.DialogState $r8, $r9, $r11, $r13, $r37;
        javax.sip.header.Header $r10, $r21;
        javax.sip.header.ContactHeader $r12, $r22;
        gov.nist.javax.sip.header.RouteList $r14;
        java.lang.String $r18, $r35;
        javax.sip.header.CSeqHeader $r19;
        java.lang.StringBuilder $r30, $r31, $r32, $r33, $r36;
        gov.nist.javax.sip.header.RecordRouteList r41;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: gov.nist.javax.sip.message.SIPResponse;

     label01:
        $r4 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r4.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label02;

        $r26 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r27 = virtualinvoke $r26.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setContact: dialogState: ");

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r30 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("state = ");

        $r37 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $r36 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r37);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r27.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r35);

     label02:
        $i0 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

        if $i0 != 100 goto label05;

     label03:
        $r23 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z7 = virtualinvoke $r23.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z7 == 0 goto label04;

        $r28 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r29 = virtualinvoke $r28.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r29.<gov.nist.core.StackLogger: void logStackTrace()>();

     label04:
        return;

     label05:
        $i2 = r0.<gov.nist.javax.sip.stack.SIPDialog: int dialogState>;

        $i1 = <gov.nist.javax.sip.stack.SIPDialog: int TERMINATED_STATE>;

        if $i2 != $i1 goto label08;

     label06:
        $r20 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z6 = virtualinvoke $r20.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z6 == 0 goto label07;

        $r24 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r25 = virtualinvoke $r24.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r25.<gov.nist.core.StackLogger: void logStackTrace()>();

     label07:
        return;

     label08:
        $i4 = r0.<gov.nist.javax.sip.stack.SIPDialog: int dialogState>;

        $i3 = <gov.nist.javax.sip.stack.SIPDialog: int CONFIRMED_STATE>;

        if $i4 != $i3 goto label11;

        $i5 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

        $i6 = $i5 / 100;

        if $i6 != 2 goto label09;

        $z4 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isServer()>();

        if $z4 != 0 goto label09;

        r2 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.ContactList getContactHeaders()>();

        if r2 == null goto label09;

        $r19 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        $r18 = interfaceinvoke $r19.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        $z5 = staticinvoke <gov.nist.javax.sip.message.SIPRequest: boolean isTargetRefresh(java.lang.String)>($r18);

        if $z5 == 0 goto label09;

        $r21 = virtualinvoke r2.<gov.nist.javax.sip.header.ContactList: javax.sip.header.Header getFirst()>();

        $r22 = (javax.sip.header.ContactHeader) $r21;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setRemoteTarget(javax.sip.header.ContactHeader)>($r22);

     label09:
        $r15 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z3 = virtualinvoke $r15.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z3 == 0 goto label10;

        $r16 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r17 = virtualinvoke $r16.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r17.<gov.nist.core.StackLogger: void logStackTrace()>();

     label10:
        return;

     label11:
        $z1 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isServer()>();

        if $z1 != 0 goto label14;

        $r9 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $r8 = <javax.sip.DialogState: javax.sip.DialogState CONFIRMED>;

        if $r9 == $r8 goto label13;

        $r11 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $r13 = <javax.sip.DialogState: javax.sip.DialogState TERMINATED>;

        if $r11 == $r13 goto label13;

        r41 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.RecordRouteList getRecordRouteHeaders()>();

        if r41 == null goto label12;

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void addRoute(gov.nist.javax.sip.header.RecordRouteList)>(r41);

        goto label13;

     label12:
        $r14 = new gov.nist.javax.sip.header.RouteList;

        specialinvoke $r14.<gov.nist.javax.sip.header.RouteList: void <init>()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList routeList> = $r14;

     label13:
        r42 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.ContactList getContactHeaders()>();

        if r42 == null goto label14;

        $r10 = virtualinvoke r42.<gov.nist.javax.sip.header.ContactList: javax.sip.header.Header getFirst()>();

        $r12 = (javax.sip.header.ContactHeader) $r10;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setRemoteTarget(javax.sip.header.ContactHeader)>($r12);

     label14:
        $r5 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z2 = virtualinvoke $r5.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z2 == 0 goto label18;

        $r6 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r7 = virtualinvoke $r6.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r7.<gov.nist.core.StackLogger: void logStackTrace()>();

        goto label18;

     label15:
        $r34 := @caughtexception;

        r3 = $r34;

     label16:
        $r40 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z8 = virtualinvoke $r40.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z8 == 0 goto label17;

        $r39 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r38 = virtualinvoke $r39.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r38.<gov.nist.core.StackLogger: void logStackTrace()>();

     label17:
        throw r3;

     label18:
        return;

        catch java.lang.Throwable from label01 to label03 with label15;
        catch java.lang.Throwable from label05 to label06 with label15;
        catch java.lang.Throwable from label08 to label09 with label15;
        catch java.lang.Throwable from label11 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    private synchronized gov.nist.javax.sip.header.RouteList getRouteList()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        java.util.ListIterator r1;
        gov.nist.javax.sip.header.Route r3, $r36;
        gov.nist.javax.sip.stack.SIPTransactionStack $r4, $r8, $r9, $r11, $r19, $r21, $r29, $r41;
        boolean $z0, $z1, $z2;
        gov.nist.javax.sip.header.RouteList $r5, $r6, $r7, $r16, $r25, $r35, r45;
        gov.nist.core.StackLogger $r10, $r12, $r18, $r20, $r28, $r42;
        java.lang.StringBuilder $r13, $r14, $r15, $r22, $r23, $r27, $r31, $r32, $r33, $r39, $r40, $r44;
        java.lang.String $r17, $r24, $r26, $r30, $r34, $r43;
        java.lang.Object $r37, $r38;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r4 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r4.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label1;

        $r41 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r42 = virtualinvoke $r41.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getRouteList ");

        $r44 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r42.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r43);

     label1:
        $r5 = new gov.nist.javax.sip.header.RouteList;

        specialinvoke $r5.<gov.nist.javax.sip.header.RouteList: void <init>()>();

        $r6 = new gov.nist.javax.sip.header.RouteList;

        specialinvoke $r6.<gov.nist.javax.sip.header.RouteList: void <init>()>();

        r45 = $r6;

        $r7 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList routeList>;

        if $r7 == null goto label3;

        $r35 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList routeList>;

        r1 = virtualinvoke $r35.<gov.nist.javax.sip.header.RouteList: java.util.ListIterator listIterator()>();

     label2:
        $z2 = interfaceinvoke r1.<java.util.ListIterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r37 = interfaceinvoke r1.<java.util.ListIterator: java.lang.Object next()>();

        r3 = (gov.nist.javax.sip.header.Route) $r37;

        $r38 = virtualinvoke r3.<gov.nist.javax.sip.header.Route: java.lang.Object clone()>();

        $r36 = (gov.nist.javax.sip.header.Route) $r38;

        virtualinvoke r45.<gov.nist.javax.sip.header.RouteList: boolean add(gov.nist.javax.sip.header.SIPHeader)>($r36);

        goto label2;

     label3:
        $r8 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z1 = virtualinvoke $r8.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label6;

        $r9 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r10 = virtualinvoke $r9.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r10.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("----- ");

        $r11 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r12 = virtualinvoke $r11.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getRouteList for ");

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r17);

        if r45 == null goto label4;

        $r29 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r28 = virtualinvoke $r29.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RouteList = ");

        $r30 = virtualinvoke r45.<gov.nist.javax.sip.header.RouteList: java.lang.String encode()>();

        $r31 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r34 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r28.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r34);

     label4:
        $r16 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList routeList>;

        if $r16 == null goto label5;

        $r21 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r20 = virtualinvoke $r21.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("myRouteList = ");

        $r25 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList routeList>;

        $r24 = virtualinvoke $r25.<gov.nist.javax.sip.header.RouteList: java.lang.String encode()>();

        $r27 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r20.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r26);

     label5:
        $r19 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r18 = virtualinvoke $r19.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r18.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("----- ");

     label6:
        return r45;
    }

    void setRouteList(gov.nist.javax.sip.header.RouteList)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.header.RouteList r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: gov.nist.javax.sip.header.RouteList;

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList routeList> = r1;

        return;
    }

    private void sendAck(javax.sip.message.Request, boolean) throws javax.sip.SipException
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        javax.sip.message.Request r1;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z10, $z11, $z12, $z13, $z14;
        gov.nist.javax.sip.message.SIPRequest r2, $r27, $r43;
        java.text.ParseException r3, $r132;
        gov.nist.javax.sip.ListeningPointImpl r4;
        java.net.InetAddress r5;
        gov.nist.javax.sip.stack.MessageChannel r6;
        long l0, $l4, $l5, $l6;
        gov.nist.javax.sip.stack.SIPTransactionStack $r7, $r10, $r18, $r31, $r33, $r38, $r47, $r48, $r56, $r73, $r78, $r80, $r88, $r90, $r96, $r107, $r118, $r120, $r121, $r124, $r134;
        java.lang.String $r8, $r15, $r24, $r25, $r30, $r32, $r34, $r35, $r36, $r40, $r51, $r57, $r64, $r66, $r71, $r72, $r74, $r83, $r85, $r91, $r97, $r105, $r113, $r115, $r127, $r129, $r130, $r136;
        javax.sip.DialogState $r9, $r13, $r26;
        java.lang.StringBuilder $r11, $r14, $r16, $r19, $r20, $r21, $r22, $r23, $r49, $r50, $r53, $r54, $r55, $r58, $r60, $r62, $r63, $r68, $r69, $r75, $r76, $r77, $r82, $r84, $r87, $r92, $r93, $r94, $r98, $r100, $r101, $r103, $r104, $r106, $r109, $r111, $r112, $r116, $r125, $r126;
        javax.sip.SipException $r12, $r61, $r70, $r89, $r108, $r119, $r131, $r135, $r137, r140;
        gov.nist.core.StackLogger $r17, $r52, $r59, $r79, $r81, $r86, $r95, $r102, $r110, $r117, $r122, $r133;
        int $i1, $i2, $i3, $i7;
        javax.sip.header.CallIdHeader $r28, $r29, $r99, $r114;
        gov.nist.javax.sip.SipProviderImpl $r37;
        gov.nist.javax.sip.stack.MessageProcessor $r39;
        javax.sip.ListeningPoint $r41;
        javax.sip.header.CSeqHeader $r42, $r44;
        gov.nist.javax.sip.stack.SIPDialog$DialogDeleteTask $r45, $r46;
        javax.sip.header.ToHeader $r65;
        javax.sip.header.FromHeader $r67;
        java.lang.Exception $r123, r141;
        java.io.IOException $r128, r139;
        javax.sip.address.Hop r138;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: javax.sip.message.Request;

        z0 := @parameter1: boolean;

        r2 = (gov.nist.javax.sip.message.SIPRequest) r1;

        $r7 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z2 = virtualinvoke $r7.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z2 == 0 goto label01;

        $r107 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r110 = virtualinvoke $r107.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r109 = new java.lang.StringBuilder;

        specialinvoke $r109.<java.lang.StringBuilder: void <init>()>();

        $r125 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendAck");

        $r126 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r127 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r110.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r127);

     label01:
        $r8 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>("ACK");

        if $z3 != 0 goto label02;

        $r108 = new javax.sip.SipException;

        specialinvoke $r108.<javax.sip.SipException: void <init>(java.lang.String)>("Bad request method -- should be ACK");

        throw $r108;

     label02:
        $r9 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        if $r9 == null goto label03;

        $r26 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $i1 = virtualinvoke $r26.<javax.sip.DialogState: int getValue()>();

        $i2 = <gov.nist.javax.sip.stack.SIPDialog: int EARLY_STATE>;

        if $i1 != $i2 goto label05;

     label03:
        $r10 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z4 = virtualinvoke $r10.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z4 == 0 goto label04;

        $r18 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r17 = virtualinvoke $r18.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad Dialog State for ");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dialogID = ");

        $r24 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getDialogId()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r17.<gov.nist.core.StackLogger: void logError(java.lang.String)>($r25);

     label04:
        $r12 = new javax.sip.SipException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad dialog state ");

        $r13 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<javax.sip.SipException: void <init>(java.lang.String)>($r15);

        throw $r12;

     label05:
        $r29 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.header.CallIdHeader getCallId()>();

        $r30 = interfaceinvoke $r29.<javax.sip.header.CallIdHeader: java.lang.String getCallId()>();

        $r27 = (gov.nist.javax.sip.message.SIPRequest) r1;

        $r28 = virtualinvoke $r27.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CallIdHeader getCallId()>();

        $r32 = interfaceinvoke $r28.<javax.sip.header.CallIdHeader: java.lang.String getCallId()>();

        $z6 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>($r32);

        if $z6 != 0 goto label07;

        $r90 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z12 = virtualinvoke $r90.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z12 == 0 goto label06;

        $r88 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r102 = virtualinvoke $r88.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r101 = new java.lang.StringBuilder;

        specialinvoke $r101.<java.lang.StringBuilder: void <init>()>();

        $r100 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CallID ");

        $r99 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.header.CallIdHeader getCallId()>();

        $r98 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r99);

        $r97 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r102.<gov.nist.core.StackLogger: void logError(java.lang.String)>($r97);

        $r96 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r95 = virtualinvoke $r96.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r112 = new java.lang.StringBuilder;

        specialinvoke $r112.<java.lang.StringBuilder: void <init>()>();

        $r111 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RequestCallID = ");

        $r114 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CallIdHeader getCallId()>();

        $r113 = interfaceinvoke $r114.<javax.sip.header.CallIdHeader: java.lang.String getCallId()>();

        $r116 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r113);

        $r115 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r95.<gov.nist.core.StackLogger: void logError(java.lang.String)>($r115);

        $r118 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r117 = virtualinvoke $r118.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r104 = new java.lang.StringBuilder;

        specialinvoke $r104.<java.lang.StringBuilder: void <init>()>();

        $r103 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dialog =  ");

        $r106 = virtualinvoke $r103.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r105 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r117.<gov.nist.core.StackLogger: void logError(java.lang.String)>($r105);

     label06:
        $r89 = new javax.sip.SipException;

        specialinvoke $r89.<javax.sip.SipException: void <init>(java.lang.String)>("Bad call ID in request");

        throw $r89;

     label07:
        $r31 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z5 = virtualinvoke $r31.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z5 == 0 goto label08;

        $r78 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r79 = virtualinvoke $r78.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r76 = new java.lang.StringBuilder;

        specialinvoke $r76.<java.lang.StringBuilder: void <init>()>();

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setting from tag For outgoing ACK= ");

        $r74 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>();

        $r75 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r74);

        $r72 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r79.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r72);

        $r73 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r86 = virtualinvoke $r73.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r87 = new java.lang.StringBuilder;

        specialinvoke $r87.<java.lang.StringBuilder: void <init>()>();

        $r84 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setting To tag for outgoing ACK = ");

        $r85 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getRemoteTag()>();

        $r82 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r85);

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r86.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r83);

        $r80 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r81 = virtualinvoke $r80.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r94 = new java.lang.StringBuilder;

        specialinvoke $r94.<java.lang.StringBuilder: void <init>()>();

        $r93 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ack = ");

        $r92 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r91 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r81.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r91);

     label08:
        $r34 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>();

        if $r34 == null goto label09;

        $r67 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.FromHeader getFrom()>();

        $r66 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>();

        interfaceinvoke $r67.<javax.sip.header.FromHeader: void setTag(java.lang.String)>($r66);

     label09:
        $r35 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getRemoteTag()>();

        if $r35 == null goto label10;

        $r65 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.ToHeader getTo()>();

        $r64 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getRemoteTag()>();

        interfaceinvoke $r65.<javax.sip.header.ToHeader: void setTag(java.lang.String)>($r64);

     label10:
        goto label12;

     label11:
        $r132 := @caughtexception;

        r3 = $r132;

        $r137 = new javax.sip.SipException;

        $r136 = virtualinvoke r3.<java.text.ParseException: java.lang.String getMessage()>();

        specialinvoke $r137.<javax.sip.SipException: void <init>(java.lang.String)>($r136);

        throw $r137;

     label12:
        $r33 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r138 = virtualinvoke $r33.<gov.nist.javax.sip.stack.SIPTransactionStack: javax.sip.address.Hop getNextHop(gov.nist.javax.sip.message.SIPRequest)>(r2);

        if r138 != null goto label13;

        $r70 = new javax.sip.SipException;

        specialinvoke $r70.<javax.sip.SipException: void <init>(java.lang.String)>("No route!");

        throw $r70;

     label13:
        $r38 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z7 = virtualinvoke $r38.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z7 == 0 goto label14;

        $r56 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r59 = virtualinvoke $r56.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r69 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hop = ");

        $r68 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r138);

        $r71 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r59.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r71);

     label14:
        $r37 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.SipProviderImpl sipProvider>;

        $r36 = interfaceinvoke r138.<javax.sip.address.Hop: java.lang.String getTransport()>();

        $r41 = virtualinvoke $r37.<gov.nist.javax.sip.SipProviderImpl: javax.sip.ListeningPoint getListeningPoint(java.lang.String)>($r36);

        r4 = (gov.nist.javax.sip.ListeningPointImpl) $r41;

        if r4 != null goto label15;

        $r61 = new javax.sip.SipException;

        $r60 = new java.lang.StringBuilder;

        specialinvoke $r60.<java.lang.StringBuilder: void <init>()>();

        $r63 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No listening point for this provider registered at ");

        $r62 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r138);

        $r57 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r61.<javax.sip.SipException: void <init>(java.lang.String)>($r57);

        throw $r61;

     label15:
        $r40 = interfaceinvoke r138.<javax.sip.address.Hop: java.lang.String getHost()>();

        r5 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByName(java.lang.String)>($r40);

        $r39 = virtualinvoke r4.<gov.nist.javax.sip.ListeningPointImpl: gov.nist.javax.sip.stack.MessageProcessor getMessageProcessor()>();

        $i3 = interfaceinvoke r138.<javax.sip.address.Hop: int getPort()>();

        r6 = virtualinvoke $r39.<gov.nist.javax.sip.stack.MessageProcessor: gov.nist.javax.sip.stack.MessageChannel createMessageChannel(java.net.InetAddress,int)>(r5, $i3);

        z1 = 0;

        $r43 = (gov.nist.javax.sip.message.SIPRequest) r1;

        $r42 = virtualinvoke $r43.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CSeqHeader getCSeq()>();

        l0 = interfaceinvoke $r42.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        $z8 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isAckSent(long)>(l0);

        if $z8 != 0 goto label16;

        z1 = 1;

     label16:
        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setLastAckSent(gov.nist.javax.sip.message.SIPRequest)>(r2);

        virtualinvoke r6.<gov.nist.javax.sip.stack.MessageChannel: void sendMessage(gov.nist.javax.sip.message.SIPMessage)>(r2);

        r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isAcknowledged> = 1;

        $l4 = r0.<gov.nist.javax.sip.stack.SIPDialog: long highestSequenceNumberAcknowledged>;

        $r44 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CSeqHeader getCSeq()>();

        $l5 = interfaceinvoke $r44.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        $l6 = staticinvoke <java.lang.Math: long max(long,long)>($l4, $l5);

        r0.<gov.nist.javax.sip.stack.SIPDialog: long highestSequenceNumberAcknowledged> = $l6;

        if z1 == 0 goto label17;

        $z11 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isBackToBackUserAgent>;

        if $z11 == 0 goto label17;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void releaseAckSem()>();

        goto label18;

     label17:
        $r48 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z10 = virtualinvoke $r48.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z10 == 0 goto label18;

        $r47 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r52 = virtualinvoke $r47.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not releasing ack sem for ");

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r49 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isAckSent ");

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z1);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r52.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r51);

     label18:
        goto label25;

     label19:
        $r128 := @caughtexception;

        r139 = $r128;

        if z0 == 0 goto label20;

        $r131 = new javax.sip.SipException;

        specialinvoke $r131.<javax.sip.SipException: void <init>(java.lang.String,java.lang.Throwable)>("Could not send ack", r139);

        throw $r131;

     label20:
        $r129 = interfaceinvoke r138.<javax.sip.address.Hop: java.lang.String getHost()>();

        $i7 = interfaceinvoke r138.<javax.sip.address.Hop: int getPort()>();

        $r130 = interfaceinvoke r138.<javax.sip.address.Hop: java.lang.String getTransport()>();

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void raiseIOException(java.lang.String,int,java.lang.String)>($r129, $i7, $r130);

        goto label25;

     label21:
        $r119 := @caughtexception;

        r140 = $r119;

        $r120 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z13 = virtualinvoke $r120.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z13 == 0 goto label22;

        $r121 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r122 = virtualinvoke $r121.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r122.<gov.nist.core.StackLogger: void logException(java.lang.Throwable)>(r140);

     label22:
        throw r140;

     label23:
        $r123 := @caughtexception;

        r141 = $r123;

        $r124 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z14 = virtualinvoke $r124.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z14 == 0 goto label24;

        $r134 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r133 = virtualinvoke $r134.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r133.<gov.nist.core.StackLogger: void logException(java.lang.Throwable)>(r141);

     label24:
        $r135 = new javax.sip.SipException;

        specialinvoke $r135.<javax.sip.SipException: void <init>(java.lang.String,java.lang.Throwable)>("Could not create message channel", r141);

        throw $r135;

     label25:
        $r45 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogDeleteTask dialogDeleteTask>;

        if $r45 == null goto label26;

        $r46 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogDeleteTask dialogDeleteTask>;

        virtualinvoke $r46.<gov.nist.javax.sip.stack.SIPDialog$DialogDeleteTask: boolean cancel()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogDeleteTask dialogDeleteTask> = null;

     label26:
        r0.<gov.nist.javax.sip.stack.SIPDialog: boolean ackSeen> = 1;

        return;

        catch java.text.ParseException from label07 to label10 with label11;
        catch java.io.IOException from label13 to label18 with label19;
        catch javax.sip.SipException from label13 to label18 with label21;
        catch java.lang.Exception from label13 to label18 with label23;
    }

    void setStack(gov.nist.javax.sip.stack.SIPTransactionStack)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.stack.SIPTransactionStack r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: gov.nist.javax.sip.stack.SIPTransactionStack;

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack> = r1;

        return;
    }

    gov.nist.javax.sip.stack.SIPTransactionStack getStack()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.stack.SIPTransactionStack $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        return $r1;
    }

    boolean isTerminatedOnBye()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $z0 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean terminateOnBye>;

        return $z0;
    }

    void ackReceived(gov.nist.javax.sip.message.SIPRequest)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.message.SIPRequest r1;
        gov.nist.javax.sip.stack.SIPServerTransaction r2;
        java.lang.Throwable r3, $r19;
        boolean $z0, $z1, $z2;
        long $l0, $l1;
        javax.sip.header.CSeqHeader $r4;
        byte $b2;
        gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask $r5, $r18;
        gov.nist.javax.sip.stack.SIPDialog$DialogDeleteTask $r6, $r17;
        gov.nist.javax.sip.stack.SIPTransactionStack $r7, $r9, $r14;
        int $i3, $i4;
        gov.nist.core.StackLogger $r8, $r16;
        java.lang.StringBuilder $r10, $r11, $r12;
        java.lang.String $r13, $r15;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: gov.nist.javax.sip.message.SIPRequest;

        $z0 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean ackSeen>;

        if $z0 == 0 goto label01;

        return;

     label01:
        r2 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPServerTransaction getInviteTransaction()>();

        if r2 == null goto label10;

        $l0 = virtualinvoke r2.<gov.nist.javax.sip.stack.SIPServerTransaction: long getCSeq()>();

        $r4 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CSeqHeader getCSeq()>();

        $l1 = interfaceinvoke $r4.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        $b2 = $l0 cmp $l1;

        if $b2 != 0 goto label10;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void acquireTimerTaskSem()>();

     label02:
        $r5 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask timerTask>;

        if $r5 == null goto label03;

        $r18 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask timerTask>;

        virtualinvoke $r18.<gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask: boolean cancel()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask timerTask> = null;

     label03:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void releaseTimerTaskSem()>();

        goto label06;

     label04:
        $r19 := @caughtexception;

        r3 = $r19;

     label05:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void releaseTimerTaskSem()>();

        throw r3;

     label06:
        r0.<gov.nist.javax.sip.stack.SIPDialog: boolean ackSeen> = 1;

        $r6 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogDeleteTask dialogDeleteTask>;

        if $r6 == null goto label07;

        $r17 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogDeleteTask dialogDeleteTask>;

        virtualinvoke $r17.<gov.nist.javax.sip.stack.SIPDialog$DialogDeleteTask: boolean cancel()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogDeleteTask dialogDeleteTask> = null;

     label07:
        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setLastAckReceived(gov.nist.javax.sip.message.SIPRequest)>(r1);

        $r7 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z1 = virtualinvoke $r7.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label08;

        $r9 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r8 = virtualinvoke $r9.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ackReceived for ");

        $r13 = virtualinvoke r2.<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getMethod()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r15);

        $r14 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r16 = virtualinvoke $r14.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $i4 = interfaceinvoke $r16.<gov.nist.core.StackLogger: int getLineCount()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: int ackLine> = $i4;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void printDebugInfo()>();

     label08:
        $z2 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isBackToBackUserAgent>;

        if $z2 == 0 goto label09;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void releaseAckSem()>();

     label09:
        $i3 = <gov.nist.javax.sip.stack.SIPDialog: int CONFIRMED_STATE>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setState(int)>($i3);

     label10:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
    }

    synchronized boolean testAndSetIsDialogTerminatedEventDelivered()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        boolean z0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        z0 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean dialogTerminatedEventDelivered>;

        r0.<gov.nist.javax.sip.stack.SIPDialog: boolean dialogTerminatedEventDelivered> = 1;

        return z0;
    }

    public void addEventListener(gov.nist.javax.sip.stack.SIPDialogEventListener)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.stack.SIPDialogEventListener r1;
        java.util.Set $r2;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: gov.nist.javax.sip.stack.SIPDialogEventListener;

        $r2 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.util.Set eventListeners>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void removeEventListener(gov.nist.javax.sip.stack.SIPDialogEventListener)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.stack.SIPDialogEventListener r1;
        java.util.Set $r2;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: gov.nist.javax.sip.stack.SIPDialogEventListener;

        $r2 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.util.Set eventListeners>;

        interfaceinvoke $r2.<java.util.Set: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public void setApplicationData(java.lang.Object)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        java.lang.Object r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: java.lang.Object;

        r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.Object applicationData> = r1;

        return;
    }

    public java.lang.Object getApplicationData()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        java.lang.Object $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.Object applicationData>;

        return $r1;
    }

    public synchronized void requestConsumed()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        long $l0, $l1;
        java.lang.Long $r1, $r7;
        gov.nist.javax.sip.stack.SIPTransactionStack $r2, $r3;
        boolean $z0;
        gov.nist.core.StackLogger $r4;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.lang.String $r9;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $l0 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: long getRemoteSeqNumber()>();

        $l1 = $l0 + 1L;

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.Long nextSeqno> = $r1;

        $r2 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r2.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r4 = virtualinvoke $r3.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Request Consumed -- next consumable Request Seqno = ");

        $r7 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.Long nextSeqno>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r9);

     label1:
        return;
    }

    public synchronized boolean isRequestConsumable(gov.nist.javax.sip.message.SIPRequest)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.message.SIPRequest r1;
        java.lang.String $r2;
        boolean $z0, $z1, $z2;
        long $l0, $l1;
        javax.sip.header.CSeqHeader $r3;
        byte $b2;
        java.lang.RuntimeException $r4;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: gov.nist.javax.sip.message.SIPRequest;

        $r2 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("ACK");

        if $z0 == 0 goto label1;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Illegal method");

        throw $r4;

     label1:
        $z1 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isSequnceNumberValidation()>();

        if $z1 != 0 goto label2;

        return 1;

     label2:
        $l0 = r0.<gov.nist.javax.sip.stack.SIPDialog: long remoteSequenceNumber>;

        $r3 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CSeqHeader getCSeq()>();

        $l1 = interfaceinvoke $r3.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        $b2 = $l0 cmp $l1;

        if $b2 >= 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;
    }

    public void doDeferredDelete()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.stack.SIPTransactionStack $r1, $r4;
        java.util.Timer $r2, $r5;
        gov.nist.javax.sip.stack.SIPDialog$DialogDeleteTask $r3, $r6;
        int $i0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r2 = virtualinvoke $r1.<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Timer getTimer()>();

        if $r2 != null goto label1;

        $i0 = <gov.nist.javax.sip.stack.SIPDialog: int TERMINATED_STATE>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setState(int)>($i0);

        goto label2;

     label1:
        $r3 = new gov.nist.javax.sip.stack.SIPDialog$DialogDeleteTask;

        specialinvoke $r3.<gov.nist.javax.sip.stack.SIPDialog$DialogDeleteTask: void <init>(gov.nist.javax.sip.stack.SIPDialog)>(r0);

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogDeleteTask dialogDeleteTask> = $r3;

        $r4 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r5 = virtualinvoke $r4.<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Timer getTimer()>();

        $r6 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogDeleteTask dialogDeleteTask>;

        virtualinvoke $r5.<java.util.Timer: void schedule(java.util.TimerTask,long)>($r6, 32000L);

     label2:
        return;
    }

    public void setState(int)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        int i0, $i1, $i2;
        gov.nist.javax.sip.stack.SIPTransactionStack $r1, $r2, $r4, $r7, $r16, $r17, $r18, $r25;
        boolean $z0, $z1;
        java.util.Timer $r3, $r5;
        gov.nist.javax.sip.stack.SIPDialog$LingerTimer $r6;
        gov.nist.core.StackLogger $r8, $r15, $r20, $r29;
        java.lang.StringBuilder $r9, $r10, $r11, $r12, $r14, $r19, $r21, $r22, $r23, $r27, $r28, $r30, $r33;
        java.lang.String $r13, $r26, $r31;
        javax.sip.DialogState $r24, $r32;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        i0 := @parameter0: int;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r1.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label1;

        $r7 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r8 = virtualinvoke $r7.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Setting dialog state for ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("newState = ");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r13);

        $r16 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r15 = virtualinvoke $r16.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r15.<gov.nist.core.StackLogger: void logStackTrace()>();

        if i0 == -1 goto label1;

        $i2 = r0.<gov.nist.javax.sip.stack.SIPDialog: int dialogState>;

        if i0 == $i2 goto label1;

        $r17 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z1 = virtualinvoke $r17.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label1;

        $r18 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r20 = virtualinvoke $r18.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  old dialog state is ");

        $r24 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r20.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r26);

        $r25 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r29 = virtualinvoke $r25.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  New dialog state is ");

        $r32 = staticinvoke <javax.sip.DialogState: javax.sip.DialogState getObject(int)>(i0);

        $r33 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r32);

        $r31 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r29.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r31);

     label1:
        r0.<gov.nist.javax.sip.stack.SIPDialog: int dialogState> = i0;

        $i1 = <gov.nist.javax.sip.stack.SIPDialog: int TERMINATED_STATE>;

        if i0 != $i1 goto label3;

        $r2 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r3 = virtualinvoke $r2.<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Timer getTimer()>();

        if $r3 == null goto label2;

        $r4 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r5 = virtualinvoke $r4.<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Timer getTimer()>();

        $r6 = new gov.nist.javax.sip.stack.SIPDialog$LingerTimer;

        specialinvoke $r6.<gov.nist.javax.sip.stack.SIPDialog$LingerTimer: void <init>(gov.nist.javax.sip.stack.SIPDialog)>(r0);

        virtualinvoke $r5.<java.util.Timer: void schedule(java.util.TimerTask,long)>($r6, 8000L);

     label2:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void stopTimer()>();

     label3:
        return;
    }

    public void printDebugInfo()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.stack.SIPTransactionStack $r1, $r2, $r8, $r14, $r23, $r27, $r32;
        boolean $z0, $z1;
        gov.nist.core.StackLogger $r3, $r9, $r17, $r22, $r30, $r33;
        java.lang.StringBuilder $r4, $r5, $r6, $r10, $r11, $r13, $r16, $r19, $r21, $r24, $r25, $r26, $r29, $r31, $r34, $r37, $r38, $r39, $r40, $r42;
        java.lang.String $r7, $r12, $r15, $r18, $r20, $r28, $r35, $r36, $r41;
        long $l0, $l1;
        int $i2;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r1.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r3 = virtualinvoke $r2.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isServer = ");

        $z1 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isServer()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r7);

        $r8 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r9 = virtualinvoke $r8.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("localTag = ");

        $r12 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r15);

        $r14 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r17 = virtualinvoke $r14.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("remoteTag = ");

        $r18 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getRemoteTag()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r17.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r20);

        $r23 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r22 = virtualinvoke $r23.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("localSequenceNumer = ");

        $l0 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: long getLocalSeqNumber()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r22.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r28);

        $r27 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r30 = virtualinvoke $r27.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("remoteSequenceNumer = ");

        $l1 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: long getRemoteSeqNumber()>();

        $r34 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r30.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r35);

        $r32 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r33 = virtualinvoke $r32.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ackLine:");

        $r36 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getRemoteTag()>();

        $r37 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r42 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i2 = r0.<gov.nist.javax.sip.stack.SIPDialog: int ackLine>;

        $r40 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r33.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r41);

     label1:
        return;
    }

    public boolean isAckSeen()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $z0 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean ackSeen>;

        return $z0;
    }

    public gov.nist.javax.sip.message.SIPRequest getLastAckSent()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.message.SIPRequest $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest lastAckSent>;

        return $r1;
    }

    public boolean isAckSent(long)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        long l0, $l1;
        gov.nist.javax.sip.stack.SIPTransaction $r1, $r2;
        boolean $z0, $z1;
        gov.nist.javax.sip.message.SIPRequest $r3, $r4;
        javax.sip.header.CSeqHeader $r5;
        byte $b2;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        l0 := @parameter0: long;

        $r1 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransaction getLastTransaction()>();

        if $r1 != null goto label1;

        return 1;

     label1:
        $r2 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransaction getLastTransaction()>();

        $z0 = $r2 instanceof javax.sip.ClientTransaction;

        if $z0 == 0 goto label5;

        $r3 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest getLastAckSent()>();

        if $r3 != null goto label2;

        return 0;

     label2:
        $r4 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest getLastAckSent()>();

        $r5 = virtualinvoke $r4.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CSeqHeader getCSeq()>();

        $l1 = interfaceinvoke $r5.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        $b2 = l0 cmp $l1;

        if $b2 > 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;

     label5:
        return 1;
    }

    public javax.sip.Transaction getFirstTransaction()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.stack.SIPTransaction $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransaction firstTransaction>;

        return $r1;
    }

    public java.util.Iterator getRouteSet()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.header.RouteList $r1, $r2;
        java.util.ListIterator $r3, $r5;
        java.util.LinkedList $r4;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList routeList>;

        if $r1 != null goto label1;

        $r4 = new java.util.LinkedList;

        specialinvoke $r4.<java.util.LinkedList: void <init>()>();

        $r5 = virtualinvoke $r4.<java.util.LinkedList: java.util.ListIterator listIterator()>();

        return $r5;

     label1:
        $r2 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList getRouteList()>();

        $r3 = virtualinvoke $r2.<gov.nist.javax.sip.header.RouteList: java.util.ListIterator listIterator()>();

        return $r3;
    }

    public synchronized void addRoute(gov.nist.javax.sip.message.SIPRequest)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.message.SIPRequest r1;
        gov.nist.javax.sip.header.RecordRouteList r2;
        gov.nist.javax.sip.header.ContactList r3;
        gov.nist.javax.sip.stack.SIPTransactionStack $r4, $r11;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r5, $r9, $r18;
        gov.nist.javax.sip.header.RouteList $r6;
        javax.sip.header.ContactHeader $r7;
        javax.sip.header.Header $r8;
        gov.nist.core.StackLogger $r10;
        java.lang.StringBuilder $r12, $r13, $r14, $r15, $r16;
        javax.sip.DialogState $r17;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: gov.nist.javax.sip.message.SIPRequest;

        $r4 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r4.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label1;

        $r11 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r10 = virtualinvoke $r11.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setContact: dialogState: ");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("state = ");

        $r17 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r10.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r18);

     label1:
        $i1 = r0.<gov.nist.javax.sip.stack.SIPDialog: int dialogState>;

        $i0 = <gov.nist.javax.sip.stack.SIPDialog: int CONFIRMED_STATE>;

        if $i1 != $i0 goto label2;

        $r9 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z1 = staticinvoke <gov.nist.javax.sip.message.SIPRequest: boolean isTargetRefresh(java.lang.String)>($r9);

        if $z1 == 0 goto label2;

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void doTargetRefresh(gov.nist.javax.sip.message.SIPMessage)>(r1);

     label2:
        $i3 = r0.<gov.nist.javax.sip.stack.SIPDialog: int dialogState>;

        $i2 = <gov.nist.javax.sip.stack.SIPDialog: int CONFIRMED_STATE>;

        if $i3 == $i2 goto label3;

        $i5 = r0.<gov.nist.javax.sip.stack.SIPDialog: int dialogState>;

        $i4 = <gov.nist.javax.sip.stack.SIPDialog: int TERMINATED_STATE>;

        if $i5 != $i4 goto label4;

     label3:
        return;

     label4:
        $r5 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getToTag()>();

        if $r5 == null goto label5;

        return;

     label5:
        r2 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RecordRouteList getRecordRouteHeaders()>();

        if r2 == null goto label6;

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void addRoute(gov.nist.javax.sip.header.RecordRouteList)>(r2);

        goto label7;

     label6:
        $r6 = new gov.nist.javax.sip.header.RouteList;

        specialinvoke $r6.<gov.nist.javax.sip.header.RouteList: void <init>()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList routeList> = $r6;

     label7:
        r3 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.ContactList getContactHeaders()>();

        if r3 == null goto label8;

        $r8 = virtualinvoke r3.<gov.nist.javax.sip.header.ContactList: javax.sip.header.Header getFirst()>();

        $r7 = (javax.sip.header.ContactHeader) $r8;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setRemoteTarget(javax.sip.header.ContactHeader)>($r7);

     label8:
        return;
    }

    public void setDialogId(java.lang.String)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: java.lang.String;

        r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String dialogId> = r1;

        return;
    }

    public static gov.nist.javax.sip.stack.SIPDialog createFromNOTIFY(gov.nist.javax.sip.stack.SIPClientTransaction, gov.nist.javax.sip.stack.SIPTransaction)
    {
        gov.nist.javax.sip.stack.SIPClientTransaction r0;
        gov.nist.javax.sip.stack.SIPTransaction r1;
        gov.nist.javax.sip.stack.SIPDialog r2, $r4;
        gov.nist.javax.sip.message.SIPRequest r3;
        long $l0, $l1;
        javax.sip.message.Request $r5;
        javax.sip.header.CSeqHeader $r6;
        java.lang.String $r7, $r8, $r9;
        gov.nist.javax.sip.message.SIPResponse $r10;
        javax.sip.header.ToHeader $r11;
        javax.sip.address.Address $r12, $r14;
        javax.sip.header.FromHeader $r13;
        int $i2;

        r0 := @parameter0: gov.nist.javax.sip.stack.SIPClientTransaction;

        r1 := @parameter1: gov.nist.javax.sip.stack.SIPTransaction;

        $r4 = new gov.nist.javax.sip.stack.SIPDialog;

        specialinvoke $r4.<gov.nist.javax.sip.stack.SIPDialog: void <init>(gov.nist.javax.sip.stack.SIPTransaction)>(r1);

        r2 = $r4;

        r2.<gov.nist.javax.sip.stack.SIPDialog: boolean serverTransactionFlag> = 0;

        r2.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransaction lastTransaction> = r0;

        staticinvoke <gov.nist.javax.sip.stack.SIPDialog: void storeFirstTransactionInfo(gov.nist.javax.sip.stack.SIPDialog,gov.nist.javax.sip.stack.SIPTransaction)>(r2, r0);

        r2.<gov.nist.javax.sip.stack.SIPDialog: boolean terminateOnBye> = 0;

        $l0 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPClientTransaction: long getCSeq()>();

        r2.<gov.nist.javax.sip.stack.SIPDialog: long localSequenceNumber> = $l0;

        $r5 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPTransaction: javax.sip.message.Request getRequest()>();

        r3 = (gov.nist.javax.sip.message.SIPRequest) $r5;

        $r6 = virtualinvoke r3.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CSeqHeader getCSeq()>();

        $l1 = interfaceinvoke $r6.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        r2.<gov.nist.javax.sip.stack.SIPDialog: long remoteSequenceNumber> = $l1;

        $r7 = virtualinvoke r3.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getDialogId(boolean)>(1);

        virtualinvoke r2.<gov.nist.javax.sip.stack.SIPDialog: void setDialogId(java.lang.String)>($r7);

        $r8 = virtualinvoke r3.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getToTag()>();

        specialinvoke r2.<gov.nist.javax.sip.stack.SIPDialog: void setLocalTag(java.lang.String)>($r8);

        $r9 = virtualinvoke r3.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getFromTag()>();

        specialinvoke r2.<gov.nist.javax.sip.stack.SIPDialog: void setRemoteTag(java.lang.String)>($r9);

        $r10 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPClientTransaction: gov.nist.javax.sip.message.SIPResponse getLastResponse()>();

        virtualinvoke r2.<gov.nist.javax.sip.stack.SIPDialog: void setLastResponse(gov.nist.javax.sip.stack.SIPTransaction,gov.nist.javax.sip.message.SIPResponse)>(r0, $r10);

        $r11 = virtualinvoke r3.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.ToHeader getTo()>();

        $r12 = interfaceinvoke $r11.<javax.sip.header.ToHeader: javax.sip.address.Address getAddress()>();

        r2.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address localParty> = $r12;

        $r13 = virtualinvoke r3.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.FromHeader getFrom()>();

        $r14 = interfaceinvoke $r13.<javax.sip.header.FromHeader: javax.sip.address.Address getAddress()>();

        r2.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address remoteParty> = $r14;

        virtualinvoke r2.<gov.nist.javax.sip.stack.SIPDialog: void addRoute(gov.nist.javax.sip.message.SIPRequest)>(r3);

        $i2 = <gov.nist.javax.sip.stack.SIPDialog: int CONFIRMED_STATE>;

        virtualinvoke r2.<gov.nist.javax.sip.stack.SIPDialog: void setState(int)>($i2);

        return r2;
    }

    public boolean isServer()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        boolean $z0, $z1, $z2;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $z0 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean firstTransactionSeen>;

        if $z0 != 0 goto label1;

        $z2 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean serverTransactionFlag>;

        return $z2;

     label1:
        $z1 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean firstTransactionIsServerTransaction>;

        return $z1;
    }

    protected boolean isReInvite()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $z0 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean reInviteFlag>;

        return $z0;
    }

    public java.lang.String getDialogId()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        java.lang.String $r1, $r2, $r5;
        gov.nist.javax.sip.message.SIPResponse $r3, $r4;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String dialogId>;

        if $r1 != null goto label1;

        $r3 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPResponse lastResponse>;

        if $r3 == null goto label1;

        $r4 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPResponse lastResponse>;

        $z0 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isServer()>();

        $r5 = virtualinvoke $r4.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getDialogId(boolean)>($z0);

        r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String dialogId> = $r5;

     label1:
        $r2 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String dialogId>;

        return $r2;
    }

    private static void storeFirstTransactionInfo(gov.nist.javax.sip.stack.SIPDialog, gov.nist.javax.sip.stack.SIPTransaction)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.stack.SIPTransaction r1;
        gov.nist.javax.sip.stack.SIPServerTransaction r2;
        gov.nist.javax.sip.message.SIPResponse r3;
        boolean $z0, $z1, $z2;
        javax.sip.message.Request $r4;
        javax.sip.address.URI $r5;
        java.lang.String $r6, $r7, $r8;
        int $i0;
        gov.nist.javax.sip.header.Contact $r9, $r10;
        gov.nist.javax.sip.stack.SIPClientTransaction r11;
        gov.nist.javax.sip.message.SIPRequest r12;

        r0 := @parameter0: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter1: gov.nist.javax.sip.stack.SIPTransaction;

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransaction firstTransaction> = r1;

        r0.<gov.nist.javax.sip.stack.SIPDialog: boolean firstTransactionSeen> = 1;

        $z0 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPTransaction: boolean isServerTransaction()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: boolean firstTransactionIsServerTransaction> = $z0;

        $r4 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPTransaction: javax.sip.message.Request getRequest()>();

        $r5 = interfaceinvoke $r4.<javax.sip.message.Request: javax.sip.address.URI getRequestURI()>();

        $r6 = interfaceinvoke $r5.<javax.sip.address.URI: java.lang.String getScheme()>();

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("sips");

        r0.<gov.nist.javax.sip.stack.SIPDialog: boolean firstTransactionSecure> = $z1;

        $i0 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPTransaction: int getPort()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: int firstTransactionPort> = $i0;

        $r7 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getBranchId()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String firstTransactionId> = $r7;

        $r8 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getMethod()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String firstTransactionMethod> = $r8;

        $z2 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isServer()>();

        if $z2 == 0 goto label3;

        r2 = (gov.nist.javax.sip.stack.SIPServerTransaction) r1;

        r3 = virtualinvoke r2.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse getLastResponse()>();

        if r3 == null goto label1;

        $r10 = virtualinvoke r3.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.Contact getContactHeader()>();

        goto label2;

     label1:
        $r10 = null;

     label2:
        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.Contact contactHeader> = $r10;

        goto label4;

     label3:
        r11 = (gov.nist.javax.sip.stack.SIPClientTransaction) r1;

        if r11 == null goto label4;

        r12 = virtualinvoke r11.<gov.nist.javax.sip.stack.SIPClientTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r9 = virtualinvoke r12.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.Contact getContactHeader()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.Contact contactHeader> = $r9;

     label4:
        return;
    }

    public void addTransaction(gov.nist.javax.sip.stack.SIPTransaction)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.stack.SIPTransaction r1;
        gov.nist.javax.sip.message.SIPRequest r2, $r30;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        java.lang.String $r3, $r4, $r10, $r15, $r17, $r20, $r27, $r29, $r31, $r32, $r35, $r36, $r43, $r44, $r45, $r46, $r47, $r48;
        gov.nist.javax.sip.stack.SIPTransactionStack $r5, $r6, $r16, $r28, $r34, $r40;
        gov.nist.core.StackLogger $r7, $r19, $r25, $r39;
        java.lang.StringBuilder $r8, $r9, $r11, $r12, $r13, $r14, $r18, $r21, $r22, $r23, $r24;
        javax.sip.header.CSeqHeader $r26, $r33;
        long $l0, $l1, $l2;
        javax.sip.header.FromHeader $r37, $r38;
        javax.sip.header.EventHeader $r41;
        javax.sip.header.Header $r42;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: gov.nist.javax.sip.stack.SIPTransaction;

        r2 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $z0 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean firstTransactionSeen>;

        if $z0 == 0 goto label1;

        $r47 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String firstTransactionId>;

        $r46 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getBranchId()>();

        $z11 = virtualinvoke $r47.<java.lang.String: boolean equals(java.lang.Object)>($r46);

        if $z11 != 0 goto label1;

        $r45 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getMethod()>();

        $r48 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String firstTransactionMethod>;

        $z12 = virtualinvoke $r45.<java.lang.String: boolean equals(java.lang.Object)>($r48);

        if $z12 == 0 goto label1;

        r0.<gov.nist.javax.sip.stack.SIPDialog: boolean reInviteFlag> = 1;

     label1:
        $z1 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean firstTransactionSeen>;

        if $z1 != 0 goto label6;

        staticinvoke <gov.nist.javax.sip.stack.SIPDialog: void storeFirstTransactionInfo(gov.nist.javax.sip.stack.SIPDialog,gov.nist.javax.sip.stack.SIPTransaction)>(r0, r1);

        $r32 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z8 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>("SUBSCRIBE");

        if $z8 == 0 goto label2;

        $r42 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.Header getHeader(java.lang.String)>("Event");

        $r41 = (javax.sip.header.EventHeader) $r42;

        r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.header.EventHeader eventHeader> = $r41;

     label2:
        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setLocalParty(gov.nist.javax.sip.message.SIPMessage)>(r2);

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setRemoteParty(gov.nist.javax.sip.message.SIPMessage)>(r2);

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setCallId(gov.nist.javax.sip.message.SIPRequest)>(r2);

        $r30 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest originalRequest>;

        if $r30 != null goto label3;

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest originalRequest> = r2;

     label3:
        $r31 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String method>;

        if $r31 != null goto label4;

        $r43 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String method> = $r43;

     label4:
        $z9 = r1 instanceof gov.nist.javax.sip.stack.SIPServerTransaction;

        if $z9 == 0 goto label5;

        $r38 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.FromHeader getFrom()>();

        $r44 = interfaceinvoke $r38.<javax.sip.header.FromHeader: java.lang.String getTag()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String hisTag> = $r44;

        goto label7;

     label5:
        $r33 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CSeqHeader getCSeq()>();

        $l1 = interfaceinvoke $r33.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setLocalSequenceNumber(long)>($l1);

        $l2 = r0.<gov.nist.javax.sip.stack.SIPDialog: long localSequenceNumber>;

        r0.<gov.nist.javax.sip.stack.SIPDialog: long originalLocalSequenceNumber> = $l2;

        $r37 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.FromHeader getFrom()>();

        $r36 = interfaceinvoke $r37.<javax.sip.header.FromHeader: java.lang.String getTag()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String myTag> = $r36;

        $r35 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String myTag>;

        if $r35 != null goto label7;

        $r34 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z10 = virtualinvoke $r34.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z10 == 0 goto label7;

        $r40 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r39 = virtualinvoke $r40.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r39.<gov.nist.core.StackLogger: void logError(java.lang.String)>("The request\'s From header is missing the required Tag parameter.");

        goto label7;

     label6:
        $r3 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getMethod()>();

        $r4 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String firstTransactionMethod>;

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z2 == 0 goto label7;

        $z7 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean firstTransactionIsServerTransaction>;

        $z6 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPTransaction: boolean isServerTransaction()>();

        if $z7 == $z6 goto label7;

        staticinvoke <gov.nist.javax.sip.stack.SIPDialog: void storeFirstTransactionInfo(gov.nist.javax.sip.stack.SIPDialog,gov.nist.javax.sip.stack.SIPTransaction)>(r0, r1);

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setLocalParty(gov.nist.javax.sip.message.SIPMessage)>(r2);

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setRemoteParty(gov.nist.javax.sip.message.SIPMessage)>(r2);

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setCallId(gov.nist.javax.sip.message.SIPRequest)>(r2);

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest originalRequest> = r2;

        $r29 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String method> = $r29;

     label7:
        $z3 = r1 instanceof gov.nist.javax.sip.stack.SIPServerTransaction;

        if $z3 == 0 goto label8;

        $r26 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CSeqHeader getCSeq()>();

        $l0 = interfaceinvoke $r26.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setRemoteSequenceNumber(long)>($l0);

     label8:
        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransaction lastTransaction> = r1;

        $r5 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z4 = virtualinvoke $r5.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z4 == 0 goto label9;

        $r6 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r7 = virtualinvoke $r6.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Transaction Added ");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r10 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String myTag>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r15 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String hisTag>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r7.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r17);

        $r16 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r19 = virtualinvoke $r16.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TID = ");

        $r20 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPTransaction: java.lang.String getTransactionId()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $z5 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPTransaction: boolean isServerTransaction()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z5);

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r19.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r27);

        $r28 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r25 = virtualinvoke $r28.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r25.<gov.nist.core.StackLogger: void logStackTrace()>();

     label9:
        return;
    }

    private void setRemoteTag(java.lang.String)
    {
        gov.nist.javax.sip.stack.SIPDialog r0, $r15;
        java.lang.String r1, $r3, $r7, $r13, $r20, $r27, $r31, $r43, $r44;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        gov.nist.javax.sip.stack.SIPTransactionStack $r2, $r4, $r5, $r10, $r11, $r12, $r14, $r16, $r18, $r19, $r22, $r29, $r32, $r34;
        gov.nist.core.StackLogger $r6, $r17, $r21, $r33, $r35;
        javax.sip.DialogState $r8, $r9;
        java.lang.StringBuilder $r23, $r24, $r25, $r26, $r28, $r30, $r36, $r37, $r38, $r39, $r40, $r41, $r42;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z1 = virtualinvoke $r2.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label01;

        $r32 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r33 = virtualinvoke $r32.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setRemoteTag(): ");

        $r36 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" remoteTag = ");

        $r43 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String hisTag>;

        $r42 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" new tag = ");

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r44 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r33.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r44);

     label01:
        $r3 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String hisTag>;

        if $r3 == null goto label08;

        if r1 == null goto label08;

        $r7 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String hisTag>;

        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z3 != 0 goto label08;

        $r8 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $r9 = <javax.sip.DialogState: javax.sip.DialogState EARLY>;

        if $r8 == $r9 goto label03;

        $r29 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z7 = virtualinvoke $r29.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z7 == 0 goto label02;

        $r34 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r35 = virtualinvoke $r34.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r35.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Dialog is already established -- ignoring remote tag re-assignment");

     label02:
        return;

     label03:
        $r10 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z4 = virtualinvoke $r10.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isRemoteTagReassignmentAllowed()>();

        if $z4 == 0 goto label10;

        $r11 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z5 = virtualinvoke $r11.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z5 == 0 goto label04;

        $r22 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r21 = virtualinvoke $r22.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UNSAFE OPERATION !  tag re-assignment ");

        $r27 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String hisTag>;

        $r28 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r25 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" trying to set to ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" can cause unexpected effects ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r21.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r31);

     label04:
        z0 = 0;

        $r12 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r13 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String dialogId>;

        $r15 = virtualinvoke $r12.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.SIPDialog getDialog(java.lang.String)>($r13);

        if $r15 != r0 goto label05;

        $r19 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r20 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String dialogId>;

        virtualinvoke $r19.<gov.nist.javax.sip.stack.SIPTransactionStack: void removeDialog(java.lang.String)>($r20);

        z0 = 1;

     label05:
        r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String dialogId> = null;

        r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String hisTag> = r1;

        if z0 == 0 goto label07;

        $r14 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z6 = virtualinvoke $r14.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z6 == 0 goto label06;

        $r18 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r17 = virtualinvoke $r18.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r17.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("ReInserting Dialog");

     label06:
        $r16 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        virtualinvoke $r16.<gov.nist.javax.sip.stack.SIPTransactionStack: void putDialog(gov.nist.javax.sip.stack.SIPDialog)>(r0);

     label07:
        goto label10;

     label08:
        if r1 == null goto label09;

        r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String hisTag> = r1;

        goto label10;

     label09:
        $r4 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z2 = virtualinvoke $r4.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z2 == 0 goto label10;

        $r5 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r6 = virtualinvoke $r5.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r6.<gov.nist.core.StackLogger: void logWarning(java.lang.String)>("setRemoteTag : called with null argument ");

     label10:
        return;
    }

    public gov.nist.javax.sip.stack.SIPTransaction getLastTransaction()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.stack.SIPTransaction $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransaction lastTransaction>;

        return $r1;
    }

    public gov.nist.javax.sip.stack.SIPServerTransaction getInviteTransaction()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask r1;
        gov.nist.javax.sip.stack.SIPServerTransaction $r2;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask timerTask>;

        if r1 == null goto label1;

        $r2 = r1.<gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask: gov.nist.javax.sip.stack.SIPServerTransaction transaction>;

        return $r2;

     label1:
        return null;
    }

    private void setLocalSequenceNumber(long)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        long l0, $l1, $l3;
        gov.nist.javax.sip.stack.SIPTransactionStack $r1, $r3;
        boolean $z0;
        byte $b2;
        java.lang.RuntimeException $r2;
        gov.nist.core.StackLogger $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        l0 := @parameter0: long;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r1.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r4 = virtualinvoke $r3.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setLocalSequenceNumber: original  ");

        $l3 = r0.<gov.nist.javax.sip.stack.SIPDialog: long localSequenceNumber>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" new  = ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r10);

     label1:
        $l1 = r0.<gov.nist.javax.sip.stack.SIPDialog: long localSequenceNumber>;

        $b2 = l0 cmp $l1;

        if $b2 > 0 goto label2;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Sequence number should not decrease !");

        throw $r2;

     label2:
        r0.<gov.nist.javax.sip.stack.SIPDialog: long localSequenceNumber> = l0;

        return;
    }

    public void setRemoteSequenceNumber(long)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        long l0;
        gov.nist.javax.sip.stack.SIPTransactionStack $r1, $r2;
        boolean $z0;
        gov.nist.core.StackLogger $r3;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        l0 := @parameter0: long;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r1.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r3 = virtualinvoke $r2.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setRemoteSeqno ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r3.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r9);

     label1:
        r0.<gov.nist.javax.sip.stack.SIPDialog: long remoteSequenceNumber> = l0;

        return;
    }

    public void incrementLocalSequenceNumber()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        long $l0, $l1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $l0 = r0.<gov.nist.javax.sip.stack.SIPDialog: long localSequenceNumber>;

        $l1 = $l0 + 1L;

        r0.<gov.nist.javax.sip.stack.SIPDialog: long localSequenceNumber> = $l1;

        return;
    }

    public int getRemoteSequenceNumber()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        long $l0;
        int $i1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $l0 = r0.<gov.nist.javax.sip.stack.SIPDialog: long remoteSequenceNumber>;

        $i1 = (int) $l0;

        return $i1;
    }

    public int getLocalSequenceNumber()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        long $l0;
        int $i1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $l0 = r0.<gov.nist.javax.sip.stack.SIPDialog: long localSequenceNumber>;

        $i1 = (int) $l0;

        return $i1;
    }

    public long getOriginalLocalSequenceNumber()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        long $l0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $l0 = r0.<gov.nist.javax.sip.stack.SIPDialog: long originalLocalSequenceNumber>;

        return $l0;
    }

    public long getLocalSeqNumber()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        long $l0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $l0 = r0.<gov.nist.javax.sip.stack.SIPDialog: long localSequenceNumber>;

        return $l0;
    }

    public long getRemoteSeqNumber()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        long $l0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $l0 = r0.<gov.nist.javax.sip.stack.SIPDialog: long remoteSequenceNumber>;

        return $l0;
    }

    public java.lang.String getLocalTag()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        java.lang.String $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String myTag>;

        return $r1;
    }

    public java.lang.String getRemoteTag()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        java.lang.String $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String hisTag>;

        return $r1;
    }

    private void setLocalTag(java.lang.String)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        java.lang.String r1, $r9, $r11;
        gov.nist.javax.sip.stack.SIPTransactionStack $r2, $r3, $r12;
        boolean $z0;
        gov.nist.core.StackLogger $r4, $r13;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r10;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r2.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r4 = virtualinvoke $r3.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("set Local tag ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r9 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String dialogId>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r11);

        $r12 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r13 = virtualinvoke $r12.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r13.<gov.nist.core.StackLogger: void logStackTrace()>();

     label1:
        r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String myTag> = r1;

        return;
    }

    public void delete()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        int $i0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $i0 = <gov.nist.javax.sip.stack.SIPDialog: int TERMINATED_STATE>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setState(int)>($i0);

        return;
    }

    public javax.sip.header.CallIdHeader getCallId()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        javax.sip.header.CallIdHeader $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.header.CallIdHeader callIdHeader>;

        return $r1;
    }

    private void setCallId(gov.nist.javax.sip.message.SIPRequest)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.message.SIPRequest r1;
        javax.sip.header.CallIdHeader $r2;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: gov.nist.javax.sip.message.SIPRequest;

        $r2 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CallIdHeader getCallId()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.header.CallIdHeader callIdHeader> = $r2;

        return;
    }

    public javax.sip.address.Address getLocalParty()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        javax.sip.address.Address $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address localParty>;

        return $r1;
    }

    private void setLocalParty(gov.nist.javax.sip.message.SIPMessage)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.message.SIPMessage r1;
        boolean $z0;
        javax.sip.header.ToHeader $r2;
        javax.sip.address.Address $r3, $r5;
        javax.sip.header.FromHeader $r4;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: gov.nist.javax.sip.message.SIPMessage;

        $z0 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isServer()>();

        if $z0 != 0 goto label1;

        $r4 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.FromHeader getFrom()>();

        $r5 = interfaceinvoke $r4.<javax.sip.header.FromHeader: javax.sip.address.Address getAddress()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address localParty> = $r5;

        goto label2;

     label1:
        $r2 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ToHeader getTo()>();

        $r3 = interfaceinvoke $r2.<javax.sip.header.ToHeader: javax.sip.address.Address getAddress()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address localParty> = $r3;

     label2:
        return;
    }

    public javax.sip.address.Address getRemoteParty()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.stack.SIPTransactionStack $r1, $r3;
        boolean $z0;
        javax.sip.address.Address $r2, $r7;
        gov.nist.core.StackLogger $r4;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.lang.String $r9;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r1.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r4 = virtualinvoke $r3.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("gettingRemoteParty ");

        $r7 = r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address remoteParty>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r9);

     label1:
        $r2 = r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address remoteParty>;

        return $r2;
    }

    public javax.sip.address.Address getRemoteTarget()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        javax.sip.address.Address $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address remoteTarget>;

        return $r1;
    }

    public javax.sip.DialogState getState()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        int $i0, $i1;
        javax.sip.DialogState $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $i0 = r0.<gov.nist.javax.sip.stack.SIPDialog: int dialogState>;

        if $i0 != -1 goto label1;

        return null;

     label1:
        $i1 = r0.<gov.nist.javax.sip.stack.SIPDialog: int dialogState>;

        $r1 = staticinvoke <javax.sip.DialogState: javax.sip.DialogState getObject(int)>($i1);

        return $r1;
    }

    public boolean isSecure()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $z0 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean firstTransactionSecure>;

        return $z0;
    }

    public void sendAck(javax.sip.message.Request) throws javax.sip.SipException
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        javax.sip.message.Request r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: javax.sip.message.Request;

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void sendAck(javax.sip.message.Request,boolean)>(r1, 1);

        return;
    }

    public javax.sip.message.Request createRequest(java.lang.String) throws javax.sip.SipException
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        java.lang.String r1, $r6;
        boolean $z0, $z1;
        javax.sip.SipException $r2, $r8;
        java.lang.StringBuilder $r3, $r4, $r5;
        gov.nist.javax.sip.message.SIPResponse $r7, $r9;
        javax.sip.message.Request $r10;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("ACK");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("PRACK");

        if $z1 == 0 goto label2;

     label1:
        $r2 = new javax.sip.SipException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid method specified for createRequest:");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<javax.sip.SipException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label2:
        $r7 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPResponse lastResponse>;

        if $r7 == null goto label3;

        $r9 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPResponse lastResponse>;

        $r10 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.message.Request createRequest(java.lang.String,gov.nist.javax.sip.message.SIPResponse)>(r1, $r9);

        return $r10;

     label3:
        $r8 = new javax.sip.SipException;

        specialinvoke $r8.<javax.sip.SipException: void <init>(java.lang.String)>("Dialog not yet established -- no response!");

        throw $r8;
    }

    private javax.sip.message.Request createRequest(java.lang.String, gov.nist.javax.sip.message.SIPResponse) throws javax.sip.SipException
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        java.lang.String r1, $r14, $r21, $r28, $r36, $r37, $r38, $r39, $r40, $r51, $r53, $r58, $r60;
        gov.nist.javax.sip.message.SIPResponse r2;
        gov.nist.javax.sip.header.CSeq r3, $r25, r78;
        java.lang.Exception r4, $r75;
        gov.nist.javax.sip.header.Via r5, $r27, $r50, $r57;
        gov.nist.javax.sip.header.From r6, $r30;
        gov.nist.javax.sip.header.To r7, $r33;
        gov.nist.javax.sip.message.SIPRequest r8;
        javax.sip.header.ContactHeader r9;
        java.lang.NullPointerException $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        javax.sip.DialogState $r11, $r19, $r20, $r67;
        javax.sip.SipException $r12, $r54, $r73;
        java.lang.StringBuilder $r13, $r15, $r16, $r17, $r18, $r52, $r55, $r56, $r59, $r63, $r64;
        int $i0, $i1, $i5, $i6;
        javax.sip.address.Address $r22, $r24, $r31, $r34, $r44, $r66;
        javax.sip.address.URI $r23, $r49, $r65;
        java.lang.Object $r26, $r68;
        long $l2, $l3, $l4;
        gov.nist.javax.sip.SipProviderImpl $r29, $r41;
        javax.sip.ListeningPoint $r32, $r46;
        javax.sip.header.CSeqHeader $r35;
        javax.sip.header.EventHeader $r42, $r43;
        gov.nist.javax.sip.ListeningPointImpl $r45, r77;
        gov.nist.javax.sip.stack.SIPTransactionStack $r47, $r61, $r69, $r74;
        javax.sip.address.SipURI $r48;
        gov.nist.core.StackLogger $r62, $r71;
        javax.sip.InvalidArgumentException $r70, r79;
        java.text.ParseException $r72, r80;
        gov.nist.javax.sip.address.SipUri r76;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: gov.nist.javax.sip.message.SIPResponse;

        if r1 == null goto label01;

        if r2 != null goto label02;

     label01:
        $r10 = new java.lang.NullPointerException;

        specialinvoke $r10.<java.lang.NullPointerException: void <init>(java.lang.String)>("null argument");

        throw $r10;

     label02:
        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("CANCEL");

        if $z0 == 0 goto label03;

        $r73 = new javax.sip.SipException;

        specialinvoke $r73.<javax.sip.SipException: void <init>(java.lang.String)>("Dialog.createRequest(): Invalid request");

        throw $r73;

     label03:
        $r11 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        if $r11 == null goto label05;

        $r20 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $i1 = virtualinvoke $r20.<javax.sip.DialogState: int getValue()>();

        $i0 = <gov.nist.javax.sip.stack.SIPDialog: int TERMINATED_STATE>;

        if $i1 != $i0 goto label04;

        $z6 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("BYE");

        if $z6 == 0 goto label05;

     label04:
        $z1 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isServer()>();

        if $z1 == 0 goto label06;

        $r67 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $i6 = virtualinvoke $r67.<javax.sip.DialogState: int getValue()>();

        $i5 = <gov.nist.javax.sip.stack.SIPDialog: int EARLY_STATE>;

        if $i6 != $i5 goto label06;

        $z7 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("BYE");

        if $z7 == 0 goto label06;

     label05:
        $r12 = new javax.sip.SipException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dialog  ");

        $r14 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getDialogId()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not yet established or terminated ");

        $r19 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<javax.sip.SipException: void <init>(java.lang.String)>($r21);

        throw $r12;

     label06:
        $r22 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address getRemoteTarget()>();

        if $r22 == null goto label07;

        $r66 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address getRemoteTarget()>();

        $r65 = interfaceinvoke $r66.<javax.sip.address.Address: javax.sip.address.URI getURI()>();

        $r68 = interfaceinvoke $r65.<javax.sip.address.URI: java.lang.Object clone()>();

        r76 = (gov.nist.javax.sip.address.SipUri) $r68;

        goto label08;

     label07:
        $r24 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address getRemoteParty()>();

        $r23 = interfaceinvoke $r24.<javax.sip.address.Address: javax.sip.address.URI getURI()>();

        $r26 = interfaceinvoke $r23.<javax.sip.address.URI: java.lang.Object clone()>();

        r76 = (gov.nist.javax.sip.address.SipUri) $r26;

        virtualinvoke r76.<gov.nist.javax.sip.address.SipUri: void clearUriParms()>();

     label08:
        $r25 = new gov.nist.javax.sip.header.CSeq;

        specialinvoke $r25.<gov.nist.javax.sip.header.CSeq: void <init>()>();

        r3 = $r25;

     label09:
        virtualinvoke r3.<gov.nist.javax.sip.header.CSeq: void setMethod(java.lang.String)>(r1);

        $l2 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: long getLocalSeqNumber()>();

        virtualinvoke r3.<gov.nist.javax.sip.header.CSeq: void setSeqNumber(long)>($l2);

     label10:
        goto label13;

     label11:
        $r75 := @caughtexception;

        r4 = $r75;

        $r74 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z8 = virtualinvoke $r74.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z8 == 0 goto label12;

        $r69 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r71 = virtualinvoke $r69.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r71.<gov.nist.core.StackLogger: void logError(java.lang.String)>("Unexpected error");

     label12:
        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>(r4);

     label13:
        $r29 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.SipProviderImpl sipProvider>;

        $r27 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.Via getTopmostVia()>();

        $r28 = virtualinvoke $r27.<gov.nist.javax.sip.header.Via: java.lang.String getTransport()>();

        $r32 = virtualinvoke $r29.<gov.nist.javax.sip.SipProviderImpl: javax.sip.ListeningPoint getListeningPoint(java.lang.String)>($r28);

        r77 = (gov.nist.javax.sip.ListeningPointImpl) $r32;

        if r77 != null goto label15;

        $r47 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z5 = virtualinvoke $r47.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z5 == 0 goto label14;

        $r61 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r62 = virtualinvoke $r61.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find listening point for transport ");

        $r57 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.Via getTopmostVia()>();

        $r58 = virtualinvoke $r57.<gov.nist.javax.sip.header.Via: java.lang.String getTransport()>();

        $r59 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r62.<gov.nist.core.StackLogger: void logError(java.lang.String)>($r60);

     label14:
        $r54 = new javax.sip.SipException;

        $r55 = new java.lang.StringBuilder;

        specialinvoke $r55.<java.lang.StringBuilder: void <init>()>();

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot find listening point for transport ");

        $r50 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.Via getTopmostVia()>();

        $r51 = virtualinvoke $r50.<gov.nist.javax.sip.header.Via: java.lang.String getTransport()>();

        $r52 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r51);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r54.<javax.sip.SipException: void <init>(java.lang.String)>($r53);

        throw $r54;

     label15:
        r5 = virtualinvoke r77.<gov.nist.javax.sip.ListeningPointImpl: gov.nist.javax.sip.header.Via getViaHeader()>();

        $r30 = new gov.nist.javax.sip.header.From;

        specialinvoke $r30.<gov.nist.javax.sip.header.From: void <init>()>();

        r6 = $r30;

        $r31 = r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address localParty>;

        virtualinvoke r6.<gov.nist.javax.sip.header.From: void setAddress(javax.sip.address.Address)>($r31);

        $r33 = new gov.nist.javax.sip.header.To;

        specialinvoke $r33.<gov.nist.javax.sip.header.To: void <init>()>();

        r7 = $r33;

        $r34 = r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address remoteParty>;

        virtualinvoke r7.<gov.nist.javax.sip.header.To: void setAddress(javax.sip.address.Address)>($r34);

        r8 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.message.SIPRequest createRequest(gov.nist.javax.sip.address.SipUri,gov.nist.javax.sip.header.Via,gov.nist.javax.sip.header.CSeq,gov.nist.javax.sip.header.From,gov.nist.javax.sip.header.To)>(r76, r5, r3, r6, r7);

        $z2 = staticinvoke <gov.nist.javax.sip.message.SIPRequest: boolean isTargetRefresh(java.lang.String)>(r1);

        if $z2 == 0 goto label16;

        $r41 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.SipProviderImpl sipProvider>;

        $r40 = virtualinvoke r77.<gov.nist.javax.sip.ListeningPointImpl: java.lang.String getTransport()>();

        $r46 = virtualinvoke $r41.<gov.nist.javax.sip.SipProviderImpl: javax.sip.ListeningPoint getListeningPoint(java.lang.String)>($r40);

        $r45 = (gov.nist.javax.sip.ListeningPointImpl) $r46;

        r9 = virtualinvoke $r45.<gov.nist.javax.sip.ListeningPointImpl: javax.sip.header.ContactHeader createContactHeader()>();

        $r44 = interfaceinvoke r9.<javax.sip.header.ContactHeader: javax.sip.address.Address getAddress()>();

        $r49 = interfaceinvoke $r44.<javax.sip.address.Address: javax.sip.address.URI getURI()>();

        $r48 = (javax.sip.address.SipURI) $r49;

        $z4 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isSecure()>();

        interfaceinvoke $r48.<javax.sip.address.SipURI: void setSecure(boolean)>($z4);

        virtualinvoke r8.<gov.nist.javax.sip.message.SIPRequest: void setHeader(javax.sip.header.Header)>(r9);

     label16:
        $r35 = virtualinvoke r8.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CSeqHeader getCSeq()>();

        r78 = (gov.nist.javax.sip.header.CSeq) $r35;

        $l4 = r0.<gov.nist.javax.sip.stack.SIPDialog: long localSequenceNumber>;

        $l3 = $l4 + 1L;

        virtualinvoke r78.<gov.nist.javax.sip.header.CSeq: void setSeqNumber(long)>($l3);

     label17:
        goto label19;

     label18:
        $r70 := @caughtexception;

        r79 = $r70;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>(r79);

     label19:
        $z3 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("SUBSCRIBE");

        if $z3 == 0 goto label20;

        $r43 = r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.header.EventHeader eventHeader>;

        if $r43 == null goto label20;

        $r42 = r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.header.EventHeader eventHeader>;

        virtualinvoke r8.<gov.nist.javax.sip.message.SIPRequest: void addHeader(javax.sip.header.Header)>($r42);

     label20:
        $r39 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>();

        if $r39 == null goto label21;

        $r36 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>();

        virtualinvoke r6.<gov.nist.javax.sip.header.From: void setTag(java.lang.String)>($r36);

        goto label22;

     label21:
        virtualinvoke r6.<gov.nist.javax.sip.header.From: void removeTag()>();

     label22:
        $r38 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getRemoteTag()>();

        if $r38 == null goto label23;

        $r37 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getRemoteTag()>();

        virtualinvoke r7.<gov.nist.javax.sip.header.To: void setTag(java.lang.String)>($r37);

        goto label24;

     label23:
        virtualinvoke r7.<gov.nist.javax.sip.header.To: void removeTag()>();

     label24:
        goto label26;

     label25:
        $r72 := @caughtexception;

        r80 = $r72;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>(r80);

     label26:
        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void updateRequest(gov.nist.javax.sip.message.SIPRequest)>(r8);

        return r8;

        catch java.lang.Exception from label09 to label10 with label11;
        catch javax.sip.InvalidArgumentException from label16 to label17 with label18;
        catch java.text.ParseException from label20 to label24 with label25;
    }

    public void sendRequest(javax.sip.ClientTransaction) throws javax.sip.TransactionDoesNotExistException, javax.sip.SipException
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        javax.sip.ClientTransaction r1;
        boolean $z0, $z1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: javax.sip.ClientTransaction;

        $z0 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isBackToBackUserAgent>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void sendRequest(javax.sip.ClientTransaction,boolean)>(r1, $z1);

        return;
    }

    public void sendRequest(javax.sip.ClientTransaction, boolean) throws javax.sip.TransactionDoesNotExistException, javax.sip.SipException
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        javax.sip.ClientTransaction r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24;
        gov.nist.javax.sip.message.SIPRequest r2;
        gov.nist.javax.sip.header.Via r3, $r19;
        gov.nist.javax.sip.header.To r4;
        java.text.ParseException r5, $r150;
        gov.nist.javax.sip.stack.MessageChannel r6, r7;
        javax.sip.address.Hop r8, r173;
        gov.nist.javax.sip.stack.SIPClientTransaction $r9, $r25, $r27, $r33, $r43, $r45, $r48, $r63, $r146;
        gov.nist.javax.sip.stack.SIPTransactionStack $r10, $r36, $r38, $r42, $r44, $r46, $r54, $r56, $r59, $r61, $r68, $r69, $r74, $r78, $r105, $r106, $r107, $r109, $r122, $r130, $r139, $r142, $r148, $r167, $r169, $r171;
        java.lang.String $r11, $r14, $r16, $r18, $r20, $r22, $r24, $r29, $r30, $r32, $r34, $r35, $r39, $r41, $r49, $r53, $r57, $r66, $r72, $r73, $r83, $r87, $r88, $r89, $r90, $r91, $r92, $r95, $r97, $r99, $r100, $r101, $r103, $r104, $r114, $r118, $r120, $r123, $r125, $r131, $r133, $r144, $r145, $r153, $r159, $r164;
        java.lang.StringBuilder $r12, $r15, $r17, $r50, $r51, $r52, $r64, $r65, $r71, $r75, $r76, $r77, $r80, $r81, $r82, $r84, $r85, $r93, $r96, $r98, $r111, $r112, $r116, $r117, $r119, $r124, $r126, $r127, $r128, $r132, $r135, $r136, $r137, $r138, $r143, $r156, $r157, $r160, $r162, $r163;
        javax.sip.SipException $r13, $r62, $r102, $r108, $r115, $r147, $r152, $r170;
        javax.sip.header.CallIdHeader $r21, $r23, $r113, $r134;
        javax.sip.header.FromHeader $r26;
        gov.nist.javax.sip.stack.SIPTransaction $r28;
        javax.sip.header.ToHeader $r31;
        gov.nist.javax.sip.SipProviderImpl $r37, $r58;
        int $i0, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        javax.sip.ListeningPoint $r40, $r67;
        long $l1, $l2, $l5;
        javax.sip.header.CSeqHeader $r47;
        gov.nist.core.StackLogger $r55, $r70, $r79, $r86, $r94, $r110, $r121, $r129, $r140, $r161, $r165, $r168;
        javax.sip.address.Router $r60;
        java.lang.NullPointerException $r141;
        java.io.IOException $r149, r176;
        java.lang.Exception $r151, r174;
        gov.nist.javax.sip.stack.SIPDialog$ReInviteSender $r154;
        java.lang.Thread $r155;
        javax.sip.message.Request $r158;
        javax.sip.InvalidArgumentException $r166, r175;
        gov.nist.javax.sip.header.From r172;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: javax.sip.ClientTransaction;

        z0 := @parameter1: boolean;

        if z0 != 0 goto label01;

        $r158 = interfaceinvoke r1.<javax.sip.ClientTransaction: javax.sip.message.Request getRequest()>();

        $r153 = interfaceinvoke $r158.<javax.sip.message.Request: java.lang.String getMethod()>();

        $z23 = virtualinvoke $r153.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z23 == 0 goto label01;

        $r155 = new java.lang.Thread;

        $r154 = new gov.nist.javax.sip.stack.SIPDialog$ReInviteSender;

        specialinvoke $r154.<gov.nist.javax.sip.stack.SIPDialog$ReInviteSender: void <init>(gov.nist.javax.sip.stack.SIPDialog,javax.sip.ClientTransaction)>(r0, r1);

        specialinvoke $r155.<java.lang.Thread: void <init>(java.lang.Runnable)>($r154);

        virtualinvoke $r155.<java.lang.Thread: void start()>();

        return;

     label01:
        $r9 = (gov.nist.javax.sip.stack.SIPClientTransaction) r1;

        r2 = virtualinvoke $r9.<gov.nist.javax.sip.stack.SIPClientTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r10 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z1 = virtualinvoke $r10.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label02;

        $r142 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r161 = virtualinvoke $r142.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r160 = new java.lang.StringBuilder;

        specialinvoke $r160.<java.lang.StringBuilder: void <init>()>();

        $r163 = virtualinvoke $r160.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dialog.sendRequest  dialog = ");

        $r162 = virtualinvoke $r163.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r157 = virtualinvoke $r162.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\ndialogRequest = \n");

        $r156 = virtualinvoke $r157.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r159 = virtualinvoke $r156.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r161.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r159);

     label02:
        if r1 != null goto label03;

        $r141 = new java.lang.NullPointerException;

        specialinvoke $r141.<java.lang.NullPointerException: void <init>(java.lang.String)>("null parameter");

        throw $r141;

     label03:
        $r11 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("ACK");

        if $z2 != 0 goto label04;

        $r18 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z3 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>("CANCEL");

        if $z3 == 0 goto label05;

     label04:
        $r13 = new javax.sip.SipException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad Request Method. ");

        $r14 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<javax.sip.SipException: void <init>(java.lang.String)>($r16);

        throw $r13;

     label05:
        $z4 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean byeSent>;

        if $z4 == 0 goto label07;

        $z20 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isTerminatedOnBye()>();

        if $z20 == 0 goto label07;

        $r145 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z22 = virtualinvoke $r145.<java.lang.String: boolean equals(java.lang.Object)>("BYE");

        if $z22 != 0 goto label07;

        $r148 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z21 = virtualinvoke $r148.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z21 == 0 goto label06;

        $r139 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r140 = virtualinvoke $r139.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r137 = new java.lang.StringBuilder;

        specialinvoke $r137.<java.lang.StringBuilder: void <init>()>();

        $r138 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BYE already sent for ");

        $r143 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r144 = virtualinvoke $r143.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r140.<gov.nist.core.StackLogger: void logError(java.lang.String)>($r144);

     label06:
        $r147 = new javax.sip.SipException;

        specialinvoke $r147.<javax.sip.SipException: void <init>(java.lang.String)>("Cannot send request; BYE already sent");

        throw $r147;

     label07:
        $r19 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.Via getTopmostVia()>();

        if $r19 != null goto label08;

        $r146 = (gov.nist.javax.sip.stack.SIPClientTransaction) r1;

        r3 = virtualinvoke $r146.<gov.nist.javax.sip.stack.SIPClientTransaction: gov.nist.javax.sip.header.Via getOutgoingViaHeader()>();

        virtualinvoke r2.<gov.nist.javax.sip.message.SIPRequest: void addHeader(javax.sip.header.Header)>(r3);

     label08:
        $r21 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.header.CallIdHeader getCallId()>();

        $r20 = interfaceinvoke $r21.<javax.sip.header.CallIdHeader: java.lang.String getCallId()>();

        $r23 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CallIdHeader getCallId()>();

        $r22 = interfaceinvoke $r23.<javax.sip.header.CallIdHeader: java.lang.String getCallId()>();

        $z5 = virtualinvoke $r20.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r22);

        if $z5 != 0 goto label10;

        $r107 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z18 = virtualinvoke $r107.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z18 == 0 goto label09;

        $r109 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r110 = virtualinvoke $r109.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r111 = new java.lang.StringBuilder;

        specialinvoke $r111.<java.lang.StringBuilder: void <init>()>();

        $r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CallID ");

        $r113 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.header.CallIdHeader getCallId()>();

        $r132 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r113);

        $r131 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r110.<gov.nist.core.StackLogger: void logError(java.lang.String)>($r131);

        $r130 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r129 = virtualinvoke $r130.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r136 = new java.lang.StringBuilder;

        specialinvoke $r136.<java.lang.StringBuilder: void <init>()>();

        $r135 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RequestCallID = ");

        $r134 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CallIdHeader getCallId()>();

        $r133 = interfaceinvoke $r134.<javax.sip.header.CallIdHeader: java.lang.String getCallId()>();

        $r124 = virtualinvoke $r135.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r133);

        $r123 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r129.<gov.nist.core.StackLogger: void logError(java.lang.String)>($r123);

        $r122 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r121 = virtualinvoke $r122.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r128 = new java.lang.StringBuilder;

        specialinvoke $r128.<java.lang.StringBuilder: void <init>()>();

        $r127 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dialog =  ");

        $r126 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r125 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r121.<gov.nist.core.StackLogger: void logError(java.lang.String)>($r125);

     label09:
        $r108 = new javax.sip.SipException;

        specialinvoke $r108.<javax.sip.SipException: void <init>(java.lang.String)>("Bad call ID in request");

        throw $r108;

     label10:
        $r27 = (gov.nist.javax.sip.stack.SIPClientTransaction) r1;

        $r24 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String dialogId>;

        virtualinvoke $r27.<gov.nist.javax.sip.stack.SIPClientTransaction: void setDialog(gov.nist.javax.sip.stack.SIPDialog,java.lang.String)>(r0, $r24);

        $r28 = (gov.nist.javax.sip.stack.SIPTransaction) r1;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void addTransaction(gov.nist.javax.sip.stack.SIPTransaction)>($r28);

        $r25 = (gov.nist.javax.sip.stack.SIPClientTransaction) r1;

        $r25.<gov.nist.javax.sip.stack.SIPClientTransaction: boolean isMapped> = 1;

        $r26 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.FromHeader getFrom()>();

        r172 = (gov.nist.javax.sip.header.From) $r26;

        $r31 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.ToHeader getTo()>();

        r4 = (gov.nist.javax.sip.header.To) $r31;

        $r32 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>();

        if $r32 == null goto label11;

        $r100 = virtualinvoke r172.<gov.nist.javax.sip.header.From: java.lang.String getTag()>();

        if $r100 == null goto label11;

        $r99 = virtualinvoke r172.<gov.nist.javax.sip.header.From: java.lang.String getTag()>();

        $r114 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>();

        $z19 = virtualinvoke $r99.<java.lang.String: boolean equals(java.lang.Object)>($r114);

        if $z19 != 0 goto label11;

        $r115 = new javax.sip.SipException;

        $r116 = new java.lang.StringBuilder;

        specialinvoke $r116.<java.lang.StringBuilder: void <init>()>();

        $r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("From tag mismatch expecting  ");

        $r118 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>();

        $r119 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r118);

        $r120 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r115.<javax.sip.SipException: void <init>(java.lang.String)>($r120);

        throw $r115;

     label11:
        $r29 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getRemoteTag()>();

        if $r29 == null goto label12;

        $r101 = virtualinvoke r4.<gov.nist.javax.sip.header.To: java.lang.String getTag()>();

        if $r101 == null goto label12;

        $r104 = virtualinvoke r4.<gov.nist.javax.sip.header.To: java.lang.String getTag()>();

        $r103 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getRemoteTag()>();

        $z16 = virtualinvoke $r104.<java.lang.String: boolean equals(java.lang.Object)>($r103);

        if $z16 != 0 goto label12;

        $r105 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z17 = virtualinvoke $r105.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z17 == 0 goto label12;

        $r106 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r94 = virtualinvoke $r106.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r93 = new java.lang.StringBuilder;

        specialinvoke $r93.<java.lang.StringBuilder: void <init>()>();

        $r96 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("To header tag mismatch expecting ");

        $r95 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getRemoteTag()>();

        $r98 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r95);

        $r97 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r94.<gov.nist.core.StackLogger: void logWarning(java.lang.String)>($r97);

     label12:
        $r30 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>();

        if $r30 != null goto label14;

        $r89 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z15 = virtualinvoke $r89.<java.lang.String: boolean equals(java.lang.Object)>("NOTIFY");

        if $z15 == 0 goto label14;

        $r88 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getMethod()>();

        $z14 = virtualinvoke $r88.<java.lang.String: boolean equals(java.lang.Object)>("SUBSCRIBE");

        if $z14 != 0 goto label13;

        $r102 = new javax.sip.SipException;

        specialinvoke $r102.<javax.sip.SipException: void <init>(java.lang.String)>("Trying to send NOTIFY without SUBSCRIBE Dialog!");

        throw $r102;

     label13:
        $r87 = virtualinvoke r172.<gov.nist.javax.sip.header.From: java.lang.String getTag()>();

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setLocalTag(java.lang.String)>($r87);

     label14:
        $r34 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>();

        if $r34 == null goto label15;

        $r90 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>();

        virtualinvoke r172.<gov.nist.javax.sip.header.From: void setTag(java.lang.String)>($r90);

     label15:
        $r35 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getRemoteTag()>();

        if $r35 == null goto label16;

        $r91 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getRemoteTag()>();

        virtualinvoke r4.<gov.nist.javax.sip.header.To: void setTag(java.lang.String)>($r91);

     label16:
        goto label18;

     label17:
        $r150 := @caughtexception;

        r5 = $r150;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>(r5);

     label18:
        $r33 = (gov.nist.javax.sip.stack.SIPClientTransaction) r1;

        r173 = virtualinvoke $r33.<gov.nist.javax.sip.stack.SIPClientTransaction: javax.sip.address.Hop getNextHop()>();

        $r38 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z6 = virtualinvoke $r38.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z6 == 0 goto label19;

        $r74 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r86 = virtualinvoke $r74.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r85 = new java.lang.StringBuilder;

        specialinvoke $r85.<java.lang.StringBuilder: void <init>()>();

        $r84 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Using hop = ");

        $r83 = interfaceinvoke r173.<javax.sip.address.Hop: java.lang.String getHost()>();

        $r82 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r83);

        $r81 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : ");

        $i12 = interfaceinvoke r173.<javax.sip.address.Hop: int getPort()>();

        $r80 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r92 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r86.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r92);

     label19:
        $r36 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r37 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.SipProviderImpl getSipProvider()>();

        $r41 = interfaceinvoke r173.<javax.sip.address.Hop: java.lang.String getTransport()>();

        $r40 = virtualinvoke $r37.<gov.nist.javax.sip.SipProviderImpl: javax.sip.ListeningPoint getListeningPoint(java.lang.String)>($r41);

        $r39 = interfaceinvoke $r40.<javax.sip.ListeningPoint: java.lang.String getIPAddress()>();

        $i0 = r0.<gov.nist.javax.sip.stack.SIPDialog: int firstTransactionPort>;

        r6 = virtualinvoke $r36.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.MessageChannel createRawMessageChannel(java.lang.String,int,javax.sip.address.Hop)>($r39, $i0, r173);

        $r43 = (gov.nist.javax.sip.stack.SIPClientTransaction) r1;

        r7 = virtualinvoke $r43.<gov.nist.javax.sip.stack.SIPClientTransaction: gov.nist.javax.sip.stack.MessageChannel getMessageChannel()>();

        virtualinvoke r7.<gov.nist.javax.sip.stack.MessageChannel: void uncache()>();

        $r42 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z8 = $r42.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean cacheClientConnections>;

        if $z8 != 0 goto label20;

        $i9 = r7.<gov.nist.javax.sip.stack.MessageChannel: int useCount>;

        $i10 = $i9 - 1;

        r7.<gov.nist.javax.sip.stack.MessageChannel: int useCount> = $i10;

        $r68 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z13 = virtualinvoke $r68.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z13 == 0 goto label20;

        $r78 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r79 = virtualinvoke $r78.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r76 = new java.lang.StringBuilder;

        specialinvoke $r76.<java.lang.StringBuilder: void <init>()>();

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("oldChannel: useCount ");

        $i11 = r7.<gov.nist.javax.sip.stack.MessageChannel: int useCount>;

        $r75 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r73 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r79.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r73);

     label20:
        if r6 != null goto label24;

        $r59 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z12 = virtualinvoke $r59.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z12 == 0 goto label21;

        $r69 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r70 = virtualinvoke $r69.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r70.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Null message channel using outbound proxy !");

     label21:
        $r61 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r60 = virtualinvoke $r61.<gov.nist.javax.sip.stack.SIPTransactionStack: javax.sip.address.Router getRouter(gov.nist.javax.sip.message.SIPRequest)>(r2);

        r8 = interfaceinvoke $r60.<javax.sip.address.Router: javax.sip.address.Hop getOutboundProxy()>();

        if r8 != null goto label22;

        $r62 = new javax.sip.SipException;

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        $r64 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No route found! hop=");

        $r71 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r173);

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r62.<javax.sip.SipException: void <init>(java.lang.String)>($r72);

        throw $r62;

     label22:
        $r56 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r58 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.SipProviderImpl getSipProvider()>();

        $r57 = interfaceinvoke r8.<javax.sip.address.Hop: java.lang.String getTransport()>();

        $r67 = virtualinvoke $r58.<gov.nist.javax.sip.SipProviderImpl: javax.sip.ListeningPoint getListeningPoint(java.lang.String)>($r57);

        $r66 = interfaceinvoke $r67.<javax.sip.ListeningPoint: java.lang.String getIPAddress()>();

        $i8 = r0.<gov.nist.javax.sip.stack.SIPDialog: int firstTransactionPort>;

        r6 = virtualinvoke $r56.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.MessageChannel createRawMessageChannel(java.lang.String,int,javax.sip.address.Hop)>($r66, $i8, r8);

        if r6 == null goto label23;

        $r63 = (gov.nist.javax.sip.stack.SIPClientTransaction) r1;

        virtualinvoke $r63.<gov.nist.javax.sip.stack.SIPClientTransaction: void setEncapsulatedChannel(gov.nist.javax.sip.stack.MessageChannel)>(r6);

     label23:
        goto label25;

     label24:
        $r45 = (gov.nist.javax.sip.stack.SIPClientTransaction) r1;

        virtualinvoke $r45.<gov.nist.javax.sip.stack.SIPClientTransaction: void setEncapsulatedChannel(gov.nist.javax.sip.stack.MessageChannel)>(r6);

        $r44 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z7 = virtualinvoke $r44.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z7 == 0 goto label25;

        $r54 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r55 = virtualinvoke $r54.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("using message channel ");

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r55.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r53);

     label25:
        if r6 == null goto label26;

        $i6 = r6.<gov.nist.javax.sip.stack.MessageChannel: int useCount>;

        $i7 = $i6 + 1;

        r6.<gov.nist.javax.sip.stack.MessageChannel: int useCount> = $i7;

     label26:
        $r46 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z9 = $r46.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean cacheClientConnections>;

        if $z9 != 0 goto label27;

        if r7 == null goto label27;

        $i4 = r7.<gov.nist.javax.sip.stack.MessageChannel: int useCount>;

        if $i4 > 0 goto label27;

        virtualinvoke r7.<gov.nist.javax.sip.stack.MessageChannel: void close()>();

     label27:
        goto label30;

     label28:
        $r151 := @caughtexception;

        r174 = $r151;

        $r169 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z24 = virtualinvoke $r169.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z24 == 0 goto label29;

        $r171 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r165 = virtualinvoke $r171.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r165.<gov.nist.core.StackLogger: void logException(java.lang.Throwable)>(r174);

     label29:
        $r170 = new javax.sip.SipException;

        specialinvoke $r170.<javax.sip.SipException: void <init>(java.lang.String,java.lang.Throwable)>("Could not create message channel", r174);

        throw $r170;

     label30:
        $l2 = r0.<gov.nist.javax.sip.stack.SIPDialog: long localSequenceNumber>;

        $l1 = $l2 + 1L;

        r0.<gov.nist.javax.sip.stack.SIPDialog: long localSequenceNumber> = $l1;

        $r47 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CSeqHeader getCSeq()>();

        $l5 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: long getLocalSeqNumber()>();

        interfaceinvoke $r47.<javax.sip.header.CSeqHeader: void setSeqNumber(long)>($l5);

     label31:
        goto label33;

     label32:
        $r166 := @caughtexception;

        r175 = $r166;

        $r167 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r168 = virtualinvoke $r167.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r164 = virtualinvoke r175.<javax.sip.InvalidArgumentException: java.lang.String getMessage()>();

        interfaceinvoke $r168.<gov.nist.core.StackLogger: void logFatalError(java.lang.String)>($r164);

     label33:
        $r48 = (gov.nist.javax.sip.stack.SIPClientTransaction) r1;

        virtualinvoke $r48.<gov.nist.javax.sip.stack.SIPClientTransaction: void sendMessage(gov.nist.javax.sip.message.SIPMessage)>(r2);

        $r49 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z10 = virtualinvoke $r49.<java.lang.String: boolean equals(java.lang.Object)>("BYE");

        if $z10 == 0 goto label34;

        r0.<gov.nist.javax.sip.stack.SIPDialog: boolean byeSent> = 1;

        $z11 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isTerminatedOnBye()>();

        if $z11 == 0 goto label34;

        $i3 = <javax.sip.DialogState: int _TERMINATED>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setState(int)>($i3);

     label34:
        goto label36;

     label35:
        $r149 := @caughtexception;

        r176 = $r149;

        $r152 = new javax.sip.SipException;

        specialinvoke $r152.<javax.sip.SipException: void <init>(java.lang.String,java.lang.Throwable)>("error sending message", r176);

        throw $r152;

     label36:
        return;

        catch java.text.ParseException from label14 to label16 with label17;
        catch java.lang.Exception from label19 to label27 with label28;
        catch javax.sip.InvalidArgumentException from label30 to label31 with label32;
        catch java.io.IOException from label33 to label34 with label35;
    }

    private boolean toRetransmitFinalResponse(int)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        i0 := @parameter0: int;

        $i1 = r0.<gov.nist.javax.sip.stack.SIPDialog: int retransmissionTicksLeft>;

        $i2 = $i1 - 1;

        r0.<gov.nist.javax.sip.stack.SIPDialog: int retransmissionTicksLeft> = $i2;

        if $i2 != 0 goto label3;

        $i3 = r0.<gov.nist.javax.sip.stack.SIPDialog: int prevRetransmissionTicks>;

        $i4 = 2 * $i3;

        if $i4 > i0 goto label1;

        $i7 = r0.<gov.nist.javax.sip.stack.SIPDialog: int prevRetransmissionTicks>;

        $i8 = 2 * $i7;

        r0.<gov.nist.javax.sip.stack.SIPDialog: int retransmissionTicksLeft> = $i8;

        goto label2;

     label1:
        $i5 = r0.<gov.nist.javax.sip.stack.SIPDialog: int prevRetransmissionTicks>;

        r0.<gov.nist.javax.sip.stack.SIPDialog: int retransmissionTicksLeft> = $i5;

     label2:
        $i6 = r0.<gov.nist.javax.sip.stack.SIPDialog: int retransmissionTicksLeft>;

        r0.<gov.nist.javax.sip.stack.SIPDialog: int prevRetransmissionTicks> = $i6;

        return 1;

     label3:
        return 0;
    }

    protected void setRetransmissionTicks()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r0.<gov.nist.javax.sip.stack.SIPDialog: int retransmissionTicksLeft> = 1;

        r0.<gov.nist.javax.sip.stack.SIPDialog: int prevRetransmissionTicks> = 1;

        return;
    }

    public void resendAck() throws javax.sip.SipException
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.header.TimeStamp r1, $r8;
        gov.nist.javax.sip.message.SIPRequest $r3, $r4, $r6, $r9;
        javax.sip.header.Header $r5;
        gov.nist.javax.sip.stack.SIPTransactionStack $r7;
        boolean $z0;
        long $l0;
        float $f0;
        javax.sip.InvalidArgumentException $r10;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r3 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest getLastAckSent()>();

        if $r3 == null goto label5;

        $r4 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest getLastAckSent()>();

        $r5 = virtualinvoke $r4.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.Header getHeader(java.lang.String)>("Timestamp");

        if $r5 == null goto label4;

        $r7 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = $r7.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean generateTimeStampHeader>;

        if $z0 == 0 goto label4;

        $r8 = new gov.nist.javax.sip.header.TimeStamp;

        specialinvoke $r8.<gov.nist.javax.sip.header.TimeStamp: void <init>()>();

        r1 = $r8;

     label1:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $f0 = (float) $l0;

        virtualinvoke r1.<gov.nist.javax.sip.header.TimeStamp: void setTimeStamp(float)>($f0);

        $r9 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest getLastAckSent()>();

        virtualinvoke $r9.<gov.nist.javax.sip.message.SIPRequest: void setHeader(javax.sip.header.Header)>(r1);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

     label4:
        $r6 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest getLastAckSent()>();

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void sendAck(javax.sip.message.Request,boolean)>($r6, 0);

     label5:
        return;

        catch javax.sip.InvalidArgumentException from label1 to label2 with label3;
    }

    public java.lang.String getMethod()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        java.lang.String $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String method>;

        return $r1;
    }

    protected void startTimer(gov.nist.javax.sip.stack.SIPServerTransaction)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.stack.SIPServerTransaction r1, $r20;
        java.lang.Throwable r2, $r28;
        gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask $r3, $r5, $r6, $r9, $r10, $r17;
        gov.nist.javax.sip.stack.SIPTransactionStack $r4, $r7, $r11, $r19, $r21;
        boolean $z0, $z1;
        java.util.Timer $r8;
        gov.nist.core.StackLogger $r12, $r23;
        java.lang.StringBuilder $r13, $r14, $r15, $r22, $r25, $r27;
        java.lang.String $r16, $r18, $r24, $r26;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: gov.nist.javax.sip.stack.SIPServerTransaction;

        $r3 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask timerTask>;

        if $r3 == null goto label2;

        $r17 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask timerTask>;

        $r20 = $r17.<gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask: gov.nist.javax.sip.stack.SIPServerTransaction transaction>;

        if $r20 != r1 goto label2;

        $r19 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z1 = virtualinvoke $r19.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label1;

        $r21 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r23 = virtualinvoke $r21.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Timer already running for ");

        $r24 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getDialogId()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r23.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r26);

     label1:
        return;

     label2:
        $r4 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r4.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label3;

        $r11 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r12 = virtualinvoke $r11.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Starting dialog timer for ");

        $r16 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getDialogId()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r18);

     label3:
        r0.<gov.nist.javax.sip.stack.SIPDialog: boolean ackSeen> = 0;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void acquireTimerTaskSem()>();

     label4:
        $r5 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask timerTask>;

        if $r5 == null goto label5;

        $r10 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask timerTask>;

        $r10.<gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask: gov.nist.javax.sip.stack.SIPServerTransaction transaction> = r1;

        goto label6;

     label5:
        $r6 = new gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask;

        specialinvoke $r6.<gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask: void <init>(gov.nist.javax.sip.stack.SIPDialog,gov.nist.javax.sip.stack.SIPServerTransaction)>(r0, r1);

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask timerTask> = $r6;

        $r7 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r8 = virtualinvoke $r7.<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Timer getTimer()>();

        $r9 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask timerTask>;

        virtualinvoke $r8.<java.util.Timer: void schedule(java.util.TimerTask,long,long)>($r9, 500L, 500L);

     label6:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void releaseTimerTaskSem()>();

        goto label9;

     label7:
        $r28 := @caughtexception;

        r2 = $r28;

     label8:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void releaseTimerTaskSem()>();

        throw r2;

     label9:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setRetransmissionTicks()>();

        return;

        catch java.lang.Throwable from label4 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    protected void stopTimer()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        java.lang.Throwable r1, $r4;
        gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask $r2, $r3;
        java.lang.Exception $r5;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

     label1:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void acquireTimerTaskSem()>();

     label2:
        $r2 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask timerTask>;

        if $r2 == null goto label3;

        $r3 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask timerTask>;

        virtualinvoke $r3.<gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask: boolean cancel()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask timerTask> = null;

     label3:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void releaseTimerTaskSem()>();

        goto label6;

     label4:
        $r4 := @caughtexception;

        r1 = $r4;

     label5:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void releaseTimerTaskSem()>();

        throw r1;

     label6:
        goto label8;

     label7:
        $r5 := @caughtexception;

     label8:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
        catch java.lang.Exception from label1 to label6 with label7;
    }

    public javax.sip.message.Request createPrack(javax.sip.message.Response) throws javax.sip.DialogDoesNotExistException, javax.sip.SipException
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        javax.sip.message.Response r1;
        gov.nist.javax.sip.message.SIPResponse r2, $r13;
        gov.nist.javax.sip.message.SIPRequest r3;
        java.lang.String r4, $r18;
        gov.nist.javax.sip.header.RAck r5, $r17;
        gov.nist.javax.sip.header.RSeq r6, $r12;
        javax.sip.DialogState $r7, $r9, $r10;
        javax.sip.DialogDoesNotExistException $r8;
        boolean $z0;
        javax.sip.header.Header $r11, $r16;
        javax.sip.message.Request $r14;
        javax.sip.header.ToHeader $r15;
        javax.sip.header.CSeqHeader $r19, $r20;
        long $l0, $l1, $l3;
        int $i2;
        javax.sip.SipException $r21;
        java.lang.Exception $r22, r23;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: javax.sip.message.Response;

        $r7 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        if $r7 == null goto label1;

        $r9 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $r10 = <javax.sip.DialogState: javax.sip.DialogState TERMINATED>;

        $z0 = virtualinvoke $r9.<javax.sip.DialogState: boolean equals(java.lang.Object)>($r10);

        if $z0 == 0 goto label2;

     label1:
        $r8 = new javax.sip.DialogDoesNotExistException;

        specialinvoke $r8.<javax.sip.DialogDoesNotExistException: void <init>(java.lang.String)>("Dialog not initialized or terminated");

        throw $r8;

     label2:
        $r11 = interfaceinvoke r1.<javax.sip.message.Response: javax.sip.header.Header getHeader(java.lang.String)>("RSeq");

        $r12 = (gov.nist.javax.sip.header.RSeq) $r11;

        if $r12 != null goto label3;

        $r21 = new javax.sip.SipException;

        specialinvoke $r21.<javax.sip.SipException: void <init>(java.lang.String)>("Missing RSeq Header");

        throw $r21;

     label3:
        r2 = (gov.nist.javax.sip.message.SIPResponse) r1;

        $r13 = (gov.nist.javax.sip.message.SIPResponse) r1;

        $r14 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.message.Request createRequest(java.lang.String,gov.nist.javax.sip.message.SIPResponse)>("PRACK", $r13);

        r3 = (gov.nist.javax.sip.message.SIPRequest) $r14;

        $r15 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.ToHeader getTo()>();

        r4 = interfaceinvoke $r15.<javax.sip.header.ToHeader: java.lang.String getTag()>();

        virtualinvoke r3.<gov.nist.javax.sip.message.SIPRequest: void setToTag(java.lang.String)>(r4);

        $r17 = new gov.nist.javax.sip.header.RAck;

        specialinvoke $r17.<gov.nist.javax.sip.header.RAck: void <init>()>();

        r5 = $r17;

        $r16 = interfaceinvoke r1.<javax.sip.message.Response: javax.sip.header.Header getHeader(java.lang.String)>("RSeq");

        r6 = (gov.nist.javax.sip.header.RSeq) $r16;

        $r19 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        $r18 = interfaceinvoke $r19.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        virtualinvoke r5.<gov.nist.javax.sip.header.RAck: void setMethod(java.lang.String)>($r18);

        $r20 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        $l0 = interfaceinvoke $r20.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        $i2 = (int) $l0;

        $l1 = (long) $i2;

        virtualinvoke r5.<gov.nist.javax.sip.header.RAck: void setCSequenceNumber(long)>($l1);

        $l3 = virtualinvoke r6.<gov.nist.javax.sip.header.RSeq: long getSeqNumber()>();

        virtualinvoke r5.<gov.nist.javax.sip.header.RAck: void setRSequenceNumber(long)>($l3);

        virtualinvoke r3.<gov.nist.javax.sip.message.SIPRequest: void setHeader(javax.sip.header.Header)>(r5);

     label4:
        return r3;

     label5:
        $r22 := @caughtexception;

        r23 = $r22;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>(r23);

        return null;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    private void updateRequest(gov.nist.javax.sip.message.SIPRequest)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.message.SIPRequest r1;
        gov.nist.javax.sip.header.RouteList r2;
        int $i0;
        javax.sip.header.UserAgentHeader $r3, $r4;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: gov.nist.javax.sip.message.SIPRequest;

        r2 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList getRouteList()>();

        $i0 = virtualinvoke r2.<gov.nist.javax.sip.header.RouteList: int size()>();

        if $i0 <= 0 goto label1;

        virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: void setHeader(javax.sip.header.Header)>(r2);

        goto label2;

     label1:
        virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: void removeHeader(java.lang.String)>("Route");

     label2:
        $r3 = staticinvoke <gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.header.UserAgentHeader getDefaultUserAgentHeader()>();

        if $r3 == null goto label3;

        $r4 = staticinvoke <gov.nist.javax.sip.message.MessageFactoryImpl: javax.sip.header.UserAgentHeader getDefaultUserAgentHeader()>();

        virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: void setHeader(javax.sip.header.Header)>($r4);

     label3:
        return;
    }

    public javax.sip.message.Request createAck(long) throws javax.sip.InvalidArgumentException, javax.sip.SipException
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        long l0, $l3;
        gov.nist.javax.sip.header.Route r1;
        gov.nist.javax.sip.ListeningPointImpl r2;
        gov.nist.javax.sip.message.SIPRequest r3, $r16, $r28, $r37, $r38, $r40, $r42;
        java.util.ArrayList r4, $r22;
        gov.nist.javax.sip.header.Via r5, $r39, $r41;
        gov.nist.core.NameValueList r6, $r43;
        gov.nist.javax.sip.header.To r7, $r34;
        gov.nist.javax.sip.header.Authorization r8;
        java.lang.String $r9, $r27, $r30, $r32, $r36, $r54, $r62, $r66, $r68, $r76, $r79, $r85, $r94, $r101, $r103, r112;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        byte $b1, $b2, $b4;
        gov.nist.javax.sip.stack.SIPTransactionStack $r10, $r47, $r55, $r63, $r67, $r73, $r82, $r86, $r91;
        javax.sip.address.Address $r11, $r14, $r19, $r29, $r35, $r51, $r71;
        gov.nist.javax.sip.header.RouteList $r12, $r75, $r77;
        javax.sip.address.URI $r13, $r18, $r60, $r74;
        gov.nist.javax.sip.SipProviderImpl $r15;
        javax.sip.ListeningPoint $r17;
        gov.nist.javax.sip.address.SipUri $r20;
        java.lang.Object $r21, $r44;
        gov.nist.javax.sip.message.SIPResponse $r23, $r87;
        javax.sip.header.CallIdHeader $r24;
        gov.nist.javax.sip.header.CSeq $r25;
        gov.nist.javax.sip.Utils $r26;
        gov.nist.javax.sip.header.From $r31, r113;
        gov.nist.javax.sip.header.MaxForwards $r33;
        int $i5;
        java.lang.StringBuilder $r45, $r49, $r50, $r52, $r53, $r57, $r58, $r59, $r61, $r64, $r65, $r69, $r78, $r80, $r81, $r88, $r89, $r90, $r95, $r96, $r97, $r98, $r99, $r102, $r104, $r105;
        javax.sip.SipException $r46, $r84, $r93, $r106, $r109;
        gov.nist.core.StackLogger $r48, $r56, $r70, $r83, $r92, $r100;
        javax.sip.header.Header $r72;
        javax.sip.InvalidArgumentException $r107, $r108;
        java.lang.Exception $r110, r114;
        javax.sip.address.SipURI r111;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        l0 := @parameter0: long;

        $r9 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String method>;

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z0 != 0 goto label01;

        $r106 = new javax.sip.SipException;

        $r105 = new java.lang.StringBuilder;

        specialinvoke $r105.<java.lang.StringBuilder: void <init>()>();

        $r104 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dialog was not created with an INVITE");

        $r103 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String method>;

        $r102 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r103);

        $r101 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r106.<javax.sip.SipException: void <init>(java.lang.String)>($r101);

        throw $r106;

     label01:
        $b1 = l0 cmp 0L;

        if $b1 > 0 goto label02;

        $r107 = new javax.sip.InvalidArgumentException;

        specialinvoke $r107.<javax.sip.InvalidArgumentException: void <init>(java.lang.String)>("bad cseq <= 0 ");

        throw $r107;

     label02:
        $b2 = l0 cmp 4294967295L;

        if $b2 <= 0 goto label03;

        $r108 = new javax.sip.InvalidArgumentException;

        specialinvoke $r108.<javax.sip.InvalidArgumentException: void <init>(java.lang.String)>("bad cseq > 4294967295");

        throw $r108;

     label03:
        $r11 = r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address remoteTarget>;

        if $r11 != null goto label04;

        $r93 = new javax.sip.SipException;

        specialinvoke $r93.<javax.sip.SipException: void <init>(java.lang.String)>("Cannot create ACK - no remote Target!");

        throw $r93;

     label04:
        $r10 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z1 = virtualinvoke $r10.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label05;

        $r86 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r100 = virtualinvoke $r86.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r99 = new java.lang.StringBuilder;

        specialinvoke $r99.<java.lang.StringBuilder: void <init>()>();

        $r98 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("createAck ");

        $r97 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r96 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cseqno ");

        $r95 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r94 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r100.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r94);

     label05:
        $l3 = r0.<gov.nist.javax.sip.stack.SIPDialog: long lastInviteOkReceived>;

        $b4 = $l3 cmp l0;

        if $b4 >= 0 goto label07;

        $r73 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z5 = virtualinvoke $r73.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z5 == 0 goto label06;

        $r82 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r83 = virtualinvoke $r82.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r80 = new java.lang.StringBuilder;

        specialinvoke $r80.<java.lang.StringBuilder: void <init>()>();

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WARNING : Attempt to crete ACK without OK ");

        $r78 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r83.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r79);

        $r91 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r92 = virtualinvoke $r91.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r89 = new java.lang.StringBuilder;

        specialinvoke $r89.<java.lang.StringBuilder: void <init>()>();

        $r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("LAST RESPONSE = ");

        $r87 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPResponse lastResponse>;

        $r88 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r87);

        $r85 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r92.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r85);

     label06:
        $r84 = new javax.sip.SipException;

        specialinvoke $r84.<javax.sip.SipException: void <init>(java.lang.String)>("Dialog not yet established -- no OK response!");

        throw $r84;

     label07:
        $r12 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList routeList>;

        if $r12 == null goto label08;

        $r75 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList routeList>;

        $z4 = virtualinvoke $r75.<gov.nist.javax.sip.header.RouteList: boolean isEmpty()>();

        if $z4 != 0 goto label08;

        $r77 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList routeList>;

        $r72 = virtualinvoke $r77.<gov.nist.javax.sip.header.RouteList: javax.sip.header.Header getFirst()>();

        r1 = (gov.nist.javax.sip.header.Route) $r72;

        $r71 = virtualinvoke r1.<gov.nist.javax.sip.header.Route: javax.sip.address.Address getAddress()>();

        $r74 = interfaceinvoke $r71.<javax.sip.address.Address: javax.sip.address.URI getURI()>();

        r111 = (javax.sip.address.SipURI) $r74;

        goto label09;

     label08:
        $r14 = r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address remoteTarget>;

        $r13 = interfaceinvoke $r14.<javax.sip.address.Address: javax.sip.address.URI getURI()>();

        r111 = (javax.sip.address.SipURI) $r13;

     label09:
        r112 = interfaceinvoke r111.<javax.sip.address.SipURI: java.lang.String getTransportParam()>();

        if r112 != null goto label12;

        $z3 = interfaceinvoke r111.<javax.sip.address.SipURI: boolean isSecure()>();

        if $z3 == 0 goto label10;

        $r76 = "TLS";

        goto label11;

     label10:
        $r76 = "UDP";

     label11:
        r112 = $r76;

     label12:
        $r15 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.SipProviderImpl sipProvider>;

        $r17 = virtualinvoke $r15.<gov.nist.javax.sip.SipProviderImpl: javax.sip.ListeningPoint getListeningPoint(java.lang.String)>(r112);

        r2 = (gov.nist.javax.sip.ListeningPointImpl) $r17;

        if r2 != null goto label14;

        $r47 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z2 = virtualinvoke $r47.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z2 == 0 goto label13;

        $r55 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r48 = virtualinvoke $r55.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("remoteTargetURI ");

        $r51 = r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address remoteTarget>;

        $r60 = interfaceinvoke $r51.<javax.sip.address.Address: javax.sip.address.URI getURI()>();

        $r61 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r60);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r48.<gov.nist.core.StackLogger: void logError(java.lang.String)>($r62);

        $r63 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r56 = virtualinvoke $r63.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("uri4transport = ");

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r111);

        $r68 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r56.<gov.nist.core.StackLogger: void logError(java.lang.String)>($r68);

        $r67 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r70 = virtualinvoke $r67.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r69 = new java.lang.StringBuilder;

        specialinvoke $r69.<java.lang.StringBuilder: void <init>()>();

        $r65 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No LP found for transport=");

        $r64 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r112);

        $r66 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r70.<gov.nist.core.StackLogger: void logError(java.lang.String)>($r66);

     label13:
        $r46 = new javax.sip.SipException;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r52 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create ACK - no ListeningPoint for transport towards next hop found:");

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r112);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r46.<javax.sip.SipException: void <init>(java.lang.String)>($r54);

        throw $r46;

     label14:
        $r16 = new gov.nist.javax.sip.message.SIPRequest;

        specialinvoke $r16.<gov.nist.javax.sip.message.SIPRequest: void <init>()>();

        r3 = $r16;

        virtualinvoke r3.<gov.nist.javax.sip.message.SIPRequest: void setMethod(java.lang.String)>("ACK");

        $r19 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address getRemoteTarget()>();

        $r18 = interfaceinvoke $r19.<javax.sip.address.Address: javax.sip.address.URI getURI()>();

        $r21 = interfaceinvoke $r18.<javax.sip.address.URI: java.lang.Object clone()>();

        $r20 = (gov.nist.javax.sip.address.SipUri) $r21;

        virtualinvoke r3.<gov.nist.javax.sip.message.SIPRequest: void setRequestURI(javax.sip.address.URI)>($r20);

        $r24 = r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.header.CallIdHeader callIdHeader>;

        virtualinvoke r3.<gov.nist.javax.sip.message.SIPRequest: void setCallId(javax.sip.header.CallIdHeader)>($r24);

        $r25 = new gov.nist.javax.sip.header.CSeq;

        specialinvoke $r25.<gov.nist.javax.sip.header.CSeq: void <init>(long,java.lang.String)>(l0, "ACK");

        virtualinvoke r3.<gov.nist.javax.sip.message.SIPRequest: void setCSeq(javax.sip.header.CSeqHeader)>($r25);

        $r22 = new java.util.ArrayList;

        specialinvoke $r22.<java.util.ArrayList: void <init>()>();

        r4 = $r22;

        $r23 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPResponse lastResponse>;

        r5 = virtualinvoke $r23.<gov.nist.javax.sip.message.SIPResponse: gov.nist.javax.sip.header.Via getTopmostVia()>();

        virtualinvoke r5.<gov.nist.javax.sip.header.Via: void removeParameters()>();

        $r28 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest originalRequest>;

        if $r28 == null goto label15;

        $r42 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest originalRequest>;

        $r41 = virtualinvoke $r42.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.Via getTopmostVia()>();

        if $r41 == null goto label15;

        $r40 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest originalRequest>;

        $r39 = virtualinvoke $r40.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.Via getTopmostVia()>();

        r6 = virtualinvoke $r39.<gov.nist.javax.sip.header.Via: gov.nist.core.NameValueList getParameters()>();

        if r6 == null goto label15;

        $i5 = virtualinvoke r6.<gov.nist.core.NameValueList: int size()>();

        if $i5 <= 0 goto label15;

        $r44 = virtualinvoke r6.<gov.nist.core.NameValueList: java.lang.Object clone()>();

        $r43 = (gov.nist.core.NameValueList) $r44;

        virtualinvoke r5.<gov.nist.javax.sip.header.Via: void setParameters(gov.nist.core.NameValueList)>($r43);

     label15:
        $r26 = staticinvoke <gov.nist.javax.sip.Utils: gov.nist.javax.sip.Utils getInstance()>();

        $r27 = virtualinvoke $r26.<gov.nist.javax.sip.Utils: java.lang.String generateBranchId()>();

        virtualinvoke r5.<gov.nist.javax.sip.header.Via: void setBranch(java.lang.String)>($r27);

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r5);

        virtualinvoke r3.<gov.nist.javax.sip.message.SIPRequest: void setVia(java.util.List)>(r4);

        $r31 = new gov.nist.javax.sip.header.From;

        specialinvoke $r31.<gov.nist.javax.sip.header.From: void <init>()>();

        r113 = $r31;

        $r29 = r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address localParty>;

        virtualinvoke r113.<gov.nist.javax.sip.header.From: void setAddress(javax.sip.address.Address)>($r29);

        $r30 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String myTag>;

        virtualinvoke r113.<gov.nist.javax.sip.header.From: void setTag(java.lang.String)>($r30);

        virtualinvoke r3.<gov.nist.javax.sip.message.SIPRequest: void setFrom(javax.sip.header.FromHeader)>(r113);

        $r34 = new gov.nist.javax.sip.header.To;

        specialinvoke $r34.<gov.nist.javax.sip.header.To: void <init>()>();

        r7 = $r34;

        $r35 = r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.address.Address remoteParty>;

        virtualinvoke r7.<gov.nist.javax.sip.header.To: void setAddress(javax.sip.address.Address)>($r35);

        $r32 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String hisTag>;

        if $r32 == null goto label16;

        $r36 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String hisTag>;

        virtualinvoke r7.<gov.nist.javax.sip.header.To: void setTag(java.lang.String)>($r36);

     label16:
        virtualinvoke r3.<gov.nist.javax.sip.message.SIPRequest: void setTo(javax.sip.header.ToHeader)>(r7);

        $r33 = new gov.nist.javax.sip.header.MaxForwards;

        specialinvoke $r33.<gov.nist.javax.sip.header.MaxForwards: void <init>(int)>(70);

        virtualinvoke r3.<gov.nist.javax.sip.message.SIPRequest: void setMaxForwards(javax.sip.header.MaxForwardsHeader)>($r33);

        $r38 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest originalRequest>;

        if $r38 == null goto label17;

        $r37 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest originalRequest>;

        r8 = virtualinvoke $r37.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.Authorization getAuthorization()>();

        if r8 == null goto label17;

        virtualinvoke r3.<gov.nist.javax.sip.message.SIPRequest: void setHeader(javax.sip.header.Header)>(r8);

     label17:
        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void updateRequest(gov.nist.javax.sip.message.SIPRequest)>(r3);

     label18:
        return r3;

     label19:
        $r110 := @caughtexception;

        r114 = $r110;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>(r114);

        $r109 = new javax.sip.SipException;

        specialinvoke $r109.<javax.sip.SipException: void <init>(java.lang.String,java.lang.Throwable)>("unexpected exception ", r114);

        throw $r109;

        catch java.lang.Exception from label07 to label18 with label19;
    }

    public gov.nist.javax.sip.SipProviderImpl getSipProvider()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.SipProviderImpl $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.SipProviderImpl sipProvider>;

        return $r1;
    }

    public void setSipProvider(gov.nist.javax.sip.SipProviderImpl)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.SipProviderImpl r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: gov.nist.javax.sip.SipProviderImpl;

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.SipProviderImpl sipProvider> = r1;

        return;
    }

    public void setResponseTags(gov.nist.javax.sip.message.SIPResponse)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.message.SIPResponse r1;
        java.lang.String r2, $r3, $r4, $r8, $r9, $r10, $r11;
        gov.nist.javax.sip.stack.SIPTransactionStack $r5, $r6;
        boolean $z0, $z1, $z2;
        gov.nist.core.StackLogger $r7;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: gov.nist.javax.sip.message.SIPResponse;

        $r3 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>();

        if $r3 != null goto label1;

        $r4 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getRemoteTag()>();

        if $r4 == null goto label2;

     label1:
        return;

     label2:
        r2 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getFromTag()>();

        if r2 == null goto label4;

        $r8 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>();

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z1 == 0 goto label3;

        $r11 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getRemoteTag()>();

        virtualinvoke r1.<gov.nist.javax.sip.message.SIPResponse: void setToTag(java.lang.String)>($r11);

        goto label5;

     label3:
        $r9 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getRemoteTag()>();

        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z2 == 0 goto label5;

        $r10 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>();

        virtualinvoke r1.<gov.nist.javax.sip.message.SIPResponse: void setToTag(java.lang.String)>($r10);

        goto label5;

     label4:
        $r5 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r5.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label5;

        $r6 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r7 = virtualinvoke $r6.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r7.<gov.nist.core.StackLogger: void logWarning(java.lang.String)>("No from tag in response! Not RFC 3261 compatible.");

     label5:
        return;
    }

    public void setLastResponse(gov.nist.javax.sip.stack.SIPTransaction, gov.nist.javax.sip.message.SIPResponse)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.stack.SIPTransaction r1;
        gov.nist.javax.sip.message.SIPResponse r2, $r129;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27;
        java.lang.String r3, $r15, $r16, $r18, $r34, $r36, $r38, $r44, $r45, $r47, $r48, $r49, $r51, $r52, $r53, $r54, $r57, $r59, $r64, $r70, $r73, $r74, $r80, $r83, $r97, $r99, $r104, $r107, $r111, $r119, $r123, $r128;
        gov.nist.javax.sip.header.RecordRouteList r4;
        java.util.ListIterator r5;
        gov.nist.javax.sip.header.RecordRoute r6;
        gov.nist.javax.sip.header.Route r7;
        javax.sip.header.CallIdHeader $r8;
        gov.nist.javax.sip.stack.SIPTransactionStack $r9, $r13, $r19, $r41, $r46, $r55, $r56, $r58, $r60, $r63, $r66, $r67, $r76, $r78, $r79, $r84, $r89, $r91, $r96, $r98, $r103, $r112, $r120, $r122, $r125, $r131;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, z37;
        javax.sip.DialogState $r10, $r11, $r17, $r20, $r21, $r22, $r23, $r25, $r26, $r35, $r37, $r39, $r42, $r43, $r50, $r68, $r69, $r88;
        javax.sip.header.CSeqHeader $r12, $r40, $r110, $r118;
        gov.nist.javax.sip.message.SIPRequest $r24, $r27;
        javax.sip.header.Header $r28;
        gov.nist.javax.sip.header.RouteList $r29, $r31;
        java.lang.Object $r30;
        javax.sip.address.Address $r32, $r33;
        long $l11, $l12, $l13, $l28, $l29, $l30;
        javax.sip.TransactionState $r61, $r62;
        gov.nist.core.StackLogger $r65, $r77, $r85, $r90, $r92, $r95, $r102, $r113, $r116, $r121, $r130;
        javax.sip.header.ToHeader $r71, $r75;
        java.lang.StringBuilder $r81, $r82, $r86, $r87, $r93, $r94, $r100, $r101, $r105, $r106, $r108, $r109, $r114, $r115, $r117, $r124, $r126, $r127, $r132, $r133;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: gov.nist.javax.sip.stack.SIPTransaction;

        r2 := @parameter1: gov.nist.javax.sip.message.SIPResponse;

        $r8 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CallIdHeader getCallId()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.header.CallIdHeader callIdHeader> = $r8;

        i0 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

        if i0 != 100 goto label02;

        $r125 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z36 = virtualinvoke $r125.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z36 == 0 goto label01;

        $r122 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r121 = virtualinvoke $r122.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r121.<gov.nist.core.StackLogger: void logWarning(java.lang.String)>("Invalid status code - 100 in setLastResponse - ignoring");

     label01:
        return;

     label02:
        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPResponse lastResponse> = r2;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setAssigned()>();

        $r9 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r9.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label03;

        $r131 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r130 = virtualinvoke $r131.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r133 = new java.lang.StringBuilder;

        specialinvoke $r133.<java.lang.StringBuilder: void <init>()>();

        $r132 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sipDialog: setLastResponse:");

        $r127 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r126 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" lastResponse = ");

        $r129 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPResponse lastResponse>;

        $r128 = virtualinvoke $r129.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getFirstLine()>();

        $r124 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r128);

        $r123 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r130.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r123);

     label03:
        $r10 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $r11 = <javax.sip.DialogState: javax.sip.DialogState TERMINATED>;

        if $r10 != $r11 goto label06;

        $r120 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z35 = virtualinvoke $r120.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z35 == 0 goto label04;

        $r112 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r113 = virtualinvoke $r112.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r113.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("sipDialog: setLastResponse -- dialog is terminated - ignoring ");

     label04:
        $r118 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        $r111 = interfaceinvoke $r118.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        $z34 = virtualinvoke $r111.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z34 == 0 goto label05;

        if i0 != 200 goto label05;

        $r110 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        $l28 = interfaceinvoke $r110.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        $l29 = r0.<gov.nist.javax.sip.stack.SIPDialog: long lastInviteOkReceived>;

        $l30 = staticinvoke <java.lang.Math: long max(long,long)>($l28, $l29);

        r0.<gov.nist.javax.sip.stack.SIPDialog: long lastInviteOkReceived> = $l30;

     label05:
        return;

     label06:
        $r12 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        r3 = interfaceinvoke $r12.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        $r13 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z1 = virtualinvoke $r13.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label07;

        $r89 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r90 = virtualinvoke $r89.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r90.<gov.nist.core.StackLogger: void logStackTrace()>();

        $r91 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r92 = virtualinvoke $r91.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r93 = new java.lang.StringBuilder;

        specialinvoke $r93.<java.lang.StringBuilder: void <init>()>();

        $r81 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cseqMethod = ");

        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r92.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r83);

        $r84 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r85 = virtualinvoke $r84.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r86 = new java.lang.StringBuilder;

        specialinvoke $r86.<java.lang.StringBuilder: void <init>()>();

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dialogState = ");

        $r88 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $r105 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r88);

        $r104 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r85.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r104);

        $r103 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r102 = virtualinvoke $r103.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r109 = new java.lang.StringBuilder;

        specialinvoke $r109.<java.lang.StringBuilder: void <init>()>();

        $r108 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("method = ");

        $r107 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getMethod()>();

        $r106 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r107);

        $r97 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r102.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r97);

        $r96 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r95 = virtualinvoke $r96.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r94 = new java.lang.StringBuilder;

        specialinvoke $r94.<java.lang.StringBuilder: void <init>()>();

        $r101 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("statusCode = ");

        $r100 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r99 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r95.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r99);

        $r98 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r116 = virtualinvoke $r98.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r117 = new java.lang.StringBuilder;

        specialinvoke $r117.<java.lang.StringBuilder: void <init>()>();

        $r114 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("transaction = ");

        $r115 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r119 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r116.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r119);

     label07:
        if r1 == null goto label08;

        $z17 = r1 instanceof javax.sip.ClientTransaction;

        if $z17 == 0 goto label23;

     label08:
        $z3 = staticinvoke <gov.nist.javax.sip.stack.SIPTransactionStack: boolean isDialogCreated(java.lang.String)>(r3);

        if $z3 == 0 goto label20;

        $r21 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        if $r21 != null goto label10;

        $i17 = i0 / 100;

        if $i17 != 1 goto label10;

        $i16 = <gov.nist.javax.sip.stack.SIPDialog: int EARLY_STATE>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setState(int)>($i16);

        $r52 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getToTag()>();

        if $r52 != null goto label09;

        $r58 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z19 = $r58.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean rfc2543Supported>;

        if $z19 == 0 goto label17;

     label09:
        $r54 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getRemoteTag()>();

        if $r54 != null goto label17;

        $r53 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getToTag()>();

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setRemoteTag(java.lang.String)>($r53);

        $r59 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getDialogId(boolean)>(0);

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setDialogId(java.lang.String)>($r59);

        $r60 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        virtualinvoke $r60.<gov.nist.javax.sip.stack.SIPTransactionStack: void putDialog(gov.nist.javax.sip.stack.SIPDialog)>(r0);

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void addRoute(gov.nist.javax.sip.message.SIPResponse)>(r2);

        goto label17;

     label10:
        $r22 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        if $r22 == null goto label12;

        $r42 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $r50 = <javax.sip.DialogState: javax.sip.DialogState EARLY>;

        $z15 = virtualinvoke $r42.<javax.sip.DialogState: boolean equals(java.lang.Object)>($r50);

        if $z15 == 0 goto label12;

        $i15 = i0 / 100;

        if $i15 != 1 goto label12;

        $r51 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getMethod()>();

        $z14 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r51);

        if $z14 == 0 goto label17;

        if r1 == null goto label17;

        $r47 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getToTag()>();

        if $r47 != null goto label11;

        $r55 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z16 = $r55.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean rfc2543Supported>;

        if $z16 == 0 goto label17;

     label11:
        $r49 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getToTag()>();

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setRemoteTag(java.lang.String)>($r49);

        $r48 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getDialogId(boolean)>(0);

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setDialogId(java.lang.String)>($r48);

        $r56 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        virtualinvoke $r56.<gov.nist.javax.sip.stack.SIPTransactionStack: void putDialog(gov.nist.javax.sip.stack.SIPDialog)>(r0);

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void addRoute(gov.nist.javax.sip.message.SIPResponse)>(r2);

        goto label17;

     label12:
        $i6 = i0 / 100;

        if $i6 != 2 goto label15;

        $r36 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getMethod()>();

        $z11 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r36);

        if $z11 == 0 goto label14;

        $r38 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getToTag()>();

        if $r38 != null goto label13;

        $r41 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z13 = $r41.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean rfc2543Supported>;

        if $z13 == 0 goto label14;

     label13:
        $r39 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $r43 = <javax.sip.DialogState: javax.sip.DialogState CONFIRMED>;

        if $r39 == $r43 goto label14;

        $r44 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getToTag()>();

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setRemoteTag(java.lang.String)>($r44);

        $r45 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getDialogId(boolean)>(0);

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setDialogId(java.lang.String)>($r45);

        $r46 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        virtualinvoke $r46.<gov.nist.javax.sip.stack.SIPTransactionStack: void putDialog(gov.nist.javax.sip.stack.SIPDialog)>(r0);

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void addRoute(gov.nist.javax.sip.message.SIPResponse)>(r2);

        $i14 = <gov.nist.javax.sip.stack.SIPDialog: int CONFIRMED_STATE>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setState(int)>($i14);

     label14:
        $z12 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z12 == 0 goto label17;

        $r40 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        $l13 = interfaceinvoke $r40.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        $l11 = r0.<gov.nist.javax.sip.stack.SIPDialog: long lastInviteOkReceived>;

        $l12 = staticinvoke <java.lang.Math: long max(long,long)>($l13, $l11);

        r0.<gov.nist.javax.sip.stack.SIPDialog: long lastInviteOkReceived> = $l12;

        goto label17;

     label15:
        if i0 < 300 goto label17;

        if i0 > 699 goto label17;

        $r35 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        if $r35 == null goto label16;

        $r34 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getMethod()>();

        $z10 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r34);

        if $z10 == 0 goto label17;

        $r37 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $i10 = virtualinvoke $r37.<javax.sip.DialogState: int getValue()>();

        $i9 = <gov.nist.javax.sip.stack.SIPDialog: int EARLY_STATE>;

        if $i10 != $i9 goto label17;

     label16:
        $i8 = <gov.nist.javax.sip.stack.SIPDialog: int TERMINATED_STATE>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setState(int)>($i8);

     label17:
        $r20 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $r25 = <javax.sip.DialogState: javax.sip.DialogState CONFIRMED>;

        if $r20 == $r25 goto label34;

        $r26 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $r23 = <javax.sip.DialogState: javax.sip.DialogState TERMINATED>;

        if $r26 == $r23 goto label34;

        $r24 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest originalRequest>;

        if $r24 == null goto label34;

        $r27 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest originalRequest>;

        r4 = virtualinvoke $r27.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RecordRouteList getRecordRouteHeaders()>();

        if r4 == null goto label19;

        $i7 = virtualinvoke r4.<gov.nist.javax.sip.header.RecordRouteList: int size()>();

        r5 = virtualinvoke r4.<gov.nist.javax.sip.header.RecordRouteList: java.util.ListIterator listIterator(int)>($i7);

     label18:
        $z8 = interfaceinvoke r5.<java.util.ListIterator: boolean hasPrevious()>();

        if $z8 == 0 goto label19;

        $r30 = interfaceinvoke r5.<java.util.ListIterator: java.lang.Object previous()>();

        r6 = (gov.nist.javax.sip.header.RecordRoute) $r30;

        $r29 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList routeList>;

        $r28 = virtualinvoke $r29.<gov.nist.javax.sip.header.RouteList: javax.sip.header.Header getFirst()>();

        r7 = (gov.nist.javax.sip.header.Route) $r28;

        if r7 == null goto label19;

        $r33 = virtualinvoke r6.<gov.nist.javax.sip.header.RecordRoute: javax.sip.address.Address getAddress()>();

        $r32 = virtualinvoke r7.<gov.nist.javax.sip.header.Route: javax.sip.address.Address getAddress()>();

        $z9 = interfaceinvoke $r33.<javax.sip.address.Address: boolean equals(java.lang.Object)>($r32);

        if $z9 == 0 goto label19;

        $r31 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.RouteList routeList>;

        virtualinvoke $r31.<gov.nist.javax.sip.header.RouteList: void removeFirst()>();

        goto label18;

     label19:
        goto label34;

     label20:
        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("NOTIFY");

        if $z2 == 0 goto label22;

        $r15 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getMethod()>();

        $z6 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>("SUBSCRIBE");

        if $z6 != 0 goto label21;

        $r18 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getMethod()>();

        $z7 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>("REFER");

        if $z7 == 0 goto label22;

     label21:
        $i4 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

        $i3 = $i4 / 100;

        if $i3 != 2 goto label22;

        $r17 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        if $r17 != null goto label22;

        $r16 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getDialogId(boolean)>(1);

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setDialogId(java.lang.String)>($r16);

        $r19 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        virtualinvoke $r19.<gov.nist.javax.sip.stack.SIPTransactionStack: void putDialog(gov.nist.javax.sip.stack.SIPDialog)>(r0);

        $i5 = <gov.nist.javax.sip.stack.SIPDialog: int CONFIRMED_STATE>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setState(int)>($i5);

        goto label34;

     label22:
        $z4 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("BYE");

        if $z4 == 0 goto label34;

        $i1 = i0 / 100;

        if $i1 != 2 goto label34;

        $z5 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isTerminatedOnBye()>();

        if $z5 == 0 goto label34;

        $i2 = <gov.nist.javax.sip.stack.SIPDialog: int TERMINATED_STATE>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setState(int)>($i2);

        goto label34;

     label23:
        $z18 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("BYE");

        if $z18 == 0 goto label24;

        $i26 = i0 / 100;

        if $i26 != 2 goto label24;

        $z33 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isTerminatedOnBye()>();

        if $z33 == 0 goto label24;

        $i27 = <gov.nist.javax.sip.stack.SIPDialog: int TERMINATED_STATE>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setState(int)>($i27);

        goto label34;

     label24:
        z37 = 0;

        $r57 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getLocalTag()>();

        if $r57 != null goto label25;

        $r71 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.ToHeader getTo()>();

        $r70 = interfaceinvoke $r71.<javax.sip.header.ToHeader: java.lang.String getTag()>();

        if $r70 == null goto label25;

        $z29 = staticinvoke <gov.nist.javax.sip.stack.SIPTransactionStack: boolean isDialogCreated(java.lang.String)>(r3);

        if $z29 == 0 goto label25;

        $r73 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String getMethod()>();

        $z30 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r73);

        if $z30 == 0 goto label25;

        $r75 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.ToHeader getTo()>();

        $r74 = interfaceinvoke $r75.<javax.sip.header.ToHeader: java.lang.String getTag()>();

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setLocalTag(java.lang.String)>($r74);

        z37 = 1;

     label25:
        $i18 = i0 / 100;

        if $i18 == 2 goto label29;

        $i24 = i0 / 100;

        if $i24 != 1 goto label26;

        if z37 == 0 goto label34;

        $i25 = <gov.nist.javax.sip.stack.SIPDialog: int EARLY_STATE>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setState(int)>($i25);

        $r80 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getDialogId(boolean)>(1);

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setDialogId(java.lang.String)>($r80);

        $r79 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        virtualinvoke $r79.<gov.nist.javax.sip.stack.SIPTransactionStack: void putDialog(gov.nist.javax.sip.stack.SIPDialog)>(r0);

        goto label34;

     label26:
        if i0 != 489 goto label28;

        $z25 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("NOTIFY");

        if $z25 != 0 goto label27;

        $z32 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("SUBSCRIBE");

        if $z32 == 0 goto label28;

     label27:
        $r76 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z31 = virtualinvoke $r76.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z31 == 0 goto label34;

        $r78 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r77 = virtualinvoke $r78.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r77.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("RFC 3265 : Not setting dialog to TERMINATED for 489");

        goto label34;

     label28:
        $z26 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isReInvite()>();

        if $z26 != 0 goto label34;

        $r69 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $r68 = <javax.sip.DialogState: javax.sip.DialogState CONFIRMED>;

        if $r69 == $r68 goto label34;

        $i23 = <gov.nist.javax.sip.stack.SIPDialog: int TERMINATED_STATE>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setState(int)>($i23);

        goto label34;

     label29:
        $i21 = r0.<gov.nist.javax.sip.stack.SIPDialog: int dialogState>;

        $i20 = <gov.nist.javax.sip.stack.SIPDialog: int EARLY_STATE>;

        if $i21 > $i20 goto label31;

        $z23 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z23 != 0 goto label30;

        $z28 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("SUBSCRIBE");

        if $z28 != 0 goto label30;

        $z27 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("REFER");

        if $z27 == 0 goto label31;

     label30:
        $i22 = <gov.nist.javax.sip.stack.SIPDialog: int CONFIRMED_STATE>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setState(int)>($i22);

     label31:
        if z37 == 0 goto label32;

        $r64 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getDialogId(boolean)>(1);

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setDialogId(java.lang.String)>($r64);

        $r63 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        virtualinvoke $r63.<gov.nist.javax.sip.stack.SIPTransactionStack: void putDialog(gov.nist.javax.sip.stack.SIPDialog)>(r0);

     label32:
        $r61 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPTransaction: javax.sip.TransactionState getState()>();

        $r62 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        if $r61 == $r62 goto label34;

        $i19 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

        if $i19 != 200 goto label34;

        $z22 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z22 == 0 goto label34;

        $z20 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isBackToBackUserAgent>;

        if $z20 == 0 goto label34;

        $z21 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: boolean takeAckSem()>();

        if $z21 != 0 goto label34;

        $r67 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z24 = virtualinvoke $r67.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z24 == 0 goto label33;

        $r66 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r65 = virtualinvoke $r66.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r65.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Delete dialog -- cannot acquire ackSem");

     label33:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void delete()>();

        return;

     label34:
        return;
    }

    public void startRetransmitTimer(gov.nist.javax.sip.stack.SIPServerTransaction, javax.sip.message.Response)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.stack.SIPServerTransaction r1;
        javax.sip.message.Response r2;
        javax.sip.message.Request $r3;
        java.lang.String $r4;
        boolean $z0;
        int $i0, $i1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: gov.nist.javax.sip.stack.SIPServerTransaction;

        r2 := @parameter1: javax.sip.message.Response;

        $r3 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPServerTransaction: javax.sip.message.Request getRequest()>();

        $r4 = interfaceinvoke $r3.<javax.sip.message.Request: java.lang.String getMethod()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z0 == 0 goto label1;

        $i0 = interfaceinvoke r2.<javax.sip.message.Response: int getStatusCode()>();

        $i1 = $i0 / 100;

        if $i1 != 2 goto label1;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void startTimer(gov.nist.javax.sip.stack.SIPServerTransaction)>(r1);

     label1:
        return;
    }

    public gov.nist.javax.sip.message.SIPResponse getLastResponse()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.message.SIPResponse $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPResponse lastResponse>;

        return $r1;
    }

    private void doTargetRefresh(gov.nist.javax.sip.message.SIPMessage)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.message.SIPMessage r1;
        gov.nist.javax.sip.header.ContactList r2;
        gov.nist.javax.sip.header.Contact r3;
        javax.sip.header.Header $r4;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: gov.nist.javax.sip.message.SIPMessage;

        r2 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ContactList getContactHeaders()>();

        if r2 == null goto label1;

        $r4 = virtualinvoke r2.<gov.nist.javax.sip.header.ContactList: javax.sip.header.Header getFirst()>();

        r3 = (gov.nist.javax.sip.header.Contact) $r4;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setRemoteTarget(javax.sip.header.ContactHeader)>(r3);

     label1:
        return;
    }

    private static final boolean optionPresent(java.util.ListIterator, java.lang.String)
    {
        java.util.ListIterator r0;
        java.lang.String r1, $r4;
        javax.sip.header.OptionTag r2;
        boolean $z0, $z1;
        java.lang.Object $r3;

        r0 := @parameter0: java.util.ListIterator;

        r1 := @parameter1: java.lang.String;

     label1:
        $z0 = interfaceinvoke r0.<java.util.ListIterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke r0.<java.util.ListIterator: java.lang.Object next()>();

        r2 = (javax.sip.header.OptionTag) $r3;

        if r2 == null goto label2;

        $r4 = interfaceinvoke r2.<javax.sip.header.OptionTag: java.lang.String getOptionTag()>();

        $z1 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public javax.sip.message.Response createReliableProvisionalResponse(int) throws javax.sip.InvalidArgumentException, javax.sip.SipException
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        int i0;
        gov.nist.javax.sip.message.SIPRequest r1;
        java.util.ListIterator r2, r17;
        gov.nist.javax.sip.message.SIPResponse r3;
        gov.nist.javax.sip.header.Require r4, $r12;
        java.lang.Exception r5, $r15;
        gov.nist.javax.sip.header.RecordRouteList r6, r7;
        boolean $z0, $z1, $z2, $z3;
        javax.sip.InvalidArgumentException $r8;
        java.lang.String $r9;
        javax.sip.SipException $r10, $r14, $r16;
        gov.nist.javax.sip.header.RSeq $r11, r18;
        java.lang.Object $r13;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        i0 := @parameter0: int;

        $z0 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean firstTransactionIsServerTransaction>;

        if $z0 != 0 goto label01;

        $r16 = new javax.sip.SipException;

        specialinvoke $r16.<javax.sip.SipException: void <init>(java.lang.String)>("Not a Server Dialog!");

        throw $r16;

     label01:
        if i0 <= 100 goto label02;

        if i0 <= 199 goto label03;

     label02:
        $r8 = new javax.sip.InvalidArgumentException;

        specialinvoke $r8.<javax.sip.InvalidArgumentException: void <init>(java.lang.String)>("Bad status code ");

        throw $r8;

     label03:
        r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest originalRequest>;

        $r9 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z1 != 0 goto label04;

        $r14 = new javax.sip.SipException;

        specialinvoke $r14.<javax.sip.SipException: void <init>(java.lang.String)>("Bad method");

        throw $r14;

     label04:
        r2 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: java.util.ListIterator getHeaders(java.lang.String)>("Supported");

        if r2 == null goto label05;

        $z3 = staticinvoke <gov.nist.javax.sip.stack.SIPDialog: boolean optionPresent(java.util.ListIterator,java.lang.String)>(r2, "100rel");

        if $z3 != 0 goto label07;

     label05:
        r17 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: java.util.ListIterator getHeaders(java.lang.String)>("Require");

        if r17 == null goto label06;

        $z2 = staticinvoke <gov.nist.javax.sip.stack.SIPDialog: boolean optionPresent(java.util.ListIterator,java.lang.String)>(r17, "100rel");

        if $z2 != 0 goto label07;

     label06:
        $r10 = new javax.sip.SipException;

        specialinvoke $r10.<javax.sip.SipException: void <init>(java.lang.String)>("No Supported/Require 100rel header in the request");

        throw $r10;

     label07:
        r3 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.message.SIPResponse createResponse(int)>(i0);

        $r12 = new gov.nist.javax.sip.header.Require;

        specialinvoke $r12.<gov.nist.javax.sip.header.Require: void <init>()>();

        r4 = $r12;

     label08:
        virtualinvoke r4.<gov.nist.javax.sip.header.Require: void setOptionTag(java.lang.String)>("100rel");

     label09:
        goto label11;

     label10:
        $r15 := @caughtexception;

        r5 = $r15;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>(r5);

     label11:
        virtualinvoke r3.<gov.nist.javax.sip.message.SIPResponse: void addHeader(javax.sip.header.Header)>(r4);

        $r11 = new gov.nist.javax.sip.header.RSeq;

        specialinvoke $r11.<gov.nist.javax.sip.header.RSeq: void <init>()>();

        r18 = $r11;

        virtualinvoke r18.<gov.nist.javax.sip.header.RSeq: void setSeqNumber(long)>(1L);

        r6 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RecordRouteList getRecordRouteHeaders()>();

        if r6 == null goto label12;

        $r13 = virtualinvoke r6.<gov.nist.javax.sip.header.RecordRouteList: java.lang.Object clone()>();

        r7 = (gov.nist.javax.sip.header.RecordRouteList) $r13;

        virtualinvoke r3.<gov.nist.javax.sip.message.SIPResponse: void setHeader(javax.sip.header.Header)>(r7);

     label12:
        return r3;

        catch java.lang.Exception from label08 to label09 with label10;
    }

    public boolean handlePrack(gov.nist.javax.sip.message.SIPRequest)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.message.SIPRequest r1;
        gov.nist.javax.sip.stack.SIPServerTransaction r2;
        gov.nist.javax.sip.message.SIPResponse r3;
        gov.nist.javax.sip.header.RAck r4;
        gov.nist.javax.sip.header.CSeq r5;
        gov.nist.javax.sip.header.RSeq r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        javax.sip.Transaction $r7;
        javax.sip.header.Header $r8, $r12;
        javax.sip.header.CSeqHeader $r9;
        java.lang.String $r10, $r11;
        long $l0, $l2, $l3, $l5;
        byte $b1, $b4;
        gov.nist.javax.sip.stack.SIPTransactionStack $r13, $r14, $r15, $r17, $r18, $r21, $r22, $r24, $r25, $r27, $r28, $r30;
        gov.nist.core.StackLogger $r16, $r19, $r20, $r23, $r26, $r29;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: gov.nist.javax.sip.message.SIPRequest;

        $z0 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isServer()>();

        if $z0 != 0 goto label02;

        $r27 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z8 = virtualinvoke $r27.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z8 == 0 goto label01;

        $r30 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r29 = virtualinvoke $r30.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r29.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Dropping Prack -- not a server Dialog");

     label01:
        return 0;

     label02:
        $r7 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.Transaction getFirstTransaction()>();

        r2 = (gov.nist.javax.sip.stack.SIPServerTransaction) $r7;

        r3 = virtualinvoke r2.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse getReliableProvisionalResponse()>();

        if r3 != null goto label04;

        $r24 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z7 = virtualinvoke $r24.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z7 == 0 goto label03;

        $r28 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r26 = virtualinvoke $r28.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r26.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Dropping Prack -- ReliableResponse not found");

     label03:
        return 0;

     label04:
        $r8 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.Header getHeader(java.lang.String)>("RAck");

        r4 = (gov.nist.javax.sip.header.RAck) $r8;

        if r4 != null goto label06;

        $r21 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z6 = virtualinvoke $r21.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z6 == 0 goto label05;

        $r25 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r23 = virtualinvoke $r25.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r23.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Dropping Prack -- rack header not found");

     label05:
        return 0;

     label06:
        $r9 = virtualinvoke r3.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        r5 = (gov.nist.javax.sip.header.CSeq) $r9;

        $r10 = virtualinvoke r4.<gov.nist.javax.sip.header.RAck: java.lang.String getMethod()>();

        $r11 = virtualinvoke r5.<gov.nist.javax.sip.header.CSeq: java.lang.String getMethod()>();

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z1 != 0 goto label08;

        $r18 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z5 = virtualinvoke $r18.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z5 == 0 goto label07;

        $r22 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r20 = virtualinvoke $r22.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r20.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Dropping Prack -- CSeq Header does not match PRACK");

     label07:
        return 0;

     label08:
        $l0 = virtualinvoke r4.<gov.nist.javax.sip.header.RAck: long getCSeqNumberLong()>();

        $l2 = virtualinvoke r5.<gov.nist.javax.sip.header.CSeq: long getSeqNumber()>();

        $b1 = $l0 cmp $l2;

        if $b1 == 0 goto label10;

        $r15 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z4 = virtualinvoke $r15.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z4 == 0 goto label09;

        $r17 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r19 = virtualinvoke $r17.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r19.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Dropping Prack -- CSeq Header does not match PRACK");

     label09:
        return 0;

     label10:
        $r12 = virtualinvoke r3.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.Header getHeader(java.lang.String)>("RSeq");

        r6 = (gov.nist.javax.sip.header.RSeq) $r12;

        $l3 = virtualinvoke r4.<gov.nist.javax.sip.header.RAck: long getRSequenceNumber()>();

        $l5 = virtualinvoke r6.<gov.nist.javax.sip.header.RSeq: long getSeqNumber()>();

        $b4 = $l3 cmp $l5;

        if $b4 == 0 goto label12;

        $r13 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z3 = virtualinvoke $r13.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z3 == 0 goto label11;

        $r14 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r16 = virtualinvoke $r14.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r16.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Dropping Prack -- RSeq Header does not match PRACK");

     label11:
        return 0;

     label12:
        $z2 = virtualinvoke r2.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean prackRecieved()>();

        return $z2;
    }

    public void sendReliableProvisionalResponse(javax.sip.message.Response) throws javax.sip.SipException
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        javax.sip.message.Response r1;
        gov.nist.javax.sip.message.SIPResponse r2;
        java.util.ListIterator r3;
        boolean z0, $z1, $z2, $z3, $z4;
        javax.sip.header.RequireHeader r4;
        int $i0, $i1, $i2;
        java.lang.String $r5, $r7, $r12;
        javax.sip.Transaction $r6;
        gov.nist.javax.sip.header.Require $r8, r18;
        gov.nist.javax.sip.stack.SIPTransactionStack $r9, $r10;
        gov.nist.core.StackLogger $r11;
        java.lang.Object $r13;
        javax.sip.SipException $r14, $r15, $r16, $r17;
        gov.nist.javax.sip.stack.SIPServerTransaction r19;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: javax.sip.message.Response;

        $z1 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isServer()>();

        if $z1 != 0 goto label1;

        $r17 = new javax.sip.SipException;

        specialinvoke $r17.<javax.sip.SipException: void <init>(java.lang.String)>("Not a Server Dialog");

        throw $r17;

     label1:
        r2 = (gov.nist.javax.sip.message.SIPResponse) r1;

        $i0 = interfaceinvoke r1.<javax.sip.message.Response: int getStatusCode()>();

        if $i0 != 100 goto label2;

        $r15 = new javax.sip.SipException;

        specialinvoke $r15.<javax.sip.SipException: void <init>(java.lang.String)>("Cannot send 100 as a reliable provisional response");

        throw $r15;

     label2:
        $i1 = interfaceinvoke r1.<javax.sip.message.Response: int getStatusCode()>();

        $i2 = $i1 / 100;

        if $i2 <= 2 goto label3;

        $r16 = new javax.sip.SipException;

        specialinvoke $r16.<javax.sip.SipException: void <init>(java.lang.String)>("Response code is not a 1xx response - should be in the range 101 to 199 ");

        throw $r16;

     label3:
        $r5 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getToTag()>();

        if $r5 != null goto label4;

        $r14 = new javax.sip.SipException;

        specialinvoke $r14.<javax.sip.SipException: void <init>(java.lang.String)>("Badly formatted response -- To tag mandatory for Reliable Provisional Response");

        throw $r14;

     label4:
        r3 = interfaceinvoke r1.<javax.sip.message.Response: java.util.ListIterator getHeaders(java.lang.String)>("Require");

        z0 = 0;

        if r3 == null goto label7;

     label5:
        $z3 = interfaceinvoke r3.<java.util.ListIterator: boolean hasNext()>();

        if $z3 == 0 goto label7;

        if z0 != 0 goto label7;

        $r13 = interfaceinvoke r3.<java.util.ListIterator: java.lang.Object next()>();

        r4 = (javax.sip.header.RequireHeader) $r13;

        $r12 = interfaceinvoke r4.<javax.sip.header.RequireHeader: java.lang.String getOptionTag()>();

        $z4 = virtualinvoke $r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("100rel");

        if $z4 == 0 goto label6;

        z0 = 1;

     label6:
        goto label5;

     label7:
        if z0 != 0 goto label8;

        $r8 = new gov.nist.javax.sip.header.Require;

        specialinvoke $r8.<gov.nist.javax.sip.header.Require: void <init>(java.lang.String)>("100rel");

        r18 = $r8;

        interfaceinvoke r1.<javax.sip.message.Response: void addHeader(javax.sip.header.Header)>(r18);

        $r9 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z2 = virtualinvoke $r9.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z2 == 0 goto label8;

        $r10 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r11 = virtualinvoke $r10.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r11.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Require header with optionTag 100rel is needed -- adding one");

     label8:
        $r6 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.Transaction getFirstTransaction()>();

        r19 = (gov.nist.javax.sip.stack.SIPServerTransaction) $r6;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setLastResponse(gov.nist.javax.sip.stack.SIPTransaction,gov.nist.javax.sip.message.SIPResponse)>(r19, r2);

        $r7 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getDialogId(boolean)>(1);

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setDialogId(java.lang.String)>($r7);

        virtualinvoke r19.<gov.nist.javax.sip.stack.SIPServerTransaction: void sendReliableProvisionalResponse(javax.sip.message.Response)>(r1);

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void startRetransmitTimer(gov.nist.javax.sip.stack.SIPServerTransaction,javax.sip.message.Response)>(r19, r1);

        return;
    }

    public void terminateOnBye(boolean) throws javax.sip.SipException
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        boolean z0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        z0 := @parameter0: boolean;

        r0.<gov.nist.javax.sip.stack.SIPDialog: boolean terminateOnBye> = z0;

        return;
    }

    public void setAssigned()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isAssigned> = 1;

        return;
    }

    public boolean isAssigned()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $z0 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isAssigned>;

        return $z0;
    }

    public gov.nist.javax.sip.header.Contact getMyContactHeader()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.header.Contact $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.header.Contact contactHeader>;

        return $r1;
    }

    public boolean handleAck(gov.nist.javax.sip.stack.SIPServerTransaction)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.stack.SIPServerTransaction r1, r29;
        gov.nist.javax.sip.message.SIPRequest r2;
        java.lang.Throwable r3, $r28;
        gov.nist.javax.sip.message.SIPResponse r4, $r17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        javax.sip.DialogState $r5, $r6;
        gov.nist.javax.sip.stack.SIPTransactionStack $r7, $r8, $r14, $r16, $r19, $r21, $r23, $r24;
        gov.nist.core.StackLogger $r9, $r18, $r22, $r27;
        int $i0, $i1;
        java.lang.String $r10, $r15;
        javax.sip.header.CSeqHeader $r11, $r12, $r13, $r20;
        long $l2, $l4, $l5, $l6;
        byte $b3, $b7;
        gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask $r25, $r26;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: gov.nist.javax.sip.stack.SIPServerTransaction;

        r2 = virtualinvoke r1.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $z0 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isAckSeen()>();

        if $z0 == 0 goto label07;

        $l5 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: long getRemoteSeqNumber()>();

        $r20 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CSeqHeader getCSeq()>();

        $l6 = interfaceinvoke $r20.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        $b7 = $l5 cmp $l6;

        if $b7 != 0 goto label07;

        $r23 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z5 = virtualinvoke $r23.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z5 == 0 goto label01;

        $r24 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r27 = virtualinvoke $r24.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r27.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("ACK already seen by dialog -- dropping Ack retransmission");

     label01:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void acquireTimerTaskSem()>();

     label02:
        $r25 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask timerTask>;

        if $r25 == null goto label03;

        $r26 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask timerTask>;

        virtualinvoke $r26.<gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask: boolean cancel()>();

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogTimerTask timerTask> = null;

     label03:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void releaseTimerTaskSem()>();

        goto label06;

     label04:
        $r28 := @caughtexception;

        r3 = $r28;

     label05:
        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void releaseTimerTaskSem()>();

        throw r3;

     label06:
        return 0;

     label07:
        $r5 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $r6 = <javax.sip.DialogState: javax.sip.DialogState TERMINATED>;

        if $r5 != $r6 goto label09;

        $r19 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z4 = virtualinvoke $r19.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z4 == 0 goto label08;

        $r21 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r22 = virtualinvoke $r21.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r22.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Dialog is terminated -- dropping ACK");

     label08:
        return 0;

     label09:
        r29 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPServerTransaction getInviteTransaction()>();

        if r29 == null goto label10;

        $r17 = virtualinvoke r29.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse getLastResponse()>();

        goto label11;

     label10:
        $r17 = null;

     label11:
        r4 = $r17;

        if r29 == null goto label13;

        if r4 == null goto label13;

        $i0 = virtualinvoke r4.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

        $i1 = $i0 / 100;

        if $i1 != 2 goto label13;

        $r11 = virtualinvoke r4.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        $r10 = interfaceinvoke $r11.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z2 == 0 goto label13;

        $r12 = virtualinvoke r4.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        $l2 = interfaceinvoke $r12.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        $r13 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPRequest: javax.sip.header.CSeqHeader getCSeq()>();

        $l4 = interfaceinvoke $r13.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        $b3 = $l2 cmp $l4;

        if $b3 != 0 goto label13;

        $r15 = virtualinvoke r4.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getDialogId(boolean)>(0);

        virtualinvoke r1.<gov.nist.javax.sip.stack.SIPServerTransaction: void setDialog(gov.nist.javax.sip.stack.SIPDialog,java.lang.String)>(r0, $r15);

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void ackReceived(gov.nist.javax.sip.message.SIPRequest)>(r2);

        $r14 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z3 = virtualinvoke $r14.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z3 == 0 goto label12;

        $r16 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r18 = virtualinvoke $r16.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r18.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("ACK for 2XX response --- sending to TU ");

     label12:
        return 1;

     label13:
        $r7 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z1 = virtualinvoke $r7.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label14;

        $r8 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r9 = virtualinvoke $r8.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r9.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>(" INVITE transaction not found  -- Discarding ACK");

     label14:
        return 0;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
    }

    void setEarlyDialogId(java.lang.String)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: java.lang.String;

        r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String earlyDialogId> = r1;

        return;
    }

    java.lang.String getEarlyDialogId()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        java.lang.String $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String earlyDialogId>;

        return $r1;
    }

    void releaseAckSem()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        boolean $z0, $z1;
        gov.nist.javax.sip.stack.SIPTransactionStack $r1, $r3;
        java.util.concurrent.Semaphore $r2;
        gov.nist.core.StackLogger $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $z0 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isBackToBackUserAgent>;

        if $z0 == 0 goto label2;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z1 = virtualinvoke $r1.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label1;

        $r3 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r4 = virtualinvoke $r3.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("releaseAckSem]");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r8);

     label1:
        $r2 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.util.concurrent.Semaphore ackSem>;

        virtualinvoke $r2.<java.util.concurrent.Semaphore: void release()>();

     label2:
        return;
    }

    boolean takeAckSem()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.stack.SIPTransactionStack $r2, $r5, $r6, $r7, $r8, $r16, $r18, $r20, $r25;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.concurrent.TimeUnit $r3;
        java.util.concurrent.Semaphore $r4;
        gov.nist.core.StackLogger $r9, $r15, $r17, $r19, $r27;
        java.lang.StringBuilder $r10, $r12, $r14, $r21, $r22, $r24;
        java.lang.String $r11, $r13, $r23;
        java.lang.InterruptedException $r26;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r2 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r2.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label1;

        $r20 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r19 = virtualinvoke $r20.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[takeAckSem ");

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r19.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r23);

     label1:
        $r4 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.util.concurrent.Semaphore ackSem>;

        $r3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        $z1 = virtualinvoke $r4.<java.util.concurrent.Semaphore: boolean tryAcquire(long,java.util.concurrent.TimeUnit)>(2L, $r3);

        if $z1 != 0 goto label4;

        $r6 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z3 = virtualinvoke $r6.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z3 == 0 goto label2;

        $r18 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r17 = virtualinvoke $r18.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r17.<gov.nist.core.StackLogger: void logError(java.lang.String)>("Cannot aquire ACK semaphore");

     label2:
        $r7 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z4 = virtualinvoke $r7.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z4 == 0 goto label3;

        $r8 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r9 = virtualinvoke $r8.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Semaphore previously acquired at ");

        $r11 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.lang.String stackTrace>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r13);

        $r16 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r15 = virtualinvoke $r16.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r15.<gov.nist.core.StackLogger: void logStackTrace()>();

     label3:
        return 0;

     label4:
        $r5 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z2 = virtualinvoke $r5.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z2 == 0 goto label5;

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void recordStackTrace()>();

     label5:
        goto label7;

     label6:
        $r26 := @caughtexception;

        $r25 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r27 = virtualinvoke $r25.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r27.<gov.nist.core.StackLogger: void logError(java.lang.String)>("Cannot aquire ACK semaphore");

        return 0;

     label7:
        return 1;

        catch java.lang.InterruptedException from label1 to label3 with label6;
        catch java.lang.InterruptedException from label4 to label5 with label6;
    }

    private void setLastAckReceived(gov.nist.javax.sip.message.SIPRequest)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.message.SIPRequest r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: gov.nist.javax.sip.message.SIPRequest;

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest lastAckReceived> = r1;

        return;
    }

    protected gov.nist.javax.sip.message.SIPRequest getLastAckReceived()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.message.SIPRequest $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest lastAckReceived>;

        return $r1;
    }

    private void setLastAckSent(gov.nist.javax.sip.message.SIPRequest)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.message.SIPRequest r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: gov.nist.javax.sip.message.SIPRequest;

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.message.SIPRequest lastAckSent> = r1;

        return;
    }

    public boolean isAtleastOneAckSent()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $z0 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isAcknowledged>;

        return $z0;
    }

    public boolean isBackToBackUserAgent()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $z0 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isBackToBackUserAgent>;

        return $z0;
    }

    public synchronized void doDeferredDeleteIfNoAckSent(long)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        long l0;
        gov.nist.javax.sip.stack.SIPTransactionStack $r1, $r5;
        java.util.Timer $r2, $r6;
        gov.nist.javax.sip.stack.SIPDialog$DialogDeleteIfNoAckSentTask $r3, $r4, $r7;
        int $i1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        l0 := @parameter0: long;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r2 = virtualinvoke $r1.<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Timer getTimer()>();

        if $r2 != null goto label1;

        $i1 = <gov.nist.javax.sip.stack.SIPDialog: int TERMINATED_STATE>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void setState(int)>($i1);

        goto label2;

     label1:
        $r3 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogDeleteIfNoAckSentTask dialogDeleteIfNoAckSentTask>;

        if $r3 != null goto label2;

        $r4 = new gov.nist.javax.sip.stack.SIPDialog$DialogDeleteIfNoAckSentTask;

        specialinvoke $r4.<gov.nist.javax.sip.stack.SIPDialog$DialogDeleteIfNoAckSentTask: void <init>(gov.nist.javax.sip.stack.SIPDialog,long)>(r0, l0);

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogDeleteIfNoAckSentTask dialogDeleteIfNoAckSentTask> = $r4;

        $r5 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r6 = virtualinvoke $r5.<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Timer getTimer()>();

        $r7 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogDeleteIfNoAckSentTask dialogDeleteIfNoAckSentTask>;

        virtualinvoke $r6.<java.util.Timer: void schedule(java.util.TimerTask,long)>($r7, 32000L);

     label2:
        return;
    }

    public void setBackToBackUserAgent()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isBackToBackUserAgent> = 1;

        return;
    }

    javax.sip.header.EventHeader getEventHeader()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        javax.sip.header.EventHeader $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.header.EventHeader eventHeader>;

        return $r1;
    }

    void setEventHeader(javax.sip.header.EventHeader)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        javax.sip.header.EventHeader r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter0: javax.sip.header.EventHeader;

        r0.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.header.EventHeader eventHeader> = r1;

        return;
    }

    void setServerTransactionFlag(boolean)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        boolean z0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        z0 := @parameter0: boolean;

        r0.<gov.nist.javax.sip.stack.SIPDialog: boolean serverTransactionFlag> = z0;

        return;
    }

    void setReInviteFlag(boolean)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        boolean z0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        z0 := @parameter0: boolean;

        r0.<gov.nist.javax.sip.stack.SIPDialog: boolean reInviteFlag> = z0;

        return;
    }

    public boolean isSequnceNumberValidation()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $z0 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean sequenceNumberValidation>;

        return $z0;
    }

    public void disableSequenceNumberValidation()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        r0.<gov.nist.javax.sip.stack.SIPDialog: boolean sequenceNumberValidation> = 0;

        return;
    }

    public void acquireTimerTaskSem()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        java.util.concurrent.TimeUnit $r2;
        java.util.concurrent.Semaphore $r3;
        java.lang.IllegalStateException $r4;
        java.lang.InterruptedException $r5;
        boolean z1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

     label1:
        $r3 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.util.concurrent.Semaphore timerTaskLock>;

        $r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;

        z1 = virtualinvoke $r3.<java.util.concurrent.Semaphore: boolean tryAcquire(long,java.util.concurrent.TimeUnit)>(10L, $r2);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        z1 = 0;

     label4:
        if z1 != 0 goto label5;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Impossible to acquire the dialog timer task lock");

        throw $r4;

     label5:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    public void releaseTimerTaskSem()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        java.util.concurrent.Semaphore $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.util.concurrent.Semaphore timerTaskLock>;

        virtualinvoke $r1.<java.util.concurrent.Semaphore: void release()>();

        return;
    }

    public volatile javax.sip.SipProvider getSipProvider()
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.SipProviderImpl $r1;

        r0 := @this: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = virtualinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.SipProviderImpl getSipProvider()>();

        return $r1;
    }

    static gov.nist.javax.sip.stack.SIPTransactionStack access$000(gov.nist.javax.sip.stack.SIPDialog)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.stack.SIPTransactionStack $r1;

        r0 := @parameter0: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        return $r1;
    }

    static gov.nist.javax.sip.SipProviderImpl access$100(gov.nist.javax.sip.stack.SIPDialog)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.SipProviderImpl $r1;

        r0 := @parameter0: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.SipProviderImpl sipProvider>;

        return $r1;
    }

    static void access$200(gov.nist.javax.sip.stack.SIPDialog, int)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        int i0;

        r0 := @parameter0: gov.nist.javax.sip.stack.SIPDialog;

        i0 := @parameter1: int;

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void raiseErrorEvent(int)>(i0);

        return;
    }

    static int access$300(gov.nist.javax.sip.stack.SIPDialog)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        int $i0;

        r0 := @parameter0: gov.nist.javax.sip.stack.SIPDialog;

        $i0 = r0.<gov.nist.javax.sip.stack.SIPDialog: int reInviteWaitTime>;

        return $i0;
    }

    static java.util.Set access$400(gov.nist.javax.sip.stack.SIPDialog)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        java.util.Set $r1;

        r0 := @parameter0: gov.nist.javax.sip.stack.SIPDialog;

        $r1 = r0.<gov.nist.javax.sip.stack.SIPDialog: java.util.Set eventListeners>;

        return $r1;
    }

    static java.util.concurrent.Semaphore access$502(gov.nist.javax.sip.stack.SIPDialog, java.util.concurrent.Semaphore)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        java.util.concurrent.Semaphore r1;

        r0 := @parameter0: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter1: java.util.concurrent.Semaphore;

        r0.<gov.nist.javax.sip.stack.SIPDialog: java.util.concurrent.Semaphore timerTaskLock> = r1;

        return r1;
    }

    static boolean access$600(gov.nist.javax.sip.stack.SIPDialog, int)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        int i0;
        boolean $z0;

        r0 := @parameter0: gov.nist.javax.sip.stack.SIPDialog;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: boolean toRetransmitFinalResponse(int)>(i0);

        return $z0;
    }

    static void access$700(gov.nist.javax.sip.stack.SIPDialog, java.lang.String, int, java.lang.String)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        java.lang.String r1, r2;
        int i0;

        r0 := @parameter0: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPDialog: void raiseIOException(java.lang.String,int,java.lang.String)>(r1, i0, r2);

        return;
    }

    static int access$800(gov.nist.javax.sip.stack.SIPDialog)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        int $i0;

        r0 := @parameter0: gov.nist.javax.sip.stack.SIPDialog;

        $i0 = r0.<gov.nist.javax.sip.stack.SIPDialog: int dialogState>;

        return $i0;
    }

    static long access$900(gov.nist.javax.sip.stack.SIPDialog)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        long $l0;

        r0 := @parameter0: gov.nist.javax.sip.stack.SIPDialog;

        $l0 = r0.<gov.nist.javax.sip.stack.SIPDialog: long highestSequenceNumberAcknowledged>;

        return $l0;
    }

    static gov.nist.javax.sip.stack.SIPDialog$DialogDeleteIfNoAckSentTask access$1002(gov.nist.javax.sip.stack.SIPDialog, gov.nist.javax.sip.stack.SIPDialog$DialogDeleteIfNoAckSentTask)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        gov.nist.javax.sip.stack.SIPDialog$DialogDeleteIfNoAckSentTask r1;

        r0 := @parameter0: gov.nist.javax.sip.stack.SIPDialog;

        r1 := @parameter1: gov.nist.javax.sip.stack.SIPDialog$DialogDeleteIfNoAckSentTask;

        r0.<gov.nist.javax.sip.stack.SIPDialog: gov.nist.javax.sip.stack.SIPDialog$DialogDeleteIfNoAckSentTask dialogDeleteIfNoAckSentTask> = r1;

        return r1;
    }

    static boolean access$1100(gov.nist.javax.sip.stack.SIPDialog)
    {
        gov.nist.javax.sip.stack.SIPDialog r0;
        boolean $z0;

        r0 := @parameter0: gov.nist.javax.sip.stack.SIPDialog;

        $z0 = r0.<gov.nist.javax.sip.stack.SIPDialog: boolean isBackToBackUserAgent>;

        return $z0;
    }

    static void <clinit>()
    {
        int $i0, $i1, $i2;

        <gov.nist.javax.sip.stack.SIPDialog: int DIALOG_LINGER_TIME> = 8;

        <gov.nist.javax.sip.stack.SIPDialog: int NULL_STATE> = -1;

        <gov.nist.javax.sip.stack.SIPDialog: long serialVersionUID> = -1429794423085204069L;

        $i0 = <javax.sip.DialogState: int _EARLY>;

        <gov.nist.javax.sip.stack.SIPDialog: int EARLY_STATE> = $i0;

        $i1 = <javax.sip.DialogState: int _CONFIRMED>;

        <gov.nist.javax.sip.stack.SIPDialog: int CONFIRMED_STATE> = $i1;

        $i2 = <javax.sip.DialogState: int _TERMINATED>;

        <gov.nist.javax.sip.stack.SIPDialog: int TERMINATED_STATE> = $i2;

        return;
    }
}
