public final class org.apache.http.conn.scheme.Scheme extends java.lang.Object
{
    private final java.lang.String name;
    private final org.apache.http.conn.scheme.SocketFactory socketFactory;
    private final int defaultPort;
    private final boolean layered;
    private java.lang.String stringRep;

    public void <init>(java.lang.String, org.apache.http.conn.scheme.SocketFactory, int)
    {
        org.apache.http.conn.scheme.Scheme r0;
        java.lang.String r1, $r7, $r9;
        org.apache.http.conn.scheme.SocketFactory r2;
        int i0;
        java.lang.IllegalArgumentException $r3, $r10, $r11;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.util.Locale $r8;
        boolean $z0;

        r0 := @this: org.apache.http.conn.scheme.Scheme;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.http.conn.scheme.SocketFactory;

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Scheme name may not be null");

        throw $r11;

     label1:
        if r2 != null goto label2;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Socket factory may not be null");

        throw $r10;

     label2:
        if i0 <= 0 goto label3;

        if i0 <= 65535 goto label4;

     label3:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Port is invalid: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label4:
        $r8 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r9 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r8);

        r0.<org.apache.http.conn.scheme.Scheme: java.lang.String name> = $r9;

        r0.<org.apache.http.conn.scheme.Scheme: org.apache.http.conn.scheme.SocketFactory socketFactory> = r2;

        r0.<org.apache.http.conn.scheme.Scheme: int defaultPort> = i0;

        $z0 = r2 instanceof org.apache.http.conn.scheme.LayeredSocketFactory;

        r0.<org.apache.http.conn.scheme.Scheme: boolean layered> = $z0;

        return;
    }

    public final int getDefaultPort()
    {
        org.apache.http.conn.scheme.Scheme r0;
        int $i0;

        r0 := @this: org.apache.http.conn.scheme.Scheme;

        $i0 = r0.<org.apache.http.conn.scheme.Scheme: int defaultPort>;

        return $i0;
    }

    public final org.apache.http.conn.scheme.SocketFactory getSocketFactory()
    {
        org.apache.http.conn.scheme.Scheme r0;
        org.apache.http.conn.scheme.SocketFactory $r1;

        r0 := @this: org.apache.http.conn.scheme.Scheme;

        $r1 = r0.<org.apache.http.conn.scheme.Scheme: org.apache.http.conn.scheme.SocketFactory socketFactory>;

        return $r1;
    }

    public final java.lang.String getName()
    {
        org.apache.http.conn.scheme.Scheme r0;
        java.lang.String $r1;

        r0 := @this: org.apache.http.conn.scheme.Scheme;

        $r1 = r0.<org.apache.http.conn.scheme.Scheme: java.lang.String name>;

        return $r1;
    }

    public final boolean isLayered()
    {
        org.apache.http.conn.scheme.Scheme r0;
        boolean $z0;

        r0 := @this: org.apache.http.conn.scheme.Scheme;

        $z0 = r0.<org.apache.http.conn.scheme.Scheme: boolean layered>;

        return $z0;
    }

    public final int resolvePort(int)
    {
        org.apache.http.conn.scheme.Scheme r0;
        int i0, $i1;

        r0 := @this: org.apache.http.conn.scheme.Scheme;

        i0 := @parameter0: int;

        if i0 <= 0 goto label1;

        if i0 <= 65535 goto label2;

     label1:
        $i1 = r0.<org.apache.http.conn.scheme.Scheme: int defaultPort>;

        goto label3;

     label2:
        $i1 = i0;

     label3:
        return $i1;
    }

    public final java.lang.String toString()
    {
        org.apache.http.conn.scheme.Scheme r0;
        java.lang.StringBuilder r1, $r4;
        java.lang.String $r2, $r3, $r5, $r8, $r10;
        int $i0;

        r0 := @this: org.apache.http.conn.scheme.Scheme;

        $r2 = r0.<org.apache.http.conn.scheme.Scheme: java.lang.String stringRep>;

        if $r2 != null goto label1;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        r1 = $r4;

        $r5 = r0.<org.apache.http.conn.scheme.Scheme: java.lang.String name>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);

        $i0 = r0.<org.apache.http.conn.scheme.Scheme: int defaultPort>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<org.apache.http.conn.scheme.Scheme: java.lang.String stringRep> = $r10;

     label1:
        $r3 = r0.<org.apache.http.conn.scheme.Scheme: java.lang.String stringRep>;

        return $r3;
    }

    public final boolean equals(java.lang.Object)
    {
        org.apache.http.conn.scheme.Scheme r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.String $r3, $r4;
        int $i0, $i1;
        org.apache.http.conn.scheme.SocketFactory $r5, $r6;

        r0 := @this: org.apache.http.conn.scheme.Scheme;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return 0;

     label1:
        if r0 != r1 goto label2;

        return 1;

     label2:
        $z0 = r1 instanceof org.apache.http.conn.scheme.Scheme;

        if $z0 != 0 goto label3;

        return 0;

     label3:
        r2 = (org.apache.http.conn.scheme.Scheme) r1;

        $r4 = r0.<org.apache.http.conn.scheme.Scheme: java.lang.String name>;

        $r3 = r2.<org.apache.http.conn.scheme.Scheme: java.lang.String name>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label4;

        $i1 = r0.<org.apache.http.conn.scheme.Scheme: int defaultPort>;

        $i0 = r2.<org.apache.http.conn.scheme.Scheme: int defaultPort>;

        if $i1 != $i0 goto label4;

        $z3 = r0.<org.apache.http.conn.scheme.Scheme: boolean layered>;

        $z2 = r2.<org.apache.http.conn.scheme.Scheme: boolean layered>;

        if $z3 != $z2 goto label4;

        $r6 = r0.<org.apache.http.conn.scheme.Scheme: org.apache.http.conn.scheme.SocketFactory socketFactory>;

        $r5 = r2.<org.apache.http.conn.scheme.Scheme: org.apache.http.conn.scheme.SocketFactory socketFactory>;

        $z4 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z4 == 0 goto label4;

        $z5 = 1;

        goto label5;

     label4:
        $z5 = 0;

     label5:
        return $z5;
    }

    public int hashCode()
    {
        org.apache.http.conn.scheme.Scheme r0;
        byte b0;
        int $i1, i2, i3, i4, i5;
        java.lang.String $r1;
        boolean $z0;
        org.apache.http.conn.scheme.SocketFactory $r2;

        r0 := @this: org.apache.http.conn.scheme.Scheme;

        b0 = 17;

        $i1 = r0.<org.apache.http.conn.scheme.Scheme: int defaultPort>;

        i2 = staticinvoke <org.apache.http.util.LangUtils: int hashCode(int,int)>(b0, $i1);

        $r1 = r0.<org.apache.http.conn.scheme.Scheme: java.lang.String name>;

        i3 = staticinvoke <org.apache.http.util.LangUtils: int hashCode(int,java.lang.Object)>(i2, $r1);

        $z0 = r0.<org.apache.http.conn.scheme.Scheme: boolean layered>;

        i4 = staticinvoke <org.apache.http.util.LangUtils: int hashCode(int,boolean)>(i3, $z0);

        $r2 = r0.<org.apache.http.conn.scheme.Scheme: org.apache.http.conn.scheme.SocketFactory socketFactory>;

        i5 = staticinvoke <org.apache.http.util.LangUtils: int hashCode(int,java.lang.Object)>(i4, $r2);

        return i5;
    }
}
