public class gov.nist.javax.sip.parser.ToParser extends gov.nist.javax.sip.parser.AddressParametersParser
{

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.ToParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.ToParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.AddressParametersParser: void <init>(java.lang.String)>(r1);

        return;
    }

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.ToParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.ToParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.AddressParametersParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    public gov.nist.javax.sip.header.SIPHeader parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.ToParser r0;
        gov.nist.javax.sip.header.To r1, $r2;
        gov.nist.core.LexerCore $r3;

        r0 := @this: gov.nist.javax.sip.parser.ToParser;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ToParser: void headerName(int)>(2063);

        $r2 = new gov.nist.javax.sip.header.To;

        specialinvoke $r2.<gov.nist.javax.sip.header.To: void <init>()>();

        r1 = $r2;

        specialinvoke r0.<gov.nist.javax.sip.parser.AddressParametersParser: void parse(gov.nist.javax.sip.header.AddressParametersHeader)>(r1);

        $r3 = r0.<gov.nist.javax.sip.parser.ToParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r3.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(10);

        return r1;
    }
}
