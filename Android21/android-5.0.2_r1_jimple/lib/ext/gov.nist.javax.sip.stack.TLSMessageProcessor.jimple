public class gov.nist.javax.sip.stack.TLSMessageProcessor extends gov.nist.javax.sip.stack.MessageProcessor
{
    protected int nConnections;
    private boolean isRunning;
    private java.util.Hashtable tlsMessageChannels;
    private java.net.ServerSocket sock;
    protected int useCount;
    private java.util.ArrayList incomingTlsMessageChannels;

    protected void <init>(java.net.InetAddress, gov.nist.javax.sip.stack.SIPTransactionStack, int)
    {
        gov.nist.javax.sip.stack.TLSMessageProcessor r0;
        java.net.InetAddress r1;
        gov.nist.javax.sip.stack.SIPTransactionStack r2;
        int i0;
        java.util.Hashtable $r3;
        java.util.ArrayList $r4;

        r0 := @this: gov.nist.javax.sip.stack.TLSMessageProcessor;

        r1 := @parameter0: java.net.InetAddress;

        r2 := @parameter1: gov.nist.javax.sip.stack.SIPTransactionStack;

        i0 := @parameter2: int;

        specialinvoke r0.<gov.nist.javax.sip.stack.MessageProcessor: void <init>(java.net.InetAddress,int,java.lang.String,gov.nist.javax.sip.stack.SIPTransactionStack)>(r1, i0, "tls", r2);

        r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: int useCount> = 0;

        r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack> = r2;

        $r3 = new java.util.Hashtable;

        specialinvoke $r3.<java.util.Hashtable: void <init>()>();

        r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: java.util.Hashtable tlsMessageChannels> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: java.util.ArrayList incomingTlsMessageChannels> = $r4;

        return;
    }

    public void start() throws java.io.IOException
    {
        gov.nist.javax.sip.stack.TLSMessageProcessor r0;
        java.lang.Thread r1, $r3;
        java.lang.String[] r2;
        gov.nist.javax.sip.stack.SIPTransactionStack $r4, $r15;
        gov.nist.core.net.NetworkLayer $r5;
        int $i0;
        java.net.InetAddress $r6;
        javax.net.ssl.SSLServerSocket $r7, $r9, $r11, $r13, $r18, $r19;
        java.net.ServerSocket $r8, $r10, $r12, $r16, $r17;
        gov.nist.javax.sip.SipStackImpl $r14;

        r0 := @this: gov.nist.javax.sip.stack.TLSMessageProcessor;

        $r3 = new java.lang.Thread;

        specialinvoke $r3.<java.lang.Thread: void <init>(java.lang.Runnable)>(r0);

        r1 = $r3;

        virtualinvoke r1.<java.lang.Thread: void setName(java.lang.String)>("TLSMessageProcessorThread");

        virtualinvoke r1.<java.lang.Thread: void setPriority(int)>(10);

        virtualinvoke r1.<java.lang.Thread: void setDaemon(boolean)>(1);

        $r4 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r5 = virtualinvoke $r4.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.net.NetworkLayer getNetworkLayer()>();

        $i0 = virtualinvoke r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: int getPort()>();

        $r6 = virtualinvoke r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: java.net.InetAddress getIpAddress()>();

        $r7 = interfaceinvoke $r5.<gov.nist.core.net.NetworkLayer: javax.net.ssl.SSLServerSocket createSSLServerSocket(int,int,java.net.InetAddress)>($i0, 0, $r6);

        r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: java.net.ServerSocket sock> = $r7;

        $r8 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: java.net.ServerSocket sock>;

        $r9 = (javax.net.ssl.SSLServerSocket) $r8;

        virtualinvoke $r9.<javax.net.ssl.SSLServerSocket: void setNeedClientAuth(boolean)>(0);

        $r10 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: java.net.ServerSocket sock>;

        $r11 = (javax.net.ssl.SSLServerSocket) $r10;

        virtualinvoke $r11.<javax.net.ssl.SSLServerSocket: void setUseClientMode(boolean)>(0);

        $r12 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: java.net.ServerSocket sock>;

        $r13 = (javax.net.ssl.SSLServerSocket) $r12;

        virtualinvoke $r13.<javax.net.ssl.SSLServerSocket: void setWantClientAuth(boolean)>(1);

        $r15 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r14 = (gov.nist.javax.sip.SipStackImpl) $r15;

        r2 = virtualinvoke $r14.<gov.nist.javax.sip.SipStackImpl: java.lang.String[] getEnabledCipherSuites()>();

        $r16 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: java.net.ServerSocket sock>;

        $r18 = (javax.net.ssl.SSLServerSocket) $r16;

        virtualinvoke $r18.<javax.net.ssl.SSLServerSocket: void setEnabledCipherSuites(java.lang.String[])>(r2);

        $r17 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: java.net.ServerSocket sock>;

        $r19 = (javax.net.ssl.SSLServerSocket) $r17;

        virtualinvoke $r19.<javax.net.ssl.SSLServerSocket: void setWantClientAuth(boolean)>(1);

        r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: boolean isRunning> = 1;

        virtualinvoke r1.<java.lang.Thread: void start()>();

        return;
    }

    public void run()
    {
        gov.nist.javax.sip.stack.TLSMessageProcessor r0, r1;
        java.lang.Throwable r3, $r19;
        boolean $z0, $z1, $z3, $z4;
        gov.nist.javax.sip.stack.SIPTransactionStack $r5, $r7, $r10, $r11, $r12, $r16, $r20, $r25, $r26;
        int $i0, $i1, $i2, $i3, $i4;
        java.net.ServerSocket $r6;
        gov.nist.javax.sip.stack.TLSMessageChannel $r8;
        java.util.ArrayList $r9;
        gov.nist.core.StackLogger $r13, $r15, $r21, $r22, $r27;
        java.net.SocketException $r14, r29;
        java.lang.Exception $r17, r32;
        java.lang.InterruptedException $r18;
        java.io.IOException $r23, r31;
        javax.net.ssl.SSLException $r24, r30;
        java.net.Socket r28;

        r0 := @this: gov.nist.javax.sip.stack.TLSMessageProcessor;

     label01:
        $z0 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: boolean isRunning>;

        if $z0 == 0 goto label21;

     label02:
        r1 = r0;

        entermonitor r0;

     label03:
        $r5 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $i0 = $r5.<gov.nist.javax.sip.stack.SIPTransactionStack: int maxConnections>;

        if $i0 == -1 goto label09;

        $i3 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: int nConnections>;

        $r12 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $i4 = $r12.<gov.nist.javax.sip.stack.SIPTransactionStack: int maxConnections>;

        if $i3 < $i4 goto label09;

     label04:
        virtualinvoke r0.<java.lang.Object: void wait()>();

        $z3 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: boolean isRunning>;

        if $z3 != 0 goto label07;

     label05:
        exitmonitor r1;

     label06:
        return;

     label07:
        goto label03;

     label08:
        $r18 := @caughtexception;

        goto label09;

     label09:
        $i1 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: int nConnections>;

        $i2 = $i1 + 1;

        r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: int nConnections> = $i2;

        exitmonitor r1;

     label10:
        goto label13;

     label11:
        $r19 := @caughtexception;

        r3 = $r19;

        exitmonitor r1;

     label12:
        throw r3;

     label13:
        $r6 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: java.net.ServerSocket sock>;

        r28 = virtualinvoke $r6.<java.net.ServerSocket: java.net.Socket accept()>();

        $r7 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z1 = virtualinvoke $r7.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label14;

        $r11 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r13 = virtualinvoke $r11.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r13.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Accepting new connection!");

     label14:
        $r9 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: java.util.ArrayList incomingTlsMessageChannels>;

        $r8 = new gov.nist.javax.sip.stack.TLSMessageChannel;

        $r10 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        specialinvoke $r8.<gov.nist.javax.sip.stack.TLSMessageChannel: void <init>(java.net.Socket,gov.nist.javax.sip.stack.SIPTransactionStack,gov.nist.javax.sip.stack.TLSMessageProcessor)>(r28, $r10, r0);

        virtualinvoke $r9.<java.util.ArrayList: boolean add(java.lang.Object)>($r8);

     label15:
        goto label01;

     label16:
        $r14 := @caughtexception;

        r29 = $r14;

        $z4 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: boolean isRunning>;

        if $z4 == 0 goto label17;

        $r16 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r15 = virtualinvoke $r16.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r15.<gov.nist.core.StackLogger: void logError(java.lang.String,java.lang.Exception)>("Fatal - SocketException occured while Accepting connection", r29);

        r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: boolean isRunning> = 0;

        goto label21;

     label17:
        goto label01;

     label18:
        $r24 := @caughtexception;

        r30 = $r24;

        r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: boolean isRunning> = 0;

        $r25 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r22 = virtualinvoke $r25.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r22.<gov.nist.core.StackLogger: void logError(java.lang.String,java.lang.Exception)>("Fatal - SSSLException occured while Accepting connection", r30);

        goto label21;

     label19:
        $r23 := @caughtexception;

        r31 = $r23;

        $r26 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r27 = virtualinvoke $r26.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r27.<gov.nist.core.StackLogger: void logError(java.lang.String,java.lang.Exception)>("Problem Accepting Connection", r31);

        goto label01;

     label20:
        $r17 := @caughtexception;

        r32 = $r17;

        $r20 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r21 = virtualinvoke $r20.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r21.<gov.nist.core.StackLogger: void logError(java.lang.String,java.lang.Exception)>("Unexpected Exception!", r32);

        goto label01;

     label21:
        return;

        catch java.lang.InterruptedException from label04 to label05 with label08;
        catch java.lang.Throwable from label03 to label06 with label11;
        catch java.lang.Throwable from label07 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
        catch java.net.SocketException from label02 to label06 with label16;
        catch java.net.SocketException from label07 to label15 with label16;
        catch javax.net.ssl.SSLException from label02 to label06 with label18;
        catch javax.net.ssl.SSLException from label07 to label15 with label18;
        catch java.io.IOException from label02 to label06 with label19;
        catch java.io.IOException from label07 to label15 with label19;
        catch java.lang.Exception from label02 to label06 with label20;
        catch java.lang.Exception from label07 to label15 with label20;
    }

    public gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()
    {
        gov.nist.javax.sip.stack.TLSMessageProcessor r0;
        gov.nist.javax.sip.stack.SIPTransactionStack $r1;

        r0 := @this: gov.nist.javax.sip.stack.TLSMessageProcessor;

        $r1 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        return $r1;
    }

    public synchronized void stop()
    {
        gov.nist.javax.sip.stack.TLSMessageProcessor r0;
        java.io.IOException r1, $r9;
        java.util.Iterator r2, r11;
        gov.nist.javax.sip.stack.TLSMessageChannel r3, r12;
        boolean $z0, $z1, $z2;
        java.net.ServerSocket $r4;
        java.util.Hashtable $r5;
        java.util.ArrayList $r6;
        java.lang.Object $r7, $r8;
        java.util.Collection r10;

        r0 := @this: gov.nist.javax.sip.stack.TLSMessageProcessor;

        $z0 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: boolean isRunning>;

        if $z0 != 0 goto label1;

        return;

     label1:
        r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: boolean isRunning> = 0;

     label2:
        $r4 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: java.net.ServerSocket sock>;

        virtualinvoke $r4.<java.net.ServerSocket: void close()>();

     label3:
        goto label5;

     label4:
        $r9 := @caughtexception;

        r1 = $r9;

        virtualinvoke r1.<java.io.IOException: void printStackTrace()>();

     label5:
        $r5 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: java.util.Hashtable tlsMessageChannels>;

        r10 = virtualinvoke $r5.<java.util.Hashtable: java.util.Collection values()>();

        r2 = interfaceinvoke r10.<java.util.Collection: java.util.Iterator iterator()>();

     label6:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r8 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (gov.nist.javax.sip.stack.TLSMessageChannel) $r8;

        virtualinvoke r3.<gov.nist.javax.sip.stack.TLSMessageChannel: void close()>();

        goto label6;

     label7:
        $r6 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: java.util.ArrayList incomingTlsMessageChannels>;

        r11 = virtualinvoke $r6.<java.util.ArrayList: java.util.Iterator iterator()>();

     label8:
        $z2 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label9;

        $r7 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r12 = (gov.nist.javax.sip.stack.TLSMessageChannel) $r7;

        virtualinvoke r12.<gov.nist.javax.sip.stack.TLSMessageChannel: void close()>();

        goto label8;

     label9:
        virtualinvoke r0.<java.lang.Object: void notify()>();

        return;

        catch java.io.IOException from label2 to label3 with label4;
    }

    protected synchronized void remove(gov.nist.javax.sip.stack.TLSMessageChannel)
    {
        gov.nist.javax.sip.stack.TLSMessageProcessor r0;
        gov.nist.javax.sip.stack.TLSMessageChannel r1;
        java.lang.String r2, $r15;
        gov.nist.javax.sip.stack.SIPTransactionStack $r3, $r9;
        boolean $z0;
        java.util.Hashtable $r4, $r7;
        java.lang.Object $r5;
        java.util.ArrayList $r6;
        gov.nist.core.StackLogger $r10;
        java.lang.StringBuilder $r11, $r13, $r14, $r16;
        java.lang.Thread $r12;

        r0 := @this: gov.nist.javax.sip.stack.TLSMessageProcessor;

        r1 := @parameter0: gov.nist.javax.sip.stack.TLSMessageChannel;

        r2 = virtualinvoke r1.<gov.nist.javax.sip.stack.TLSMessageChannel: java.lang.String getKey()>();

        $r3 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r3.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label1;

        $r9 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r10 = virtualinvoke $r9.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" removing ");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r10.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r15);

     label1:
        $r4 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: java.util.Hashtable tlsMessageChannels>;

        $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r2);

        if $r5 != r1 goto label2;

        $r7 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: java.util.Hashtable tlsMessageChannels>;

        virtualinvoke $r7.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r2);

     label2:
        $r6 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: java.util.ArrayList incomingTlsMessageChannels>;

        virtualinvoke $r6.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public synchronized gov.nist.javax.sip.stack.MessageChannel createMessageChannel(gov.nist.core.HostPort) throws java.io.IOException
    {
        gov.nist.javax.sip.stack.TLSMessageProcessor r0;
        gov.nist.core.HostPort r1;
        java.lang.String r2, $r18, $r24;
        gov.nist.javax.sip.stack.TLSMessageChannel r3, $r6, $r25;
        java.util.Hashtable $r4, $r9, $r23;
        java.lang.Object $r5, $r26;
        java.net.InetAddress $r7;
        int $i0;
        gov.nist.javax.sip.stack.SIPTransactionStack $r8, $r11, $r12, $r17;
        boolean $z0;
        java.lang.StringBuilder $r13, $r15, $r16, $r19, $r21, $r22;
        gov.nist.core.StackLogger $r14, $r20;

        r0 := @this: gov.nist.javax.sip.stack.TLSMessageProcessor;

        r1 := @parameter0: gov.nist.core.HostPort;

        r2 = staticinvoke <gov.nist.javax.sip.stack.MessageChannel: java.lang.String getKey(gov.nist.core.HostPort,java.lang.String)>(r1, "TLS");

        $r4 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: java.util.Hashtable tlsMessageChannels>;

        $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r2);

        if $r5 == null goto label1;

        $r23 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: java.util.Hashtable tlsMessageChannels>;

        $r26 = virtualinvoke $r23.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r2);

        $r25 = (gov.nist.javax.sip.stack.TLSMessageChannel) $r26;

        return $r25;

     label1:
        $r6 = new gov.nist.javax.sip.stack.TLSMessageChannel;

        $r7 = virtualinvoke r1.<gov.nist.core.HostPort: java.net.InetAddress getInetAddress()>();

        $i0 = virtualinvoke r1.<gov.nist.core.HostPort: int getPort()>();

        $r8 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        specialinvoke $r6.<gov.nist.javax.sip.stack.TLSMessageChannel: void <init>(java.net.InetAddress,int,gov.nist.javax.sip.stack.SIPTransactionStack,gov.nist.javax.sip.stack.TLSMessageProcessor)>($r7, $i0, $r8, r0);

        r3 = $r6;

        $r9 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: java.util.Hashtable tlsMessageChannels>;

        virtualinvoke $r9.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

        r3.<gov.nist.javax.sip.stack.TLSMessageChannel: boolean isCached> = 1;

        $r11 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r11.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label2;

        $r12 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r14 = virtualinvoke $r12.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("key ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r14.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r18);

        $r17 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r20 = virtualinvoke $r17.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating ");

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r20.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r24);

     label2:
        return r3;
    }

    protected synchronized void cacheMessageChannel(gov.nist.javax.sip.stack.TLSMessageChannel)
    {
        gov.nist.javax.sip.stack.TLSMessageProcessor r0;
        gov.nist.javax.sip.stack.TLSMessageChannel r1, r3;
        java.lang.String r2, $r15, $r21;
        java.util.Hashtable $r4, $r7;
        java.lang.Object $r5;
        gov.nist.javax.sip.stack.SIPTransactionStack $r6, $r9, $r14, $r16;
        boolean $z0, $z1;
        gov.nist.core.StackLogger $r10, $r18;
        java.lang.StringBuilder $r11, $r12, $r13, $r17, $r19, $r20;

        r0 := @this: gov.nist.javax.sip.stack.TLSMessageProcessor;

        r1 := @parameter0: gov.nist.javax.sip.stack.TLSMessageChannel;

        r2 = virtualinvoke r1.<gov.nist.javax.sip.stack.TLSMessageChannel: java.lang.String getKey()>();

        $r4 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: java.util.Hashtable tlsMessageChannels>;

        $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r2);

        r3 = (gov.nist.javax.sip.stack.TLSMessageChannel) $r5;

        if r3 == null goto label2;

        $r14 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z1 = virtualinvoke $r14.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label1;

        $r16 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r18 = virtualinvoke $r16.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Closing ");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r18.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r21);

     label1:
        virtualinvoke r3.<gov.nist.javax.sip.stack.TLSMessageChannel: void close()>();

     label2:
        $r6 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r6.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label3;

        $r9 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r10 = virtualinvoke $r9.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caching ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r10.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r15);

     label3:
        $r7 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: java.util.Hashtable tlsMessageChannels>;

        virtualinvoke $r7.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r1);

        return;
    }

    public synchronized gov.nist.javax.sip.stack.MessageChannel createMessageChannel(java.net.InetAddress, int) throws java.io.IOException
    {
        gov.nist.javax.sip.stack.TLSMessageProcessor r0;
        java.net.InetAddress r1;
        int i0;
        java.lang.String r2, $r15, $r21, $r27;
        gov.nist.javax.sip.stack.TLSMessageChannel r3, $r6, $r26;
        java.util.Hashtable $r4, $r8, $r24;
        java.lang.Object $r5, $r23;
        gov.nist.javax.sip.stack.SIPTransactionStack $r7, $r10, $r11, $r18;
        boolean $z0;
        gov.nist.core.StackLogger $r12, $r17;
        java.lang.StringBuilder $r13, $r14, $r16, $r19, $r20, $r22;
        java.net.UnknownHostException $r25, r29;
        java.io.IOException $r28;

        r0 := @this: gov.nist.javax.sip.stack.TLSMessageProcessor;

        r1 := @parameter0: java.net.InetAddress;

        i0 := @parameter1: int;

     label1:
        r2 = staticinvoke <gov.nist.javax.sip.stack.MessageChannel: java.lang.String getKey(java.net.InetAddress,int,java.lang.String)>(r1, i0, "TLS");

        $r4 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: java.util.Hashtable tlsMessageChannels>;

        $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r2);

        if $r5 == null goto label3;

        $r24 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: java.util.Hashtable tlsMessageChannels>;

        $r23 = virtualinvoke $r24.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r2);

        $r26 = (gov.nist.javax.sip.stack.TLSMessageChannel) $r23;

     label2:
        return $r26;

     label3:
        $r6 = new gov.nist.javax.sip.stack.TLSMessageChannel;

        $r7 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        specialinvoke $r6.<gov.nist.javax.sip.stack.TLSMessageChannel: void <init>(java.net.InetAddress,int,gov.nist.javax.sip.stack.SIPTransactionStack,gov.nist.javax.sip.stack.TLSMessageProcessor)>(r1, i0, $r7, r0);

        r3 = $r6;

        $r8 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: java.util.Hashtable tlsMessageChannels>;

        virtualinvoke $r8.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

        r3.<gov.nist.javax.sip.stack.TLSMessageChannel: boolean isCached> = 1;

        $r10 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r10.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label4;

        $r11 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r12 = virtualinvoke $r11.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("key ");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r15);

        $r18 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r17 = virtualinvoke $r18.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating ");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r17.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r21);

     label4:
        return r3;

     label5:
        $r25 := @caughtexception;

        r29 = $r25;

        $r28 = new java.io.IOException;

        $r27 = virtualinvoke r29.<java.net.UnknownHostException: java.lang.String getMessage()>();

        specialinvoke $r28.<java.io.IOException: void <init>(java.lang.String)>($r27);

        throw $r28;

        catch java.net.UnknownHostException from label1 to label2 with label5;
        catch java.net.UnknownHostException from label3 to label4 with label5;
    }

    public int getMaximumMessageSize()
    {
        gov.nist.javax.sip.stack.TLSMessageProcessor r0;

        r0 := @this: gov.nist.javax.sip.stack.TLSMessageProcessor;

        return 2147483647;
    }

    public boolean inUse()
    {
        gov.nist.javax.sip.stack.TLSMessageProcessor r0;
        int $i0;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.stack.TLSMessageProcessor;

        $i0 = r0.<gov.nist.javax.sip.stack.TLSMessageProcessor: int useCount>;

        if $i0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int getDefaultTargetPort()
    {
        gov.nist.javax.sip.stack.TLSMessageProcessor r0;

        r0 := @this: gov.nist.javax.sip.stack.TLSMessageProcessor;

        return 5061;
    }

    public boolean isSecure()
    {
        gov.nist.javax.sip.stack.TLSMessageProcessor r0;

        r0 := @this: gov.nist.javax.sip.stack.TLSMessageProcessor;

        return 1;
    }
}
