public class javax.sip.SipFactory extends java.lang.Object
{
    private static final java.lang.String IP_ADDRESS_PROP;
    private static final java.lang.String STACK_NAME_PROP;
    private static javax.sip.SipFactory sSipFactory;
    private java.util.Map mNameSipStackMap;

    public static synchronized javax.sip.SipFactory getInstance()
    {
        javax.sip.SipFactory $r0, $r1, $r2;

        $r0 = <javax.sip.SipFactory: javax.sip.SipFactory sSipFactory>;

        if $r0 != null goto label1;

        $r2 = new javax.sip.SipFactory;

        specialinvoke $r2.<javax.sip.SipFactory: void <init>()>();

        <javax.sip.SipFactory: javax.sip.SipFactory sSipFactory> = $r2;

     label1:
        $r1 = <javax.sip.SipFactory: javax.sip.SipFactory sSipFactory>;

        return $r1;
    }

    private void <init>()
    {
        javax.sip.SipFactory r0;
        java.util.HashMap $r1;

        r0 := @this: javax.sip.SipFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<javax.sip.SipFactory: java.util.Map mNameSipStackMap> = $r1;

        return;
    }

    public synchronized void resetFactory()
    {
        javax.sip.SipFactory r0;
        java.util.Map $r1;

        r0 := @this: javax.sip.SipFactory;

        $r1 = r0.<javax.sip.SipFactory: java.util.Map mNameSipStackMap>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        return;
    }

    public synchronized javax.sip.SipStack createSipStack(java.util.Properties) throws javax.sip.PeerUnavailableException
    {
        javax.sip.SipFactory r0;
        java.util.Properties r1;
        java.lang.String r2, r4, $r11, $r27;
        javax.sip.SipStack r3;
        java.lang.Exception r5, $r24;
        java.util.Map $r6, $r21;
        java.lang.Object $r7, $r18;
        java.lang.StringBuilder $r8, $r9, $r12, $r13, $r25, $r26, $r28;
        java.lang.Class $r10, $r14, $r15;
        java.lang.reflect.Constructor $r16;
        java.lang.Class[] $r17;
        java.lang.Object[] $r19;
        javax.sip.PeerUnavailableException $r22, $r23;

        r0 := @this: javax.sip.SipFactory;

        r1 := @parameter0: java.util.Properties;

        r2 = virtualinvoke r1.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("javax.sip.IP_ADDRESS");

        if r2 != null goto label1;

        r2 = virtualinvoke r1.<java.util.Properties: java.lang.String getProperty(java.lang.String)>("javax.sip.STACK_NAME");

        if r2 != null goto label1;

        $r22 = new javax.sip.PeerUnavailableException;

        specialinvoke $r22.<javax.sip.PeerUnavailableException: void <init>(java.lang.String)>("javax.sip.STACK_NAME property not found");

        throw $r22;

     label1:
        $r6 = r0.<javax.sip.SipFactory: java.util.Map mNameSipStackMap>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r3 = (javax.sip.SipStack) $r7;

        if r3 != null goto label6;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("gov.nist.");

        $r10 = class "javax/sip/SipStack";

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.String getCanonicalName()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Impl");

        r4 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r15 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r4);

        $r14 = virtualinvoke $r15.<java.lang.Class: java.lang.Class asSubclass(java.lang.Class)>(class "javax/sip/SipStack");

        $r17 = newarray (java.lang.Class)[1];

        $r17[0] = class "java/util/Properties";

        $r16 = virtualinvoke $r14.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r17);

        $r19 = newarray (java.lang.Object)[1];

        $r19[0] = r1;

        $r18 = virtualinvoke $r16.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r19);

        r3 = (javax.sip.SipStack) $r18;

     label3:
        goto label5;

     label4:
        $r24 := @caughtexception;

        r5 = $r24;

        $r23 = new javax.sip.PeerUnavailableException;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to initiate ");

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<javax.sip.PeerUnavailableException: void <init>(java.lang.String,java.lang.Throwable)>($r27, r5);

        throw $r23;

     label5:
        $r21 = r0.<javax.sip.SipFactory: java.util.Map mNameSipStackMap>;

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

     label6:
        return r3;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public javax.sip.address.AddressFactory createAddressFactory() throws javax.sip.PeerUnavailableException
    {
        javax.sip.SipFactory r0;
        java.lang.Exception r1, $r3;
        gov.nist.javax.sip.address.AddressFactoryImpl $r2;
        boolean $z0;
        javax.sip.PeerUnavailableException $r4, $r5;

        r0 := @this: javax.sip.SipFactory;

     label1:
        $r2 = new gov.nist.javax.sip.address.AddressFactoryImpl;

        specialinvoke $r2.<gov.nist.javax.sip.address.AddressFactoryImpl: void <init>()>();

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        $z0 = r1 instanceof javax.sip.PeerUnavailableException;

        if $z0 == 0 goto label4;

        $r5 = (javax.sip.PeerUnavailableException) r1;

        throw $r5;

     label4:
        $r4 = new javax.sip.PeerUnavailableException;

        specialinvoke $r4.<javax.sip.PeerUnavailableException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to create AddressFactory", r1);

        throw $r4;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public javax.sip.header.HeaderFactory createHeaderFactory() throws javax.sip.PeerUnavailableException
    {
        javax.sip.SipFactory r0;
        java.lang.Exception r1, $r3;
        gov.nist.javax.sip.header.HeaderFactoryImpl $r2;
        boolean $z0;
        javax.sip.PeerUnavailableException $r4, $r5;

        r0 := @this: javax.sip.SipFactory;

     label1:
        $r2 = new gov.nist.javax.sip.header.HeaderFactoryImpl;

        specialinvoke $r2.<gov.nist.javax.sip.header.HeaderFactoryImpl: void <init>()>();

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        $z0 = r1 instanceof javax.sip.PeerUnavailableException;

        if $z0 == 0 goto label4;

        $r5 = (javax.sip.PeerUnavailableException) r1;

        throw $r5;

     label4:
        $r4 = new javax.sip.PeerUnavailableException;

        specialinvoke $r4.<javax.sip.PeerUnavailableException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to create HeaderFactory", r1);

        throw $r4;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public javax.sip.message.MessageFactory createMessageFactory() throws javax.sip.PeerUnavailableException
    {
        javax.sip.SipFactory r0;
        java.lang.Exception r1, $r3;
        gov.nist.javax.sip.message.MessageFactoryImpl $r2;
        boolean $z0;
        javax.sip.PeerUnavailableException $r4, $r5;

        r0 := @this: javax.sip.SipFactory;

     label1:
        $r2 = new gov.nist.javax.sip.message.MessageFactoryImpl;

        specialinvoke $r2.<gov.nist.javax.sip.message.MessageFactoryImpl: void <init>()>();

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        $z0 = r1 instanceof javax.sip.PeerUnavailableException;

        if $z0 == 0 goto label4;

        $r5 = (javax.sip.PeerUnavailableException) r1;

        throw $r5;

     label4:
        $r4 = new javax.sip.PeerUnavailableException;

        specialinvoke $r4.<javax.sip.PeerUnavailableException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to create MessageFactory", r1);

        throw $r4;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        <javax.sip.SipFactory: java.lang.String STACK_NAME_PROP> = "javax.sip.STACK_NAME";

        <javax.sip.SipFactory: java.lang.String IP_ADDRESS_PROP> = "javax.sip.IP_ADDRESS";

        <javax.sip.SipFactory: javax.sip.SipFactory sSipFactory> = null;

        return;
    }
}
