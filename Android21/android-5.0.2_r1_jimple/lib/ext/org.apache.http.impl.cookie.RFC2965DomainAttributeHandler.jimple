public class org.apache.http.impl.cookie.RFC2965DomainAttributeHandler extends java.lang.Object implements org.apache.http.cookie.CookieAttributeHandler
{

    public void <init>()
    {
        org.apache.http.impl.cookie.RFC2965DomainAttributeHandler r0;

        r0 := @this: org.apache.http.impl.cookie.RFC2965DomainAttributeHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void parse(org.apache.http.cookie.SetCookie, java.lang.String) throws org.apache.http.cookie.MalformedCookieException
    {
        org.apache.http.impl.cookie.RFC2965DomainAttributeHandler r0;
        org.apache.http.cookie.SetCookie r1;
        java.lang.String r2, $r3, r11;
        int $i0;
        java.util.Locale $r4;
        boolean $z0;
        java.lang.StringBuilder $r5, $r6, $r7;
        org.apache.http.cookie.MalformedCookieException $r8, $r9;
        java.lang.IllegalArgumentException $r10;

        r0 := @this: org.apache.http.impl.cookie.RFC2965DomainAttributeHandler;

        r1 := @parameter0: org.apache.http.cookie.SetCookie;

        r2 := @parameter1: java.lang.String;

        if r1 != null goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r10;

     label1:
        if r2 != null goto label2;

        $r9 = new org.apache.http.cookie.MalformedCookieException;

        specialinvoke $r9.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>("Missing value for domain attribute");

        throw $r9;

     label2:
        $r3 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 != 0 goto label3;

        $r8 = new org.apache.http.cookie.MalformedCookieException;

        specialinvoke $r8.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>("Blank value for domain attribute");

        throw $r8;

     label3:
        $r4 = <java.util.Locale: java.util.Locale ENGLISH>;

        r11 = virtualinvoke r2.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r4);

        $z0 = virtualinvoke r11.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z0 != 0 goto label4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        interfaceinvoke r1.<org.apache.http.cookie.SetCookie: void setDomain(java.lang.String)>(r11);

        return;
    }

    public boolean domainMatch(java.lang.String, java.lang.String)
    {
        org.apache.http.impl.cookie.RFC2965DomainAttributeHandler r0;
        java.lang.String r1, r2;
        boolean z0, $z1, $z2, $z3, $z4;

        r0 := @this: org.apache.http.impl.cookie.RFC2965DomainAttributeHandler;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z2 == 0 goto label2;

        $z4 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>(r2);

        if $z4 == 0 goto label2;

     label1:
        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        z0 = $z3;

        return z0;
    }

    public void validate(org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin) throws org.apache.http.cookie.MalformedCookieException
    {
        org.apache.http.impl.cookie.RFC2965DomainAttributeHandler r0;
        org.apache.http.cookie.Cookie r1;
        org.apache.http.cookie.CookieOrigin r2;
        java.lang.String r3, r4, r5, $r6, $r8, $r9, $r11, $r16, $r22, $r24, $r28, $r33, $r37, $r41, $r44, $r47, $r50;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.util.Locale $r7, $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.http.cookie.MalformedCookieException $r12, $r23, $r29, $r36, $r51, $r54;
        java.lang.StringBuilder $r13, $r14, $r15, $r17, $r18, $r19, $r20, $r25, $r26, $r27, $r30, $r31, $r32, $r34, $r35, $r38, $r39, $r40, $r42, $r43, $r45, $r46, $r48, $r49, $r52, $r53;
        org.apache.http.cookie.ClientCookie $r21;
        java.lang.IllegalArgumentException $r55, $r56;

        r0 := @this: org.apache.http.impl.cookie.RFC2965DomainAttributeHandler;

        r1 := @parameter0: org.apache.http.cookie.Cookie;

        r2 := @parameter1: org.apache.http.cookie.CookieOrigin;

        if r1 != null goto label01;

        $r56 = new java.lang.IllegalArgumentException;

        specialinvoke $r56.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r56;

     label01:
        if r2 != null goto label02;

        $r55 = new java.lang.IllegalArgumentException;

        specialinvoke $r55.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie origin may not be null");

        throw $r55;

     label02:
        $r6 = virtualinvoke r2.<org.apache.http.cookie.CookieOrigin: java.lang.String getHost()>();

        $r7 = <java.util.Locale: java.util.Locale ENGLISH>;

        r3 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r7);

        $r8 = interfaceinvoke r1.<org.apache.http.cookie.Cookie: java.lang.String getDomain()>();

        if $r8 != null goto label03;

        $r54 = new org.apache.http.cookie.MalformedCookieException;

        specialinvoke $r54.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>("Invalid cookie state: domain not specified");

        throw $r54;

     label03:
        $r9 = interfaceinvoke r1.<org.apache.http.cookie.Cookie: java.lang.String getDomain()>();

        $r10 = <java.util.Locale: java.util.Locale ENGLISH>;

        r4 = virtualinvoke $r9.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r10);

        $z0 = r1 instanceof org.apache.http.cookie.ClientCookie;

        if $z0 == 0 goto label09;

        $r21 = (org.apache.http.cookie.ClientCookie) r1;

        $z3 = interfaceinvoke $r21.<org.apache.http.cookie.ClientCookie: boolean containsAttribute(java.lang.String)>("domain");

        if $z3 == 0 goto label09;

        $z2 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z2 != 0 goto label04;

        $r51 = new org.apache.http.cookie.MalformedCookieException;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Domain attribute \"");

        $r47 = interfaceinvoke r1.<org.apache.http.cookie.Cookie: java.lang.String getDomain()>();

        $r48 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" violates RFC 2109: domain must start with a dot");

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r51.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>($r50);

        throw $r51;

     label04:
        i0 = virtualinvoke r4.<java.lang.String: int indexOf(int,int)>(46, 1);

        if i0 < 0 goto label05;

        $i5 = virtualinvoke r4.<java.lang.String: int length()>();

        $i6 = $i5 - 1;

        if i0 != $i6 goto label06;

     label05:
        $z4 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>(".local");

        if $z4 != 0 goto label06;

        $r36 = new org.apache.http.cookie.MalformedCookieException;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Domain attribute \"");

        $r41 = interfaceinvoke r1.<org.apache.http.cookie.Cookie: java.lang.String getDomain()>();

        $r40 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r46 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" violates RFC 2965: the value contains no embedded dots ");

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("and the value is not .local");

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r36.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>($r44);

        throw $r36;

     label06:
        $z5 = virtualinvoke r0.<org.apache.http.impl.cookie.RFC2965DomainAttributeHandler: boolean domainMatch(java.lang.String,java.lang.String)>(r3, r4);

        if $z5 != 0 goto label07;

        $r29 = new org.apache.http.cookie.MalformedCookieException;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Domain attribute \"");

        $r33 = interfaceinvoke r1.<org.apache.http.cookie.Cookie: java.lang.String getDomain()>();

        $r32 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r39 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" violates RFC 2965: effective host name does not ");

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("domain-match domain attribute.");

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>($r37);

        throw $r29;

     label07:
        $i1 = virtualinvoke r3.<java.lang.String: int length()>();

        $i2 = virtualinvoke r4.<java.lang.String: int length()>();

        $i4 = $i1 - $i2;

        r5 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i4);

        $i3 = virtualinvoke r5.<java.lang.String: int indexOf(int)>(46);

        if $i3 == -1 goto label08;

        $r23 = new org.apache.http.cookie.MalformedCookieException;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Domain attribute \"");

        $r24 = interfaceinvoke r1.<org.apache.http.cookie.Cookie: java.lang.String getDomain()>();

        $r25 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" violates RFC 2965: ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("effective host minus domain may not contain any dots");

        $r28 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>($r28);

        throw $r23;

     label08:
        goto label10;

     label09:
        $r11 = interfaceinvoke r1.<org.apache.http.cookie.Cookie: java.lang.String getDomain()>();

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z1 != 0 goto label10;

        $r12 = new org.apache.http.cookie.MalformedCookieException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal domain attribute: \"");

        $r16 = interfaceinvoke r1.<org.apache.http.cookie.Cookie: java.lang.String getDomain()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\".");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Domain of origin: \"");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<org.apache.http.cookie.MalformedCookieException: void <init>(java.lang.String)>($r22);

        throw $r12;

     label10:
        return;
    }

    public boolean match(org.apache.http.cookie.Cookie, org.apache.http.cookie.CookieOrigin)
    {
        org.apache.http.impl.cookie.RFC2965DomainAttributeHandler r0;
        org.apache.http.cookie.Cookie r1;
        org.apache.http.cookie.CookieOrigin r2;
        java.lang.String r3, r4, r5, $r6;
        java.util.Locale $r7;
        boolean $z0, $z1;
        int $i0, $i1, $i2, $i3;
        java.lang.IllegalArgumentException $r8, $r9;

        r0 := @this: org.apache.http.impl.cookie.RFC2965DomainAttributeHandler;

        r1 := @parameter0: org.apache.http.cookie.Cookie;

        r2 := @parameter1: org.apache.http.cookie.CookieOrigin;

        if r1 != null goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie may not be null");

        throw $r8;

     label1:
        if r2 != null goto label2;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cookie origin may not be null");

        throw $r9;

     label2:
        $r6 = virtualinvoke r2.<org.apache.http.cookie.CookieOrigin: java.lang.String getHost()>();

        $r7 = <java.util.Locale: java.util.Locale ENGLISH>;

        r3 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r7);

        r4 = interfaceinvoke r1.<org.apache.http.cookie.Cookie: java.lang.String getDomain()>();

        $z0 = virtualinvoke r0.<org.apache.http.impl.cookie.RFC2965DomainAttributeHandler: boolean domainMatch(java.lang.String,java.lang.String)>(r3, r4);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        $i0 = virtualinvoke r3.<java.lang.String: int length()>();

        $i1 = virtualinvoke r4.<java.lang.String: int length()>();

        $i2 = $i0 - $i1;

        r5 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        $i3 = virtualinvoke r5.<java.lang.String: int indexOf(int)>(46);

        if $i3 != -1 goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        return $z1;
    }
}
