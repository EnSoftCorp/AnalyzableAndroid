public class gov.nist.javax.sip.parser.DateParser extends gov.nist.javax.sip.parser.HeaderParser
{

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.DateParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.DateParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(java.lang.String)>(r1);

        return;
    }

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.DateParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.DateParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    public gov.nist.javax.sip.header.SIPHeader parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.DateParser r0;
        java.util.Calendar r1;
        java.lang.String r2, $r15, $r16, $r22;
        gov.nist.javax.sip.header.SIPDateHeader r3, r4, $r19;
        java.lang.Throwable r5, $r24;
        boolean $z0, $z1, $z2, $z3;
        gov.nist.core.LexerCore $r6, $r8, $r10, $r12, $r13, $r18;
        java.lang.StringBuilder $r20, $r21, $r23;
        java.text.ParseException $r25;

        r0 := @this: gov.nist.javax.sip.parser.DateParser;

        $z0 = <gov.nist.javax.sip.parser.DateParser: boolean debug>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<gov.nist.javax.sip.parser.DateParser: void dbg_enter(java.lang.String)>("DateParser.parse");

     label1:
        virtualinvoke r0.<gov.nist.javax.sip.parser.DateParser: void headerName(int)>(2080);

        virtualinvoke r0.<gov.nist.javax.sip.parser.DateParser: int wkday()>();

        $r6 = r0.<gov.nist.javax.sip.parser.DateParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r6.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(44);

        $r8 = r0.<gov.nist.javax.sip.parser.DateParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r8.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(32);

        r1 = virtualinvoke r0.<gov.nist.javax.sip.parser.DateParser: java.util.Calendar date()>();

        $r10 = r0.<gov.nist.javax.sip.parser.DateParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r10.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(32);

        virtualinvoke r0.<gov.nist.javax.sip.parser.DateParser: void time(java.util.Calendar)>(r1);

        $r12 = r0.<gov.nist.javax.sip.parser.DateParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r12.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(32);

        $r13 = r0.<gov.nist.javax.sip.parser.DateParser: gov.nist.core.LexerCore lexer>;

        $r15 = virtualinvoke $r13.<gov.nist.core.LexerCore: java.lang.String ttoken()>();

        r2 = virtualinvoke $r15.<java.lang.String: java.lang.String toLowerCase()>();

        $r16 = "gmt";

        $z1 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 != 0 goto label2;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad Time Zone ");

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        $r25 = virtualinvoke r0.<gov.nist.javax.sip.parser.DateParser: java.text.ParseException createParseException(java.lang.String)>($r22);

        throw $r25;

     label2:
        $r18 = r0.<gov.nist.javax.sip.parser.DateParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r18.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(10);

        $r19 = new gov.nist.javax.sip.header.SIPDateHeader;

        specialinvoke $r19.<gov.nist.javax.sip.header.SIPDateHeader: void <init>()>();

        r3 = $r19;

        virtualinvoke r3.<gov.nist.javax.sip.header.SIPDateHeader: void setDate(java.util.Calendar)>(r1);

        r4 = r3;

     label3:
        $z2 = <gov.nist.javax.sip.parser.DateParser: boolean debug>;

        if $z2 == 0 goto label4;

        virtualinvoke r0.<gov.nist.javax.sip.parser.DateParser: void dbg_leave(java.lang.String)>("DateParser.parse");

     label4:
        return r4;

     label5:
        $r24 := @caughtexception;

        r5 = $r24;

     label6:
        $z3 = <gov.nist.javax.sip.parser.DateParser: boolean debug>;

        if $z3 == 0 goto label7;

        virtualinvoke r0.<gov.nist.javax.sip.parser.DateParser: void dbg_leave(java.lang.String)>("DateParser.parse");

     label7:
        throw r5;

        catch java.lang.Throwable from label1 to label3 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }
}
