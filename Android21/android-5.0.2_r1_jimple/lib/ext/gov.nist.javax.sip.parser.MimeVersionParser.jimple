public class gov.nist.javax.sip.parser.MimeVersionParser extends gov.nist.javax.sip.parser.HeaderParser
{

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.MimeVersionParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.MimeVersionParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(java.lang.String)>(r1);

        return;
    }

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.MimeVersionParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.MimeVersionParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    public gov.nist.javax.sip.header.SIPHeader parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.MimeVersionParser r0;
        gov.nist.javax.sip.header.MimeVersion r1, $r5, r18;
        java.lang.String r2, r3, $r16;
        java.lang.Throwable r4, $r13;
        boolean $z0, $z1, $z2;
        gov.nist.core.LexerCore $r6, $r7, $r9, $r10, $r12;
        int $i0, $i1;
        javax.sip.InvalidArgumentException $r14, r17;
        java.text.ParseException $r15;

        r0 := @this: gov.nist.javax.sip.parser.MimeVersionParser;

        $z0 = <gov.nist.javax.sip.parser.MimeVersionParser: boolean debug>;

        if $z0 == 0 goto label01;

        virtualinvoke r0.<gov.nist.javax.sip.parser.MimeVersionParser: void dbg_enter(java.lang.String)>("MimeVersionParser.parse");

     label01:
        $r5 = new gov.nist.javax.sip.header.MimeVersion;

        specialinvoke $r5.<gov.nist.javax.sip.header.MimeVersion: void <init>()>();

        r1 = $r5;

     label02:
        virtualinvoke r0.<gov.nist.javax.sip.parser.MimeVersionParser: void headerName(int)>(2060);

        virtualinvoke r1.<gov.nist.javax.sip.header.MimeVersion: void setHeaderName(java.lang.String)>("MIME-Version");

     label03:
        $r6 = r0.<gov.nist.javax.sip.parser.MimeVersionParser: gov.nist.core.LexerCore lexer>;

        r2 = virtualinvoke $r6.<gov.nist.core.LexerCore: java.lang.String number()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

        virtualinvoke r1.<gov.nist.javax.sip.header.MimeVersion: void setMajorVersion(int)>($i0);

        $r7 = r0.<gov.nist.javax.sip.parser.MimeVersionParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r7.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(46);

        $r9 = r0.<gov.nist.javax.sip.parser.MimeVersionParser: gov.nist.core.LexerCore lexer>;

        r3 = virtualinvoke $r9.<gov.nist.core.LexerCore: java.lang.String number()>();

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r3);

        virtualinvoke r1.<gov.nist.javax.sip.header.MimeVersion: void setMinorVersion(int)>($i1);

     label04:
        goto label06;

     label05:
        $r14 := @caughtexception;

        r17 = $r14;

        $r16 = virtualinvoke r17.<javax.sip.InvalidArgumentException: java.lang.String getMessage()>();

        $r15 = virtualinvoke r0.<gov.nist.javax.sip.parser.MimeVersionParser: java.text.ParseException createParseException(java.lang.String)>($r16);

        throw $r15;

     label06:
        $r10 = r0.<gov.nist.javax.sip.parser.MimeVersionParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r10.<gov.nist.core.LexerCore: void SPorHT()>();

        $r12 = r0.<gov.nist.javax.sip.parser.MimeVersionParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r12.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(10);

        r18 = r1;

     label07:
        $z1 = <gov.nist.javax.sip.parser.MimeVersionParser: boolean debug>;

        if $z1 == 0 goto label08;

        virtualinvoke r0.<gov.nist.javax.sip.parser.MimeVersionParser: void dbg_leave(java.lang.String)>("MimeVersionParser.parse");

     label08:
        return r18;

     label09:
        $r13 := @caughtexception;

        r4 = $r13;

     label10:
        $z2 = <gov.nist.javax.sip.parser.MimeVersionParser: boolean debug>;

        if $z2 == 0 goto label11;

        virtualinvoke r0.<gov.nist.javax.sip.parser.MimeVersionParser: void dbg_leave(java.lang.String)>("MimeVersionParser.parse");

     label11:
        throw r4;

        catch javax.sip.InvalidArgumentException from label03 to label04 with label05;
        catch java.lang.Throwable from label02 to label07 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }
}
