public interface  javax.sip.header.AuthorizationHeader extends java.lang.Object implements javax.sip.header.Header, javax.sip.header.Parameters
{
    public static final java.lang.String NAME;

    public abstract java.lang.String getAlgorithm();

    public abstract void setAlgorithm(java.lang.String) throws java.text.ParseException;

    public abstract java.lang.String getCNonce();

    public abstract void setCNonce(java.lang.String) throws java.text.ParseException;

    public abstract java.lang.String getNonce();

    public abstract void setNonce(java.lang.String) throws java.text.ParseException;

    public abstract int getNonceCount();

    public abstract void setNonceCount(int) throws java.text.ParseException;

    public abstract java.lang.String getOpaque();

    public abstract void setOpaque(java.lang.String) throws java.text.ParseException;

    public abstract java.lang.String getQop();

    public abstract void setQop(java.lang.String) throws java.text.ParseException;

    public abstract java.lang.String getRealm();

    public abstract void setRealm(java.lang.String) throws java.text.ParseException;

    public abstract java.lang.String getResponse();

    public abstract void setResponse(java.lang.String) throws java.text.ParseException;

    public abstract java.lang.String getScheme();

    public abstract void setScheme(java.lang.String);

    public abstract boolean isStale();

    public abstract void setStale(boolean);

    public abstract javax.sip.address.URI getURI();

    public abstract void setURI(javax.sip.address.URI);

    public abstract java.lang.String getUsername();

    public abstract void setUsername(java.lang.String) throws java.text.ParseException;

    public static void <clinit>()
    {
        <javax.sip.header.AuthorizationHeader: java.lang.String NAME> = "Authorization";

        return;
    }
}
