public abstract class org.apache.http.impl.client.AbstractAuthenticationHandler extends java.lang.Object implements org.apache.http.client.AuthenticationHandler
{
    private final org.apache.commons.logging.Log log;
    private static final java.util.List DEFAULT_SCHEME_PRIORITY;

    public void <init>()
    {
        org.apache.http.impl.client.AbstractAuthenticationHandler r0;
        java.lang.Class $r1;
        org.apache.commons.logging.Log $r2;

        r0 := @this: org.apache.http.impl.client.AbstractAuthenticationHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r1);

        r0.<org.apache.http.impl.client.AbstractAuthenticationHandler: org.apache.commons.logging.Log log> = $r2;

        return;
    }

    protected java.util.Map parseChallenges(org.apache.http.Header[]) throws org.apache.http.auth.MalformedChallengeException
    {
        org.apache.http.impl.client.AbstractAuthenticationHandler r0;
        org.apache.http.Header[] r1, r3;
        java.util.HashMap r2, $r8;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, i10;
        org.apache.http.Header r4;
        org.apache.http.util.CharArrayBuffer r5, $r9;
        java.lang.String r6, r7, $r12;
        boolean $z0, $z1, $z2;
        java.util.Locale $r10;
        char $c8, $c9;
        org.apache.http.FormattedHeader $r13, $r15;
        org.apache.http.auth.MalformedChallengeException $r14;

        r0 := @this: org.apache.http.impl.client.AbstractAuthenticationHandler;

        r1 := @parameter0: org.apache.http.Header[];

        $r8 = new java.util.HashMap;

        $i4 = lengthof r1;

        specialinvoke $r8.<java.util.HashMap: void <init>(int)>($i4);

        r2 = $r8;

        r3 = r1;

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label8;

        r4 = r3[i1];

        $z0 = r4 instanceof org.apache.http.FormattedHeader;

        if $z0 == 0 goto label2;

        $r13 = (org.apache.http.FormattedHeader) r4;

        r5 = interfaceinvoke $r13.<org.apache.http.FormattedHeader: org.apache.http.util.CharArrayBuffer getBuffer()>();

        $r15 = (org.apache.http.FormattedHeader) r4;

        i2 = interfaceinvoke $r15.<org.apache.http.FormattedHeader: int getValuePos()>();

        goto label4;

     label2:
        r6 = interfaceinvoke r4.<org.apache.http.Header: java.lang.String getValue()>();

        if r6 != null goto label3;

        $r14 = new org.apache.http.auth.MalformedChallengeException;

        specialinvoke $r14.<org.apache.http.auth.MalformedChallengeException: void <init>(java.lang.String)>("Header value is null");

        throw $r14;

     label3:
        $r9 = new org.apache.http.util.CharArrayBuffer;

        $i5 = virtualinvoke r6.<java.lang.String: int length()>();

        specialinvoke $r9.<org.apache.http.util.CharArrayBuffer: void <init>(int)>($i5);

        r5 = $r9;

        virtualinvoke r5.<org.apache.http.util.CharArrayBuffer: void append(java.lang.String)>(r6);

        i2 = 0;

     label4:
        $i7 = virtualinvoke r5.<org.apache.http.util.CharArrayBuffer: int length()>();

        if i2 >= $i7 goto label5;

        $c9 = virtualinvoke r5.<org.apache.http.util.CharArrayBuffer: char charAt(int)>(i2);

        $z2 = staticinvoke <org.apache.http.protocol.HTTP: boolean isWhitespace(char)>($c9);

        if $z2 == 0 goto label5;

        i2 = i2 + 1;

        goto label4;

     label5:
        i10 = i2;

     label6:
        $i6 = virtualinvoke r5.<org.apache.http.util.CharArrayBuffer: int length()>();

        if i2 >= $i6 goto label7;

        $c8 = virtualinvoke r5.<org.apache.http.util.CharArrayBuffer: char charAt(int)>(i2);

        $z1 = staticinvoke <org.apache.http.protocol.HTTP: boolean isWhitespace(char)>($c8);

        if $z1 != 0 goto label7;

        i2 = i2 + 1;

        goto label6;

     label7:
        i3 = i2;

        r7 = virtualinvoke r5.<org.apache.http.util.CharArrayBuffer: java.lang.String substring(int,int)>(i10, i3);

        $r10 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r12 = virtualinvoke r7.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r10);

        interfaceinvoke r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, r4);

        i1 = i1 + 1;

        goto label1;

     label8:
        return r2;
    }

    protected java.util.List getAuthPreferences()
    {
        org.apache.http.impl.client.AbstractAuthenticationHandler r0;
        java.util.List $r1;

        r0 := @this: org.apache.http.impl.client.AbstractAuthenticationHandler;

        $r1 = <org.apache.http.impl.client.AbstractAuthenticationHandler: java.util.List DEFAULT_SCHEME_PRIORITY>;

        return $r1;
    }

    public org.apache.http.auth.AuthScheme selectScheme(java.util.Map, org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext) throws org.apache.http.auth.AuthenticationException
    {
        org.apache.http.impl.client.AbstractAuthenticationHandler r0;
        java.util.Map r1;
        org.apache.http.HttpResponse r2;
        org.apache.http.protocol.HttpContext r3;
        org.apache.http.auth.AuthSchemeRegistry r4;
        java.util.List r5;
        org.apache.http.auth.AuthScheme r6;
        int i0, $i1;
        java.lang.String r7, $r18, $r19, $r29, $r37, $r38, $r48;
        org.apache.http.Header r8;
        java.lang.Object $r10, $r11, $r17, $r22;
        org.apache.commons.logging.Log $r12, $r21, $r25, $r30, $r31, $r35, $r41, $r46;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r13, $r15, $r16, $r23, $r24, $r26, $r27, $r32, $r33, $r34, $r36, $r39, $r40, $r44, $r45, $r47, $r49;
        org.apache.http.auth.AuthenticationException $r14;
        java.util.Locale $r20;
        org.apache.http.params.HttpParams $r28;
        java.lang.IllegalStateException $r42, $r43;

        r0 := @this: org.apache.http.impl.client.AbstractAuthenticationHandler;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: org.apache.http.HttpResponse;

        r3 := @parameter2: org.apache.http.protocol.HttpContext;

        $r10 = interfaceinvoke r3.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.authscheme-registry");

        r4 = (org.apache.http.auth.AuthSchemeRegistry) $r10;

        if r4 != null goto label01;

        $r43 = new java.lang.IllegalStateException;

        specialinvoke $r43.<java.lang.IllegalStateException: void <init>(java.lang.String)>("AuthScheme registry not set in HTTP context");

        throw $r43;

     label01:
        $r11 = interfaceinvoke r3.<org.apache.http.protocol.HttpContext: java.lang.Object getAttribute(java.lang.String)>("http.auth.scheme-pref");

        r5 = (java.util.List) $r11;

        if r5 != null goto label02;

        r5 = virtualinvoke r0.<org.apache.http.impl.client.AbstractAuthenticationHandler: java.util.List getAuthPreferences()>();

     label02:
        $r12 = r0.<org.apache.http.impl.client.AbstractAuthenticationHandler: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r12.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label03;

        $r35 = r0.<org.apache.http.impl.client.AbstractAuthenticationHandler: org.apache.commons.logging.Log log>;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Authentication schemes in the order of preference: ");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r38 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r35.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r38);

     label03:
        r6 = null;

        i0 = 0;

     label04:
        $i1 = interfaceinvoke r5.<java.util.List: int size()>();

        if i0 >= $i1 goto label11;

        $r17 = interfaceinvoke r5.<java.util.List: java.lang.Object get(int)>(i0);

        r7 = (java.lang.String) $r17;

        $r20 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r19 = virtualinvoke r7.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r20);

        $r22 = interfaceinvoke r1.<java.util.Map: java.lang.Object get(java.lang.Object)>($r19);

        r8 = (org.apache.http.Header) $r22;

        if r8 == null goto label09;

        $r30 = r0.<org.apache.http.impl.client.AbstractAuthenticationHandler: org.apache.commons.logging.Log log>;

        $z2 = interfaceinvoke $r30.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z2 == 0 goto label05;

        $r31 = r0.<org.apache.http.impl.client.AbstractAuthenticationHandler: org.apache.commons.logging.Log log>;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r36 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" authentication scheme selected");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r31.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r37);

     label05:
        $r28 = interfaceinvoke r2.<org.apache.http.HttpResponse: org.apache.http.params.HttpParams getParams()>();

        r6 = virtualinvoke r4.<org.apache.http.auth.AuthSchemeRegistry: org.apache.http.auth.AuthScheme getAuthScheme(java.lang.String,org.apache.http.params.HttpParams)>(r7, $r28);

     label06:
        goto label11;

     label07:
        $r42 := @caughtexception;

        $r41 = r0.<org.apache.http.impl.client.AbstractAuthenticationHandler: org.apache.commons.logging.Log log>;

        $z3 = interfaceinvoke $r41.<org.apache.commons.logging.Log: boolean isWarnEnabled()>();

        if $z3 == 0 goto label08;

        $r46 = r0.<org.apache.http.impl.client.AbstractAuthenticationHandler: org.apache.commons.logging.Log log>;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r45 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Authentication scheme ");

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r49 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not supported");

        $r48 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r46.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r48);

     label08:
        goto label10;

     label09:
        $r21 = r0.<org.apache.http.impl.client.AbstractAuthenticationHandler: org.apache.commons.logging.Log log>;

        $z1 = interfaceinvoke $r21.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z1 == 0 goto label10;

        $r25 = r0.<org.apache.http.impl.client.AbstractAuthenticationHandler: org.apache.commons.logging.Log log>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Challenge for ");

        $r27 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" authentication scheme not available");

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r25.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r29);

     label10:
        i0 = i0 + 1;

        goto label04;

     label11:
        if r6 != null goto label12;

        $r14 = new org.apache.http.auth.AuthenticationException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to respond to any of these challenges: ");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<org.apache.http.auth.AuthenticationException: void <init>(java.lang.String)>($r18);

        throw $r14;

     label12:
        return r6;

        catch java.lang.IllegalStateException from label05 to label06 with label07;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;
        java.util.List $r1;

        $r0 = newarray (java.lang.String)[3];

        $r0[0] = "ntlm";

        $r0[1] = "digest";

        $r0[2] = "basic";

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        <org.apache.http.impl.client.AbstractAuthenticationHandler: java.util.List DEFAULT_SCHEME_PRIORITY> = $r1;

        return;
    }
}
