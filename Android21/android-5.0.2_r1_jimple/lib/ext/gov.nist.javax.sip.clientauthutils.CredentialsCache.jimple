class gov.nist.javax.sip.clientauthutils.CredentialsCache extends java.lang.Object
{
    private java.util.concurrent.ConcurrentHashMap authorizationHeaders;
    private java.util.Timer timer;

    void <init>(java.util.Timer)
    {
        gov.nist.javax.sip.clientauthutils.CredentialsCache r0;
        java.util.Timer r1;
        java.util.concurrent.ConcurrentHashMap $r2;

        r0 := @this: gov.nist.javax.sip.clientauthutils.CredentialsCache;

        r1 := @parameter0: java.util.Timer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r2.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<gov.nist.javax.sip.clientauthutils.CredentialsCache: java.util.concurrent.ConcurrentHashMap authorizationHeaders> = $r2;

        r0.<gov.nist.javax.sip.clientauthutils.CredentialsCache: java.util.Timer timer> = r1;

        return;
    }

    void cacheAuthorizationHeader(java.lang.String, javax.sip.header.AuthorizationHeader, int)
    {
        gov.nist.javax.sip.clientauthutils.CredentialsCache r0;
        java.lang.String r1, r3, r5, $r12;
        javax.sip.header.AuthorizationHeader r2, r7;
        int i0, $i1;
        java.util.List r4;
        java.util.ListIterator r6;
        java.util.concurrent.ConcurrentHashMap $r8, $r16;
        java.lang.Object $r9, $r13;
        boolean $z0, $z2;
        gov.nist.javax.sip.clientauthutils.CredentialsCache$TimeoutTask $r10, r19;
        java.util.Timer $r11;
        long $l2;
        java.util.LinkedList $r14;
        java.lang.NullPointerException $r17, $r18;

        r0 := @this: gov.nist.javax.sip.clientauthutils.CredentialsCache;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: javax.sip.header.AuthorizationHeader;

        i0 := @parameter2: int;

        r3 = interfaceinvoke r2.<javax.sip.header.AuthorizationHeader: java.lang.String getUsername()>();

        if r1 != null goto label1;

        $r17 = new java.lang.NullPointerException;

        specialinvoke $r17.<java.lang.NullPointerException: void <init>(java.lang.String)>("Call ID is null!");

        throw $r17;

     label1:
        if r2 != null goto label2;

        $r18 = new java.lang.NullPointerException;

        specialinvoke $r18.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null authorization domain");

        throw $r18;

     label2:
        $r8 = r0.<gov.nist.javax.sip.clientauthutils.CredentialsCache: java.util.concurrent.ConcurrentHashMap authorizationHeaders>;

        $r9 = virtualinvoke $r8.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.util.List) $r9;

        if r4 != null goto label3;

        $r14 = new java.util.LinkedList;

        specialinvoke $r14.<java.util.LinkedList: void <init>()>();

        r4 = $r14;

        $r16 = r0.<gov.nist.javax.sip.clientauthutils.CredentialsCache: java.util.concurrent.ConcurrentHashMap authorizationHeaders>;

        virtualinvoke $r16.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4);

        goto label6;

     label3:
        r5 = interfaceinvoke r2.<javax.sip.header.AuthorizationHeader: java.lang.String getRealm()>();

        r6 = interfaceinvoke r4.<java.util.List: java.util.ListIterator listIterator()>();

     label4:
        $z0 = interfaceinvoke r6.<java.util.ListIterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r13 = interfaceinvoke r6.<java.util.ListIterator: java.lang.Object next()>();

        r7 = (javax.sip.header.AuthorizationHeader) $r13;

        $r12 = interfaceinvoke r7.<javax.sip.header.AuthorizationHeader: java.lang.String getRealm()>();

        $z2 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        if $z2 == 0 goto label5;

        interfaceinvoke r6.<java.util.ListIterator: void remove()>();

     label5:
        goto label4;

     label6:
        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r2);

        $r10 = new gov.nist.javax.sip.clientauthutils.CredentialsCache$TimeoutTask;

        specialinvoke $r10.<gov.nist.javax.sip.clientauthutils.CredentialsCache$TimeoutTask: void <init>(gov.nist.javax.sip.clientauthutils.CredentialsCache,java.lang.String,java.lang.String)>(r0, r1, r3);

        r19 = $r10;

        if i0 == -1 goto label7;

        $r11 = r0.<gov.nist.javax.sip.clientauthutils.CredentialsCache: java.util.Timer timer>;

        $i1 = i0 * 1000;

        $l2 = (long) $i1;

        virtualinvoke $r11.<java.util.Timer: void schedule(java.util.TimerTask,long)>(r19, $l2);

     label7:
        return;
    }

    java.util.Collection getCachedAuthorizationHeaders(java.lang.String)
    {
        gov.nist.javax.sip.clientauthutils.CredentialsCache r0;
        java.lang.String r1;
        java.util.concurrent.ConcurrentHashMap $r2;
        java.lang.Object $r3;
        java.util.Collection $r4;
        java.lang.NullPointerException $r5;

        r0 := @this: gov.nist.javax.sip.clientauthutils.CredentialsCache;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null arg!");

        throw $r5;

     label1:
        $r2 = r0.<gov.nist.javax.sip.clientauthutils.CredentialsCache: java.util.concurrent.ConcurrentHashMap authorizationHeaders>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (java.util.Collection) $r3;

        return $r4;
    }

    public void removeAuthenticationHeader(java.lang.String)
    {
        gov.nist.javax.sip.clientauthutils.CredentialsCache r0;
        java.lang.String r1;
        java.util.concurrent.ConcurrentHashMap $r2;

        r0 := @this: gov.nist.javax.sip.clientauthutils.CredentialsCache;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<gov.nist.javax.sip.clientauthutils.CredentialsCache: java.util.concurrent.ConcurrentHashMap authorizationHeaders>;

        virtualinvoke $r2.<java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>(r1);

        return;
    }

    static java.util.concurrent.ConcurrentHashMap access$000(gov.nist.javax.sip.clientauthutils.CredentialsCache)
    {
        gov.nist.javax.sip.clientauthutils.CredentialsCache r0;
        java.util.concurrent.ConcurrentHashMap $r1;

        r0 := @parameter0: gov.nist.javax.sip.clientauthutils.CredentialsCache;

        $r1 = r0.<gov.nist.javax.sip.clientauthutils.CredentialsCache: java.util.concurrent.ConcurrentHashMap authorizationHeaders>;

        return $r1;
    }
}
