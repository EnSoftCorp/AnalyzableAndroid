public class gov.nist.javax.sip.parser.URLParser extends gov.nist.javax.sip.parser.Parser
{

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.URLParser r0;
        java.lang.String r1;
        gov.nist.javax.sip.parser.Lexer $r2;

        r0 := @this: gov.nist.javax.sip.parser.URLParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.Parser: void <init>()>();

        $r2 = new gov.nist.javax.sip.parser.Lexer;

        specialinvoke $r2.<gov.nist.javax.sip.parser.Lexer: void <init>(java.lang.String,java.lang.String)>("sip_urlLexer", r1);

        r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer> = $r2;

        return;
    }

    public void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.URLParser r0;
        gov.nist.javax.sip.parser.Lexer r1;
        gov.nist.core.LexerCore $r2;

        r0 := @this: gov.nist.javax.sip.parser.URLParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.Parser: void <init>()>();

        r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer> = r1;

        $r2 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r2.<gov.nist.core.LexerCore: void selectLexer(java.lang.String)>("sip_urlLexer");

        return;
    }

    protected static boolean isMark(char)
    {
        char c0;

        c0 := @parameter0: char;

        lookupswitch(c0)
        {
            case 33: goto label1;
            case 39: goto label1;
            case 40: goto label1;
            case 41: goto label1;
            case 42: goto label1;
            case 45: goto label1;
            case 46: goto label1;
            case 95: goto label1;
            case 126: goto label1;
            default: goto label2;
        };

     label1:
        return 1;

     label2:
        return 0;
    }

    protected static boolean isUnreserved(char)
    {
        char c0;
        boolean $z0, $z1, $z2;

        c0 := @parameter0: char;

        $z0 = staticinvoke <gov.nist.javax.sip.parser.Lexer: boolean isAlphaDigit(char)>(c0);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <gov.nist.javax.sip.parser.URLParser: boolean isMark(char)>(c0);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    protected static boolean isReservedNoSlash(char)
    {
        char c0;

        c0 := @parameter0: char;

        tableswitch(c0)
        {
            case 36: goto label1;
            case 37: goto label2;
            case 38: goto label1;
            case 39: goto label2;
            case 40: goto label2;
            case 41: goto label2;
            case 42: goto label2;
            case 43: goto label1;
            case 44: goto label1;
            case 45: goto label2;
            case 46: goto label2;
            case 47: goto label2;
            case 48: goto label2;
            case 49: goto label2;
            case 50: goto label2;
            case 51: goto label2;
            case 52: goto label2;
            case 53: goto label2;
            case 54: goto label2;
            case 55: goto label2;
            case 56: goto label2;
            case 57: goto label2;
            case 58: goto label1;
            case 59: goto label1;
            case 60: goto label2;
            case 61: goto label2;
            case 62: goto label2;
            case 63: goto label1;
            case 64: goto label1;
            default: goto label2;
        };

     label1:
        return 1;

     label2:
        return 0;
    }

    protected static boolean isUserUnreserved(char)
    {
        char c0;

        c0 := @parameter0: char;

        tableswitch(c0)
        {
            case 35: goto label1;
            case 36: goto label1;
            case 37: goto label2;
            case 38: goto label1;
            case 39: goto label2;
            case 40: goto label2;
            case 41: goto label2;
            case 42: goto label2;
            case 43: goto label1;
            case 44: goto label1;
            case 45: goto label2;
            case 46: goto label2;
            case 47: goto label1;
            case 48: goto label2;
            case 49: goto label2;
            case 50: goto label2;
            case 51: goto label2;
            case 52: goto label2;
            case 53: goto label2;
            case 54: goto label2;
            case 55: goto label2;
            case 56: goto label2;
            case 57: goto label2;
            case 58: goto label2;
            case 59: goto label1;
            case 60: goto label2;
            case 61: goto label1;
            case 62: goto label2;
            case 63: goto label1;
            default: goto label2;
        };

     label1:
        return 1;

     label2:
        return 0;
    }

    protected java.lang.String unreserved() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.URLParser r0;
        char c0;
        gov.nist.core.LexerCore $r1, $r3;
        boolean $z0;
        java.text.ParseException $r2;
        java.lang.String $r4;

        r0 := @this: gov.nist.javax.sip.parser.URLParser;

        $r1 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        c0 = virtualinvoke $r1.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        $z0 = staticinvoke <gov.nist.javax.sip.parser.URLParser: boolean isUnreserved(char)>(c0);

        if $z0 == 0 goto label1;

        $r3 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r3.<gov.nist.core.LexerCore: void consume(int)>(1);

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c0);

        return $r4;

     label1:
        $r2 = virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: java.text.ParseException createParseException(java.lang.String)>("unreserved");

        throw $r2;
    }

    protected java.lang.String paramNameOrValue() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.URLParser r0;
        int i0, $i2;
        char c1;
        boolean z0, $z1, $z2, $z3;
        gov.nist.core.LexerCore $r1, $r2, $r3, $r5, $r7, $r8, $r9;
        java.lang.String $r4, $r6;

        r0 := @this: gov.nist.javax.sip.parser.URLParser;

        $r1 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        i0 = virtualinvoke $r1.<gov.nist.core.LexerCore: int getPtr()>();

     label1:
        $r2 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        $z1 = virtualinvoke $r2.<gov.nist.core.LexerCore: boolean hasMoreChars()>();

        if $z1 == 0 goto label7;

        $r7 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        c1 = virtualinvoke $r7.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        z0 = 0;

        lookupswitch(c1)
        {
            case 36: goto label2;
            case 38: goto label2;
            case 43: goto label2;
            case 47: goto label2;
            case 58: goto label2;
            case 91: goto label2;
            case 93: goto label2;
            default: goto label3;
        };

     label2:
        z0 = 1;

     label3:
        if z0 != 0 goto label4;

        $z3 = staticinvoke <gov.nist.javax.sip.parser.URLParser: boolean isUnreserved(char)>(c1);

        if $z3 == 0 goto label5;

     label4:
        $r8 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r8.<gov.nist.core.LexerCore: void consume(int)>(1);

        goto label6;

     label5:
        $z2 = virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: boolean isEscaped()>();

        if $z2 == 0 goto label7;

        $r9 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r9.<gov.nist.core.LexerCore: void consume(int)>(3);

     label6:
        goto label1;

     label7:
        $r3 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        $r4 = virtualinvoke $r3.<gov.nist.core.LexerCore: java.lang.String getBuffer()>();

        $r5 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        $i2 = virtualinvoke $r5.<gov.nist.core.LexerCore: int getPtr()>();

        $r6 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(i0, $i2);

        return $r6;
    }

    private gov.nist.core.NameValue uriParam() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.URLParser r0;
        java.lang.String r1, r2;
        char c0;
        boolean z0, $z1, $z2, $z3, $z4;
        java.lang.Throwable r3, $r7;
        gov.nist.core.LexerCore $r4, $r6;
        int $i1, $i2;
        gov.nist.core.NameValue $r5, r8;

        r0 := @this: gov.nist.javax.sip.parser.URLParser;

        $z1 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z1 == 0 goto label01;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_enter(java.lang.String)>("uriParam");

     label01:
        r1 = "";

        r2 = virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: java.lang.String paramNameOrValue()>();

        $r4 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        c0 = virtualinvoke $r4.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        z0 = 1;

        if c0 != 61 goto label02;

        $r6 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r6.<gov.nist.core.LexerCore: void consume(int)>(1);

        r1 = virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: java.lang.String paramNameOrValue()>();

        z0 = 0;

     label02:
        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        if $i1 != 0 goto label05;

        if r1 == null goto label03;

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i2 != 0 goto label05;

     label03:
        $z3 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z3 == 0 goto label04;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_leave(java.lang.String)>("uriParam");

     label04:
        return null;

     label05:
        $r5 = new gov.nist.core.NameValue;

        specialinvoke $r5.<gov.nist.core.NameValue: void <init>(java.lang.String,java.lang.Object,boolean)>(r2, r1, z0);

        r8 = $r5;

     label06:
        $z2 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z2 == 0 goto label07;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_leave(java.lang.String)>("uriParam");

     label07:
        return r8;

     label08:
        $r7 := @caughtexception;

        r3 = $r7;

     label09:
        $z4 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z4 == 0 goto label10;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_leave(java.lang.String)>("uriParam");

     label10:
        throw r3;

        catch java.lang.Throwable from label01 to label03 with label08;
        catch java.lang.Throwable from label05 to label06 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    protected static boolean isReserved(char)
    {
        char c0;

        c0 := @parameter0: char;

        tableswitch(c0)
        {
            case 36: goto label1;
            case 37: goto label2;
            case 38: goto label1;
            case 39: goto label2;
            case 40: goto label2;
            case 41: goto label2;
            case 42: goto label2;
            case 43: goto label1;
            case 44: goto label1;
            case 45: goto label2;
            case 46: goto label2;
            case 47: goto label1;
            case 48: goto label2;
            case 49: goto label2;
            case 50: goto label2;
            case 51: goto label2;
            case 52: goto label2;
            case 53: goto label2;
            case 54: goto label2;
            case 55: goto label2;
            case 56: goto label2;
            case 57: goto label2;
            case 58: goto label1;
            case 59: goto label1;
            case 60: goto label2;
            case 61: goto label1;
            case 62: goto label2;
            case 63: goto label1;
            case 64: goto label1;
            default: goto label2;
        };

     label1:
        return 1;

     label2:
        return 0;
    }

    protected java.lang.String reserved() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.URLParser r0;
        char c0;
        gov.nist.core.LexerCore $r1, $r3;
        boolean $z0;
        java.text.ParseException $r2;
        java.lang.StringBuffer $r4, $r5;
        java.lang.String $r6;

        r0 := @this: gov.nist.javax.sip.parser.URLParser;

        $r1 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        c0 = virtualinvoke $r1.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        $z0 = staticinvoke <gov.nist.javax.sip.parser.URLParser: boolean isReserved(char)>(c0);

        if $z0 == 0 goto label1;

        $r3 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r3.<gov.nist.core.LexerCore: void consume(int)>(1);

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;

     label1:
        $r2 = virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: java.text.ParseException createParseException(java.lang.String)>("reserved");

        throw $r2;
    }

    protected boolean isEscaped()
    {
        gov.nist.javax.sip.parser.URLParser r0;
        gov.nist.core.LexerCore $r2, $r3, $r4;
        char $c0, $c1, $c2;
        boolean $z0, $z1, $z2;
        java.lang.Exception $r5;

        r0 := @this: gov.nist.javax.sip.parser.URLParser;

     label1:
        $r2 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        $c0 = virtualinvoke $r2.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c0 != 37 goto label2;

        $r3 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        $c1 = virtualinvoke $r3.<gov.nist.core.LexerCore: char lookAhead(int)>(1);

        $z0 = staticinvoke <gov.nist.javax.sip.parser.Lexer: boolean isHexDigit(char)>($c1);

        if $z0 == 0 goto label2;

        $r4 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        $c2 = virtualinvoke $r4.<gov.nist.core.LexerCore: char lookAhead(int)>(2);

        $z1 = staticinvoke <gov.nist.javax.sip.parser.Lexer: boolean isHexDigit(char)>($c2);

        if $z1 == 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;

     label4:
        $r5 := @caughtexception;

        return 0;

        catch java.lang.Exception from label1 to label3 with label4;
    }

    protected java.lang.String escaped() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.URLParser r0;
        java.lang.StringBuffer r1, $r4;
        char c0, c1, c2;
        java.lang.String r2;
        java.lang.Throwable r3, $r13;
        boolean $z0, $z1, $z2, $z3, $z4;
        gov.nist.core.LexerCore $r5, $r6, $r7, $r10;
        java.text.ParseException $r8;

        r0 := @this: gov.nist.javax.sip.parser.URLParser;

        $z0 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_enter(java.lang.String)>("escaped");

     label1:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        r1 = $r4;

        $r5 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        c0 = virtualinvoke $r5.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        $r6 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        c1 = virtualinvoke $r6.<gov.nist.core.LexerCore: char lookAhead(int)>(1);

        $r7 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        c2 = virtualinvoke $r7.<gov.nist.core.LexerCore: char lookAhead(int)>(2);

        if c0 != 37 goto label2;

        $z2 = staticinvoke <gov.nist.javax.sip.parser.Lexer: boolean isHexDigit(char)>(c1);

        if $z2 == 0 goto label2;

        $z1 = staticinvoke <gov.nist.javax.sip.parser.Lexer: boolean isHexDigit(char)>(c2);

        if $z1 == 0 goto label2;

        $r10 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r10.<gov.nist.core.LexerCore: void consume(int)>(3);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c0);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c1);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c2);

        goto label3;

     label2:
        $r8 = virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: java.text.ParseException createParseException(java.lang.String)>("escaped");

        throw $r8;

     label3:
        r2 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

     label4:
        $z3 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z3 == 0 goto label5;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_leave(java.lang.String)>("escaped");

     label5:
        return r2;

     label6:
        $r13 := @caughtexception;

        r3 = $r13;

     label7:
        $z4 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z4 == 0 goto label8;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_leave(java.lang.String)>("escaped");

     label8:
        throw r3;

        catch java.lang.Throwable from label1 to label4 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    protected java.lang.String mark() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.URLParser r0;
        char c0;
        java.lang.String r1, $r6;
        java.lang.Throwable r2, $r8;
        boolean $z0, $z1, $z2, $z3;
        gov.nist.core.LexerCore $r3, $r5;
        java.text.ParseException $r4;
        char[] $r7;

        r0 := @this: gov.nist.javax.sip.parser.URLParser;

        $z0 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_enter(java.lang.String)>("mark");

     label1:
        $r3 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        c0 = virtualinvoke $r3.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        $z1 = staticinvoke <gov.nist.javax.sip.parser.URLParser: boolean isMark(char)>(c0);

        if $z1 == 0 goto label4;

        $r5 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r5.<gov.nist.core.LexerCore: void consume(int)>(1);

        $r6 = new java.lang.String;

        $r7 = newarray (char)[1];

        $r7[0] = c0;

        specialinvoke $r6.<java.lang.String: void <init>(char[])>($r7);

        r1 = $r6;

     label2:
        $z2 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z2 == 0 goto label3;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_leave(java.lang.String)>("mark");

     label3:
        return r1;

     label4:
        $r4 = virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: java.text.ParseException createParseException(java.lang.String)>("mark");

        throw $r4;

     label5:
        $r8 := @caughtexception;

        r2 = $r8;

     label6:
        $z3 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z3 == 0 goto label7;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_leave(java.lang.String)>("mark");

     label7:
        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label4 to label6 with label5;
    }

    protected java.lang.String uric()
    {
        gov.nist.javax.sip.parser.URLParser r0;
        char c0;
        java.lang.String r1, r2, r11, r12;
        java.lang.Throwable r3, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        gov.nist.core.LexerCore $r4, $r5, $r6, $r7, $r8;
        java.lang.Exception $r10;

        r0 := @this: gov.nist.javax.sip.parser.URLParser;

        $z0 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z0 == 0 goto label01;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_enter(java.lang.String)>("uric");

     label01:
        $r4 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        c0 = virtualinvoke $r4.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        $z1 = staticinvoke <gov.nist.javax.sip.parser.URLParser: boolean isUnreserved(char)>(c0);

        if $z1 == 0 goto label04;

        $r8 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r8.<gov.nist.core.LexerCore: void consume(int)>(1);

        r1 = staticinvoke <gov.nist.javax.sip.parser.Lexer: java.lang.String charAsString(char)>(c0);

     label02:
        $z7 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z7 == 0 goto label03;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_leave(java.lang.String)>("uric");

     label03:
        return r1;

     label04:
        $z2 = staticinvoke <gov.nist.javax.sip.parser.URLParser: boolean isReserved(char)>(c0);

        if $z2 == 0 goto label07;

        $r7 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r7.<gov.nist.core.LexerCore: void consume(int)>(1);

        r11 = staticinvoke <gov.nist.javax.sip.parser.Lexer: java.lang.String charAsString(char)>(c0);

     label05:
        $z6 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z6 == 0 goto label06;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_leave(java.lang.String)>("uric");

     label06:
        return r11;

     label07:
        $z3 = virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: boolean isEscaped()>();

        if $z3 == 0 goto label10;

        $r5 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        r12 = virtualinvoke $r5.<gov.nist.core.LexerCore: java.lang.String charAsString(int)>(3);

        $r6 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r6.<gov.nist.core.LexerCore: void consume(int)>(3);

        r2 = r12;

     label08:
        $z5 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z5 == 0 goto label09;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_leave(java.lang.String)>("uric");

     label09:
        return r2;

     label10:
        $z4 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z4 == 0 goto label11;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_leave(java.lang.String)>("uric");

     label11:
        return null;

     label12:
        $r10 := @caughtexception;

     label13:
        $z9 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z9 == 0 goto label14;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_leave(java.lang.String)>("uric");

     label14:
        return null;

     label15:
        $r9 := @caughtexception;

        r3 = $r9;

     label16:
        $z8 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z8 == 0 goto label17;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_leave(java.lang.String)>("uric");

     label17:
        throw r3;

        catch java.lang.Exception from label01 to label02 with label12;
        catch java.lang.Exception from label04 to label05 with label12;
        catch java.lang.Exception from label07 to label08 with label12;
        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    protected java.lang.String uricNoSlash()
    {
        gov.nist.javax.sip.parser.URLParser r0;
        char c0;
        java.lang.String r1, r2, r11, r12;
        java.lang.Throwable r3, $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        gov.nist.core.LexerCore $r4, $r5, $r6, $r7, $r8;
        java.text.ParseException $r9;

        r0 := @this: gov.nist.javax.sip.parser.URLParser;

        $z0 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z0 == 0 goto label01;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_enter(java.lang.String)>("uricNoSlash");

     label01:
        $r4 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        c0 = virtualinvoke $r4.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        $z1 = virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: boolean isEscaped()>();

        if $z1 == 0 goto label04;

        $r7 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        r1 = virtualinvoke $r7.<gov.nist.core.LexerCore: java.lang.String charAsString(int)>(3);

        $r8 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r8.<gov.nist.core.LexerCore: void consume(int)>(3);

        r2 = r1;

     label02:
        $z7 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z7 == 0 goto label03;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_leave(java.lang.String)>("uricNoSlash");

     label03:
        return r2;

     label04:
        $z2 = staticinvoke <gov.nist.javax.sip.parser.URLParser: boolean isUnreserved(char)>(c0);

        if $z2 == 0 goto label07;

        $r6 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r6.<gov.nist.core.LexerCore: void consume(int)>(1);

        r11 = staticinvoke <gov.nist.javax.sip.parser.Lexer: java.lang.String charAsString(char)>(c0);

     label05:
        $z6 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z6 == 0 goto label06;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_leave(java.lang.String)>("uricNoSlash");

     label06:
        return r11;

     label07:
        $z3 = staticinvoke <gov.nist.javax.sip.parser.URLParser: boolean isReservedNoSlash(char)>(c0);

        if $z3 == 0 goto label10;

        $r5 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r5.<gov.nist.core.LexerCore: void consume(int)>(1);

        r12 = staticinvoke <gov.nist.javax.sip.parser.Lexer: java.lang.String charAsString(char)>(c0);

     label08:
        $z5 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z5 == 0 goto label09;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_leave(java.lang.String)>("uricNoSlash");

     label09:
        return r12;

     label10:
        $z4 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z4 == 0 goto label11;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_leave(java.lang.String)>("uricNoSlash");

     label11:
        return null;

     label12:
        $r9 := @caughtexception;

     label13:
        $z8 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z8 == 0 goto label14;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_leave(java.lang.String)>("uricNoSlash");

     label14:
        return null;

     label15:
        $r10 := @caughtexception;

        r3 = $r10;

     label16:
        $z9 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z9 == 0 goto label17;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_leave(java.lang.String)>("uricNoSlash");

     label17:
        throw r3;

        catch java.text.ParseException from label01 to label02 with label12;
        catch java.text.ParseException from label04 to label05 with label12;
        catch java.text.ParseException from label07 to label08 with label12;
        catch java.lang.Throwable from label01 to label02 with label15;
        catch java.lang.Throwable from label04 to label05 with label15;
        catch java.lang.Throwable from label07 to label08 with label15;
        catch java.lang.Throwable from label12 to label13 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    protected java.lang.String uricString() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.URLParser r0;
        java.lang.StringBuffer r1, $r5;
        java.lang.String r2, $r8, $r11;
        char c0;
        gov.nist.core.HostNameParser r3, $r9;
        gov.nist.core.HostPort r4;
        gov.nist.core.LexerCore $r7;
        gov.nist.javax.sip.parser.Lexer $r10;

        r0 := @this: gov.nist.javax.sip.parser.URLParser;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        r1 = $r5;

     label1:
        r2 = virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: java.lang.String uric()>();

        if r2 != null goto label2;

        $r7 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        c0 = virtualinvoke $r7.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if c0 != 91 goto label3;

        $r9 = new gov.nist.core.HostNameParser;

        $r10 = virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.javax.sip.parser.Lexer getLexer()>();

        specialinvoke $r9.<gov.nist.core.HostNameParser: void <init>(gov.nist.core.LexerCore)>($r10);

        r3 = $r9;

        r4 = virtualinvoke r3.<gov.nist.core.HostNameParser: gov.nist.core.HostPort hostPort(boolean)>(0);

        $r11 = virtualinvoke r4.<gov.nist.core.HostPort: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        goto label1;

     label2:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        goto label1;

     label3:
        $r8 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;
    }

    public gov.nist.javax.sip.address.GenericURI uriReference(boolean) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.URLParser r0;
        boolean z0, $z1, $z2, $z3;
        gov.nist.core.Token[] r1;
        gov.nist.core.Token r2, r3;
        java.lang.String r4, $r12;
        java.text.ParseException r5, $r8, $r10, $r13, $r14;
        java.lang.Throwable r6, $r11;
        gov.nist.core.LexerCore $r7;
        int $i0, $i1, $i2, $i3, $i4;
        gov.nist.javax.sip.address.GenericURI $r9, r15;

        r0 := @this: gov.nist.javax.sip.parser.URLParser;

        z0 := @parameter0: boolean;

        $z1 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z1 == 0 goto label01;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_enter(java.lang.String)>("uriReference");

     label01:
        $r7 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        r1 = virtualinvoke $r7.<gov.nist.core.LexerCore: gov.nist.core.Token[] peekNextToken(int)>(2);

        r2 = r1[0];

        r3 = r1[1];

     label02:
        $i0 = virtualinvoke r2.<gov.nist.core.Token: int getTokenType()>();

        if $i0 == 2051 goto label03;

        $i2 = virtualinvoke r2.<gov.nist.core.Token: int getTokenType()>();

        if $i2 != 2136 goto label05;

     label03:
        $i1 = virtualinvoke r3.<gov.nist.core.Token: int getTokenType()>();

        if $i1 != 58 goto label04;

        r15 = virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.javax.sip.address.SipUri sipURL(boolean)>(z0);

        goto label11;

     label04:
        $r8 = virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: java.text.ParseException createParseException(java.lang.String)>("Expecting \':\'");

        throw $r8;

     label05:
        $i3 = virtualinvoke r2.<gov.nist.core.Token: int getTokenType()>();

        if $i3 != 2105 goto label07;

        $i4 = virtualinvoke r3.<gov.nist.core.Token: int getTokenType()>();

        if $i4 != 58 goto label06;

        r15 = virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.javax.sip.address.TelURLImpl telURL(boolean)>(z0);

        goto label11;

     label06:
        $r10 = virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: java.text.ParseException createParseException(java.lang.String)>("Expecting \':\'");

        throw $r10;

     label07:
        r4 = virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: java.lang.String uricString()>();

     label08:
        $r9 = new gov.nist.javax.sip.address.GenericURI;

        specialinvoke $r9.<gov.nist.javax.sip.address.GenericURI: void <init>(java.lang.String)>(r4);

        r15 = $r9;

     label09:
        goto label11;

     label10:
        $r13 := @caughtexception;

        r5 = $r13;

        $r12 = virtualinvoke r5.<java.text.ParseException: java.lang.String getMessage()>();

        $r14 = virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: java.text.ParseException createParseException(java.lang.String)>($r12);

        throw $r14;

     label11:
        $z2 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z2 == 0 goto label15;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_leave(java.lang.String)>("uriReference");

        goto label15;

     label12:
        $r11 := @caughtexception;

        r6 = $r11;

     label13:
        $z3 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z3 == 0 goto label14;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_leave(java.lang.String)>("uriReference");

     label14:
        throw r6;

     label15:
        return r15;

        catch java.text.ParseException from label08 to label09 with label10;
        catch java.lang.Throwable from label02 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    private java.lang.String base_phone_number() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.URLParser r0;
        java.lang.StringBuffer r1, $r3;
        int i0;
        char c1;
        java.lang.Throwable r2, $r12;
        boolean $z0, $z1, $z2, $z3, $z4;
        gov.nist.core.LexerCore $r4, $r5, $r6;
        java.lang.StringBuilder $r8, $r9, $r11;
        java.lang.String $r10, r14;
        java.text.ParseException $r13;

        r0 := @this: gov.nist.javax.sip.parser.URLParser;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        r1 = $r3;

        $z0 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z0 == 0 goto label01;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_enter(java.lang.String)>("base_phone_number");

     label01:
        i0 = 0;

     label02:
        $r4 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        $z1 = virtualinvoke $r4.<gov.nist.core.LexerCore: boolean hasMoreChars()>();

        if $z1 == 0 goto label07;

        $r5 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        c1 = virtualinvoke $r5.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        $z3 = staticinvoke <gov.nist.javax.sip.parser.Lexer: boolean isDigit(char)>(c1);

        if $z3 != 0 goto label03;

        if c1 == 45 goto label03;

        if c1 == 46 goto label03;

        if c1 == 40 goto label03;

        if c1 != 41 goto label04;

     label03:
        $r6 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r6.<gov.nist.core.LexerCore: void consume(int)>(1);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c1);

        i0 = i0 + 1;

        goto label06;

     label04:
        if i0 <= 0 goto label05;

        goto label07;

     label05:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unexpected ");

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: java.text.ParseException createParseException(java.lang.String)>($r10);

        throw $r13;

     label06:
        goto label02;

     label07:
        r14 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

     label08:
        $z2 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z2 == 0 goto label09;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_leave(java.lang.String)>("base_phone_number");

     label09:
        return r14;

     label10:
        $r12 := @caughtexception;

        r2 = $r12;

     label11:
        $z4 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z4 == 0 goto label12;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_leave(java.lang.String)>("base_phone_number");

     label12:
        throw r2;

        catch java.lang.Throwable from label01 to label08 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    private java.lang.String local_number() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.URLParser r0;
        java.lang.StringBuffer r1, $r3;
        int i0;
        char c1;
        java.lang.Throwable r2, $r12;
        boolean $z0, $z1, $z2, $z3, $z4;
        gov.nist.core.LexerCore $r4, $r5, $r6;
        java.lang.StringBuilder $r8, $r9, $r11;
        java.lang.String $r10, r14;
        java.text.ParseException $r13;

        r0 := @this: gov.nist.javax.sip.parser.URLParser;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        r1 = $r3;

        $z0 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z0 == 0 goto label01;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_enter(java.lang.String)>("local_number");

     label01:
        i0 = 0;

     label02:
        $r4 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        $z1 = virtualinvoke $r4.<gov.nist.core.LexerCore: boolean hasMoreChars()>();

        if $z1 == 0 goto label07;

        $r5 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        c1 = virtualinvoke $r5.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if c1 == 42 goto label03;

        if c1 == 35 goto label03;

        if c1 == 45 goto label03;

        if c1 == 46 goto label03;

        if c1 == 40 goto label03;

        if c1 == 41 goto label03;

        $z3 = staticinvoke <gov.nist.javax.sip.parser.Lexer: boolean isHexDigit(char)>(c1);

        if $z3 == 0 goto label04;

     label03:
        $r6 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r6.<gov.nist.core.LexerCore: void consume(int)>(1);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c1);

        i0 = i0 + 1;

        goto label06;

     label04:
        if i0 <= 0 goto label05;

        goto label07;

     label05:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unexepcted ");

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: java.text.ParseException createParseException(java.lang.String)>($r10);

        throw $r13;

     label06:
        goto label02;

     label07:
        r14 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

     label08:
        $z2 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z2 == 0 goto label09;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_leave(java.lang.String)>("local_number");

     label09:
        return r14;

     label10:
        $r12 := @caughtexception;

        r2 = $r12;

     label11:
        $z4 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z4 == 0 goto label12;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_leave(java.lang.String)>("local_number");

     label12:
        throw r2;

        catch java.lang.Throwable from label01 to label08 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public final gov.nist.javax.sip.address.TelephoneNumber parseTelephoneNumber(boolean) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.URLParser r0;
        boolean z0, $z1, $z2, $z3, $z4;
        gov.nist.javax.sip.address.TelephoneNumber r1, r2;
        char c0;
        java.lang.Throwable r3, $r11;
        gov.nist.core.LexerCore $r4, $r5;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.text.ParseException $r9;
        java.lang.String $r10;

        r0 := @this: gov.nist.javax.sip.parser.URLParser;

        z0 := @parameter0: boolean;

        $z1 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z1 == 0 goto label01;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_enter(java.lang.String)>("telephone_subscriber");

     label01:
        $r4 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r4.<gov.nist.core.LexerCore: void selectLexer(java.lang.String)>("charLexer");

     label02:
        $r5 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        c0 = virtualinvoke $r5.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if c0 != 43 goto label03;

        r1 = specialinvoke r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.javax.sip.address.TelephoneNumber global_phone_number(boolean)>(z0);

        goto label06;

     label03:
        $z2 = staticinvoke <gov.nist.javax.sip.parser.Lexer: boolean isHexDigit(char)>(c0);

        if $z2 != 0 goto label04;

        if c0 == 35 goto label04;

        if c0 == 42 goto label04;

        if c0 == 45 goto label04;

        if c0 == 46 goto label04;

        if c0 == 40 goto label04;

        if c0 != 41 goto label05;

     label04:
        r1 = specialinvoke r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.javax.sip.address.TelephoneNumber local_phone_number(boolean)>(z0);

        goto label06;

     label05:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unexpected char ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: java.text.ParseException createParseException(java.lang.String)>($r10);

        throw $r9;

     label06:
        r2 = r1;

     label07:
        $z3 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z3 == 0 goto label08;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_leave(java.lang.String)>("telephone_subscriber");

     label08:
        return r2;

     label09:
        $r11 := @caughtexception;

        r3 = $r11;

     label10:
        $z4 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z4 == 0 goto label11;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_leave(java.lang.String)>("telephone_subscriber");

     label11:
        throw r3;

        catch java.lang.Throwable from label02 to label07 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    private final gov.nist.javax.sip.address.TelephoneNumber global_phone_number(boolean) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.URLParser r0;
        boolean z0, $z1, $z2, $z3, $z4;
        gov.nist.javax.sip.address.TelephoneNumber r1, $r4, r11;
        java.lang.String r2;
        char c0;
        java.lang.Throwable r3, $r9;
        gov.nist.core.LexerCore $r5, $r6, $r7, $r8;
        gov.nist.core.NameValueList r10;

        r0 := @this: gov.nist.javax.sip.parser.URLParser;

        z0 := @parameter0: boolean;

        $z1 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z1 == 0 goto label1;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_enter(java.lang.String)>("global_phone_number");

     label1:
        $r4 = new gov.nist.javax.sip.address.TelephoneNumber;

        specialinvoke $r4.<gov.nist.javax.sip.address.TelephoneNumber: void <init>()>();

        r1 = $r4;

        virtualinvoke r1.<gov.nist.javax.sip.address.TelephoneNumber: void setGlobal(boolean)>(1);

        $r5 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r5.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(43);

        r2 = specialinvoke r0.<gov.nist.javax.sip.parser.URLParser: java.lang.String base_phone_number()>();

        virtualinvoke r1.<gov.nist.javax.sip.address.TelephoneNumber: void setPhoneNumber(java.lang.String)>(r2);

        $r6 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        $z2 = virtualinvoke $r6.<gov.nist.core.LexerCore: boolean hasMoreChars()>();

        if $z2 == 0 goto label2;

        $r7 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        c0 = virtualinvoke $r7.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if c0 != 59 goto label2;

        if z0 == 0 goto label2;

        $r8 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r8.<gov.nist.core.LexerCore: void consume(int)>(1);

        r10 = specialinvoke r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.NameValueList tel_parameters()>();

        virtualinvoke r1.<gov.nist.javax.sip.address.TelephoneNumber: void setParameters(gov.nist.core.NameValueList)>(r10);

     label2:
        r11 = r1;

     label3:
        $z3 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z3 == 0 goto label4;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_leave(java.lang.String)>("global_phone_number");

     label4:
        return r11;

     label5:
        $r9 := @caughtexception;

        r3 = $r9;

     label6:
        $z4 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z4 == 0 goto label7;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_leave(java.lang.String)>("global_phone_number");

     label7:
        throw r3;

        catch java.lang.Throwable from label1 to label3 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private gov.nist.javax.sip.address.TelephoneNumber local_phone_number(boolean) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.URLParser r0;
        boolean z0, $z1, $z2, $z3, $z4;
        gov.nist.javax.sip.address.TelephoneNumber r1, $r4;
        gov.nist.core.Token r2;
        java.lang.Throwable r3, $r8;
        gov.nist.core.LexerCore $r5, $r6, $r7;
        int $i0;
        java.lang.String r9;
        gov.nist.core.NameValueList r10;

        r0 := @this: gov.nist.javax.sip.parser.URLParser;

        z0 := @parameter0: boolean;

        $z1 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z1 == 0 goto label1;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_enter(java.lang.String)>("local_phone_number");

     label1:
        $r4 = new gov.nist.javax.sip.address.TelephoneNumber;

        specialinvoke $r4.<gov.nist.javax.sip.address.TelephoneNumber: void <init>()>();

        r1 = $r4;

        virtualinvoke r1.<gov.nist.javax.sip.address.TelephoneNumber: void setGlobal(boolean)>(0);

     label2:
        r9 = specialinvoke r0.<gov.nist.javax.sip.parser.URLParser: java.lang.String local_number()>();

        virtualinvoke r1.<gov.nist.javax.sip.address.TelephoneNumber: void setPhoneNumber(java.lang.String)>(r9);

        $r5 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        $z2 = virtualinvoke $r5.<gov.nist.core.LexerCore: boolean hasMoreChars()>();

        if $z2 == 0 goto label4;

        $r6 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        r2 = virtualinvoke $r6.<gov.nist.core.LexerCore: gov.nist.core.Token peekNextToken()>();

        $i0 = virtualinvoke r2.<gov.nist.core.Token: int getTokenType()>();

        lookupswitch($i0)
        {
            case 59: goto label3;
            default: goto label4;
        };

     label3:
        if z0 == 0 goto label4;

        $r7 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r7.<gov.nist.core.LexerCore: void consume(int)>(1);

        r10 = specialinvoke r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.NameValueList tel_parameters()>();

        virtualinvoke r1.<gov.nist.javax.sip.address.TelephoneNumber: void setParameters(gov.nist.core.NameValueList)>(r10);

        goto label4;

     label4:
        $z3 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z3 == 0 goto label8;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_leave(java.lang.String)>("local_phone_number");

        goto label8;

     label5:
        $r8 := @caughtexception;

        r3 = $r8;

     label6:
        $z4 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z4 == 0 goto label7;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_leave(java.lang.String)>("local_phone_number");

     label7:
        throw r3;

     label8:
        return r1;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private gov.nist.core.NameValueList tel_parameters() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.URLParser r0;
        gov.nist.core.NameValueList r1, $r5;
        gov.nist.core.NameValue r2, $r7, $r11;
        java.lang.String r3, r4;
        boolean $z0;
        gov.nist.core.LexerCore $r6, $r8, $r9, $r10;
        char $c0, $c1;

        r0 := @this: gov.nist.javax.sip.parser.URLParser;

        $r5 = new gov.nist.core.NameValueList;

        specialinvoke $r5.<gov.nist.core.NameValueList: void <init>()>();

        r1 = $r5;

     label1:
        r3 = virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: java.lang.String paramNameOrValue()>();

        $z0 = virtualinvoke r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("phone-context");

        if $z0 == 0 goto label2;

        r2 = specialinvoke r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.NameValue phone_context()>();

        goto label4;

     label2:
        $r6 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        $c0 = virtualinvoke $r6.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c0 != 61 goto label3;

        $r10 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r10.<gov.nist.core.LexerCore: void consume(int)>(1);

        r4 = virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: java.lang.String paramNameOrValue()>();

        $r11 = new gov.nist.core.NameValue;

        specialinvoke $r11.<gov.nist.core.NameValue: void <init>(java.lang.String,java.lang.Object,boolean)>(r3, r4, 0);

        r2 = $r11;

        goto label4;

     label3:
        $r7 = new gov.nist.core.NameValue;

        specialinvoke $r7.<gov.nist.core.NameValue: void <init>(java.lang.String,java.lang.Object,boolean)>(r3, "", 1);

        r2 = $r7;

     label4:
        virtualinvoke r1.<gov.nist.core.NameValueList: void set(gov.nist.core.NameValue)>(r2);

        $r8 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        $c1 = virtualinvoke $r8.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c1 != 59 goto label5;

        $r9 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r9.<gov.nist.core.LexerCore: void consume(int)>(1);

        goto label6;

     label5:
        return r1;

     label6:
        goto label1;
    }

    private gov.nist.core.NameValue phone_context() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.URLParser r0;
        char c0;
        java.lang.String r1, $r10, $r15;
        gov.nist.core.Token r2;
        gov.nist.core.LexerCore $r3, $r5, $r11, $r14;
        boolean $z0;
        java.text.ParseException $r6;
        java.lang.StringBuilder $r7, $r8, $r9, $r13, $r16, $r17;
        gov.nist.core.NameValue $r12;

        r0 := @this: gov.nist.javax.sip.parser.URLParser;

        $r3 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r3.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(61);

        $r5 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        c0 = virtualinvoke $r5.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if c0 != 43 goto label1;

        $r14 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r14.<gov.nist.core.LexerCore: void consume(int)>(1);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("+");

        $r15 = specialinvoke r0.<gov.nist.javax.sip.parser.URLParser: java.lang.String base_phone_number()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        r1 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label3;

     label1:
        $z0 = staticinvoke <gov.nist.javax.sip.parser.Lexer: boolean isAlphaDigit(char)>(c0);

        if $z0 == 0 goto label2;

        $r11 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        r2 = virtualinvoke $r11.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        r1 = virtualinvoke r2.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        goto label3;

     label2:
        $r6 = new java.text.ParseException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid phone-context:");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.text.ParseException: void <init>(java.lang.String,int)>($r10, -1);

        throw $r6;

     label3:
        $r12 = new gov.nist.core.NameValue;

        specialinvoke $r12.<gov.nist.core.NameValue: void <init>(java.lang.String,java.lang.Object,boolean)>("phone-context", r1, 0);

        return $r12;
    }

    public gov.nist.javax.sip.address.TelURLImpl telURL(boolean) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.URLParser r0;
        boolean z0;
        gov.nist.javax.sip.address.TelephoneNumber r1;
        gov.nist.javax.sip.address.TelURLImpl r2, $r7;
        gov.nist.core.LexerCore $r3, $r5;

        r0 := @this: gov.nist.javax.sip.parser.URLParser;

        z0 := @parameter0: boolean;

        $r3 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r3.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(2105);

        $r5 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r5.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(58);

        r1 = virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.javax.sip.address.TelephoneNumber parseTelephoneNumber(boolean)>(z0);

        $r7 = new gov.nist.javax.sip.address.TelURLImpl;

        specialinvoke $r7.<gov.nist.javax.sip.address.TelURLImpl: void <init>()>();

        r2 = $r7;

        virtualinvoke r2.<gov.nist.javax.sip.address.TelURLImpl: void setTelephoneNumber(gov.nist.javax.sip.address.TelephoneNumber)>(r1);

        return r2;
    }

    public gov.nist.javax.sip.address.SipUri sipURL(boolean) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.URLParser r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        gov.nist.javax.sip.address.SipUri r1, $r10, r45;
        gov.nist.core.Token r2;
        short s0;
        java.lang.String r3, r4, r5, $r39, $r42;
        int i1, $i2;
        gov.nist.core.HostNameParser r6, $r21;
        gov.nist.core.HostPort r7;
        gov.nist.core.NameValue r8, r44;
        java.lang.Throwable r9, $r43;
        gov.nist.core.LexerCore $r11, $r13, $r15, $r16, $r17, $r18, $r19, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r40;
        char $c3, $c4, $c5, $c6, $c7;
        gov.nist.javax.sip.parser.Lexer $r20;
        java.lang.StringBuilder $r35, $r38, $r41;
        java.text.ParseException $r36;
        java.lang.RuntimeException $r37;

        r0 := @this: gov.nist.javax.sip.parser.URLParser;

        z0 := @parameter0: boolean;

        $z1 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z1 == 0 goto label01;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_enter(java.lang.String)>("sipURL");

     label01:
        $r10 = new gov.nist.javax.sip.address.SipUri;

        specialinvoke $r10.<gov.nist.javax.sip.address.SipUri: void <init>()>();

        r1 = $r10;

        $r11 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        r2 = virtualinvoke $r11.<gov.nist.core.LexerCore: gov.nist.core.Token peekNextToken()>();

        s0 = 2051;

        r3 = "sip";

        $i2 = virtualinvoke r2.<gov.nist.core.Token: int getTokenType()>();

        if $i2 != 2136 goto label02;

        s0 = 2136;

        r3 = "sips";

     label02:
        $r13 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r13.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(s0);

        $r15 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r15.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(58);

        virtualinvoke r1.<gov.nist.javax.sip.address.SipUri: void setScheme(java.lang.String)>(r3);

        $r16 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        i1 = virtualinvoke $r16.<gov.nist.core.LexerCore: int markInputPosition()>();

        r4 = virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: java.lang.String user()>();

        r5 = null;

        $r17 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        $c3 = virtualinvoke $r17.<gov.nist.core.LexerCore: char lookAhead()>();

        if $c3 != 58 goto label03;

        $r32 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r32.<gov.nist.core.LexerCore: void consume(int)>(1);

        r5 = virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: java.lang.String password()>();

     label03:
        $r18 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        $c4 = virtualinvoke $r18.<gov.nist.core.LexerCore: char lookAhead()>();

        if $c4 != 64 goto label04;

        $r33 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r33.<gov.nist.core.LexerCore: void consume(int)>(1);

        virtualinvoke r1.<gov.nist.javax.sip.address.SipUri: void setUser(java.lang.String)>(r4);

        if r5 == null goto label05;

        virtualinvoke r1.<gov.nist.javax.sip.address.SipUri: void setUserPassword(java.lang.String)>(r5);

        goto label05;

     label04:
        $r19 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r19.<gov.nist.core.LexerCore: void rewindInputPosition(int)>(i1);

     label05:
        $r21 = new gov.nist.core.HostNameParser;

        $r20 = virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.javax.sip.parser.Lexer getLexer()>();

        specialinvoke $r21.<gov.nist.core.HostNameParser: void <init>(gov.nist.core.LexerCore)>($r20);

        r6 = $r21;

        r7 = virtualinvoke r6.<gov.nist.core.HostNameParser: gov.nist.core.HostPort hostPort(boolean)>(0);

        virtualinvoke r1.<gov.nist.javax.sip.address.SipUri: void setHostPort(gov.nist.core.HostPort)>(r7);

        $r23 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r23.<gov.nist.core.LexerCore: void selectLexer(java.lang.String)>("charLexer");

     label06:
        $r22 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        $z2 = virtualinvoke $r22.<gov.nist.core.LexerCore: boolean hasMoreChars()>();

        if $z2 == 0 goto label09;

        $r30 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        $c6 = virtualinvoke $r30.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c6 != 59 goto label09;

        if z0 != 0 goto label07;

        goto label09;

     label07:
        $r34 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r34.<gov.nist.core.LexerCore: void consume(int)>(1);

        r8 = specialinvoke r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.NameValue uriParam()>();

        if r8 == null goto label08;

        virtualinvoke r1.<gov.nist.javax.sip.address.SipUri: void setUriParameter(gov.nist.core.NameValue)>(r8);

     label08:
        goto label06;

     label09:
        $r25 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        $z4 = virtualinvoke $r25.<gov.nist.core.LexerCore: boolean hasMoreChars()>();

        if $z4 == 0 goto label12;

        $r24 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        $c5 = virtualinvoke $r24.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c5 != 63 goto label12;

        $r27 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r27.<gov.nist.core.LexerCore: void consume(int)>(1);

     label10:
        $r26 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        $z5 = virtualinvoke $r26.<gov.nist.core.LexerCore: boolean hasMoreChars()>();

        if $z5 == 0 goto label12;

        r44 = virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.NameValue qheader()>();

        virtualinvoke r1.<gov.nist.javax.sip.address.SipUri: void setQHeader(gov.nist.core.NameValue)>(r44);

        $r29 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        $z6 = virtualinvoke $r29.<gov.nist.core.LexerCore: boolean hasMoreChars()>();

        if $z6 == 0 goto label11;

        $r31 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        $c7 = virtualinvoke $r31.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c7 == 38 goto label11;

        goto label12;

     label11:
        $r28 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r28.<gov.nist.core.LexerCore: void consume(int)>(1);

        goto label10;

     label12:
        r45 = r1;

     label13:
        $z3 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z3 == 0 goto label14;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_leave(java.lang.String)>("sipURL");

     label14:
        return r45;

     label15:
        $r37 := @caughtexception;

        $r36 = new java.text.ParseException;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid URL: ");

        $r40 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        $r39 = virtualinvoke $r40.<gov.nist.core.LexerCore: java.lang.String getBuffer()>();

        $r38 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r42 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r36.<java.text.ParseException: void <init>(java.lang.String,int)>($r42, -1);

        throw $r36;

     label16:
        $r43 := @caughtexception;

        r9 = $r43;

     label17:
        $z7 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z7 == 0 goto label18;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_leave(java.lang.String)>("sipURL");

     label18:
        throw r9;

        catch java.lang.RuntimeException from label02 to label13 with label15;
        catch java.lang.Throwable from label02 to label13 with label16;
        catch java.lang.Throwable from label15 to label17 with label16;
    }

    public java.lang.String peekScheme() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.URLParser r0;
        gov.nist.core.Token[] r1;
        java.lang.String r2;
        gov.nist.core.LexerCore $r3;
        int $i0;
        gov.nist.core.Token $r4;

        r0 := @this: gov.nist.javax.sip.parser.URLParser;

        $r3 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        r1 = virtualinvoke $r3.<gov.nist.core.LexerCore: gov.nist.core.Token[] peekNextToken(int)>(1);

        $i0 = lengthof r1;

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r4 = r1[0];

        r2 = virtualinvoke $r4.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        return r2;
    }

    protected gov.nist.core.NameValue qheader() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.URLParser r0;
        java.lang.String r1, r2;
        gov.nist.core.LexerCore $r3, $r4;
        gov.nist.core.NameValue $r5;

        r0 := @this: gov.nist.javax.sip.parser.URLParser;

        $r3 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        r1 = virtualinvoke $r3.<gov.nist.core.LexerCore: java.lang.String getNextToken(char)>(61);

        $r4 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r4.<gov.nist.core.LexerCore: void consume(int)>(1);

        r2 = virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: java.lang.String hvalue()>();

        $r5 = new gov.nist.core.NameValue;

        specialinvoke $r5.<gov.nist.core.NameValue: void <init>(java.lang.String,java.lang.Object,boolean)>(r1, r2, 0);

        return $r5;
    }

    protected java.lang.String hvalue() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.URLParser r0;
        java.lang.StringBuffer r1, $r2;
        char c0;
        boolean z0, $z1, $z2;
        gov.nist.core.LexerCore $r3, $r5, $r6;
        java.lang.String $r4, $r8;

        r0 := @this: gov.nist.javax.sip.parser.URLParser;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        r1 = $r2;

     label1:
        $r3 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        $z1 = virtualinvoke $r3.<gov.nist.core.LexerCore: boolean hasMoreChars()>();

        if $z1 == 0 goto label7;

        $r5 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        c0 = virtualinvoke $r5.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        z0 = 0;

        lookupswitch(c0)
        {
            case 33: goto label2;
            case 34: goto label2;
            case 36: goto label2;
            case 40: goto label2;
            case 41: goto label2;
            case 42: goto label2;
            case 43: goto label2;
            case 45: goto label2;
            case 46: goto label2;
            case 47: goto label2;
            case 58: goto label2;
            case 63: goto label2;
            case 91: goto label2;
            case 93: goto label2;
            case 95: goto label2;
            case 126: goto label2;
            default: goto label3;
        };

     label2:
        z0 = 1;

     label3:
        if z0 != 0 goto label4;

        $z2 = staticinvoke <gov.nist.javax.sip.parser.Lexer: boolean isAlphaDigit(char)>(c0);

        if $z2 == 0 goto label5;

     label4:
        $r6 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r6.<gov.nist.core.LexerCore: void consume(int)>(1);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c0);

        goto label6;

     label5:
        if c0 != 37 goto label7;

        $r8 = virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: java.lang.String escaped()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

     label6:
        goto label1;

     label7:
        $r4 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    protected java.lang.String urlString() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.URLParser r0;
        java.lang.StringBuffer r1, $r2;
        char c0;
        gov.nist.core.LexerCore $r3, $r4, $r6, $r7;
        boolean $z0;
        java.lang.String $r5;

        r0 := @this: gov.nist.javax.sip.parser.URLParser;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        r1 = $r2;

        $r3 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r3.<gov.nist.core.LexerCore: void selectLexer(java.lang.String)>("charLexer");

     label1:
        $r4 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        $z0 = virtualinvoke $r4.<gov.nist.core.LexerCore: boolean hasMoreChars()>();

        if $z0 == 0 goto label3;

        $r6 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        c0 = virtualinvoke $r6.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if c0 == 32 goto label3;

        if c0 == 9 goto label3;

        if c0 == 10 goto label3;

        if c0 == 62 goto label3;

        if c0 != 60 goto label2;

        goto label3;

     label2:
        $r7 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r7.<gov.nist.core.LexerCore: void consume(int)>(0);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c0);

        goto label1;

     label3:
        $r5 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    protected java.lang.String user() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.URLParser r0;
        int i0, $i2;
        char c1;
        java.lang.Throwable r1, $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        gov.nist.core.LexerCore $r2, $r3, $r4, $r6, $r7, $r8, $r9;
        java.lang.String $r5, r11;

        r0 := @this: gov.nist.javax.sip.parser.URLParser;

        $z0 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z0 == 0 goto label01;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_enter(java.lang.String)>("user");

     label01:
        $r2 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        i0 = virtualinvoke $r2.<gov.nist.core.LexerCore: int getPtr()>();

     label02:
        $r3 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        $z1 = virtualinvoke $r3.<gov.nist.core.LexerCore: boolean hasMoreChars()>();

        if $z1 == 0 goto label06;

        $r7 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        c1 = virtualinvoke $r7.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        $z3 = staticinvoke <gov.nist.javax.sip.parser.URLParser: boolean isUnreserved(char)>(c1);

        if $z3 != 0 goto label03;

        $z4 = staticinvoke <gov.nist.javax.sip.parser.URLParser: boolean isUserUnreserved(char)>(c1);

        if $z4 == 0 goto label04;

     label03:
        $r8 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r8.<gov.nist.core.LexerCore: void consume(int)>(1);

        goto label05;

     label04:
        $z5 = virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: boolean isEscaped()>();

        if $z5 == 0 goto label06;

        $r9 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r9.<gov.nist.core.LexerCore: void consume(int)>(3);

     label05:
        goto label02;

     label06:
        $r4 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        $r5 = virtualinvoke $r4.<gov.nist.core.LexerCore: java.lang.String getBuffer()>();

        $r6 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        $i2 = virtualinvoke $r6.<gov.nist.core.LexerCore: int getPtr()>();

        r11 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>(i0, $i2);

     label07:
        $z2 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z2 == 0 goto label08;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_leave(java.lang.String)>("user");

     label08:
        return r11;

     label09:
        $r10 := @caughtexception;

        r1 = $r10;

     label10:
        $z6 = <gov.nist.javax.sip.parser.URLParser: boolean debug>;

        if $z6 == 0 goto label11;

        virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: void dbg_leave(java.lang.String)>("user");

     label11:
        throw r1;

        catch java.lang.Throwable from label01 to label07 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    protected java.lang.String password() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.URLParser r0;
        int i0, $i2;
        char c1;
        boolean z0, $z1, $z2;
        gov.nist.core.LexerCore $r1, $r2, $r3, $r4, $r6, $r8;
        java.lang.String $r5, $r7;

        r0 := @this: gov.nist.javax.sip.parser.URLParser;

        $r1 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        i0 = virtualinvoke $r1.<gov.nist.core.LexerCore: int getPtr()>();

     label1:
        $r2 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        c1 = virtualinvoke $r2.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        z0 = 0;

        lookupswitch(c1)
        {
            case 36: goto label2;
            case 38: goto label2;
            case 43: goto label2;
            case 44: goto label2;
            case 61: goto label2;
            default: goto label3;
        };

     label2:
        z0 = 1;

     label3:
        if z0 != 0 goto label4;

        $z1 = staticinvoke <gov.nist.javax.sip.parser.URLParser: boolean isUnreserved(char)>(c1);

        if $z1 == 0 goto label5;

     label4:
        $r3 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r3.<gov.nist.core.LexerCore: void consume(int)>(1);

        goto label6;

     label5:
        $z2 = virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: boolean isEscaped()>();

        if $z2 == 0 goto label7;

        $r8 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r8.<gov.nist.core.LexerCore: void consume(int)>(3);

     label6:
        goto label1;

     label7:
        $r4 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        $r5 = virtualinvoke $r4.<gov.nist.core.LexerCore: java.lang.String getBuffer()>();

        $r6 = r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.core.LexerCore lexer>;

        $i2 = virtualinvoke $r6.<gov.nist.core.LexerCore: int getPtr()>();

        $r7 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>(i0, $i2);

        return $r7;
    }

    public gov.nist.javax.sip.address.GenericURI parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.URLParser r0;
        gov.nist.javax.sip.address.GenericURI $r1;

        r0 := @this: gov.nist.javax.sip.parser.URLParser;

        $r1 = virtualinvoke r0.<gov.nist.javax.sip.parser.URLParser: gov.nist.javax.sip.address.GenericURI uriReference(boolean)>(1);

        return $r1;
    }

    public static void main(java.lang.String[]) throws java.text.ParseException
    {
        java.lang.String[] r0, r1, $r4;
        int i0, $i1;
        gov.nist.javax.sip.parser.URLParser r2, $r5;
        gov.nist.javax.sip.address.GenericURI r3;
        java.lang.String $r6, $r11, $r14, $r15, $r20, $r22;
        java.lang.StringBuilder $r7, $r9, $r12, $r13, $r17, $r18, $r19, $r21, $r23;
        java.io.PrintStream $r8, $r16;
        java.lang.Class $r10;
        boolean $z0;

        r0 := @parameter0: java.lang.String[];

        $r4 = newarray (java.lang.String)[3];

        $r4[0] = "sip:alice@example.com";

        $r4[1] = "sips:alice@examples.com";

        $r4[2] = "sip:3Zqkv5dajqaaas0tCjCxT0xH2ZEuEMsFl0xoasip%3A%2B3519116786244%40siplab.domain.com@213.0.115.163:7070";

        r1 = $r4;

        i0 = 0;

     label1:
        $i1 = lengthof r1;

        if i0 >= $i1 goto label2;

        $r5 = new gov.nist.javax.sip.parser.URLParser;

        $r6 = r1[i0];

        specialinvoke $r5.<gov.nist.javax.sip.parser.URLParser: void <init>(java.lang.String)>($r6);

        r2 = $r5;

        r3 = virtualinvoke r2.<gov.nist.javax.sip.parser.URLParser: gov.nist.javax.sip.address.GenericURI parse()>();

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("uri type returned ");

        $r10 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.String getName()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r14);

        $r16 = <java.lang.System: java.io.PrintStream out>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = r1[i0];

        $r18 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is SipUri? ");

        $z0 = virtualinvoke r3.<gov.nist.javax.sip.address.GenericURI: boolean isSipURI()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r20 = virtualinvoke r3.<gov.nist.javax.sip.address.GenericURI: java.lang.String encode()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r22);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }
}
