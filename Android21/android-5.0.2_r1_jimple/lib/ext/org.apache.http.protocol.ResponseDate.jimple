public class org.apache.http.protocol.ResponseDate extends java.lang.Object implements org.apache.http.HttpResponseInterceptor
{
    private static final org.apache.http.protocol.HttpDateGenerator DATE_GENERATOR;

    public void <init>()
    {
        org.apache.http.protocol.ResponseDate r0;

        r0 := @this: org.apache.http.protocol.ResponseDate;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void process(org.apache.http.HttpResponse, org.apache.http.protocol.HttpContext) throws org.apache.http.HttpException, java.io.IOException
    {
        org.apache.http.protocol.ResponseDate r0;
        org.apache.http.HttpResponse r1;
        org.apache.http.protocol.HttpContext r2;
        int i0;
        java.lang.String r3;
        org.apache.http.StatusLine $r4;
        boolean $z0;
        org.apache.http.protocol.HttpDateGenerator $r5;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: org.apache.http.protocol.ResponseDate;

        r1 := @parameter0: org.apache.http.HttpResponse;

        r2 := @parameter1: org.apache.http.protocol.HttpContext;

        if r1 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP response may not be null.");

        throw $r6;

     label1:
        $r4 = interfaceinvoke r1.<org.apache.http.HttpResponse: org.apache.http.StatusLine getStatusLine()>();

        i0 = interfaceinvoke $r4.<org.apache.http.StatusLine: int getStatusCode()>();

        if i0 < 200 goto label2;

        $z0 = interfaceinvoke r1.<org.apache.http.HttpResponse: boolean containsHeader(java.lang.String)>("Date");

        if $z0 != 0 goto label2;

        $r5 = <org.apache.http.protocol.ResponseDate: org.apache.http.protocol.HttpDateGenerator DATE_GENERATOR>;

        r3 = virtualinvoke $r5.<org.apache.http.protocol.HttpDateGenerator: java.lang.String getCurrentDate()>();

        interfaceinvoke r1.<org.apache.http.HttpResponse: void setHeader(java.lang.String,java.lang.String)>("Date", r3);

     label2:
        return;
    }

    static void <clinit>()
    {
        org.apache.http.protocol.HttpDateGenerator $r0;

        $r0 = new org.apache.http.protocol.HttpDateGenerator;

        specialinvoke $r0.<org.apache.http.protocol.HttpDateGenerator: void <init>()>();

        <org.apache.http.protocol.ResponseDate: org.apache.http.protocol.HttpDateGenerator DATE_GENERATOR> = $r0;

        return;
    }
}
