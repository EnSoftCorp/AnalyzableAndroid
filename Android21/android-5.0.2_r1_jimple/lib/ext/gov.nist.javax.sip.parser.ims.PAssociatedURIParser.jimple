public class gov.nist.javax.sip.parser.ims.PAssociatedURIParser extends gov.nist.javax.sip.parser.AddressParametersParser
{

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.ims.PAssociatedURIParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.ims.PAssociatedURIParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.AddressParametersParser: void <init>(java.lang.String)>(r1);

        return;
    }

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.ims.PAssociatedURIParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.ims.PAssociatedURIParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.AddressParametersParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    public gov.nist.javax.sip.header.SIPHeader parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.ims.PAssociatedURIParser r0;
        gov.nist.javax.sip.header.ims.PAssociatedURIList r1, r3, $r5;
        gov.nist.javax.sip.header.ims.PAssociatedURI r2, $r6, $r14, r18;
        java.lang.Throwable r4, $r17;
        boolean $z0, $z2, $z4;
        gov.nist.core.LexerCore $r7, $r8, $r9, $r10, $r13, $r15, $r16;
        char $c0;

        r0 := @this: gov.nist.javax.sip.parser.ims.PAssociatedURIParser;

        $z0 = <gov.nist.javax.sip.parser.ims.PAssociatedURIParser: boolean debug>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ims.PAssociatedURIParser: void dbg_enter(java.lang.String)>("PAssociatedURIParser.parse");

     label1:
        $r5 = new gov.nist.javax.sip.header.ims.PAssociatedURIList;

        specialinvoke $r5.<gov.nist.javax.sip.header.ims.PAssociatedURIList: void <init>()>();

        r1 = $r5;

     label2:
        virtualinvoke r0.<gov.nist.javax.sip.parser.ims.PAssociatedURIParser: void headerName(int)>(2129);

        $r6 = new gov.nist.javax.sip.header.ims.PAssociatedURI;

        specialinvoke $r6.<gov.nist.javax.sip.header.ims.PAssociatedURI: void <init>()>();

        r2 = $r6;

        virtualinvoke r2.<gov.nist.javax.sip.header.ims.PAssociatedURI: void setHeaderName(java.lang.String)>("P-Associated-URI");

        specialinvoke r0.<gov.nist.javax.sip.parser.AddressParametersParser: void parse(gov.nist.javax.sip.header.AddressParametersHeader)>(r2);

        virtualinvoke r1.<gov.nist.javax.sip.header.ims.PAssociatedURIList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r2);

        $r7 = r0.<gov.nist.javax.sip.parser.ims.PAssociatedURIParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r7.<gov.nist.core.LexerCore: void SPorHT()>();

     label3:
        $r8 = r0.<gov.nist.javax.sip.parser.ims.PAssociatedURIParser: gov.nist.core.LexerCore lexer>;

        $c0 = virtualinvoke $r8.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c0 != 44 goto label4;

        $r13 = r0.<gov.nist.javax.sip.parser.ims.PAssociatedURIParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r13.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(44);

        $r15 = r0.<gov.nist.javax.sip.parser.ims.PAssociatedURIParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r15.<gov.nist.core.LexerCore: void SPorHT()>();

        $r14 = new gov.nist.javax.sip.header.ims.PAssociatedURI;

        specialinvoke $r14.<gov.nist.javax.sip.header.ims.PAssociatedURI: void <init>()>();

        r18 = $r14;

        specialinvoke r0.<gov.nist.javax.sip.parser.AddressParametersParser: void parse(gov.nist.javax.sip.header.AddressParametersHeader)>(r18);

        virtualinvoke r1.<gov.nist.javax.sip.header.ims.PAssociatedURIList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r18);

        $r16 = r0.<gov.nist.javax.sip.parser.ims.PAssociatedURIParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r16.<gov.nist.core.LexerCore: void SPorHT()>();

        goto label3;

     label4:
        $r9 = r0.<gov.nist.javax.sip.parser.ims.PAssociatedURIParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r9.<gov.nist.core.LexerCore: void SPorHT()>();

        $r10 = r0.<gov.nist.javax.sip.parser.ims.PAssociatedURIParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r10.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(10);

        r3 = r1;

     label5:
        $z2 = <gov.nist.javax.sip.parser.ims.PAssociatedURIParser: boolean debug>;

        if $z2 == 0 goto label6;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ims.PAssociatedURIParser: void dbg_leave(java.lang.String)>("PAssociatedURIParser.parse");

     label6:
        return r3;

     label7:
        $r17 := @caughtexception;

        r4 = $r17;

     label8:
        $z4 = <gov.nist.javax.sip.parser.ims.PAssociatedURIParser: boolean debug>;

        if $z4 == 0 goto label9;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ims.PAssociatedURIParser: void dbg_leave(java.lang.String)>("PAssociatedURIParser.parse");

     label9:
        throw r4;

        catch java.lang.Throwable from label2 to label5 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }
}
