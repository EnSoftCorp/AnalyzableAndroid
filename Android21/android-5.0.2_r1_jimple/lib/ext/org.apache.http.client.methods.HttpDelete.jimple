public class org.apache.http.client.methods.HttpDelete extends org.apache.http.client.methods.HttpRequestBase
{
    public static final java.lang.String METHOD_NAME;

    public void <init>()
    {
        org.apache.http.client.methods.HttpDelete r0;

        r0 := @this: org.apache.http.client.methods.HttpDelete;

        specialinvoke r0.<org.apache.http.client.methods.HttpRequestBase: void <init>()>();

        return;
    }

    public void <init>(java.net.URI)
    {
        org.apache.http.client.methods.HttpDelete r0;
        java.net.URI r1;

        r0 := @this: org.apache.http.client.methods.HttpDelete;

        r1 := @parameter0: java.net.URI;

        specialinvoke r0.<org.apache.http.client.methods.HttpRequestBase: void <init>()>();

        virtualinvoke r0.<org.apache.http.client.methods.HttpDelete: void setURI(java.net.URI)>(r1);

        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.http.client.methods.HttpDelete r0;
        java.lang.String r1;
        java.net.URI $r2;

        r0 := @this: org.apache.http.client.methods.HttpDelete;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.http.client.methods.HttpRequestBase: void <init>()>();

        $r2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>(r1);

        virtualinvoke r0.<org.apache.http.client.methods.HttpDelete: void setURI(java.net.URI)>($r2);

        return;
    }

    public java.lang.String getMethod()
    {
        org.apache.http.client.methods.HttpDelete r0;

        r0 := @this: org.apache.http.client.methods.HttpDelete;

        return "DELETE";
    }

    public static void <clinit>()
    {
        <org.apache.http.client.methods.HttpDelete: java.lang.String METHOD_NAME> = "DELETE";

        return;
    }
}
