public class gov.nist.javax.sip.parser.CallInfoParser extends gov.nist.javax.sip.parser.ParametersParser
{

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.CallInfoParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.CallInfoParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.ParametersParser: void <init>(java.lang.String)>(r1);

        return;
    }

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.CallInfoParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.CallInfoParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.ParametersParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    public gov.nist.javax.sip.header.SIPHeader parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.CallInfoParser r0;
        gov.nist.javax.sip.header.CallInfoList r1, $r6, r36;
        gov.nist.javax.sip.header.CallInfo r2, $r8, $r23, r33;
        gov.nist.javax.sip.parser.URLParser r3, $r12, $r27, r34;
        gov.nist.javax.sip.address.GenericURI r4, r35;
        java.lang.Throwable r5, $r32;
        boolean $z0, $z1, $z4;
        gov.nist.core.LexerCore $r7, $r9, $r10, $r14, $r15, $r16, $r18, $r19, $r20, $r22, $r25, $r28, $r29, $r30;
        char $c0, $c1;
        gov.nist.javax.sip.parser.Lexer $r13, $r26;

        r0 := @this: gov.nist.javax.sip.parser.CallInfoParser;

        $z0 = <gov.nist.javax.sip.parser.CallInfoParser: boolean debug>;

        if $z0 == 0 goto label01;

        virtualinvoke r0.<gov.nist.javax.sip.parser.CallInfoParser: void dbg_enter(java.lang.String)>("CallInfoParser.parse");

     label01:
        $r6 = new gov.nist.javax.sip.header.CallInfoList;

        specialinvoke $r6.<gov.nist.javax.sip.header.CallInfoList: void <init>()>();

        r1 = $r6;

     label02:
        virtualinvoke r0.<gov.nist.javax.sip.parser.CallInfoParser: void headerName(int)>(2099);

     label03:
        $r7 = r0.<gov.nist.javax.sip.parser.CallInfoParser: gov.nist.core.LexerCore lexer>;

        $c0 = virtualinvoke $r7.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c0 == 10 goto label06;

        $r8 = new gov.nist.javax.sip.header.CallInfo;

        specialinvoke $r8.<gov.nist.javax.sip.header.CallInfo: void <init>()>();

        r2 = $r8;

        virtualinvoke r2.<gov.nist.javax.sip.header.CallInfo: void setHeaderName(java.lang.String)>("Call-Info");

        $r9 = r0.<gov.nist.javax.sip.parser.CallInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r9.<gov.nist.core.LexerCore: void SPorHT()>();

        $r10 = r0.<gov.nist.javax.sip.parser.CallInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r10.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(60);

        $r12 = new gov.nist.javax.sip.parser.URLParser;

        $r14 = r0.<gov.nist.javax.sip.parser.CallInfoParser: gov.nist.core.LexerCore lexer>;

        $r13 = (gov.nist.javax.sip.parser.Lexer) $r14;

        specialinvoke $r12.<gov.nist.javax.sip.parser.URLParser: void <init>(gov.nist.javax.sip.parser.Lexer)>($r13);

        r3 = $r12;

        r4 = virtualinvoke r3.<gov.nist.javax.sip.parser.URLParser: gov.nist.javax.sip.address.GenericURI uriReference(boolean)>(1);

        virtualinvoke r2.<gov.nist.javax.sip.header.CallInfo: void setInfo(javax.sip.address.URI)>(r4);

        $r15 = r0.<gov.nist.javax.sip.parser.CallInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r15.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(62);

        $r16 = r0.<gov.nist.javax.sip.parser.CallInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r16.<gov.nist.core.LexerCore: void SPorHT()>();

        specialinvoke r0.<gov.nist.javax.sip.parser.ParametersParser: void parse(gov.nist.javax.sip.header.ParametersHeader)>(r2);

        virtualinvoke r1.<gov.nist.javax.sip.header.CallInfoList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r2);

     label04:
        $r18 = r0.<gov.nist.javax.sip.parser.CallInfoParser: gov.nist.core.LexerCore lexer>;

        $c1 = virtualinvoke $r18.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c1 != 44 goto label05;

        $r19 = r0.<gov.nist.javax.sip.parser.CallInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r19.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(44);

        $r20 = r0.<gov.nist.javax.sip.parser.CallInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r20.<gov.nist.core.LexerCore: void SPorHT()>();

        $r23 = new gov.nist.javax.sip.header.CallInfo;

        specialinvoke $r23.<gov.nist.javax.sip.header.CallInfo: void <init>()>();

        r33 = $r23;

        $r22 = r0.<gov.nist.javax.sip.parser.CallInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r22.<gov.nist.core.LexerCore: void SPorHT()>();

        $r25 = r0.<gov.nist.javax.sip.parser.CallInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r25.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(60);

        $r27 = new gov.nist.javax.sip.parser.URLParser;

        $r28 = r0.<gov.nist.javax.sip.parser.CallInfoParser: gov.nist.core.LexerCore lexer>;

        $r26 = (gov.nist.javax.sip.parser.Lexer) $r28;

        specialinvoke $r27.<gov.nist.javax.sip.parser.URLParser: void <init>(gov.nist.javax.sip.parser.Lexer)>($r26);

        r34 = $r27;

        r35 = virtualinvoke r34.<gov.nist.javax.sip.parser.URLParser: gov.nist.javax.sip.address.GenericURI uriReference(boolean)>(1);

        virtualinvoke r33.<gov.nist.javax.sip.header.CallInfo: void setInfo(javax.sip.address.URI)>(r35);

        $r30 = r0.<gov.nist.javax.sip.parser.CallInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r30.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(62);

        $r29 = r0.<gov.nist.javax.sip.parser.CallInfoParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r29.<gov.nist.core.LexerCore: void SPorHT()>();

        specialinvoke r0.<gov.nist.javax.sip.parser.ParametersParser: void parse(gov.nist.javax.sip.header.ParametersHeader)>(r33);

        virtualinvoke r1.<gov.nist.javax.sip.header.CallInfoList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r33);

        goto label04;

     label05:
        goto label03;

     label06:
        r36 = r1;

     label07:
        $z1 = <gov.nist.javax.sip.parser.CallInfoParser: boolean debug>;

        if $z1 == 0 goto label08;

        virtualinvoke r0.<gov.nist.javax.sip.parser.CallInfoParser: void dbg_leave(java.lang.String)>("CallInfoParser.parse");

     label08:
        return r36;

     label09:
        $r32 := @caughtexception;

        r5 = $r32;

     label10:
        $z4 = <gov.nist.javax.sip.parser.CallInfoParser: boolean debug>;

        if $z4 == 0 goto label11;

        virtualinvoke r0.<gov.nist.javax.sip.parser.CallInfoParser: void dbg_leave(java.lang.String)>("CallInfoParser.parse");

     label11:
        throw r5;

        catch java.lang.Throwable from label02 to label07 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }
}
