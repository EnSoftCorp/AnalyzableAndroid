public class gov.nist.javax.sip.parser.ExpiresParser extends gov.nist.javax.sip.parser.HeaderParser
{

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.ExpiresParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.ExpiresParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(java.lang.String)>(r1);

        return;
    }

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.ExpiresParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.ExpiresParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    public gov.nist.javax.sip.header.SIPHeader parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.ExpiresParser r0;
        gov.nist.javax.sip.header.Expires r1, r3, $r5;
        java.lang.String r2, $r15;
        int i0;
        java.lang.Throwable r4, $r17;
        boolean $z0, $z1, $z2;
        gov.nist.core.LexerCore $r6, $r8, $r9, $r11, $r12, $r14;
        javax.sip.InvalidArgumentException $r16, r22;
        java.text.ParseException $r18, $r20;
        java.lang.NumberFormatException $r19;

        r0 := @this: gov.nist.javax.sip.parser.ExpiresParser;

        $r5 = new gov.nist.javax.sip.header.Expires;

        specialinvoke $r5.<gov.nist.javax.sip.header.Expires: void <init>()>();

        r1 = $r5;

        $z0 = <gov.nist.javax.sip.parser.ExpiresParser: boolean debug>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ExpiresParser: void dbg_enter(java.lang.String)>("parse");

     label1:
        $r6 = r0.<gov.nist.javax.sip.parser.ExpiresParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r6.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(2090);

        $r8 = r0.<gov.nist.javax.sip.parser.ExpiresParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r8.<gov.nist.core.LexerCore: void SPorHT()>();

        $r9 = r0.<gov.nist.javax.sip.parser.ExpiresParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r9.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(58);

        $r11 = r0.<gov.nist.javax.sip.parser.ExpiresParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r11.<gov.nist.core.LexerCore: void SPorHT()>();

        $r12 = r0.<gov.nist.javax.sip.parser.ExpiresParser: gov.nist.core.LexerCore lexer>;

        r2 = virtualinvoke $r12.<gov.nist.core.LexerCore: java.lang.String getNextId()>();

        $r14 = r0.<gov.nist.javax.sip.parser.ExpiresParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r14.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(10);

     label2:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

        virtualinvoke r1.<gov.nist.javax.sip.header.Expires: void setExpires(int)>(i0);

        r3 = r1;

     label3:
        $z1 = <gov.nist.javax.sip.parser.ExpiresParser: boolean debug>;

        if $z1 == 0 goto label4;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ExpiresParser: void dbg_leave(java.lang.String)>("parse");

     label4:
        return r3;

     label5:
        $r19 := @caughtexception;

        $r20 = virtualinvoke r0.<gov.nist.javax.sip.parser.ExpiresParser: java.text.ParseException createParseException(java.lang.String)>("bad integer format");

        throw $r20;

     label6:
        $r16 := @caughtexception;

        r22 = $r16;

        $r15 = virtualinvoke r22.<javax.sip.InvalidArgumentException: java.lang.String getMessage()>();

        $r18 = virtualinvoke r0.<gov.nist.javax.sip.parser.ExpiresParser: java.text.ParseException createParseException(java.lang.String)>($r15);

        throw $r18;

     label7:
        $r17 := @caughtexception;

        r4 = $r17;

     label8:
        $z2 = <gov.nist.javax.sip.parser.ExpiresParser: boolean debug>;

        if $z2 == 0 goto label9;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ExpiresParser: void dbg_leave(java.lang.String)>("parse");

     label9:
        throw r4;

        catch java.lang.NumberFormatException from label2 to label3 with label5;
        catch javax.sip.InvalidArgumentException from label2 to label3 with label6;
        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label5 to label8 with label7;
    }
}
