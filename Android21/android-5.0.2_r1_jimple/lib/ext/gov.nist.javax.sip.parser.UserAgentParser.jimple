public class gov.nist.javax.sip.parser.UserAgentParser extends gov.nist.javax.sip.parser.HeaderParser
{

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.UserAgentParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.UserAgentParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(java.lang.String)>(r1);

        return;
    }

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.UserAgentParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.UserAgentParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    public gov.nist.javax.sip.header.SIPHeader parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.UserAgentParser r0;
        gov.nist.javax.sip.header.UserAgent r1, $r6;
        java.lang.String r2, r4, $r17, $r33, r34;
        java.lang.StringBuffer r3, $r14;
        java.lang.Throwable r5, $r31;
        boolean $z0, $z1, $z2;
        gov.nist.core.LexerCore $r7, $r8, $r9, $r10, $r12, $r13, $r16, $r19, $r20, $r24;
        char $c0, $c1, $c2, $c3;
        gov.nist.javax.sip.parser.Lexer $r11, $r21;
        int $i4;
        gov.nist.core.Token $r15;
        java.text.ParseException $r23, $r26, $r30;
        java.lang.StringBuilder $r27, $r28, $r29, $r32;

        r0 := @this: gov.nist.javax.sip.parser.UserAgentParser;

        $z0 = <gov.nist.javax.sip.parser.UserAgentParser: boolean debug>;

        if $z0 == 0 goto label01;

        virtualinvoke r0.<gov.nist.javax.sip.parser.UserAgentParser: void dbg_enter(java.lang.String)>("UserAgentParser.parse");

     label01:
        $r6 = new gov.nist.javax.sip.header.UserAgent;

        specialinvoke $r6.<gov.nist.javax.sip.header.UserAgent: void <init>()>();

        r1 = $r6;

     label02:
        virtualinvoke r0.<gov.nist.javax.sip.parser.UserAgentParser: void headerName(int)>(2065);

        $r7 = r0.<gov.nist.javax.sip.parser.UserAgentParser: gov.nist.core.LexerCore lexer>;

        $c0 = virtualinvoke $r7.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c0 != 10 goto label03;

        $r30 = virtualinvoke r0.<gov.nist.javax.sip.parser.UserAgentParser: java.text.ParseException createParseException(java.lang.String)>("empty header");

        throw $r30;

     label03:
        $r8 = r0.<gov.nist.javax.sip.parser.UserAgentParser: gov.nist.core.LexerCore lexer>;

        $c1 = virtualinvoke $r8.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c1 == 10 goto label09;

        $r9 = r0.<gov.nist.javax.sip.parser.UserAgentParser: gov.nist.core.LexerCore lexer>;

        $c2 = virtualinvoke $r9.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c2 == 0 goto label09;

        $r10 = r0.<gov.nist.javax.sip.parser.UserAgentParser: gov.nist.core.LexerCore lexer>;

        $c3 = virtualinvoke $r10.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c3 != 40 goto label04;

        $r24 = r0.<gov.nist.javax.sip.parser.UserAgentParser: gov.nist.core.LexerCore lexer>;

        r2 = virtualinvoke $r24.<gov.nist.core.LexerCore: java.lang.String comment()>();

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r32 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r1.<gov.nist.javax.sip.header.UserAgent: void addProductToken(java.lang.String)>($r33);

        goto label08;

     label04:
        $r11 = virtualinvoke r0.<gov.nist.javax.sip.parser.UserAgentParser: gov.nist.javax.sip.parser.Lexer getLexer()>();

        virtualinvoke $r11.<gov.nist.javax.sip.parser.Lexer: void SPorHT()>();

        $r12 = r0.<gov.nist.javax.sip.parser.UserAgentParser: gov.nist.core.LexerCore lexer>;

        r34 = virtualinvoke $r12.<gov.nist.core.LexerCore: java.lang.String byteStringNoSlash()>();

        if r34 != null goto label05;

        $r23 = virtualinvoke r0.<gov.nist.javax.sip.parser.UserAgentParser: java.text.ParseException createParseException(java.lang.String)>("Expected product string");

        throw $r23;

     label05:
        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>(java.lang.String)>(r34);

        r3 = $r14;

        $r13 = r0.<gov.nist.javax.sip.parser.UserAgentParser: gov.nist.core.LexerCore lexer>;

        $r15 = virtualinvoke $r13.<gov.nist.core.LexerCore: gov.nist.core.Token peekNextToken()>();

        $i4 = virtualinvoke $r15.<gov.nist.core.Token: int getTokenType()>();

        if $i4 != 47 goto label07;

        $r19 = r0.<gov.nist.javax.sip.parser.UserAgentParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r19.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(47);

        $r21 = virtualinvoke r0.<gov.nist.javax.sip.parser.UserAgentParser: gov.nist.javax.sip.parser.Lexer getLexer()>();

        virtualinvoke $r21.<gov.nist.javax.sip.parser.Lexer: void SPorHT()>();

        $r20 = r0.<gov.nist.javax.sip.parser.UserAgentParser: gov.nist.core.LexerCore lexer>;

        r4 = virtualinvoke $r20.<gov.nist.core.LexerCore: java.lang.String byteStringNoSlash()>();

        if r4 != null goto label06;

        $r26 = virtualinvoke r0.<gov.nist.javax.sip.parser.UserAgentParser: java.text.ParseException createParseException(java.lang.String)>("Expected product version");

        throw $r26;

     label06:
        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        virtualinvoke r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

     label07:
        $r17 = virtualinvoke r3.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<gov.nist.javax.sip.header.UserAgent: void addProductToken(java.lang.String)>($r17);

     label08:
        $r16 = r0.<gov.nist.javax.sip.parser.UserAgentParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r16.<gov.nist.core.LexerCore: void SPorHT()>();

        goto label03;

     label09:
        $z1 = <gov.nist.javax.sip.parser.UserAgentParser: boolean debug>;

        if $z1 == 0 goto label13;

        virtualinvoke r0.<gov.nist.javax.sip.parser.UserAgentParser: void dbg_leave(java.lang.String)>("UserAgentParser.parse");

        goto label13;

     label10:
        $r31 := @caughtexception;

        r5 = $r31;

     label11:
        $z2 = <gov.nist.javax.sip.parser.UserAgentParser: boolean debug>;

        if $z2 == 0 goto label12;

        virtualinvoke r0.<gov.nist.javax.sip.parser.UserAgentParser: void dbg_leave(java.lang.String)>("UserAgentParser.parse");

     label12:
        throw r5;

     label13:
        return r1;

        catch java.lang.Throwable from label02 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public static void main(java.lang.String[]) throws java.text.ParseException
    {
        java.lang.String[] r0, r1, $r4;
        int i0, $i1;
        gov.nist.javax.sip.parser.UserAgentParser r2, $r5;
        gov.nist.javax.sip.header.UserAgent r3;
        java.lang.String $r6, $r11, $r13;
        gov.nist.javax.sip.header.SIPHeader $r7;
        java.lang.StringBuilder $r8, $r10, $r12;
        java.io.PrintStream $r9;

        r0 := @parameter0: java.lang.String[];

        $r4 = newarray (java.lang.String)[6];

        $r4[0] = "User-Agent: Softphone/Beta1.5 \n";

        $r4[1] = "User-Agent:Nist/Beta1 (beta version) \n";

        $r4[2] = "User-Agent: Nist UA (beta version)\n";

        $r4[3] = "User-Agent: Nist1.0/Beta2 Ubi/vers.1.0 (very cool) \n";

        $r4[4] = "User-Agent: SJphone/1.60.299a/L (SJ Labs)\n";

        $r4[5] = "User-Agent: sipXecs/3.5.11 sipXecs/sipxbridge (Linux)\n";

        r1 = $r4;

        i0 = 0;

     label1:
        $i1 = lengthof r1;

        if i0 >= $i1 goto label2;

        $r5 = new gov.nist.javax.sip.parser.UserAgentParser;

        $r6 = r1[i0];

        specialinvoke $r5.<gov.nist.javax.sip.parser.UserAgentParser: void <init>(java.lang.String)>($r6);

        r2 = $r5;

        $r7 = virtualinvoke r2.<gov.nist.javax.sip.parser.UserAgentParser: gov.nist.javax.sip.header.SIPHeader parse()>();

        r3 = (gov.nist.javax.sip.header.UserAgent) $r7;

        $r9 = <java.lang.System: java.io.PrintStream out>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("encoded = ");

        $r11 = virtualinvoke r3.<gov.nist.javax.sip.header.UserAgent: java.lang.String encode()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r13);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }
}
