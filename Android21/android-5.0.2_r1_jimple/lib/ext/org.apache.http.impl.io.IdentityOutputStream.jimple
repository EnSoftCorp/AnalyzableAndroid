public class org.apache.http.impl.io.IdentityOutputStream extends java.io.OutputStream
{
    private final org.apache.http.io.SessionOutputBuffer out;
    private boolean closed;

    public void <init>(org.apache.http.io.SessionOutputBuffer)
    {
        org.apache.http.impl.io.IdentityOutputStream r0;
        org.apache.http.io.SessionOutputBuffer r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @this: org.apache.http.impl.io.IdentityOutputStream;

        r1 := @parameter0: org.apache.http.io.SessionOutputBuffer;

        specialinvoke r0.<java.io.OutputStream: void <init>()>();

        r0.<org.apache.http.impl.io.IdentityOutputStream: boolean closed> = 0;

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Session output buffer may not be null");

        throw $r2;

     label1:
        r0.<org.apache.http.impl.io.IdentityOutputStream: org.apache.http.io.SessionOutputBuffer out> = r1;

        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.http.impl.io.IdentityOutputStream r0;
        boolean $z0;
        org.apache.http.io.SessionOutputBuffer $r1;

        r0 := @this: org.apache.http.impl.io.IdentityOutputStream;

        $z0 = r0.<org.apache.http.impl.io.IdentityOutputStream: boolean closed>;

        if $z0 != 0 goto label1;

        r0.<org.apache.http.impl.io.IdentityOutputStream: boolean closed> = 1;

        $r1 = r0.<org.apache.http.impl.io.IdentityOutputStream: org.apache.http.io.SessionOutputBuffer out>;

        interfaceinvoke $r1.<org.apache.http.io.SessionOutputBuffer: void flush()>();

     label1:
        return;
    }

    public void flush() throws java.io.IOException
    {
        org.apache.http.impl.io.IdentityOutputStream r0;
        org.apache.http.io.SessionOutputBuffer $r1;

        r0 := @this: org.apache.http.impl.io.IdentityOutputStream;

        $r1 = r0.<org.apache.http.impl.io.IdentityOutputStream: org.apache.http.io.SessionOutputBuffer out>;

        interfaceinvoke $r1.<org.apache.http.io.SessionOutputBuffer: void flush()>();

        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        org.apache.http.impl.io.IdentityOutputStream r0;
        byte[] r1;
        int i0, i1;
        boolean $z0;
        org.apache.http.io.SessionOutputBuffer $r2;
        java.io.IOException $r3;

        r0 := @this: org.apache.http.impl.io.IdentityOutputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = r0.<org.apache.http.impl.io.IdentityOutputStream: boolean closed>;

        if $z0 == 0 goto label1;

        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("Attempted write to closed stream.");

        throw $r3;

     label1:
        $r2 = r0.<org.apache.http.impl.io.IdentityOutputStream: org.apache.http.io.SessionOutputBuffer out>;

        interfaceinvoke $r2.<org.apache.http.io.SessionOutputBuffer: void write(byte[],int,int)>(r1, i0, i1);

        return;
    }

    public void write(byte[]) throws java.io.IOException
    {
        org.apache.http.impl.io.IdentityOutputStream r0;
        byte[] r1;
        int $i0;

        r0 := @this: org.apache.http.impl.io.IdentityOutputStream;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        virtualinvoke r0.<org.apache.http.impl.io.IdentityOutputStream: void write(byte[],int,int)>(r1, 0, $i0);

        return;
    }

    public void write(int) throws java.io.IOException
    {
        org.apache.http.impl.io.IdentityOutputStream r0;
        int i0;
        boolean $z0;
        org.apache.http.io.SessionOutputBuffer $r1;
        java.io.IOException $r2;

        r0 := @this: org.apache.http.impl.io.IdentityOutputStream;

        i0 := @parameter0: int;

        $z0 = r0.<org.apache.http.impl.io.IdentityOutputStream: boolean closed>;

        if $z0 == 0 goto label1;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("Attempted write to closed stream.");

        throw $r2;

     label1:
        $r1 = r0.<org.apache.http.impl.io.IdentityOutputStream: org.apache.http.io.SessionOutputBuffer out>;

        interfaceinvoke $r1.<org.apache.http.io.SessionOutputBuffer: void write(int)>(i0);

        return;
    }
}
