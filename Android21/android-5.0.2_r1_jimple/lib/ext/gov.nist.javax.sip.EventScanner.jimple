class gov.nist.javax.sip.EventScanner extends java.lang.Object implements java.lang.Runnable
{
    private boolean isStopped;
    private int refCount;
    private java.util.LinkedList pendingEvents;
    private int[] eventMutex;
    private gov.nist.javax.sip.SipStackImpl sipStack;

    public void incrementRefcount()
    {
        gov.nist.javax.sip.EventScanner r0;
        int[] r1, $r3;
        java.lang.Throwable r2, $r4;
        int $i0, $i1;

        r0 := @this: gov.nist.javax.sip.EventScanner;

        $r3 = r0.<gov.nist.javax.sip.EventScanner: int[] eventMutex>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $i0 = r0.<gov.nist.javax.sip.EventScanner: int refCount>;

        $i1 = $i0 + 1;

        r0.<gov.nist.javax.sip.EventScanner: int refCount> = $i1;

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void <init>(gov.nist.javax.sip.SipStackImpl)
    {
        gov.nist.javax.sip.EventScanner r0;
        gov.nist.javax.sip.SipStackImpl r1;
        java.lang.Thread r2, $r6;
        java.util.LinkedList $r3, $r5;
        int[] $r4;

        r0 := @this: gov.nist.javax.sip.EventScanner;

        r1 := @parameter0: gov.nist.javax.sip.SipStackImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>()>();

        r0.<gov.nist.javax.sip.EventScanner: java.util.LinkedList pendingEvents> = $r3;

        $r4 = newarray (int)[1];

        $r4[0] = 0;

        r0.<gov.nist.javax.sip.EventScanner: int[] eventMutex> = $r4;

        $r5 = new java.util.LinkedList;

        specialinvoke $r5.<java.util.LinkedList: void <init>()>();

        r0.<gov.nist.javax.sip.EventScanner: java.util.LinkedList pendingEvents> = $r5;

        $r6 = new java.lang.Thread;

        specialinvoke $r6.<java.lang.Thread: void <init>(java.lang.Runnable)>(r0);

        r2 = $r6;

        virtualinvoke r2.<java.lang.Thread: void setDaemon(boolean)>(0);

        r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack> = r1;

        virtualinvoke r2.<java.lang.Thread: void setName(java.lang.String)>("EventScannerThread");

        virtualinvoke r2.<java.lang.Thread: void start()>();

        return;
    }

    public void addEvent(gov.nist.javax.sip.EventWrapper)
    {
        gov.nist.javax.sip.EventScanner r0;
        gov.nist.javax.sip.EventWrapper r1;
        int[] r2, $r5, $r7;
        java.lang.Throwable r3, $r13;
        gov.nist.javax.sip.SipStackImpl $r4, $r8;
        boolean $z0;
        java.util.LinkedList $r6;
        gov.nist.core.StackLogger $r9;
        java.lang.StringBuilder $r10, $r11, $r12;
        java.lang.String $r14;

        r0 := @this: gov.nist.javax.sip.EventScanner;

        r1 := @parameter0: gov.nist.javax.sip.EventWrapper;

        $r4 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z0 = virtualinvoke $r4.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label1;

        $r8 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r9 = virtualinvoke $r8.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addEvent ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r14);

     label1:
        $r5 = r0.<gov.nist.javax.sip.EventScanner: int[] eventMutex>;

        r2 = $r5;

        entermonitor $r5;

     label2:
        $r6 = r0.<gov.nist.javax.sip.EventScanner: java.util.LinkedList pendingEvents>;

        virtualinvoke $r6.<java.util.LinkedList: boolean add(java.lang.Object)>(r1);

        $r7 = r0.<gov.nist.javax.sip.EventScanner: int[] eventMutex>;

        virtualinvoke $r7.<java.lang.Object: void notify()>();

        exitmonitor r2;

     label3:
        goto label6;

     label4:
        $r13 := @caughtexception;

        r3 = $r13;

        exitmonitor r2;

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void stop()
    {
        gov.nist.javax.sip.EventScanner r0;
        int[] r1, $r3, $r4;
        java.lang.Throwable r2, $r5;
        int $i0, $i1, $i2, $i3;

        r0 := @this: gov.nist.javax.sip.EventScanner;

        $r3 = r0.<gov.nist.javax.sip.EventScanner: int[] eventMutex>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $i0 = r0.<gov.nist.javax.sip.EventScanner: int refCount>;

        if $i0 <= 0 goto label2;

        $i2 = r0.<gov.nist.javax.sip.EventScanner: int refCount>;

        $i3 = $i2 - 1;

        r0.<gov.nist.javax.sip.EventScanner: int refCount> = $i3;

     label2:
        $i1 = r0.<gov.nist.javax.sip.EventScanner: int refCount>;

        if $i1 != 0 goto label3;

        r0.<gov.nist.javax.sip.EventScanner: boolean isStopped> = 1;

        $r4 = r0.<gov.nist.javax.sip.EventScanner: int[] eventMutex>;

        virtualinvoke $r4.<java.lang.Object: void notify()>();

     label3:
        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label6:
        throw r2;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void forceStop()
    {
        gov.nist.javax.sip.EventScanner r0;
        int[] r1, $r3, $r4;
        java.lang.Throwable r2, $r5;

        r0 := @this: gov.nist.javax.sip.EventScanner;

        $r3 = r0.<gov.nist.javax.sip.EventScanner: int[] eventMutex>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        r0.<gov.nist.javax.sip.EventScanner: boolean isStopped> = 1;

        r0.<gov.nist.javax.sip.EventScanner: int refCount> = 0;

        $r4 = r0.<gov.nist.javax.sip.EventScanner: int[] eventMutex>;

        virtualinvoke $r4.<java.lang.Object: void notify()>();

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void deliverEvent(gov.nist.javax.sip.EventWrapper)
    {
        gov.nist.javax.sip.EventScanner r0;
        gov.nist.javax.sip.EventWrapper r1;
        java.util.EventObject r2;
        gov.nist.javax.sip.message.SIPRequest r3, $r49, $r50, $r95, $r105, $r106, $r151, $r164, $r167, $r181, $r190, $r191, $r248, $r288, $r289;
        gov.nist.javax.sip.stack.SIPServerTransaction r4, r5, $r83, $r107, $r111, $r112, $r145, $r146, $r148, $r172, $r175, $r198, $r253, $r282, $r283;
        java.lang.Throwable r6, r7, $r243, $r260;
        gov.nist.javax.sip.SipStackImpl $r8, $r9, $r10, $r17, $r18, $r23, $r31, $r45, $r55, $r58, $r61, $r67, $r70, $r81, $r82, $r84, $r86, $r87, $r89, $r90, $r100, $r110, $r119, $r127, $r130, $r135, $r143, $r147, $r149, $r159, $r163, $r173, $r183, $r186, $r197, $r200, $r202, $r203, $r205, $r221, $r223, $r226, $r239, $r242, $r245, $r255, $r258, $r265, $r268, $r271, $r274, $r278, $r279, $r284;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, $z36, $z37, $z38, $z39, $z40, $z41, $z42;
        java.lang.StringBuilder $r11, $r13, $r14, $r21, $r25, $r26, $r29, $r33, $r34, $r57, $r63, $r65, $r74, $r76, $r79, $r101, $r102, $r114, $r116, $r121, $r123, $r129, $r132, $r137, $r139, $r140, $r141, $r161, $r168, $r171, $r188, $r194, $r195, $r207, $r209, $r210, $r211, $r212, $r213, $r216, $r218, $r228, $r229, $r230, $r231, $r232, $r233, $r235, $r287, $r292, $r293;
        gov.nist.core.StackLogger $r12, $r20, $r22, $r28, $r56, $r69, $r78, $r99, $r120, $r128, $r142, $r162, $r169, $r185, $r196, $r201, $r204, $r214, $r220, $r225, $r244, $r256, $r259, $r266, $r270, $r273, $r277, $r280;
        javax.sip.DialogTerminatedEvent $r15;
        java.lang.String $r16, $r30, $r38, $r43, $r51, $r64, $r75, $r77, $r94, $r115, $r117, $r122, $r124, $r131, $r136, $r138, $r152, $r158, $r160, $r166, $r182, $r187, $r189, $r208, $r215, $r227, $r236, $r250, $r276, $r286;
        javax.sip.TransactionTerminatedEvent $r19, $r27, $r35;
        javax.sip.ClientTransaction $r24;
        javax.sip.ServerTransaction $r32, $r238;
        gov.nist.javax.sip.DialogTimeoutEvent $r36;
        javax.sip.IOExceptionEvent $r37;
        javax.sip.Dialog $r39, $r126;
        javax.sip.message.Response $r40;
        javax.sip.TimeoutEvent $r41;
        gov.nist.javax.sip.SipListenerExt $r42;
        javax.sip.header.CSeqHeader $r44, $r59;
        gov.nist.javax.sip.stack.SIPTransaction $r46, $r47, $r48, $r52, $r80, $r85, $r88, $r91, $r92, $r96, $r97, $r98, $r108, $r109, $r113, $r125, $r133, $r134, $r144, $r150, $r153, $r154, $r155, $r156, $r174, $r177, $r178, $r179, $r180, $r184, $r199, $r234, $r246, $r247, $r249, $r251, $r254, $r261, $r262, $r263, $r281, $r285, r300;
        javax.sip.TransactionState $r53, $r54, $r93, $r157, $r176, $r252;
        long $l0;
        int $i1, $i2, $i3, $i4, $i5;
        javax.sip.DialogState $r60, $r62, $r66, $r71;
        javax.sip.ResponseEvent $r68, r297;
        javax.sip.RequestEvent $r72, $r104, $r118, $r170, $r193, $r237, $r290;
        javax.sip.message.Request $r73, $r103, $r165, $r192, $r291;
        gov.nist.javax.sip.message.SIPResponse $r206, r298;
        java.lang.Object $r217, $r240;
        java.lang.Exception $r219, $r222, $r257, $r264, $r269, $r272, $r275, r296, r301, r303, r304, r305, r306, r307;
        java.lang.AbstractMethodError $r224, $r267;
        gov.nist.javax.sip.SipProviderImpl $r241;
        javax.sip.SipListener r294;
        gov.nist.javax.sip.stack.SIPDialog r295, r299;
        gov.nist.javax.sip.stack.SIPClientTransaction r302;

        r0 := @this: gov.nist.javax.sip.EventScanner;

        r1 := @parameter0: gov.nist.javax.sip.EventWrapper;

        r2 = r1.<gov.nist.javax.sip.EventWrapper: java.util.EventObject sipEvent>;

        $r8 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z0 = virtualinvoke $r8.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label01;

        $r239 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r214 = virtualinvoke $r239.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r213 = new java.lang.StringBuilder;

        specialinvoke $r213.<java.lang.StringBuilder: void <init>()>();

        $r212 = virtualinvoke $r213.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sipEvent = ");

        $r211 = virtualinvoke $r212.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r218 = virtualinvoke $r211.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("source = ");

        $r217 = virtualinvoke r2.<java.util.EventObject: java.lang.Object getSource()>();

        $r216 = virtualinvoke $r218.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r217);

        $r215 = virtualinvoke $r216.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r214.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r215);

     label01:
        $z1 = r2 instanceof javax.sip.IOExceptionEvent;

        if $z1 != 0 goto label02;

        $r240 = virtualinvoke r2.<java.util.EventObject: java.lang.Object getSource()>();

        $r241 = (gov.nist.javax.sip.SipProviderImpl) $r240;

        r294 = virtualinvoke $r241.<gov.nist.javax.sip.SipProviderImpl: javax.sip.SipListener getSipListener()>();

        goto label03;

     label02:
        $r9 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        r294 = virtualinvoke $r9.<gov.nist.javax.sip.SipStackImpl: javax.sip.SipListener getSipListener()>();

     label03:
        $z2 = r2 instanceof javax.sip.RequestEvent;

        if $z2 == 0 goto label38;

     label04:
        $r72 = (javax.sip.RequestEvent) r2;

        $r73 = virtualinvoke $r72.<javax.sip.RequestEvent: javax.sip.message.Request getRequest()>();

        r3 = (gov.nist.javax.sip.message.SIPRequest) $r73;

        $r86 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z18 = virtualinvoke $r86.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z18 == 0 goto label05;

        $r200 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r201 = virtualinvoke $r200.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r229 = new java.lang.StringBuilder;

        specialinvoke $r229.<java.lang.StringBuilder: void <init>()>();

        $r230 = virtualinvoke $r229.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("deliverEvent : ");

        $r227 = virtualinvoke r3.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getFirstLine()>();

        $r228 = virtualinvoke $r230.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r227);

        $r233 = virtualinvoke $r228.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" transaction ");

        $r234 = r1.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $r231 = virtualinvoke $r233.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r234);

        $r232 = virtualinvoke $r231.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sipEvent.serverTx = ");

        $r237 = (javax.sip.RequestEvent) r2;

        $r238 = virtualinvoke $r237.<javax.sip.RequestEvent: javax.sip.ServerTransaction getServerTransaction()>();

        $r235 = virtualinvoke $r232.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r238);

        $r236 = virtualinvoke $r235.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r201.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r236);

     label05:
        $r84 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r85 = virtualinvoke $r84.<gov.nist.javax.sip.SipStackImpl: gov.nist.javax.sip.stack.SIPTransaction findTransaction(gov.nist.javax.sip.message.SIPMessage,boolean)>(r3, 1);

        r4 = (gov.nist.javax.sip.stack.SIPServerTransaction) $r85;

        if r4 == null goto label13;

        $z28 = virtualinvoke r4.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean passToListener()>();

        if $z28 != 0 goto label13;

        $r158 = virtualinvoke r3.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z29 = virtualinvoke $r158.<java.lang.String: boolean equals(java.lang.Object)>("ACK");

        if $z29 == 0 goto label07;

        $z36 = virtualinvoke r4.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean isInviteTransaction()>();

        if $z36 == 0 goto label07;

        $r206 = virtualinvoke r4.<gov.nist.javax.sip.stack.SIPServerTransaction: gov.nist.javax.sip.message.SIPResponse getLastResponse()>();

        $i4 = virtualinvoke $r206.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

        $i5 = $i4 / 100;

        if $i5 == 2 goto label06;

        $r202 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z34 = virtualinvoke $r202.<gov.nist.javax.sip.SipStackImpl: boolean isNon2XXAckPassedToListener()>();

        if $z34 == 0 goto label07;

     label06:
        $r205 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z35 = virtualinvoke $r205.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z35 == 0 goto label20;

        $r203 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r204 = virtualinvoke $r203.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r204.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Detected broken client sending ACK with same branch! Passing...");

        goto label20;

     label07:
        $r159 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z31 = virtualinvoke $r159.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z31 == 0 goto label08;

        $r186 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r185 = virtualinvoke $r186.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r209 = new java.lang.StringBuilder;

        specialinvoke $r209.<java.lang.StringBuilder: void <init>()>();

        $r210 = virtualinvoke $r209.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("transaction already exists! ");

        $r207 = virtualinvoke $r210.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r208 = virtualinvoke $r207.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r185.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r208);

     label08:
        $r183 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z32 = virtualinvoke $r183.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z32 == 0 goto label09;

        $r197 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r196 = virtualinvoke $r197.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r195 = new java.lang.StringBuilder;

        specialinvoke $r195.<java.lang.StringBuilder: void <init>()>();

        $r194 = virtualinvoke $r195.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Done processing Message ");

        $r193 = (javax.sip.RequestEvent) r2;

        $r192 = virtualinvoke $r193.<javax.sip.RequestEvent: javax.sip.message.Request getRequest()>();

        $r191 = (gov.nist.javax.sip.message.SIPRequest) $r192;

        $r190 = (gov.nist.javax.sip.message.SIPRequest) $r191;

        $r189 = virtualinvoke $r190.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getFirstLine()>();

        $r188 = virtualinvoke $r194.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r189);

        $r187 = virtualinvoke $r188.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r196.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r187);

     label09:
        $r184 = r1.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        if $r184 == null goto label10;

        $r174 = r1.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $r175 = (gov.nist.javax.sip.stack.SIPServerTransaction) $r174;

        $z33 = virtualinvoke $r175.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean passToListener()>();

        if $z33 == 0 goto label10;

        $r199 = r1.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $r198 = (gov.nist.javax.sip.stack.SIPServerTransaction) $r199;

        virtualinvoke $r198.<gov.nist.javax.sip.stack.SIPServerTransaction: void releaseSem()>();

     label10:
        $r179 = r1.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        if $r179 == null goto label11;

        $r173 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r178 = r1.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $r172 = (gov.nist.javax.sip.stack.SIPServerTransaction) $r178;

        virtualinvoke $r173.<gov.nist.javax.sip.SipStackImpl: void removePendingTransaction(gov.nist.javax.sip.stack.SIPServerTransaction)>($r172);

     label11:
        $r180 = r1.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $r181 = virtualinvoke $r180.<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r182 = virtualinvoke $r181.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z30 = virtualinvoke $r182.<java.lang.String: boolean equals(java.lang.Object)>("ACK");

        if $z30 == 0 goto label12;

        $r177 = r1.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $r176 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        virtualinvoke $r177.<gov.nist.javax.sip.stack.SIPTransaction: void setState(javax.sip.TransactionState)>($r176);

     label12:
        return;

     label13:
        $r82 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r83 = virtualinvoke $r82.<gov.nist.javax.sip.SipStackImpl: gov.nist.javax.sip.stack.SIPServerTransaction findPendingTransaction(gov.nist.javax.sip.message.SIPRequest)>(r3);

        if $r83 == null goto label19;

        $r130 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z25 = virtualinvoke $r130.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z25 == 0 goto label14;

        $r163 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r162 = virtualinvoke $r163.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r162.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("transaction already exists!!");

     label14:
        $r135 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z24 = virtualinvoke $r135.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z24 == 0 goto label15;

        $r149 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r169 = virtualinvoke $r149.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r168 = new java.lang.StringBuilder;

        specialinvoke $r168.<java.lang.StringBuilder: void <init>()>();

        $r171 = virtualinvoke $r168.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Done processing Message ");

        $r170 = (javax.sip.RequestEvent) r2;

        $r165 = virtualinvoke $r170.<javax.sip.RequestEvent: javax.sip.message.Request getRequest()>();

        $r164 = (gov.nist.javax.sip.message.SIPRequest) $r165;

        $r167 = (gov.nist.javax.sip.message.SIPRequest) $r164;

        $r166 = virtualinvoke $r167.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getFirstLine()>();

        $r161 = virtualinvoke $r171.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r166);

        $r160 = virtualinvoke $r161.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r169.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r160);

     label15:
        $r134 = r1.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        if $r134 == null goto label16;

        $r144 = r1.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $r145 = (gov.nist.javax.sip.stack.SIPServerTransaction) $r144;

        $z26 = virtualinvoke $r145.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean passToListener()>();

        if $z26 == 0 goto label16;

        $r150 = r1.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $r148 = (gov.nist.javax.sip.stack.SIPServerTransaction) $r150;

        virtualinvoke $r148.<gov.nist.javax.sip.stack.SIPServerTransaction: void releaseSem()>();

     label16:
        $r153 = r1.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        if $r153 == null goto label17;

        $r147 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r156 = r1.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $r146 = (gov.nist.javax.sip.stack.SIPServerTransaction) $r156;

        virtualinvoke $r147.<gov.nist.javax.sip.SipStackImpl: void removePendingTransaction(gov.nist.javax.sip.stack.SIPServerTransaction)>($r146);

     label17:
        $r154 = r1.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $r151 = virtualinvoke $r154.<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r152 = virtualinvoke $r151.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z27 = virtualinvoke $r152.<java.lang.String: boolean equals(java.lang.Object)>("ACK");

        if $z27 == 0 goto label18;

        $r155 = r1.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $r157 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        virtualinvoke $r155.<gov.nist.javax.sip.stack.SIPTransaction: void setState(javax.sip.TransactionState)>($r157);

     label18:
        return;

     label19:
        $r80 = r1.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        r5 = (gov.nist.javax.sip.stack.SIPServerTransaction) $r80;

        $r81 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        virtualinvoke $r81.<gov.nist.javax.sip.SipStackImpl: void putPendingTransaction(gov.nist.javax.sip.stack.SIPServerTransaction)>(r5);

     label20:
        $r91 = r1.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        virtualinvoke r3.<gov.nist.javax.sip.message.SIPRequest: void setTransaction(java.lang.Object)>($r91);

     label21:
        $r90 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z21 = virtualinvoke $r90.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z21 == 0 goto label22;

        $r119 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r120 = virtualinvoke $r119.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r121 = new java.lang.StringBuilder;

        specialinvoke $r121.<java.lang.StringBuilder: void <init>()>();

        $r139 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calling listener ");

        $r138 = virtualinvoke r3.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getFirstLine()>();

        $r137 = virtualinvoke $r139.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r138);

        $r136 = virtualinvoke $r137.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r120.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r136);

        $r143 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r142 = virtualinvoke $r143.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r141 = new java.lang.StringBuilder;

        specialinvoke $r141.<java.lang.StringBuilder: void <init>()>();

        $r140 = virtualinvoke $r141.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calling listener ");

        $r133 = r1.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $r132 = virtualinvoke $r140.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r133);

        $r131 = virtualinvoke $r132.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r142.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r131);

     label22:
        if r294 == null goto label23;

        $r118 = (javax.sip.RequestEvent) r2;

        interfaceinvoke r294.<javax.sip.SipListener: void processRequest(javax.sip.RequestEvent)>($r118);

     label23:
        $r89 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z20 = virtualinvoke $r89.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z20 == 0 goto label24;

        $r127 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r128 = virtualinvoke $r127.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r129 = new java.lang.StringBuilder;

        specialinvoke $r129.<java.lang.StringBuilder: void <init>()>();

        $r114 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Done processing Message ");

        $r115 = virtualinvoke r3.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getFirstLine()>();

        $r116 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r115);

        $r117 = virtualinvoke $r116.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r128.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r117);

     label24:
        $r88 = r1.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        if $r88 == null goto label25;

        $r125 = r1.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $r126 = virtualinvoke $r125.<gov.nist.javax.sip.stack.SIPTransaction: javax.sip.Dialog getDialog()>();

        r295 = (gov.nist.javax.sip.stack.SIPDialog) $r126;

        if r295 == null goto label25;

        virtualinvoke r295.<gov.nist.javax.sip.stack.SIPDialog: void requestConsumed()>();

     label25:
        goto label27;

     label26:
        $r257 := @caughtexception;

        r296 = $r257;

        $r258 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r259 = virtualinvoke $r258.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r259.<gov.nist.core.StackLogger: void logException(java.lang.Throwable)>(r296);

     label27:
        $r87 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z19 = virtualinvoke $r87.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z19 == 0 goto label28;

        $r100 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r99 = virtualinvoke $r100.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r102 = new java.lang.StringBuilder;

        specialinvoke $r102.<java.lang.StringBuilder: void <init>()>();

        $r101 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Done processing Message ");

        $r104 = (javax.sip.RequestEvent) r2;

        $r103 = virtualinvoke $r104.<javax.sip.RequestEvent: javax.sip.message.Request getRequest()>();

        $r106 = (gov.nist.javax.sip.message.SIPRequest) $r103;

        $r105 = (gov.nist.javax.sip.message.SIPRequest) $r106;

        $r122 = virtualinvoke $r105.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getFirstLine()>();

        $r123 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r122);

        $r124 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r99.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r124);

     label28:
        $r98 = r1.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        if $r98 == null goto label29;

        $r109 = r1.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $r111 = (gov.nist.javax.sip.stack.SIPServerTransaction) $r109;

        $z23 = virtualinvoke $r111.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean passToListener()>();

        if $z23 == 0 goto label29;

        $r113 = r1.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $r112 = (gov.nist.javax.sip.stack.SIPServerTransaction) $r113;

        virtualinvoke $r112.<gov.nist.javax.sip.stack.SIPServerTransaction: void releaseSem()>();

     label29:
        $r97 = r1.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        if $r97 == null goto label30;

        $r110 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r108 = r1.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $r107 = (gov.nist.javax.sip.stack.SIPServerTransaction) $r108;

        virtualinvoke $r110.<gov.nist.javax.sip.SipStackImpl: void removePendingTransaction(gov.nist.javax.sip.stack.SIPServerTransaction)>($r107);

     label30:
        $r96 = r1.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $r95 = virtualinvoke $r96.<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r94 = virtualinvoke $r95.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z22 = virtualinvoke $r94.<java.lang.String: boolean equals(java.lang.Object)>("ACK");

        if $z22 == 0 goto label37;

        $r92 = r1.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $r93 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        virtualinvoke $r92.<gov.nist.javax.sip.stack.SIPTransaction: void setState(javax.sip.TransactionState)>($r93);

        goto label37;

     label31:
        $r243 := @caughtexception;

        r6 = $r243;

     label32:
        $r245 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z38 = virtualinvoke $r245.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z38 == 0 goto label33;

        $r279 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r280 = virtualinvoke $r279.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r292 = new java.lang.StringBuilder;

        specialinvoke $r292.<java.lang.StringBuilder: void <init>()>();

        $r293 = virtualinvoke $r292.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Done processing Message ");

        $r290 = (javax.sip.RequestEvent) r2;

        $r291 = virtualinvoke $r290.<javax.sip.RequestEvent: javax.sip.message.Request getRequest()>();

        $r288 = (gov.nist.javax.sip.message.SIPRequest) $r291;

        $r289 = (gov.nist.javax.sip.message.SIPRequest) $r288;

        $r286 = virtualinvoke $r289.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getFirstLine()>();

        $r287 = virtualinvoke $r293.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r286);

        $r276 = virtualinvoke $r287.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r280.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r276);

     label33:
        $r247 = r1.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        if $r247 == null goto label34;

        $r285 = r1.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $r283 = (gov.nist.javax.sip.stack.SIPServerTransaction) $r285;

        $z42 = virtualinvoke $r283.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean passToListener()>();

        if $z42 == 0 goto label34;

        $r281 = r1.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $r282 = (gov.nist.javax.sip.stack.SIPServerTransaction) $r281;

        virtualinvoke $r282.<gov.nist.javax.sip.stack.SIPServerTransaction: void releaseSem()>();

     label34:
        $r246 = r1.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        if $r246 == null goto label35;

        $r284 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r254 = r1.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $r253 = (gov.nist.javax.sip.stack.SIPServerTransaction) $r254;

        virtualinvoke $r284.<gov.nist.javax.sip.SipStackImpl: void removePendingTransaction(gov.nist.javax.sip.stack.SIPServerTransaction)>($r253);

     label35:
        $r249 = r1.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $r248 = virtualinvoke $r249.<gov.nist.javax.sip.stack.SIPTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r250 = virtualinvoke $r248.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z39 = virtualinvoke $r250.<java.lang.String: boolean equals(java.lang.Object)>("ACK");

        if $z39 == 0 goto label36;

        $r251 = r1.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $r252 = <javax.sip.TransactionState: javax.sip.TransactionState TERMINATED>;

        virtualinvoke $r251.<gov.nist.javax.sip.stack.SIPTransaction: void setState(javax.sip.TransactionState)>($r252);

     label36:
        throw r6;

     label37:
        goto label83;

     label38:
        $z3 = r2 instanceof javax.sip.ResponseEvent;

        if $z3 == 0 goto label57;

     label39:
        r297 = (javax.sip.ResponseEvent) r2;

        $r40 = virtualinvoke r297.<javax.sip.ResponseEvent: javax.sip.message.Response getResponse()>();

        r298 = (gov.nist.javax.sip.message.SIPResponse) $r40;

        $r39 = virtualinvoke r297.<javax.sip.ResponseEvent: javax.sip.Dialog getDialog()>();

        r299 = (gov.nist.javax.sip.stack.SIPDialog) $r39;

     label40:
        $r45 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z11 = virtualinvoke $r45.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z11 == 0 goto label41;

        $r67 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r78 = virtualinvoke $r67.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r79 = new java.lang.StringBuilder;

        specialinvoke $r79.<java.lang.StringBuilder: void <init>()>();

        $r76 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Calling listener for ");

        $r77 = virtualinvoke r298.<gov.nist.javax.sip.message.SIPResponse: java.lang.String getFirstLine()>();

        $r74 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r77);

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r78.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r75);

     label41:
        if r294 == null goto label43;

        r300 = r1.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        if r300 == null goto label42;

        virtualinvoke r300.<gov.nist.javax.sip.stack.SIPTransaction: void setPassToListener()>();

     label42:
        $r68 = (javax.sip.ResponseEvent) r2;

        interfaceinvoke r294.<javax.sip.SipListener: void processResponse(javax.sip.ResponseEvent)>($r68);

     label43:
        if r299 == null goto label47;

        $r60 = virtualinvoke r299.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        if $r60 == null goto label44;

        $r71 = virtualinvoke r299.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $r66 = <javax.sip.DialogState: javax.sip.DialogState TERMINATED>;

        $z17 = virtualinvoke $r71.<javax.sip.DialogState: boolean equals(java.lang.Object)>($r66);

        if $z17 != 0 goto label47;

     label44:
        $i2 = virtualinvoke r298.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

        if $i2 == 481 goto label45;

        $i3 = virtualinvoke r298.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

        if $i3 != 408 goto label47;

     label45:
        $r61 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z16 = virtualinvoke $r61.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z16 == 0 goto label46;

        $r70 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r69 = virtualinvoke $r70.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r69.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Removing dialog on 408 or 481 response");

     label46:
        virtualinvoke r299.<gov.nist.javax.sip.stack.SIPDialog: void doDeferredDelete()>();

     label47:
        $r44 = virtualinvoke r298.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        $r43 = interfaceinvoke $r44.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        $z12 = virtualinvoke $r43.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z12 == 0 goto label49;

        if r299 == null goto label49;

        $i1 = virtualinvoke r298.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

        if $i1 != 200 goto label49;

        $r58 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z15 = virtualinvoke $r58.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z15 == 0 goto label48;

        $r55 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r56 = virtualinvoke $r55.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        $r63 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Warning! unacknowledged dialog. ");

        $r62 = virtualinvoke r299.<gov.nist.javax.sip.stack.SIPDialog: javax.sip.DialogState getState()>();

        $r65 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r62);

        $r64 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r56.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r64);

     label48:
        $r59 = virtualinvoke r298.<gov.nist.javax.sip.message.SIPResponse: javax.sip.header.CSeqHeader getCSeq()>();

        $l0 = interfaceinvoke $r59.<javax.sip.header.CSeqHeader: long getSeqNumber()>();

        virtualinvoke r299.<gov.nist.javax.sip.stack.SIPDialog: void doDeferredDeleteIfNoAckSent(long)>($l0);

     label49:
        goto label51;

     label50:
        $r219 := @caughtexception;

        r301 = $r219;

        $r226 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r225 = virtualinvoke $r226.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r225.<gov.nist.core.StackLogger: void logException(java.lang.Throwable)>(r301);

     label51:
        $r48 = r1.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        r302 = (gov.nist.javax.sip.stack.SIPClientTransaction) $r48;

        if r302 == null goto label52;

        $r53 = <javax.sip.TransactionState: javax.sip.TransactionState COMPLETED>;

        $r54 = virtualinvoke r302.<gov.nist.javax.sip.stack.SIPClientTransaction: javax.sip.TransactionState getState()>();

        if $r53 != $r54 goto label52;

        $r49 = virtualinvoke r302.<gov.nist.javax.sip.stack.SIPClientTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        if $r49 == null goto label52;

        $r50 = virtualinvoke r302.<gov.nist.javax.sip.stack.SIPClientTransaction: gov.nist.javax.sip.message.SIPRequest getOriginalRequest()>();

        $r51 = virtualinvoke $r50.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getMethod()>();

        $z13 = virtualinvoke $r51.<java.lang.String: boolean equals(java.lang.Object)>("INVITE");

        if $z13 != 0 goto label52;

        virtualinvoke r302.<gov.nist.javax.sip.stack.SIPClientTransaction: void clearState()>();

     label52:
        $r47 = r1.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        if $r47 == null goto label56;

        $r46 = r1.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $z14 = virtualinvoke $r46.<gov.nist.javax.sip.stack.SIPTransaction: boolean passToListener()>();

        if $z14 == 0 goto label56;

        $r52 = r1.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        virtualinvoke $r52.<gov.nist.javax.sip.stack.SIPTransaction: void releaseSem()>();

        goto label56;

     label53:
        $r260 := @caughtexception;

        r7 = $r260;

     label54:
        $r261 = r1.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        if $r261 == null goto label55;

        $r262 = r1.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        $z41 = virtualinvoke $r262.<gov.nist.javax.sip.stack.SIPTransaction: boolean passToListener()>();

        if $z41 == 0 goto label55;

        $r263 = r1.<gov.nist.javax.sip.EventWrapper: gov.nist.javax.sip.stack.SIPTransaction transaction>;

        virtualinvoke $r263.<gov.nist.javax.sip.stack.SIPTransaction: void releaseSem()>();

     label55:
        throw r7;

     label56:
        goto label83;

     label57:
        $z5 = r2 instanceof javax.sip.TimeoutEvent;

        if $z5 == 0 goto label61;

     label58:
        if r294 == null goto label59;

        $r41 = (javax.sip.TimeoutEvent) r2;

        interfaceinvoke r294.<javax.sip.SipListener: void processTimeout(javax.sip.TimeoutEvent)>($r41);

     label59:
        goto label83;

     label60:
        $r222 := @caughtexception;

        r303 = $r222;

        $r221 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r220 = virtualinvoke $r221.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r220.<gov.nist.core.StackLogger: void logException(java.lang.Throwable)>(r303);

        goto label83;

     label61:
        $z4 = r2 instanceof gov.nist.javax.sip.DialogTimeoutEvent;

        if $z4 == 0 goto label65;

     label62:
        if r294 == null goto label63;

        $z10 = r294 instanceof gov.nist.javax.sip.SipListenerExt;

        if $z10 == 0 goto label63;

        $r42 = (gov.nist.javax.sip.SipListenerExt) r294;

        $r36 = (gov.nist.javax.sip.DialogTimeoutEvent) r2;

        interfaceinvoke $r42.<gov.nist.javax.sip.SipListenerExt: void processDialogTimeout(gov.nist.javax.sip.DialogTimeoutEvent)>($r36);

     label63:
        goto label83;

     label64:
        $r275 := @caughtexception;

        r304 = $r275;

        $r274 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r273 = virtualinvoke $r274.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r273.<gov.nist.core.StackLogger: void logException(java.lang.Throwable)>(r304);

        goto label83;

     label65:
        $z7 = r2 instanceof javax.sip.IOExceptionEvent;

        if $z7 == 0 goto label69;

     label66:
        if r294 == null goto label67;

        $r37 = (javax.sip.IOExceptionEvent) r2;

        interfaceinvoke r294.<javax.sip.SipListener: void processIOException(javax.sip.IOExceptionEvent)>($r37);

     label67:
        goto label83;

     label68:
        $r264 := @caughtexception;

        r305 = $r264;

        $r265 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r266 = virtualinvoke $r265.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r266.<gov.nist.core.StackLogger: void logException(java.lang.Throwable)>(r305);

        goto label83;

     label69:
        $z6 = r2 instanceof javax.sip.TransactionTerminatedEvent;

        if $z6 == 0 goto label76;

     label70:
        $r17 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z9 = virtualinvoke $r17.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z9 == 0 goto label71;

        $r18 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r22 = virtualinvoke $r18.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r22.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("About to deliver transactionTerminatedEvent");

        $r23 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r20 = virtualinvoke $r23.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tx = ");

        $r27 = (javax.sip.TransactionTerminatedEvent) r2;

        $r24 = virtualinvoke $r27.<javax.sip.TransactionTerminatedEvent: javax.sip.ClientTransaction getClientTransaction()>();

        $r25 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        $r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r20.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r30);

        $r31 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r28 = virtualinvoke $r31.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tx = ");

        $r35 = (javax.sip.TransactionTerminatedEvent) r2;

        $r32 = virtualinvoke $r35.<javax.sip.TransactionTerminatedEvent: javax.sip.ServerTransaction getServerTransaction()>();

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r32);

        $r38 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r28.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r38);

     label71:
        if r294 == null goto label72;

        $r19 = (javax.sip.TransactionTerminatedEvent) r2;

        interfaceinvoke r294.<javax.sip.SipListener: void processTransactionTerminated(javax.sip.TransactionTerminatedEvent)>($r19);

     label72:
        goto label83;

     label73:
        $r267 := @caughtexception;

        $r268 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z37 = virtualinvoke $r268.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z37 == 0 goto label74;

        $r242 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r244 = virtualinvoke $r242.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r244.<gov.nist.core.StackLogger: void logWarning(java.lang.String)>("Unable to call sipListener.processTransactionTerminated");

     label74:
        goto label83;

     label75:
        $r269 := @caughtexception;

        r306 = $r269;

        $r278 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r277 = virtualinvoke $r278.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r277.<gov.nist.core.StackLogger: void logException(java.lang.Throwable)>(r306);

        goto label83;

     label76:
        $z8 = r2 instanceof javax.sip.DialogTerminatedEvent;

        if $z8 == 0 goto label82;

     label77:
        if r294 == null goto label78;

        $r15 = (javax.sip.DialogTerminatedEvent) r2;

        interfaceinvoke r294.<javax.sip.SipListener: void processDialogTerminated(javax.sip.DialogTerminatedEvent)>($r15);

     label78:
        goto label83;

     label79:
        $r224 := @caughtexception;

        $r223 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z40 = virtualinvoke $r223.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z40 == 0 goto label80;

        $r255 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r256 = virtualinvoke $r255.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r256.<gov.nist.core.StackLogger: void logWarning(java.lang.String)>("Unable to call sipListener.processDialogTerminated");

     label80:
        goto label83;

     label81:
        $r272 := @caughtexception;

        r307 = $r272;

        $r271 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r270 = virtualinvoke $r271.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r270.<gov.nist.core.StackLogger: void logException(java.lang.Throwable)>(r307);

        goto label83;

     label82:
        $r10 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r12 = virtualinvoke $r10.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad event");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r12.<gov.nist.core.StackLogger: void logFatalError(java.lang.String)>($r16);

     label83:
        return;

        catch java.lang.Exception from label21 to label25 with label26;
        catch java.lang.Throwable from label04 to label08 with label31;
        catch java.lang.Throwable from label13 to label14 with label31;
        catch java.lang.Throwable from label19 to label27 with label31;
        catch java.lang.Throwable from label31 to label32 with label31;
        catch java.lang.Exception from label40 to label49 with label50;
        catch java.lang.Throwable from label39 to label52 with label53;
        catch java.lang.Throwable from label53 to label54 with label53;
        catch java.lang.Exception from label58 to label59 with label60;
        catch java.lang.Exception from label62 to label63 with label64;
        catch java.lang.Exception from label66 to label67 with label68;
        catch java.lang.AbstractMethodError from label70 to label72 with label73;
        catch java.lang.Exception from label70 to label72 with label75;
        catch java.lang.AbstractMethodError from label77 to label78 with label79;
        catch java.lang.Exception from label77 to label78 with label81;
    }

    public void run()
    {
        gov.nist.javax.sip.EventScanner r0;
        gov.nist.core.ThreadAuditor$ThreadHandle r1;
        java.util.LinkedList r2, $r9, $r10;
        int[] r3, $r8, $r21;
        java.lang.Throwable r4, r5, $r37, $r43;
        gov.nist.javax.sip.SipStackImpl $r6, $r11, $r13, $r22, $r23, $r24, $r28, $r29, $r30, $r32, $r33, $r36, $r39, $r40, $r41;
        gov.nist.core.ThreadAuditor $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        java.lang.Object $r12;
        java.lang.StringBuilder $r14, $r16, $r17, $r18, $r20;
        gov.nist.core.StackLogger $r15, $r25, $r27, $r31, $r35, $r38, $r42;
        int $i0;
        java.lang.String $r19;
        long $l1;
        java.lang.InterruptedException $r26;
        java.lang.Exception $r34, r46;
        java.util.ListIterator r44;
        gov.nist.javax.sip.EventWrapper r45;

        r0 := @this: gov.nist.javax.sip.EventScanner;

     label01:
        $r6 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r7 = virtualinvoke $r6.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.ThreadAuditor getThreadAuditor()>();

        r1 = virtualinvoke $r7.<gov.nist.core.ThreadAuditor: gov.nist.core.ThreadAuditor$ThreadHandle addCurrentThread()>();

     label02:
        $r8 = r0.<gov.nist.javax.sip.EventScanner: int[] eventMutex>;

        r3 = $r8;

        entermonitor $r8;

     label03:
        $r9 = r0.<gov.nist.javax.sip.EventScanner: java.util.LinkedList pendingEvents>;

        $z0 = virtualinvoke $r9.<java.util.LinkedList: boolean isEmpty()>();

        if $z0 == 0 goto label13;

        $z3 = r0.<gov.nist.javax.sip.EventScanner: boolean isStopped>;

        if $z3 == 0 goto label07;

        $r22 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z4 = virtualinvoke $r22.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z4 == 0 goto label04;

        $r28 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r25 = virtualinvoke $r28.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r25.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Stopped event scanner!!");

     label04:
        exitmonitor r3;

     label05:
        $r24 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z6 = virtualinvoke $r24.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z6 == 0 goto label06;

        $z5 = r0.<gov.nist.javax.sip.EventScanner: boolean isStopped>;

        if $z5 != 0 goto label06;

        $r23 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r27 = virtualinvoke $r23.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r27.<gov.nist.core.StackLogger: void logFatalError(java.lang.String)>("Event scanner exited abnormally");

     label06:
        return;

     label07:
        virtualinvoke r1.<gov.nist.core.ThreadAuditor$ThreadHandle: void ping()>();

        $r21 = r0.<gov.nist.javax.sip.EventScanner: int[] eventMutex>;

        $l1 = virtualinvoke r1.<gov.nist.core.ThreadAuditor$ThreadHandle: long getPingIntervalInMillisecs()>();

        virtualinvoke $r21.<java.lang.Object: void wait(long)>($l1);

     label08:
        goto label03;

     label09:
        $r26 := @caughtexception;

        $r30 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z7 = virtualinvoke $r30.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z7 == 0 goto label10;

        $r36 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r35 = virtualinvoke $r36.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r35.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Interrupted!");

     label10:
        exitmonitor r3;

     label11:
        $r29 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z9 = virtualinvoke $r29.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z9 == 0 goto label12;

        $z8 = r0.<gov.nist.javax.sip.EventScanner: boolean isStopped>;

        if $z8 != 0 goto label12;

        $r32 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r31 = virtualinvoke $r32.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r31.<gov.nist.core.StackLogger: void logFatalError(java.lang.String)>("Event scanner exited abnormally");

     label12:
        return;

     label13:
        r2 = r0.<gov.nist.javax.sip.EventScanner: java.util.LinkedList pendingEvents>;

        $r10 = new java.util.LinkedList;

        specialinvoke $r10.<java.util.LinkedList: void <init>()>();

        r0.<gov.nist.javax.sip.EventScanner: java.util.LinkedList pendingEvents> = $r10;

        exitmonitor r3;

     label14:
        goto label17;

     label15:
        $r43 := @caughtexception;

        r4 = $r43;

        exitmonitor r3;

     label16:
        throw r4;

     label17:
        r44 = virtualinvoke r2.<java.util.LinkedList: java.util.ListIterator listIterator()>();

     label18:
        $z1 = interfaceinvoke r44.<java.util.ListIterator: boolean hasNext()>();

        if $z1 == 0 goto label23;

        $r12 = interfaceinvoke r44.<java.util.ListIterator: java.lang.Object next()>();

        r45 = (gov.nist.javax.sip.EventWrapper) $r12;

        $r11 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z2 = virtualinvoke $r11.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z2 == 0 goto label19;

        $r13 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r15 = virtualinvoke $r13.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Processing ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r45);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("nevents ");

        $i0 = virtualinvoke r2.<java.util.LinkedList: int size()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r15.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r19);

     label19:
        virtualinvoke r0.<gov.nist.javax.sip.EventScanner: void deliverEvent(gov.nist.javax.sip.EventWrapper)>(r45);

     label20:
        goto label18;

     label21:
        $r34 := @caughtexception;

        r46 = $r34;

        $r33 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z10 = virtualinvoke $r33.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z10 == 0 goto label22;

        $r39 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r38 = virtualinvoke $r39.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r38.<gov.nist.core.StackLogger: void logError(java.lang.String,java.lang.Exception)>("Unexpected exception caught while delivering event -- carrying on bravely", r46);

     label22:
        goto label18;

     label23:
        goto label02;

     label24:
        $r37 := @caughtexception;

        r5 = $r37;

     label25:
        $r41 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z12 = virtualinvoke $r41.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z12 == 0 goto label26;

        $z11 = r0.<gov.nist.javax.sip.EventScanner: boolean isStopped>;

        if $z11 != 0 goto label26;

        $r40 = r0.<gov.nist.javax.sip.EventScanner: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r42 = virtualinvoke $r40.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r42.<gov.nist.core.StackLogger: void logFatalError(java.lang.String)>("Event scanner exited abnormally");

     label26:
        throw r5;

        catch java.lang.InterruptedException from label07 to label08 with label09;
        catch java.lang.Throwable from label03 to label05 with label15;
        catch java.lang.Throwable from label07 to label11 with label15;
        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
        catch java.lang.Exception from label19 to label20 with label21;
        catch java.lang.Throwable from label01 to label05 with label24;
        catch java.lang.Throwable from label07 to label11 with label24;
        catch java.lang.Throwable from label13 to label25 with label24;
    }
}
