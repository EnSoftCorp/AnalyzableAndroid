public class gov.nist.javax.sip.header.RAck extends gov.nist.javax.sip.header.SIPHeader implements javax.sip.header.RAckHeader
{
    private static final long serialVersionUID;
    protected long cSeqNumber;
    protected long rSeqNumber;
    protected java.lang.String method;

    public void <init>()
    {
        gov.nist.javax.sip.header.RAck r0;

        r0 := @this: gov.nist.javax.sip.header.RAck;

        specialinvoke r0.<gov.nist.javax.sip.header.SIPHeader: void <init>(java.lang.String)>("RAck");

        return;
    }

    protected java.lang.String encodeBody()
    {
        gov.nist.javax.sip.header.RAck r0;
        java.lang.StringBuffer $r1, $r2, $r3, $r4, $r5, $r7;
        long $l0, $l1;
        java.lang.String $r6, $r8;

        r0 := @this: gov.nist.javax.sip.header.RAck;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $l0 = r0.<gov.nist.javax.sip.header.RAck: long rSeqNumber>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $l1 = r0.<gov.nist.javax.sip.header.RAck: long cSeqNumber>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>($l1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r6 = r0.<gov.nist.javax.sip.header.RAck: java.lang.String method>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;
    }

    public int getCSeqNumber()
    {
        gov.nist.javax.sip.header.RAck r0;
        long $l0;
        int $i1;

        r0 := @this: gov.nist.javax.sip.header.RAck;

        $l0 = r0.<gov.nist.javax.sip.header.RAck: long cSeqNumber>;

        $i1 = (int) $l0;

        return $i1;
    }

    public long getCSeqNumberLong()
    {
        gov.nist.javax.sip.header.RAck r0;
        long $l0;

        r0 := @this: gov.nist.javax.sip.header.RAck;

        $l0 = r0.<gov.nist.javax.sip.header.RAck: long cSeqNumber>;

        return $l0;
    }

    public java.lang.String getMethod()
    {
        gov.nist.javax.sip.header.RAck r0;
        java.lang.String $r1;

        r0 := @this: gov.nist.javax.sip.header.RAck;

        $r1 = r0.<gov.nist.javax.sip.header.RAck: java.lang.String method>;

        return $r1;
    }

    public int getRSeqNumber()
    {
        gov.nist.javax.sip.header.RAck r0;
        long $l0;
        int $i1;

        r0 := @this: gov.nist.javax.sip.header.RAck;

        $l0 = r0.<gov.nist.javax.sip.header.RAck: long rSeqNumber>;

        $i1 = (int) $l0;

        return $i1;
    }

    public void setCSeqNumber(int) throws javax.sip.InvalidArgumentException
    {
        gov.nist.javax.sip.header.RAck r0;
        int i0;
        long $l1;

        r0 := @this: gov.nist.javax.sip.header.RAck;

        i0 := @parameter0: int;

        $l1 = (long) i0;

        virtualinvoke r0.<gov.nist.javax.sip.header.RAck: void setCSequenceNumber(long)>($l1);

        return;
    }

    public void setMethod(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.header.RAck r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.header.RAck;

        r1 := @parameter0: java.lang.String;

        r0.<gov.nist.javax.sip.header.RAck: java.lang.String method> = r1;

        return;
    }

    public long getCSequenceNumber()
    {
        gov.nist.javax.sip.header.RAck r0;
        long $l0;

        r0 := @this: gov.nist.javax.sip.header.RAck;

        $l0 = r0.<gov.nist.javax.sip.header.RAck: long cSeqNumber>;

        return $l0;
    }

    public long getRSequenceNumber()
    {
        gov.nist.javax.sip.header.RAck r0;
        long $l0;

        r0 := @this: gov.nist.javax.sip.header.RAck;

        $l0 = r0.<gov.nist.javax.sip.header.RAck: long rSeqNumber>;

        return $l0;
    }

    public void setCSequenceNumber(long) throws javax.sip.InvalidArgumentException
    {
        gov.nist.javax.sip.header.RAck r0;
        long l0;
        byte $b1, $b2;
        javax.sip.InvalidArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: gov.nist.javax.sip.header.RAck;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 <= 0 goto label1;

        $b2 = l0 cmp 2147483648L;

        if $b2 <= 0 goto label2;

     label1:
        $r1 = new javax.sip.InvalidArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad CSeq # ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<javax.sip.InvalidArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label2:
        r0.<gov.nist.javax.sip.header.RAck: long cSeqNumber> = l0;

        return;
    }

    public void setRSeqNumber(int) throws javax.sip.InvalidArgumentException
    {
        gov.nist.javax.sip.header.RAck r0;
        int i0;
        long $l1;

        r0 := @this: gov.nist.javax.sip.header.RAck;

        i0 := @parameter0: int;

        $l1 = (long) i0;

        virtualinvoke r0.<gov.nist.javax.sip.header.RAck: void setRSequenceNumber(long)>($l1);

        return;
    }

    public void setRSequenceNumber(long) throws javax.sip.InvalidArgumentException
    {
        gov.nist.javax.sip.header.RAck r0;
        long l0, $l2;
        byte $b1, $b3;
        javax.sip.InvalidArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: gov.nist.javax.sip.header.RAck;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 <= 0 goto label1;

        $l2 = r0.<gov.nist.javax.sip.header.RAck: long cSeqNumber>;

        $b3 = $l2 cmp 2147483648L;

        if $b3 <= 0 goto label2;

     label1:
        $r1 = new javax.sip.InvalidArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad rSeq # ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<javax.sip.InvalidArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label2:
        r0.<gov.nist.javax.sip.header.RAck: long rSeqNumber> = l0;

        return;
    }

    public static void <clinit>()
    {
        <gov.nist.javax.sip.header.RAck: long serialVersionUID> = 743999286077404118L;

        return;
    }
}
