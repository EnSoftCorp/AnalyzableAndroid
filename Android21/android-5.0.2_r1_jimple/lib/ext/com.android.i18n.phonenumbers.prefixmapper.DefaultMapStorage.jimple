class com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage extends com.android.i18n.phonenumbers.prefixmapper.PhonePrefixMapStorageStrategy
{
    private int[] phoneNumberPrefixes;
    private java.lang.String[] descriptions;

    public void <init>()
    {
        com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage r0;

        r0 := @this: com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage;

        specialinvoke r0.<com.android.i18n.phonenumbers.prefixmapper.PhonePrefixMapStorageStrategy: void <init>()>();

        return;
    }

    public int getPrefix(int)
    {
        com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage r0;
        int i0, $i1;
        int[] $r1;

        r0 := @this: com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage: int[] phoneNumberPrefixes>;

        $i1 = $r1[i0];

        return $i1;
    }

    public java.lang.String getDescription(int)
    {
        com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage r0;
        int i0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage: java.lang.String[] descriptions>;

        $r2 = $r1[i0];

        return $r2;
    }

    public void readFromSortedMap(java.util.SortedMap)
    {
        com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage r0;
        java.util.SortedMap r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.util.Iterator r2;
        int[] $r3, $r11;
        java.lang.String[] $r4, $r7;
        java.util.Set $r5;
        boolean $z0;
        java.util.Collection $r6;
        java.lang.Integer $r9, $r13;
        java.lang.Object $r10;
        double $d0, $d1;
        java.util.TreeSet $r12;

        r0 := @this: com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage;

        r1 := @parameter0: java.util.SortedMap;

        $i2 = interfaceinvoke r1.<java.util.SortedMap: int size()>();

        r0.<com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage: int numOfEntries> = $i2;

        $i3 = r0.<com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage: int numOfEntries>;

        $r3 = newarray (int)[$i3];

        r0.<com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage: int[] phoneNumberPrefixes> = $r3;

        $i4 = r0.<com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage: int numOfEntries>;

        $r4 = newarray (java.lang.String)[$i4];

        r0.<com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage: java.lang.String[] descriptions> = $r4;

        i0 = 0;

        $r5 = interfaceinvoke r1.<java.util.SortedMap: java.util.Set keySet()>();

        r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (java.lang.Integer) $r10;

        i1 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        $r11 = r0.<com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage: int[] phoneNumberPrefixes>;

        $i5 = i0;

        i0 = i0 + 1;

        $r11[$i5] = i1;

        $r12 = r0.<com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage: java.util.TreeSet possibleLengths>;

        $d0 = (double) i1;

        $d1 = staticinvoke <java.lang.Math: double log10(double)>($d0);

        $i7 = (int) $d1;

        $i6 = $i7 + 1;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        virtualinvoke $r12.<java.util.TreeSet: boolean add(java.lang.Object)>($r13);

        goto label1;

     label2:
        $r6 = interfaceinvoke r1.<java.util.SortedMap: java.util.Collection values()>();

        $r7 = r0.<com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage: java.lang.String[] descriptions>;

        interfaceinvoke $r6.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r7);

        return;
    }

    public void readExternal(java.io.ObjectInput) throws java.io.IOException
    {
        com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage r0;
        java.io.ObjectInput r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12;
        int[] $r2, $r3, $r9, $r13;
        java.lang.String[] $r4, $r5, $r11, $r12;
        java.util.TreeSet $r6, $r7;
        java.lang.Integer $r8;
        java.lang.String $r10;

        r0 := @this: com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage;

        r1 := @parameter0: java.io.ObjectInput;

        $i2 = interfaceinvoke r1.<java.io.ObjectInput: int readInt()>();

        r0.<com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage: int numOfEntries> = $i2;

        $r2 = r0.<com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage: int[] phoneNumberPrefixes>;

        if $r2 == null goto label1;

        $r13 = r0.<com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage: int[] phoneNumberPrefixes>;

        $i10 = lengthof $r13;

        $i11 = r0.<com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage: int numOfEntries>;

        if $i10 >= $i11 goto label2;

     label1:
        $i3 = r0.<com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage: int numOfEntries>;

        $r3 = newarray (int)[$i3];

        r0.<com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage: int[] phoneNumberPrefixes> = $r3;

     label2:
        $r4 = r0.<com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage: java.lang.String[] descriptions>;

        if $r4 == null goto label3;

        $r12 = r0.<com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage: java.lang.String[] descriptions>;

        $i9 = lengthof $r12;

        $i8 = r0.<com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage: int numOfEntries>;

        if $i9 >= $i8 goto label4;

     label3:
        $i4 = r0.<com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage: int numOfEntries>;

        $r5 = newarray (java.lang.String)[$i4];

        r0.<com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage: java.lang.String[] descriptions> = $r5;

     label4:
        i0 = 0;

     label5:
        $i5 = r0.<com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage: int numOfEntries>;

        if i0 >= $i5 goto label6;

        $r9 = r0.<com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage: int[] phoneNumberPrefixes>;

        $i7 = interfaceinvoke r1.<java.io.ObjectInput: int readInt()>();

        $r9[i0] = $i7;

        $r11 = r0.<com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage: java.lang.String[] descriptions>;

        $r10 = interfaceinvoke r1.<java.io.ObjectInput: java.lang.String readUTF()>();

        $r11[i0] = $r10;

        i0 = i0 + 1;

        goto label5;

     label6:
        i12 = interfaceinvoke r1.<java.io.ObjectInput: int readInt()>();

        $r6 = r0.<com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage: java.util.TreeSet possibleLengths>;

        virtualinvoke $r6.<java.util.TreeSet: void clear()>();

        i1 = 0;

     label7:
        if i1 >= i12 goto label8;

        $r7 = r0.<com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage: java.util.TreeSet possibleLengths>;

        $i6 = interfaceinvoke r1.<java.io.ObjectInput: int readInt()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        virtualinvoke $r7.<java.util.TreeSet: boolean add(java.lang.Object)>($r8);

        i1 = i1 + 1;

        goto label7;

     label8:
        return;
    }

    public void writeExternal(java.io.ObjectOutput) throws java.io.IOException
    {
        com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage r0;
        java.io.ObjectOutput r1;
        int i0, $i1, $i2, $i3, $i4, i5;
        java.util.Iterator r2;
        java.lang.Integer r3;
        java.util.TreeSet $r4, $r5;
        boolean $z0;
        java.lang.Object $r6;
        int[] $r7;
        java.lang.String $r8;
        java.lang.String[] $r9;

        r0 := @this: com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage;

        r1 := @parameter0: java.io.ObjectOutput;

        $i1 = r0.<com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage: int numOfEntries>;

        interfaceinvoke r1.<java.io.ObjectOutput: void writeInt(int)>($i1);

        i0 = 0;

     label1:
        $i2 = r0.<com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage: int numOfEntries>;

        if i0 >= $i2 goto label2;

        $r7 = r0.<com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage: int[] phoneNumberPrefixes>;

        $i4 = $r7[i0];

        interfaceinvoke r1.<java.io.ObjectOutput: void writeInt(int)>($i4);

        $r9 = r0.<com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage: java.lang.String[] descriptions>;

        $r8 = $r9[i0];

        interfaceinvoke r1.<java.io.ObjectOutput: void writeUTF(java.lang.String)>($r8);

        i0 = i0 + 1;

        goto label1;

     label2:
        $r4 = r0.<com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage: java.util.TreeSet possibleLengths>;

        i5 = virtualinvoke $r4.<java.util.TreeSet: int size()>();

        interfaceinvoke r1.<java.io.ObjectOutput: void writeInt(int)>(i5);

        $r5 = r0.<com.android.i18n.phonenumbers.prefixmapper.DefaultMapStorage: java.util.TreeSet possibleLengths>;

        r2 = virtualinvoke $r5.<java.util.TreeSet: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.Integer) $r6;

        $i3 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        interfaceinvoke r1.<java.io.ObjectOutput: void writeInt(int)>($i3);

        goto label3;

     label4:
        return;
    }
}
