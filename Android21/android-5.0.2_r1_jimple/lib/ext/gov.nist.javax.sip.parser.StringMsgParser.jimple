public class gov.nist.javax.sip.parser.StringMsgParser extends java.lang.Object
{
    protected boolean readBody;
    private gov.nist.javax.sip.parser.ParseExceptionListener parseExceptionListener;
    private java.lang.String rawStringMessage;
    private boolean strict;
    private static boolean computeContentLengthFromMessage;

    public void <init>()
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<gov.nist.javax.sip.parser.StringMsgParser: boolean readBody> = 1;

        return;
    }

    public void <init>(gov.nist.javax.sip.parser.ParseExceptionListener)
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        gov.nist.javax.sip.parser.ParseExceptionListener r1;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.ParseExceptionListener;

        specialinvoke r0.<gov.nist.javax.sip.parser.StringMsgParser: void <init>()>();

        r0.<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.javax.sip.parser.ParseExceptionListener parseExceptionListener> = r1;

        return;
    }

    public void setParseExceptionListener(gov.nist.javax.sip.parser.ParseExceptionListener)
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        gov.nist.javax.sip.parser.ParseExceptionListener r1;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.ParseExceptionListener;

        r0.<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.javax.sip.parser.ParseExceptionListener parseExceptionListener> = r1;

        return;
    }

    public gov.nist.javax.sip.message.SIPMessage parseSIPMessage(byte[]) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        byte[] r1, r20;
        int i0, i1, $i2, $i5, $i6, $i8, $i9, $i10, $i11, $i12, $i13, i16, i18;
        java.lang.String r2, $r4, $r6, r18, r19;
        boolean z0, $z1, $z2;
        gov.nist.javax.sip.message.SIPMessage r3;
        byte $b3, $b4, $b7, $b14, $b15;
        java.lang.StringBuilder $r5, $r7, $r8;
        javax.sip.header.ContentLengthHeader $r9, $r10, $r11;
        java.text.ParseException $r12, $r13, $r15;
        java.io.UnsupportedEncodingException $r14;
        java.lang.ArrayIndexOutOfBoundsException $r16, $r17;
        char c17;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r1 := @parameter0: byte[];

        if r1 == null goto label01;

        $i2 = lengthof r1;

        if $i2 != 0 goto label02;

     label01:
        return null;

     label02:
        i0 = 0;

     label03:
        $b3 = r1[i0];

        if $b3 >= 32 goto label04;

        i0 = i0 + 1;

        goto label03;

     label04:
        goto label06;

     label05:
        $r17 := @caughtexception;

        return null;

     label06:
        r2 = null;

        z0 = 1;

        r3 = null;

     label07:
        i1 = i0;

     label08:
        $b4 = r1[i0];

        if $b4 == 13 goto label09;

        $b14 = r1[i0];

        if $b14 == 10 goto label09;

        i0 = i0 + 1;

        goto label08;

     label09:
        goto label11;

     label10:
        $r16 := @caughtexception;

        goto label24;

     label11:
        i16 = i0 - i1;

     label12:
        $r4 = new java.lang.String;

        specialinvoke $r4.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(r1, i1, i16, "UTF-8");

        r18 = $r4;

     label13:
        goto label15;

     label14:
        $r14 := @caughtexception;

        $r15 = new java.text.ParseException;

        specialinvoke $r15.<java.text.ParseException: void <init>(java.lang.String,int)>("Bad message encoding!", 0);

        throw $r15;

     label15:
        r19 = specialinvoke r0.<gov.nist.javax.sip.parser.StringMsgParser: java.lang.String trimEndOfLine(java.lang.String)>(r18);

        $i5 = virtualinvoke r19.<java.lang.String: int length()>();

        if $i5 != 0 goto label16;

        if r2 == null goto label22;

        if r3 == null goto label22;

        specialinvoke r0.<gov.nist.javax.sip.parser.StringMsgParser: void processHeader(java.lang.String,gov.nist.javax.sip.message.SIPMessage)>(r2, r3);

        goto label22;

     label16:
        if z0 == 0 goto label17;

        r3 = specialinvoke r0.<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.javax.sip.message.SIPMessage processFirstLine(java.lang.String)>(r19);

        goto label22;

     label17:
        c17 = virtualinvoke r19.<java.lang.String: char charAt(int)>(0);

        if c17 == 9 goto label18;

        if c17 != 32 goto label20;

     label18:
        if r2 != null goto label19;

        $r13 = new java.text.ParseException;

        specialinvoke $r13.<java.text.ParseException: void <init>(java.lang.String,int)>("Bad header continuation.", 0);

        throw $r13;

     label19:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r6 = virtualinvoke r19.<java.lang.String: java.lang.String substring(int)>(1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label22;

     label20:
        if r2 == null goto label21;

        if r3 == null goto label21;

        specialinvoke r0.<gov.nist.javax.sip.parser.StringMsgParser: void processHeader(java.lang.String,gov.nist.javax.sip.message.SIPMessage)>(r2, r3);

     label21:
        r2 = r19;

     label22:
        $b7 = r1[i0];

        if $b7 != 13 goto label23;

        $i11 = lengthof r1;

        $i13 = i0 + 1;

        if $i11 <= $i13 goto label23;

        $i12 = i0 + 1;

        $b15 = r1[$i12];

        if $b15 != 10 goto label23;

        i0 = i0 + 1;

     label23:
        i0 = i0 + 1;

        z0 = 0;

        $i6 = virtualinvoke r19.<java.lang.String: int length()>();

        if $i6 > 0 goto label07;

     label24:
        if r3 != null goto label25;

        $r12 = new java.text.ParseException;

        specialinvoke $r12.<java.text.ParseException: void <init>(java.lang.String,int)>("Bad message", 0);

        throw $r12;

     label25:
        virtualinvoke r3.<gov.nist.javax.sip.message.SIPMessage: void setSize(int)>(i0);

        $z1 = r0.<gov.nist.javax.sip.parser.StringMsgParser: boolean readBody>;

        if $z1 == 0 goto label26;

        $r9 = virtualinvoke r3.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ContentLengthHeader getContentLength()>();

        if $r9 == null goto label26;

        $r10 = virtualinvoke r3.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ContentLengthHeader getContentLength()>();

        $i8 = interfaceinvoke $r10.<javax.sip.header.ContentLengthHeader: int getContentLength()>();

        if $i8 == 0 goto label26;

        $i9 = lengthof r1;

        i18 = $i9 - i0;

        r20 = newarray (byte)[i18];

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r1, i0, r20, 0, i18);

        $z2 = <gov.nist.javax.sip.parser.StringMsgParser: boolean computeContentLengthFromMessage>;

        $r11 = virtualinvoke r3.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ContentLengthHeader getContentLength()>();

        $i10 = interfaceinvoke $r11.<javax.sip.header.ContentLengthHeader: int getContentLength()>();

        virtualinvoke r3.<gov.nist.javax.sip.message.SIPMessage: void setMessageContent(byte[],boolean,int)>(r20, $z2, $i10);

     label26:
        return r3;

        catch java.lang.ArrayIndexOutOfBoundsException from label03 to label04 with label05;
        catch java.lang.ArrayIndexOutOfBoundsException from label08 to label09 with label10;
        catch java.io.UnsupportedEncodingException from label12 to label13 with label14;
    }

    public gov.nist.javax.sip.message.SIPMessage parseSIPMessage(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        java.lang.String r1, r2, $r7, r18, r19, r20;
        int i0, i1, $i3, $i5, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        gov.nist.javax.sip.message.SIPMessage r3;
        char c2, $c4, $c6, $c14, c15;
        java.lang.StringBuilder $r4, $r5, $r6;
        javax.sip.header.ContentLengthHeader $r8, $r9, $r10, $r12;
        java.text.ParseException $r11, $r13;
        java.lang.ArrayIndexOutOfBoundsException $r14, $r15;
        java.lang.StringIndexOutOfBoundsException $r16, $r17;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label01;

        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i3 != 0 goto label02;

     label01:
        return null;

     label02:
        r0.<gov.nist.javax.sip.parser.StringMsgParser: java.lang.String rawStringMessage> = r1;

        i0 = 0;

     label03:
        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);

        if $c4 >= 32 goto label04;

        i0 = i0 + 1;

        goto label03;

     label04:
        goto label07;

     label05:
        $r15 := @caughtexception;

        return null;

     label06:
        $r16 := @caughtexception;

        return null;

     label07:
        r2 = null;

        z0 = 1;

        r3 = null;

     label08:
        i1 = i0;

     label09:
        c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);

     label10:
        if c2 == 13 goto label11;

        if c2 == 10 goto label11;

        i0 = i0 + 1;

        c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);

        goto label10;

     label11:
        goto label14;

     label12:
        $r14 := @caughtexception;

        goto label23;

     label13:
        $r17 := @caughtexception;

        goto label23;

     label14:
        r18 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i1, i0);

        r19 = specialinvoke r0.<gov.nist.javax.sip.parser.StringMsgParser: java.lang.String trimEndOfLine(java.lang.String)>(r18);

        $i5 = virtualinvoke r19.<java.lang.String: int length()>();

        if $i5 != 0 goto label15;

        if r2 == null goto label21;

        specialinvoke r0.<gov.nist.javax.sip.parser.StringMsgParser: void processHeader(java.lang.String,gov.nist.javax.sip.message.SIPMessage)>(r2, r3);

        goto label21;

     label15:
        if z0 == 0 goto label16;

        r3 = specialinvoke r0.<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.javax.sip.message.SIPMessage processFirstLine(java.lang.String)>(r19);

        goto label21;

     label16:
        c15 = virtualinvoke r19.<java.lang.String: char charAt(int)>(0);

        if c15 == 9 goto label17;

        if c15 != 32 goto label19;

     label17:
        if r2 != null goto label18;

        $r13 = new java.text.ParseException;

        specialinvoke $r13.<java.text.ParseException: void <init>(java.lang.String,int)>("Bad header continuation.", 0);

        throw $r13;

     label18:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r7 = virtualinvoke r19.<java.lang.String: java.lang.String substring(int)>(1);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label21;

     label19:
        if r2 == null goto label20;

        specialinvoke r0.<gov.nist.javax.sip.parser.StringMsgParser: void processHeader(java.lang.String,gov.nist.javax.sip.message.SIPMessage)>(r2, r3);

     label20:
        r2 = r19;

     label21:
        $c6 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);

        if $c6 != 13 goto label22;

        $i10 = virtualinvoke r1.<java.lang.String: int length()>();

        $i11 = i0 + 1;

        if $i10 <= $i11 goto label22;

        $i13 = i0 + 1;

        $c14 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i13);

        if $c14 != 10 goto label22;

        i0 = i0 + 1;

     label22:
        i0 = i0 + 1;

        z0 = 0;

        $i7 = virtualinvoke r19.<java.lang.String: int length()>();

        if $i7 > 0 goto label08;

     label23:
        virtualinvoke r3.<gov.nist.javax.sip.message.SIPMessage: void setSize(int)>(i0);

        $z1 = r0.<gov.nist.javax.sip.parser.StringMsgParser: boolean readBody>;

        if $z1 == 0 goto label25;

        $r9 = virtualinvoke r3.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ContentLengthHeader getContentLength()>();

        if $r9 == null goto label25;

        $r8 = virtualinvoke r3.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ContentLengthHeader getContentLength()>();

        $i8 = interfaceinvoke $r8.<javax.sip.header.ContentLengthHeader: int getContentLength()>();

        if $i8 == 0 goto label24;

        r20 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(i0);

        $z5 = r0.<gov.nist.javax.sip.parser.StringMsgParser: boolean strict>;

        $z6 = <gov.nist.javax.sip.parser.StringMsgParser: boolean computeContentLengthFromMessage>;

        $r12 = virtualinvoke r3.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ContentLengthHeader getContentLength()>();

        $i12 = interfaceinvoke $r12.<javax.sip.header.ContentLengthHeader: int getContentLength()>();

        virtualinvoke r3.<gov.nist.javax.sip.message.SIPMessage: void setMessageContent(java.lang.String,boolean,boolean,int)>(r20, $z5, $z6, $i12);

        goto label25;

     label24:
        $z2 = <gov.nist.javax.sip.parser.StringMsgParser: boolean computeContentLengthFromMessage>;

        if $z2 != 0 goto label25;

        $r10 = virtualinvoke r3.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ContentLengthHeader getContentLength()>();

        $i9 = interfaceinvoke $r10.<javax.sip.header.ContentLengthHeader: int getContentLength()>();

        if $i9 != 0 goto label25;

        $z4 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>("\r\n\r\n");

        if $z4 != 0 goto label25;

        $z3 = r0.<gov.nist.javax.sip.parser.StringMsgParser: boolean strict>;

        if $z3 == 0 goto label25;

        $r11 = new java.text.ParseException;

        specialinvoke $r11.<java.text.ParseException: void <init>(java.lang.String,int)>("Extraneous characters at the end of the message ", i0);

        throw $r11;

     label25:
        return r3;

        catch java.lang.ArrayIndexOutOfBoundsException from label03 to label04 with label05;
        catch java.lang.StringIndexOutOfBoundsException from label03 to label04 with label06;
        catch java.lang.ArrayIndexOutOfBoundsException from label09 to label11 with label12;
        catch java.lang.StringIndexOutOfBoundsException from label09 to label11 with label13;
    }

    private java.lang.String trimEndOfLine(java.lang.String)
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        java.lang.String r1, $r2;
        int i0, $i1, $i2, $i3, $i4;
        char $c5;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        return r1;

     label1:
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        i0 = $i1 - 1;

     label2:
        if i0 < 0 goto label3;

        $c5 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);

        if $c5 > 32 goto label3;

        i0 = i0 + -1;

        goto label2;

     label3:
        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        $i3 = $i2 - 1;

        if i0 != $i3 goto label4;

        return r1;

     label4:
        if i0 != -1 goto label5;

        return "";

     label5:
        $i4 = i0 + 1;

        $r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i4);

        return $r2;
    }

    private gov.nist.javax.sip.message.SIPMessage processFirstLine(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        java.lang.String r1, $r9, $r16, $r19, $r23;
        gov.nist.javax.sip.message.SIPMessage r2;
        gov.nist.javax.sip.header.RequestLine r3;
        boolean $z0;
        gov.nist.javax.sip.message.SIPResponse $r4, $r10;
        gov.nist.javax.sip.parser.StatusLineParser $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r13, $r14, $r15;
        gov.nist.javax.sip.message.SIPRequest $r11, $r18;
        gov.nist.javax.sip.parser.RequestLineParser $r12;
        java.text.ParseException $r17, $r21, r26, r28;
        gov.nist.javax.sip.parser.ParseExceptionListener $r20, $r22, $r24, $r25;
        gov.nist.javax.sip.header.StatusLine r27;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r1.<java.lang.String: boolean startsWith(java.lang.String)>("SIP/2.0");

        if $z0 != 0 goto label06;

        $r11 = new gov.nist.javax.sip.message.SIPRequest;

        specialinvoke $r11.<gov.nist.javax.sip.message.SIPRequest: void <init>()>();

        r2 = $r11;

     label01:
        $r12 = new gov.nist.javax.sip.parser.RequestLineParser;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<gov.nist.javax.sip.parser.RequestLineParser: void <init>(java.lang.String)>($r16);

        r3 = virtualinvoke $r12.<gov.nist.javax.sip.parser.RequestLineParser: gov.nist.javax.sip.header.RequestLine parse()>();

        $r18 = (gov.nist.javax.sip.message.SIPRequest) r2;

        virtualinvoke $r18.<gov.nist.javax.sip.message.SIPRequest: void setRequestLine(gov.nist.javax.sip.header.RequestLine)>(r3);

     label02:
        goto label11;

     label03:
        $r17 := @caughtexception;

        r26 = $r17;

        $r20 = r0.<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.javax.sip.parser.ParseExceptionListener parseExceptionListener>;

        if $r20 == null goto label04;

        $r22 = r0.<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.javax.sip.parser.ParseExceptionListener parseExceptionListener>;

        $r19 = r0.<gov.nist.javax.sip.parser.StringMsgParser: java.lang.String rawStringMessage>;

        interfaceinvoke $r22.<gov.nist.javax.sip.parser.ParseExceptionListener: void handleException(java.text.ParseException,gov.nist.javax.sip.message.SIPMessage,java.lang.Class,java.lang.String,java.lang.String)>(r26, r2, class "gov/nist/javax/sip/header/RequestLine", r1, $r19);

        goto label05;

     label04:
        throw r26;

     label05:
        goto label11;

     label06:
        $r4 = new gov.nist.javax.sip.message.SIPResponse;

        specialinvoke $r4.<gov.nist.javax.sip.message.SIPResponse: void <init>()>();

        r2 = $r4;

     label07:
        $r5 = new gov.nist.javax.sip.parser.StatusLineParser;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<gov.nist.javax.sip.parser.StatusLineParser: void <init>(java.lang.String)>($r9);

        r27 = virtualinvoke $r5.<gov.nist.javax.sip.parser.StatusLineParser: gov.nist.javax.sip.header.StatusLine parse()>();

        $r10 = (gov.nist.javax.sip.message.SIPResponse) r2;

        virtualinvoke $r10.<gov.nist.javax.sip.message.SIPResponse: void setStatusLine(gov.nist.javax.sip.header.StatusLine)>(r27);

     label08:
        goto label11;

     label09:
        $r21 := @caughtexception;

        r28 = $r21;

        $r24 = r0.<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.javax.sip.parser.ParseExceptionListener parseExceptionListener>;

        if $r24 == null goto label10;

        $r25 = r0.<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.javax.sip.parser.ParseExceptionListener parseExceptionListener>;

        $r23 = r0.<gov.nist.javax.sip.parser.StringMsgParser: java.lang.String rawStringMessage>;

        interfaceinvoke $r25.<gov.nist.javax.sip.parser.ParseExceptionListener: void handleException(java.text.ParseException,gov.nist.javax.sip.message.SIPMessage,java.lang.Class,java.lang.String,java.lang.String)>(r28, r2, class "gov/nist/javax/sip/header/StatusLine", r1, $r23);

        goto label11;

     label10:
        throw r28;

     label11:
        return r2;

        catch java.text.ParseException from label01 to label02 with label03;
        catch java.text.ParseException from label07 to label08 with label09;
    }

    private void processHeader(java.lang.String, gov.nist.javax.sip.message.SIPMessage) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        java.lang.String r1, r4, $r9, $r11, $r15;
        gov.nist.javax.sip.message.SIPMessage r2;
        java.text.ParseException r3, $r10, $r12, r19;
        java.lang.Class r5;
        int $i0;
        java.lang.StringBuilder $r6, $r7, $r8;
        gov.nist.javax.sip.parser.ParseExceptionListener $r13, $r14, $r16;
        gov.nist.javax.sip.parser.HeaderParser r17;
        gov.nist.javax.sip.header.SIPHeader r18;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: gov.nist.javax.sip.message.SIPMessage;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        return;

     label2:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        r17 = staticinvoke <gov.nist.javax.sip.parser.ParserFactory: gov.nist.javax.sip.parser.HeaderParser createParser(java.lang.String)>($r9);

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;

        r3 = $r10;

        $r13 = r0.<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.javax.sip.parser.ParseExceptionListener parseExceptionListener>;

        $r11 = r0.<gov.nist.javax.sip.parser.StringMsgParser: java.lang.String rawStringMessage>;

        interfaceinvoke $r13.<gov.nist.javax.sip.parser.ParseExceptionListener: void handleException(java.text.ParseException,gov.nist.javax.sip.message.SIPMessage,java.lang.Class,java.lang.String,java.lang.String)>(r3, r2, null, r1, $r11);

        return;

     label5:
        r18 = virtualinvoke r17.<gov.nist.javax.sip.parser.HeaderParser: gov.nist.javax.sip.header.SIPHeader parse()>();

        virtualinvoke r2.<gov.nist.javax.sip.message.SIPMessage: void attachHeader(gov.nist.javax.sip.header.SIPHeader,boolean)>(r18, 0);

     label6:
        goto label9;

     label7:
        $r12 := @caughtexception;

        r19 = $r12;

        $r14 = r0.<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.javax.sip.parser.ParseExceptionListener parseExceptionListener>;

        if $r14 == null goto label9;

        r4 = staticinvoke <gov.nist.javax.sip.parser.Lexer: java.lang.String getHeaderName(java.lang.String)>(r1);

        r5 = staticinvoke <gov.nist.javax.sip.header.NameMap: java.lang.Class getClassFromName(java.lang.String)>(r4);

        if r5 != null goto label8;

        r5 = class "gov/nist/javax/sip/header/ExtensionHeaderImpl";

     label8:
        $r16 = r0.<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.javax.sip.parser.ParseExceptionListener parseExceptionListener>;

        $r15 = r0.<gov.nist.javax.sip.parser.StringMsgParser: java.lang.String rawStringMessage>;

        interfaceinvoke $r16.<gov.nist.javax.sip.parser.ParseExceptionListener: void handleException(java.text.ParseException,gov.nist.javax.sip.message.SIPMessage,java.lang.Class,java.lang.String,java.lang.String)>(r19, r2, r5, r1, $r15);

     label9:
        return;

        catch java.text.ParseException from label2 to label3 with label4;
        catch java.text.ParseException from label5 to label6 with label7;
    }

    public gov.nist.javax.sip.address.AddressImpl parseAddress(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        java.lang.String r1;
        gov.nist.javax.sip.parser.AddressParser r2, $r3;
        gov.nist.javax.sip.address.AddressImpl $r4;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r1 := @parameter0: java.lang.String;

        $r3 = new gov.nist.javax.sip.parser.AddressParser;

        specialinvoke $r3.<gov.nist.javax.sip.parser.AddressParser: void <init>(java.lang.String)>(r1);

        r2 = $r3;

        $r4 = virtualinvoke r2.<gov.nist.javax.sip.parser.AddressParser: gov.nist.javax.sip.address.AddressImpl address(boolean)>(1);

        return $r4;
    }

    public gov.nist.core.Host parseHost(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        java.lang.String r1;
        gov.nist.javax.sip.parser.Lexer r2, $r3;
        gov.nist.core.HostNameParser $r4;
        gov.nist.core.Host $r5;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r1 := @parameter0: java.lang.String;

        $r3 = new gov.nist.javax.sip.parser.Lexer;

        specialinvoke $r3.<gov.nist.javax.sip.parser.Lexer: void <init>(java.lang.String,java.lang.String)>("charLexer", r1);

        r2 = $r3;

        $r4 = new gov.nist.core.HostNameParser;

        specialinvoke $r4.<gov.nist.core.HostNameParser: void <init>(gov.nist.core.LexerCore)>(r2);

        $r5 = virtualinvoke $r4.<gov.nist.core.HostNameParser: gov.nist.core.Host host()>();

        return $r5;
    }

    public gov.nist.javax.sip.address.TelephoneNumber parseTelephoneNumber(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        java.lang.String r1;
        gov.nist.javax.sip.parser.URLParser $r2;
        gov.nist.javax.sip.address.TelephoneNumber $r3;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r1 := @parameter0: java.lang.String;

        $r2 = new gov.nist.javax.sip.parser.URLParser;

        specialinvoke $r2.<gov.nist.javax.sip.parser.URLParser: void <init>(java.lang.String)>(r1);

        $r3 = virtualinvoke $r2.<gov.nist.javax.sip.parser.URLParser: gov.nist.javax.sip.address.TelephoneNumber parseTelephoneNumber(boolean)>(1);

        return $r3;
    }

    public gov.nist.javax.sip.address.SipUri parseSIPUrl(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        java.lang.String r1, $r10;
        gov.nist.javax.sip.parser.URLParser $r3;
        gov.nist.javax.sip.address.SipUri $r4;
        java.lang.ClassCastException $r5;
        java.text.ParseException $r6;
        java.lang.StringBuilder $r7, $r8, $r9;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = new gov.nist.javax.sip.parser.URLParser;

        specialinvoke $r3.<gov.nist.javax.sip.parser.URLParser: void <init>(java.lang.String)>(r1);

        $r4 = virtualinvoke $r3.<gov.nist.javax.sip.parser.URLParser: gov.nist.javax.sip.address.SipUri sipURL(boolean)>(1);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.text.ParseException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Not a SIP URL ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.text.ParseException: void <init>(java.lang.String,int)>($r10, 0);

        throw $r6;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    public gov.nist.javax.sip.address.GenericURI parseUrl(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        java.lang.String r1;
        gov.nist.javax.sip.parser.URLParser $r2;
        gov.nist.javax.sip.address.GenericURI $r3;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r1 := @parameter0: java.lang.String;

        $r2 = new gov.nist.javax.sip.parser.URLParser;

        specialinvoke $r2.<gov.nist.javax.sip.parser.URLParser: void <init>(java.lang.String)>(r1);

        $r3 = virtualinvoke $r2.<gov.nist.javax.sip.parser.URLParser: gov.nist.javax.sip.address.GenericURI parse()>();

        return $r3;
    }

    public gov.nist.javax.sip.header.SIPHeader parseSIPHeader(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        java.lang.String r1, $r4, $r6, $r11;
        int i0, i1, i2, i3, $i5, $i8;
        boolean z0;
        char c4, $c6, $c7;
        java.lang.StringBuffer $r3, r15;
        gov.nist.javax.sip.header.SIPHeader $r8;
        java.text.ParseException $r9, $r14;
        java.lang.ArrayIndexOutOfBoundsException $r12;
        gov.nist.javax.sip.parser.HeaderParser r16;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r1 := @parameter0: java.lang.String;

        i0 = 0;

        $i5 = virtualinvoke r1.<java.lang.String: int length()>();

        i1 = $i5 - 1;

     label01:
        $c6 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i0);

        if $c6 > 32 goto label02;

        i0 = i0 + 1;

        goto label01;

     label02:
        $c7 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i1);

        if $c7 > 32 goto label03;

        i1 = i1 + -1;

        goto label02;

     label03:
        goto label05;

     label04:
        $r12 := @caughtexception;

        $r14 = new java.text.ParseException;

        specialinvoke $r14.<java.text.ParseException: void <init>(java.lang.String,int)>("Empty header.", 0);

        throw $r14;

     label05:
        $r3 = new java.lang.StringBuffer;

        $i8 = i1 + 1;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>(int)>($i8);

        r15 = $r3;

        i2 = i0;

        i3 = i0;

        z0 = 0;

     label06:
        if i2 > i1 goto label12;

        c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i2);

        if c4 == 13 goto label07;

        if c4 != 10 goto label08;

     label07:
        if z0 != 0 goto label11;

        $r11 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i3, i2);

        virtualinvoke r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        z0 = 1;

        goto label11;

     label08:
        if z0 == 0 goto label11;

        z0 = 0;

        if c4 == 32 goto label09;

        if c4 != 9 goto label10;

     label09:
        virtualinvoke r15.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        i3 = i2 + 1;

        goto label11;

     label10:
        i3 = i2;

     label11:
        i2 = i2 + 1;

        goto label06;

     label12:
        $r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(i3, i2);

        virtualinvoke r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        virtualinvoke r15.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        $r6 = virtualinvoke r15.<java.lang.StringBuffer: java.lang.String toString()>();

        r16 = staticinvoke <gov.nist.javax.sip.parser.ParserFactory: gov.nist.javax.sip.parser.HeaderParser createParser(java.lang.String)>($r6);

        if r16 != null goto label13;

        $r9 = new java.text.ParseException;

        specialinvoke $r9.<java.text.ParseException: void <init>(java.lang.String,int)>("could not create parser", 0);

        throw $r9;

     label13:
        $r8 = virtualinvoke r16.<gov.nist.javax.sip.parser.HeaderParser: gov.nist.javax.sip.header.SIPHeader parse()>();

        return $r8;

        catch java.lang.ArrayIndexOutOfBoundsException from label01 to label03 with label04;
    }

    public gov.nist.javax.sip.header.RequestLine parseSIPRequestLine(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        java.lang.String r1, r7;
        java.lang.StringBuilder $r2, $r3, $r4;
        gov.nist.javax.sip.parser.RequestLineParser $r5;
        gov.nist.javax.sip.header.RequestLine $r6;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = new gov.nist.javax.sip.parser.RequestLineParser;

        specialinvoke $r5.<gov.nist.javax.sip.parser.RequestLineParser: void <init>(java.lang.String)>(r7);

        $r6 = virtualinvoke $r5.<gov.nist.javax.sip.parser.RequestLineParser: gov.nist.javax.sip.header.RequestLine parse()>();

        return $r6;
    }

    public gov.nist.javax.sip.header.StatusLine parseSIPStatusLine(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        java.lang.String r1, r7;
        java.lang.StringBuilder $r2, $r3, $r4;
        gov.nist.javax.sip.parser.StatusLineParser $r5;
        gov.nist.javax.sip.header.StatusLine $r6;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = new gov.nist.javax.sip.parser.StatusLineParser;

        specialinvoke $r5.<gov.nist.javax.sip.parser.StatusLineParser: void <init>(java.lang.String)>(r7);

        $r6 = virtualinvoke $r5.<gov.nist.javax.sip.parser.StatusLineParser: gov.nist.javax.sip.header.StatusLine parse()>();

        return $r6;
    }

    public static void setComputeContentLengthFromMessage(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <gov.nist.javax.sip.parser.StringMsgParser: boolean computeContentLengthFromMessage> = z0;

        return;
    }

    public static void main(java.lang.String[]) throws java.text.ParseException
    {
        java.lang.String[] r0, r1, $r2;
        int i0;
        java.lang.Thread $r3;
        gov.nist.javax.sip.parser.StringMsgParser$1ParserThread $r4;

        r0 := @parameter0: java.lang.String[];

        $r2 = newarray (java.lang.String)[3];

        $r2[0] = "SIP/2.0 200 OK\r\nTo: \"The Little Blister\" <sip:LittleGuy@there.com>;tag=469bc066\r\nFrom: \"The Master Blaster\" <sip:BigGuy@here.com>;tag=11\r\nVia: SIP/2.0/UDP 139.10.134.246:5060;branch=z9hG4bK8b0a86f6_1030c7d18e0_17;received=139.10.134.246\r\nCall-ID: 1030c7d18ae_a97b0b_b@8b0a86f6\r\nCSeq: 1 SUBSCRIBE\r\nContact: <sip:172.16.11.162:5070>\r\nContent-Length: 0\r\n\r\n";

        $r2[1] = "SIP/2.0 180 Ringing\r\nVia: SIP/2.0/UDP 172.18.1.29:5060;branch=z9hG4bK43fc10fb4446d55fc5c8f969607991f4\r\nTo: \"0440\" <sip:0440@212.209.220.131>;tag=2600\r\nFrom: \"Andreas\" <sip:andreas@e-horizon.se>;tag=8524\r\nCall-ID: f51a1851c5f570606140f14c8eb64fd3@172.18.1.29\r\nCSeq: 1 INVITE\r\nMax-Forwards: 70\r\nRecord-Route: <sip:212.209.220.131:5060>\r\nContent-Length: 0\r\n\r\n";

        $r2[2] = "REGISTER sip:nist.gov SIP/2.0\r\nVia: SIP/2.0/UDP 129.6.55.182:14826\r\nMax-Forwards: 70\r\nFrom: <sip:mranga@nist.gov>;tag=6fcd5c7ace8b4a45acf0f0cd539b168b;epid=0d4c418ddf\r\nTo: <sip:mranga@nist.gov>\r\nCall-ID: c5679907eb954a8da9f9dceb282d7230@129.6.55.182\r\nCSeq: 1 REGISTER\r\nContact: <sip:129.6.55.182:14826>;methods=\"INVITE, MESSAGE, INFO, SUBSCRIBE, OPTIONS, BYE, CANCEL, NOTIFY, ACK, REFER\"\r\nUser-Agent: RTC/(Microsoft RTC)\r\nEvent:  registration\r\nAllow-Events: presence\r\nContent-Length: 0\r\n\r\nINVITE sip:littleguy@there.com:5060 SIP/2.0\r\nVia: SIP/2.0/UDP 65.243.118.100:5050\r\nFrom: M. Ranganathan  <sip:M.Ranganathan@sipbakeoff.com>;tag=1234\r\nTo: \"littleguy@there.com\" <sip:littleguy@there.com:5060> \r\nCall-ID: Q2AboBsaGn9!?x6@sipbakeoff.com \r\nCSeq: 1 INVITE \r\nContent-Length: 247\r\n\r\nv=0\r\no=4855 13760799956958020 13760799956958020 IN IP4  129.6.55.78\r\ns=mysession session\r\np=+46 8 52018010\r\nc=IN IP4  129.6.55.78\r\nt=0 0\r\nm=audio 6022 RTP/AVP 0 4 18\r\na=rtpmap:0 PCMU/8000\r\na=rtpmap:4 G723/8000\r\na=rtpmap:18 G729A/8000\r\na=ptime:20\r\n";

        r1 = $r2;

        i0 = 0;

     label1:
        if i0 >= 20 goto label2;

        $r3 = new java.lang.Thread;

        $r4 = new gov.nist.javax.sip.parser.StringMsgParser$1ParserThread;

        specialinvoke $r4.<gov.nist.javax.sip.parser.StringMsgParser$1ParserThread: void <init>(java.lang.String[])>(r1);

        specialinvoke $r3.<java.lang.Thread: void <init>(java.lang.Runnable)>($r4);

        virtualinvoke $r3.<java.lang.Thread: void start()>();

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    public void setStrict(boolean)
    {
        gov.nist.javax.sip.parser.StringMsgParser r0;
        boolean z0;

        r0 := @this: gov.nist.javax.sip.parser.StringMsgParser;

        z0 := @parameter0: boolean;

        r0.<gov.nist.javax.sip.parser.StringMsgParser: boolean strict> = z0;

        return;
    }

    static void <clinit>()
    {
        <gov.nist.javax.sip.parser.StringMsgParser: boolean computeContentLengthFromMessage> = 0;

        return;
    }
}
