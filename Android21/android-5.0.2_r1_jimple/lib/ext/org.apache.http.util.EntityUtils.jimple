public final class org.apache.http.util.EntityUtils extends java.lang.Object
{

    private void <init>()
    {
        org.apache.http.util.EntityUtils r0;

        r0 := @this: org.apache.http.util.EntityUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static byte[] toByteArray(org.apache.http.HttpEntity) throws java.io.IOException
    {
        org.apache.http.HttpEntity r0;
        java.io.InputStream r1;
        int i0, i1, $i5;
        org.apache.http.util.ByteArrayBuffer r2, $r5;
        byte[] r3, $r6, $r8;
        java.lang.Throwable r4, $r9;
        long $l2, $l4;
        byte $b3;
        java.lang.IllegalArgumentException $r7, $r10;

        r0 := @parameter0: org.apache.http.HttpEntity;

        if r0 != null goto label01;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP entity may not be null");

        throw $r10;

     label01:
        r1 = interfaceinvoke r0.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        if r1 != null goto label02;

        $r8 = newarray (byte)[0];

        return $r8;

     label02:
        $l2 = interfaceinvoke r0.<org.apache.http.HttpEntity: long getContentLength()>();

        $b3 = $l2 cmp 2147483647L;

        if $b3 <= 0 goto label03;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP entity too large to be buffered in memory");

        throw $r7;

     label03:
        $l4 = interfaceinvoke r0.<org.apache.http.HttpEntity: long getContentLength()>();

        i0 = (int) $l4;

        if i0 >= 0 goto label04;

        i0 = 4096;

     label04:
        $r5 = new org.apache.http.util.ByteArrayBuffer;

        specialinvoke $r5.<org.apache.http.util.ByteArrayBuffer: void <init>(int)>(i0);

        r2 = $r5;

     label05:
        r3 = newarray (byte)[4096];

     label06:
        $i5 = virtualinvoke r1.<java.io.InputStream: int read(byte[])>(r3);

        i1 = $i5;

        if $i5 == -1 goto label07;

        virtualinvoke r2.<org.apache.http.util.ByteArrayBuffer: void append(byte[],int,int)>(r3, 0, i1);

        goto label06;

     label07:
        virtualinvoke r1.<java.io.InputStream: void close()>();

        goto label10;

     label08:
        $r9 := @caughtexception;

        r4 = $r9;

     label09:
        virtualinvoke r1.<java.io.InputStream: void close()>();

        throw r4;

     label10:
        $r6 = virtualinvoke r2.<org.apache.http.util.ByteArrayBuffer: byte[] toByteArray()>();

        return $r6;

        catch java.lang.Throwable from label05 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public static java.lang.String getContentCharSet(org.apache.http.HttpEntity) throws org.apache.http.ParseException
    {
        org.apache.http.HttpEntity r0;
        java.lang.String r1;
        org.apache.http.HeaderElement[] r2;
        org.apache.http.NameValuePair r3;
        org.apache.http.Header $r4, $r5;
        int $i0;
        org.apache.http.HeaderElement $r6;
        java.lang.IllegalArgumentException $r7;

        r0 := @parameter0: org.apache.http.HttpEntity;

        if r0 != null goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP entity may not be null");

        throw $r7;

     label1:
        r1 = null;

        $r4 = interfaceinvoke r0.<org.apache.http.HttpEntity: org.apache.http.Header getContentType()>();

        if $r4 == null goto label2;

        $r5 = interfaceinvoke r0.<org.apache.http.HttpEntity: org.apache.http.Header getContentType()>();

        r2 = interfaceinvoke $r5.<org.apache.http.Header: org.apache.http.HeaderElement[] getElements()>();

        $i0 = lengthof r2;

        if $i0 <= 0 goto label2;

        $r6 = r2[0];

        r3 = interfaceinvoke $r6.<org.apache.http.HeaderElement: org.apache.http.NameValuePair getParameterByName(java.lang.String)>("charset");

        if r3 == null goto label2;

        r1 = interfaceinvoke r3.<org.apache.http.NameValuePair: java.lang.String getValue()>();

     label2:
        return r1;
    }

    public static java.lang.String toString(org.apache.http.HttpEntity, java.lang.String) throws java.io.IOException, org.apache.http.ParseException
    {
        org.apache.http.HttpEntity r0;
        java.lang.String r1, r3, $r11;
        java.io.InputStream r2;
        int i0, i1, $i5;
        java.io.InputStreamReader r4, $r8;
        org.apache.http.util.CharArrayBuffer r5, $r9;
        char[] r6;
        java.lang.Throwable r7, $r12;
        long $l2, $l4;
        byte $b3;
        java.lang.IllegalArgumentException $r10, $r13;

        r0 := @parameter0: org.apache.http.HttpEntity;

        r1 := @parameter1: java.lang.String;

        if r0 != null goto label01;

        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP entity may not be null");

        throw $r13;

     label01:
        r2 = interfaceinvoke r0.<org.apache.http.HttpEntity: java.io.InputStream getContent()>();

        if r2 != null goto label02;

        return "";

     label02:
        $l2 = interfaceinvoke r0.<org.apache.http.HttpEntity: long getContentLength()>();

        $b3 = $l2 cmp 2147483647L;

        if $b3 <= 0 goto label03;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("HTTP entity too large to be buffered in memory");

        throw $r10;

     label03:
        $l4 = interfaceinvoke r0.<org.apache.http.HttpEntity: long getContentLength()>();

        i0 = (int) $l4;

        if i0 >= 0 goto label04;

        i0 = 4096;

     label04:
        r3 = staticinvoke <org.apache.http.util.EntityUtils: java.lang.String getContentCharSet(org.apache.http.HttpEntity)>(r0);

        if r3 != null goto label05;

        r3 = r1;

     label05:
        if r3 != null goto label06;

        r3 = "ISO-8859-1";

     label06:
        $r8 = new java.io.InputStreamReader;

        specialinvoke $r8.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r2, r3);

        r4 = $r8;

        $r9 = new org.apache.http.util.CharArrayBuffer;

        specialinvoke $r9.<org.apache.http.util.CharArrayBuffer: void <init>(int)>(i0);

        r5 = $r9;

     label07:
        r6 = newarray (char)[1024];

     label08:
        $i5 = virtualinvoke r4.<java.io.Reader: int read(char[])>(r6);

        i1 = $i5;

        if $i5 == -1 goto label09;

        virtualinvoke r5.<org.apache.http.util.CharArrayBuffer: void append(char[],int,int)>(r6, 0, i1);

        goto label08;

     label09:
        virtualinvoke r4.<java.io.Reader: void close()>();

        goto label12;

     label10:
        $r12 := @caughtexception;

        r7 = $r12;

     label11:
        virtualinvoke r4.<java.io.Reader: void close()>();

        throw r7;

     label12:
        $r11 = virtualinvoke r5.<org.apache.http.util.CharArrayBuffer: java.lang.String toString()>();

        return $r11;

        catch java.lang.Throwable from label07 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public static java.lang.String toString(org.apache.http.HttpEntity) throws java.io.IOException, org.apache.http.ParseException
    {
        org.apache.http.HttpEntity r0;
        java.lang.String $r1;

        r0 := @parameter0: org.apache.http.HttpEntity;

        $r1 = staticinvoke <org.apache.http.util.EntityUtils: java.lang.String toString(org.apache.http.HttpEntity,java.lang.String)>(r0, null);

        return $r1;
    }
}
