public abstract class gov.nist.javax.sip.message.SIPMessage extends gov.nist.javax.sip.message.MessageObject implements javax.sip.message.Message, gov.nist.javax.sip.message.MessageExt
{
    private java.lang.String contentEncodingCharset;
    protected boolean nullRequest;
    protected java.util.LinkedList unrecognizedHeaders;
    protected java.util.concurrent.ConcurrentLinkedQueue headers;
    protected gov.nist.javax.sip.header.From fromHeader;
    protected gov.nist.javax.sip.header.To toHeader;
    protected gov.nist.javax.sip.header.CSeq cSeqHeader;
    protected gov.nist.javax.sip.header.CallID callIdHeader;
    protected gov.nist.javax.sip.header.ContentLength contentLengthHeader;
    protected gov.nist.javax.sip.header.MaxForwards maxForwardsHeader;
    protected int size;
    private java.lang.String messageContent;
    private byte[] messageContentBytes;
    private java.lang.Object messageContentObject;
    private java.util.Hashtable nameTable;
    protected java.lang.Object applicationData;
    private static final java.lang.String CONTENT_TYPE_LOWERCASE;
    private static final java.lang.String ERROR_LOWERCASE;
    private static final java.lang.String CONTACT_LOWERCASE;
    private static final java.lang.String VIA_LOWERCASE;
    private static final java.lang.String AUTHORIZATION_LOWERCASE;
    private static final java.lang.String ROUTE_LOWERCASE;
    private static final java.lang.String RECORDROUTE_LOWERCASE;
    private static final java.lang.String CONTENT_DISPOSITION_LOWERCASE;
    private static final java.lang.String CONTENT_ENCODING_LOWERCASE;
    private static final java.lang.String CONTENT_LANGUAGE_LOWERCASE;
    private static final java.lang.String EXPIRES_LOWERCASE;

    public static boolean isRequestHeader(gov.nist.javax.sip.header.SIPHeader)
    {
        gov.nist.javax.sip.header.SIPHeader r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;

        r0 := @parameter0: gov.nist.javax.sip.header.SIPHeader;

        $z0 = r0 instanceof gov.nist.javax.sip.header.AlertInfo;

        if $z0 != 0 goto label1;

        $z1 = r0 instanceof gov.nist.javax.sip.header.InReplyTo;

        if $z1 != 0 goto label1;

        $z2 = r0 instanceof gov.nist.javax.sip.header.Authorization;

        if $z2 != 0 goto label1;

        $z3 = r0 instanceof gov.nist.javax.sip.header.MaxForwards;

        if $z3 != 0 goto label1;

        $z4 = r0 instanceof gov.nist.javax.sip.header.UserAgent;

        if $z4 != 0 goto label1;

        $z5 = r0 instanceof gov.nist.javax.sip.header.Priority;

        if $z5 != 0 goto label1;

        $z6 = r0 instanceof gov.nist.javax.sip.header.ProxyAuthorization;

        if $z6 != 0 goto label1;

        $z7 = r0 instanceof gov.nist.javax.sip.header.ProxyRequire;

        if $z7 != 0 goto label1;

        $z8 = r0 instanceof gov.nist.javax.sip.header.ProxyRequireList;

        if $z8 != 0 goto label1;

        $z9 = r0 instanceof gov.nist.javax.sip.header.Route;

        if $z9 != 0 goto label1;

        $z10 = r0 instanceof gov.nist.javax.sip.header.RouteList;

        if $z10 != 0 goto label1;

        $z11 = r0 instanceof gov.nist.javax.sip.header.Subject;

        if $z11 != 0 goto label1;

        $z12 = r0 instanceof gov.nist.javax.sip.header.SIPIfMatch;

        if $z12 == 0 goto label2;

     label1:
        $z13 = 1;

        goto label3;

     label2:
        $z13 = 0;

     label3:
        return $z13;
    }

    public static boolean isResponseHeader(gov.nist.javax.sip.header.SIPHeader)
    {
        gov.nist.javax.sip.header.SIPHeader r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;

        r0 := @parameter0: gov.nist.javax.sip.header.SIPHeader;

        $z0 = r0 instanceof gov.nist.javax.sip.header.ErrorInfo;

        if $z0 != 0 goto label1;

        $z1 = r0 instanceof gov.nist.javax.sip.header.ProxyAuthenticate;

        if $z1 != 0 goto label1;

        $z2 = r0 instanceof gov.nist.javax.sip.header.Server;

        if $z2 != 0 goto label1;

        $z3 = r0 instanceof gov.nist.javax.sip.header.Unsupported;

        if $z3 != 0 goto label1;

        $z4 = r0 instanceof gov.nist.javax.sip.header.RetryAfter;

        if $z4 != 0 goto label1;

        $z5 = r0 instanceof gov.nist.javax.sip.header.Warning;

        if $z5 != 0 goto label1;

        $z6 = r0 instanceof gov.nist.javax.sip.header.WWWAuthenticate;

        if $z6 != 0 goto label1;

        $z7 = r0 instanceof gov.nist.javax.sip.header.SIPETag;

        if $z7 != 0 goto label1;

        $z8 = r0 instanceof gov.nist.javax.sip.header.RSeq;

        if $z8 == 0 goto label2;

     label1:
        $z9 = 1;

        goto label3;

     label2:
        $z9 = 0;

     label3:
        return $z9;
    }

    public java.util.LinkedList getMessageAsEncodedStrings()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.util.LinkedList r1, $r5;
        java.util.Iterator r2;
        gov.nist.javax.sip.header.SIPHeader r3;
        gov.nist.javax.sip.header.SIPHeaderList r4;
        java.util.concurrent.ConcurrentLinkedQueue $r6;
        boolean $z0, $z1;
        java.lang.Object $r7;
        java.lang.String $r8;
        java.util.List $r9;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        $r5 = new java.util.LinkedList;

        specialinvoke $r5.<java.util.LinkedList: void <init>()>();

        r1 = $r5;

        $r6 = r0.<gov.nist.javax.sip.message.SIPMessage: java.util.concurrent.ConcurrentLinkedQueue headers>;

        r2 = virtualinvoke $r6.<java.util.concurrent.ConcurrentLinkedQueue: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (gov.nist.javax.sip.header.SIPHeader) $r7;

        $z1 = r3 instanceof gov.nist.javax.sip.header.SIPHeaderList;

        if $z1 == 0 goto label2;

        r4 = (gov.nist.javax.sip.header.SIPHeaderList) r3;

        $r9 = virtualinvoke r4.<gov.nist.javax.sip.header.SIPHeaderList: java.util.List getHeadersAsEncodedStrings()>();

        virtualinvoke r1.<java.util.LinkedList: boolean addAll(java.util.Collection)>($r9);

        goto label3;

     label2:
        $r8 = virtualinvoke r3.<gov.nist.javax.sip.header.SIPHeader: java.lang.String encode()>();

        virtualinvoke r1.<java.util.LinkedList: boolean add(java.lang.Object)>($r8);

     label3:
        goto label1;

     label4:
        return r1;
    }

    protected java.lang.String encodeSIPHeaders()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.lang.StringBuffer r1, $r4, $r7, $r8;
        java.util.Iterator r2;
        gov.nist.javax.sip.header.SIPHeader r3;
        java.util.concurrent.ConcurrentLinkedQueue $r5;
        boolean $z0, $z1;
        gov.nist.javax.sip.header.ContentLength $r6;
        java.lang.String $r9;
        java.lang.Object $r10;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        r1 = $r4;

        $r5 = r0.<gov.nist.javax.sip.message.SIPMessage: java.util.concurrent.ConcurrentLinkedQueue headers>;

        r2 = virtualinvoke $r5.<java.util.concurrent.ConcurrentLinkedQueue: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (gov.nist.javax.sip.header.SIPHeader) $r10;

        $z1 = r3 instanceof gov.nist.javax.sip.header.ContentLength;

        if $z1 != 0 goto label2;

        virtualinvoke r3.<gov.nist.javax.sip.header.SIPHeader: java.lang.StringBuffer encode(java.lang.StringBuffer)>(r1);

     label2:
        goto label1;

     label3:
        $r6 = r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ContentLength contentLengthHeader>;

        $r7 = virtualinvoke $r6.<gov.nist.javax.sip.header.ContentLength: java.lang.StringBuffer encode(java.lang.StringBuffer)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\r\n");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r9;
    }

    public abstract java.lang.String encodeMessage();

    public abstract java.lang.String getDialogId(boolean);

    public boolean match(java.lang.Object)
    {
        gov.nist.javax.sip.message.SIPMessage r0, r2;
        java.lang.Object r1, $r13, $r14, $r16, $r17;
        java.util.Iterator r3;
        gov.nist.javax.sip.header.SIPHeader r4, r7, r9, r18, r20;
        java.util.List r5;
        java.util.ListIterator r6, r8, r19;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10;
        java.lang.Class $r10, $r11;
        java.lang.String $r12;
        int $i0;
        gov.nist.javax.sip.header.SIPHeaderList $r15;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label01;

        return 1;

     label01:
        $r10 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke $r10.<java.lang.Object: boolean equals(java.lang.Object)>($r11);

        if $z1 != 0 goto label02;

        return 0;

     label02:
        r2 = (gov.nist.javax.sip.message.SIPMessage) r1;

        r3 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPMessage: java.util.Iterator getHeaders()>();

     label03:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label18;

        $r13 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (gov.nist.javax.sip.header.SIPHeader) $r13;

        $r12 = virtualinvoke r4.<gov.nist.javax.sip.header.SIPHeader: java.lang.String getHeaderName()>();

        r5 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: java.util.List getHeaderList(java.lang.String)>($r12);

        if r5 == null goto label04;

        $i0 = interfaceinvoke r5.<java.util.List: int size()>();

        if $i0 != 0 goto label05;

     label04:
        return 0;

     label05:
        $z3 = r4 instanceof gov.nist.javax.sip.header.SIPHeaderList;

        if $z3 == 0 goto label13;

        $r15 = (gov.nist.javax.sip.header.SIPHeaderList) r4;

        r6 = virtualinvoke $r15.<gov.nist.javax.sip.header.SIPHeaderList: java.util.ListIterator listIterator()>();

     label06:
        $z6 = interfaceinvoke r6.<java.util.ListIterator: boolean hasNext()>();

        if $z6 == 0 goto label12;

        $r16 = interfaceinvoke r6.<java.util.ListIterator: java.lang.Object next()>();

        r7 = (gov.nist.javax.sip.header.SIPHeader) $r16;

        $z7 = r7 instanceof gov.nist.javax.sip.header.ContentLength;

        if $z7 == 0 goto label07;

        goto label06;

     label07:
        r8 = interfaceinvoke r5.<java.util.List: java.util.ListIterator listIterator()>();

        z0 = 0;

     label08:
        $z8 = interfaceinvoke r8.<java.util.ListIterator: boolean hasNext()>();

        if $z8 == 0 goto label10;

        $r17 = interfaceinvoke r8.<java.util.ListIterator: java.lang.Object next()>();

        r9 = (gov.nist.javax.sip.header.SIPHeader) $r17;

        $z9 = virtualinvoke r9.<gov.nist.javax.sip.header.SIPHeader: boolean match(java.lang.Object)>(r7);

        if $z9 == 0 goto label09;

        z0 = 1;

        goto label10;

     label09:
        goto label08;

     label10:
        if z0 != 0 goto label11;

        return 0;

     label11:
        goto label06;

     label12:
        goto label17;

     label13:
        r18 = r4;

        r19 = interfaceinvoke r5.<java.util.List: java.util.ListIterator listIterator()>();

        z10 = 0;

     label14:
        $z4 = interfaceinvoke r19.<java.util.ListIterator: boolean hasNext()>();

        if $z4 == 0 goto label16;

        $r14 = interfaceinvoke r19.<java.util.ListIterator: java.lang.Object next()>();

        r20 = (gov.nist.javax.sip.header.SIPHeader) $r14;

        $z5 = virtualinvoke r20.<gov.nist.javax.sip.header.SIPHeader: boolean match(java.lang.Object)>(r18);

        if $z5 == 0 goto label15;

        z10 = 1;

        goto label16;

     label15:
        goto label14;

     label16:
        if z10 != 0 goto label17;

        return 0;

     label17:
        goto label03;

     label18:
        return 1;
    }

    public void merge(java.lang.Object)
    {
        gov.nist.javax.sip.message.SIPMessage r0, r2;
        java.lang.Object r1, $r12, $r13;
        java.lang.Object[] r3;
        int i0, $i1;
        gov.nist.javax.sip.header.SIPHeader r4, r8;
        java.lang.String r5, $r18;
        java.util.List r6;
        java.util.ListIterator r7;
        java.lang.Class $r9, $r10, $r16;
        boolean $z0, $z1;
        java.util.concurrent.ConcurrentLinkedQueue $r11;
        java.lang.StringBuilder $r14, $r17, $r19;
        java.lang.IllegalArgumentException $r15;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: java.lang.Object;

        $r9 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r9.<java.lang.Object: boolean equals(java.lang.Object)>($r10);

        if $z0 != 0 goto label1;

        $r15 = new java.lang.IllegalArgumentException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad class ");

        $r16 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r15;

     label1:
        r2 = (gov.nist.javax.sip.message.SIPMessage) r1;

        $r11 = r2.<gov.nist.javax.sip.message.SIPMessage: java.util.concurrent.ConcurrentLinkedQueue headers>;

        r3 = virtualinvoke $r11.<java.util.concurrent.ConcurrentLinkedQueue: java.lang.Object[] toArray()>();

        i0 = 0;

     label2:
        $i1 = lengthof r3;

        if i0 >= $i1 goto label6;

        $r12 = r3[i0];

        r4 = (gov.nist.javax.sip.header.SIPHeader) $r12;

        r5 = virtualinvoke r4.<gov.nist.javax.sip.header.SIPHeader: java.lang.String getHeaderName()>();

        r6 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: java.util.List getHeaderList(java.lang.String)>(r5);

        if r6 != null goto label3;

        specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void attachHeader(gov.nist.javax.sip.header.SIPHeader)>(r4);

        goto label5;

     label3:
        r7 = interfaceinvoke r6.<java.util.List: java.util.ListIterator listIterator()>();

     label4:
        $z1 = interfaceinvoke r7.<java.util.ListIterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r13 = interfaceinvoke r7.<java.util.ListIterator: java.lang.Object next()>();

        r8 = (gov.nist.javax.sip.header.SIPHeader) $r13;

        virtualinvoke r8.<gov.nist.javax.sip.header.SIPHeader: void merge(java.lang.Object)>(r4);

        goto label4;

     label5:
        i0 = i0 + 1;

        goto label2;

     label6:
        return;
    }

    public java.lang.String encode()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.lang.StringBuffer r1, $r5, $r10, $r23;
        java.util.Iterator r2, r30;
        gov.nist.javax.sip.header.SIPHeader r3;
        java.lang.String r4, $r9, $r12, $r14, $r15, $r16, $r18, $r29, r31, r32;
        java.util.concurrent.ConcurrentLinkedQueue $r6;
        boolean $z0, $z1, $z2;
        java.util.LinkedList $r7;
        gov.nist.javax.sip.header.ContentLength $r8;
        java.lang.Object $r13, $r20, $r24, $r25;
        byte[] $r17, $r21;
        java.io.UnsupportedEncodingException $r28, r33;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        r1 = $r5;

        $r6 = r0.<gov.nist.javax.sip.message.SIPMessage: java.util.concurrent.ConcurrentLinkedQueue headers>;

        r2 = virtualinvoke $r6.<java.util.concurrent.ConcurrentLinkedQueue: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r25 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (gov.nist.javax.sip.header.SIPHeader) $r25;

        $z2 = r3 instanceof gov.nist.javax.sip.header.ContentLength;

        if $z2 != 0 goto label02;

        $r29 = virtualinvoke r3.<gov.nist.javax.sip.header.SIPHeader: java.lang.String encode()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r29);

     label02:
        goto label01;

     label03:
        $r7 = r0.<gov.nist.javax.sip.message.SIPMessage: java.util.LinkedList unrecognizedHeaders>;

        r30 = virtualinvoke $r7.<java.util.LinkedList: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label05;

        $r24 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r24;

        $r23 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

        virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\r\n");

        goto label04;

     label05:
        $r8 = r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ContentLength contentLengthHeader>;

        $r9 = virtualinvoke $r8.<gov.nist.javax.sip.header.ContentLength: java.lang.String encode()>();

        $r10 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\r\n");

        $r13 = r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.Object messageContentObject>;

        if $r13 == null goto label06;

        $r20 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.Object getContent()>();

        r31 = virtualinvoke $r20.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r31);

        goto label13;

     label06:
        $r12 = r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String messageContent>;

        if $r12 != null goto label07;

        $r21 = r0.<gov.nist.javax.sip.message.SIPMessage: byte[] messageContentBytes>;

        if $r21 == null goto label13;

     label07:
        r32 = null;

     label08:
        $r15 = r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String messageContent>;

        if $r15 == null goto label09;

        r32 = r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String messageContent>;

        goto label10;

     label09:
        $r14 = new java.lang.String;

        $r17 = r0.<gov.nist.javax.sip.message.SIPMessage: byte[] messageContentBytes>;

        $r16 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String getCharset()>();

        specialinvoke $r14.<java.lang.String: void <init>(byte[],java.lang.String)>($r17, $r16);

        r32 = $r14;

     label10:
        goto label12;

     label11:
        $r28 := @caughtexception;

        r33 = $r28;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>(r33);

     label12:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r32);

     label13:
        $r18 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r18;

        catch java.io.UnsupportedEncodingException from label08 to label10 with label11;
    }

    public byte[] encodeAsBytes(java.lang.String)
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.lang.String r1, $r15, $r16, $r17, $r18, $r24;
        javax.sip.header.ViaHeader r2;
        java.text.ParseException r3, $r25;
        java.util.concurrent.ConcurrentLinkedQueue r4, $r10, $r11;
        java.util.Iterator r5;
        gov.nist.javax.sip.header.SIPHeader r6;
        java.lang.Throwable r7, $r27;
        boolean $z0, $z1, $z2, $z3;
        javax.sip.header.Header $r8;
        java.lang.StringBuffer $r9, r28;
        gov.nist.javax.sip.header.ContentLength $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        gov.nist.javax.sip.message.SIPRequest $r20;
        java.lang.Object $r21;
        byte[] $r22, r29, r30, r31;
        java.io.UnsupportedEncodingException $r23, $r26, r32, r33;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: java.lang.String;

        $z0 = r0 instanceof gov.nist.javax.sip.message.SIPRequest;

        if $z0 == 0 goto label01;

        $r20 = (gov.nist.javax.sip.message.SIPRequest) r0;

        $z3 = virtualinvoke $r20.<gov.nist.javax.sip.message.SIPRequest: boolean isNullRequest()>();

        if $z3 == 0 goto label01;

        $r24 = "\r\n\r\n";

        $r22 = virtualinvoke $r24.<java.lang.String: byte[] getBytes()>();

        return $r22;

     label01:
        $r8 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.Header getHeader(java.lang.String)>("Via");

        r2 = (javax.sip.header.ViaHeader) $r8;

     label02:
        interfaceinvoke r2.<javax.sip.header.ViaHeader: void setTransport(java.lang.String)>(r1);

     label03:
        goto label05;

     label04:
        $r25 := @caughtexception;

        r3 = $r25;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>(r3);

     label05:
        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        r28 = $r9;

        $r10 = r0.<gov.nist.javax.sip.message.SIPMessage: java.util.concurrent.ConcurrentLinkedQueue headers>;

        r4 = $r10;

        entermonitor $r10;

     label06:
        $r11 = r0.<gov.nist.javax.sip.message.SIPMessage: java.util.concurrent.ConcurrentLinkedQueue headers>;

        r5 = virtualinvoke $r11.<java.util.concurrent.ConcurrentLinkedQueue: java.util.Iterator iterator()>();

     label07:
        $z1 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label09;

        $r21 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (gov.nist.javax.sip.header.SIPHeader) $r21;

        $z2 = r6 instanceof gov.nist.javax.sip.header.ContentLength;

        if $z2 != 0 goto label08;

        virtualinvoke r6.<gov.nist.javax.sip.header.SIPHeader: java.lang.StringBuffer encode(java.lang.StringBuffer)>(r28);

     label08:
        goto label07;

     label09:
        exitmonitor r4;

     label10:
        goto label13;

     label11:
        $r27 := @caughtexception;

        r7 = $r27;

        exitmonitor r4;

     label12:
        throw r7;

     label13:
        $r13 = r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ContentLength contentLengthHeader>;

        virtualinvoke $r13.<gov.nist.javax.sip.header.ContentLength: java.lang.StringBuffer encode(java.lang.StringBuffer)>(r28);

        virtualinvoke r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\r\n");

        r29 = null;

        r30 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: byte[] getRawContent()>();

        if r30 == null goto label18;

        r31 = null;

     label14:
        $r17 = virtualinvoke r28.<java.lang.StringBuffer: java.lang.String toString()>();

        $r18 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String getCharset()>();

        r31 = virtualinvoke $r17.<java.lang.String: byte[] getBytes(java.lang.String)>($r18);

     label15:
        goto label17;

     label16:
        $r23 := @caughtexception;

        r32 = $r23;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>(r32);

     label17:
        $i0 = lengthof r31;

        $i1 = lengthof r30;

        $i3 = $i0 + $i1;

        r29 = newarray (byte)[$i3];

        $i2 = lengthof r31;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r31, 0, r29, 0, $i2);

        $i4 = lengthof r31;

        $i5 = lengthof r30;

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r30, 0, r29, $i4, $i5);

        goto label21;

     label18:
        $r16 = virtualinvoke r28.<java.lang.StringBuffer: java.lang.String toString()>();

        $r15 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String getCharset()>();

        r29 = virtualinvoke $r16.<java.lang.String: byte[] getBytes(java.lang.String)>($r15);

     label19:
        goto label21;

     label20:
        $r26 := @caughtexception;

        r33 = $r26;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>(r33);

     label21:
        return r29;

        catch java.text.ParseException from label02 to label03 with label04;
        catch java.lang.Throwable from label06 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
        catch java.io.UnsupportedEncodingException from label14 to label15 with label16;
        catch java.io.UnsupportedEncodingException from label18 to label19 with label20;
    }

    public java.lang.Object clone()
    {
        gov.nist.javax.sip.message.SIPMessage r0, r1;
        java.util.Iterator r2;
        gov.nist.javax.sip.header.SIPHeader r3, $r20;
        java.lang.Object $r4, $r8, $r10, $r11, $r13, $r18, $r19;
        java.util.Hashtable $r5;
        java.util.concurrent.ConcurrentLinkedQueue $r6, $r16, $r17;
        byte[] $r7, $r12, $r14, $r15;
        java.util.LinkedList $r9;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        $r4 = specialinvoke r0.<gov.nist.javax.sip.message.MessageObject: java.lang.Object clone()>();

        r1 = (gov.nist.javax.sip.message.SIPMessage) $r4;

        $r5 = new java.util.Hashtable;

        specialinvoke $r5.<java.util.Hashtable: void <init>()>();

        r1.<gov.nist.javax.sip.message.SIPMessage: java.util.Hashtable nameTable> = $r5;

        r1.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.From fromHeader> = null;

        r1.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.To toHeader> = null;

        r1.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.CSeq cSeqHeader> = null;

        r1.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.CallID callIdHeader> = null;

        r1.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ContentLength contentLengthHeader> = null;

        r1.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.MaxForwards maxForwardsHeader> = null;

        $r6 = r0.<gov.nist.javax.sip.message.SIPMessage: java.util.concurrent.ConcurrentLinkedQueue headers>;

        if $r6 == null goto label2;

        $r17 = new java.util.concurrent.ConcurrentLinkedQueue;

        specialinvoke $r17.<java.util.concurrent.ConcurrentLinkedQueue: void <init>()>();

        r1.<gov.nist.javax.sip.message.SIPMessage: java.util.concurrent.ConcurrentLinkedQueue headers> = $r17;

        $r16 = r0.<gov.nist.javax.sip.message.SIPMessage: java.util.concurrent.ConcurrentLinkedQueue headers>;

        r2 = virtualinvoke $r16.<java.util.concurrent.ConcurrentLinkedQueue: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r19 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (gov.nist.javax.sip.header.SIPHeader) $r19;

        $r18 = virtualinvoke r3.<gov.nist.javax.sip.header.SIPHeader: java.lang.Object clone()>();

        $r20 = (gov.nist.javax.sip.header.SIPHeader) $r18;

        specialinvoke r1.<gov.nist.javax.sip.message.SIPMessage: void attachHeader(gov.nist.javax.sip.header.SIPHeader)>($r20);

        goto label1;

     label2:
        $r7 = r0.<gov.nist.javax.sip.message.SIPMessage: byte[] messageContentBytes>;

        if $r7 == null goto label3;

        $r12 = r0.<gov.nist.javax.sip.message.SIPMessage: byte[] messageContentBytes>;

        $r13 = virtualinvoke $r12.<java.lang.Object: java.lang.Object clone()>();

        $r14 = (byte[]) $r13;

        $r15 = (byte[]) $r14;

        r1.<gov.nist.javax.sip.message.SIPMessage: byte[] messageContentBytes> = $r15;

     label3:
        $r8 = r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.Object messageContentObject>;

        if $r8 == null goto label4;

        $r10 = r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.Object messageContentObject>;

        $r11 = staticinvoke <gov.nist.javax.sip.message.SIPMessage: java.lang.Object makeClone(java.lang.Object)>($r10);

        r1.<gov.nist.javax.sip.message.SIPMessage: java.lang.Object messageContentObject> = $r11;

     label4:
        $r9 = r0.<gov.nist.javax.sip.message.SIPMessage: java.util.LinkedList unrecognizedHeaders>;

        r1.<gov.nist.javax.sip.message.SIPMessage: java.util.LinkedList unrecognizedHeaders> = $r9;

        return r1;
    }

    public java.lang.String debugDump()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.lang.reflect.Field[] r1;
        int i0, $i1, $i2;
        java.lang.reflect.Field r2;
        java.lang.Class r3, $r5, $r13;
        java.lang.String r4, $r7, $r8, $r10, $r12, $r17, $r22;
        java.util.concurrent.ConcurrentLinkedQueue $r6;
        java.lang.Object $r9, $r11, $r14, $r20;
        boolean $z0;
        java.lang.StringBuilder $r15, $r16, $r18;
        gov.nist.javax.sip.header.SIPHeader $r19;
        java.lang.Exception $r21, r23;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String stringRepresentation> = "";

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void sprint(java.lang.String)>("SIPMessage:");

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void sprint(java.lang.String)>("{");

     label1:
        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r1 = virtualinvoke $r5.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        i0 = 0;

     label2:
        $i1 = lengthof r1;

        if i0 >= $i1 goto label4;

        r2 = r1[i0];

        r3 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.Class getType()>();

        r4 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.String getName()>();

        $r14 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        if $r14 == null goto label3;

        $r13 = class "gov/nist/javax/sip/header/SIPHeader";

        $z0 = virtualinvoke $r13.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r3);

        if $z0 == 0 goto label3;

        $i2 = virtualinvoke r4.<java.lang.String: int compareTo(java.lang.String)>("headers");

        if $i2 == 0 goto label3;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void sprint(java.lang.String)>($r17);

        $r20 = virtualinvoke r2.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        $r19 = (gov.nist.javax.sip.header.SIPHeader) $r20;

        $r22 = virtualinvoke $r19.<gov.nist.javax.sip.header.SIPHeader: java.lang.String debugDump()>();

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void sprint(java.lang.String)>($r22);

     label3:
        i0 = i0 + 1;

        goto label2;

     label4:
        goto label6;

     label5:
        $r21 := @caughtexception;

        r23 = $r21;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>(r23);

     label6:
        virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void sprint(java.lang.String)>("List of headers : ");

        $r6 = r0.<gov.nist.javax.sip.message.SIPMessage: java.util.concurrent.ConcurrentLinkedQueue headers>;

        $r7 = virtualinvoke $r6.<java.util.concurrent.ConcurrentLinkedQueue: java.lang.String toString()>();

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void sprint(java.lang.String)>($r7);

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void sprint(java.lang.String)>("messageContent = ");

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void sprint(java.lang.String)>("{");

        $r8 = r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String messageContent>;

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void sprint(java.lang.String)>($r8);

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void sprint(java.lang.String)>("}");

        $r9 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.Object getContent()>();

        if $r9 == null goto label7;

        $r11 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.Object getContent()>();

        $r12 = virtualinvoke $r11.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void sprint(java.lang.String)>($r12);

     label7:
        virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void sprint(java.lang.String)>("}");

        $r10 = r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String stringRepresentation>;

        return $r10;

        catch java.lang.Exception from label1 to label4 with label5;
    }

    public void <init>()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.lang.String $r2;
        java.util.LinkedList $r3;
        java.util.concurrent.ConcurrentLinkedQueue $r4;
        java.util.Hashtable $r5;
        gov.nist.javax.sip.header.ContentLength $r6;
        java.lang.Exception $r7;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        specialinvoke r0.<gov.nist.javax.sip.message.MessageObject: void <init>()>();

        $r2 = staticinvoke <gov.nist.javax.sip.message.MessageFactoryImpl: java.lang.String getDefaultContentEncodingCharset()>();

        r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String contentEncodingCharset> = $r2;

        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>()>();

        r0.<gov.nist.javax.sip.message.SIPMessage: java.util.LinkedList unrecognizedHeaders> = $r3;

        $r4 = new java.util.concurrent.ConcurrentLinkedQueue;

        specialinvoke $r4.<java.util.concurrent.ConcurrentLinkedQueue: void <init>()>();

        r0.<gov.nist.javax.sip.message.SIPMessage: java.util.concurrent.ConcurrentLinkedQueue headers> = $r4;

        $r5 = new java.util.Hashtable;

        specialinvoke $r5.<java.util.Hashtable: void <init>()>();

        r0.<gov.nist.javax.sip.message.SIPMessage: java.util.Hashtable nameTable> = $r5;

     label1:
        $r6 = new gov.nist.javax.sip.header.ContentLength;

        specialinvoke $r6.<gov.nist.javax.sip.header.ContentLength: void <init>(int)>(0);

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void attachHeader(gov.nist.javax.sip.header.SIPHeader,boolean)>($r6, 0);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void attachHeader(gov.nist.javax.sip.header.SIPHeader)
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        gov.nist.javax.sip.header.SIPHeader r1;
        gov.nist.javax.sip.header.SIPHeaderList r2;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r3;
        gov.nist.javax.sip.message.SIPDuplicateHeaderException $r4;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: gov.nist.javax.sip.header.SIPHeader;

        if r1 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null header!");

        throw $r3;

     label1:
        $z0 = r1 instanceof gov.nist.javax.sip.header.SIPHeaderList;

        if $z0 == 0 goto label3;

        r2 = (gov.nist.javax.sip.header.SIPHeaderList) r1;

        $z1 = virtualinvoke r2.<gov.nist.javax.sip.header.SIPHeaderList: boolean isEmpty()>();

        if $z1 == 0 goto label3;

     label2:
        return;

     label3:
        virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void attachHeader(gov.nist.javax.sip.header.SIPHeader,boolean,boolean)>(r1, 0, 0);

     label4:
        goto label6;

     label5:
        $r4 := @caughtexception;

     label6:
        return;

        catch gov.nist.javax.sip.message.SIPDuplicateHeaderException from label1 to label2 with label5;
        catch gov.nist.javax.sip.message.SIPDuplicateHeaderException from label3 to label4 with label5;
    }

    public void setHeader(javax.sip.header.Header)
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        javax.sip.header.Header r1;
        gov.nist.javax.sip.header.SIPHeader r2;
        gov.nist.javax.sip.header.SIPHeaderList r3;
        boolean $z0, $z1;
        java.lang.String $r4;
        java.lang.IllegalArgumentException $r5;
        gov.nist.javax.sip.message.SIPDuplicateHeaderException $r6, r7;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: javax.sip.header.Header;

        r2 = (gov.nist.javax.sip.header.SIPHeader) r1;

        if r2 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null header!");

        throw $r5;

     label1:
        $z0 = r2 instanceof gov.nist.javax.sip.header.SIPHeaderList;

        if $z0 == 0 goto label3;

        r3 = (gov.nist.javax.sip.header.SIPHeaderList) r2;

        $z1 = virtualinvoke r3.<gov.nist.javax.sip.header.SIPHeaderList: boolean isEmpty()>();

        if $z1 == 0 goto label3;

     label2:
        return;

     label3:
        $r4 = virtualinvoke r2.<gov.nist.javax.sip.header.SIPHeader: java.lang.String getHeaderName()>();

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void removeHeader(java.lang.String)>($r4);

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void attachHeader(gov.nist.javax.sip.header.SIPHeader,boolean,boolean)>(r2, 1, 0);

     label4:
        goto label6;

     label5:
        $r6 := @caughtexception;

        r7 = $r6;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>(r7);

     label6:
        return;

        catch gov.nist.javax.sip.message.SIPDuplicateHeaderException from label1 to label2 with label5;
        catch gov.nist.javax.sip.message.SIPDuplicateHeaderException from label3 to label4 with label5;
    }

    public void setHeaders(java.util.List)
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.util.List r1;
        java.util.ListIterator r2;
        gov.nist.javax.sip.header.SIPHeader r3;
        boolean $z0;
        java.lang.Object $r5;
        gov.nist.javax.sip.message.SIPDuplicateHeaderException $r6;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: java.util.List;

        r2 = interfaceinvoke r1.<java.util.List: java.util.ListIterator listIterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.ListIterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r5 = interfaceinvoke r2.<java.util.ListIterator: java.lang.Object next()>();

        r3 = (gov.nist.javax.sip.header.SIPHeader) $r5;

     label2:
        virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void attachHeader(gov.nist.javax.sip.header.SIPHeader,boolean)>(r3, 0);

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

     label5:
        goto label1;

     label6:
        return;

        catch gov.nist.javax.sip.message.SIPDuplicateHeaderException from label2 to label3 with label4;
    }

    public void attachHeader(gov.nist.javax.sip.header.SIPHeader, boolean) throws gov.nist.javax.sip.message.SIPDuplicateHeaderException
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        gov.nist.javax.sip.header.SIPHeader r1;
        boolean z0;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: gov.nist.javax.sip.header.SIPHeader;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void attachHeader(gov.nist.javax.sip.header.SIPHeader,boolean,boolean)>(r1, z0, 0);

        return;
    }

    public void attachHeader(gov.nist.javax.sip.header.SIPHeader, boolean, boolean) throws gov.nist.javax.sip.message.SIPDuplicateHeaderException
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        gov.nist.javax.sip.header.SIPHeader r1, r2, r6, r39;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z13, $z14, $z15, $z16, $z17;
        gov.nist.javax.sip.header.SIPHeaderList r3, $r26, r40;
        gov.nist.javax.sip.header.ContentLength r4, $r17, $r31;
        java.util.Iterator r5;
        java.lang.String $r7, $r9, r37;
        java.util.Hashtable $r8, $r11, $r12, $r20, $r22, $r23, $r30;
        javax.sip.header.Header $r10;
        gov.nist.javax.sip.header.MaxForwards $r14;
        gov.nist.javax.sip.header.CSeq $r15;
        gov.nist.javax.sip.header.CallID $r16;
        gov.nist.javax.sip.header.To $r18;
        java.lang.Object $r19, $r29;
        gov.nist.javax.sip.header.From $r21;
        java.util.concurrent.ConcurrentLinkedQueue $r27, $r28;
        int $i0;
        java.lang.Class $r32, $r33;
        javax.sip.InvalidArgumentException $r35;
        java.lang.NullPointerException $r36;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: gov.nist.javax.sip.header.SIPHeader;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        if r1 != null goto label01;

        $r36 = new java.lang.NullPointerException;

        specialinvoke $r36.<java.lang.NullPointerException: void <init>(java.lang.String)>("null header");

        throw $r36;

     label01:
        $z2 = staticinvoke <gov.nist.javax.sip.message.ListMap: boolean hasList(gov.nist.javax.sip.header.SIPHeader)>(r1);

        if $z2 == 0 goto label02;

        $r33 = class "gov/nist/javax/sip/header/SIPHeaderList";

        $r32 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $z17 = virtualinvoke $r33.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r32);

        if $z17 != 0 goto label02;

        r3 = staticinvoke <gov.nist.javax.sip.message.ListMap: gov.nist.javax.sip.header.SIPHeaderList getList(gov.nist.javax.sip.header.SIPHeader)>(r1);

        virtualinvoke r3.<gov.nist.javax.sip.header.SIPHeaderList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r1);

        r2 = r3;

        goto label03;

     label02:
        r2 = r1;

     label03:
        $r7 = virtualinvoke r2.<gov.nist.javax.sip.header.SIPHeader: java.lang.String getName()>();

        r37 = staticinvoke <gov.nist.javax.sip.header.SIPHeaderNamesCache: java.lang.String toLowerCase(java.lang.String)>($r7);

        if z0 == 0 goto label04;

        $r30 = r0.<gov.nist.javax.sip.message.SIPMessage: java.util.Hashtable nameTable>;

        virtualinvoke $r30.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r37);

        goto label09;

     label04:
        $r8 = r0.<gov.nist.javax.sip.message.SIPMessage: java.util.Hashtable nameTable>;

        $z3 = virtualinvoke $r8.<java.util.Hashtable: boolean containsKey(java.lang.Object)>(r37);

        if $z3 == 0 goto label09;

        $z14 = r2 instanceof gov.nist.javax.sip.header.SIPHeaderList;

        if $z14 != 0 goto label09;

        $z16 = r2 instanceof gov.nist.javax.sip.header.ContentLength;

        if $z16 == 0 goto label08;

     label05:
        r4 = (gov.nist.javax.sip.header.ContentLength) r2;

        $r31 = r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ContentLength contentLengthHeader>;

        $i0 = virtualinvoke r4.<gov.nist.javax.sip.header.ContentLength: int getContentLength()>();

        virtualinvoke $r31.<gov.nist.javax.sip.header.ContentLength: void setContentLength(int)>($i0);

     label06:
        goto label08;

     label07:
        $r35 := @caughtexception;

     label08:
        return;

     label09:
        $r9 = virtualinvoke r1.<gov.nist.javax.sip.header.SIPHeader: java.lang.String getName()>();

        $r10 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.Header getHeader(java.lang.String)>($r9);

        r39 = (gov.nist.javax.sip.header.SIPHeader) $r10;

        if r39 == null goto label12;

        $r27 = r0.<gov.nist.javax.sip.message.SIPMessage: java.util.concurrent.ConcurrentLinkedQueue headers>;

        r5 = virtualinvoke $r27.<java.util.concurrent.ConcurrentLinkedQueue: java.util.Iterator iterator()>();

     label10:
        $z15 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z15 == 0 goto label12;

        $r29 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (gov.nist.javax.sip.header.SIPHeader) $r29;

        $z13 = virtualinvoke r6.<gov.nist.javax.sip.header.SIPHeader: boolean equals(java.lang.Object)>(r39);

        if $z13 == 0 goto label11;

        interfaceinvoke r5.<java.util.Iterator: void remove()>();

     label11:
        goto label10;

     label12:
        $r11 = r0.<gov.nist.javax.sip.message.SIPMessage: java.util.Hashtable nameTable>;

        $z4 = virtualinvoke $r11.<java.util.Hashtable: boolean containsKey(java.lang.Object)>(r37);

        if $z4 != 0 goto label13;

        $r23 = r0.<gov.nist.javax.sip.message.SIPMessage: java.util.Hashtable nameTable>;

        virtualinvoke $r23.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r37, r2);

        $r28 = r0.<gov.nist.javax.sip.message.SIPMessage: java.util.concurrent.ConcurrentLinkedQueue headers>;

        virtualinvoke $r28.<java.util.concurrent.ConcurrentLinkedQueue: boolean add(java.lang.Object)>(r2);

        goto label17;

     label13:
        $z5 = r2 instanceof gov.nist.javax.sip.header.SIPHeaderList;

        if $z5 == 0 goto label16;

        $r22 = r0.<gov.nist.javax.sip.message.SIPMessage: java.util.Hashtable nameTable>;

        $r19 = virtualinvoke $r22.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r37);

        r40 = (gov.nist.javax.sip.header.SIPHeaderList) $r19;

        if r40 == null goto label14;

        $r26 = (gov.nist.javax.sip.header.SIPHeaderList) r2;

        virtualinvoke r40.<gov.nist.javax.sip.header.SIPHeaderList: void concatenate(gov.nist.javax.sip.header.SIPHeaderList,boolean)>($r26, z1);

        goto label15;

     label14:
        $r20 = r0.<gov.nist.javax.sip.message.SIPMessage: java.util.Hashtable nameTable>;

        virtualinvoke $r20.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r37, r2);

     label15:
        goto label17;

     label16:
        $r12 = r0.<gov.nist.javax.sip.message.SIPMessage: java.util.Hashtable nameTable>;

        virtualinvoke $r12.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r37, r2);

     label17:
        $z6 = r2 instanceof gov.nist.javax.sip.header.From;

        if $z6 == 0 goto label18;

        $r21 = (gov.nist.javax.sip.header.From) r2;

        r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.From fromHeader> = $r21;

        goto label23;

     label18:
        $z8 = r2 instanceof gov.nist.javax.sip.header.ContentLength;

        if $z8 == 0 goto label19;

        $r17 = (gov.nist.javax.sip.header.ContentLength) r2;

        r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ContentLength contentLengthHeader> = $r17;

        goto label23;

     label19:
        $z7 = r2 instanceof gov.nist.javax.sip.header.To;

        if $z7 == 0 goto label20;

        $r18 = (gov.nist.javax.sip.header.To) r2;

        r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.To toHeader> = $r18;

        goto label23;

     label20:
        $z10 = r2 instanceof gov.nist.javax.sip.header.CSeq;

        if $z10 == 0 goto label21;

        $r15 = (gov.nist.javax.sip.header.CSeq) r2;

        r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.CSeq cSeqHeader> = $r15;

        goto label23;

     label21:
        $z9 = r2 instanceof gov.nist.javax.sip.header.CallID;

        if $z9 == 0 goto label22;

        $r16 = (gov.nist.javax.sip.header.CallID) r2;

        r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.CallID callIdHeader> = $r16;

        goto label23;

     label22:
        $z11 = r2 instanceof gov.nist.javax.sip.header.MaxForwards;

        if $z11 == 0 goto label23;

        $r14 = (gov.nist.javax.sip.header.MaxForwards) r2;

        r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.MaxForwards maxForwardsHeader> = $r14;

     label23:
        return;

        catch javax.sip.InvalidArgumentException from label05 to label06 with label07;
    }

    public void removeHeader(java.lang.String, boolean)
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.lang.String r1, r2, $r13, $r18;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        gov.nist.javax.sip.header.SIPHeader r3, r6, r20;
        gov.nist.javax.sip.header.SIPHeaderList r4;
        java.util.Iterator r5, r19;
        java.util.Hashtable $r7, $r9, $r16;
        java.lang.Object $r8, $r12, $r17;
        java.util.concurrent.ConcurrentLinkedQueue $r11, $r14;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r2 = staticinvoke <gov.nist.javax.sip.header.SIPHeaderNamesCache: java.lang.String toLowerCase(java.lang.String)>(r1);

        $r7 = r0.<gov.nist.javax.sip.message.SIPMessage: java.util.Hashtable nameTable>;

        $r8 = virtualinvoke $r7.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r2);

        r3 = (gov.nist.javax.sip.header.SIPHeader) $r8;

        if r3 != null goto label01;

        return;

     label01:
        $z1 = r3 instanceof gov.nist.javax.sip.header.SIPHeaderList;

        if $z1 == 0 goto label08;

        r4 = (gov.nist.javax.sip.header.SIPHeaderList) r3;

        if z0 == 0 goto label02;

        virtualinvoke r4.<gov.nist.javax.sip.header.SIPHeaderList: void removeFirst()>();

        goto label03;

     label02:
        virtualinvoke r4.<gov.nist.javax.sip.header.SIPHeaderList: void removeLast()>();

     label03:
        $z10 = virtualinvoke r4.<gov.nist.javax.sip.header.SIPHeaderList: boolean isEmpty()>();

        if $z10 == 0 goto label07;

        $r14 = r0.<gov.nist.javax.sip.message.SIPMessage: java.util.concurrent.ConcurrentLinkedQueue headers>;

        r5 = virtualinvoke $r14.<java.util.concurrent.ConcurrentLinkedQueue: java.util.Iterator iterator()>();

     label04:
        $z11 = interfaceinvoke r5.<java.util.Iterator: boolean hasNext()>();

        if $z11 == 0 goto label06;

        $r17 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        r6 = (gov.nist.javax.sip.header.SIPHeader) $r17;

        $r18 = virtualinvoke r6.<gov.nist.javax.sip.header.SIPHeader: java.lang.String getName()>();

        $z12 = virtualinvoke $r18.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z12 == 0 goto label05;

        interfaceinvoke r5.<java.util.Iterator: void remove()>();

     label05:
        goto label04;

     label06:
        $r16 = r0.<gov.nist.javax.sip.message.SIPMessage: java.util.Hashtable nameTable>;

        virtualinvoke $r16.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r2);

     label07:
        goto label17;

     label08:
        $r9 = r0.<gov.nist.javax.sip.message.SIPMessage: java.util.Hashtable nameTable>;

        virtualinvoke $r9.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r2);

        $z2 = r3 instanceof gov.nist.javax.sip.header.From;

        if $z2 == 0 goto label09;

        r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.From fromHeader> = null;

        goto label14;

     label09:
        $z3 = r3 instanceof gov.nist.javax.sip.header.To;

        if $z3 == 0 goto label10;

        r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.To toHeader> = null;

        goto label14;

     label10:
        $z5 = r3 instanceof gov.nist.javax.sip.header.CSeq;

        if $z5 == 0 goto label11;

        r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.CSeq cSeqHeader> = null;

        goto label14;

     label11:
        $z4 = r3 instanceof gov.nist.javax.sip.header.CallID;

        if $z4 == 0 goto label12;

        r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.CallID callIdHeader> = null;

        goto label14;

     label12:
        $z7 = r3 instanceof gov.nist.javax.sip.header.MaxForwards;

        if $z7 == 0 goto label13;

        r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.MaxForwards maxForwardsHeader> = null;

        goto label14;

     label13:
        $z6 = r3 instanceof gov.nist.javax.sip.header.ContentLength;

        if $z6 == 0 goto label14;

        r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ContentLength contentLengthHeader> = null;

     label14:
        $r11 = r0.<gov.nist.javax.sip.message.SIPMessage: java.util.concurrent.ConcurrentLinkedQueue headers>;

        r19 = virtualinvoke $r11.<java.util.concurrent.ConcurrentLinkedQueue: java.util.Iterator iterator()>();

     label15:
        $z8 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label17;

        $r12 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();

        r20 = (gov.nist.javax.sip.header.SIPHeader) $r12;

        $r13 = virtualinvoke r20.<gov.nist.javax.sip.header.SIPHeader: java.lang.String getName()>();

        $z9 = virtualinvoke $r13.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r1);

        if $z9 == 0 goto label16;

        interfaceinvoke r19.<java.util.Iterator: void remove()>();

     label16:
        goto label15;

     label17:
        return;
    }

    public void removeHeader(java.lang.String)
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.lang.String r1, r2, $r9;
        gov.nist.javax.sip.header.SIPHeader r3, r5;
        java.util.Iterator r4;
        java.util.Hashtable $r6;
        java.lang.Object $r7, $r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.util.concurrent.ConcurrentLinkedQueue $r8;
        java.lang.NullPointerException $r11;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label01;

        $r11 = new java.lang.NullPointerException;

        specialinvoke $r11.<java.lang.NullPointerException: void <init>(java.lang.String)>("null arg");

        throw $r11;

     label01:
        r2 = staticinvoke <gov.nist.javax.sip.header.SIPHeaderNamesCache: java.lang.String toLowerCase(java.lang.String)>(r1);

        $r6 = r0.<gov.nist.javax.sip.message.SIPMessage: java.util.Hashtable nameTable>;

        $r7 = virtualinvoke $r6.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r2);

        r3 = (gov.nist.javax.sip.header.SIPHeader) $r7;

        if r3 != null goto label02;

        return;

     label02:
        $z0 = r3 instanceof gov.nist.javax.sip.header.From;

        if $z0 == 0 goto label03;

        r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.From fromHeader> = null;

        goto label08;

     label03:
        $z1 = r3 instanceof gov.nist.javax.sip.header.To;

        if $z1 == 0 goto label04;

        r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.To toHeader> = null;

        goto label08;

     label04:
        $z2 = r3 instanceof gov.nist.javax.sip.header.CSeq;

        if $z2 == 0 goto label05;

        r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.CSeq cSeqHeader> = null;

        goto label08;

     label05:
        $z3 = r3 instanceof gov.nist.javax.sip.header.CallID;

        if $z3 == 0 goto label06;

        r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.CallID callIdHeader> = null;

        goto label08;

     label06:
        $z4 = r3 instanceof gov.nist.javax.sip.header.MaxForwards;

        if $z4 == 0 goto label07;

        r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.MaxForwards maxForwardsHeader> = null;

        goto label08;

     label07:
        $z5 = r3 instanceof gov.nist.javax.sip.header.ContentLength;

        if $z5 == 0 goto label08;

        r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ContentLength contentLengthHeader> = null;

     label08:
        $r8 = r0.<gov.nist.javax.sip.message.SIPMessage: java.util.concurrent.ConcurrentLinkedQueue headers>;

        r4 = virtualinvoke $r8.<java.util.concurrent.ConcurrentLinkedQueue: java.util.Iterator iterator()>();

     label09:
        $z6 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label11;

        $r10 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (gov.nist.javax.sip.header.SIPHeader) $r10;

        $r9 = virtualinvoke r5.<gov.nist.javax.sip.header.SIPHeader: java.lang.String getName()>();

        $z7 = virtualinvoke $r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z7 == 0 goto label10;

        interfaceinvoke r4.<java.util.Iterator: void remove()>();

     label10:
        goto label09;

     label11:
        return;
    }

    public java.lang.String getTransactionId()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        gov.nist.javax.sip.header.Via r1;
        java.lang.StringBuffer r2, $r7, $r11, $r14, $r15, $r33, $r35, $r41;
        gov.nist.javax.sip.header.From r3;
        gov.nist.javax.sip.header.To r4;
        java.lang.String r5, $r16, $r20, $r21, $r23, $r24, $r26, $r27, $r29, $r31, $r39, $r40, $r43, $r44, $r45, $r46, $r47, $r50, $r52, $r54, $r56;
        gov.nist.javax.sip.header.ViaList $r6, $r57;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        javax.sip.header.FromHeader $r8;
        javax.sip.header.ToHeader $r9;
        gov.nist.javax.sip.header.CallID $r10;
        int $i0;
        gov.nist.javax.sip.header.CSeq $r13, $r17;
        javax.sip.header.CSeqHeader $r18, $r42, $r55;
        java.lang.StringBuilder $r22, $r25, $r30, $r48, $r49, $r51, $r53;
        gov.nist.core.HostPort $r34, $r37;
        javax.sip.header.Header $r58;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 = null;

        $r6 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ViaList getViaHeaders()>();

        $z0 = virtualinvoke $r6.<gov.nist.javax.sip.header.ViaList: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r57 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ViaList getViaHeaders()>();

        $r58 = virtualinvoke $r57.<gov.nist.javax.sip.header.ViaList: javax.sip.header.Header getFirst()>();

        r1 = (gov.nist.javax.sip.header.Via) $r58;

     label1:
        if r1 == null goto label3;

        $r39 = virtualinvoke r1.<gov.nist.javax.sip.header.Via: java.lang.String getBranch()>();

        if $r39 == null goto label3;

        $r44 = virtualinvoke r1.<gov.nist.javax.sip.header.Via: java.lang.String getBranch()>();

        $r43 = virtualinvoke $r44.<java.lang.String: java.lang.String toUpperCase()>();

        $z4 = virtualinvoke $r43.<java.lang.String: boolean startsWith(java.lang.String)>("Z9HG4BK");

        if $z4 == 0 goto label3;

        $r42 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CSeqHeader getCSeq()>();

        $r47 = interfaceinvoke $r42.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        $z5 = virtualinvoke $r47.<java.lang.String: boolean equals(java.lang.Object)>("CANCEL");

        if $z5 == 0 goto label2;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke r1.<gov.nist.javax.sip.header.Via: java.lang.String getBranch()>();

        $r49 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r48 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r55 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CSeqHeader getCSeq()>();

        $r54 = interfaceinvoke $r55.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        $r53 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        $r52 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();

        $r56 = virtualinvoke $r52.<java.lang.String: java.lang.String toLowerCase()>();

        return $r56;

     label2:
        $r46 = virtualinvoke r1.<gov.nist.javax.sip.header.Via: java.lang.String getBranch()>();

        $r45 = virtualinvoke $r46.<java.lang.String: java.lang.String toLowerCase()>();

        return $r45;

     label3:
        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        r2 = $r7;

        $r8 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.FromHeader getFrom()>();

        r3 = (gov.nist.javax.sip.header.From) $r8;

        $r9 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ToHeader getTo()>();

        r4 = (gov.nist.javax.sip.header.To) $r9;

        $z1 = virtualinvoke r3.<gov.nist.javax.sip.header.From: boolean hasTag()>();

        if $z1 == 0 goto label4;

        $r40 = virtualinvoke r3.<gov.nist.javax.sip.header.From: java.lang.String getTag()>();

        $r41 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r40);

        virtualinvoke $r41.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("-");

     label4:
        $r10 = r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.CallID callIdHeader>;

        r5 = virtualinvoke $r10.<gov.nist.javax.sip.header.CallID: java.lang.String getCallId()>();

        $r11 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("-");

        $r13 = r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.CSeq cSeqHeader>;

        $i0 = virtualinvoke $r13.<gov.nist.javax.sip.header.CSeq: int getSequenceNumber()>();

        $r15 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r14 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("-");

        $r17 = r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.CSeq cSeqHeader>;

        $r16 = virtualinvoke $r17.<gov.nist.javax.sip.header.CSeq: java.lang.String getMethod()>();

        virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        if r1 == null goto label5;

        $r33 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("-");

        $r34 = virtualinvoke r1.<gov.nist.javax.sip.header.Via: gov.nist.core.HostPort getSentBy()>();

        $r31 = virtualinvoke $r34.<gov.nist.core.HostPort: java.lang.String encode()>();

        virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r31);

        $r37 = virtualinvoke r1.<gov.nist.javax.sip.header.Via: gov.nist.core.HostPort getSentBy()>();

        $z3 = virtualinvoke $r37.<gov.nist.core.HostPort: boolean hasPort()>();

        if $z3 != 0 goto label5;

        $r35 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("-");

        virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(5060);

     label5:
        $r18 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CSeqHeader getCSeq()>();

        $r20 = interfaceinvoke $r18.<javax.sip.header.CSeqHeader: java.lang.String getMethod()>();

        $z2 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>("CANCEL");

        if $z2 == 0 goto label6;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("CANCEL");

     label6:
        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r24 = virtualinvoke $r21.<java.lang.String: java.lang.String toLowerCase()>();

        $r23 = virtualinvoke $r24.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>(":", "-");

        $r26 = virtualinvoke $r23.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("@", "-");

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r29 = staticinvoke <gov.nist.javax.sip.Utils: java.lang.String getSignature()>();

        $r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r27 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r27;
    }

    public int hashCode()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        gov.nist.javax.sip.header.CallID $r1, $r2;
        java.lang.String $r3;
        int $i0;
        java.lang.RuntimeException $r4;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        $r1 = r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.CallID callIdHeader>;

        if $r1 != null goto label1;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Invalid message! Cannot compute hashcode! call-id header is missing !");

        throw $r4;

     label1:
        $r2 = r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.CallID callIdHeader>;

        $r3 = virtualinvoke $r2.<gov.nist.javax.sip.header.CallID: java.lang.String getCallId()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int hashCode()>();

        return $i0;
    }

    public boolean hasContent()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.lang.String $r1;
        byte[] $r2;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        $r1 = r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String messageContent>;

        if $r1 != null goto label1;

        $r2 = r0.<gov.nist.javax.sip.message.SIPMessage: byte[] messageContentBytes>;

        if $r2 == null goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public java.util.Iterator getHeaders()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.util.concurrent.ConcurrentLinkedQueue $r1;
        java.util.Iterator $r2;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        $r1 = r0.<gov.nist.javax.sip.message.SIPMessage: java.util.concurrent.ConcurrentLinkedQueue headers>;

        $r2 = virtualinvoke $r1.<java.util.concurrent.ConcurrentLinkedQueue: java.util.Iterator iterator()>();

        return $r2;
    }

    public javax.sip.header.Header getHeader(java.lang.String)
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.lang.String r1, $r2;
        javax.sip.header.Header $r3;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <gov.nist.javax.sip.header.SIPHeaderNamesCache: java.lang.String toLowerCase(java.lang.String)>(r1);

        $r3 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.Header getHeaderLowerCase(java.lang.String)>($r2);

        return $r3;
    }

    private javax.sip.header.Header getHeaderLowerCase(java.lang.String)
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.lang.String r1;
        gov.nist.javax.sip.header.SIPHeader r2;
        java.util.Hashtable $r3;
        java.lang.Object $r4;
        boolean $z0;
        gov.nist.javax.sip.header.SIPHeaderList $r5;
        javax.sip.header.Header $r6;
        java.lang.NullPointerException $r7;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r7 = new java.lang.NullPointerException;

        specialinvoke $r7.<java.lang.NullPointerException: void <init>(java.lang.String)>("bad name");

        throw $r7;

     label1:
        $r3 = r0.<gov.nist.javax.sip.message.SIPMessage: java.util.Hashtable nameTable>;

        $r4 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        r2 = (gov.nist.javax.sip.header.SIPHeader) $r4;

        $z0 = r2 instanceof gov.nist.javax.sip.header.SIPHeaderList;

        if $z0 == 0 goto label2;

        $r5 = (gov.nist.javax.sip.header.SIPHeaderList) r2;

        $r6 = virtualinvoke $r5.<gov.nist.javax.sip.header.SIPHeaderList: javax.sip.header.Header getFirst()>();

        return $r6;

     label2:
        return r2;
    }

    public gov.nist.javax.sip.header.ContentType getContentTypeHeader()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.lang.String $r1;
        javax.sip.header.Header $r2;
        gov.nist.javax.sip.header.ContentType $r3;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        $r1 = <gov.nist.javax.sip.message.SIPMessage: java.lang.String CONTENT_TYPE_LOWERCASE>;

        $r2 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.Header getHeaderLowerCase(java.lang.String)>($r1);

        $r3 = (gov.nist.javax.sip.header.ContentType) $r2;

        return $r3;
    }

    public javax.sip.header.ContentLengthHeader getContentLengthHeader()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        javax.sip.header.ContentLengthHeader $r1;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        $r1 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ContentLengthHeader getContentLength()>();

        return $r1;
    }

    public javax.sip.header.FromHeader getFrom()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        gov.nist.javax.sip.header.From $r1;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        $r1 = r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.From fromHeader>;

        return $r1;
    }

    public gov.nist.javax.sip.header.ErrorInfoList getErrorInfoHeaders()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.lang.String $r1;
        gov.nist.javax.sip.header.SIPHeader $r2;
        gov.nist.javax.sip.header.ErrorInfoList $r3;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        $r1 = <gov.nist.javax.sip.message.SIPMessage: java.lang.String ERROR_LOWERCASE>;

        $r2 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.SIPHeader getSIPHeaderListLowerCase(java.lang.String)>($r1);

        $r3 = (gov.nist.javax.sip.header.ErrorInfoList) $r2;

        return $r3;
    }

    public gov.nist.javax.sip.header.ContactList getContactHeaders()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.lang.String $r1;
        gov.nist.javax.sip.header.SIPHeader $r2;
        gov.nist.javax.sip.header.ContactList $r3;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        $r1 = <gov.nist.javax.sip.message.SIPMessage: java.lang.String CONTACT_LOWERCASE>;

        $r2 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.SIPHeader getSIPHeaderListLowerCase(java.lang.String)>($r1);

        $r3 = (gov.nist.javax.sip.header.ContactList) $r2;

        return $r3;
    }

    public gov.nist.javax.sip.header.Contact getContactHeader()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        gov.nist.javax.sip.header.ContactList r1;
        javax.sip.header.Header $r2;
        gov.nist.javax.sip.header.Contact $r3;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ContactList getContactHeaders()>();

        if r1 == null goto label1;

        $r2 = virtualinvoke r1.<gov.nist.javax.sip.header.ContactList: javax.sip.header.Header getFirst()>();

        $r3 = (gov.nist.javax.sip.header.Contact) $r2;

        return $r3;

     label1:
        return null;
    }

    public gov.nist.javax.sip.header.ViaList getViaHeaders()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.lang.String $r1;
        gov.nist.javax.sip.header.SIPHeader $r2;
        gov.nist.javax.sip.header.ViaList $r3;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        $r1 = <gov.nist.javax.sip.message.SIPMessage: java.lang.String VIA_LOWERCASE>;

        $r2 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.SIPHeader getSIPHeaderListLowerCase(java.lang.String)>($r1);

        $r3 = (gov.nist.javax.sip.header.ViaList) $r2;

        return $r3;
    }

    public void setVia(java.util.List)
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.util.List r1;
        gov.nist.javax.sip.header.ViaList r2, $r5;
        java.util.ListIterator r3;
        gov.nist.javax.sip.header.Via r4;
        boolean $z0;
        java.lang.Object $r6;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: java.util.List;

        $r5 = new gov.nist.javax.sip.header.ViaList;

        specialinvoke $r5.<gov.nist.javax.sip.header.ViaList: void <init>()>();

        r2 = $r5;

        r3 = interfaceinvoke r1.<java.util.List: java.util.ListIterator listIterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.ListIterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r3.<java.util.ListIterator: java.lang.Object next()>();

        r4 = (gov.nist.javax.sip.header.Via) $r6;

        virtualinvoke r2.<gov.nist.javax.sip.header.ViaList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r4);

        goto label1;

     label2:
        virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void setHeader(gov.nist.javax.sip.header.SIPHeaderList)>(r2);

        return;
    }

    public void setHeader(gov.nist.javax.sip.header.SIPHeaderList)
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        gov.nist.javax.sip.header.SIPHeaderList r1;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: gov.nist.javax.sip.header.SIPHeaderList;

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void setHeader(javax.sip.header.Header)>(r1);

        return;
    }

    public gov.nist.javax.sip.header.Via getTopmostVia()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        gov.nist.javax.sip.header.ViaList $r1, $r2;
        javax.sip.header.Header $r3;
        gov.nist.javax.sip.header.Via $r4, $r5;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        $r1 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ViaList getViaHeaders()>();

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ViaList getViaHeaders()>();

        $r3 = virtualinvoke $r2.<gov.nist.javax.sip.header.ViaList: javax.sip.header.Header getFirst()>();

        $r4 = (gov.nist.javax.sip.header.Via) $r3;

        $r5 = (gov.nist.javax.sip.header.Via) $r4;

        return $r5;
    }

    public javax.sip.header.CSeqHeader getCSeq()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        gov.nist.javax.sip.header.CSeq $r1;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        $r1 = r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.CSeq cSeqHeader>;

        return $r1;
    }

    public gov.nist.javax.sip.header.Authorization getAuthorization()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.lang.String $r1;
        javax.sip.header.Header $r2;
        gov.nist.javax.sip.header.Authorization $r3;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        $r1 = <gov.nist.javax.sip.message.SIPMessage: java.lang.String AUTHORIZATION_LOWERCASE>;

        $r2 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.Header getHeaderLowerCase(java.lang.String)>($r1);

        $r3 = (gov.nist.javax.sip.header.Authorization) $r2;

        return $r3;
    }

    public javax.sip.header.MaxForwardsHeader getMaxForwards()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        gov.nist.javax.sip.header.MaxForwards $r1;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        $r1 = r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.MaxForwards maxForwardsHeader>;

        return $r1;
    }

    public void setMaxForwards(javax.sip.header.MaxForwardsHeader)
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        javax.sip.header.MaxForwardsHeader r1;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: javax.sip.header.MaxForwardsHeader;

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void setHeader(javax.sip.header.Header)>(r1);

        return;
    }

    public gov.nist.javax.sip.header.RouteList getRouteHeaders()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.lang.String $r1;
        gov.nist.javax.sip.header.SIPHeader $r2;
        gov.nist.javax.sip.header.RouteList $r3;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        $r1 = <gov.nist.javax.sip.message.SIPMessage: java.lang.String ROUTE_LOWERCASE>;

        $r2 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.SIPHeader getSIPHeaderListLowerCase(java.lang.String)>($r1);

        $r3 = (gov.nist.javax.sip.header.RouteList) $r2;

        return $r3;
    }

    public javax.sip.header.CallIdHeader getCallId()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        gov.nist.javax.sip.header.CallID $r1;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        $r1 = r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.CallID callIdHeader>;

        return $r1;
    }

    public void setCallId(javax.sip.header.CallIdHeader)
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        javax.sip.header.CallIdHeader r1;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: javax.sip.header.CallIdHeader;

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void setHeader(javax.sip.header.Header)>(r1);

        return;
    }

    public void setCallId(java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.lang.String r1;
        gov.nist.javax.sip.header.CallID $r2, $r3, $r4;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.CallID callIdHeader>;

        if $r2 != null goto label1;

        $r4 = new gov.nist.javax.sip.header.CallID;

        specialinvoke $r4.<gov.nist.javax.sip.header.CallID: void <init>()>();

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void setHeader(javax.sip.header.Header)>($r4);

     label1:
        $r3 = r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.CallID callIdHeader>;

        virtualinvoke $r3.<gov.nist.javax.sip.header.CallID: void setCallId(java.lang.String)>(r1);

        return;
    }

    public gov.nist.javax.sip.header.RecordRouteList getRecordRouteHeaders()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.lang.String $r1;
        gov.nist.javax.sip.header.SIPHeader $r2;
        gov.nist.javax.sip.header.RecordRouteList $r3;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        $r1 = <gov.nist.javax.sip.message.SIPMessage: java.lang.String RECORDROUTE_LOWERCASE>;

        $r2 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.SIPHeader getSIPHeaderListLowerCase(java.lang.String)>($r1);

        $r3 = (gov.nist.javax.sip.header.RecordRouteList) $r2;

        return $r3;
    }

    public javax.sip.header.ToHeader getTo()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        gov.nist.javax.sip.header.To $r1;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        $r1 = r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.To toHeader>;

        return $r1;
    }

    public void setTo(javax.sip.header.ToHeader)
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        javax.sip.header.ToHeader r1;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: javax.sip.header.ToHeader;

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void setHeader(javax.sip.header.Header)>(r1);

        return;
    }

    public void setFrom(javax.sip.header.FromHeader)
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        javax.sip.header.FromHeader r1;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: javax.sip.header.FromHeader;

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void setHeader(javax.sip.header.Header)>(r1);

        return;
    }

    public javax.sip.header.ContentLengthHeader getContentLength()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        gov.nist.javax.sip.header.ContentLength $r1;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        $r1 = r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ContentLength contentLengthHeader>;

        return $r1;
    }

    public java.lang.String getMessageContent() throws java.io.UnsupportedEncodingException
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.lang.String $r1, $r2, $r3, $r4, $r6;
        byte[] $r5, $r7;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        $r1 = r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String messageContent>;

        if $r1 != null goto label1;

        $r7 = r0.<gov.nist.javax.sip.message.SIPMessage: byte[] messageContentBytes>;

        if $r7 != null goto label1;

        return null;

     label1:
        $r2 = r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String messageContent>;

        if $r2 != null goto label2;

        $r4 = new java.lang.String;

        $r5 = r0.<gov.nist.javax.sip.message.SIPMessage: byte[] messageContentBytes>;

        $r6 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String getCharset()>();

        specialinvoke $r4.<java.lang.String: void <init>(byte[],java.lang.String)>($r5, $r6);

        r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String messageContent> = $r4;

     label2:
        $r3 = r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String messageContent>;

        return $r3;
    }

    public byte[] getRawContent()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.lang.String r1, $r4, $r6, $r7, $r10;
        byte[] $r2, $r5, $r8, $r11;
        java.lang.Object $r3, $r9;
        java.io.UnsupportedEncodingException $r12, r13;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

     label1:
        $r2 = r0.<gov.nist.javax.sip.message.SIPMessage: byte[] messageContentBytes>;

        if $r2 == null goto label2;

        goto label4;

     label2:
        $r3 = r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.Object messageContentObject>;

        if $r3 == null goto label3;

        $r9 = r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.Object messageContentObject>;

        r1 = virtualinvoke $r9.<java.lang.Object: java.lang.String toString()>();

        $r10 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String getCharset()>();

        $r11 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.lang.String)>($r10);

        r0.<gov.nist.javax.sip.message.SIPMessage: byte[] messageContentBytes> = $r11;

        goto label4;

     label3:
        $r4 = r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String messageContent>;

        if $r4 == null goto label4;

        $r6 = r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String messageContent>;

        $r7 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String getCharset()>();

        $r8 = virtualinvoke $r6.<java.lang.String: byte[] getBytes(java.lang.String)>($r7);

        r0.<gov.nist.javax.sip.message.SIPMessage: byte[] messageContentBytes> = $r8;

     label4:
        $r5 = r0.<gov.nist.javax.sip.message.SIPMessage: byte[] messageContentBytes>;

     label5:
        return $r5;

     label6:
        $r12 := @caughtexception;

        r13 = $r12;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>(r13);

        return null;

        catch java.io.UnsupportedEncodingException from label1 to label5 with label6;
    }

    public void setMessageContent(java.lang.String, java.lang.String, java.lang.String)
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.lang.String r1, r2, r3;
        gov.nist.javax.sip.header.ContentType r4, $r5;
        java.lang.IllegalArgumentException $r6;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        if r3 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("messgeContent is null");

        throw $r6;

     label1:
        $r5 = new gov.nist.javax.sip.header.ContentType;

        specialinvoke $r5.<gov.nist.javax.sip.header.ContentType: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        r4 = $r5;

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void setHeader(javax.sip.header.Header)>(r4);

        r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String messageContent> = r3;

        r0.<gov.nist.javax.sip.message.SIPMessage: byte[] messageContentBytes> = null;

        r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.Object messageContentObject> = null;

        specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void computeContentLength(java.lang.Object)>(r3);

        return;
    }

    public void setContent(java.lang.Object, javax.sip.header.ContentTypeHeader) throws java.text.ParseException
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.lang.Object r1;
        javax.sip.header.ContentTypeHeader r2;
        boolean $z0, $z1;
        byte[] $r3, $r4;
        java.lang.String $r5;
        java.lang.NullPointerException $r6;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: javax.sip.header.ContentTypeHeader;

        if r1 != null goto label1;

        $r6 = new java.lang.NullPointerException;

        specialinvoke $r6.<java.lang.NullPointerException: void <init>(java.lang.String)>("null content");

        throw $r6;

     label1:
        virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void setHeader(javax.sip.header.Header)>(r2);

        r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String messageContent> = null;

        r0.<gov.nist.javax.sip.message.SIPMessage: byte[] messageContentBytes> = null;

        r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.Object messageContentObject> = null;

        $z0 = r1 instanceof java.lang.String;

        if $z0 == 0 goto label2;

        $r5 = (java.lang.String) r1;

        r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String messageContent> = $r5;

        goto label4;

     label2:
        $z1 = r1 instanceof byte[];

        if $z1 == 0 goto label3;

        $r3 = (byte[]) r1;

        $r4 = (byte[]) $r3;

        r0.<gov.nist.javax.sip.message.SIPMessage: byte[] messageContentBytes> = $r4;

        goto label4;

     label3:
        r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.Object messageContentObject> = r1;

     label4:
        specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void computeContentLength(java.lang.Object)>(r1);

        return;
    }

    public java.lang.Object getContent()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.lang.Object $r1, $r6;
        java.lang.String $r2, $r5;
        byte[] $r3, $r4;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        $r1 = r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.Object messageContentObject>;

        if $r1 == null goto label1;

        $r6 = r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.Object messageContentObject>;

        return $r6;

     label1:
        $r2 = r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String messageContent>;

        if $r2 == null goto label2;

        $r5 = r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String messageContent>;

        return $r5;

     label2:
        $r3 = r0.<gov.nist.javax.sip.message.SIPMessage: byte[] messageContentBytes>;

        if $r3 == null goto label3;

        $r4 = r0.<gov.nist.javax.sip.message.SIPMessage: byte[] messageContentBytes>;

        return $r4;

     label3:
        return null;
    }

    public void setMessageContent(java.lang.String, java.lang.String, byte[])
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.lang.String r1, r2;
        byte[] r3;
        gov.nist.javax.sip.header.ContentType r4, $r5;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: byte[];

        $r5 = new gov.nist.javax.sip.header.ContentType;

        specialinvoke $r5.<gov.nist.javax.sip.header.ContentType: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        r4 = $r5;

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void setHeader(javax.sip.header.Header)>(r4);

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void setMessageContent(byte[])>(r3);

        specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void computeContentLength(java.lang.Object)>(r3);

        return;
    }

    public void setMessageContent(java.lang.String, boolean, boolean, int) throws java.text.ParseException
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.lang.String r1, $r10;
        boolean z0, z1;
        int i0, $i1, $i2, $i3;
        gov.nist.javax.sip.header.ContentLength $r2, $r6, $r11;
        java.text.ParseException $r3;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r9;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        i0 := @parameter3: int;

        specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void computeContentLength(java.lang.Object)>(r1);

        if z1 != 0 goto label3;

        if z0 != 0 goto label1;

        $r11 = r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ContentLength contentLengthHeader>;

        $i3 = virtualinvoke $r11.<gov.nist.javax.sip.header.ContentLength: int getContentLength()>();

        if $i3 != i0 goto label2;

     label1:
        $r2 = r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ContentLength contentLengthHeader>;

        $i1 = virtualinvoke $r2.<gov.nist.javax.sip.header.ContentLength: int getContentLength()>();

        if $i1 >= i0 goto label3;

     label2:
        $r3 = new java.text.ParseException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid content length ");

        $r6 = r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ContentLength contentLengthHeader>;

        $i2 = virtualinvoke $r6.<gov.nist.javax.sip.header.ContentLength: int getContentLength()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" / ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.text.ParseException: void <init>(java.lang.String,int)>($r10, 0);

        throw $r3;

     label3:
        r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String messageContent> = r1;

        r0.<gov.nist.javax.sip.message.SIPMessage: byte[] messageContentBytes> = null;

        r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.Object messageContentObject> = null;

        return;
    }

    public void setMessageContent(byte[])
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        byte[] r1;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: byte[];

        specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void computeContentLength(java.lang.Object)>(r1);

        r0.<gov.nist.javax.sip.message.SIPMessage: byte[] messageContentBytes> = r1;

        r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String messageContent> = null;

        r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.Object messageContentObject> = null;

        return;
    }

    public void setMessageContent(byte[], boolean, int) throws java.text.ParseException
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        byte[] r1;
        boolean z0;
        int i0, $i1, $i2;
        gov.nist.javax.sip.header.ContentLength $r2, $r6;
        java.text.ParseException $r3;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: byte[];

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void computeContentLength(java.lang.Object)>(r1);

        if z0 != 0 goto label1;

        $r2 = r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ContentLength contentLengthHeader>;

        $i1 = virtualinvoke $r2.<gov.nist.javax.sip.header.ContentLength: int getContentLength()>();

        if $i1 >= i0 goto label1;

        $r3 = new java.text.ParseException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid content length ");

        $r6 = r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ContentLength contentLengthHeader>;

        $i2 = virtualinvoke $r6.<gov.nist.javax.sip.header.ContentLength: int getContentLength()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" / ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.text.ParseException: void <init>(java.lang.String,int)>($r10, 0);

        throw $r3;

     label1:
        r0.<gov.nist.javax.sip.message.SIPMessage: byte[] messageContentBytes> = r1;

        r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String messageContent> = null;

        r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.Object messageContentObject> = null;

        return;
    }

    private void computeContentLength(java.lang.Object)
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.lang.Object r1;
        int i0;
        java.io.UnsupportedEncodingException r2, $r10;
        gov.nist.javax.sip.header.ContentLength $r3;
        boolean $z0, $z1;
        java.lang.String $r4, $r7, $r8;
        byte[] $r5, $r6, $r9;
        javax.sip.InvalidArgumentException $r11;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: java.lang.Object;

        i0 = 0;

        if r1 == null goto label6;

        $z0 = r1 instanceof java.lang.String;

        if $z0 == 0 goto label4;

     label1:
        $r7 = (java.lang.String) r1;

        $r8 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String getCharset()>();

        $r9 = virtualinvoke $r7.<java.lang.String: byte[] getBytes(java.lang.String)>($r8);

        i0 = lengthof $r9;

     label2:
        goto label6;

     label3:
        $r10 := @caughtexception;

        r2 = $r10;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>(r2);

        goto label6;

     label4:
        $z1 = r1 instanceof byte[];

        if $z1 == 0 goto label5;

        $r5 = (byte[]) r1;

        $r6 = (byte[]) $r5;

        i0 = lengthof $r6;

        goto label6;

     label5:
        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        i0 = virtualinvoke $r4.<java.lang.String: int length()>();

     label6:
        $r3 = r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ContentLength contentLengthHeader>;

        virtualinvoke $r3.<gov.nist.javax.sip.header.ContentLength: void setContentLength(int)>(i0);

     label7:
        goto label9;

     label8:
        $r11 := @caughtexception;

     label9:
        return;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
        catch javax.sip.InvalidArgumentException from label6 to label7 with label8;
    }

    public void removeContent()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        gov.nist.javax.sip.header.ContentLength $r2;
        javax.sip.InvalidArgumentException $r3;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String messageContent> = null;

        r0.<gov.nist.javax.sip.message.SIPMessage: byte[] messageContentBytes> = null;

        r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.Object messageContentObject> = null;

     label1:
        $r2 = r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ContentLength contentLengthHeader>;

        virtualinvoke $r2.<gov.nist.javax.sip.header.ContentLength: void setContentLength(int)>(0);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch javax.sip.InvalidArgumentException from label1 to label2 with label3;
    }

    public java.util.ListIterator getHeaders(java.lang.String)
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.lang.String r1, $r4;
        gov.nist.javax.sip.header.SIPHeader r2;
        java.util.Hashtable $r3;
        java.lang.Object $r5;
        boolean $z0;
        gov.nist.javax.sip.message.HeaderIterator $r6;
        gov.nist.javax.sip.header.SIPHeaderList $r7;
        java.util.ListIterator $r8, $r10;
        java.util.LinkedList $r9;
        java.lang.NullPointerException $r11;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r11 = new java.lang.NullPointerException;

        specialinvoke $r11.<java.lang.NullPointerException: void <init>(java.lang.String)>("null headerName");

        throw $r11;

     label1:
        $r3 = r0.<gov.nist.javax.sip.message.SIPMessage: java.util.Hashtable nameTable>;

        $r4 = staticinvoke <gov.nist.javax.sip.header.SIPHeaderNamesCache: java.lang.String toLowerCase(java.lang.String)>(r1);

        $r5 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r4);

        r2 = (gov.nist.javax.sip.header.SIPHeader) $r5;

        if r2 != null goto label2;

        $r9 = new java.util.LinkedList;

        specialinvoke $r9.<java.util.LinkedList: void <init>()>();

        $r10 = virtualinvoke $r9.<java.util.LinkedList: java.util.ListIterator listIterator()>();

        return $r10;

     label2:
        $z0 = r2 instanceof gov.nist.javax.sip.header.SIPHeaderList;

        if $z0 == 0 goto label3;

        $r7 = (gov.nist.javax.sip.header.SIPHeaderList) r2;

        $r8 = virtualinvoke $r7.<gov.nist.javax.sip.header.SIPHeaderList: java.util.ListIterator listIterator()>();

        return $r8;

     label3:
        $r6 = new gov.nist.javax.sip.message.HeaderIterator;

        specialinvoke $r6.<gov.nist.javax.sip.message.HeaderIterator: void <init>(gov.nist.javax.sip.message.SIPMessage,gov.nist.javax.sip.header.SIPHeader)>(r0, r2);

        return $r6;
    }

    public java.lang.String getHeaderAsFormattedString(java.lang.String)
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.lang.String r1, r2, $r5, $r9;
        java.util.Hashtable $r3, $r6;
        boolean $z0;
        javax.sip.header.Header $r4;
        java.lang.Object $r7;
        gov.nist.javax.sip.header.SIPHeader $r8;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r3 = r0.<gov.nist.javax.sip.message.SIPMessage: java.util.Hashtable nameTable>;

        $z0 = virtualinvoke $r3.<java.util.Hashtable: boolean containsKey(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        $r6 = r0.<gov.nist.javax.sip.message.SIPMessage: java.util.Hashtable nameTable>;

        $r7 = virtualinvoke $r6.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r2);

        $r8 = (gov.nist.javax.sip.header.SIPHeader) $r7;

        $r9 = virtualinvoke $r8.<gov.nist.javax.sip.header.SIPHeader: java.lang.String toString()>();

        return $r9;

     label1:
        $r4 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.Header getHeader(java.lang.String)>(r1);

        $r5 = interfaceinvoke $r4.<javax.sip.header.Header: java.lang.String toString()>();

        return $r5;
    }

    private gov.nist.javax.sip.header.SIPHeader getSIPHeaderListLowerCase(java.lang.String)
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.lang.String r1;
        java.util.Hashtable $r2;
        java.lang.Object $r3;
        gov.nist.javax.sip.header.SIPHeader $r4;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<gov.nist.javax.sip.message.SIPMessage: java.util.Hashtable nameTable>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (gov.nist.javax.sip.header.SIPHeader) $r3;

        return $r4;
    }

    private java.util.List getHeaderList(java.lang.String)
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.lang.String r1, $r5;
        gov.nist.javax.sip.header.SIPHeader r2;
        java.util.LinkedList r3, $r7;
        java.util.Hashtable $r4;
        java.lang.Object $r6;
        boolean $z0;
        gov.nist.javax.sip.header.SIPHeaderList $r8;
        java.util.List $r9;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<gov.nist.javax.sip.message.SIPMessage: java.util.Hashtable nameTable>;

        $r5 = staticinvoke <gov.nist.javax.sip.header.SIPHeaderNamesCache: java.lang.String toLowerCase(java.lang.String)>(r1);

        $r6 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r5);

        r2 = (gov.nist.javax.sip.header.SIPHeader) $r6;

        if r2 != null goto label1;

        return null;

     label1:
        $z0 = r2 instanceof gov.nist.javax.sip.header.SIPHeaderList;

        if $z0 == 0 goto label2;

        $r8 = (gov.nist.javax.sip.header.SIPHeaderList) r2;

        $r9 = virtualinvoke $r8.<gov.nist.javax.sip.header.SIPHeaderList: java.util.List getHeaderList()>();

        return $r9;

     label2:
        $r7 = new java.util.LinkedList;

        specialinvoke $r7.<java.util.LinkedList: void <init>()>();

        r3 = $r7;

        virtualinvoke r3.<java.util.LinkedList: boolean add(java.lang.Object)>(r2);

        return r3;
    }

    public boolean hasHeader(java.lang.String)
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.lang.String r1, $r3;
        java.util.Hashtable $r2;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<gov.nist.javax.sip.message.SIPMessage: java.util.Hashtable nameTable>;

        $r3 = staticinvoke <gov.nist.javax.sip.header.SIPHeaderNamesCache: java.lang.String toLowerCase(java.lang.String)>(r1);

        $z0 = virtualinvoke $r2.<java.util.Hashtable: boolean containsKey(java.lang.Object)>($r3);

        return $z0;
    }

    public boolean hasFromTag()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        gov.nist.javax.sip.header.From $r1, $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        $r1 = r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.From fromHeader>;

        if $r1 == null goto label1;

        $r2 = r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.From fromHeader>;

        $r3 = virtualinvoke $r2.<gov.nist.javax.sip.header.From: java.lang.String getTag()>();

        if $r3 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasToTag()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        gov.nist.javax.sip.header.To $r1, $r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        $r1 = r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.To toHeader>;

        if $r1 == null goto label1;

        $r2 = r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.To toHeader>;

        $r3 = virtualinvoke $r2.<gov.nist.javax.sip.header.To: java.lang.String getTag()>();

        if $r3 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String getFromTag()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        gov.nist.javax.sip.header.From $r1, $r2;
        java.lang.String $r3;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        $r1 = r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.From fromHeader>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.From fromHeader>;

        $r3 = virtualinvoke $r2.<gov.nist.javax.sip.header.From: java.lang.String getTag()>();

     label2:
        return $r3;
    }

    public void setFromTag(java.lang.String)
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.lang.String r1;
        gov.nist.javax.sip.header.From $r3;
        java.text.ParseException $r4;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.From fromHeader>;

        virtualinvoke $r3.<gov.nist.javax.sip.header.From: void setTag(java.lang.String)>(r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch java.text.ParseException from label1 to label2 with label3;
    }

    public void setToTag(java.lang.String)
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.lang.String r1;
        gov.nist.javax.sip.header.To $r3;
        java.text.ParseException $r4;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: java.lang.String;

     label1:
        $r3 = r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.To toHeader>;

        virtualinvoke $r3.<gov.nist.javax.sip.header.To: void setTag(java.lang.String)>(r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch java.text.ParseException from label1 to label2 with label3;
    }

    public java.lang.String getToTag()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        gov.nist.javax.sip.header.To $r1, $r2;
        java.lang.String $r3;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        $r1 = r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.To toHeader>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.To toHeader>;

        $r3 = virtualinvoke $r2.<gov.nist.javax.sip.header.To: java.lang.String getTag()>();

     label2:
        return $r3;
    }

    public abstract java.lang.String getFirstLine();

    public void addHeader(javax.sip.header.Header)
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        javax.sip.header.Header r1;
        gov.nist.javax.sip.header.SIPHeader r2;
        gov.nist.javax.sip.header.ContentLength r4, $r6;
        boolean $z0, $z1, $z2;
        gov.nist.javax.sip.message.SIPDuplicateHeaderException $r5;
        int $i0;
        javax.sip.InvalidArgumentException $r7;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: javax.sip.header.Header;

        r2 = (gov.nist.javax.sip.header.SIPHeader) r1;

     label1:
        $z0 = r1 instanceof javax.sip.header.ViaHeader;

        if $z0 != 0 goto label2;

        $z1 = r1 instanceof javax.sip.header.RecordRouteHeader;

        if $z1 == 0 goto label3;

     label2:
        virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void attachHeader(gov.nist.javax.sip.header.SIPHeader,boolean,boolean)>(r2, 0, 1);

        goto label4;

     label3:
        virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void attachHeader(gov.nist.javax.sip.header.SIPHeader,boolean,boolean)>(r2, 0, 0);

     label4:
        goto label9;

     label5:
        $r5 := @caughtexception;

     label6:
        $z2 = r1 instanceof gov.nist.javax.sip.header.ContentLength;

        if $z2 == 0 goto label7;

        r4 = (gov.nist.javax.sip.header.ContentLength) r1;

        $r6 = r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ContentLength contentLengthHeader>;

        $i0 = virtualinvoke r4.<gov.nist.javax.sip.header.ContentLength: int getContentLength()>();

        virtualinvoke $r6.<gov.nist.javax.sip.header.ContentLength: void setContentLength(int)>($i0);

     label7:
        goto label9;

     label8:
        $r7 := @caughtexception;

     label9:
        return;

        catch gov.nist.javax.sip.message.SIPDuplicateHeaderException from label1 to label4 with label5;
        catch javax.sip.InvalidArgumentException from label6 to label7 with label8;
    }

    public void addUnparsed(java.lang.String)
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.lang.String r1;
        java.util.LinkedList $r2;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<gov.nist.javax.sip.message.SIPMessage: java.util.LinkedList unrecognizedHeaders>;

        virtualinvoke $r2.<java.util.LinkedList: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void addHeader(java.lang.String)
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.lang.String r1, r2, $r6;
        gov.nist.javax.sip.parser.HeaderParser r3;
        gov.nist.javax.sip.header.SIPHeader r4;
        java.lang.StringBuilder $r5, $r7, $r8;
        java.text.ParseException $r9;
        java.util.LinkedList $r10;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: java.lang.String;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        r3 = staticinvoke <gov.nist.javax.sip.parser.ParserFactory: gov.nist.javax.sip.parser.HeaderParser createParser(java.lang.String)>(r1);

        r4 = virtualinvoke r3.<gov.nist.javax.sip.parser.HeaderParser: gov.nist.javax.sip.header.SIPHeader parse()>();

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void attachHeader(gov.nist.javax.sip.header.SIPHeader,boolean)>(r4, 0);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        $r10 = r0.<gov.nist.javax.sip.message.SIPMessage: java.util.LinkedList unrecognizedHeaders>;

        virtualinvoke $r10.<java.util.LinkedList: boolean add(java.lang.Object)>(r2);

     label4:
        return;

        catch java.text.ParseException from label1 to label2 with label3;
    }

    public java.util.ListIterator getUnrecognizedHeaders()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.util.LinkedList $r1;
        java.util.ListIterator $r2;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        $r1 = r0.<gov.nist.javax.sip.message.SIPMessage: java.util.LinkedList unrecognizedHeaders>;

        $r2 = virtualinvoke $r1.<java.util.LinkedList: java.util.ListIterator listIterator()>();

        return $r2;
    }

    public java.util.ListIterator getHeaderNames()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.util.Iterator r1;
        java.util.LinkedList r2, $r6;
        gov.nist.javax.sip.header.SIPHeader r3;
        java.lang.String r4;
        java.util.concurrent.ConcurrentLinkedQueue $r5;
        boolean $z0;
        java.util.ListIterator $r7;
        java.lang.Object $r8;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        $r5 = r0.<gov.nist.javax.sip.message.SIPMessage: java.util.concurrent.ConcurrentLinkedQueue headers>;

        r1 = virtualinvoke $r5.<java.util.concurrent.ConcurrentLinkedQueue: java.util.Iterator iterator()>();

        $r6 = new java.util.LinkedList;

        specialinvoke $r6.<java.util.LinkedList: void <init>()>();

        r2 = $r6;

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (gov.nist.javax.sip.header.SIPHeader) $r8;

        r4 = virtualinvoke r3.<gov.nist.javax.sip.header.SIPHeader: java.lang.String getName()>();

        virtualinvoke r2.<java.util.LinkedList: boolean add(java.lang.Object)>(r4);

        goto label1;

     label2:
        $r7 = virtualinvoke r2.<java.util.LinkedList: java.util.ListIterator listIterator()>();

        return $r7;
    }

    public boolean equals(java.lang.Object)
    {
        gov.nist.javax.sip.message.SIPMessage r0, r2;
        java.lang.Object r1, $r13, $r16;
        java.util.Collection r3;
        java.util.Iterator r4;
        gov.nist.javax.sip.header.SIPHeader r5, r6;
        java.lang.Class $r7, $r8;
        boolean $z0, $z1, $z2;
        java.util.Hashtable $r9, $r10, $r11, $r12;
        int $i0, $i1;
        java.lang.String $r14, $r15;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: java.lang.Object;

        $r7 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = (gov.nist.javax.sip.message.SIPMessage) r1;

        $r9 = r0.<gov.nist.javax.sip.message.SIPMessage: java.util.Hashtable nameTable>;

        r3 = virtualinvoke $r9.<java.util.Hashtable: java.util.Collection values()>();

        r4 = interfaceinvoke r3.<java.util.Collection: java.util.Iterator iterator()>();

        $r10 = r0.<gov.nist.javax.sip.message.SIPMessage: java.util.Hashtable nameTable>;

        $i0 = virtualinvoke $r10.<java.util.Hashtable: int size()>();

        $r11 = r2.<gov.nist.javax.sip.message.SIPMessage: java.util.Hashtable nameTable>;

        $i1 = virtualinvoke $r11.<java.util.Hashtable: int size()>();

        if $i0 == $i1 goto label2;

        return 0;

     label2:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r13 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (gov.nist.javax.sip.header.SIPHeader) $r13;

        $r12 = r2.<gov.nist.javax.sip.message.SIPMessage: java.util.Hashtable nameTable>;

        $r15 = virtualinvoke r5.<gov.nist.javax.sip.header.SIPHeader: java.lang.String getName()>();

        $r14 = staticinvoke <gov.nist.javax.sip.header.SIPHeaderNamesCache: java.lang.String toLowerCase(java.lang.String)>($r15);

        $r16 = virtualinvoke $r12.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r14);

        r6 = (gov.nist.javax.sip.header.SIPHeader) $r16;

        if r6 != null goto label3;

        return 0;

     label3:
        $z2 = virtualinvoke r6.<gov.nist.javax.sip.header.SIPHeader: boolean equals(java.lang.Object)>(r5);

        if $z2 != 0 goto label4;

        return 0;

     label4:
        goto label2;

     label5:
        return 1;
    }

    public javax.sip.header.ContentDispositionHeader getContentDisposition()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.lang.String $r1;
        javax.sip.header.Header $r2;
        javax.sip.header.ContentDispositionHeader $r3;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        $r1 = <gov.nist.javax.sip.message.SIPMessage: java.lang.String CONTENT_DISPOSITION_LOWERCASE>;

        $r2 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.Header getHeaderLowerCase(java.lang.String)>($r1);

        $r3 = (javax.sip.header.ContentDispositionHeader) $r2;

        return $r3;
    }

    public javax.sip.header.ContentEncodingHeader getContentEncoding()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.lang.String $r1;
        javax.sip.header.Header $r2;
        javax.sip.header.ContentEncodingHeader $r3;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        $r1 = <gov.nist.javax.sip.message.SIPMessage: java.lang.String CONTENT_ENCODING_LOWERCASE>;

        $r2 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.Header getHeaderLowerCase(java.lang.String)>($r1);

        $r3 = (javax.sip.header.ContentEncodingHeader) $r2;

        return $r3;
    }

    public javax.sip.header.ContentLanguageHeader getContentLanguage()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.lang.String $r1;
        javax.sip.header.Header $r2;
        javax.sip.header.ContentLanguageHeader $r3;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        $r1 = <gov.nist.javax.sip.message.SIPMessage: java.lang.String CONTENT_LANGUAGE_LOWERCASE>;

        $r2 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.Header getHeaderLowerCase(java.lang.String)>($r1);

        $r3 = (javax.sip.header.ContentLanguageHeader) $r2;

        return $r3;
    }

    public javax.sip.header.ExpiresHeader getExpires()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.lang.String $r1;
        javax.sip.header.Header $r2;
        javax.sip.header.ExpiresHeader $r3;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        $r1 = <gov.nist.javax.sip.message.SIPMessage: java.lang.String EXPIRES_LOWERCASE>;

        $r2 = specialinvoke r0.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.Header getHeaderLowerCase(java.lang.String)>($r1);

        $r3 = (javax.sip.header.ExpiresHeader) $r2;

        return $r3;
    }

    public void setExpires(javax.sip.header.ExpiresHeader)
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        javax.sip.header.ExpiresHeader r1;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: javax.sip.header.ExpiresHeader;

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void setHeader(javax.sip.header.Header)>(r1);

        return;
    }

    public void setContentDisposition(javax.sip.header.ContentDispositionHeader)
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        javax.sip.header.ContentDispositionHeader r1;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: javax.sip.header.ContentDispositionHeader;

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void setHeader(javax.sip.header.Header)>(r1);

        return;
    }

    public void setContentEncoding(javax.sip.header.ContentEncodingHeader)
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        javax.sip.header.ContentEncodingHeader r1;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: javax.sip.header.ContentEncodingHeader;

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void setHeader(javax.sip.header.Header)>(r1);

        return;
    }

    public void setContentLanguage(javax.sip.header.ContentLanguageHeader)
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        javax.sip.header.ContentLanguageHeader r1;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: javax.sip.header.ContentLanguageHeader;

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void setHeader(javax.sip.header.Header)>(r1);

        return;
    }

    public void setContentLength(javax.sip.header.ContentLengthHeader)
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        javax.sip.header.ContentLengthHeader r1;
        gov.nist.javax.sip.header.ContentLength $r3;
        int $i0;
        javax.sip.InvalidArgumentException $r4;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: javax.sip.header.ContentLengthHeader;

     label1:
        $r3 = r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ContentLength contentLengthHeader>;

        $i0 = interfaceinvoke r1.<javax.sip.header.ContentLengthHeader: int getContentLength()>();

        virtualinvoke $r3.<gov.nist.javax.sip.header.ContentLength: void setContentLength(int)>($i0);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch javax.sip.InvalidArgumentException from label1 to label2 with label3;
    }

    public void setSize(int)
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        int i0;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        i0 := @parameter0: int;

        r0.<gov.nist.javax.sip.message.SIPMessage: int size> = i0;

        return;
    }

    public int getSize()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        int $i0;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        $i0 = r0.<gov.nist.javax.sip.message.SIPMessage: int size>;

        return $i0;
    }

    public void addLast(javax.sip.header.Header) throws javax.sip.SipException, java.lang.NullPointerException
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        javax.sip.header.Header r1;
        gov.nist.javax.sip.header.SIPHeader $r3;
        java.lang.NullPointerException $r4;
        gov.nist.javax.sip.message.SIPDuplicateHeaderException $r5;
        javax.sip.SipException $r6;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: javax.sip.header.Header;

        if r1 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("null arg!");

        throw $r4;

     label1:
        $r3 = (gov.nist.javax.sip.header.SIPHeader) r1;

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void attachHeader(gov.nist.javax.sip.header.SIPHeader,boolean,boolean)>($r3, 0, 0);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new javax.sip.SipException;

        specialinvoke $r6.<javax.sip.SipException: void <init>(java.lang.String)>("Cannot add header - header already exists");

        throw $r6;

     label4:
        return;

        catch gov.nist.javax.sip.message.SIPDuplicateHeaderException from label1 to label2 with label3;
    }

    public void addFirst(javax.sip.header.Header) throws javax.sip.SipException, java.lang.NullPointerException
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        javax.sip.header.Header r1;
        gov.nist.javax.sip.header.SIPHeader $r3;
        java.lang.NullPointerException $r4;
        gov.nist.javax.sip.message.SIPDuplicateHeaderException $r5;
        javax.sip.SipException $r6;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: javax.sip.header.Header;

        if r1 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("null arg!");

        throw $r4;

     label1:
        $r3 = (gov.nist.javax.sip.header.SIPHeader) r1;

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void attachHeader(gov.nist.javax.sip.header.SIPHeader,boolean,boolean)>($r3, 0, 1);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new javax.sip.SipException;

        specialinvoke $r6.<javax.sip.SipException: void <init>(java.lang.String)>("Cannot add header - header already exists");

        throw $r6;

     label4:
        return;

        catch gov.nist.javax.sip.message.SIPDuplicateHeaderException from label1 to label2 with label3;
    }

    public void removeFirst(java.lang.String) throws java.lang.NullPointerException
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.lang.String r1;
        java.lang.NullPointerException $r2;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null argument Provided!");

        throw $r2;

     label1:
        virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void removeHeader(java.lang.String,boolean)>(r1, 1);

        return;
    }

    public void removeLast(java.lang.String)
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.lang.String r1;
        java.lang.NullPointerException $r2;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: java.lang.String;

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null argument Provided!");

        throw $r2;

     label1:
        virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void removeHeader(java.lang.String,boolean)>(r1, 0);

        return;
    }

    public void setCSeq(javax.sip.header.CSeqHeader)
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        javax.sip.header.CSeqHeader r1;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: javax.sip.header.CSeqHeader;

        virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: void setHeader(javax.sip.header.Header)>(r1);

        return;
    }

    public void setApplicationData(java.lang.Object)
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.lang.Object r1;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 := @parameter0: java.lang.Object;

        r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.Object applicationData> = r1;

        return;
    }

    public java.lang.Object getApplicationData()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        java.lang.Object $r1;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        $r1 = r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.Object applicationData>;

        return $r1;
    }

    public gov.nist.javax.sip.message.MultipartMimeContent getMultipartMimeContent() throws java.text.ParseException
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        gov.nist.javax.sip.message.MultipartMimeContentImpl r1, $r5;
        byte[] r2;
        java.lang.String r3, $r7, $r8;
        gov.nist.javax.sip.header.ContentLength $r4;
        int $i0;
        gov.nist.javax.sip.header.ContentType $r6;
        java.io.UnsupportedEncodingException $r9, r10;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        $r4 = r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ContentLength contentLengthHeader>;

        $i0 = virtualinvoke $r4.<gov.nist.javax.sip.header.ContentLength: int getContentLength()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r5 = new gov.nist.javax.sip.message.MultipartMimeContentImpl;

        $r6 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ContentType getContentTypeHeader()>();

        specialinvoke $r5.<gov.nist.javax.sip.message.MultipartMimeContentImpl: void <init>(javax.sip.header.ContentTypeHeader)>($r6);

        r1 = $r5;

        r2 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: byte[] getRawContent()>();

     label2:
        $r7 = new java.lang.String;

        $r8 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String getCharset()>();

        specialinvoke $r7.<java.lang.String: void <init>(byte[],java.lang.String)>(r2, $r8);

        r3 = $r7;

        virtualinvoke r1.<gov.nist.javax.sip.message.MultipartMimeContentImpl: void createContentList(java.lang.String)>(r3);

     label3:
        return r1;

     label4:
        $r9 := @caughtexception;

        r10 = $r9;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>(r10);

        return null;

        catch java.io.UnsupportedEncodingException from label2 to label3 with label4;
    }

    public javax.sip.header.CallIdHeader getCallIdHeader()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        gov.nist.javax.sip.header.CallID $r1;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        $r1 = r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.CallID callIdHeader>;

        return $r1;
    }

    public javax.sip.header.FromHeader getFromHeader()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        gov.nist.javax.sip.header.From $r1;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        $r1 = r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.From fromHeader>;

        return $r1;
    }

    public javax.sip.header.ToHeader getToHeader()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        gov.nist.javax.sip.header.To $r1;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        $r1 = r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.To toHeader>;

        return $r1;
    }

    public javax.sip.header.ViaHeader getTopmostViaHeader()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        gov.nist.javax.sip.header.Via $r1;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        $r1 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.Via getTopmostVia()>();

        return $r1;
    }

    public javax.sip.header.CSeqHeader getCSeqHeader()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        gov.nist.javax.sip.header.CSeq $r1;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        $r1 = r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.CSeq cSeqHeader>;

        return $r1;
    }

    protected final java.lang.String getCharset()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        gov.nist.javax.sip.header.ContentType r1;
        java.lang.String r2, $r3, $r4;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r1 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ContentType getContentTypeHeader()>();

        if r1 == null goto label3;

        r2 = virtualinvoke r1.<gov.nist.javax.sip.header.ContentType: java.lang.String getCharset()>();

        if r2 == null goto label1;

        $r4 = r2;

        goto label2;

     label1:
        $r4 = r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String contentEncodingCharset>;

     label2:
        return $r4;

     label3:
        $r3 = r0.<gov.nist.javax.sip.message.SIPMessage: java.lang.String contentEncodingCharset>;

        return $r3;
    }

    public boolean isNullRequest()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        $z0 = r0.<gov.nist.javax.sip.message.SIPMessage: boolean nullRequest>;

        return $z0;
    }

    public void setNullRequest()
    {
        gov.nist.javax.sip.message.SIPMessage r0;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        r0.<gov.nist.javax.sip.message.SIPMessage: boolean nullRequest> = 1;

        return;
    }

    public abstract void setSIPVersion(java.lang.String) throws java.text.ParseException;

    public abstract java.lang.String getSIPVersion();

    public abstract java.lang.String toString();

    public volatile javax.sip.header.ContentTypeHeader getContentTypeHeader()
    {
        gov.nist.javax.sip.message.SIPMessage r0;
        gov.nist.javax.sip.header.ContentType $r1;

        r0 := @this: gov.nist.javax.sip.message.SIPMessage;

        $r1 = virtualinvoke r0.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ContentType getContentTypeHeader()>();

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.String $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;

        $r0 = staticinvoke <gov.nist.javax.sip.header.SIPHeaderNamesCache: java.lang.String toLowerCase(java.lang.String)>("Content-Type");

        <gov.nist.javax.sip.message.SIPMessage: java.lang.String CONTENT_TYPE_LOWERCASE> = $r0;

        $r1 = staticinvoke <gov.nist.javax.sip.header.SIPHeaderNamesCache: java.lang.String toLowerCase(java.lang.String)>("Error-Info");

        <gov.nist.javax.sip.message.SIPMessage: java.lang.String ERROR_LOWERCASE> = $r1;

        $r2 = staticinvoke <gov.nist.javax.sip.header.SIPHeaderNamesCache: java.lang.String toLowerCase(java.lang.String)>("Contact");

        <gov.nist.javax.sip.message.SIPMessage: java.lang.String CONTACT_LOWERCASE> = $r2;

        $r3 = staticinvoke <gov.nist.javax.sip.header.SIPHeaderNamesCache: java.lang.String toLowerCase(java.lang.String)>("Via");

        <gov.nist.javax.sip.message.SIPMessage: java.lang.String VIA_LOWERCASE> = $r3;

        $r4 = staticinvoke <gov.nist.javax.sip.header.SIPHeaderNamesCache: java.lang.String toLowerCase(java.lang.String)>("Authorization");

        <gov.nist.javax.sip.message.SIPMessage: java.lang.String AUTHORIZATION_LOWERCASE> = $r4;

        $r5 = staticinvoke <gov.nist.javax.sip.header.SIPHeaderNamesCache: java.lang.String toLowerCase(java.lang.String)>("Route");

        <gov.nist.javax.sip.message.SIPMessage: java.lang.String ROUTE_LOWERCASE> = $r5;

        $r6 = staticinvoke <gov.nist.javax.sip.header.SIPHeaderNamesCache: java.lang.String toLowerCase(java.lang.String)>("Record-Route");

        <gov.nist.javax.sip.message.SIPMessage: java.lang.String RECORDROUTE_LOWERCASE> = $r6;

        $r7 = staticinvoke <gov.nist.javax.sip.header.SIPHeaderNamesCache: java.lang.String toLowerCase(java.lang.String)>("Content-Disposition");

        <gov.nist.javax.sip.message.SIPMessage: java.lang.String CONTENT_DISPOSITION_LOWERCASE> = $r7;

        $r8 = staticinvoke <gov.nist.javax.sip.header.SIPHeaderNamesCache: java.lang.String toLowerCase(java.lang.String)>("Content-Encoding");

        <gov.nist.javax.sip.message.SIPMessage: java.lang.String CONTENT_ENCODING_LOWERCASE> = $r8;

        $r9 = staticinvoke <gov.nist.javax.sip.header.SIPHeaderNamesCache: java.lang.String toLowerCase(java.lang.String)>("Content-Language");

        <gov.nist.javax.sip.message.SIPMessage: java.lang.String CONTENT_LANGUAGE_LOWERCASE> = $r9;

        $r10 = staticinvoke <gov.nist.javax.sip.header.SIPHeaderNamesCache: java.lang.String toLowerCase(java.lang.String)>("Expires");

        <gov.nist.javax.sip.message.SIPMessage: java.lang.String EXPIRES_LOWERCASE> = $r10;

        return;
    }
}
