public abstract class gov.nist.javax.sip.header.SIPObject extends gov.nist.core.GenericObject
{

    protected void <init>()
    {
        gov.nist.javax.sip.header.SIPObject r0;

        r0 := @this: gov.nist.javax.sip.header.SIPObject;

        specialinvoke r0.<gov.nist.core.GenericObject: void <init>()>();

        return;
    }

    public void dbgPrint()
    {
        gov.nist.javax.sip.header.SIPObject r0;

        r0 := @this: gov.nist.javax.sip.header.SIPObject;

        specialinvoke r0.<gov.nist.core.GenericObject: void dbgPrint()>();

        return;
    }

    public abstract java.lang.String encode();

    public java.lang.StringBuffer encode(java.lang.StringBuffer)
    {
        gov.nist.javax.sip.header.SIPObject r0;
        java.lang.StringBuffer r1, $r3;
        java.lang.String $r2;

        r0 := @this: gov.nist.javax.sip.header.SIPObject;

        r1 := @parameter0: java.lang.StringBuffer;

        $r2 = virtualinvoke r0.<gov.nist.javax.sip.header.SIPObject: java.lang.String encode()>();

        $r3 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        return $r3;
    }

    public boolean equals(java.lang.Object)
    {
        gov.nist.javax.sip.header.SIPObject r0, r2;
        java.lang.Object r1, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21;
        java.lang.Class r3, r4, r9, $r12, $r13;
        java.lang.reflect.Field[] r5, r6;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i22, $i23;
        java.lang.reflect.Field r7, r8;
        java.lang.String r10, r11, $r28, $r30;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        float $f0, $f1;
        byte $b13, $b14, $b20;
        double $d0, $d1;
        long $l15, $l16;
        short $s17, $s21;
        char $c18, $c19;
        java.lang.StringBuilder $r22, $r24, $r25, $r27, $r31, $r33;
        java.io.PrintStream $r23, $r29, $r32;
        java.lang.IllegalAccessException $r26, r34;

        r0 := @this: gov.nist.javax.sip.header.SIPObject;

        r1 := @parameter0: java.lang.Object;

        $r12 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r13 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r12.<java.lang.Object: boolean equals(java.lang.Object)>($r13);

        if $z0 != 0 goto label01;

        return 0;

     label01:
        r2 = (gov.nist.javax.sip.header.SIPObject) r1;

        r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

     label02:
        r5 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        $z1 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(r3);

        if $z1 != 0 goto label03;

        return 0;

     label03:
        r6 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        i0 = 0;

     label04:
        $i2 = lengthof r5;

        if i0 >= $i2 goto label33;

        r7 = r5[i0];

        r8 = r6[i0];

        i1 = virtualinvoke r7.<java.lang.reflect.Field: int getModifiers()>();

        $i3 = i1 & 2;

        if $i3 != 2 goto label05;

        goto label32;

     label05:
        r9 = virtualinvoke r7.<java.lang.reflect.Field: java.lang.Class getType()>();

        r10 = virtualinvoke r7.<java.lang.reflect.Field: java.lang.String getName()>();

        $i5 = virtualinvoke r10.<java.lang.String: int compareTo(java.lang.String)>("stringRepresentation");

        if $i5 != 0 goto label06;

        goto label32;

     label06:
        $i4 = virtualinvoke r10.<java.lang.String: int compareTo(java.lang.String)>("indentation");

        if $i4 != 0 goto label07;

        goto label32;

     label07:
        $z3 = virtualinvoke r9.<java.lang.Class: boolean isPrimitive()>();

        if $z3 == 0 goto label22;

        r11 = virtualinvoke r9.<java.lang.Class: java.lang.String toString()>();

        $i6 = virtualinvoke r11.<java.lang.String: int compareTo(java.lang.String)>("int");

        if $i6 != 0 goto label09;

        $i22 = virtualinvoke r7.<java.lang.reflect.Field: int getInt(java.lang.Object)>(r0);

        $i23 = virtualinvoke r8.<java.lang.reflect.Field: int getInt(java.lang.Object)>(r2);

        if $i22 == $i23 goto label21;

     label08:
        return 0;

     label09:
        $i9 = virtualinvoke r11.<java.lang.String: int compareTo(java.lang.String)>("short");

        if $i9 != 0 goto label11;

        $s17 = virtualinvoke r7.<java.lang.reflect.Field: short getShort(java.lang.Object)>(r0);

        $s21 = virtualinvoke r8.<java.lang.reflect.Field: short getShort(java.lang.Object)>(r2);

        if $s17 == $s21 goto label21;

     label10:
        return 0;

     label11:
        $i10 = virtualinvoke r11.<java.lang.String: int compareTo(java.lang.String)>("char");

        if $i10 != 0 goto label13;

        $c19 = virtualinvoke r7.<java.lang.reflect.Field: char getChar(java.lang.Object)>(r0);

        $c18 = virtualinvoke r8.<java.lang.reflect.Field: char getChar(java.lang.Object)>(r2);

        if $c19 == $c18 goto label21;

     label12:
        return 0;

     label13:
        $i7 = virtualinvoke r11.<java.lang.String: int compareTo(java.lang.String)>("long");

        if $i7 != 0 goto label15;

        $l16 = virtualinvoke r7.<java.lang.reflect.Field: long getLong(java.lang.Object)>(r0);

        $l15 = virtualinvoke r8.<java.lang.reflect.Field: long getLong(java.lang.Object)>(r2);

        $b20 = $l16 cmp $l15;

        if $b20 == 0 goto label21;

     label14:
        return 0;

     label15:
        $i8 = virtualinvoke r11.<java.lang.String: int compareTo(java.lang.String)>("boolean");

        if $i8 != 0 goto label17;

        $z6 = virtualinvoke r7.<java.lang.reflect.Field: boolean getBoolean(java.lang.Object)>(r0);

        $z5 = virtualinvoke r8.<java.lang.reflect.Field: boolean getBoolean(java.lang.Object)>(r2);

        if $z6 == $z5 goto label21;

     label16:
        return 0;

     label17:
        $i12 = virtualinvoke r11.<java.lang.String: int compareTo(java.lang.String)>("double");

        if $i12 != 0 goto label19;

        $d1 = virtualinvoke r7.<java.lang.reflect.Field: double getDouble(java.lang.Object)>(r0);

        $d0 = virtualinvoke r8.<java.lang.reflect.Field: double getDouble(java.lang.Object)>(r2);

        $b13 = $d1 cmpl $d0;

        if $b13 == 0 goto label21;

     label18:
        return 0;

     label19:
        $i11 = virtualinvoke r11.<java.lang.String: int compareTo(java.lang.String)>("float");

        if $i11 != 0 goto label21;

        $f1 = virtualinvoke r7.<java.lang.reflect.Field: float getFloat(java.lang.Object)>(r0);

        $f0 = virtualinvoke r8.<java.lang.reflect.Field: float getFloat(java.lang.Object)>(r2);

        $b14 = $f1 cmpl $f0;

        if $b14 == 0 goto label21;

     label20:
        return 0;

     label21:
        goto label30;

     label22:
        $r16 = virtualinvoke r8.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r2);

        $r14 = virtualinvoke r7.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        if $r16 != $r14 goto label24;

     label23:
        goto label32;

     label24:
        $r15 = virtualinvoke r7.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        if $r15 != null goto label26;

        $r21 = virtualinvoke r8.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r2);

        if $r21 == null goto label26;

     label25:
        return 0;

     label26:
        $r18 = virtualinvoke r8.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r2);

        if $r18 != null goto label28;

        $r20 = virtualinvoke r7.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        if $r20 == null goto label28;

     label27:
        return 0;

     label28:
        $r19 = virtualinvoke r7.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        $r17 = virtualinvoke r8.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r2);

        $z4 = virtualinvoke $r19.<java.lang.Object: boolean equals(java.lang.Object)>($r17);

        if $z4 != 0 goto label30;

     label29:
        return 0;

     label30:
        goto label32;

     label31:
        $r26 := @caughtexception;

        r34 = $r26;

        $r23 = <java.lang.System: java.io.PrintStream out>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("accessed field ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r30);

        $r32 = <java.lang.System: java.io.PrintStream out>;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("modifier  ");

        $r27 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r32.<java.io.PrintStream: void println(java.lang.String)>($r28);

        $r29 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>("modifier.private  2");

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>(r34);

     label32:
        i0 = i0 + 1;

        goto label04;

     label33:
        $z2 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(class "gov/nist/javax/sip/header/SIPObject");

        if $z2 == 0 goto label34;

        goto label35;

     label34:
        r3 = virtualinvoke r3.<java.lang.Class: java.lang.Class getSuperclass()>();

        r4 = virtualinvoke r4.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label02;

     label35:
        return 1;

        catch java.lang.IllegalAccessException from label07 to label08 with label31;
        catch java.lang.IllegalAccessException from label09 to label10 with label31;
        catch java.lang.IllegalAccessException from label11 to label12 with label31;
        catch java.lang.IllegalAccessException from label13 to label14 with label31;
        catch java.lang.IllegalAccessException from label15 to label16 with label31;
        catch java.lang.IllegalAccessException from label17 to label18 with label31;
        catch java.lang.IllegalAccessException from label19 to label20 with label31;
        catch java.lang.IllegalAccessException from label21 to label23 with label31;
        catch java.lang.IllegalAccessException from label24 to label25 with label31;
        catch java.lang.IllegalAccessException from label26 to label27 with label31;
        catch java.lang.IllegalAccessException from label28 to label29 with label31;
    }

    public boolean match(java.lang.Object)
    {
        gov.nist.javax.sip.header.SIPObject r0;
        java.lang.Object r1, r12, r34;
        gov.nist.core.GenericObject r2, $r20, $r24, $r26, $r28;
        java.lang.Class r3, r4, r9, $r14, $r15, $r16, $r18, $r19, $r21, $r22, $r23;
        java.lang.reflect.Field[] r5, r6;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i23, $i24;
        java.lang.reflect.Field r7, r8;
        java.lang.String r10, r11, r13, $r29, $r30, $r31, $r32;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        gov.nist.core.GenericObjectList $r17;
        gov.nist.core.Match $r25, $r27;
        float $f0, $f1;
        byte $b11, $b15, $b19;
        double $d0, $d1;
        long $l16, $l20;
        char $c17, $c18;
        java.lang.IllegalAccessException $r33, r35;
        short $s21, $s22;

        r0 := @this: gov.nist.javax.sip.header.SIPObject;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label01;

        return 1;

     label01:
        $r14 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r15 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke $r14.<java.lang.Object: boolean equals(java.lang.Object)>($r15);

        if $z1 != 0 goto label02;

        return 0;

     label02:
        r2 = (gov.nist.core.GenericObject) r1;

        r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

     label03:
        r5 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        r6 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        i0 = 0;

     label04:
        $i2 = lengthof r5;

        if i0 >= $i2 goto label43;

        r7 = r5[i0];

        r8 = r6[i0];

        i1 = virtualinvoke r7.<java.lang.reflect.Field: int getModifiers()>();

        $i3 = i1 & 2;

        if $i3 != 2 goto label05;

        goto label42;

     label05:
        r9 = virtualinvoke r7.<java.lang.reflect.Field: java.lang.Class getType()>();

        r10 = virtualinvoke r7.<java.lang.reflect.Field: java.lang.String getName()>();

        $i4 = virtualinvoke r10.<java.lang.String: int compareTo(java.lang.String)>("stringRepresentation");

        if $i4 != 0 goto label06;

        goto label42;

     label06:
        $i5 = virtualinvoke r10.<java.lang.String: int compareTo(java.lang.String)>("indentation");

        if $i5 != 0 goto label07;

        goto label42;

     label07:
        $z3 = virtualinvoke r9.<java.lang.Class: boolean isPrimitive()>();

        if $z3 == 0 goto label23;

        r11 = virtualinvoke r9.<java.lang.Class: java.lang.String toString()>();

        $i6 = virtualinvoke r11.<java.lang.String: int compareTo(java.lang.String)>("int");

        if $i6 != 0 goto label09;

        $i24 = virtualinvoke r7.<java.lang.reflect.Field: int getInt(java.lang.Object)>(r0);

        $i23 = virtualinvoke r8.<java.lang.reflect.Field: int getInt(java.lang.Object)>(r2);

        if $i24 == $i23 goto label22;

     label08:
        return 0;

     label09:
        $i7 = virtualinvoke r11.<java.lang.String: int compareTo(java.lang.String)>("short");

        if $i7 != 0 goto label11;

        $s22 = virtualinvoke r7.<java.lang.reflect.Field: short getShort(java.lang.Object)>(r0);

        $s21 = virtualinvoke r8.<java.lang.reflect.Field: short getShort(java.lang.Object)>(r2);

        if $s22 == $s21 goto label22;

     label10:
        return 0;

     label11:
        $i8 = virtualinvoke r11.<java.lang.String: int compareTo(java.lang.String)>("char");

        if $i8 != 0 goto label13;

        $c18 = virtualinvoke r7.<java.lang.reflect.Field: char getChar(java.lang.Object)>(r0);

        $c17 = virtualinvoke r8.<java.lang.reflect.Field: char getChar(java.lang.Object)>(r2);

        if $c18 == $c17 goto label22;

     label12:
        return 0;

     label13:
        $i9 = virtualinvoke r11.<java.lang.String: int compareTo(java.lang.String)>("long");

        if $i9 != 0 goto label15;

        $l20 = virtualinvoke r7.<java.lang.reflect.Field: long getLong(java.lang.Object)>(r0);

        $l16 = virtualinvoke r8.<java.lang.reflect.Field: long getLong(java.lang.Object)>(r2);

        $b15 = $l20 cmp $l16;

        if $b15 == 0 goto label22;

     label14:
        return 0;

     label15:
        $i12 = virtualinvoke r11.<java.lang.String: int compareTo(java.lang.String)>("boolean");

        if $i12 != 0 goto label17;

        $z14 = virtualinvoke r7.<java.lang.reflect.Field: boolean getBoolean(java.lang.Object)>(r0);

        $z15 = virtualinvoke r8.<java.lang.reflect.Field: boolean getBoolean(java.lang.Object)>(r2);

        if $z14 == $z15 goto label22;

     label16:
        return 0;

     label17:
        $i13 = virtualinvoke r11.<java.lang.String: int compareTo(java.lang.String)>("double");

        if $i13 != 0 goto label19;

        $d0 = virtualinvoke r7.<java.lang.reflect.Field: double getDouble(java.lang.Object)>(r0);

        $d1 = virtualinvoke r8.<java.lang.reflect.Field: double getDouble(java.lang.Object)>(r2);

        $b19 = $d0 cmpl $d1;

        if $b19 == 0 goto label22;

     label18:
        return 0;

     label19:
        $i14 = virtualinvoke r11.<java.lang.String: int compareTo(java.lang.String)>("float");

        if $i14 != 0 goto label21;

        $f1 = virtualinvoke r7.<java.lang.reflect.Field: float getFloat(java.lang.Object)>(r0);

        $f0 = virtualinvoke r8.<java.lang.reflect.Field: float getFloat(java.lang.Object)>(r2);

        $b11 = $f1 cmpl $f0;

        if $b11 == 0 goto label22;

     label20:
        return 0;

     label21:
        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.String)>("unknown type");

     label22:
        goto label40;

     label23:
        r34 = virtualinvoke r7.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        r12 = virtualinvoke r8.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r2);

        if r12 == null goto label25;

        if r34 != null goto label25;

     label24:
        return 0;

     label25:
        if r12 != null goto label27;

        if r34 == null goto label27;

     label26:
        goto label42;

     label27:
        if r12 != null goto label29;

        if r34 != null goto label29;

     label28:
        goto label42;

     label29:
        $z5 = r12 instanceof java.lang.String;

        if $z5 == 0 goto label33;

        $z13 = r34 instanceof java.lang.String;

        if $z13 == 0 goto label33;

        $r30 = (java.lang.String) r12;

        $r29 = virtualinvoke $r30.<java.lang.String: java.lang.String trim()>();

        $z12 = virtualinvoke $r29.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z12 == 0 goto label31;

     label30:
        goto label42;

     label31:
        $r32 = (java.lang.String) r34;

        $r31 = (java.lang.String) r12;

        $i10 = virtualinvoke $r32.<java.lang.String: int compareToIgnoreCase(java.lang.String)>($r31);

        if $i10 == 0 goto label40;

     label32:
        return 0;

     label33:
        if r12 == null goto label36;

        $r19 = virtualinvoke r34.<java.lang.Object: java.lang.Class getClass()>();

        $z8 = staticinvoke <gov.nist.core.GenericObject: boolean isMySubclass(java.lang.Class)>($r19);

        if $z8 == 0 goto label36;

        $r23 = virtualinvoke r12.<java.lang.Object: java.lang.Class getClass()>();

        $z10 = staticinvoke <gov.nist.core.GenericObject: boolean isMySubclass(java.lang.Class)>($r23);

        if $z10 == 0 goto label36;

        $r22 = virtualinvoke r34.<java.lang.Object: java.lang.Class getClass()>();

        $r21 = virtualinvoke r12.<java.lang.Object: java.lang.Class getClass()>();

        $z11 = virtualinvoke $r22.<java.lang.Object: boolean equals(java.lang.Object)>($r21);

        if $z11 == 0 goto label36;

        $r26 = (gov.nist.core.GenericObject) r12;

        $r25 = virtualinvoke $r26.<gov.nist.core.GenericObject: gov.nist.core.Match getMatcher()>();

        if $r25 == null goto label36;

        $r24 = (gov.nist.core.GenericObject) r34;

        r13 = virtualinvoke $r24.<gov.nist.core.GenericObject: java.lang.String encode()>();

        $r28 = (gov.nist.core.GenericObject) r12;

        $r27 = virtualinvoke $r28.<gov.nist.core.GenericObject: gov.nist.core.Match getMatcher()>();

        z0 = interfaceinvoke $r27.<gov.nist.core.Match: boolean match(java.lang.String)>(r13);

        if z0 != 0 goto label35;

     label34:
        return 0;

     label35:
        goto label40;

     label36:
        $r16 = virtualinvoke r34.<java.lang.Object: java.lang.Class getClass()>();

        $z4 = staticinvoke <gov.nist.core.GenericObject: boolean isMySubclass(java.lang.Class)>($r16);

        if $z4 == 0 goto label38;

        $r20 = (gov.nist.core.GenericObject) r34;

        $z9 = virtualinvoke $r20.<gov.nist.core.GenericObject: boolean match(java.lang.Object)>(r12);

        if $z9 != 0 goto label38;

     label37:
        return 0;

     label38:
        $r18 = virtualinvoke r34.<java.lang.Object: java.lang.Class getClass()>();

        $z7 = staticinvoke <gov.nist.core.GenericObjectList: boolean isMySubclass(java.lang.Class)>($r18);

        if $z7 == 0 goto label40;

        $r17 = (gov.nist.core.GenericObjectList) r34;

        $z6 = virtualinvoke $r17.<gov.nist.core.GenericObjectList: boolean match(java.lang.Object)>(r12);

        if $z6 != 0 goto label40;

     label39:
        return 0;

     label40:
        goto label42;

     label41:
        $r33 := @caughtexception;

        r35 = $r33;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>(r35);

     label42:
        i0 = i0 + 1;

        goto label04;

     label43:
        $z2 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(class "gov/nist/javax/sip/header/SIPObject");

        if $z2 == 0 goto label44;

        goto label45;

     label44:
        r3 = virtualinvoke r3.<java.lang.Class: java.lang.Class getSuperclass()>();

        r4 = virtualinvoke r4.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label03;

     label45:
        return 1;

        catch java.lang.IllegalAccessException from label07 to label08 with label41;
        catch java.lang.IllegalAccessException from label09 to label10 with label41;
        catch java.lang.IllegalAccessException from label11 to label12 with label41;
        catch java.lang.IllegalAccessException from label13 to label14 with label41;
        catch java.lang.IllegalAccessException from label15 to label16 with label41;
        catch java.lang.IllegalAccessException from label17 to label18 with label41;
        catch java.lang.IllegalAccessException from label19 to label20 with label41;
        catch java.lang.IllegalAccessException from label21 to label24 with label41;
        catch java.lang.IllegalAccessException from label25 to label26 with label41;
        catch java.lang.IllegalAccessException from label27 to label28 with label41;
        catch java.lang.IllegalAccessException from label29 to label30 with label41;
        catch java.lang.IllegalAccessException from label31 to label32 with label41;
        catch java.lang.IllegalAccessException from label33 to label34 with label41;
        catch java.lang.IllegalAccessException from label35 to label37 with label41;
        catch java.lang.IllegalAccessException from label38 to label39 with label41;
    }

    public java.lang.String debugDump()
    {
        gov.nist.javax.sip.header.SIPObject r0;
        java.lang.Class r1, r4, $r13, $r14, $r24;
        java.lang.reflect.Field[] r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        java.lang.reflect.Field r3;
        java.lang.String r5, r6, $r7, $r8, $r11, $r19, $r21, $r22, $r25, $r28, $r36, $r37, $r39;
        java.lang.StringBuilder $r9, $r10, $r12, $r16, $r17, $r18, $r26, $r30, $r31, $r40, $r41, $r42;
        boolean $z0, $z1, $z2, z3;
        java.lang.Object $r15, $r20, $r23, $r27, $r29, $r33, $r34, $r35;
        gov.nist.core.GenericObjectList $r32;
        gov.nist.core.GenericObject $r38;
        java.lang.IllegalAccessException $r43;
        short s18;
        char c19;
        long l20;
        double d0;
        float f0;

        r0 := @this: gov.nist.javax.sip.header.SIPObject;

        r0.<gov.nist.javax.sip.header.SIPObject: java.lang.String stringRepresentation> = "";

        r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r0.<gov.nist.javax.sip.header.SIPObject: void sprint(java.lang.String)>($r7);

        virtualinvoke r0.<gov.nist.javax.sip.header.SIPObject: void sprint(java.lang.String)>("{");

        r2 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        i0 = 0;

     label01:
        $i3 = lengthof r2;

        if i0 >= $i3 goto label25;

        r3 = r2[i0];

        i1 = virtualinvoke r3.<java.lang.reflect.Field: int getModifiers()>();

        $i4 = i1 & 2;

        if $i4 != 2 goto label02;

        goto label24;

     label02:
        r4 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Class getType()>();

        r5 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.String getName()>();

        $i6 = virtualinvoke r5.<java.lang.String: int compareTo(java.lang.String)>("stringRepresentation");

        if $i6 != 0 goto label03;

        goto label24;

     label03:
        $i5 = virtualinvoke r5.<java.lang.String: int compareTo(java.lang.String)>("indentation");

        if $i5 != 0 goto label04;

        goto label24;

     label04:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<gov.nist.javax.sip.header.SIPObject: void sprint(java.lang.String)>($r11);

     label05:
        $z0 = virtualinvoke r4.<java.lang.Class: boolean isPrimitive()>();

        if $z0 == 0 goto label13;

        r6 = virtualinvoke r4.<java.lang.Class: java.lang.String toString()>();

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<gov.nist.javax.sip.header.SIPObject: void sprint(java.lang.String)>($r39);

        $i14 = virtualinvoke r6.<java.lang.String: int compareTo(java.lang.String)>("int");

        if $i14 != 0 goto label06;

        i2 = virtualinvoke r3.<java.lang.reflect.Field: int getInt(java.lang.Object)>(r0);

        virtualinvoke r0.<gov.nist.javax.sip.header.SIPObject: void sprint(int)>(i2);

        goto label12;

     label06:
        $i15 = virtualinvoke r6.<java.lang.String: int compareTo(java.lang.String)>("short");

        if $i15 != 0 goto label07;

        s18 = virtualinvoke r3.<java.lang.reflect.Field: short getShort(java.lang.Object)>(r0);

        virtualinvoke r0.<gov.nist.javax.sip.header.SIPObject: void sprint(short)>(s18);

        goto label12;

     label07:
        $i16 = virtualinvoke r6.<java.lang.String: int compareTo(java.lang.String)>("char");

        if $i16 != 0 goto label08;

        c19 = virtualinvoke r3.<java.lang.reflect.Field: char getChar(java.lang.Object)>(r0);

        virtualinvoke r0.<gov.nist.javax.sip.header.SIPObject: void sprint(char)>(c19);

        goto label12;

     label08:
        $i17 = virtualinvoke r6.<java.lang.String: int compareTo(java.lang.String)>("long");

        if $i17 != 0 goto label09;

        l20 = virtualinvoke r3.<java.lang.reflect.Field: long getLong(java.lang.Object)>(r0);

        virtualinvoke r0.<gov.nist.javax.sip.header.SIPObject: void sprint(long)>(l20);

        goto label12;

     label09:
        $i11 = virtualinvoke r6.<java.lang.String: int compareTo(java.lang.String)>("boolean");

        if $i11 != 0 goto label10;

        z3 = virtualinvoke r3.<java.lang.reflect.Field: boolean getBoolean(java.lang.Object)>(r0);

        virtualinvoke r0.<gov.nist.javax.sip.header.SIPObject: void sprint(boolean)>(z3);

        goto label12;

     label10:
        $i12 = virtualinvoke r6.<java.lang.String: int compareTo(java.lang.String)>("double");

        if $i12 != 0 goto label11;

        d0 = virtualinvoke r3.<java.lang.reflect.Field: double getDouble(java.lang.Object)>(r0);

        virtualinvoke r0.<gov.nist.javax.sip.header.SIPObject: void sprint(double)>(d0);

        goto label12;

     label11:
        $i13 = virtualinvoke r6.<java.lang.String: int compareTo(java.lang.String)>("float");

        if $i13 != 0 goto label12;

        f0 = virtualinvoke r3.<java.lang.reflect.Field: float getFloat(java.lang.Object)>(r0);

        virtualinvoke r0.<gov.nist.javax.sip.header.SIPObject: void sprint(float)>(f0);

     label12:
        goto label22;

     label13:
        $r13 = class "gov/nist/core/GenericObject";

        $z1 = virtualinvoke $r13.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r4);

        if $z1 == 0 goto label15;

        $r35 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        if $r35 == null goto label14;

        $r34 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        $r38 = (gov.nist.core.GenericObject) $r34;

        $i9 = r0.<gov.nist.javax.sip.header.SIPObject: int indentation>;

        $i10 = $i9 + 1;

        $r37 = virtualinvoke $r38.<gov.nist.core.GenericObject: java.lang.String debugDump(int)>($i10);

        virtualinvoke r0.<gov.nist.javax.sip.header.SIPObject: void sprint(java.lang.String)>($r37);

        goto label22;

     label14:
        virtualinvoke r0.<gov.nist.javax.sip.header.SIPObject: void sprint(java.lang.String)>("<null>");

        goto label22;

     label15:
        $r14 = class "gov/nist/core/GenericObjectList";

        $z2 = virtualinvoke $r14.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r4);

        if $z2 == 0 goto label17;

        $r29 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        if $r29 == null goto label16;

        $r33 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        $r32 = (gov.nist.core.GenericObjectList) $r33;

        $i8 = r0.<gov.nist.javax.sip.header.SIPObject: int indentation>;

        $i7 = $i8 + 1;

        $r36 = virtualinvoke $r32.<gov.nist.core.GenericObjectList: java.lang.String debugDump(int)>($i7);

        virtualinvoke r0.<gov.nist.javax.sip.header.SIPObject: void sprint(java.lang.String)>($r36);

        goto label22;

     label16:
        virtualinvoke r0.<gov.nist.javax.sip.header.SIPObject: void sprint(java.lang.String)>("<null>");

        goto label22;

     label17:
        $r15 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        if $r15 == null goto label18;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        $r24 = virtualinvoke $r27.<java.lang.Object: java.lang.Class getClass()>();

        $r25 = virtualinvoke $r24.<java.lang.Class: java.lang.String getName()>();

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r28 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<gov.nist.javax.sip.header.SIPObject: void sprint(java.lang.String)>($r28);

        goto label19;

     label18:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke r4.<java.lang.Class: java.lang.String getName()>();

        $r16 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r22 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<gov.nist.javax.sip.header.SIPObject: void sprint(java.lang.String)>($r22);

     label19:
        virtualinvoke r0.<gov.nist.javax.sip.header.SIPObject: void sprint(java.lang.String)>("{");

        $r23 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        if $r23 == null goto label20;

        $r20 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        $r21 = virtualinvoke $r20.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r0.<gov.nist.javax.sip.header.SIPObject: void sprint(java.lang.String)>($r21);

        goto label21;

     label20:
        virtualinvoke r0.<gov.nist.javax.sip.header.SIPObject: void sprint(java.lang.String)>("<null>");

     label21:
        virtualinvoke r0.<gov.nist.javax.sip.header.SIPObject: void sprint(java.lang.String)>("}");

     label22:
        goto label24;

     label23:
        $r43 := @caughtexception;

        goto label24;

     label24:
        i0 = i0 + 1;

        goto label01;

     label25:
        virtualinvoke r0.<gov.nist.javax.sip.header.SIPObject: void sprint(java.lang.String)>("}");

        $r8 = r0.<gov.nist.javax.sip.header.SIPObject: java.lang.String stringRepresentation>;

        return $r8;

        catch java.lang.IllegalAccessException from label05 to label22 with label23;
    }

    public java.lang.String debugDump(int)
    {
        gov.nist.javax.sip.header.SIPObject r0;
        int i0, i1;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.header.SIPObject;

        i0 := @parameter0: int;

        i1 = r0.<gov.nist.javax.sip.header.SIPObject: int indentation>;

        r0.<gov.nist.javax.sip.header.SIPObject: int indentation> = i0;

        r1 = virtualinvoke r0.<gov.nist.javax.sip.header.SIPObject: java.lang.String debugDump()>();

        r0.<gov.nist.javax.sip.header.SIPObject: int indentation> = i1;

        return r1;
    }

    public java.lang.String toString()
    {
        gov.nist.javax.sip.header.SIPObject r0;
        java.lang.String $r1;

        r0 := @this: gov.nist.javax.sip.header.SIPObject;

        $r1 = virtualinvoke r0.<gov.nist.javax.sip.header.SIPObject: java.lang.String encode()>();

        return $r1;
    }
}
