class gov.nist.javax.sip.NistSipMessageFactoryImpl extends java.lang.Object implements gov.nist.javax.sip.stack.StackMessageFactory
{
    private gov.nist.javax.sip.SipStackImpl sipStack;

    public gov.nist.javax.sip.stack.ServerRequestInterface newSIPServerRequest(gov.nist.javax.sip.message.SIPRequest, gov.nist.javax.sip.stack.MessageChannel)
    {
        gov.nist.javax.sip.NistSipMessageFactoryImpl r0;
        gov.nist.javax.sip.message.SIPRequest r1;
        gov.nist.javax.sip.stack.MessageChannel r2;
        gov.nist.javax.sip.SipStackImpl r3, $r11, $r12;
        gov.nist.javax.sip.DialogFilter r4, $r7;
        java.lang.IllegalArgumentException $r5;
        gov.nist.javax.sip.stack.SIPTransactionStack $r6;
        boolean $z0, $z1;
        gov.nist.javax.sip.stack.MessageProcessor $r8;
        gov.nist.javax.sip.ListeningPointImpl $r9, $r10;
        gov.nist.core.StackLogger $r13;
        java.lang.StringBuilder $r14, $r15, $r16, $r18, $r19, $r20, $r21;
        java.lang.String $r17, $r23;
        gov.nist.javax.sip.stack.SIPTransaction $r22;

        r0 := @this: gov.nist.javax.sip.NistSipMessageFactoryImpl;

        r1 := @parameter0: gov.nist.javax.sip.message.SIPRequest;

        r2 := @parameter1: gov.nist.javax.sip.stack.MessageChannel;

        if r2 == null goto label1;

        if r1 != null goto label2;

     label1:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null Arg!");

        throw $r5;

     label2:
        $r6 = virtualinvoke r2.<gov.nist.javax.sip.stack.MessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()>();

        r3 = (gov.nist.javax.sip.SipStackImpl) $r6;

        $r7 = new gov.nist.javax.sip.DialogFilter;

        specialinvoke $r7.<gov.nist.javax.sip.DialogFilter: void <init>(gov.nist.javax.sip.SipStackImpl)>(r3);

        r4 = $r7;

        $z0 = r2 instanceof gov.nist.javax.sip.stack.SIPTransaction;

        if $z0 == 0 goto label3;

        $r22 = (gov.nist.javax.sip.stack.SIPTransaction) r2;

        r4.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.stack.SIPTransaction transactionChannel> = $r22;

     label3:
        $r8 = virtualinvoke r2.<gov.nist.javax.sip.stack.MessageChannel: gov.nist.javax.sip.stack.MessageProcessor getMessageProcessor()>();

        $r9 = virtualinvoke $r8.<gov.nist.javax.sip.stack.MessageProcessor: gov.nist.javax.sip.ListeningPointImpl getListeningPoint()>();

        r4.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.ListeningPointImpl listeningPoint> = $r9;

        $r10 = r4.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.ListeningPointImpl listeningPoint>;

        if $r10 != null goto label4;

        return null;

     label4:
        $r11 = r0.<gov.nist.javax.sip.NistSipMessageFactoryImpl: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z1 = virtualinvoke $r11.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label5;

        $r12 = r0.<gov.nist.javax.sip.NistSipMessageFactoryImpl: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r13 = virtualinvoke $r12.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Returning request interface for ");

        $r17 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getFirstLine()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" messageChannel = ");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r13.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r23);

     label5:
        return r4;
    }

    public gov.nist.javax.sip.stack.ServerResponseInterface newSIPServerResponse(gov.nist.javax.sip.message.SIPResponse, gov.nist.javax.sip.stack.MessageChannel)
    {
        gov.nist.javax.sip.NistSipMessageFactoryImpl r0;
        gov.nist.javax.sip.message.SIPResponse r1;
        gov.nist.javax.sip.stack.MessageChannel r2;
        gov.nist.javax.sip.stack.SIPTransactionStack r3;
        gov.nist.javax.sip.stack.SIPTransaction r4;
        gov.nist.javax.sip.DialogFilter r5, $r7;
        gov.nist.javax.sip.SipStackImpl $r6, $r8, $r14, $r15, $r21, $r23, $r26;
        boolean $z0, $z1, $z2;
        gov.nist.javax.sip.stack.MessageProcessor $r9;
        gov.nist.javax.sip.ListeningPointImpl $r10;
        javax.sip.TransactionState $r11, $r12, $r13;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r16, $r18, $r20, $r24, $r25, $r28, $r30, $r31;
        gov.nist.core.StackLogger $r17, $r22, $r27;
        java.lang.String $r19, $r29;

        r0 := @this: gov.nist.javax.sip.NistSipMessageFactoryImpl;

        r1 := @parameter0: gov.nist.javax.sip.message.SIPResponse;

        r2 := @parameter1: gov.nist.javax.sip.stack.MessageChannel;

        r3 = virtualinvoke r2.<gov.nist.javax.sip.stack.MessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()>();

        r4 = virtualinvoke r3.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.SIPTransaction findTransaction(gov.nist.javax.sip.message.SIPMessage,boolean)>(r1, 0);

        $r6 = r0.<gov.nist.javax.sip.NistSipMessageFactoryImpl: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z0 = virtualinvoke $r6.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label1;

        $r26 = r0.<gov.nist.javax.sip.NistSipMessageFactoryImpl: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r27 = virtualinvoke $r26.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found Transaction ");

        $r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r28 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r27.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r29);

     label1:
        if r4 == null goto label5;

        $r11 = virtualinvoke r4.<gov.nist.javax.sip.stack.SIPTransaction: javax.sip.TransactionState getState()>();

        if $r11 != null goto label3;

        $r21 = r0.<gov.nist.javax.sip.NistSipMessageFactoryImpl: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z2 = virtualinvoke $r21.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z2 == 0 goto label2;

        $r23 = r0.<gov.nist.javax.sip.NistSipMessageFactoryImpl: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r22 = virtualinvoke $r23.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r22.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Dropping response - null transaction state");

     label2:
        return null;

     label3:
        $r12 = <javax.sip.TransactionState: javax.sip.TransactionState COMPLETED>;

        $r13 = virtualinvoke r4.<gov.nist.javax.sip.stack.SIPTransaction: javax.sip.TransactionState getState()>();

        if $r12 != $r13 goto label5;

        $i0 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

        $i1 = $i0 / 100;

        if $i1 != 1 goto label5;

        $r14 = r0.<gov.nist.javax.sip.NistSipMessageFactoryImpl: gov.nist.javax.sip.SipStackImpl sipStack>;

        $z1 = virtualinvoke $r14.<gov.nist.javax.sip.SipStackImpl: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label4;

        $r15 = r0.<gov.nist.javax.sip.NistSipMessageFactoryImpl: gov.nist.javax.sip.SipStackImpl sipStack>;

        $r17 = virtualinvoke $r15.<gov.nist.javax.sip.SipStackImpl: gov.nist.core.StackLogger getStackLogger()>();

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dropping response - late arriving ");

        $i2 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPResponse: int getStatusCode()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r17.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r19);

     label4:
        return null;

     label5:
        $r7 = new gov.nist.javax.sip.DialogFilter;

        $r8 = r0.<gov.nist.javax.sip.NistSipMessageFactoryImpl: gov.nist.javax.sip.SipStackImpl sipStack>;

        specialinvoke $r7.<gov.nist.javax.sip.DialogFilter: void <init>(gov.nist.javax.sip.SipStackImpl)>($r8);

        r5 = $r7;

        r5.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.stack.SIPTransaction transactionChannel> = r4;

        $r9 = virtualinvoke r2.<gov.nist.javax.sip.stack.MessageChannel: gov.nist.javax.sip.stack.MessageProcessor getMessageProcessor()>();

        $r10 = virtualinvoke $r9.<gov.nist.javax.sip.stack.MessageProcessor: gov.nist.javax.sip.ListeningPointImpl getListeningPoint()>();

        r5.<gov.nist.javax.sip.DialogFilter: gov.nist.javax.sip.ListeningPointImpl listeningPoint> = $r10;

        return r5;
    }

    public void <init>(gov.nist.javax.sip.SipStackImpl)
    {
        gov.nist.javax.sip.NistSipMessageFactoryImpl r0;
        gov.nist.javax.sip.SipStackImpl r1;

        r0 := @this: gov.nist.javax.sip.NistSipMessageFactoryImpl;

        r1 := @parameter0: gov.nist.javax.sip.SipStackImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<gov.nist.javax.sip.NistSipMessageFactoryImpl: gov.nist.javax.sip.SipStackImpl sipStack> = r1;

        return;
    }
}
