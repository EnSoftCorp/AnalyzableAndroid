public class gov.nist.javax.sip.parser.OrganizationParser extends gov.nist.javax.sip.parser.HeaderParser
{

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.OrganizationParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.OrganizationParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(java.lang.String)>(r1);

        return;
    }

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.OrganizationParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.OrganizationParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    public gov.nist.javax.sip.header.SIPHeader parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.OrganizationParser r0;
        gov.nist.javax.sip.header.Organization r1, r3, $r5;
        java.lang.String r2, $r8;
        java.lang.Throwable r4, $r9;
        boolean $z0, $z1, $z2;
        gov.nist.core.LexerCore $r6, $r7;

        r0 := @this: gov.nist.javax.sip.parser.OrganizationParser;

        $z0 = <gov.nist.javax.sip.parser.OrganizationParser: boolean debug>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<gov.nist.javax.sip.parser.OrganizationParser: void dbg_enter(java.lang.String)>("OrganizationParser.parse");

     label1:
        $r5 = new gov.nist.javax.sip.header.Organization;

        specialinvoke $r5.<gov.nist.javax.sip.header.Organization: void <init>()>();

        r1 = $r5;

     label2:
        virtualinvoke r0.<gov.nist.javax.sip.parser.OrganizationParser: void headerName(int)>(2093);

        virtualinvoke r1.<gov.nist.javax.sip.header.Organization: void setHeaderName(java.lang.String)>("Organization");

        $r6 = r0.<gov.nist.javax.sip.parser.OrganizationParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r6.<gov.nist.core.LexerCore: void SPorHT()>();

        $r7 = r0.<gov.nist.javax.sip.parser.OrganizationParser: gov.nist.core.LexerCore lexer>;

        r2 = virtualinvoke $r7.<gov.nist.core.LexerCore: java.lang.String getRest()>();

        $r8 = virtualinvoke r2.<java.lang.String: java.lang.String trim()>();

        virtualinvoke r1.<gov.nist.javax.sip.header.Organization: void setOrganization(java.lang.String)>($r8);

        r3 = r1;

     label3:
        $z1 = <gov.nist.javax.sip.parser.OrganizationParser: boolean debug>;

        if $z1 == 0 goto label4;

        virtualinvoke r0.<gov.nist.javax.sip.parser.OrganizationParser: void dbg_leave(java.lang.String)>("OrganizationParser.parse");

     label4:
        return r3;

     label5:
        $r9 := @caughtexception;

        r4 = $r9;

     label6:
        $z2 = <gov.nist.javax.sip.parser.OrganizationParser: boolean debug>;

        if $z2 == 0 goto label7;

        virtualinvoke r0.<gov.nist.javax.sip.parser.OrganizationParser: void dbg_leave(java.lang.String)>("OrganizationParser.parse");

     label7:
        throw r4;

        catch java.lang.Throwable from label2 to label3 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }
}
