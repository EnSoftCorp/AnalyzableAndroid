public class gov.nist.javax.sip.stack.UDPMessageChannel extends gov.nist.javax.sip.stack.MessageChannel implements gov.nist.javax.sip.parser.ParseExceptionListener, java.lang.Runnable, gov.nist.javax.sip.stack.RawMessageChannel
{
    protected gov.nist.javax.sip.stack.SIPTransactionStack sipStack;
    protected gov.nist.javax.sip.parser.StringMsgParser myParser;
    private java.net.InetAddress peerAddress;
    private java.lang.String myAddress;
    private int peerPacketSourcePort;
    private java.net.InetAddress peerPacketSourceAddress;
    private int peerPort;
    private java.lang.String peerProtocol;
    protected int myPort;
    private java.net.DatagramPacket incomingPacket;
    private long receptionTime;
    private java.util.Hashtable pingBackRecord;

    protected void <init>(gov.nist.javax.sip.stack.SIPTransactionStack, gov.nist.javax.sip.stack.UDPMessageProcessor)
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        gov.nist.javax.sip.stack.SIPTransactionStack r1;
        gov.nist.javax.sip.stack.UDPMessageProcessor r2;
        java.lang.Thread r3, $r5;
        java.util.Hashtable $r4;
        java.net.InetAddress $r6;
        java.lang.String $r7;
        int $i0;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        r1 := @parameter0: gov.nist.javax.sip.stack.SIPTransactionStack;

        r2 := @parameter1: gov.nist.javax.sip.stack.UDPMessageProcessor;

        specialinvoke r0.<gov.nist.javax.sip.stack.MessageChannel: void <init>()>();

        $r4 = new java.util.Hashtable;

        specialinvoke $r4.<java.util.Hashtable: void <init>()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.util.Hashtable pingBackRecord> = $r4;

        r0.<gov.nist.javax.sip.stack.MessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor> = r2;

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack> = r1;

        $r5 = new java.lang.Thread;

        specialinvoke $r5.<java.lang.Thread: void <init>(java.lang.Runnable)>(r0);

        r3 = $r5;

        $r6 = virtualinvoke r2.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.net.InetAddress getIpAddress()>();

        $r7 = virtualinvoke $r6.<java.net.InetAddress: java.lang.String getHostAddress()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String myAddress> = $r7;

        $i0 = virtualinvoke r2.<gov.nist.javax.sip.stack.UDPMessageProcessor: int getPort()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int myPort> = $i0;

        virtualinvoke r3.<java.lang.Thread: void setName(java.lang.String)>("UDPMessageChannelThread");

        virtualinvoke r3.<java.lang.Thread: void setDaemon(boolean)>(1);

        virtualinvoke r3.<java.lang.Thread: void start()>();

        return;
    }

    protected void <init>(gov.nist.javax.sip.stack.SIPTransactionStack, gov.nist.javax.sip.stack.UDPMessageProcessor, java.net.DatagramPacket)
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        gov.nist.javax.sip.stack.SIPTransactionStack r1;
        gov.nist.javax.sip.stack.UDPMessageProcessor r2;
        java.net.DatagramPacket r3;
        java.lang.Thread r4, $r8;
        java.util.Hashtable $r5;
        java.net.InetAddress $r6;
        java.lang.String $r7;
        int $i0;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        r1 := @parameter0: gov.nist.javax.sip.stack.SIPTransactionStack;

        r2 := @parameter1: gov.nist.javax.sip.stack.UDPMessageProcessor;

        r3 := @parameter2: java.net.DatagramPacket;

        specialinvoke r0.<gov.nist.javax.sip.stack.MessageChannel: void <init>()>();

        $r5 = new java.util.Hashtable;

        specialinvoke $r5.<java.util.Hashtable: void <init>()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.util.Hashtable pingBackRecord> = $r5;

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.DatagramPacket incomingPacket> = r3;

        r0.<gov.nist.javax.sip.stack.MessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor> = r2;

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack> = r1;

        $r6 = virtualinvoke r2.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.net.InetAddress getIpAddress()>();

        $r7 = virtualinvoke $r6.<java.net.InetAddress: java.lang.String getHostAddress()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String myAddress> = $r7;

        $i0 = virtualinvoke r2.<gov.nist.javax.sip.stack.UDPMessageProcessor: int getPort()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int myPort> = $i0;

        $r8 = new java.lang.Thread;

        specialinvoke $r8.<java.lang.Thread: void <init>(java.lang.Runnable)>(r0);

        r4 = $r8;

        virtualinvoke r4.<java.lang.Thread: void setDaemon(boolean)>(1);

        virtualinvoke r4.<java.lang.Thread: void setName(java.lang.String)>("UDPMessageChannelThread");

        virtualinvoke r4.<java.lang.Thread: void start()>();

        return;
    }

    protected void <init>(java.net.InetAddress, int, gov.nist.javax.sip.stack.SIPTransactionStack, gov.nist.javax.sip.stack.UDPMessageProcessor)
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        java.net.InetAddress r1, $r5;
        int i0, $i1;
        gov.nist.javax.sip.stack.SIPTransactionStack r2, $r7;
        gov.nist.javax.sip.stack.UDPMessageProcessor r3;
        java.util.Hashtable $r4;
        java.lang.String $r6, $r11, $r15;
        boolean $z0;
        gov.nist.core.StackLogger $r8;
        java.lang.StringBuilder $r9, $r10, $r12, $r13, $r14;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        r1 := @parameter0: java.net.InetAddress;

        i0 := @parameter1: int;

        r2 := @parameter2: gov.nist.javax.sip.stack.SIPTransactionStack;

        r3 := @parameter3: gov.nist.javax.sip.stack.UDPMessageProcessor;

        specialinvoke r0.<gov.nist.javax.sip.stack.MessageChannel: void <init>()>();

        $r4 = new java.util.Hashtable;

        specialinvoke $r4.<java.util.Hashtable: void <init>()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.util.Hashtable pingBackRecord> = $r4;

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress> = r1;

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPort> = i0;

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String peerProtocol> = "UDP";

        r0.<gov.nist.javax.sip.stack.MessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor> = r3;

        $r5 = virtualinvoke r3.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.net.InetAddress getIpAddress()>();

        $r6 = virtualinvoke $r5.<java.net.InetAddress: java.lang.String getHostAddress()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String myAddress> = $r6;

        $i1 = virtualinvoke r3.<gov.nist.javax.sip.stack.UDPMessageProcessor: int getPort()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int myPort> = $i1;

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack> = r2;

        $z0 = virtualinvoke r2.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label1;

        $r7 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r8 = virtualinvoke $r7.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating message channel ");

        $r11 = virtualinvoke r1.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r15);

     label1:
        return;
    }

    public void run()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        gov.nist.core.ThreadAuditor$ThreadHandle r1;
        java.net.DatagramPacket r2;
        java.util.LinkedList r3, $r11, $r14, $r18, $r23;
        java.lang.Throwable r5, $r29;
        gov.nist.javax.sip.parser.StringMsgParser $r6, $r26, $r27;
        gov.nist.javax.sip.stack.SIPTransactionStack $r7, $r8, $r25, $r31;
        int $i0, $i1;
        gov.nist.javax.sip.stack.MessageProcessor $r9, $r12, $r16, $r19, $r22, $r32;
        gov.nist.javax.sip.stack.UDPMessageProcessor $r10, $r13, $r15, $r20, $r21, $r33;
        boolean $z0, $z1, $z2;
        java.lang.Object $r17;
        long $l2;
        gov.nist.core.ThreadAuditor $r24;
        gov.nist.core.StackLogger $r28;
        java.lang.Exception $r30, r35;
        java.lang.InterruptedException $r34;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        r1 = null;

     label01:
        $r6 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.parser.StringMsgParser myParser>;

        if $r6 != null goto label02;

        $r26 = new gov.nist.javax.sip.parser.StringMsgParser;

        specialinvoke $r26.<gov.nist.javax.sip.parser.StringMsgParser: void <init>()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.parser.StringMsgParser myParser> = $r26;

        $r27 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.parser.StringMsgParser myParser>;

        virtualinvoke $r27.<gov.nist.javax.sip.parser.StringMsgParser: void setParseExceptionListener(gov.nist.javax.sip.parser.ParseExceptionListener)>(r0);

     label02:
        $r7 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $i0 = $r7.<gov.nist.javax.sip.stack.SIPTransactionStack: int threadPoolSize>;

        if $i0 == -1 goto label16;

        $r9 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor>;

        $r10 = (gov.nist.javax.sip.stack.UDPMessageProcessor) $r9;

        $r11 = $r10.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.util.LinkedList messageQueue>;

        r3 = $r11;

        entermonitor $r11;

     label03:
        $r12 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor>;

        $r13 = (gov.nist.javax.sip.stack.UDPMessageProcessor) $r12;

        $r14 = $r13.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.util.LinkedList messageQueue>;

        $z0 = virtualinvoke $r14.<java.util.LinkedList: boolean isEmpty()>();

        if $z0 == 0 goto label11;

        $r19 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor>;

        $r20 = (gov.nist.javax.sip.stack.UDPMessageProcessor) $r19;

        $z1 = $r20.<gov.nist.javax.sip.stack.UDPMessageProcessor: boolean isRunning>;

        if $z1 != 0 goto label05;

        exitmonitor r3;

     label04:
        return;

     label05:
        if r1 != null goto label06;

        $r25 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r24 = virtualinvoke $r25.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.ThreadAuditor getThreadAuditor()>();

        r1 = virtualinvoke $r24.<gov.nist.core.ThreadAuditor: gov.nist.core.ThreadAuditor$ThreadHandle addCurrentThread()>();

     label06:
        virtualinvoke r1.<gov.nist.core.ThreadAuditor$ThreadHandle: void ping()>();

        $r22 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor>;

        $r21 = (gov.nist.javax.sip.stack.UDPMessageProcessor) $r22;

        $r23 = $r21.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.util.LinkedList messageQueue>;

        $l2 = virtualinvoke r1.<gov.nist.core.ThreadAuditor$ThreadHandle: long getPingIntervalInMillisecs()>();

        virtualinvoke $r23.<java.lang.Object: void wait(long)>($l2);

     label07:
        goto label03;

     label08:
        $r34 := @caughtexception;

        $r32 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor>;

        $r33 = (gov.nist.javax.sip.stack.UDPMessageProcessor) $r32;

        $z2 = $r33.<gov.nist.javax.sip.stack.UDPMessageProcessor: boolean isRunning>;

        if $z2 != 0 goto label10;

        exitmonitor r3;

     label09:
        return;

     label10:
        goto label03;

     label11:
        $r16 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor>;

        $r15 = (gov.nist.javax.sip.stack.UDPMessageProcessor) $r16;

        $r18 = $r15.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.util.LinkedList messageQueue>;

        $r17 = virtualinvoke $r18.<java.util.LinkedList: java.lang.Object removeFirst()>();

        r2 = (java.net.DatagramPacket) $r17;

        exitmonitor r3;

     label12:
        goto label15;

     label13:
        $r29 := @caughtexception;

        r5 = $r29;

        exitmonitor r3;

     label14:
        throw r5;

     label15:
        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.DatagramPacket incomingPacket> = r2;

        goto label17;

     label16:
        r2 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.DatagramPacket incomingPacket>;

     label17:
        specialinvoke r0.<gov.nist.javax.sip.stack.UDPMessageChannel: void processIncomingDataPacket(java.net.DatagramPacket)>(r2);

     label18:
        goto label20;

     label19:
        $r30 := @caughtexception;

        r35 = $r30;

        $r31 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r28 = virtualinvoke $r31.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r28.<gov.nist.core.StackLogger: void logError(java.lang.String,java.lang.Exception)>("Error while processing incoming UDP packet", r35);

     label20:
        $r8 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $i1 = $r8.<gov.nist.javax.sip.stack.SIPTransactionStack: int threadPoolSize>;

        if $i1 != -1 goto label21;

        return;

     label21:
        goto label01;

        catch java.lang.InterruptedException from label05 to label07 with label08;
        catch java.lang.Throwable from label03 to label04 with label13;
        catch java.lang.Throwable from label05 to label09 with label13;
        catch java.lang.Throwable from label10 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
        catch java.lang.Exception from label17 to label18 with label19;
    }

    private void processIncomingDataPacket(java.net.DatagramPacket) throws java.lang.Exception
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        java.net.DatagramPacket r1, $r69, r131;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        byte[] r2, r3, $r103, r130;
        java.text.ParseException r4, $r95, $r106, r136;
        java.lang.String r5, r6, $r13, $r20, $r36, $r45, $r54, $r56, $r57, $r59, $r60, $r64, $r67, $r71, $r82, $r87, $r96, $r107, $r109, $r111, $r116, $r127, r133;
        java.io.IOException r7, $r94;
        java.net.InetAddress $r8, $r43, $r44, $r52, $r53, $r55, $r58, $r61, $r77, $r81, $r88, $r104;
        gov.nist.javax.sip.stack.SIPTransactionStack $r9, $r12, $r14, $r19, $r50, $r65, $r74, $r79, $r80, $r93, $r100, $r101, $r105, $r108, $r112, $r117, $r119, $r121, $r126;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10;
        long $l1;
        gov.nist.javax.sip.parser.StringMsgParser $r10;
        javax.sip.header.FromHeader $r11, $r26;
        java.lang.StringBuilder $r15, $r17, $r18, $r21, $r23, $r24, $r25, $r27, $r30, $r32, $r33, $r34, $r35, $r37, $r63, $r66, $r70, $r72, $r85, $r86, $r89, $r90, $r97, $r98, $r99, $r110, $r114, $r115, $r123, $r124, $r128;
        gov.nist.core.StackLogger $r16, $r22, $r78, $r91, $r92, $r102, $r113, $r118, $r120, $r122, $r125;
        javax.sip.header.CallIdHeader $r28, $r41;
        javax.sip.header.ToHeader $r29, $r42;
        javax.sip.header.CSeqHeader $r31, $r40;
        gov.nist.javax.sip.header.ViaList $r38, $r39, r132;
        gov.nist.javax.sip.header.Via $r46, r134;
        javax.sip.header.Header $r47, $r51;
        javax.sip.address.Hop $r48, r135;
        gov.nist.core.net.AddressResolver $r49;
        java.util.Hashtable $r62;
        java.lang.Object $r68;
        java.net.DatagramSocket $r73;
        gov.nist.javax.sip.stack.MessageProcessor $r75;
        gov.nist.javax.sip.stack.UDPMessageProcessor $r76;
        java.util.Timer $r83;
        gov.nist.javax.sip.stack.UDPMessageChannel$PingBackTimerTask $r84;
        gov.nist.javax.sip.message.SIPMessage r129;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        r1 := @parameter0: java.net.DatagramPacket;

        $r8 = virtualinvoke r1.<java.net.DatagramPacket: java.net.InetAddress getAddress()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress> = $r8;

        i0 = virtualinvoke r1.<java.net.DatagramPacket: int getLength()>();

        r2 = virtualinvoke r1.<java.net.DatagramPacket: byte[] getData()>();

        r3 = newarray (byte)[i0];

        staticinvoke <java.lang.System: void arraycopy(byte[],int,byte[],int,int)>(r2, 0, r3, 0, i0);

        $r9 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r9.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label01;

        $r79 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r91 = virtualinvoke $r79.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r90 = new java.lang.StringBuilder;

        specialinvoke $r90.<java.lang.StringBuilder: void <init>()>();

        $r89 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UDPMessageChannel: processIncomingDataPacket : peerAddress = ");

        $r88 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress>;

        $r87 = virtualinvoke $r88.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $r86 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r87);

        $r85 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i11 = virtualinvoke r1.<java.net.DatagramPacket: int getPort()>();

        $r99 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r98 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Length = ");

        $r97 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r96 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r91.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r96);

     label01:
        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: long receptionTime> = $l1;

        $r10 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.parser.StringMsgParser myParser>;

        r129 = virtualinvoke $r10.<gov.nist.javax.sip.parser.StringMsgParser: gov.nist.javax.sip.message.SIPMessage parseSIPMessage(byte[])>(r3);

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.parser.StringMsgParser myParser> = null;

     label02:
        goto label10;

     label03:
        $r106 := @caughtexception;

        r4 = $r106;

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.parser.StringMsgParser myParser> = null;

        $r105 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z7 = virtualinvoke $r105.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z7 == 0 goto label04;

        $r121 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r122 = virtualinvoke $r121.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r123 = new java.lang.StringBuilder;

        specialinvoke $r123.<java.lang.StringBuilder: void <init>()>();

        $r124 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Rejecting message !  ");

        $r109 = new java.lang.String;

        specialinvoke $r109.<java.lang.String: void <init>(byte[])>(r3);

        $r110 = virtualinvoke $r124.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r109);

        $r111 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r122.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r111);

        $r112 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r113 = virtualinvoke $r112.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r114 = new java.lang.StringBuilder;

        specialinvoke $r114.<java.lang.StringBuilder: void <init>()>();

        $r115 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error message ");

        $r116 = virtualinvoke r4.<java.text.ParseException: java.lang.String getMessage()>();

        $r128 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r116);

        $r127 = virtualinvoke $r128.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r113.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r127);

        $r126 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r125 = virtualinvoke $r126.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r125.<gov.nist.core.StackLogger: void logException(java.lang.Throwable)>(r4);

     label04:
        $r107 = new java.lang.String;

        specialinvoke $r107.<java.lang.String: void <init>(byte[],int,int)>(r3, 0, i0);

        r5 = $r107;

        $z9 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>("SIP/");

        if $z9 != 0 goto label09;

        $z8 = virtualinvoke r5.<java.lang.String: boolean startsWith(java.lang.String)>("ACK ");

        if $z8 != 0 goto label09;

        r6 = virtualinvoke r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String createBadReqRes(java.lang.String,java.text.ParseException)>(r5, r4);

        if r6 == null goto label08;

        $r101 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z6 = virtualinvoke $r101.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z6 == 0 goto label05;

        $r117 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r118 = virtualinvoke $r117.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r118.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Sending automatic 400 Bad Request:");

        $r119 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r120 = virtualinvoke $r119.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r120.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>(r6);

     label05:
        $r103 = virtualinvoke r6.<java.lang.String: byte[] getBytes()>();

        $r104 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress>;

        $i12 = virtualinvoke r1.<java.net.DatagramPacket: int getPort()>();

        virtualinvoke r0.<gov.nist.javax.sip.stack.UDPMessageChannel: void sendMessage(byte[],java.net.InetAddress,int,java.lang.String,boolean)>($r103, $r104, $i12, "UDP", 0);

     label06:
        goto label09;

     label07:
        $r94 := @caughtexception;

        r7 = $r94;

        $r93 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r92 = virtualinvoke $r93.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r92.<gov.nist.core.StackLogger: void logException(java.lang.Throwable)>(r7);

        goto label09;

     label08:
        $r108 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z5 = virtualinvoke $r108.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z5 == 0 goto label09;

        $r100 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r102 = virtualinvoke $r100.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r102.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Could not formulate automatic 400 Bad Request");

     label09:
        return;

     label10:
        if r129 != null goto label13;

        $r65 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z4 = virtualinvoke $r65.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z4 == 0 goto label11;

        $r80 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r78 = virtualinvoke $r80.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r78.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Rejecting message !  + Null message parsed.");

     label11:
        $r62 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.util.Hashtable pingBackRecord>;

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke r1.<java.net.DatagramPacket: java.net.InetAddress getAddress()>();

        $r64 = virtualinvoke $r61.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $r63 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r64);

        $r70 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $i7 = virtualinvoke r1.<java.net.DatagramPacket: int getPort()>();

        $r72 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r71 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        $r68 = virtualinvoke $r62.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r71);

        if $r68 != null goto label12;

        $r67 = "\r\n\r\n";

        r130 = virtualinvoke $r67.<java.lang.String: byte[] getBytes()>();

        $r69 = new java.net.DatagramPacket;

        $i9 = lengthof r130;

        $r77 = virtualinvoke r1.<java.net.DatagramPacket: java.net.InetAddress getAddress()>();

        $i8 = virtualinvoke r1.<java.net.DatagramPacket: int getPort()>();

        specialinvoke $r69.<java.net.DatagramPacket: void <init>(byte[],int,int,java.net.InetAddress,int)>(r130, 0, $i9, $r77, $i8);

        r131 = $r69;

        $r75 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor>;

        $r76 = (gov.nist.javax.sip.stack.UDPMessageProcessor) $r75;

        $r73 = $r76.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.net.DatagramSocket sock>;

        virtualinvoke $r73.<java.net.DatagramSocket: void send(java.net.DatagramPacket)>(r131);

        $r74 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r83 = virtualinvoke $r74.<gov.nist.javax.sip.stack.SIPTransactionStack: java.util.Timer getTimer()>();

        $r84 = new gov.nist.javax.sip.stack.UDPMessageChannel$PingBackTimerTask;

        $r81 = virtualinvoke r1.<java.net.DatagramPacket: java.net.InetAddress getAddress()>();

        $r82 = virtualinvoke $r81.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $i10 = virtualinvoke r1.<java.net.DatagramPacket: int getPort()>();

        specialinvoke $r84.<gov.nist.javax.sip.stack.UDPMessageChannel$PingBackTimerTask: void <init>(gov.nist.javax.sip.stack.UDPMessageChannel,java.lang.String,int)>(r0, $r82, $i10);

        virtualinvoke $r83.<java.util.Timer: void schedule(java.util.TimerTask,long)>($r84, 1000L);

     label12:
        return;

     label13:
        r132 = virtualinvoke r129.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ViaList getViaHeaders()>();

        $r11 = virtualinvoke r129.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.FromHeader getFrom()>();

        if $r11 == null goto label14;

        $r42 = virtualinvoke r129.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ToHeader getTo()>();

        if $r42 == null goto label14;

        $r41 = virtualinvoke r129.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CallIdHeader getCallId()>();

        if $r41 == null goto label14;

        $r40 = virtualinvoke r129.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CSeqHeader getCSeq()>();

        if $r40 == null goto label14;

        $r39 = virtualinvoke r129.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ViaList getViaHeaders()>();

        if $r39 != null goto label16;

     label14:
        $r13 = new java.lang.String;

        specialinvoke $r13.<java.lang.String: void <init>(byte[])>(r3);

        r133 = $r13;

        $r12 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z1 = virtualinvoke $r12.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label15;

        $r14 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r16 = virtualinvoke $r14.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bad message ");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r133);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r16.<gov.nist.core.StackLogger: void logError(java.lang.String)>($r20);

        $r19 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r22 = virtualinvoke $r19.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">>> Dropped Bad Msg From = ");

        $r26 = virtualinvoke r129.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.FromHeader getFrom()>();

        $r23 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("To = ");

        $r29 = virtualinvoke r129.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.ToHeader getTo()>();

        $r30 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29);

        $r27 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CallId = ");

        $r28 = virtualinvoke r129.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CallIdHeader getCallId()>();

        $r33 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r28);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CSeq = ");

        $r31 = virtualinvoke r129.<gov.nist.javax.sip.message.SIPMessage: javax.sip.header.CSeqHeader getCSeq()>();

        $r32 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r31);

        $r37 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Via = ");

        $r38 = virtualinvoke r129.<gov.nist.javax.sip.message.SIPMessage: gov.nist.javax.sip.header.ViaList getViaHeaders()>();

        $r35 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r38);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r22.<gov.nist.core.StackLogger: void logError(java.lang.String)>($r36);

     label15:
        return;

     label16:
        $z2 = r129 instanceof gov.nist.javax.sip.message.SIPRequest;

        if $z2 == 0 goto label23;

        $r51 = virtualinvoke r132.<gov.nist.javax.sip.header.ViaList: javax.sip.header.Header getFirst()>();

        r134 = (gov.nist.javax.sip.header.Via) $r51;

        $r50 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r49 = $r50.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.net.AddressResolver addressResolver>;

        $r48 = virtualinvoke r134.<gov.nist.javax.sip.header.Via: javax.sip.address.Hop getHop()>();

        r135 = interfaceinvoke $r49.<gov.nist.core.net.AddressResolver: javax.sip.address.Hop resolveAddress(javax.sip.address.Hop)>($r48);

        $i5 = interfaceinvoke r135.<javax.sip.address.Hop: int getPort()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPort> = $i5;

        $r54 = virtualinvoke r134.<gov.nist.javax.sip.header.Via: java.lang.String getTransport()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String peerProtocol> = $r54;

        $r55 = virtualinvoke r1.<java.net.DatagramPacket: java.net.InetAddress getAddress()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerPacketSourceAddress> = $r55;

        $i4 = virtualinvoke r1.<java.net.DatagramPacket: int getPort()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPacketSourcePort> = $i4;

     label17:
        $r52 = virtualinvoke r1.<java.net.DatagramPacket: java.net.InetAddress getAddress()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress> = $r52;

        z10 = virtualinvoke r134.<gov.nist.javax.sip.header.Via: boolean hasParameter(java.lang.String)>("rport");

        if z10 != 0 goto label18;

        $r57 = interfaceinvoke r135.<javax.sip.address.Hop: java.lang.String getHost()>();

        $r58 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress>;

        $r59 = virtualinvoke $r58.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $z3 = virtualinvoke $r57.<java.lang.String: boolean equals(java.lang.Object)>($r59);

        if $z3 != 0 goto label19;

     label18:
        $r53 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress>;

        $r60 = virtualinvoke $r53.<java.net.InetAddress: java.lang.String getHostAddress()>();

        virtualinvoke r134.<gov.nist.javax.sip.header.Via: void setParameter(java.lang.String,java.lang.String)>("received", $r60);

     label19:
        if z10 == 0 goto label20;

        $i6 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPacketSourcePort>;

        $r56 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i6);

        virtualinvoke r134.<gov.nist.javax.sip.header.Via: void setParameter(java.lang.String,java.lang.String)>("rport", $r56);

     label20:
        goto label22;

     label21:
        $r95 := @caughtexception;

        r136 = $r95;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>(r136);

     label22:
        goto label24;

     label23:
        $r44 = virtualinvoke r1.<java.net.DatagramPacket: java.net.InetAddress getAddress()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerPacketSourceAddress> = $r44;

        $i2 = virtualinvoke r1.<java.net.DatagramPacket: int getPort()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPacketSourcePort> = $i2;

        $r43 = virtualinvoke r1.<java.net.DatagramPacket: java.net.InetAddress getAddress()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress> = $r43;

        $i3 = virtualinvoke r1.<java.net.DatagramPacket: int getPort()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPort> = $i3;

        $r47 = virtualinvoke r132.<gov.nist.javax.sip.header.ViaList: javax.sip.header.Header getFirst()>();

        $r46 = (gov.nist.javax.sip.header.Via) $r47;

        $r45 = virtualinvoke $r46.<gov.nist.javax.sip.header.Via: java.lang.String getTransport()>();

        r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String peerProtocol> = $r45;

     label24:
        virtualinvoke r0.<gov.nist.javax.sip.stack.UDPMessageChannel: void processMessage(gov.nist.javax.sip.message.SIPMessage)>(r129);

        return;

        catch java.text.ParseException from label01 to label02 with label03;
        catch java.io.IOException from label05 to label06 with label07;
        catch java.text.ParseException from label17 to label20 with label21;
    }

    public void processMessage(gov.nist.javax.sip.message.SIPMessage)
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        gov.nist.javax.sip.message.SIPMessage r1;
        gov.nist.javax.sip.message.SIPRequest r2;
        gov.nist.javax.sip.stack.ServerRequestInterface r3;
        gov.nist.javax.sip.stack.SIPServerTransaction r4, r6;
        java.lang.Throwable r5, r7, $r64, $r68;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19;
        gov.nist.javax.sip.stack.SIPTransactionStack $r8, $r9, $r10, $r15, $r19, $r22, $r26, $r27, $r28, $r31, $r37, $r48, $r52, $r53, $r63, $r70;
        gov.nist.core.StackLogger $r11, $r18, $r23, $r32, $r43, $r54, $r69;
        gov.nist.javax.sip.stack.SIPTransaction $r12, $r13, $r16, $r17, $r38, $r62, $r65, $r73;
        gov.nist.javax.sip.stack.SIPClientTransaction $r14;
        java.lang.StringBuilder $r20, $r21, $r24, $r29, $r30, $r33, $r34, $r35, $r41, $r42, $r45, $r46, $r47, $r55, $r57, $r59, $r60, $r67, $r71, $r72;
        java.lang.String $r25, $r36, $r39, $r40, $r44, $r51, $r56, $r58, $r66;
        gov.nist.core.ServerLogger $r49;
        gov.nist.core.HostPort $r50;
        int $i0;
        long $l1;
        java.text.ParseException $r61;
        gov.nist.javax.sip.message.SIPResponse r74;
        gov.nist.javax.sip.stack.ServerResponseInterface r76;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        r1 := @parameter0: gov.nist.javax.sip.message.SIPMessage;

        $z0 = r1 instanceof gov.nist.javax.sip.message.SIPRequest;

        if $z0 == 0 goto label12;

        r2 = (gov.nist.javax.sip.message.SIPRequest) r1;

        $r22 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r23 = virtualinvoke $r22.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $z9 = interfaceinvoke $r23.<gov.nist.core.StackLogger: boolean isLoggingEnabled(int)>(16);

        if $z9 == 0 goto label01;

        $r48 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r49 = $r48.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.ServerLogger serverLogger>;

        $r50 = virtualinvoke r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.core.HostPort getPeerHostPort()>();

        $r51 = virtualinvoke $r50.<gov.nist.core.HostPort: java.lang.String toString()>();

        $r57 = new java.lang.StringBuilder;

        specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();

        $r58 = virtualinvoke r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String getHost()>();

        $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $i0 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int myPort>;

        $r55 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        $l1 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: long receptionTime>;

        interfaceinvoke $r49.<gov.nist.core.ServerLogger: void logMessage(gov.nist.javax.sip.message.SIPMessage,java.lang.String,java.lang.String,boolean,long)>(r1, $r51, $r56, 0, $l1);

     label01:
        $r27 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r3 = virtualinvoke $r27.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.ServerRequestInterface newSIPServerRequest(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.MessageChannel)>(r2, r0);

        if r3 != null goto label03;

        $r52 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z14 = virtualinvoke $r52.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z14 == 0 goto label02;

        $r53 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r54 = virtualinvoke $r53.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r54.<gov.nist.core.StackLogger: void logWarning(java.lang.String)>("Null request interface returned -- dropping request");

     label02:
        return;

     label03:
        $r26 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z11 = virtualinvoke $r26.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z11 == 0 goto label04;

        $r37 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r43 = virtualinvoke $r37.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("About to process ");

        $r40 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getFirstLine()>();

        $r47 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r46 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r45 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r44 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r43.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r44);

     label04:
        interfaceinvoke r3.<gov.nist.javax.sip.stack.ServerRequestInterface: void processRequest(gov.nist.javax.sip.message.SIPRequest,gov.nist.javax.sip.stack.MessageChannel)>(r2, r0);

     label05:
        $z12 = r3 instanceof gov.nist.javax.sip.stack.SIPTransaction;

        if $z12 == 0 goto label10;

        r4 = (gov.nist.javax.sip.stack.SIPServerTransaction) r3;

        $z13 = virtualinvoke r4.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean passToListener()>();

        if $z13 != 0 goto label06;

        $r38 = (gov.nist.javax.sip.stack.SIPTransaction) r3;

        virtualinvoke $r38.<gov.nist.javax.sip.stack.SIPTransaction: void releaseSem()>();

     label06:
        goto label10;

     label07:
        $r68 := @caughtexception;

        r5 = $r68;

     label08:
        $z18 = r3 instanceof gov.nist.javax.sip.stack.SIPTransaction;

        if $z18 == 0 goto label09;

        r6 = (gov.nist.javax.sip.stack.SIPServerTransaction) r3;

        $z19 = virtualinvoke r6.<gov.nist.javax.sip.stack.SIPServerTransaction: boolean passToListener()>();

        if $z19 != 0 goto label09;

        $r73 = (gov.nist.javax.sip.stack.SIPTransaction) r3;

        virtualinvoke $r73.<gov.nist.javax.sip.stack.SIPTransaction: void releaseSem()>();

     label09:
        throw r5;

     label10:
        $r28 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z10 = virtualinvoke $r28.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z10 == 0 goto label11;

        $r31 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r32 = virtualinvoke $r31.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Done processing ");

        $r36 = virtualinvoke r2.<gov.nist.javax.sip.message.SIPRequest: java.lang.String getFirstLine()>();

        $r35 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r34 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r33 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r39 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r32.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r39);

     label11:
        goto label28;

     label12:
        r74 = (gov.nist.javax.sip.message.SIPResponse) r1;

     label13:
        virtualinvoke r74.<gov.nist.javax.sip.message.SIPResponse: void checkHeaders()>();

     label14:
        goto label17;

     label15:
        $r61 := @caughtexception;

        $r63 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z15 = virtualinvoke $r63.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z15 == 0 goto label16;

        $r70 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r69 = virtualinvoke $r70.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r72 = new java.lang.StringBuilder;

        specialinvoke $r72.<java.lang.StringBuilder: void <init>()>();

        $r71 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dropping Badly formatted response message >>> ");

        $r67 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r74);

        $r66 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r69.<gov.nist.core.StackLogger: void logError(java.lang.String)>($r66);

     label16:
        return;

     label17:
        $r8 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r76 = virtualinvoke $r8.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.ServerResponseInterface newSIPServerResponse(gov.nist.javax.sip.message.SIPResponse,gov.nist.javax.sip.stack.MessageChannel)>(r74, r0);

        if r76 == null goto label27;

     label18:
        $z2 = r76 instanceof gov.nist.javax.sip.stack.SIPClientTransaction;

        if $z2 == 0 goto label21;

        $r14 = (gov.nist.javax.sip.stack.SIPClientTransaction) r76;

        $z5 = virtualinvoke $r14.<gov.nist.javax.sip.stack.SIPClientTransaction: boolean checkFromTag(gov.nist.javax.sip.message.SIPResponse)>(r74);

        if $z5 != 0 goto label21;

        $r15 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z6 = virtualinvoke $r15.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z6 == 0 goto label19;

        $r19 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r18 = virtualinvoke $r19.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dropping response message with invalid tag >>> ");

        $r24 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r74);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r18.<gov.nist.core.StackLogger: void logError(java.lang.String)>($r25);

     label19:
        $z7 = r76 instanceof gov.nist.javax.sip.stack.SIPTransaction;

        if $z7 == 0 goto label20;

        $r16 = (gov.nist.javax.sip.stack.SIPTransaction) r76;

        $z8 = virtualinvoke $r16.<gov.nist.javax.sip.stack.SIPTransaction: boolean passToListener()>();

        if $z8 != 0 goto label20;

        $r17 = (gov.nist.javax.sip.stack.SIPTransaction) r76;

        virtualinvoke $r17.<gov.nist.javax.sip.stack.SIPTransaction: void releaseSem()>();

     label20:
        return;

     label21:
        interfaceinvoke r76.<gov.nist.javax.sip.stack.ServerResponseInterface: void processResponse(gov.nist.javax.sip.message.SIPResponse,gov.nist.javax.sip.stack.MessageChannel)>(r74, r0);

     label22:
        $z3 = r76 instanceof gov.nist.javax.sip.stack.SIPTransaction;

        if $z3 == 0 goto label26;

        $r12 = (gov.nist.javax.sip.stack.SIPTransaction) r76;

        $z4 = virtualinvoke $r12.<gov.nist.javax.sip.stack.SIPTransaction: boolean passToListener()>();

        if $z4 != 0 goto label26;

        $r13 = (gov.nist.javax.sip.stack.SIPTransaction) r76;

        virtualinvoke $r13.<gov.nist.javax.sip.stack.SIPTransaction: void releaseSem()>();

        goto label26;

     label23:
        $r64 := @caughtexception;

        r7 = $r64;

     label24:
        $z16 = r76 instanceof gov.nist.javax.sip.stack.SIPTransaction;

        if $z16 == 0 goto label25;

        $r65 = (gov.nist.javax.sip.stack.SIPTransaction) r76;

        $z17 = virtualinvoke $r65.<gov.nist.javax.sip.stack.SIPTransaction: boolean passToListener()>();

        if $z17 != 0 goto label25;

        $r62 = (gov.nist.javax.sip.stack.SIPTransaction) r76;

        virtualinvoke $r62.<gov.nist.javax.sip.stack.SIPTransaction: void releaseSem()>();

     label25:
        throw r7;

     label26:
        goto label28;

     label27:
        $r9 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z1 = virtualinvoke $r9.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label28;

        $r10 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r11 = virtualinvoke $r10.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r11.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("null sipServerResponse!");

     label28:
        return;

        catch java.lang.Throwable from label04 to label05 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch java.text.ParseException from label13 to label14 with label15;
        catch java.lang.Throwable from label18 to label19 with label23;
        catch java.lang.Throwable from label21 to label22 with label23;
        catch java.lang.Throwable from label23 to label24 with label23;
    }

    public void handleException(java.text.ParseException, gov.nist.javax.sip.message.SIPMessage, java.lang.Class, java.lang.String, java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        java.text.ParseException r1;
        gov.nist.javax.sip.message.SIPMessage r2;
        java.lang.Class r3;
        java.lang.String r4, r5;
        gov.nist.javax.sip.stack.SIPTransactionStack $r6, $r7, $r8, $r10, $r12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        gov.nist.core.StackLogger $r9, $r11, $r13;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        r1 := @parameter0: java.text.ParseException;

        r2 := @parameter1: gov.nist.javax.sip.message.SIPMessage;

        r3 := @parameter2: java.lang.Class;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        $r6 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r6.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label1;

        $r12 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r13 = virtualinvoke $r12.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r13.<gov.nist.core.StackLogger: void logException(java.lang.Throwable)>(r1);

     label1:
        if r3 == null goto label4;

        $z1 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(class "gov/nist/javax/sip/header/From");

        if $z1 != 0 goto label2;

        $z3 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(class "gov/nist/javax/sip/header/To");

        if $z3 != 0 goto label2;

        $z5 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(class "gov/nist/javax/sip/header/CSeq");

        if $z5 != 0 goto label2;

        $z4 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(class "gov/nist/javax/sip/header/Via");

        if $z4 != 0 goto label2;

        $z7 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(class "gov/nist/javax/sip/header/CallID");

        if $z7 != 0 goto label2;

        $z6 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(class "gov/nist/javax/sip/header/RequestLine");

        if $z6 != 0 goto label2;

        $z8 = virtualinvoke r3.<java.lang.Object: boolean equals(java.lang.Object)>(class "gov/nist/javax/sip/header/StatusLine");

        if $z8 == 0 goto label4;

     label2:
        $r7 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z2 = virtualinvoke $r7.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z2 == 0 goto label3;

        $r8 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r9 = virtualinvoke $r8.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r9.<gov.nist.core.StackLogger: void logError(java.lang.String)>("BAD MESSAGE!");

        $r10 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r11 = virtualinvoke $r10.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r11.<gov.nist.core.StackLogger: void logError(java.lang.String)>(r5);

     label3:
        throw r1;

     label4:
        virtualinvoke r2.<gov.nist.javax.sip.message.SIPMessage: void addUnparsed(java.lang.String)>(r4);

        return;
    }

    public void sendMessage(gov.nist.javax.sip.message.SIPMessage) throws java.io.IOException
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        gov.nist.javax.sip.message.SIPMessage r1;
        long l0;
        gov.nist.javax.sip.stack.MessageProcessor[] r2;
        int i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        gov.nist.javax.sip.stack.MessageProcessor r3;
        gov.nist.javax.sip.stack.MessageChannel r4;
        java.lang.Throwable r5, $r49;
        gov.nist.javax.sip.stack.SIPTransactionStack $r6, $r7, $r10, $r14, $r15, $r23, $r25, $r27, $r30, $r32, $r34, $r35, $r39, $r43, $r45, $r50, $r52;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16;
        java.lang.String $r8, $r9, $r20, $r21;
        java.net.InetAddress $r11, $r17, $r18, $r19, $r22, $r33, $r51;
        gov.nist.core.StackLogger $r12, $r13, $r16, $r26, $r28, $r29, $r31, $r36, $r40, $r44, $r46, $r47, $r53;
        gov.nist.javax.sip.stack.RawMessageChannel $r24;
        java.io.IOException $r37, $r48, r55;
        java.lang.Exception $r38, r56;
        gov.nist.javax.sip.message.SIPRequest $r41;
        gov.nist.javax.sip.header.RequestLine $r42;
        byte[] r54;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        r1 := @parameter0: gov.nist.javax.sip.message.SIPMessage;

        $r6 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z0 = virtualinvoke $r6.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z0 == 0 goto label02;

        $r35 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z13 = virtualinvoke $r35.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLogStackTraceOnMessageSend()>();

        if $z13 == 0 goto label02;

        $z12 = r1 instanceof gov.nist.javax.sip.message.SIPRequest;

        if $z12 == 0 goto label01;

        $r41 = (gov.nist.javax.sip.message.SIPRequest) r1;

        $r42 = virtualinvoke $r41.<gov.nist.javax.sip.message.SIPRequest: gov.nist.javax.sip.header.RequestLine getRequestLine()>();

        if $r42 == null goto label01;

        $r43 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r36 = virtualinvoke $r43.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r36.<gov.nist.core.StackLogger: void logStackTrace(int)>(16);

        goto label02;

     label01:
        $r34 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r40 = virtualinvoke $r34.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r40.<gov.nist.core.StackLogger: void logStackTrace(int)>(16);

     label02:
        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label03:
        $r7 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        r2 = virtualinvoke $r7.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.MessageProcessor[] getMessageProcessors()>();

        i1 = lengthof r2;

        i2 = 0;

     label04:
        if i2 >= i1 goto label09;

        r3 = r2[i2];

        $r18 = virtualinvoke r3.<gov.nist.javax.sip.stack.MessageProcessor: java.net.InetAddress getIpAddress()>();

        $r19 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress>;

        $z5 = virtualinvoke $r18.<java.net.InetAddress: boolean equals(java.lang.Object)>($r19);

        if $z5 == 0 goto label08;

        $i5 = virtualinvoke r3.<gov.nist.javax.sip.stack.MessageProcessor: int getPort()>();

        $i6 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPort>;

        if $i5 != $i6 goto label08;

        $r21 = virtualinvoke r3.<gov.nist.javax.sip.stack.MessageProcessor: java.lang.String getTransport()>();

        $r20 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String peerProtocol>;

        $z6 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>($r20);

        if $z6 == 0 goto label08;

        $r22 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress>;

        $i7 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPort>;

        r4 = virtualinvoke r3.<gov.nist.javax.sip.stack.MessageProcessor: gov.nist.javax.sip.stack.MessageChannel createMessageChannel(java.net.InetAddress,int)>($r22, $i7);

        $z7 = r4 instanceof gov.nist.javax.sip.stack.RawMessageChannel;

        if $z7 == 0 goto label08;

        $r24 = (gov.nist.javax.sip.stack.RawMessageChannel) r4;

        interfaceinvoke $r24.<gov.nist.javax.sip.stack.RawMessageChannel: void processMessage(gov.nist.javax.sip.message.SIPMessage)>(r1);

        $r25 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z8 = virtualinvoke $r25.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z8 == 0 goto label05;

        $r32 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r31 = virtualinvoke $r32.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r31.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Self routing message");

     label05:
        $r23 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r28 = virtualinvoke $r23.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $z9 = interfaceinvoke $r28.<gov.nist.core.StackLogger: boolean isLoggingEnabled(int)>(16);

        if $z9 == 0 goto label06;

        $z10 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPMessage: boolean isNullRequest()>();

        if $z10 != 0 goto label06;

        $r33 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress>;

        $i8 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPort>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.UDPMessageChannel: void logMessage(gov.nist.javax.sip.message.SIPMessage,java.net.InetAddress,int,long)>(r1, $r33, $i8, l0);

        goto label07;

     label06:
        $r27 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r26 = virtualinvoke $r27.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $z11 = interfaceinvoke $r26.<gov.nist.core.StackLogger: boolean isLoggingEnabled(int)>(32);

        if $z11 == 0 goto label07;

        $r30 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r29 = virtualinvoke $r30.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r29.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Sent EMPTY Message");

     label07:
        return;

     label08:
        i2 = i2 + 1;

        goto label04;

     label09:
        $r8 = virtualinvoke r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String getTransport()>();

        r54 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPMessage: byte[] encodeAsBytes(java.lang.String)>($r8);

        $r11 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress>;

        $i3 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPort>;

        $r9 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String peerProtocol>;

        $z1 = r1 instanceof gov.nist.javax.sip.message.SIPRequest;

        virtualinvoke r0.<gov.nist.javax.sip.stack.UDPMessageChannel: void sendMessage(byte[],java.net.InetAddress,int,java.lang.String,boolean)>(r54, $r11, $i3, $r9, $z1);

     label10:
        $r10 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r12 = virtualinvoke $r10.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $z2 = interfaceinvoke $r12.<gov.nist.core.StackLogger: boolean isLoggingEnabled(int)>(16);

        if $z2 == 0 goto label11;

        $z4 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPMessage: boolean isNullRequest()>();

        if $z4 != 0 goto label11;

        $r17 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress>;

        $i4 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPort>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.UDPMessageChannel: void logMessage(gov.nist.javax.sip.message.SIPMessage,java.net.InetAddress,int,long)>(r1, $r17, $i4, l0);

        goto label18;

     label11:
        $r14 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r13 = virtualinvoke $r14.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $z3 = interfaceinvoke $r13.<gov.nist.core.StackLogger: boolean isLoggingEnabled(int)>(32);

        if $z3 == 0 goto label18;

        $r15 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r16 = virtualinvoke $r15.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r16.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Sent EMPTY Message");

        goto label18;

     label12:
        $r37 := @caughtexception;

        r55 = $r37;

        throw r55;

     label13:
        $r38 := @caughtexception;

        r56 = $r38;

        $r39 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r47 = virtualinvoke $r39.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r47.<gov.nist.core.StackLogger: void logError(java.lang.String,java.lang.Exception)>("An exception occured while sending message", r56);

        $r48 = new java.io.IOException;

        specialinvoke $r48.<java.io.IOException: void <init>(java.lang.String)>("An exception occured while sending message");

        throw $r48;

     label14:
        $r49 := @caughtexception;

        r5 = $r49;

     label15:
        $r50 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r44 = virtualinvoke $r50.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $z14 = interfaceinvoke $r44.<gov.nist.core.StackLogger: boolean isLoggingEnabled(int)>(16);

        if $z14 == 0 goto label16;

        $z16 = virtualinvoke r1.<gov.nist.javax.sip.message.SIPMessage: boolean isNullRequest()>();

        if $z16 != 0 goto label16;

        $r51 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress>;

        $i9 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPort>;

        virtualinvoke r0.<gov.nist.javax.sip.stack.UDPMessageChannel: void logMessage(gov.nist.javax.sip.message.SIPMessage,java.net.InetAddress,int,long)>(r1, $r51, $i9, l0);

        goto label17;

     label16:
        $r45 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r46 = virtualinvoke $r45.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $z15 = interfaceinvoke $r46.<gov.nist.core.StackLogger: boolean isLoggingEnabled(int)>(32);

        if $z15 == 0 goto label17;

        $r52 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r53 = virtualinvoke $r52.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r53.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("Sent EMPTY Message");

     label17:
        throw r5;

     label18:
        return;

        catch java.io.IOException from label03 to label05 with label12;
        catch java.io.IOException from label08 to label10 with label12;
        catch java.lang.Exception from label03 to label05 with label13;
        catch java.lang.Exception from label08 to label10 with label13;
        catch java.lang.Throwable from label03 to label05 with label14;
        catch java.lang.Throwable from label08 to label10 with label14;
        catch java.lang.Throwable from label12 to label15 with label14;
    }

    protected void sendMessage(byte[], java.net.InetAddress, int, boolean) throws java.io.IOException
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        byte[] r1;
        java.net.InetAddress r2;
        int i0, $i1, $i2;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6;
        java.net.DatagramPacket r3, $r7;
        java.net.DatagramSocket r4, $r10;
        gov.nist.javax.sip.stack.SIPTransactionStack $r5, $r6, $r8, $r11, $r25, $r30, $r33, $r40, $r41;
        gov.nist.javax.sip.stack.MessageProcessor $r9;
        gov.nist.javax.sip.stack.UDPMessageProcessor $r12;
        java.lang.StringBuilder $r13, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r27, $r31, $r35, $r38;
        gov.nist.core.StackLogger $r14, $r29, $r34, $r39;
        java.lang.String $r15, $r24, $r26, $r36, $r37;
        java.io.IOException $r28, $r42, r44;
        java.lang.Class $r32;
        java.lang.Exception $r43, r45;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        r1 := @parameter0: byte[];

        r2 := @parameter1: java.net.InetAddress;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        $r5 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z2 = virtualinvoke $r5.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z2 == 0 goto label01;

        $r41 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z6 = virtualinvoke $r41.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLogStackTraceOnMessageSend()>();

        if $z6 == 0 goto label01;

        $r40 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r39 = virtualinvoke $r40.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r39.<gov.nist.core.StackLogger: void logStackTrace(int)>(16);

     label01:
        if i0 != -1 goto label03;

        $r30 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z5 = virtualinvoke $r30.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z5 == 0 goto label02;

        $r33 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r34 = virtualinvoke $r33.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r37 = virtualinvoke $r32.<java.lang.Class: java.lang.String getName()>();

        $r38 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r35 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":sendMessage: Dropping reply!");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r34.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r36);

     label02:
        $r28 = new java.io.IOException;

        specialinvoke $r28.<java.io.IOException: void <init>(java.lang.String)>("Receiver port not set ");

        throw $r28;

     label03:
        $r6 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z3 = virtualinvoke $r6.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z3 == 0 goto label04;

        $r11 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r14 = virtualinvoke $r11.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendMessage ");

        $r15 = virtualinvoke r2.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("messageSize =  ");

        $i2 = lengthof r1;

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" message = ");

        $r26 = new java.lang.String;

        specialinvoke $r26.<java.lang.String: void <init>(byte[])>(r1);

        $r27 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r24 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r14.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r24);

        $r25 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r29 = virtualinvoke $r25.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        interfaceinvoke $r29.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>("*******************\n");

     label04:
        $r7 = new java.net.DatagramPacket;

        $i1 = lengthof r1;

        specialinvoke $r7.<java.net.DatagramPacket: void <init>(byte[],int,java.net.InetAddress,int)>(r1, $i1, r2, i0);

        r3 = $r7;

     label05:
        z1 = 0;

        $r8 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z4 = $r8.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean udpFlag>;

        if $z4 == 0 goto label06;

        $r9 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor>;

        $r12 = (gov.nist.javax.sip.stack.UDPMessageProcessor) $r9;

        r4 = $r12.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.net.DatagramSocket sock>;

        goto label07;

     label06:
        $r10 = new java.net.DatagramSocket;

        specialinvoke $r10.<java.net.DatagramSocket: void <init>()>();

        r4 = $r10;

        z1 = 1;

     label07:
        virtualinvoke r4.<java.net.DatagramSocket: void send(java.net.DatagramPacket)>(r3);

        if z1 == 0 goto label08;

        virtualinvoke r4.<java.net.DatagramSocket: void close()>();

     label08:
        goto label11;

     label09:
        $r42 := @caughtexception;

        r44 = $r42;

        throw r44;

     label10:
        $r43 := @caughtexception;

        r45 = $r43;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>(r45);

     label11:
        return;

        catch java.io.IOException from label05 to label08 with label09;
        catch java.lang.Exception from label05 to label08 with label10;
    }

    protected void sendMessage(byte[], java.net.InetAddress, int, java.lang.String, boolean) throws java.io.IOException
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        byte[] r1;
        java.net.InetAddress r2, $r10;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.String r3, $r23, $r24, $r30, $r33, $r40, $r46, $r53;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        java.net.DatagramPacket r4, $r11;
        java.net.DatagramSocket r5;
        gov.nist.javax.sip.stack.SIPTransactionStack $r6, $r7, $r12, $r14, $r15, $r16, $r17, $r29, $r43, $r45;
        gov.nist.javax.sip.stack.MessageProcessor $r8, $r31;
        gov.nist.javax.sip.stack.IOHandler $r9;
        gov.nist.core.net.NetworkLayer $r13;
        java.lang.StringBuilder $r18, $r20, $r21, $r22, $r25, $r26, $r27, $r32, $r35, $r36, $r37, $r38, $r39, $r41, $r42, $r48, $r51, $r52;
        gov.nist.core.StackLogger $r19, $r34, $r49;
        gov.nist.javax.sip.stack.UDPMessageProcessor $r28;
        java.io.IOException $r44, $r54, r55;
        java.lang.Class $r47;
        java.lang.Exception $r50, r56;
        java.net.Socket r57;
        java.io.OutputStream r58;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        r1 := @parameter0: byte[];

        r2 := @parameter1: java.net.InetAddress;

        i0 := @parameter2: int;

        r3 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        if i0 != -1 goto label02;

        $r45 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z5 = virtualinvoke $r45.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z5 == 0 goto label01;

        $r43 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r49 = virtualinvoke $r43.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r46 = virtualinvoke $r47.<java.lang.Class: java.lang.String getName()>();

        $r51 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":sendMessage: Dropping reply!");

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r49.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r53);

     label01:
        $r44 = new java.io.IOException;

        specialinvoke $r44.<java.io.IOException: void <init>(java.lang.String)>("Receiver port not set ");

        throw $r44;

     label02:
        $r6 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z1 = virtualinvoke $r6.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z1 == 0 goto label03;

        $r29 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r34 = virtualinvoke $r29.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":sendMessage ");

        $r33 = virtualinvoke r2.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $r39 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r42 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" messageSize = ");

        $i4 = lengthof r1;

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r34.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r40);

     label03:
        $i1 = virtualinvoke r3.<java.lang.String: int compareToIgnoreCase(java.lang.String)>("UDP");

        if $i1 != 0 goto label12;

        $r11 = new java.net.DatagramPacket;

        $i3 = lengthof r1;

        specialinvoke $r11.<java.net.DatagramPacket: void <init>(byte[],int,java.net.InetAddress,int)>(r1, $i3, r2, i0);

        r4 = $r11;

     label04:
        $r12 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z2 = $r12.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean udpFlag>;

        if $z2 == 0 goto label05;

        $r31 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor>;

        $r28 = (gov.nist.javax.sip.stack.UDPMessageProcessor) $r31;

        r5 = $r28.<gov.nist.javax.sip.stack.UDPMessageProcessor: java.net.DatagramSocket sock>;

        goto label06;

     label05:
        $r14 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r13 = virtualinvoke $r14.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.net.NetworkLayer getNetworkLayer()>();

        r5 = interfaceinvoke $r13.<gov.nist.core.net.NetworkLayer: java.net.DatagramSocket createDatagramSocket()>();

     label06:
        $r15 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z3 = virtualinvoke $r15.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean isLoggingEnabled()>();

        if $z3 == 0 goto label07;

        $r17 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r19 = virtualinvoke $r17.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.core.StackLogger getStackLogger()>();

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("sendMessage ");

        $r23 = virtualinvoke r2.<java.net.InetAddress: java.lang.String getHostAddress()>();

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r26 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r24 = new java.lang.String;

        specialinvoke $r24.<java.lang.String: void <init>(byte[])>(r1);

        $r25 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r30 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r19.<gov.nist.core.StackLogger: void logDebug(java.lang.String)>($r30);

     label07:
        virtualinvoke r5.<java.net.DatagramSocket: void send(java.net.DatagramPacket)>(r4);

        $r16 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $z4 = $r16.<gov.nist.javax.sip.stack.SIPTransactionStack: boolean udpFlag>;

        if $z4 != 0 goto label08;

        virtualinvoke r5.<java.net.DatagramSocket: void close()>();

     label08:
        goto label11;

     label09:
        $r54 := @caughtexception;

        r55 = $r54;

        throw r55;

     label10:
        $r50 := @caughtexception;

        r56 = $r50;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>(r56);

     label11:
        goto label13;

     label12:
        $r7 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        $r9 = $r7.<gov.nist.javax.sip.stack.SIPTransactionStack: gov.nist.javax.sip.stack.IOHandler ioHandler>;

        $r8 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor>;

        $r10 = virtualinvoke $r8.<gov.nist.javax.sip.stack.MessageProcessor: java.net.InetAddress getIpAddress()>();

        r57 = virtualinvoke $r9.<gov.nist.javax.sip.stack.IOHandler: java.net.Socket sendBytes(java.net.InetAddress,java.net.InetAddress,int,java.lang.String,byte[],boolean,gov.nist.javax.sip.stack.MessageChannel)>($r10, r2, i0, "tcp", r1, z0, r0);

        r58 = virtualinvoke r57.<java.net.Socket: java.io.OutputStream getOutputStream()>();

        $i2 = lengthof r1;

        virtualinvoke r58.<java.io.OutputStream: void write(byte[],int,int)>(r1, 0, $i2);

        virtualinvoke r58.<java.io.OutputStream: void flush()>();

     label13:
        return;

        catch java.io.IOException from label04 to label08 with label09;
        catch java.lang.Exception from label04 to label08 with label10;
    }

    public gov.nist.javax.sip.stack.SIPTransactionStack getSIPStack()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        gov.nist.javax.sip.stack.SIPTransactionStack $r1;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        $r1 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.SIPTransactionStack sipStack>;

        return $r1;
    }

    public java.lang.String getTransport()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        return "udp";
    }

    public java.lang.String getHost()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        gov.nist.javax.sip.stack.MessageProcessor $r1;
        java.net.InetAddress $r2;
        java.lang.String $r3;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        $r1 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor>;

        $r2 = virtualinvoke $r1.<gov.nist.javax.sip.stack.MessageProcessor: java.net.InetAddress getIpAddress()>();

        $r3 = virtualinvoke $r2.<java.net.InetAddress: java.lang.String getHostAddress()>();

        return $r3;
    }

    public int getPort()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        gov.nist.javax.sip.stack.MessageProcessor $r1;
        gov.nist.javax.sip.stack.UDPMessageProcessor $r2;
        int $i0;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        $r1 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: gov.nist.javax.sip.stack.MessageProcessor messageProcessor>;

        $r2 = (gov.nist.javax.sip.stack.UDPMessageProcessor) $r1;

        $i0 = virtualinvoke $r2.<gov.nist.javax.sip.stack.UDPMessageProcessor: int getPort()>();

        return $i0;
    }

    public java.lang.String getPeerName()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        java.net.InetAddress $r1;
        java.lang.String $r2;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        $r1 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress>;

        $r2 = virtualinvoke $r1.<java.net.InetAddress: java.lang.String getHostName()>();

        return $r2;
    }

    public java.lang.String getPeerAddress()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        java.net.InetAddress $r1;
        java.lang.String $r2;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        $r1 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress>;

        $r2 = virtualinvoke $r1.<java.net.InetAddress: java.lang.String getHostAddress()>();

        return $r2;
    }

    protected java.net.InetAddress getPeerInetAddress()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        java.net.InetAddress $r1;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        $r1 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0, r2;
        java.lang.Object r1;
        boolean z0, $z1;
        java.lang.Class $r3, $r4;
        java.lang.String $r5, $r6;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return 0;

     label1:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        if $z1 != 0 goto label2;

        z0 = 0;

        goto label3;

     label2:
        r2 = (gov.nist.javax.sip.stack.UDPMessageChannel) r1;

        $r5 = virtualinvoke r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String getKey()>();

        $r6 = virtualinvoke r2.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String getKey()>();

        z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

     label3:
        return z0;
    }

    public java.lang.String getKey()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        int $i0;
        java.net.InetAddress $r1;
        java.lang.String $r2;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        $r1 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerAddress>;

        $i0 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPort>;

        $r2 = staticinvoke <gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String getKey(java.net.InetAddress,int,java.lang.String)>($r1, $i0, "UDP");

        return $r2;
    }

    public int getPeerPacketSourcePort()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        int $i0;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        $i0 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPacketSourcePort>;

        return $i0;
    }

    public java.net.InetAddress getPeerPacketSourceAddress()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        java.net.InetAddress $r1;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        $r1 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.net.InetAddress peerPacketSourceAddress>;

        return $r1;
    }

    public java.lang.String getViaHost()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        java.lang.String $r1;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        $r1 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String myAddress>;

        return $r1;
    }

    public int getViaPort()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        int $i0;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        $i0 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int myPort>;

        return $i0;
    }

    public boolean isReliable()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        return 0;
    }

    public boolean isSecure()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        return 0;
    }

    public int getPeerPort()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        int $i0;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        $i0 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: int peerPort>;

        return $i0;
    }

    public java.lang.String getPeerProtocol()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        java.lang.String $r1;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        $r1 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.lang.String peerProtocol>;

        return $r1;
    }

    public void close()
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;

        r0 := @this: gov.nist.javax.sip.stack.UDPMessageChannel;

        return;
    }

    static java.util.Hashtable access$000(gov.nist.javax.sip.stack.UDPMessageChannel)
    {
        gov.nist.javax.sip.stack.UDPMessageChannel r0;
        java.util.Hashtable $r1;

        r0 := @parameter0: gov.nist.javax.sip.stack.UDPMessageChannel;

        $r1 = r0.<gov.nist.javax.sip.stack.UDPMessageChannel: java.util.Hashtable pingBackRecord>;

        return $r1;
    }
}
