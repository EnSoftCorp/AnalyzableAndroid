class gov.nist.javax.sip.parser.Pipeline$MyTimer extends gov.nist.javax.sip.stack.SIPStackTimerTask
{
    gov.nist.javax.sip.parser.Pipeline pipeline;
    private boolean isCancelled;
    final gov.nist.javax.sip.parser.Pipeline this$0;

    protected void <init>(gov.nist.javax.sip.parser.Pipeline, gov.nist.javax.sip.parser.Pipeline)
    {
        gov.nist.javax.sip.parser.Pipeline$MyTimer r0;
        gov.nist.javax.sip.parser.Pipeline r1, r2;

        r0 := @this: gov.nist.javax.sip.parser.Pipeline$MyTimer;

        r1 := @parameter0: gov.nist.javax.sip.parser.Pipeline;

        r2 := @parameter1: gov.nist.javax.sip.parser.Pipeline;

        r0.<gov.nist.javax.sip.parser.Pipeline$MyTimer: gov.nist.javax.sip.parser.Pipeline this$0> = r1;

        specialinvoke r0.<gov.nist.javax.sip.stack.SIPStackTimerTask: void <init>()>();

        r0.<gov.nist.javax.sip.parser.Pipeline$MyTimer: gov.nist.javax.sip.parser.Pipeline pipeline> = r2;

        return;
    }

    protected void runTask()
    {
        gov.nist.javax.sip.parser.Pipeline$MyTimer r0;
        java.io.IOException r1, $r3;
        boolean $z0;
        gov.nist.javax.sip.parser.Pipeline $r2;

        r0 := @this: gov.nist.javax.sip.parser.Pipeline$MyTimer;

        $z0 = r0.<gov.nist.javax.sip.parser.Pipeline$MyTimer: boolean isCancelled>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = r0.<gov.nist.javax.sip.parser.Pipeline$MyTimer: gov.nist.javax.sip.parser.Pipeline pipeline>;

        virtualinvoke $r2.<gov.nist.javax.sip.parser.Pipeline: void close()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>(r1);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public boolean cancel()
    {
        gov.nist.javax.sip.parser.Pipeline$MyTimer r0;
        boolean z0;

        r0 := @this: gov.nist.javax.sip.parser.Pipeline$MyTimer;

        z0 = specialinvoke r0.<gov.nist.javax.sip.stack.SIPStackTimerTask: boolean cancel()>();

        r0.<gov.nist.javax.sip.parser.Pipeline$MyTimer: boolean isCancelled> = 1;

        return z0;
    }
}
