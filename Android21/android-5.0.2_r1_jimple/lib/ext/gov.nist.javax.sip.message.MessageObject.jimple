public abstract class gov.nist.javax.sip.message.MessageObject extends gov.nist.core.GenericObject
{

    public abstract java.lang.String encode();

    public void dbgPrint()
    {
        gov.nist.javax.sip.message.MessageObject r0;

        r0 := @this: gov.nist.javax.sip.message.MessageObject;

        specialinvoke r0.<gov.nist.core.GenericObject: void dbgPrint()>();

        return;
    }

    public java.lang.String debugDump()
    {
        gov.nist.javax.sip.message.MessageObject r0;
        java.lang.Class r1, r4, $r13, $r14, $r28;
        java.lang.reflect.Field[] r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        java.lang.reflect.Field r3;
        java.lang.String r5, r6, $r7, $r8, $r12, $r18, $r19, $r21, $r25, $r32, $r33, $r38, $r40;
        java.lang.StringBuilder $r9, $r10, $r11, $r15, $r17, $r20, $r22, $r26, $r31, $r37, $r41, $r42;
        boolean $z0, $z1, $z2, z3;
        java.lang.Object $r16, $r23, $r24, $r27, $r29, $r30, $r35, $r36;
        gov.nist.core.GenericObjectList $r34;
        gov.nist.core.GenericObject $r39;
        java.lang.IllegalAccessException $r43;
        short s17;
        char c18;
        long l19;
        double d0;
        float f0;

        r0 := @this: gov.nist.javax.sip.message.MessageObject;

        r0.<gov.nist.javax.sip.message.MessageObject: java.lang.String stringRepresentation> = "";

        r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r0.<gov.nist.javax.sip.message.MessageObject: void sprint(java.lang.String)>($r7);

        virtualinvoke r0.<gov.nist.javax.sip.message.MessageObject: void sprint(java.lang.String)>("{");

        r2 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        i0 = 0;

     label01:
        $i3 = lengthof r2;

        if i0 >= $i3 goto label25;

        r3 = r2[i0];

        i1 = virtualinvoke r3.<java.lang.reflect.Field: int getModifiers()>();

        if i1 != 2 goto label02;

        goto label24;

     label02:
        r4 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Class getType()>();

        r5 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.String getName()>();

        $i4 = virtualinvoke r5.<java.lang.String: int compareTo(java.lang.String)>("stringRepresentation");

        if $i4 != 0 goto label03;

        goto label24;

     label03:
        $i5 = virtualinvoke r5.<java.lang.String: int compareTo(java.lang.String)>("indentation");

        if $i5 != 0 goto label04;

        goto label24;

     label04:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<gov.nist.javax.sip.message.MessageObject: void sprint(java.lang.String)>($r12);

     label05:
        $z0 = virtualinvoke r4.<java.lang.Class: boolean isPrimitive()>();

        if $z0 == 0 goto label13;

        r6 = virtualinvoke r4.<java.lang.Class: java.lang.String toString()>();

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<gov.nist.javax.sip.message.MessageObject: void sprint(java.lang.String)>($r40);

        $i10 = virtualinvoke r6.<java.lang.String: int compareTo(java.lang.String)>("int");

        if $i10 != 0 goto label06;

        i2 = virtualinvoke r3.<java.lang.reflect.Field: int getInt(java.lang.Object)>(r0);

        virtualinvoke r0.<gov.nist.javax.sip.message.MessageObject: void sprint(int)>(i2);

        goto label12;

     label06:
        $i13 = virtualinvoke r6.<java.lang.String: int compareTo(java.lang.String)>("short");

        if $i13 != 0 goto label07;

        s17 = virtualinvoke r3.<java.lang.reflect.Field: short getShort(java.lang.Object)>(r0);

        virtualinvoke r0.<gov.nist.javax.sip.message.MessageObject: void sprint(short)>(s17);

        goto label12;

     label07:
        $i14 = virtualinvoke r6.<java.lang.String: int compareTo(java.lang.String)>("char");

        if $i14 != 0 goto label08;

        c18 = virtualinvoke r3.<java.lang.reflect.Field: char getChar(java.lang.Object)>(r0);

        virtualinvoke r0.<gov.nist.javax.sip.message.MessageObject: void sprint(char)>(c18);

        goto label12;

     label08:
        $i15 = virtualinvoke r6.<java.lang.String: int compareTo(java.lang.String)>("long");

        if $i15 != 0 goto label09;

        l19 = virtualinvoke r3.<java.lang.reflect.Field: long getLong(java.lang.Object)>(r0);

        virtualinvoke r0.<gov.nist.javax.sip.message.MessageObject: void sprint(long)>(l19);

        goto label12;

     label09:
        $i16 = virtualinvoke r6.<java.lang.String: int compareTo(java.lang.String)>("boolean");

        if $i16 != 0 goto label10;

        z3 = virtualinvoke r3.<java.lang.reflect.Field: boolean getBoolean(java.lang.Object)>(r0);

        virtualinvoke r0.<gov.nist.javax.sip.message.MessageObject: void sprint(boolean)>(z3);

        goto label12;

     label10:
        $i11 = virtualinvoke r6.<java.lang.String: int compareTo(java.lang.String)>("double");

        if $i11 != 0 goto label11;

        d0 = virtualinvoke r3.<java.lang.reflect.Field: double getDouble(java.lang.Object)>(r0);

        virtualinvoke r0.<gov.nist.javax.sip.message.MessageObject: void sprint(double)>(d0);

        goto label12;

     label11:
        $i12 = virtualinvoke r6.<java.lang.String: int compareTo(java.lang.String)>("float");

        if $i12 != 0 goto label12;

        f0 = virtualinvoke r3.<java.lang.reflect.Field: float getFloat(java.lang.Object)>(r0);

        virtualinvoke r0.<gov.nist.javax.sip.message.MessageObject: void sprint(float)>(f0);

     label12:
        goto label22;

     label13:
        $r13 = class "gov/nist/core/GenericObject";

        $z1 = virtualinvoke $r13.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r4);

        if $z1 == 0 goto label15;

        $r36 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        if $r36 == null goto label14;

        $r35 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        $r39 = (gov.nist.core.GenericObject) $r35;

        $i9 = r0.<gov.nist.javax.sip.message.MessageObject: int indentation>;

        $i8 = $i9 + 1;

        $r38 = virtualinvoke $r39.<gov.nist.core.GenericObject: java.lang.String debugDump(int)>($i8);

        virtualinvoke r0.<gov.nist.javax.sip.message.MessageObject: void sprint(java.lang.String)>($r38);

        goto label22;

     label14:
        virtualinvoke r0.<gov.nist.javax.sip.message.MessageObject: void sprint(java.lang.String)>("<null>");

        goto label22;

     label15:
        $r14 = class "gov/nist/core/GenericObjectList";

        $z2 = virtualinvoke $r14.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r4);

        if $z2 == 0 goto label17;

        $r29 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        if $r29 == null goto label16;

        $r30 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        $r34 = (gov.nist.core.GenericObjectList) $r30;

        $i7 = r0.<gov.nist.javax.sip.message.MessageObject: int indentation>;

        $i6 = $i7 + 1;

        $r33 = virtualinvoke $r34.<gov.nist.core.GenericObjectList: java.lang.String debugDump(int)>($i6);

        virtualinvoke r0.<gov.nist.javax.sip.message.MessageObject: void sprint(java.lang.String)>($r33);

        goto label22;

     label16:
        virtualinvoke r0.<gov.nist.javax.sip.message.MessageObject: void sprint(java.lang.String)>("<null>");

        goto label22;

     label17:
        $r16 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        if $r16 == null goto label18;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        $r28 = virtualinvoke $r27.<java.lang.Object: java.lang.Class getClass()>();

        $r25 = virtualinvoke $r28.<java.lang.Class: java.lang.String getName()>();

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<gov.nist.javax.sip.message.MessageObject: void sprint(java.lang.String)>($r32);

        goto label19;

     label18:
        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke r4.<java.lang.Class: java.lang.String getName()>();

        $r20 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r17 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<gov.nist.javax.sip.message.MessageObject: void sprint(java.lang.String)>($r18);

     label19:
        virtualinvoke r0.<gov.nist.javax.sip.message.MessageObject: void sprint(java.lang.String)>("{");

        $r23 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        if $r23 == null goto label20;

        $r24 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        $r21 = virtualinvoke $r24.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r0.<gov.nist.javax.sip.message.MessageObject: void sprint(java.lang.String)>($r21);

        goto label21;

     label20:
        virtualinvoke r0.<gov.nist.javax.sip.message.MessageObject: void sprint(java.lang.String)>("<null>");

     label21:
        virtualinvoke r0.<gov.nist.javax.sip.message.MessageObject: void sprint(java.lang.String)>("}");

     label22:
        goto label24;

     label23:
        $r43 := @caughtexception;

        goto label24;

     label24:
        i0 = i0 + 1;

        goto label01;

     label25:
        virtualinvoke r0.<gov.nist.javax.sip.message.MessageObject: void sprint(java.lang.String)>("}");

        $r8 = r0.<gov.nist.javax.sip.message.MessageObject: java.lang.String stringRepresentation>;

        return $r8;

        catch java.lang.IllegalAccessException from label05 to label22 with label23;
    }

    protected void <init>()
    {
        gov.nist.javax.sip.message.MessageObject r0;

        r0 := @this: gov.nist.javax.sip.message.MessageObject;

        specialinvoke r0.<gov.nist.core.GenericObject: void <init>()>();

        return;
    }

    public java.lang.String dbgPrint(int)
    {
        gov.nist.javax.sip.message.MessageObject r0;
        int i0, i1;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.message.MessageObject;

        i0 := @parameter0: int;

        i1 = r0.<gov.nist.javax.sip.message.MessageObject: int indentation>;

        r0.<gov.nist.javax.sip.message.MessageObject: int indentation> = i0;

        r1 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        r0.<gov.nist.javax.sip.message.MessageObject: int indentation> = i1;

        return r1;
    }
}
