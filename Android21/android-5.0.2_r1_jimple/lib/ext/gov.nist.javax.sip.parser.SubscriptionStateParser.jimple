public class gov.nist.javax.sip.parser.SubscriptionStateParser extends gov.nist.javax.sip.parser.HeaderParser
{

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.SubscriptionStateParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.SubscriptionStateParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(java.lang.String)>(r1);

        return;
    }

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.SubscriptionStateParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.SubscriptionStateParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    public gov.nist.javax.sip.header.SIPHeader parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.SubscriptionStateParser r0;
        gov.nist.javax.sip.header.SubscriptionState r1, $r6;
        gov.nist.core.Token r2, r56, r57, r59, r63, r67;
        java.lang.String r3, r4, $r10, $r45, $r48, $r52, $r55, r58, r60, r64;
        int i0, i2;
        java.lang.Throwable r5, $r50;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        gov.nist.core.LexerCore $r7, $r9, $r11, $r12, $r13, $r16, $r17, $r19, $r20, $r21, $r23, $r25, $r26, $r27, $r28, $r29, $r31, $r33, $r35, $r36, $r37, $r39, $r40, $r43;
        char $c1;
        java.lang.NumberFormatException $r42, $r44, r61, r65;
        java.text.ParseException $r46, $r49, $r51, $r53;
        javax.sip.InvalidArgumentException $r47, $r54, r62, r66;

        r0 := @this: gov.nist.javax.sip.parser.SubscriptionStateParser;

        $z0 = <gov.nist.javax.sip.parser.SubscriptionStateParser: boolean debug>;

        if $z0 == 0 goto label01;

        virtualinvoke r0.<gov.nist.javax.sip.parser.SubscriptionStateParser: void dbg_enter(java.lang.String)>("SubscriptionStateParser.parse");

     label01:
        $r6 = new gov.nist.javax.sip.header.SubscriptionState;

        specialinvoke $r6.<gov.nist.javax.sip.header.SubscriptionState: void <init>()>();

        r1 = $r6;

     label02:
        virtualinvoke r0.<gov.nist.javax.sip.parser.SubscriptionStateParser: void headerName(int)>(2104);

        virtualinvoke r1.<gov.nist.javax.sip.header.SubscriptionState: void setHeaderName(java.lang.String)>("Subscription-State");

        $r7 = r0.<gov.nist.javax.sip.parser.SubscriptionStateParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r7.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r9 = r0.<gov.nist.javax.sip.parser.SubscriptionStateParser: gov.nist.core.LexerCore lexer>;

        r2 = virtualinvoke $r9.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        $r10 = virtualinvoke r2.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        virtualinvoke r1.<gov.nist.javax.sip.header.SubscriptionState: void setState(java.lang.String)>($r10);

     label03:
        $r11 = r0.<gov.nist.javax.sip.parser.SubscriptionStateParser: gov.nist.core.LexerCore lexer>;

        $c1 = virtualinvoke $r11.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c1 != 59 goto label16;

        $r12 = r0.<gov.nist.javax.sip.parser.SubscriptionStateParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r12.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(59);

        $r13 = r0.<gov.nist.javax.sip.parser.SubscriptionStateParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r13.<gov.nist.core.LexerCore: void SPorHT()>();

        $r16 = r0.<gov.nist.javax.sip.parser.SubscriptionStateParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r16.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r17 = r0.<gov.nist.javax.sip.parser.SubscriptionStateParser: gov.nist.core.LexerCore lexer>;

        r56 = virtualinvoke $r17.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        r3 = virtualinvoke r56.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        $z2 = virtualinvoke r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("reason");

        if $z2 == 0 goto label04;

        $r37 = r0.<gov.nist.javax.sip.parser.SubscriptionStateParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r37.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(61);

        $r40 = r0.<gov.nist.javax.sip.parser.SubscriptionStateParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r40.<gov.nist.core.LexerCore: void SPorHT()>();

        $r39 = r0.<gov.nist.javax.sip.parser.SubscriptionStateParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r39.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r43 = r0.<gov.nist.javax.sip.parser.SubscriptionStateParser: gov.nist.core.LexerCore lexer>;

        r57 = virtualinvoke $r43.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        r58 = virtualinvoke r57.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        virtualinvoke r1.<gov.nist.javax.sip.header.SubscriptionState: void setReasonCode(java.lang.String)>(r58);

        goto label15;

     label04:
        $z4 = virtualinvoke r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("expires");

        if $z4 == 0 goto label09;

        $r31 = r0.<gov.nist.javax.sip.parser.SubscriptionStateParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r31.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(61);

        $r36 = r0.<gov.nist.javax.sip.parser.SubscriptionStateParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r36.<gov.nist.core.LexerCore: void SPorHT()>();

        $r35 = r0.<gov.nist.javax.sip.parser.SubscriptionStateParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r35.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r33 = r0.<gov.nist.javax.sip.parser.SubscriptionStateParser: gov.nist.core.LexerCore lexer>;

        r59 = virtualinvoke $r33.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        r60 = virtualinvoke r59.<gov.nist.core.Token: java.lang.String getTokenValue()>();

     label05:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r60);

        virtualinvoke r1.<gov.nist.javax.sip.header.SubscriptionState: void setExpires(int)>(i0);

     label06:
        goto label15;

     label07:
        $r44 := @caughtexception;

        r61 = $r44;

        $r45 = virtualinvoke r61.<java.lang.NumberFormatException: java.lang.String getMessage()>();

        $r46 = virtualinvoke r0.<gov.nist.javax.sip.parser.SubscriptionStateParser: java.text.ParseException createParseException(java.lang.String)>($r45);

        throw $r46;

     label08:
        $r47 := @caughtexception;

        r62 = $r47;

        $r52 = virtualinvoke r62.<javax.sip.InvalidArgumentException: java.lang.String getMessage()>();

        $r53 = virtualinvoke r0.<gov.nist.javax.sip.parser.SubscriptionStateParser: java.text.ParseException createParseException(java.lang.String)>($r52);

        throw $r53;

     label09:
        $z3 = virtualinvoke r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("retry-after");

        if $z3 == 0 goto label14;

        $r27 = r0.<gov.nist.javax.sip.parser.SubscriptionStateParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r27.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(61);

        $r25 = r0.<gov.nist.javax.sip.parser.SubscriptionStateParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r25.<gov.nist.core.LexerCore: void SPorHT()>();

        $r29 = r0.<gov.nist.javax.sip.parser.SubscriptionStateParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r29.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r28 = r0.<gov.nist.javax.sip.parser.SubscriptionStateParser: gov.nist.core.LexerCore lexer>;

        r63 = virtualinvoke $r28.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        r64 = virtualinvoke r63.<gov.nist.core.Token: java.lang.String getTokenValue()>();

     label10:
        i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r64);

        virtualinvoke r1.<gov.nist.javax.sip.header.SubscriptionState: void setRetryAfter(int)>(i2);

     label11:
        goto label15;

     label12:
        $r42 := @caughtexception;

        r65 = $r42;

        $r48 = virtualinvoke r65.<java.lang.NumberFormatException: java.lang.String getMessage()>();

        $r49 = virtualinvoke r0.<gov.nist.javax.sip.parser.SubscriptionStateParser: java.text.ParseException createParseException(java.lang.String)>($r48);

        throw $r49;

     label13:
        $r54 := @caughtexception;

        r66 = $r54;

        $r55 = virtualinvoke r66.<javax.sip.InvalidArgumentException: java.lang.String getMessage()>();

        $r51 = virtualinvoke r0.<gov.nist.javax.sip.parser.SubscriptionStateParser: java.text.ParseException createParseException(java.lang.String)>($r55);

        throw $r51;

     label14:
        $r19 = r0.<gov.nist.javax.sip.parser.SubscriptionStateParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r19.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(61);

        $r21 = r0.<gov.nist.javax.sip.parser.SubscriptionStateParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r21.<gov.nist.core.LexerCore: void SPorHT()>();

        $r20 = r0.<gov.nist.javax.sip.parser.SubscriptionStateParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r20.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r23 = r0.<gov.nist.javax.sip.parser.SubscriptionStateParser: gov.nist.core.LexerCore lexer>;

        r67 = virtualinvoke $r23.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        r4 = virtualinvoke r67.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        virtualinvoke r1.<gov.nist.javax.sip.header.SubscriptionState: void setParameter(java.lang.String,java.lang.String)>(r3, r4);

     label15:
        $r26 = r0.<gov.nist.javax.sip.parser.SubscriptionStateParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r26.<gov.nist.core.LexerCore: void SPorHT()>();

        goto label03;

     label16:
        $z1 = <gov.nist.javax.sip.parser.SubscriptionStateParser: boolean debug>;

        if $z1 == 0 goto label20;

        virtualinvoke r0.<gov.nist.javax.sip.parser.SubscriptionStateParser: void dbg_leave(java.lang.String)>("SubscriptionStateParser.parse");

        goto label20;

     label17:
        $r50 := @caughtexception;

        r5 = $r50;

     label18:
        $z5 = <gov.nist.javax.sip.parser.SubscriptionStateParser: boolean debug>;

        if $z5 == 0 goto label19;

        virtualinvoke r0.<gov.nist.javax.sip.parser.SubscriptionStateParser: void dbg_leave(java.lang.String)>("SubscriptionStateParser.parse");

     label19:
        throw r5;

     label20:
        return r1;

        catch java.lang.NumberFormatException from label05 to label06 with label07;
        catch javax.sip.InvalidArgumentException from label05 to label06 with label08;
        catch java.lang.NumberFormatException from label10 to label11 with label12;
        catch javax.sip.InvalidArgumentException from label10 to label11 with label13;
        catch java.lang.Throwable from label02 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }
}
