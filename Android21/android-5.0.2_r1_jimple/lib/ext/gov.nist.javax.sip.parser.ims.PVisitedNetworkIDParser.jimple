public class gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser extends gov.nist.javax.sip.parser.ParametersParser implements gov.nist.javax.sip.parser.TokenTypes
{

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.ParametersParser: void <init>(java.lang.String)>(r1);

        return;
    }

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.ParametersParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    public gov.nist.javax.sip.header.SIPHeader parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser r0;
        gov.nist.javax.sip.header.ims.PVisitedNetworkIDList r1, $r4, r24;
        gov.nist.javax.sip.header.ims.PVisitedNetworkID r2, $r11;
        char c0, $c1;
        java.lang.Throwable r3, $r22;
        boolean $z0, $z2, $z3;
        gov.nist.core.LexerCore $r5, $r7, $r8, $r10, $r12, $r13, $r14, $r21, $r23;
        java.lang.StringBuilder $r15, $r16, $r18;
        java.lang.String $r17;
        java.text.ParseException $r19;

        r0 := @this: gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser;

        $r4 = new gov.nist.javax.sip.header.ims.PVisitedNetworkIDList;

        specialinvoke $r4.<gov.nist.javax.sip.header.ims.PVisitedNetworkIDList: void <init>()>();

        r1 = $r4;

        $z0 = <gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser: boolean debug>;

        if $z0 == 0 goto label01;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser: void dbg_enter(java.lang.String)>("VisitedNetworkIDParser.parse");

     label01:
        $r5 = r0.<gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r5.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(2123);

        $r7 = r0.<gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r7.<gov.nist.core.LexerCore: void SPorHT()>();

        $r8 = r0.<gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r8.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(58);

        $r10 = r0.<gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r10.<gov.nist.core.LexerCore: void SPorHT()>();

     label02:
        $r11 = new gov.nist.javax.sip.header.ims.PVisitedNetworkID;

        specialinvoke $r11.<gov.nist.javax.sip.header.ims.PVisitedNetworkID: void <init>()>();

        r2 = $r11;

        $r12 = r0.<gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser: gov.nist.core.LexerCore lexer>;

        $c1 = virtualinvoke $r12.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c1 != 34 goto label03;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser: void parseQuotedString(gov.nist.javax.sip.header.ims.PVisitedNetworkID)>(r2);

        goto label04;

     label03:
        virtualinvoke r0.<gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser: void parseToken(gov.nist.javax.sip.header.ims.PVisitedNetworkID)>(r2);

     label04:
        virtualinvoke r1.<gov.nist.javax.sip.header.ims.PVisitedNetworkIDList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r2);

        $r13 = r0.<gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r13.<gov.nist.core.LexerCore: void SPorHT()>();

        $r14 = r0.<gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser: gov.nist.core.LexerCore lexer>;

        c0 = virtualinvoke $r14.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if c0 != 44 goto label05;

        $r21 = r0.<gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r21.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(44);

        $r23 = r0.<gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r23.<gov.nist.core.LexerCore: void SPorHT()>();

        goto label07;

     label05:
        if c0 != 10 goto label06;

        goto label08;

     label06:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unexpected char = ");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r19 = virtualinvoke r0.<gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser: java.text.ParseException createParseException(java.lang.String)>($r17);

        throw $r19;

     label07:
        goto label02;

     label08:
        r24 = r1;

     label09:
        $z2 = <gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser: boolean debug>;

        if $z2 == 0 goto label10;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser: void dbg_leave(java.lang.String)>("VisitedNetworkIDParser.parse");

     label10:
        return r24;

     label11:
        $r22 := @caughtexception;

        r3 = $r22;

     label12:
        $z3 = <gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser: boolean debug>;

        if $z3 == 0 goto label13;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser: void dbg_leave(java.lang.String)>("VisitedNetworkIDParser.parse");

     label13:
        throw r3;

        catch java.lang.Throwable from label01 to label09 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    protected void parseQuotedString(gov.nist.javax.sip.header.ims.PVisitedNetworkID) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser r0;
        gov.nist.javax.sip.header.ims.PVisitedNetworkID r1;
        java.lang.StringBuffer r2, $r4;
        char c0, $c1, c2;
        java.lang.Throwable r3, $r14;
        boolean $z0, $z1, $z2;
        gov.nist.core.LexerCore $r5, $r6, $r7, $r10;
        java.text.ParseException $r11, $r15;
        java.lang.String $r13;

        r0 := @this: gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser;

        r1 := @parameter0: gov.nist.javax.sip.header.ims.PVisitedNetworkID;

        $z0 = <gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser: boolean debug>;

        if $z0 == 0 goto label01;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser: void dbg_enter(java.lang.String)>("parseQuotedString");

     label01:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        r2 = $r4;

        $r5 = r0.<gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser: gov.nist.core.LexerCore lexer>;

        $c1 = virtualinvoke $r5.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c1 == 34 goto label02;

        $r15 = virtualinvoke r0.<gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser: java.text.ParseException createParseException(java.lang.String)>("unexpected char");

        throw $r15;

     label02:
        $r6 = r0.<gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r6.<gov.nist.core.LexerCore: void consume(int)>(1);

     label03:
        $r7 = r0.<gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser: gov.nist.core.LexerCore lexer>;

        c0 = virtualinvoke $r7.<gov.nist.core.LexerCore: char getNextChar()>();

        if c0 != 34 goto label04;

        goto label08;

     label04:
        if c0 != 0 goto label05;

        $r11 = new java.text.ParseException;

        specialinvoke $r11.<java.text.ParseException: void <init>(java.lang.String,int)>("unexpected EOL", 1);

        throw $r11;

     label05:
        if c0 != 92 goto label06;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c0);

        $r10 = r0.<gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser: gov.nist.core.LexerCore lexer>;

        c2 = virtualinvoke $r10.<gov.nist.core.LexerCore: char getNextChar()>();

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c2);

        goto label07;

     label06:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c0);

     label07:
        goto label03;

     label08:
        $r13 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<gov.nist.javax.sip.header.ims.PVisitedNetworkID: void setVisitedNetworkID(java.lang.String)>($r13);

        specialinvoke r0.<gov.nist.javax.sip.parser.ParametersParser: void parse(gov.nist.javax.sip.header.ParametersHeader)>(r1);

     label09:
        $z1 = <gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser: boolean debug>;

        if $z1 == 0 goto label13;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser: void dbg_leave(java.lang.String)>("parseQuotedString.parse");

        goto label13;

     label10:
        $r14 := @caughtexception;

        r3 = $r14;

     label11:
        $z2 = <gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser: boolean debug>;

        if $z2 == 0 goto label12;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser: void dbg_leave(java.lang.String)>("parseQuotedString.parse");

     label12:
        throw r3;

     label13:
        return;

        catch java.lang.Throwable from label01 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    protected void parseToken(gov.nist.javax.sip.header.ims.PVisitedNetworkID) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser r0;
        gov.nist.javax.sip.header.ims.PVisitedNetworkID r1;
        gov.nist.core.Token r2;
        gov.nist.core.LexerCore $r3, $r5;

        r0 := @this: gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser;

        r1 := @parameter0: gov.nist.javax.sip.header.ims.PVisitedNetworkID;

        $r3 = r0.<gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r3.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r5 = r0.<gov.nist.javax.sip.parser.ims.PVisitedNetworkIDParser: gov.nist.core.LexerCore lexer>;

        r2 = virtualinvoke $r5.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        virtualinvoke r1.<gov.nist.javax.sip.header.ims.PVisitedNetworkID: void setVisitedNetworkID(gov.nist.core.Token)>(r2);

        specialinvoke r0.<gov.nist.javax.sip.parser.ParametersParser: void parse(gov.nist.javax.sip.header.ParametersHeader)>(r1);

        return;
    }
}
