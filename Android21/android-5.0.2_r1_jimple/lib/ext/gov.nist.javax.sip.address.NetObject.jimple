public abstract class gov.nist.javax.sip.address.NetObject extends gov.nist.core.GenericObject
{
    protected static final java.lang.String CORE_PACKAGE;
    protected static final java.lang.String NET_PACKAGE;
    protected static final java.lang.String PARSER_PACKAGE;
    protected static final java.lang.String UDP;
    protected static final java.lang.String TCP;
    protected static final java.lang.String TRANSPORT;
    protected static final java.lang.String METHOD;
    protected static final java.lang.String USER;
    protected static final java.lang.String PHONE;
    protected static final java.lang.String MADDR;
    protected static final java.lang.String TTL;
    protected static final java.lang.String LR;
    protected static final java.lang.String SIP;
    protected static final java.lang.String SIPS;
    protected static final java.lang.String TLS;
    protected static final java.lang.String GRUU;

    public void <init>()
    {
        gov.nist.javax.sip.address.NetObject r0;

        r0 := @this: gov.nist.javax.sip.address.NetObject;

        specialinvoke r0.<gov.nist.core.GenericObject: void <init>()>();

        return;
    }

    public boolean equals(java.lang.Object)
    {
        gov.nist.javax.sip.address.NetObject r0;
        java.lang.Object r1, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20;
        java.lang.Class r2, r3, r8, $r11, $r12;
        java.lang.reflect.Field[] r4, r5;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i19, $i23;
        java.lang.reflect.Field r6, r7;
        java.lang.String r9, r10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        double $d0, $d1;
        byte $b13, $b14, $b16;
        float $f0, $f1;
        char $c15, $c22;
        long $l17, $l18;
        short $s20, $s21;
        java.lang.IllegalAccessException $r21, r22;

        r0 := @this: gov.nist.javax.sip.address.NetObject;

        r1 := @parameter0: java.lang.Object;

        $r11 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r11.<java.lang.Object: boolean equals(java.lang.Object)>($r12);

        if $z0 != 0 goto label01;

        return 0;

     label01:
        r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

     label02:
        r4 = virtualinvoke r2.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        r5 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        i0 = 0;

     label03:
        $i2 = lengthof r4;

        if i0 >= $i2 goto label32;

        r6 = r4[i0];

        r7 = r5[i0];

        i1 = virtualinvoke r6.<java.lang.reflect.Field: int getModifiers()>();

        $i3 = i1 & 2;

        if $i3 != 2 goto label04;

        goto label31;

     label04:
        r8 = virtualinvoke r6.<java.lang.reflect.Field: java.lang.Class getType()>();

        r9 = virtualinvoke r6.<java.lang.reflect.Field: java.lang.String getName()>();

        $i5 = virtualinvoke r9.<java.lang.String: int compareTo(java.lang.String)>("stringRepresentation");

        if $i5 != 0 goto label05;

        goto label31;

     label05:
        $i4 = virtualinvoke r9.<java.lang.String: int compareTo(java.lang.String)>("indentation");

        if $i4 != 0 goto label06;

        goto label31;

     label06:
        $z2 = virtualinvoke r8.<java.lang.Class: boolean isPrimitive()>();

        if $z2 == 0 goto label21;

        r10 = virtualinvoke r8.<java.lang.Class: java.lang.String toString()>();

        $i8 = virtualinvoke r10.<java.lang.String: int compareTo(java.lang.String)>("int");

        if $i8 != 0 goto label08;

        $i19 = virtualinvoke r6.<java.lang.reflect.Field: int getInt(java.lang.Object)>(r0);

        $i23 = virtualinvoke r7.<java.lang.reflect.Field: int getInt(java.lang.Object)>(r1);

        if $i19 == $i23 goto label20;

     label07:
        return 0;

     label08:
        $i6 = virtualinvoke r10.<java.lang.String: int compareTo(java.lang.String)>("short");

        if $i6 != 0 goto label10;

        $s21 = virtualinvoke r6.<java.lang.reflect.Field: short getShort(java.lang.Object)>(r0);

        $s20 = virtualinvoke r7.<java.lang.reflect.Field: short getShort(java.lang.Object)>(r1);

        if $s21 == $s20 goto label20;

     label09:
        return 0;

     label10:
        $i7 = virtualinvoke r10.<java.lang.String: int compareTo(java.lang.String)>("char");

        if $i7 != 0 goto label12;

        $c15 = virtualinvoke r6.<java.lang.reflect.Field: char getChar(java.lang.Object)>(r0);

        $c22 = virtualinvoke r7.<java.lang.reflect.Field: char getChar(java.lang.Object)>(r1);

        if $c15 == $c22 goto label20;

     label11:
        return 0;

     label12:
        $i11 = virtualinvoke r10.<java.lang.String: int compareTo(java.lang.String)>("long");

        if $i11 != 0 goto label14;

        $l18 = virtualinvoke r6.<java.lang.reflect.Field: long getLong(java.lang.Object)>(r0);

        $l17 = virtualinvoke r7.<java.lang.reflect.Field: long getLong(java.lang.Object)>(r1);

        $b16 = $l18 cmp $l17;

        if $b16 == 0 goto label20;

     label13:
        return 0;

     label14:
        $i12 = virtualinvoke r10.<java.lang.String: int compareTo(java.lang.String)>("boolean");

        if $i12 != 0 goto label16;

        $z5 = virtualinvoke r6.<java.lang.reflect.Field: boolean getBoolean(java.lang.Object)>(r0);

        $z4 = virtualinvoke r7.<java.lang.reflect.Field: boolean getBoolean(java.lang.Object)>(r1);

        if $z5 == $z4 goto label20;

     label15:
        return 0;

     label16:
        $i9 = virtualinvoke r10.<java.lang.String: int compareTo(java.lang.String)>("double");

        if $i9 != 0 goto label18;

        $d0 = virtualinvoke r6.<java.lang.reflect.Field: double getDouble(java.lang.Object)>(r0);

        $d1 = virtualinvoke r7.<java.lang.reflect.Field: double getDouble(java.lang.Object)>(r1);

        $b14 = $d0 cmpl $d1;

        if $b14 == 0 goto label20;

     label17:
        return 0;

     label18:
        $i10 = virtualinvoke r10.<java.lang.String: int compareTo(java.lang.String)>("float");

        if $i10 != 0 goto label20;

        $f1 = virtualinvoke r6.<java.lang.reflect.Field: float getFloat(java.lang.Object)>(r0);

        $f0 = virtualinvoke r7.<java.lang.reflect.Field: float getFloat(java.lang.Object)>(r1);

        $b13 = $f1 cmpl $f0;

        if $b13 == 0 goto label20;

     label19:
        return 0;

     label20:
        goto label29;

     label21:
        $r13 = virtualinvoke r7.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r1);

        $r16 = virtualinvoke r6.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        if $r13 != $r16 goto label23;

     label22:
        goto label31;

     label23:
        $r17 = virtualinvoke r6.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        if $r17 != null goto label25;

        $r19 = virtualinvoke r7.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r1);

        if $r19 == null goto label25;

     label24:
        return 0;

     label25:
        $r14 = virtualinvoke r7.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r1);

        if $r14 != null goto label27;

        $r18 = virtualinvoke r6.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r1);

        if $r18 == null goto label27;

     label26:
        return 0;

     label27:
        $r15 = virtualinvoke r6.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        $r20 = virtualinvoke r7.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r1);

        $z3 = virtualinvoke $r15.<java.lang.Object: boolean equals(java.lang.Object)>($r20);

        if $z3 != 0 goto label29;

     label28:
        return 0;

     label29:
        goto label31;

     label30:
        $r21 := @caughtexception;

        r22 = $r21;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>(r22);

     label31:
        i0 = i0 + 1;

        goto label03;

     label32:
        $z1 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>(class "gov/nist/javax/sip/address/NetObject");

        if $z1 == 0 goto label33;

        goto label34;

     label33:
        r2 = virtualinvoke r2.<java.lang.Class: java.lang.Class getSuperclass()>();

        r3 = virtualinvoke r3.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label02;

     label34:
        return 1;

        catch java.lang.IllegalAccessException from label06 to label07 with label30;
        catch java.lang.IllegalAccessException from label08 to label09 with label30;
        catch java.lang.IllegalAccessException from label10 to label11 with label30;
        catch java.lang.IllegalAccessException from label12 to label13 with label30;
        catch java.lang.IllegalAccessException from label14 to label15 with label30;
        catch java.lang.IllegalAccessException from label16 to label17 with label30;
        catch java.lang.IllegalAccessException from label18 to label19 with label30;
        catch java.lang.IllegalAccessException from label20 to label22 with label30;
        catch java.lang.IllegalAccessException from label23 to label24 with label30;
        catch java.lang.IllegalAccessException from label25 to label26 with label30;
        catch java.lang.IllegalAccessException from label27 to label28 with label30;
    }

    public boolean match(java.lang.Object)
    {
        gov.nist.javax.sip.address.NetObject r0;
        java.lang.Object r1, r12, r33;
        gov.nist.core.GenericObject r2, $r19, $r24, $r26, $r28;
        java.lang.Class r3, r4, r9, $r14, $r15, $r16, $r17, $r18, $r21, $r22, $r23;
        java.lang.reflect.Field[] r5, r6;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i14, $i15, $i22, $i24;
        java.lang.reflect.Field r7, r8;
        java.lang.String r10, r11, r13, $r29, $r30, $r31;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        gov.nist.core.GenericObjectList $r20;
        gov.nist.core.Match $r25, $r27;
        byte $b12, $b13, $b17;
        double $d0, $d1;
        float $f0, $f1;
        char $c16, $c19;
        short $s18, $s23;
        long $l20, $l21;
        java.lang.IllegalAccessException $r32, r34;

        r0 := @this: gov.nist.javax.sip.address.NetObject;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label01;

        return 1;

     label01:
        $r14 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r15 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $z1 = virtualinvoke $r14.<java.lang.Object: boolean equals(java.lang.Object)>($r15);

        if $z1 != 0 goto label02;

        return 0;

     label02:
        r2 = (gov.nist.core.GenericObject) r1;

        r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

     label03:
        r5 = virtualinvoke r4.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        r6 = virtualinvoke r3.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        i0 = 0;

     label04:
        $i2 = lengthof r5;

        if i0 >= $i2 goto label42;

        r7 = r5[i0];

        r8 = r6[i0];

        i1 = virtualinvoke r7.<java.lang.reflect.Field: int getModifiers()>();

        $i3 = i1 & 2;

        if $i3 != 2 goto label05;

        goto label41;

     label05:
        r9 = virtualinvoke r7.<java.lang.reflect.Field: java.lang.Class getType()>();

        r10 = virtualinvoke r7.<java.lang.reflect.Field: java.lang.String getName()>();

        $i4 = virtualinvoke r10.<java.lang.String: int compareTo(java.lang.String)>("stringRepresentation");

        if $i4 != 0 goto label06;

        goto label41;

     label06:
        $i5 = virtualinvoke r10.<java.lang.String: int compareTo(java.lang.String)>("indentation");

        if $i5 != 0 goto label07;

        goto label41;

     label07:
        $z3 = virtualinvoke r9.<java.lang.Class: boolean isPrimitive()>();

        if $z3 == 0 goto label22;

        r11 = virtualinvoke r9.<java.lang.Class: java.lang.String toString()>();

        $i11 = virtualinvoke r11.<java.lang.String: int compareTo(java.lang.String)>("int");

        if $i11 != 0 goto label09;

        $i22 = virtualinvoke r7.<java.lang.reflect.Field: int getInt(java.lang.Object)>(r0);

        $i24 = virtualinvoke r8.<java.lang.reflect.Field: int getInt(java.lang.Object)>(r2);

        if $i22 == $i24 goto label21;

     label08:
        return 0;

     label09:
        $i6 = virtualinvoke r11.<java.lang.String: int compareTo(java.lang.String)>("short");

        if $i6 != 0 goto label11;

        $s18 = virtualinvoke r7.<java.lang.reflect.Field: short getShort(java.lang.Object)>(r0);

        $s23 = virtualinvoke r8.<java.lang.reflect.Field: short getShort(java.lang.Object)>(r2);

        if $s18 == $s23 goto label21;

     label10:
        return 0;

     label11:
        $i7 = virtualinvoke r11.<java.lang.String: int compareTo(java.lang.String)>("char");

        if $i7 != 0 goto label13;

        $c16 = virtualinvoke r7.<java.lang.reflect.Field: char getChar(java.lang.Object)>(r0);

        $c19 = virtualinvoke r8.<java.lang.reflect.Field: char getChar(java.lang.Object)>(r2);

        if $c16 == $c19 goto label21;

     label12:
        return 0;

     label13:
        $i8 = virtualinvoke r11.<java.lang.String: int compareTo(java.lang.String)>("long");

        if $i8 != 0 goto label15;

        $l21 = virtualinvoke r7.<java.lang.reflect.Field: long getLong(java.lang.Object)>(r0);

        $l20 = virtualinvoke r8.<java.lang.reflect.Field: long getLong(java.lang.Object)>(r2);

        $b17 = $l21 cmp $l20;

        if $b17 == 0 goto label21;

     label14:
        return 0;

     label15:
        $i9 = virtualinvoke r11.<java.lang.String: int compareTo(java.lang.String)>("boolean");

        if $i9 != 0 goto label17;

        $z15 = virtualinvoke r7.<java.lang.reflect.Field: boolean getBoolean(java.lang.Object)>(r0);

        $z14 = virtualinvoke r8.<java.lang.reflect.Field: boolean getBoolean(java.lang.Object)>(r2);

        if $z15 == $z14 goto label21;

     label16:
        return 0;

     label17:
        $i14 = virtualinvoke r11.<java.lang.String: int compareTo(java.lang.String)>("double");

        if $i14 != 0 goto label19;

        $d0 = virtualinvoke r7.<java.lang.reflect.Field: double getDouble(java.lang.Object)>(r0);

        $d1 = virtualinvoke r8.<java.lang.reflect.Field: double getDouble(java.lang.Object)>(r2);

        $b13 = $d0 cmpl $d1;

        if $b13 == 0 goto label21;

     label18:
        return 0;

     label19:
        $i15 = virtualinvoke r11.<java.lang.String: int compareTo(java.lang.String)>("float");

        if $i15 != 0 goto label21;

        $f0 = virtualinvoke r7.<java.lang.reflect.Field: float getFloat(java.lang.Object)>(r0);

        $f1 = virtualinvoke r8.<java.lang.reflect.Field: float getFloat(java.lang.Object)>(r2);

        $b12 = $f0 cmpl $f1;

        if $b12 == 0 goto label21;

     label20:
        return 0;

     label21:
        goto label39;

     label22:
        r33 = virtualinvoke r7.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        r12 = virtualinvoke r8.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r2);

        if r12 == null goto label24;

        if r33 != null goto label24;

     label23:
        return 0;

     label24:
        if r12 != null goto label26;

        if r33 == null goto label26;

     label25:
        goto label41;

     label26:
        if r12 != null goto label28;

        if r33 != null goto label28;

     label27:
        goto label41;

     label28:
        $z5 = r12 instanceof java.lang.String;

        if $z5 == 0 goto label32;

        $z13 = r33 instanceof java.lang.String;

        if $z13 == 0 goto label32;

        $r30 = (java.lang.String) r12;

        $z12 = virtualinvoke $r30.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z12 == 0 goto label30;

     label29:
        goto label41;

     label30:
        $r31 = (java.lang.String) r33;

        $r29 = (java.lang.String) r12;

        $i10 = virtualinvoke $r31.<java.lang.String: int compareToIgnoreCase(java.lang.String)>($r29);

        if $i10 == 0 goto label39;

     label31:
        return 0;

     label32:
        $r16 = virtualinvoke r33.<java.lang.Object: java.lang.Class getClass()>();

        $z4 = staticinvoke <gov.nist.core.GenericObject: boolean isMySubclass(java.lang.Class)>($r16);

        if $z4 == 0 goto label35;

        $r23 = virtualinvoke r12.<java.lang.Object: java.lang.Class getClass()>();

        $z10 = staticinvoke <gov.nist.core.GenericObject: boolean isMySubclass(java.lang.Class)>($r23);

        if $z10 == 0 goto label35;

        $r22 = virtualinvoke r33.<java.lang.Object: java.lang.Class getClass()>();

        $r21 = virtualinvoke r12.<java.lang.Object: java.lang.Class getClass()>();

        $z11 = virtualinvoke $r22.<java.lang.Object: boolean equals(java.lang.Object)>($r21);

        if $z11 == 0 goto label35;

        $r26 = (gov.nist.core.GenericObject) r12;

        $r25 = virtualinvoke $r26.<gov.nist.core.GenericObject: gov.nist.core.Match getMatcher()>();

        if $r25 == null goto label35;

        $r24 = (gov.nist.core.GenericObject) r33;

        r13 = virtualinvoke $r24.<gov.nist.core.GenericObject: java.lang.String encode()>();

        $r28 = (gov.nist.core.GenericObject) r12;

        $r27 = virtualinvoke $r28.<gov.nist.core.GenericObject: gov.nist.core.Match getMatcher()>();

        z0 = interfaceinvoke $r27.<gov.nist.core.Match: boolean match(java.lang.String)>(r13);

        if z0 != 0 goto label34;

     label33:
        return 0;

     label34:
        goto label39;

     label35:
        $r18 = virtualinvoke r33.<java.lang.Object: java.lang.Class getClass()>();

        $z7 = staticinvoke <gov.nist.core.GenericObject: boolean isMySubclass(java.lang.Class)>($r18);

        if $z7 == 0 goto label37;

        $r19 = (gov.nist.core.GenericObject) r33;

        $z8 = virtualinvoke $r19.<gov.nist.core.GenericObject: boolean match(java.lang.Object)>(r12);

        if $z8 != 0 goto label37;

     label36:
        return 0;

     label37:
        $r17 = virtualinvoke r33.<java.lang.Object: java.lang.Class getClass()>();

        $z6 = staticinvoke <gov.nist.core.GenericObjectList: boolean isMySubclass(java.lang.Class)>($r17);

        if $z6 == 0 goto label39;

        $r20 = (gov.nist.core.GenericObjectList) r33;

        $z9 = virtualinvoke $r20.<gov.nist.core.GenericObjectList: boolean match(java.lang.Object)>(r12);

        if $z9 != 0 goto label39;

     label38:
        return 0;

     label39:
        goto label41;

     label40:
        $r32 := @caughtexception;

        r34 = $r32;

        staticinvoke <gov.nist.core.InternalErrorHandler: void handleException(java.lang.Exception)>(r34);

     label41:
        i0 = i0 + 1;

        goto label04;

     label42:
        $z2 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(class "gov/nist/javax/sip/address/NetObject");

        if $z2 == 0 goto label43;

        goto label44;

     label43:
        r4 = virtualinvoke r4.<java.lang.Class: java.lang.Class getSuperclass()>();

        r3 = virtualinvoke r3.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label03;

     label44:
        return 1;

        catch java.lang.IllegalAccessException from label07 to label08 with label40;
        catch java.lang.IllegalAccessException from label09 to label10 with label40;
        catch java.lang.IllegalAccessException from label11 to label12 with label40;
        catch java.lang.IllegalAccessException from label13 to label14 with label40;
        catch java.lang.IllegalAccessException from label15 to label16 with label40;
        catch java.lang.IllegalAccessException from label17 to label18 with label40;
        catch java.lang.IllegalAccessException from label19 to label20 with label40;
        catch java.lang.IllegalAccessException from label21 to label23 with label40;
        catch java.lang.IllegalAccessException from label24 to label25 with label40;
        catch java.lang.IllegalAccessException from label26 to label27 with label40;
        catch java.lang.IllegalAccessException from label28 to label29 with label40;
        catch java.lang.IllegalAccessException from label30 to label31 with label40;
        catch java.lang.IllegalAccessException from label32 to label33 with label40;
        catch java.lang.IllegalAccessException from label34 to label36 with label40;
        catch java.lang.IllegalAccessException from label37 to label38 with label40;
    }

    public java.lang.String debugDump()
    {
        gov.nist.javax.sip.address.NetObject r0;
        java.lang.Class r1, r4, $r13, $r14, $r24;
        java.lang.reflect.Field[] r2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        java.lang.reflect.Field r3;
        java.lang.String r5, r6, $r7, $r8, $r11, $r19, $r21, $r22, $r25, $r28, $r36, $r37, $r39;
        java.lang.StringBuilder $r9, $r10, $r12, $r16, $r17, $r18, $r26, $r30, $r31, $r40, $r41, $r42;
        boolean $z0, $z1, $z2, z3;
        java.lang.Object $r15, $r20, $r23, $r27, $r29, $r33, $r34, $r35;
        gov.nist.core.GenericObjectList $r32;
        gov.nist.core.GenericObject $r38;
        java.lang.IllegalAccessException $r43;
        short s18;
        char c19;
        long l20;
        double d0;
        float f0;

        r0 := @this: gov.nist.javax.sip.address.NetObject;

        r0.<gov.nist.javax.sip.address.NetObject: java.lang.String stringRepresentation> = "";

        r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>($r7);

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>("{");

        r2 = virtualinvoke r1.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        i0 = 0;

     label01:
        $i3 = lengthof r2;

        if i0 >= $i3 goto label25;

        r3 = r2[i0];

        i1 = virtualinvoke r3.<java.lang.reflect.Field: int getModifiers()>();

        $i4 = i1 & 2;

        if $i4 != 2 goto label02;

        goto label24;

     label02:
        r4 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Class getType()>();

        r5 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.String getName()>();

        $i6 = virtualinvoke r5.<java.lang.String: int compareTo(java.lang.String)>("stringRepresentation");

        if $i6 != 0 goto label03;

        goto label24;

     label03:
        $i5 = virtualinvoke r5.<java.lang.String: int compareTo(java.lang.String)>("indentation");

        if $i5 != 0 goto label04;

        goto label24;

     label04:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>($r11);

     label05:
        $z0 = virtualinvoke r4.<java.lang.Class: boolean isPrimitive()>();

        if $z0 == 0 goto label13;

        r6 = virtualinvoke r4.<java.lang.Class: java.lang.String toString()>();

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r40 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r39 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>($r39);

        $i14 = virtualinvoke r6.<java.lang.String: int compareTo(java.lang.String)>("int");

        if $i14 != 0 goto label06;

        i2 = virtualinvoke r3.<java.lang.reflect.Field: int getInt(java.lang.Object)>(r0);

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(int)>(i2);

        goto label12;

     label06:
        $i15 = virtualinvoke r6.<java.lang.String: int compareTo(java.lang.String)>("short");

        if $i15 != 0 goto label07;

        s18 = virtualinvoke r3.<java.lang.reflect.Field: short getShort(java.lang.Object)>(r0);

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(short)>(s18);

        goto label12;

     label07:
        $i16 = virtualinvoke r6.<java.lang.String: int compareTo(java.lang.String)>("char");

        if $i16 != 0 goto label08;

        c19 = virtualinvoke r3.<java.lang.reflect.Field: char getChar(java.lang.Object)>(r0);

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(char)>(c19);

        goto label12;

     label08:
        $i17 = virtualinvoke r6.<java.lang.String: int compareTo(java.lang.String)>("long");

        if $i17 != 0 goto label09;

        l20 = virtualinvoke r3.<java.lang.reflect.Field: long getLong(java.lang.Object)>(r0);

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(long)>(l20);

        goto label12;

     label09:
        $i11 = virtualinvoke r6.<java.lang.String: int compareTo(java.lang.String)>("boolean");

        if $i11 != 0 goto label10;

        z3 = virtualinvoke r3.<java.lang.reflect.Field: boolean getBoolean(java.lang.Object)>(r0);

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(boolean)>(z3);

        goto label12;

     label10:
        $i12 = virtualinvoke r6.<java.lang.String: int compareTo(java.lang.String)>("double");

        if $i12 != 0 goto label11;

        d0 = virtualinvoke r3.<java.lang.reflect.Field: double getDouble(java.lang.Object)>(r0);

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(double)>(d0);

        goto label12;

     label11:
        $i13 = virtualinvoke r6.<java.lang.String: int compareTo(java.lang.String)>("float");

        if $i13 != 0 goto label12;

        f0 = virtualinvoke r3.<java.lang.reflect.Field: float getFloat(java.lang.Object)>(r0);

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(float)>(f0);

     label12:
        goto label22;

     label13:
        $r13 = class "gov/nist/core/GenericObject";

        $z1 = virtualinvoke $r13.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r4);

        if $z1 == 0 goto label15;

        $r35 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        if $r35 == null goto label14;

        $r34 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        $r38 = (gov.nist.core.GenericObject) $r34;

        $i9 = r0.<gov.nist.javax.sip.address.NetObject: int indentation>;

        $i10 = $i9 + 1;

        $r37 = virtualinvoke $r38.<gov.nist.core.GenericObject: java.lang.String debugDump(int)>($i10);

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>($r37);

        goto label22;

     label14:
        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>("<null>");

        goto label22;

     label15:
        $r14 = class "gov/nist/core/GenericObjectList";

        $z2 = virtualinvoke $r14.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r4);

        if $z2 == 0 goto label17;

        $r29 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        if $r29 == null goto label16;

        $r33 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        $r32 = (gov.nist.core.GenericObjectList) $r33;

        $i8 = r0.<gov.nist.javax.sip.address.NetObject: int indentation>;

        $i7 = $i8 + 1;

        $r36 = virtualinvoke $r32.<gov.nist.core.GenericObjectList: java.lang.String debugDump(int)>($i7);

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>($r36);

        goto label22;

     label16:
        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>("<null>");

        goto label22;

     label17:
        $r15 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        if $r15 == null goto label18;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        $r24 = virtualinvoke $r27.<java.lang.Object: java.lang.Class getClass()>();

        $r25 = virtualinvoke $r24.<java.lang.Class: java.lang.String getName()>();

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r28 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>($r28);

        goto label19;

     label18:
        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke r4.<java.lang.Class: java.lang.String getName()>();

        $r16 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r22 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>($r22);

     label19:
        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>("{");

        $r23 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        if $r23 == null goto label20;

        $r20 = virtualinvoke r3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(r0);

        $r21 = virtualinvoke $r20.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>($r21);

        goto label21;

     label20:
        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>("<null>");

     label21:
        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>("}");

     label22:
        goto label24;

     label23:
        $r43 := @caughtexception;

        goto label24;

     label24:
        i0 = i0 + 1;

        goto label01;

     label25:
        virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: void sprint(java.lang.String)>("}");

        $r8 = r0.<gov.nist.javax.sip.address.NetObject: java.lang.String stringRepresentation>;

        return $r8;

        catch java.lang.IllegalAccessException from label05 to label22 with label23;
    }

    public java.lang.String debugDump(int)
    {
        gov.nist.javax.sip.address.NetObject r0;
        int i0, i1;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.address.NetObject;

        i0 := @parameter0: int;

        i1 = r0.<gov.nist.javax.sip.address.NetObject: int indentation>;

        r0.<gov.nist.javax.sip.address.NetObject: int indentation> = i0;

        r1 = virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: java.lang.String debugDump()>();

        r0.<gov.nist.javax.sip.address.NetObject: int indentation> = i1;

        return r1;
    }

    public java.lang.String toString()
    {
        gov.nist.javax.sip.address.NetObject r0;
        java.lang.String $r1;

        r0 := @this: gov.nist.javax.sip.address.NetObject;

        $r1 = virtualinvoke r0.<gov.nist.javax.sip.address.NetObject: java.lang.String encode()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <gov.nist.javax.sip.address.NetObject: java.lang.String GRUU> = "gr";

        <gov.nist.javax.sip.address.NetObject: java.lang.String TLS> = "tls";

        <gov.nist.javax.sip.address.NetObject: java.lang.String SIPS> = "sips";

        <gov.nist.javax.sip.address.NetObject: java.lang.String SIP> = "sip";

        <gov.nist.javax.sip.address.NetObject: java.lang.String LR> = "lr";

        <gov.nist.javax.sip.address.NetObject: java.lang.String TTL> = "ttl";

        <gov.nist.javax.sip.address.NetObject: java.lang.String MADDR> = "maddr";

        <gov.nist.javax.sip.address.NetObject: java.lang.String PHONE> = "phone";

        <gov.nist.javax.sip.address.NetObject: java.lang.String USER> = "user";

        <gov.nist.javax.sip.address.NetObject: java.lang.String METHOD> = "method";

        <gov.nist.javax.sip.address.NetObject: java.lang.String TRANSPORT> = "transport";

        <gov.nist.javax.sip.address.NetObject: java.lang.String TCP> = "tcp";

        <gov.nist.javax.sip.address.NetObject: java.lang.String UDP> = "udp";

        <gov.nist.javax.sip.address.NetObject: java.lang.String PARSER_PACKAGE> = "gov.nist.javax.sip.parser";

        <gov.nist.javax.sip.address.NetObject: java.lang.String NET_PACKAGE> = "gov.nist.javax.sip.address";

        <gov.nist.javax.sip.address.NetObject: java.lang.String CORE_PACKAGE> = "gov.nist.core";

        return;
    }
}
