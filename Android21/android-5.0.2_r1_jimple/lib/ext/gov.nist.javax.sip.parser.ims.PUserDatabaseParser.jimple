public class gov.nist.javax.sip.parser.ims.PUserDatabaseParser extends gov.nist.javax.sip.parser.ParametersParser implements gov.nist.javax.sip.parser.TokenTypes
{

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.ims.PUserDatabaseParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.ims.PUserDatabaseParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.ParametersParser: void <init>(java.lang.String)>(r1);

        return;
    }

    public void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.ims.PUserDatabaseParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.ims.PUserDatabaseParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.ParametersParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    public gov.nist.javax.sip.header.SIPHeader parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.ims.PUserDatabaseParser r0;
        gov.nist.javax.sip.header.ims.PUserDatabase r1, r2, $r10;
        java.lang.Throwable r3, $r11;
        boolean $z0, $z1, $z2;
        gov.nist.core.LexerCore $r4, $r6, $r7, $r9;

        r0 := @this: gov.nist.javax.sip.parser.ims.PUserDatabaseParser;

        $z0 = <gov.nist.javax.sip.parser.ims.PUserDatabaseParser: boolean debug>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ims.PUserDatabaseParser: void dbg_enter(java.lang.String)>("PUserDatabase.parse");

     label1:
        $r4 = r0.<gov.nist.javax.sip.parser.ims.PUserDatabaseParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r4.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(2141);

        $r6 = r0.<gov.nist.javax.sip.parser.ims.PUserDatabaseParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r6.<gov.nist.core.LexerCore: void SPorHT()>();

        $r7 = r0.<gov.nist.javax.sip.parser.ims.PUserDatabaseParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r7.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(58);

        $r9 = r0.<gov.nist.javax.sip.parser.ims.PUserDatabaseParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r9.<gov.nist.core.LexerCore: void SPorHT()>();

        $r10 = new gov.nist.javax.sip.header.ims.PUserDatabase;

        specialinvoke $r10.<gov.nist.javax.sip.header.ims.PUserDatabase: void <init>()>();

        r1 = $r10;

        specialinvoke r0.<gov.nist.javax.sip.parser.ims.PUserDatabaseParser: void parseheader(gov.nist.javax.sip.header.ims.PUserDatabase)>(r1);

        r2 = r1;

     label2:
        $z1 = <gov.nist.javax.sip.parser.ims.PUserDatabaseParser: boolean debug>;

        if $z1 == 0 goto label3;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ims.PUserDatabaseParser: void dbg_leave(java.lang.String)>("PUserDatabase.parse");

     label3:
        return r2;

     label4:
        $r11 := @caughtexception;

        r3 = $r11;

     label5:
        $z2 = <gov.nist.javax.sip.parser.ims.PUserDatabaseParser: boolean debug>;

        if $z2 == 0 goto label6;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ims.PUserDatabaseParser: void dbg_leave(java.lang.String)>("PUserDatabase.parse");

     label6:
        throw r3;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void parseheader(gov.nist.javax.sip.header.ims.PUserDatabase) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.ims.PUserDatabaseParser r0;
        gov.nist.javax.sip.header.ims.PUserDatabase r1;
        java.lang.StringBuffer r2, $r3;
        char c0;
        gov.nist.core.LexerCore $r4, $r6, $r8;
        boolean $z0;
        java.lang.String $r7;

        r0 := @this: gov.nist.javax.sip.parser.ims.PUserDatabaseParser;

        r1 := @parameter0: gov.nist.javax.sip.header.ims.PUserDatabase;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        r2 = $r3;

        $r4 = r0.<gov.nist.javax.sip.parser.ims.PUserDatabaseParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r4.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(60);

     label1:
        $r6 = r0.<gov.nist.javax.sip.parser.ims.PUserDatabaseParser: gov.nist.core.LexerCore lexer>;

        $z0 = virtualinvoke $r6.<gov.nist.core.LexerCore: boolean hasMoreChars()>();

        if $z0 == 0 goto label3;

        $r8 = r0.<gov.nist.javax.sip.parser.ims.PUserDatabaseParser: gov.nist.core.LexerCore lexer>;

        c0 = virtualinvoke $r8.<gov.nist.core.LexerCore: char getNextChar()>();

        if c0 == 62 goto label2;

        if c0 == 10 goto label2;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c0);

     label2:
        goto label1;

     label3:
        $r7 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<gov.nist.javax.sip.header.ims.PUserDatabase: void setDatabaseName(java.lang.String)>($r7);

        specialinvoke r0.<gov.nist.javax.sip.parser.ParametersParser: void parse(gov.nist.javax.sip.header.ParametersHeader)>(r1);

        return;
    }
}
