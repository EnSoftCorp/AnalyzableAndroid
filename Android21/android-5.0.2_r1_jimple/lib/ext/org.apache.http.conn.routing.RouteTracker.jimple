public final class org.apache.http.conn.routing.RouteTracker extends java.lang.Object implements org.apache.http.conn.routing.RouteInfo, java.lang.Cloneable
{
    private final org.apache.http.HttpHost targetHost;
    private final java.net.InetAddress localAddress;
    private boolean connected;
    private org.apache.http.HttpHost[] proxyChain;
    private org.apache.http.conn.routing.RouteInfo$TunnelType tunnelled;
    private org.apache.http.conn.routing.RouteInfo$LayerType layered;
    private boolean secure;

    public void <init>(org.apache.http.HttpHost, java.net.InetAddress)
    {
        org.apache.http.conn.routing.RouteTracker r0;
        org.apache.http.HttpHost r1;
        java.net.InetAddress r2;
        org.apache.http.conn.routing.RouteInfo$TunnelType $r3;
        org.apache.http.conn.routing.RouteInfo$LayerType $r4;
        java.lang.IllegalArgumentException $r5;

        r0 := @this: org.apache.http.conn.routing.RouteTracker;

        r1 := @parameter0: org.apache.http.HttpHost;

        r2 := @parameter1: java.net.InetAddress;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Target host may not be null.");

        throw $r5;

     label1:
        r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost targetHost> = r1;

        r0.<org.apache.http.conn.routing.RouteTracker: java.net.InetAddress localAddress> = r2;

        $r3 = <org.apache.http.conn.routing.RouteInfo$TunnelType: org.apache.http.conn.routing.RouteInfo$TunnelType PLAIN>;

        r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo$TunnelType tunnelled> = $r3;

        $r4 = <org.apache.http.conn.routing.RouteInfo$LayerType: org.apache.http.conn.routing.RouteInfo$LayerType PLAIN>;

        r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo$LayerType layered> = $r4;

        return;
    }

    public void <init>(org.apache.http.conn.routing.HttpRoute)
    {
        org.apache.http.conn.routing.RouteTracker r0;
        org.apache.http.conn.routing.HttpRoute r1;
        org.apache.http.HttpHost $r2;
        java.net.InetAddress $r3;

        r0 := @this: org.apache.http.conn.routing.RouteTracker;

        r1 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        $r2 = virtualinvoke r1.<org.apache.http.conn.routing.HttpRoute: org.apache.http.HttpHost getTargetHost()>();

        $r3 = virtualinvoke r1.<org.apache.http.conn.routing.HttpRoute: java.net.InetAddress getLocalAddress()>();

        specialinvoke r0.<org.apache.http.conn.routing.RouteTracker: void <init>(org.apache.http.HttpHost,java.net.InetAddress)>($r2, $r3);

        return;
    }

    public final void connectTarget(boolean)
    {
        org.apache.http.conn.routing.RouteTracker r0;
        boolean z0, $z1;
        java.lang.IllegalStateException $r1;

        r0 := @this: org.apache.http.conn.routing.RouteTracker;

        z0 := @parameter0: boolean;

        $z1 = r0.<org.apache.http.conn.routing.RouteTracker: boolean connected>;

        if $z1 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already connected.");

        throw $r1;

     label1:
        r0.<org.apache.http.conn.routing.RouteTracker: boolean connected> = 1;

        r0.<org.apache.http.conn.routing.RouteTracker: boolean secure> = z0;

        return;
    }

    public final void connectProxy(org.apache.http.HttpHost, boolean)
    {
        org.apache.http.conn.routing.RouteTracker r0;
        org.apache.http.HttpHost r1;
        boolean z0, $z1;
        org.apache.http.HttpHost[] $r2;
        java.lang.IllegalStateException $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: org.apache.http.conn.routing.RouteTracker;

        r1 := @parameter0: org.apache.http.HttpHost;

        z0 := @parameter1: boolean;

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Proxy host may not be null.");

        throw $r4;

     label1:
        $z1 = r0.<org.apache.http.conn.routing.RouteTracker: boolean connected>;

        if $z1 == 0 goto label2;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Already connected.");

        throw $r3;

     label2:
        r0.<org.apache.http.conn.routing.RouteTracker: boolean connected> = 1;

        $r2 = newarray (org.apache.http.HttpHost)[1];

        $r2[0] = r1;

        r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain> = $r2;

        r0.<org.apache.http.conn.routing.RouteTracker: boolean secure> = z0;

        return;
    }

    public final void tunnelTarget(boolean)
    {
        org.apache.http.conn.routing.RouteTracker r0;
        boolean z0, $z1;
        org.apache.http.HttpHost[] $r1;
        org.apache.http.conn.routing.RouteInfo$TunnelType $r2;
        java.lang.IllegalStateException $r3, $r4;

        r0 := @this: org.apache.http.conn.routing.RouteTracker;

        z0 := @parameter0: boolean;

        $z1 = r0.<org.apache.http.conn.routing.RouteTracker: boolean connected>;

        if $z1 != 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No tunnel unless connected.");

        throw $r4;

     label1:
        $r1 = r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        if $r1 != null goto label2;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No tunnel without proxy.");

        throw $r3;

     label2:
        $r2 = <org.apache.http.conn.routing.RouteInfo$TunnelType: org.apache.http.conn.routing.RouteInfo$TunnelType TUNNELLED>;

        r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo$TunnelType tunnelled> = $r2;

        r0.<org.apache.http.conn.routing.RouteTracker: boolean secure> = z0;

        return;
    }

    public final void tunnelProxy(org.apache.http.HttpHost, boolean)
    {
        org.apache.http.conn.routing.RouteTracker r0;
        org.apache.http.HttpHost r1;
        boolean z0, $z1;
        org.apache.http.HttpHost[] r2, $r3, $r4, $r5, $r6;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.IllegalStateException $r7, $r8;
        java.lang.IllegalArgumentException $r9;

        r0 := @this: org.apache.http.conn.routing.RouteTracker;

        r1 := @parameter0: org.apache.http.HttpHost;

        z0 := @parameter1: boolean;

        if r1 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Proxy host may not be null.");

        throw $r9;

     label1:
        $z1 = r0.<org.apache.http.conn.routing.RouteTracker: boolean connected>;

        if $z1 != 0 goto label2;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No tunnel unless connected.");

        throw $r8;

     label2:
        $r3 = r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        if $r3 != null goto label3;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No proxy tunnel without proxy.");

        throw $r7;

     label3:
        $r4 = r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        $i0 = lengthof $r4;

        $i1 = $i0 + 1;

        r2 = newarray (org.apache.http.HttpHost)[$i1];

        $r6 = r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        $r5 = r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        $i2 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r2, 0, $i2);

        $i3 = lengthof r2;

        $i4 = $i3 - 1;

        r2[$i4] = r1;

        r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain> = r2;

        r0.<org.apache.http.conn.routing.RouteTracker: boolean secure> = z0;

        return;
    }

    public final void layerProtocol(boolean)
    {
        org.apache.http.conn.routing.RouteTracker r0;
        boolean z0, $z1;
        org.apache.http.conn.routing.RouteInfo$LayerType $r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: org.apache.http.conn.routing.RouteTracker;

        z0 := @parameter0: boolean;

        $z1 = r0.<org.apache.http.conn.routing.RouteTracker: boolean connected>;

        if $z1 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No layered protocol unless connected.");

        throw $r2;

     label1:
        $r1 = <org.apache.http.conn.routing.RouteInfo$LayerType: org.apache.http.conn.routing.RouteInfo$LayerType LAYERED>;

        r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo$LayerType layered> = $r1;

        r0.<org.apache.http.conn.routing.RouteTracker: boolean secure> = z0;

        return;
    }

    public final org.apache.http.HttpHost getTargetHost()
    {
        org.apache.http.conn.routing.RouteTracker r0;
        org.apache.http.HttpHost $r1;

        r0 := @this: org.apache.http.conn.routing.RouteTracker;

        $r1 = r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost targetHost>;

        return $r1;
    }

    public final java.net.InetAddress getLocalAddress()
    {
        org.apache.http.conn.routing.RouteTracker r0;
        java.net.InetAddress $r1;

        r0 := @this: org.apache.http.conn.routing.RouteTracker;

        $r1 = r0.<org.apache.http.conn.routing.RouteTracker: java.net.InetAddress localAddress>;

        return $r1;
    }

    public final int getHopCount()
    {
        org.apache.http.conn.routing.RouteTracker r0;
        int i0, $i1;
        boolean $z0;
        org.apache.http.HttpHost[] $r1, $r2;

        r0 := @this: org.apache.http.conn.routing.RouteTracker;

        i0 = 0;

        $z0 = r0.<org.apache.http.conn.routing.RouteTracker: boolean connected>;

        if $z0 == 0 goto label2;

        $r1 = r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        if $r1 != null goto label1;

        i0 = 1;

        goto label2;

     label1:
        $r2 = r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        $i1 = lengthof $r2;

        i0 = $i1 + 1;

     label2:
        return i0;
    }

    public final org.apache.http.HttpHost getHopTarget(int)
    {
        org.apache.http.conn.routing.RouteTracker r0;
        int i0, i1, $i2;
        org.apache.http.HttpHost[] $r1;
        java.lang.IllegalArgumentException $r2, $r10;
        java.lang.StringBuilder $r3, $r4, $r5, $r6, $r7, $r8, $r11, $r12, $r14;
        java.lang.String $r9, $r13;
        org.apache.http.HttpHost r15;

        r0 := @this: org.apache.http.conn.routing.RouteTracker;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hop index must not be negative: ");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r10;

     label1:
        i1 = virtualinvoke r0.<org.apache.http.conn.routing.RouteTracker: int getHopCount()>();

        if i0 < i1 goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Hop index ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" exceeds tracked route length ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r2;

     label2:
        $i2 = i1 - 1;

        if i0 >= $i2 goto label3;

        $r1 = r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        r15 = $r1[i0];

        goto label4;

     label3:
        r15 = r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost targetHost>;

     label4:
        return r15;
    }

    public final org.apache.http.HttpHost getProxyHost()
    {
        org.apache.http.conn.routing.RouteTracker r0;
        org.apache.http.HttpHost[] $r1, $r2;
        org.apache.http.HttpHost $r3;

        r0 := @this: org.apache.http.conn.routing.RouteTracker;

        $r1 = r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        $r3 = $r2[0];

     label2:
        return $r3;
    }

    public final boolean isConnected()
    {
        org.apache.http.conn.routing.RouteTracker r0;
        boolean $z0;

        r0 := @this: org.apache.http.conn.routing.RouteTracker;

        $z0 = r0.<org.apache.http.conn.routing.RouteTracker: boolean connected>;

        return $z0;
    }

    public final org.apache.http.conn.routing.RouteInfo$TunnelType getTunnelType()
    {
        org.apache.http.conn.routing.RouteTracker r0;
        org.apache.http.conn.routing.RouteInfo$TunnelType $r1;

        r0 := @this: org.apache.http.conn.routing.RouteTracker;

        $r1 = r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo$TunnelType tunnelled>;

        return $r1;
    }

    public final boolean isTunnelled()
    {
        org.apache.http.conn.routing.RouteTracker r0;
        org.apache.http.conn.routing.RouteInfo$TunnelType $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.http.conn.routing.RouteTracker;

        $r2 = r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo$TunnelType tunnelled>;

        $r1 = <org.apache.http.conn.routing.RouteInfo$TunnelType: org.apache.http.conn.routing.RouteInfo$TunnelType TUNNELLED>;

        if $r2 != $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final org.apache.http.conn.routing.RouteInfo$LayerType getLayerType()
    {
        org.apache.http.conn.routing.RouteTracker r0;
        org.apache.http.conn.routing.RouteInfo$LayerType $r1;

        r0 := @this: org.apache.http.conn.routing.RouteTracker;

        $r1 = r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo$LayerType layered>;

        return $r1;
    }

    public final boolean isLayered()
    {
        org.apache.http.conn.routing.RouteTracker r0;
        org.apache.http.conn.routing.RouteInfo$LayerType $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.http.conn.routing.RouteTracker;

        $r2 = r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo$LayerType layered>;

        $r1 = <org.apache.http.conn.routing.RouteInfo$LayerType: org.apache.http.conn.routing.RouteInfo$LayerType LAYERED>;

        if $r2 != $r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean isSecure()
    {
        org.apache.http.conn.routing.RouteTracker r0;
        boolean $z0;

        r0 := @this: org.apache.http.conn.routing.RouteTracker;

        $z0 = r0.<org.apache.http.conn.routing.RouteTracker: boolean secure>;

        return $z0;
    }

    public final org.apache.http.conn.routing.HttpRoute toRoute()
    {
        org.apache.http.conn.routing.RouteTracker r0;
        boolean $z0, $z1;
        org.apache.http.conn.routing.HttpRoute $r1;
        org.apache.http.conn.routing.RouteInfo$LayerType $r2;
        org.apache.http.conn.routing.RouteInfo$TunnelType $r3;
        org.apache.http.HttpHost[] $r4;
        java.net.InetAddress $r5;
        org.apache.http.HttpHost $r6;

        r0 := @this: org.apache.http.conn.routing.RouteTracker;

        $z0 = r0.<org.apache.http.conn.routing.RouteTracker: boolean connected>;

        if $z0 != 0 goto label1;

        $r1 = null;

        goto label2;

     label1:
        $r1 = new org.apache.http.conn.routing.HttpRoute;

        $r6 = r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost targetHost>;

        $r5 = r0.<org.apache.http.conn.routing.RouteTracker: java.net.InetAddress localAddress>;

        $r4 = r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        $z1 = r0.<org.apache.http.conn.routing.RouteTracker: boolean secure>;

        $r3 = r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo$TunnelType tunnelled>;

        $r2 = r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo$LayerType layered>;

        specialinvoke $r1.<org.apache.http.conn.routing.HttpRoute: void <init>(org.apache.http.HttpHost,java.net.InetAddress,org.apache.http.HttpHost[],boolean,org.apache.http.conn.routing.RouteInfo$TunnelType,org.apache.http.conn.routing.RouteInfo$LayerType)>($r6, $r5, $r4, $z1, $r3, $r2);

     label2:
        return $r1;
    }

    public final boolean equals(java.lang.Object)
    {
        org.apache.http.conn.routing.RouteTracker r0, r2;
        java.lang.Object r1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, z10, z11, z12;
        int i0, $i1, $i2, $i3;
        org.apache.http.HttpHost $r3, $r4, $r13, $r14;
        java.net.InetAddress $r5, $r6, $r23, $r24, $r25;
        org.apache.http.HttpHost[] $r7, $r8, $r9, $r10, $r11, $r12, $r19, $r20, $r21, $r22;
        org.apache.http.conn.routing.RouteInfo$TunnelType $r15, $r17;
        org.apache.http.conn.routing.RouteInfo$LayerType $r16, $r18;

        r0 := @this: org.apache.http.conn.routing.RouteTracker;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label01;

        return 1;

     label01:
        $z1 = r1 instanceof org.apache.http.conn.routing.RouteTracker;

        if $z1 != 0 goto label02;

        return 0;

     label02:
        r2 = (org.apache.http.conn.routing.RouteTracker) r1;

        $r4 = r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost targetHost>;

        $r3 = r2.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost targetHost>;

        z0 = virtualinvoke $r4.<org.apache.http.HttpHost: boolean equals(java.lang.Object)>($r3);

        $r6 = r0.<org.apache.http.conn.routing.RouteTracker: java.net.InetAddress localAddress>;

        $r5 = r2.<org.apache.http.conn.routing.RouteTracker: java.net.InetAddress localAddress>;

        if $r6 == $r5 goto label03;

        $r24 = r0.<org.apache.http.conn.routing.RouteTracker: java.net.InetAddress localAddress>;

        if $r24 == null goto label04;

        $r25 = r0.<org.apache.http.conn.routing.RouteTracker: java.net.InetAddress localAddress>;

        $r23 = r2.<org.apache.http.conn.routing.RouteTracker: java.net.InetAddress localAddress>;

        $z9 = virtualinvoke $r25.<java.net.InetAddress: boolean equals(java.lang.Object)>($r23);

        if $z9 == 0 goto label04;

     label03:
        $z8 = 1;

        goto label05;

     label04:
        $z8 = 0;

     label05:
        z10 = z0 & $z8;

        $r8 = r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        $r7 = r2.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        if $r8 == $r7 goto label06;

        $r19 = r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        if $r19 == null goto label07;

        $r21 = r2.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        if $r21 == null goto label07;

        $r22 = r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        $i3 = lengthof $r22;

        $r20 = r2.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        $i2 = lengthof $r20;

        if $i3 != $i2 goto label07;

     label06:
        $z7 = 1;

        goto label08;

     label07:
        $z7 = 0;

     label08:
        z11 = z10 & $z7;

        $z3 = r0.<org.apache.http.conn.routing.RouteTracker: boolean connected>;

        $z2 = r2.<org.apache.http.conn.routing.RouteTracker: boolean connected>;

        if $z3 != $z2 goto label09;

        $z5 = r0.<org.apache.http.conn.routing.RouteTracker: boolean secure>;

        $z4 = r2.<org.apache.http.conn.routing.RouteTracker: boolean secure>;

        if $z5 != $z4 goto label09;

        $r17 = r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo$TunnelType tunnelled>;

        $r15 = r2.<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo$TunnelType tunnelled>;

        if $r17 != $r15 goto label09;

        $r18 = r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo$LayerType layered>;

        $r16 = r2.<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo$LayerType layered>;

        if $r18 != $r16 goto label09;

        $z6 = 1;

        goto label10;

     label09:
        $z6 = 0;

     label10:
        z12 = z11 & $z6;

        if z12 == 0 goto label12;

        $r9 = r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        if $r9 == null goto label12;

        i0 = 0;

     label11:
        if z12 == 0 goto label12;

        $r10 = r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        $i1 = lengthof $r10;

        if i0 >= $i1 goto label12;

        $r12 = r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        $r13 = $r12[i0];

        $r11 = r2.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        $r14 = $r11[i0];

        z12 = virtualinvoke $r13.<org.apache.http.HttpHost: boolean equals(java.lang.Object)>($r14);

        i0 = i0 + 1;

        goto label11;

     label12:
        return z12;
    }

    public final int hashCode()
    {
        org.apache.http.conn.routing.RouteTracker r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9;
        org.apache.http.HttpHost $r1, $r9;
        java.net.InetAddress $r2, $r10;
        org.apache.http.HttpHost[] $r3, $r6, $r7, $r8;
        boolean $z0, $z1;
        org.apache.http.conn.routing.RouteInfo$TunnelType $r4;
        org.apache.http.conn.routing.RouteInfo$LayerType $r5;

        r0 := @this: org.apache.http.conn.routing.RouteTracker;

        $r1 = r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost targetHost>;

        i0 = virtualinvoke $r1.<org.apache.http.HttpHost: int hashCode()>();

        $r2 = r0.<org.apache.http.conn.routing.RouteTracker: java.net.InetAddress localAddress>;

        if $r2 == null goto label1;

        $r10 = r0.<org.apache.http.conn.routing.RouteTracker: java.net.InetAddress localAddress>;

        $i7 = virtualinvoke $r10.<java.net.InetAddress: int hashCode()>();

        i0 = i0 ^ $i7;

     label1:
        $r3 = r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        if $r3 == null goto label3;

        $r6 = r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        $i4 = lengthof $r6;

        i0 = i0 ^ $i4;

        i1 = 0;

     label2:
        $r7 = r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        $i5 = lengthof $r7;

        if i1 >= $i5 goto label3;

        $r8 = r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        $r9 = $r8[i1];

        $i6 = virtualinvoke $r9.<org.apache.http.HttpHost: int hashCode()>();

        i0 = i0 ^ $i6;

        i1 = i1 + 1;

        goto label2;

     label3:
        $z0 = r0.<org.apache.http.conn.routing.RouteTracker: boolean connected>;

        if $z0 == 0 goto label4;

        i0 = i0 ^ 286331153;

     label4:
        $z1 = r0.<org.apache.http.conn.routing.RouteTracker: boolean secure>;

        if $z1 == 0 goto label5;

        i0 = i0 ^ 572662306;

     label5:
        $r4 = r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo$TunnelType tunnelled>;

        $i2 = virtualinvoke $r4.<org.apache.http.conn.routing.RouteInfo$TunnelType: int hashCode()>();

        i8 = i0 ^ $i2;

        $r5 = r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo$LayerType layered>;

        $i3 = virtualinvoke $r5.<org.apache.http.conn.routing.RouteInfo$LayerType: int hashCode()>();

        i9 = i8 ^ $i3;

        return i9;
    }

    public final java.lang.String toString()
    {
        org.apache.http.conn.routing.RouteTracker r0;
        java.lang.StringBuilder r1, $r2;
        int i0, $i1, $i2, $i3, $i4;
        java.net.InetAddress $r4, $r27;
        boolean $z0, $z1;
        org.apache.http.conn.routing.RouteInfo$TunnelType $r6, $r7;
        org.apache.http.conn.routing.RouteInfo$LayerType $r8, $r9;
        org.apache.http.HttpHost $r11, $r19;
        org.apache.http.HttpHost[] $r12, $r15, $r17;
        java.lang.String $r16;

        r0 := @this: org.apache.http.conn.routing.RouteTracker;

        $r2 = new java.lang.StringBuilder;

        $i1 = virtualinvoke r0.<org.apache.http.conn.routing.RouteTracker: int getHopCount()>();

        $i2 = $i1 * 30;

        $i3 = 50 + $i2;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i3);

        r1 = $r2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RouteTracker[");

        $r4 = r0.<org.apache.http.conn.routing.RouteTracker: java.net.InetAddress localAddress>;

        if $r4 == null goto label1;

        $r27 = r0.<org.apache.http.conn.routing.RouteTracker: java.net.InetAddress localAddress>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r27);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("->");

     label1:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(123);

        $z0 = r0.<org.apache.http.conn.routing.RouteTracker: boolean connected>;

        if $z0 == 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(99);

     label2:
        $r7 = r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo$TunnelType tunnelled>;

        $r6 = <org.apache.http.conn.routing.RouteInfo$TunnelType: org.apache.http.conn.routing.RouteInfo$TunnelType TUNNELLED>;

        if $r7 != $r6 goto label3;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(116);

     label3:
        $r9 = r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.conn.routing.RouteInfo$LayerType layered>;

        $r8 = <org.apache.http.conn.routing.RouteInfo$LayerType: org.apache.http.conn.routing.RouteInfo$LayerType LAYERED>;

        if $r9 != $r8 goto label4;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(108);

     label4:
        $z1 = r0.<org.apache.http.conn.routing.RouteTracker: boolean secure>;

        if $z1 == 0 goto label5;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(115);

     label5:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}->");

        $r12 = r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        if $r12 == null goto label7;

        i0 = 0;

     label6:
        $r15 = r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        $i4 = lengthof $r15;

        if i0 >= $i4 goto label7;

        $r17 = r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost[] proxyChain>;

        $r19 = $r17[i0];

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("->");

        i0 = i0 + 1;

        goto label6;

     label7:
        $r11 = r0.<org.apache.http.conn.routing.RouteTracker: org.apache.http.HttpHost targetHost>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r16 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r16;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.http.conn.routing.RouteTracker r0;
        java.lang.Object $r1;

        r0 := @this: org.apache.http.conn.routing.RouteTracker;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        return $r1;
    }
}
