public class org.apache.http.impl.conn.tsccm.ConnPoolByRoute extends org.apache.http.impl.conn.tsccm.AbstractConnPool
{
    private final org.apache.commons.logging.Log log;
    protected final org.apache.http.conn.ClientConnectionOperator operator;
    protected java.util.Queue freeConnections;
    protected java.util.Queue waitingThreads;
    protected final java.util.Map routeToPool;
    protected final int maxTotalConnections;
    private final org.apache.http.conn.params.ConnPerRoute connPerRoute;

    public void <init>(org.apache.http.conn.ClientConnectionOperator, org.apache.http.params.HttpParams)
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        org.apache.http.conn.ClientConnectionOperator r1;
        org.apache.http.params.HttpParams r2;
        java.lang.Class $r3;
        org.apache.commons.logging.Log $r4;
        java.util.Queue $r5, $r6;
        java.util.Map $r7;
        int $i0;
        org.apache.http.conn.params.ConnPerRoute $r8;
        java.lang.IllegalArgumentException $r9;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        r1 := @parameter0: org.apache.http.conn.ClientConnectionOperator;

        r2 := @parameter1: org.apache.http.params.HttpParams;

        specialinvoke r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: void <init>()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r3);

        r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log> = $r4;

        if r1 != null goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Connection operator may not be null");

        throw $r9;

     label1:
        r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.conn.ClientConnectionOperator operator> = r1;

        $r5 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue createFreeConnQueue()>();

        r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue freeConnections> = $r5;

        $r6 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue createWaitingThreadQueue()>();

        r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue waitingThreads> = $r6;

        $r7 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Map createRouteToPoolMap()>();

        r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Map routeToPool> = $r7;

        $i0 = staticinvoke <org.apache.http.conn.params.ConnManagerParams: int getMaxTotalConnections(org.apache.http.params.HttpParams)>(r2);

        r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int maxTotalConnections> = $i0;

        $r8 = staticinvoke <org.apache.http.conn.params.ConnManagerParams: org.apache.http.conn.params.ConnPerRoute getMaxConnectionsPerRoute(org.apache.http.params.HttpParams)>(r2);

        r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.conn.params.ConnPerRoute connPerRoute> = $r8;

        return;
    }

    protected java.util.Queue createFreeConnQueue()
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        java.util.LinkedList $r1;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        return $r1;
    }

    protected java.util.Queue createWaitingThreadQueue()
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        java.util.LinkedList $r1;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        return $r1;
    }

    protected java.util.Map createRouteToPoolMap()
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        java.util.HashMap $r1;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        return $r1;
    }

    protected org.apache.http.impl.conn.tsccm.RouteSpecificPool newRouteSpecificPool(org.apache.http.conn.routing.HttpRoute)
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        org.apache.http.conn.routing.HttpRoute r1;
        org.apache.http.impl.conn.tsccm.RouteSpecificPool $r2;
        org.apache.http.conn.params.ConnPerRoute $r3;
        int $i0;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        r1 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        $r2 = new org.apache.http.impl.conn.tsccm.RouteSpecificPool;

        $r3 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.conn.params.ConnPerRoute connPerRoute>;

        $i0 = interfaceinvoke $r3.<org.apache.http.conn.params.ConnPerRoute: int getMaxForRoute(org.apache.http.conn.routing.HttpRoute)>(r1);

        specialinvoke $r2.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: void <init>(org.apache.http.conn.routing.HttpRoute,int)>(r1, $i0);

        return $r2;
    }

    protected org.apache.http.impl.conn.tsccm.WaitingThread newWaitingThread(java.util.concurrent.locks.Condition, org.apache.http.impl.conn.tsccm.RouteSpecificPool)
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        java.util.concurrent.locks.Condition r1;
        org.apache.http.impl.conn.tsccm.RouteSpecificPool r2;
        org.apache.http.impl.conn.tsccm.WaitingThread $r3;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        r1 := @parameter0: java.util.concurrent.locks.Condition;

        r2 := @parameter1: org.apache.http.impl.conn.tsccm.RouteSpecificPool;

        $r3 = new org.apache.http.impl.conn.tsccm.WaitingThread;

        specialinvoke $r3.<org.apache.http.impl.conn.tsccm.WaitingThread: void <init>(java.util.concurrent.locks.Condition,org.apache.http.impl.conn.tsccm.RouteSpecificPool)>(r1, r2);

        return $r3;
    }

    protected org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.routing.HttpRoute, boolean)
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        org.apache.http.conn.routing.HttpRoute r1;
        boolean z0;
        java.lang.Throwable r2, $r8;
        java.util.concurrent.locks.Lock $r3, $r6, $r9;
        java.util.Map $r4, $r7;
        java.lang.Object $r5;
        org.apache.http.impl.conn.tsccm.RouteSpecificPool r10;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        r1 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        z0 := @parameter1: boolean;

        $r3 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r3.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        $r4 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Map routeToPool>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r10 = (org.apache.http.impl.conn.tsccm.RouteSpecificPool) $r5;

        if r10 != null goto label2;

        if z0 == 0 goto label2;

        r10 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.RouteSpecificPool newRouteSpecificPool(org.apache.http.conn.routing.HttpRoute)>(r1);

        $r7 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Map routeToPool>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r10);

     label2:
        $r6 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r6.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label5;

     label3:
        $r8 := @caughtexception;

        r2 = $r8;

     label4:
        $r9 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r9.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r2;

     label5:
        return r10;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public int getConnectionsInPool(org.apache.http.conn.routing.HttpRoute)
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        org.apache.http.conn.routing.HttpRoute r1;
        org.apache.http.impl.conn.tsccm.RouteSpecificPool r2;
        int i0, $i1;
        java.lang.Throwable r3, $r6;
        java.util.concurrent.locks.Lock $r4, $r5, $r7;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        r1 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        $r4 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r4.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        r2 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.routing.HttpRoute,boolean)>(r1, 0);

        if r2 == null goto label2;

        $i1 = virtualinvoke r2.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getEntryCount()>();

        goto label3;

     label2:
        $i1 = 0;

     label3:
        i0 = $i1;

     label4:
        $r5 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r5.<java.util.concurrent.locks.Lock: void unlock()>();

        return i0;

     label5:
        $r6 := @caughtexception;

        r3 = $r6;

     label6:
        $r7 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r7.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r3;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public org.apache.http.impl.conn.tsccm.PoolEntryRequest requestPoolEntry(org.apache.http.conn.routing.HttpRoute, java.lang.Object)
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        org.apache.http.conn.routing.HttpRoute r1;
        java.lang.Object r2;
        org.apache.http.impl.conn.tsccm.WaitingThreadAborter r3, $r4;
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute$1 $r5;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        r1 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        r2 := @parameter1: java.lang.Object;

        $r4 = new org.apache.http.impl.conn.tsccm.WaitingThreadAborter;

        specialinvoke $r4.<org.apache.http.impl.conn.tsccm.WaitingThreadAborter: void <init>()>();

        r3 = $r4;

        $r5 = new org.apache.http.impl.conn.tsccm.ConnPoolByRoute$1;

        specialinvoke $r5.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute$1: void <init>(org.apache.http.impl.conn.tsccm.ConnPoolByRoute,org.apache.http.impl.conn.tsccm.WaitingThreadAborter,org.apache.http.conn.routing.HttpRoute,java.lang.Object)>(r0, r3, r1, r2);

        return $r5;
    }

    protected org.apache.http.impl.conn.tsccm.BasicPoolEntry getEntryBlocking(org.apache.http.conn.routing.HttpRoute, java.lang.Object, long, java.util.concurrent.TimeUnit, org.apache.http.impl.conn.tsccm.WaitingThreadAborter) throws org.apache.http.conn.ConnectionPoolTimeoutException, java.lang.InterruptedException
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        org.apache.http.conn.routing.HttpRoute r1;
        java.lang.Object r2;
        long l0, $l3, $l5, $l14, $l15, $l16;
        java.util.concurrent.TimeUnit r3;
        org.apache.http.impl.conn.tsccm.WaitingThreadAborter r4;
        java.util.Date r5, $r61;
        org.apache.http.impl.conn.tsccm.BasicPoolEntry r6;
        org.apache.http.impl.conn.tsccm.RouteSpecificPool r7;
        org.apache.http.impl.conn.tsccm.WaitingThread r8;
        boolean z0, $z2, $z3, $z4, $z5, $z8, $z9, z11;
        java.lang.Throwable r9, r10, $r67, $r68;
        byte $b1, $b4;
        java.util.concurrent.locks.Lock $r11, $r12, $r20, $r66;
        org.apache.commons.logging.Log $r13, $r14, $r15, $r24, $r33, $r48, $r49, $r55;
        int $i2, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        java.util.Queue $r16, $r17, $r30, $r51, $r65;
        java.util.concurrent.locks.Condition $r18;
        org.apache.http.conn.ConnectionPoolTimeoutException $r19;
        java.lang.StringBuilder $r21, $r22, $r23, $r25, $r27, $r28, $r32, $r34, $r35, $r36, $r37, $r38, $r40, $r41, $r42, $r43, $r44, $r45, $r47, $r50, $r52, $r54, $r57, $r58, $r60, $r63, $r64;
        java.lang.String $r26, $r39, $r46, $r53, $r59;
        org.apache.http.conn.ClientConnectionOperator $r29, $r31;
        java.util.Set $r56;
        java.lang.IllegalStateException $r62;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        r1 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        r2 := @parameter1: java.lang.Object;

        l0 := @parameter2: long;

        r3 := @parameter3: java.util.concurrent.TimeUnit;

        r4 := @parameter4: org.apache.http.impl.conn.tsccm.WaitingThreadAborter;

        r5 = null;

        $b1 = l0 cmp 0L;

        if $b1 <= 0 goto label01;

        $r61 = new java.util.Date;

        $l15 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l16 = virtualinvoke r3.<java.util.concurrent.TimeUnit: long toMillis(long)>(l0);

        $l14 = $l15 + $l16;

        specialinvoke $r61.<java.util.Date: void <init>(long)>($l14);

        r5 = $r61;

     label01:
        r6 = null;

        $r11 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r11.<java.util.concurrent.locks.Lock: void lock()>();

     label02:
        r7 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.routing.HttpRoute,boolean)>(r1, 1);

        r8 = null;

     label03:
        if r6 != null goto label19;

        $z2 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: boolean isShutDown>;

        if $z2 == 0 goto label04;

        $r62 = new java.lang.IllegalStateException;

        specialinvoke $r62.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Connection pool shut down.");

        throw $r62;

     label04:
        $r13 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z3 = interfaceinvoke $r13.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z3 == 0 goto label05;

        $r49 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Total connections kept alive: ");

        $r51 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue freeConnections>;

        $i10 = interfaceinvoke $r51.<java.util.Queue: int size()>();

        $r45 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r49.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r46);

        $r48 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Total issued connections: ");

        $r56 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Set issuedConnections>;

        $i11 = interfaceinvoke $r56.<java.util.Set: int size()>();

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r53 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r48.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r53);

        $r55 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Total allocated connection: ");

        $i12 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int numConnections>;

        $r63 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" out of ");

        $i13 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int maxTotalConnections>;

        $r60 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i13);

        $r59 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r55.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r59);

     label05:
        r6 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.BasicPoolEntry getFreeEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,java.lang.Object)>(r7, r2);

        if r6 == null goto label06;

        goto label19;

     label06:
        $i2 = virtualinvoke r7.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getCapacity()>();

        if $i2 <= 0 goto label07;

        $z9 = 1;

        goto label08;

     label07:
        $z9 = 0;

     label08:
        z0 = $z9;

        $r14 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z4 = interfaceinvoke $r14.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z4 == 0 goto label09;

        $r33 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Available capacity: ");

        $i8 = virtualinvoke r7.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getCapacity()>();

        $r37 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" out of ");

        $i9 = virtualinvoke r7.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: int getMaxEntries()>();

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r41 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r38 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r33.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r39);

     label09:
        if z0 == 0 goto label10;

        $i6 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int numConnections>;

        $i7 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int maxTotalConnections>;

        if $i6 >= $i7 goto label10;

        $r31 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.conn.ClientConnectionOperator operator>;

        r6 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.BasicPoolEntry createEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,org.apache.http.conn.ClientConnectionOperator)>(r7, $r31);

        goto label18;

     label10:
        if z0 == 0 goto label11;

        $r30 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue freeConnections>;

        $z8 = interfaceinvoke $r30.<java.util.Queue: boolean isEmpty()>();

        if $z8 != 0 goto label11;

        virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void deleteLeastUsedEntry()>();

        $r29 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.conn.ClientConnectionOperator operator>;

        r6 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.BasicPoolEntry createEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool,org.apache.http.conn.ClientConnectionOperator)>(r7, $r29);

        goto label18;

     label11:
        $r15 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z5 = interfaceinvoke $r15.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z5 == 0 goto label12;

        $r24 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Need to wait for connection [");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r27 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r25 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r24.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r26);

     label12:
        if r8 != null goto label13;

        $r20 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        $r18 = interfaceinvoke $r20.<java.util.concurrent.locks.Lock: java.util.concurrent.locks.Condition newCondition()>();

        r8 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.WaitingThread newWaitingThread(java.util.concurrent.locks.Condition,org.apache.http.impl.conn.tsccm.RouteSpecificPool)>($r18, r7);

        virtualinvoke r4.<org.apache.http.impl.conn.tsccm.WaitingThreadAborter: void setWaitingThread(org.apache.http.impl.conn.tsccm.WaitingThread)>(r8);

     label13:
        virtualinvoke r7.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: void queueThread(org.apache.http.impl.conn.tsccm.WaitingThread)>(r8);

        $r16 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue waitingThreads>;

        interfaceinvoke $r16.<java.util.Queue: boolean add(java.lang.Object)>(r8);

        z11 = virtualinvoke r8.<org.apache.http.impl.conn.tsccm.WaitingThread: boolean await(java.util.Date)>(r5);

     label14:
        virtualinvoke r7.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: void removeThread(org.apache.http.impl.conn.tsccm.WaitingThread)>(r8);

        $r17 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue waitingThreads>;

        interfaceinvoke $r17.<java.util.Queue: boolean remove(java.lang.Object)>(r8);

        goto label17;

     label15:
        $r67 := @caughtexception;

        r9 = $r67;

     label16:
        virtualinvoke r7.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: void removeThread(org.apache.http.impl.conn.tsccm.WaitingThread)>(r8);

        $r65 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue waitingThreads>;

        interfaceinvoke $r65.<java.util.Queue: boolean remove(java.lang.Object)>(r8);

        throw r9;

     label17:
        if z11 != 0 goto label18;

        if r5 == null goto label18;

        $l5 = virtualinvoke r5.<java.util.Date: long getTime()>();

        $l3 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $b4 = $l5 cmp $l3;

        if $b4 > 0 goto label18;

        $r19 = new org.apache.http.conn.ConnectionPoolTimeoutException;

        specialinvoke $r19.<org.apache.http.conn.ConnectionPoolTimeoutException: void <init>(java.lang.String)>("Timeout waiting for connection");

        throw $r19;

     label18:
        goto label03;

     label19:
        $r12 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r12.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label22;

     label20:
        $r68 := @caughtexception;

        r10 = $r68;

     label21:
        $r66 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r66.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r10;

     label22:
        return r6;

        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
        catch java.lang.Throwable from label02 to label19 with label20;
        catch java.lang.Throwable from label20 to label21 with label20;
    }

    public void freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry, boolean, long, java.util.concurrent.TimeUnit)
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        org.apache.http.impl.conn.tsccm.BasicPoolEntry r1;
        boolean z0, $z1, $z2;
        long l0;
        java.util.concurrent.TimeUnit r2;
        org.apache.http.conn.routing.HttpRoute r3;
        org.apache.http.impl.conn.tsccm.RouteSpecificPool r4;
        java.lang.Throwable r5, $r25;
        org.apache.commons.logging.Log $r6, $r18;
        java.util.concurrent.locks.Lock $r7, $r11, $r16, $r26;
        java.util.Set $r8;
        org.apache.http.impl.conn.tsccm.BasicPoolEntryRef $r9;
        int $i1, $i2;
        java.util.Queue $r10;
        org.apache.http.impl.conn.IdleConnectionHandler $r12;
        org.apache.http.conn.OperatedClientConnection $r13, $r14;
        java.lang.StringBuilder $r15, $r17, $r19, $r20, $r21, $r24;
        java.lang.String $r22;
        java.lang.Object $r23;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        r1 := @parameter0: org.apache.http.impl.conn.tsccm.BasicPoolEntry;

        z0 := @parameter1: boolean;

        l0 := @parameter2: long;

        r2 := @parameter3: java.util.concurrent.TimeUnit;

        r3 = virtualinvoke r1.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.routing.HttpRoute getPlannedRoute()>();

        $r6 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z1 = interfaceinvoke $r6.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z1 == 0 goto label01;

        $r18 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Freeing connection [");

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

        $r23 = virtualinvoke r1.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: java.lang.Object getState()>();

        $r24 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        $r21 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r18.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r22);

     label01:
        $r7 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r7.<java.util.concurrent.locks.Lock: void lock()>();

     label02:
        $z2 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: boolean isShutDown>;

        if $z2 == 0 goto label04;

        $r13 = virtualinvoke r1.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.OperatedClientConnection getConnection()>();

        virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void closeConnection(org.apache.http.conn.OperatedClientConnection)>($r13);

     label03:
        $r16 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r16.<java.util.concurrent.locks.Lock: void unlock()>();

        return;

     label04:
        $r8 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Set issuedConnections>;

        $r9 = virtualinvoke r1.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.impl.conn.tsccm.BasicPoolEntryRef getWeakRef()>();

        interfaceinvoke $r8.<java.util.Set: boolean remove(java.lang.Object)>($r9);

        r4 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.routing.HttpRoute,boolean)>(r3, 1);

        if z0 == 0 goto label05;

        virtualinvoke r4.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: void freeEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry)>(r1);

        $r10 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue freeConnections>;

        interfaceinvoke $r10.<java.util.Queue: boolean add(java.lang.Object)>(r1);

        $r12 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.IdleConnectionHandler idleConnHandler>;

        $r14 = virtualinvoke r1.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.OperatedClientConnection getConnection()>();

        virtualinvoke $r12.<org.apache.http.impl.conn.IdleConnectionHandler: void add(org.apache.http.HttpConnection,long,java.util.concurrent.TimeUnit)>($r14, l0, r2);

        goto label06;

     label05:
        virtualinvoke r4.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: void dropEntry()>();

        $i2 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int numConnections>;

        $i1 = $i2 - 1;

        r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int numConnections> = $i1;

     label06:
        virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void notifyWaitingThread(org.apache.http.impl.conn.tsccm.RouteSpecificPool)>(r4);

     label07:
        $r11 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r11.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label10;

     label08:
        $r25 := @caughtexception;

        r5 = $r25;

     label09:
        $r26 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r26.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r5;

     label10:
        return;

        catch java.lang.Throwable from label02 to label03 with label08;
        catch java.lang.Throwable from label04 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    protected org.apache.http.impl.conn.tsccm.BasicPoolEntry getFreeEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool, java.lang.Object)
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        org.apache.http.impl.conn.tsccm.RouteSpecificPool r1;
        java.lang.Object r2;
        org.apache.http.impl.conn.tsccm.BasicPoolEntry r3;
        boolean z0, z1, $z2, $z3, $z6;
        java.lang.Throwable r4, $r42;
        java.util.concurrent.locks.Lock $r5, $r6, $r41;
        org.apache.commons.logging.Log $r7, $r9, $r16, $r23, $r28, $r33;
        java.lang.StringBuilder $r8, $r10, $r12, $r13, $r14, $r15, $r25, $r27, $r29, $r30, $r31, $r32, $r34, $r36, $r37, $r38, $r39, $r44;
        org.apache.http.conn.routing.HttpRoute $r11, $r26, $r40;
        java.lang.String $r17, $r35, $r43;
        java.util.Queue $r18;
        org.apache.http.impl.conn.IdleConnectionHandler $r19;
        org.apache.http.conn.OperatedClientConnection $r20, $r24;
        org.apache.http.impl.conn.tsccm.BasicPoolEntryRef $r21;
        java.util.Set $r22;
        int $i0, $i1;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        r1 := @parameter0: org.apache.http.impl.conn.tsccm.RouteSpecificPool;

        r2 := @parameter1: java.lang.Object;

        r3 = null;

        $r5 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r5.<java.util.concurrent.locks.Lock: void lock()>();

     label01:
        z0 = 0;

     label02:
        if z0 != 0 goto label08;

        r3 = virtualinvoke r1.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.impl.conn.tsccm.BasicPoolEntry allocEntry(java.lang.Object)>(r2);

        if r3 == null goto label07;

        $r16 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z3 = interfaceinvoke $r16.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z3 == 0 goto label03;

        $r33 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Getting free connection [");

        $r40 = virtualinvoke r1.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.conn.routing.HttpRoute getRoute()>();

        $r39 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r40);

        $r38 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r44 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r43 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r33.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r43);

     label03:
        $r18 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue freeConnections>;

        interfaceinvoke $r18.<java.util.Queue: boolean remove(java.lang.Object)>(r3);

        $r19 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.IdleConnectionHandler idleConnHandler>;

        $r20 = virtualinvoke r3.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.OperatedClientConnection getConnection()>();

        z1 = virtualinvoke $r19.<org.apache.http.impl.conn.IdleConnectionHandler: boolean remove(org.apache.http.HttpConnection)>($r20);

        if z1 != 0 goto label05;

        $r23 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z6 = interfaceinvoke $r23.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z6 == 0 goto label04;

        $r28 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Closing expired free connection [");

        $r26 = virtualinvoke r1.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.conn.routing.HttpRoute getRoute()>();

        $r31 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

        $r29 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r35 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r28.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r35);

     label04:
        $r24 = virtualinvoke r3.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.OperatedClientConnection getConnection()>();

        virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void closeConnection(org.apache.http.conn.OperatedClientConnection)>($r24);

        virtualinvoke r1.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: void dropEntry()>();

        $i0 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int numConnections>;

        $i1 = $i0 - 1;

        r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int numConnections> = $i1;

        goto label06;

     label05:
        $r22 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Set issuedConnections>;

        $r21 = virtualinvoke r3.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.impl.conn.tsccm.BasicPoolEntryRef getWeakRef()>();

        interfaceinvoke $r22.<java.util.Set: boolean add(java.lang.Object)>($r21);

        z0 = 1;

     label06:
        goto label02;

     label07:
        z0 = 1;

        $r7 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z2 = interfaceinvoke $r7.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z2 == 0 goto label02;

        $r9 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No free connections [");

        $r11 = virtualinvoke r1.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.conn.routing.HttpRoute getRoute()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r17);

        goto label02;

     label08:
        $r6 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r6.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label11;

     label09:
        $r42 := @caughtexception;

        r4 = $r42;

     label10:
        $r41 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r41.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r4;

     label11:
        return r3;

        catch java.lang.Throwable from label01 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    protected org.apache.http.impl.conn.tsccm.BasicPoolEntry createEntry(org.apache.http.impl.conn.tsccm.RouteSpecificPool, org.apache.http.conn.ClientConnectionOperator)
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        org.apache.http.impl.conn.tsccm.RouteSpecificPool r1;
        org.apache.http.conn.ClientConnectionOperator r2;
        org.apache.http.impl.conn.tsccm.BasicPoolEntry r3, $r6;
        java.lang.Throwable r4, $r21;
        org.apache.commons.logging.Log $r5, $r15;
        boolean $z0;
        org.apache.http.conn.routing.HttpRoute $r7, $r17;
        java.lang.ref.ReferenceQueue $r8;
        java.util.concurrent.locks.Lock $r9, $r13, $r20;
        int $i0, $i1;
        java.util.Set $r10;
        org.apache.http.impl.conn.tsccm.BasicPoolEntryRef $r11;
        java.lang.StringBuilder $r12, $r14, $r16, $r19;
        java.lang.String $r18;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        r1 := @parameter0: org.apache.http.impl.conn.tsccm.RouteSpecificPool;

        r2 := @parameter1: org.apache.http.conn.ClientConnectionOperator;

        $r5 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r5.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r15 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Creating new connection [");

        $r17 = virtualinvoke r1.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.conn.routing.HttpRoute getRoute()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r15.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r18);

     label1:
        $r6 = new org.apache.http.impl.conn.tsccm.BasicPoolEntry;

        $r7 = virtualinvoke r1.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.conn.routing.HttpRoute getRoute()>();

        $r8 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.lang.ref.ReferenceQueue refQueue>;

        specialinvoke $r6.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: void <init>(org.apache.http.conn.ClientConnectionOperator,org.apache.http.conn.routing.HttpRoute,java.lang.ref.ReferenceQueue)>(r2, $r7, $r8);

        r3 = $r6;

        $r9 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r9.<java.util.concurrent.locks.Lock: void lock()>();

     label2:
        virtualinvoke r1.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: void createdEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry)>(r3);

        $i0 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int numConnections>;

        $i1 = $i0 + 1;

        r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int numConnections> = $i1;

        $r10 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Set issuedConnections>;

        $r11 = virtualinvoke r3.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.impl.conn.tsccm.BasicPoolEntryRef getWeakRef()>();

        interfaceinvoke $r10.<java.util.Set: boolean add(java.lang.Object)>($r11);

     label3:
        $r13 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r13.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label6;

     label4:
        $r21 := @caughtexception;

        r4 = $r21;

     label5:
        $r20 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r20.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r4;

     label6:
        return r3;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    protected void deleteEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry)
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        org.apache.http.impl.conn.tsccm.BasicPoolEntry r1;
        org.apache.http.conn.routing.HttpRoute r2;
        org.apache.http.impl.conn.tsccm.RouteSpecificPool r3;
        java.lang.Throwable r4, $r23;
        org.apache.commons.logging.Log $r5, $r15;
        boolean $z0, $z2;
        java.util.concurrent.locks.Lock $r6, $r11, $r22;
        org.apache.http.conn.OperatedClientConnection $r7, $r9;
        int $i0, $i1;
        org.apache.http.impl.conn.IdleConnectionHandler $r8;
        java.util.Map $r10;
        java.lang.StringBuilder $r12, $r14, $r16, $r17, $r18, $r21;
        java.lang.Object $r19;
        java.lang.String $r20;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        r1 := @parameter0: org.apache.http.impl.conn.tsccm.BasicPoolEntry;

        r2 = virtualinvoke r1.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.routing.HttpRoute getPlannedRoute()>();

        $r5 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r5.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r15 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deleting connection [");

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("][");

        $r19 = virtualinvoke r1.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: java.lang.Object getState()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r15.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r20);

     label1:
        $r6 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r6.<java.util.concurrent.locks.Lock: void lock()>();

     label2:
        $r7 = virtualinvoke r1.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.OperatedClientConnection getConnection()>();

        virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void closeConnection(org.apache.http.conn.OperatedClientConnection)>($r7);

        r3 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.routing.HttpRoute,boolean)>(r2, 1);

        virtualinvoke r3.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: boolean deleteEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry)>(r1);

        $i0 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int numConnections>;

        $i1 = $i0 - 1;

        r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int numConnections> = $i1;

        $z2 = virtualinvoke r3.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: boolean isUnused()>();

        if $z2 == 0 goto label3;

        $r10 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Map routeToPool>;

        interfaceinvoke $r10.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2);

     label3:
        $r8 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.IdleConnectionHandler idleConnHandler>;

        $r9 = virtualinvoke r1.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.OperatedClientConnection getConnection()>();

        virtualinvoke $r8.<org.apache.http.impl.conn.IdleConnectionHandler: boolean remove(org.apache.http.HttpConnection)>($r9);

     label4:
        $r11 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r11.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label7;

     label5:
        $r23 := @caughtexception;

        r4 = $r23;

     label6:
        $r22 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r22.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r4;

     label7:
        return;

        catch java.lang.Throwable from label2 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    protected void deleteLeastUsedEntry()
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        org.apache.http.impl.conn.tsccm.BasicPoolEntry r1;
        java.lang.Throwable r2, $r9;
        java.util.concurrent.locks.Lock $r3, $r7, $r10;
        java.util.Queue $r4;
        java.lang.Object $r5;
        org.apache.commons.logging.Log $r6, $r8;
        boolean $z0;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

     label1:
        $r3 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r3.<java.util.concurrent.locks.Lock: void lock()>();

        $r4 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue freeConnections>;

        $r5 = interfaceinvoke $r4.<java.util.Queue: java.lang.Object remove()>();

        r1 = (org.apache.http.impl.conn.tsccm.BasicPoolEntry) $r5;

        if r1 == null goto label2;

        virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void deleteEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry)>(r1);

        goto label3;

     label2:
        $r6 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z0 = interfaceinvoke $r6.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label3;

        $r8 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        interfaceinvoke $r8.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("No free connection to delete.");

     label3:
        $r7 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r7.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label6;

     label4:
        $r9 := @caughtexception;

        r2 = $r9;

     label5:
        $r10 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r10.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    protected void handleLostEntry(org.apache.http.conn.routing.HttpRoute)
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        org.apache.http.conn.routing.HttpRoute r1;
        org.apache.http.impl.conn.tsccm.RouteSpecificPool r2;
        java.lang.Throwable r3, $r8;
        java.util.concurrent.locks.Lock $r4, $r5, $r9;
        boolean $z0;
        int $i0, $i1;
        java.util.Map $r6;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        r1 := @parameter0: org.apache.http.conn.routing.HttpRoute;

        $r4 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r4.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        r2 = virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.http.impl.conn.tsccm.RouteSpecificPool getRoutePool(org.apache.http.conn.routing.HttpRoute,boolean)>(r1, 1);

        virtualinvoke r2.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: void dropEntry()>();

        $z0 = virtualinvoke r2.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: boolean isUnused()>();

        if $z0 == 0 goto label2;

        $r6 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Map routeToPool>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

     label2:
        $i0 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int numConnections>;

        $i1 = $i0 - 1;

        r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: int numConnections> = $i1;

        virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void notifyWaitingThread(org.apache.http.impl.conn.tsccm.RouteSpecificPool)>(r2);

     label3:
        $r5 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r5.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label6;

     label4:
        $r8 := @caughtexception;

        r3 = $r8;

     label5:
        $r9 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r9.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    protected void notifyWaitingThread(org.apache.http.impl.conn.tsccm.RouteSpecificPool)
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        org.apache.http.impl.conn.tsccm.RouteSpecificPool r1;
        org.apache.http.impl.conn.tsccm.WaitingThread r2;
        java.lang.Throwable r3, $r20;
        java.util.concurrent.locks.Lock $r4, $r7, $r22;
        java.util.Queue $r5, $r10;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.commons.logging.Log $r6, $r8, $r9, $r12, $r13, $r14;
        java.lang.Object $r11;
        java.lang.StringBuilder $r15, $r17, $r18, $r19;
        org.apache.http.conn.routing.HttpRoute $r16;
        java.lang.String $r21;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        r1 := @parameter0: org.apache.http.impl.conn.tsccm.RouteSpecificPool;

        r2 = null;

        $r4 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r4.<java.util.concurrent.locks.Lock: void lock()>();

     label01:
        if r1 == null goto label03;

        $z3 = virtualinvoke r1.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: boolean hasThread()>();

        if $z3 == 0 goto label03;

        $r13 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z4 = interfaceinvoke $r13.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z4 == 0 goto label02;

        $r14 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Notifying thread waiting on pool [");

        $r16 = virtualinvoke r1.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.conn.routing.HttpRoute getRoute()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r14.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r21);

     label02:
        r2 = virtualinvoke r1.<org.apache.http.impl.conn.tsccm.RouteSpecificPool: org.apache.http.impl.conn.tsccm.WaitingThread nextThread()>();

        goto label06;

     label03:
        $r5 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue waitingThreads>;

        $z0 = interfaceinvoke $r5.<java.util.Queue: boolean isEmpty()>();

        if $z0 != 0 goto label05;

        $r9 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z2 = interfaceinvoke $r9.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z2 == 0 goto label04;

        $r12 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        interfaceinvoke $r12.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Notifying thread waiting on any pool");

     label04:
        $r10 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue waitingThreads>;

        $r11 = interfaceinvoke $r10.<java.util.Queue: java.lang.Object remove()>();

        r2 = (org.apache.http.impl.conn.tsccm.WaitingThread) $r11;

        goto label06;

     label05:
        $r6 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        $z1 = interfaceinvoke $r6.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z1 == 0 goto label06;

        $r8 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: org.apache.commons.logging.Log log>;

        interfaceinvoke $r8.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Notifying no-one, there are no waiting threads");

     label06:
        if r2 == null goto label07;

        virtualinvoke r2.<org.apache.http.impl.conn.tsccm.WaitingThread: void wakeup()>();

     label07:
        $r7 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r7.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label10;

     label08:
        $r20 := @caughtexception;

        r3 = $r20;

     label09:
        $r22 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r22.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r3;

     label10:
        return;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public void deleteClosedConnections()
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        java.util.Iterator r1;
        org.apache.http.impl.conn.tsccm.BasicPoolEntry r2;
        java.lang.Throwable r3, $r9;
        java.util.concurrent.locks.Lock $r4, $r6, $r10;
        java.util.Queue $r5;
        boolean $z0, $z1;
        java.lang.Object $r7;
        org.apache.http.conn.OperatedClientConnection $r8;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        $r4 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r4.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        $r5 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue freeConnections>;

        r1 = interfaceinvoke $r5.<java.util.Queue: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (org.apache.http.impl.conn.tsccm.BasicPoolEntry) $r7;

        $r8 = virtualinvoke r2.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.OperatedClientConnection getConnection()>();

        $z1 = interfaceinvoke $r8.<org.apache.http.conn.OperatedClientConnection: boolean isOpen()>();

        if $z1 != 0 goto label3;

        interfaceinvoke r1.<java.util.Iterator: void remove()>();

        virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void deleteEntry(org.apache.http.impl.conn.tsccm.BasicPoolEntry)>(r2);

     label3:
        goto label2;

     label4:
        $r6 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r6.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label7;

     label5:
        $r9 := @caughtexception;

        r3 = $r9;

     label6:
        $r10 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r10.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void shutdown()
    {
        org.apache.http.impl.conn.tsccm.ConnPoolByRoute r0;
        java.util.Iterator r1, r15;
        org.apache.http.impl.conn.tsccm.BasicPoolEntry r2;
        org.apache.http.impl.conn.tsccm.WaitingThread r3;
        java.lang.Throwable r4, $r12;
        java.util.concurrent.locks.Lock $r5, $r9, $r14;
        java.util.Queue $r6, $r7;
        boolean $z0, $z1;
        java.util.Map $r8;
        java.lang.Object $r10, $r11;
        org.apache.http.conn.OperatedClientConnection $r13;

        r0 := @this: org.apache.http.impl.conn.tsccm.ConnPoolByRoute;

        $r5 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r5.<java.util.concurrent.locks.Lock: void lock()>();

     label1:
        specialinvoke r0.<org.apache.http.impl.conn.tsccm.AbstractConnPool: void shutdown()>();

        $r6 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue freeConnections>;

        r1 = interfaceinvoke $r6.<java.util.Queue: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r11 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (org.apache.http.impl.conn.tsccm.BasicPoolEntry) $r11;

        interfaceinvoke r1.<java.util.Iterator: void remove()>();

        $r13 = virtualinvoke r2.<org.apache.http.impl.conn.tsccm.BasicPoolEntry: org.apache.http.conn.OperatedClientConnection getConnection()>();

        virtualinvoke r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: void closeConnection(org.apache.http.conn.OperatedClientConnection)>($r13);

        goto label2;

     label3:
        $r7 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Queue waitingThreads>;

        r15 = interfaceinvoke $r7.<java.util.Queue: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r15.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r10 = interfaceinvoke r15.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.http.impl.conn.tsccm.WaitingThread) $r10;

        interfaceinvoke r15.<java.util.Iterator: void remove()>();

        virtualinvoke r3.<org.apache.http.impl.conn.tsccm.WaitingThread: void wakeup()>();

        goto label4;

     label5:
        $r8 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.Map routeToPool>;

        interfaceinvoke $r8.<java.util.Map: void clear()>();

     label6:
        $r9 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r9.<java.util.concurrent.locks.Lock: void unlock()>();

        goto label9;

     label7:
        $r12 := @caughtexception;

        r4 = $r12;

     label8:
        $r14 = r0.<org.apache.http.impl.conn.tsccm.ConnPoolByRoute: java.util.concurrent.locks.Lock poolLock>;

        interfaceinvoke $r14.<java.util.concurrent.locks.Lock: void unlock()>();

        throw r4;

     label9:
        return;

        catch java.lang.Throwable from label1 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }
}
