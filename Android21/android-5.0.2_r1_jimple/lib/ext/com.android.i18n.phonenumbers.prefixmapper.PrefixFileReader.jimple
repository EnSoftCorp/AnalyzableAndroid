public class com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader extends java.lang.Object
{
    private static final java.util.logging.Logger LOGGER;
    private final java.lang.String phonePrefixDataDirectory;
    private com.android.i18n.phonenumbers.prefixmapper.MappingFileProvider mappingFileProvider;
    private java.util.Map availablePhonePrefixMaps;

    public void <init>(java.lang.String)
    {
        com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader r0;
        java.lang.String r1;
        com.android.i18n.phonenumbers.prefixmapper.MappingFileProvider $r2;
        java.util.HashMap $r3;

        r0 := @this: com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new com.android.i18n.phonenumbers.prefixmapper.MappingFileProvider;

        specialinvoke $r2.<com.android.i18n.phonenumbers.prefixmapper.MappingFileProvider: void <init>()>();

        r0.<com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: com.android.i18n.phonenumbers.prefixmapper.MappingFileProvider mappingFileProvider> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: java.util.Map availablePhonePrefixMaps> = $r3;

        r0.<com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: java.lang.String phonePrefixDataDirectory> = r1;

        specialinvoke r0.<com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: void loadMappingFileProvider()>();

        return;
    }

    private void loadMappingFileProvider()
    {
        com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader r0;
        java.io.InputStream r1;
        java.io.ObjectInputStream r2, $r11;
        java.io.IOException r3, $r14;
        java.lang.Throwable r4, $r13;
        java.lang.StringBuilder $r5, $r8, $r9;
        java.lang.Class $r6;
        java.lang.String $r7, $r10, $r17;
        com.android.i18n.phonenumbers.prefixmapper.MappingFileProvider $r12;
        java.util.logging.Level $r15;
        java.util.logging.Logger $r16;

        r0 := @this: com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader;

        $r6 = class "com/android/i18n/phonenumbers/prefixmapper/PrefixFileReader";

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = r0.<com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: java.lang.String phonePrefixDataDirectory>;

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("config");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        r1 = virtualinvoke $r6.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($r10);

        r2 = null;

     label1:
        $r11 = new java.io.ObjectInputStream;

        specialinvoke $r11.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>(r1);

        r2 = $r11;

        $r12 = r0.<com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: com.android.i18n.phonenumbers.prefixmapper.MappingFileProvider mappingFileProvider>;

        virtualinvoke $r12.<com.android.i18n.phonenumbers.prefixmapper.MappingFileProvider: void readExternal(java.io.ObjectInput)>(r2);

     label2:
        staticinvoke <com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: void close(java.io.InputStream)>(r2);

        goto label7;

     label3:
        $r14 := @caughtexception;

        r3 = $r14;

        $r16 = <com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: java.util.logging.Logger LOGGER>;

        $r15 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r17 = virtualinvoke r3.<java.io.IOException: java.lang.String toString()>();

        virtualinvoke $r16.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r15, $r17);

     label4:
        staticinvoke <com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: void close(java.io.InputStream)>(r2);

        goto label7;

     label5:
        $r13 := @caughtexception;

        r4 = $r13;

     label6:
        staticinvoke <com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: void close(java.io.InputStream)>(r2);

        throw r4;

     label7:
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private com.android.i18n.phonenumbers.prefixmapper.PhonePrefixMap getPhonePrefixDescriptions(int, java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader r0;
        int i0, $i1;
        java.lang.String r1, r2, r3, r4;
        com.android.i18n.phonenumbers.prefixmapper.MappingFileProvider $r5;
        java.util.Map $r6, $r7;
        boolean $z0;
        java.lang.Object $r8;
        com.android.i18n.phonenumbers.prefixmapper.PhonePrefixMap $r9;

        r0 := @this: com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $r5 = r0.<com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: com.android.i18n.phonenumbers.prefixmapper.MappingFileProvider mappingFileProvider>;

        r4 = virtualinvoke $r5.<com.android.i18n.phonenumbers.prefixmapper.MappingFileProvider: java.lang.String getFileName(int,java.lang.String,java.lang.String,java.lang.String)>(i0, r1, r2, r3);

        $i1 = virtualinvoke r4.<java.lang.String: int length()>();

        if $i1 != 0 goto label1;

        return null;

     label1:
        $r6 = r0.<com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: java.util.Map availablePhonePrefixMaps>;

        $z0 = interfaceinvoke $r6.<java.util.Map: boolean containsKey(java.lang.Object)>(r4);

        if $z0 != 0 goto label2;

        specialinvoke r0.<com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: void loadPhonePrefixMapFromFile(java.lang.String)>(r4);

     label2:
        $r7 = r0.<com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: java.util.Map availablePhonePrefixMaps>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        $r9 = (com.android.i18n.phonenumbers.prefixmapper.PhonePrefixMap) $r8;

        return $r9;
    }

    private void loadPhonePrefixMapFromFile(java.lang.String)
    {
        com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader r0;
        java.lang.String r1, $r8, $r11, $r19;
        java.io.InputStream r2;
        java.io.ObjectInputStream r3, $r12;
        com.android.i18n.phonenumbers.prefixmapper.PhonePrefixMap r4, $r13;
        java.lang.Throwable r5, $r15;
        java.lang.StringBuilder $r6, $r9, $r10;
        java.lang.Class $r7;
        java.util.Map $r14;
        java.util.logging.Logger $r17;
        java.io.IOException $r18, r21;
        java.util.logging.Level $r20;

        r0 := @this: com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader;

        r1 := @parameter0: java.lang.String;

        $r7 = class "com/android/i18n/phonenumbers/prefixmapper/PrefixFileReader";

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = r0.<com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: java.lang.String phonePrefixDataDirectory>;

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        r2 = virtualinvoke $r7.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($r11);

        r3 = null;

     label1:
        $r12 = new java.io.ObjectInputStream;

        specialinvoke $r12.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>(r2);

        r3 = $r12;

        $r13 = new com.android.i18n.phonenumbers.prefixmapper.PhonePrefixMap;

        specialinvoke $r13.<com.android.i18n.phonenumbers.prefixmapper.PhonePrefixMap: void <init>()>();

        r4 = $r13;

        virtualinvoke r4.<com.android.i18n.phonenumbers.prefixmapper.PhonePrefixMap: void readExternal(java.io.ObjectInput)>(r3);

        $r14 = r0.<com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: java.util.Map availablePhonePrefixMaps>;

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4);

     label2:
        staticinvoke <com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: void close(java.io.InputStream)>(r3);

        goto label7;

     label3:
        $r18 := @caughtexception;

        r21 = $r18;

        $r17 = <com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: java.util.logging.Logger LOGGER>;

        $r20 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r19 = virtualinvoke r21.<java.io.IOException: java.lang.String toString()>();

        virtualinvoke $r17.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r20, $r19);

     label4:
        staticinvoke <com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: void close(java.io.InputStream)>(r3);

        goto label7;

     label5:
        $r15 := @caughtexception;

        r5 = $r15;

     label6:
        staticinvoke <com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: void close(java.io.InputStream)>(r3);

        throw r5;

     label7:
        return;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private static void close(java.io.InputStream)
    {
        java.io.InputStream r0;
        java.io.IOException r1, $r2;
        java.util.logging.Logger $r3;
        java.util.logging.Level $r4;
        java.lang.String $r5;

        r0 := @parameter0: java.io.InputStream;

        if r0 == null goto label4;

     label1:
        virtualinvoke r0.<java.io.InputStream: void close()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        r1 = $r2;

        $r3 = <com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: java.util.logging.Logger LOGGER>;

        $r4 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r5 = virtualinvoke r1.<java.io.IOException: java.lang.String toString()>();

        virtualinvoke $r3.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r4, $r5);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public java.lang.String getDescriptionForNumber(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber, java.lang.String, java.lang.String, java.lang.String)
    {
        com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader r0;
        com.android.i18n.phonenumbers.Phonenumber$PhoneNumber r1;
        java.lang.String r2, r3, r4, r6, $r8, $r9;
        int i0, i1, $i4, $i5, $i6;
        com.android.i18n.phonenumbers.prefixmapper.PhonePrefixMap r5, r7;
        long $l2, $l3;
        boolean $z0;

        r0 := @this: com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader;

        r1 := @parameter0: com.android.i18n.phonenumbers.Phonenumber$PhoneNumber;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        i0 = virtualinvoke r1.<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: int getCountryCode()>();

        if i0 == 1 goto label1;

        $i6 = i0;

        goto label2;

     label1:
        $l2 = virtualinvoke r1.<com.android.i18n.phonenumbers.Phonenumber$PhoneNumber: long getNationalNumber()>();

        $l3 = $l2 / 10000000L;

        $i4 = (int) $l3;

        $i6 = 1000 + $i4;

     label2:
        i1 = $i6;

        r5 = specialinvoke r0.<com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: com.android.i18n.phonenumbers.prefixmapper.PhonePrefixMap getPhonePrefixDescriptions(int,java.lang.String,java.lang.String,java.lang.String)>(i1, r2, r3, r4);

        if r5 == null goto label3;

        $r9 = virtualinvoke r5.<com.android.i18n.phonenumbers.prefixmapper.PhonePrefixMap: java.lang.String lookup(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)>(r1);

        goto label4;

     label3:
        $r9 = null;

     label4:
        r6 = $r9;

        if r6 == null goto label5;

        $i5 = virtualinvoke r6.<java.lang.String: int length()>();

        if $i5 != 0 goto label7;

     label5:
        $z0 = specialinvoke r0.<com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: boolean mayFallBackToEnglish(java.lang.String)>(r2);

        if $z0 == 0 goto label7;

        r7 = specialinvoke r0.<com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: com.android.i18n.phonenumbers.prefixmapper.PhonePrefixMap getPhonePrefixDescriptions(int,java.lang.String,java.lang.String,java.lang.String)>(i1, "en", "", "");

        if r7 != null goto label6;

        return "";

     label6:
        r6 = virtualinvoke r7.<com.android.i18n.phonenumbers.prefixmapper.PhonePrefixMap: java.lang.String lookup(com.android.i18n.phonenumbers.Phonenumber$PhoneNumber)>(r1);

     label7:
        if r6 == null goto label8;

        $r8 = r6;

        goto label9;

     label8:
        $r8 = "";

     label9:
        return $r8;
    }

    private boolean mayFallBackToEnglish(java.lang.String)
    {
        com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader r0;
        java.lang.String r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("zh");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("ja");

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("ko");

        if $z2 != 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        $r0 = class "com/android/i18n/phonenumbers/prefixmapper/PrefixFileReader";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <com.android.i18n.phonenumbers.prefixmapper.PrefixFileReader: java.util.logging.Logger LOGGER> = $r2;

        return;
    }
}
