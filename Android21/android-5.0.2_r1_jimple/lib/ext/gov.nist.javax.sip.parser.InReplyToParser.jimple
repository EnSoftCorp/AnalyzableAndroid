public class gov.nist.javax.sip.parser.InReplyToParser extends gov.nist.javax.sip.parser.HeaderParser
{

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.InReplyToParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.InReplyToParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(java.lang.String)>(r1);

        return;
    }

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.InReplyToParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.InReplyToParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    public gov.nist.javax.sip.header.SIPHeader parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.InReplyToParser r0;
        gov.nist.javax.sip.header.InReplyToList r1, $r6, r53;
        gov.nist.javax.sip.header.InReplyTo r2, $r8, $r20, r50;
        gov.nist.core.Token r3, r4, r51, r52;
        java.lang.Throwable r5, $r48;
        boolean $z0, $z1, $z4;
        gov.nist.core.LexerCore $r7, $r9, $r11, $r12, $r13, $r15, $r16, $r17, $r19, $r21, $r23, $r24, $r27, $r29, $r38, $r40, $r43;
        char $c0, $c1, $c2, $c3;
        java.lang.String $r14, $r25, $r30, $r34, $r36, $r41, $r45, $r49;
        java.lang.StringBuilder $r31, $r32, $r33, $r35, $r42, $r44, $r46, $r47;

        r0 := @this: gov.nist.javax.sip.parser.InReplyToParser;

        $z0 = <gov.nist.javax.sip.parser.InReplyToParser: boolean debug>;

        if $z0 == 0 goto label01;

        virtualinvoke r0.<gov.nist.javax.sip.parser.InReplyToParser: void dbg_enter(java.lang.String)>("InReplyToParser.parse");

     label01:
        $r6 = new gov.nist.javax.sip.header.InReplyToList;

        specialinvoke $r6.<gov.nist.javax.sip.header.InReplyToList: void <init>()>();

        r1 = $r6;

     label02:
        virtualinvoke r0.<gov.nist.javax.sip.parser.InReplyToParser: void headerName(int)>(2059);

     label03:
        $r7 = r0.<gov.nist.javax.sip.parser.InReplyToParser: gov.nist.core.LexerCore lexer>;

        $c0 = virtualinvoke $r7.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c0 == 10 goto label10;

        $r8 = new gov.nist.javax.sip.header.InReplyTo;

        specialinvoke $r8.<gov.nist.javax.sip.header.InReplyTo: void <init>()>();

        r2 = $r8;

        virtualinvoke r2.<gov.nist.javax.sip.header.InReplyTo: void setHeaderName(java.lang.String)>("In-Reply-To");

        $r9 = r0.<gov.nist.javax.sip.parser.InReplyToParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r9.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r11 = r0.<gov.nist.javax.sip.parser.InReplyToParser: gov.nist.core.LexerCore lexer>;

        r3 = virtualinvoke $r11.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        $r12 = r0.<gov.nist.javax.sip.parser.InReplyToParser: gov.nist.core.LexerCore lexer>;

        $c1 = virtualinvoke $r12.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c1 != 64 goto label04;

        $r40 = r0.<gov.nist.javax.sip.parser.InReplyToParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r40.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(64);

        $r38 = r0.<gov.nist.javax.sip.parser.InReplyToParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r38.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r43 = r0.<gov.nist.javax.sip.parser.InReplyToParser: gov.nist.core.LexerCore lexer>;

        r4 = virtualinvoke $r43.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke r3.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        $r47 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r46 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r45 = virtualinvoke r4.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        $r44 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r49 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r2.<gov.nist.javax.sip.header.InReplyTo: void setCallId(java.lang.String)>($r49);

        goto label05;

     label04:
        $r14 = virtualinvoke r3.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        virtualinvoke r2.<gov.nist.javax.sip.header.InReplyTo: void setCallId(java.lang.String)>($r14);

     label05:
        $r13 = r0.<gov.nist.javax.sip.parser.InReplyToParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r13.<gov.nist.core.LexerCore: void SPorHT()>();

        virtualinvoke r1.<gov.nist.javax.sip.header.InReplyToList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r2);

     label06:
        $r15 = r0.<gov.nist.javax.sip.parser.InReplyToParser: gov.nist.core.LexerCore lexer>;

        $c2 = virtualinvoke $r15.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c2 != 44 goto label09;

        $r16 = r0.<gov.nist.javax.sip.parser.InReplyToParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r16.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(44);

        $r17 = r0.<gov.nist.javax.sip.parser.InReplyToParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r17.<gov.nist.core.LexerCore: void SPorHT()>();

        $r20 = new gov.nist.javax.sip.header.InReplyTo;

        specialinvoke $r20.<gov.nist.javax.sip.header.InReplyTo: void <init>()>();

        r50 = $r20;

        $r19 = r0.<gov.nist.javax.sip.parser.InReplyToParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r19.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r21 = r0.<gov.nist.javax.sip.parser.InReplyToParser: gov.nist.core.LexerCore lexer>;

        r51 = virtualinvoke $r21.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        $r23 = r0.<gov.nist.javax.sip.parser.InReplyToParser: gov.nist.core.LexerCore lexer>;

        $c3 = virtualinvoke $r23.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c3 != 64 goto label07;

        $r24 = r0.<gov.nist.javax.sip.parser.InReplyToParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r24.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(64);

        $r29 = r0.<gov.nist.javax.sip.parser.InReplyToParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r29.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r27 = r0.<gov.nist.javax.sip.parser.InReplyToParser: gov.nist.core.LexerCore lexer>;

        r52 = virtualinvoke $r27.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke r51.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r35 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r36 = virtualinvoke r52.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        $r33 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r50.<gov.nist.javax.sip.header.InReplyTo: void setCallId(java.lang.String)>($r34);

        goto label08;

     label07:
        $r25 = virtualinvoke r51.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        virtualinvoke r50.<gov.nist.javax.sip.header.InReplyTo: void setCallId(java.lang.String)>($r25);

     label08:
        virtualinvoke r1.<gov.nist.javax.sip.header.InReplyToList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r50);

        goto label06;

     label09:
        goto label03;

     label10:
        r53 = r1;

     label11:
        $z1 = <gov.nist.javax.sip.parser.InReplyToParser: boolean debug>;

        if $z1 == 0 goto label12;

        virtualinvoke r0.<gov.nist.javax.sip.parser.InReplyToParser: void dbg_leave(java.lang.String)>("InReplyToParser.parse");

     label12:
        return r53;

     label13:
        $r48 := @caughtexception;

        r5 = $r48;

     label14:
        $z4 = <gov.nist.javax.sip.parser.InReplyToParser: boolean debug>;

        if $z4 == 0 goto label15;

        virtualinvoke r0.<gov.nist.javax.sip.parser.InReplyToParser: void dbg_leave(java.lang.String)>("InReplyToParser.parse");

     label15:
        throw r5;

        catch java.lang.Throwable from label02 to label11 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }
}
