public class gov.nist.javax.sip.header.RSeq extends gov.nist.javax.sip.header.SIPHeader implements javax.sip.header.RSeqHeader
{
    private static final long serialVersionUID;
    protected long sequenceNumber;

    public void <init>()
    {
        gov.nist.javax.sip.header.RSeq r0;

        r0 := @this: gov.nist.javax.sip.header.RSeq;

        specialinvoke r0.<gov.nist.javax.sip.header.SIPHeader: void <init>(java.lang.String)>("RSeq");

        return;
    }

    public int getSequenceNumber()
    {
        gov.nist.javax.sip.header.RSeq r0;
        long $l0;
        int $i1;

        r0 := @this: gov.nist.javax.sip.header.RSeq;

        $l0 = r0.<gov.nist.javax.sip.header.RSeq: long sequenceNumber>;

        $i1 = (int) $l0;

        return $i1;
    }

    protected java.lang.String encodeBody()
    {
        gov.nist.javax.sip.header.RSeq r0;
        long $l0;
        java.lang.String $r1;

        r0 := @this: gov.nist.javax.sip.header.RSeq;

        $l0 = r0.<gov.nist.javax.sip.header.RSeq: long sequenceNumber>;

        $r1 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        return $r1;
    }

    public long getSeqNumber()
    {
        gov.nist.javax.sip.header.RSeq r0;
        long $l0;

        r0 := @this: gov.nist.javax.sip.header.RSeq;

        $l0 = r0.<gov.nist.javax.sip.header.RSeq: long sequenceNumber>;

        return $l0;
    }

    public void setSeqNumber(long) throws javax.sip.InvalidArgumentException
    {
        gov.nist.javax.sip.header.RSeq r0;
        long l0;
        byte $b1, $b2;
        javax.sip.InvalidArgumentException $r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        r0 := @this: gov.nist.javax.sip.header.RSeq;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 <= 0 goto label1;

        $b2 = l0 cmp 2147483648L;

        if $b2 <= 0 goto label2;

     label1:
        $r1 = new javax.sip.InvalidArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad seq number ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<javax.sip.InvalidArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

     label2:
        r0.<gov.nist.javax.sip.header.RSeq: long sequenceNumber> = l0;

        return;
    }

    public void setSequenceNumber(int) throws javax.sip.InvalidArgumentException
    {
        gov.nist.javax.sip.header.RSeq r0;
        int i0;
        long $l1;

        r0 := @this: gov.nist.javax.sip.header.RSeq;

        i0 := @parameter0: int;

        $l1 = (long) i0;

        virtualinvoke r0.<gov.nist.javax.sip.header.RSeq: void setSeqNumber(long)>($l1);

        return;
    }

    public static void <clinit>()
    {
        <gov.nist.javax.sip.header.RSeq: long serialVersionUID> = 8765762413224043394L;

        return;
    }
}
