public class gov.nist.javax.sip.parser.ims.SecurityAgreeParser extends gov.nist.javax.sip.parser.HeaderParser
{

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.ims.SecurityAgreeParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.ims.SecurityAgreeParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(java.lang.String)>(r1);

        return;
    }

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.ims.SecurityAgreeParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.ims.SecurityAgreeParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    protected void parseParameter(gov.nist.javax.sip.header.ims.SecurityAgree) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.ims.SecurityAgreeParser r0;
        gov.nist.javax.sip.header.ims.SecurityAgree r1;
        gov.nist.core.NameValue r2;
        java.lang.Throwable r3, $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: gov.nist.javax.sip.parser.ims.SecurityAgreeParser;

        r1 := @parameter0: gov.nist.javax.sip.header.ims.SecurityAgree;

        $z0 = <gov.nist.javax.sip.parser.ims.SecurityAgreeParser: boolean debug>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ims.SecurityAgreeParser: void dbg_enter(java.lang.String)>("parseParameter");

     label1:
        r2 = virtualinvoke r0.<gov.nist.javax.sip.parser.ims.SecurityAgreeParser: gov.nist.core.NameValue nameValue(char)>(61);

        virtualinvoke r1.<gov.nist.javax.sip.header.ims.SecurityAgree: void setParameter(gov.nist.core.NameValue)>(r2);

     label2:
        $z1 = <gov.nist.javax.sip.parser.ims.SecurityAgreeParser: boolean debug>;

        if $z1 == 0 goto label6;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ims.SecurityAgreeParser: void dbg_leave(java.lang.String)>("parseParameter");

        goto label6;

     label3:
        $r4 := @caughtexception;

        r3 = $r4;

     label4:
        $z2 = <gov.nist.javax.sip.parser.ims.SecurityAgreeParser: boolean debug>;

        if $z2 == 0 goto label5;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ims.SecurityAgreeParser: void dbg_leave(java.lang.String)>("parseParameter");

     label5:
        throw r3;

     label6:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public gov.nist.javax.sip.header.SIPHeaderList parse(gov.nist.javax.sip.header.ims.SecurityAgree) throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.ims.SecurityAgreeParser r0;
        gov.nist.javax.sip.header.ims.SecurityAgree r1;
        gov.nist.javax.sip.header.SIPHeaderList r2;
        gov.nist.core.Token r3, r48;
        char c0, c1, $c2, $c3;
        java.lang.Class $r4, $r6, $r8, $r25, $r28, $r32;
        gov.nist.javax.sip.header.ims.SecurityClient $r5, $r30, $r41;
        boolean $z0, $z1, $z2, $z5, $z6, $z7;
        gov.nist.javax.sip.header.ims.SecurityServer $r7, $r29, $r42;
        gov.nist.javax.sip.header.ims.SecurityVerify $r9, $r31, $r43;
        gov.nist.javax.sip.header.ims.SecurityVerifyList $r10;
        gov.nist.core.LexerCore $r11, $r12, $r13, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r26, $r33, $r34, $r36, $r38, $r40;
        java.lang.String $r15, $r37;
        gov.nist.javax.sip.header.ims.SecurityClientList $r44;
        gov.nist.javax.sip.header.ims.SecurityServerList $r45;
        java.text.ParseException $r47, r49;

        r0 := @this: gov.nist.javax.sip.parser.ims.SecurityAgreeParser;

        r1 := @parameter0: gov.nist.javax.sip.header.ims.SecurityAgree;

        $r4 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = new gov.nist.javax.sip.header.ims.SecurityClient;

        specialinvoke $r5.<gov.nist.javax.sip.header.ims.SecurityClient: void <init>()>();

        $z0 = virtualinvoke $r4.<java.lang.Class: boolean isInstance(java.lang.Object)>($r5);

        if $z0 == 0 goto label01;

        $r44 = new gov.nist.javax.sip.header.ims.SecurityClientList;

        specialinvoke $r44.<gov.nist.javax.sip.header.ims.SecurityClientList: void <init>()>();

        r2 = $r44;

        goto label04;

     label01:
        $r6 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = new gov.nist.javax.sip.header.ims.SecurityServer;

        specialinvoke $r7.<gov.nist.javax.sip.header.ims.SecurityServer: void <init>()>();

        $z1 = virtualinvoke $r6.<java.lang.Class: boolean isInstance(java.lang.Object)>($r7);

        if $z1 == 0 goto label02;

        $r45 = new gov.nist.javax.sip.header.ims.SecurityServerList;

        specialinvoke $r45.<gov.nist.javax.sip.header.ims.SecurityServerList: void <init>()>();

        r2 = $r45;

        goto label04;

     label02:
        $r8 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = new gov.nist.javax.sip.header.ims.SecurityVerify;

        specialinvoke $r9.<gov.nist.javax.sip.header.ims.SecurityVerify: void <init>()>();

        $z2 = virtualinvoke $r8.<java.lang.Class: boolean isInstance(java.lang.Object)>($r9);

        if $z2 == 0 goto label03;

        $r10 = new gov.nist.javax.sip.header.ims.SecurityVerifyList;

        specialinvoke $r10.<gov.nist.javax.sip.header.ims.SecurityVerifyList: void <init>()>();

        r2 = $r10;

        goto label04;

     label03:
        return null;

     label04:
        $r12 = r0.<gov.nist.javax.sip.parser.ims.SecurityAgreeParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r12.<gov.nist.core.LexerCore: void SPorHT()>();

        $r11 = r0.<gov.nist.javax.sip.parser.ims.SecurityAgreeParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r11.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r13 = r0.<gov.nist.javax.sip.parser.ims.SecurityAgreeParser: gov.nist.core.LexerCore lexer>;

        r3 = virtualinvoke $r13.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        $r15 = virtualinvoke r3.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        virtualinvoke r1.<gov.nist.javax.sip.header.ims.SecurityAgree: void setSecurityMechanism(java.lang.String)>($r15);

        $r17 = r0.<gov.nist.javax.sip.parser.ims.SecurityAgreeParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r17.<gov.nist.core.LexerCore: void SPorHT()>();

        $r16 = r0.<gov.nist.javax.sip.parser.ims.SecurityAgreeParser: gov.nist.core.LexerCore lexer>;

        c0 = virtualinvoke $r16.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if c0 != 10 goto label05;

        virtualinvoke r2.<gov.nist.javax.sip.header.SIPHeaderList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r1);

        return r2;

     label05:
        if c0 != 59 goto label06;

        $r40 = r0.<gov.nist.javax.sip.parser.ims.SecurityAgreeParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r40.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(59);

     label06:
        $r18 = r0.<gov.nist.javax.sip.parser.ims.SecurityAgreeParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r18.<gov.nist.core.LexerCore: void SPorHT()>();

     label07:
        $r19 = r0.<gov.nist.javax.sip.parser.ims.SecurityAgreeParser: gov.nist.core.LexerCore lexer>;

        $c2 = virtualinvoke $r19.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c2 == 10 goto label14;

        virtualinvoke r0.<gov.nist.javax.sip.parser.ims.SecurityAgreeParser: void parseParameter(gov.nist.javax.sip.header.ims.SecurityAgree)>(r1);

        $r20 = r0.<gov.nist.javax.sip.parser.ims.SecurityAgreeParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r20.<gov.nist.core.LexerCore: void SPorHT()>();

        $r21 = r0.<gov.nist.javax.sip.parser.ims.SecurityAgreeParser: gov.nist.core.LexerCore lexer>;

        c1 = virtualinvoke $r21.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if c1 == 10 goto label14;

        if c1 != 0 goto label08;

        goto label14;

     label08:
        if c1 != 44 goto label12;

        virtualinvoke r2.<gov.nist.javax.sip.header.SIPHeaderList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r1);

        $r25 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r30 = new gov.nist.javax.sip.header.ims.SecurityClient;

        specialinvoke $r30.<gov.nist.javax.sip.header.ims.SecurityClient: void <init>()>();

        $z5 = virtualinvoke $r25.<java.lang.Class: boolean isInstance(java.lang.Object)>($r30);

        if $z5 == 0 goto label09;

        $r41 = new gov.nist.javax.sip.header.ims.SecurityClient;

        specialinvoke $r41.<gov.nist.javax.sip.header.ims.SecurityClient: void <init>()>();

        r1 = $r41;

        goto label11;

     label09:
        $r28 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r29 = new gov.nist.javax.sip.header.ims.SecurityServer;

        specialinvoke $r29.<gov.nist.javax.sip.header.ims.SecurityServer: void <init>()>();

        $z7 = virtualinvoke $r28.<java.lang.Class: boolean isInstance(java.lang.Object)>($r29);

        if $z7 == 0 goto label10;

        $r42 = new gov.nist.javax.sip.header.ims.SecurityServer;

        specialinvoke $r42.<gov.nist.javax.sip.header.ims.SecurityServer: void <init>()>();

        r1 = $r42;

        goto label11;

     label10:
        $r32 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r31 = new gov.nist.javax.sip.header.ims.SecurityVerify;

        specialinvoke $r31.<gov.nist.javax.sip.header.ims.SecurityVerify: void <init>()>();

        $z6 = virtualinvoke $r32.<java.lang.Class: boolean isInstance(java.lang.Object)>($r31);

        if $z6 == 0 goto label11;

        $r43 = new gov.nist.javax.sip.header.ims.SecurityVerify;

        specialinvoke $r43.<gov.nist.javax.sip.header.ims.SecurityVerify: void <init>()>();

        r1 = $r43;

     label11:
        $r36 = r0.<gov.nist.javax.sip.parser.ims.SecurityAgreeParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r36.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(44);

        $r34 = r0.<gov.nist.javax.sip.parser.ims.SecurityAgreeParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r34.<gov.nist.core.LexerCore: void SPorHT()>();

        $r33 = r0.<gov.nist.javax.sip.parser.ims.SecurityAgreeParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r33.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(4095);

        $r38 = r0.<gov.nist.javax.sip.parser.ims.SecurityAgreeParser: gov.nist.core.LexerCore lexer>;

        r48 = virtualinvoke $r38.<gov.nist.core.LexerCore: gov.nist.core.Token getNextToken()>();

        $r37 = virtualinvoke r48.<gov.nist.core.Token: java.lang.String getTokenValue()>();

        virtualinvoke r1.<gov.nist.javax.sip.header.ims.SecurityAgree: void setSecurityMechanism(java.lang.String)>($r37);

     label12:
        $r23 = r0.<gov.nist.javax.sip.parser.ims.SecurityAgreeParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r23.<gov.nist.core.LexerCore: void SPorHT()>();

        $r24 = r0.<gov.nist.javax.sip.parser.ims.SecurityAgreeParser: gov.nist.core.LexerCore lexer>;

        $c3 = virtualinvoke $r24.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c3 != 59 goto label13;

        $r26 = r0.<gov.nist.javax.sip.parser.ims.SecurityAgreeParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r26.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(59);

     label13:
        $r22 = r0.<gov.nist.javax.sip.parser.ims.SecurityAgreeParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r22.<gov.nist.core.LexerCore: void SPorHT()>();

        goto label07;

     label14:
        virtualinvoke r2.<gov.nist.javax.sip.header.SIPHeaderList: boolean add(gov.nist.javax.sip.header.SIPHeader)>(r1);

     label15:
        return r2;

     label16:
        $r47 := @caughtexception;

        r49 = $r47;

        throw r49;

        catch java.text.ParseException from label07 to label15 with label16;
    }
}
