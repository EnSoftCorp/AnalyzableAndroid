public final class gov.nist.javax.sip.header.Contact extends gov.nist.javax.sip.header.AddressParametersHeader implements javax.sip.header.ContactHeader
{
    private static final long serialVersionUID;
    public static final java.lang.String ACTION;
    public static final java.lang.String PROXY;
    public static final java.lang.String REDIRECT;
    public static final java.lang.String EXPIRES;
    public static final java.lang.String Q;
    private gov.nist.javax.sip.header.ContactList contactList;
    protected boolean wildCardFlag;

    public void <init>()
    {
        gov.nist.javax.sip.header.Contact r0;

        r0 := @this: gov.nist.javax.sip.header.Contact;

        specialinvoke r0.<gov.nist.javax.sip.header.AddressParametersHeader: void <init>(java.lang.String)>("Contact");

        return;
    }

    public void setParameter(java.lang.String, java.lang.String) throws java.text.ParseException
    {
        gov.nist.javax.sip.header.Contact r0;
        java.lang.String r1, r2;
        gov.nist.core.NameValue r3, $r5, r7;
        gov.nist.core.NameValueList $r4, $r6;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.header.Contact;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r4 = r0.<gov.nist.javax.sip.header.Contact: gov.nist.core.NameValueList parameters>;

        r3 = virtualinvoke $r4.<gov.nist.core.NameValueList: gov.nist.core.NameValue getNameValue(java.lang.String)>(r1);

        if r3 == null goto label1;

        virtualinvoke r3.<gov.nist.core.NameValue: void setValueAsObject(java.lang.Object)>(r2);

        goto label3;

     label1:
        $r5 = new gov.nist.core.NameValue;

        specialinvoke $r5.<gov.nist.core.NameValue: void <init>(java.lang.String,java.lang.Object)>(r1, r2);

        r7 = $r5;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("methods");

        if $z0 == 0 goto label2;

        virtualinvoke r7.<gov.nist.core.NameValue: void setQuotedValue()>();

     label2:
        $r6 = r0.<gov.nist.javax.sip.header.Contact: gov.nist.core.NameValueList parameters>;

        virtualinvoke $r6.<gov.nist.core.NameValueList: void set(gov.nist.core.NameValue)>(r7);

     label3:
        return;
    }

    protected java.lang.String encodeBody()
    {
        gov.nist.javax.sip.header.Contact r0;
        java.lang.StringBuffer $r1, $r2;
        java.lang.String $r3;

        r0 := @this: gov.nist.javax.sip.header.Contact;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke r0.<gov.nist.javax.sip.header.Contact: java.lang.StringBuffer encodeBody(java.lang.StringBuffer)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    protected java.lang.StringBuffer encodeBody(java.lang.StringBuffer)
    {
        gov.nist.javax.sip.header.Contact r0;
        java.lang.StringBuffer r1;
        boolean $z0, $z1;
        gov.nist.javax.sip.address.AddressImpl $r2, $r4, $r11;
        int $i0;
        gov.nist.core.NameValueList $r7, $r9;

        r0 := @this: gov.nist.javax.sip.header.Contact;

        r1 := @parameter0: java.lang.StringBuffer;

        $z0 = r0.<gov.nist.javax.sip.header.Contact: boolean wildCardFlag>;

        if $z0 == 0 goto label1;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(42);

        goto label4;

     label1:
        $r2 = r0.<gov.nist.javax.sip.header.Contact: gov.nist.javax.sip.address.AddressImpl address>;

        $i0 = virtualinvoke $r2.<gov.nist.javax.sip.address.AddressImpl: int getAddressType()>();

        if $i0 != 1 goto label2;

        $r11 = r0.<gov.nist.javax.sip.header.Contact: gov.nist.javax.sip.address.AddressImpl address>;

        virtualinvoke $r11.<gov.nist.javax.sip.address.AddressImpl: java.lang.StringBuffer encode(java.lang.StringBuffer)>(r1);

        goto label3;

     label2:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(60);

        $r4 = r0.<gov.nist.javax.sip.header.Contact: gov.nist.javax.sip.address.AddressImpl address>;

        virtualinvoke $r4.<gov.nist.javax.sip.address.AddressImpl: java.lang.StringBuffer encode(java.lang.StringBuffer)>(r1);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(62);

     label3:
        $r7 = r0.<gov.nist.javax.sip.header.Contact: gov.nist.core.NameValueList parameters>;

        $z1 = virtualinvoke $r7.<gov.nist.core.NameValueList: boolean isEmpty()>();

        if $z1 != 0 goto label4;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(";");

        $r9 = r0.<gov.nist.javax.sip.header.Contact: gov.nist.core.NameValueList parameters>;

        virtualinvoke $r9.<gov.nist.core.NameValueList: java.lang.StringBuffer encode(java.lang.StringBuffer)>(r1);

     label4:
        return r1;
    }

    public gov.nist.javax.sip.header.ContactList getContactList()
    {
        gov.nist.javax.sip.header.Contact r0;
        gov.nist.javax.sip.header.ContactList $r1;

        r0 := @this: gov.nist.javax.sip.header.Contact;

        $r1 = r0.<gov.nist.javax.sip.header.Contact: gov.nist.javax.sip.header.ContactList contactList>;

        return $r1;
    }

    public boolean getWildCardFlag()
    {
        gov.nist.javax.sip.header.Contact r0;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.header.Contact;

        $z0 = r0.<gov.nist.javax.sip.header.Contact: boolean wildCardFlag>;

        return $z0;
    }

    public javax.sip.address.Address getAddress()
    {
        gov.nist.javax.sip.header.Contact r0;
        gov.nist.javax.sip.address.AddressImpl $r1;

        r0 := @this: gov.nist.javax.sip.header.Contact;

        $r1 = r0.<gov.nist.javax.sip.header.Contact: gov.nist.javax.sip.address.AddressImpl address>;

        return $r1;
    }

    public gov.nist.core.NameValueList getContactParms()
    {
        gov.nist.javax.sip.header.Contact r0;
        gov.nist.core.NameValueList $r1;

        r0 := @this: gov.nist.javax.sip.header.Contact;

        $r1 = r0.<gov.nist.javax.sip.header.Contact: gov.nist.core.NameValueList parameters>;

        return $r1;
    }

    public int getExpires()
    {
        gov.nist.javax.sip.header.Contact r0;
        int $i0;

        r0 := @this: gov.nist.javax.sip.header.Contact;

        $i0 = virtualinvoke r0.<gov.nist.javax.sip.header.Contact: int getParameterAsInt(java.lang.String)>("expires");

        return $i0;
    }

    public void setExpires(int)
    {
        gov.nist.javax.sip.header.Contact r0;
        int i0;
        java.lang.Integer r1;
        gov.nist.core.NameValueList $r2;

        r0 := @this: gov.nist.javax.sip.header.Contact;

        i0 := @parameter0: int;

        r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2 = r0.<gov.nist.javax.sip.header.Contact: gov.nist.core.NameValueList parameters>;

        virtualinvoke $r2.<gov.nist.core.NameValueList: void set(java.lang.String,java.lang.Object)>("expires", r1);

        return;
    }

    public float getQValue()
    {
        gov.nist.javax.sip.header.Contact r0;
        float $f0;

        r0 := @this: gov.nist.javax.sip.header.Contact;

        $f0 = virtualinvoke r0.<gov.nist.javax.sip.header.Contact: float getParameterAsFloat(java.lang.String)>("q");

        return $f0;
    }

    public void setContactList(gov.nist.javax.sip.header.ContactList)
    {
        gov.nist.javax.sip.header.Contact r0;
        gov.nist.javax.sip.header.ContactList r1;

        r0 := @this: gov.nist.javax.sip.header.Contact;

        r1 := @parameter0: gov.nist.javax.sip.header.ContactList;

        r0.<gov.nist.javax.sip.header.Contact: gov.nist.javax.sip.header.ContactList contactList> = r1;

        return;
    }

    public void setWildCardFlag(boolean)
    {
        gov.nist.javax.sip.header.Contact r0;
        boolean z0;
        gov.nist.javax.sip.address.AddressImpl $r1, $r2;

        r0 := @this: gov.nist.javax.sip.header.Contact;

        z0 := @parameter0: boolean;

        r0.<gov.nist.javax.sip.header.Contact: boolean wildCardFlag> = 1;

        $r1 = new gov.nist.javax.sip.address.AddressImpl;

        specialinvoke $r1.<gov.nist.javax.sip.address.AddressImpl: void <init>()>();

        r0.<gov.nist.javax.sip.header.Contact: gov.nist.javax.sip.address.AddressImpl address> = $r1;

        $r2 = r0.<gov.nist.javax.sip.header.Contact: gov.nist.javax.sip.address.AddressImpl address>;

        virtualinvoke $r2.<gov.nist.javax.sip.address.AddressImpl: void setWildCardFlag()>();

        return;
    }

    public void setAddress(javax.sip.address.Address)
    {
        gov.nist.javax.sip.header.Contact r0;
        javax.sip.address.Address r1;
        gov.nist.javax.sip.address.AddressImpl $r2;
        java.lang.NullPointerException $r3;

        r0 := @this: gov.nist.javax.sip.header.Contact;

        r1 := @parameter0: javax.sip.address.Address;

        if r1 != null goto label1;

        $r3 = new java.lang.NullPointerException;

        specialinvoke $r3.<java.lang.NullPointerException: void <init>(java.lang.String)>("null address");

        throw $r3;

     label1:
        $r2 = (gov.nist.javax.sip.address.AddressImpl) r1;

        r0.<gov.nist.javax.sip.header.Contact: gov.nist.javax.sip.address.AddressImpl address> = $r2;

        r0.<gov.nist.javax.sip.header.Contact: boolean wildCardFlag> = 0;

        return;
    }

    public void setQValue(float) throws javax.sip.InvalidArgumentException
    {
        gov.nist.javax.sip.header.Contact r0;
        float f0;
        byte $b0, $b1, $b2;
        gov.nist.core.NameValueList $r1;
        java.lang.Float $r2;
        javax.sip.InvalidArgumentException $r3;

        r0 := @this: gov.nist.javax.sip.header.Contact;

        f0 := @parameter0: float;

        $b0 = f0 cmpl -1.0F;

        if $b0 == 0 goto label2;

        $b1 = f0 cmpg 0.0F;

        if $b1 < 0 goto label1;

        $b2 = f0 cmpl 1.0F;

        if $b2 <= 0 goto label2;

     label1:
        $r3 = new javax.sip.InvalidArgumentException;

        specialinvoke $r3.<javax.sip.InvalidArgumentException: void <init>(java.lang.String)>("JAIN-SIP Exception, Contact, setQValue(), the qValue is not between 0 and 1");

        throw $r3;

     label2:
        $r1 = r0.<gov.nist.javax.sip.header.Contact: gov.nist.core.NameValueList parameters>;

        $r2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(f0);

        virtualinvoke $r1.<gov.nist.core.NameValueList: void set(java.lang.String,java.lang.Object)>("q", $r2);

        return;
    }

    public java.lang.Object clone()
    {
        gov.nist.javax.sip.header.Contact r0, r1;
        java.lang.Object $r2, $r5;
        gov.nist.javax.sip.header.ContactList $r3, $r4, $r6;

        r0 := @this: gov.nist.javax.sip.header.Contact;

        $r2 = specialinvoke r0.<gov.nist.javax.sip.header.AddressParametersHeader: java.lang.Object clone()>();

        r1 = (gov.nist.javax.sip.header.Contact) $r2;

        $r3 = r0.<gov.nist.javax.sip.header.Contact: gov.nist.javax.sip.header.ContactList contactList>;

        if $r3 == null goto label1;

        $r4 = r0.<gov.nist.javax.sip.header.Contact: gov.nist.javax.sip.header.ContactList contactList>;

        $r5 = virtualinvoke $r4.<gov.nist.javax.sip.header.ContactList: java.lang.Object clone()>();

        $r6 = (gov.nist.javax.sip.header.ContactList) $r5;

        r1.<gov.nist.javax.sip.header.Contact: gov.nist.javax.sip.header.ContactList contactList> = $r6;

     label1:
        return r1;
    }

    public void setWildCard()
    {
        gov.nist.javax.sip.header.Contact r0;

        r0 := @this: gov.nist.javax.sip.header.Contact;

        virtualinvoke r0.<gov.nist.javax.sip.header.Contact: void setWildCardFlag(boolean)>(1);

        return;
    }

    public boolean isWildCard()
    {
        gov.nist.javax.sip.header.Contact r0;
        gov.nist.javax.sip.address.AddressImpl $r1;
        boolean $z0;

        r0 := @this: gov.nist.javax.sip.header.Contact;

        $r1 = r0.<gov.nist.javax.sip.header.Contact: gov.nist.javax.sip.address.AddressImpl address>;

        $z0 = virtualinvoke $r1.<gov.nist.javax.sip.address.AddressImpl: boolean isWildcard()>();

        return $z0;
    }

    public boolean equals(java.lang.Object)
    {
        gov.nist.javax.sip.header.Contact r0;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;

        r0 := @this: gov.nist.javax.sip.header.Contact;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof javax.sip.header.ContactHeader;

        if $z0 == 0 goto label1;

        $z1 = specialinvoke r0.<gov.nist.javax.sip.header.AddressParametersHeader: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public void removeSipInstanceParam()
    {
        gov.nist.javax.sip.header.Contact r0;
        gov.nist.core.NameValueList $r1, $r2;

        r0 := @this: gov.nist.javax.sip.header.Contact;

        $r1 = r0.<gov.nist.javax.sip.header.Contact: gov.nist.core.NameValueList parameters>;

        if $r1 == null goto label1;

        $r2 = r0.<gov.nist.javax.sip.header.Contact: gov.nist.core.NameValueList parameters>;

        virtualinvoke $r2.<gov.nist.core.NameValueList: boolean delete(java.lang.String)>("+sip.instance");

     label1:
        return;
    }

    public java.lang.String getSipInstanceParam()
    {
        gov.nist.javax.sip.header.Contact r0;
        gov.nist.core.NameValueList $r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @this: gov.nist.javax.sip.header.Contact;

        $r1 = r0.<gov.nist.javax.sip.header.Contact: gov.nist.core.NameValueList parameters>;

        $r2 = virtualinvoke $r1.<gov.nist.core.NameValueList: java.lang.Object getValue(java.lang.String)>("+sip.instance");

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    public void setSipInstanceParam(java.lang.String)
    {
        gov.nist.javax.sip.header.Contact r0;
        java.lang.String r1;
        gov.nist.core.NameValueList $r2;

        r0 := @this: gov.nist.javax.sip.header.Contact;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<gov.nist.javax.sip.header.Contact: gov.nist.core.NameValueList parameters>;

        virtualinvoke $r2.<gov.nist.core.NameValueList: void set(java.lang.String,java.lang.Object)>("+sip.instance", r1);

        return;
    }

    public void removePubGruuParam()
    {
        gov.nist.javax.sip.header.Contact r0;
        gov.nist.core.NameValueList $r1, $r2;

        r0 := @this: gov.nist.javax.sip.header.Contact;

        $r1 = r0.<gov.nist.javax.sip.header.Contact: gov.nist.core.NameValueList parameters>;

        if $r1 == null goto label1;

        $r2 = r0.<gov.nist.javax.sip.header.Contact: gov.nist.core.NameValueList parameters>;

        virtualinvoke $r2.<gov.nist.core.NameValueList: boolean delete(java.lang.String)>("pub-gruu");

     label1:
        return;
    }

    public java.lang.String getPubGruuParam()
    {
        gov.nist.javax.sip.header.Contact r0;
        gov.nist.core.NameValueList $r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @this: gov.nist.javax.sip.header.Contact;

        $r1 = r0.<gov.nist.javax.sip.header.Contact: gov.nist.core.NameValueList parameters>;

        $r2 = virtualinvoke $r1.<gov.nist.core.NameValueList: java.lang.Object getValue(java.lang.String)>("pub-gruu");

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    public void setPubGruuParam(java.lang.String)
    {
        gov.nist.javax.sip.header.Contact r0;
        java.lang.String r1;
        gov.nist.core.NameValueList $r2;

        r0 := @this: gov.nist.javax.sip.header.Contact;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<gov.nist.javax.sip.header.Contact: gov.nist.core.NameValueList parameters>;

        virtualinvoke $r2.<gov.nist.core.NameValueList: void set(java.lang.String,java.lang.Object)>("pub-gruu", r1);

        return;
    }

    public void removeTempGruuParam()
    {
        gov.nist.javax.sip.header.Contact r0;
        gov.nist.core.NameValueList $r1, $r2;

        r0 := @this: gov.nist.javax.sip.header.Contact;

        $r1 = r0.<gov.nist.javax.sip.header.Contact: gov.nist.core.NameValueList parameters>;

        if $r1 == null goto label1;

        $r2 = r0.<gov.nist.javax.sip.header.Contact: gov.nist.core.NameValueList parameters>;

        virtualinvoke $r2.<gov.nist.core.NameValueList: boolean delete(java.lang.String)>("temp-gruu");

     label1:
        return;
    }

    public java.lang.String getTempGruuParam()
    {
        gov.nist.javax.sip.header.Contact r0;
        gov.nist.core.NameValueList $r1;
        java.lang.Object $r2;
        java.lang.String $r3;

        r0 := @this: gov.nist.javax.sip.header.Contact;

        $r1 = r0.<gov.nist.javax.sip.header.Contact: gov.nist.core.NameValueList parameters>;

        $r2 = virtualinvoke $r1.<gov.nist.core.NameValueList: java.lang.Object getValue(java.lang.String)>("temp-gruu");

        $r3 = (java.lang.String) $r2;

        return $r3;
    }

    public void setTempGruuParam(java.lang.String)
    {
        gov.nist.javax.sip.header.Contact r0;
        java.lang.String r1;
        gov.nist.core.NameValueList $r2;

        r0 := @this: gov.nist.javax.sip.header.Contact;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<gov.nist.javax.sip.header.Contact: gov.nist.core.NameValueList parameters>;

        virtualinvoke $r2.<gov.nist.core.NameValueList: void set(java.lang.String,java.lang.Object)>("temp-gruu", r1);

        return;
    }

    public static void <clinit>()
    {
        <gov.nist.javax.sip.header.Contact: java.lang.String Q> = "q";

        <gov.nist.javax.sip.header.Contact: java.lang.String EXPIRES> = "expires";

        <gov.nist.javax.sip.header.Contact: java.lang.String REDIRECT> = "redirect";

        <gov.nist.javax.sip.header.Contact: java.lang.String PROXY> = "proxy";

        <gov.nist.javax.sip.header.Contact: java.lang.String ACTION> = "action";

        <gov.nist.javax.sip.header.Contact: long serialVersionUID> = 1677294871695706288L;

        return;
    }
}
