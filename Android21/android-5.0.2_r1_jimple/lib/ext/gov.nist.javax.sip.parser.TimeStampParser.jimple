public class gov.nist.javax.sip.parser.TimeStampParser extends gov.nist.javax.sip.parser.HeaderParser
{

    public void <init>(java.lang.String)
    {
        gov.nist.javax.sip.parser.TimeStampParser r0;
        java.lang.String r1;

        r0 := @this: gov.nist.javax.sip.parser.TimeStampParser;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(java.lang.String)>(r1);

        return;
    }

    protected void <init>(gov.nist.javax.sip.parser.Lexer)
    {
        gov.nist.javax.sip.parser.TimeStampParser r0;
        gov.nist.javax.sip.parser.Lexer r1;

        r0 := @this: gov.nist.javax.sip.parser.TimeStampParser;

        r1 := @parameter0: gov.nist.javax.sip.parser.Lexer;

        specialinvoke r0.<gov.nist.javax.sip.parser.HeaderParser: void <init>(gov.nist.javax.sip.parser.Lexer)>(r1);

        return;
    }

    public gov.nist.javax.sip.header.SIPHeader parse() throws java.text.ParseException
    {
        gov.nist.javax.sip.parser.TimeStampParser r0;
        gov.nist.javax.sip.header.TimeStamp r1, $r6;
        java.lang.String r2, r3, r4, $r28, $r31, $r35, $r39, r43, r44, r45;
        float f0, $f1, f2;
        java.lang.Throwable r5, $r33;
        boolean $z0, $z1, $z2;
        gov.nist.core.LexerCore $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r20, $r24;
        char $c0, $c1, $c2;
        java.lang.StringBuilder $r17, $r18, $r19, $r21, $r22, $r25, $r26, $r27;
        java.text.ParseException $r29, $r34, $r37, $r38;
        java.lang.NumberFormatException $r30, $r32, r41, r46;
        javax.sip.InvalidArgumentException $r36, $r40, r42, r47;
        long l3;
        int i4;

        r0 := @this: gov.nist.javax.sip.parser.TimeStampParser;

        $z0 = <gov.nist.javax.sip.parser.TimeStampParser: boolean debug>;

        if $z0 == 0 goto label01;

        virtualinvoke r0.<gov.nist.javax.sip.parser.TimeStampParser: void dbg_enter(java.lang.String)>("TimeStampParser.parse");

     label01:
        $r6 = new gov.nist.javax.sip.header.TimeStamp;

        specialinvoke $r6.<gov.nist.javax.sip.header.TimeStamp: void <init>()>();

        r1 = $r6;

     label02:
        virtualinvoke r0.<gov.nist.javax.sip.parser.TimeStampParser: void headerName(int)>(2103);

        virtualinvoke r1.<gov.nist.javax.sip.header.TimeStamp: void setHeaderName(java.lang.String)>("Timestamp");

        $r7 = r0.<gov.nist.javax.sip.parser.TimeStampParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r7.<gov.nist.core.LexerCore: void SPorHT()>();

        $r8 = r0.<gov.nist.javax.sip.parser.TimeStampParser: gov.nist.core.LexerCore lexer>;

        r2 = virtualinvoke $r8.<gov.nist.core.LexerCore: java.lang.String number()>();

     label03:
        $r9 = r0.<gov.nist.javax.sip.parser.TimeStampParser: gov.nist.core.LexerCore lexer>;

        $c0 = virtualinvoke $r9.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c0 != 46 goto label04;

        $r20 = r0.<gov.nist.javax.sip.parser.TimeStampParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r20.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(46);

        $r24 = r0.<gov.nist.javax.sip.parser.TimeStampParser: gov.nist.core.LexerCore lexer>;

        r3 = virtualinvoke $r24.<gov.nist.core.LexerCore: java.lang.String number()>();

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r25 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        r4 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r4);

        virtualinvoke r1.<gov.nist.javax.sip.header.TimeStamp: void setTimeStamp(float)>(f0);

        goto label05;

     label04:
        l3 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(r2);

        virtualinvoke r1.<gov.nist.javax.sip.header.TimeStamp: void setTime(long)>(l3);

     label05:
        goto label08;

     label06:
        $r30 := @caughtexception;

        r41 = $r30;

        $r28 = virtualinvoke r41.<java.lang.NumberFormatException: java.lang.String getMessage()>();

        $r29 = virtualinvoke r0.<gov.nist.javax.sip.parser.TimeStampParser: java.text.ParseException createParseException(java.lang.String)>($r28);

        throw $r29;

     label07:
        $r36 := @caughtexception;

        r42 = $r36;

        $r35 = virtualinvoke r42.<javax.sip.InvalidArgumentException: java.lang.String getMessage()>();

        $r34 = virtualinvoke r0.<gov.nist.javax.sip.parser.TimeStampParser: java.text.ParseException createParseException(java.lang.String)>($r35);

        throw $r34;

     label08:
        $r10 = r0.<gov.nist.javax.sip.parser.TimeStampParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r10.<gov.nist.core.LexerCore: void SPorHT()>();

        $r11 = r0.<gov.nist.javax.sip.parser.TimeStampParser: gov.nist.core.LexerCore lexer>;

        $c1 = virtualinvoke $r11.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c1 == 10 goto label14;

        $r12 = r0.<gov.nist.javax.sip.parser.TimeStampParser: gov.nist.core.LexerCore lexer>;

        r43 = virtualinvoke $r12.<gov.nist.core.LexerCore: java.lang.String number()>();

     label09:
        $r13 = r0.<gov.nist.javax.sip.parser.TimeStampParser: gov.nist.core.LexerCore lexer>;

        $c2 = virtualinvoke $r13.<gov.nist.core.LexerCore: char lookAhead(int)>(0);

        if $c2 != 46 goto label10;

        $r14 = r0.<gov.nist.javax.sip.parser.TimeStampParser: gov.nist.core.LexerCore lexer>;

        virtualinvoke $r14.<gov.nist.core.LexerCore: gov.nist.core.Token match(int)>(46);

        $r15 = r0.<gov.nist.javax.sip.parser.TimeStampParser: gov.nist.core.LexerCore lexer>;

        r44 = virtualinvoke $r15.<gov.nist.core.LexerCore: java.lang.String number()>();

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r43);

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r44);

        r45 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        f2 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(r45);

        virtualinvoke r1.<gov.nist.javax.sip.header.TimeStamp: void setDelay(float)>(f2);

        goto label11;

     label10:
        i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r43);

        $f1 = (float) i4;

        virtualinvoke r1.<gov.nist.javax.sip.header.TimeStamp: void setDelay(float)>($f1);

     label11:
        goto label14;

     label12:
        $r32 := @caughtexception;

        r46 = $r32;

        $r31 = virtualinvoke r46.<java.lang.NumberFormatException: java.lang.String getMessage()>();

        $r37 = virtualinvoke r0.<gov.nist.javax.sip.parser.TimeStampParser: java.text.ParseException createParseException(java.lang.String)>($r31);

        throw $r37;

     label13:
        $r40 := @caughtexception;

        r47 = $r40;

        $r39 = virtualinvoke r47.<javax.sip.InvalidArgumentException: java.lang.String getMessage()>();

        $r38 = virtualinvoke r0.<gov.nist.javax.sip.parser.TimeStampParser: java.text.ParseException createParseException(java.lang.String)>($r39);

        throw $r38;

     label14:
        $z1 = <gov.nist.javax.sip.parser.TimeStampParser: boolean debug>;

        if $z1 == 0 goto label18;

        virtualinvoke r0.<gov.nist.javax.sip.parser.TimeStampParser: void dbg_leave(java.lang.String)>("TimeStampParser.parse");

        goto label18;

     label15:
        $r33 := @caughtexception;

        r5 = $r33;

     label16:
        $z2 = <gov.nist.javax.sip.parser.TimeStampParser: boolean debug>;

        if $z2 == 0 goto label17;

        virtualinvoke r0.<gov.nist.javax.sip.parser.TimeStampParser: void dbg_leave(java.lang.String)>("TimeStampParser.parse");

     label17:
        throw r5;

     label18:
        return r1;

        catch java.lang.NumberFormatException from label03 to label05 with label06;
        catch javax.sip.InvalidArgumentException from label03 to label05 with label07;
        catch java.lang.NumberFormatException from label09 to label11 with label12;
        catch javax.sip.InvalidArgumentException from label09 to label11 with label13;
        catch java.lang.Throwable from label02 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }
}
