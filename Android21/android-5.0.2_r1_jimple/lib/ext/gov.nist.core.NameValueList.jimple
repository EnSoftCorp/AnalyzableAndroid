public class gov.nist.core.NameValueList extends java.lang.Object implements java.io.Serializable, java.lang.Cloneable, java.util.Map
{
    private static final long serialVersionUID;
    private java.util.Map hmap;
    private java.lang.String separator;

    public void <init>()
    {
        gov.nist.core.NameValueList r0;
        java.util.LinkedHashMap $r1;

        r0 := @this: gov.nist.core.NameValueList;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<gov.nist.core.NameValueList: java.lang.String separator> = ";";

        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        r0.<gov.nist.core.NameValueList: java.util.Map hmap> = $r1;

        return;
    }

    public void <init>(boolean)
    {
        gov.nist.core.NameValueList r0;
        boolean z0;
        java.util.LinkedHashMap $r1;
        java.util.concurrent.ConcurrentHashMap $r2;

        r0 := @this: gov.nist.core.NameValueList;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<gov.nist.core.NameValueList: java.lang.String separator> = ";";

        if z0 == 0 goto label1;

        $r2 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r2.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<gov.nist.core.NameValueList: java.util.Map hmap> = $r2;

        goto label2;

     label1:
        $r1 = new java.util.LinkedHashMap;

        specialinvoke $r1.<java.util.LinkedHashMap: void <init>()>();

        r0.<gov.nist.core.NameValueList: java.util.Map hmap> = $r1;

     label2:
        return;
    }

    public void setSeparator(java.lang.String)
    {
        gov.nist.core.NameValueList r0;
        java.lang.String r1;

        r0 := @this: gov.nist.core.NameValueList;

        r1 := @parameter0: java.lang.String;

        r0.<gov.nist.core.NameValueList: java.lang.String separator> = r1;

        return;
    }

    public java.lang.String encode()
    {
        gov.nist.core.NameValueList r0;
        java.lang.StringBuffer $r1, $r2;
        java.lang.String $r3;

        r0 := @this: gov.nist.core.NameValueList;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke r0.<gov.nist.core.NameValueList: java.lang.StringBuffer encode(java.lang.StringBuffer)>($r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public java.lang.StringBuffer encode(java.lang.StringBuffer)
    {
        gov.nist.core.NameValueList r0;
        java.lang.StringBuffer r1;
        java.util.Iterator r2;
        java.lang.Object r3;
        gov.nist.core.GenericObject r4;
        java.util.Map $r5, $r6;
        boolean $z0, $z1, $z2, $z3;
        java.util.Collection $r7;
        java.lang.String $r8, $r11;

        r0 := @this: gov.nist.core.NameValueList;

        r1 := @parameter0: java.lang.StringBuffer;

        $r5 = r0.<gov.nist.core.NameValueList: java.util.Map hmap>;

        $z0 = interfaceinvoke $r5.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label4;

        $r6 = r0.<gov.nist.core.NameValueList: java.util.Map hmap>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.util.Collection values()>();

        r2 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

     label1:
        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $z2 = r3 instanceof gov.nist.core.GenericObject;

        if $z2 == 0 goto label2;

        r4 = (gov.nist.core.GenericObject) r3;

        virtualinvoke r4.<gov.nist.core.GenericObject: java.lang.StringBuffer encode(java.lang.StringBuffer)>(r1);

        goto label3;

     label2:
        $r8 = virtualinvoke r3.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

     label3:
        $z3 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label4;

        $r11 = r0.<gov.nist.core.NameValueList: java.lang.String separator>;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        goto label1;

     label4:
        return r1;
    }

    public java.lang.String toString()
    {
        gov.nist.core.NameValueList r0;
        java.lang.String $r1;

        r0 := @this: gov.nist.core.NameValueList;

        $r1 = virtualinvoke r0.<gov.nist.core.NameValueList: java.lang.String encode()>();

        return $r1;
    }

    public void set(gov.nist.core.NameValue)
    {
        gov.nist.core.NameValueList r0;
        gov.nist.core.NameValue r1;
        java.util.Map $r2;
        java.lang.String $r3, $r4;

        r0 := @this: gov.nist.core.NameValueList;

        r1 := @parameter0: gov.nist.core.NameValue;

        $r2 = r0.<gov.nist.core.NameValueList: java.util.Map hmap>;

        $r3 = virtualinvoke r1.<gov.nist.core.NameValue: java.lang.String getName()>();

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase()>();

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, r1);

        return;
    }

    public void set(java.lang.String, java.lang.Object)
    {
        gov.nist.core.NameValueList r0;
        java.lang.String r1, $r6;
        java.lang.Object r2;
        gov.nist.core.NameValue r3, $r4;
        java.util.Map $r5;

        r0 := @this: gov.nist.core.NameValueList;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r4 = new gov.nist.core.NameValue;

        specialinvoke $r4.<gov.nist.core.NameValue: void <init>(java.lang.String,java.lang.Object)>(r1, r2);

        r3 = $r4;

        $r5 = r0.<gov.nist.core.NameValueList: java.util.Map hmap>;

        $r6 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, r3);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        gov.nist.core.NameValueList r0, r2;
        java.lang.Object r1, $r13, $r14;
        java.util.Iterator r3;
        java.lang.String r4;
        gov.nist.core.NameValue r5, r6;
        java.lang.Class $r7, $r8;
        boolean $z0, $z1, $z2;
        java.util.Map $r9, $r10, $r11, $r15;
        int $i0, $i1;
        java.util.Set $r12;

        r0 := @this: gov.nist.core.NameValueList;

        r1 := @parameter0: java.lang.Object;

        if r1 != null goto label1;

        return 0;

     label1:
        $r7 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r7.<java.lang.Object: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (gov.nist.core.NameValueList) r1;

        $r9 = r0.<gov.nist.core.NameValueList: java.util.Map hmap>;

        $i0 = interfaceinvoke $r9.<java.util.Map: int size()>();

        $r10 = r2.<gov.nist.core.NameValueList: java.util.Map hmap>;

        $i1 = interfaceinvoke $r10.<java.util.Map: int size()>();

        if $i0 == $i1 goto label3;

        return 0;

     label3:
        $r11 = r0.<gov.nist.core.NameValueList: java.util.Map hmap>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.util.Set keySet()>();

        r3 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r13 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r13;

        r5 = virtualinvoke r0.<gov.nist.core.NameValueList: gov.nist.core.NameValue getNameValue(java.lang.String)>(r4);

        $r15 = r2.<gov.nist.core.NameValueList: java.util.Map hmap>;

        $r14 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        r6 = (gov.nist.core.NameValue) $r14;

        if r6 != null goto label5;

        return 0;

     label5:
        $z2 = virtualinvoke r6.<gov.nist.core.NameValue: boolean equals(java.lang.Object)>(r5);

        if $z2 != 0 goto label6;

        return 0;

     label6:
        goto label4;

     label7:
        return 1;
    }

    public java.lang.Object getValue(java.lang.String)
    {
        gov.nist.core.NameValueList r0;
        java.lang.String r1, $r3;
        gov.nist.core.NameValue r2;
        java.lang.Object $r4;

        r0 := @this: gov.nist.core.NameValueList;

        r1 := @parameter0: java.lang.String;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

        r2 = virtualinvoke r0.<gov.nist.core.NameValueList: gov.nist.core.NameValue getNameValue(java.lang.String)>($r3);

        if r2 == null goto label1;

        $r4 = virtualinvoke r2.<gov.nist.core.NameValue: java.lang.Object getValueAsObject()>();

        return $r4;

     label1:
        return null;
    }

    public gov.nist.core.NameValue getNameValue(java.lang.String)
    {
        gov.nist.core.NameValueList r0;
        java.lang.String r1, $r3;
        java.util.Map $r2;
        java.lang.Object $r4;
        gov.nist.core.NameValue $r5;

        r0 := @this: gov.nist.core.NameValueList;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<gov.nist.core.NameValueList: java.util.Map hmap>;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (gov.nist.core.NameValue) $r4;

        return $r5;
    }

    public boolean hasNameValue(java.lang.String)
    {
        gov.nist.core.NameValueList r0;
        java.lang.String r1, $r3;
        java.util.Map $r2;
        boolean $z0;

        r0 := @this: gov.nist.core.NameValueList;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<gov.nist.core.NameValueList: java.util.Map hmap>;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r3);

        return $z0;
    }

    public boolean delete(java.lang.String)
    {
        gov.nist.core.NameValueList r0;
        java.lang.String r1, r2;
        java.util.Map $r3, $r4;
        boolean $z0;

        r0 := @this: gov.nist.core.NameValueList;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r1.<java.lang.String: java.lang.String toLowerCase()>();

        $r3 = r0.<gov.nist.core.NameValueList: java.util.Map hmap>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        $r4 = r0.<gov.nist.core.NameValueList: java.util.Map hmap>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2);

        return 1;

     label1:
        return 0;
    }

    public java.lang.Object clone()
    {
        gov.nist.core.NameValueList r0, r1, $r3;
        java.util.Iterator r2;
        java.lang.String $r4;
        java.util.Map $r5;
        java.util.Collection $r6;
        boolean $z0;
        java.lang.Object $r7, $r9;
        gov.nist.core.NameValue $r8, $r10;

        r0 := @this: gov.nist.core.NameValueList;

        $r3 = new gov.nist.core.NameValueList;

        specialinvoke $r3.<gov.nist.core.NameValueList: void <init>()>();

        r1 = $r3;

        $r4 = r0.<gov.nist.core.NameValueList: java.lang.String separator>;

        virtualinvoke r1.<gov.nist.core.NameValueList: void setSeparator(java.lang.String)>($r4);

        $r5 = r0.<gov.nist.core.NameValueList: java.util.Map hmap>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.util.Collection values()>();

        r2 = interfaceinvoke $r6.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (gov.nist.core.NameValue) $r7;

        $r9 = virtualinvoke $r8.<gov.nist.core.NameValue: java.lang.Object clone()>();

        $r10 = (gov.nist.core.NameValue) $r9;

        virtualinvoke r1.<gov.nist.core.NameValueList: void set(gov.nist.core.NameValue)>($r10);

        goto label1;

     label2:
        return r1;
    }

    public int size()
    {
        gov.nist.core.NameValueList r0;
        java.util.Map $r1;
        int $i0;

        r0 := @this: gov.nist.core.NameValueList;

        $r1 = r0.<gov.nist.core.NameValueList: java.util.Map hmap>;

        $i0 = interfaceinvoke $r1.<java.util.Map: int size()>();

        return $i0;
    }

    public boolean isEmpty()
    {
        gov.nist.core.NameValueList r0;
        java.util.Map $r1;
        boolean $z0;

        r0 := @this: gov.nist.core.NameValueList;

        $r1 = r0.<gov.nist.core.NameValueList: java.util.Map hmap>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        return $z0;
    }

    public java.util.Iterator iterator()
    {
        gov.nist.core.NameValueList r0;
        java.util.Map $r1;
        java.util.Collection $r2;
        java.util.Iterator $r3;

        r0 := @this: gov.nist.core.NameValueList;

        $r1 = r0.<gov.nist.core.NameValueList: java.util.Map hmap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

        return $r3;
    }

    public java.util.Iterator getNames()
    {
        gov.nist.core.NameValueList r0;
        java.util.Map $r1;
        java.util.Set $r2;
        java.util.Iterator $r3;

        r0 := @this: gov.nist.core.NameValueList;

        $r1 = r0.<gov.nist.core.NameValueList: java.util.Map hmap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        return $r3;
    }

    public java.lang.String getParameter(java.lang.String)
    {
        gov.nist.core.NameValueList r0;
        java.lang.String r1, $r3, $r5;
        java.lang.Object r2;
        boolean $z0;
        gov.nist.core.GenericObject $r4;

        r0 := @this: gov.nist.core.NameValueList;

        r1 := @parameter0: java.lang.String;

        r2 = virtualinvoke r0.<gov.nist.core.NameValueList: java.lang.Object getValue(java.lang.String)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        $z0 = r2 instanceof gov.nist.core.GenericObject;

        if $z0 == 0 goto label2;

        $r4 = (gov.nist.core.GenericObject) r2;

        $r5 = virtualinvoke $r4.<gov.nist.core.GenericObject: java.lang.String encode()>();

        return $r5;

     label2:
        $r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        return $r3;
    }

    public void clear()
    {
        gov.nist.core.NameValueList r0;
        java.util.Map $r1;

        r0 := @this: gov.nist.core.NameValueList;

        $r1 = r0.<gov.nist.core.NameValueList: java.util.Map hmap>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        return;
    }

    public boolean containsKey(java.lang.Object)
    {
        gov.nist.core.NameValueList r0;
        java.lang.Object r1;
        java.util.Map $r2;
        java.lang.String $r3, $r4;
        boolean $z0;

        r0 := @this: gov.nist.core.NameValueList;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<gov.nist.core.NameValueList: java.util.Map hmap>;

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase()>();

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>($r4);

        return $z0;
    }

    public boolean containsValue(java.lang.Object)
    {
        gov.nist.core.NameValueList r0;
        java.lang.Object r1;
        java.util.Map $r2;
        boolean $z0;

        r0 := @this: gov.nist.core.NameValueList;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<gov.nist.core.NameValueList: java.util.Map hmap>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsValue(java.lang.Object)>(r1);

        return $z0;
    }

    public java.util.Set entrySet()
    {
        gov.nist.core.NameValueList r0;
        java.util.Map $r1;
        java.util.Set $r2;

        r0 := @this: gov.nist.core.NameValueList;

        $r1 = r0.<gov.nist.core.NameValueList: java.util.Map hmap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        return $r2;
    }

    public gov.nist.core.NameValue get(java.lang.Object)
    {
        gov.nist.core.NameValueList r0;
        java.lang.Object r1, $r5;
        java.util.Map $r2;
        java.lang.String $r3, $r4;
        gov.nist.core.NameValue $r6;

        r0 := @this: gov.nist.core.NameValueList;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<gov.nist.core.NameValueList: java.util.Map hmap>;

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase()>();

        $r5 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = (gov.nist.core.NameValue) $r5;

        return $r6;
    }

    public java.util.Set keySet()
    {
        gov.nist.core.NameValueList r0;
        java.util.Map $r1;
        java.util.Set $r2;

        r0 := @this: gov.nist.core.NameValueList;

        $r1 = r0.<gov.nist.core.NameValueList: java.util.Map hmap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        return $r2;
    }

    public gov.nist.core.NameValue put(java.lang.String, gov.nist.core.NameValue)
    {
        gov.nist.core.NameValueList r0;
        java.lang.String r1;
        gov.nist.core.NameValue r2, $r5;
        java.util.Map $r3;
        java.lang.Object $r4;

        r0 := @this: gov.nist.core.NameValueList;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: gov.nist.core.NameValue;

        $r3 = r0.<gov.nist.core.NameValueList: java.util.Map hmap>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        $r5 = (gov.nist.core.NameValue) $r4;

        return $r5;
    }

    public void putAll(java.util.Map)
    {
        gov.nist.core.NameValueList r0;
        java.util.Map r1, $r2;

        r0 := @this: gov.nist.core.NameValueList;

        r1 := @parameter0: java.util.Map;

        $r2 = r0.<gov.nist.core.NameValueList: java.util.Map hmap>;

        interfaceinvoke $r2.<java.util.Map: void putAll(java.util.Map)>(r1);

        return;
    }

    public gov.nist.core.NameValue remove(java.lang.Object)
    {
        gov.nist.core.NameValueList r0;
        java.lang.Object r1, $r5;
        java.util.Map $r2;
        java.lang.String $r3, $r4;
        gov.nist.core.NameValue $r6;

        r0 := @this: gov.nist.core.NameValueList;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<gov.nist.core.NameValueList: java.util.Map hmap>;

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase()>();

        $r5 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r4);

        $r6 = (gov.nist.core.NameValue) $r5;

        return $r6;
    }

    public java.util.Collection values()
    {
        gov.nist.core.NameValueList r0;
        java.util.Map $r1;
        java.util.Collection $r2;

        r0 := @this: gov.nist.core.NameValueList;

        $r1 = r0.<gov.nist.core.NameValueList: java.util.Map hmap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        return $r2;
    }

    public int hashCode()
    {
        gov.nist.core.NameValueList r0;
        java.util.Map $r1;
        java.util.Set $r2;
        int $i0;

        r0 := @this: gov.nist.core.NameValueList;

        $r1 = r0.<gov.nist.core.NameValueList: java.util.Map hmap>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $i0 = interfaceinvoke $r2.<java.util.Set: int hashCode()>();

        return $i0;
    }

    public volatile java.lang.Object remove(java.lang.Object)
    {
        gov.nist.core.NameValueList r0;
        java.lang.Object r1;
        gov.nist.core.NameValue $r2;

        r0 := @this: gov.nist.core.NameValueList;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<gov.nist.core.NameValueList: gov.nist.core.NameValue remove(java.lang.Object)>(r1);

        return $r2;
    }

    public volatile java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        gov.nist.core.NameValueList r0;
        java.lang.Object r1, r2;
        gov.nist.core.NameValue $r3, $r5;
        java.lang.String $r4;

        r0 := @this: gov.nist.core.NameValueList;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (java.lang.String) r1;

        $r3 = (gov.nist.core.NameValue) r2;

        $r5 = virtualinvoke r0.<gov.nist.core.NameValueList: gov.nist.core.NameValue put(java.lang.String,gov.nist.core.NameValue)>($r4, $r3);

        return $r5;
    }

    public volatile java.lang.Object get(java.lang.Object)
    {
        gov.nist.core.NameValueList r0;
        java.lang.Object r1;
        gov.nist.core.NameValue $r2;

        r0 := @this: gov.nist.core.NameValueList;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<gov.nist.core.NameValueList: gov.nist.core.NameValue get(java.lang.Object)>(r1);

        return $r2;
    }

    public static void <clinit>()
    {
        <gov.nist.core.NameValueList: long serialVersionUID> = -6998271876574260243L;

        return;
    }
}
