class com.android.pacprocessor.PacService$ProxyServiceStub extends com.android.net.IProxyService$Stub
{
    private final com.android.pacprocessor.PacNative mPacNative;

    public void <init>(com.android.pacprocessor.PacNative)
    {
        com.android.pacprocessor.PacService$ProxyServiceStub r0;
        com.android.pacprocessor.PacNative r1;

        r0 := @this: com.android.pacprocessor.PacService$ProxyServiceStub;

        r1 := @parameter0: com.android.pacprocessor.PacNative;

        specialinvoke r0.<com.android.net.IProxyService$Stub: void <init>()>();

        r0.<com.android.pacprocessor.PacService$ProxyServiceStub: com.android.pacprocessor.PacNative mPacNative> = r1;

        return;
    }

    public java.lang.String resolvePacFile(java.lang.String, java.lang.String) throws android.os.RemoteException
    {
        com.android.pacprocessor.PacService$ProxyServiceStub r0;
        java.lang.String r1, r2, $r6;
        char[] r3;
        int i0, i1;
        char c2;
        java.net.URL $r4;
        com.android.pacprocessor.PacNative $r5;
        boolean $z0;
        android.os.RemoteException $r7, $r9;
        java.net.MalformedURLException $r8;

        r0 := @this: com.android.pacprocessor.PacService$ProxyServiceStub;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

     label1:
        $r4 = new java.net.URL;

        specialinvoke $r4.<java.net.URL: void <init>(java.lang.String)>(r2);

        r3 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();

        i0 = lengthof r3;

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        c2 = r3[i1];

        $z0 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>(c2);

        if $z0 != 0 goto label3;

        if c2 == 46 goto label3;

        if c2 == 45 goto label3;

        $r7 = new android.os.RemoteException;

        specialinvoke $r7.<android.os.RemoteException: void <init>(java.lang.String)>("Invalid host was passed");

        throw $r7;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        $r5 = r0.<com.android.pacprocessor.PacService$ProxyServiceStub: com.android.pacprocessor.PacNative mPacNative>;

        $r6 = virtualinvoke $r5.<com.android.pacprocessor.PacNative: java.lang.String makeProxyRequest(java.lang.String,java.lang.String)>(r2, r1);

     label5:
        return $r6;

     label6:
        $r8 := @caughtexception;

        $r9 = new android.os.RemoteException;

        specialinvoke $r9.<android.os.RemoteException: void <init>(java.lang.String)>("Invalid URL was passed");

        throw $r9;

        catch java.net.MalformedURLException from label1 to label5 with label6;
    }

    public void setPacFile(java.lang.String) throws android.os.RemoteException
    {
        com.android.pacprocessor.PacService$ProxyServiceStub r0;
        java.lang.String r1;
        int $i0;
        com.android.pacprocessor.PacNative $r2;
        java.lang.SecurityException $r3;

        r0 := @this: com.android.pacprocessor.PacService$ProxyServiceStub;

        r1 := @parameter0: java.lang.String;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i0 == 1000 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PacService", "Only system user is allowed to call setPacFile");

        $r3 = new java.lang.SecurityException;

        specialinvoke $r3.<java.lang.SecurityException: void <init>()>();

        throw $r3;

     label1:
        $r2 = r0.<com.android.pacprocessor.PacService$ProxyServiceStub: com.android.pacprocessor.PacNative mPacNative>;

        virtualinvoke $r2.<com.android.pacprocessor.PacNative: boolean setCurrentProxyScript(java.lang.String)>(r1);

        return;
    }

    public void startPacSystem() throws android.os.RemoteException
    {
        com.android.pacprocessor.PacService$ProxyServiceStub r0;
        int $i0;
        com.android.pacprocessor.PacNative $r1;
        java.lang.SecurityException $r2;

        r0 := @this: com.android.pacprocessor.PacService$ProxyServiceStub;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i0 == 1000 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PacService", "Only system user is allowed to call startPacSystem");

        $r2 = new java.lang.SecurityException;

        specialinvoke $r2.<java.lang.SecurityException: void <init>()>();

        throw $r2;

     label1:
        $r1 = r0.<com.android.pacprocessor.PacService$ProxyServiceStub: com.android.pacprocessor.PacNative mPacNative>;

        virtualinvoke $r1.<com.android.pacprocessor.PacNative: boolean startPacSupport()>();

        return;
    }

    public void stopPacSystem() throws android.os.RemoteException
    {
        com.android.pacprocessor.PacService$ProxyServiceStub r0;
        int $i0;
        com.android.pacprocessor.PacNative $r1;
        java.lang.SecurityException $r2;

        r0 := @this: com.android.pacprocessor.PacService$ProxyServiceStub;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i0 == 1000 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("PacService", "Only system user is allowed to call stopPacSystem");

        $r2 = new java.lang.SecurityException;

        specialinvoke $r2.<java.lang.SecurityException: void <init>()>();

        throw $r2;

     label1:
        $r1 = r0.<com.android.pacprocessor.PacService$ProxyServiceStub: com.android.pacprocessor.PacNative mPacNative>;

        virtualinvoke $r1.<com.android.pacprocessor.PacNative: boolean stopPacSupport()>();

        return;
    }
}
