public class com.android.internal.policy.impl.SystemGesturesPointerEventListener extends java.lang.Object implements android.view.WindowManagerPolicy$PointerEventListener
{
    private static final java.lang.String TAG;
    private static final boolean DEBUG;
    private static final long SWIPE_TIMEOUT_MS;
    private static final int MAX_TRACKED_POINTERS;
    private static final int UNTRACKED_POINTER;
    private static final int SWIPE_NONE;
    private static final int SWIPE_FROM_TOP;
    private static final int SWIPE_FROM_BOTTOM;
    private static final int SWIPE_FROM_RIGHT;
    private final int mSwipeStartThreshold;
    private final int mSwipeDistanceThreshold;
    private final com.android.internal.policy.impl.SystemGesturesPointerEventListener$Callbacks mCallbacks;
    private final int[] mDownPointerId;
    private final float[] mDownX;
    private final float[] mDownY;
    private final long[] mDownTime;
    int screenHeight;
    int screenWidth;
    private int mDownPointers;
    private boolean mSwipeFireable;
    private boolean mDebugFireable;

    public void <init>(android.content.Context, com.android.internal.policy.impl.SystemGesturesPointerEventListener$Callbacks)
    {
        com.android.internal.policy.impl.SystemGesturesPointerEventListener r0;
        android.content.Context r1, $r10;
        com.android.internal.policy.impl.SystemGesturesPointerEventListener$Callbacks r2, $r8;
        int[] $r3;
        float[] $r4, $r5;
        long[] $r6;
        java.lang.Object $r7, $r9;
        android.content.res.Resources $r11;
        int $i0, $i1;

        r0 := @this: com.android.internal.policy.impl.SystemGesturesPointerEventListener;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.internal.policy.impl.SystemGesturesPointerEventListener$Callbacks;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = newarray (int)[32];

        r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: int[] mDownPointerId> = $r3;

        $r4 = newarray (float)[32];

        r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: float[] mDownX> = $r4;

        $r5 = newarray (float)[32];

        r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: float[] mDownY> = $r5;

        $r6 = newarray (long)[32];

        r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: long[] mDownTime> = $r6;

        $r7 = staticinvoke <com.android.internal.policy.impl.SystemGesturesPointerEventListener: java.lang.Object checkNull(java.lang.String,java.lang.Object)>("callbacks", r2);

        $r8 = (com.android.internal.policy.impl.SystemGesturesPointerEventListener$Callbacks) $r7;

        r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: com.android.internal.policy.impl.SystemGesturesPointerEventListener$Callbacks mCallbacks> = $r8;

        $r9 = staticinvoke <com.android.internal.policy.impl.SystemGesturesPointerEventListener: java.lang.Object checkNull(java.lang.String,java.lang.Object)>("context", r1);

        $r10 = (android.content.Context) $r9;

        $r11 = virtualinvoke $r10.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r11.<android.content.res.Resources: int getDimensionPixelSize(int)>(17104912);

        r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: int mSwipeStartThreshold> = $i0;

        $i1 = r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: int mSwipeStartThreshold>;

        r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: int mSwipeDistanceThreshold> = $i1;

        return;
    }

    private static java.lang.Object checkNull(java.lang.String, java.lang.Object)
    {
        java.lang.String r0, $r6;
        java.lang.Object r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3, $r4, $r5;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object;

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must not be null");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label1:
        return r1;
    }

    public void onPointerEvent(android.view.MotionEvent)
    {
        com.android.internal.policy.impl.SystemGesturesPointerEventListener r0;
        android.view.MotionEvent r1;
        int i0, $i1, $i2, $i3;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.android.internal.policy.impl.SystemGesturesPointerEventListener$Callbacks $r2, $r3, $r4, $r5;

        r0 := @this: com.android.internal.policy.impl.SystemGesturesPointerEventListener;

        r1 := @parameter0: android.view.MotionEvent;

        $i1 = virtualinvoke r1.<android.view.MotionEvent: int getActionMasked()>();

        tableswitch($i1)
        {
            case 0: goto label01;
            case 1: goto label11;
            case 2: goto label05;
            case 3: goto label11;
            case 4: goto label12;
            case 5: goto label02;
            default: goto label12;
        };

     label01:
        r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: boolean mSwipeFireable> = 1;

        r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: boolean mDebugFireable> = 1;

        r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: int mDownPointers> = 0;

        specialinvoke r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: void captureDown(android.view.MotionEvent,int)>(r1, 0);

        goto label12;

     label02:
        $i2 = virtualinvoke r1.<android.view.MotionEvent: int getActionIndex()>();

        specialinvoke r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: void captureDown(android.view.MotionEvent,int)>(r1, $i2);

        $z0 = r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: boolean mDebugFireable>;

        if $z0 == 0 goto label12;

        $i3 = virtualinvoke r1.<android.view.MotionEvent: int getPointerCount()>();

        if $i3 >= 5 goto label03;

        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: boolean mDebugFireable> = $z2;

        $z1 = r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: boolean mDebugFireable>;

        if $z1 != 0 goto label12;

        $r2 = r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: com.android.internal.policy.impl.SystemGesturesPointerEventListener$Callbacks mCallbacks>;

        interfaceinvoke $r2.<com.android.internal.policy.impl.SystemGesturesPointerEventListener$Callbacks: void onDebug()>();

        goto label12;

     label05:
        $z3 = r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: boolean mSwipeFireable>;

        if $z3 == 0 goto label12;

        i0 = specialinvoke r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: int detectSwipe(android.view.MotionEvent)>(r1);

        if i0 != 0 goto label06;

        $z4 = 1;

        goto label07;

     label06:
        $z4 = 0;

     label07:
        r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: boolean mSwipeFireable> = $z4;

        if i0 != 1 goto label08;

        $r5 = r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: com.android.internal.policy.impl.SystemGesturesPointerEventListener$Callbacks mCallbacks>;

        interfaceinvoke $r5.<com.android.internal.policy.impl.SystemGesturesPointerEventListener$Callbacks: void onSwipeFromTop()>();

        goto label10;

     label08:
        if i0 != 2 goto label09;

        $r4 = r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: com.android.internal.policy.impl.SystemGesturesPointerEventListener$Callbacks mCallbacks>;

        interfaceinvoke $r4.<com.android.internal.policy.impl.SystemGesturesPointerEventListener$Callbacks: void onSwipeFromBottom()>();

        goto label10;

     label09:
        if i0 != 3 goto label10;

        $r3 = r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: com.android.internal.policy.impl.SystemGesturesPointerEventListener$Callbacks mCallbacks>;

        interfaceinvoke $r3.<com.android.internal.policy.impl.SystemGesturesPointerEventListener$Callbacks: void onSwipeFromRight()>();

     label10:
        goto label12;

     label11:
        r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: boolean mSwipeFireable> = 0;

        r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: boolean mDebugFireable> = 0;

        goto label12;

     label12:
        return;
    }

    private void captureDown(android.view.MotionEvent, int)
    {
        com.android.internal.policy.impl.SystemGesturesPointerEventListener r0;
        android.view.MotionEvent r1;
        int i0, i1, i2;
        float[] $r2, $r3;
        float $f0, $f1;
        long[] $r4;
        long $l3;

        r0 := @this: com.android.internal.policy.impl.SystemGesturesPointerEventListener;

        r1 := @parameter0: android.view.MotionEvent;

        i0 := @parameter1: int;

        i1 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(i0);

        i2 = specialinvoke r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: int findIndex(int)>(i1);

        if i2 == -1 goto label1;

        $r2 = r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: float[] mDownX>;

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(i0);

        $r2[i2] = $f0;

        $r3 = r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: float[] mDownY>;

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(i0);

        $r3[i2] = $f1;

        $r4 = r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: long[] mDownTime>;

        $l3 = virtualinvoke r1.<android.view.MotionEvent: long getEventTime()>();

        $r4[i2] = $l3;

     label1:
        return;
    }

    private int findIndex(int)
    {
        com.android.internal.policy.impl.SystemGesturesPointerEventListener r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        int[] $r1, $r2;

        r0 := @this: com.android.internal.policy.impl.SystemGesturesPointerEventListener;

        i0 := @parameter0: int;

        i1 = 0;

     label1:
        $i2 = r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: int mDownPointers>;

        if i1 >= $i2 goto label3;

        $r2 = r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: int[] mDownPointerId>;

        $i8 = $r2[i1];

        if $i8 != i0 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $i3 = r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: int mDownPointers>;

        if $i3 == 32 goto label4;

        if i0 != -1 goto label5;

     label4:
        return -1;

     label5:
        $r1 = r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: int[] mDownPointerId>;

        $i4 = r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: int mDownPointers>;

        $i5 = $i4 + 1;

        r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: int mDownPointers> = $i5;

        $r1[$i4] = i0;

        $i6 = r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: int mDownPointers>;

        $i7 = $i6 - 1;

        return $i7;
    }

    private int detectSwipe(android.view.MotionEvent)
    {
        com.android.internal.policy.impl.SystemGesturesPointerEventListener r0;
        android.view.MotionEvent r1;
        int i0, i1, i2, i3, i4, i5, i7, i9;
        long l6, $l8;
        float f0, f1, $f2, $f3;

        r0 := @this: com.android.internal.policy.impl.SystemGesturesPointerEventListener;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getHistorySize()>();

        i1 = virtualinvoke r1.<android.view.MotionEvent: int getPointerCount()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label6;

        i3 = virtualinvoke r1.<android.view.MotionEvent: int getPointerId(int)>(i2);

        i4 = specialinvoke r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: int findIndex(int)>(i3);

        if i4 == -1 goto label5;

        i5 = 0;

     label2:
        if i5 >= i0 goto label4;

        l6 = virtualinvoke r1.<android.view.MotionEvent: long getHistoricalEventTime(int)>(i5);

        f0 = virtualinvoke r1.<android.view.MotionEvent: float getHistoricalX(int,int)>(i2, i5);

        f1 = virtualinvoke r1.<android.view.MotionEvent: float getHistoricalY(int,int)>(i2, i5);

        i7 = specialinvoke r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: int detectSwipe(int,long,float,float)>(i4, l6, f0, f1);

        if i7 == 0 goto label3;

        return i7;

     label3:
        i5 = i5 + 1;

        goto label2;

     label4:
        $l8 = virtualinvoke r1.<android.view.MotionEvent: long getEventTime()>();

        $f3 = virtualinvoke r1.<android.view.MotionEvent: float getX(int)>(i2);

        $f2 = virtualinvoke r1.<android.view.MotionEvent: float getY(int)>(i2);

        i9 = specialinvoke r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: int detectSwipe(int,long,float,float)>(i4, $l8, $f3, $f2);

        if i9 == 0 goto label5;

        return i9;

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        return 0;
    }

    private int detectSwipe(int, long, float, float)
    {
        com.android.internal.policy.impl.SystemGesturesPointerEventListener r0;
        int i0, $i4, $i5, $i7, $i8, $i10, $i11, $i12, $i13, $i18, $i20;
        long l1, l2, $l3;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;
        float[] $r1, $r2;
        long[] $r3;
        byte $b6, $b9, $b14, $b15, $b16, $b17, $b19, $b21, $b22;

        r0 := @this: com.android.internal.policy.impl.SystemGesturesPointerEventListener;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        f0 := @parameter2: float;

        f1 := @parameter3: float;

        $r1 = r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: float[] mDownX>;

        f2 = $r1[i0];

        $r2 = r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: float[] mDownY>;

        f3 = $r2[i0];

        $r3 = r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: long[] mDownTime>;

        $l3 = $r3[i0];

        l2 = l1 - $l3;

        $i4 = r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: int mSwipeStartThreshold>;

        $f4 = (float) $i4;

        $b6 = f3 cmpg $f4;

        if $b6 > 0 goto label1;

        $i20 = r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: int mSwipeDistanceThreshold>;

        $f11 = (float) $i20;

        $f12 = f3 + $f11;

        $b21 = f1 cmpl $f12;

        if $b21 <= 0 goto label1;

        $b22 = l2 cmp 500L;

        if $b22 >= 0 goto label1;

        return 1;

     label1:
        $i8 = r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: int screenHeight>;

        $i5 = r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: int mSwipeStartThreshold>;

        $i7 = $i8 - $i5;

        $f5 = (float) $i7;

        $b9 = f3 cmpl $f5;

        if $b9 < 0 goto label2;

        $i18 = r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: int mSwipeDistanceThreshold>;

        $f10 = (float) $i18;

        $f9 = f3 - $f10;

        $b17 = f1 cmpg $f9;

        if $b17 >= 0 goto label2;

        $b19 = l2 cmp 500L;

        if $b19 >= 0 goto label2;

        return 2;

     label2:
        $i10 = r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: int screenWidth>;

        $i11 = r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: int mSwipeStartThreshold>;

        $i12 = $i10 - $i11;

        $f6 = (float) $i12;

        $b14 = f2 cmpl $f6;

        if $b14 < 0 goto label3;

        $i13 = r0.<com.android.internal.policy.impl.SystemGesturesPointerEventListener: int mSwipeDistanceThreshold>;

        $f8 = (float) $i13;

        $f7 = f2 - $f8;

        $b16 = f0 cmpg $f7;

        if $b16 >= 0 goto label3;

        $b15 = l2 cmp 500L;

        if $b15 >= 0 goto label3;

        return 3;

     label3:
        return 0;
    }

    public static void <clinit>()
    {
        <com.android.internal.policy.impl.SystemGesturesPointerEventListener: int SWIPE_FROM_RIGHT> = 3;

        <com.android.internal.policy.impl.SystemGesturesPointerEventListener: int SWIPE_FROM_BOTTOM> = 2;

        <com.android.internal.policy.impl.SystemGesturesPointerEventListener: int SWIPE_FROM_TOP> = 1;

        <com.android.internal.policy.impl.SystemGesturesPointerEventListener: int SWIPE_NONE> = 0;

        <com.android.internal.policy.impl.SystemGesturesPointerEventListener: int UNTRACKED_POINTER> = -1;

        <com.android.internal.policy.impl.SystemGesturesPointerEventListener: int MAX_TRACKED_POINTERS> = 32;

        <com.android.internal.policy.impl.SystemGesturesPointerEventListener: long SWIPE_TIMEOUT_MS> = 500L;

        <com.android.internal.policy.impl.SystemGesturesPointerEventListener: boolean DEBUG> = 0;

        <com.android.internal.policy.impl.SystemGesturesPointerEventListener: java.lang.String TAG> = "SystemGestures";

        return;
    }
}
