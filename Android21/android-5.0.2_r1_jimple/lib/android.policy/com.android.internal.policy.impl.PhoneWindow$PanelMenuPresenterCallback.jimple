class com.android.internal.policy.impl.PhoneWindow$PanelMenuPresenterCallback extends java.lang.Object implements com.android.internal.view.menu.MenuPresenter$Callback
{
    final com.android.internal.policy.impl.PhoneWindow this$0;

    private void <init>(com.android.internal.policy.impl.PhoneWindow)
    {
        com.android.internal.policy.impl.PhoneWindow$PanelMenuPresenterCallback r0;
        com.android.internal.policy.impl.PhoneWindow r1;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$PanelMenuPresenterCallback;

        r1 := @parameter0: com.android.internal.policy.impl.PhoneWindow;

        r0.<com.android.internal.policy.impl.PhoneWindow$PanelMenuPresenterCallback: com.android.internal.policy.impl.PhoneWindow this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onCloseMenu(com.android.internal.view.menu.MenuBuilder, boolean)
    {
        com.android.internal.policy.impl.PhoneWindow$PanelMenuPresenterCallback r0;
        com.android.internal.view.menu.MenuBuilder r1, r2, $r8;
        boolean z0, z1, $z2;
        com.android.internal.policy.impl.PhoneWindow$PanelFeatureState r3;
        com.android.internal.policy.impl.PhoneWindow $r4, $r5, $r6, $r7;
        int $i0;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$PanelMenuPresenterCallback;

        r1 := @parameter0: com.android.internal.view.menu.MenuBuilder;

        z0 := @parameter1: boolean;

        r2 = virtualinvoke r1.<com.android.internal.view.menu.MenuBuilder: com.android.internal.view.menu.MenuBuilder getRootMenu()>();

        if r2 == r1 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z1 = $z2;

        $r4 = r0.<com.android.internal.policy.impl.PhoneWindow$PanelMenuPresenterCallback: com.android.internal.policy.impl.PhoneWindow this$0>;

        if z1 == 0 goto label3;

        $r8 = r2;

        goto label4;

     label3:
        $r8 = r1;

     label4:
        r3 = virtualinvoke $r4.<com.android.internal.policy.impl.PhoneWindow: com.android.internal.policy.impl.PhoneWindow$PanelFeatureState findMenuPanel(android.view.Menu)>($r8);

        if r3 == null goto label6;

        if z1 == 0 goto label5;

        $r6 = r0.<com.android.internal.policy.impl.PhoneWindow$PanelMenuPresenterCallback: com.android.internal.policy.impl.PhoneWindow this$0>;

        $i0 = r3.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState: int featureId>;

        staticinvoke <com.android.internal.policy.impl.PhoneWindow: void access$500(com.android.internal.policy.impl.PhoneWindow,int,com.android.internal.policy.impl.PhoneWindow$PanelFeatureState,android.view.Menu)>($r6, $i0, r3, r2);

        $r7 = r0.<com.android.internal.policy.impl.PhoneWindow$PanelMenuPresenterCallback: com.android.internal.policy.impl.PhoneWindow this$0>;

        virtualinvoke $r7.<com.android.internal.policy.impl.PhoneWindow: void closePanel(com.android.internal.policy.impl.PhoneWindow$PanelFeatureState,boolean)>(r3, 1);

        goto label6;

     label5:
        $r5 = r0.<com.android.internal.policy.impl.PhoneWindow$PanelMenuPresenterCallback: com.android.internal.policy.impl.PhoneWindow this$0>;

        virtualinvoke $r5.<com.android.internal.policy.impl.PhoneWindow: void closePanel(com.android.internal.policy.impl.PhoneWindow$PanelFeatureState,boolean)>(r3, z0);

     label6:
        return;
    }

    public boolean onOpenSubMenu(com.android.internal.view.menu.MenuBuilder)
    {
        com.android.internal.policy.impl.PhoneWindow$PanelMenuPresenterCallback r0;
        com.android.internal.view.menu.MenuBuilder r1;
        android.view.Window$Callback r2;
        com.android.internal.policy.impl.PhoneWindow $r3, $r4, $r5;
        boolean $z0, $z1;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$PanelMenuPresenterCallback;

        r1 := @parameter0: com.android.internal.view.menu.MenuBuilder;

        if r1 != null goto label1;

        $r3 = r0.<com.android.internal.policy.impl.PhoneWindow$PanelMenuPresenterCallback: com.android.internal.policy.impl.PhoneWindow this$0>;

        $z0 = virtualinvoke $r3.<com.android.internal.policy.impl.PhoneWindow: boolean hasFeature(int)>(8);

        if $z0 == 0 goto label1;

        $r4 = r0.<com.android.internal.policy.impl.PhoneWindow$PanelMenuPresenterCallback: com.android.internal.policy.impl.PhoneWindow this$0>;

        r2 = virtualinvoke $r4.<com.android.internal.policy.impl.PhoneWindow: android.view.Window$Callback getCallback()>();

        if r2 == null goto label1;

        $r5 = r0.<com.android.internal.policy.impl.PhoneWindow$PanelMenuPresenterCallback: com.android.internal.policy.impl.PhoneWindow this$0>;

        $z1 = virtualinvoke $r5.<com.android.internal.policy.impl.PhoneWindow: boolean isDestroyed()>();

        if $z1 != 0 goto label1;

        interfaceinvoke r2.<android.view.Window$Callback: boolean onMenuOpened(int,android.view.Menu)>(8, r1);

     label1:
        return 1;
    }

    void <init>(com.android.internal.policy.impl.PhoneWindow, com.android.internal.policy.impl.PhoneWindow$1)
    {
        com.android.internal.policy.impl.PhoneWindow$PanelMenuPresenterCallback r0;
        com.android.internal.policy.impl.PhoneWindow r1;
        com.android.internal.policy.impl.PhoneWindow$1 r2;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$PanelMenuPresenterCallback;

        r1 := @parameter0: com.android.internal.policy.impl.PhoneWindow;

        r2 := @parameter1: com.android.internal.policy.impl.PhoneWindow$1;

        specialinvoke r0.<com.android.internal.policy.impl.PhoneWindow$PanelMenuPresenterCallback: void <init>(com.android.internal.policy.impl.PhoneWindow)>(r1);

        return;
    }
}
