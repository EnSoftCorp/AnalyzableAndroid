final class com.android.internal.policy.impl.PhoneWindow$DecorView extends android.widget.FrameLayout implements com.android.internal.view.RootViewSurfaceTaker
{
    int mDefaultOpacity;
    private final int mFeatureId;
    private final android.graphics.Rect mDrawingBounds;
    private final android.graphics.Rect mBackgroundPadding;
    private final android.graphics.Rect mFramePadding;
    private final android.graphics.Rect mFrameOffsets;
    private boolean mChanging;
    private android.graphics.drawable.Drawable mMenuBackground;
    private boolean mWatchingForMenu;
    private int mDownY;
    private android.view.ActionMode mActionMode;
    private com.android.internal.widget.ActionBarContextView mActionModeView;
    private android.widget.PopupWindow mActionModePopup;
    private java.lang.Runnable mShowActionModePopup;
    private android.view.View mStatusGuard;
    private android.view.View mNavigationGuard;
    private android.view.View mStatusColorView;
    private android.view.View mNavigationColorView;
    private final com.android.internal.widget.BackgroundFallback mBackgroundFallback;
    private int mLastTopInset;
    private int mLastBottomInset;
    private int mLastRightInset;
    final com.android.internal.policy.impl.PhoneWindow this$0;

    public void <init>(com.android.internal.policy.impl.PhoneWindow, android.content.Context, int)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        com.android.internal.policy.impl.PhoneWindow r1;
        android.content.Context r2;
        int i0;
        android.graphics.Rect $r3, $r4, $r5, $r6;
        com.android.internal.widget.BackgroundFallback $r7;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: com.android.internal.policy.impl.PhoneWindow;

        r2 := @parameter1: android.content.Context;

        i0 := @parameter2: int;

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0> = r1;

        specialinvoke r0.<android.widget.FrameLayout: void <init>(android.content.Context)>(r2);

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mDefaultOpacity> = -1;

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mDrawingBounds> = $r3;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mBackgroundPadding> = $r4;

        $r5 = new android.graphics.Rect;

        specialinvoke $r5.<android.graphics.Rect: void <init>()>();

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFramePadding> = $r5;

        $r6 = new android.graphics.Rect;

        specialinvoke $r6.<android.graphics.Rect: void <init>()>();

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFrameOffsets> = $r6;

        $r7 = new com.android.internal.widget.BackgroundFallback;

        specialinvoke $r7.<com.android.internal.widget.BackgroundFallback: void <init>()>();

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.widget.BackgroundFallback mBackgroundFallback> = $r7;

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mLastTopInset> = 0;

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mLastBottomInset> = 0;

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mLastRightInset> = 0;

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId> = i0;

        return;
    }

    public void setBackgroundFallback(int)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        int i0;
        com.android.internal.widget.BackgroundFallback $r1, $r3;
        android.graphics.drawable.Drawable $r2, $r5;
        boolean $z0, $z1;
        android.content.Context $r4;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.widget.BackgroundFallback mBackgroundFallback>;

        if i0 == 0 goto label1;

        $r4 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.content.Context getContext()>();

        $r5 = virtualinvoke $r4.<android.content.Context: android.graphics.drawable.Drawable getDrawable(int)>(i0);

        goto label2;

     label1:
        $r5 = null;

     label2:
        virtualinvoke $r1.<com.android.internal.widget.BackgroundFallback: void setDrawable(android.graphics.drawable.Drawable)>($r5);

        $r2 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.drawable.Drawable getBackground()>();

        if $r2 != null goto label3;

        $r3 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.widget.BackgroundFallback mBackgroundFallback>;

        $z0 = virtualinvoke $r3.<com.android.internal.widget.BackgroundFallback: boolean hasFallback()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: void setWillNotDraw(boolean)>($z1);

        return;
    }

    public void onDraw(android.graphics.Canvas)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.graphics.Canvas r1;
        com.android.internal.policy.impl.PhoneWindow $r2, $r5;
        com.android.internal.widget.BackgroundFallback $r3;
        android.view.ViewGroup $r4, $r6;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.widget.FrameLayout: void onDraw(android.graphics.Canvas)>(r1);

        $r3 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.widget.BackgroundFallback mBackgroundFallback>;

        $r2 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r4 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: android.view.ViewGroup access$600(com.android.internal.policy.impl.PhoneWindow)>($r2);

        $r5 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r6 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: android.view.ViewGroup access$700(com.android.internal.policy.impl.PhoneWindow)>($r5);

        virtualinvoke $r3.<com.android.internal.widget.BackgroundFallback: void draw(android.view.ViewGroup,android.graphics.Canvas,android.view.View)>($r4, r1, $r6);

        return;
    }

    public boolean dispatchKeyEvent(android.view.KeyEvent)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.KeyEvent r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6, $z7, $z8;
        com.android.internal.policy.impl.PhoneWindow $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r12, $r13, $r14;
        com.android.internal.policy.impl.PhoneWindow$PanelFeatureState $r9, $r10, $r11;
        android.view.Window$Callback r15;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.view.KeyEvent;

        i0 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        i1 = virtualinvoke r1.<android.view.KeyEvent: int getAction()>();

        if i1 != 0 goto label1;

        $z8 = 1;

        goto label2;

     label1:
        $z8 = 0;

     label2:
        z0 = $z8;

        if z0 == 0 goto label4;

        $i7 = virtualinvoke r1.<android.view.KeyEvent: int getRepeatCount()>();

        if $i7 != 0 goto label4;

        $r6 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $i8 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: int access$800(com.android.internal.policy.impl.PhoneWindow)>($r6);

        if $i8 <= 0 goto label3;

        $r14 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $i9 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: int access$800(com.android.internal.policy.impl.PhoneWindow)>($r14);

        if $i9 == i0 goto label3;

        z1 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>(r1);

        if z1 == 0 goto label3;

        return 1;

     label3:
        $r7 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r9 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.policy.impl.PhoneWindow$PanelFeatureState access$900(com.android.internal.policy.impl.PhoneWindow)>($r7);

        if $r9 == null goto label4;

        $r8 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r10 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.policy.impl.PhoneWindow$PanelFeatureState access$900(com.android.internal.policy.impl.PhoneWindow)>($r8);

        $z6 = $r10.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState: boolean isOpen>;

        if $z6 == 0 goto label4;

        $r13 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r12 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r11 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.policy.impl.PhoneWindow$PanelFeatureState access$900(com.android.internal.policy.impl.PhoneWindow)>($r12);

        $z7 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: boolean access$1000(com.android.internal.policy.impl.PhoneWindow,com.android.internal.policy.impl.PhoneWindow$PanelFeatureState,int,android.view.KeyEvent,int)>($r13, $r11, i0, r1, 0);

        if $z7 == 0 goto label4;

        return 1;

     label4:
        $r2 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $z3 = virtualinvoke $r2.<com.android.internal.policy.impl.PhoneWindow: boolean isDestroyed()>();

        if $z3 != 0 goto label7;

        $r5 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        r15 = virtualinvoke $r5.<com.android.internal.policy.impl.PhoneWindow: android.view.Window$Callback getCallback()>();

        if r15 == null goto label5;

        $i6 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i6 >= 0 goto label5;

        $z5 = interfaceinvoke r15.<android.view.Window$Callback: boolean dispatchKeyEvent(android.view.KeyEvent)>(r1);

        goto label6;

     label5:
        $z5 = specialinvoke r0.<android.widget.FrameLayout: boolean dispatchKeyEvent(android.view.KeyEvent)>(r1);

     label6:
        z2 = $z5;

        if z2 == 0 goto label7;

        return 1;

     label7:
        if z0 == 0 goto label8;

        $r4 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $i5 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        $i4 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        $z4 = virtualinvoke $r4.<com.android.internal.policy.impl.PhoneWindow: boolean onKeyDown(int,int,android.view.KeyEvent)>($i5, $i4, r1);

        goto label9;

     label8:
        $r3 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $i2 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        $i3 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        $z4 = virtualinvoke $r3.<com.android.internal.policy.impl.PhoneWindow: boolean onKeyUp(int,int,android.view.KeyEvent)>($i2, $i3, r1);

     label9:
        return $z4;
    }

    public boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.KeyEvent r1;
        boolean z0, $z1, $z3, z4, z5;
        android.view.Window$Callback r2;
        com.android.internal.policy.impl.PhoneWindow$PanelFeatureState r3, $r5, $r8, $r14, $r16, $r18;
        com.android.internal.policy.impl.PhoneWindow $r4, $r6, $r7, $r9, $r10, $r11, $r12, $r13, $r15, $r17, $r19;
        int $i0, $i1, $i2;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.view.KeyEvent;

        $r4 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r5 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.policy.impl.PhoneWindow$PanelFeatureState access$900(com.android.internal.policy.impl.PhoneWindow)>($r4);

        if $r5 == null goto label2;

        $r15 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r13 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r14 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.policy.impl.PhoneWindow$PanelFeatureState access$900(com.android.internal.policy.impl.PhoneWindow)>($r13);

        $i2 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        z0 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: boolean access$1000(com.android.internal.policy.impl.PhoneWindow,com.android.internal.policy.impl.PhoneWindow$PanelFeatureState,int,android.view.KeyEvent,int)>($r15, $r14, $i2, r1, 1);

        if z0 == 0 goto label2;

        $r17 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r16 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.policy.impl.PhoneWindow$PanelFeatureState access$900(com.android.internal.policy.impl.PhoneWindow)>($r17);

        if $r16 == null goto label1;

        $r19 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r18 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.policy.impl.PhoneWindow$PanelFeatureState access$900(com.android.internal.policy.impl.PhoneWindow)>($r19);

        $r18.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState: boolean isHandled> = 1;

     label1:
        return 1;

     label2:
        $r6 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        r2 = virtualinvoke $r6.<com.android.internal.policy.impl.PhoneWindow: android.view.Window$Callback getCallback()>();

        if r2 == null goto label3;

        $r12 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $z3 = virtualinvoke $r12.<com.android.internal.policy.impl.PhoneWindow: boolean isDestroyed()>();

        if $z3 != 0 goto label3;

        $i1 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i1 >= 0 goto label3;

        $z1 = interfaceinvoke r2.<android.view.Window$Callback: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>(r1);

        goto label4;

     label3:
        $z1 = specialinvoke r0.<android.widget.FrameLayout: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>(r1);

     label4:
        z4 = $z1;

        if z4 == 0 goto label5;

        return 1;

     label5:
        $r7 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r8 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.policy.impl.PhoneWindow$PanelFeatureState access$900(com.android.internal.policy.impl.PhoneWindow)>($r7);

        if $r8 != null goto label6;

        $r9 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        r3 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.policy.impl.PhoneWindow$PanelFeatureState access$1100(com.android.internal.policy.impl.PhoneWindow,int,boolean)>($r9, 0, 1);

        $r10 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        virtualinvoke $r10.<com.android.internal.policy.impl.PhoneWindow: boolean preparePanel(com.android.internal.policy.impl.PhoneWindow$PanelFeatureState,android.view.KeyEvent)>(r3, r1);

        $r11 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $i0 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        z5 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: boolean access$1000(com.android.internal.policy.impl.PhoneWindow,com.android.internal.policy.impl.PhoneWindow$PanelFeatureState,int,android.view.KeyEvent,int)>($r11, r3, $i0, r1, 1);

        r3.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState: boolean isPrepared> = 0;

        if z5 == 0 goto label6;

        return 1;

     label6:
        return 0;
    }

    public boolean dispatchTouchEvent(android.view.MotionEvent)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.MotionEvent r1;
        android.view.Window$Callback r2;
        com.android.internal.policy.impl.PhoneWindow $r3, $r4;
        boolean $z0, $z1;
        int $i0;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.view.MotionEvent;

        $r3 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        r2 = virtualinvoke $r3.<com.android.internal.policy.impl.PhoneWindow: android.view.Window$Callback getCallback()>();

        if r2 == null goto label1;

        $r4 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $z1 = virtualinvoke $r4.<com.android.internal.policy.impl.PhoneWindow: boolean isDestroyed()>();

        if $z1 != 0 goto label1;

        $i0 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i0 >= 0 goto label1;

        $z0 = interfaceinvoke r2.<android.view.Window$Callback: boolean dispatchTouchEvent(android.view.MotionEvent)>(r1);

        goto label2;

     label1:
        $z0 = specialinvoke r0.<android.widget.FrameLayout: boolean dispatchTouchEvent(android.view.MotionEvent)>(r1);

     label2:
        return $z0;
    }

    public boolean dispatchTrackballEvent(android.view.MotionEvent)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.MotionEvent r1;
        android.view.Window$Callback r2;
        com.android.internal.policy.impl.PhoneWindow $r3, $r4;
        boolean $z0, $z1;
        int $i0;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.view.MotionEvent;

        $r3 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        r2 = virtualinvoke $r3.<com.android.internal.policy.impl.PhoneWindow: android.view.Window$Callback getCallback()>();

        if r2 == null goto label1;

        $r4 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $z1 = virtualinvoke $r4.<com.android.internal.policy.impl.PhoneWindow: boolean isDestroyed()>();

        if $z1 != 0 goto label1;

        $i0 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i0 >= 0 goto label1;

        $z0 = interfaceinvoke r2.<android.view.Window$Callback: boolean dispatchTrackballEvent(android.view.MotionEvent)>(r1);

        goto label2;

     label1:
        $z0 = specialinvoke r0.<android.widget.FrameLayout: boolean dispatchTrackballEvent(android.view.MotionEvent)>(r1);

     label2:
        return $z0;
    }

    public boolean dispatchGenericMotionEvent(android.view.MotionEvent)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.MotionEvent r1;
        android.view.Window$Callback r2;
        com.android.internal.policy.impl.PhoneWindow $r3, $r4;
        boolean $z0, $z1;
        int $i0;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.view.MotionEvent;

        $r3 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        r2 = virtualinvoke $r3.<com.android.internal.policy.impl.PhoneWindow: android.view.Window$Callback getCallback()>();

        if r2 == null goto label1;

        $r4 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $z1 = virtualinvoke $r4.<com.android.internal.policy.impl.PhoneWindow: boolean isDestroyed()>();

        if $z1 != 0 goto label1;

        $i0 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i0 >= 0 goto label1;

        $z0 = interfaceinvoke r2.<android.view.Window$Callback: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>(r1);

        goto label2;

     label1:
        $z0 = specialinvoke r0.<android.widget.FrameLayout: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>(r1);

     label2:
        return $z0;
    }

    public boolean superDispatchKeyEvent(android.view.KeyEvent)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.KeyEvent r1;
        int i0, $i1;
        boolean $z0;
        android.view.ActionMode $r2, $r3;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.view.KeyEvent;

        $i1 = virtualinvoke r1.<android.view.KeyEvent: int getKeyCode()>();

        if $i1 != 4 goto label2;

        i0 = virtualinvoke r1.<android.view.KeyEvent: int getAction()>();

        $r2 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.ActionMode mActionMode>;

        if $r2 == null goto label2;

        if i0 != 1 goto label1;

        $r3 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.ActionMode mActionMode>;

        virtualinvoke $r3.<android.view.ActionMode: void finish()>();

     label1:
        return 1;

     label2:
        $z0 = specialinvoke r0.<android.widget.FrameLayout: boolean dispatchKeyEvent(android.view.KeyEvent)>(r1);

        return $z0;
    }

    public boolean superDispatchKeyShortcutEvent(android.view.KeyEvent)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.KeyEvent r1;
        boolean $z0;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.view.KeyEvent;

        $z0 = specialinvoke r0.<android.widget.FrameLayout: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)>(r1);

        return $z0;
    }

    public boolean superDispatchTouchEvent(android.view.MotionEvent)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.MotionEvent r1;
        boolean $z0;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = specialinvoke r0.<android.widget.FrameLayout: boolean dispatchTouchEvent(android.view.MotionEvent)>(r1);

        return $z0;
    }

    public boolean superDispatchTrackballEvent(android.view.MotionEvent)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.MotionEvent r1;
        boolean $z0;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = specialinvoke r0.<android.widget.FrameLayout: boolean dispatchTrackballEvent(android.view.MotionEvent)>(r1);

        return $z0;
    }

    public boolean superDispatchGenericMotionEvent(android.view.MotionEvent)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.MotionEvent r1;
        boolean $z0;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = specialinvoke r0.<android.widget.FrameLayout: boolean dispatchGenericMotionEvent(android.view.MotionEvent)>(r1);

        return $z0;
    }

    public android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.WindowInsets r1, r3, $r6, $r11;
        android.util.DisplayMetrics r2;
        int i0, $i1, $i2, $i3;
        com.android.internal.policy.impl.PhoneWindow $r4, $r9;
        android.util.TypedValue $r5, $r10;
        android.content.Context $r7;
        android.content.res.Resources $r8;
        float $f0;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.view.WindowInsets;

        $r4 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r5 = $r4.<com.android.internal.policy.impl.PhoneWindow: android.util.TypedValue mOutsetBottom>;

        if $r5 == null goto label1;

        $r7 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.content.Context getContext()>();

        $r8 = virtualinvoke $r7.<android.content.Context: android.content.res.Resources getResources()>();

        r2 = virtualinvoke $r8.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $r9 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r10 = $r9.<com.android.internal.policy.impl.PhoneWindow: android.util.TypedValue mOutsetBottom>;

        $f0 = virtualinvoke $r10.<android.util.TypedValue: float getDimension(android.util.DisplayMetrics)>(r2);

        i0 = (int) $f0;

        $i1 = virtualinvoke r1.<android.view.WindowInsets: int getSystemWindowInsetLeft()>();

        $i2 = virtualinvoke r1.<android.view.WindowInsets: int getSystemWindowInsetTop()>();

        $i3 = virtualinvoke r1.<android.view.WindowInsets: int getSystemWindowInsetRight()>();

        r3 = virtualinvoke r1.<android.view.WindowInsets: android.view.WindowInsets replaceSystemWindowInsets(int,int,int,int)>($i1, $i2, $i3, i0);

        $r11 = specialinvoke r0.<android.widget.FrameLayout: android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets)>(r3);

        return $r11;

     label1:
        $r6 = specialinvoke r0.<android.widget.FrameLayout: android.view.WindowInsets dispatchApplyWindowInsets(android.view.WindowInsets)>(r1);

        return $r6;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.MotionEvent r1;
        boolean $z0;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: boolean onInterceptTouchEvent(android.view.MotionEvent)>(r1);

        return $z0;
    }

    private boolean isOutOfBounds(int, int)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        boolean $z0;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i0 < -5 goto label1;

        if i1 < -5 goto label1;

        $i2 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int getWidth()>();

        $i3 = $i2 + 5;

        if i0 > $i3 goto label1;

        $i4 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int getHeight()>();

        $i5 = $i4 + 5;

        if i1 <= $i5 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.MotionEvent r1;
        int i0, i1, i2, $i3, $i4;
        float $f0, $f1;
        boolean $z0;
        com.android.internal.policy.impl.PhoneWindow $r2;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        $i3 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i3 < 0 goto label1;

        if i0 != 0 goto label1;

        $f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        i1 = (int) $f0;

        $f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        i2 = (int) $f1;

        $z0 = specialinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: boolean isOutOfBounds(int,int)>(i1, i2);

        if $z0 == 0 goto label1;

        $r2 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $i4 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        virtualinvoke $r2.<com.android.internal.policy.impl.PhoneWindow: void closePanel(int)>($i4);

        return 1;

     label1:
        return 0;
    }

    public void sendAccessibilityEvent(int)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        int i0, $i1, $i2, $i3, $i4, $i5;
        android.content.Context $r1;
        android.view.accessibility.AccessibilityManager $r2;
        boolean $z0;
        android.view.View $r3;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.content.Context mContext>;

        $r2 = staticinvoke <android.view.accessibility.AccessibilityManager: android.view.accessibility.AccessibilityManager getInstance(android.content.Context)>($r1);

        $z0 = virtualinvoke $r2.<android.view.accessibility.AccessibilityManager: boolean isEnabled()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $i1 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i1 == 0 goto label2;

        $i3 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i3 == 6 goto label2;

        $i4 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i4 == 2 goto label2;

        $i5 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i5 != 5 goto label3;

     label2:
        $i2 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int getChildCount()>();

        if $i2 != 1 goto label3;

        $r3 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.View getChildAt(int)>(0);

        virtualinvoke $r3.<android.view.View: void sendAccessibilityEvent(int)>(i0);

        goto label4;

     label3:
        specialinvoke r0.<android.widget.FrameLayout: void sendAccessibilityEvent(int)>(i0);

     label4:
        return;
    }

    public boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.accessibility.AccessibilityEvent r1;
        android.view.Window$Callback r2;
        com.android.internal.policy.impl.PhoneWindow $r3, $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $r3 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        r2 = virtualinvoke $r3.<com.android.internal.policy.impl.PhoneWindow: android.view.Window$Callback getCallback()>();

        if r2 == null goto label1;

        $r4 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $z1 = virtualinvoke $r4.<com.android.internal.policy.impl.PhoneWindow: boolean isDestroyed()>();

        if $z1 != 0 goto label1;

        $z2 = interfaceinvoke r2.<android.view.Window$Callback: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        if $z2 == 0 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke r0.<android.widget.FrameLayout: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        return $z0;
    }

    protected boolean setFrame(int, int, int, int)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35;
        boolean z0;
        android.graphics.Rect r1, r3, r4;
        android.graphics.drawable.Drawable r2, r5;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        z0 = specialinvoke r0.<android.widget.FrameLayout: boolean setFrame(int,int,int,int)>(i0, i1, i2, i3);

        if z0 == 0 goto label2;

        r1 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mDrawingBounds>;

        virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: void getDrawingRect(android.graphics.Rect)>(r1);

        r2 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.drawable.Drawable getForeground()>();

        if r2 == null goto label1;

        r3 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFrameOffsets>;

        $i5 = r1.<android.graphics.Rect: int left>;

        $i4 = r3.<android.graphics.Rect: int left>;

        $i6 = $i5 + $i4;

        r1.<android.graphics.Rect: int left> = $i6;

        $i7 = r1.<android.graphics.Rect: int top>;

        $i8 = r3.<android.graphics.Rect: int top>;

        $i10 = $i7 + $i8;

        r1.<android.graphics.Rect: int top> = $i10;

        $i12 = r1.<android.graphics.Rect: int right>;

        $i9 = r3.<android.graphics.Rect: int right>;

        $i11 = $i12 - $i9;

        r1.<android.graphics.Rect: int right> = $i11;

        $i13 = r1.<android.graphics.Rect: int bottom>;

        $i14 = r3.<android.graphics.Rect: int bottom>;

        $i16 = $i13 - $i14;

        r1.<android.graphics.Rect: int bottom> = $i16;

        virtualinvoke r2.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>(r1);

        r4 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFramePadding>;

        $i20 = r1.<android.graphics.Rect: int left>;

        $i18 = r4.<android.graphics.Rect: int left>;

        $i15 = r3.<android.graphics.Rect: int left>;

        $i17 = $i18 - $i15;

        $i19 = $i20 + $i17;

        r1.<android.graphics.Rect: int left> = $i19;

        $i26 = r1.<android.graphics.Rect: int top>;

        $i21 = r4.<android.graphics.Rect: int top>;

        $i22 = r3.<android.graphics.Rect: int top>;

        $i25 = $i21 - $i22;

        $i23 = $i26 + $i25;

        r1.<android.graphics.Rect: int top> = $i23;

        $i27 = r1.<android.graphics.Rect: int right>;

        $i29 = r4.<android.graphics.Rect: int right>;

        $i24 = r3.<android.graphics.Rect: int right>;

        $i30 = $i29 - $i24;

        $i28 = $i27 - $i30;

        r1.<android.graphics.Rect: int right> = $i28;

        $i32 = r1.<android.graphics.Rect: int bottom>;

        $i34 = r4.<android.graphics.Rect: int bottom>;

        $i33 = r3.<android.graphics.Rect: int bottom>;

        $i31 = $i34 - $i33;

        $i35 = $i32 - $i31;

        r1.<android.graphics.Rect: int bottom> = $i35;

     label1:
        r5 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.drawable.Drawable getBackground()>();

        if r5 == null goto label2;

        virtualinvoke r5.<android.graphics.drawable.Drawable: void setBounds(android.graphics.Rect)>(r1);

     label2:
        return z0;
    }

    protected void onMeasure(int, int)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, i27, i28, i29, i30, i31, i32, i33;
        android.util.DisplayMetrics r1;
        boolean z0, z1, $z2, z3;
        android.util.TypedValue r2, $r6, $r9, $r10, $r14, $r17, r18, r19;
        android.content.Context $r3;
        android.content.res.Resources $r4;
        com.android.internal.policy.impl.PhoneWindow $r5, $r7, $r8, $r11, $r12, $r13, $r15, $r16;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r3 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r4.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $i8 = r1.<android.util.DisplayMetrics: int widthPixels>;

        $i7 = r1.<android.util.DisplayMetrics: int heightPixels>;

        if $i8 >= $i7 goto label01;

        $z2 = 1;

        goto label02;

     label01:
        $z2 = 0;

     label02:
        z0 = $z2;

        i2 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i1);

        z1 = 0;

        if i2 != -2147483648 goto label08;

        if z0 == 0 goto label03;

        $r16 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r17 = $r16.<com.android.internal.policy.impl.PhoneWindow: android.util.TypedValue mFixedWidthMinor>;

        goto label04;

     label03:
        $r13 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r17 = $r13.<com.android.internal.policy.impl.PhoneWindow: android.util.TypedValue mFixedWidthMajor>;

     label04:
        r2 = $r17;

        if r2 == null goto label08;

        $i21 = r2.<android.util.TypedValue: int type>;

        if $i21 == 0 goto label08;

        $i24 = r2.<android.util.TypedValue: int type>;

        if $i24 != 5 goto label05;

        $f11 = virtualinvoke r2.<android.util.TypedValue: float getDimension(android.util.DisplayMetrics)>(r1);

        i4 = (int) $f11;

        goto label07;

     label05:
        $i23 = r2.<android.util.TypedValue: int type>;

        if $i23 != 6 goto label06;

        $i25 = r1.<android.util.DisplayMetrics: int widthPixels>;

        $f9 = (float) $i25;

        $i26 = r1.<android.util.DisplayMetrics: int widthPixels>;

        $f12 = (float) $i26;

        $f10 = virtualinvoke r2.<android.util.TypedValue: float getFraction(float,float)>($f9, $f12);

        i4 = (int) $f10;

        goto label07;

     label06:
        i4 = 0;

     label07:
        if i4 <= 0 goto label08;

        i5 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        $i22 = staticinvoke <java.lang.Math: int min(int,int)>(i4, i5);

        i0 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i22, 1073741824);

        z1 = 1;

     label08:
        if i3 != -2147483648 goto label14;

        if z0 == 0 goto label09;

        $r15 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r14 = $r15.<com.android.internal.policy.impl.PhoneWindow: android.util.TypedValue mFixedHeightMajor>;

        goto label10;

     label09:
        $r12 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r14 = $r12.<com.android.internal.policy.impl.PhoneWindow: android.util.TypedValue mFixedHeightMinor>;

     label10:
        r18 = $r14;

        if r18 == null goto label14;

        $i16 = r18.<android.util.TypedValue: int type>;

        if $i16 == 0 goto label14;

        $i17 = r18.<android.util.TypedValue: int type>;

        if $i17 != 5 goto label11;

        $f5 = virtualinvoke r18.<android.util.TypedValue: float getDimension(android.util.DisplayMetrics)>(r1);

        i27 = (int) $f5;

        goto label13;

     label11:
        $i15 = r18.<android.util.TypedValue: int type>;

        if $i15 != 6 goto label12;

        $i19 = r1.<android.util.DisplayMetrics: int heightPixels>;

        $f7 = (float) $i19;

        $i18 = r1.<android.util.DisplayMetrics: int heightPixels>;

        $f8 = (float) $i18;

        $f6 = virtualinvoke r18.<android.util.TypedValue: float getFraction(float,float)>($f7, $f8);

        i27 = (int) $f6;

        goto label13;

     label12:
        i27 = 0;

     label13:
        if i27 <= 0 goto label14;

        i28 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i1);

        $i20 = staticinvoke <java.lang.Math: int min(int,int)>(i27, i28);

        i1 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i20, 1073741824);

     label14:
        $r5 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r6 = $r5.<com.android.internal.policy.impl.PhoneWindow: android.util.TypedValue mOutsetBottom>;

        if $r6 == null goto label15;

        i29 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i1);

        if i29 == 0 goto label15;

        $r11 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r10 = $r11.<com.android.internal.policy.impl.PhoneWindow: android.util.TypedValue mOutsetBottom>;

        $f4 = virtualinvoke $r10.<android.util.TypedValue: float getDimension(android.util.DisplayMetrics)>(r1);

        i30 = (int) $f4;

        i31 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i1);

        $i14 = i31 + i30;

        i1 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i14, i29);

     label15:
        specialinvoke r0.<android.widget.FrameLayout: void onMeasure(int,int)>(i0, i1);

        i32 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int getMeasuredWidth()>();

        z3 = 0;

        i33 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i32, 1073741824);

        if z1 != 0 goto label21;

        if i2 != -2147483648 goto label21;

        if z0 == 0 goto label16;

        $r8 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r9 = $r8.<com.android.internal.policy.impl.PhoneWindow: android.util.TypedValue mMinWidthMinor>;

        goto label17;

     label16:
        $r7 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r9 = $r7.<com.android.internal.policy.impl.PhoneWindow: android.util.TypedValue mMinWidthMajor>;

     label17:
        r19 = $r9;

        $i10 = r19.<android.util.TypedValue: int type>;

        if $i10 == 0 goto label21;

        $i9 = r19.<android.util.TypedValue: int type>;

        if $i9 != 5 goto label18;

        $f3 = virtualinvoke r19.<android.util.TypedValue: float getDimension(android.util.DisplayMetrics)>(r1);

        i6 = (int) $f3;

        goto label20;

     label18:
        $i11 = r19.<android.util.TypedValue: int type>;

        if $i11 != 6 goto label19;

        $i13 = r1.<android.util.DisplayMetrics: int widthPixels>;

        $f0 = (float) $i13;

        $i12 = r1.<android.util.DisplayMetrics: int widthPixels>;

        $f1 = (float) $i12;

        $f2 = virtualinvoke r19.<android.util.TypedValue: float getFraction(float,float)>($f0, $f1);

        i6 = (int) $f2;

        goto label20;

     label19:
        i6 = 0;

     label20:
        if i32 >= i6 goto label21;

        i33 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i6, 1073741824);

        z3 = 1;

     label21:
        if z3 == 0 goto label22;

        specialinvoke r0.<android.widget.FrameLayout: void onMeasure(int,int)>(i33, i1);

     label22:
        return;
    }

    public void draw(android.graphics.Canvas)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.graphics.Canvas r1;
        android.graphics.drawable.Drawable $r2, $r3;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.widget.FrameLayout: void draw(android.graphics.Canvas)>(r1);

        $r2 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.drawable.Drawable mMenuBackground>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.drawable.Drawable mMenuBackground>;

        virtualinvoke $r3.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

     label1:
        return;
    }

    public boolean showContextMenuForChild(android.view.View)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.View r1;
        com.android.internal.view.menu.MenuDialogHelper r2, $r11, $r14;
        com.android.internal.policy.impl.PhoneWindow $r3, $r5, $r7, $r10, $r12, $r15, $r17, $r18, $r23, $r25;
        com.android.internal.view.menu.ContextMenuBuilder $r4, $r6, $r8, $r19, $r22;
        android.os.IBinder $r9;
        boolean $z0;
        com.android.internal.policy.impl.PhoneWindow$DialogMenuCallback $r16, $r24;
        android.content.Context $r21;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.view.View;

        $r3 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r4 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.view.menu.ContextMenuBuilder access$1200(com.android.internal.policy.impl.PhoneWindow)>($r3);

        if $r4 != null goto label1;

        $r18 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r19 = new com.android.internal.view.menu.ContextMenuBuilder;

        $r21 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.content.Context getContext()>();

        specialinvoke $r19.<com.android.internal.view.menu.ContextMenuBuilder: void <init>(android.content.Context)>($r21);

        staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.view.menu.ContextMenuBuilder access$1202(com.android.internal.policy.impl.PhoneWindow,com.android.internal.view.menu.ContextMenuBuilder)>($r18, $r19);

        $r23 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r22 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.view.menu.ContextMenuBuilder access$1200(com.android.internal.policy.impl.PhoneWindow)>($r23);

        $r25 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r24 = $r25.<com.android.internal.policy.impl.PhoneWindow: com.android.internal.policy.impl.PhoneWindow$DialogMenuCallback mContextMenuCallback>;

        virtualinvoke $r22.<com.android.internal.view.menu.ContextMenuBuilder: void setCallback(com.android.internal.view.menu.MenuBuilder$Callback)>($r24);

        goto label2;

     label1:
        $r5 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r6 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.view.menu.ContextMenuBuilder access$1200(com.android.internal.policy.impl.PhoneWindow)>($r5);

        virtualinvoke $r6.<com.android.internal.view.menu.ContextMenuBuilder: void clearAll()>();

     label2:
        $r7 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r8 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.view.menu.ContextMenuBuilder access$1200(com.android.internal.policy.impl.PhoneWindow)>($r7);

        $r9 = virtualinvoke r1.<android.view.View: android.os.IBinder getWindowToken()>();

        r2 = virtualinvoke $r8.<com.android.internal.view.menu.ContextMenuBuilder: com.android.internal.view.menu.MenuDialogHelper show(android.view.View,android.os.IBinder)>(r1, $r9);

        if r2 == null goto label3;

        $r17 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r16 = $r17.<com.android.internal.policy.impl.PhoneWindow: com.android.internal.policy.impl.PhoneWindow$DialogMenuCallback mContextMenuCallback>;

        virtualinvoke r2.<com.android.internal.view.menu.MenuDialogHelper: void setPresenterCallback(com.android.internal.view.menu.MenuPresenter$Callback)>($r16);

        goto label4;

     label3:
        $r10 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r11 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.view.menu.MenuDialogHelper access$1300(com.android.internal.policy.impl.PhoneWindow)>($r10);

        if $r11 == null goto label4;

        $r15 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r14 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.view.menu.MenuDialogHelper access$1300(com.android.internal.policy.impl.PhoneWindow)>($r15);

        virtualinvoke $r14.<com.android.internal.view.menu.MenuDialogHelper: void dismiss()>();

     label4:
        $r12 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.view.menu.MenuDialogHelper access$1302(com.android.internal.policy.impl.PhoneWindow,com.android.internal.view.menu.MenuDialogHelper)>($r12, r2);

        if r2 == null goto label5;

        $z0 = 1;

        goto label6;

     label5:
        $z0 = 0;

     label6:
        return $z0;
    }

    public android.view.ActionMode startActionModeForChild(android.view.View, android.view.ActionMode$Callback)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.View r1;
        android.view.ActionMode$Callback r2;
        android.view.ActionMode $r3;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.ActionMode$Callback;

        $r3 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.ActionMode startActionMode(android.view.ActionMode$Callback)>(r2);

        return $r3;
    }

    public android.view.ActionMode startActionMode(android.view.ActionMode$Callback)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.ActionMode$Callback r1;
        com.android.internal.policy.impl.PhoneWindow$DecorView$ActionModeCallbackWrapper r2, $r9;
        android.view.ActionMode r3, $r8, $r14, $r15, $r22, $r62;
        android.content.res.Resources$Theme r5, r7, $r44, $r54;
        android.content.Context r6, $r26, $r39, $r49, $r53;
        com.android.internal.policy.impl.PhoneWindow $r10, $r17, $r18, $r20, $r34, $r55, $r60;
        android.view.Window$Callback $r11, $r16, $r19, $r61;
        com.android.internal.widget.ActionBarContextView $r12, $r13, $r21, $r23, $r28, $r29, $r30, $r32, $r35, $r40, $r43, $r52;
        boolean $z0, $z1, $z2, $z4, $z7;
        com.android.internal.view.StandaloneActionMode $r24, r65;
        android.widget.PopupWindow $r25, $r33, $r41, $r42, $r45, $r46, $r51;
        android.view.Menu $r27;
        java.lang.Runnable $r31;
        android.util.TypedValue $r36, r63;
        android.view.View $r37, $r38;
        int $i0, $i1, $i2, i3;
        android.util.DisplayMetrics $r47;
        android.content.res.Resources $r48, $r56;
        com.android.internal.policy.impl.PhoneWindow$DecorView$1 $r50;
        android.view.ContextThemeWrapper $r57;
        java.lang.AbstractMethodError $r58, $r59;
        android.view.ViewStub r64;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.view.ActionMode$Callback;

        $r8 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.ActionMode mActionMode>;

        if $r8 == null goto label01;

        $r62 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.ActionMode mActionMode>;

        virtualinvoke $r62.<android.view.ActionMode: void finish()>();

     label01:
        $r9 = new com.android.internal.policy.impl.PhoneWindow$DecorView$ActionModeCallbackWrapper;

        specialinvoke $r9.<com.android.internal.policy.impl.PhoneWindow$DecorView$ActionModeCallbackWrapper: void <init>(com.android.internal.policy.impl.PhoneWindow$DecorView,android.view.ActionMode$Callback)>(r0, r1);

        r2 = $r9;

        r3 = null;

        $r10 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r11 = virtualinvoke $r10.<com.android.internal.policy.impl.PhoneWindow: android.view.Window$Callback getCallback()>();

        if $r11 == null goto label05;

        $r55 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $z7 = virtualinvoke $r55.<com.android.internal.policy.impl.PhoneWindow: boolean isDestroyed()>();

        if $z7 != 0 goto label05;

     label02:
        $r60 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r61 = virtualinvoke $r60.<com.android.internal.policy.impl.PhoneWindow: android.view.Window$Callback getCallback()>();

        r3 = interfaceinvoke $r61.<android.view.Window$Callback: android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback)>(r2);

     label03:
        goto label05;

     label04:
        $r58 := @caughtexception;

     label05:
        if r3 == null goto label06;

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.ActionMode mActionMode> = r3;

        goto label15;

     label06:
        $r12 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.widget.ActionBarContextView mActionModeView>;

        if $r12 != null goto label10;

        $r34 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $z2 = virtualinvoke $r34.<com.android.internal.policy.impl.PhoneWindow: boolean isFloating()>();

        if $z2 == 0 goto label09;

        $r36 = new android.util.TypedValue;

        specialinvoke $r36.<android.util.TypedValue: void <init>()>();

        r63 = $r36;

        $r39 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.content.Context mContext>;

        r5 = virtualinvoke $r39.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        virtualinvoke r5.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(16843825, r63, 1);

        $i0 = r63.<android.util.TypedValue: int resourceId>;

        if $i0 == 0 goto label07;

        $r49 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.content.Context mContext>;

        $r56 = virtualinvoke $r49.<android.content.Context: android.content.res.Resources getResources()>();

        r7 = virtualinvoke $r56.<android.content.res.Resources: android.content.res.Resources$Theme newTheme()>();

        virtualinvoke r7.<android.content.res.Resources$Theme: void setTo(android.content.res.Resources$Theme)>(r5);

        $i2 = r63.<android.util.TypedValue: int resourceId>;

        virtualinvoke r7.<android.content.res.Resources$Theme: void applyStyle(int,boolean)>($i2, 1);

        $r57 = new android.view.ContextThemeWrapper;

        $r53 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.content.Context mContext>;

        specialinvoke $r57.<android.view.ContextThemeWrapper: void <init>(android.content.Context,int)>($r53, 0);

        r6 = $r57;

        $r54 = virtualinvoke r6.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        virtualinvoke $r54.<android.content.res.Resources$Theme: void setTo(android.content.res.Resources$Theme)>(r7);

        goto label08;

     label07:
        r6 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.content.Context mContext>;

     label08:
        $r43 = new com.android.internal.widget.ActionBarContextView;

        specialinvoke $r43.<com.android.internal.widget.ActionBarContextView: void <init>(android.content.Context)>(r6);

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.widget.ActionBarContextView mActionModeView> = $r43;

        $r42 = new android.widget.PopupWindow;

        specialinvoke $r42.<android.widget.PopupWindow: void <init>(android.content.Context,android.util.AttributeSet,int)>(r6, null, 16843812);

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.widget.PopupWindow mActionModePopup> = $r42;

        $r41 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.widget.PopupWindow mActionModePopup>;

        virtualinvoke $r41.<android.widget.PopupWindow: void setWindowLayoutType(int)>(2);

        $r46 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.widget.PopupWindow mActionModePopup>;

        $r40 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.widget.ActionBarContextView mActionModeView>;

        virtualinvoke $r46.<android.widget.PopupWindow: void setContentView(android.view.View)>($r40);

        $r45 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.widget.PopupWindow mActionModePopup>;

        virtualinvoke $r45.<android.widget.PopupWindow: void setWidth(int)>(-1);

        $r44 = virtualinvoke r6.<android.content.Context: android.content.res.Resources$Theme getTheme()>();

        virtualinvoke $r44.<android.content.res.Resources$Theme: boolean resolveAttribute(int,android.util.TypedValue,boolean)>(16843499, r63, 1);

        $i1 = r63.<android.util.TypedValue: int data>;

        $r48 = virtualinvoke r6.<android.content.Context: android.content.res.Resources getResources()>();

        $r47 = virtualinvoke $r48.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        i3 = staticinvoke <android.util.TypedValue: int complexToDimensionPixelSize(int,android.util.DisplayMetrics)>($i1, $r47);

        $r52 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.widget.ActionBarContextView mActionModeView>;

        virtualinvoke $r52.<com.android.internal.widget.ActionBarContextView: void setContentHeight(int)>(i3);

        $r51 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.widget.PopupWindow mActionModePopup>;

        virtualinvoke $r51.<android.widget.PopupWindow: void setHeight(int)>(-2);

        $r50 = new com.android.internal.policy.impl.PhoneWindow$DecorView$1;

        specialinvoke $r50.<com.android.internal.policy.impl.PhoneWindow$DecorView$1: void <init>(com.android.internal.policy.impl.PhoneWindow$DecorView)>(r0);

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: java.lang.Runnable mShowActionModePopup> = $r50;

        goto label10;

     label09:
        $r37 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.View findViewById(int)>(16909166);

        r64 = (android.view.ViewStub) $r37;

        if r64 == null goto label10;

        $r38 = virtualinvoke r64.<android.view.ViewStub: android.view.View inflate()>();

        $r35 = (com.android.internal.widget.ActionBarContextView) $r38;

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.widget.ActionBarContextView mActionModeView> = $r35;

     label10:
        $r13 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.widget.ActionBarContextView mActionModeView>;

        if $r13 == null goto label15;

        $r21 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.widget.ActionBarContextView mActionModeView>;

        virtualinvoke $r21.<com.android.internal.widget.ActionBarContextView: void killMode()>();

        $r24 = new com.android.internal.view.StandaloneActionMode;

        $r23 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.widget.ActionBarContextView mActionModeView>;

        $r26 = virtualinvoke $r23.<com.android.internal.widget.ActionBarContextView: android.content.Context getContext()>();

        $r28 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.widget.ActionBarContextView mActionModeView>;

        $r25 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.widget.PopupWindow mActionModePopup>;

        if $r25 != null goto label11;

        $z4 = 1;

        goto label12;

     label11:
        $z4 = 0;

     label12:
        specialinvoke $r24.<com.android.internal.view.StandaloneActionMode: void <init>(android.content.Context,com.android.internal.widget.ActionBarContextView,android.view.ActionMode$Callback,boolean)>($r26, $r28, r2, $z4);

        r65 = $r24;

        $r27 = virtualinvoke r65.<android.view.ActionMode: android.view.Menu getMenu()>();

        $z1 = interfaceinvoke r1.<android.view.ActionMode$Callback: boolean onCreateActionMode(android.view.ActionMode,android.view.Menu)>(r65, $r27);

        if $z1 == 0 goto label14;

        virtualinvoke r65.<android.view.ActionMode: void invalidate()>();

        $r29 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.widget.ActionBarContextView mActionModeView>;

        virtualinvoke $r29.<com.android.internal.widget.ActionBarContextView: void initForMode(android.view.ActionMode)>(r65);

        $r32 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.widget.ActionBarContextView mActionModeView>;

        virtualinvoke $r32.<com.android.internal.widget.ActionBarContextView: void setVisibility(int)>(0);

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.ActionMode mActionMode> = r65;

        $r33 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.widget.PopupWindow mActionModePopup>;

        if $r33 == null goto label13;

        $r31 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: java.lang.Runnable mShowActionModePopup>;

        virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: boolean post(java.lang.Runnable)>($r31);

     label13:
        $r30 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.widget.ActionBarContextView mActionModeView>;

        virtualinvoke $r30.<com.android.internal.widget.ActionBarContextView: void sendAccessibilityEvent(int)>(32);

        goto label15;

     label14:
        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.ActionMode mActionMode> = null;

     label15:
        $r14 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.ActionMode mActionMode>;

        if $r14 == null goto label19;

        $r17 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r16 = virtualinvoke $r17.<com.android.internal.policy.impl.PhoneWindow: android.view.Window$Callback getCallback()>();

        if $r16 == null goto label19;

        $r18 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $z0 = virtualinvoke $r18.<com.android.internal.policy.impl.PhoneWindow: boolean isDestroyed()>();

        if $z0 != 0 goto label19;

     label16:
        $r20 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r19 = virtualinvoke $r20.<com.android.internal.policy.impl.PhoneWindow: android.view.Window$Callback getCallback()>();

        $r22 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.ActionMode mActionMode>;

        interfaceinvoke $r19.<android.view.Window$Callback: void onActionModeStarted(android.view.ActionMode)>($r22);

     label17:
        goto label19;

     label18:
        $r59 := @caughtexception;

     label19:
        $r15 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.ActionMode mActionMode>;

        return $r15;

        catch java.lang.AbstractMethodError from label02 to label03 with label04;
        catch java.lang.AbstractMethodError from label16 to label17 with label18;
    }

    public void startChanging()
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: boolean mChanging> = 1;

        return;
    }

    public void finishChanging()
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: boolean mChanging> = 0;

        specialinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: void drawableChanged()>();

        return;
    }

    public void setWindowBackground(android.graphics.drawable.Drawable)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.graphics.drawable.Drawable r1, $r2;
        android.graphics.Rect $r3, $r4;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.drawable.Drawable getBackground()>();

        if $r2 == r1 goto label3;

        virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: void setBackgroundDrawable(android.graphics.drawable.Drawable)>(r1);

        if r1 == null goto label1;

        $r4 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mBackgroundPadding>;

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r4);

        goto label2;

     label1:
        $r3 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mBackgroundPadding>;

        virtualinvoke $r3.<android.graphics.Rect: void setEmpty()>();

     label2:
        specialinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: void drawableChanged()>();

     label3:
        return;
    }

    public void setBackgroundDrawable(android.graphics.drawable.Drawable)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.graphics.drawable.Drawable r1;
        android.os.IBinder $r2;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        specialinvoke r0.<android.widget.FrameLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)>(r1);

        $r2 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.os.IBinder getWindowToken()>();

        if $r2 == null goto label1;

        virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: void updateWindowResizeState()>();

     label1:
        return;
    }

    public void setWindowFrame(android.graphics.drawable.Drawable)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.graphics.drawable.Drawable r1, $r2;
        android.graphics.Rect $r3, $r4;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        $r2 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.drawable.Drawable getForeground()>();

        if $r2 == r1 goto label3;

        virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: void setForeground(android.graphics.drawable.Drawable)>(r1);

        if r1 == null goto label1;

        $r4 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFramePadding>;

        virtualinvoke r1.<android.graphics.drawable.Drawable: boolean getPadding(android.graphics.Rect)>($r4);

        goto label2;

     label1:
        $r3 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFramePadding>;

        virtualinvoke $r3.<android.graphics.Rect: void setEmpty()>();

     label2:
        specialinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: void drawableChanged()>();

     label3:
        return;
    }

    public void onWindowSystemUiVisibilityChanged(int)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        int i0;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        i0 := @parameter0: int;

        specialinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.WindowInsets updateColorViews(android.view.WindowInsets)>(null);

        return;
    }

    public android.view.WindowInsets onApplyWindowInsets(android.view.WindowInsets)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.WindowInsets r1, r5, r6;
        android.graphics.Rect $r2, $r3;
        android.graphics.drawable.Drawable $r4;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.view.WindowInsets;

        $r2 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFrameOffsets>;

        $r3 = virtualinvoke r1.<android.view.WindowInsets: android.graphics.Rect getSystemWindowInsets()>();

        virtualinvoke $r2.<android.graphics.Rect: void set(android.graphics.Rect)>($r3);

        r5 = specialinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.WindowInsets updateColorViews(android.view.WindowInsets)>(r1);

        r6 = specialinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.WindowInsets updateStatusGuard(android.view.WindowInsets)>(r5);

        specialinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: void updateNavigationGuard(android.view.WindowInsets)>(r6);

        $r4 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.drawable.Drawable getForeground()>();

        if $r4 == null goto label1;

        specialinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: void drawableChanged()>();

     label1:
        return r6;
    }

    public boolean isTransitionGroup()
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        return 0;
    }

    private android.view.WindowInsets updateColorViews(android.view.WindowInsets)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.WindowInsets r1;
        android.view.WindowManager$LayoutParams r2, $r20;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i20, $i23, $i24, $i25, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        android.view.ViewGroup$MarginLayoutParams r3;
        com.android.internal.policy.impl.PhoneWindow $r4, $r5, $r7, $r8, $r11, $r14, $r16, $r19, $r22;
        android.view.ViewGroup $r6, $r10, $r13, $r15;
        android.view.ViewGroup$LayoutParams $r9, $r12;
        android.view.View $r17, $r21, $r23, $r24;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.view.WindowInsets;

        $r4 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        r2 = virtualinvoke $r4.<com.android.internal.policy.impl.PhoneWindow: android.view.WindowManager$LayoutParams getAttributes()>();

        $i3 = r2.<android.view.WindowManager$LayoutParams: int systemUiVisibility>;

        $i4 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int getWindowSystemUiVisibility()>();

        i0 = $i3 | $i4;

        $r5 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $z1 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: boolean access$1600(com.android.internal.policy.impl.PhoneWindow)>($r5);

        if $z1 != 0 goto label04;

        $z3 = staticinvoke <android.app.ActivityManager: boolean isHighEndGfx()>();

        if $z3 == 0 goto label04;

        if r1 == null goto label01;

        $i33 = virtualinvoke r1.<android.view.WindowInsets: int getStableInsetTop()>();

        $i34 = virtualinvoke r1.<android.view.WindowInsets: int getSystemWindowInsetTop()>();

        $i35 = staticinvoke <java.lang.Math: int min(int,int)>($i33, $i34);

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mLastTopInset> = $i35;

        $i29 = virtualinvoke r1.<android.view.WindowInsets: int getStableInsetBottom()>();

        $i30 = virtualinvoke r1.<android.view.WindowInsets: int getSystemWindowInsetBottom()>();

        $i31 = staticinvoke <java.lang.Math: int min(int,int)>($i29, $i30);

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mLastBottomInset> = $i31;

        $i32 = virtualinvoke r1.<android.view.WindowInsets: int getStableInsetRight()>();

        $i36 = virtualinvoke r1.<android.view.WindowInsets: int getSystemWindowInsetRight()>();

        $i37 = staticinvoke <java.lang.Math: int min(int,int)>($i32, $i36);

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mLastRightInset> = $i37;

     label01:
        $r17 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.View mStatusColorView>;

        $r16 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $i20 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: int access$1700(com.android.internal.policy.impl.PhoneWindow)>($r16);

        $i23 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mLastTopInset>;

        $r19 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r20 = virtualinvoke $r19.<com.android.internal.policy.impl.PhoneWindow: android.view.WindowManager$LayoutParams getAttributes()>();

        $i25 = $r20.<android.view.WindowManager$LayoutParams: int flags>;

        $i24 = $i25 & 1024;

        if $i24 == 0 goto label02;

        $z5 = 1;

        goto label03;

     label02:
        $z5 = 0;

     label03:
        $r23 = specialinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.View updateColorViewInt(android.view.View,int,int,int,int,int,int,java.lang.String,int,boolean)>($r17, i0, 4, 67108864, $i20, $i23, 48, "android:status:background", 16908335, $z5);

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.View mStatusColorView> = $r23;

        $r21 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.View mNavigationColorView>;

        $r22 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $i28 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: int access$1800(com.android.internal.policy.impl.PhoneWindow)>($r22);

        $i27 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mLastBottomInset>;

        $r24 = specialinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.View updateColorViewInt(android.view.View,int,int,int,int,int,int,java.lang.String,int,boolean)>($r21, i0, 2, 134217728, $i28, $i27, 80, "android:navigation:background", 16908336, 0);

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.View mNavigationColorView> = $r24;

     label04:
        $i5 = r2.<android.view.WindowManager$LayoutParams: int flags>;

        $i6 = $i5 & -2147483648;

        if $i6 == 0 goto label05;

        $i15 = i0 & 512;

        if $i15 != 0 goto label05;

        $i18 = i0 & 2;

        if $i18 != 0 goto label05;

        $z4 = 1;

        goto label06;

     label05:
        $z4 = 0;

     label06:
        z0 = $z4;

        if z0 == 0 goto label07;

        $i14 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mLastRightInset>;

        goto label08;

     label07:
        $i14 = 0;

     label08:
        i1 = $i14;

        if z0 == 0 goto label09;

        $i17 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mLastBottomInset>;

        goto label10;

     label09:
        $i17 = 0;

     label10:
        i2 = $i17;

        $r7 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r6 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: android.view.ViewGroup access$600(com.android.internal.policy.impl.PhoneWindow)>($r7);

        if $r6 == null goto label13;

        $r8 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r10 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: android.view.ViewGroup access$600(com.android.internal.policy.impl.PhoneWindow)>($r8);

        $r9 = virtualinvoke $r10.<android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $z2 = $r9 instanceof android.view.ViewGroup$MarginLayoutParams;

        if $z2 == 0 goto label13;

        $r11 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r13 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: android.view.ViewGroup access$600(com.android.internal.policy.impl.PhoneWindow)>($r11);

        $r12 = virtualinvoke $r13.<android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.view.ViewGroup$MarginLayoutParams) $r12;

        $i7 = r3.<android.view.ViewGroup$MarginLayoutParams: int rightMargin>;

        if $i7 != i1 goto label11;

        $i16 = r3.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin>;

        if $i16 == i2 goto label12;

     label11:
        r3.<android.view.ViewGroup$MarginLayoutParams: int rightMargin> = i1;

        r3.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin> = i2;

        $r14 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r15 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: android.view.ViewGroup access$600(com.android.internal.policy.impl.PhoneWindow)>($r14);

        virtualinvoke $r15.<android.view.ViewGroup: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r3);

        if r1 != null goto label12;

        virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: void requestApplyInsets()>();

     label12:
        if r1 == null goto label13;

        $i8 = virtualinvoke r1.<android.view.WindowInsets: int getSystemWindowInsetLeft()>();

        $i10 = virtualinvoke r1.<android.view.WindowInsets: int getSystemWindowInsetTop()>();

        $i9 = virtualinvoke r1.<android.view.WindowInsets: int getSystemWindowInsetRight()>();

        $i12 = $i9 - i1;

        $i13 = virtualinvoke r1.<android.view.WindowInsets: int getSystemWindowInsetBottom()>();

        $i11 = $i13 - i2;

        r1 = virtualinvoke r1.<android.view.WindowInsets: android.view.WindowInsets replaceSystemWindowInsets(int,int,int,int)>($i8, $i10, $i12, $i11);

     label13:
        if r1 == null goto label14;

        r1 = virtualinvoke r1.<android.view.WindowInsets: android.view.WindowInsets consumeStableInsets()>();

     label14:
        return r1;
    }

    private android.view.View updateColorViewInt(android.view.View, int, int, int, int, int, int, java.lang.String, int, boolean)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.View r1, $r5;
        int i0, i1, i2, i3, i4, i5, i6, $i8, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        java.lang.String r2;
        boolean z0, z1, $z2;
        byte b7, $b9;
        android.widget.FrameLayout$LayoutParams r3, $r6;
        android.view.ViewGroup$LayoutParams $r4;
        android.content.Context $r7;
        android.view.WindowManager$LayoutParams $r8, $r11;
        com.android.internal.policy.impl.PhoneWindow $r9, $r10;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        i4 := @parameter5: int;

        i5 := @parameter6: int;

        r2 := @parameter7: java.lang.String;

        i6 := @parameter8: int;

        z0 := @parameter9: boolean;

        if i4 <= 0 goto label1;

        $i10 = i0 & i1;

        if $i10 != 0 goto label1;

        if z0 != 0 goto label1;

        $r9 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r8 = virtualinvoke $r9.<com.android.internal.policy.impl.PhoneWindow: android.view.WindowManager$LayoutParams getAttributes()>();

        $i13 = $r8.<android.view.WindowManager$LayoutParams: int flags>;

        $i12 = $i13 & i2;

        if $i12 != 0 goto label1;

        $i14 = i3 & -16777216;

        if $i14 == 0 goto label1;

        $r10 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r11 = virtualinvoke $r10.<com.android.internal.policy.impl.PhoneWindow: android.view.WindowManager$LayoutParams getAttributes()>();

        $i15 = $r11.<android.view.WindowManager$LayoutParams: int flags>;

        $i16 = $i15 & -2147483648;

        if $i16 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z1 = $z2;

        if r1 != null goto label3;

        if z1 == 0 goto label7;

        $r5 = new android.view.View;

        $r7 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.content.Context mContext>;

        specialinvoke $r5.<android.view.View: void <init>(android.content.Context)>($r7);

        r1 = $r5;

        virtualinvoke r1.<android.view.View: void setBackgroundColor(int)>(i3);

        virtualinvoke r1.<android.view.View: void setTransitionName(java.lang.String)>(r2);

        virtualinvoke r1.<android.view.View: void setId(int)>(i6);

        $r6 = new android.widget.FrameLayout$LayoutParams;

        $i11 = 8388611 | i5;

        specialinvoke $r6.<android.widget.FrameLayout$LayoutParams: void <init>(int,int,int)>(-1, i4, $i11);

        virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>(r1, $r6);

        goto label7;

     label3:
        if z1 == 0 goto label4;

        $b9 = 0;

        goto label5;

     label4:
        $b9 = 4;

     label5:
        b7 = $b9;

        virtualinvoke r1.<android.view.View: void setVisibility(int)>(b7);

        if z1 == 0 goto label7;

        $r4 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.widget.FrameLayout$LayoutParams) $r4;

        $i8 = r3.<android.widget.FrameLayout$LayoutParams: int height>;

        if $i8 == i4 goto label6;

        r3.<android.widget.FrameLayout$LayoutParams: int height> = i4;

        virtualinvoke r1.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r3);

     label6:
        virtualinvoke r1.<android.view.View: void setBackgroundColor(int)>(i3);

     label7:
        return r1;
    }

    private android.view.WindowInsets updateStatusGuard(android.view.WindowInsets)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.WindowInsets r1;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, z7;
        android.view.ViewGroup$MarginLayoutParams r2;
        android.graphics.Rect r3, $r16, $r35;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        android.widget.FrameLayout$LayoutParams r4, $r31;
        com.android.internal.widget.ActionBarContextView $r5, $r8, $r10, $r11, $r14;
        android.view.View $r6, $r7, $r21, $r22, $r23, $r25, $r27, $r29, $r32, $r33;
        byte $b1;
        android.view.ViewGroup$LayoutParams $r9, $r12, $r24;
        com.android.internal.policy.impl.PhoneWindow $r13, $r15, $r17, $r20, $r34;
        android.view.ViewGroup $r19;
        android.content.Context $r26, $r30;
        android.content.res.Resources $r28;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.view.WindowInsets;

        z0 = 0;

        $r5 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.widget.ActionBarContextView mActionModeView>;

        if $r5 == null goto label14;

        $r8 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.widget.ActionBarContextView mActionModeView>;

        $r9 = virtualinvoke $r8.<com.android.internal.widget.ActionBarContextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $z2 = $r9 instanceof android.view.ViewGroup$MarginLayoutParams;

        if $z2 == 0 goto label14;

        $r10 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.widget.ActionBarContextView mActionModeView>;

        $r12 = virtualinvoke $r10.<com.android.internal.widget.ActionBarContextView: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.view.ViewGroup$MarginLayoutParams) $r12;

        z1 = 0;

        $r11 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.widget.ActionBarContextView mActionModeView>;

        $z3 = virtualinvoke $r11.<com.android.internal.widget.ActionBarContextView: boolean isShown()>();

        if $z3 == 0 goto label12;

        $r13 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r16 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: android.graphics.Rect access$1900(com.android.internal.policy.impl.PhoneWindow)>($r13);

        if $r16 != null goto label01;

        $r34 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r35 = new android.graphics.Rect;

        specialinvoke $r35.<android.graphics.Rect: void <init>()>();

        staticinvoke <com.android.internal.policy.impl.PhoneWindow: android.graphics.Rect access$1902(com.android.internal.policy.impl.PhoneWindow,android.graphics.Rect)>($r34, $r35);

     label01:
        $r15 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        r3 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: android.graphics.Rect access$1900(com.android.internal.policy.impl.PhoneWindow)>($r15);

        $r17 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r19 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: android.view.ViewGroup access$700(com.android.internal.policy.impl.PhoneWindow)>($r17);

        virtualinvoke $r19.<android.view.ViewGroup: android.view.WindowInsets computeSystemWindowInsets(android.view.WindowInsets,android.graphics.Rect)>(r1, r3);

        $i4 = r3.<android.graphics.Rect: int top>;

        if $i4 != 0 goto label02;

        $i13 = virtualinvoke r1.<android.view.WindowInsets: int getSystemWindowInsetTop()>();

        goto label03;

     label02:
        $i13 = 0;

     label03:
        i0 = $i13;

        $i3 = r2.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        if $i3 == i0 goto label05;

        z1 = 1;

        $i7 = virtualinvoke r1.<android.view.WindowInsets: int getSystemWindowInsetTop()>();

        r2.<android.view.ViewGroup$MarginLayoutParams: int topMargin> = $i7;

        $r22 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.View mStatusGuard>;

        if $r22 != null goto label04;

        $r25 = new android.view.View;

        $r26 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.content.Context mContext>;

        specialinvoke $r25.<android.view.View: void <init>(android.content.Context)>($r26);

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.View mStatusGuard> = $r25;

        $r29 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.View mStatusGuard>;

        $r30 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.content.Context mContext>;

        $r28 = virtualinvoke $r30.<android.content.Context: android.content.res.Resources getResources()>();

        $i11 = virtualinvoke $r28.<android.content.res.Resources: int getColor(int)>(17170482);

        virtualinvoke $r29.<android.view.View: void setBackgroundColor(int)>($i11);

        $r32 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.View mStatusGuard>;

        $r33 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.View mStatusColorView>;

        $i12 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int indexOfChild(android.view.View)>($r33);

        $r31 = new android.widget.FrameLayout$LayoutParams;

        $i14 = r2.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        specialinvoke $r31.<android.widget.FrameLayout$LayoutParams: void <init>(int,int,int)>(-1, $i14, 8388659);

        virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>($r32, $i12, $r31);

        goto label05;

     label04:
        $r23 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.View mStatusGuard>;

        $r24 = virtualinvoke $r23.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.widget.FrameLayout$LayoutParams) $r24;

        $i9 = r4.<android.widget.FrameLayout$LayoutParams: int height>;

        $i8 = r2.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        if $i9 == $i8 goto label05;

        $i10 = r2.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        r4.<android.widget.FrameLayout$LayoutParams: int height> = $i10;

        $r27 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.View mStatusGuard>;

        virtualinvoke $r27.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r4);

     label05:
        $r21 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.View mStatusGuard>;

        if $r21 == null goto label06;

        $z6 = 1;

        goto label07;

     label06:
        $z6 = 0;

     label07:
        z0 = $z6;

        $r20 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $i5 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: int access$2000(com.android.internal.policy.impl.PhoneWindow)>($r20);

        $i6 = $i5 & 1024;

        if $i6 != 0 goto label08;

        $z5 = 1;

        goto label09;

     label08:
        $z5 = 0;

     label09:
        z7 = $z5;

        if z7 == 0 goto label10;

        if z0 == 0 goto label10;

        $z4 = 1;

        goto label11;

     label10:
        $z4 = 0;

     label11:
        r1 = virtualinvoke r1.<android.view.WindowInsets: android.view.WindowInsets consumeSystemWindowInsets(boolean,boolean,boolean,boolean)>(0, $z4, 0, 0);

        goto label13;

     label12:
        $i2 = r2.<android.view.ViewGroup$MarginLayoutParams: int topMargin>;

        if $i2 == 0 goto label13;

        z1 = 1;

        r2.<android.view.ViewGroup$MarginLayoutParams: int topMargin> = 0;

     label13:
        if z1 == 0 goto label14;

        $r14 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.widget.ActionBarContextView mActionModeView>;

        virtualinvoke $r14.<com.android.internal.widget.ActionBarContextView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r2);

     label14:
        $r6 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.View mStatusGuard>;

        if $r6 == null goto label17;

        $r7 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.View mStatusGuard>;

        if z0 == 0 goto label15;

        $b1 = 0;

        goto label16;

     label15:
        $b1 = 8;

     label16:
        virtualinvoke $r7.<android.view.View: void setVisibility(int)>($b1);

     label17:
        return r1;
    }

    private void updateNavigationGuard(android.view.WindowInsets)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.WindowInsets r1;
        android.view.ViewGroup$MarginLayoutParams r2;
        com.android.internal.policy.impl.PhoneWindow $r3, $r5, $r19, $r22, $r26;
        android.view.WindowManager$LayoutParams $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.view.ViewGroup $r6, $r21, $r24, $r25;
        android.view.View $r7, $r8, $r10, $r11, $r15, $r16, $r17;
        android.view.ViewGroup$LayoutParams $r9, $r20, $r23;
        android.content.Context $r12, $r13;
        android.content.res.Resources $r14;
        android.widget.FrameLayout$LayoutParams $r18, r27;
        boolean $z0;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: android.view.WindowInsets;

        $r3 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r4 = virtualinvoke $r3.<com.android.internal.policy.impl.PhoneWindow: android.view.WindowManager$LayoutParams getAttributes()>();

        $i0 = $r4.<android.view.WindowManager$LayoutParams: int type>;

        if $i0 != 2011 goto label3;

        $r5 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r6 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: android.view.ViewGroup access$700(com.android.internal.policy.impl.PhoneWindow)>($r5);

        if $r6 == null goto label1;

        $r19 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r21 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: android.view.ViewGroup access$700(com.android.internal.policy.impl.PhoneWindow)>($r19);

        $r20 = virtualinvoke $r21.<android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $z0 = $r20 instanceof android.view.ViewGroup$MarginLayoutParams;

        if $z0 == 0 goto label1;

        $r22 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r24 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: android.view.ViewGroup access$700(com.android.internal.policy.impl.PhoneWindow)>($r22);

        $r23 = virtualinvoke $r24.<android.view.ViewGroup: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.view.ViewGroup$MarginLayoutParams) $r23;

        $i5 = virtualinvoke r1.<android.view.WindowInsets: int getSystemWindowInsetBottom()>();

        r2.<android.view.ViewGroup$MarginLayoutParams: int bottomMargin> = $i5;

        $r26 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r25 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: android.view.ViewGroup access$700(com.android.internal.policy.impl.PhoneWindow)>($r26);

        virtualinvoke $r25.<android.view.ViewGroup: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r2);

     label1:
        $r7 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.View mNavigationGuard>;

        if $r7 != null goto label2;

        $r11 = new android.view.View;

        $r12 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.content.Context mContext>;

        specialinvoke $r11.<android.view.View: void <init>(android.content.Context)>($r12);

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.View mNavigationGuard> = $r11;

        $r15 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.View mNavigationGuard>;

        $r13 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.content.Context mContext>;

        $r14 = virtualinvoke $r13.<android.content.Context: android.content.res.Resources getResources()>();

        $i2 = virtualinvoke $r14.<android.content.res.Resources: int getColor(int)>(17170482);

        virtualinvoke $r15.<android.view.View: void setBackgroundColor(int)>($i2);

        $r17 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.View mNavigationGuard>;

        $r16 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.View mNavigationColorView>;

        $i3 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int indexOfChild(android.view.View)>($r16);

        $r18 = new android.widget.FrameLayout$LayoutParams;

        $i4 = virtualinvoke r1.<android.view.WindowInsets: int getSystemWindowInsetBottom()>();

        specialinvoke $r18.<android.widget.FrameLayout$LayoutParams: void <init>(int,int,int)>(-1, $i4, 8388691);

        virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>($r17, $i3, $r18);

        goto label3;

     label2:
        $r8 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.View mNavigationGuard>;

        $r9 = virtualinvoke $r8.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r27 = (android.widget.FrameLayout$LayoutParams) $r9;

        $i1 = virtualinvoke r1.<android.view.WindowInsets: int getSystemWindowInsetBottom()>();

        r27.<android.widget.FrameLayout$LayoutParams: int height> = $i1;

        $r10 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.View mNavigationGuard>;

        virtualinvoke $r10.<android.view.View: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r27);

     label3:
        return;
    }

    private void drawableChanged()
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        android.graphics.drawable.Drawable r1, r2;
        boolean $z0;
        android.graphics.Rect $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r14, $r15;
        com.android.internal.policy.impl.PhoneWindow $r12;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        $z0 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: boolean mChanging>;

        if $z0 == 0 goto label01;

        return;

     label01:
        $r3 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFramePadding>;

        $i4 = $r3.<android.graphics.Rect: int left>;

        $r4 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mBackgroundPadding>;

        $i3 = $r4.<android.graphics.Rect: int left>;

        $i14 = $i4 + $i3;

        $r5 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFramePadding>;

        $i6 = $r5.<android.graphics.Rect: int top>;

        $r6 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mBackgroundPadding>;

        $i5 = $r6.<android.graphics.Rect: int top>;

        $i12 = $i6 + $i5;

        $r7 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFramePadding>;

        $i8 = $r7.<android.graphics.Rect: int right>;

        $r8 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mBackgroundPadding>;

        $i7 = $r8.<android.graphics.Rect: int right>;

        $i13 = $i8 + $i7;

        $r9 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFramePadding>;

        $i11 = $r9.<android.graphics.Rect: int bottom>;

        $r10 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mBackgroundPadding>;

        $i9 = $r10.<android.graphics.Rect: int bottom>;

        $i10 = $i11 + $i9;

        virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: void setPadding(int,int,int,int)>($i14, $i12, $i13, $i10);

        virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: void requestLayout()>();

        virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: void invalidate()>();

        i0 = -1;

        r1 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.drawable.Drawable getBackground()>();

        r2 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.drawable.Drawable getForeground()>();

        if r1 == null goto label09;

        if r2 != null goto label02;

        i0 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getOpacity()>();

        goto label09;

     label02:
        $r11 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFramePadding>;

        $i17 = $r11.<android.graphics.Rect: int left>;

        if $i17 > 0 goto label08;

        $r14 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFramePadding>;

        $i16 = $r14.<android.graphics.Rect: int top>;

        if $i16 > 0 goto label08;

        $r13 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFramePadding>;

        $i19 = $r13.<android.graphics.Rect: int right>;

        if $i19 > 0 goto label08;

        $r15 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.Rect mFramePadding>;

        $i18 = $r15.<android.graphics.Rect: int bottom>;

        if $i18 > 0 goto label08;

        i1 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getOpacity()>();

        i2 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getOpacity()>();

        if i1 == -1 goto label03;

        if i2 != -1 goto label04;

     label03:
        i0 = -1;

        goto label07;

     label04:
        if i1 != 0 goto label05;

        i0 = i2;

        goto label07;

     label05:
        if i2 != 0 goto label06;

        i0 = i1;

        goto label07;

     label06:
        i0 = staticinvoke <android.graphics.drawable.Drawable: int resolveOpacity(int,int)>(i1, i2);

     label07:
        goto label09;

     label08:
        i0 = -3;

     label09:
        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mDefaultOpacity> = i0;

        $i15 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i15 >= 0 goto label10;

        $r12 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        staticinvoke <com.android.internal.policy.impl.PhoneWindow: void access$2100(com.android.internal.policy.impl.PhoneWindow,int)>($r12, i0);

     label10:
        return;
    }

    public void onWindowFocusChanged(boolean)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        boolean z0, $z1;
        android.view.Window$Callback r1;
        com.android.internal.policy.impl.PhoneWindow $r2, $r3, $r4, $r5;
        int $i0, $i1;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.widget.FrameLayout: void onWindowFocusChanged(boolean)>(z0);

        if z0 != 0 goto label1;

        $r4 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $i1 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: int access$800(com.android.internal.policy.impl.PhoneWindow)>($r4);

        if $i1 == 0 goto label1;

        $r5 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        virtualinvoke $r5.<com.android.internal.policy.impl.PhoneWindow: void closePanel(int)>(0);

     label1:
        $r2 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        r1 = virtualinvoke $r2.<com.android.internal.policy.impl.PhoneWindow: android.view.Window$Callback getCallback()>();

        if r1 == null goto label2;

        $r3 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $z1 = virtualinvoke $r3.<com.android.internal.policy.impl.PhoneWindow: boolean isDestroyed()>();

        if $z1 != 0 goto label2;

        $i0 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i0 >= 0 goto label2;

        interfaceinvoke r1.<android.view.Window$Callback: void onWindowFocusChanged(boolean)>(z0);

     label2:
        return;
    }

    void updateWindowResizeState()
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.graphics.drawable.Drawable r1;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 = virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.graphics.drawable.Drawable getBackground()>();

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getOpacity()>();

        if $i0 == -1 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: void hackTurnOffWindowResizeAnim(boolean)>($z0);

        return;
    }

    protected void onAttachedToWindow()
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.Window$Callback r1;
        com.android.internal.policy.impl.PhoneWindow $r2, $r3, $r4;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        specialinvoke r0.<android.widget.FrameLayout: void onAttachedToWindow()>();

        virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: void updateWindowResizeState()>();

        $r2 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        r1 = virtualinvoke $r2.<com.android.internal.policy.impl.PhoneWindow: android.view.Window$Callback getCallback()>();

        if r1 == null goto label1;

        $r4 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $z0 = virtualinvoke $r4.<com.android.internal.policy.impl.PhoneWindow: boolean isDestroyed()>();

        if $z0 != 0 goto label1;

        $i1 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i1 >= 0 goto label1;

        interfaceinvoke r1.<android.view.Window$Callback: void onAttachedToWindow()>();

     label1:
        $i0 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i0 != -1 goto label2;

        $r3 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        staticinvoke <com.android.internal.policy.impl.PhoneWindow: void access$2200(com.android.internal.policy.impl.PhoneWindow)>($r3);

     label2:
        return;
    }

    protected void onDetachedFromWindow()
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.Window$Callback r1;
        com.android.internal.policy.impl.PhoneWindow$PanelFeatureState r2;
        com.android.internal.policy.impl.PhoneWindow $r3, $r4, $r7, $r14;
        com.android.internal.widget.DecorContentParent $r5, $r13;
        android.widget.PopupWindow $r6, $r11, $r12;
        com.android.internal.view.menu.MenuBuilder $r8, $r9;
        int $i0, $i1;
        java.lang.Runnable $r10;
        boolean $z1;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        specialinvoke r0.<android.widget.FrameLayout: void onDetachedFromWindow()>();

        $r3 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        r1 = virtualinvoke $r3.<com.android.internal.policy.impl.PhoneWindow: android.view.Window$Callback getCallback()>();

        if r1 == null goto label1;

        $i1 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i1 >= 0 goto label1;

        interfaceinvoke r1.<android.view.Window$Callback: void onDetachedFromWindow()>();

     label1:
        $r4 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r5 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.widget.DecorContentParent access$2300(com.android.internal.policy.impl.PhoneWindow)>($r4);

        if $r5 == null goto label2;

        $r14 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r13 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.widget.DecorContentParent access$2300(com.android.internal.policy.impl.PhoneWindow)>($r14);

        interfaceinvoke $r13.<com.android.internal.widget.DecorContentParent: void dismissPopups()>();

     label2:
        $r6 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.widget.PopupWindow mActionModePopup>;

        if $r6 == null goto label4;

        $r10 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: java.lang.Runnable mShowActionModePopup>;

        virtualinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: boolean removeCallbacks(java.lang.Runnable)>($r10);

        $r11 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.widget.PopupWindow mActionModePopup>;

        $z1 = virtualinvoke $r11.<android.widget.PopupWindow: boolean isShowing()>();

        if $z1 == 0 goto label3;

        $r12 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.widget.PopupWindow mActionModePopup>;

        virtualinvoke $r12.<android.widget.PopupWindow: void dismiss()>();

     label3:
        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.widget.PopupWindow mActionModePopup> = null;

     label4:
        $r7 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        r2 = staticinvoke <com.android.internal.policy.impl.PhoneWindow: com.android.internal.policy.impl.PhoneWindow$PanelFeatureState access$1100(com.android.internal.policy.impl.PhoneWindow,int,boolean)>($r7, 0, 0);

        if r2 == null goto label5;

        $r8 = r2.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState: com.android.internal.view.menu.MenuBuilder menu>;

        if $r8 == null goto label5;

        $i0 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i0 >= 0 goto label5;

        $r9 = r2.<com.android.internal.policy.impl.PhoneWindow$PanelFeatureState: com.android.internal.view.menu.MenuBuilder menu>;

        virtualinvoke $r9.<com.android.internal.view.menu.MenuBuilder: void close()>();

     label5:
        return;
    }

    public void onCloseSystemDialogs(java.lang.String)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        java.lang.String r1;
        int $i0;
        com.android.internal.policy.impl.PhoneWindow $r2;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter0: java.lang.String;

        $i0 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i0 < 0 goto label1;

        $r2 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        virtualinvoke $r2.<com.android.internal.policy.impl.PhoneWindow: void closeAllPanels()>();

     label1:
        return;
    }

    public android.view.SurfaceHolder$Callback2 willYouTakeTheSurface()
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        int $i0;
        com.android.internal.policy.impl.PhoneWindow $r1;
        android.view.SurfaceHolder$Callback2 $r2;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        $i0 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i0 >= 0 goto label1;

        $r1 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r2 = $r1.<com.android.internal.policy.impl.PhoneWindow: android.view.SurfaceHolder$Callback2 mTakeSurfaceCallback>;

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public android.view.InputQueue$Callback willYouTakeTheInputQueue()
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        int $i0;
        com.android.internal.policy.impl.PhoneWindow $r1;
        android.view.InputQueue$Callback $r2;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        $i0 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: int mFeatureId>;

        if $i0 >= 0 goto label1;

        $r1 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        $r2 = $r1.<com.android.internal.policy.impl.PhoneWindow: android.view.InputQueue$Callback mTakeInputQueueCallback>;

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public void setSurfaceType(int)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        int i0;
        com.android.internal.policy.impl.PhoneWindow $r1;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        virtualinvoke $r1.<com.android.internal.policy.impl.PhoneWindow: void setType(int)>(i0);

        return;
    }

    public void setSurfaceFormat(int)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        int i0;
        com.android.internal.policy.impl.PhoneWindow $r1;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        virtualinvoke $r1.<com.android.internal.policy.impl.PhoneWindow: void setFormat(int)>(i0);

        return;
    }

    public void setSurfaceKeepScreenOn(boolean)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        boolean z0;
        com.android.internal.policy.impl.PhoneWindow $r1, $r2;

        r0 := @this: com.android.internal.policy.impl.PhoneWindow$DecorView;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r2 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        virtualinvoke $r2.<com.android.internal.policy.impl.PhoneWindow: void addFlags(int)>(128);

        goto label2;

     label1:
        $r1 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.policy.impl.PhoneWindow this$0>;

        virtualinvoke $r1.<com.android.internal.policy.impl.PhoneWindow: void clearFlags(int)>(128);

     label2:
        return;
    }

    static android.view.ActionMode access$300(com.android.internal.policy.impl.PhoneWindow$DecorView)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.ActionMode $r1;

        r0 := @parameter0: com.android.internal.policy.impl.PhoneWindow$DecorView;

        $r1 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.ActionMode mActionMode>;

        return $r1;
    }

    static com.android.internal.widget.ActionBarContextView access$1400(com.android.internal.policy.impl.PhoneWindow$DecorView)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        com.android.internal.widget.ActionBarContextView $r1;

        r0 := @parameter0: com.android.internal.policy.impl.PhoneWindow$DecorView;

        $r1 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: com.android.internal.widget.ActionBarContextView mActionModeView>;

        return $r1;
    }

    static android.widget.PopupWindow access$1500(com.android.internal.policy.impl.PhoneWindow$DecorView)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.widget.PopupWindow $r1;

        r0 := @parameter0: com.android.internal.policy.impl.PhoneWindow$DecorView;

        $r1 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.widget.PopupWindow mActionModePopup>;

        return $r1;
    }

    static java.lang.Runnable access$2400(com.android.internal.policy.impl.PhoneWindow$DecorView)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        java.lang.Runnable $r1;

        r0 := @parameter0: com.android.internal.policy.impl.PhoneWindow$DecorView;

        $r1 = r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: java.lang.Runnable mShowActionModePopup>;

        return $r1;
    }

    static android.view.ActionMode access$302(com.android.internal.policy.impl.PhoneWindow$DecorView, android.view.ActionMode)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.ActionMode r1;

        r0 := @parameter0: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter1: android.view.ActionMode;

        r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.ActionMode mActionMode> = r1;

        return r1;
    }

    static android.view.WindowInsets access$2500(com.android.internal.policy.impl.PhoneWindow$DecorView, android.view.WindowInsets)
    {
        com.android.internal.policy.impl.PhoneWindow$DecorView r0;
        android.view.WindowInsets r1, $r2;

        r0 := @parameter0: com.android.internal.policy.impl.PhoneWindow$DecorView;

        r1 := @parameter1: android.view.WindowInsets;

        $r2 = specialinvoke r0.<com.android.internal.policy.impl.PhoneWindow$DecorView: android.view.WindowInsets updateColorViews(android.view.WindowInsets)>(r1);

        return $r2;
    }
}
