class com.android.internal.policy.impl.PhoneWindowManager$14 extends java.lang.Object implements android.content.ServiceConnection
{
    final com.android.internal.policy.impl.PhoneWindowManager this$0;

    void <init>(com.android.internal.policy.impl.PhoneWindowManager)
    {
        com.android.internal.policy.impl.PhoneWindowManager$14 r0;
        com.android.internal.policy.impl.PhoneWindowManager r1;

        r0 := @this: com.android.internal.policy.impl.PhoneWindowManager$14;

        r1 := @parameter0: com.android.internal.policy.impl.PhoneWindowManager;

        r0.<com.android.internal.policy.impl.PhoneWindowManager$14: com.android.internal.policy.impl.PhoneWindowManager this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onServiceConnected(android.content.ComponentName, android.os.IBinder)
    {
        com.android.internal.policy.impl.PhoneWindowManager$14 r0, r6;
        android.content.ComponentName r1;
        android.os.IBinder r2;
        java.lang.Object r3, $r11;
        android.os.Messenger r4, $r14, $r19;
        android.os.Message r5;
        com.android.internal.policy.impl.PhoneWindowManager$14$1 r7, $r16;
        java.lang.Throwable r9, $r29;
        com.android.internal.policy.impl.PhoneWindowManager $r10, $r12, $r15, $r21, $r23, $r24, $r27;
        android.content.ServiceConnection $r13;
        android.os.Looper $r17;
        android.os.Handler $r18;
        android.view.WindowManagerPolicy$WindowState $r20, $r22, $r25, $r26;
        boolean $z0, $z1;
        android.os.RemoteException $r28;

        r0 := @this: com.android.internal.policy.impl.PhoneWindowManager$14;

        r1 := @parameter0: android.content.ComponentName;

        r2 := @parameter1: android.os.IBinder;

        $r10 = r0.<com.android.internal.policy.impl.PhoneWindowManager$14: com.android.internal.policy.impl.PhoneWindowManager this$0>;

        $r11 = $r10.<com.android.internal.policy.impl.PhoneWindowManager: java.lang.Object mScreenshotLock>;

        r3 = $r11;

        entermonitor $r11;

     label01:
        $r12 = r0.<com.android.internal.policy.impl.PhoneWindowManager$14: com.android.internal.policy.impl.PhoneWindowManager this$0>;

        $r13 = $r12.<com.android.internal.policy.impl.PhoneWindowManager: android.content.ServiceConnection mScreenshotConnection>;

        if $r13 == r0 goto label03;

        exitmonitor r3;

     label02:
        return;

     label03:
        $r14 = new android.os.Messenger;

        specialinvoke $r14.<android.os.Messenger: void <init>(android.os.IBinder)>(r2);

        r4 = $r14;

        r5 = staticinvoke <android.os.Message: android.os.Message obtain(android.os.Handler,int)>(null, 1);

        r6 = r0;

        $r16 = new com.android.internal.policy.impl.PhoneWindowManager$14$1;

        $r15 = r0.<com.android.internal.policy.impl.PhoneWindowManager$14: com.android.internal.policy.impl.PhoneWindowManager this$0>;

        $r18 = $r15.<com.android.internal.policy.impl.PhoneWindowManager: android.os.Handler mHandler>;

        $r17 = virtualinvoke $r18.<android.os.Handler: android.os.Looper getLooper()>();

        specialinvoke $r16.<com.android.internal.policy.impl.PhoneWindowManager$14$1: void <init>(com.android.internal.policy.impl.PhoneWindowManager$14,android.os.Looper,android.content.ServiceConnection)>(r0, $r17, r6);

        r7 = $r16;

        $r19 = new android.os.Messenger;

        specialinvoke $r19.<android.os.Messenger: void <init>(android.os.Handler)>(r7);

        r5.<android.os.Message: android.os.Messenger replyTo> = $r19;

        r5.<android.os.Message: int arg2> = 0;

        r5.<android.os.Message: int arg1> = 0;

        $r21 = r0.<com.android.internal.policy.impl.PhoneWindowManager$14: com.android.internal.policy.impl.PhoneWindowManager this$0>;

        $r20 = $r21.<com.android.internal.policy.impl.PhoneWindowManager: android.view.WindowManagerPolicy$WindowState mStatusBar>;

        if $r20 == null goto label04;

        $r27 = r0.<com.android.internal.policy.impl.PhoneWindowManager$14: com.android.internal.policy.impl.PhoneWindowManager this$0>;

        $r26 = $r27.<com.android.internal.policy.impl.PhoneWindowManager: android.view.WindowManagerPolicy$WindowState mStatusBar>;

        $z1 = interfaceinvoke $r26.<android.view.WindowManagerPolicy$WindowState: boolean isVisibleLw()>();

        if $z1 == 0 goto label04;

        r5.<android.os.Message: int arg1> = 1;

     label04:
        $r23 = r0.<com.android.internal.policy.impl.PhoneWindowManager$14: com.android.internal.policy.impl.PhoneWindowManager this$0>;

        $r22 = $r23.<com.android.internal.policy.impl.PhoneWindowManager: android.view.WindowManagerPolicy$WindowState mNavigationBar>;

        if $r22 == null goto label05;

        $r24 = r0.<com.android.internal.policy.impl.PhoneWindowManager$14: com.android.internal.policy.impl.PhoneWindowManager this$0>;

        $r25 = $r24.<com.android.internal.policy.impl.PhoneWindowManager: android.view.WindowManagerPolicy$WindowState mNavigationBar>;

        $z0 = interfaceinvoke $r25.<android.view.WindowManagerPolicy$WindowState: boolean isVisibleLw()>();

        if $z0 == 0 goto label05;

        r5.<android.os.Message: int arg2> = 1;

     label05:
        virtualinvoke r4.<android.os.Messenger: void send(android.os.Message)>(r5);

     label06:
        goto label08;

     label07:
        $r28 := @caughtexception;

     label08:
        exitmonitor r3;

     label09:
        goto label12;

     label10:
        $r29 := @caughtexception;

        r9 = $r29;

        exitmonitor r3;

     label11:
        throw r9;

     label12:
        return;

        catch android.os.RemoteException from label05 to label06 with label07;
        catch java.lang.Throwable from label01 to label02 with label10;
        catch java.lang.Throwable from label03 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
    }

    public void onServiceDisconnected(android.content.ComponentName)
    {
        com.android.internal.policy.impl.PhoneWindowManager$14 r0;
        android.content.ComponentName r1;

        r0 := @this: com.android.internal.policy.impl.PhoneWindowManager$14;

        r1 := @parameter0: android.content.ComponentName;

        return;
    }
}
