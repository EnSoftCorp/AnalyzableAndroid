public class com.android.internal.policy.impl.PolicyControl extends java.lang.Object
{
    private static java.lang.String TAG;
    private static boolean DEBUG;
    private static final java.lang.String NAME_IMMERSIVE_FULL;
    private static final java.lang.String NAME_IMMERSIVE_STATUS;
    private static final java.lang.String NAME_IMMERSIVE_NAVIGATION;
    private static final java.lang.String NAME_IMMERSIVE_PRECONFIRMATIONS;
    private static java.lang.String sSettingValue;
    private static com.android.internal.policy.impl.PolicyControl$Filter sImmersivePreconfirmationsFilter;
    private static com.android.internal.policy.impl.PolicyControl$Filter sImmersiveStatusFilter;
    private static com.android.internal.policy.impl.PolicyControl$Filter sImmersiveNavigationFilter;

    public void <init>()
    {
        com.android.internal.policy.impl.PolicyControl r0;

        r0 := @this: com.android.internal.policy.impl.PolicyControl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int getSystemUiVisibility(android.view.WindowManagerPolicy$WindowState, android.view.WindowManager$LayoutParams)
    {
        android.view.WindowManagerPolicy$WindowState r0;
        android.view.WindowManager$LayoutParams r1, $r2, r7;
        int i0, $i1, i2, i3;
        com.android.internal.policy.impl.PolicyControl$Filter $r3, $r4, $r5, $r6;
        boolean $z0, $z1;

        r0 := @parameter0: android.view.WindowManagerPolicy$WindowState;

        r1 := @parameter1: android.view.WindowManager$LayoutParams;

        if r1 == null goto label1;

        $r2 = r1;

        goto label2;

     label1:
        $r2 = interfaceinvoke r0.<android.view.WindowManagerPolicy$WindowState: android.view.WindowManager$LayoutParams getAttrs()>();

     label2:
        r7 = $r2;

        if r0 == null goto label3;

        $i1 = interfaceinvoke r0.<android.view.WindowManagerPolicy$WindowState: int getSystemUiVisibility()>();

        goto label4;

     label3:
        $i1 = r7.<android.view.WindowManager$LayoutParams: int systemUiVisibility>;

     label4:
        i0 = $i1;

        $r3 = <com.android.internal.policy.impl.PolicyControl: com.android.internal.policy.impl.PolicyControl$Filter sImmersiveStatusFilter>;

        if $r3 == null goto label5;

        $r6 = <com.android.internal.policy.impl.PolicyControl: com.android.internal.policy.impl.PolicyControl$Filter sImmersiveStatusFilter>;

        $z1 = virtualinvoke $r6.<com.android.internal.policy.impl.PolicyControl$Filter: boolean matches(android.view.WindowManager$LayoutParams)>(r7);

        if $z1 == 0 goto label5;

        i2 = i0 | 5124;

        i0 = i2 & -1073742081;

     label5:
        $r4 = <com.android.internal.policy.impl.PolicyControl: com.android.internal.policy.impl.PolicyControl$Filter sImmersiveNavigationFilter>;

        if $r4 == null goto label6;

        $r5 = <com.android.internal.policy.impl.PolicyControl: com.android.internal.policy.impl.PolicyControl$Filter sImmersiveNavigationFilter>;

        $z0 = virtualinvoke $r5.<com.android.internal.policy.impl.PolicyControl$Filter: boolean matches(android.view.WindowManager$LayoutParams)>(r7);

        if $z0 == 0 goto label6;

        i3 = i0 | 4610;

        i0 = i3 & 2147483391;

     label6:
        return i0;
    }

    public static int getWindowFlags(android.view.WindowManagerPolicy$WindowState, android.view.WindowManager$LayoutParams)
    {
        android.view.WindowManagerPolicy$WindowState r0;
        android.view.WindowManager$LayoutParams r1, $r2, r7;
        int i0, i1;
        com.android.internal.policy.impl.PolicyControl$Filter $r3, $r4, $r5, $r6;
        boolean $z0, $z1;

        r0 := @parameter0: android.view.WindowManagerPolicy$WindowState;

        r1 := @parameter1: android.view.WindowManager$LayoutParams;

        if r1 == null goto label1;

        $r2 = r1;

        goto label2;

     label1:
        $r2 = interfaceinvoke r0.<android.view.WindowManagerPolicy$WindowState: android.view.WindowManager$LayoutParams getAttrs()>();

     label2:
        r7 = $r2;

        i0 = r7.<android.view.WindowManager$LayoutParams: int flags>;

        $r3 = <com.android.internal.policy.impl.PolicyControl: com.android.internal.policy.impl.PolicyControl$Filter sImmersiveStatusFilter>;

        if $r3 == null goto label3;

        $r6 = <com.android.internal.policy.impl.PolicyControl: com.android.internal.policy.impl.PolicyControl$Filter sImmersiveStatusFilter>;

        $z1 = virtualinvoke $r6.<com.android.internal.policy.impl.PolicyControl$Filter: boolean matches(android.view.WindowManager$LayoutParams)>(r7);

        if $z1 == 0 goto label3;

        i1 = i0 | 1024;

        i0 = i1 & -67110913;

     label3:
        $r4 = <com.android.internal.policy.impl.PolicyControl: com.android.internal.policy.impl.PolicyControl$Filter sImmersiveNavigationFilter>;

        if $r4 == null goto label4;

        $r5 = <com.android.internal.policy.impl.PolicyControl: com.android.internal.policy.impl.PolicyControl$Filter sImmersiveNavigationFilter>;

        $z0 = virtualinvoke $r5.<com.android.internal.policy.impl.PolicyControl$Filter: boolean matches(android.view.WindowManager$LayoutParams)>(r7);

        if $z0 == 0 goto label4;

        i0 = i0 & -134217729;

     label4:
        return i0;
    }

    public static int adjustClearableFlags(android.view.WindowManagerPolicy$WindowState, int)
    {
        android.view.WindowManagerPolicy$WindowState r0;
        int i0;
        android.view.WindowManager$LayoutParams r1, $r4;
        com.android.internal.policy.impl.PolicyControl$Filter $r2, $r3;
        boolean $z0;

        r0 := @parameter0: android.view.WindowManagerPolicy$WindowState;

        i0 := @parameter1: int;

        if r0 == null goto label1;

        $r4 = interfaceinvoke r0.<android.view.WindowManagerPolicy$WindowState: android.view.WindowManager$LayoutParams getAttrs()>();

        goto label2;

     label1:
        $r4 = null;

     label2:
        r1 = $r4;

        $r2 = <com.android.internal.policy.impl.PolicyControl: com.android.internal.policy.impl.PolicyControl$Filter sImmersiveStatusFilter>;

        if $r2 == null goto label3;

        $r3 = <com.android.internal.policy.impl.PolicyControl: com.android.internal.policy.impl.PolicyControl$Filter sImmersiveStatusFilter>;

        $z0 = virtualinvoke $r3.<com.android.internal.policy.impl.PolicyControl$Filter: boolean matches(android.view.WindowManager$LayoutParams)>(r1);

        if $z0 == 0 goto label3;

        i0 = i0 & -5;

     label3:
        return i0;
    }

    public static boolean disableImmersiveConfirmation(java.lang.String)
    {
        java.lang.String r0;
        com.android.internal.policy.impl.PolicyControl$Filter $r1, $r2;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.android.internal.policy.impl.PolicyControl: com.android.internal.policy.impl.PolicyControl$Filter sImmersivePreconfirmationsFilter>;

        if $r1 == null goto label1;

        $r2 = <com.android.internal.policy.impl.PolicyControl: com.android.internal.policy.impl.PolicyControl$Filter sImmersivePreconfirmationsFilter>;

        $z2 = virtualinvoke $r2.<com.android.internal.policy.impl.PolicyControl$Filter: boolean matches(java.lang.String)>(r0);

        if $z2 != 0 goto label2;

     label1:
        $z0 = staticinvoke <android.app.ActivityManager: boolean isRunningInTestHarness()>();

        if $z0 == 0 goto label3;

     label2:
        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    public static void reloadFromSetting(android.content.Context)
    {
        android.content.Context r0;
        java.lang.String r1, $r4, $r5, $r6, $r9, $r12;
        java.lang.Throwable r2, $r7;
        boolean $z0, $z1;
        android.content.ContentResolver $r3;
        java.lang.StringBuilder $r8, $r10, $r11;

        r0 := @parameter0: android.content.Context;

        $z0 = <com.android.internal.policy.impl.PolicyControl: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r6 = <com.android.internal.policy.impl.PolicyControl: java.lang.String TAG>;

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>($r6, "reloadFromSetting()");

     label1:
        r1 = null;

     label2:
        $r3 = virtualinvoke r0.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r1 = staticinvoke <android.provider.Settings$Global: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>($r3, "policy_control", -2);

        $r4 = <com.android.internal.policy.impl.PolicyControl: java.lang.String sSettingValue>;

        if $r4 == null goto label4;

        $r5 = <com.android.internal.policy.impl.PolicyControl: java.lang.String sSettingValue>;

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 == 0 goto label4;

     label3:
        return;

     label4:
        staticinvoke <com.android.internal.policy.impl.PolicyControl: void setFilters(java.lang.String)>(r1);

        <com.android.internal.policy.impl.PolicyControl: java.lang.String sSettingValue> = r1;

     label5:
        goto label7;

     label6:
        $r7 := @caughtexception;

        r2 = $r7;

        $r9 = <com.android.internal.policy.impl.PolicyControl: java.lang.String TAG>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error loading policy control, value=");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>($r9, $r12, r2);

     label7:
        return;

        catch java.lang.Throwable from label2 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
    }

    public static void dump(java.lang.String, java.io.PrintWriter)
    {
        java.lang.String r0;
        java.io.PrintWriter r1;
        com.android.internal.policy.impl.PolicyControl$Filter $r2, $r3, $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.io.PrintWriter;

        $r2 = <com.android.internal.policy.impl.PolicyControl: com.android.internal.policy.impl.PolicyControl$Filter sImmersiveStatusFilter>;

        staticinvoke <com.android.internal.policy.impl.PolicyControl: void dump(java.lang.String,com.android.internal.policy.impl.PolicyControl$Filter,java.lang.String,java.io.PrintWriter)>("sImmersiveStatusFilter", $r2, r0, r1);

        $r3 = <com.android.internal.policy.impl.PolicyControl: com.android.internal.policy.impl.PolicyControl$Filter sImmersiveNavigationFilter>;

        staticinvoke <com.android.internal.policy.impl.PolicyControl: void dump(java.lang.String,com.android.internal.policy.impl.PolicyControl$Filter,java.lang.String,java.io.PrintWriter)>("sImmersiveNavigationFilter", $r3, r0, r1);

        $r4 = <com.android.internal.policy.impl.PolicyControl: com.android.internal.policy.impl.PolicyControl$Filter sImmersivePreconfirmationsFilter>;

        staticinvoke <com.android.internal.policy.impl.PolicyControl: void dump(java.lang.String,com.android.internal.policy.impl.PolicyControl$Filter,java.lang.String,java.io.PrintWriter)>("sImmersivePreconfirmationsFilter", $r4, r0, r1);

        return;
    }

    private static void dump(java.lang.String, com.android.internal.policy.impl.PolicyControl$Filter, java.lang.String, java.io.PrintWriter)
    {
        java.lang.String r0, r2;
        com.android.internal.policy.impl.PolicyControl$Filter r1;
        java.io.PrintWriter r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.android.internal.policy.impl.PolicyControl$Filter;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.io.PrintWriter;

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r2);

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>("PolicyControl.");

        virtualinvoke r3.<java.io.PrintWriter: void print(java.lang.String)>(r0);

        virtualinvoke r3.<java.io.PrintWriter: void print(char)>(61);

        if r1 != null goto label1;

        virtualinvoke r3.<java.io.PrintWriter: void println(java.lang.String)>("null");

        goto label2;

     label1:
        virtualinvoke r1.<com.android.internal.policy.impl.PolicyControl$Filter: void dump(java.io.PrintWriter)>(r3);

        virtualinvoke r3.<java.io.PrintWriter: void println()>();

     label2:
        return;
    }

    private static void setFilters(java.lang.String)
    {
        java.lang.String r0, r3, r4, r5, $r8, $r11, $r15, $r18, $r19, $r23, $r29, $r31;
        java.lang.String[] r1, r2;
        int i0, i1, i2, $i6;
        com.android.internal.policy.impl.PolicyControl$Filter r6, $r10, $r17, $r21, $r25, $r26, r32, r33, r34;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.lang.StringBuilder $r7, $r9, $r12, $r13, $r14, $r16, $r20, $r22, $r24, $r27, $r28, $r30;

        r0 := @parameter0: java.lang.String;

        $z0 = <com.android.internal.policy.impl.PolicyControl: boolean DEBUG>;

        if $z0 == 0 goto label01;

        $r29 = <com.android.internal.policy.impl.PolicyControl: java.lang.String TAG>;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setFilters: ");

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r31 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>($r29, $r31);

     label01:
        <com.android.internal.policy.impl.PolicyControl: com.android.internal.policy.impl.PolicyControl$Filter sImmersiveStatusFilter> = null;

        <com.android.internal.policy.impl.PolicyControl: com.android.internal.policy.impl.PolicyControl$Filter sImmersiveNavigationFilter> = null;

        <com.android.internal.policy.impl.PolicyControl: com.android.internal.policy.impl.PolicyControl$Filter sImmersivePreconfirmationsFilter> = null;

        if r0 == null goto label10;

        r1 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        r2 = r1;

        i0 = lengthof r2;

        i1 = 0;

     label02:
        if i1 >= i0 goto label10;

        r3 = r2[i1];

        i2 = virtualinvoke r3.<java.lang.String: int indexOf(int)>(61);

        if i2 != -1 goto label03;

        goto label09;

     label03:
        r4 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, i2);

        $i6 = i2 + 1;

        r5 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>($i6);

        $z2 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("immersive.full");

        if $z2 == 0 goto label05;

        r6 = staticinvoke <com.android.internal.policy.impl.PolicyControl$Filter: com.android.internal.policy.impl.PolicyControl$Filter parse(java.lang.String)>(r5);

        <com.android.internal.policy.impl.PolicyControl: com.android.internal.policy.impl.PolicyControl$Filter sImmersiveNavigationFilter> = r6;

        <com.android.internal.policy.impl.PolicyControl: com.android.internal.policy.impl.PolicyControl$Filter sImmersiveStatusFilter> = r6;

        $r25 = <com.android.internal.policy.impl.PolicyControl: com.android.internal.policy.impl.PolicyControl$Filter sImmersivePreconfirmationsFilter>;

        if $r25 != null goto label04;

        <com.android.internal.policy.impl.PolicyControl: com.android.internal.policy.impl.PolicyControl$Filter sImmersivePreconfirmationsFilter> = r6;

     label04:
        goto label09;

     label05:
        $z3 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("immersive.status");

        if $z3 == 0 goto label06;

        r32 = staticinvoke <com.android.internal.policy.impl.PolicyControl$Filter: com.android.internal.policy.impl.PolicyControl$Filter parse(java.lang.String)>(r5);

        <com.android.internal.policy.impl.PolicyControl: com.android.internal.policy.impl.PolicyControl$Filter sImmersiveStatusFilter> = r32;

        goto label09;

     label06:
        $z4 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("immersive.navigation");

        if $z4 == 0 goto label08;

        r33 = staticinvoke <com.android.internal.policy.impl.PolicyControl$Filter: com.android.internal.policy.impl.PolicyControl$Filter parse(java.lang.String)>(r5);

        <com.android.internal.policy.impl.PolicyControl: com.android.internal.policy.impl.PolicyControl$Filter sImmersiveNavigationFilter> = r33;

        $r26 = <com.android.internal.policy.impl.PolicyControl: com.android.internal.policy.impl.PolicyControl$Filter sImmersivePreconfirmationsFilter>;

        if $r26 != null goto label07;

        <com.android.internal.policy.impl.PolicyControl: com.android.internal.policy.impl.PolicyControl$Filter sImmersivePreconfirmationsFilter> = r33;

     label07:
        goto label09;

     label08:
        $z5 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>("immersive.preconfirms");

        if $z5 == 0 goto label09;

        r34 = staticinvoke <com.android.internal.policy.impl.PolicyControl$Filter: com.android.internal.policy.impl.PolicyControl$Filter parse(java.lang.String)>(r5);

        <com.android.internal.policy.impl.PolicyControl: com.android.internal.policy.impl.PolicyControl$Filter sImmersivePreconfirmationsFilter> = r34;

     label09:
        i1 = i1 + 1;

        goto label02;

     label10:
        $z1 = <com.android.internal.policy.impl.PolicyControl: boolean DEBUG>;

        if $z1 == 0 goto label11;

        $r8 = <com.android.internal.policy.impl.PolicyControl: java.lang.String TAG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("immersiveStatusFilter: ");

        $r10 = <com.android.internal.policy.impl.PolicyControl: com.android.internal.policy.impl.PolicyControl$Filter sImmersiveStatusFilter>;

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>($r8, $r11);

        $r15 = <com.android.internal.policy.impl.PolicyControl: java.lang.String TAG>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("immersiveNavigationFilter: ");

        $r17 = <com.android.internal.policy.impl.PolicyControl: com.android.internal.policy.impl.PolicyControl$Filter sImmersiveNavigationFilter>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>($r15, $r18);

        $r19 = <com.android.internal.policy.impl.PolicyControl: java.lang.String TAG>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("immersivePreconfirmationsFilter: ");

        $r21 = <com.android.internal.policy.impl.PolicyControl: com.android.internal.policy.impl.PolicyControl$Filter sImmersivePreconfirmationsFilter>;

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int d(java.lang.String,java.lang.String)>($r19, $r23);

     label11:
        return;
    }

    static void <clinit>()
    {
        <com.android.internal.policy.impl.PolicyControl: java.lang.String NAME_IMMERSIVE_PRECONFIRMATIONS> = "immersive.preconfirms";

        <com.android.internal.policy.impl.PolicyControl: java.lang.String NAME_IMMERSIVE_NAVIGATION> = "immersive.navigation";

        <com.android.internal.policy.impl.PolicyControl: java.lang.String NAME_IMMERSIVE_STATUS> = "immersive.status";

        <com.android.internal.policy.impl.PolicyControl: java.lang.String NAME_IMMERSIVE_FULL> = "immersive.full";

        <com.android.internal.policy.impl.PolicyControl: java.lang.String TAG> = "PolicyControl";

        <com.android.internal.policy.impl.PolicyControl: boolean DEBUG> = 0;

        return;
    }
}
