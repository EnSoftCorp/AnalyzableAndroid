class com.android.internal.policy.impl.PhoneWindowManager$17 extends android.content.BroadcastReceiver
{
    final com.android.internal.policy.impl.PhoneWindowManager this$0;

    void <init>(com.android.internal.policy.impl.PhoneWindowManager)
    {
        com.android.internal.policy.impl.PhoneWindowManager$17 r0;
        com.android.internal.policy.impl.PhoneWindowManager r1;

        r0 := @this: com.android.internal.policy.impl.PhoneWindowManager$17;

        r1 := @parameter0: com.android.internal.policy.impl.PhoneWindowManager;

        r0.<com.android.internal.policy.impl.PhoneWindowManager$17: com.android.internal.policy.impl.PhoneWindowManager this$0> = r1;

        specialinvoke r0.<android.content.BroadcastReceiver: void <init>()>();

        return;
    }

    public void onReceive(android.content.Context, android.content.Intent)
    {
        com.android.internal.policy.impl.PhoneWindowManager$17 r0;
        android.content.Context r1;
        android.content.Intent r2;
        java.lang.Object r3, $r11;
        java.lang.Throwable r4, $r14;
        java.lang.String $r5, $r6;
        boolean $z0;
        com.android.internal.policy.impl.PhoneWindowManager $r7, $r9, $r12, $r13;
        com.android.internal.policy.impl.PhoneWindowManager$SettingsObserver $r8;
        android.view.WindowManagerPolicy$WindowManagerFuncs $r10;

        r0 := @this: com.android.internal.policy.impl.PhoneWindowManager$17;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.content.Intent;

        $r5 = "android.intent.action.USER_SWITCHED";

        $r6 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label5;

        $r7 = r0.<com.android.internal.policy.impl.PhoneWindowManager$17: com.android.internal.policy.impl.PhoneWindowManager this$0>;

        $r8 = $r7.<com.android.internal.policy.impl.PhoneWindowManager: com.android.internal.policy.impl.PhoneWindowManager$SettingsObserver mSettingsObserver>;

        virtualinvoke $r8.<com.android.internal.policy.impl.PhoneWindowManager$SettingsObserver: void onChange(boolean)>(0);

        $r9 = r0.<com.android.internal.policy.impl.PhoneWindowManager$17: com.android.internal.policy.impl.PhoneWindowManager this$0>;

        $r10 = $r9.<com.android.internal.policy.impl.PhoneWindowManager: android.view.WindowManagerPolicy$WindowManagerFuncs mWindowManagerFuncs>;

        $r11 = interfaceinvoke $r10.<android.view.WindowManagerPolicy$WindowManagerFuncs: java.lang.Object getWindowManagerLock()>();

        r3 = $r11;

        entermonitor $r11;

     label1:
        $r12 = r0.<com.android.internal.policy.impl.PhoneWindowManager$17: com.android.internal.policy.impl.PhoneWindowManager this$0>;

        $r12.<com.android.internal.policy.impl.PhoneWindowManager: int mLastSystemUiFlags> = 0;

        $r13 = r0.<com.android.internal.policy.impl.PhoneWindowManager$17: com.android.internal.policy.impl.PhoneWindowManager this$0>;

        staticinvoke <com.android.internal.policy.impl.PhoneWindowManager: int access$1300(com.android.internal.policy.impl.PhoneWindowManager)>($r13);

        exitmonitor r3;

     label2:
        goto label5;

     label3:
        $r14 := @caughtexception;

        r4 = $r14;

        exitmonitor r3;

     label4:
        throw r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
}
