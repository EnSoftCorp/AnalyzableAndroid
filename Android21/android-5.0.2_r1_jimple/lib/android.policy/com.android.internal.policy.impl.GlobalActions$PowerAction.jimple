final class com.android.internal.policy.impl.GlobalActions$PowerAction extends com.android.internal.policy.impl.GlobalActions$SinglePressAction implements com.android.internal.policy.impl.GlobalActions$LongPressAction
{
    final com.android.internal.policy.impl.GlobalActions this$0;

    private void <init>(com.android.internal.policy.impl.GlobalActions)
    {
        com.android.internal.policy.impl.GlobalActions$PowerAction r0;
        com.android.internal.policy.impl.GlobalActions r1;

        r0 := @this: com.android.internal.policy.impl.GlobalActions$PowerAction;

        r1 := @parameter0: com.android.internal.policy.impl.GlobalActions;

        r0.<com.android.internal.policy.impl.GlobalActions$PowerAction: com.android.internal.policy.impl.GlobalActions this$0> = r1;

        specialinvoke r0.<com.android.internal.policy.impl.GlobalActions$SinglePressAction: void <init>(int,int)>(17301552, 17039606);

        return;
    }

    public boolean onLongPress()
    {
        com.android.internal.policy.impl.GlobalActions$PowerAction r0;
        com.android.internal.policy.impl.GlobalActions $r1;
        android.view.WindowManagerPolicy$WindowManagerFuncs $r2;

        r0 := @this: com.android.internal.policy.impl.GlobalActions$PowerAction;

        $r1 = r0.<com.android.internal.policy.impl.GlobalActions$PowerAction: com.android.internal.policy.impl.GlobalActions this$0>;

        $r2 = staticinvoke <com.android.internal.policy.impl.GlobalActions: android.view.WindowManagerPolicy$WindowManagerFuncs access$800(com.android.internal.policy.impl.GlobalActions)>($r1);

        interfaceinvoke $r2.<android.view.WindowManagerPolicy$WindowManagerFuncs: void rebootSafeMode(boolean)>(1);

        return 1;
    }

    public boolean showDuringKeyguard()
    {
        com.android.internal.policy.impl.GlobalActions$PowerAction r0;

        r0 := @this: com.android.internal.policy.impl.GlobalActions$PowerAction;

        return 1;
    }

    public boolean showBeforeProvisioning()
    {
        com.android.internal.policy.impl.GlobalActions$PowerAction r0;

        r0 := @this: com.android.internal.policy.impl.GlobalActions$PowerAction;

        return 1;
    }

    public void onPress()
    {
        com.android.internal.policy.impl.GlobalActions$PowerAction r0;
        com.android.internal.policy.impl.GlobalActions $r1;
        android.view.WindowManagerPolicy$WindowManagerFuncs $r2;

        r0 := @this: com.android.internal.policy.impl.GlobalActions$PowerAction;

        $r1 = r0.<com.android.internal.policy.impl.GlobalActions$PowerAction: com.android.internal.policy.impl.GlobalActions this$0>;

        $r2 = staticinvoke <com.android.internal.policy.impl.GlobalActions: android.view.WindowManagerPolicy$WindowManagerFuncs access$800(com.android.internal.policy.impl.GlobalActions)>($r1);

        interfaceinvoke $r2.<android.view.WindowManagerPolicy$WindowManagerFuncs: void shutdown(boolean)>(0);

        return;
    }

    void <init>(com.android.internal.policy.impl.GlobalActions, com.android.internal.policy.impl.GlobalActions$1)
    {
        com.android.internal.policy.impl.GlobalActions$PowerAction r0;
        com.android.internal.policy.impl.GlobalActions r1;
        com.android.internal.policy.impl.GlobalActions$1 r2;

        r0 := @this: com.android.internal.policy.impl.GlobalActions$PowerAction;

        r1 := @parameter0: com.android.internal.policy.impl.GlobalActions;

        r2 := @parameter1: com.android.internal.policy.impl.GlobalActions$1;

        specialinvoke r0.<com.android.internal.policy.impl.GlobalActions$PowerAction: void <init>(com.android.internal.policy.impl.GlobalActions)>(r1);

        return;
    }
}
