public class com.android.internal.policy.impl.ImmersiveModeConfirmation extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final boolean DEBUG;
    private static final boolean DEBUG_SHOW_EVERY_TIME;
    private static final java.lang.String CONFIRMED;
    private final android.content.Context mContext;
    private final com.android.internal.policy.impl.ImmersiveModeConfirmation$H mHandler;
    private final long mShowDelayMs;
    private final long mPanicThresholdMs;
    private final android.util.SparseBooleanArray mUserPanicResets;
    private boolean mConfirmed;
    private com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView mClingWindow;
    private long mPanicTime;
    private android.view.WindowManager mWindowManager;
    private int mCurrentUserId;
    private final java.lang.Runnable mConfirm;

    public void <init>(android.content.Context)
    {
        com.android.internal.policy.impl.ImmersiveModeConfirmation r0;
        android.content.Context r1, $r6;
        android.util.SparseBooleanArray $r2;
        com.android.internal.policy.impl.ImmersiveModeConfirmation$1 $r3;
        com.android.internal.policy.impl.ImmersiveModeConfirmation$H $r4;
        long $l0, $l1, $l3;
        android.content.res.Resources $r5;
        int $i2;
        java.lang.Object $r7;
        android.view.WindowManager $r8;

        r0 := @this: com.android.internal.policy.impl.ImmersiveModeConfirmation;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new android.util.SparseBooleanArray;

        specialinvoke $r2.<android.util.SparseBooleanArray: void <init>()>();

        r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: android.util.SparseBooleanArray mUserPanicResets> = $r2;

        $r3 = new com.android.internal.policy.impl.ImmersiveModeConfirmation$1;

        specialinvoke $r3.<com.android.internal.policy.impl.ImmersiveModeConfirmation$1: void <init>(com.android.internal.policy.impl.ImmersiveModeConfirmation)>(r0);

        r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: java.lang.Runnable mConfirm> = $r3;

        r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: android.content.Context mContext> = r1;

        $r4 = new com.android.internal.policy.impl.ImmersiveModeConfirmation$H;

        specialinvoke $r4.<com.android.internal.policy.impl.ImmersiveModeConfirmation$H: void <init>(com.android.internal.policy.impl.ImmersiveModeConfirmation,com.android.internal.policy.impl.ImmersiveModeConfirmation$1)>(r0, null);

        r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: com.android.internal.policy.impl.ImmersiveModeConfirmation$H mHandler> = $r4;

        $l0 = specialinvoke r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: long getNavBarExitDuration()>();

        $l1 = $l0 * 3L;

        r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: long mShowDelayMs> = $l1;

        $r5 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i2 = virtualinvoke $r5.<android.content.res.Resources: int getInteger(int)>(17694834);

        $l3 = (long) $i2;

        r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: long mPanicThresholdMs> = $l3;

        $r6 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: android.content.Context mContext>;

        $r7 = virtualinvoke $r6.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("window");

        $r8 = (android.view.WindowManager) $r7;

        r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: android.view.WindowManager mWindowManager> = $r8;

        return;
    }

    private long getNavBarExitDuration()
    {
        com.android.internal.policy.impl.ImmersiveModeConfirmation r0;
        android.view.animation.Animation r1;
        android.content.Context $r2;
        long $l0;

        r0 := @this: com.android.internal.policy.impl.ImmersiveModeConfirmation;

        $r2 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: android.content.Context mContext>;

        r1 = staticinvoke <android.view.animation.AnimationUtils: android.view.animation.Animation loadAnimation(android.content.Context,int)>($r2, 17432599);

        if r1 == null goto label1;

        $l0 = virtualinvoke r1.<android.view.animation.Animation: long getDuration()>();

        goto label2;

     label1:
        $l0 = 0L;

     label2:
        return $l0;
    }

    public void loadSetting(int)
    {
        com.android.internal.policy.impl.ImmersiveModeConfirmation r0;
        int i0;
        java.lang.String r1, $r5, $r10;
        java.lang.Throwable r2, $r6;
        android.content.Context $r3;
        android.content.ContentResolver $r4;
        boolean $z0;
        java.lang.StringBuilder $r7, $r8, $r9;

        r0 := @this: com.android.internal.policy.impl.ImmersiveModeConfirmation;

        i0 := @parameter0: int;

        r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: boolean mConfirmed> = 0;

        r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: int mCurrentUserId> = i0;

        r1 = null;

     label1:
        $r3 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: android.content.Context mContext>;

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r1 = staticinvoke <android.provider.Settings$Secure: java.lang.String getStringForUser(android.content.ContentResolver,java.lang.String,int)>($r4, "immersive_mode_confirmations", -2);

        $r5 = "confirmed";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: boolean mConfirmed> = $z0;

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error loading confirmations, value=");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ImmersiveModeConfirmation", $r10, r2);

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    private void saveSetting()
    {
        com.android.internal.policy.impl.ImmersiveModeConfirmation r0;
        java.lang.String r1, $r4, $r9;
        boolean $z0, $z2;
        android.content.Context $r2;
        android.content.ContentResolver $r3;
        java.lang.Throwable $r5, r10;
        java.lang.StringBuilder $r6, $r7, $r8;

        r0 := @this: com.android.internal.policy.impl.ImmersiveModeConfirmation;

     label1:
        $z0 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: boolean mConfirmed>;

        if $z0 == 0 goto label2;

        $r4 = "confirmed";

        goto label3;

     label2:
        $r4 = null;

     label3:
        r1 = $r4;

        $r2 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        staticinvoke <android.provider.Settings$Secure: boolean putStringForUser(android.content.ContentResolver,java.lang.String,java.lang.String,int)>($r3, "immersive_mode_confirmations", r1, -2);

     label4:
        goto label6;

     label5:
        $r5 := @caughtexception;

        r10 = $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error saving confirmations, mConfirmed=");

        $z2 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: boolean mConfirmed>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Slog: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("ImmersiveModeConfirmation", $r9, r10);

     label6:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
    }

    public void immersiveModeChanged(java.lang.String, boolean, boolean)
    {
        com.android.internal.policy.impl.ImmersiveModeConfirmation r0;
        java.lang.String r1;
        boolean z0, z1, z2, $z4;
        com.android.internal.policy.impl.ImmersiveModeConfirmation$H $r2, $r3, $r4;
        long $l0;

        r0 := @this: com.android.internal.policy.impl.ImmersiveModeConfirmation;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $r2 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: com.android.internal.policy.impl.ImmersiveModeConfirmation$H mHandler>;

        virtualinvoke $r2.<com.android.internal.policy.impl.ImmersiveModeConfirmation$H: void removeMessages(int)>(1);

        if z0 == 0 goto label2;

        z2 = staticinvoke <com.android.internal.policy.impl.PolicyControl: boolean disableImmersiveConfirmation(java.lang.String)>(r1);

        if z2 != 0 goto label1;

        $z4 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: boolean mConfirmed>;

        if $z4 != 0 goto label1;

        if z1 == 0 goto label1;

        $r4 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: com.android.internal.policy.impl.ImmersiveModeConfirmation$H mHandler>;

        $l0 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: long mShowDelayMs>;

        virtualinvoke $r4.<com.android.internal.policy.impl.ImmersiveModeConfirmation$H: boolean sendEmptyMessageDelayed(int,long)>(1, $l0);

     label1:
        goto label3;

     label2:
        $r3 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: com.android.internal.policy.impl.ImmersiveModeConfirmation$H mHandler>;

        virtualinvoke $r3.<com.android.internal.policy.impl.ImmersiveModeConfirmation$H: boolean sendEmptyMessage(int)>(2);

     label3:
        return;
    }

    public boolean onPowerKeyDown(boolean, long, boolean)
    {
        com.android.internal.policy.impl.ImmersiveModeConfirmation r0;
        boolean z0, z1, $z3;
        long l0, $l1, $l2, $l3;
        byte $b4;
        com.android.internal.policy.impl.ImmersiveModeConfirmation$H $r1;
        com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView $r2;

        r0 := @this: com.android.internal.policy.impl.ImmersiveModeConfirmation;

        z0 := @parameter0: boolean;

        l0 := @parameter1: long;

        z1 := @parameter2: boolean;

        if z0 != 0 goto label3;

        $l1 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: long mPanicTime>;

        $l3 = l0 - $l1;

        $l2 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: long mPanicThresholdMs>;

        $b4 = $l3 cmp $l2;

        if $b4 >= 0 goto label3;

        $r1 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: com.android.internal.policy.impl.ImmersiveModeConfirmation$H mHandler>;

        virtualinvoke $r1.<com.android.internal.policy.impl.ImmersiveModeConfirmation$H: boolean sendEmptyMessage(int)>(3);

        $r2 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView mClingWindow>;

        if $r2 != null goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;

     label3:
        if z0 == 0 goto label4;

        if z1 == 0 goto label4;

        r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: long mPanicTime> = l0;

        goto label5;

     label4:
        r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: long mPanicTime> = 0L;

     label5:
        return 0;
    }

    public void confirmCurrentPrompt()
    {
        com.android.internal.policy.impl.ImmersiveModeConfirmation r0;
        com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView $r1;
        java.lang.Runnable $r2;
        com.android.internal.policy.impl.ImmersiveModeConfirmation$H $r3;

        r0 := @this: com.android.internal.policy.impl.ImmersiveModeConfirmation;

        $r1 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView mClingWindow>;

        if $r1 == null goto label1;

        $r3 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: com.android.internal.policy.impl.ImmersiveModeConfirmation$H mHandler>;

        $r2 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: java.lang.Runnable mConfirm>;

        virtualinvoke $r3.<com.android.internal.policy.impl.ImmersiveModeConfirmation$H: boolean post(java.lang.Runnable)>($r2);

     label1:
        return;
    }

    private void handlePanic()
    {
        com.android.internal.policy.impl.ImmersiveModeConfirmation r0;
        int $i0, $i1;
        android.util.SparseBooleanArray $r1, $r2;
        boolean $z0;

        r0 := @this: com.android.internal.policy.impl.ImmersiveModeConfirmation;

        $r1 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: android.util.SparseBooleanArray mUserPanicResets>;

        $i0 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: int mCurrentUserId>;

        $z0 = virtualinvoke $r1.<android.util.SparseBooleanArray: boolean get(int,boolean)>($i0, 0);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: android.util.SparseBooleanArray mUserPanicResets>;

        $i1 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: int mCurrentUserId>;

        virtualinvoke $r2.<android.util.SparseBooleanArray: void put(int,boolean)>($i1, 1);

        r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: boolean mConfirmed> = 0;

        specialinvoke r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: void saveSetting()>();

        return;
    }

    private void handleHide()
    {
        com.android.internal.policy.impl.ImmersiveModeConfirmation r0;
        com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView $r1, $r2;
        android.view.WindowManager $r3;

        r0 := @this: com.android.internal.policy.impl.ImmersiveModeConfirmation;

        $r1 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView mClingWindow>;

        if $r1 == null goto label1;

        $r3 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: android.view.WindowManager mWindowManager>;

        $r2 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView mClingWindow>;

        interfaceinvoke $r3.<android.view.WindowManager: void removeView(android.view.View)>($r2);

        r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView mClingWindow> = null;

     label1:
        return;
    }

    public android.view.WindowManager$LayoutParams getClingWindowLayoutParams()
    {
        com.android.internal.policy.impl.ImmersiveModeConfirmation r0;
        android.view.WindowManager$LayoutParams r1, $r2;
        int $i0, $i1;

        r0 := @this: com.android.internal.policy.impl.ImmersiveModeConfirmation;

        $r2 = new android.view.WindowManager$LayoutParams;

        specialinvoke $r2.<android.view.WindowManager$LayoutParams: void <init>(int,int,int,int,int)>(-1, -1, 2005, 16777480, -3);

        r1 = $r2;

        $i0 = r1.<android.view.WindowManager$LayoutParams: int privateFlags>;

        $i1 = $i0 | 16;

        r1.<android.view.WindowManager$LayoutParams: int privateFlags> = $i1;

        virtualinvoke r1.<android.view.WindowManager$LayoutParams: void setTitle(java.lang.CharSequence)>("ImmersiveModeConfirmation");

        r1.<android.view.WindowManager$LayoutParams: int windowAnimations> = 16974563;

        r1.<android.view.WindowManager$LayoutParams: int gravity> = 119;

        return r1;
    }

    public android.widget.FrameLayout$LayoutParams getBubbleLayoutParams()
    {
        com.android.internal.policy.impl.ImmersiveModeConfirmation r0;
        android.widget.FrameLayout$LayoutParams $r1;
        android.content.Context $r2;
        android.content.res.Resources $r3;
        int $i0;

        r0 := @this: com.android.internal.policy.impl.ImmersiveModeConfirmation;

        $r1 = new android.widget.FrameLayout$LayoutParams;

        $r2 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: android.content.Context mContext>;

        $r3 = virtualinvoke $r2.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = virtualinvoke $r3.<android.content.res.Resources: int getDimensionPixelSize(int)>(17105046);

        specialinvoke $r1.<android.widget.FrameLayout$LayoutParams: void <init>(int,int,int)>($i0, -2, 49);

        return $r1;
    }

    private void handleShow()
    {
        com.android.internal.policy.impl.ImmersiveModeConfirmation r0;
        android.view.WindowManager$LayoutParams r1;
        com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView $r2, $r5, $r6;
        java.lang.Runnable $r3;
        android.content.Context $r4;
        android.view.WindowManager $r7;

        r0 := @this: com.android.internal.policy.impl.ImmersiveModeConfirmation;

        $r2 = new com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView;

        $r4 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: android.content.Context mContext>;

        $r3 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: java.lang.Runnable mConfirm>;

        specialinvoke $r2.<com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView: void <init>(com.android.internal.policy.impl.ImmersiveModeConfirmation,android.content.Context,java.lang.Runnable)>(r0, $r4, $r3);

        r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView mClingWindow> = $r2;

        $r5 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView mClingWindow>;

        virtualinvoke $r5.<com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView: void setSystemUiVisibility(int)>(768);

        r1 = virtualinvoke r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: android.view.WindowManager$LayoutParams getClingWindowLayoutParams()>();

        $r7 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: android.view.WindowManager mWindowManager>;

        $r6 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: com.android.internal.policy.impl.ImmersiveModeConfirmation$ClingWindowView mClingWindow>;

        interfaceinvoke $r7.<android.view.WindowManager: void addView(android.view.View,android.view.ViewGroup$LayoutParams)>($r6, r1);

        return;
    }

    static android.view.WindowManager access$300(com.android.internal.policy.impl.ImmersiveModeConfirmation)
    {
        com.android.internal.policy.impl.ImmersiveModeConfirmation r0;
        android.view.WindowManager $r1;

        r0 := @parameter0: com.android.internal.policy.impl.ImmersiveModeConfirmation;

        $r1 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: android.view.WindowManager mWindowManager>;

        return $r1;
    }

    static boolean access$600(com.android.internal.policy.impl.ImmersiveModeConfirmation)
    {
        com.android.internal.policy.impl.ImmersiveModeConfirmation r0;
        boolean $z0;

        r0 := @parameter0: com.android.internal.policy.impl.ImmersiveModeConfirmation;

        $z0 = r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: boolean mConfirmed>;

        return $z0;
    }

    static boolean access$602(com.android.internal.policy.impl.ImmersiveModeConfirmation, boolean)
    {
        com.android.internal.policy.impl.ImmersiveModeConfirmation r0;
        boolean z0;

        r0 := @parameter0: com.android.internal.policy.impl.ImmersiveModeConfirmation;

        z0 := @parameter1: boolean;

        r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: boolean mConfirmed> = z0;

        return z0;
    }

    static void access$700(com.android.internal.policy.impl.ImmersiveModeConfirmation)
    {
        com.android.internal.policy.impl.ImmersiveModeConfirmation r0;

        r0 := @parameter0: com.android.internal.policy.impl.ImmersiveModeConfirmation;

        specialinvoke r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: void saveSetting()>();

        return;
    }

    static void access$800(com.android.internal.policy.impl.ImmersiveModeConfirmation)
    {
        com.android.internal.policy.impl.ImmersiveModeConfirmation r0;

        r0 := @parameter0: com.android.internal.policy.impl.ImmersiveModeConfirmation;

        specialinvoke r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: void handleHide()>();

        return;
    }

    static void access$900(com.android.internal.policy.impl.ImmersiveModeConfirmation)
    {
        com.android.internal.policy.impl.ImmersiveModeConfirmation r0;

        r0 := @parameter0: com.android.internal.policy.impl.ImmersiveModeConfirmation;

        specialinvoke r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: void handleShow()>();

        return;
    }

    static void access$1000(com.android.internal.policy.impl.ImmersiveModeConfirmation)
    {
        com.android.internal.policy.impl.ImmersiveModeConfirmation r0;

        r0 := @parameter0: com.android.internal.policy.impl.ImmersiveModeConfirmation;

        specialinvoke r0.<com.android.internal.policy.impl.ImmersiveModeConfirmation: void handlePanic()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.internal.policy.impl.ImmersiveModeConfirmation: java.lang.String CONFIRMED> = "confirmed";

        <com.android.internal.policy.impl.ImmersiveModeConfirmation: boolean DEBUG_SHOW_EVERY_TIME> = 0;

        <com.android.internal.policy.impl.ImmersiveModeConfirmation: boolean DEBUG> = 0;

        <com.android.internal.policy.impl.ImmersiveModeConfirmation: java.lang.String TAG> = "ImmersiveModeConfirmation";

        return;
    }
}
