public class android.support.v4.widget.SlidingPaneLayout extends android.view.ViewGroup
{
    private static final java.lang.String TAG;
    private static final int DEFAULT_OVERHANG_SIZE;
    private static final int DEFAULT_FADE_COLOR;
    private int mSliderFadeColor;
    private static final int MIN_FLING_VELOCITY;
    private int mCoveredFadeColor;
    private android.graphics.drawable.Drawable mShadowDrawableLeft;
    private android.graphics.drawable.Drawable mShadowDrawableRight;
    private final int mOverhangSize;
    private boolean mCanSlide;
    private android.view.View mSlideableView;
    private float mSlideOffset;
    private float mParallaxOffset;
    private int mSlideRange;
    private boolean mIsUnableToDrag;
    private int mParallaxBy;
    private float mInitialMotionX;
    private float mInitialMotionY;
    private android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener;
    private final android.support.v4.widget.ViewDragHelper mDragHelper;
    private boolean mPreservedOpenState;
    private boolean mFirstLayout;
    private final android.graphics.Rect mTmpRect;
    private final java.util.ArrayList mPostedRunnables;
    static final android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL;

    public void <init>(android.content.Context)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.content.Context r1;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.support.v4.widget.SlidingPaneLayout: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.support.v4.widget.SlidingPaneLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, $i1;
        float f0, $f1, $f2, $f3;
        android.graphics.Rect $r4;
        java.util.ArrayList $r5;
        android.content.res.Resources $r6;
        android.util.DisplayMetrics $r7;
        android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate $r8;
        android.support.v4.widget.SlidingPaneLayout$DragHelperCallback $r9;
        android.support.v4.widget.ViewDragHelper $r10, $r11;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        r0.<android.support.v4.widget.SlidingPaneLayout: int mSliderFadeColor> = -858993460;

        r0.<android.support.v4.widget.SlidingPaneLayout: boolean mFirstLayout> = 1;

        $r4 = new android.graphics.Rect;

        specialinvoke $r4.<android.graphics.Rect: void <init>()>();

        r0.<android.support.v4.widget.SlidingPaneLayout: android.graphics.Rect mTmpRect> = $r4;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>()>();

        r0.<android.support.v4.widget.SlidingPaneLayout: java.util.ArrayList mPostedRunnables> = $r5;

        $r6 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r7 = virtualinvoke $r6.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        f0 = $r7.<android.util.DisplayMetrics: float density>;

        $f1 = 32.0F * f0;

        $f2 = $f1 + 0.5F;

        $i1 = (int) $f2;

        r0.<android.support.v4.widget.SlidingPaneLayout: int mOverhangSize> = $i1;

        staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>(r1);

        virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: void setWillNotDraw(boolean)>(0);

        $r8 = new android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate;

        specialinvoke $r8.<android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate: void <init>(android.support.v4.widget.SlidingPaneLayout)>(r0);

        staticinvoke <android.support.v4.view.ViewCompat: void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)>(r0, $r8);

        staticinvoke <android.support.v4.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>(r0, 1);

        $r9 = new android.support.v4.widget.SlidingPaneLayout$DragHelperCallback;

        specialinvoke $r9.<android.support.v4.widget.SlidingPaneLayout$DragHelperCallback: void <init>(android.support.v4.widget.SlidingPaneLayout,android.support.v4.widget.SlidingPaneLayout$1)>(r0, null);

        $r10 = staticinvoke <android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback)>(r0, 0.5F, $r9);

        r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper> = $r10;

        $r11 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;

        $f3 = 400.0F * f0;

        virtualinvoke $r11.<android.support.v4.widget.ViewDragHelper: void setMinVelocity(float)>($f3);

        return;
    }

    public void setParallaxDistance(int)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        int i0;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        i0 := @parameter0: int;

        r0.<android.support.v4.widget.SlidingPaneLayout: int mParallaxBy> = i0;

        virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: void requestLayout()>();

        return;
    }

    public int getParallaxDistance()
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        int $i0;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        $i0 = r0.<android.support.v4.widget.SlidingPaneLayout: int mParallaxBy>;

        return $i0;
    }

    public void setSliderFadeColor(int)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        int i0;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        i0 := @parameter0: int;

        r0.<android.support.v4.widget.SlidingPaneLayout: int mSliderFadeColor> = i0;

        return;
    }

    public int getSliderFadeColor()
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        int $i0;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        $i0 = r0.<android.support.v4.widget.SlidingPaneLayout: int mSliderFadeColor>;

        return $i0;
    }

    public void setCoveredFadeColor(int)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        int i0;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        i0 := @parameter0: int;

        r0.<android.support.v4.widget.SlidingPaneLayout: int mCoveredFadeColor> = i0;

        return;
    }

    public int getCoveredFadeColor()
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        int $i0;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        $i0 = r0.<android.support.v4.widget.SlidingPaneLayout: int mCoveredFadeColor>;

        return $i0;
    }

    public void setPanelSlideListener(android.support.v4.widget.SlidingPaneLayout$PanelSlideListener)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.support.v4.widget.SlidingPaneLayout$PanelSlideListener r1;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.support.v4.widget.SlidingPaneLayout$PanelSlideListener;

        r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener> = r1;

        return;
    }

    void dispatchOnPanelSlide(android.view.View)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.view.View r1;
        android.support.v4.widget.SlidingPaneLayout$PanelSlideListener $r2, $r3;
        float $f0;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener>;

        if $r2 == null goto label1;

        $r3 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener>;

        $f0 = r0.<android.support.v4.widget.SlidingPaneLayout: float mSlideOffset>;

        interfaceinvoke $r3.<android.support.v4.widget.SlidingPaneLayout$PanelSlideListener: void onPanelSlide(android.view.View,float)>(r1, $f0);

     label1:
        return;
    }

    void dispatchOnPanelOpened(android.view.View)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.view.View r1;
        android.support.v4.widget.SlidingPaneLayout$PanelSlideListener $r2, $r3;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener>;

        if $r2 == null goto label1;

        $r3 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener>;

        interfaceinvoke $r3.<android.support.v4.widget.SlidingPaneLayout$PanelSlideListener: void onPanelOpened(android.view.View)>(r1);

     label1:
        virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: void sendAccessibilityEvent(int)>(32);

        return;
    }

    void dispatchOnPanelClosed(android.view.View)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.view.View r1;
        android.support.v4.widget.SlidingPaneLayout$PanelSlideListener $r2, $r3;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener>;

        if $r2 == null goto label1;

        $r3 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.SlidingPaneLayout$PanelSlideListener mPanelSlideListener>;

        interfaceinvoke $r3.<android.support.v4.widget.SlidingPaneLayout$PanelSlideListener: void onPanelClosed(android.view.View)>(r1);

     label1:
        virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: void sendAccessibilityEvent(int)>(32);

        return;
    }

    void updateObscuredViewsVisibility(android.view.View)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.view.View r1, r2;
        boolean z0, $z1;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28;
        byte b14;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.view.View;

        z0 = specialinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean isLayoutRtlSupport()>();

        if z0 == 0 goto label01;

        $i27 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getWidth()>();

        $i28 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingRight()>();

        $i16 = $i27 - $i28;

        goto label02;

     label01:
        $i16 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingLeft()>();

     label02:
        i0 = $i16;

        if z0 == 0 goto label03;

        $i26 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingLeft()>();

        goto label04;

     label03:
        $i15 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getWidth()>();

        $i17 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingRight()>();

        $i26 = $i15 - $i17;

     label04:
        i1 = $i26;

        i2 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingTop()>();

        $i19 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getHeight()>();

        $i18 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingBottom()>();

        i3 = $i19 - $i18;

        if r1 == null goto label05;

        $z1 = staticinvoke <android.support.v4.widget.SlidingPaneLayout: boolean viewIsOpaque(android.view.View)>(r1);

        if $z1 == 0 goto label05;

        i4 = virtualinvoke r1.<android.view.View: int getLeft()>();

        i5 = virtualinvoke r1.<android.view.View: int getRight()>();

        i6 = virtualinvoke r1.<android.view.View: int getTop()>();

        i7 = virtualinvoke r1.<android.view.View: int getBottom()>();

        goto label06;

     label05:
        i7 = 0;

        i6 = 0;

        i5 = 0;

        i4 = 0;

     label06:
        i8 = 0;

        i9 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getChildCount()>();

     label07:
        if i8 >= i9 goto label15;

        r2 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View getChildAt(int)>(i8);

        if r2 != r1 goto label08;

        goto label15;

     label08:
        if z0 == 0 goto label09;

        $i25 = i1;

        goto label10;

     label09:
        $i25 = i0;

     label10:
        $i20 = virtualinvoke r2.<android.view.View: int getLeft()>();

        i10 = staticinvoke <java.lang.Math: int max(int,int)>($i25, $i20);

        $i21 = virtualinvoke r2.<android.view.View: int getTop()>();

        i11 = staticinvoke <java.lang.Math: int max(int,int)>(i2, $i21);

        if z0 == 0 goto label11;

        $i24 = i0;

        goto label12;

     label11:
        $i24 = i1;

     label12:
        $i23 = virtualinvoke r2.<android.view.View: int getRight()>();

        i13 = staticinvoke <java.lang.Math: int min(int,int)>($i24, $i23);

        $i22 = virtualinvoke r2.<android.view.View: int getBottom()>();

        i12 = staticinvoke <java.lang.Math: int min(int,int)>(i3, $i22);

        if i10 < i4 goto label13;

        if i11 < i6 goto label13;

        if i13 > i5 goto label13;

        if i12 > i7 goto label13;

        b14 = 4;

        goto label14;

     label13:
        b14 = 0;

     label14:
        virtualinvoke r2.<android.view.View: void setVisibility(int)>(b14);

        i8 = i8 + 1;

        goto label07;

     label15:
        return;
    }

    void setAllChildrenVisible()
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        int i0, i1, $i2;
        android.view.View r1;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        i0 = 0;

        i1 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getChildCount()>();

     label1:
        if i0 >= i1 goto label3;

        r1 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View getChildAt(int)>(i0);

        $i2 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i2 != 4 goto label2;

        virtualinvoke r1.<android.view.View: void setVisibility(int)>(0);

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return;
    }

    private static boolean viewIsOpaque(android.view.View)
    {
        android.view.View r0;
        android.graphics.drawable.Drawable r1;
        boolean $z0, $z1;
        int $i0, $i1;

        r0 := @parameter0: android.view.View;

        $z0 = staticinvoke <android.support.v4.view.ViewCompat: boolean isOpaque(android.view.View)>(r0);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 18 goto label2;

        return 0;

     label2:
        r1 = virtualinvoke r0.<android.view.View: android.graphics.drawable.Drawable getBackground()>();

        if r1 == null goto label5;

        $i1 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getOpacity()>();

        if $i1 != -1 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;

     label5:
        return 0;
    }

    protected void onAttachedToWindow()
    {
        android.support.v4.widget.SlidingPaneLayout r0;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        specialinvoke r0.<android.view.ViewGroup: void onAttachedToWindow()>();

        r0.<android.support.v4.widget.SlidingPaneLayout: boolean mFirstLayout> = 1;

        return;
    }

    protected void onDetachedFromWindow()
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        int i0, i1;
        android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable r1;
        java.util.ArrayList $r2, $r3, $r4;
        java.lang.Object $r5;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        specialinvoke r0.<android.view.ViewGroup: void onDetachedFromWindow()>();

        r0.<android.support.v4.widget.SlidingPaneLayout: boolean mFirstLayout> = 1;

        i0 = 0;

        $r2 = r0.<android.support.v4.widget.SlidingPaneLayout: java.util.ArrayList mPostedRunnables>;

        i1 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

     label1:
        if i0 >= i1 goto label2;

        $r4 = r0.<android.support.v4.widget.SlidingPaneLayout: java.util.ArrayList mPostedRunnables>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r1 = (android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable) $r5;

        virtualinvoke r1.<android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable: void run()>();

        i0 = i0 + 1;

        goto label1;

     label2:
        $r3 = r0.<android.support.v4.widget.SlidingPaneLayout: java.util.ArrayList mPostedRunnables>;

        virtualinvoke $r3.<java.util.ArrayList: void clear()>();

        return;
    }

    protected void onMeasure(int, int)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i52, $i53, $i54, $i55, $i56, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i68, i71, i72, i73, i74, i75, i76, i77, i78, i79, i80, i81, i82;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9;
        boolean z0, $z1, $z2, $z3, $z4, $z5, z6;
        android.view.View r1, $r6, r10;
        android.support.v4.widget.SlidingPaneLayout$LayoutParams r2, r11;
        android.support.v4.widget.ViewDragHelper $r3, $r4;
        android.view.ViewGroup$LayoutParams $r5, $r7;
        byte $b35, $b49, $b50, $b51, $b57;
        java.lang.IllegalStateException $r8, $r9;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        i3 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        i4 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i1);

        i5 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i1);

        if i2 == 1073741824 goto label03;

        $z5 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean isInEditMode()>();

        if $z5 == 0 goto label02;

        if i2 != -2147483648 goto label01;

        goto label05;

     label01:
        if i2 != 0 goto label05;

        i3 = 300;

        goto label05;

     label02:
        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Width must have an exact value or MATCH_PARENT");

        throw $r8;

     label03:
        if i4 != 0 goto label05;

        $z4 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean isInEditMode()>();

        if $z4 == 0 goto label04;

        if i4 != 0 goto label05;

        i4 = -2147483648;

        i5 = 300;

        goto label05;

     label04:
        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Height must not be UNSPECIFIED");

        throw $r9;

     label05:
        i6 = 0;

        i7 = -1;

        lookupswitch(i4)
        {
            case -2147483648: goto label07;
            case 1073741824: goto label06;
            default: goto label08;
        };

     label06:
        $i20 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingTop()>();

        $i19 = i5 - $i20;

        $i22 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingBottom()>();

        $i21 = $i19 - $i22;

        i7 = $i21;

        i6 = $i21;

        goto label08;

     label07:
        $i66 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingTop()>();

        $i65 = i5 - $i66;

        $i64 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingBottom()>();

        i7 = $i65 - $i64;

     label08:
        f0 = 0.0F;

        z0 = 0;

        $i24 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingLeft()>();

        $i25 = i3 - $i24;

        $i23 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingRight()>();

        i8 = $i25 - $i23;

        i9 = i8;

        i10 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getChildCount()>();

        if i10 <= 2 goto label09;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SlidingPaneLayout", "onMeasure: More than two child views are not supported.");

     label09:
        r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView> = null;

        i11 = 0;

     label10:
        if i11 >= i10 goto label23;

        r1 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View getChildAt(int)>(i11);

        $r7 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.support.v4.widget.SlidingPaneLayout$LayoutParams) $r7;

        $i56 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i56 != 8 goto label11;

        r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: boolean dimWhenOffset> = 0;

        goto label22;

     label11:
        $f8 = r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: float weight>;

        $b57 = $f8 cmpl 0.0F;

        if $b57 <= 0 goto label12;

        $f9 = r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: float weight>;

        f0 = f0 + $f9;

        $i68 = r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int width>;

        if $i68 != 0 goto label12;

        goto label22;

     label12:
        $i52 = r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int leftMargin>;

        $i53 = r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int rightMargin>;

        i14 = $i52 + $i53;

        $i55 = r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int width>;

        if $i55 != -2 goto label13;

        $i62 = i8 - i14;

        i12 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i62, -2147483648);

        goto label15;

     label13:
        $i54 = r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int width>;

        if $i54 != -1 goto label14;

        $i63 = i8 - i14;

        i12 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i63, 1073741824);

        goto label15;

     label14:
        $i61 = r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int width>;

        i12 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i61, 1073741824);

     label15:
        $i59 = r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int height>;

        if $i59 != -2 goto label16;

        i13 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i7, -2147483648);

        goto label18;

     label16:
        $i60 = r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int height>;

        if $i60 != -1 goto label17;

        i13 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i7, 1073741824);

        goto label18;

     label17:
        $i58 = r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int height>;

        i13 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i58, 1073741824);

     label18:
        virtualinvoke r1.<android.view.View: void measure(int,int)>(i12, i13);

        i16 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        i15 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        if i4 != -2147483648 goto label19;

        if i15 <= i6 goto label19;

        i6 = staticinvoke <java.lang.Math: int min(int,int)>(i15, i7);

     label19:
        i9 = i9 - i16;

        if i9 >= 0 goto label20;

        $z2 = 1;

        goto label21;

     label20:
        $z2 = 0;

     label21:
        r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: boolean slideable> = $z2;

        z0 = z0 | $z2;

        $z3 = r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: boolean slideable>;

        if $z3 == 0 goto label22;

        r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView> = r1;

     label22:
        i11 = i11 + 1;

        goto label10;

     label23:
        if z0 != 0 goto label24;

        $b50 = f0 cmpl 0.0F;

        if $b50 <= 0 goto label45;

     label24:
        $i28 = r0.<android.support.v4.widget.SlidingPaneLayout: int mOverhangSize>;

        i71 = i8 - $i28;

        i72 = 0;

     label25:
        if i72 >= i10 goto label45;

        r10 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View getChildAt(int)>(i72);

        $i33 = virtualinvoke r10.<android.view.View: int getVisibility()>();

        if $i33 != 8 goto label26;

        goto label44;

     label26:
        $r5 = virtualinvoke r10.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r11 = (android.support.v4.widget.SlidingPaneLayout$LayoutParams) $r5;

        $i31 = virtualinvoke r10.<android.view.View: int getVisibility()>();

        if $i31 != 8 goto label27;

        goto label44;

     label27:
        $i32 = r11.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int width>;

        if $i32 != 0 goto label28;

        $f7 = r11.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: float weight>;

        $b49 = $f7 cmpl 0.0F;

        if $b49 <= 0 goto label28;

        $z1 = 1;

        goto label29;

     label28:
        $z1 = 0;

     label29:
        z6 = $z1;

        if z6 == 0 goto label30;

        $i36 = 0;

        goto label31;

     label30:
        $i36 = virtualinvoke r10.<android.view.View: int getMeasuredWidth()>();

     label31:
        i73 = $i36;

        if z0 == 0 goto label37;

        $r6 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        if r10 == $r6 goto label37;

        $i41 = r11.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int width>;

        if $i41 >= 0 goto label44;

        if i73 > i71 goto label32;

        $f6 = r11.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: float weight>;

        $b51 = $f6 cmpl 0.0F;

        if $b51 <= 0 goto label44;

     label32:
        if z6 == 0 goto label35;

        $i48 = r11.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int height>;

        if $i48 != -2 goto label33;

        i74 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i7, -2147483648);

        goto label36;

     label33:
        $i45 = r11.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int height>;

        if $i45 != -1 goto label34;

        i74 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i7, 1073741824);

        goto label36;

     label34:
        $i46 = r11.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int height>;

        i74 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i46, 1073741824);

        goto label36;

     label35:
        $i47 = virtualinvoke r10.<android.view.View: int getMeasuredHeight()>();

        i74 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i47, 1073741824);

     label36:
        i75 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i71, 1073741824);

        virtualinvoke r10.<android.view.View: void measure(int,int)>(i75, i74);

        goto label44;

     label37:
        $f1 = r11.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: float weight>;

        $b35 = $f1 cmpl 0.0F;

        if $b35 <= 0 goto label44;

        $i34 = r11.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int width>;

        if $i34 != 0 goto label40;

        $i42 = r11.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int height>;

        if $i42 != -2 goto label38;

        i76 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i7, -2147483648);

        goto label41;

     label38:
        $i43 = r11.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int height>;

        if $i43 != -1 goto label39;

        i76 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i7, 1073741824);

        goto label41;

     label39:
        $i44 = r11.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int height>;

        i76 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i44, 1073741824);

        goto label41;

     label40:
        $i37 = virtualinvoke r10.<android.view.View: int getMeasuredHeight()>();

        i76 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i37, 1073741824);

     label41:
        if z0 == 0 goto label43;

        $i39 = r11.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int leftMargin>;

        $i40 = r11.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int rightMargin>;

        i77 = $i39 + $i40;

        i18 = i8 - i77;

        i17 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>(i18, 1073741824);

        if i73 == i18 goto label42;

        virtualinvoke r10.<android.view.View: void measure(int,int)>(i17, i76);

     label42:
        goto label44;

     label43:
        i78 = staticinvoke <java.lang.Math: int max(int,int)>(0, i9);

        $f5 = r11.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: float weight>;

        $f2 = (float) i78;

        $f4 = $f5 * $f2;

        $f3 = $f4 / f0;

        i79 = (int) $f3;

        $i38 = i73 + i79;

        i80 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i38, 1073741824);

        virtualinvoke r10.<android.view.View: void measure(int,int)>(i80, i76);

     label44:
        i72 = i72 + 1;

        goto label25;

     label45:
        i81 = i3;

        $i29 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingTop()>();

        $i26 = i6 + $i29;

        $i27 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingBottom()>();

        i82 = $i26 + $i27;

        virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: void setMeasuredDimension(int,int)>(i81, i82);

        r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide> = z0;

        $r4 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;

        $i30 = virtualinvoke $r4.<android.support.v4.widget.ViewDragHelper: int getViewDragState()>();

        if $i30 == 0 goto label46;

        if z0 != 0 goto label46;

        $r3 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;

        virtualinvoke $r3.<android.support.v4.widget.ViewDragHelper: void abort()>();

     label46:
        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, i44, i45, i46, i47, i48;
        android.view.View r1, $r4, $r5, $r7, $r9;
        android.support.v4.widget.SlidingPaneLayout$LayoutParams r2, $r6;
        android.support.v4.widget.ViewDragHelper $r3, $r11;
        android.view.ViewGroup$LayoutParams $r8, $r10;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        z1 = specialinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean isLayoutRtlSupport()>();

        if z1 == 0 goto label01;

        $r11 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;

        virtualinvoke $r11.<android.support.v4.widget.ViewDragHelper: void setEdgeTrackingEnabled(int)>(2);

        goto label02;

     label01:
        $r3 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;

        virtualinvoke $r3.<android.support.v4.widget.ViewDragHelper: void setEdgeTrackingEnabled(int)>(1);

     label02:
        i4 = i2 - i0;

        if z1 == 0 goto label03;

        $i18 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingRight()>();

        goto label04;

     label03:
        $i18 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingLeft()>();

     label04:
        i5 = $i18;

        if z1 == 0 goto label05;

        $i19 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingLeft()>();

        goto label06;

     label05:
        $i19 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingRight()>();

     label06:
        i6 = $i19;

        i7 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingTop()>();

        i8 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getChildCount()>();

        i9 = i5;

        i10 = i9;

        $z2 = r0.<android.support.v4.widget.SlidingPaneLayout: boolean mFirstLayout>;

        if $z2 == 0 goto label09;

        $z9 = r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide>;

        if $z9 == 0 goto label07;

        $z10 = r0.<android.support.v4.widget.SlidingPaneLayout: boolean mPreservedOpenState>;

        if $z10 == 0 goto label07;

        $f12 = 1.0F;

        goto label08;

     label07:
        $f12 = 0.0F;

     label08:
        r0.<android.support.v4.widget.SlidingPaneLayout: float mSlideOffset> = $f12;

     label09:
        i11 = 0;

     label10:
        if i11 >= i8 goto label22;

        r1 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View getChildAt(int)>(i11);

        $i23 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i23 != 8 goto label11;

        goto label21;

     label11:
        $r10 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.support.v4.widget.SlidingPaneLayout$LayoutParams) $r10;

        i12 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        i14 = 0;

        $z7 = r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: boolean slideable>;

        if $z7 == 0 goto label16;

        $i33 = r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int leftMargin>;

        $i29 = r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int rightMargin>;

        i13 = $i33 + $i29;

        $i31 = i4 - i6;

        $i32 = r0.<android.support.v4.widget.SlidingPaneLayout: int mOverhangSize>;

        $i30 = $i31 - $i32;

        $i37 = staticinvoke <java.lang.Math: int min(int,int)>(i10, $i30);

        $i38 = $i37 - i9;

        i16 = $i38 - i13;

        r0.<android.support.v4.widget.SlidingPaneLayout: int mSlideRange> = i16;

        if z1 == 0 goto label12;

        $i43 = r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int rightMargin>;

        goto label13;

     label12:
        $i43 = r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int leftMargin>;

     label13:
        i15 = $i43;

        $i39 = i9 + i15;

        $i34 = $i39 + i16;

        $i40 = i12 / 2;

        $i36 = $i34 + $i40;

        $i35 = i4 - i6;

        if $i36 <= $i35 goto label14;

        $z8 = 1;

        goto label15;

     label14:
        $z8 = 0;

     label15:
        r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: boolean dimWhenOffset> = $z8;

        $f10 = (float) i16;

        $f6 = r0.<android.support.v4.widget.SlidingPaneLayout: float mSlideOffset>;

        $f11 = $f10 * $f6;

        i17 = (int) $f11;

        $i41 = i17 + i15;

        i9 = i9 + $i41;

        $f8 = (float) i17;

        $i42 = r0.<android.support.v4.widget.SlidingPaneLayout: int mSlideRange>;

        $f7 = (float) $i42;

        $f9 = $f8 / $f7;

        r0.<android.support.v4.widget.SlidingPaneLayout: float mSlideOffset> = $f9;

        goto label18;

     label16:
        $z6 = r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide>;

        if $z6 == 0 goto label17;

        $i27 = r0.<android.support.v4.widget.SlidingPaneLayout: int mParallaxBy>;

        if $i27 == 0 goto label17;

        $f2 = r0.<android.support.v4.widget.SlidingPaneLayout: float mSlideOffset>;

        $f4 = 1.0F - $f2;

        $i26 = r0.<android.support.v4.widget.SlidingPaneLayout: int mParallaxBy>;

        $f5 = (float) $i26;

        $f3 = $f4 * $f5;

        i14 = (int) $f3;

        i9 = i10;

        goto label18;

     label17:
        i9 = i10;

     label18:
        if z1 == 0 goto label19;

        $i28 = i4 - i9;

        i44 = $i28 + i14;

        i45 = i44 - i12;

        goto label20;

     label19:
        i45 = i9 - i14;

        i44 = i45 + i12;

     label20:
        i46 = i7;

        $i25 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        i47 = i46 + $i25;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>(i45, i7, i44, i47);

        $i24 = virtualinvoke r1.<android.view.View: int getWidth()>();

        i10 = i10 + $i24;

     label21:
        i11 = i11 + 1;

        goto label10;

     label22:
        $z4 = r0.<android.support.v4.widget.SlidingPaneLayout: boolean mFirstLayout>;

        if $z4 == 0 goto label27;

        $z3 = r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide>;

        if $z3 == 0 goto label24;

        $i21 = r0.<android.support.v4.widget.SlidingPaneLayout: int mParallaxBy>;

        if $i21 == 0 goto label23;

        $f0 = r0.<android.support.v4.widget.SlidingPaneLayout: float mSlideOffset>;

        specialinvoke r0.<android.support.v4.widget.SlidingPaneLayout: void parallaxOtherViews(float)>($f0);

     label23:
        $r7 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        $r8 = virtualinvoke $r7.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r6 = (android.support.v4.widget.SlidingPaneLayout$LayoutParams) $r8;

        $z5 = $r6.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: boolean dimWhenOffset>;

        if $z5 == 0 goto label26;

        $r9 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        $f1 = r0.<android.support.v4.widget.SlidingPaneLayout: float mSlideOffset>;

        $i22 = r0.<android.support.v4.widget.SlidingPaneLayout: int mSliderFadeColor>;

        specialinvoke r0.<android.support.v4.widget.SlidingPaneLayout: void dimChildView(android.view.View,float,int)>($r9, $f1, $i22);

        goto label26;

     label24:
        i48 = 0;

     label25:
        if i48 >= i8 goto label26;

        $r5 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View getChildAt(int)>(i48);

        $i20 = r0.<android.support.v4.widget.SlidingPaneLayout: int mSliderFadeColor>;

        specialinvoke r0.<android.support.v4.widget.SlidingPaneLayout: void dimChildView(android.view.View,float,int)>($r5, 0.0F, $i20);

        i48 = i48 + 1;

        goto label25;

     label26:
        $r4 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: void updateObscuredViewsVisibility(android.view.View)>($r4);

     label27:
        r0.<android.support.v4.widget.SlidingPaneLayout: boolean mFirstLayout> = 0;

        return;
    }

    protected void onSizeChanged(int, int, int, int)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        int i0, i1, i2, i3;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<android.view.ViewGroup: void onSizeChanged(int,int,int,int)>(i0, i1, i2, i3);

        if i0 == i2 goto label1;

        r0.<android.support.v4.widget.SlidingPaneLayout: boolean mFirstLayout> = 1;

     label1:
        return;
    }

    public void requestChildFocus(android.view.View, android.view.View)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.view.View r1, r2, $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.View;

        specialinvoke r0.<android.view.ViewGroup: void requestChildFocus(android.view.View,android.view.View)>(r1, r2);

        $z0 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean isInTouchMode()>();

        if $z0 != 0 goto label3;

        $z1 = r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide>;

        if $z1 != 0 goto label3;

        $r3 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        if r1 != $r3 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        r0.<android.support.v4.widget.SlidingPaneLayout: boolean mPreservedOpenState> = $z2;

     label3:
        return;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.view.MotionEvent r1;
        int i0, i1, $i4, $i5, $i6, $i7, $i8;
        android.view.View r2, $r9, $r10;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, f11, f12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9, z10;
        android.support.v4.widget.ViewDragHelper $r3, $r4, $r5, $r6, $r7, $r8, $r11;
        byte $b2, $b3;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionMasked(android.view.MotionEvent)>(r1);

        $z0 = r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide>;

        if $z0 != 0 goto label03;

        if i0 != 0 goto label03;

        $i6 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getChildCount()>();

        if $i6 <= 1 goto label03;

        r2 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View getChildAt(int)>(1);

        if r2 == null goto label03;

        $r11 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;

        $f10 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        $i7 = (int) $f10;

        $f9 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $i8 = (int) $f9;

        $z8 = virtualinvoke $r11.<android.support.v4.widget.ViewDragHelper: boolean isViewUnder(android.view.View,int,int)>(r2, $i7, $i8);

        if $z8 != 0 goto label01;

        $z7 = 1;

        goto label02;

     label01:
        $z7 = 0;

     label02:
        r0.<android.support.v4.widget.SlidingPaneLayout: boolean mPreservedOpenState> = $z7;

     label03:
        $z1 = r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide>;

        if $z1 == 0 goto label04;

        $z3 = r0.<android.support.v4.widget.SlidingPaneLayout: boolean mIsUnableToDrag>;

        if $z3 == 0 goto label05;

        if i0 == 0 goto label05;

     label04:
        $r3 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;

        virtualinvoke $r3.<android.support.v4.widget.ViewDragHelper: void cancel()>();

        $z2 = specialinvoke r0.<android.view.ViewGroup: boolean onInterceptTouchEvent(android.view.MotionEvent)>(r1);

        return $z2;

     label05:
        if i0 == 3 goto label06;

        if i0 != 1 goto label07;

     label06:
        $r4 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;

        virtualinvoke $r4.<android.support.v4.widget.ViewDragHelper: void cancel()>();

        return 0;

     label07:
        z9 = 0;

        lookupswitch(i0)
        {
            case 0: goto label08;
            case 2: goto label09;
            default: goto label10;
        };

     label08:
        r0.<android.support.v4.widget.SlidingPaneLayout: boolean mIsUnableToDrag> = 0;

        f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        r0.<android.support.v4.widget.SlidingPaneLayout: float mInitialMotionX> = f0;

        r0.<android.support.v4.widget.SlidingPaneLayout: float mInitialMotionY> = f1;

        $r8 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;

        $r9 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        $i5 = (int) f0;

        $i4 = (int) f1;

        $z5 = virtualinvoke $r8.<android.support.v4.widget.ViewDragHelper: boolean isViewUnder(android.view.View,int,int)>($r9, $i5, $i4);

        if $z5 == 0 goto label10;

        $r10 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        $z6 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean isDimmed(android.view.View)>($r10);

        if $z6 == 0 goto label10;

        z9 = 1;

        goto label10;

     label09:
        f11 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        f12 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $f5 = r0.<android.support.v4.widget.SlidingPaneLayout: float mInitialMotionX>;

        $f4 = f11 - $f5;

        f2 = staticinvoke <java.lang.Math: float abs(float)>($f4);

        $f6 = r0.<android.support.v4.widget.SlidingPaneLayout: float mInitialMotionY>;

        $f7 = f12 - $f6;

        f3 = staticinvoke <java.lang.Math: float abs(float)>($f7);

        $r5 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;

        i1 = virtualinvoke $r5.<android.support.v4.widget.ViewDragHelper: int getTouchSlop()>();

        $f8 = (float) i1;

        $b2 = f2 cmpl $f8;

        if $b2 <= 0 goto label10;

        $b3 = f3 cmpl f2;

        if $b3 <= 0 goto label10;

        $r7 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;

        virtualinvoke $r7.<android.support.v4.widget.ViewDragHelper: void cancel()>();

        r0.<android.support.v4.widget.SlidingPaneLayout: boolean mIsUnableToDrag> = 1;

        return 0;

     label10:
        $r6 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;

        z10 = virtualinvoke $r6.<android.support.v4.widget.ViewDragHelper: boolean shouldInterceptTouchEvent(android.view.MotionEvent)>(r1);

        if z10 != 0 goto label11;

        if z9 == 0 goto label12;

     label11:
        $z4 = 1;

        goto label13;

     label12:
        $z4 = 0;

     label13:
        return $z4;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.view.MotionEvent r1;
        int i0, i1, $i2, $i3, $i4, $i6;
        boolean z0, $z1, $z2, $z3, $z5;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, f10, f11;
        android.support.v4.widget.ViewDragHelper $r2, $r4, $r6;
        android.view.View $r3, $r5, $r7;
        byte $b5;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.view.MotionEvent;

        $z1 = r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide>;

        if $z1 != 0 goto label1;

        $z5 = specialinvoke r0.<android.view.ViewGroup: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        return $z5;

     label1:
        $r2 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;

        virtualinvoke $r2.<android.support.v4.widget.ViewDragHelper: void processTouchEvent(android.view.MotionEvent)>(r1);

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        z0 = 1;

        $i2 = i0 & 255;

        lookupswitch($i2)
        {
            case 0: goto label2;
            case 1: goto label3;
            default: goto label4;
        };

     label2:
        f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        r0.<android.support.v4.widget.SlidingPaneLayout: float mInitialMotionX> = f0;

        r0.<android.support.v4.widget.SlidingPaneLayout: float mInitialMotionY> = f1;

        goto label4;

     label3:
        $r3 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        $z2 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean isDimmed(android.view.View)>($r3);

        if $z2 == 0 goto label4;

        f10 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        f11 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        $f4 = r0.<android.support.v4.widget.SlidingPaneLayout: float mInitialMotionX>;

        f2 = f10 - $f4;

        $f5 = r0.<android.support.v4.widget.SlidingPaneLayout: float mInitialMotionY>;

        f3 = f11 - $f5;

        $r4 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;

        i1 = virtualinvoke $r4.<android.support.v4.widget.ViewDragHelper: int getTouchSlop()>();

        $f7 = f2 * f2;

        $f6 = f3 * f3;

        $f8 = $f7 + $f6;

        $i3 = i1 * i1;

        $f9 = (float) $i3;

        $b5 = $f8 cmpg $f9;

        if $b5 >= 0 goto label4;

        $r6 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;

        $r5 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        $i6 = (int) f10;

        $i4 = (int) f11;

        $z3 = virtualinvoke $r6.<android.support.v4.widget.ViewDragHelper: boolean isViewUnder(android.view.View,int,int)>($r5, $i6, $i4);

        if $z3 == 0 goto label4;

        $r7 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        specialinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean closePane(android.view.View,int)>($r7, 0);

        goto label4;

     label4:
        return z0;
    }

    private boolean closePane(android.view.View, int)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.view.View r1;
        int i0;
        boolean $z0, $z1;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $z0 = r0.<android.support.v4.widget.SlidingPaneLayout: boolean mFirstLayout>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean smoothSlideTo(float,int)>(0.0F, i0);

        if $z1 == 0 goto label2;

     label1:
        r0.<android.support.v4.widget.SlidingPaneLayout: boolean mPreservedOpenState> = 0;

        return 1;

     label2:
        return 0;
    }

    private boolean openPane(android.view.View, int)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.view.View r1;
        int i0;
        boolean $z0, $z1;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        $z0 = r0.<android.support.v4.widget.SlidingPaneLayout: boolean mFirstLayout>;

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean smoothSlideTo(float,int)>(1.0F, i0);

        if $z1 == 0 goto label2;

     label1:
        r0.<android.support.v4.widget.SlidingPaneLayout: boolean mPreservedOpenState> = 1;

        return 1;

     label2:
        return 0;
    }

    public void smoothSlideOpen()
    {
        android.support.v4.widget.SlidingPaneLayout r0;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean openPane()>();

        return;
    }

    public boolean openPane()
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.view.View $r1;
        boolean $z0;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        $r1 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        $z0 = specialinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean openPane(android.view.View,int)>($r1, 0);

        return $z0;
    }

    public void smoothSlideClosed()
    {
        android.support.v4.widget.SlidingPaneLayout r0;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean closePane()>();

        return;
    }

    public boolean closePane()
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.view.View $r1;
        boolean $z0;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        $r1 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        $z0 = specialinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean closePane(android.view.View,int)>($r1, 0);

        return $z0;
    }

    public boolean isOpen()
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        boolean $z0, $z1;
        float $f0;
        byte $b0;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        $z0 = r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide>;

        if $z0 == 0 goto label1;

        $f0 = r0.<android.support.v4.widget.SlidingPaneLayout: float mSlideOffset>;

        $b0 = $f0 cmpl 1.0F;

        if $b0 != 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public boolean canSlide()
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        boolean $z0;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        $z0 = r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide>;

        return $z0;
    }

    public boolean isSlideable()
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        boolean $z0;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        $z0 = r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide>;

        return $z0;
    }

    private void onPanelDragged(int)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        boolean z0, $z1;
        android.support.v4.widget.SlidingPaneLayout$LayoutParams r1;
        android.view.View $r2, $r3, $r5, $r6, $r7;
        android.view.ViewGroup$LayoutParams $r4;
        float $f0, $f1, $f2, $f3, $f4;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        i0 := @parameter0: int;

        $r2 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        if $r2 != null goto label1;

        r0.<android.support.v4.widget.SlidingPaneLayout: float mSlideOffset> = 0.0F;

        return;

     label1:
        z0 = specialinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean isLayoutRtlSupport()>();

        $r3 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        $r4 = virtualinvoke $r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r1 = (android.support.v4.widget.SlidingPaneLayout$LayoutParams) $r4;

        $r5 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        i1 = virtualinvoke $r5.<android.view.View: int getWidth()>();

        if z0 == 0 goto label2;

        $i13 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getWidth()>();

        $i12 = $i13 - i0;

        $i14 = $i12 - i1;

        goto label3;

     label2:
        $i14 = i0;

     label3:
        i2 = $i14;

        if z0 == 0 goto label4;

        $i6 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingRight()>();

        goto label5;

     label4:
        $i6 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingLeft()>();

     label5:
        i3 = $i6;

        if z0 == 0 goto label6;

        $i11 = r1.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int rightMargin>;

        goto label7;

     label6:
        $i11 = r1.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int leftMargin>;

     label7:
        i4 = $i11;

        i5 = i3 + i4;

        $i8 = i2 - i5;

        $f0 = (float) $i8;

        $i7 = r0.<android.support.v4.widget.SlidingPaneLayout: int mSlideRange>;

        $f1 = (float) $i7;

        $f2 = $f0 / $f1;

        r0.<android.support.v4.widget.SlidingPaneLayout: float mSlideOffset> = $f2;

        $i9 = r0.<android.support.v4.widget.SlidingPaneLayout: int mParallaxBy>;

        if $i9 == 0 goto label8;

        $f4 = r0.<android.support.v4.widget.SlidingPaneLayout: float mSlideOffset>;

        specialinvoke r0.<android.support.v4.widget.SlidingPaneLayout: void parallaxOtherViews(float)>($f4);

     label8:
        $z1 = r1.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: boolean dimWhenOffset>;

        if $z1 == 0 goto label9;

        $r7 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        $f3 = r0.<android.support.v4.widget.SlidingPaneLayout: float mSlideOffset>;

        $i10 = r0.<android.support.v4.widget.SlidingPaneLayout: int mSliderFadeColor>;

        specialinvoke r0.<android.support.v4.widget.SlidingPaneLayout: void dimChildView(android.view.View,float,int)>($r7, $f3, $i10);

     label9:
        $r6 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: void dispatchOnPanelSlide(android.view.View)>($r6);

        return;
    }

    private void dimChildView(android.view.View, float, int)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.view.View r1;
        float f0, $f1, $f2;
        int i0, i1, i2, i3, $i5, $i6, $i7, $i8, $i9;
        android.support.v4.widget.SlidingPaneLayout$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;
        byte $b4;
        android.graphics.Paint $r4, $r7, $r10, $r11, $r14, $r15;
        android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable $r5, r16;
        java.util.ArrayList $r6;
        android.graphics.PorterDuffColorFilter $r9;
        android.graphics.PorterDuff$Mode $r12;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        i0 := @parameter2: int;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.support.v4.widget.SlidingPaneLayout$LayoutParams) $r3;

        $b4 = f0 cmpl 0.0F;

        if $b4 <= 0 goto label3;

        if i0 == 0 goto label3;

        $i6 = i0 & -16777216;

        i1 = $i6 >>> 24;

        $f2 = (float) i1;

        $f1 = $f2 * f0;

        i2 = (int) $f1;

        $i7 = i2 << 24;

        $i8 = i0 & 16777215;

        i3 = $i7 | $i8;

        $r10 = r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: android.graphics.Paint dimPaint>;

        if $r10 != null goto label1;

        $r14 = new android.graphics.Paint;

        specialinvoke $r14.<android.graphics.Paint: void <init>()>();

        r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: android.graphics.Paint dimPaint> = $r14;

     label1:
        $r11 = r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: android.graphics.Paint dimPaint>;

        $r9 = new android.graphics.PorterDuffColorFilter;

        $r12 = <android.graphics.PorterDuff$Mode: android.graphics.PorterDuff$Mode SRC_OVER>;

        specialinvoke $r9.<android.graphics.PorterDuffColorFilter: void <init>(int,android.graphics.PorterDuff$Mode)>(i3, $r12);

        virtualinvoke $r11.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>($r9);

        $i9 = staticinvoke <android.support.v4.view.ViewCompat: int getLayerType(android.view.View)>(r1);

        if $i9 == 2 goto label2;

        $r15 = r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: android.graphics.Paint dimPaint>;

        staticinvoke <android.support.v4.view.ViewCompat: void setLayerType(android.view.View,int,android.graphics.Paint)>(r1, 2, $r15);

     label2:
        specialinvoke r0.<android.support.v4.widget.SlidingPaneLayout: void invalidateChildRegion(android.view.View)>(r1);

        goto label5;

     label3:
        $i5 = staticinvoke <android.support.v4.view.ViewCompat: int getLayerType(android.view.View)>(r1);

        if $i5 == 0 goto label5;

        $r4 = r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: android.graphics.Paint dimPaint>;

        if $r4 == null goto label4;

        $r7 = r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: android.graphics.Paint dimPaint>;

        virtualinvoke $r7.<android.graphics.Paint: android.graphics.ColorFilter setColorFilter(android.graphics.ColorFilter)>(null);

     label4:
        $r5 = new android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable;

        specialinvoke $r5.<android.support.v4.widget.SlidingPaneLayout$DisableLayerRunnable: void <init>(android.support.v4.widget.SlidingPaneLayout,android.view.View)>(r0, r1);

        r16 = $r5;

        $r6 = r0.<android.support.v4.widget.SlidingPaneLayout: java.util.ArrayList mPostedRunnables>;

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>(r16);

        staticinvoke <android.support.v4.view.ViewCompat: void postOnAnimation(android.view.View,java.lang.Runnable)>(r0, r16);

     label5:
        return;
    }

    protected boolean drawChild(android.graphics.Canvas, android.view.View, long)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.graphics.Canvas r1;
        android.view.View r2, $r12, $r15, $r20;
        long l0;
        android.support.v4.widget.SlidingPaneLayout$LayoutParams r3;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        int i1, $i2, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        android.graphics.Bitmap r4;
        android.view.ViewGroup$LayoutParams $r5;
        byte $b3;
        float $f0, $f1, $f2;
        java.lang.StringBuilder $r6, $r7, $r8, $r10;
        java.lang.String $r9;
        android.graphics.Paint $r11;
        android.graphics.Rect $r13, $r14, $r16, $r17, $r18, $r19;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: android.view.View;

        l0 := @parameter2: long;

        $r5 = virtualinvoke r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r3 = (android.support.v4.widget.SlidingPaneLayout$LayoutParams) $r5;

        i1 = virtualinvoke r1.<android.graphics.Canvas: int save(int)>(2);

        $z1 = r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide>;

        if $z1 == 0 goto label03;

        $z5 = r3.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: boolean slideable>;

        if $z5 != 0 goto label03;

        $r12 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        if $r12 == null goto label03;

        $r14 = r0.<android.support.v4.widget.SlidingPaneLayout: android.graphics.Rect mTmpRect>;

        virtualinvoke r1.<android.graphics.Canvas: boolean getClipBounds(android.graphics.Rect)>($r14);

        $z6 = specialinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean isLayoutRtlSupport()>();

        if $z6 == 0 goto label01;

        $r19 = r0.<android.support.v4.widget.SlidingPaneLayout: android.graphics.Rect mTmpRect>;

        $r17 = r0.<android.support.v4.widget.SlidingPaneLayout: android.graphics.Rect mTmpRect>;

        $i11 = $r17.<android.graphics.Rect: int left>;

        $r20 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        $i10 = virtualinvoke $r20.<android.view.View: int getRight()>();

        $i12 = staticinvoke <java.lang.Math: int max(int,int)>($i11, $i10);

        $r19.<android.graphics.Rect: int left> = $i12;

        goto label02;

     label01:
        $r16 = r0.<android.support.v4.widget.SlidingPaneLayout: android.graphics.Rect mTmpRect>;

        $r13 = r0.<android.support.v4.widget.SlidingPaneLayout: android.graphics.Rect mTmpRect>;

        $i7 = $r13.<android.graphics.Rect: int right>;

        $r15 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        $i8 = virtualinvoke $r15.<android.view.View: int getLeft()>();

        $i9 = staticinvoke <java.lang.Math: int min(int,int)>($i7, $i8);

        $r16.<android.graphics.Rect: int right> = $i9;

     label02:
        $r18 = r0.<android.support.v4.widget.SlidingPaneLayout: android.graphics.Rect mTmpRect>;

        virtualinvoke r1.<android.graphics.Canvas: boolean clipRect(android.graphics.Rect)>($r18);

     label03:
        $i2 = <android.os.Build$VERSION: int SDK_INT>;

        if $i2 < 11 goto label04;

        z0 = specialinvoke r0.<android.view.ViewGroup: boolean drawChild(android.graphics.Canvas,android.view.View,long)>(r1, r2, l0);

        goto label10;

     label04:
        $z2 = r3.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: boolean dimWhenOffset>;

        if $z2 == 0 goto label08;

        $f0 = r0.<android.support.v4.widget.SlidingPaneLayout: float mSlideOffset>;

        $b3 = $f0 cmpl 0.0F;

        if $b3 <= 0 goto label08;

        $z4 = virtualinvoke r2.<android.view.View: boolean isDrawingCacheEnabled()>();

        if $z4 != 0 goto label05;

        virtualinvoke r2.<android.view.View: void setDrawingCacheEnabled(boolean)>(1);

     label05:
        r4 = virtualinvoke r2.<android.view.View: android.graphics.Bitmap getDrawingCache()>();

        if r4 == null goto label06;

        $i5 = virtualinvoke r2.<android.view.View: int getLeft()>();

        $f1 = (float) $i5;

        $i6 = virtualinvoke r2.<android.view.View: int getTop()>();

        $f2 = (float) $i6;

        $r11 = r3.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: android.graphics.Paint dimPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawBitmap(android.graphics.Bitmap,float,float,android.graphics.Paint)>(r4, $f1, $f2, $r11);

        z0 = 0;

        goto label07;

     label06:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("drawChild: child view ");

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" returned null drawing cache");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("SlidingPaneLayout", $r9);

        z0 = specialinvoke r0.<android.view.ViewGroup: boolean drawChild(android.graphics.Canvas,android.view.View,long)>(r1, r2, l0);

     label07:
        goto label10;

     label08:
        $z3 = virtualinvoke r2.<android.view.View: boolean isDrawingCacheEnabled()>();

        if $z3 == 0 goto label09;

        virtualinvoke r2.<android.view.View: void setDrawingCacheEnabled(boolean)>(0);

     label09:
        z0 = specialinvoke r0.<android.view.ViewGroup: boolean drawChild(android.graphics.Canvas,android.view.View,long)>(r1, r2, l0);

     label10:
        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i1);

        return z0;
    }

    private void invalidateChildRegion(android.view.View)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.view.View r1;
        android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl $r2;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.view.View;

        $r2 = <android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL>;

        interfaceinvoke $r2.<android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl: void invalidateChildRegion(android.support.v4.widget.SlidingPaneLayout,android.view.View)>(r0, r1);

        return;
    }

    boolean smoothSlideTo(float, int)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12;
        boolean z0, $z1, $z2;
        android.support.v4.widget.SlidingPaneLayout$LayoutParams r1;
        android.view.View $r2, $r4, $r5, $r7;
        android.view.ViewGroup$LayoutParams $r3;
        android.support.v4.widget.ViewDragHelper $r6;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        f0 := @parameter0: float;

        i0 := @parameter1: int;

        $z1 = r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide>;

        if $z1 != 0 goto label1;

        return 0;

     label1:
        z0 = specialinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean isLayoutRtlSupport()>();

        $r2 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r1 = (android.support.v4.widget.SlidingPaneLayout$LayoutParams) $r3;

        if z0 == 0 goto label2;

        $i9 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingRight()>();

        $i8 = r1.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int rightMargin>;

        i2 = $i9 + $i8;

        $r7 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        i3 = virtualinvoke $r7.<android.view.View: int getWidth()>();

        $i11 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getWidth()>();

        $f11 = (float) $i11;

        $f9 = (float) i2;

        $i10 = r0.<android.support.v4.widget.SlidingPaneLayout: int mSlideRange>;

        $f6 = (float) $i10;

        $f5 = f0 * $f6;

        $f7 = $f9 + $f5;

        $f10 = (float) i3;

        $f8 = $f7 + $f10;

        $f12 = $f11 - $f8;

        i1 = (int) $f12;

        goto label3;

     label2:
        $i4 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getPaddingLeft()>();

        $i5 = r1.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int leftMargin>;

        i12 = $i4 + $i5;

        $f2 = (float) i12;

        $i6 = r0.<android.support.v4.widget.SlidingPaneLayout: int mSlideRange>;

        $f1 = (float) $i6;

        $f3 = f0 * $f1;

        $f4 = $f2 + $f3;

        i1 = (int) $f4;

     label3:
        $r6 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;

        $r5 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        $r4 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        $i7 = virtualinvoke $r4.<android.view.View: int getTop()>();

        $z2 = virtualinvoke $r6.<android.support.v4.widget.ViewDragHelper: boolean smoothSlideViewTo(android.view.View,int,int)>($r5, i1, $i7);

        if $z2 == 0 goto label4;

        virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: void setAllChildrenVisible()>();

        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(r0);

        return 1;

     label4:
        return 0;
    }

    public void computeScroll()
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.support.v4.widget.ViewDragHelper $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        $r1 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;

        $z0 = virtualinvoke $r1.<android.support.v4.widget.ViewDragHelper: boolean continueSettling(boolean)>(1);

        if $z0 == 0 goto label2;

        $z1 = r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide>;

        if $z1 != 0 goto label1;

        $r2 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;

        virtualinvoke $r2.<android.support.v4.widget.ViewDragHelper: void abort()>();

        return;

     label1:
        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(r0);

     label2:
        return;
    }

    public void setShadowDrawable(android.graphics.drawable.Drawable)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: void setShadowDrawableLeft(android.graphics.drawable.Drawable)>(r1);

        return;
    }

    public void setShadowDrawableLeft(android.graphics.drawable.Drawable)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r0.<android.support.v4.widget.SlidingPaneLayout: android.graphics.drawable.Drawable mShadowDrawableLeft> = r1;

        return;
    }

    public void setShadowDrawableRight(android.graphics.drawable.Drawable)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r0.<android.support.v4.widget.SlidingPaneLayout: android.graphics.drawable.Drawable mShadowDrawableRight> = r1;

        return;
    }

    public void setShadowResource(int)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        int i0;
        android.content.res.Resources $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(i0);

        virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: void setShadowDrawable(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public void setShadowResourceLeft(int)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        int i0;
        android.content.res.Resources $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(i0);

        virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: void setShadowDrawableLeft(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public void setShadowResourceRight(int)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        int i0;
        android.content.res.Resources $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(i0);

        virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: void setShadowDrawableRight(android.graphics.drawable.Drawable)>($r2);

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.graphics.Canvas r1;
        boolean z0, $z1;
        android.graphics.drawable.Drawable r2;
        android.view.View r3, $r4;
        int i0, i1, i2, i3, i4, $i5;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.view.ViewGroup: void draw(android.graphics.Canvas)>(r1);

        z0 = specialinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean isLayoutRtlSupport()>();

        if z0 == 0 goto label1;

        r2 = r0.<android.support.v4.widget.SlidingPaneLayout: android.graphics.drawable.Drawable mShadowDrawableRight>;

        goto label2;

     label1:
        r2 = r0.<android.support.v4.widget.SlidingPaneLayout: android.graphics.drawable.Drawable mShadowDrawableLeft>;

     label2:
        $i5 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getChildCount()>();

        if $i5 <= 1 goto label3;

        $r4 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View getChildAt(int)>(1);

        goto label4;

     label3:
        $r4 = null;

     label4:
        r3 = $r4;

        if r3 == null goto label5;

        if r2 != null goto label6;

     label5:
        return;

     label6:
        i0 = virtualinvoke r3.<android.view.View: int getTop()>();

        i1 = virtualinvoke r3.<android.view.View: int getBottom()>();

        i2 = virtualinvoke r2.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        $z1 = specialinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean isLayoutRtlSupport()>();

        if $z1 == 0 goto label7;

        i3 = virtualinvoke r3.<android.view.View: int getRight()>();

        i4 = i3 + i2;

        goto label8;

     label7:
        i4 = virtualinvoke r3.<android.view.View: int getLeft()>();

        i3 = i4 - i2;

     label8:
        virtualinvoke r2.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(i3, i0, i4, i1);

        virtualinvoke r2.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        return;
    }

    private void parallaxOtherViews(float)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;
        boolean z0, z1, $z2, $z3;
        android.support.v4.widget.SlidingPaneLayout$LayoutParams r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9;
        android.view.View r2, $r3, $r5;
        android.view.ViewGroup$LayoutParams $r4;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        f0 := @parameter0: float;

        z0 = specialinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean isLayoutRtlSupport()>();

        $r3 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        $r4 = virtualinvoke $r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r1 = (android.support.v4.widget.SlidingPaneLayout$LayoutParams) $r4;

        $z2 = r1.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: boolean dimWhenOffset>;

        if $z2 == 0 goto label03;

        if z0 == 0 goto label01;

        $i9 = r1.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int rightMargin>;

        goto label02;

     label01:
        $i9 = r1.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: int leftMargin>;

     label02:
        if $i9 > 0 goto label03;

        $z3 = 1;

        goto label04;

     label03:
        $z3 = 0;

     label04:
        z1 = $z3;

        i0 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: int getChildCount()>();

        i1 = 0;

     label05:
        if i1 >= i0 goto label12;

        r2 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View getChildAt(int)>(i1);

        $r5 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        if r2 != $r5 goto label06;

        goto label11;

     label06:
        $f1 = r0.<android.support.v4.widget.SlidingPaneLayout: float mParallaxOffset>;

        $f2 = 1.0F - $f1;

        $i5 = r0.<android.support.v4.widget.SlidingPaneLayout: int mParallaxBy>;

        $f3 = (float) $i5;

        $f4 = $f2 * $f3;

        i2 = (int) $f4;

        r0.<android.support.v4.widget.SlidingPaneLayout: float mParallaxOffset> = f0;

        $f5 = 1.0F - f0;

        $i6 = r0.<android.support.v4.widget.SlidingPaneLayout: int mParallaxBy>;

        $f6 = (float) $i6;

        $f8 = $f5 * $f6;

        i3 = (int) $f8;

        i4 = i2 - i3;

        if z0 == 0 goto label07;

        $i8 = neg i4;

        goto label08;

     label07:
        $i8 = i4;

     label08:
        virtualinvoke r2.<android.view.View: void offsetLeftAndRight(int)>($i8);

        if z1 == 0 goto label11;

        if z0 == 0 goto label09;

        $f10 = r0.<android.support.v4.widget.SlidingPaneLayout: float mParallaxOffset>;

        $f9 = $f10 - 1.0F;

        goto label10;

     label09:
        $f7 = r0.<android.support.v4.widget.SlidingPaneLayout: float mParallaxOffset>;

        $f9 = 1.0F - $f7;

     label10:
        $i7 = r0.<android.support.v4.widget.SlidingPaneLayout: int mCoveredFadeColor>;

        specialinvoke r0.<android.support.v4.widget.SlidingPaneLayout: void dimChildView(android.view.View,float,int)>(r2, $f9, $i7);

     label11:
        i1 = i1 + 1;

        goto label05;

     label12:
        return;
    }

    protected boolean canScroll(android.view.View, boolean, int, int, int)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.view.View r1, r3;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        android.view.ViewGroup r2;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.view.View;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $z1 = r1 instanceof android.view.ViewGroup;

        if $z1 == 0 goto label3;

        r2 = (android.view.ViewGroup) r1;

        i3 = virtualinvoke r1.<android.view.View: int getScrollX()>();

        i4 = virtualinvoke r1.<android.view.View: int getScrollY()>();

        i5 = virtualinvoke r2.<android.view.ViewGroup: int getChildCount()>();

        i6 = i5 - 1;

     label1:
        if i6 < 0 goto label3;

        r3 = virtualinvoke r2.<android.view.ViewGroup: android.view.View getChildAt(int)>(i6);

        $i8 = i1 + i3;

        $i10 = virtualinvoke r3.<android.view.View: int getLeft()>();

        if $i8 < $i10 goto label2;

        $i9 = i1 + i3;

        $i12 = virtualinvoke r3.<android.view.View: int getRight()>();

        if $i9 >= $i12 goto label2;

        $i11 = i2 + i4;

        $i14 = virtualinvoke r3.<android.view.View: int getTop()>();

        if $i11 < $i14 goto label2;

        $i13 = i2 + i4;

        $i15 = virtualinvoke r3.<android.view.View: int getBottom()>();

        if $i13 >= $i15 goto label2;

        $i17 = i1 + i3;

        $i16 = virtualinvoke r3.<android.view.View: int getLeft()>();

        $i20 = $i17 - $i16;

        $i21 = i2 + i4;

        $i18 = virtualinvoke r3.<android.view.View: int getTop()>();

        $i19 = $i21 - $i18;

        $z5 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean canScroll(android.view.View,boolean,int,int,int)>(r3, 1, i0, $i20, $i19);

        if $z5 == 0 goto label2;

        return 1;

     label2:
        i6 = i6 + -1;

        goto label1;

     label3:
        if z0 == 0 goto label6;

        $z2 = specialinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean isLayoutRtlSupport()>();

        if $z2 == 0 goto label4;

        $i7 = i0;

        goto label5;

     label4:
        $i7 = neg i0;

     label5:
        $z3 = staticinvoke <android.support.v4.view.ViewCompat: boolean canScrollHorizontally(android.view.View,int)>(r1, $i7);

        if $z3 == 0 goto label6;

        $z4 = 1;

        goto label7;

     label6:
        $z4 = 0;

     label7:
        return $z4;
    }

    boolean isDimmed(android.view.View)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.view.View r1;
        android.support.v4.widget.SlidingPaneLayout$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;
        boolean $z0, $z1, $z2;
        float $f0;
        byte $b0;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.view.View;

        if r1 != null goto label1;

        return 0;

     label1:
        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.support.v4.widget.SlidingPaneLayout$LayoutParams) $r3;

        $z0 = r0.<android.support.v4.widget.SlidingPaneLayout: boolean mCanSlide>;

        if $z0 == 0 goto label2;

        $z1 = r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: boolean dimWhenOffset>;

        if $z1 == 0 goto label2;

        $f0 = r0.<android.support.v4.widget.SlidingPaneLayout: float mSlideOffset>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 <= 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    protected android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.support.v4.widget.SlidingPaneLayout$LayoutParams $r1;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        $r1 = new android.support.v4.widget.SlidingPaneLayout$LayoutParams;

        specialinvoke $r1.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: void <init>()>();

        return $r1;
    }

    protected android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0;
        android.support.v4.widget.SlidingPaneLayout$LayoutParams $r2;
        android.view.ViewGroup$MarginLayoutParams $r3;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof android.view.ViewGroup$MarginLayoutParams;

        if $z0 == 0 goto label1;

        $r2 = new android.support.v4.widget.SlidingPaneLayout$LayoutParams;

        $r3 = (android.view.ViewGroup$MarginLayoutParams) r1;

        specialinvoke $r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>($r3);

        goto label2;

     label1:
        $r2 = new android.support.v4.widget.SlidingPaneLayout$LayoutParams;

        specialinvoke $r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r1);

     label2:
        return $r2;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0, $z1, $z2;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof android.support.v4.widget.SlidingPaneLayout$LayoutParams;

        if $z0 == 0 goto label1;

        $z1 = specialinvoke r0.<android.view.ViewGroup: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>(r1);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.util.AttributeSet r1;
        android.support.v4.widget.SlidingPaneLayout$LayoutParams $r2;
        android.content.Context $r3;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = new android.support.v4.widget.SlidingPaneLayout$LayoutParams;

        $r3 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: android.content.Context getContext()>();

        specialinvoke $r2.<android.support.v4.widget.SlidingPaneLayout$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, r1);

        return $r2;
    }

    protected android.os.Parcelable onSaveInstanceState()
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.os.Parcelable r1;
        android.support.v4.widget.SlidingPaneLayout$SavedState r2, $r3;
        boolean $z0, $z1;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 = specialinvoke r0.<android.view.ViewGroup: android.os.Parcelable onSaveInstanceState()>();

        $r3 = new android.support.v4.widget.SlidingPaneLayout$SavedState;

        specialinvoke $r3.<android.support.v4.widget.SlidingPaneLayout$SavedState: void <init>(android.os.Parcelable)>(r1);

        r2 = $r3;

        $z0 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean isSlideable()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean isOpen()>();

        goto label2;

     label1:
        $z1 = r0.<android.support.v4.widget.SlidingPaneLayout: boolean mPreservedOpenState>;

     label2:
        r2.<android.support.v4.widget.SlidingPaneLayout$SavedState: boolean isOpen> = $z1;

        return r2;
    }

    protected void onRestoreInstanceState(android.os.Parcelable)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.os.Parcelable r1, $r3;
        android.support.v4.widget.SlidingPaneLayout$SavedState r2;
        boolean $z0, $z2;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter0: android.os.Parcelable;

        r2 = (android.support.v4.widget.SlidingPaneLayout$SavedState) r1;

        $r3 = virtualinvoke r2.<android.support.v4.widget.SlidingPaneLayout$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.view.ViewGroup: void onRestoreInstanceState(android.os.Parcelable)>($r3);

        $z0 = r2.<android.support.v4.widget.SlidingPaneLayout$SavedState: boolean isOpen>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean openPane()>();

        goto label2;

     label1:
        virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean closePane()>();

     label2:
        $z2 = r2.<android.support.v4.widget.SlidingPaneLayout$SavedState: boolean isOpen>;

        r0.<android.support.v4.widget.SlidingPaneLayout: boolean mPreservedOpenState> = $z2;

        return;
    }

    private boolean isLayoutRtlSupport()
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        int $i0;
        boolean $z0;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout;

        $i0 = staticinvoke <android.support.v4.view.ViewCompat: int getLayoutDirection(android.view.View)>(r0);

        if $i0 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static boolean access$100(android.support.v4.widget.SlidingPaneLayout)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        boolean $z0;

        r0 := @parameter0: android.support.v4.widget.SlidingPaneLayout;

        $z0 = r0.<android.support.v4.widget.SlidingPaneLayout: boolean mIsUnableToDrag>;

        return $z0;
    }

    static android.support.v4.widget.ViewDragHelper access$200(android.support.v4.widget.SlidingPaneLayout)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.support.v4.widget.ViewDragHelper $r1;

        r0 := @parameter0: android.support.v4.widget.SlidingPaneLayout;

        $r1 = r0.<android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.ViewDragHelper mDragHelper>;

        return $r1;
    }

    static float access$300(android.support.v4.widget.SlidingPaneLayout)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        float $f0;

        r0 := @parameter0: android.support.v4.widget.SlidingPaneLayout;

        $f0 = r0.<android.support.v4.widget.SlidingPaneLayout: float mSlideOffset>;

        return $f0;
    }

    static android.view.View access$400(android.support.v4.widget.SlidingPaneLayout)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.view.View $r1;

        r0 := @parameter0: android.support.v4.widget.SlidingPaneLayout;

        $r1 = r0.<android.support.v4.widget.SlidingPaneLayout: android.view.View mSlideableView>;

        return $r1;
    }

    static boolean access$502(android.support.v4.widget.SlidingPaneLayout, boolean)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        boolean z0;

        r0 := @parameter0: android.support.v4.widget.SlidingPaneLayout;

        z0 := @parameter1: boolean;

        r0.<android.support.v4.widget.SlidingPaneLayout: boolean mPreservedOpenState> = z0;

        return z0;
    }

    static void access$600(android.support.v4.widget.SlidingPaneLayout, int)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        int i0;

        r0 := @parameter0: android.support.v4.widget.SlidingPaneLayout;

        i0 := @parameter1: int;

        specialinvoke r0.<android.support.v4.widget.SlidingPaneLayout: void onPanelDragged(int)>(i0);

        return;
    }

    static boolean access$700(android.support.v4.widget.SlidingPaneLayout)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        boolean $z0;

        r0 := @parameter0: android.support.v4.widget.SlidingPaneLayout;

        $z0 = specialinvoke r0.<android.support.v4.widget.SlidingPaneLayout: boolean isLayoutRtlSupport()>();

        return $z0;
    }

    static int access$800(android.support.v4.widget.SlidingPaneLayout)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        int $i0;

        r0 := @parameter0: android.support.v4.widget.SlidingPaneLayout;

        $i0 = r0.<android.support.v4.widget.SlidingPaneLayout: int mSlideRange>;

        return $i0;
    }

    static void access$1000(android.support.v4.widget.SlidingPaneLayout, android.view.View)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        android.view.View r1;

        r0 := @parameter0: android.support.v4.widget.SlidingPaneLayout;

        r1 := @parameter1: android.view.View;

        specialinvoke r0.<android.support.v4.widget.SlidingPaneLayout: void invalidateChildRegion(android.view.View)>(r1);

        return;
    }

    static java.util.ArrayList access$1100(android.support.v4.widget.SlidingPaneLayout)
    {
        android.support.v4.widget.SlidingPaneLayout r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: android.support.v4.widget.SlidingPaneLayout;

        $r1 = r0.<android.support.v4.widget.SlidingPaneLayout: java.util.ArrayList mPostedRunnables>;

        return $r1;
    }

    static void <clinit>()
    {
        int i0;
        android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase $r0;
        android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB $r1;
        android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1 $r2;

        <android.support.v4.widget.SlidingPaneLayout: int MIN_FLING_VELOCITY> = 400;

        <android.support.v4.widget.SlidingPaneLayout: int DEFAULT_FADE_COLOR> = -858993460;

        <android.support.v4.widget.SlidingPaneLayout: int DEFAULT_OVERHANG_SIZE> = 32;

        <android.support.v4.widget.SlidingPaneLayout: java.lang.String TAG> = "SlidingPaneLayout";

        i0 = <android.os.Build$VERSION: int SDK_INT>;

        if i0 < 17 goto label1;

        $r2 = new android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1;

        specialinvoke $r2.<android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJBMR1: void <init>()>();

        <android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL> = $r2;

        goto label3;

     label1:
        if i0 < 16 goto label2;

        $r1 = new android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB;

        specialinvoke $r1.<android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplJB: void <init>()>();

        <android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL> = $r1;

        goto label3;

     label2:
        $r0 = new android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase;

        specialinvoke $r0.<android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImplBase: void <init>()>();

        <android.support.v4.widget.SlidingPaneLayout: android.support.v4.widget.SlidingPaneLayout$SlidingPanelLayoutImpl IMPL> = $r0;

     label3:
        return;
    }
}
