public class com.android.packageinstaller.PackageInstallerActivity extends android.app.Activity implements android.content.DialogInterface$OnCancelListener, android.view.View$OnClickListener
{
    private static final java.lang.String TAG;
    private int mSessionId;
    private android.net.Uri mPackageURI;
    private android.net.Uri mOriginatingURI;
    private android.net.Uri mReferrerURI;
    private int mOriginatingUid;
    private android.content.pm.ManifestDigest mPkgDigest;
    private boolean localLOGV;
    android.content.pm.PackageManager mPm;
    android.content.pm.PackageInstaller mInstaller;
    android.content.pm.PackageInfo mPkgInfo;
    android.content.pm.ApplicationInfo mSourceInfo;
    private android.content.pm.ApplicationInfo mAppInfo;
    private com.android.packageinstaller.InstallFlowAnalytics mInstallFlowAnalytics;
    android.view.View mInstallConfirm;
    private android.widget.Button mOk;
    private android.widget.Button mCancel;
    com.android.packageinstaller.CaffeinatedScrollView mScrollView;
    private boolean mOkCanInstall;
    static final java.lang.String PREFS_ALLOWED_SOURCES;
    private static final java.lang.String PACKAGE_MIME_TYPE;
    private static final java.lang.String TAB_ID_ALL;
    private static final java.lang.String TAB_ID_NEW;
    private static final int DLG_BASE;
    private static final int DLG_UNKNOWN_APPS;
    private static final int DLG_PACKAGE_ERROR;
    private static final int DLG_OUT_OF_SPACE;
    private static final int DLG_INSTALL_ERROR;
    private static final int DLG_ALLOW_SOURCE;

    public void <init>()
    {
        com.android.packageinstaller.PackageInstallerActivity r0;

        r0 := @this: com.android.packageinstaller.PackageInstallerActivity;

        specialinvoke r0.<android.app.Activity: void <init>()>();

        r0.<com.android.packageinstaller.PackageInstallerActivity: int mSessionId> = -1;

        r0.<com.android.packageinstaller.PackageInstallerActivity: int mOriginatingUid> = -1;

        r0.<com.android.packageinstaller.PackageInstallerActivity: boolean localLOGV> = 0;

        r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.ApplicationInfo mAppInfo> = null;

        r0.<com.android.packageinstaller.PackageInstallerActivity: com.android.packageinstaller.CaffeinatedScrollView mScrollView> = null;

        r0.<com.android.packageinstaller.PackageInstallerActivity: boolean mOkCanInstall> = 0;

        return;
    }

    private void startInstallConfirm()
    {
        com.android.packageinstaller.PackageInstallerActivity r0;
        android.widget.TabHost r1;
        android.support.v4.view.ViewPager r2;
        com.android.packageinstaller.TabsAdapter r3, $r9;
        boolean z0, z1, $z2;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.widget.AppSecurityPermissions r4, $r32;
        android.view.LayoutInflater r5, r65;
        android.widget.TextView r6, $r26;
        android.view.View $r7, $r8, $r13, $r14, $r15, $r23, $r27, $r28, $r34, $r37, $r38, $r39, $r41, $r46, $r47, $r51, $r52, $r55, $r60, r66;
        com.android.packageinstaller.PackageInstallerActivity$1 $r10;
        com.android.packageinstaller.InstallFlowAnalytics $r11, $r29, $r30, $r53;
        android.content.pm.PackageInfo $r12, $r33;
        android.widget.Button $r16, $r17, $r18, $r20, $r24;
        com.android.packageinstaller.CaffeinatedScrollView $r19, $r21, $r40, $r50, $r56, $r57, $r58, $r59, $r61;
        com.android.packageinstaller.PackageInstallerActivity$2 $r22;
        android.content.pm.ApplicationInfo $r25, $r31, $r36, $r49;
        java.lang.Object $r35, $r54;
        android.widget.TabHost$TabSpec $r42, $r44, $r62, $r64;
        java.lang.CharSequence $r43, $r63;
        android.view.ViewGroup $r45, $r48;

        r0 := @this: com.android.packageinstaller.PackageInstallerActivity;

        $r7 = virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: android.view.View findViewById(int)>(16908306);

        r1 = (android.widget.TabHost) $r7;

        virtualinvoke r1.<android.widget.TabHost: void setup()>();

        $r8 = virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: android.view.View findViewById(int)>(2131165193);

        r2 = (android.support.v4.view.ViewPager) $r8;

        $r9 = new com.android.packageinstaller.TabsAdapter;

        specialinvoke $r9.<com.android.packageinstaller.TabsAdapter: void <init>(android.app.Activity,android.widget.TabHost,android.support.v4.view.ViewPager)>(r0, r1, r2);

        r3 = $r9;

        $r10 = new com.android.packageinstaller.PackageInstallerActivity$1;

        specialinvoke $r10.<com.android.packageinstaller.PackageInstallerActivity$1: void <init>(com.android.packageinstaller.PackageInstallerActivity)>(r0);

        virtualinvoke r3.<com.android.packageinstaller.TabsAdapter: void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener)>($r10);

        z0 = 0;

        r0.<com.android.packageinstaller.PackageInstallerActivity: com.android.packageinstaller.CaffeinatedScrollView mScrollView> = null;

        r0.<com.android.packageinstaller.PackageInstallerActivity: boolean mOkCanInstall> = 0;

        i0 = 0;

        $r12 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.PackageInfo mPkgInfo>;

        if $r12 == null goto label15;

        $r32 = new android.widget.AppSecurityPermissions;

        $r33 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.PackageInfo mPkgInfo>;

        specialinvoke $r32.<android.widget.AppSecurityPermissions: void <init>(android.content.Context,android.content.pm.PackageInfo)>(r0, $r33);

        r4 = $r32;

        i1 = virtualinvoke r4.<android.widget.AppSecurityPermissions: int getPermissionCount(int)>(1);

        i2 = virtualinvoke r4.<android.widget.AppSecurityPermissions: int getPermissionCount(int)>(2);

        $r36 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.ApplicationInfo mAppInfo>;

        if $r36 == null goto label07;

        $r49 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.ApplicationInfo mAppInfo>;

        $i7 = $r49.<android.content.pm.ApplicationInfo: int flags>;

        $i8 = $i7 & 1;

        if $i8 == 0 goto label01;

        $i9 = 2131034124;

        goto label02;

     label01:
        $i9 = 2131034123;

     label02:
        i0 = $i9;

        $r56 = new com.android.packageinstaller.CaffeinatedScrollView;

        specialinvoke $r56.<com.android.packageinstaller.CaffeinatedScrollView: void <init>(android.content.Context)>(r0);

        r0.<com.android.packageinstaller.PackageInstallerActivity: com.android.packageinstaller.CaffeinatedScrollView mScrollView> = $r56;

        $r57 = r0.<com.android.packageinstaller.PackageInstallerActivity: com.android.packageinstaller.CaffeinatedScrollView mScrollView>;

        virtualinvoke $r57.<com.android.packageinstaller.CaffeinatedScrollView: void setFillViewport(boolean)>(1);

        $i6 = virtualinvoke r4.<android.widget.AppSecurityPermissions: int getPermissionCount(int)>(4);

        if $i6 <= 0 goto label03;

        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        z1 = $z2;

        $r53 = r0.<com.android.packageinstaller.PackageInstallerActivity: com.android.packageinstaller.InstallFlowAnalytics mInstallFlowAnalytics>;

        virtualinvoke $r53.<com.android.packageinstaller.InstallFlowAnalytics: void setNewPermissionsFound(boolean)>(z1);

        if z1 == 0 goto label05;

        z0 = 1;

        $r59 = r0.<com.android.packageinstaller.PackageInstallerActivity: com.android.packageinstaller.CaffeinatedScrollView mScrollView>;

        $r60 = virtualinvoke r4.<android.widget.AppSecurityPermissions: android.view.View getPermissionsView(int)>(4);

        virtualinvoke $r59.<com.android.packageinstaller.CaffeinatedScrollView: void addView(android.view.View)>($r60);

        goto label06;

     label05:
        $r54 = virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");

        r5 = (android.view.LayoutInflater) $r54;

        $r55 = virtualinvoke r5.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(2130903043, null);

        r6 = (android.widget.TextView) $r55;

        virtualinvoke r6.<android.widget.TextView: void setText(int)>(2131034173);

        $r61 = r0.<com.android.packageinstaller.PackageInstallerActivity: com.android.packageinstaller.CaffeinatedScrollView mScrollView>;

        virtualinvoke $r61.<com.android.packageinstaller.CaffeinatedScrollView: void addView(android.view.View)>(r6);

     label06:
        $r62 = virtualinvoke r1.<android.widget.TabHost: android.widget.TabHost$TabSpec newTabSpec(java.lang.String)>("new");

        $r63 = virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: java.lang.CharSequence getText(int)>(2131034169);

        $r64 = virtualinvoke $r62.<android.widget.TabHost$TabSpec: android.widget.TabHost$TabSpec setIndicator(java.lang.CharSequence)>($r63);

        $r58 = r0.<com.android.packageinstaller.PackageInstallerActivity: com.android.packageinstaller.CaffeinatedScrollView mScrollView>;

        virtualinvoke r3.<com.android.packageinstaller.TabsAdapter: void addTab(android.widget.TabHost$TabSpec,android.view.View)>($r64, $r58);

        goto label08;

     label07:
        $r37 = virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: android.view.View findViewById(int)>(2131165192);

        virtualinvoke $r37.<android.view.View: void setVisibility(int)>(8);

        $r34 = virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: android.view.View findViewById(int)>(2131165190);

        virtualinvoke $r34.<android.view.View: void setVisibility(int)>(0);

     label08:
        if i1 > 0 goto label09;

        if i2 <= 0 goto label15;

     label09:
        z0 = 1;

        $r35 = virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");

        r65 = (android.view.LayoutInflater) $r35;

        r66 = virtualinvoke r65.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>(2130903045, null);

        $r40 = r0.<com.android.packageinstaller.PackageInstallerActivity: com.android.packageinstaller.CaffeinatedScrollView mScrollView>;

        if $r40 != null goto label10;

        $r51 = virtualinvoke r66.<android.view.View: android.view.View findViewById(int)>(2131165204);

        $r50 = (com.android.packageinstaller.CaffeinatedScrollView) $r51;

        r0.<com.android.packageinstaller.PackageInstallerActivity: com.android.packageinstaller.CaffeinatedScrollView mScrollView> = $r50;

     label10:
        if i1 <= 0 goto label11;

        $r46 = virtualinvoke r66.<android.view.View: android.view.View findViewById(int)>(2131165205);

        $r45 = (android.view.ViewGroup) $r46;

        $r52 = virtualinvoke r4.<android.widget.AppSecurityPermissions: android.view.View getPermissionsView(int)>(1);

        virtualinvoke $r45.<android.view.ViewGroup: void addView(android.view.View)>($r52);

        goto label12;

     label11:
        $r39 = virtualinvoke r66.<android.view.View: android.view.View findViewById(int)>(2131165205);

        virtualinvoke $r39.<android.view.View: void setVisibility(int)>(8);

     label12:
        if i2 <= 0 goto label13;

        $r41 = virtualinvoke r66.<android.view.View: android.view.View findViewById(int)>(2131165206);

        $r48 = (android.view.ViewGroup) $r41;

        $r47 = virtualinvoke r4.<android.widget.AppSecurityPermissions: android.view.View getPermissionsView(int)>(2);

        virtualinvoke $r48.<android.view.ViewGroup: void addView(android.view.View)>($r47);

        goto label14;

     label13:
        $r38 = virtualinvoke r66.<android.view.View: android.view.View findViewById(int)>(2131165206);

        virtualinvoke $r38.<android.view.View: void setVisibility(int)>(8);

     label14:
        $r44 = virtualinvoke r1.<android.widget.TabHost: android.widget.TabHost$TabSpec newTabSpec(java.lang.String)>("all");

        $r43 = virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: java.lang.CharSequence getText(int)>(2131034170);

        $r42 = virtualinvoke $r44.<android.widget.TabHost$TabSpec: android.widget.TabHost$TabSpec setIndicator(java.lang.CharSequence)>($r43);

        virtualinvoke r3.<com.android.packageinstaller.TabsAdapter: void addTab(android.widget.TabHost$TabSpec,android.view.View)>($r42, r66);

     label15:
        $r11 = r0.<com.android.packageinstaller.PackageInstallerActivity: com.android.packageinstaller.InstallFlowAnalytics mInstallFlowAnalytics>;

        virtualinvoke $r11.<com.android.packageinstaller.InstallFlowAnalytics: void setPermissionsDisplayed(boolean)>(z0);

        if z0 != 0 goto label20;

        $r25 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.ApplicationInfo mAppInfo>;

        if $r25 == null goto label18;

        $r31 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.ApplicationInfo mAppInfo>;

        $i5 = $r31.<android.content.pm.ApplicationInfo: int flags>;

        $i3 = $i5 & 1;

        if $i3 == 0 goto label16;

        $i4 = 2131034126;

        goto label17;

     label16:
        $i4 = 2131034125;

     label17:
        i0 = $i4;

        goto label19;

     label18:
        i0 = 2131034122;

     label19:
        virtualinvoke r1.<android.widget.TabHost: void setVisibility(int)>(8);

        $r29 = r0.<com.android.packageinstaller.PackageInstallerActivity: com.android.packageinstaller.InstallFlowAnalytics mInstallFlowAnalytics>;

        virtualinvoke $r29.<com.android.packageinstaller.InstallFlowAnalytics: void setAllPermissionsDisplayed(boolean)>(0);

        $r30 = r0.<com.android.packageinstaller.PackageInstallerActivity: com.android.packageinstaller.InstallFlowAnalytics mInstallFlowAnalytics>;

        virtualinvoke $r30.<com.android.packageinstaller.InstallFlowAnalytics: void setNewPermissionsDisplayed(boolean)>(0);

        $r27 = virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: android.view.View findViewById(int)>(2131165191);

        virtualinvoke $r27.<android.view.View: void setVisibility(int)>(0);

        $r28 = virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: android.view.View findViewById(int)>(2131165190);

        virtualinvoke $r28.<android.view.View: void setVisibility(int)>(8);

        r0.<com.android.packageinstaller.PackageInstallerActivity: com.android.packageinstaller.CaffeinatedScrollView mScrollView> = null;

     label20:
        if i0 == 0 goto label21;

        $r23 = virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: android.view.View findViewById(int)>(2131165189);

        $r26 = (android.widget.TextView) $r23;

        virtualinvoke $r26.<android.widget.TextView: void setText(int)>(i0);

     label21:
        $r14 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.view.View mInstallConfirm>;

        virtualinvoke $r14.<android.view.View: void setVisibility(int)>(0);

        $r13 = virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: android.view.View findViewById(int)>(2131165196);

        $r16 = (android.widget.Button) $r13;

        r0.<com.android.packageinstaller.PackageInstallerActivity: android.widget.Button mOk> = $r16;

        $r15 = virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: android.view.View findViewById(int)>(2131165195);

        $r18 = (android.widget.Button) $r15;

        r0.<com.android.packageinstaller.PackageInstallerActivity: android.widget.Button mCancel> = $r18;

        $r17 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.widget.Button mOk>;

        virtualinvoke $r17.<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>(r0);

        $r20 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.widget.Button mCancel>;

        virtualinvoke $r20.<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>(r0);

        $r19 = r0.<com.android.packageinstaller.PackageInstallerActivity: com.android.packageinstaller.CaffeinatedScrollView mScrollView>;

        if $r19 != null goto label22;

        $r24 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.widget.Button mOk>;

        virtualinvoke $r24.<android.widget.Button: void setText(int)>(2131034114);

        r0.<com.android.packageinstaller.PackageInstallerActivity: boolean mOkCanInstall> = 1;

        goto label23;

     label22:
        $r21 = r0.<com.android.packageinstaller.PackageInstallerActivity: com.android.packageinstaller.CaffeinatedScrollView mScrollView>;

        $r22 = new com.android.packageinstaller.PackageInstallerActivity$2;

        specialinvoke $r22.<com.android.packageinstaller.PackageInstallerActivity$2: void <init>(com.android.packageinstaller.PackageInstallerActivity)>(r0);

        virtualinvoke $r21.<com.android.packageinstaller.CaffeinatedScrollView: void setFullScrollAction(java.lang.Runnable)>($r22);

     label23:
        return;
    }

    private void showDialogInner(int)
    {
        com.android.packageinstaller.PackageInstallerActivity r0;
        int i0;

        r0 := @this: com.android.packageinstaller.PackageInstallerActivity;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: void removeDialog(int)>(i0);

        virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: void showDialog(int)>(i0);

        return;
    }

    public android.app.Dialog onCreateDialog(int, android.os.Bundle)
    {
        com.android.packageinstaller.PackageInstallerActivity r0;
        int i0;
        android.os.Bundle r1;
        java.lang.CharSequence r2, r4, r6;
        java.lang.String r3, r5, r7, $r20, $r34, $r45;
        android.app.AlertDialog$Builder $r8, $r9, $r10, $r12, $r14, $r16, $r21, $r22, $r24, $r26, $r29, $r30, $r36, $r37, $r39, $r40, $r41, $r48, $r50, $r51, $r52, $r53, $r54, $r55, $r57, $r58, $r60, $r62;
        com.android.packageinstaller.PackageInstallerActivity$4 $r11;
        com.android.packageinstaller.PackageInstallerActivity$3 $r13;
        android.app.AlertDialog $r15, $r27, $r38, $r59, $r61;
        android.content.pm.PackageManager $r17, $r33, $r42;
        android.content.pm.ApplicationInfo $r18, $r32, $r43;
        java.lang.Object[] $r19, $r31, $r46;
        com.android.packageinstaller.PackageInstallerActivity$10 $r23;
        com.android.packageinstaller.PackageInstallerActivity$9 $r25;
        android.content.pm.PackageInfo $r28, $r44;
        com.android.packageinstaller.PackageInstallerActivity$8 $r35;
        com.android.packageinstaller.PackageInstallerActivity$7 $r47;
        com.android.packageinstaller.PackageInstallerActivity$6 $r49;
        com.android.packageinstaller.PackageInstallerActivity$5 $r56;

        r0 := @this: com.android.packageinstaller.PackageInstallerActivity;

        i0 := @parameter0: int;

        r1 := @parameter1: android.os.Bundle;

        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            default: goto label6;
        };

     label1:
        $r8 = new android.app.AlertDialog$Builder;

        specialinvoke $r8.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);

        $r9 = virtualinvoke $r8.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131034137);

        $r10 = virtualinvoke $r9.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(int)>(2131034138);

        $r11 = new com.android.packageinstaller.PackageInstallerActivity$4;

        specialinvoke $r11.<com.android.packageinstaller.PackageInstallerActivity$4: void <init>(com.android.packageinstaller.PackageInstallerActivity)>(r0);

        $r12 = virtualinvoke $r10.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)>(2131034117, $r11);

        $r13 = new com.android.packageinstaller.PackageInstallerActivity$3;

        specialinvoke $r13.<com.android.packageinstaller.PackageInstallerActivity$3: void <init>(com.android.packageinstaller.PackageInstallerActivity)>(r0);

        $r14 = virtualinvoke $r12.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>(2131034140, $r13);

        $r16 = virtualinvoke $r14.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener)>(r0);

        $r15 = virtualinvoke $r16.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();

        return $r15;

     label2:
        $r53 = new android.app.AlertDialog$Builder;

        specialinvoke $r53.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);

        $r54 = virtualinvoke $r53.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131034167);

        $r55 = virtualinvoke $r54.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(int)>(2131034168);

        $r56 = new com.android.packageinstaller.PackageInstallerActivity$5;

        specialinvoke $r56.<com.android.packageinstaller.PackageInstallerActivity$5: void <init>(com.android.packageinstaller.PackageInstallerActivity)>(r0);

        $r60 = virtualinvoke $r55.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>(2131034139, $r56);

        $r62 = virtualinvoke $r60.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener)>(r0);

        $r61 = virtualinvoke $r62.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();

        return $r61;

     label3:
        $r42 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.PackageManager mPm>;

        $r44 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.PackageInfo mPkgInfo>;

        $r43 = $r44.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        r2 = virtualinvoke $r42.<android.content.pm.PackageManager: java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)>($r43);

        $r46 = newarray (java.lang.Object)[1];

        $r45 = interfaceinvoke r2.<java.lang.CharSequence: java.lang.String toString()>();

        $r46[0] = $r45;

        r3 = virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: java.lang.String getString(int,java.lang.Object[])>(2131034148, $r46);

        $r50 = new android.app.AlertDialog$Builder;

        specialinvoke $r50.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);

        $r51 = virtualinvoke $r50.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131034147);

        $r52 = virtualinvoke $r51.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>(r3);

        $r47 = new com.android.packageinstaller.PackageInstallerActivity$7;

        specialinvoke $r47.<com.android.packageinstaller.PackageInstallerActivity$7: void <init>(com.android.packageinstaller.PackageInstallerActivity)>(r0);

        $r48 = virtualinvoke $r52.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>(2131034143, $r47);

        $r49 = new com.android.packageinstaller.PackageInstallerActivity$6;

        specialinvoke $r49.<com.android.packageinstaller.PackageInstallerActivity$6: void <init>(com.android.packageinstaller.PackageInstallerActivity)>(r0);

        $r57 = virtualinvoke $r48.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)>(2131034117, $r49);

        $r58 = virtualinvoke $r57.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener)>(r0);

        $r59 = virtualinvoke $r58.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();

        return $r59;

     label4:
        $r33 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.PackageManager mPm>;

        $r28 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.PackageInfo mPkgInfo>;

        $r32 = $r28.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        r4 = virtualinvoke $r33.<android.content.pm.PackageManager: java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)>($r32);

        $r31 = newarray (java.lang.Object)[1];

        $r34 = interfaceinvoke r4.<java.lang.CharSequence: java.lang.String toString()>();

        $r31[0] = $r34;

        r5 = virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: java.lang.String getString(int,java.lang.Object[])>(2131034135, $r31);

        $r37 = new android.app.AlertDialog$Builder;

        specialinvoke $r37.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);

        $r36 = virtualinvoke $r37.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131034127);

        $r35 = new com.android.packageinstaller.PackageInstallerActivity$8;

        specialinvoke $r35.<com.android.packageinstaller.PackageInstallerActivity$8: void <init>(com.android.packageinstaller.PackageInstallerActivity)>(r0);

        $r41 = virtualinvoke $r36.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener)>(2131034139, $r35);

        $r40 = virtualinvoke $r41.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>(r5);

        $r39 = virtualinvoke $r40.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener)>(r0);

        $r38 = virtualinvoke $r39.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();

        return $r38;

     label5:
        $r17 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.PackageManager mPm>;

        $r18 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.ApplicationInfo mSourceInfo>;

        r6 = virtualinvoke $r17.<android.content.pm.PackageManager: java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)>($r18);

        $r19 = newarray (java.lang.Object)[1];

        $r20 = interfaceinvoke r6.<java.lang.CharSequence: java.lang.String toString()>();

        $r19[0] = $r20;

        r7 = virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: java.lang.String getString(int,java.lang.Object[])>(2131034142, $r19);

        $r22 = new android.app.AlertDialog$Builder;

        specialinvoke $r22.<android.app.AlertDialog$Builder: void <init>(android.content.Context)>(r0);

        $r21 = virtualinvoke $r22.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setTitle(int)>(2131034141);

        $r24 = virtualinvoke $r21.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setMessage(java.lang.CharSequence)>(r7);

        $r23 = new com.android.packageinstaller.PackageInstallerActivity$10;

        specialinvoke $r23.<com.android.packageinstaller.PackageInstallerActivity$10: void <init>(com.android.packageinstaller.PackageInstallerActivity)>(r0);

        $r26 = virtualinvoke $r24.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener)>(2131034117, $r23);

        $r25 = new com.android.packageinstaller.PackageInstallerActivity$9;

        specialinvoke $r25.<com.android.packageinstaller.PackageInstallerActivity$9: void <init>(com.android.packageinstaller.PackageInstallerActivity)>(r0);

        $r29 = virtualinvoke $r26.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener)>(2131034139, $r25);

        $r30 = virtualinvoke $r29.<android.app.AlertDialog$Builder: android.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener)>(r0);

        $r27 = virtualinvoke $r30.<android.app.AlertDialog$Builder: android.app.AlertDialog create()>();

        return $r27;

     label6:
        return null;
    }

    private void launchSettingsAppAndFinish()
    {
        com.android.packageinstaller.PackageInstallerActivity r0;
        android.content.Intent r1, $r2;

        r0 := @this: com.android.packageinstaller.PackageInstallerActivity;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.settings.SECURITY_SETTINGS");

        r1 = $r2;

        virtualinvoke r1.<android.content.Intent: android.content.Intent setFlags(int)>(268435456);

        virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: void startActivity(android.content.Intent)>(r1);

        virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: void finish()>();

        return;
    }

    private boolean isInstallingUnknownAppsAllowed()
    {
        com.android.packageinstaller.PackageInstallerActivity r0;
        android.os.UserManager r1;
        boolean z0, z1, $z2, $z3;
        java.lang.Object $r2;
        android.os.Bundle $r3;
        android.content.ContentResolver $r4;
        int $i0;

        r0 := @this: com.android.packageinstaller.PackageInstallerActivity;

        $r2 = virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: java.lang.Object getSystemService(java.lang.String)>("user");

        r1 = (android.os.UserManager) $r2;

        $r3 = virtualinvoke r1.<android.os.UserManager: android.os.Bundle getUserRestrictions()>();

        z0 = virtualinvoke $r3.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("no_install_unknown_sources", 0);

        $r4 = virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.ContentResolver getContentResolver()>();

        $i0 = staticinvoke <android.provider.Settings$Secure: int getInt(android.content.ContentResolver,java.lang.String,int)>($r4, "install_non_market_apps", 0);

        if $i0 <= 0 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        z1 = $z3;

        if z1 == 0 goto label3;

        if z0 != 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;
    }

    private boolean isInstallRequestFromUnknownSource(android.content.Intent)
    {
        com.android.packageinstaller.PackageInstallerActivity r0;
        android.content.Intent r1;
        java.lang.String r2;
        boolean $z0;
        android.content.pm.PackageManager $r4;
        android.content.pm.ApplicationInfo $r5, $r6, $r7;
        int $i0, $i1;
        android.content.pm.PackageManager$NameNotFoundException $r8;

        r0 := @this: com.android.packageinstaller.PackageInstallerActivity;

        r1 := @parameter0: android.content.Intent;

        r2 = virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: java.lang.String getCallingPackage()>();

        if r2 == null goto label5;

        $z0 = virtualinvoke r1.<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>("android.intent.extra.NOT_UNKNOWN_SOURCE", 0);

        if $z0 == 0 goto label5;

     label1:
        $r4 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.PackageManager mPm>;

        $r5 = virtualinvoke $r4.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r2, 0);

        r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.ApplicationInfo mSourceInfo> = $r5;

        $r6 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.ApplicationInfo mSourceInfo>;

        if $r6 == null goto label3;

        $r7 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.ApplicationInfo mSourceInfo>;

        $i0 = $r7.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = $i0 & 1073741824;

        if $i1 == 0 goto label3;

     label2:
        return 0;

     label3:
        goto label5;

     label4:
        $r8 := @caughtexception;

     label5:
        return 1;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label4;
    }

    private boolean isVerifyAppsEnabled()
    {
        com.android.packageinstaller.PackageInstallerActivity r0;
        android.os.UserManager r1;
        java.lang.Object $r2;
        boolean $z0, $z1;
        android.content.ContentResolver $r3;
        int $i0;

        r0 := @this: com.android.packageinstaller.PackageInstallerActivity;

        $r2 = virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: java.lang.Object getSystemService(java.lang.String)>("user");

        r1 = (android.os.UserManager) $r2;

        $z0 = virtualinvoke r1.<android.os.UserManager: boolean hasUserRestriction(java.lang.String)>("ensure_verify_apps");

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r3 = virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.ContentResolver getContentResolver()>();

        $i0 = staticinvoke <android.provider.Settings$Global: int getInt(android.content.ContentResolver,java.lang.String,int)>($r3, "package_verifier_enable", 1);

        if $i0 <= 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    private boolean isAppVerifierInstalled()
    {
        com.android.packageinstaller.PackageInstallerActivity r0;
        android.content.pm.PackageManager r1;
        android.content.Intent r2, $r4;
        java.util.List r3;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.packageinstaller.PackageInstallerActivity;

        r1 = virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.PackageManager getPackageManager()>();

        $r4 = new android.content.Intent;

        specialinvoke $r4.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.PACKAGE_NEEDS_VERIFICATION");

        r2 = $r4;

        virtualinvoke r2.<android.content.Intent: android.content.Intent setType(java.lang.String)>("application/vnd.android.package-archive");

        virtualinvoke r2.<android.content.Intent: android.content.Intent addFlags(int)>(1);

        r3 = virtualinvoke r1.<android.content.pm.PackageManager: java.util.List queryBroadcastReceivers(android.content.Intent,int)>(r2, 0);

        $i0 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private void initiateInstall()
    {
        com.android.packageinstaller.PackageInstallerActivity r0;
        java.lang.String r1, $r15;
        java.lang.String[] r2, $r5;
        android.content.pm.PackageInfo $r4, $r16, $r17;
        android.content.pm.PackageManager $r6, $r7;
        android.content.pm.ApplicationInfo $r8, $r9, $r10, $r12, $r13, $r19;
        int $i0, $i1, $i2, $i3, $i4;
        com.android.packageinstaller.InstallFlowAnalytics $r11, $r14;
        boolean $z0, $z1;
        android.content.pm.PackageManager$NameNotFoundException $r18;

        r0 := @this: com.android.packageinstaller.PackageInstallerActivity;

        $r4 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.PackageInfo mPkgInfo>;

        r1 = $r4.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $r6 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.PackageManager mPm>;

        $r5 = newarray (java.lang.String)[1];

        $r5[0] = r1;

        r2 = virtualinvoke $r6.<android.content.pm.PackageManager: java.lang.String[] canonicalToCurrentPackageNames(java.lang.String[])>($r5);

        if r2 == null goto label1;

        $i4 = lengthof r2;

        if $i4 <= 0 goto label1;

        $r15 = r2[0];

        if $r15 == null goto label1;

        r1 = r2[0];

        $r17 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.PackageInfo mPkgInfo>;

        $r17.<android.content.pm.PackageInfo: java.lang.String packageName> = r1;

        $r16 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.PackageInfo mPkgInfo>;

        $r19 = $r16.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r19.<android.content.pm.ApplicationInfo: java.lang.String packageName> = r1;

     label1:
        $r7 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.PackageManager mPm>;

        $r8 = virtualinvoke $r7.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r1, 8192);

        r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.ApplicationInfo mAppInfo> = $r8;

        $r9 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.ApplicationInfo mAppInfo>;

        $i0 = $r9.<android.content.pm.ApplicationInfo: int flags>;

        $i1 = $i0 & 8388608;

        if $i1 != 0 goto label2;

        r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.ApplicationInfo mAppInfo> = null;

     label2:
        goto label4;

     label3:
        $r18 := @caughtexception;

        r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.ApplicationInfo mAppInfo> = null;

     label4:
        $r11 = r0.<com.android.packageinstaller.PackageInstallerActivity: com.android.packageinstaller.InstallFlowAnalytics mInstallFlowAnalytics>;

        $r10 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.ApplicationInfo mAppInfo>;

        if $r10 == null goto label5;

        $z0 = 1;

        goto label6;

     label5:
        $z0 = 0;

     label6:
        virtualinvoke $r11.<com.android.packageinstaller.InstallFlowAnalytics: void setReplace(boolean)>($z0);

        $r14 = r0.<com.android.packageinstaller.PackageInstallerActivity: com.android.packageinstaller.InstallFlowAnalytics mInstallFlowAnalytics>;

        $r12 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.ApplicationInfo mAppInfo>;

        if $r12 == null goto label7;

        $r13 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.ApplicationInfo mAppInfo>;

        $i3 = $r13.<android.content.pm.ApplicationInfo: int flags>;

        $i2 = $i3 & 1;

        if $i2 == 0 goto label7;

        $z1 = 1;

        goto label8;

     label7:
        $z1 = 0;

     label8:
        virtualinvoke $r14.<com.android.packageinstaller.InstallFlowAnalytics: void setSystemApp(boolean)>($z1);

        specialinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: void startInstallConfirm()>();

        return;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    void setPmResult(int)
    {
        com.android.packageinstaller.PackageInstallerActivity r0;
        int i0;
        android.content.Intent r1, $r2;
        byte $b1;

        r0 := @this: com.android.packageinstaller.PackageInstallerActivity;

        i0 := @parameter0: int;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.INSTALL_RESULT", i0);

        if i0 != 1 goto label1;

        $b1 = -1;

        goto label2;

     label1:
        $b1 = 1;

     label2:
        virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: void setResult(int,android.content.Intent)>($b1, r1);

        return;
    }

    protected void onCreate(android.os.Bundle)
    {
        com.android.packageinstaller.PackageInstallerActivity r0;
        android.os.Bundle r1;
        android.content.Intent r2;
        int i0, $i2, $i6;
        android.content.pm.PackageInstaller$SessionInfo r3;
        com.android.packageinstaller.PackageUtil$AppSnippet r4, $r57;
        android.content.pm.PackageParser$Package r6;
        android.content.pm.PackageManager $r7, $r8, $r46, $r52, $r65;
        android.content.pm.PackageInstaller $r9, $r81;
        java.lang.String $r10, $r11, $r24, $r28, $r29, $r35, $r47, $r63, $r67, $r69, $r70, $r75, $r83, $r85, $r86, r89;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, z9;
        android.net.Uri $r12, $r13, $r15, $r25, $r26, $r30, $r32, $r45, $r60, $r82;
        android.os.Parcelable $r14, $r16;
        com.android.packageinstaller.InstallFlowAnalytics $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r27, $r33, $r42, $r43, $r49, $r50, $r51, $r68, $r72, $r73;
        long $l1;
        java.io.File $r31, $r84, r90;
        android.content.pm.PackageUserState $r34;
        android.content.pm.ApplicationInfo $r36, $r55, $r59;
        android.content.pm.PackageInfo $r37, $r39, $r48, $r54, $r56, $r58;
        android.content.pm.ManifestDigest $r38;
        android.view.View $r40, $r41;
        java.lang.CharSequence $r53;
        java.lang.StringBuilder $r61, $r62, $r66, $r71, $r74, $r76, $r77, $r78, $r79, $r80, $r87;
        android.graphics.drawable.Drawable $r64;
        android.content.pm.PackageManager$NameNotFoundException $r88;

        r0 := @this: com.android.packageinstaller.PackageInstallerActivity;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>(r1);

        $r7 = virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.PackageManager getPackageManager()>();

        r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.PackageManager mPm> = $r7;

        $r8 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.PackageManager mPm>;

        $r9 = virtualinvoke $r8.<android.content.pm.PackageManager: android.content.pm.PackageInstaller getPackageInstaller()>();

        r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.PackageInstaller mInstaller> = $r9;

        r2 = virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.Intent getIntent()>();

        $r10 = "android.content.pm.action.CONFIRM_PERMISSIONS";

        $r11 = virtualinvoke r2.<android.content.Intent: java.lang.String getAction()>();

        $z0 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z0 == 0 goto label03;

        i0 = virtualinvoke r2.<android.content.Intent: int getIntExtra(java.lang.String,int)>("android.content.pm.extra.SESSION_ID", -1);

        $r81 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.PackageInstaller mInstaller>;

        r3 = virtualinvoke $r81.<android.content.pm.PackageInstaller: android.content.pm.PackageInstaller$SessionInfo getSessionInfo(int)>(i0);

        if r3 == null goto label01;

        $z8 = r3.<android.content.pm.PackageInstaller$SessionInfo: boolean sealed>;

        if $z8 == 0 goto label01;

        $r85 = r3.<android.content.pm.PackageInstaller$SessionInfo: java.lang.String resolvedBaseCodePath>;

        if $r85 != null goto label02;

     label01:
        $r80 = new java.lang.StringBuilder;

        specialinvoke $r80.<java.lang.StringBuilder: void <init>()>();

        $r79 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Session ");

        $i6 = r0.<com.android.packageinstaller.PackageInstallerActivity: int mSessionId>;

        $r78 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r87 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in funky state; ignoring");

        $r86 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageInstaller", $r86);

        virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: void finish()>();

        return;

     label02:
        r0.<com.android.packageinstaller.PackageInstallerActivity: int mSessionId> = i0;

        $r84 = new java.io.File;

        $r83 = r3.<android.content.pm.PackageInstaller$SessionInfo: java.lang.String resolvedBaseCodePath>;

        specialinvoke $r84.<java.io.File: void <init>(java.lang.String)>($r83);

        $r82 = staticinvoke <android.net.Uri: android.net.Uri fromFile(java.io.File)>($r84);

        r0.<com.android.packageinstaller.PackageInstallerActivity: android.net.Uri mPackageURI> = $r82;

        r0.<com.android.packageinstaller.PackageInstallerActivity: android.net.Uri mOriginatingURI> = null;

        r0.<com.android.packageinstaller.PackageInstallerActivity: android.net.Uri mReferrerURI> = null;

        goto label04;

     label03:
        r0.<com.android.packageinstaller.PackageInstallerActivity: int mSessionId> = -1;

        $r12 = virtualinvoke r2.<android.content.Intent: android.net.Uri getData()>();

        r0.<com.android.packageinstaller.PackageInstallerActivity: android.net.Uri mPackageURI> = $r12;

        $r14 = virtualinvoke r2.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("android.intent.extra.ORIGINATING_URI");

        $r13 = (android.net.Uri) $r14;

        r0.<com.android.packageinstaller.PackageInstallerActivity: android.net.Uri mOriginatingURI> = $r13;

        $r16 = virtualinvoke r2.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("android.intent.extra.REFERRER");

        $r15 = (android.net.Uri) $r16;

        r0.<com.android.packageinstaller.PackageInstallerActivity: android.net.Uri mReferrerURI> = $r15;

     label04:
        z9 = specialinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: boolean isInstallRequestFromUnknownSource(android.content.Intent)>(r2);

        $r17 = new com.android.packageinstaller.InstallFlowAnalytics;

        specialinvoke $r17.<com.android.packageinstaller.InstallFlowAnalytics: void <init>()>();

        r0.<com.android.packageinstaller.PackageInstallerActivity: com.android.packageinstaller.InstallFlowAnalytics mInstallFlowAnalytics> = $r17;

        $r19 = r0.<com.android.packageinstaller.PackageInstallerActivity: com.android.packageinstaller.InstallFlowAnalytics mInstallFlowAnalytics>;

        virtualinvoke $r19.<com.android.packageinstaller.InstallFlowAnalytics: void setContext(android.content.Context)>(r0);

        $r18 = r0.<com.android.packageinstaller.PackageInstallerActivity: com.android.packageinstaller.InstallFlowAnalytics mInstallFlowAnalytics>;

        $l1 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        virtualinvoke $r18.<com.android.packageinstaller.InstallFlowAnalytics: void setStartTimestampMillis(long)>($l1);

        $r20 = r0.<com.android.packageinstaller.PackageInstallerActivity: com.android.packageinstaller.InstallFlowAnalytics mInstallFlowAnalytics>;

        $z1 = specialinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: boolean isInstallingUnknownAppsAllowed()>();

        virtualinvoke $r20.<com.android.packageinstaller.InstallFlowAnalytics: void setInstallsFromUnknownSourcesPermitted(boolean)>($z1);

        $r21 = r0.<com.android.packageinstaller.PackageInstallerActivity: com.android.packageinstaller.InstallFlowAnalytics mInstallFlowAnalytics>;

        virtualinvoke $r21.<com.android.packageinstaller.InstallFlowAnalytics: void setInstallRequestFromUnknownSource(boolean)>(z9);

        $r22 = r0.<com.android.packageinstaller.PackageInstallerActivity: com.android.packageinstaller.InstallFlowAnalytics mInstallFlowAnalytics>;

        $z2 = specialinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: boolean isVerifyAppsEnabled()>();

        virtualinvoke $r22.<com.android.packageinstaller.InstallFlowAnalytics: void setVerifyAppsEnabled(boolean)>($z2);

        $r23 = r0.<com.android.packageinstaller.PackageInstallerActivity: com.android.packageinstaller.InstallFlowAnalytics mInstallFlowAnalytics>;

        $z3 = specialinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: boolean isAppVerifierInstalled()>();

        virtualinvoke $r23.<com.android.packageinstaller.InstallFlowAnalytics: void setAppVerifierInstalled(boolean)>($z3);

        $r27 = r0.<com.android.packageinstaller.PackageInstallerActivity: com.android.packageinstaller.InstallFlowAnalytics mInstallFlowAnalytics>;

        $r26 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.net.Uri mPackageURI>;

        $r24 = virtualinvoke $r26.<android.net.Uri: java.lang.String toString()>();

        virtualinvoke $r27.<com.android.packageinstaller.InstallFlowAnalytics: void setPackageUri(java.lang.String)>($r24);

        $r25 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.net.Uri mPackageURI>;

        r89 = virtualinvoke $r25.<android.net.Uri: java.lang.String getScheme()>();

        if r89 == null goto label05;

        $r67 = "file";

        $z6 = virtualinvoke $r67.<java.lang.String: boolean equals(java.lang.Object)>(r89);

        if $z6 != 0 goto label05;

        $r69 = "package";

        $z7 = virtualinvoke $r69.<java.lang.String: boolean equals(java.lang.Object)>(r89);

        if $z7 != 0 goto label05;

        $r77 = new java.lang.StringBuilder;

        specialinvoke $r77.<java.lang.StringBuilder: void <init>()>();

        $r76 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported scheme ");

        $r74 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r89);

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageInstaller", $r75);

        virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: void setPmResult(int)>(-3);

        $r73 = r0.<com.android.packageinstaller.PackageInstallerActivity: com.android.packageinstaller.InstallFlowAnalytics mInstallFlowAnalytics>;

        virtualinvoke $r73.<com.android.packageinstaller.InstallFlowAnalytics: void setFlowFinished(byte)>(1);

        virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: void finish()>();

        return;

     label05:
        $r28 = "package";

        $r30 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.net.Uri mPackageURI>;

        $r29 = virtualinvoke $r30.<android.net.Uri: java.lang.String getScheme()>();

        $z4 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>($r29);

        if $z4 == 0 goto label11;

        $r51 = r0.<com.android.packageinstaller.PackageInstallerActivity: com.android.packageinstaller.InstallFlowAnalytics mInstallFlowAnalytics>;

        virtualinvoke $r51.<com.android.packageinstaller.InstallFlowAnalytics: void setFileUri(boolean)>(0);

     label06:
        $r46 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.PackageManager mPm>;

        $r45 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.net.Uri mPackageURI>;

        $r47 = virtualinvoke $r45.<android.net.Uri: java.lang.String getSchemeSpecificPart()>();

        $r48 = virtualinvoke $r46.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r47, 12288);

        r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.PackageInfo mPkgInfo> = $r48;

     label07:
        goto label09;

     label08:
        $r88 := @caughtexception;

     label09:
        $r56 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.PackageInfo mPkgInfo>;

        if $r56 != null goto label10;

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested package ");

        $r60 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.net.Uri mPackageURI>;

        $r63 = virtualinvoke $r60.<android.net.Uri: java.lang.String getScheme()>();

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63);

        $r71 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not available. Discontinuing installation");

        $r70 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageInstaller", $r70);

        specialinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: void showDialogInner(int)>(2);

        virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: void setPmResult(int)>(-2);

        $r72 = r0.<com.android.packageinstaller.PackageInstallerActivity: com.android.packageinstaller.InstallFlowAnalytics mInstallFlowAnalytics>;

        virtualinvoke $r72.<com.android.packageinstaller.InstallFlowAnalytics: void setPackageInfoObtained()>();

        $r68 = r0.<com.android.packageinstaller.PackageInstallerActivity: com.android.packageinstaller.InstallFlowAnalytics mInstallFlowAnalytics>;

        virtualinvoke $r68.<com.android.packageinstaller.InstallFlowAnalytics: void setFlowFinished(byte)>(3);

        return;

     label10:
        $r57 = new com.android.packageinstaller.PackageUtil$AppSnippet;

        $r52 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.PackageManager mPm>;

        $r58 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.PackageInfo mPkgInfo>;

        $r59 = $r58.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r53 = virtualinvoke $r52.<android.content.pm.PackageManager: java.lang.CharSequence getApplicationLabel(android.content.pm.ApplicationInfo)>($r59);

        $r65 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.PackageManager mPm>;

        $r54 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.PackageInfo mPkgInfo>;

        $r55 = $r54.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        $r64 = virtualinvoke $r65.<android.content.pm.PackageManager: android.graphics.drawable.Drawable getApplicationIcon(android.content.pm.ApplicationInfo)>($r55);

        specialinvoke $r57.<com.android.packageinstaller.PackageUtil$AppSnippet: void <init>(java.lang.CharSequence,android.graphics.drawable.Drawable)>($r53, $r64);

        r4 = $r57;

        goto label13;

     label11:
        $r33 = r0.<com.android.packageinstaller.PackageInstallerActivity: com.android.packageinstaller.InstallFlowAnalytics mInstallFlowAnalytics>;

        virtualinvoke $r33.<com.android.packageinstaller.InstallFlowAnalytics: void setFileUri(boolean)>(1);

        $r31 = new java.io.File;

        $r32 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.net.Uri mPackageURI>;

        $r35 = virtualinvoke $r32.<android.net.Uri: java.lang.String getPath()>();

        specialinvoke $r31.<java.io.File: void <init>(java.lang.String)>($r35);

        r90 = $r31;

        r6 = staticinvoke <com.android.packageinstaller.PackageUtil: android.content.pm.PackageParser$Package getPackageInfo(java.io.File)>(r90);

        if r6 != null goto label12;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageInstaller", "Parse error when parsing manifest. Discontinuing installation");

        specialinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: void showDialogInner(int)>(2);

        virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: void setPmResult(int)>(-2);

        $r49 = r0.<com.android.packageinstaller.PackageInstallerActivity: com.android.packageinstaller.InstallFlowAnalytics mInstallFlowAnalytics>;

        virtualinvoke $r49.<com.android.packageinstaller.InstallFlowAnalytics: void setPackageInfoObtained()>();

        $r50 = r0.<com.android.packageinstaller.PackageInstallerActivity: com.android.packageinstaller.InstallFlowAnalytics mInstallFlowAnalytics>;

        virtualinvoke $r50.<com.android.packageinstaller.InstallFlowAnalytics: void setFlowFinished(byte)>(2);

        return;

     label12:
        $r34 = new android.content.pm.PackageUserState;

        specialinvoke $r34.<android.content.pm.PackageUserState: void <init>()>();

        $r39 = staticinvoke <android.content.pm.PackageParser: android.content.pm.PackageInfo generatePackageInfo(android.content.pm.PackageParser$Package,int[],int,long,long,java.util.HashSet,android.content.pm.PackageUserState)>(r6, null, 4096, 0L, 0L, null, $r34);

        r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.PackageInfo mPkgInfo> = $r39;

        $r38 = r6.<android.content.pm.PackageParser$Package: android.content.pm.ManifestDigest manifestDigest>;

        r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.ManifestDigest mPkgDigest> = $r38;

        $r37 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.PackageInfo mPkgInfo>;

        $r36 = $r37.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        r4 = staticinvoke <com.android.packageinstaller.PackageUtil: com.android.packageinstaller.PackageUtil$AppSnippet getAppSnippet(android.app.Activity,android.content.pm.ApplicationInfo,java.io.File)>(r0, $r36, r90);

     label13:
        $r42 = r0.<com.android.packageinstaller.PackageInstallerActivity: com.android.packageinstaller.InstallFlowAnalytics mInstallFlowAnalytics>;

        virtualinvoke $r42.<com.android.packageinstaller.InstallFlowAnalytics: void setPackageInfoObtained()>();

        virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: void setContentView(int)>(2130903042);

        $r41 = virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: android.view.View findViewById(int)>(2131165198);

        r0.<com.android.packageinstaller.PackageInstallerActivity: android.view.View mInstallConfirm> = $r41;

        $r40 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.view.View mInstallConfirm>;

        virtualinvoke $r40.<android.view.View: void setVisibility(int)>(4);

        staticinvoke <com.android.packageinstaller.PackageUtil: android.view.View initSnippetForNewApp(android.app.Activity,com.android.packageinstaller.PackageUtil$AppSnippet,int)>(r0, r4, 2131165184);

        $i2 = specialinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: int getOriginatingUid(android.content.Intent)>(r2);

        r0.<com.android.packageinstaller.PackageInstallerActivity: int mOriginatingUid> = $i2;

        if z9 == 0 goto label14;

        $z5 = specialinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: boolean isInstallingUnknownAppsAllowed()>();

        if $z5 != 0 goto label14;

        specialinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: void showDialogInner(int)>(1);

        $r43 = r0.<com.android.packageinstaller.PackageInstallerActivity: com.android.packageinstaller.InstallFlowAnalytics mInstallFlowAnalytics>;

        virtualinvoke $r43.<com.android.packageinstaller.InstallFlowAnalytics: void setFlowFinished(byte)>(4);

        return;

     label14:
        specialinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: void initiateInstall()>();

        return;

        catch android.content.pm.PackageManager$NameNotFoundException from label06 to label07 with label08;
    }

    private android.content.pm.ApplicationInfo getSourceInfo()
    {
        com.android.packageinstaller.PackageInstallerActivity r0;
        java.lang.String r1;
        android.content.pm.PackageManager $r3;
        android.content.pm.ApplicationInfo $r4;
        android.content.pm.PackageManager$NameNotFoundException $r5;

        r0 := @this: com.android.packageinstaller.PackageInstallerActivity;

        r1 = virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: java.lang.String getCallingPackage()>();

        if r1 == null goto label4;

     label1:
        $r3 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.PackageManager mPm>;

        $r4 = virtualinvoke $r3.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r1, 0);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

     label4:
        return null;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    private int getOriginatingUid(android.content.Intent)
    {
        com.android.packageinstaller.PackageInstallerActivity r0;
        android.content.Intent r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8;
        android.content.pm.ApplicationInfo r2, r6, $r11;
        java.lang.String[] r4, r14;
        java.lang.String r5;
        android.app.IActivityManager $r7;
        android.os.IBinder $r8;
        android.content.pm.PackageManager $r9, $r10;
        android.os.RemoteException $r12;
        android.content.pm.PackageManager$NameNotFoundException $r13;

        r0 := @this: com.android.packageinstaller.PackageInstallerActivity;

        r1 := @parameter0: android.content.Intent;

        i0 = virtualinvoke r1.<android.content.Intent: int getIntExtra(java.lang.String,int)>("android.intent.extra.ORIGINATING_UID", -1);

        r2 = specialinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.ApplicationInfo getSourceInfo()>();

        if r2 == null goto label02;

        if i0 == -1 goto label01;

        $r11 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.ApplicationInfo mSourceInfo>;

        $i8 = $r11.<android.content.pm.ApplicationInfo: int flags>;

        $i7 = $i8 & 1073741824;

        if $i7 == 0 goto label01;

        return i0;

     label01:
        $i6 = r2.<android.content.pm.ApplicationInfo: int uid>;

        return $i6;

     label02:
        $r7 = staticinvoke <android.app.ActivityManagerNative: android.app.IActivityManager getDefault()>();

        $r8 = virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: android.os.IBinder getActivityToken()>();

        i1 = interfaceinvoke $r7.<android.app.IActivityManager: int getLaunchedFromUid(android.os.IBinder)>($r8);

     label03:
        goto label05;

     label04:
        $r12 := @caughtexception;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("PackageInstaller", "Could not determine the launching uid.");

        return -1;

     label05:
        if i0 == -1 goto label12;

        $r9 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.PackageManager mPm>;

        r14 = virtualinvoke $r9.<android.content.pm.PackageManager: java.lang.String[] getPackagesForUid(int)>(i1);

        if r14 == null goto label12;

        r4 = r14;

        i2 = lengthof r4;

        i3 = 0;

     label06:
        if i3 >= i2 goto label12;

        r5 = r4[i3];

     label07:
        $r10 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.PackageManager mPm>;

        r6 = virtualinvoke $r10.<android.content.pm.PackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int)>(r5, 0);

        $i5 = r6.<android.content.pm.ApplicationInfo: int flags>;

        $i4 = $i5 & 1073741824;

        if $i4 == 0 goto label09;

     label08:
        return i0;

     label09:
        goto label11;

     label10:
        $r13 := @caughtexception;

     label11:
        i3 = i3 + 1;

        goto label06;

     label12:
        return i1;

        catch android.os.RemoteException from label02 to label03 with label04;
        catch android.content.pm.PackageManager$NameNotFoundException from label07 to label08 with label10;
    }

    public void onBackPressed()
    {
        com.android.packageinstaller.PackageInstallerActivity r0;
        int $i0, $i1;
        com.android.packageinstaller.InstallFlowAnalytics $r1;
        android.content.pm.PackageInstaller $r2;

        r0 := @this: com.android.packageinstaller.PackageInstallerActivity;

        $i0 = r0.<com.android.packageinstaller.PackageInstallerActivity: int mSessionId>;

        if $i0 == -1 goto label1;

        $r2 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.PackageInstaller mInstaller>;

        $i1 = r0.<com.android.packageinstaller.PackageInstallerActivity: int mSessionId>;

        virtualinvoke $r2.<android.content.pm.PackageInstaller: void setPermissionsResult(int,boolean)>($i1, 0);

     label1:
        $r1 = r0.<com.android.packageinstaller.PackageInstallerActivity: com.android.packageinstaller.InstallFlowAnalytics mInstallFlowAnalytics>;

        virtualinvoke $r1.<com.android.packageinstaller.InstallFlowAnalytics: void setFlowFinished(byte)>(5);

        specialinvoke r0.<android.app.Activity: void onBackPressed()>();

        return;
    }

    public void onCancel(android.content.DialogInterface)
    {
        com.android.packageinstaller.PackageInstallerActivity r0;
        android.content.DialogInterface r1;

        r0 := @this: com.android.packageinstaller.PackageInstallerActivity;

        r1 := @parameter0: android.content.DialogInterface;

        virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: void finish()>();

        return;
    }

    public void onClick(android.view.View)
    {
        com.android.packageinstaller.PackageInstallerActivity r0;
        android.view.View r1;
        android.content.Intent r2, $r9, $r20, $r23;
        java.lang.String r3, $r29;
        android.widget.Button $r4, $r5;
        int $i0, $i1, $i2, $i3, $i5, $i6;
        com.android.packageinstaller.InstallFlowAnalytics $r6, $r8, $r19, $r38;
        android.content.pm.PackageInstaller $r7, $r39;
        boolean $z0, $z1, $z2;
        android.content.pm.PackageInfo $r10;
        android.content.pm.ApplicationInfo $r11;
        android.net.Uri $r12, $r21, $r22, $r25, $r33, $r35;
        android.content.pm.ManifestDigest $r17;
        java.lang.StringBuilder $r24, $r26, $r28;
        com.android.packageinstaller.CaffeinatedScrollView $r37, $r40;

        r0 := @this: com.android.packageinstaller.PackageInstallerActivity;

        r1 := @parameter0: android.view.View;

        $r4 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.widget.Button mOk>;

        if r1 != $r4 goto label11;

        $z0 = r0.<com.android.packageinstaller.PackageInstallerActivity: boolean mOkCanInstall>;

        if $z0 != 0 goto label01;

        $r37 = r0.<com.android.packageinstaller.PackageInstallerActivity: com.android.packageinstaller.CaffeinatedScrollView mScrollView>;

        if $r37 != null goto label10;

     label01:
        $r8 = r0.<com.android.packageinstaller.PackageInstallerActivity: com.android.packageinstaller.InstallFlowAnalytics mInstallFlowAnalytics>;

        virtualinvoke $r8.<com.android.packageinstaller.InstallFlowAnalytics: void setInstallButtonClicked()>();

        $i2 = r0.<com.android.packageinstaller.PackageInstallerActivity: int mSessionId>;

        if $i2 == -1 goto label02;

        $r39 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.PackageInstaller mInstaller>;

        $i6 = r0.<com.android.packageinstaller.PackageInstallerActivity: int mSessionId>;

        virtualinvoke $r39.<android.content.pm.PackageInstaller: void setPermissionsResult(int,boolean)>($i6, 1);

        $r38 = r0.<com.android.packageinstaller.PackageInstallerActivity: com.android.packageinstaller.InstallFlowAnalytics mInstallFlowAnalytics>;

        virtualinvoke $r38.<com.android.packageinstaller.InstallFlowAnalytics: void setFlowFinishedWithPackageManagerResult(int)>(1);

        goto label09;

     label02:
        $r9 = new android.content.Intent;

        specialinvoke $r9.<android.content.Intent: void <init>()>();

        r2 = $r9;

        $r10 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.PackageInfo mPkgInfo>;

        $r11 = $r10.<android.content.pm.PackageInfo: android.content.pm.ApplicationInfo applicationInfo>;

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("com.android.packageinstaller.applicationInfo", $r11);

        $r12 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.net.Uri mPackageURI>;

        virtualinvoke r2.<android.content.Intent: android.content.Intent setData(android.net.Uri)>($r12);

        virtualinvoke r2.<android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)>(r0, class "com/android/packageinstaller/InstallAppProgress");

        $r17 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.ManifestDigest mPkgDigest>;

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("com.android.packageinstaller.extras.manifest_digest", $r17);

        $r19 = r0.<com.android.packageinstaller.PackageInstallerActivity: com.android.packageinstaller.InstallFlowAnalytics mInstallFlowAnalytics>;

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("com.android.packageinstaller.extras.install_flow_analytics", $r19);

        $r20 = virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.Intent getIntent()>();

        r3 = virtualinvoke $r20.<android.content.Intent: java.lang.String getStringExtra(java.lang.String)>("android.intent.extra.INSTALLER_PACKAGE_NAME");

        $r22 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.net.Uri mOriginatingURI>;

        if $r22 == null goto label03;

        $r33 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.net.Uri mOriginatingURI>;

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.ORIGINATING_URI", $r33);

     label03:
        $r21 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.net.Uri mReferrerURI>;

        if $r21 == null goto label04;

        $r35 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.net.Uri mReferrerURI>;

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.REFERRER", $r35);

     label04:
        $i3 = r0.<com.android.packageinstaller.PackageInstallerActivity: int mOriginatingUid>;

        if $i3 == -1 goto label05;

        $i5 = r0.<com.android.packageinstaller.PackageInstallerActivity: int mOriginatingUid>;

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.intent.extra.ORIGINATING_UID", $i5);

     label05:
        if r3 == null goto label06;

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.intent.extra.INSTALLER_PACKAGE_NAME", r3);

     label06:
        $r23 = virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.Intent getIntent()>();

        $z2 = virtualinvoke $r23.<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>("android.intent.extra.RETURN_RESULT", 0);

        if $z2 == 0 goto label07;

        virtualinvoke r2.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("android.intent.extra.RETURN_RESULT", 1);

        virtualinvoke r2.<android.content.Intent: android.content.Intent addFlags(int)>(33554432);

     label07:
        $z1 = r0.<com.android.packageinstaller.PackageInstallerActivity: boolean localLOGV>;

        if $z1 == 0 goto label08;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("downloaded app uri=");

        $r25 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.net.Uri mPackageURI>;

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("PackageInstaller", $r29);

     label08:
        virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: void startActivity(android.content.Intent)>(r2);

     label09:
        virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: void finish()>();

        goto label13;

     label10:
        $r40 = r0.<com.android.packageinstaller.PackageInstallerActivity: com.android.packageinstaller.CaffeinatedScrollView mScrollView>;

        virtualinvoke $r40.<com.android.packageinstaller.CaffeinatedScrollView: boolean pageScroll(int)>(130);

        goto label13;

     label11:
        $r5 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.widget.Button mCancel>;

        if r1 != $r5 goto label13;

        virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: void setResult(int)>(0);

        $i0 = r0.<com.android.packageinstaller.PackageInstallerActivity: int mSessionId>;

        if $i0 == -1 goto label12;

        $r7 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.content.pm.PackageInstaller mInstaller>;

        $i1 = r0.<com.android.packageinstaller.PackageInstallerActivity: int mSessionId>;

        virtualinvoke $r7.<android.content.pm.PackageInstaller: void setPermissionsResult(int,boolean)>($i1, 0);

     label12:
        $r6 = r0.<com.android.packageinstaller.PackageInstallerActivity: com.android.packageinstaller.InstallFlowAnalytics mInstallFlowAnalytics>;

        virtualinvoke $r6.<com.android.packageinstaller.InstallFlowAnalytics: void setFlowFinished(byte)>(5);

        virtualinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: void finish()>();

     label13:
        return;
    }

    static com.android.packageinstaller.InstallFlowAnalytics access$000(com.android.packageinstaller.PackageInstallerActivity)
    {
        com.android.packageinstaller.PackageInstallerActivity r0;
        com.android.packageinstaller.InstallFlowAnalytics $r1;

        r0 := @parameter0: com.android.packageinstaller.PackageInstallerActivity;

        $r1 = r0.<com.android.packageinstaller.PackageInstallerActivity: com.android.packageinstaller.InstallFlowAnalytics mInstallFlowAnalytics>;

        return $r1;
    }

    static android.widget.Button access$100(com.android.packageinstaller.PackageInstallerActivity)
    {
        com.android.packageinstaller.PackageInstallerActivity r0;
        android.widget.Button $r1;

        r0 := @parameter0: com.android.packageinstaller.PackageInstallerActivity;

        $r1 = r0.<com.android.packageinstaller.PackageInstallerActivity: android.widget.Button mOk>;

        return $r1;
    }

    static boolean access$202(com.android.packageinstaller.PackageInstallerActivity, boolean)
    {
        com.android.packageinstaller.PackageInstallerActivity r0;
        boolean z0;

        r0 := @parameter0: com.android.packageinstaller.PackageInstallerActivity;

        z0 := @parameter1: boolean;

        r0.<com.android.packageinstaller.PackageInstallerActivity: boolean mOkCanInstall> = z0;

        return z0;
    }

    static void access$300(com.android.packageinstaller.PackageInstallerActivity)
    {
        com.android.packageinstaller.PackageInstallerActivity r0;

        r0 := @parameter0: com.android.packageinstaller.PackageInstallerActivity;

        specialinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: void launchSettingsAppAndFinish()>();

        return;
    }

    static void access$400(com.android.packageinstaller.PackageInstallerActivity)
    {
        com.android.packageinstaller.PackageInstallerActivity r0;

        r0 := @parameter0: com.android.packageinstaller.PackageInstallerActivity;

        specialinvoke r0.<com.android.packageinstaller.PackageInstallerActivity: void startInstallConfirm()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.packageinstaller.PackageInstallerActivity: int DLG_ALLOW_SOURCE> = 5;

        <com.android.packageinstaller.PackageInstallerActivity: int DLG_INSTALL_ERROR> = 4;

        <com.android.packageinstaller.PackageInstallerActivity: int DLG_OUT_OF_SPACE> = 3;

        <com.android.packageinstaller.PackageInstallerActivity: int DLG_PACKAGE_ERROR> = 2;

        <com.android.packageinstaller.PackageInstallerActivity: int DLG_UNKNOWN_APPS> = 1;

        <com.android.packageinstaller.PackageInstallerActivity: int DLG_BASE> = 0;

        <com.android.packageinstaller.PackageInstallerActivity: java.lang.String TAB_ID_NEW> = "new";

        <com.android.packageinstaller.PackageInstallerActivity: java.lang.String TAB_ID_ALL> = "all";

        <com.android.packageinstaller.PackageInstallerActivity: java.lang.String PACKAGE_MIME_TYPE> = "application/vnd.android.package-archive";

        <com.android.packageinstaller.PackageInstallerActivity: java.lang.String PREFS_ALLOWED_SOURCES> = "allowed_sources";

        <com.android.packageinstaller.PackageInstallerActivity: java.lang.String TAG> = "PackageInstaller";

        return;
    }
}
