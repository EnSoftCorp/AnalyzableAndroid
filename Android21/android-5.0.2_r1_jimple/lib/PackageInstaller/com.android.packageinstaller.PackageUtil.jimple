public class com.android.packageinstaller.PackageUtil extends java.lang.Object
{
    public static final java.lang.String PREFIX;
    public static final java.lang.String INTENT_ATTR_INSTALL_STATUS;
    public static final java.lang.String INTENT_ATTR_APPLICATION_INFO;
    public static final java.lang.String INTENT_ATTR_PERMISSIONS_LIST;
    public static final java.lang.String INTENT_ATTR_PACKAGE_NAME;

    public void <init>()
    {
        com.android.packageinstaller.PackageUtil r0;

        r0 := @this: com.android.packageinstaller.PackageUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static android.content.pm.ApplicationInfo getApplicationInfo(java.io.File)
    {
        java.io.File r0;
        android.content.pm.PackageParser r1, $r3;
        android.content.pm.PackageParser$Package r2;
        android.content.pm.ApplicationInfo $r4;
        android.content.pm.PackageParser$PackageParserException $r5;

        r0 := @parameter0: java.io.File;

        $r3 = new android.content.pm.PackageParser;

        specialinvoke $r3.<android.content.pm.PackageParser: void <init>()>();

        r1 = $r3;

     label1:
        r2 = virtualinvoke r1.<android.content.pm.PackageParser: android.content.pm.PackageParser$Package parseMonolithicPackage(java.io.File,int)>(r0, 0);

        $r4 = r2.<android.content.pm.PackageParser$Package: android.content.pm.ApplicationInfo applicationInfo>;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        return null;

        catch android.content.pm.PackageParser$PackageParserException from label1 to label2 with label3;
    }

    public static android.content.pm.PackageParser$Package getPackageInfo(java.io.File)
    {
        java.io.File r0;
        android.content.pm.PackageParser r1, $r3;
        android.content.pm.PackageParser$Package r2;
        android.content.pm.PackageParser$PackageParserException $r4;

        r0 := @parameter0: java.io.File;

        $r3 = new android.content.pm.PackageParser;

        specialinvoke $r3.<android.content.pm.PackageParser: void <init>()>();

        r1 = $r3;

     label1:
        r2 = virtualinvoke r1.<android.content.pm.PackageParser: android.content.pm.PackageParser$Package parseMonolithicPackage(java.io.File,int)>(r0, 0);

        virtualinvoke r1.<android.content.pm.PackageParser: void collectManifestDigest(android.content.pm.PackageParser$Package)>(r2);

     label2:
        return r2;

     label3:
        $r4 := @caughtexception;

        return null;

        catch android.content.pm.PackageParser$PackageParserException from label1 to label2 with label3;
    }

    public static android.view.View initSnippet(android.view.View, java.lang.CharSequence, android.graphics.drawable.Drawable)
    {
        android.view.View r0, $r3, $r5;
        java.lang.CharSequence r1;
        android.graphics.drawable.Drawable r2;
        android.widget.ImageView $r4;
        android.widget.TextView $r6;

        r0 := @parameter0: android.view.View;

        r1 := @parameter1: java.lang.CharSequence;

        r2 := @parameter2: android.graphics.drawable.Drawable;

        $r3 = virtualinvoke r0.<android.view.View: android.view.View findViewById(int)>(2131165185);

        $r4 = (android.widget.ImageView) $r3;

        virtualinvoke $r4.<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>(r2);

        $r5 = virtualinvoke r0.<android.view.View: android.view.View findViewById(int)>(2131165186);

        $r6 = (android.widget.TextView) $r5;

        virtualinvoke $r6.<android.widget.TextView: void setText(java.lang.CharSequence)>(r1);

        return r0;
    }

    public static android.view.View initSnippetForInstalledApp(android.app.Activity, android.content.pm.ApplicationInfo, android.view.View)
    {
        android.app.Activity r0;
        android.content.pm.ApplicationInfo r1;
        android.view.View r2, $r3;

        r0 := @parameter0: android.app.Activity;

        r1 := @parameter1: android.content.pm.ApplicationInfo;

        r2 := @parameter2: android.view.View;

        $r3 = staticinvoke <com.android.packageinstaller.PackageUtil: android.view.View initSnippetForInstalledApp(android.app.Activity,android.content.pm.ApplicationInfo,android.view.View,android.os.UserHandle)>(r0, r1, r2, null);

        return $r3;
    }

    public static android.view.View initSnippetForInstalledApp(android.app.Activity, android.content.pm.ApplicationInfo, android.view.View, android.os.UserHandle)
    {
        android.app.Activity r0;
        android.content.pm.ApplicationInfo r1;
        android.view.View r2, $r7;
        android.os.UserHandle r3;
        android.content.pm.PackageManager r4, $r8;
        android.graphics.drawable.Drawable r5;
        java.lang.CharSequence $r6;

        r0 := @parameter0: android.app.Activity;

        r1 := @parameter1: android.content.pm.ApplicationInfo;

        r2 := @parameter2: android.view.View;

        r3 := @parameter3: android.os.UserHandle;

        r4 = virtualinvoke r0.<android.app.Activity: android.content.pm.PackageManager getPackageManager()>();

        r5 = virtualinvoke r1.<android.content.pm.ApplicationInfo: android.graphics.drawable.Drawable loadIcon(android.content.pm.PackageManager)>(r4);

        if r3 == null goto label1;

        $r8 = virtualinvoke r0.<android.app.Activity: android.content.pm.PackageManager getPackageManager()>();

        r5 = virtualinvoke $r8.<android.content.pm.PackageManager: android.graphics.drawable.Drawable getUserBadgedIcon(android.graphics.drawable.Drawable,android.os.UserHandle)>(r5, r3);

     label1:
        $r6 = virtualinvoke r1.<android.content.pm.ApplicationInfo: java.lang.CharSequence loadLabel(android.content.pm.PackageManager)>(r4);

        $r7 = staticinvoke <com.android.packageinstaller.PackageUtil: android.view.View initSnippet(android.view.View,java.lang.CharSequence,android.graphics.drawable.Drawable)>(r2, $r6, r5);

        return $r7;
    }

    public static android.view.View initSnippetForNewApp(android.app.Activity, com.android.packageinstaller.PackageUtil$AppSnippet, int)
    {
        android.app.Activity r0;
        com.android.packageinstaller.PackageUtil$AppSnippet r1;
        int i0;
        android.view.View r2, $r3, $r6;
        android.graphics.drawable.Drawable $r4;
        android.widget.ImageView $r5;
        java.lang.CharSequence $r7;
        android.widget.TextView $r8;

        r0 := @parameter0: android.app.Activity;

        r1 := @parameter1: com.android.packageinstaller.PackageUtil$AppSnippet;

        i0 := @parameter2: int;

        r2 = virtualinvoke r0.<android.app.Activity: android.view.View findViewById(int)>(i0);

        $r3 = virtualinvoke r2.<android.view.View: android.view.View findViewById(int)>(2131165185);

        $r5 = (android.widget.ImageView) $r3;

        $r4 = r1.<com.android.packageinstaller.PackageUtil$AppSnippet: android.graphics.drawable.Drawable icon>;

        virtualinvoke $r5.<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>($r4);

        $r6 = virtualinvoke r2.<android.view.View: android.view.View findViewById(int)>(2131165186);

        $r8 = (android.widget.TextView) $r6;

        $r7 = r1.<com.android.packageinstaller.PackageUtil$AppSnippet: java.lang.CharSequence label>;

        virtualinvoke $r8.<android.widget.TextView: void setText(java.lang.CharSequence)>($r7);

        return r2;
    }

    public static boolean isPackageAlreadyInstalled(android.app.Activity, java.lang.String)
    {
        android.app.Activity r0;
        java.lang.String r1, $r6;
        java.util.List r2;
        int i0, i1;
        android.content.pm.PackageInfo r3;
        android.content.pm.PackageManager $r4;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @parameter0: android.app.Activity;

        r1 := @parameter1: java.lang.String;

        $r4 = virtualinvoke r0.<android.app.Activity: android.content.pm.PackageManager getPackageManager()>();

        r2 = virtualinvoke $r4.<android.content.pm.PackageManager: java.util.List getInstalledPackages(int)>(8192);

        i0 = interfaceinvoke r2.<java.util.List: int size()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r5 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        r3 = (android.content.pm.PackageInfo) $r5;

        $r6 = r3.<android.content.pm.PackageInfo: java.lang.String packageName>;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r6);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public static com.android.packageinstaller.PackageUtil$AppSnippet getAppSnippet(android.app.Activity, android.content.pm.ApplicationInfo, java.io.File)
    {
        android.app.Activity r0;
        android.content.pm.ApplicationInfo r1;
        java.io.File r2;
        java.lang.String r3;
        android.content.res.Resources r4, r6, $r11;
        android.content.res.AssetManager r5, $r10;
        java.lang.CharSequence r7, $r16, $r17;
        android.util.DisplayMetrics $r12;
        int $i1, $i2, $i3, $i4;
        android.content.res.Configuration $r13;
        com.android.packageinstaller.PackageUtil$AppSnippet $r14;
        android.content.pm.PackageManager $r15;
        android.content.res.Resources$NotFoundException $r18, $r19;
        android.graphics.drawable.Drawable r20;

        r0 := @parameter0: android.app.Activity;

        r1 := @parameter1: android.content.pm.ApplicationInfo;

        r2 := @parameter2: java.io.File;

        r3 = virtualinvoke r2.<java.io.File: java.lang.String getAbsolutePath()>();

        r4 = virtualinvoke r0.<android.app.Activity: android.content.res.Resources getResources()>();

        $r10 = new android.content.res.AssetManager;

        specialinvoke $r10.<android.content.res.AssetManager: void <init>()>();

        r5 = $r10;

        virtualinvoke r5.<android.content.res.AssetManager: int addAssetPath(java.lang.String)>(r3);

        $r11 = new android.content.res.Resources;

        $r12 = virtualinvoke r4.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $r13 = virtualinvoke r4.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        specialinvoke $r11.<android.content.res.Resources: void <init>(android.content.res.AssetManager,android.util.DisplayMetrics,android.content.res.Configuration)>(r5, $r12, $r13);

        r6 = $r11;

        r7 = null;

        $i1 = r1.<android.content.pm.ApplicationInfo: int labelRes>;

        if $i1 == 0 goto label04;

     label01:
        $i4 = r1.<android.content.pm.ApplicationInfo: int labelRes>;

        r7 = virtualinvoke r6.<android.content.res.Resources: java.lang.CharSequence getText(int)>($i4);

     label02:
        goto label04;

     label03:
        $r19 := @caughtexception;

     label04:
        if r7 != null goto label07;

        $r17 = r1.<android.content.pm.ApplicationInfo: java.lang.CharSequence nonLocalizedLabel>;

        if $r17 == null goto label05;

        $r16 = r1.<android.content.pm.ApplicationInfo: java.lang.CharSequence nonLocalizedLabel>;

        goto label06;

     label05:
        $r16 = r1.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

     label06:
        r7 = $r16;

     label07:
        r20 = null;

        $i2 = r1.<android.content.pm.ApplicationInfo: int icon>;

        if $i2 == 0 goto label11;

     label08:
        $i3 = r1.<android.content.pm.ApplicationInfo: int icon>;

        r20 = virtualinvoke r6.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>($i3);

     label09:
        goto label11;

     label10:
        $r18 := @caughtexception;

     label11:
        if r20 != null goto label12;

        $r15 = virtualinvoke r0.<android.app.Activity: android.content.pm.PackageManager getPackageManager()>();

        r20 = virtualinvoke $r15.<android.content.pm.PackageManager: android.graphics.drawable.Drawable getDefaultActivityIcon()>();

     label12:
        $r14 = new com.android.packageinstaller.PackageUtil$AppSnippet;

        specialinvoke $r14.<com.android.packageinstaller.PackageUtil$AppSnippet: void <init>(java.lang.CharSequence,android.graphics.drawable.Drawable)>(r7, r20);

        return $r14;

        catch android.content.res.Resources$NotFoundException from label01 to label02 with label03;
        catch android.content.res.Resources$NotFoundException from label08 to label09 with label10;
    }

    public static void <clinit>()
    {
        <com.android.packageinstaller.PackageUtil: java.lang.String INTENT_ATTR_PACKAGE_NAME> = "com.android.packageinstaller.PackageName";

        <com.android.packageinstaller.PackageUtil: java.lang.String INTENT_ATTR_PERMISSIONS_LIST> = "com.android.packageinstaller.PermissionsList";

        <com.android.packageinstaller.PackageUtil: java.lang.String INTENT_ATTR_APPLICATION_INFO> = "com.android.packageinstaller.applicationInfo";

        <com.android.packageinstaller.PackageUtil: java.lang.String INTENT_ATTR_INSTALL_STATUS> = "com.android.packageinstaller.installStatus";

        <com.android.packageinstaller.PackageUtil: java.lang.String PREFIX> = "com.android.packageinstaller.";

        return;
    }
}
