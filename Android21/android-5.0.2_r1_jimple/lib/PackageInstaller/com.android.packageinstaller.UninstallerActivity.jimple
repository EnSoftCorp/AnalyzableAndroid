public class com.android.packageinstaller.UninstallerActivity extends android.app.Activity
{
    private static final java.lang.String TAG;
    private com.android.packageinstaller.UninstallerActivity$DialogInfo mDialogInfo;

    public void <init>()
    {
        com.android.packageinstaller.UninstallerActivity r0;

        r0 := @this: com.android.packageinstaller.UninstallerActivity;

        specialinvoke r0.<android.app.Activity: void <init>()>();

        return;
    }

    public void onCreate(android.os.Bundle)
    {
        com.android.packageinstaller.UninstallerActivity r0;
        android.os.Bundle r1;
        android.content.Intent r2;
        android.net.Uri r3;
        java.lang.String r4, $r31, $r36, r41;
        android.content.pm.IPackageManager r5;
        android.os.IBinder $r8, $r18;
        com.android.packageinstaller.UninstallerActivity$DialogInfo $r9, $r10, $r12, $r14, $r16, $r17, $r19, $r21, $r24, $r27, $r35;
        android.os.Parcelable $r11;
        android.os.UserHandle $r13, $r15, $r20, $r25, $r33;
        boolean $z0;
        int $i0, $i1;
        android.content.pm.ApplicationInfo $r22, $r23;
        android.content.ComponentName $r26;
        android.content.pm.ActivityInfo $r28;
        java.lang.StringBuilder $r29, $r30, $r32, $r34, $r37, $r38;
        android.os.RemoteException $r39, $r40;

        r0 := @this: com.android.packageinstaller.UninstallerActivity;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.Activity: void onCreate(android.os.Bundle)>(r1);

        r2 = virtualinvoke r0.<com.android.packageinstaller.UninstallerActivity: android.content.Intent getIntent()>();

        r3 = virtualinvoke r2.<android.content.Intent: android.net.Uri getData()>();

        if r3 != null goto label01;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("UninstallerActivity", "No package URI in intent");

        specialinvoke r0.<com.android.packageinstaller.UninstallerActivity: void showAppNotFound()>();

        return;

     label01:
        r4 = virtualinvoke r3.<android.net.Uri: java.lang.String getEncodedSchemeSpecificPart()>();

        if r4 != null goto label02;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid package name in URI: ");

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("UninstallerActivity", $r36);

        specialinvoke r0.<com.android.packageinstaller.UninstallerActivity: void showAppNotFound()>();

        return;

     label02:
        $r8 = staticinvoke <android.os.ServiceManager: android.os.IBinder getService(java.lang.String)>("package");

        r5 = staticinvoke <android.content.pm.IPackageManager$Stub: android.content.pm.IPackageManager asInterface(android.os.IBinder)>($r8);

        $r9 = new com.android.packageinstaller.UninstallerActivity$DialogInfo;

        specialinvoke $r9.<com.android.packageinstaller.UninstallerActivity$DialogInfo: void <init>()>();

        r0.<com.android.packageinstaller.UninstallerActivity: com.android.packageinstaller.UninstallerActivity$DialogInfo mDialogInfo> = $r9;

        $r10 = r0.<com.android.packageinstaller.UninstallerActivity: com.android.packageinstaller.UninstallerActivity$DialogInfo mDialogInfo>;

        $r11 = virtualinvoke r2.<android.content.Intent: android.os.Parcelable getParcelableExtra(java.lang.String)>("android.intent.extra.USER");

        $r13 = (android.os.UserHandle) $r11;

        $r10.<com.android.packageinstaller.UninstallerActivity$DialogInfo: android.os.UserHandle user> = $r13;

        $r12 = r0.<com.android.packageinstaller.UninstallerActivity: com.android.packageinstaller.UninstallerActivity$DialogInfo mDialogInfo>;

        $r15 = $r12.<com.android.packageinstaller.UninstallerActivity$DialogInfo: android.os.UserHandle user>;

        if $r15 != null goto label03;

        $r35 = r0.<com.android.packageinstaller.UninstallerActivity: com.android.packageinstaller.UninstallerActivity$DialogInfo mDialogInfo>;

        $r33 = staticinvoke <android.os.Process: android.os.UserHandle myUserHandle()>();

        $r35.<com.android.packageinstaller.UninstallerActivity$DialogInfo: android.os.UserHandle user> = $r33;

     label03:
        $r14 = r0.<com.android.packageinstaller.UninstallerActivity: com.android.packageinstaller.UninstallerActivity$DialogInfo mDialogInfo>;

        $z0 = virtualinvoke r2.<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>("android.intent.extra.UNINSTALL_ALL_USERS", 0);

        $r14.<com.android.packageinstaller.UninstallerActivity$DialogInfo: boolean allUsers> = $z0;

        $r16 = r0.<com.android.packageinstaller.UninstallerActivity: com.android.packageinstaller.UninstallerActivity$DialogInfo mDialogInfo>;

        $r18 = virtualinvoke r2.<android.content.Intent: android.os.IBinder getIBinderExtra(java.lang.String)>("android.content.pm.extra.CALLBACK");

        $r16.<com.android.packageinstaller.UninstallerActivity$DialogInfo: android.os.IBinder callback> = $r18;

     label04:
        $r19 = r0.<com.android.packageinstaller.UninstallerActivity: com.android.packageinstaller.UninstallerActivity$DialogInfo mDialogInfo>;

        $r17 = r0.<com.android.packageinstaller.UninstallerActivity: com.android.packageinstaller.UninstallerActivity$DialogInfo mDialogInfo>;

        $r20 = $r17.<com.android.packageinstaller.UninstallerActivity$DialogInfo: android.os.UserHandle user>;

        $i0 = virtualinvoke $r20.<android.os.UserHandle: int getIdentifier()>();

        $r22 = interfaceinvoke r5.<android.content.pm.IPackageManager: android.content.pm.ApplicationInfo getApplicationInfo(java.lang.String,int,int)>(r4, 8192, $i0);

        $r19.<com.android.packageinstaller.UninstallerActivity$DialogInfo: android.content.pm.ApplicationInfo appInfo> = $r22;

     label05:
        goto label07;

     label06:
        $r40 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("UninstallerActivity", "Unable to get packageName. Package manager is dead?");

     label07:
        $r21 = r0.<com.android.packageinstaller.UninstallerActivity: com.android.packageinstaller.UninstallerActivity$DialogInfo mDialogInfo>;

        $r23 = $r21.<com.android.packageinstaller.UninstallerActivity$DialogInfo: android.content.pm.ApplicationInfo appInfo>;

        if $r23 != null goto label08;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid packageName: ");

        $r30 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("UninstallerActivity", $r31);

        specialinvoke r0.<com.android.packageinstaller.UninstallerActivity: void showAppNotFound()>();

        return;

     label08:
        r41 = virtualinvoke r3.<android.net.Uri: java.lang.String getFragment()>();

        if r41 == null goto label12;

     label09:
        $r27 = r0.<com.android.packageinstaller.UninstallerActivity: com.android.packageinstaller.UninstallerActivity$DialogInfo mDialogInfo>;

        $r26 = new android.content.ComponentName;

        specialinvoke $r26.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>(r4, r41);

        $r24 = r0.<com.android.packageinstaller.UninstallerActivity: com.android.packageinstaller.UninstallerActivity$DialogInfo mDialogInfo>;

        $r25 = $r24.<com.android.packageinstaller.UninstallerActivity$DialogInfo: android.os.UserHandle user>;

        $i1 = virtualinvoke $r25.<android.os.UserHandle: int getIdentifier()>();

        $r28 = interfaceinvoke r5.<android.content.pm.IPackageManager: android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName,int,int)>($r26, 0, $i1);

        $r27.<com.android.packageinstaller.UninstallerActivity$DialogInfo: android.content.pm.ActivityInfo activityInfo> = $r28;

     label10:
        goto label12;

     label11:
        $r39 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("UninstallerActivity", "Unable to get className. Package manager is dead?");

     label12:
        specialinvoke r0.<com.android.packageinstaller.UninstallerActivity: void showConfirmationDialog()>();

        return;

        catch android.os.RemoteException from label04 to label05 with label06;
        catch android.os.RemoteException from label09 to label10 with label11;
    }

    private void showConfirmationDialog()
    {
        com.android.packageinstaller.UninstallerActivity r0;
        com.android.packageinstaller.UninstallerActivity$UninstallAlertDialogFragment $r1;

        r0 := @this: com.android.packageinstaller.UninstallerActivity;

        $r1 = new com.android.packageinstaller.UninstallerActivity$UninstallAlertDialogFragment;

        specialinvoke $r1.<com.android.packageinstaller.UninstallerActivity$UninstallAlertDialogFragment: void <init>()>();

        specialinvoke r0.<com.android.packageinstaller.UninstallerActivity: void showDialogFragment(android.app.DialogFragment)>($r1);

        return;
    }

    private void showAppNotFound()
    {
        com.android.packageinstaller.UninstallerActivity r0;
        com.android.packageinstaller.UninstallerActivity$AppNotFoundDialogFragment $r1;

        r0 := @this: com.android.packageinstaller.UninstallerActivity;

        $r1 = new com.android.packageinstaller.UninstallerActivity$AppNotFoundDialogFragment;

        specialinvoke $r1.<com.android.packageinstaller.UninstallerActivity$AppNotFoundDialogFragment: void <init>()>();

        specialinvoke r0.<com.android.packageinstaller.UninstallerActivity: void showDialogFragment(android.app.DialogFragment)>($r1);

        return;
    }

    private void showDialogFragment(android.app.DialogFragment)
    {
        com.android.packageinstaller.UninstallerActivity r0;
        android.app.DialogFragment r1;
        android.app.FragmentTransaction r2;
        android.app.Fragment r3;
        android.app.FragmentManager $r4, $r5;

        r0 := @this: com.android.packageinstaller.UninstallerActivity;

        r1 := @parameter0: android.app.DialogFragment;

        $r4 = virtualinvoke r0.<com.android.packageinstaller.UninstallerActivity: android.app.FragmentManager getFragmentManager()>();

        r2 = virtualinvoke $r4.<android.app.FragmentManager: android.app.FragmentTransaction beginTransaction()>();

        $r5 = virtualinvoke r0.<com.android.packageinstaller.UninstallerActivity: android.app.FragmentManager getFragmentManager()>();

        r3 = virtualinvoke $r5.<android.app.FragmentManager: android.app.Fragment findFragmentByTag(java.lang.String)>("dialog");

        if r3 == null goto label1;

        virtualinvoke r2.<android.app.FragmentTransaction: android.app.FragmentTransaction remove(android.app.Fragment)>(r3);

     label1:
        virtualinvoke r1.<android.app.DialogFragment: int show(android.app.FragmentTransaction,java.lang.String)>(r2, "dialog");

        return;
    }

    void startUninstallProgress()
    {
        com.android.packageinstaller.UninstallerActivity r0;
        android.content.Intent r1, $r2, $r14;
        com.android.packageinstaller.UninstallerActivity$DialogInfo $r3, $r6, $r8, $r11;
        android.os.UserHandle $r4;
        boolean $z0, $z1;
        android.os.IBinder $r9;
        android.content.pm.ApplicationInfo $r12;

        r0 := @this: com.android.packageinstaller.UninstallerActivity;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.VIEW");

        r1 = $r2;

        $r3 = r0.<com.android.packageinstaller.UninstallerActivity: com.android.packageinstaller.UninstallerActivity$DialogInfo mDialogInfo>;

        $r4 = $r3.<com.android.packageinstaller.UninstallerActivity$DialogInfo: android.os.UserHandle user>;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("android.intent.extra.USER", $r4);

        $r6 = r0.<com.android.packageinstaller.UninstallerActivity: com.android.packageinstaller.UninstallerActivity$DialogInfo mDialogInfo>;

        $z0 = $r6.<com.android.packageinstaller.UninstallerActivity$DialogInfo: boolean allUsers>;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("android.intent.extra.UNINSTALL_ALL_USERS", $z0);

        $r8 = r0.<com.android.packageinstaller.UninstallerActivity: com.android.packageinstaller.UninstallerActivity$DialogInfo mDialogInfo>;

        $r9 = $r8.<com.android.packageinstaller.UninstallerActivity$DialogInfo: android.os.IBinder callback>;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.IBinder)>("android.content.pm.extra.CALLBACK", $r9);

        $r11 = r0.<com.android.packageinstaller.UninstallerActivity: com.android.packageinstaller.UninstallerActivity$DialogInfo mDialogInfo>;

        $r12 = $r11.<com.android.packageinstaller.UninstallerActivity$DialogInfo: android.content.pm.ApplicationInfo appInfo>;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,android.os.Parcelable)>("com.android.packageinstaller.applicationInfo", $r12);

        $r14 = virtualinvoke r0.<com.android.packageinstaller.UninstallerActivity: android.content.Intent getIntent()>();

        $z1 = virtualinvoke $r14.<android.content.Intent: boolean getBooleanExtra(java.lang.String,boolean)>("android.intent.extra.RETURN_RESULT", 0);

        if $z1 == 0 goto label1;

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("android.intent.extra.RETURN_RESULT", 1);

        virtualinvoke r1.<android.content.Intent: android.content.Intent addFlags(int)>(33554432);

     label1:
        virtualinvoke r1.<android.content.Intent: android.content.Intent setClass(android.content.Context,java.lang.Class)>(r0, class "com/android/packageinstaller/UninstallAppProgress");

        virtualinvoke r0.<com.android.packageinstaller.UninstallerActivity: void startActivity(android.content.Intent)>(r1);

        return;
    }

    void dispatchAborted()
    {
        com.android.packageinstaller.UninstallerActivity r0;
        android.content.pm.IPackageDeleteObserver2 r1;
        com.android.packageinstaller.UninstallerActivity$DialogInfo $r3, $r4, $r6, $r8;
        android.os.IBinder $r5, $r7;
        android.content.pm.ApplicationInfo $r9;
        java.lang.String $r10;
        android.os.RemoteException $r11;

        r0 := @this: com.android.packageinstaller.UninstallerActivity;

        $r3 = r0.<com.android.packageinstaller.UninstallerActivity: com.android.packageinstaller.UninstallerActivity$DialogInfo mDialogInfo>;

        if $r3 == null goto label4;

        $r4 = r0.<com.android.packageinstaller.UninstallerActivity: com.android.packageinstaller.UninstallerActivity$DialogInfo mDialogInfo>;

        $r5 = $r4.<com.android.packageinstaller.UninstallerActivity$DialogInfo: android.os.IBinder callback>;

        if $r5 == null goto label4;

        $r6 = r0.<com.android.packageinstaller.UninstallerActivity: com.android.packageinstaller.UninstallerActivity$DialogInfo mDialogInfo>;

        $r7 = $r6.<com.android.packageinstaller.UninstallerActivity$DialogInfo: android.os.IBinder callback>;

        r1 = staticinvoke <android.content.pm.IPackageDeleteObserver2$Stub: android.content.pm.IPackageDeleteObserver2 asInterface(android.os.IBinder)>($r7);

     label1:
        $r8 = r0.<com.android.packageinstaller.UninstallerActivity: com.android.packageinstaller.UninstallerActivity$DialogInfo mDialogInfo>;

        $r9 = $r8.<com.android.packageinstaller.UninstallerActivity$DialogInfo: android.content.pm.ApplicationInfo appInfo>;

        $r10 = $r9.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        interfaceinvoke r1.<android.content.pm.IPackageDeleteObserver2: void onPackageDeleted(java.lang.String,int,java.lang.String)>($r10, -5, "Cancelled by user");

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

     label4:
        return;

        catch android.os.RemoteException from label1 to label2 with label3;
    }

    static com.android.packageinstaller.UninstallerActivity$DialogInfo access$000(com.android.packageinstaller.UninstallerActivity)
    {
        com.android.packageinstaller.UninstallerActivity r0;
        com.android.packageinstaller.UninstallerActivity$DialogInfo $r1;

        r0 := @parameter0: com.android.packageinstaller.UninstallerActivity;

        $r1 = r0.<com.android.packageinstaller.UninstallerActivity: com.android.packageinstaller.UninstallerActivity$DialogInfo mDialogInfo>;

        return $r1;
    }

    public static void <clinit>()
    {
        <com.android.packageinstaller.UninstallerActivity: java.lang.String TAG> = "UninstallerActivity";

        return;
    }
}
