final class com.google.common.collect.Multisets$2 extends com.google.common.collect.Ordering
{

    void <init>()
    {
        com.google.common.collect.Multisets$2 r0;

        r0 := @this: com.google.common.collect.Multisets$2;

        specialinvoke r0.<com.google.common.collect.Ordering: void <init>()>();

        return;
    }

    public int compare(com.google.common.collect.Multiset$Entry, com.google.common.collect.Multiset$Entry)
    {
        com.google.common.collect.Multisets$2 r0;
        com.google.common.collect.Multiset$Entry r1, r2;
        int $i0, $i1, $i2;

        r0 := @this: com.google.common.collect.Multisets$2;

        r1 := @parameter0: com.google.common.collect.Multiset$Entry;

        r2 := @parameter1: com.google.common.collect.Multiset$Entry;

        $i0 = interfaceinvoke r2.<com.google.common.collect.Multiset$Entry: int getCount()>();

        $i1 = interfaceinvoke r1.<com.google.common.collect.Multiset$Entry: int getCount()>();

        $i2 = staticinvoke <com.google.common.primitives.Ints: int compare(int,int)>($i0, $i1);

        return $i2;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        com.google.common.collect.Multisets$2 r0;
        java.lang.Object r1, r2;
        com.google.common.collect.Multiset$Entry $r3, $r4;
        int $i0;

        r0 := @this: com.google.common.collect.Multisets$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (com.google.common.collect.Multiset$Entry) r1;

        $r3 = (com.google.common.collect.Multiset$Entry) r2;

        $i0 = virtualinvoke r0.<com.google.common.collect.Multisets$2: int compare(com.google.common.collect.Multiset$Entry,com.google.common.collect.Multiset$Entry)>($r4, $r3);

        return $i0;
    }
}
