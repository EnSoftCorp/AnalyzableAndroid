public final class com.google.common.util.concurrent.ExecutionList extends java.lang.Object
{
    private static final java.util.logging.Logger log;
    private final java.util.Queue runnables;
    private boolean executed;

    public void <init>()
    {
        com.google.common.util.concurrent.ExecutionList r0;
        java.util.LinkedList $r1;

        r0 := @this: com.google.common.util.concurrent.ExecutionList;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <com.google.common.collect.Lists: java.util.LinkedList newLinkedList()>();

        r0.<com.google.common.util.concurrent.ExecutionList: java.util.Queue runnables> = $r1;

        r0.<com.google.common.util.concurrent.ExecutionList: boolean executed> = 0;

        return;
    }

    public void add(java.lang.Runnable, java.util.concurrent.Executor)
    {
        com.google.common.util.concurrent.ExecutionList r0;
        java.lang.Runnable r1;
        java.util.concurrent.Executor r2;
        boolean z0, $z1;
        java.util.Queue r3, $r7, $r10;
        java.lang.Throwable r4, $r11;
        com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair $r8, $r9;

        r0 := @this: com.google.common.util.concurrent.ExecutionList;

        r1 := @parameter0: java.lang.Runnable;

        r2 := @parameter1: java.util.concurrent.Executor;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "Runnable was null.");

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "Executor was null.");

        z0 = 0;

        $r7 = r0.<com.google.common.util.concurrent.ExecutionList: java.util.Queue runnables>;

        r3 = $r7;

        entermonitor $r7;

     label1:
        $z1 = r0.<com.google.common.util.concurrent.ExecutionList: boolean executed>;

        if $z1 != 0 goto label2;

        $r10 = r0.<com.google.common.util.concurrent.ExecutionList: java.util.Queue runnables>;

        $r9 = new com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair;

        specialinvoke $r9.<com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair: void <init>(java.lang.Runnable,java.util.concurrent.Executor)>(r1, r2);

        interfaceinvoke $r10.<java.util.Queue: boolean add(java.lang.Object)>($r9);

        goto label3;

     label2:
        z0 = 1;

     label3:
        exitmonitor r3;

     label4:
        goto label7;

     label5:
        $r11 := @caughtexception;

        r4 = $r11;

        exitmonitor r3;

     label6:
        throw r4;

     label7:
        if z0 == 0 goto label8;

        $r8 = new com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair;

        specialinvoke $r8.<com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair: void <init>(java.lang.Runnable,java.util.concurrent.Executor)>(r1, r2);

        virtualinvoke $r8.<com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair: void execute()>();

     label8:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void execute()
    {
        com.google.common.util.concurrent.ExecutionList r0;
        java.util.Queue r1, $r3, $r4, $r5;
        java.lang.Throwable r2, $r8;
        boolean $z0, $z1;
        java.lang.Object $r6;
        com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair $r7;

        r0 := @this: com.google.common.util.concurrent.ExecutionList;

        $r3 = r0.<com.google.common.util.concurrent.ExecutionList: java.util.Queue runnables>;

        r1 = $r3;

        entermonitor $r3;

     label1:
        $z0 = r0.<com.google.common.util.concurrent.ExecutionList: boolean executed>;

        if $z0 == 0 goto label3;

        exitmonitor r1;

     label2:
        return;

     label3:
        r0.<com.google.common.util.concurrent.ExecutionList: boolean executed> = 1;

        exitmonitor r1;

     label4:
        goto label7;

     label5:
        $r8 := @caughtexception;

        r2 = $r8;

        exitmonitor r1;

     label6:
        throw r2;

     label7:
        $r4 = r0.<com.google.common.util.concurrent.ExecutionList: java.util.Queue runnables>;

        $z1 = interfaceinvoke $r4.<java.util.Queue: boolean isEmpty()>();

        if $z1 != 0 goto label8;

        $r5 = r0.<com.google.common.util.concurrent.ExecutionList: java.util.Queue runnables>;

        $r6 = interfaceinvoke $r5.<java.util.Queue: java.lang.Object poll()>();

        $r7 = (com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair) $r6;

        virtualinvoke $r7.<com.google.common.util.concurrent.ExecutionList$RunnableExecutorPair: void execute()>();

        goto label7;

     label8:
        return;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    static java.util.logging.Logger access$000()
    {
        java.util.logging.Logger $r0;

        $r0 = <com.google.common.util.concurrent.ExecutionList: java.util.logging.Logger log>;

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        $r0 = class "com/google/common/util/concurrent/ExecutionList";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <com.google.common.util.concurrent.ExecutionList: java.util.logging.Logger log> = $r2;

        return;
    }
}
