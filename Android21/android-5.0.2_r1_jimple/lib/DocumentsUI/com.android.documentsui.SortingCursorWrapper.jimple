public class com.android.documentsui.SortingCursorWrapper extends android.database.AbstractCursor
{
    private final android.database.Cursor mCursor;
    private final int[] mPosition;
    private final java.lang.String[] mValueString;
    private final long[] mValueLong;

    public void <init>(android.database.Cursor, int)
    {
        com.android.documentsui.SortingCursorWrapper r0;
        android.database.Cursor r1;
        int i0, i1, i2;
        java.lang.String r2, r3, $r12, $r19;
        java.lang.Throwable r4, $r22;
        int[] $r5, $r8, $r10, $r11;
        java.lang.String[] $r6, $r7, $r13, $r14;
        long[] $r9, $r18, $r20, $r23;
        boolean $z2;
        java.lang.StringBuilder $r15, $r16, $r17;
        long $l3, $l4;
        java.lang.IllegalArgumentException $r21;
        java.lang.Class r24;

        r0 := @this: com.android.documentsui.SortingCursorWrapper;

        r1 := @parameter0: android.database.Cursor;

        i0 := @parameter1: int;

        specialinvoke r0.<android.database.AbstractCursor: void <init>()>();

        r0.<com.android.documentsui.SortingCursorWrapper: android.database.Cursor mCursor> = r1;

        i1 = interfaceinvoke r1.<android.database.Cursor: int getCount()>();

        $r5 = newarray (int)[i1];

        r0.<com.android.documentsui.SortingCursorWrapper: int[] mPosition> = $r5;

        tableswitch(i0)
        {
            case 1: goto label01;
            case 2: goto label02;
            case 3: goto label02;
            default: goto label03;
        };

     label01:
        $r6 = newarray (java.lang.String)[i1];

        r0.<com.android.documentsui.SortingCursorWrapper: java.lang.String[] mValueString> = $r6;

        r0.<com.android.documentsui.SortingCursorWrapper: long[] mValueLong> = null;

        goto label04;

     label02:
        r0.<com.android.documentsui.SortingCursorWrapper: java.lang.String[] mValueString> = null;

        $r23 = newarray (long)[i1];

        r0.<com.android.documentsui.SortingCursorWrapper: long[] mValueLong> = $r23;

        goto label04;

     label03:
        $r21 = new java.lang.IllegalArgumentException;

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r21;

     label04:
        interfaceinvoke r1.<android.database.Cursor: boolean moveToPosition(int)>(-1);

        i2 = 0;

     label05:
        if i2 >= i1 goto label11;

        interfaceinvoke r1.<android.database.Cursor: boolean moveToNext()>();

        $r11 = r0.<com.android.documentsui.SortingCursorWrapper: int[] mPosition>;

        $r11[i2] = i2;

        tableswitch(i0)
        {
            case 1: goto label06;
            case 2: goto label08;
            case 3: goto label09;
            default: goto label10;
        };

     label06:
        r2 = staticinvoke <com.android.documentsui.model.DocumentInfo: java.lang.String getCursorString(android.database.Cursor,java.lang.String)>(r1, "mime_type");

        r3 = staticinvoke <com.android.documentsui.model.DocumentInfo: java.lang.String getCursorString(android.database.Cursor,java.lang.String)>(r1, "_display_name");

        $r12 = "vnd.android.document/directory";

        $z2 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label07;

        $r14 = r0.<com.android.documentsui.SortingCursorWrapper: java.lang.String[] mValueString>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(1);

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14[i2] = $r19;

        goto label10;

     label07:
        $r13 = r0.<com.android.documentsui.SortingCursorWrapper: java.lang.String[] mValueString>;

        $r13[i2] = r3;

        goto label10;

     label08:
        $r20 = r0.<com.android.documentsui.SortingCursorWrapper: long[] mValueLong>;

        $l4 = staticinvoke <com.android.documentsui.model.DocumentInfo: long getCursorLong(android.database.Cursor,java.lang.String)>(r1, "last_modified");

        $r20[i2] = $l4;

        goto label10;

     label09:
        $r18 = r0.<com.android.documentsui.SortingCursorWrapper: long[] mValueLong>;

        $l3 = staticinvoke <com.android.documentsui.model.DocumentInfo: long getCursorLong(android.database.Cursor,java.lang.String)>(r1, "_size");

        $r18[i2] = $l3;

     label10:
        i2 = i2 + 1;

        goto label05;

     label11:
        tableswitch(i0)
        {
            case 1: goto label12;
            case 2: goto label18;
            case 3: goto label18;
            default: goto label19;
        };

     label12:
        r24 = class "com/android/documentsui/SortingCursorWrapper";

        entermonitor class "com/android/documentsui/SortingCursorWrapper";

     label13:
        $r8 = r0.<com.android.documentsui.SortingCursorWrapper: int[] mPosition>;

        $r7 = r0.<com.android.documentsui.SortingCursorWrapper: java.lang.String[] mValueString>;

        staticinvoke <com.android.documentsui.SortingCursorWrapper: void binarySort(int[],java.lang.String[])>($r8, $r7);

        exitmonitor r24;

     label14:
        goto label17;

     label15:
        $r22 := @caughtexception;

        r4 = $r22;

        exitmonitor r24;

     label16:
        throw r4;

     label17:
        goto label19;

     label18:
        $r10 = r0.<com.android.documentsui.SortingCursorWrapper: int[] mPosition>;

        $r9 = r0.<com.android.documentsui.SortingCursorWrapper: long[] mValueLong>;

        staticinvoke <com.android.documentsui.SortingCursorWrapper: void binarySort(int[],long[])>($r10, $r9);

     label19:
        return;

        catch java.lang.Throwable from label13 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    public android.os.Bundle getExtras()
    {
        com.android.documentsui.SortingCursorWrapper r0;
        android.database.Cursor $r1;
        android.os.Bundle $r2;

        r0 := @this: com.android.documentsui.SortingCursorWrapper;

        $r1 = r0.<com.android.documentsui.SortingCursorWrapper: android.database.Cursor mCursor>;

        $r2 = interfaceinvoke $r1.<android.database.Cursor: android.os.Bundle getExtras()>();

        return $r2;
    }

    public void close()
    {
        com.android.documentsui.SortingCursorWrapper r0;
        android.database.Cursor $r1;

        r0 := @this: com.android.documentsui.SortingCursorWrapper;

        specialinvoke r0.<android.database.AbstractCursor: void close()>();

        $r1 = r0.<com.android.documentsui.SortingCursorWrapper: android.database.Cursor mCursor>;

        interfaceinvoke $r1.<android.database.Cursor: void close()>();

        return;
    }

    public boolean onMove(int, int)
    {
        com.android.documentsui.SortingCursorWrapper r0;
        int i0, i1, $i2;
        int[] $r1;
        android.database.Cursor $r2;
        boolean $z0;

        r0 := @this: com.android.documentsui.SortingCursorWrapper;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<com.android.documentsui.SortingCursorWrapper: android.database.Cursor mCursor>;

        $r1 = r0.<com.android.documentsui.SortingCursorWrapper: int[] mPosition>;

        $i2 = $r1[i1];

        $z0 = interfaceinvoke $r2.<android.database.Cursor: boolean moveToPosition(int)>($i2);

        return $z0;
    }

    public java.lang.String[] getColumnNames()
    {
        com.android.documentsui.SortingCursorWrapper r0;
        android.database.Cursor $r1;
        java.lang.String[] $r2;

        r0 := @this: com.android.documentsui.SortingCursorWrapper;

        $r1 = r0.<com.android.documentsui.SortingCursorWrapper: android.database.Cursor mCursor>;

        $r2 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String[] getColumnNames()>();

        return $r2;
    }

    public int getCount()
    {
        com.android.documentsui.SortingCursorWrapper r0;
        android.database.Cursor $r1;
        int $i0;

        r0 := @this: com.android.documentsui.SortingCursorWrapper;

        $r1 = r0.<com.android.documentsui.SortingCursorWrapper: android.database.Cursor mCursor>;

        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getCount()>();

        return $i0;
    }

    public double getDouble(int)
    {
        com.android.documentsui.SortingCursorWrapper r0;
        int i0;
        android.database.Cursor $r1;
        double $d0;

        r0 := @this: com.android.documentsui.SortingCursorWrapper;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.documentsui.SortingCursorWrapper: android.database.Cursor mCursor>;

        $d0 = interfaceinvoke $r1.<android.database.Cursor: double getDouble(int)>(i0);

        return $d0;
    }

    public float getFloat(int)
    {
        com.android.documentsui.SortingCursorWrapper r0;
        int i0;
        android.database.Cursor $r1;
        float $f0;

        r0 := @this: com.android.documentsui.SortingCursorWrapper;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.documentsui.SortingCursorWrapper: android.database.Cursor mCursor>;

        $f0 = interfaceinvoke $r1.<android.database.Cursor: float getFloat(int)>(i0);

        return $f0;
    }

    public int getInt(int)
    {
        com.android.documentsui.SortingCursorWrapper r0;
        int i0, $i1;
        android.database.Cursor $r1;

        r0 := @this: com.android.documentsui.SortingCursorWrapper;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.documentsui.SortingCursorWrapper: android.database.Cursor mCursor>;

        $i1 = interfaceinvoke $r1.<android.database.Cursor: int getInt(int)>(i0);

        return $i1;
    }

    public long getLong(int)
    {
        com.android.documentsui.SortingCursorWrapper r0;
        int i0;
        android.database.Cursor $r1;
        long $l1;

        r0 := @this: com.android.documentsui.SortingCursorWrapper;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.documentsui.SortingCursorWrapper: android.database.Cursor mCursor>;

        $l1 = interfaceinvoke $r1.<android.database.Cursor: long getLong(int)>(i0);

        return $l1;
    }

    public short getShort(int)
    {
        com.android.documentsui.SortingCursorWrapper r0;
        int i0;
        android.database.Cursor $r1;
        short $s1;

        r0 := @this: com.android.documentsui.SortingCursorWrapper;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.documentsui.SortingCursorWrapper: android.database.Cursor mCursor>;

        $s1 = interfaceinvoke $r1.<android.database.Cursor: short getShort(int)>(i0);

        return $s1;
    }

    public java.lang.String getString(int)
    {
        com.android.documentsui.SortingCursorWrapper r0;
        int i0;
        android.database.Cursor $r1;
        java.lang.String $r2;

        r0 := @this: com.android.documentsui.SortingCursorWrapper;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.documentsui.SortingCursorWrapper: android.database.Cursor mCursor>;

        $r2 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>(i0);

        return $r2;
    }

    public int getType(int)
    {
        com.android.documentsui.SortingCursorWrapper r0;
        int i0, $i1;
        android.database.Cursor $r1;

        r0 := @this: com.android.documentsui.SortingCursorWrapper;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.documentsui.SortingCursorWrapper: android.database.Cursor mCursor>;

        $i1 = interfaceinvoke $r1.<android.database.Cursor: int getType(int)>(i0);

        return $i1;
    }

    public boolean isNull(int)
    {
        com.android.documentsui.SortingCursorWrapper r0;
        int i0;
        android.database.Cursor $r1;
        boolean $z0;

        r0 := @this: com.android.documentsui.SortingCursorWrapper;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.documentsui.SortingCursorWrapper: android.database.Cursor mCursor>;

        $z0 = interfaceinvoke $r1.<android.database.Cursor: boolean isNull(int)>(i0);

        return $z0;
    }

    private static void binarySort(int[], java.lang.String[])
    {
        int[] r0;
        java.lang.String[] r1;
        int i0, i1, i2, i3, i4, i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18;
        java.lang.String r2, r3, r4, $r5, $r6;

        r0 := @parameter0: int[];

        r1 := @parameter1: java.lang.String[];

        i0 = lengthof r0;

        i1 = 1;

     label01:
        if i1 >= i0 goto label10;

        i2 = r0[i1];

        r2 = r1[i1];

        i3 = 0;

        i4 = i1;

     label02:
        if i3 >= i4 goto label05;

        $i17 = i3 + i4;

        i5 = $i17 >>> 1;

        r3 = r2;

        r4 = r1[i5];

        i6 = staticinvoke <com.android.documentsui.model.DocumentInfo: int compareToIgnoreCaseNullable(java.lang.String,java.lang.String)>(r3, r4);

        if i6 >= 0 goto label03;

        i4 = i5;

        goto label04;

     label03:
        i3 = i5 + 1;

     label04:
        goto label02;

     label05:
        i18 = i1 - i3;

        lookupswitch(i18)
        {
            case 1: goto label07;
            case 2: goto label06;
            default: goto label08;
        };

     label06:
        $i9 = i3 + 2;

        $i7 = i3 + 1;

        $i8 = r0[$i7];

        r0[$i9] = $i8;

        $i11 = i3 + 2;

        $i10 = i3 + 1;

        $r5 = r1[$i10];

        r1[$i11] = $r5;

     label07:
        $i12 = i3 + 1;

        $i13 = r0[i3];

        r0[$i12] = $i13;

        $i14 = i3 + 1;

        $r6 = r1[i3];

        r1[$i14] = $r6;

        goto label09;

     label08:
        $i16 = i3 + 1;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>(r0, i3, r0, $i16, i18);

        $i15 = i3 + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, i3, r1, $i15, i18);

     label09:
        r0[i3] = i2;

        r1[i3] = r2;

        i1 = i1 + 1;

        goto label01;

     label10:
        return;
    }

    private static void binarySort(int[], long[])
    {
        int[] r0;
        long[] r1;
        int i0, i1, i2, i4, i5, i6, i9, $i10, $i11, $i12, $i14, $i15, $i16, $i18, $i19, $i20, $i21, $i22, i23;
        long l3, l7, l8, $l13, $l17;

        r0 := @parameter0: int[];

        r1 := @parameter1: long[];

        i0 = lengthof r0;

        i1 = 1;

     label01:
        if i1 >= i0 goto label10;

        i2 = r0[i1];

        l3 = r1[i1];

        i4 = 0;

        i5 = i1;

     label02:
        if i4 >= i5 goto label05;

        $i21 = i4 + i5;

        i6 = $i21 >>> 1;

        l7 = l3;

        l8 = r1[i6];

        i9 = staticinvoke <java.lang.Long: int compare(long,long)>(l7, l8);

        if i9 <= 0 goto label03;

        i5 = i6;

        goto label04;

     label03:
        i4 = i6 + 1;

     label04:
        goto label02;

     label05:
        i23 = i1 - i4;

        lookupswitch(i23)
        {
            case 1: goto label07;
            case 2: goto label06;
            default: goto label08;
        };

     label06:
        $i11 = i4 + 2;

        $i10 = i4 + 1;

        $i12 = r0[$i10];

        r0[$i11] = $i12;

        $i16 = i4 + 2;

        $i14 = i4 + 1;

        $l13 = r1[$i14];

        r1[$i16] = $l13;

     label07:
        $i18 = i4 + 1;

        $i15 = r0[i4];

        r0[$i18] = $i15;

        $i20 = i4 + 1;

        $l17 = r1[i4];

        r1[$i20] = $l17;

        goto label09;

     label08:
        $i19 = i4 + 1;

        staticinvoke <java.lang.System: void arraycopy(int[],int,int[],int,int)>(r0, i4, r0, $i19, i23);

        $i22 = i4 + 1;

        staticinvoke <java.lang.System: void arraycopy(long[],int,long[],int,int)>(r1, i4, r1, $i22, i23);

     label09:
        r0[i4] = i2;

        r1[i4] = l3;

        i1 = i1 + 1;

        goto label01;

     label10:
        return;
    }
}
