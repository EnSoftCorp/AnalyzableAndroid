abstract class com.google.common.util.concurrent.AbstractListeningExecutorService extends java.lang.Object implements com.google.common.util.concurrent.ListeningExecutorService
{

    void <init>()
    {
        com.google.common.util.concurrent.AbstractListeningExecutorService r0;

        r0 := @this: com.google.common.util.concurrent.AbstractListeningExecutorService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.google.common.util.concurrent.ListenableFuture submit(java.lang.Runnable)
    {
        com.google.common.util.concurrent.AbstractListeningExecutorService r0;
        java.lang.Runnable r1;
        com.google.common.util.concurrent.ListenableFutureTask r2;

        r0 := @this: com.google.common.util.concurrent.AbstractListeningExecutorService;

        r1 := @parameter0: java.lang.Runnable;

        r2 = staticinvoke <com.google.common.util.concurrent.ListenableFutureTask: com.google.common.util.concurrent.ListenableFutureTask create(java.lang.Runnable,java.lang.Object)>(r1, null);

        virtualinvoke r0.<com.google.common.util.concurrent.AbstractListeningExecutorService: void execute(java.lang.Runnable)>(r2);

        return r2;
    }

    public com.google.common.util.concurrent.ListenableFuture submit(java.lang.Runnable, java.lang.Object)
    {
        com.google.common.util.concurrent.AbstractListeningExecutorService r0;
        java.lang.Runnable r1;
        java.lang.Object r2;
        com.google.common.util.concurrent.ListenableFutureTask r3;

        r0 := @this: com.google.common.util.concurrent.AbstractListeningExecutorService;

        r1 := @parameter0: java.lang.Runnable;

        r2 := @parameter1: java.lang.Object;

        r3 = staticinvoke <com.google.common.util.concurrent.ListenableFutureTask: com.google.common.util.concurrent.ListenableFutureTask create(java.lang.Runnable,java.lang.Object)>(r1, r2);

        virtualinvoke r0.<com.google.common.util.concurrent.AbstractListeningExecutorService: void execute(java.lang.Runnable)>(r3);

        return r3;
    }

    public com.google.common.util.concurrent.ListenableFuture submit(java.util.concurrent.Callable)
    {
        com.google.common.util.concurrent.AbstractListeningExecutorService r0;
        java.util.concurrent.Callable r1;
        com.google.common.util.concurrent.ListenableFutureTask r2;

        r0 := @this: com.google.common.util.concurrent.AbstractListeningExecutorService;

        r1 := @parameter0: java.util.concurrent.Callable;

        r2 = staticinvoke <com.google.common.util.concurrent.ListenableFutureTask: com.google.common.util.concurrent.ListenableFutureTask create(java.util.concurrent.Callable)>(r1);

        virtualinvoke r0.<com.google.common.util.concurrent.AbstractListeningExecutorService: void execute(java.lang.Runnable)>(r2);

        return r2;
    }

    private java.lang.Object doInvokeAny(java.util.Collection, boolean, long) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException
    {
        com.google.common.util.concurrent.AbstractListeningExecutorService r0;
        java.util.Collection r1;
        boolean z0, $z2, $z4, $z7;
        long l0, l2, l4, $l5, $l6;
        int i1, i3, i7;
        java.util.ArrayList r2, $r12;
        java.util.concurrent.ExecutorCompletionService r3, $r13;
        java.util.concurrent.ExecutionException r4, $r22, $r26, $r28, r30;
        java.util.Iterator r5, r7, r11;
        java.util.concurrent.Future r6, r9, r10, $r16, $r21;
        java.lang.Throwable r8, $r24;
        java.util.concurrent.Callable $r14, $r20;
        java.lang.Object $r15, $r18, $r23, $r25, r29;
        java.util.concurrent.TimeUnit $r17;
        java.util.concurrent.TimeoutException $r19;
        java.lang.RuntimeException $r27, r31;

        r0 := @this: com.google.common.util.concurrent.AbstractListeningExecutorService;

        r1 := @parameter0: java.util.Collection;

        z0 := @parameter1: boolean;

        l0 := @parameter2: long;

        i1 = interfaceinvoke r1.<java.util.Collection: int size()>();

        if i1 <= 0 goto label01;

        $z4 = 1;

        goto label02;

     label01:
        $z4 = 0;

     label02:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($z4);

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>(int)>(i1);

        r2 = $r12;

        $r13 = new java.util.concurrent.ExecutorCompletionService;

        specialinvoke $r13.<java.util.concurrent.ExecutorCompletionService: void <init>(java.util.concurrent.Executor)>(r0);

        r3 = $r13;

     label03:
        r4 = null;

        if z0 == 0 goto label04;

        $l6 = staticinvoke <java.lang.System: long nanoTime()>();

        goto label05;

     label04:
        $l6 = 0L;

     label05:
        l2 = $l6;

        r5 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

        $r15 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        $r14 = (java.util.concurrent.Callable) $r15;

        $r16 = virtualinvoke r3.<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>($r14);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r16);

        i7 = i1 + -1;

        i3 = 1;

     label06:
        r6 = virtualinvoke r3.<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.Future poll()>();

        if r6 != null goto label11;

        if i7 <= 0 goto label07;

        i7 = i7 + -1;

        $r23 = interfaceinvoke r5.<java.util.Iterator: java.lang.Object next()>();

        $r20 = (java.util.concurrent.Callable) $r23;

        $r21 = virtualinvoke r3.<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.Future submit(java.util.concurrent.Callable)>($r20);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>($r21);

        i3 = i3 + 1;

        goto label11;

     label07:
        if i3 != 0 goto label08;

        goto label19;

     label08:
        if z0 == 0 goto label10;

        $r17 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        r6 = virtualinvoke r3.<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.Future poll(long,java.util.concurrent.TimeUnit)>(l0, $r17);

        if r6 != null goto label09;

        $r19 = new java.util.concurrent.TimeoutException;

        specialinvoke $r19.<java.util.concurrent.TimeoutException: void <init>()>();

        throw $r19;

     label09:
        l4 = staticinvoke <java.lang.System: long nanoTime()>();

        $l5 = l4 - l2;

        l0 = l0 - $l5;

        l2 = l4;

        goto label11;

     label10:
        r6 = virtualinvoke r3.<java.util.concurrent.ExecutorCompletionService: java.util.concurrent.Future take()>();

     label11:
        if r6 == null goto label18;

        i3 = i3 + -1;

     label12:
        r29 = interfaceinvoke r6.<java.util.concurrent.Future: java.lang.Object get()>();

     label13:
        r7 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label14:
        $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label15;

        $r18 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.util.concurrent.Future) $r18;

        interfaceinvoke r9.<java.util.concurrent.Future: boolean cancel(boolean)>(1);

        goto label14;

     label15:
        return r29;

     label16:
        $r28 := @caughtexception;

        r30 = $r28;

        r4 = r30;

        goto label18;

     label17:
        $r27 := @caughtexception;

        r31 = $r27;

        $r26 = new java.util.concurrent.ExecutionException;

        specialinvoke $r26.<java.util.concurrent.ExecutionException: void <init>(java.lang.Throwable)>(r31);

        r4 = $r26;

     label18:
        goto label06;

     label19:
        if r4 != null goto label20;

        $r22 = new java.util.concurrent.ExecutionException;

        specialinvoke $r22.<java.util.concurrent.ExecutionException: void <init>(java.lang.Throwable)>(null);

        r4 = $r22;

     label20:
        throw r4;

     label21:
        $r24 := @caughtexception;

        r8 = $r24;

     label22:
        r11 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label23:
        $z7 = interfaceinvoke r11.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label24;

        $r25 = interfaceinvoke r11.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.util.concurrent.Future) $r25;

        interfaceinvoke r10.<java.util.concurrent.Future: boolean cancel(boolean)>(1);

        goto label23;

     label24:
        throw r8;

        catch java.util.concurrent.ExecutionException from label12 to label13 with label16;
        catch java.lang.RuntimeException from label12 to label13 with label17;
        catch java.lang.Throwable from label03 to label13 with label21;
        catch java.lang.Throwable from label16 to label22 with label21;
    }

    public java.lang.Object invokeAny(java.util.Collection) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException
    {
        com.google.common.util.concurrent.AbstractListeningExecutorService r0;
        java.util.Collection r1;
        java.lang.Object $r3;
        java.util.concurrent.TimeoutException $r4;
        java.lang.AssertionError $r5;

        r0 := @this: com.google.common.util.concurrent.AbstractListeningExecutorService;

        r1 := @parameter0: java.util.Collection;

     label1:
        $r3 = specialinvoke r0.<com.google.common.util.concurrent.AbstractListeningExecutorService: java.lang.Object doInvokeAny(java.util.Collection,boolean,long)>(r1, 0, 0L);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

        catch java.util.concurrent.TimeoutException from label1 to label2 with label3;
    }

    public java.lang.Object invokeAny(java.util.Collection, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException
    {
        com.google.common.util.concurrent.AbstractListeningExecutorService r0;
        java.util.Collection r1;
        long l0, $l1;
        java.util.concurrent.TimeUnit r2;
        java.lang.Object $r3;

        r0 := @this: com.google.common.util.concurrent.AbstractListeningExecutorService;

        r1 := @parameter0: java.util.Collection;

        l0 := @parameter1: long;

        r2 := @parameter2: java.util.concurrent.TimeUnit;

        $l1 = virtualinvoke r2.<java.util.concurrent.TimeUnit: long toNanos(long)>(l0);

        $r3 = specialinvoke r0.<com.google.common.util.concurrent.AbstractListeningExecutorService: java.lang.Object doInvokeAny(java.util.Collection,boolean,long)>(r1, 1, $l1);

        return $r3;
    }

    public java.util.List invokeAll(java.util.Collection) throws java.lang.InterruptedException
    {
        com.google.common.util.concurrent.AbstractListeningExecutorService r0;
        java.util.Collection r1;
        java.util.ArrayList r2, $r9, r23;
        boolean z0, $z1, $z2, $z3, $z5, $z7;
        java.util.Iterator r3, r7, r19, r24;
        java.util.concurrent.Callable r4;
        com.google.common.util.concurrent.ListenableFutureTask r5;
        java.lang.Throwable r6, $r16;
        java.util.concurrent.Future r8, r20, r25;
        int $i0;
        java.lang.Object $r10, $r11, $r12, $r18;
        java.util.concurrent.CancellationException $r14;
        java.lang.NullPointerException $r15;
        java.util.concurrent.ExecutionException $r17;

        r0 := @this: com.google.common.util.concurrent.AbstractListeningExecutorService;

        r1 := @parameter0: java.util.Collection;

        if r1 != null goto label01;

        $r15 = new java.lang.NullPointerException;

        specialinvoke $r15.<java.lang.NullPointerException: void <init>()>();

        throw $r15;

     label01:
        $r9 = new java.util.ArrayList;

        $i0 = interfaceinvoke r1.<java.util.Collection: int size()>();

        specialinvoke $r9.<java.util.ArrayList: void <init>(int)>($i0);

        r2 = $r9;

        z0 = 0;

     label02:
        r3 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label04;

        $r12 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.concurrent.Callable) $r12;

        r5 = staticinvoke <com.google.common.util.concurrent.ListenableFutureTask: com.google.common.util.concurrent.ListenableFutureTask create(java.util.concurrent.Callable)>(r4);

        interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r5);

        virtualinvoke r0.<com.google.common.util.concurrent.AbstractListeningExecutorService: void execute(java.lang.Runnable)>(r5);

        goto label03;

     label04:
        r19 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z2 = interfaceinvoke r19.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label11;

        $r11 = interfaceinvoke r19.<java.util.Iterator: java.lang.Object next()>();

        r20 = (java.util.concurrent.Future) $r11;

        $z5 = interfaceinvoke r20.<java.util.concurrent.Future: boolean isDone()>();

        if $z5 != 0 goto label10;

     label06:
        interfaceinvoke r20.<java.util.concurrent.Future: java.lang.Object get()>();

     label07:
        goto label10;

     label08:
        $r14 := @caughtexception;

        goto label10;

     label09:
        $r17 := @caughtexception;

     label10:
        goto label05;

     label11:
        z0 = 1;

        r23 = r2;

     label12:
        if z0 != 0 goto label14;

        r24 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label13:
        $z3 = interfaceinvoke r24.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label14;

        $r10 = interfaceinvoke r24.<java.util.Iterator: java.lang.Object next()>();

        r25 = (java.util.concurrent.Future) $r10;

        interfaceinvoke r25.<java.util.concurrent.Future: boolean cancel(boolean)>(1);

        goto label13;

     label14:
        return r23;

     label15:
        $r16 := @caughtexception;

        r6 = $r16;

     label16:
        if z0 != 0 goto label18;

        r7 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label17:
        $z7 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z7 == 0 goto label18;

        $r18 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.util.concurrent.Future) $r18;

        interfaceinvoke r8.<java.util.concurrent.Future: boolean cancel(boolean)>(1);

        goto label17;

     label18:
        throw r6;

        catch java.util.concurrent.CancellationException from label06 to label07 with label08;
        catch java.util.concurrent.ExecutionException from label06 to label07 with label09;
        catch java.lang.Throwable from label02 to label12 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    public java.util.List invokeAll(java.util.Collection, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException
    {
        com.google.common.util.concurrent.AbstractListeningExecutorService r0;
        java.util.Collection r1;
        long l0, l1, l2, $l5, $l6, l8, l9;
        java.util.concurrent.TimeUnit r2, $r18;
        java.util.ArrayList r3, r8, $r16, r35, r41, r43;
        boolean z0, $z1, $z2, $z3, $z5, $z6, $z8, $z9, $z12, $z13;
        java.util.Iterator r4, r6, r9, r12, r34, r36, r42, r44;
        java.util.concurrent.Callable r5;
        java.util.concurrent.Future r7, r10, r11, r15, r37, r45;
        java.lang.Throwable r13, $r33;
        java.lang.NullPointerException $r14;
        int $i3;
        java.lang.Object $r17, $r19, $r21, $r22, $r25, $r27, $r28, $r30;
        byte $b4, $b7;
        java.lang.Runnable $r23, $r24;
        com.google.common.util.concurrent.ListenableFutureTask $r26;
        java.util.concurrent.TimeoutException $r29;
        java.util.concurrent.ExecutionException $r31;
        java.util.concurrent.CancellationException $r32;

        r0 := @this: com.google.common.util.concurrent.AbstractListeningExecutorService;

        r1 := @parameter0: java.util.Collection;

        l0 := @parameter1: long;

        r2 := @parameter2: java.util.concurrent.TimeUnit;

        if r1 == null goto label01;

        if r2 != null goto label02;

     label01:
        $r14 = new java.lang.NullPointerException;

        specialinvoke $r14.<java.lang.NullPointerException: void <init>()>();

        throw $r14;

     label02:
        l1 = virtualinvoke r2.<java.util.concurrent.TimeUnit: long toNanos(long)>(l0);

        $r16 = new java.util.ArrayList;

        $i3 = interfaceinvoke r1.<java.util.Collection: int size()>();

        specialinvoke $r16.<java.util.ArrayList: void <init>(int)>($i3);

        r3 = $r16;

        z0 = 0;

     label03:
        r4 = interfaceinvoke r1.<java.util.Collection: java.util.Iterator iterator()>();

     label04:
        $z1 = interfaceinvoke r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label05;

        $r27 = interfaceinvoke r4.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.concurrent.Callable) $r27;

        $r26 = staticinvoke <com.google.common.util.concurrent.ListenableFutureTask: com.google.common.util.concurrent.ListenableFutureTask create(java.util.concurrent.Callable)>(r5);

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>($r26);

        goto label04;

     label05:
        l8 = staticinvoke <java.lang.System: long nanoTime()>();

        r6 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label06:
        $z2 = interfaceinvoke r6.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label11;

        $r21 = interfaceinvoke r6.<java.util.Iterator: java.lang.Object next()>();

        $r24 = (java.lang.Runnable) $r21;

        $r23 = (java.lang.Runnable) $r24;

        virtualinvoke r0.<com.google.common.util.concurrent.AbstractListeningExecutorService: void execute(java.lang.Runnable)>($r23);

        l2 = staticinvoke <java.lang.System: long nanoTime()>();

        $l6 = l2 - l8;

        l1 = l1 - $l6;

        l8 = l2;

        $b7 = l1 cmp 0L;

        if $b7 > 0 goto label10;

        r8 = r3;

     label07:
        if z0 != 0 goto label09;

        r9 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z9 = interfaceinvoke r9.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label09;

        $r25 = interfaceinvoke r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (java.util.concurrent.Future) $r25;

        interfaceinvoke r11.<java.util.concurrent.Future: boolean cancel(boolean)>(1);

        goto label08;

     label09:
        return r8;

     label10:
        goto label06;

     label11:
        r34 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label12:
        $z3 = interfaceinvoke r34.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label26;

        $r19 = interfaceinvoke r34.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.concurrent.Future) $r19;

        $z6 = interfaceinvoke r7.<java.util.concurrent.Future: boolean isDone()>();

        if $z6 != 0 goto label25;

        $b4 = l1 cmp 0L;

        if $b4 > 0 goto label16;

        r35 = r3;

     label13:
        if z0 != 0 goto label15;

        r36 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label14:
        $z8 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label15;

        $r22 = interfaceinvoke r36.<java.util.Iterator: java.lang.Object next()>();

        r37 = (java.util.concurrent.Future) $r22;

        interfaceinvoke r37.<java.util.concurrent.Future: boolean cancel(boolean)>(1);

        goto label14;

     label15:
        return r35;

     label16:
        $r18 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;

        interfaceinvoke r7.<java.util.concurrent.Future: java.lang.Object get(long,java.util.concurrent.TimeUnit)>(l1, $r18);

     label17:
        goto label24;

     label18:
        $r32 := @caughtexception;

        goto label24;

     label19:
        $r31 := @caughtexception;

        goto label24;

     label20:
        $r29 := @caughtexception;

        r41 = r3;

     label21:
        if z0 != 0 goto label23;

        r42 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label22:
        $z12 = interfaceinvoke r42.<java.util.Iterator: boolean hasNext()>();

        if $z12 == 0 goto label23;

        $r28 = interfaceinvoke r42.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.util.concurrent.Future) $r28;

        interfaceinvoke r10.<java.util.concurrent.Future: boolean cancel(boolean)>(1);

        goto label22;

     label23:
        return r41;

     label24:
        l9 = staticinvoke <java.lang.System: long nanoTime()>();

        $l5 = l9 - l8;

        l1 = l1 - $l5;

        l8 = l9;

     label25:
        goto label12;

     label26:
        z0 = 1;

        r43 = r3;

     label27:
        if z0 != 0 goto label29;

        r44 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label28:
        $z5 = interfaceinvoke r44.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label29;

        $r17 = interfaceinvoke r44.<java.util.Iterator: java.lang.Object next()>();

        r45 = (java.util.concurrent.Future) $r17;

        interfaceinvoke r45.<java.util.concurrent.Future: boolean cancel(boolean)>(1);

        goto label28;

     label29:
        return r43;

     label30:
        $r33 := @caughtexception;

        r13 = $r33;

     label31:
        if z0 != 0 goto label33;

        r12 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label32:
        $z13 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>();

        if $z13 == 0 goto label33;

        $r30 = interfaceinvoke r12.<java.util.Iterator: java.lang.Object next()>();

        r15 = (java.util.concurrent.Future) $r30;

        interfaceinvoke r15.<java.util.concurrent.Future: boolean cancel(boolean)>(1);

        goto label32;

     label33:
        throw r13;

        catch java.util.concurrent.CancellationException from label16 to label17 with label18;
        catch java.util.concurrent.ExecutionException from label16 to label17 with label19;
        catch java.util.concurrent.TimeoutException from label16 to label17 with label20;
        catch java.lang.Throwable from label03 to label07 with label30;
        catch java.lang.Throwable from label10 to label13 with label30;
        catch java.lang.Throwable from label16 to label21 with label30;
        catch java.lang.Throwable from label24 to label27 with label30;
        catch java.lang.Throwable from label30 to label31 with label30;
    }

    public volatile java.util.concurrent.Future submit(java.lang.Runnable)
    {
        com.google.common.util.concurrent.AbstractListeningExecutorService r0;
        java.lang.Runnable r1;
        com.google.common.util.concurrent.ListenableFuture $r2;

        r0 := @this: com.google.common.util.concurrent.AbstractListeningExecutorService;

        r1 := @parameter0: java.lang.Runnable;

        $r2 = virtualinvoke r0.<com.google.common.util.concurrent.AbstractListeningExecutorService: com.google.common.util.concurrent.ListenableFuture submit(java.lang.Runnable)>(r1);

        return $r2;
    }

    public volatile java.util.concurrent.Future submit(java.lang.Runnable, java.lang.Object)
    {
        com.google.common.util.concurrent.AbstractListeningExecutorService r0;
        java.lang.Runnable r1;
        java.lang.Object r2;
        com.google.common.util.concurrent.ListenableFuture $r3;

        r0 := @this: com.google.common.util.concurrent.AbstractListeningExecutorService;

        r1 := @parameter0: java.lang.Runnable;

        r2 := @parameter1: java.lang.Object;

        $r3 = virtualinvoke r0.<com.google.common.util.concurrent.AbstractListeningExecutorService: com.google.common.util.concurrent.ListenableFuture submit(java.lang.Runnable,java.lang.Object)>(r1, r2);

        return $r3;
    }

    public volatile java.util.concurrent.Future submit(java.util.concurrent.Callable)
    {
        com.google.common.util.concurrent.AbstractListeningExecutorService r0;
        java.util.concurrent.Callable r1;
        com.google.common.util.concurrent.ListenableFuture $r2;

        r0 := @this: com.google.common.util.concurrent.AbstractListeningExecutorService;

        r1 := @parameter0: java.util.concurrent.Callable;

        $r2 = virtualinvoke r0.<com.google.common.util.concurrent.AbstractListeningExecutorService: com.google.common.util.concurrent.ListenableFuture submit(java.util.concurrent.Callable)>(r1);

        return $r2;
    }
}
