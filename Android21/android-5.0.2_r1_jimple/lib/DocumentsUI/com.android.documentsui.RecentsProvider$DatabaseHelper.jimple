class com.android.documentsui.RecentsProvider$DatabaseHelper extends android.database.sqlite.SQLiteOpenHelper
{
    private static final java.lang.String DB_NAME;
    private static final int VERSION_INIT;
    private static final int VERSION_AS_BLOB;
    private static final int VERSION_ADD_EXTERNAL;
    private static final int VERSION_ADD_RECENT_KEY;

    public void <init>(android.content.Context)
    {
        com.android.documentsui.RecentsProvider$DatabaseHelper r0;
        android.content.Context r1;

        r0 := @this: com.android.documentsui.RecentsProvider$DatabaseHelper;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.database.sqlite.SQLiteOpenHelper: void <init>(android.content.Context,java.lang.String,android.database.sqlite.SQLiteDatabase$CursorFactory,int)>(r1, "recents.db", null, 5);

        return;
    }

    public void onCreate(android.database.sqlite.SQLiteDatabase)
    {
        com.android.documentsui.RecentsProvider$DatabaseHelper r0;
        android.database.sqlite.SQLiteDatabase r1;

        r0 := @this: com.android.documentsui.RecentsProvider$DatabaseHelper;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE recent (key TEXT PRIMARY KEY ON CONFLICT REPLACE,stack BLOB DEFAULT NULL,timestamp INTEGER)");

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE state (authority TEXT,root_id TEXT,document_id TEXT,mode INTEGER,sortOrder INTEGER,PRIMARY KEY (authority, root_id, document_id))");

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("CREATE TABLE resume (package_name TEXT NOT NULL PRIMARY KEY,stack BLOB DEFAULT NULL,timestamp INTEGER,external INTEGER NOT NULL DEFAULT 0)");

        return;
    }

    public void onUpgrade(android.database.sqlite.SQLiteDatabase, int, int)
    {
        com.android.documentsui.RecentsProvider$DatabaseHelper r0;
        android.database.sqlite.SQLiteDatabase r1;
        int i0, i1;

        r0 := @this: com.android.documentsui.RecentsProvider$DatabaseHelper;

        r1 := @parameter0: android.database.sqlite.SQLiteDatabase;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("RecentsProvider", "Upgrading database; wiping app data");

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS recent");

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS state");

        virtualinvoke r1.<android.database.sqlite.SQLiteDatabase: void execSQL(java.lang.String)>("DROP TABLE IF EXISTS resume");

        virtualinvoke r0.<com.android.documentsui.RecentsProvider$DatabaseHelper: void onCreate(android.database.sqlite.SQLiteDatabase)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <com.android.documentsui.RecentsProvider$DatabaseHelper: int VERSION_ADD_RECENT_KEY> = 5;

        <com.android.documentsui.RecentsProvider$DatabaseHelper: int VERSION_ADD_EXTERNAL> = 4;

        <com.android.documentsui.RecentsProvider$DatabaseHelper: int VERSION_AS_BLOB> = 3;

        <com.android.documentsui.RecentsProvider$DatabaseHelper: int VERSION_INIT> = 1;

        <com.android.documentsui.RecentsProvider$DatabaseHelper: java.lang.String DB_NAME> = "recents.db";

        return;
    }
}
