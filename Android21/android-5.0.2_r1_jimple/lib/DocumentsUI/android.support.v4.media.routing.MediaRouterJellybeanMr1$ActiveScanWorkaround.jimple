public final class android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround extends java.lang.Object implements java.lang.Runnable
{
    private static final int WIFI_DISPLAY_SCAN_INTERVAL;
    private final android.hardware.display.DisplayManager mDisplayManager;
    private final android.os.Handler mHandler;
    private java.lang.reflect.Method mScanWifiDisplaysMethod;
    private boolean mActivelyScanningWifiDisplays;

    public void <init>(android.content.Context, android.os.Handler)
    {
        android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround r0;
        android.content.Context r1;
        android.os.Handler r2;
        int $i0;
        java.lang.Object $r4;
        android.hardware.display.DisplayManager $r5;
        java.lang.Class[] $r6;
        java.lang.Class $r7;
        java.lang.reflect.Method $r8;
        java.lang.UnsupportedOperationException $r9;
        java.lang.NoSuchMethodException $r10;

        r0 := @this: android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Handler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 == 17 goto label1;

        $r9 = new java.lang.UnsupportedOperationException;

        specialinvoke $r9.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r9;

     label1:
        $r4 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("display");

        $r5 = (android.hardware.display.DisplayManager) $r4;

        r0.<android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround: android.hardware.display.DisplayManager mDisplayManager> = $r5;

        r0.<android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround: android.os.Handler mHandler> = r2;

     label2:
        $r7 = class "android/hardware/display/DisplayManager";

        $r6 = newarray (java.lang.Class)[0];

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("scanWifiDisplays", $r6);

        r0.<android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround: java.lang.reflect.Method mScanWifiDisplaysMethod> = $r8;

     label3:
        goto label5;

     label4:
        $r10 := @caughtexception;

     label5:
        return;

        catch java.lang.NoSuchMethodException from label2 to label3 with label4;
    }

    public void setActiveScanRouteTypes(int)
    {
        android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround r0;
        int i0, $i1;
        boolean $z0, $z1;
        android.os.Handler $r1, $r3;
        java.lang.reflect.Method $r2;

        r0 := @this: android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround;

        i0 := @parameter0: int;

        $i1 = i0 & 2;

        if $i1 == 0 goto label2;

        $z1 = r0.<android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround: boolean mActivelyScanningWifiDisplays>;

        if $z1 != 0 goto label3;

        $r2 = r0.<android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround: java.lang.reflect.Method mScanWifiDisplaysMethod>;

        if $r2 == null goto label1;

        r0.<android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround: boolean mActivelyScanningWifiDisplays> = 1;

        $r3 = r0.<android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround: android.os.Handler mHandler>;

        virtualinvoke $r3.<android.os.Handler: boolean post(java.lang.Runnable)>(r0);

        goto label3;

     label1:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("MediaRouterJellybeanMr1", "Cannot scan for wifi displays because the DisplayManager.scanWifiDisplays() method is not available on this device.");

        goto label3;

     label2:
        $z0 = r0.<android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround: boolean mActivelyScanningWifiDisplays>;

        if $z0 == 0 goto label3;

        r0.<android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround: boolean mActivelyScanningWifiDisplays> = 0;

        $r1 = r0.<android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround: android.os.Handler mHandler>;

        virtualinvoke $r1.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>(r0);

     label3:
        return;
    }

    public void run()
    {
        android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround r0;
        java.lang.IllegalAccessException r1, $r8;
        boolean $z0;
        java.lang.Object[] $r2;
        android.hardware.display.DisplayManager $r3;
        java.lang.reflect.Method $r4;
        android.os.Handler $r6;
        java.lang.reflect.InvocationTargetException $r7, r9;

        r0 := @this: android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround;

        $z0 = r0.<android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround: boolean mActivelyScanningWifiDisplays>;

        if $z0 == 0 goto label6;

     label1:
        $r4 = r0.<android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround: java.lang.reflect.Method mScanWifiDisplaysMethod>;

        $r3 = r0.<android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround: android.hardware.display.DisplayManager mDisplayManager>;

        $r2 = newarray (java.lang.Object)[0];

        virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r3, $r2);

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;

        r1 = $r8;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaRouterJellybeanMr1", "Cannot scan for wifi displays.", r1);

        goto label5;

     label4:
        $r7 := @caughtexception;

        r9 = $r7;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("MediaRouterJellybeanMr1", "Cannot scan for wifi displays.", r9);

     label5:
        $r6 = r0.<android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround: android.os.Handler mHandler>;

        virtualinvoke $r6.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>(r0, 15000L);

     label6:
        return;

        catch java.lang.IllegalAccessException from label1 to label2 with label3;
        catch java.lang.reflect.InvocationTargetException from label1 to label2 with label4;
    }

    public static void <clinit>()
    {
        <android.support.v4.media.routing.MediaRouterJellybeanMr1$ActiveScanWorkaround: int WIFI_DISPLAY_SCAN_INTERVAL> = 15000;

        return;
    }
}
