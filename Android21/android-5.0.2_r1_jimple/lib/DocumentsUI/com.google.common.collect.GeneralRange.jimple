final class com.google.common.collect.GeneralRange extends java.lang.Object implements java.io.Serializable
{
    private final java.util.Comparator comparator;
    private final boolean hasLowerBound;
    private final java.lang.Object lowerEndpoint;
    private final com.google.common.collect.BoundType lowerBoundType;
    private final boolean hasUpperBound;
    private final java.lang.Object upperEndpoint;
    private final com.google.common.collect.BoundType upperBoundType;
    private transient com.google.common.collect.GeneralRange reverse;

    static com.google.common.collect.GeneralRange 'from'(com.google.common.collect.Range)
    {
        com.google.common.collect.Range r0;
        java.lang.Comparable r1, r3, $r8, $r10;
        com.google.common.collect.BoundType r2, r4, $r7, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        com.google.common.collect.GeneralRange $r5;
        com.google.common.collect.Ordering $r6;

        r0 := @parameter0: com.google.common.collect.Range;

        $z0 = virtualinvoke r0.<com.google.common.collect.Range: boolean hasLowerBound()>();

        if $z0 == 0 goto label1;

        $r10 = virtualinvoke r0.<com.google.common.collect.Range: java.lang.Comparable lowerEndpoint()>();

        goto label2;

     label1:
        $r10 = null;

     label2:
        r1 = $r10;

        $z1 = virtualinvoke r0.<com.google.common.collect.Range: boolean hasLowerBound()>();

        if $z1 == 0 goto label3;

        $r9 = virtualinvoke r0.<com.google.common.collect.Range: com.google.common.collect.BoundType lowerBoundType()>();

        goto label4;

     label3:
        $r9 = <com.google.common.collect.BoundType: com.google.common.collect.BoundType OPEN>;

     label4:
        r2 = $r9;

        $z2 = virtualinvoke r0.<com.google.common.collect.Range: boolean hasUpperBound()>();

        if $z2 == 0 goto label5;

        $r8 = virtualinvoke r0.<com.google.common.collect.Range: java.lang.Comparable upperEndpoint()>();

        goto label6;

     label5:
        $r8 = null;

     label6:
        r3 = $r8;

        $z3 = virtualinvoke r0.<com.google.common.collect.Range: boolean hasUpperBound()>();

        if $z3 == 0 goto label7;

        $r7 = virtualinvoke r0.<com.google.common.collect.Range: com.google.common.collect.BoundType upperBoundType()>();

        goto label8;

     label7:
        $r7 = <com.google.common.collect.BoundType: com.google.common.collect.BoundType OPEN>;

     label8:
        r4 = $r7;

        $r5 = new com.google.common.collect.GeneralRange;

        $r6 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering natural()>();

        $z4 = virtualinvoke r0.<com.google.common.collect.Range: boolean hasLowerBound()>();

        $z5 = virtualinvoke r0.<com.google.common.collect.Range: boolean hasUpperBound()>();

        specialinvoke $r5.<com.google.common.collect.GeneralRange: void <init>(java.util.Comparator,boolean,java.lang.Object,com.google.common.collect.BoundType,boolean,java.lang.Object,com.google.common.collect.BoundType)>($r6, $z4, r1, r2, $z5, r3, r4);

        return $r5;
    }

    static com.google.common.collect.GeneralRange all(java.util.Comparator)
    {
        java.util.Comparator r0;
        com.google.common.collect.GeneralRange $r1;
        com.google.common.collect.BoundType $r2, $r3;

        r0 := @parameter0: java.util.Comparator;

        $r1 = new com.google.common.collect.GeneralRange;

        $r3 = <com.google.common.collect.BoundType: com.google.common.collect.BoundType OPEN>;

        $r2 = <com.google.common.collect.BoundType: com.google.common.collect.BoundType OPEN>;

        specialinvoke $r1.<com.google.common.collect.GeneralRange: void <init>(java.util.Comparator,boolean,java.lang.Object,com.google.common.collect.BoundType,boolean,java.lang.Object,com.google.common.collect.BoundType)>(r0, 0, null, $r3, 0, null, $r2);

        return $r1;
    }

    static com.google.common.collect.GeneralRange downTo(java.util.Comparator, java.lang.Object, com.google.common.collect.BoundType)
    {
        java.util.Comparator r0;
        java.lang.Object r1;
        com.google.common.collect.BoundType r2, $r4;
        com.google.common.collect.GeneralRange $r3;

        r0 := @parameter0: java.util.Comparator;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: com.google.common.collect.BoundType;

        $r3 = new com.google.common.collect.GeneralRange;

        $r4 = <com.google.common.collect.BoundType: com.google.common.collect.BoundType OPEN>;

        specialinvoke $r3.<com.google.common.collect.GeneralRange: void <init>(java.util.Comparator,boolean,java.lang.Object,com.google.common.collect.BoundType,boolean,java.lang.Object,com.google.common.collect.BoundType)>(r0, 1, r1, r2, 0, null, $r4);

        return $r3;
    }

    static com.google.common.collect.GeneralRange upTo(java.util.Comparator, java.lang.Object, com.google.common.collect.BoundType)
    {
        java.util.Comparator r0;
        java.lang.Object r1;
        com.google.common.collect.BoundType r2, $r4;
        com.google.common.collect.GeneralRange $r3;

        r0 := @parameter0: java.util.Comparator;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: com.google.common.collect.BoundType;

        $r3 = new com.google.common.collect.GeneralRange;

        $r4 = <com.google.common.collect.BoundType: com.google.common.collect.BoundType OPEN>;

        specialinvoke $r3.<com.google.common.collect.GeneralRange: void <init>(java.util.Comparator,boolean,java.lang.Object,com.google.common.collect.BoundType,boolean,java.lang.Object,com.google.common.collect.BoundType)>(r0, 0, null, $r4, 1, r1, r2);

        return $r3;
    }

    static com.google.common.collect.GeneralRange range(java.util.Comparator, java.lang.Object, com.google.common.collect.BoundType, java.lang.Object, com.google.common.collect.BoundType)
    {
        java.util.Comparator r0;
        java.lang.Object r1, r3;
        com.google.common.collect.BoundType r2, r4;
        com.google.common.collect.GeneralRange $r5;

        r0 := @parameter0: java.util.Comparator;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: com.google.common.collect.BoundType;

        r3 := @parameter3: java.lang.Object;

        r4 := @parameter4: com.google.common.collect.BoundType;

        $r5 = new com.google.common.collect.GeneralRange;

        specialinvoke $r5.<com.google.common.collect.GeneralRange: void <init>(java.util.Comparator,boolean,java.lang.Object,com.google.common.collect.BoundType,boolean,java.lang.Object,com.google.common.collect.BoundType)>(r0, 1, r1, r2, 1, r3, r4);

        return $r5;
    }

    private void <init>(java.util.Comparator, boolean, java.lang.Object, com.google.common.collect.BoundType, boolean, java.lang.Object, com.google.common.collect.BoundType)
    {
        com.google.common.collect.GeneralRange r0;
        java.util.Comparator r1, $r7;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        java.lang.Object r2, r4, $r6, $r8, $r10;
        com.google.common.collect.BoundType r3, r5, $r9, $r11, $r12, $r14;
        int i0;
        java.lang.Object[] $r13;

        r0 := @this: com.google.common.collect.GeneralRange;

        r1 := @parameter0: java.util.Comparator;

        z0 := @parameter1: boolean;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: com.google.common.collect.BoundType;

        z1 := @parameter4: boolean;

        r4 := @parameter5: java.lang.Object;

        r5 := @parameter6: com.google.common.collect.BoundType;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r6 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r7 = (java.util.Comparator) $r6;

        r0.<com.google.common.collect.GeneralRange: java.util.Comparator comparator> = $r7;

        r0.<com.google.common.collect.GeneralRange: boolean hasLowerBound> = z0;

        r0.<com.google.common.collect.GeneralRange: boolean hasUpperBound> = z1;

        r0.<com.google.common.collect.GeneralRange: java.lang.Object lowerEndpoint> = r2;

        $r8 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        $r9 = (com.google.common.collect.BoundType) $r8;

        r0.<com.google.common.collect.GeneralRange: com.google.common.collect.BoundType lowerBoundType> = $r9;

        r0.<com.google.common.collect.GeneralRange: java.lang.Object upperEndpoint> = r4;

        $r10 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r5);

        $r11 = (com.google.common.collect.BoundType) $r10;

        r0.<com.google.common.collect.GeneralRange: com.google.common.collect.BoundType upperBoundType> = $r11;

        if z0 == 0 goto label1;

        interfaceinvoke r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r2, r2);

     label1:
        if z1 == 0 goto label2;

        interfaceinvoke r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r4, r4);

     label2:
        if z0 == 0 goto label9;

        if z1 == 0 goto label9;

        i0 = interfaceinvoke r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r2, r4);

        if i0 > 0 goto label3;

        $z5 = 1;

        goto label4;

     label3:
        $z5 = 0;

     label4:
        $r13 = newarray (java.lang.Object)[2];

        $r13[0] = r2;

        $r13[1] = r4;

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>($z5, "lowerEndpoint (%s) > upperEndpoint (%s)", $r13);

        if i0 != 0 goto label9;

        $r12 = <com.google.common.collect.BoundType: com.google.common.collect.BoundType OPEN>;

        if r3 == $r12 goto label5;

        $z3 = 1;

        goto label6;

     label5:
        $z3 = 0;

     label6:
        $r14 = <com.google.common.collect.BoundType: com.google.common.collect.BoundType OPEN>;

        if r5 == $r14 goto label7;

        $z4 = 1;

        goto label8;

     label7:
        $z4 = 0;

     label8:
        $z2 = $z3 | $z4;

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($z2);

     label9:
        return;
    }

    java.util.Comparator comparator()
    {
        com.google.common.collect.GeneralRange r0;
        java.util.Comparator $r1;

        r0 := @this: com.google.common.collect.GeneralRange;

        $r1 = r0.<com.google.common.collect.GeneralRange: java.util.Comparator comparator>;

        return $r1;
    }

    boolean hasLowerBound()
    {
        com.google.common.collect.GeneralRange r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.GeneralRange;

        $z0 = r0.<com.google.common.collect.GeneralRange: boolean hasLowerBound>;

        return $z0;
    }

    boolean hasUpperBound()
    {
        com.google.common.collect.GeneralRange r0;
        boolean $z0;

        r0 := @this: com.google.common.collect.GeneralRange;

        $z0 = r0.<com.google.common.collect.GeneralRange: boolean hasUpperBound>;

        return $z0;
    }

    boolean isEmpty()
    {
        com.google.common.collect.GeneralRange r0;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Object $r1, $r2;

        r0 := @this: com.google.common.collect.GeneralRange;

        $z0 = virtualinvoke r0.<com.google.common.collect.GeneralRange: boolean hasUpperBound()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<com.google.common.collect.GeneralRange: java.lang.Object upperEndpoint>;

        $z4 = virtualinvoke r0.<com.google.common.collect.GeneralRange: boolean tooLow(java.lang.Object)>($r2);

        if $z4 != 0 goto label2;

     label1:
        $z1 = virtualinvoke r0.<com.google.common.collect.GeneralRange: boolean hasLowerBound()>();

        if $z1 == 0 goto label3;

        $r1 = r0.<com.google.common.collect.GeneralRange: java.lang.Object lowerEndpoint>;

        $z2 = virtualinvoke r0.<com.google.common.collect.GeneralRange: boolean tooHigh(java.lang.Object)>($r1);

        if $z2 == 0 goto label3;

     label2:
        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;
    }

    boolean tooLow(java.lang.Object)
    {
        com.google.common.collect.GeneralRange r0;
        java.lang.Object r1, r2;
        int i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.Comparator $r3;
        com.google.common.collect.BoundType $r4, $r5;

        r0 := @this: com.google.common.collect.GeneralRange;

        r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<com.google.common.collect.GeneralRange: boolean hasLowerBound()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = r0.<com.google.common.collect.GeneralRange: java.lang.Object lowerEndpoint>;

        $r3 = r0.<com.google.common.collect.GeneralRange: java.util.Comparator comparator>;

        i0 = interfaceinvoke $r3.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r1, r2);

        if i0 >= 0 goto label2;

        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        if i0 != 0 goto label4;

        $z4 = 1;

        goto label5;

     label4:
        $z4 = 0;

     label5:
        $r5 = r0.<com.google.common.collect.GeneralRange: com.google.common.collect.BoundType lowerBoundType>;

        $r4 = <com.google.common.collect.BoundType: com.google.common.collect.BoundType OPEN>;

        if $r5 != $r4 goto label6;

        $z3 = 1;

        goto label7;

     label6:
        $z3 = 0;

     label7:
        $z1 = $z4 & $z3;

        $z2 = $z5 | $z1;

        return $z2;
    }

    boolean tooHigh(java.lang.Object)
    {
        com.google.common.collect.GeneralRange r0;
        java.lang.Object r1, r2;
        int i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.Comparator $r3;
        com.google.common.collect.BoundType $r4, $r5;

        r0 := @this: com.google.common.collect.GeneralRange;

        r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<com.google.common.collect.GeneralRange: boolean hasUpperBound()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r2 = r0.<com.google.common.collect.GeneralRange: java.lang.Object upperEndpoint>;

        $r3 = r0.<com.google.common.collect.GeneralRange: java.util.Comparator comparator>;

        i0 = interfaceinvoke $r3.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r1, r2);

        if i0 <= 0 goto label2;

        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        if i0 != 0 goto label4;

        $z4 = 1;

        goto label5;

     label4:
        $z4 = 0;

     label5:
        $r5 = r0.<com.google.common.collect.GeneralRange: com.google.common.collect.BoundType upperBoundType>;

        $r4 = <com.google.common.collect.BoundType: com.google.common.collect.BoundType OPEN>;

        if $r5 != $r4 goto label6;

        $z3 = 1;

        goto label7;

     label6:
        $z3 = 0;

     label7:
        $z1 = $z4 & $z3;

        $z2 = $z5 | $z1;

        return $z2;
    }

    boolean contains(java.lang.Object)
    {
        com.google.common.collect.GeneralRange r0;
        java.lang.Object r1;
        boolean $z0, $z1, $z2;

        r0 := @this: com.google.common.collect.GeneralRange;

        r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<com.google.common.collect.GeneralRange: boolean tooLow(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<com.google.common.collect.GeneralRange: boolean tooHigh(java.lang.Object)>(r1);

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    com.google.common.collect.GeneralRange intersect(com.google.common.collect.GeneralRange)
    {
        com.google.common.collect.GeneralRange r0, r1, $r9;
        boolean z0, $z1, $z2, $z3, $z4, $z5, z6;
        java.lang.Object r2, r4, $r13, $r16, $r18, $r21;
        com.google.common.collect.BoundType r3, r5, $r12, $r14, $r17, $r19, $r22, $r23;
        int i0, i1, i2;
        java.util.Comparator $r7, $r8, $r10, $r11, $r15, $r20;

        r0 := @this: com.google.common.collect.GeneralRange;

        r1 := @parameter0: com.google.common.collect.GeneralRange;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r8 = r0.<com.google.common.collect.GeneralRange: java.util.Comparator comparator>;

        $r7 = r1.<com.google.common.collect.GeneralRange: java.util.Comparator comparator>;

        $z1 = interfaceinvoke $r8.<java.util.Comparator: boolean equals(java.lang.Object)>($r7);

        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($z1);

        z0 = r0.<com.google.common.collect.GeneralRange: boolean hasLowerBound>;

        r2 = r0.<com.google.common.collect.GeneralRange: java.lang.Object lowerEndpoint>;

        r3 = r0.<com.google.common.collect.GeneralRange: com.google.common.collect.BoundType lowerBoundType>;

        $z2 = virtualinvoke r0.<com.google.common.collect.GeneralRange: boolean hasLowerBound()>();

        if $z2 != 0 goto label1;

        z0 = r1.<com.google.common.collect.GeneralRange: boolean hasLowerBound>;

        r2 = r1.<com.google.common.collect.GeneralRange: java.lang.Object lowerEndpoint>;

        r3 = r1.<com.google.common.collect.GeneralRange: com.google.common.collect.BoundType lowerBoundType>;

        goto label3;

     label1:
        $z3 = virtualinvoke r1.<com.google.common.collect.GeneralRange: boolean hasLowerBound()>();

        if $z3 == 0 goto label3;

        $r20 = r0.<com.google.common.collect.GeneralRange: java.util.Comparator comparator>;

        $r21 = r0.<com.google.common.collect.GeneralRange: java.lang.Object lowerEndpoint>;

        $r18 = r1.<com.google.common.collect.GeneralRange: java.lang.Object lowerEndpoint>;

        i0 = interfaceinvoke $r20.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r21, $r18);

        if i0 < 0 goto label2;

        if i0 != 0 goto label3;

        $r22 = r1.<com.google.common.collect.GeneralRange: com.google.common.collect.BoundType lowerBoundType>;

        $r23 = <com.google.common.collect.BoundType: com.google.common.collect.BoundType OPEN>;

        if $r22 != $r23 goto label3;

     label2:
        r2 = r1.<com.google.common.collect.GeneralRange: java.lang.Object lowerEndpoint>;

        r3 = r1.<com.google.common.collect.GeneralRange: com.google.common.collect.BoundType lowerBoundType>;

     label3:
        z6 = r0.<com.google.common.collect.GeneralRange: boolean hasUpperBound>;

        r4 = r0.<com.google.common.collect.GeneralRange: java.lang.Object upperEndpoint>;

        r5 = r0.<com.google.common.collect.GeneralRange: com.google.common.collect.BoundType upperBoundType>;

        $z4 = virtualinvoke r0.<com.google.common.collect.GeneralRange: boolean hasUpperBound()>();

        if $z4 != 0 goto label4;

        z6 = r1.<com.google.common.collect.GeneralRange: boolean hasUpperBound>;

        r4 = r1.<com.google.common.collect.GeneralRange: java.lang.Object upperEndpoint>;

        r5 = r1.<com.google.common.collect.GeneralRange: com.google.common.collect.BoundType upperBoundType>;

        goto label6;

     label4:
        $z5 = virtualinvoke r1.<com.google.common.collect.GeneralRange: boolean hasUpperBound()>();

        if $z5 == 0 goto label6;

        $r15 = r0.<com.google.common.collect.GeneralRange: java.util.Comparator comparator>;

        $r16 = r0.<com.google.common.collect.GeneralRange: java.lang.Object upperEndpoint>;

        $r13 = r1.<com.google.common.collect.GeneralRange: java.lang.Object upperEndpoint>;

        i1 = interfaceinvoke $r15.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>($r16, $r13);

        if i1 > 0 goto label5;

        if i1 != 0 goto label6;

        $r19 = r1.<com.google.common.collect.GeneralRange: com.google.common.collect.BoundType upperBoundType>;

        $r17 = <com.google.common.collect.BoundType: com.google.common.collect.BoundType OPEN>;

        if $r19 != $r17 goto label6;

     label5:
        r4 = r1.<com.google.common.collect.GeneralRange: java.lang.Object upperEndpoint>;

        r5 = r1.<com.google.common.collect.GeneralRange: com.google.common.collect.BoundType upperBoundType>;

     label6:
        if z0 == 0 goto label8;

        if z6 == 0 goto label8;

        $r10 = r0.<com.google.common.collect.GeneralRange: java.util.Comparator comparator>;

        i2 = interfaceinvoke $r10.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r2, r4);

        if i2 > 0 goto label7;

        if i2 != 0 goto label8;

        $r12 = <com.google.common.collect.BoundType: com.google.common.collect.BoundType OPEN>;

        if r3 != $r12 goto label8;

        $r14 = <com.google.common.collect.BoundType: com.google.common.collect.BoundType OPEN>;

        if r5 != $r14 goto label8;

     label7:
        r2 = r4;

        r3 = <com.google.common.collect.BoundType: com.google.common.collect.BoundType OPEN>;

        r5 = <com.google.common.collect.BoundType: com.google.common.collect.BoundType CLOSED>;

     label8:
        $r9 = new com.google.common.collect.GeneralRange;

        $r11 = r0.<com.google.common.collect.GeneralRange: java.util.Comparator comparator>;

        specialinvoke $r9.<com.google.common.collect.GeneralRange: void <init>(java.util.Comparator,boolean,java.lang.Object,com.google.common.collect.BoundType,boolean,java.lang.Object,com.google.common.collect.BoundType)>($r11, z0, r2, r3, z6, r4, r5);

        return $r9;
    }

    public boolean equals(java.lang.Object)
    {
        com.google.common.collect.GeneralRange r0, r2;
        java.lang.Object r1, $r9, $r10, $r11, $r12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.util.Comparator $r3, $r4;
        com.google.common.collect.BoundType $r5, $r6, $r7, $r8;

        r0 := @this: com.google.common.collect.GeneralRange;

        r1 := @parameter0: java.lang.Object;

        $z0 = r1 instanceof com.google.common.collect.GeneralRange;

        if $z0 == 0 goto label3;

        r2 = (com.google.common.collect.GeneralRange) r1;

        $r4 = r0.<com.google.common.collect.GeneralRange: java.util.Comparator comparator>;

        $r3 = r2.<com.google.common.collect.GeneralRange: java.util.Comparator comparator>;

        $z1 = interfaceinvoke $r4.<java.util.Comparator: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label1;

        $z3 = r0.<com.google.common.collect.GeneralRange: boolean hasLowerBound>;

        $z2 = r2.<com.google.common.collect.GeneralRange: boolean hasLowerBound>;

        if $z3 != $z2 goto label1;

        $z5 = r0.<com.google.common.collect.GeneralRange: boolean hasUpperBound>;

        $z4 = r2.<com.google.common.collect.GeneralRange: boolean hasUpperBound>;

        if $z5 != $z4 goto label1;

        $r6 = r0.<com.google.common.collect.GeneralRange: com.google.common.collect.BoundType lowerBoundType>;

        $r5 = r2.<com.google.common.collect.GeneralRange: com.google.common.collect.BoundType lowerBoundType>;

        $z6 = virtualinvoke $r6.<com.google.common.collect.BoundType: boolean equals(java.lang.Object)>($r5);

        if $z6 == 0 goto label1;

        $r8 = r0.<com.google.common.collect.GeneralRange: com.google.common.collect.BoundType upperBoundType>;

        $r7 = r2.<com.google.common.collect.GeneralRange: com.google.common.collect.BoundType upperBoundType>;

        $z7 = virtualinvoke $r8.<com.google.common.collect.BoundType: boolean equals(java.lang.Object)>($r7);

        if $z7 == 0 goto label1;

        $r10 = r0.<com.google.common.collect.GeneralRange: java.lang.Object lowerEndpoint>;

        $r9 = r2.<com.google.common.collect.GeneralRange: java.lang.Object lowerEndpoint>;

        $z8 = staticinvoke <com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r10, $r9);

        if $z8 == 0 goto label1;

        $r11 = r0.<com.google.common.collect.GeneralRange: java.lang.Object upperEndpoint>;

        $r12 = r2.<com.google.common.collect.GeneralRange: java.lang.Object upperEndpoint>;

        $z10 = staticinvoke <com.google.common.base.Objects: boolean equal(java.lang.Object,java.lang.Object)>($r11, $r12);

        if $z10 == 0 goto label1;

        $z9 = 1;

        goto label2;

     label1:
        $z9 = 0;

     label2:
        return $z9;

     label3:
        return 0;
    }

    public int hashCode()
    {
        com.google.common.collect.GeneralRange r0;
        java.lang.Object[] $r1;
        java.util.Comparator $r2;
        java.lang.Object $r3, $r5;
        com.google.common.collect.BoundType $r4, $r6;
        int $i0;

        r0 := @this: com.google.common.collect.GeneralRange;

        $r1 = newarray (java.lang.Object)[5];

        $r2 = r0.<com.google.common.collect.GeneralRange: java.util.Comparator comparator>;

        $r1[0] = $r2;

        $r3 = r0.<com.google.common.collect.GeneralRange: java.lang.Object lowerEndpoint>;

        $r1[1] = $r3;

        $r4 = r0.<com.google.common.collect.GeneralRange: com.google.common.collect.BoundType lowerBoundType>;

        $r1[2] = $r4;

        $r5 = r0.<com.google.common.collect.GeneralRange: java.lang.Object upperEndpoint>;

        $r1[3] = $r5;

        $r6 = r0.<com.google.common.collect.GeneralRange: com.google.common.collect.BoundType upperBoundType>;

        $r1[4] = $r6;

        $i0 = staticinvoke <com.google.common.base.Objects: int hashCode(java.lang.Object[])>($r1);

        return $i0;
    }

    public com.google.common.collect.GeneralRange reverse()
    {
        com.google.common.collect.GeneralRange r0, r1, $r2, r10;
        java.util.Comparator $r3;
        com.google.common.collect.Ordering $r4, $r5;
        com.google.common.collect.BoundType $r6, $r8;
        java.lang.Object $r7, $r9;
        boolean $z0, $z1;

        r0 := @this: com.google.common.collect.GeneralRange;

        r1 = r0.<com.google.common.collect.GeneralRange: com.google.common.collect.GeneralRange reverse>;

        if r1 != null goto label1;

        $r2 = new com.google.common.collect.GeneralRange;

        $r3 = r0.<com.google.common.collect.GeneralRange: java.util.Comparator comparator>;

        $r4 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering 'from'(java.util.Comparator)>($r3);

        $r5 = virtualinvoke $r4.<com.google.common.collect.Ordering: com.google.common.collect.Ordering reverse()>();

        $z1 = r0.<com.google.common.collect.GeneralRange: boolean hasUpperBound>;

        $r9 = r0.<com.google.common.collect.GeneralRange: java.lang.Object upperEndpoint>;

        $r8 = r0.<com.google.common.collect.GeneralRange: com.google.common.collect.BoundType upperBoundType>;

        $z0 = r0.<com.google.common.collect.GeneralRange: boolean hasLowerBound>;

        $r7 = r0.<com.google.common.collect.GeneralRange: java.lang.Object lowerEndpoint>;

        $r6 = r0.<com.google.common.collect.GeneralRange: com.google.common.collect.BoundType lowerBoundType>;

        specialinvoke $r2.<com.google.common.collect.GeneralRange: void <init>(java.util.Comparator,boolean,java.lang.Object,com.google.common.collect.BoundType,boolean,java.lang.Object,com.google.common.collect.BoundType)>($r5, $z1, $r9, $r8, $z0, $r7, $r6);

        r10 = $r2;

        r10.<com.google.common.collect.GeneralRange: com.google.common.collect.GeneralRange reverse> = r0;

        r0.<com.google.common.collect.GeneralRange: com.google.common.collect.GeneralRange reverse> = r10;

        return r10;

     label1:
        return r1;
    }

    public java.lang.String toString()
    {
        com.google.common.collect.GeneralRange r0;
        java.lang.StringBuilder r1, $r2, $r4;
        java.util.Comparator $r3;
        com.google.common.collect.BoundType $r6, $r13;
        int[] $r7, $r12;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1;
        java.lang.String $r14;
        java.lang.Object $r16, $r18;

        r0 := @this: com.google.common.collect.GeneralRange;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        r1 = $r2;

        $r3 = r0.<com.google.common.collect.GeneralRange: java.util.Comparator comparator>;

        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r7 = <com.google.common.collect.GeneralRange$1: int[] $SwitchMap$com$google$common$collect$BoundType>;

        $r6 = r0.<com.google.common.collect.GeneralRange: com.google.common.collect.BoundType lowerBoundType>;

        $i0 = virtualinvoke $r6.<com.google.common.collect.BoundType: int ordinal()>();

        $i1 = $r7[$i0];

        lookupswitch($i1)
        {
            case 1: goto label01;
            case 2: goto label02;
            default: goto label03;
        };

     label01:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        goto label03;

     label02:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);

     label03:
        $z0 = virtualinvoke r0.<com.google.common.collect.GeneralRange: boolean hasLowerBound()>();

        if $z0 == 0 goto label04;

        $r18 = r0.<com.google.common.collect.GeneralRange: java.lang.Object lowerEndpoint>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);

        goto label05;

     label04:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-\u221e");

     label05:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);

        $z1 = virtualinvoke r0.<com.google.common.collect.GeneralRange: boolean hasUpperBound()>();

        if $z1 == 0 goto label06;

        $r16 = r0.<com.google.common.collect.GeneralRange: java.lang.Object upperEndpoint>;

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        goto label07;

     label06:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\u221e");

     label07:
        $r12 = <com.google.common.collect.GeneralRange$1: int[] $SwitchMap$com$google$common$collect$BoundType>;

        $r13 = r0.<com.google.common.collect.GeneralRange: com.google.common.collect.BoundType upperBoundType>;

        $i3 = virtualinvoke $r13.<com.google.common.collect.BoundType: int ordinal()>();

        $i2 = $r12[$i3];

        lookupswitch($i2)
        {
            case 1: goto label08;
            case 2: goto label09;
            default: goto label10;
        };

     label08:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        goto label10;

     label09:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

     label10:
        $r14 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;
    }
}
