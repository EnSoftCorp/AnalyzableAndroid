final class com.google.common.collect.BstCountBasedBalancePolicies$2 extends java.lang.Object implements com.google.common.collect.BstBalancePolicy
{
    final com.google.common.collect.BstAggregate val$countAggregate;

    void <init>(com.google.common.collect.BstAggregate)
    {
        com.google.common.collect.BstCountBasedBalancePolicies$2 r0;
        com.google.common.collect.BstAggregate r1;

        r0 := @this: com.google.common.collect.BstCountBasedBalancePolicies$2;

        r1 := @parameter0: com.google.common.collect.BstAggregate;

        r0.<com.google.common.collect.BstCountBasedBalancePolicies$2: com.google.common.collect.BstAggregate val$countAggregate> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public com.google.common.collect.BstNode balance(com.google.common.collect.BstNodeFactory, com.google.common.collect.BstNode, com.google.common.collect.BstNode, com.google.common.collect.BstNode)
    {
        com.google.common.collect.BstCountBasedBalancePolicies$2 r0;
        com.google.common.collect.BstNodeFactory r1;
        com.google.common.collect.BstNode r2, r3, r4, $r7, $r8, $r9;
        long l0, l1, $l2, $l5, $l7;
        com.google.common.collect.BstAggregate $r5, $r6;
        byte $b3, $b4, $b6;

        r0 := @this: com.google.common.collect.BstCountBasedBalancePolicies$2;

        r1 := @parameter0: com.google.common.collect.BstNodeFactory;

        r2 := @parameter1: com.google.common.collect.BstNode;

        r3 := @parameter2: com.google.common.collect.BstNode;

        r4 := @parameter3: com.google.common.collect.BstNode;

        $r5 = r0.<com.google.common.collect.BstCountBasedBalancePolicies$2: com.google.common.collect.BstAggregate val$countAggregate>;

        l0 = interfaceinvoke $r5.<com.google.common.collect.BstAggregate: long treeValue(com.google.common.collect.BstNode)>(r3);

        $r6 = r0.<com.google.common.collect.BstCountBasedBalancePolicies$2: com.google.common.collect.BstAggregate val$countAggregate>;

        l1 = interfaceinvoke $r6.<com.google.common.collect.BstAggregate: long treeValue(com.google.common.collect.BstNode)>(r4);

        $l2 = l0 + l1;

        $b3 = $l2 cmp 1L;

        if $b3 <= 0 goto label2;

        $l5 = 4L * l0;

        $b4 = l1 cmp $l5;

        if $b4 < 0 goto label1;

        $r8 = specialinvoke r0.<com.google.common.collect.BstCountBasedBalancePolicies$2: com.google.common.collect.BstNode rotateL(com.google.common.collect.BstNodeFactory,com.google.common.collect.BstNode,com.google.common.collect.BstNode,com.google.common.collect.BstNode)>(r1, r2, r3, r4);

        return $r8;

     label1:
        $l7 = 4L * l1;

        $b6 = l0 cmp $l7;

        if $b6 < 0 goto label2;

        $r9 = specialinvoke r0.<com.google.common.collect.BstCountBasedBalancePolicies$2: com.google.common.collect.BstNode rotateR(com.google.common.collect.BstNodeFactory,com.google.common.collect.BstNode,com.google.common.collect.BstNode,com.google.common.collect.BstNode)>(r1, r2, r3, r4);

        return $r9;

     label2:
        $r7 = virtualinvoke r1.<com.google.common.collect.BstNodeFactory: com.google.common.collect.BstNode createNode(com.google.common.collect.BstNode,com.google.common.collect.BstNode,com.google.common.collect.BstNode)>(r2, r3, r4);

        return $r7;
    }

    private com.google.common.collect.BstNode rotateL(com.google.common.collect.BstNodeFactory, com.google.common.collect.BstNode, com.google.common.collect.BstNode, com.google.common.collect.BstNode)
    {
        com.google.common.collect.BstCountBasedBalancePolicies$2 r0;
        com.google.common.collect.BstNodeFactory r1;
        com.google.common.collect.BstNode r2, r3, r4, r5, r6, $r12;
        com.google.common.collect.BstSide $r8, $r9;
        com.google.common.collect.BstAggregate $r10, $r11;
        long $l0, $l1, $l2;
        byte $b3;

        r0 := @this: com.google.common.collect.BstCountBasedBalancePolicies$2;

        r1 := @parameter0: com.google.common.collect.BstNodeFactory;

        r2 := @parameter1: com.google.common.collect.BstNode;

        r3 := @parameter2: com.google.common.collect.BstNode;

        r4 := @parameter3: com.google.common.collect.BstNode;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r4);

        $r8 = <com.google.common.collect.BstSide: com.google.common.collect.BstSide LEFT>;

        r5 = virtualinvoke r4.<com.google.common.collect.BstNode: com.google.common.collect.BstNode childOrNull(com.google.common.collect.BstSide)>($r8);

        $r9 = <com.google.common.collect.BstSide: com.google.common.collect.BstSide RIGHT>;

        r6 = virtualinvoke r4.<com.google.common.collect.BstNode: com.google.common.collect.BstNode childOrNull(com.google.common.collect.BstSide)>($r9);

        $r10 = r0.<com.google.common.collect.BstCountBasedBalancePolicies$2: com.google.common.collect.BstAggregate val$countAggregate>;

        $l0 = interfaceinvoke $r10.<com.google.common.collect.BstAggregate: long treeValue(com.google.common.collect.BstNode)>(r5);

        $r11 = r0.<com.google.common.collect.BstCountBasedBalancePolicies$2: com.google.common.collect.BstAggregate val$countAggregate>;

        $l2 = interfaceinvoke $r11.<com.google.common.collect.BstAggregate: long treeValue(com.google.common.collect.BstNode)>(r6);

        $l1 = 2L * $l2;

        $b3 = $l0 cmp $l1;

        if $b3 < 0 goto label1;

        r4 = specialinvoke r0.<com.google.common.collect.BstCountBasedBalancePolicies$2: com.google.common.collect.BstNode singleR(com.google.common.collect.BstNodeFactory,com.google.common.collect.BstNode,com.google.common.collect.BstNode,com.google.common.collect.BstNode)>(r1, r4, r5, r6);

     label1:
        $r12 = specialinvoke r0.<com.google.common.collect.BstCountBasedBalancePolicies$2: com.google.common.collect.BstNode singleL(com.google.common.collect.BstNodeFactory,com.google.common.collect.BstNode,com.google.common.collect.BstNode,com.google.common.collect.BstNode)>(r1, r2, r3, r4);

        return $r12;
    }

    private com.google.common.collect.BstNode rotateR(com.google.common.collect.BstNodeFactory, com.google.common.collect.BstNode, com.google.common.collect.BstNode, com.google.common.collect.BstNode)
    {
        com.google.common.collect.BstCountBasedBalancePolicies$2 r0;
        com.google.common.collect.BstNodeFactory r1;
        com.google.common.collect.BstNode r2, r3, r4, r5, r6, $r12;
        com.google.common.collect.BstSide $r8, $r9;
        com.google.common.collect.BstAggregate $r10, $r11;
        long $l0, $l1, $l2;
        byte $b3;

        r0 := @this: com.google.common.collect.BstCountBasedBalancePolicies$2;

        r1 := @parameter0: com.google.common.collect.BstNodeFactory;

        r2 := @parameter1: com.google.common.collect.BstNode;

        r3 := @parameter2: com.google.common.collect.BstNode;

        r4 := @parameter3: com.google.common.collect.BstNode;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        $r8 = <com.google.common.collect.BstSide: com.google.common.collect.BstSide RIGHT>;

        r5 = virtualinvoke r3.<com.google.common.collect.BstNode: com.google.common.collect.BstNode childOrNull(com.google.common.collect.BstSide)>($r8);

        $r9 = <com.google.common.collect.BstSide: com.google.common.collect.BstSide LEFT>;

        r6 = virtualinvoke r3.<com.google.common.collect.BstNode: com.google.common.collect.BstNode childOrNull(com.google.common.collect.BstSide)>($r9);

        $r10 = r0.<com.google.common.collect.BstCountBasedBalancePolicies$2: com.google.common.collect.BstAggregate val$countAggregate>;

        $l0 = interfaceinvoke $r10.<com.google.common.collect.BstAggregate: long treeValue(com.google.common.collect.BstNode)>(r5);

        $r11 = r0.<com.google.common.collect.BstCountBasedBalancePolicies$2: com.google.common.collect.BstAggregate val$countAggregate>;

        $l2 = interfaceinvoke $r11.<com.google.common.collect.BstAggregate: long treeValue(com.google.common.collect.BstNode)>(r6);

        $l1 = 2L * $l2;

        $b3 = $l0 cmp $l1;

        if $b3 < 0 goto label1;

        r3 = specialinvoke r0.<com.google.common.collect.BstCountBasedBalancePolicies$2: com.google.common.collect.BstNode singleL(com.google.common.collect.BstNodeFactory,com.google.common.collect.BstNode,com.google.common.collect.BstNode,com.google.common.collect.BstNode)>(r1, r3, r6, r5);

     label1:
        $r12 = specialinvoke r0.<com.google.common.collect.BstCountBasedBalancePolicies$2: com.google.common.collect.BstNode singleR(com.google.common.collect.BstNodeFactory,com.google.common.collect.BstNode,com.google.common.collect.BstNode,com.google.common.collect.BstNode)>(r1, r2, r3, r4);

        return $r12;
    }

    private com.google.common.collect.BstNode singleL(com.google.common.collect.BstNodeFactory, com.google.common.collect.BstNode, com.google.common.collect.BstNode, com.google.common.collect.BstNode)
    {
        com.google.common.collect.BstCountBasedBalancePolicies$2 r0;
        com.google.common.collect.BstNodeFactory r1;
        com.google.common.collect.BstNode r2, r3, r4, $r7, $r8, $r10, $r11;
        com.google.common.collect.BstSide $r6, $r9;

        r0 := @this: com.google.common.collect.BstCountBasedBalancePolicies$2;

        r1 := @parameter0: com.google.common.collect.BstNodeFactory;

        r2 := @parameter1: com.google.common.collect.BstNode;

        r3 := @parameter2: com.google.common.collect.BstNode;

        r4 := @parameter3: com.google.common.collect.BstNode;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r4);

        $r6 = <com.google.common.collect.BstSide: com.google.common.collect.BstSide LEFT>;

        $r7 = virtualinvoke r4.<com.google.common.collect.BstNode: com.google.common.collect.BstNode childOrNull(com.google.common.collect.BstSide)>($r6);

        $r8 = virtualinvoke r1.<com.google.common.collect.BstNodeFactory: com.google.common.collect.BstNode createNode(com.google.common.collect.BstNode,com.google.common.collect.BstNode,com.google.common.collect.BstNode)>(r2, r3, $r7);

        $r9 = <com.google.common.collect.BstSide: com.google.common.collect.BstSide RIGHT>;

        $r10 = virtualinvoke r4.<com.google.common.collect.BstNode: com.google.common.collect.BstNode childOrNull(com.google.common.collect.BstSide)>($r9);

        $r11 = virtualinvoke r1.<com.google.common.collect.BstNodeFactory: com.google.common.collect.BstNode createNode(com.google.common.collect.BstNode,com.google.common.collect.BstNode,com.google.common.collect.BstNode)>(r4, $r8, $r10);

        return $r11;
    }

    private com.google.common.collect.BstNode singleR(com.google.common.collect.BstNodeFactory, com.google.common.collect.BstNode, com.google.common.collect.BstNode, com.google.common.collect.BstNode)
    {
        com.google.common.collect.BstCountBasedBalancePolicies$2 r0;
        com.google.common.collect.BstNodeFactory r1;
        com.google.common.collect.BstNode r2, r3, r4, $r7, $r9, $r10, $r11;
        com.google.common.collect.BstSide $r6, $r8;

        r0 := @this: com.google.common.collect.BstCountBasedBalancePolicies$2;

        r1 := @parameter0: com.google.common.collect.BstNodeFactory;

        r2 := @parameter1: com.google.common.collect.BstNode;

        r3 := @parameter2: com.google.common.collect.BstNode;

        r4 := @parameter3: com.google.common.collect.BstNode;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r3);

        $r6 = <com.google.common.collect.BstSide: com.google.common.collect.BstSide LEFT>;

        $r7 = virtualinvoke r3.<com.google.common.collect.BstNode: com.google.common.collect.BstNode childOrNull(com.google.common.collect.BstSide)>($r6);

        $r8 = <com.google.common.collect.BstSide: com.google.common.collect.BstSide RIGHT>;

        $r9 = virtualinvoke r3.<com.google.common.collect.BstNode: com.google.common.collect.BstNode childOrNull(com.google.common.collect.BstSide)>($r8);

        $r10 = virtualinvoke r1.<com.google.common.collect.BstNodeFactory: com.google.common.collect.BstNode createNode(com.google.common.collect.BstNode,com.google.common.collect.BstNode,com.google.common.collect.BstNode)>(r2, $r9, r4);

        $r11 = virtualinvoke r1.<com.google.common.collect.BstNodeFactory: com.google.common.collect.BstNode createNode(com.google.common.collect.BstNode,com.google.common.collect.BstNode,com.google.common.collect.BstNode)>(r3, $r7, $r10);

        return $r11;
    }

    public com.google.common.collect.BstNode combine(com.google.common.collect.BstNodeFactory, com.google.common.collect.BstNode, com.google.common.collect.BstNode)
    {
        com.google.common.collect.BstCountBasedBalancePolicies$2 r0;
        com.google.common.collect.BstNodeFactory r1;
        com.google.common.collect.BstNode r2, r3, r4, $r8;
        com.google.common.collect.BstMutationResult r5, r9;
        com.google.common.collect.BstAggregate $r6, $r7;
        long $l0, $l1;
        byte $b2;

        r0 := @this: com.google.common.collect.BstCountBasedBalancePolicies$2;

        r1 := @parameter0: com.google.common.collect.BstNodeFactory;

        r2 := @parameter1: com.google.common.collect.BstNode;

        r3 := @parameter2: com.google.common.collect.BstNode;

        if r2 != null goto label1;

        return r3;

     label1:
        if r3 != null goto label2;

        return r2;

     label2:
        $r6 = r0.<com.google.common.collect.BstCountBasedBalancePolicies$2: com.google.common.collect.BstAggregate val$countAggregate>;

        $l0 = interfaceinvoke $r6.<com.google.common.collect.BstAggregate: long treeValue(com.google.common.collect.BstNode)>(r2);

        $r7 = r0.<com.google.common.collect.BstCountBasedBalancePolicies$2: com.google.common.collect.BstAggregate val$countAggregate>;

        $l1 = interfaceinvoke $r7.<com.google.common.collect.BstAggregate: long treeValue(com.google.common.collect.BstNode)>(r3);

        $b2 = $l0 cmp $l1;

        if $b2 <= 0 goto label3;

        r5 = staticinvoke <com.google.common.collect.BstOperations: com.google.common.collect.BstMutationResult extractMax(com.google.common.collect.BstNode,com.google.common.collect.BstNodeFactory,com.google.common.collect.BstBalancePolicy)>(r2, r1, r0);

        r4 = virtualinvoke r5.<com.google.common.collect.BstMutationResult: com.google.common.collect.BstNode getOriginalTarget()>();

        r2 = virtualinvoke r5.<com.google.common.collect.BstMutationResult: com.google.common.collect.BstNode getChangedRoot()>();

        goto label4;

     label3:
        r9 = staticinvoke <com.google.common.collect.BstOperations: com.google.common.collect.BstMutationResult extractMin(com.google.common.collect.BstNode,com.google.common.collect.BstNodeFactory,com.google.common.collect.BstBalancePolicy)>(r3, r1, r0);

        r4 = virtualinvoke r9.<com.google.common.collect.BstMutationResult: com.google.common.collect.BstNode getOriginalTarget()>();

        r3 = virtualinvoke r9.<com.google.common.collect.BstMutationResult: com.google.common.collect.BstNode getChangedRoot()>();

     label4:
        $r8 = virtualinvoke r1.<com.google.common.collect.BstNodeFactory: com.google.common.collect.BstNode createNode(com.google.common.collect.BstNode,com.google.common.collect.BstNode,com.google.common.collect.BstNode)>(r4, r2, r3);

        return $r8;
    }
}
