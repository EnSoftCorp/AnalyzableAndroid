public class com.android.documentsui.model.DurableUtils extends java.lang.Object
{

    public void <init>()
    {
        com.android.documentsui.model.DurableUtils r0;

        r0 := @this: com.android.documentsui.model.DurableUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static byte[] writeToArray(com.android.documentsui.model.Durable) throws java.io.IOException
    {
        com.android.documentsui.model.Durable r0;
        java.io.ByteArrayOutputStream r1, $r2;
        java.io.DataOutputStream $r3;
        byte[] $r4;

        r0 := @parameter0: com.android.documentsui.model.Durable;

        $r2 = new java.io.ByteArrayOutputStream;

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>();

        r1 = $r2;

        $r3 = new java.io.DataOutputStream;

        specialinvoke $r3.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r1);

        interfaceinvoke r0.<com.android.documentsui.model.Durable: void write(java.io.DataOutputStream)>($r3);

        $r4 = virtualinvoke r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r4;
    }

    public static com.android.documentsui.model.Durable readFromArray(byte[], com.android.documentsui.model.Durable) throws java.io.IOException
    {
        byte[] r0;
        com.android.documentsui.model.Durable r1;
        java.io.ByteArrayInputStream r2, $r4;
        java.io.IOException r3, $r6, $r7;
        java.io.DataInputStream $r5;

        r0 := @parameter0: byte[];

        r1 := @parameter1: com.android.documentsui.model.Durable;

        if r0 != null goto label1;

        $r6 = new java.io.IOException;

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>("Missing data");

        throw $r6;

     label1:
        $r4 = new java.io.ByteArrayInputStream;

        specialinvoke $r4.<java.io.ByteArrayInputStream: void <init>(byte[])>(r0);

        r2 = $r4;

        interfaceinvoke r1.<com.android.documentsui.model.Durable: void reset()>();

     label2:
        $r5 = new java.io.DataInputStream;

        specialinvoke $r5.<java.io.DataInputStream: void <init>(java.io.InputStream)>(r2);

        interfaceinvoke r1.<com.android.documentsui.model.Durable: void read(java.io.DataInputStream)>($r5);

     label3:
        goto label5;

     label4:
        $r7 := @caughtexception;

        r3 = $r7;

        interfaceinvoke r1.<com.android.documentsui.model.Durable: void reset()>();

        throw r3;

     label5:
        return r1;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public static byte[] writeToArrayOrNull(com.android.documentsui.model.Durable)
    {
        com.android.documentsui.model.Durable r0;
        java.io.IOException r1, $r3;
        byte[] $r2;

        r0 := @parameter0: com.android.documentsui.model.Durable;

     label1:
        $r2 = staticinvoke <com.android.documentsui.model.DurableUtils: byte[] writeToArray(com.android.documentsui.model.Durable)>(r0);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        r1 = $r3;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("Documents", "Failed to write", r1);

        return null;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static com.android.documentsui.model.Durable readFromArrayOrNull(byte[], com.android.documentsui.model.Durable)
    {
        byte[] r0;
        com.android.documentsui.model.Durable r1, $r3;
        java.io.IOException r2, $r4;

        r0 := @parameter0: byte[];

        r1 := @parameter1: com.android.documentsui.model.Durable;

     label1:
        $r3 = staticinvoke <com.android.documentsui.model.DurableUtils: com.android.documentsui.model.Durable readFromArray(byte[],com.android.documentsui.model.Durable)>(r0, r1);

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("Documents", "Failed to read", r2);

        return null;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static void writeToParcel(android.os.Parcel, com.android.documentsui.model.Durable)
    {
        android.os.Parcel r0;
        com.android.documentsui.model.Durable r1;
        java.io.IOException r2, $r4;
        byte[] $r3;
        android.os.BadParcelableException $r5;

        r0 := @parameter0: android.os.Parcel;

        r1 := @parameter1: com.android.documentsui.model.Durable;

     label1:
        $r3 = staticinvoke <com.android.documentsui.model.DurableUtils: byte[] writeToArray(com.android.documentsui.model.Durable)>(r1);

        virtualinvoke r0.<android.os.Parcel: void writeByteArray(byte[])>($r3);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r2 = $r4;

        $r5 = new android.os.BadParcelableException;

        specialinvoke $r5.<android.os.BadParcelableException: void <init>(java.lang.Exception)>(r2);

        throw $r5;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static com.android.documentsui.model.Durable readFromParcel(android.os.Parcel, com.android.documentsui.model.Durable)
    {
        android.os.Parcel r0;
        com.android.documentsui.model.Durable r1, $r4;
        java.io.IOException r2, $r5;
        byte[] $r3;
        android.os.BadParcelableException $r6;

        r0 := @parameter0: android.os.Parcel;

        r1 := @parameter1: com.android.documentsui.model.Durable;

     label1:
        $r3 = virtualinvoke r0.<android.os.Parcel: byte[] createByteArray()>();

        $r4 = staticinvoke <com.android.documentsui.model.DurableUtils: com.android.documentsui.model.Durable readFromArray(byte[],com.android.documentsui.model.Durable)>($r3, r1);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        r2 = $r5;

        $r6 = new android.os.BadParcelableException;

        specialinvoke $r6.<android.os.BadParcelableException: void <init>(java.lang.Exception)>(r2);

        throw $r6;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static void writeNullableString(java.io.DataOutputStream, java.lang.String) throws java.io.IOException
    {
        java.io.DataOutputStream r0;
        java.lang.String r1;

        r0 := @parameter0: java.io.DataOutputStream;

        r1 := @parameter1: java.lang.String;

        if r1 == null goto label1;

        virtualinvoke r0.<java.io.DataOutputStream: void write(int)>(1);

        virtualinvoke r0.<java.io.DataOutputStream: void writeUTF(java.lang.String)>(r1);

        goto label2;

     label1:
        virtualinvoke r0.<java.io.DataOutputStream: void write(int)>(0);

     label2:
        return;
    }

    public static java.lang.String readNullableString(java.io.DataInputStream) throws java.io.IOException
    {
        java.io.DataInputStream r0;
        int $i0;
        java.lang.String $r1;

        r0 := @parameter0: java.io.DataInputStream;

        $i0 = virtualinvoke r0.<java.io.DataInputStream: int read()>();

        if $i0 == 0 goto label1;

        $r1 = virtualinvoke r0.<java.io.DataInputStream: java.lang.String readUTF()>();

        return $r1;

     label1:
        return null;
    }
}
