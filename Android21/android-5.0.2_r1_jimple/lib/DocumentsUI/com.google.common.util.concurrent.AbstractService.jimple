public abstract class com.google.common.util.concurrent.AbstractService extends java.lang.Object implements com.google.common.util.concurrent.Service
{
    private final java.util.concurrent.locks.ReentrantLock lock;
    private final com.google.common.util.concurrent.AbstractService$Transition startup;
    private final com.google.common.util.concurrent.AbstractService$Transition shutdown;
    private com.google.common.util.concurrent.Service$State state;
    private boolean shutdownWhenStartupFinishes;

    public void <init>()
    {
        com.google.common.util.concurrent.AbstractService r0;
        java.util.concurrent.locks.ReentrantLock $r1;
        com.google.common.util.concurrent.AbstractService$Transition $r2, $r3;
        com.google.common.util.concurrent.Service$State $r4;

        r0 := @this: com.google.common.util.concurrent.AbstractService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.locks.ReentrantLock;

        specialinvoke $r1.<java.util.concurrent.locks.ReentrantLock: void <init>()>();

        r0.<com.google.common.util.concurrent.AbstractService: java.util.concurrent.locks.ReentrantLock lock> = $r1;

        $r2 = new com.google.common.util.concurrent.AbstractService$Transition;

        specialinvoke $r2.<com.google.common.util.concurrent.AbstractService$Transition: void <init>(com.google.common.util.concurrent.AbstractService,com.google.common.util.concurrent.AbstractService$1)>(r0, null);

        r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.AbstractService$Transition startup> = $r2;

        $r3 = new com.google.common.util.concurrent.AbstractService$Transition;

        specialinvoke $r3.<com.google.common.util.concurrent.AbstractService$Transition: void <init>(com.google.common.util.concurrent.AbstractService,com.google.common.util.concurrent.AbstractService$1)>(r0, null);

        r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.AbstractService$Transition shutdown> = $r3;

        $r4 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State NEW>;

        r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state> = $r4;

        r0.<com.google.common.util.concurrent.AbstractService: boolean shutdownWhenStartupFinishes> = 0;

        return;
    }

    protected abstract void doStart();

    protected abstract void doStop();

    public final com.google.common.util.concurrent.ListenableFuture start()
    {
        com.google.common.util.concurrent.AbstractService r0;
        java.lang.Throwable r1, r2, $r9, $r11;
        java.util.concurrent.locks.ReentrantLock $r3, $r6, $r10, $r12;
        com.google.common.util.concurrent.Service$State $r4, $r5, $r8;
        com.google.common.util.concurrent.AbstractService$Transition $r7;

        r0 := @this: com.google.common.util.concurrent.AbstractService;

        $r3 = r0.<com.google.common.util.concurrent.AbstractService: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label1:
        $r5 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state>;

        $r4 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State NEW>;

        if $r5 != $r4 goto label2;

        $r8 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State STARTING>;

        r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state> = $r8;

        virtualinvoke r0.<com.google.common.util.concurrent.AbstractService: void doStart()>();

     label2:
        $r6 = r0.<com.google.common.util.concurrent.AbstractService: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r6.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label7;

     label3:
        $r11 := @caughtexception;

        r1 = $r11;

        virtualinvoke r0.<com.google.common.util.concurrent.AbstractService: void notifyFailed(java.lang.Throwable)>(r1);

     label4:
        $r12 = r0.<com.google.common.util.concurrent.AbstractService: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r12.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label7;

     label5:
        $r9 := @caughtexception;

        r2 = $r9;

     label6:
        $r10 = r0.<com.google.common.util.concurrent.AbstractService: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r10.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw r2;

     label7:
        $r7 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.AbstractService$Transition startup>;

        return $r7;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public final com.google.common.util.concurrent.ListenableFuture stop()
    {
        com.google.common.util.concurrent.AbstractService r0;
        java.lang.Throwable r1, r2, $r20, $r21;
        java.util.concurrent.locks.ReentrantLock $r3, $r10, $r22, $r23;
        com.google.common.util.concurrent.Service$State $r4, $r5, $r6, $r7, $r8, $r9, $r12, $r13, $r15, $r16, $r19;
        com.google.common.util.concurrent.AbstractService$Transition $r11, $r14, $r17, $r18;

        r0 := @this: com.google.common.util.concurrent.AbstractService;

        $r3 = r0.<com.google.common.util.concurrent.AbstractService: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label1:
        $r5 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state>;

        $r4 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State NEW>;

        if $r5 != $r4 goto label2;

        $r16 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State TERMINATED>;

        r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state> = $r16;

        $r17 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.AbstractService$Transition startup>;

        $r15 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State TERMINATED>;

        virtualinvoke $r17.<com.google.common.util.concurrent.AbstractService$Transition: boolean set(java.lang.Object)>($r15);

        $r18 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.AbstractService$Transition shutdown>;

        $r19 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State TERMINATED>;

        virtualinvoke $r18.<com.google.common.util.concurrent.AbstractService$Transition: boolean set(java.lang.Object)>($r19);

        goto label4;

     label2:
        $r7 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state>;

        $r6 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State STARTING>;

        if $r7 != $r6 goto label3;

        r0.<com.google.common.util.concurrent.AbstractService: boolean shutdownWhenStartupFinishes> = 1;

        $r14 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.AbstractService$Transition startup>;

        $r13 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State STOPPING>;

        virtualinvoke $r14.<com.google.common.util.concurrent.AbstractService$Transition: boolean set(java.lang.Object)>($r13);

        goto label4;

     label3:
        $r9 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state>;

        $r8 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State RUNNING>;

        if $r9 != $r8 goto label4;

        $r12 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State STOPPING>;

        r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state> = $r12;

        virtualinvoke r0.<com.google.common.util.concurrent.AbstractService: void doStop()>();

     label4:
        $r10 = r0.<com.google.common.util.concurrent.AbstractService: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r10.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label9;

     label5:
        $r20 := @caughtexception;

        r1 = $r20;

        virtualinvoke r0.<com.google.common.util.concurrent.AbstractService: void notifyFailed(java.lang.Throwable)>(r1);

     label6:
        $r22 = r0.<com.google.common.util.concurrent.AbstractService: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r22.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label9;

     label7:
        $r21 := @caughtexception;

        r2 = $r21;

     label8:
        $r23 = r0.<com.google.common.util.concurrent.AbstractService: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r23.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw r2;

     label9:
        $r11 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.AbstractService$Transition shutdown>;

        return $r11;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label1 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public com.google.common.util.concurrent.Service$State startAndWait()
    {
        com.google.common.util.concurrent.AbstractService r0;
        com.google.common.util.concurrent.ListenableFuture $r1;
        java.lang.Object $r2;
        com.google.common.util.concurrent.Service$State $r3;

        r0 := @this: com.google.common.util.concurrent.AbstractService;

        $r1 = virtualinvoke r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.ListenableFuture start()>();

        $r2 = staticinvoke <com.google.common.util.concurrent.Futures: java.lang.Object getUnchecked(java.util.concurrent.Future)>($r1);

        $r3 = (com.google.common.util.concurrent.Service$State) $r2;

        return $r3;
    }

    public com.google.common.util.concurrent.Service$State stopAndWait()
    {
        com.google.common.util.concurrent.AbstractService r0;
        com.google.common.util.concurrent.ListenableFuture $r1;
        java.lang.Object $r2;
        com.google.common.util.concurrent.Service$State $r3;

        r0 := @this: com.google.common.util.concurrent.AbstractService;

        $r1 = virtualinvoke r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.ListenableFuture stop()>();

        $r2 = staticinvoke <com.google.common.util.concurrent.Futures: java.lang.Object getUnchecked(java.util.concurrent.Future)>($r1);

        $r3 = (com.google.common.util.concurrent.Service$State) $r2;

        return $r3;
    }

    protected final void notifyStarted()
    {
        com.google.common.util.concurrent.AbstractService r0;
        java.lang.IllegalStateException r1, $r11;
        java.lang.Throwable r2, $r16;
        java.util.concurrent.locks.ReentrantLock $r3, $r9, $r18;
        com.google.common.util.concurrent.Service$State $r4, $r5, $r6, $r7, $r15;
        boolean $z0;
        com.google.common.util.concurrent.AbstractService$Transition $r8;
        java.lang.StringBuilder $r12, $r13, $r14;
        java.lang.String $r17;

        r0 := @this: com.google.common.util.concurrent.AbstractService;

        $r3 = r0.<com.google.common.util.concurrent.AbstractService: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label1:
        $r5 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state>;

        $r4 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State STARTING>;

        if $r5 == $r4 goto label2;

        $r11 = new java.lang.IllegalStateException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot notifyStarted() when the service is ");

        $r15 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r17);

        r1 = $r11;

        virtualinvoke r0.<com.google.common.util.concurrent.AbstractService: void notifyFailed(java.lang.Throwable)>(r1);

        throw r1;

     label2:
        $r6 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State RUNNING>;

        r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state> = $r6;

        $z0 = r0.<com.google.common.util.concurrent.AbstractService: boolean shutdownWhenStartupFinishes>;

        if $z0 == 0 goto label3;

        virtualinvoke r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.ListenableFuture stop()>();

        goto label4;

     label3:
        $r8 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.AbstractService$Transition startup>;

        $r7 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State RUNNING>;

        virtualinvoke $r8.<com.google.common.util.concurrent.AbstractService$Transition: boolean set(java.lang.Object)>($r7);

     label4:
        $r9 = r0.<com.google.common.util.concurrent.AbstractService: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r9.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label7;

     label5:
        $r16 := @caughtexception;

        r2 = $r16;

     label6:
        $r18 = r0.<com.google.common.util.concurrent.AbstractService: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r18.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw r2;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    protected final void notifyStopped()
    {
        com.google.common.util.concurrent.AbstractService r0;
        java.lang.IllegalStateException r1, $r12;
        java.lang.Throwable r2, $r17;
        java.util.concurrent.locks.ReentrantLock $r3, $r9, $r19;
        com.google.common.util.concurrent.Service$State $r4, $r5, $r6, $r7, $r10, $r11, $r16;
        com.google.common.util.concurrent.AbstractService$Transition $r8;
        java.lang.StringBuilder $r13, $r14, $r15;
        java.lang.String $r18;

        r0 := @this: com.google.common.util.concurrent.AbstractService;

        $r3 = r0.<com.google.common.util.concurrent.AbstractService: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label1:
        $r5 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state>;

        $r4 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State STOPPING>;

        if $r5 == $r4 goto label2;

        $r11 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state>;

        $r10 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State RUNNING>;

        if $r11 == $r10 goto label2;

        $r12 = new java.lang.IllegalStateException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot notifyStopped() when the service is ");

        $r16 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r18);

        r1 = $r12;

        virtualinvoke r0.<com.google.common.util.concurrent.AbstractService: void notifyFailed(java.lang.Throwable)>(r1);

        throw r1;

     label2:
        $r6 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State TERMINATED>;

        r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state> = $r6;

        $r8 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.AbstractService$Transition shutdown>;

        $r7 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State TERMINATED>;

        virtualinvoke $r8.<com.google.common.util.concurrent.AbstractService$Transition: boolean set(java.lang.Object)>($r7);

     label3:
        $r9 = r0.<com.google.common.util.concurrent.AbstractService: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r9.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label6;

     label4:
        $r17 := @caughtexception;

        r2 = $r17;

     label5:
        $r19 = r0.<com.google.common.util.concurrent.AbstractService: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r19.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    protected final void notifyFailed(java.lang.Throwable)
    {
        com.google.common.util.concurrent.AbstractService r0;
        java.lang.Throwable r1, r2, $r30;
        java.util.concurrent.locks.ReentrantLock $r4, $r23, $r29;
        com.google.common.util.concurrent.Service$State $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r17, $r18, $r20, $r21;
        java.lang.IllegalStateException $r13;
        java.lang.StringBuilder $r14, $r15, $r16;
        java.lang.String $r19;
        java.lang.Exception $r22, $r28;
        com.google.common.util.concurrent.AbstractService$Transition $r24, $r25, $r26, $r27;

        r0 := @this: com.google.common.util.concurrent.AbstractService;

        r1 := @parameter0: java.lang.Throwable;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r4 = r0.<com.google.common.util.concurrent.AbstractService: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r4.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label01:
        $r6 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state>;

        $r5 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State STARTING>;

        if $r6 != $r5 goto label02;

        $r26 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.AbstractService$Transition startup>;

        virtualinvoke $r26.<com.google.common.util.concurrent.AbstractService$Transition: boolean setException(java.lang.Throwable)>(r1);

        $r27 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.AbstractService$Transition shutdown>;

        $r28 = new java.lang.Exception;

        specialinvoke $r28.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>("Service failed to start.", r1);

        virtualinvoke $r27.<com.google.common.util.concurrent.AbstractService$Transition: boolean setException(java.lang.Throwable)>($r28);

        goto label06;

     label02:
        $r8 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state>;

        $r7 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State STOPPING>;

        if $r8 != $r7 goto label03;

        $r25 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.AbstractService$Transition shutdown>;

        virtualinvoke $r25.<com.google.common.util.concurrent.AbstractService$Transition: boolean setException(java.lang.Throwable)>(r1);

        goto label06;

     label03:
        $r10 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state>;

        $r9 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State RUNNING>;

        if $r10 != $r9 goto label04;

        $r24 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.AbstractService$Transition shutdown>;

        $r22 = new java.lang.Exception;

        specialinvoke $r22.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>("Service failed while running", r1);

        virtualinvoke $r24.<com.google.common.util.concurrent.AbstractService$Transition: boolean setException(java.lang.Throwable)>($r22);

        goto label06;

     label04:
        $r12 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state>;

        $r11 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State NEW>;

        if $r12 == $r11 goto label05;

        $r21 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state>;

        $r18 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State TERMINATED>;

        if $r21 != $r18 goto label06;

     label05:
        $r13 = new java.lang.IllegalStateException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed while in state:");

        $r17 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state>;

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>($r19, r1);

        throw $r13;

     label06:
        $r20 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State FAILED>;

        r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state> = $r20;

     label07:
        $r23 = r0.<com.google.common.util.concurrent.AbstractService: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r23.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        goto label10;

     label08:
        $r30 := @caughtexception;

        r2 = $r30;

     label09:
        $r29 = r0.<com.google.common.util.concurrent.AbstractService: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r29.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw r2;

     label10:
        return;

        catch java.lang.Throwable from label01 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public final boolean isRunning()
    {
        com.google.common.util.concurrent.AbstractService r0;
        com.google.common.util.concurrent.Service$State $r1, $r2;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.AbstractService;

        $r1 = virtualinvoke r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state()>();

        $r2 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State RUNNING>;

        if $r1 != $r2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final com.google.common.util.concurrent.Service$State state()
    {
        com.google.common.util.concurrent.AbstractService r0;
        com.google.common.util.concurrent.Service$State r1, $r5, $r6, r10;
        java.lang.Throwable r2, $r8;
        java.util.concurrent.locks.ReentrantLock $r3, $r4, $r7, $r9;
        boolean $z0;

        r0 := @this: com.google.common.util.concurrent.AbstractService;

        $r3 = r0.<com.google.common.util.concurrent.AbstractService: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r3.<java.util.concurrent.locks.ReentrantLock: void lock()>();

     label1:
        $z0 = r0.<com.google.common.util.concurrent.AbstractService: boolean shutdownWhenStartupFinishes>;

        if $z0 == 0 goto label3;

        $r6 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state>;

        $r5 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State STARTING>;

        if $r6 != $r5 goto label3;

        r1 = <com.google.common.util.concurrent.Service$State: com.google.common.util.concurrent.Service$State STOPPING>;

     label2:
        $r7 = r0.<com.google.common.util.concurrent.AbstractService: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r7.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return r1;

     label3:
        r10 = r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state>;

     label4:
        $r4 = r0.<com.google.common.util.concurrent.AbstractService: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r4.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        return r10;

     label5:
        $r8 := @caughtexception;

        r2 = $r8;

     label6:
        $r9 = r0.<com.google.common.util.concurrent.AbstractService: java.util.concurrent.locks.ReentrantLock lock>;

        virtualinvoke $r9.<java.util.concurrent.locks.ReentrantLock: void unlock()>();

        throw r2;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public java.lang.String toString()
    {
        com.google.common.util.concurrent.AbstractService r0;
        java.lang.StringBuilder $r1, $r4, $r5, $r7, $r8;
        java.lang.Class $r2;
        java.lang.String $r3, $r9;
        com.google.common.util.concurrent.Service$State $r6;

        r0 := @this: com.google.common.util.concurrent.AbstractService;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");

        $r6 = virtualinvoke r0.<com.google.common.util.concurrent.AbstractService: com.google.common.util.concurrent.Service$State state()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }
}
