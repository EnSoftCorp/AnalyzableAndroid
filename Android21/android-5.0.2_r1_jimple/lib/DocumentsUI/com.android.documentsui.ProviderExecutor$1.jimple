class com.android.documentsui.ProviderExecutor$1 extends java.lang.Object implements java.util.concurrent.Executor
{
    final com.android.documentsui.ProviderExecutor this$0;

    void <init>(com.android.documentsui.ProviderExecutor)
    {
        com.android.documentsui.ProviderExecutor$1 r0;
        com.android.documentsui.ProviderExecutor r1;

        r0 := @this: com.android.documentsui.ProviderExecutor$1;

        r1 := @parameter0: com.android.documentsui.ProviderExecutor;

        r0.<com.android.documentsui.ProviderExecutor$1: com.android.documentsui.ProviderExecutor this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void execute(java.lang.Runnable)
    {
        com.android.documentsui.ProviderExecutor$1 r0;
        java.lang.Runnable r1;
        com.android.documentsui.ProviderExecutor $r3;
        java.util.concurrent.LinkedBlockingQueue $r4;

        r0 := @this: com.android.documentsui.ProviderExecutor$1;

        r1 := @parameter0: java.lang.Runnable;

        staticinvoke <com.android.internal.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        $r3 = r0.<com.android.documentsui.ProviderExecutor$1: com.android.documentsui.ProviderExecutor this$0>;

        $r4 = staticinvoke <com.android.documentsui.ProviderExecutor: java.util.concurrent.LinkedBlockingQueue access$000(com.android.documentsui.ProviderExecutor)>($r3);

        virtualinvoke $r4.<java.util.concurrent.LinkedBlockingQueue: boolean add(java.lang.Object)>(r1);

        return;
    }
}
