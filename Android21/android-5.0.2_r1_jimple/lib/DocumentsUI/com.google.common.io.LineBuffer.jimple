abstract class com.google.common.io.LineBuffer extends java.lang.Object
{
    private java.lang.StringBuilder line;
    private boolean sawReturn;

    void <init>()
    {
        com.google.common.io.LineBuffer r0;
        java.lang.StringBuilder $r1;

        r0 := @this: com.google.common.io.LineBuffer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        r0.<com.google.common.io.LineBuffer: java.lang.StringBuilder line> = $r1;

        return;
    }

    protected void add(char[], int, int) throws java.io.IOException
    {
        com.google.common.io.LineBuffer r0;
        char[] r1;
        int i0, i1, i2, i3, i4, $i5, $i6, $i8, $i9, $i10, $i12;
        boolean $z0, $z1, $z2, $z4, $z5;
        java.lang.StringBuilder $r2, $r4, $r7;
        char $c7, $c11, $c13;

        r0 := @this: com.google.common.io.LineBuffer;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 = i0;

        $z0 = r0.<com.google.common.io.LineBuffer: boolean sawReturn>;

        if $z0 == 0 goto label03;

        if i1 <= 0 goto label03;

        $c13 = r1[i2];

        if $c13 != 10 goto label01;

        $z4 = 1;

        goto label02;

     label01:
        $z4 = 0;

     label02:
        $z5 = specialinvoke r0.<com.google.common.io.LineBuffer: boolean finishLine(boolean)>($z4);

        if $z5 == 0 goto label03;

        i2 = i2 + 1;

     label03:
        i3 = i2;

        i4 = i0 + i1;

     label04:
        if i2 >= i4 goto label11;

        $c7 = r1[i2];

        lookupswitch($c7)
        {
            case 10: goto label09;
            case 13: goto label05;
            default: goto label10;
        };

     label05:
        $r4 = r0.<com.google.common.io.LineBuffer: java.lang.StringBuilder line>;

        $i8 = i2 - i3;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>(r1, i3, $i8);

        r0.<com.google.common.io.LineBuffer: boolean sawReturn> = 1;

        $i10 = i2 + 1;

        if $i10 >= i4 goto label08;

        $i9 = i2 + 1;

        $c11 = r1[$i9];

        if $c11 != 10 goto label06;

        $z2 = 1;

        goto label07;

     label06:
        $z2 = 0;

     label07:
        $z1 = specialinvoke r0.<com.google.common.io.LineBuffer: boolean finishLine(boolean)>($z2);

        if $z1 == 0 goto label08;

        i2 = i2 + 1;

     label08:
        i3 = i2 + 1;

        goto label10;

     label09:
        $r7 = r0.<com.google.common.io.LineBuffer: java.lang.StringBuilder line>;

        $i12 = i2 - i3;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>(r1, i3, $i12);

        specialinvoke r0.<com.google.common.io.LineBuffer: boolean finishLine(boolean)>(1);

        i3 = i2 + 1;

     label10:
        i2 = i2 + 1;

        goto label04;

     label11:
        $r2 = r0.<com.google.common.io.LineBuffer: java.lang.StringBuilder line>;

        $i5 = i0 + i1;

        $i6 = $i5 - i3;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>(r1, i3, $i6);

        return;
    }

    private boolean finishLine(boolean) throws java.io.IOException
    {
        com.google.common.io.LineBuffer r0;
        boolean z0, $z1;
        java.lang.StringBuilder $r1, $r3;
        java.lang.String $r2, $r4;

        r0 := @this: com.google.common.io.LineBuffer;

        z0 := @parameter0: boolean;

        $r1 = r0.<com.google.common.io.LineBuffer: java.lang.StringBuilder line>;

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        $z1 = r0.<com.google.common.io.LineBuffer: boolean sawReturn>;

        if $z1 == 0 goto label2;

        if z0 == 0 goto label1;

        $r4 = "\r\n";

        goto label4;

     label1:
        $r4 = "\r";

        goto label4;

     label2:
        if z0 == 0 goto label3;

        $r4 = "\n";

        goto label4;

     label3:
        $r4 = "";

     label4:
        virtualinvoke r0.<com.google.common.io.LineBuffer: void handleLine(java.lang.String,java.lang.String)>($r2, $r4);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        r0.<com.google.common.io.LineBuffer: java.lang.StringBuilder line> = $r3;

        r0.<com.google.common.io.LineBuffer: boolean sawReturn> = 0;

        return z0;
    }

    protected void finish() throws java.io.IOException
    {
        com.google.common.io.LineBuffer r0;
        boolean $z0;
        java.lang.StringBuilder $r1;
        int $i0;

        r0 := @this: com.google.common.io.LineBuffer;

        $z0 = r0.<com.google.common.io.LineBuffer: boolean sawReturn>;

        if $z0 != 0 goto label1;

        $r1 = r0.<com.google.common.io.LineBuffer: java.lang.StringBuilder line>;

        $i0 = virtualinvoke $r1.<java.lang.StringBuilder: int length()>();

        if $i0 <= 0 goto label2;

     label1:
        specialinvoke r0.<com.google.common.io.LineBuffer: boolean finishLine(boolean)>(0);

     label2:
        return;
    }

    protected abstract void handleLine(java.lang.String, java.lang.String) throws java.io.IOException;
}
