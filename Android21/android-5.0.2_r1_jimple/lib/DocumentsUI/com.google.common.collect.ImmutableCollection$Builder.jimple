public abstract class com.google.common.collect.ImmutableCollection$Builder extends java.lang.Object
{

    void <init>()
    {
        com.google.common.collect.ImmutableCollection$Builder r0;

        r0 := @this: com.google.common.collect.ImmutableCollection$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object);

    public transient com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[])
    {
        com.google.common.collect.ImmutableCollection$Builder r0;
        java.lang.Object[] r1, r2;
        int i0, i1;
        java.lang.Object r3;

        r0 := @this: com.google.common.collect.ImmutableCollection$Builder;

        r1 := @parameter0: java.lang.Object[];

        r2 = r1;

        i0 = lengthof r2;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r3 = r2[i1];

        virtualinvoke r0.<com.google.common.collect.ImmutableCollection$Builder: com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object)>(r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r0;
    }

    public com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable)
    {
        com.google.common.collect.ImmutableCollection$Builder r0;
        java.lang.Iterable r1;
        java.util.Iterator r2;
        java.lang.Object r3;
        boolean $z0;

        r0 := @this: com.google.common.collect.ImmutableCollection$Builder;

        r1 := @parameter0: java.lang.Iterable;

        r2 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        r3 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r0.<com.google.common.collect.ImmutableCollection$Builder: com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object)>(r3);

        goto label1;

     label2:
        return r0;
    }

    public com.google.common.collect.ImmutableCollection$Builder addAll(java.util.Iterator)
    {
        com.google.common.collect.ImmutableCollection$Builder r0;
        java.util.Iterator r1;
        boolean $z0;
        java.lang.Object $r2;

        r0 := @this: com.google.common.collect.ImmutableCollection$Builder;

        r1 := @parameter0: java.util.Iterator;

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r0.<com.google.common.collect.ImmutableCollection$Builder: com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object)>($r2);

        goto label1;

     label2:
        return r0;
    }

    public abstract com.google.common.collect.ImmutableCollection build();
}
