class android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate extends android.support.v4.view.AccessibilityDelegateCompat
{
    private final android.graphics.Rect mTmpRect;
    final android.support.v4.widget.SlidingPaneLayout this$0;

    void <init>(android.support.v4.widget.SlidingPaneLayout)
    {
        android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate r0;
        android.support.v4.widget.SlidingPaneLayout r1;
        android.graphics.Rect $r2;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate;

        r1 := @parameter0: android.support.v4.widget.SlidingPaneLayout;

        r0.<android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate: android.support.v4.widget.SlidingPaneLayout this$0> = r1;

        specialinvoke r0.<android.support.v4.view.AccessibilityDelegateCompat: void <init>()>();

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r0.<android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate: android.graphics.Rect mTmpRect> = $r2;

        return;
    }

    public void onInitializeAccessibilityNodeInfo(android.view.View, android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
    {
        android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate r0;
        android.view.View r1, r5, $r10;
        android.support.v4.view.accessibility.AccessibilityNodeInfoCompat r2, r3;
        android.view.ViewParent r4;
        int i0, i1, $i2;
        java.lang.Class $r6;
        java.lang.String $r7;
        boolean $z0, $z1;
        android.support.v4.widget.SlidingPaneLayout $r8, $r9;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat;

        r3 = staticinvoke <android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)>(r2);

        specialinvoke r0.<android.support.v4.view.AccessibilityDelegateCompat: void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)>(r1, r3);

        specialinvoke r0.<android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate: void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)>(r2, r3);

        virtualinvoke r3.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void recycle()>();

        $r6 = class "android/support/v4/widget/SlidingPaneLayout";

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setClassName(java.lang.CharSequence)>($r7);

        virtualinvoke r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setSource(android.view.View)>(r1);

        r4 = staticinvoke <android.support.v4.view.ViewCompat: android.view.ViewParent getParentForAccessibility(android.view.View)>(r1);

        $z0 = r4 instanceof android.view.View;

        if $z0 == 0 goto label1;

        $r10 = (android.view.View) r4;

        virtualinvoke r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setParent(android.view.View)>($r10);

     label1:
        $r8 = r0.<android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate: android.support.v4.widget.SlidingPaneLayout this$0>;

        i0 = virtualinvoke $r8.<android.support.v4.widget.SlidingPaneLayout: int getChildCount()>();

        i1 = 0;

     label2:
        if i1 >= i0 goto label4;

        $r9 = r0.<android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate: android.support.v4.widget.SlidingPaneLayout this$0>;

        r5 = virtualinvoke $r9.<android.support.v4.widget.SlidingPaneLayout: android.view.View getChildAt(int)>(i1);

        $z1 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate: boolean filter(android.view.View)>(r5);

        if $z1 != 0 goto label3;

        $i2 = virtualinvoke r5.<android.view.View: int getVisibility()>();

        if $i2 != 0 goto label3;

        staticinvoke <android.support.v4.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>(r5, 1);

        virtualinvoke r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void addChild(android.view.View)>(r5);

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return;
    }

    public void onInitializeAccessibilityEvent(android.view.View, android.view.accessibility.AccessibilityEvent)
    {
        android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate r0;
        android.view.View r1;
        android.view.accessibility.AccessibilityEvent r2;
        java.lang.Class $r3;
        java.lang.String $r4;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.accessibility.AccessibilityEvent;

        specialinvoke r0.<android.support.v4.view.AccessibilityDelegateCompat: void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent)>(r1, r2);

        $r3 = class "android/support/v4/widget/SlidingPaneLayout";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r2.<android.view.accessibility.AccessibilityEvent: void setClassName(java.lang.CharSequence)>($r4);

        return;
    }

    public boolean onRequestSendAccessibilityEvent(android.view.ViewGroup, android.view.View, android.view.accessibility.AccessibilityEvent)
    {
        android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate r0;
        android.view.ViewGroup r1;
        android.view.View r2;
        android.view.accessibility.AccessibilityEvent r3;
        boolean $z0, $z1;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate;

        r1 := @parameter0: android.view.ViewGroup;

        r2 := @parameter1: android.view.View;

        r3 := @parameter2: android.view.accessibility.AccessibilityEvent;

        $z0 = virtualinvoke r0.<android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate: boolean filter(android.view.View)>(r2);

        if $z0 != 0 goto label1;

        $z1 = specialinvoke r0.<android.support.v4.view.AccessibilityDelegateCompat: boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent)>(r1, r2, r3);

        return $z1;

     label1:
        return 0;
    }

    public boolean filter(android.view.View)
    {
        android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate r0;
        android.view.View r1;
        android.support.v4.widget.SlidingPaneLayout $r2;
        boolean $z0;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate: android.support.v4.widget.SlidingPaneLayout this$0>;

        $z0 = virtualinvoke $r2.<android.support.v4.widget.SlidingPaneLayout: boolean isDimmed(android.view.View)>(r1);

        return $z0;
    }

    private void copyNodeInfoNoChildren(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat, android.support.v4.view.accessibility.AccessibilityNodeInfoCompat)
    {
        android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate r0;
        android.support.v4.view.accessibility.AccessibilityNodeInfoCompat r1, r2;
        android.graphics.Rect r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.lang.CharSequence $r4, $r5, $r6;
        int $i0, $i1;

        r0 := @this: android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate;

        r1 := @parameter0: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat;

        r2 := @parameter1: android.support.v4.view.accessibility.AccessibilityNodeInfoCompat;

        r3 = r0.<android.support.v4.widget.SlidingPaneLayout$AccessibilityDelegate: android.graphics.Rect mTmpRect>;

        virtualinvoke r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInParent(android.graphics.Rect)>(r3);

        virtualinvoke r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInParent(android.graphics.Rect)>(r3);

        virtualinvoke r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void getBoundsInScreen(android.graphics.Rect)>(r3);

        virtualinvoke r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setBoundsInScreen(android.graphics.Rect)>(r3);

        $z0 = virtualinvoke r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isVisibleToUser()>();

        virtualinvoke r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setVisibleToUser(boolean)>($z0);

        $r4 = virtualinvoke r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getPackageName()>();

        virtualinvoke r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setPackageName(java.lang.CharSequence)>($r4);

        $r5 = virtualinvoke r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getClassName()>();

        virtualinvoke r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setClassName(java.lang.CharSequence)>($r5);

        $r6 = virtualinvoke r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: java.lang.CharSequence getContentDescription()>();

        virtualinvoke r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setContentDescription(java.lang.CharSequence)>($r6);

        $z1 = virtualinvoke r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isEnabled()>();

        virtualinvoke r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setEnabled(boolean)>($z1);

        $z2 = virtualinvoke r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isClickable()>();

        virtualinvoke r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setClickable(boolean)>($z2);

        $z3 = virtualinvoke r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isFocusable()>();

        virtualinvoke r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setFocusable(boolean)>($z3);

        $z4 = virtualinvoke r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isFocused()>();

        virtualinvoke r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setFocused(boolean)>($z4);

        $z5 = virtualinvoke r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isAccessibilityFocused()>();

        virtualinvoke r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setAccessibilityFocused(boolean)>($z5);

        $z6 = virtualinvoke r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isSelected()>();

        virtualinvoke r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setSelected(boolean)>($z6);

        $z7 = virtualinvoke r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: boolean isLongClickable()>();

        virtualinvoke r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setLongClickable(boolean)>($z7);

        $i0 = virtualinvoke r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int getActions()>();

        virtualinvoke r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void addAction(int)>($i0);

        $i1 = virtualinvoke r2.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: int getMovementGranularities()>();

        virtualinvoke r1.<android.support.v4.view.accessibility.AccessibilityNodeInfoCompat: void setMovementGranularities(int)>($i1);

        return;
    }
}
