class com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine extends android.service.wallpaper.WallpaperService$Engine
{
    private android.renderscript.RenderScriptGL mRs;
    private com.android.musicvis.RenderScriptScene mRenderer;
    final com.android.musicvis.RenderScriptWallpaper this$0;

    private void <init>(com.android.musicvis.RenderScriptWallpaper)
    {
        com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine r0;
        com.android.musicvis.RenderScriptWallpaper r1;

        r0 := @this: com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine;

        r1 := @parameter0: com.android.musicvis.RenderScriptWallpaper;

        r0.<com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine: com.android.musicvis.RenderScriptWallpaper this$0> = r1;

        specialinvoke r0.<android.service.wallpaper.WallpaperService$Engine: void <init>(android.service.wallpaper.WallpaperService)>(r1);

        return;
    }

    public void onCreate(android.view.SurfaceHolder)
    {
        com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine r0;
        android.view.SurfaceHolder r1;

        r0 := @this: com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine;

        r1 := @parameter0: android.view.SurfaceHolder;

        specialinvoke r0.<android.service.wallpaper.WallpaperService$Engine: void onCreate(android.view.SurfaceHolder)>(r1);

        virtualinvoke r0.<com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine: void setTouchEventsEnabled(boolean)>(0);

        interfaceinvoke r1.<android.view.SurfaceHolder: void setSizeFromLayout()>();

        return;
    }

    public void onDestroy()
    {
        com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine r0;

        r0 := @this: com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine;

        specialinvoke r0.<android.service.wallpaper.WallpaperService$Engine: void onDestroy()>();

        specialinvoke r0.<com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine: void destroyRenderer()>();

        return;
    }

    private void destroyRenderer()
    {
        com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine r0;
        com.android.musicvis.RenderScriptScene $r1, $r4;
        android.renderscript.RenderScriptGL $r2, $r3;

        r0 := @this: com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine;

        $r1 = r0.<com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine: com.android.musicvis.RenderScriptScene mRenderer>;

        if $r1 == null goto label1;

        $r4 = r0.<com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine: com.android.musicvis.RenderScriptScene mRenderer>;

        virtualinvoke $r4.<com.android.musicvis.RenderScriptScene: void stop()>();

        r0.<com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine: com.android.musicvis.RenderScriptScene mRenderer> = null;

     label1:
        $r2 = r0.<com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine: android.renderscript.RenderScriptGL mRs>;

        if $r2 == null goto label2;

        $r3 = r0.<com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine: android.renderscript.RenderScriptGL mRs>;

        virtualinvoke $r3.<android.renderscript.RenderScriptGL: void destroy()>();

        r0.<com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine: android.renderscript.RenderScriptGL mRs> = null;

     label2:
        return;
    }

    public void onVisibilityChanged(boolean)
    {
        com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine r0;
        boolean z0;
        com.android.musicvis.RenderScriptScene $r1, $r2, $r3;

        r0 := @this: com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.service.wallpaper.WallpaperService$Engine: void onVisibilityChanged(boolean)>(z0);

        $r1 = r0.<com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine: com.android.musicvis.RenderScriptScene mRenderer>;

        if $r1 == null goto label2;

        if z0 == 0 goto label1;

        $r3 = r0.<com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine: com.android.musicvis.RenderScriptScene mRenderer>;

        virtualinvoke $r3.<com.android.musicvis.RenderScriptScene: void start()>();

        goto label2;

     label1:
        $r2 = r0.<com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine: com.android.musicvis.RenderScriptScene mRenderer>;

        virtualinvoke $r2.<com.android.musicvis.RenderScriptScene: void stop()>();

     label2:
        return;
    }

    public void onSurfaceChanged(android.view.SurfaceHolder, int, int, int)
    {
        com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine r0;
        android.view.SurfaceHolder r1;
        int i0, i1, i2;
        android.renderscript.RenderScriptGL $r2, $r9, $r12;
        com.android.musicvis.RenderScriptScene $r3, $r4, $r6, $r8, $r11;
        com.android.musicvis.RenderScriptWallpaper $r5, $r7;
        android.content.res.Resources $r10;
        boolean $z0;

        r0 := @this: com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine;

        r1 := @parameter0: android.view.SurfaceHolder;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<android.service.wallpaper.WallpaperService$Engine: void onSurfaceChanged(android.view.SurfaceHolder,int,int,int)>(r1, i0, i1, i2);

        $r2 = r0.<com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine: android.renderscript.RenderScriptGL mRs>;

        if $r2 == null goto label1;

        $r12 = r0.<com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine: android.renderscript.RenderScriptGL mRs>;

        virtualinvoke $r12.<android.renderscript.RenderScriptGL: void setSurface(android.view.SurfaceHolder,int,int)>(r1, i1, i2);

     label1:
        $r3 = r0.<com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine: com.android.musicvis.RenderScriptScene mRenderer>;

        if $r3 != null goto label2;

        $r5 = r0.<com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine: com.android.musicvis.RenderScriptWallpaper this$0>;

        $r6 = virtualinvoke $r5.<com.android.musicvis.RenderScriptWallpaper: com.android.musicvis.RenderScriptScene createScene(int,int)>(i1, i2);

        r0.<com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine: com.android.musicvis.RenderScriptScene mRenderer> = $r6;

        $r8 = r0.<com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine: com.android.musicvis.RenderScriptScene mRenderer>;

        $r9 = r0.<com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine: android.renderscript.RenderScriptGL mRs>;

        $r7 = r0.<com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine: com.android.musicvis.RenderScriptWallpaper this$0>;

        $r10 = virtualinvoke $r7.<com.android.musicvis.RenderScriptWallpaper: android.content.res.Resources getResources()>();

        $z0 = virtualinvoke r0.<com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine: boolean isPreview()>();

        virtualinvoke $r8.<com.android.musicvis.RenderScriptScene: void init(android.renderscript.RenderScriptGL,android.content.res.Resources,boolean)>($r9, $r10, $z0);

        $r11 = r0.<com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine: com.android.musicvis.RenderScriptScene mRenderer>;

        virtualinvoke $r11.<com.android.musicvis.RenderScriptScene: void start()>();

        goto label3;

     label2:
        $r4 = r0.<com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine: com.android.musicvis.RenderScriptScene mRenderer>;

        virtualinvoke $r4.<com.android.musicvis.RenderScriptScene: void resize(int,int)>(i1, i2);

     label3:
        return;
    }

    public void onOffsetsChanged(float, float, float, float, int, int)
    {
        com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine r0;
        float f0, f1, f2, f3;
        int i0, i1;
        com.android.musicvis.RenderScriptScene $r1;

        r0 := @this: com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        i0 := @parameter4: int;

        i1 := @parameter5: int;

        $r1 = r0.<com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine: com.android.musicvis.RenderScriptScene mRenderer>;

        virtualinvoke $r1.<com.android.musicvis.RenderScriptScene: void setOffset(float,float,int,int)>(f0, f1, i0, i1);

        return;
    }

    public void onSurfaceCreated(android.view.SurfaceHolder)
    {
        com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine r0;
        android.view.SurfaceHolder r1;
        android.renderscript.RenderScriptGL$SurfaceConfig r2, $r3;
        android.renderscript.RenderScriptGL $r4, $r7;
        com.android.musicvis.RenderScriptWallpaper $r5;
        android.renderscript.RenderScript$Priority $r6;

        r0 := @this: com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine;

        r1 := @parameter0: android.view.SurfaceHolder;

        specialinvoke r0.<android.service.wallpaper.WallpaperService$Engine: void onSurfaceCreated(android.view.SurfaceHolder)>(r1);

        $r3 = new android.renderscript.RenderScriptGL$SurfaceConfig;

        specialinvoke $r3.<android.renderscript.RenderScriptGL$SurfaceConfig: void <init>()>();

        r2 = $r3;

        $r4 = new android.renderscript.RenderScriptGL;

        $r5 = r0.<com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine: com.android.musicvis.RenderScriptWallpaper this$0>;

        specialinvoke $r4.<android.renderscript.RenderScriptGL: void <init>(android.content.Context,android.renderscript.RenderScriptGL$SurfaceConfig)>($r5, r2);

        r0.<com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine: android.renderscript.RenderScriptGL mRs> = $r4;

        $r7 = r0.<com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine: android.renderscript.RenderScriptGL mRs>;

        $r6 = <android.renderscript.RenderScript$Priority: android.renderscript.RenderScript$Priority LOW>;

        virtualinvoke $r7.<android.renderscript.RenderScriptGL: void setPriority(android.renderscript.RenderScript$Priority)>($r6);

        return;
    }

    public void onSurfaceDestroyed(android.view.SurfaceHolder)
    {
        com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine r0;
        android.view.SurfaceHolder r1;

        r0 := @this: com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine;

        r1 := @parameter0: android.view.SurfaceHolder;

        specialinvoke r0.<android.service.wallpaper.WallpaperService$Engine: void onSurfaceDestroyed(android.view.SurfaceHolder)>(r1);

        specialinvoke r0.<com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine: void destroyRenderer()>();

        return;
    }

    void <init>(com.android.musicvis.RenderScriptWallpaper, com.android.musicvis.RenderScriptWallpaper$1)
    {
        com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine r0;
        com.android.musicvis.RenderScriptWallpaper r1;
        com.android.musicvis.RenderScriptWallpaper$1 r2;

        r0 := @this: com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine;

        r1 := @parameter0: com.android.musicvis.RenderScriptWallpaper;

        r2 := @parameter1: com.android.musicvis.RenderScriptWallpaper$1;

        specialinvoke r0.<com.android.musicvis.RenderScriptWallpaper$RenderScriptEngine: void <init>(com.android.musicvis.RenderScriptWallpaper)>(r1);

        return;
    }
}
