class com.android.musicvis.vis4.Visualization4RS extends com.android.musicvis.RenderScriptScene
{
    private final android.os.Handler mHandler;
    private final java.lang.Runnable mDrawCube;
    private boolean mVisible;
    private int mNeedlePos;
    private int mNeedleSpeed;
    private int mNeedleMass;
    private int mSpringForceAtOrigin;
    com.android.musicvis.vis4.Visualization4RS$WorldState mWorldState;
    com.android.musicvis.vis4.ScriptC_vu mScript;
    private android.renderscript.ProgramStore mPfsBackground;
    private android.renderscript.ProgramFragment mPfBackground;
    private android.renderscript.Sampler mSampler;
    private android.renderscript.Allocation[] mTextures;
    private android.renderscript.ProgramVertex mPVBackground;
    private android.renderscript.ProgramVertexFixedFunction$Constants mPVAlloc;
    private com.android.musicvis.AudioCapture mAudioCapture;
    private int[] mVizData;
    private static final int RSID_STATE;
    private static final int RSID_POINTS;
    private static final int RSID_LINES;
    private static final int RSID_PROGRAMVERTEX;

    void <init>(int, int)
    {
        com.android.musicvis.vis4.Visualization4RS r0;
        int i0, i1;
        android.os.Handler $r1;
        com.android.musicvis.vis4.Visualization4RS$1 $r2;
        com.android.musicvis.vis4.Visualization4RS$WorldState $r3;
        int[] $r4;

        r0 := @this: com.android.musicvis.vis4.Visualization4RS;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<com.android.musicvis.RenderScriptScene: void <init>(int,int)>(i0, i1);

        $r1 = new android.os.Handler;

        specialinvoke $r1.<android.os.Handler: void <init>()>();

        r0.<com.android.musicvis.vis4.Visualization4RS: android.os.Handler mHandler> = $r1;

        $r2 = new com.android.musicvis.vis4.Visualization4RS$1;

        specialinvoke $r2.<com.android.musicvis.vis4.Visualization4RS$1: void <init>(com.android.musicvis.vis4.Visualization4RS)>(r0);

        r0.<com.android.musicvis.vis4.Visualization4RS: java.lang.Runnable mDrawCube> = $r2;

        r0.<com.android.musicvis.vis4.Visualization4RS: int mNeedlePos> = 0;

        r0.<com.android.musicvis.vis4.Visualization4RS: int mNeedleSpeed> = 0;

        r0.<com.android.musicvis.vis4.Visualization4RS: int mNeedleMass> = 10;

        r0.<com.android.musicvis.vis4.Visualization4RS: int mSpringForceAtOrigin> = 200;

        $r3 = new com.android.musicvis.vis4.Visualization4RS$WorldState;

        specialinvoke $r3.<com.android.musicvis.vis4.Visualization4RS$WorldState: void <init>()>();

        r0.<com.android.musicvis.vis4.Visualization4RS: com.android.musicvis.vis4.Visualization4RS$WorldState mWorldState> = $r3;

        r0.<com.android.musicvis.vis4.Visualization4RS: com.android.musicvis.AudioCapture mAudioCapture> = null;

        $r4 = newarray (int)[1024];

        r0.<com.android.musicvis.vis4.Visualization4RS: int[] mVizData> = $r4;

        r0.<com.android.musicvis.vis4.Visualization4RS: int mWidth> = i0;

        r0.<com.android.musicvis.vis4.Visualization4RS: int mHeight> = i1;

        return;
    }

    public void resize(int, int)
    {
        com.android.musicvis.vis4.Visualization4RS r0;
        int i0, i1;
        android.renderscript.Matrix4f r1, $r3;
        android.renderscript.ProgramVertexFixedFunction$Constants $r2, $r4;

        r0 := @this: com.android.musicvis.vis4.Visualization4RS;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<com.android.musicvis.RenderScriptScene: void resize(int,int)>(i0, i1);

        $r2 = r0.<com.android.musicvis.vis4.Visualization4RS: android.renderscript.ProgramVertexFixedFunction$Constants mPVAlloc>;

        if $r2 == null goto label1;

        $r3 = new android.renderscript.Matrix4f;

        specialinvoke $r3.<android.renderscript.Matrix4f: void <init>()>();

        r1 = $r3;

        virtualinvoke r1.<android.renderscript.Matrix4f: void loadProjectionNormalized(int,int)>(i0, i1);

        $r4 = r0.<com.android.musicvis.vis4.Visualization4RS: android.renderscript.ProgramVertexFixedFunction$Constants mPVAlloc>;

        virtualinvoke $r4.<android.renderscript.ProgramVertexFixedFunction$Constants: void setProjection(android.renderscript.Matrix4f)>(r1);

     label1:
        return;
    }

    protected android.renderscript.ScriptC createScript()
    {
        com.android.musicvis.vis4.Visualization4RS r0;
        android.renderscript.ProgramVertexFixedFunction$Builder r1, $r8;
        android.renderscript.Matrix4f r2, $r16;
        android.renderscript.Sampler$Builder r3, $r66;
        android.renderscript.ProgramFragmentFixedFunction$Builder r4, $r73;
        com.android.musicvis.vis4.ScriptC_vu $r5, $r18, $r27, $r38, $r45, $r51, $r64, $r65, $r80, $r97, $r98, $r101;
        android.content.res.Resources $r6, $r23, $r32, $r36, $r43, $r56, $r58;
        android.renderscript.RenderScriptGL $r7, $r9, $r12, $r22, $r29, $r37, $r49, $r55, $r59, $r67, $r72, $r82;
        android.renderscript.ProgramVertexFixedFunction $r10, $r15;
        android.renderscript.ProgramVertexFixedFunction$Constants $r11, $r14, $r17;
        android.renderscript.ProgramVertex $r13, $r19;
        int $i0, $i1;
        android.renderscript.Allocation$MipmapControl $r20, $r31, $r39, $r44, $r50, $r57;
        android.renderscript.Allocation[] $r21, $r24, $r25, $r30, $r33, $r41, $r42, $r48, $r53, $r54, $r60, $r62, $r70;
        android.renderscript.Allocation $r26, $r28, $r34, $r35, $r40, $r46, $r47, $r52, $r61, $r63, $r69, $r71;
        android.renderscript.Sampler$Value $r68, $r76, $r77, $r79;
        android.renderscript.ProgramFragmentFixedFunction$Builder$EnvMode $r74;
        android.renderscript.ProgramFragmentFixedFunction$Builder$Format $r75;
        android.renderscript.Sampler $r78, $r87;
        android.renderscript.ProgramFragment $r81, $r86;
        android.renderscript.ProgramStore$Builder $r83, r102;
        android.renderscript.ProgramFragmentFixedFunction $r84;
        android.renderscript.ProgramStore $r89, $r100;
        android.renderscript.ProgramStore$BlendDstFunc $r92;
        android.renderscript.ProgramStore$BlendSrcFunc $r93;
        android.renderscript.ProgramStore$DepthFunc $r94;
        java.lang.String $r96;
        java.util.TimeZone $r99;

        r0 := @this: com.android.musicvis.vis4.Visualization4RS;

        $r5 = new com.android.musicvis.vis4.ScriptC_vu;

        $r7 = r0.<com.android.musicvis.vis4.Visualization4RS: android.renderscript.RenderScriptGL mRS>;

        $r6 = r0.<com.android.musicvis.vis4.Visualization4RS: android.content.res.Resources mResources>;

        specialinvoke $r5.<com.android.musicvis.vis4.ScriptC_vu: void <init>(android.renderscript.RenderScript,android.content.res.Resources,int)>($r7, $r6, 2130968577);

        r0.<com.android.musicvis.vis4.Visualization4RS: com.android.musicvis.vis4.ScriptC_vu mScript> = $r5;

        $r8 = new android.renderscript.ProgramVertexFixedFunction$Builder;

        $r9 = r0.<com.android.musicvis.vis4.Visualization4RS: android.renderscript.RenderScriptGL mRS>;

        specialinvoke $r8.<android.renderscript.ProgramVertexFixedFunction$Builder: void <init>(android.renderscript.RenderScript)>($r9);

        r1 = $r8;

        $r10 = virtualinvoke r1.<android.renderscript.ProgramVertexFixedFunction$Builder: android.renderscript.ProgramVertexFixedFunction create()>();

        r0.<com.android.musicvis.vis4.Visualization4RS: android.renderscript.ProgramVertex mPVBackground> = $r10;

        $r11 = new android.renderscript.ProgramVertexFixedFunction$Constants;

        $r12 = r0.<com.android.musicvis.vis4.Visualization4RS: android.renderscript.RenderScriptGL mRS>;

        specialinvoke $r11.<android.renderscript.ProgramVertexFixedFunction$Constants: void <init>(android.renderscript.RenderScript)>($r12);

        r0.<com.android.musicvis.vis4.Visualization4RS: android.renderscript.ProgramVertexFixedFunction$Constants mPVAlloc> = $r11;

        $r13 = r0.<com.android.musicvis.vis4.Visualization4RS: android.renderscript.ProgramVertex mPVBackground>;

        $r15 = (android.renderscript.ProgramVertexFixedFunction) $r13;

        $r14 = r0.<com.android.musicvis.vis4.Visualization4RS: android.renderscript.ProgramVertexFixedFunction$Constants mPVAlloc>;

        virtualinvoke $r15.<android.renderscript.ProgramVertexFixedFunction: void bindConstants(android.renderscript.ProgramVertexFixedFunction$Constants)>($r14);

        $r16 = new android.renderscript.Matrix4f;

        specialinvoke $r16.<android.renderscript.Matrix4f: void <init>()>();

        r2 = $r16;

        $i1 = r0.<com.android.musicvis.vis4.Visualization4RS: int mWidth>;

        $i0 = r0.<com.android.musicvis.vis4.Visualization4RS: int mHeight>;

        virtualinvoke r2.<android.renderscript.Matrix4f: void loadProjectionNormalized(int,int)>($i1, $i0);

        $r17 = r0.<com.android.musicvis.vis4.Visualization4RS: android.renderscript.ProgramVertexFixedFunction$Constants mPVAlloc>;

        virtualinvoke $r17.<android.renderscript.ProgramVertexFixedFunction$Constants: void setProjection(android.renderscript.Matrix4f)>(r2);

        $r18 = r0.<com.android.musicvis.vis4.Visualization4RS: com.android.musicvis.vis4.ScriptC_vu mScript>;

        $r19 = r0.<com.android.musicvis.vis4.Visualization4RS: android.renderscript.ProgramVertex mPVBackground>;

        virtualinvoke $r18.<com.android.musicvis.vis4.ScriptC_vu: void set_gPVBackground(android.renderscript.ProgramVertex)>($r19);

        virtualinvoke r0.<com.android.musicvis.vis4.Visualization4RS: void updateWave()>();

        $r21 = newarray (android.renderscript.Allocation)[6];

        r0.<com.android.musicvis.vis4.Visualization4RS: android.renderscript.Allocation[] mTextures> = $r21;

        $r24 = r0.<com.android.musicvis.vis4.Visualization4RS: android.renderscript.Allocation[] mTextures>;

        $r22 = r0.<com.android.musicvis.vis4.Visualization4RS: android.renderscript.RenderScriptGL mRS>;

        $r23 = r0.<com.android.musicvis.vis4.Visualization4RS: android.content.res.Resources mResources>;

        $r20 = <android.renderscript.Allocation$MipmapControl: android.renderscript.Allocation$MipmapControl MIPMAP_NONE>;

        $r26 = staticinvoke <android.renderscript.Allocation: android.renderscript.Allocation createFromBitmapResource(android.renderscript.RenderScript,android.content.res.Resources,int,android.renderscript.Allocation$MipmapControl,int)>($r22, $r23, 2130837505, $r20, 2);

        $r24[0] = $r26;

        $r27 = r0.<com.android.musicvis.vis4.Visualization4RS: com.android.musicvis.vis4.ScriptC_vu mScript>;

        $r25 = r0.<com.android.musicvis.vis4.Visualization4RS: android.renderscript.Allocation[] mTextures>;

        $r28 = $r25[0];

        virtualinvoke $r27.<com.android.musicvis.vis4.ScriptC_vu: void set_gTvumeter_background(android.renderscript.Allocation)>($r28);

        $r30 = r0.<com.android.musicvis.vis4.Visualization4RS: android.renderscript.Allocation[] mTextures>;

        $r29 = r0.<com.android.musicvis.vis4.Visualization4RS: android.renderscript.RenderScriptGL mRS>;

        $r32 = r0.<com.android.musicvis.vis4.Visualization4RS: android.content.res.Resources mResources>;

        $r31 = <android.renderscript.Allocation$MipmapControl: android.renderscript.Allocation$MipmapControl MIPMAP_NONE>;

        $r35 = staticinvoke <android.renderscript.Allocation: android.renderscript.Allocation createFromBitmapResource(android.renderscript.RenderScript,android.content.res.Resources,int,android.renderscript.Allocation$MipmapControl,int)>($r29, $r32, 2130837508, $r31, 2);

        $r30[1] = $r35;

        $r38 = r0.<com.android.musicvis.vis4.Visualization4RS: com.android.musicvis.vis4.ScriptC_vu mScript>;

        $r33 = r0.<com.android.musicvis.vis4.Visualization4RS: android.renderscript.Allocation[] mTextures>;

        $r34 = $r33[1];

        virtualinvoke $r38.<com.android.musicvis.vis4.ScriptC_vu: void set_gTvumeter_frame(android.renderscript.Allocation)>($r34);

        $r42 = r0.<com.android.musicvis.vis4.Visualization4RS: android.renderscript.Allocation[] mTextures>;

        $r37 = r0.<com.android.musicvis.vis4.Visualization4RS: android.renderscript.RenderScriptGL mRS>;

        $r36 = r0.<com.android.musicvis.vis4.Visualization4RS: android.content.res.Resources mResources>;

        $r39 = <android.renderscript.Allocation$MipmapControl: android.renderscript.Allocation$MipmapControl MIPMAP_NONE>;

        $r40 = staticinvoke <android.renderscript.Allocation: android.renderscript.Allocation createFromBitmapResource(android.renderscript.RenderScript,android.content.res.Resources,int,android.renderscript.Allocation$MipmapControl,int)>($r37, $r36, 2130837513, $r39, 2);

        $r42[2] = $r40;

        $r45 = r0.<com.android.musicvis.vis4.Visualization4RS: com.android.musicvis.vis4.ScriptC_vu mScript>;

        $r41 = r0.<com.android.musicvis.vis4.Visualization4RS: android.renderscript.Allocation[] mTextures>;

        $r46 = $r41[2];

        virtualinvoke $r45.<com.android.musicvis.vis4.ScriptC_vu: void set_gTvumeter_peak_on(android.renderscript.Allocation)>($r46);

        $r48 = r0.<com.android.musicvis.vis4.Visualization4RS: android.renderscript.Allocation[] mTextures>;

        $r49 = r0.<com.android.musicvis.vis4.Visualization4RS: android.renderscript.RenderScriptGL mRS>;

        $r43 = r0.<com.android.musicvis.vis4.Visualization4RS: android.content.res.Resources mResources>;

        $r44 = <android.renderscript.Allocation$MipmapControl: android.renderscript.Allocation$MipmapControl MIPMAP_NONE>;

        $r47 = staticinvoke <android.renderscript.Allocation: android.renderscript.Allocation createFromBitmapResource(android.renderscript.RenderScript,android.content.res.Resources,int,android.renderscript.Allocation$MipmapControl,int)>($r49, $r43, 2130837512, $r44, 2);

        $r48[3] = $r47;

        $r51 = r0.<com.android.musicvis.vis4.Visualization4RS: com.android.musicvis.vis4.ScriptC_vu mScript>;

        $r53 = r0.<com.android.musicvis.vis4.Visualization4RS: android.renderscript.Allocation[] mTextures>;

        $r52 = $r53[3];

        virtualinvoke $r51.<com.android.musicvis.vis4.ScriptC_vu: void set_gTvumeter_peak_off(android.renderscript.Allocation)>($r52);

        $r54 = r0.<com.android.musicvis.vis4.Visualization4RS: android.renderscript.Allocation[] mTextures>;

        $r55 = r0.<com.android.musicvis.vis4.Visualization4RS: android.renderscript.RenderScriptGL mRS>;

        $r56 = r0.<com.android.musicvis.vis4.Visualization4RS: android.content.res.Resources mResources>;

        $r50 = <android.renderscript.Allocation$MipmapControl: android.renderscript.Allocation$MipmapControl MIPMAP_NONE>;

        $r61 = staticinvoke <android.renderscript.Allocation: android.renderscript.Allocation createFromBitmapResource(android.renderscript.RenderScript,android.content.res.Resources,int,android.renderscript.Allocation$MipmapControl,int)>($r55, $r56, 2130837511, $r50, 2);

        $r54[4] = $r61;

        $r64 = r0.<com.android.musicvis.vis4.Visualization4RS: com.android.musicvis.vis4.ScriptC_vu mScript>;

        $r62 = r0.<com.android.musicvis.vis4.Visualization4RS: android.renderscript.Allocation[] mTextures>;

        $r63 = $r62[4];

        virtualinvoke $r64.<com.android.musicvis.vis4.ScriptC_vu: void set_gTvumeter_needle(android.renderscript.Allocation)>($r63);

        $r60 = r0.<com.android.musicvis.vis4.Visualization4RS: android.renderscript.Allocation[] mTextures>;

        $r59 = r0.<com.android.musicvis.vis4.Visualization4RS: android.renderscript.RenderScriptGL mRS>;

        $r58 = r0.<com.android.musicvis.vis4.Visualization4RS: android.content.res.Resources mResources>;

        $r57 = <android.renderscript.Allocation$MipmapControl: android.renderscript.Allocation$MipmapControl MIPMAP_NONE>;

        $r69 = staticinvoke <android.renderscript.Allocation: android.renderscript.Allocation createFromBitmapResource(android.renderscript.RenderScript,android.content.res.Resources,int,android.renderscript.Allocation$MipmapControl,int)>($r59, $r58, 2130837506, $r57, 2);

        $r60[5] = $r69;

        $r65 = r0.<com.android.musicvis.vis4.Visualization4RS: com.android.musicvis.vis4.ScriptC_vu mScript>;

        $r70 = r0.<com.android.musicvis.vis4.Visualization4RS: android.renderscript.Allocation[] mTextures>;

        $r71 = $r70[5];

        virtualinvoke $r65.<com.android.musicvis.vis4.ScriptC_vu: void set_gTvumeter_black(android.renderscript.Allocation)>($r71);

        $r66 = new android.renderscript.Sampler$Builder;

        $r67 = r0.<com.android.musicvis.vis4.Visualization4RS: android.renderscript.RenderScriptGL mRS>;

        specialinvoke $r66.<android.renderscript.Sampler$Builder: void <init>(android.renderscript.RenderScript)>($r67);

        r3 = $r66;

        $r68 = <android.renderscript.Sampler$Value: android.renderscript.Sampler$Value LINEAR>;

        virtualinvoke r3.<android.renderscript.Sampler$Builder: void setMinification(android.renderscript.Sampler$Value)>($r68);

        $r77 = <android.renderscript.Sampler$Value: android.renderscript.Sampler$Value LINEAR>;

        virtualinvoke r3.<android.renderscript.Sampler$Builder: void setMagnification(android.renderscript.Sampler$Value)>($r77);

        $r76 = <android.renderscript.Sampler$Value: android.renderscript.Sampler$Value WRAP>;

        virtualinvoke r3.<android.renderscript.Sampler$Builder: void setWrapS(android.renderscript.Sampler$Value)>($r76);

        $r79 = <android.renderscript.Sampler$Value: android.renderscript.Sampler$Value WRAP>;

        virtualinvoke r3.<android.renderscript.Sampler$Builder: void setWrapT(android.renderscript.Sampler$Value)>($r79);

        $r78 = virtualinvoke r3.<android.renderscript.Sampler$Builder: android.renderscript.Sampler create()>();

        r0.<com.android.musicvis.vis4.Visualization4RS: android.renderscript.Sampler mSampler> = $r78;

        $r73 = new android.renderscript.ProgramFragmentFixedFunction$Builder;

        $r72 = r0.<com.android.musicvis.vis4.Visualization4RS: android.renderscript.RenderScriptGL mRS>;

        specialinvoke $r73.<android.renderscript.ProgramFragmentFixedFunction$Builder: void <init>(android.renderscript.RenderScript)>($r72);

        r4 = $r73;

        $r74 = <android.renderscript.ProgramFragmentFixedFunction$Builder$EnvMode: android.renderscript.ProgramFragmentFixedFunction$Builder$EnvMode REPLACE>;

        $r75 = <android.renderscript.ProgramFragmentFixedFunction$Builder$Format: android.renderscript.ProgramFragmentFixedFunction$Builder$Format RGBA>;

        virtualinvoke r4.<android.renderscript.ProgramFragmentFixedFunction$Builder: android.renderscript.ProgramFragmentFixedFunction$Builder setTexture(android.renderscript.ProgramFragmentFixedFunction$Builder$EnvMode,android.renderscript.ProgramFragmentFixedFunction$Builder$Format,int)>($r74, $r75, 0);

        $r84 = virtualinvoke r4.<android.renderscript.ProgramFragmentFixedFunction$Builder: android.renderscript.ProgramFragmentFixedFunction create()>();

        r0.<com.android.musicvis.vis4.Visualization4RS: android.renderscript.ProgramFragment mPfBackground> = $r84;

        $r86 = r0.<com.android.musicvis.vis4.Visualization4RS: android.renderscript.ProgramFragment mPfBackground>;

        $r87 = r0.<com.android.musicvis.vis4.Visualization4RS: android.renderscript.Sampler mSampler>;

        virtualinvoke $r86.<android.renderscript.ProgramFragment: void bindSampler(android.renderscript.Sampler,int)>($r87, 0);

        $r80 = r0.<com.android.musicvis.vis4.Visualization4RS: com.android.musicvis.vis4.ScriptC_vu mScript>;

        $r81 = r0.<com.android.musicvis.vis4.Visualization4RS: android.renderscript.ProgramFragment mPfBackground>;

        virtualinvoke $r80.<com.android.musicvis.vis4.ScriptC_vu: void set_gPFBackground(android.renderscript.ProgramFragment)>($r81);

        $r83 = new android.renderscript.ProgramStore$Builder;

        $r82 = r0.<com.android.musicvis.vis4.Visualization4RS: android.renderscript.RenderScriptGL mRS>;

        specialinvoke $r83.<android.renderscript.ProgramStore$Builder: void <init>(android.renderscript.RenderScript)>($r82);

        r102 = $r83;

        $r94 = <android.renderscript.ProgramStore$DepthFunc: android.renderscript.ProgramStore$DepthFunc ALWAYS>;

        virtualinvoke r102.<android.renderscript.ProgramStore$Builder: android.renderscript.ProgramStore$Builder setDepthFunc(android.renderscript.ProgramStore$DepthFunc)>($r94);

        $r93 = <android.renderscript.ProgramStore$BlendSrcFunc: android.renderscript.ProgramStore$BlendSrcFunc ONE>;

        $r92 = <android.renderscript.ProgramStore$BlendDstFunc: android.renderscript.ProgramStore$BlendDstFunc ONE_MINUS_SRC_ALPHA>;

        virtualinvoke r102.<android.renderscript.ProgramStore$Builder: android.renderscript.ProgramStore$Builder setBlendFunc(android.renderscript.ProgramStore$BlendSrcFunc,android.renderscript.ProgramStore$BlendDstFunc)>($r93, $r92);

        virtualinvoke r102.<android.renderscript.ProgramStore$Builder: android.renderscript.ProgramStore$Builder setDitherEnabled(boolean)>(1);

        virtualinvoke r102.<android.renderscript.ProgramStore$Builder: android.renderscript.ProgramStore$Builder setDepthMaskEnabled(boolean)>(0);

        $r89 = virtualinvoke r102.<android.renderscript.ProgramStore$Builder: android.renderscript.ProgramStore create()>();

        r0.<com.android.musicvis.vis4.Visualization4RS: android.renderscript.ProgramStore mPfsBackground> = $r89;

        $r101 = r0.<com.android.musicvis.vis4.Visualization4RS: com.android.musicvis.vis4.ScriptC_vu mScript>;

        $r100 = r0.<com.android.musicvis.vis4.Visualization4RS: android.renderscript.ProgramStore mPfsBackground>;

        virtualinvoke $r101.<com.android.musicvis.vis4.ScriptC_vu: void set_gPFSBackground(android.renderscript.ProgramStore)>($r100);

        $r98 = r0.<com.android.musicvis.vis4.Visualization4RS: com.android.musicvis.vis4.ScriptC_vu mScript>;

        $r99 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        $r96 = virtualinvoke $r99.<java.util.TimeZone: java.lang.String getID()>();

        virtualinvoke $r98.<com.android.musicvis.vis4.ScriptC_vu: void setTimeZone(java.lang.String)>($r96);

        $r97 = r0.<com.android.musicvis.vis4.Visualization4RS: com.android.musicvis.vis4.ScriptC_vu mScript>;

        return $r97;
    }

    public void start()
    {
        com.android.musicvis.vis4.Visualization4RS r0;
        com.android.musicvis.AudioCapture $r1, $r2, $r3;

        r0 := @this: com.android.musicvis.vis4.Visualization4RS;

        specialinvoke r0.<com.android.musicvis.RenderScriptScene: void start()>();

        r0.<com.android.musicvis.vis4.Visualization4RS: boolean mVisible> = 1;

        $r1 = r0.<com.android.musicvis.vis4.Visualization4RS: com.android.musicvis.AudioCapture mAudioCapture>;

        if $r1 != null goto label1;

        $r3 = new com.android.musicvis.AudioCapture;

        specialinvoke $r3.<com.android.musicvis.AudioCapture: void <init>(int,int)>(0, 1024);

        r0.<com.android.musicvis.vis4.Visualization4RS: com.android.musicvis.AudioCapture mAudioCapture> = $r3;

     label1:
        $r2 = r0.<com.android.musicvis.vis4.Visualization4RS: com.android.musicvis.AudioCapture mAudioCapture>;

        virtualinvoke $r2.<com.android.musicvis.AudioCapture: void start()>();

        virtualinvoke r0.<com.android.musicvis.vis4.Visualization4RS: void updateWave()>();

        return;
    }

    public void stop()
    {
        com.android.musicvis.vis4.Visualization4RS r0;
        com.android.musicvis.AudioCapture $r1, $r2, $r3;

        r0 := @this: com.android.musicvis.vis4.Visualization4RS;

        specialinvoke r0.<com.android.musicvis.RenderScriptScene: void stop()>();

        r0.<com.android.musicvis.vis4.Visualization4RS: boolean mVisible> = 0;

        $r1 = r0.<com.android.musicvis.vis4.Visualization4RS: com.android.musicvis.AudioCapture mAudioCapture>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.musicvis.vis4.Visualization4RS: com.android.musicvis.AudioCapture mAudioCapture>;

        virtualinvoke $r2.<com.android.musicvis.AudioCapture: void stop()>();

        $r3 = r0.<com.android.musicvis.vis4.Visualization4RS: com.android.musicvis.AudioCapture mAudioCapture>;

        virtualinvoke $r3.<com.android.musicvis.AudioCapture: void release()>();

        r0.<com.android.musicvis.vis4.Visualization4RS: com.android.musicvis.AudioCapture mAudioCapture> = null;

     label1:
        return;
    }

    void updateWave()
    {
        com.android.musicvis.vis4.Visualization4RS r0;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, i25;
        java.lang.Runnable $r1, $r3;
        android.os.Handler $r2, $r4;
        boolean $z0;
        com.android.musicvis.AudioCapture $r5, $r17;
        com.android.musicvis.vis4.Visualization4RS$WorldState $r6, $r8, $r9, $r11, $r12, $r13;
        float $f0, $f1, $f2, $f3;
        com.android.musicvis.vis4.ScriptC_vu $r7, $r10;
        int[] $r14, $r15, $r16;

        r0 := @this: com.android.musicvis.vis4.Visualization4RS;

        $r2 = r0.<com.android.musicvis.vis4.Visualization4RS: android.os.Handler mHandler>;

        $r1 = r0.<com.android.musicvis.vis4.Visualization4RS: java.lang.Runnable mDrawCube>;

        virtualinvoke $r2.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r1);

        $z0 = r0.<com.android.musicvis.vis4.Visualization4RS: boolean mVisible>;

        if $z0 != 0 goto label01;

        return;

     label01:
        $r4 = r0.<com.android.musicvis.vis4.Visualization4RS: android.os.Handler mHandler>;

        $r3 = r0.<com.android.musicvis.vis4.Visualization4RS: java.lang.Runnable mDrawCube>;

        virtualinvoke $r4.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r3, 20L);

        i0 = 0;

        $r5 = r0.<com.android.musicvis.vis4.Visualization4RS: com.android.musicvis.AudioCapture mAudioCapture>;

        if $r5 == null goto label02;

        $r17 = r0.<com.android.musicvis.vis4.Visualization4RS: com.android.musicvis.AudioCapture mAudioCapture>;

        $r14 = virtualinvoke $r17.<com.android.musicvis.AudioCapture: int[] getFormattedData(int,int)>(512, 1);

        r0.<com.android.musicvis.vis4.Visualization4RS: int[] mVizData> = $r14;

        $r15 = r0.<com.android.musicvis.vis4.Visualization4RS: int[] mVizData>;

        i0 = lengthof $r15;

     label02:
        i1 = 0;

        if i0 <= 0 goto label06;

        i2 = 0;

     label03:
        if i2 >= i0 goto label05;

        $r16 = r0.<com.android.musicvis.vis4.Visualization4RS: int[] mVizData>;

        i3 = $r16[i2];

        if i3 >= 0 goto label04;

        i3 = neg i3;

     label04:
        i1 = i1 + i3;

        i2 = i2 + 1;

        goto label03;

     label05:
        i1 = i1 / i0;

     label06:
        $i4 = r0.<com.android.musicvis.vis4.Visualization4RS: int mNeedleSpeed>;

        $i5 = $i4 * 3;

        $i8 = i1 - $i5;

        $i7 = r0.<com.android.musicvis.vis4.Visualization4RS: int mNeedlePos>;

        $i6 = r0.<com.android.musicvis.vis4.Visualization4RS: int mSpringForceAtOrigin>;

        $i9 = $i7 + $i6;

        i24 = $i8 - $i9;

        $i11 = r0.<com.android.musicvis.vis4.Visualization4RS: int mNeedleMass>;

        i25 = i24 / $i11;

        $i10 = r0.<com.android.musicvis.vis4.Visualization4RS: int mNeedleSpeed>;

        $i13 = $i10 + i25;

        r0.<com.android.musicvis.vis4.Visualization4RS: int mNeedleSpeed> = $i13;

        $i15 = r0.<com.android.musicvis.vis4.Visualization4RS: int mNeedlePos>;

        $i12 = r0.<com.android.musicvis.vis4.Visualization4RS: int mNeedleSpeed>;

        $i14 = $i15 + $i12;

        r0.<com.android.musicvis.vis4.Visualization4RS: int mNeedlePos> = $i14;

        $i17 = r0.<com.android.musicvis.vis4.Visualization4RS: int mNeedlePos>;

        if $i17 >= 0 goto label07;

        r0.<com.android.musicvis.vis4.Visualization4RS: int mNeedlePos> = 0;

        r0.<com.android.musicvis.vis4.Visualization4RS: int mNeedleSpeed> = 0;

        goto label09;

     label07:
        $i16 = r0.<com.android.musicvis.vis4.Visualization4RS: int mNeedlePos>;

        if $i16 <= 32767 goto label09;

        $i21 = r0.<com.android.musicvis.vis4.Visualization4RS: int mNeedlePos>;

        if $i21 <= 33333 goto label08;

        $r13 = r0.<com.android.musicvis.vis4.Visualization4RS: com.android.musicvis.vis4.Visualization4RS$WorldState mWorldState>;

        $r13.<com.android.musicvis.vis4.Visualization4RS$WorldState: int mPeak> = 10;

     label08:
        r0.<com.android.musicvis.vis4.Visualization4RS: int mNeedlePos> = 32767;

        r0.<com.android.musicvis.vis4.Visualization4RS: int mNeedleSpeed> = 0;

     label09:
        $r6 = r0.<com.android.musicvis.vis4.Visualization4RS: com.android.musicvis.vis4.Visualization4RS$WorldState mWorldState>;

        $i18 = $r6.<com.android.musicvis.vis4.Visualization4RS$WorldState: int mPeak>;

        if $i18 <= 0 goto label10;

        $r11 = r0.<com.android.musicvis.vis4.Visualization4RS: com.android.musicvis.vis4.Visualization4RS$WorldState mWorldState>;

        $i22 = $r11.<com.android.musicvis.vis4.Visualization4RS$WorldState: int mPeak>;

        $i23 = $i22 - 1;

        $r11.<com.android.musicvis.vis4.Visualization4RS$WorldState: int mPeak> = $i23;

     label10:
        $r8 = r0.<com.android.musicvis.vis4.Visualization4RS: com.android.musicvis.vis4.Visualization4RS$WorldState mWorldState>;

        $i19 = r0.<com.android.musicvis.vis4.Visualization4RS: int mNeedlePos>;

        $f0 = (float) $i19;

        $f2 = $f0 / 410.0F;

        $f1 = 131.0F - $f2;

        $r8.<com.android.musicvis.vis4.Visualization4RS$WorldState: float mAngle> = $f1;

        $r7 = r0.<com.android.musicvis.vis4.Visualization4RS: com.android.musicvis.vis4.ScriptC_vu mScript>;

        $r9 = r0.<com.android.musicvis.vis4.Visualization4RS: com.android.musicvis.vis4.Visualization4RS$WorldState mWorldState>;

        $f3 = $r9.<com.android.musicvis.vis4.Visualization4RS$WorldState: float mAngle>;

        virtualinvoke $r7.<com.android.musicvis.vis4.ScriptC_vu: void set_gAngle(float)>($f3);

        $r10 = r0.<com.android.musicvis.vis4.Visualization4RS: com.android.musicvis.vis4.ScriptC_vu mScript>;

        $r12 = r0.<com.android.musicvis.vis4.Visualization4RS: com.android.musicvis.vis4.Visualization4RS$WorldState mWorldState>;

        $i20 = $r12.<com.android.musicvis.vis4.Visualization4RS$WorldState: int mPeak>;

        virtualinvoke $r10.<com.android.musicvis.vis4.ScriptC_vu: void set_gPeak(int)>($i20);

        return;
    }

    public static void <clinit>()
    {
        <com.android.musicvis.vis4.Visualization4RS: int RSID_PROGRAMVERTEX> = 3;

        <com.android.musicvis.vis4.Visualization4RS: int RSID_LINES> = 2;

        <com.android.musicvis.vis4.Visualization4RS: int RSID_POINTS> = 1;

        <com.android.musicvis.vis4.Visualization4RS: int RSID_STATE> = 0;

        return;
    }
}
