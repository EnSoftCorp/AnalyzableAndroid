public class com.android.musicvis.GenericWaveRS extends com.android.musicvis.RenderScriptScene
{
    private final android.os.Handler mHandler;
    private final java.lang.Runnable mDrawCube;
    private boolean mVisible;
    private int mTexId;
    protected com.android.musicvis.GenericWaveRS$WorldState mWorldState;
    com.android.musicvis.ScriptC_waveform mScript;
    private com.android.musicvis.ScriptField_Vertex mVertexBuffer;
    private android.renderscript.Mesh mCubeMesh;
    protected android.renderscript.Allocation mPointAlloc;
    protected float[] mPointData;
    private android.renderscript.ProgramVertex mPVBackground;
    private android.renderscript.ProgramVertexFixedFunction$Constants mPVAlloc;
    protected com.android.musicvis.AudioCapture mAudioCapture;
    protected int[] mVizData;
    private android.renderscript.ProgramFragment mPfBackground;
    private android.renderscript.Sampler mSampler;
    private android.renderscript.Allocation mTexture;
    private static final int RSID_STATE;
    private static final int RSID_POINTS;
    private static final int RSID_LINES;
    private static final int RSID_PROGRAMVERTEX;

    protected void <init>(int, int, int)
    {
        com.android.musicvis.GenericWaveRS r0;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        android.os.Handler $r1;
        com.android.musicvis.GenericWaveRS$1 $r2;
        com.android.musicvis.GenericWaveRS$WorldState $r3;
        float[] $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        int[] $r5;
        float $f0, $f1;

        r0 := @this: com.android.musicvis.GenericWaveRS;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<com.android.musicvis.RenderScriptScene: void <init>(int,int)>(i0, i1);

        $r1 = new android.os.Handler;

        specialinvoke $r1.<android.os.Handler: void <init>()>();

        r0.<com.android.musicvis.GenericWaveRS: android.os.Handler mHandler> = $r1;

        $r2 = new com.android.musicvis.GenericWaveRS$1;

        specialinvoke $r2.<com.android.musicvis.GenericWaveRS$1: void <init>(com.android.musicvis.GenericWaveRS)>(r0);

        r0.<com.android.musicvis.GenericWaveRS: java.lang.Runnable mDrawCube> = $r2;

        $r3 = new com.android.musicvis.GenericWaveRS$WorldState;

        specialinvoke $r3.<com.android.musicvis.GenericWaveRS$WorldState: void <init>()>();

        r0.<com.android.musicvis.GenericWaveRS: com.android.musicvis.GenericWaveRS$WorldState mWorldState> = $r3;

        $r4 = newarray (float)[8192];

        r0.<com.android.musicvis.GenericWaveRS: float[] mPointData> = $r4;

        r0.<com.android.musicvis.GenericWaveRS: com.android.musicvis.AudioCapture mAudioCapture> = null;

        $r5 = newarray (int)[1024];

        r0.<com.android.musicvis.GenericWaveRS: int[] mVizData> = $r5;

        r0.<com.android.musicvis.GenericWaveRS: int mTexId> = i2;

        r0.<com.android.musicvis.GenericWaveRS: int mWidth> = i0;

        r0.<com.android.musicvis.GenericWaveRS: int mHeight> = i1;

        $r6 = r0.<com.android.musicvis.GenericWaveRS: float[] mPointData>;

        $i6 = lengthof $r6;

        i3 = $i6 / 8;

        i4 = i3 / 2;

        i5 = 0;

     label1:
        if i5 >= i3 goto label2;

        $r7 = r0.<com.android.musicvis.GenericWaveRS: float[] mPointData>;

        $i8 = i5 * 8;

        $i7 = i5 - i4;

        $f0 = (float) $i7;

        $r7[$i8] = $f0;

        $r8 = r0.<com.android.musicvis.GenericWaveRS: float[] mPointData>;

        $i10 = i5 * 8;

        $i9 = $i10 + 2;

        $r8[$i9] = 0.0F;

        $r9 = r0.<com.android.musicvis.GenericWaveRS: float[] mPointData>;

        $i11 = i5 * 8;

        $i12 = $i11 + 3;

        $r9[$i12] = 0.0F;

        $r10 = r0.<com.android.musicvis.GenericWaveRS: float[] mPointData>;

        $i14 = i5 * 8;

        $i15 = $i14 + 4;

        $i13 = i5 - i4;

        $f1 = (float) $i13;

        $r10[$i15] = $f1;

        $r11 = r0.<com.android.musicvis.GenericWaveRS: float[] mPointData>;

        $i16 = i5 * 8;

        $i17 = $i16 + 6;

        $r11[$i17] = 1.0F;

        $r12 = r0.<com.android.musicvis.GenericWaveRS: float[] mPointData>;

        $i18 = i5 * 8;

        $i19 = $i18 + 7;

        $r12[$i19] = 0.0F;

        i5 = i5 + 1;

        goto label1;

     label2:
        return;
    }

    public void resize(int, int)
    {
        com.android.musicvis.GenericWaveRS r0;
        int i0, i1, $i2, $i3;
        android.renderscript.Matrix4f r1, $r4;
        com.android.musicvis.GenericWaveRS$WorldState $r2;
        android.renderscript.ProgramVertexFixedFunction$Constants $r3, $r5;

        r0 := @this: com.android.musicvis.GenericWaveRS;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<com.android.musicvis.RenderScriptScene: void resize(int,int)>(i0, i1);

        $r2 = r0.<com.android.musicvis.GenericWaveRS: com.android.musicvis.GenericWaveRS$WorldState mWorldState>;

        $r2.<com.android.musicvis.GenericWaveRS$WorldState: int width> = i0;

        $r3 = r0.<com.android.musicvis.GenericWaveRS: android.renderscript.ProgramVertexFixedFunction$Constants mPVAlloc>;

        if $r3 == null goto label1;

        $r4 = new android.renderscript.Matrix4f;

        specialinvoke $r4.<android.renderscript.Matrix4f: void <init>()>();

        r1 = $r4;

        $i3 = r0.<com.android.musicvis.GenericWaveRS: int mWidth>;

        $i2 = r0.<com.android.musicvis.GenericWaveRS: int mHeight>;

        virtualinvoke r1.<android.renderscript.Matrix4f: void loadProjectionNormalized(int,int)>($i3, $i2);

        $r5 = r0.<com.android.musicvis.GenericWaveRS: android.renderscript.ProgramVertexFixedFunction$Constants mPVAlloc>;

        virtualinvoke $r5.<android.renderscript.ProgramVertexFixedFunction$Constants: void setProjection(android.renderscript.Matrix4f)>(r1);

     label1:
        return;
    }

    protected android.renderscript.ScriptC createScript()
    {
        com.android.musicvis.GenericWaveRS r0;
        android.renderscript.ProgramVertexFixedFunction$Builder r1, $r11;
        android.renderscript.Matrix4f r2, $r19;
        android.renderscript.Mesh$AllocationBuilder r3, $r25;
        android.renderscript.Sampler$Builder r4, $r53;
        android.renderscript.ProgramFragmentFixedFunction$Builder r5, $r54;
        com.android.musicvis.ScriptC_waveform $r6, $r21, $r35, $r39, $r41, $r46, $r66, $r67;
        android.content.res.Resources $r7, $r43;
        android.renderscript.RenderScriptGL $r8, $r12, $r16, $r26, $r29, $r49, $r52, $r62;
        com.android.musicvis.GenericWaveRS$WorldState $r9, $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        android.renderscript.ProgramVertexFixedFunction $r13, $r17;
        android.renderscript.ProgramVertexFixedFunction$Constants $r14, $r18, $r20;
        android.renderscript.ProgramVertex $r15, $r22;
        float[] $r23, $r40;
        com.android.musicvis.ScriptField_Vertex $r24, $r30, $r32, $r38;
        android.renderscript.Allocation $r27, $r36, $r37, $r45, $r47, $r48;
        android.renderscript.Mesh $r31, $r42;
        android.renderscript.Mesh$Primitive $r33;
        android.renderscript.Allocation$MipmapControl $r44;
        android.renderscript.Sampler$Value $r50, $r51, $r56, $r57;
        android.renderscript.Sampler $r55, $r59;
        android.renderscript.ProgramFragmentFixedFunction $r58;
        android.renderscript.ProgramFragment $r60, $r61;
        android.renderscript.ProgramFragmentFixedFunction$Builder$Format $r63;
        android.renderscript.ProgramFragmentFixedFunction$Builder$EnvMode $r64;

        r0 := @this: com.android.musicvis.GenericWaveRS;

        $r6 = new com.android.musicvis.ScriptC_waveform;

        $r8 = r0.<com.android.musicvis.GenericWaveRS: android.renderscript.RenderScriptGL mRS>;

        $r7 = r0.<com.android.musicvis.GenericWaveRS: android.content.res.Resources mResources>;

        specialinvoke $r6.<com.android.musicvis.ScriptC_waveform: void <init>(android.renderscript.RenderScript,android.content.res.Resources,int)>($r8, $r7, 2130968578);

        r0.<com.android.musicvis.GenericWaveRS: com.android.musicvis.ScriptC_waveform mScript> = $r6;

        $r9 = r0.<com.android.musicvis.GenericWaveRS: com.android.musicvis.GenericWaveRS$WorldState mWorldState>;

        $r9.<com.android.musicvis.GenericWaveRS$WorldState: float yRotation> = 0.0F;

        $r10 = r0.<com.android.musicvis.GenericWaveRS: com.android.musicvis.GenericWaveRS$WorldState mWorldState>;

        $i0 = r0.<com.android.musicvis.GenericWaveRS: int mWidth>;

        $r10.<com.android.musicvis.GenericWaveRS$WorldState: int width> = $i0;

        virtualinvoke r0.<com.android.musicvis.GenericWaveRS: void updateWorldState()>();

        $r11 = new android.renderscript.ProgramVertexFixedFunction$Builder;

        $r12 = r0.<com.android.musicvis.GenericWaveRS: android.renderscript.RenderScriptGL mRS>;

        specialinvoke $r11.<android.renderscript.ProgramVertexFixedFunction$Builder: void <init>(android.renderscript.RenderScript)>($r12);

        r1 = $r11;

        $r13 = virtualinvoke r1.<android.renderscript.ProgramVertexFixedFunction$Builder: android.renderscript.ProgramVertexFixedFunction create()>();

        r0.<com.android.musicvis.GenericWaveRS: android.renderscript.ProgramVertex mPVBackground> = $r13;

        $r14 = new android.renderscript.ProgramVertexFixedFunction$Constants;

        $r16 = r0.<com.android.musicvis.GenericWaveRS: android.renderscript.RenderScriptGL mRS>;

        specialinvoke $r14.<android.renderscript.ProgramVertexFixedFunction$Constants: void <init>(android.renderscript.RenderScript)>($r16);

        r0.<com.android.musicvis.GenericWaveRS: android.renderscript.ProgramVertexFixedFunction$Constants mPVAlloc> = $r14;

        $r15 = r0.<com.android.musicvis.GenericWaveRS: android.renderscript.ProgramVertex mPVBackground>;

        $r17 = (android.renderscript.ProgramVertexFixedFunction) $r15;

        $r18 = r0.<com.android.musicvis.GenericWaveRS: android.renderscript.ProgramVertexFixedFunction$Constants mPVAlloc>;

        virtualinvoke $r17.<android.renderscript.ProgramVertexFixedFunction: void bindConstants(android.renderscript.ProgramVertexFixedFunction$Constants)>($r18);

        $r19 = new android.renderscript.Matrix4f;

        specialinvoke $r19.<android.renderscript.Matrix4f: void <init>()>();

        r2 = $r19;

        $i2 = r0.<com.android.musicvis.GenericWaveRS: int mWidth>;

        $i1 = r0.<com.android.musicvis.GenericWaveRS: int mHeight>;

        virtualinvoke r2.<android.renderscript.Matrix4f: void loadProjectionNormalized(int,int)>($i2, $i1);

        $r20 = r0.<com.android.musicvis.GenericWaveRS: android.renderscript.ProgramVertexFixedFunction$Constants mPVAlloc>;

        virtualinvoke $r20.<android.renderscript.ProgramVertexFixedFunction$Constants: void setProjection(android.renderscript.Matrix4f)>(r2);

        $r21 = r0.<com.android.musicvis.GenericWaveRS: com.android.musicvis.ScriptC_waveform mScript>;

        $r22 = r0.<com.android.musicvis.GenericWaveRS: android.renderscript.ProgramVertex mPVBackground>;

        virtualinvoke $r21.<com.android.musicvis.ScriptC_waveform: void set_gPVBackground(android.renderscript.ProgramVertex)>($r22);

        $r24 = new com.android.musicvis.ScriptField_Vertex;

        $r26 = r0.<com.android.musicvis.GenericWaveRS: android.renderscript.RenderScriptGL mRS>;

        $r23 = r0.<com.android.musicvis.GenericWaveRS: float[] mPointData>;

        $i4 = lengthof $r23;

        $i3 = $i4 / 4;

        specialinvoke $r24.<com.android.musicvis.ScriptField_Vertex: void <init>(android.renderscript.RenderScript,int)>($r26, $i3);

        r0.<com.android.musicvis.GenericWaveRS: com.android.musicvis.ScriptField_Vertex mVertexBuffer> = $r24;

        $r25 = new android.renderscript.Mesh$AllocationBuilder;

        $r29 = r0.<com.android.musicvis.GenericWaveRS: android.renderscript.RenderScriptGL mRS>;

        specialinvoke $r25.<android.renderscript.Mesh$AllocationBuilder: void <init>(android.renderscript.RenderScript)>($r29);

        r3 = $r25;

        $r30 = r0.<com.android.musicvis.GenericWaveRS: com.android.musicvis.ScriptField_Vertex mVertexBuffer>;

        $r27 = virtualinvoke $r30.<com.android.musicvis.ScriptField_Vertex: android.renderscript.Allocation getAllocation()>();

        virtualinvoke r3.<android.renderscript.Mesh$AllocationBuilder: android.renderscript.Mesh$AllocationBuilder addVertexAllocation(android.renderscript.Allocation)>($r27);

        $r33 = <android.renderscript.Mesh$Primitive: android.renderscript.Mesh$Primitive TRIANGLE_STRIP>;

        virtualinvoke r3.<android.renderscript.Mesh$AllocationBuilder: android.renderscript.Mesh$AllocationBuilder addIndexSetType(android.renderscript.Mesh$Primitive)>($r33);

        $r31 = virtualinvoke r3.<android.renderscript.Mesh$AllocationBuilder: android.renderscript.Mesh create()>();

        r0.<com.android.musicvis.GenericWaveRS: android.renderscript.Mesh mCubeMesh> = $r31;

        $r32 = r0.<com.android.musicvis.GenericWaveRS: com.android.musicvis.ScriptField_Vertex mVertexBuffer>;

        $r37 = virtualinvoke $r32.<com.android.musicvis.ScriptField_Vertex: android.renderscript.Allocation getAllocation()>();

        r0.<com.android.musicvis.GenericWaveRS: android.renderscript.Allocation mPointAlloc> = $r37;

        $r35 = r0.<com.android.musicvis.GenericWaveRS: com.android.musicvis.ScriptC_waveform mScript>;

        $r38 = r0.<com.android.musicvis.GenericWaveRS: com.android.musicvis.ScriptField_Vertex mVertexBuffer>;

        virtualinvoke $r35.<com.android.musicvis.ScriptC_waveform: void bind_gPoints(com.android.musicvis.ScriptField_Vertex)>($r38);

        $r41 = r0.<com.android.musicvis.GenericWaveRS: com.android.musicvis.ScriptC_waveform mScript>;

        $r36 = r0.<com.android.musicvis.GenericWaveRS: android.renderscript.Allocation mPointAlloc>;

        virtualinvoke $r41.<com.android.musicvis.ScriptC_waveform: void set_gPointBuffer(android.renderscript.Allocation)>($r36);

        $r39 = r0.<com.android.musicvis.GenericWaveRS: com.android.musicvis.ScriptC_waveform mScript>;

        $r42 = r0.<com.android.musicvis.GenericWaveRS: android.renderscript.Mesh mCubeMesh>;

        virtualinvoke $r39.<com.android.musicvis.ScriptC_waveform: void set_gCubeMesh(android.renderscript.Mesh)>($r42);

        $r45 = r0.<com.android.musicvis.GenericWaveRS: android.renderscript.Allocation mPointAlloc>;

        $r40 = r0.<com.android.musicvis.GenericWaveRS: float[] mPointData>;

        virtualinvoke $r45.<android.renderscript.Allocation: void copyFromUnchecked(float[])>($r40);

        $r49 = r0.<com.android.musicvis.GenericWaveRS: android.renderscript.RenderScriptGL mRS>;

        $r43 = r0.<com.android.musicvis.GenericWaveRS: android.content.res.Resources mResources>;

        $i5 = r0.<com.android.musicvis.GenericWaveRS: int mTexId>;

        $r44 = <android.renderscript.Allocation$MipmapControl: android.renderscript.Allocation$MipmapControl MIPMAP_NONE>;

        $r48 = staticinvoke <android.renderscript.Allocation: android.renderscript.Allocation createFromBitmapResource(android.renderscript.RenderScript,android.content.res.Resources,int,android.renderscript.Allocation$MipmapControl,int)>($r49, $r43, $i5, $r44, 2);

        r0.<com.android.musicvis.GenericWaveRS: android.renderscript.Allocation mTexture> = $r48;

        $r46 = r0.<com.android.musicvis.GenericWaveRS: com.android.musicvis.ScriptC_waveform mScript>;

        $r47 = r0.<com.android.musicvis.GenericWaveRS: android.renderscript.Allocation mTexture>;

        virtualinvoke $r46.<com.android.musicvis.ScriptC_waveform: void set_gTlinetexture(android.renderscript.Allocation)>($r47);

        $r53 = new android.renderscript.Sampler$Builder;

        $r52 = r0.<com.android.musicvis.GenericWaveRS: android.renderscript.RenderScriptGL mRS>;

        specialinvoke $r53.<android.renderscript.Sampler$Builder: void <init>(android.renderscript.RenderScript)>($r52);

        r4 = $r53;

        $r51 = <android.renderscript.Sampler$Value: android.renderscript.Sampler$Value LINEAR>;

        virtualinvoke r4.<android.renderscript.Sampler$Builder: void setMinification(android.renderscript.Sampler$Value)>($r51);

        $r50 = <android.renderscript.Sampler$Value: android.renderscript.Sampler$Value LINEAR>;

        virtualinvoke r4.<android.renderscript.Sampler$Builder: void setMagnification(android.renderscript.Sampler$Value)>($r50);

        $r57 = <android.renderscript.Sampler$Value: android.renderscript.Sampler$Value WRAP>;

        virtualinvoke r4.<android.renderscript.Sampler$Builder: void setWrapS(android.renderscript.Sampler$Value)>($r57);

        $r56 = <android.renderscript.Sampler$Value: android.renderscript.Sampler$Value WRAP>;

        virtualinvoke r4.<android.renderscript.Sampler$Builder: void setWrapT(android.renderscript.Sampler$Value)>($r56);

        $r55 = virtualinvoke r4.<android.renderscript.Sampler$Builder: android.renderscript.Sampler create()>();

        r0.<com.android.musicvis.GenericWaveRS: android.renderscript.Sampler mSampler> = $r55;

        $r54 = new android.renderscript.ProgramFragmentFixedFunction$Builder;

        $r62 = r0.<com.android.musicvis.GenericWaveRS: android.renderscript.RenderScriptGL mRS>;

        specialinvoke $r54.<android.renderscript.ProgramFragmentFixedFunction$Builder: void <init>(android.renderscript.RenderScript)>($r62);

        r5 = $r54;

        $r64 = <android.renderscript.ProgramFragmentFixedFunction$Builder$EnvMode: android.renderscript.ProgramFragmentFixedFunction$Builder$EnvMode REPLACE>;

        $r63 = <android.renderscript.ProgramFragmentFixedFunction$Builder$Format: android.renderscript.ProgramFragmentFixedFunction$Builder$Format RGBA>;

        virtualinvoke r5.<android.renderscript.ProgramFragmentFixedFunction$Builder: android.renderscript.ProgramFragmentFixedFunction$Builder setTexture(android.renderscript.ProgramFragmentFixedFunction$Builder$EnvMode,android.renderscript.ProgramFragmentFixedFunction$Builder$Format,int)>($r64, $r63, 0);

        $r58 = virtualinvoke r5.<android.renderscript.ProgramFragmentFixedFunction$Builder: android.renderscript.ProgramFragmentFixedFunction create()>();

        r0.<com.android.musicvis.GenericWaveRS: android.renderscript.ProgramFragment mPfBackground> = $r58;

        $r60 = r0.<com.android.musicvis.GenericWaveRS: android.renderscript.ProgramFragment mPfBackground>;

        $r59 = r0.<com.android.musicvis.GenericWaveRS: android.renderscript.Sampler mSampler>;

        virtualinvoke $r60.<android.renderscript.ProgramFragment: void bindSampler(android.renderscript.Sampler,int)>($r59, 0);

        $r66 = r0.<com.android.musicvis.GenericWaveRS: com.android.musicvis.ScriptC_waveform mScript>;

        $r61 = r0.<com.android.musicvis.GenericWaveRS: android.renderscript.ProgramFragment mPfBackground>;

        virtualinvoke $r66.<com.android.musicvis.ScriptC_waveform: void set_gPFBackground(android.renderscript.ProgramFragment)>($r61);

        $r67 = r0.<com.android.musicvis.GenericWaveRS: com.android.musicvis.ScriptC_waveform mScript>;

        return $r67;
    }

    public void setOffset(float, float, int, int)
    {
        com.android.musicvis.GenericWaveRS r0;
        float f0, f1, $f2, $f3;
        int i0, i1;
        com.android.musicvis.GenericWaveRS$WorldState $r1;

        r0 := @this: com.android.musicvis.GenericWaveRS;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r1 = r0.<com.android.musicvis.GenericWaveRS: com.android.musicvis.GenericWaveRS$WorldState mWorldState>;

        $f2 = f0 * 4.0F;

        $f3 = $f2 * 180.0F;

        $r1.<com.android.musicvis.GenericWaveRS$WorldState: float yRotation> = $f3;

        virtualinvoke r0.<com.android.musicvis.GenericWaveRS: void updateWorldState()>();

        return;
    }

    public void start()
    {
        com.android.musicvis.GenericWaveRS r0;
        com.android.musicvis.AudioCapture $r1, $r2;

        r0 := @this: com.android.musicvis.GenericWaveRS;

        specialinvoke r0.<com.android.musicvis.RenderScriptScene: void start()>();

        r0.<com.android.musicvis.GenericWaveRS: boolean mVisible> = 1;

        $r1 = r0.<com.android.musicvis.GenericWaveRS: com.android.musicvis.AudioCapture mAudioCapture>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.musicvis.GenericWaveRS: com.android.musicvis.AudioCapture mAudioCapture>;

        virtualinvoke $r2.<com.android.musicvis.AudioCapture: void start()>();

     label1:
        staticinvoke <android.os.SystemClock: void sleep(long)>(200L);

        virtualinvoke r0.<com.android.musicvis.GenericWaveRS: void updateWave()>();

        return;
    }

    public void stop()
    {
        com.android.musicvis.GenericWaveRS r0;
        com.android.musicvis.AudioCapture $r1, $r2;

        r0 := @this: com.android.musicvis.GenericWaveRS;

        specialinvoke r0.<com.android.musicvis.RenderScriptScene: void stop()>();

        r0.<com.android.musicvis.GenericWaveRS: boolean mVisible> = 0;

        $r1 = r0.<com.android.musicvis.GenericWaveRS: com.android.musicvis.AudioCapture mAudioCapture>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.musicvis.GenericWaveRS: com.android.musicvis.AudioCapture mAudioCapture>;

        virtualinvoke $r2.<com.android.musicvis.AudioCapture: void stop()>();

     label1:
        virtualinvoke r0.<com.android.musicvis.GenericWaveRS: void updateWave()>();

        return;
    }

    public void update()
    {
        com.android.musicvis.GenericWaveRS r0;

        r0 := @this: com.android.musicvis.GenericWaveRS;

        return;
    }

    void updateWave()
    {
        com.android.musicvis.GenericWaveRS r0;
        java.lang.Runnable $r1, $r3;
        android.os.Handler $r2, $r4;
        boolean $z0;
        com.android.musicvis.GenericWaveRS$WorldState $r5;
        int $i0, $i1;

        r0 := @this: com.android.musicvis.GenericWaveRS;

        $r2 = r0.<com.android.musicvis.GenericWaveRS: android.os.Handler mHandler>;

        $r1 = r0.<com.android.musicvis.GenericWaveRS: java.lang.Runnable mDrawCube>;

        virtualinvoke $r2.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r1);

        $z0 = r0.<com.android.musicvis.GenericWaveRS: boolean mVisible>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r4 = r0.<com.android.musicvis.GenericWaveRS: android.os.Handler mHandler>;

        $r3 = r0.<com.android.musicvis.GenericWaveRS: java.lang.Runnable mDrawCube>;

        virtualinvoke $r4.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>($r3, 20L);

        virtualinvoke r0.<com.android.musicvis.GenericWaveRS: void update()>();

        $r5 = r0.<com.android.musicvis.GenericWaveRS: com.android.musicvis.GenericWaveRS$WorldState mWorldState>;

        $i0 = $r5.<com.android.musicvis.GenericWaveRS$WorldState: int waveCounter>;

        $i1 = $i0 + 1;

        $r5.<com.android.musicvis.GenericWaveRS$WorldState: int waveCounter> = $i1;

        virtualinvoke r0.<com.android.musicvis.GenericWaveRS: void updateWorldState()>();

        return;
    }

    protected void updateWorldState()
    {
        com.android.musicvis.GenericWaveRS r0;
        com.android.musicvis.GenericWaveRS$WorldState $r1, $r3, $r5, $r7;
        float $f0;
        com.android.musicvis.ScriptC_waveform $r2, $r4, $r6, $r8;
        int $i0, $i1, $i2;

        r0 := @this: com.android.musicvis.GenericWaveRS;

        $r2 = r0.<com.android.musicvis.GenericWaveRS: com.android.musicvis.ScriptC_waveform mScript>;

        $r1 = r0.<com.android.musicvis.GenericWaveRS: com.android.musicvis.GenericWaveRS$WorldState mWorldState>;

        $f0 = $r1.<com.android.musicvis.GenericWaveRS$WorldState: float yRotation>;

        virtualinvoke $r2.<com.android.musicvis.ScriptC_waveform: void set_gYRotation(float)>($f0);

        $r4 = r0.<com.android.musicvis.GenericWaveRS: com.android.musicvis.ScriptC_waveform mScript>;

        $r3 = r0.<com.android.musicvis.GenericWaveRS: com.android.musicvis.GenericWaveRS$WorldState mWorldState>;

        $i0 = $r3.<com.android.musicvis.GenericWaveRS$WorldState: int idle>;

        virtualinvoke $r4.<com.android.musicvis.ScriptC_waveform: void set_gIdle(int)>($i0);

        $r6 = r0.<com.android.musicvis.GenericWaveRS: com.android.musicvis.ScriptC_waveform mScript>;

        $r5 = r0.<com.android.musicvis.GenericWaveRS: com.android.musicvis.GenericWaveRS$WorldState mWorldState>;

        $i1 = $r5.<com.android.musicvis.GenericWaveRS$WorldState: int waveCounter>;

        virtualinvoke $r6.<com.android.musicvis.ScriptC_waveform: void set_gWaveCounter(int)>($i1);

        $r8 = r0.<com.android.musicvis.GenericWaveRS: com.android.musicvis.ScriptC_waveform mScript>;

        $r7 = r0.<com.android.musicvis.GenericWaveRS: com.android.musicvis.GenericWaveRS$WorldState mWorldState>;

        $i2 = $r7.<com.android.musicvis.GenericWaveRS$WorldState: int width>;

        virtualinvoke $r8.<com.android.musicvis.ScriptC_waveform: void set_gWidth(int)>($i2);

        return;
    }

    public static void <clinit>()
    {
        <com.android.musicvis.GenericWaveRS: int RSID_PROGRAMVERTEX> = 3;

        <com.android.musicvis.GenericWaveRS: int RSID_LINES> = 2;

        <com.android.musicvis.GenericWaveRS: int RSID_POINTS> = 1;

        <com.android.musicvis.GenericWaveRS: int RSID_STATE> = 0;

        return;
    }
}
