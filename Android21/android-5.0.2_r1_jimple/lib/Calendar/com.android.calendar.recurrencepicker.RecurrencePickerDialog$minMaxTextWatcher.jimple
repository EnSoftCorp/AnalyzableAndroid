class com.android.calendar.recurrencepicker.RecurrencePickerDialog$minMaxTextWatcher extends java.lang.Object implements android.text.TextWatcher
{
    private int mMin;
    private int mMax;
    private int mDefault;
    final com.android.calendar.recurrencepicker.RecurrencePickerDialog this$0;

    public void <init>(com.android.calendar.recurrencepicker.RecurrencePickerDialog, int, int, int)
    {
        com.android.calendar.recurrencepicker.RecurrencePickerDialog$minMaxTextWatcher r0;
        com.android.calendar.recurrencepicker.RecurrencePickerDialog r1;
        int i0, i1, i2;

        r0 := @this: com.android.calendar.recurrencepicker.RecurrencePickerDialog$minMaxTextWatcher;

        r1 := @parameter0: com.android.calendar.recurrencepicker.RecurrencePickerDialog;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$minMaxTextWatcher: com.android.calendar.recurrencepicker.RecurrencePickerDialog this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$minMaxTextWatcher: int mMin> = i0;

        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$minMaxTextWatcher: int mMax> = i2;

        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$minMaxTextWatcher: int mDefault> = i1;

        return;
    }

    public void afterTextChanged(android.text.Editable)
    {
        com.android.calendar.recurrencepicker.RecurrencePickerDialog$minMaxTextWatcher r0;
        android.text.Editable r1;
        boolean z0;
        int i0, $i1, $i2;
        java.lang.String $r3, $r5;
        com.android.calendar.recurrencepicker.RecurrencePickerDialog $r4;
        java.lang.NumberFormatException $r7;

        r0 := @this: com.android.calendar.recurrencepicker.RecurrencePickerDialog$minMaxTextWatcher;

        r1 := @parameter0: android.text.Editable;

        z0 = 0;

     label1:
        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

     label2:
        goto label4;

     label3:
        $r7 := @caughtexception;

        i0 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$minMaxTextWatcher: int mDefault>;

     label4:
        $i1 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$minMaxTextWatcher: int mMin>;

        if i0 >= $i1 goto label5;

        i0 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$minMaxTextWatcher: int mMin>;

        z0 = 1;

        goto label6;

     label5:
        $i2 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$minMaxTextWatcher: int mMax>;

        if i0 <= $i2 goto label6;

        z0 = 1;

        i0 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$minMaxTextWatcher: int mMax>;

     label6:
        if z0 == 0 goto label7;

        interfaceinvoke r1.<android.text.Editable: void clear()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        interfaceinvoke r1.<android.text.Editable: android.text.Editable append(java.lang.CharSequence)>($r5);

     label7:
        $r4 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$minMaxTextWatcher: com.android.calendar.recurrencepicker.RecurrencePickerDialog this$0>;

        staticinvoke <com.android.calendar.recurrencepicker.RecurrencePickerDialog: void access$000(com.android.calendar.recurrencepicker.RecurrencePickerDialog)>($r4);

        virtualinvoke r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$minMaxTextWatcher: void onChange(int)>(i0);

        return;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    void onChange(int)
    {
        com.android.calendar.recurrencepicker.RecurrencePickerDialog$minMaxTextWatcher r0;
        int i0;

        r0 := @this: com.android.calendar.recurrencepicker.RecurrencePickerDialog$minMaxTextWatcher;

        i0 := @parameter0: int;

        return;
    }

    public void beforeTextChanged(java.lang.CharSequence, int, int, int)
    {
        com.android.calendar.recurrencepicker.RecurrencePickerDialog$minMaxTextWatcher r0;
        java.lang.CharSequence r1;
        int i0, i1, i2;

        r0 := @this: com.android.calendar.recurrencepicker.RecurrencePickerDialog$minMaxTextWatcher;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        return;
    }

    public void onTextChanged(java.lang.CharSequence, int, int, int)
    {
        com.android.calendar.recurrencepicker.RecurrencePickerDialog$minMaxTextWatcher r0;
        java.lang.CharSequence r1;
        int i0, i1, i2;

        r0 := @this: com.android.calendar.recurrencepicker.RecurrencePickerDialog$minMaxTextWatcher;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        return;
    }
}
