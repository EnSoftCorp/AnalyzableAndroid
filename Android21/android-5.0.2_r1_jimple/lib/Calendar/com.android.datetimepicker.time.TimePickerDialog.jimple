public class com.android.datetimepicker.time.TimePickerDialog extends android.app.DialogFragment implements com.android.datetimepicker.time.RadialPickerLayout$OnValueSelectedListener
{
    private static final java.lang.String TAG;
    private static final java.lang.String KEY_HOUR_OF_DAY;
    private static final java.lang.String KEY_MINUTE;
    private static final java.lang.String KEY_IS_24_HOUR_VIEW;
    private static final java.lang.String KEY_CURRENT_ITEM_SHOWING;
    private static final java.lang.String KEY_IN_KB_MODE;
    private static final java.lang.String KEY_TYPED_TIMES;
    private static final java.lang.String KEY_DARK_THEME;
    public static final int HOUR_INDEX;
    public static final int MINUTE_INDEX;
    public static final int AMPM_INDEX;
    public static final int ENABLE_PICKER_INDEX;
    public static final int AM;
    public static final int PM;
    private static final int PULSE_ANIMATOR_DELAY;
    private com.android.datetimepicker.time.TimePickerDialog$OnTimeSetListener mCallback;
    private com.android.datetimepicker.HapticFeedbackController mHapticFeedbackController;
    private android.widget.TextView mDoneButton;
    private android.widget.TextView mHourView;
    private android.widget.TextView mHourSpaceView;
    private android.widget.TextView mMinuteView;
    private android.widget.TextView mMinuteSpaceView;
    private android.widget.TextView mAmPmTextView;
    private android.view.View mAmPmHitspace;
    private com.android.datetimepicker.time.RadialPickerLayout mTimePicker;
    private int mSelectedColor;
    private int mUnselectedColor;
    private java.lang.String mAmText;
    private java.lang.String mPmText;
    private boolean mAllowAutoAdvance;
    private int mInitialHourOfDay;
    private int mInitialMinute;
    private boolean mIs24HourMode;
    private boolean mThemeDark;
    private char mPlaceholderText;
    private java.lang.String mDoublePlaceholderText;
    private java.lang.String mDeletedKeyFormat;
    private boolean mInKbMode;
    private java.util.ArrayList mTypedTimes;
    private com.android.datetimepicker.time.TimePickerDialog$Node mLegalTimesTree;
    private int mAmKeyCode;
    private int mPmKeyCode;
    private java.lang.String mHourPickerDescription;
    private java.lang.String mSelectHours;
    private java.lang.String mMinutePickerDescription;
    private java.lang.String mSelectMinutes;

    public void <init>()
    {
        com.android.datetimepicker.time.TimePickerDialog r0;

        r0 := @this: com.android.datetimepicker.time.TimePickerDialog;

        specialinvoke r0.<android.app.DialogFragment: void <init>()>();

        return;
    }

    public void <init>(android.content.Context, int, com.android.datetimepicker.time.TimePickerDialog$OnTimeSetListener, int, int, boolean)
    {
        com.android.datetimepicker.time.TimePickerDialog r0;
        android.content.Context r1;
        int i0, i1, i2;
        com.android.datetimepicker.time.TimePickerDialog$OnTimeSetListener r2;
        boolean z0;

        r0 := @this: com.android.datetimepicker.time.TimePickerDialog;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r2 := @parameter2: com.android.datetimepicker.time.TimePickerDialog$OnTimeSetListener;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        z0 := @parameter5: boolean;

        specialinvoke r0.<android.app.DialogFragment: void <init>()>();

        return;
    }

    public static com.android.datetimepicker.time.TimePickerDialog newInstance(com.android.datetimepicker.time.TimePickerDialog$OnTimeSetListener, int, int, boolean)
    {
        com.android.datetimepicker.time.TimePickerDialog$OnTimeSetListener r0;
        int i0, i1;
        boolean z0;
        com.android.datetimepicker.time.TimePickerDialog r1, $r2;

        r0 := @parameter0: com.android.datetimepicker.time.TimePickerDialog$OnTimeSetListener;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        $r2 = new com.android.datetimepicker.time.TimePickerDialog;

        specialinvoke $r2.<com.android.datetimepicker.time.TimePickerDialog: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<com.android.datetimepicker.time.TimePickerDialog: void initialize(com.android.datetimepicker.time.TimePickerDialog$OnTimeSetListener,int,int,boolean)>(r0, i0, i1, z0);

        return r1;
    }

    public void initialize(com.android.datetimepicker.time.TimePickerDialog$OnTimeSetListener, int, int, boolean)
    {
        com.android.datetimepicker.time.TimePickerDialog r0;
        com.android.datetimepicker.time.TimePickerDialog$OnTimeSetListener r1;
        int i0, i1;
        boolean z0;

        r0 := @this: com.android.datetimepicker.time.TimePickerDialog;

        r1 := @parameter0: com.android.datetimepicker.time.TimePickerDialog$OnTimeSetListener;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.TimePickerDialog$OnTimeSetListener mCallback> = r1;

        r0.<com.android.datetimepicker.time.TimePickerDialog: int mInitialHourOfDay> = i0;

        r0.<com.android.datetimepicker.time.TimePickerDialog: int mInitialMinute> = i1;

        r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mIs24HourMode> = z0;

        r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mInKbMode> = 0;

        r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mThemeDark> = 0;

        return;
    }

    public void setThemeDark(boolean)
    {
        com.android.datetimepicker.time.TimePickerDialog r0;
        boolean z0;

        r0 := @this: com.android.datetimepicker.time.TimePickerDialog;

        z0 := @parameter0: boolean;

        r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mThemeDark> = z0;

        return;
    }

    public boolean isThemeDark()
    {
        com.android.datetimepicker.time.TimePickerDialog r0;
        boolean $z0;

        r0 := @this: com.android.datetimepicker.time.TimePickerDialog;

        $z0 = r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mThemeDark>;

        return $z0;
    }

    public void setOnTimeSetListener(com.android.datetimepicker.time.TimePickerDialog$OnTimeSetListener)
    {
        com.android.datetimepicker.time.TimePickerDialog r0;
        com.android.datetimepicker.time.TimePickerDialog$OnTimeSetListener r1;

        r0 := @this: com.android.datetimepicker.time.TimePickerDialog;

        r1 := @parameter0: com.android.datetimepicker.time.TimePickerDialog$OnTimeSetListener;

        r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.TimePickerDialog$OnTimeSetListener mCallback> = r1;

        return;
    }

    public void setStartTime(int, int)
    {
        com.android.datetimepicker.time.TimePickerDialog r0;
        int i0, i1;

        r0 := @this: com.android.datetimepicker.time.TimePickerDialog;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<com.android.datetimepicker.time.TimePickerDialog: int mInitialHourOfDay> = i0;

        r0.<com.android.datetimepicker.time.TimePickerDialog: int mInitialMinute> = i1;

        r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mInKbMode> = 0;

        return;
    }

    public void onCreate(android.os.Bundle)
    {
        com.android.datetimepicker.time.TimePickerDialog r0;
        android.os.Bundle r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        int $i0, $i1;

        r0 := @this: com.android.datetimepicker.time.TimePickerDialog;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.DialogFragment: void onCreate(android.os.Bundle)>(r1);

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("hour_of_day");

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("minute");

        if $z1 == 0 goto label1;

        $z2 = virtualinvoke r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("is_24_hour_view");

        if $z2 == 0 goto label1;

        $i0 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String)>("hour_of_day");

        r0.<com.android.datetimepicker.time.TimePickerDialog: int mInitialHourOfDay> = $i0;

        $i1 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String)>("minute");

        r0.<com.android.datetimepicker.time.TimePickerDialog: int mInitialMinute> = $i1;

        $z3 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("is_24_hour_view");

        r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mIs24HourMode> = $z3;

        $z4 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("in_kb_mode");

        r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mInKbMode> = $z4;

        $z5 = virtualinvoke r1.<android.os.Bundle: boolean getBoolean(java.lang.String)>("dark_theme");

        r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mThemeDark> = $z5;

     label1:
        return;
    }

    public android.view.View onCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)
    {
        com.android.datetimepicker.time.TimePickerDialog r0;
        android.view.LayoutInflater r1;
        android.view.ViewGroup r2;
        android.os.Bundle r3;
        android.view.View r4, $r15, $r21, $r23, $r25, $r27, $r30, $r35, $r48, $r55, $r58, $r66, $r68, $r70, $r71, $r73, $r80;
        com.android.datetimepicker.time.TimePickerDialog$KeyboardListener r5, $r14;
        android.content.res.Resources r6;
        java.lang.String[] r7;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i30, $i31, $i32, $i33, $i34, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i57, i58, i59;
        android.widget.RelativeLayout$LayoutParams r8, $r81;
        android.widget.TextView r9, $r20, $r22, $r24, $r26, $r28, $r29, $r31, $r34, $r47, $r49, $r52, $r53, $r54, $r57, $r67, $r69, $r74, $r76, $r77, $r82;
        android.content.res.ColorStateList r10, r11, $r72;
        android.view.Window $r12;
        android.app.Dialog $r13;
        java.lang.String $r16, $r17, $r18, $r19, $r32, $r39, $r59, $r60, $r61;
        boolean $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        java.text.DateFormatSymbols $r33;
        com.android.datetimepicker.time.RadialPickerLayout $r36, $r37, $r38, $r43, $r45, $r65, $r75;
        com.android.datetimepicker.HapticFeedbackController $r40, $r42;
        android.app.Activity $r41, $r46, $r62;
        com.android.datetimepicker.time.TimePickerDialog$1 $r44;
        com.android.datetimepicker.time.TimePickerDialog$3 $r50;
        com.android.datetimepicker.time.TimePickerDialog$2 $r51;
        com.android.datetimepicker.time.TimePickerDialog$4 $r56;
        char $c29;
        android.content.Context $r63;
        java.util.ArrayList $r64, $r78, $r79;
        byte $b56;

        r0 := @this: com.android.datetimepicker.time.TimePickerDialog;

        r1 := @parameter0: android.view.LayoutInflater;

        r2 := @parameter1: android.view.ViewGroup;

        r3 := @parameter2: android.os.Bundle;

        $r13 = virtualinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: android.app.Dialog getDialog()>();

        $r12 = virtualinvoke $r13.<android.app.Dialog: android.view.Window getWindow()>();

        virtualinvoke $r12.<android.view.Window: boolean requestFeature(int)>(1);

        $i8 = <com.android.datetimepicker.R$layout: int time_picker_dialog>;

        r4 = virtualinvoke r1.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>($i8, null);

        $r14 = new com.android.datetimepicker.time.TimePickerDialog$KeyboardListener;

        specialinvoke $r14.<com.android.datetimepicker.time.TimePickerDialog$KeyboardListener: void <init>(com.android.datetimepicker.time.TimePickerDialog,com.android.datetimepicker.time.TimePickerDialog$1)>(r0, null);

        r5 = $r14;

        $i9 = <com.android.datetimepicker.R$id: int time_picker_dialog>;

        $r15 = virtualinvoke r4.<android.view.View: android.view.View findViewById(int)>($i9);

        virtualinvoke $r15.<android.view.View: void setOnKeyListener(android.view.View$OnKeyListener)>(r5);

        r6 = virtualinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: android.content.res.Resources getResources()>();

        $i10 = <com.android.datetimepicker.R$string: int hour_picker_description>;

        $r16 = virtualinvoke r6.<android.content.res.Resources: java.lang.String getString(int)>($i10);

        r0.<com.android.datetimepicker.time.TimePickerDialog: java.lang.String mHourPickerDescription> = $r16;

        $i11 = <com.android.datetimepicker.R$string: int select_hours>;

        $r18 = virtualinvoke r6.<android.content.res.Resources: java.lang.String getString(int)>($i11);

        r0.<com.android.datetimepicker.time.TimePickerDialog: java.lang.String mSelectHours> = $r18;

        $i13 = <com.android.datetimepicker.R$string: int minute_picker_description>;

        $r17 = virtualinvoke r6.<android.content.res.Resources: java.lang.String getString(int)>($i13);

        r0.<com.android.datetimepicker.time.TimePickerDialog: java.lang.String mMinutePickerDescription> = $r17;

        $i12 = <com.android.datetimepicker.R$string: int select_minutes>;

        $r19 = virtualinvoke r6.<android.content.res.Resources: java.lang.String getString(int)>($i12);

        r0.<com.android.datetimepicker.time.TimePickerDialog: java.lang.String mSelectMinutes> = $r19;

        $z1 = r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mThemeDark>;

        if $z1 == 0 goto label01;

        $i14 = <com.android.datetimepicker.R$color: int red>;

        goto label02;

     label01:
        $i14 = <com.android.datetimepicker.R$color: int blue>;

     label02:
        $i15 = virtualinvoke r6.<android.content.res.Resources: int getColor(int)>($i14);

        r0.<com.android.datetimepicker.time.TimePickerDialog: int mSelectedColor> = $i15;

        $z2 = r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mThemeDark>;

        if $z2 == 0 goto label03;

        $i18 = <com.android.datetimepicker.R$color: int white>;

        goto label04;

     label03:
        $i18 = <com.android.datetimepicker.R$color: int numbers_text_color>;

     label04:
        $i16 = virtualinvoke r6.<android.content.res.Resources: int getColor(int)>($i18);

        r0.<com.android.datetimepicker.time.TimePickerDialog: int mUnselectedColor> = $i16;

        $i17 = <com.android.datetimepicker.R$id: int hours>;

        $r21 = virtualinvoke r4.<android.view.View: android.view.View findViewById(int)>($i17);

        $r22 = (android.widget.TextView) $r21;

        r0.<com.android.datetimepicker.time.TimePickerDialog: android.widget.TextView mHourView> = $r22;

        $r20 = r0.<com.android.datetimepicker.time.TimePickerDialog: android.widget.TextView mHourView>;

        virtualinvoke $r20.<android.widget.TextView: void setOnKeyListener(android.view.View$OnKeyListener)>(r5);

        $i19 = <com.android.datetimepicker.R$id: int hour_space>;

        $r25 = virtualinvoke r4.<android.view.View: android.view.View findViewById(int)>($i19);

        $r24 = (android.widget.TextView) $r25;

        r0.<com.android.datetimepicker.time.TimePickerDialog: android.widget.TextView mHourSpaceView> = $r24;

        $i20 = <com.android.datetimepicker.R$id: int minutes_space>;

        $r23 = virtualinvoke r4.<android.view.View: android.view.View findViewById(int)>($i20);

        $r28 = (android.widget.TextView) $r23;

        r0.<com.android.datetimepicker.time.TimePickerDialog: android.widget.TextView mMinuteSpaceView> = $r28;

        $i21 = <com.android.datetimepicker.R$id: int minutes>;

        $r27 = virtualinvoke r4.<android.view.View: android.view.View findViewById(int)>($i21);

        $r26 = (android.widget.TextView) $r27;

        r0.<com.android.datetimepicker.time.TimePickerDialog: android.widget.TextView mMinuteView> = $r26;

        $r31 = r0.<com.android.datetimepicker.time.TimePickerDialog: android.widget.TextView mMinuteView>;

        virtualinvoke $r31.<android.widget.TextView: void setOnKeyListener(android.view.View$OnKeyListener)>(r5);

        $i22 = <com.android.datetimepicker.R$id: int ampm_label>;

        $r30 = virtualinvoke r4.<android.view.View: android.view.View findViewById(int)>($i22);

        $r29 = (android.widget.TextView) $r30;

        r0.<com.android.datetimepicker.time.TimePickerDialog: android.widget.TextView mAmPmTextView> = $r29;

        $r34 = r0.<com.android.datetimepicker.time.TimePickerDialog: android.widget.TextView mAmPmTextView>;

        virtualinvoke $r34.<android.widget.TextView: void setOnKeyListener(android.view.View$OnKeyListener)>(r5);

        $r33 = new java.text.DateFormatSymbols;

        specialinvoke $r33.<java.text.DateFormatSymbols: void <init>()>();

        r7 = virtualinvoke $r33.<java.text.DateFormatSymbols: java.lang.String[] getAmPmStrings()>();

        $r32 = r7[0];

        r0.<com.android.datetimepicker.time.TimePickerDialog: java.lang.String mAmText> = $r32;

        $r39 = r7[1];

        r0.<com.android.datetimepicker.time.TimePickerDialog: java.lang.String mPmText> = $r39;

        $r40 = new com.android.datetimepicker.HapticFeedbackController;

        $r41 = virtualinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: android.app.Activity getActivity()>();

        specialinvoke $r40.<com.android.datetimepicker.HapticFeedbackController: void <init>(android.content.Context)>($r41);

        r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.HapticFeedbackController mHapticFeedbackController> = $r40;

        $i23 = <com.android.datetimepicker.R$id: int time_picker>;

        $r35 = virtualinvoke r4.<android.view.View: android.view.View findViewById(int)>($i23);

        $r36 = (com.android.datetimepicker.time.RadialPickerLayout) $r35;

        r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.RadialPickerLayout mTimePicker> = $r36;

        $r37 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.RadialPickerLayout mTimePicker>;

        virtualinvoke $r37.<com.android.datetimepicker.time.RadialPickerLayout: void setOnValueSelectedListener(com.android.datetimepicker.time.RadialPickerLayout$OnValueSelectedListener)>(r0);

        $r38 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.RadialPickerLayout mTimePicker>;

        virtualinvoke $r38.<com.android.datetimepicker.time.RadialPickerLayout: void setOnKeyListener(android.view.View$OnKeyListener)>(r5);

        $r45 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.RadialPickerLayout mTimePicker>;

        $r46 = virtualinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: android.app.Activity getActivity()>();

        $r42 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.HapticFeedbackController mHapticFeedbackController>;

        $i24 = r0.<com.android.datetimepicker.time.TimePickerDialog: int mInitialHourOfDay>;

        $i25 = r0.<com.android.datetimepicker.time.TimePickerDialog: int mInitialMinute>;

        $z3 = r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mIs24HourMode>;

        virtualinvoke $r45.<com.android.datetimepicker.time.RadialPickerLayout: void initialize(android.content.Context,com.android.datetimepicker.HapticFeedbackController,int,int,boolean)>($r46, $r42, $i24, $i25, $z3);

        i0 = 0;

        if r3 == null goto label05;

        $z15 = virtualinvoke r3.<android.os.Bundle: boolean containsKey(java.lang.String)>("current_item_showing");

        if $z15 == 0 goto label05;

        i0 = virtualinvoke r3.<android.os.Bundle: int getInt(java.lang.String)>("current_item_showing");

     label05:
        specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: void setCurrentItemShowing(int,boolean,boolean,boolean)>(i0, 0, 1, 1);

        $r43 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.RadialPickerLayout mTimePicker>;

        virtualinvoke $r43.<com.android.datetimepicker.time.RadialPickerLayout: void invalidate()>();

        $r52 = r0.<com.android.datetimepicker.time.TimePickerDialog: android.widget.TextView mHourView>;

        $r44 = new com.android.datetimepicker.time.TimePickerDialog$1;

        specialinvoke $r44.<com.android.datetimepicker.time.TimePickerDialog$1: void <init>(com.android.datetimepicker.time.TimePickerDialog)>(r0);

        virtualinvoke $r52.<android.widget.TextView: void setOnClickListener(android.view.View$OnClickListener)>($r44);

        $r53 = r0.<com.android.datetimepicker.time.TimePickerDialog: android.widget.TextView mMinuteView>;

        $r51 = new com.android.datetimepicker.time.TimePickerDialog$2;

        specialinvoke $r51.<com.android.datetimepicker.time.TimePickerDialog$2: void <init>(com.android.datetimepicker.time.TimePickerDialog)>(r0);

        virtualinvoke $r53.<android.widget.TextView: void setOnClickListener(android.view.View$OnClickListener)>($r51);

        $i26 = <com.android.datetimepicker.R$id: int done_button>;

        $r48 = virtualinvoke r4.<android.view.View: android.view.View findViewById(int)>($i26);

        $r47 = (android.widget.TextView) $r48;

        r0.<com.android.datetimepicker.time.TimePickerDialog: android.widget.TextView mDoneButton> = $r47;

        $r49 = r0.<com.android.datetimepicker.time.TimePickerDialog: android.widget.TextView mDoneButton>;

        $r50 = new com.android.datetimepicker.time.TimePickerDialog$3;

        specialinvoke $r50.<com.android.datetimepicker.time.TimePickerDialog$3: void <init>(com.android.datetimepicker.time.TimePickerDialog)>(r0);

        virtualinvoke $r49.<android.widget.TextView: void setOnClickListener(android.view.View$OnClickListener)>($r50);

        $r57 = r0.<com.android.datetimepicker.time.TimePickerDialog: android.widget.TextView mDoneButton>;

        virtualinvoke $r57.<android.widget.TextView: void setOnKeyListener(android.view.View$OnKeyListener)>(r5);

        $i28 = <com.android.datetimepicker.R$id: int ampm_hitspace>;

        $r58 = virtualinvoke r4.<android.view.View: android.view.View findViewById(int)>($i28);

        r0.<com.android.datetimepicker.time.TimePickerDialog: android.view.View mAmPmHitspace> = $r58;

        $z4 = r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mIs24HourMode>;

        if $z4 == 0 goto label06;

        $r82 = r0.<com.android.datetimepicker.time.TimePickerDialog: android.widget.TextView mAmPmTextView>;

        virtualinvoke $r82.<android.widget.TextView: void setVisibility(int)>(8);

        $r81 = new android.widget.RelativeLayout$LayoutParams;

        specialinvoke $r81.<android.widget.RelativeLayout$LayoutParams: void <init>(int,int)>(-2, -2);

        r8 = $r81;

        virtualinvoke r8.<android.widget.RelativeLayout$LayoutParams: void addRule(int)>(13);

        $i57 = <com.android.datetimepicker.R$id: int separator>;

        $r80 = virtualinvoke r4.<android.view.View: android.view.View findViewById(int)>($i57);

        r9 = (android.widget.TextView) $r80;

        virtualinvoke r9.<android.widget.TextView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r8);

        goto label09;

     label06:
        $r54 = r0.<com.android.datetimepicker.time.TimePickerDialog: android.widget.TextView mAmPmTextView>;

        virtualinvoke $r54.<android.widget.TextView: void setVisibility(int)>(0);

        $i27 = r0.<com.android.datetimepicker.time.TimePickerDialog: int mInitialHourOfDay>;

        if $i27 >= 12 goto label07;

        $b56 = 0;

        goto label08;

     label07:
        $b56 = 1;

     label08:
        specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: void updateAmPmDisplay(int)>($b56);

        $r55 = r0.<com.android.datetimepicker.time.TimePickerDialog: android.view.View mAmPmHitspace>;

        $r56 = new com.android.datetimepicker.time.TimePickerDialog$4;

        specialinvoke $r56.<com.android.datetimepicker.time.TimePickerDialog$4: void <init>(com.android.datetimepicker.time.TimePickerDialog)>(r0);

        virtualinvoke $r55.<android.view.View: void setOnClickListener(android.view.View$OnClickListener)>($r56);

     label09:
        r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mAllowAutoAdvance> = 1;

        $i32 = r0.<com.android.datetimepicker.time.TimePickerDialog: int mInitialHourOfDay>;

        specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: void setHour(int,boolean)>($i32, 1);

        $i33 = r0.<com.android.datetimepicker.time.TimePickerDialog: int mInitialMinute>;

        specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: void setMinute(int)>($i33);

        $i31 = <com.android.datetimepicker.R$string: int time_placeholder>;

        $r61 = virtualinvoke r6.<android.content.res.Resources: java.lang.String getString(int)>($i31);

        r0.<com.android.datetimepicker.time.TimePickerDialog: java.lang.String mDoublePlaceholderText> = $r61;

        $i30 = <com.android.datetimepicker.R$string: int deleted_key>;

        $r60 = virtualinvoke r6.<android.content.res.Resources: java.lang.String getString(int)>($i30);

        r0.<com.android.datetimepicker.time.TimePickerDialog: java.lang.String mDeletedKeyFormat> = $r60;

        $r59 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.lang.String mDoublePlaceholderText>;

        $c29 = virtualinvoke $r59.<java.lang.String: char charAt(int)>(0);

        r0.<com.android.datetimepicker.time.TimePickerDialog: char mPlaceholderText> = $c29;

        r0.<com.android.datetimepicker.time.TimePickerDialog: int mPmKeyCode> = -1;

        r0.<com.android.datetimepicker.time.TimePickerDialog: int mAmKeyCode> = -1;

        specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: void generateLegalTimesTree()>();

        $z6 = r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mInKbMode>;

        if $z6 == 0 goto label10;

        $r78 = virtualinvoke r3.<android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)>("typed_times");

        r0.<com.android.datetimepicker.time.TimePickerDialog: java.util.ArrayList mTypedTimes> = $r78;

        specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: void tryStartingKbMode(int)>(-1);

        $r77 = r0.<com.android.datetimepicker.time.TimePickerDialog: android.widget.TextView mHourView>;

        virtualinvoke $r77.<android.widget.TextView: void invalidate()>();

        goto label11;

     label10:
        $r64 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.util.ArrayList mTypedTimes>;

        if $r64 != null goto label11;

        $r79 = new java.util.ArrayList;

        specialinvoke $r79.<java.util.ArrayList: void <init>()>();

        r0.<com.android.datetimepicker.time.TimePickerDialog: java.util.ArrayList mTypedTimes> = $r79;

     label11:
        $r65 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.RadialPickerLayout mTimePicker>;

        $r62 = virtualinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: android.app.Activity getActivity()>();

        $r63 = virtualinvoke $r62.<android.app.Activity: android.content.Context getApplicationContext()>();

        $z5 = r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mThemeDark>;

        virtualinvoke $r65.<com.android.datetimepicker.time.RadialPickerLayout: void setTheme(android.content.Context,boolean)>($r63, $z5);

        $i34 = <com.android.datetimepicker.R$color: int white>;

        i58 = virtualinvoke r6.<android.content.res.Resources: int getColor(int)>($i34);

        $i39 = <com.android.datetimepicker.R$color: int circle_background>;

        i59 = virtualinvoke r6.<android.content.res.Resources: int getColor(int)>($i39);

        $i38 = <com.android.datetimepicker.R$color: int line_background>;

        i1 = virtualinvoke r6.<android.content.res.Resources: int getColor(int)>($i38);

        $i37 = <com.android.datetimepicker.R$color: int numbers_text_color>;

        i2 = virtualinvoke r6.<android.content.res.Resources: int getColor(int)>($i37);

        $i36 = <com.android.datetimepicker.R$color: int done_text_color>;

        r10 = virtualinvoke r6.<android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int)>($i36);

        i3 = <com.android.datetimepicker.R$drawable: int done_background_color>;

        $i43 = <com.android.datetimepicker.R$color: int dark_gray>;

        i4 = virtualinvoke r6.<android.content.res.Resources: int getColor(int)>($i43);

        $i42 = <com.android.datetimepicker.R$color: int light_gray>;

        i6 = virtualinvoke r6.<android.content.res.Resources: int getColor(int)>($i42);

        $i41 = <com.android.datetimepicker.R$color: int line_dark>;

        i5 = virtualinvoke r6.<android.content.res.Resources: int getColor(int)>($i41);

        $i40 = <com.android.datetimepicker.R$color: int done_text_color_dark>;

        r11 = virtualinvoke r6.<android.content.res.Resources: android.content.res.ColorStateList getColorStateList(int)>($i40);

        i7 = <com.android.datetimepicker.R$drawable: int done_background_color_dark>;

        $i46 = <com.android.datetimepicker.R$id: int time_display_background>;

        $r70 = virtualinvoke r4.<android.view.View: android.view.View findViewById(int)>($i46);

        $z9 = r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mThemeDark>;

        if $z9 == 0 goto label12;

        $i55 = i4;

        goto label13;

     label12:
        $i55 = i58;

     label13:
        virtualinvoke $r70.<android.view.View: void setBackgroundColor(int)>($i55);

        $i47 = <com.android.datetimepicker.R$id: int time_display>;

        $r71 = virtualinvoke r4.<android.view.View: android.view.View findViewById(int)>($i47);

        $z10 = r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mThemeDark>;

        if $z10 == 0 goto label14;

        $i54 = i4;

        goto label15;

     label14:
        $i54 = i58;

     label15:
        virtualinvoke $r71.<android.view.View: void setBackgroundColor(int)>($i54);

        $i48 = <com.android.datetimepicker.R$id: int separator>;

        $r66 = virtualinvoke r4.<android.view.View: android.view.View findViewById(int)>($i48);

        $r67 = (android.widget.TextView) $r66;

        $z7 = r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mThemeDark>;

        if $z7 == 0 goto label16;

        $i53 = i58;

        goto label17;

     label16:
        $i53 = i2;

     label17:
        virtualinvoke $r67.<android.widget.TextView: void setTextColor(int)>($i53);

        $i44 = <com.android.datetimepicker.R$id: int ampm_label>;

        $r68 = virtualinvoke r4.<android.view.View: android.view.View findViewById(int)>($i44);

        $r69 = (android.widget.TextView) $r68;

        $z8 = r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mThemeDark>;

        if $z8 == 0 goto label18;

        $i52 = i58;

        goto label19;

     label18:
        $i52 = i2;

     label19:
        virtualinvoke $r69.<android.widget.TextView: void setTextColor(int)>($i52);

        $i45 = <com.android.datetimepicker.R$id: int line>;

        $r73 = virtualinvoke r4.<android.view.View: android.view.View findViewById(int)>($i45);

        $z11 = r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mThemeDark>;

        if $z11 == 0 goto label20;

        $i51 = i5;

        goto label21;

     label20:
        $i51 = i1;

     label21:
        virtualinvoke $r73.<android.view.View: void setBackgroundColor(int)>($i51);

        $r74 = r0.<com.android.datetimepicker.time.TimePickerDialog: android.widget.TextView mDoneButton>;

        $z12 = r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mThemeDark>;

        if $z12 == 0 goto label22;

        $r72 = r11;

        goto label23;

     label22:
        $r72 = r10;

     label23:
        virtualinvoke $r74.<android.widget.TextView: void setTextColor(android.content.res.ColorStateList)>($r72);

        $r75 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.RadialPickerLayout mTimePicker>;

        $z13 = r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mThemeDark>;

        if $z13 == 0 goto label24;

        $i50 = i6;

        goto label25;

     label24:
        $i50 = i59;

     label25:
        virtualinvoke $r75.<com.android.datetimepicker.time.RadialPickerLayout: void setBackgroundColor(int)>($i50);

        $r76 = r0.<com.android.datetimepicker.time.TimePickerDialog: android.widget.TextView mDoneButton>;

        $z14 = r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mThemeDark>;

        if $z14 == 0 goto label26;

        $i49 = i7;

        goto label27;

     label26:
        $i49 = i3;

     label27:
        virtualinvoke $r76.<android.widget.TextView: void setBackgroundResource(int)>($i49);

        return r4;
    }

    public void onResume()
    {
        com.android.datetimepicker.time.TimePickerDialog r0;
        com.android.datetimepicker.HapticFeedbackController $r1;

        r0 := @this: com.android.datetimepicker.time.TimePickerDialog;

        specialinvoke r0.<android.app.DialogFragment: void onResume()>();

        $r1 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.HapticFeedbackController mHapticFeedbackController>;

        virtualinvoke $r1.<com.android.datetimepicker.HapticFeedbackController: void start()>();

        return;
    }

    public void onPause()
    {
        com.android.datetimepicker.time.TimePickerDialog r0;
        com.android.datetimepicker.HapticFeedbackController $r1;

        r0 := @this: com.android.datetimepicker.time.TimePickerDialog;

        specialinvoke r0.<android.app.DialogFragment: void onPause()>();

        $r1 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.HapticFeedbackController mHapticFeedbackController>;

        virtualinvoke $r1.<com.android.datetimepicker.HapticFeedbackController: void stop()>();

        return;
    }

    public void tryVibrate()
    {
        com.android.datetimepicker.time.TimePickerDialog r0;
        com.android.datetimepicker.HapticFeedbackController $r1;

        r0 := @this: com.android.datetimepicker.time.TimePickerDialog;

        $r1 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.HapticFeedbackController mHapticFeedbackController>;

        virtualinvoke $r1.<com.android.datetimepicker.HapticFeedbackController: void tryVibrate()>();

        return;
    }

    private void updateAmPmDisplay(int)
    {
        com.android.datetimepicker.time.TimePickerDialog r0;
        int i0;
        java.lang.String $r1, $r3, $r5, $r7, $r9, $r11, $r13;
        android.widget.TextView $r2, $r4, $r10;
        com.android.datetimepicker.time.RadialPickerLayout $r6, $r12;
        android.view.View $r8, $r14;

        r0 := @this: com.android.datetimepicker.time.TimePickerDialog;

        i0 := @parameter0: int;

        if i0 != 0 goto label1;

        $r10 = r0.<com.android.datetimepicker.time.TimePickerDialog: android.widget.TextView mAmPmTextView>;

        $r9 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.lang.String mAmText>;

        virtualinvoke $r10.<android.widget.TextView: void setText(java.lang.CharSequence)>($r9);

        $r12 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.RadialPickerLayout mTimePicker>;

        $r11 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.lang.String mAmText>;

        staticinvoke <com.android.datetimepicker.Utils: void tryAccessibilityAnnounce(android.view.View,java.lang.CharSequence)>($r12, $r11);

        $r14 = r0.<com.android.datetimepicker.time.TimePickerDialog: android.view.View mAmPmHitspace>;

        $r13 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.lang.String mAmText>;

        virtualinvoke $r14.<android.view.View: void setContentDescription(java.lang.CharSequence)>($r13);

        goto label3;

     label1:
        if i0 != 1 goto label2;

        $r4 = r0.<com.android.datetimepicker.time.TimePickerDialog: android.widget.TextView mAmPmTextView>;

        $r3 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.lang.String mPmText>;

        virtualinvoke $r4.<android.widget.TextView: void setText(java.lang.CharSequence)>($r3);

        $r6 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.RadialPickerLayout mTimePicker>;

        $r5 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.lang.String mPmText>;

        staticinvoke <com.android.datetimepicker.Utils: void tryAccessibilityAnnounce(android.view.View,java.lang.CharSequence)>($r6, $r5);

        $r8 = r0.<com.android.datetimepicker.time.TimePickerDialog: android.view.View mAmPmHitspace>;

        $r7 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.lang.String mPmText>;

        virtualinvoke $r8.<android.view.View: void setContentDescription(java.lang.CharSequence)>($r7);

        goto label3;

     label2:
        $r2 = r0.<com.android.datetimepicker.time.TimePickerDialog: android.widget.TextView mAmPmTextView>;

        $r1 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.lang.String mDoublePlaceholderText>;

        virtualinvoke $r2.<android.widget.TextView: void setText(java.lang.CharSequence)>($r1);

     label3:
        return;
    }

    public void onSaveInstanceState(android.os.Bundle)
    {
        com.android.datetimepicker.time.TimePickerDialog r0;
        android.os.Bundle r1;
        com.android.datetimepicker.time.RadialPickerLayout $r2, $r3, $r4, $r5;
        int $i0, $i1, $i2;
        boolean $z0, $z1, $z2, $z3;
        java.util.ArrayList $r6;

        r0 := @this: com.android.datetimepicker.time.TimePickerDialog;

        r1 := @parameter0: android.os.Bundle;

        $r2 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.RadialPickerLayout mTimePicker>;

        if $r2 == null goto label2;

        $r3 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.RadialPickerLayout mTimePicker>;

        $i0 = virtualinvoke $r3.<com.android.datetimepicker.time.RadialPickerLayout: int getHours()>();

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("hour_of_day", $i0);

        $r4 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.RadialPickerLayout mTimePicker>;

        $i1 = virtualinvoke $r4.<com.android.datetimepicker.time.RadialPickerLayout: int getMinutes()>();

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("minute", $i1);

        $z0 = r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mIs24HourMode>;

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("is_24_hour_view", $z0);

        $r5 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.RadialPickerLayout mTimePicker>;

        $i2 = virtualinvoke $r5.<com.android.datetimepicker.time.RadialPickerLayout: int getCurrentItemShowing()>();

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("current_item_showing", $i2);

        $z1 = r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mInKbMode>;

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("in_kb_mode", $z1);

        $z2 = r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mInKbMode>;

        if $z2 == 0 goto label1;

        $r6 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.util.ArrayList mTypedTimes>;

        virtualinvoke r1.<android.os.Bundle: void putIntegerArrayList(java.lang.String,java.util.ArrayList)>("typed_times", $r6);

     label1:
        $z3 = r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mThemeDark>;

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("dark_theme", $z3);

     label2:
        return;
    }

    public void onValueSelected(int, int, boolean)
    {
        com.android.datetimepicker.time.TimePickerDialog r0;
        int i0, i1;
        boolean z0, $z1, $z2;
        java.lang.String r1, $r5, $r9, $r15, $r19, $r22;
        java.util.ArrayList $r2;
        java.lang.StringBuilder $r3, $r6, $r7, $r8, $r13, $r14, $r16, $r17, $r20, $r21, $r23, $r24;
        com.android.datetimepicker.time.RadialPickerLayout $r4, $r12, $r18;
        java.lang.Object[] $r10;
        java.lang.Integer $r11;

        r0 := @this: com.android.datetimepicker.time.TimePickerDialog;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z0 := @parameter2: boolean;

        if i0 != 0 goto label3;

        specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: void setHour(int,boolean)>(i1, 0);

        $r10 = newarray (java.lang.Object)[1];

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r10[0] = $r11;

        r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%d", $r10);

        $z2 = r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mAllowAutoAdvance>;

        if $z2 == 0 goto label1;

        if z0 == 0 goto label1;

        specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: void setCurrentItemShowing(int,boolean,boolean,boolean)>(1, 1, 1, 0);

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r23 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". ");

        $r22 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.lang.String mSelectMinutes>;

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        r1 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label2;

     label1:
        $r12 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.RadialPickerLayout mTimePicker>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.lang.String mHourPickerDescription>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r16 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r19 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<com.android.datetimepicker.time.RadialPickerLayout: void setContentDescription(java.lang.CharSequence)>($r19);

     label2:
        $r18 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.RadialPickerLayout mTimePicker>;

        staticinvoke <com.android.datetimepicker.Utils: void tryAccessibilityAnnounce(android.view.View,java.lang.CharSequence)>($r18, r1);

        goto label7;

     label3:
        if i0 != 1 goto label4;

        specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: void setMinute(int)>(i1);

        $r4 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.RadialPickerLayout mTimePicker>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.lang.String mMinutePickerDescription>;

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<com.android.datetimepicker.time.RadialPickerLayout: void setContentDescription(java.lang.CharSequence)>($r9);

        goto label7;

     label4:
        if i0 != 2 goto label5;

        specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: void updateAmPmDisplay(int)>(i1);

        goto label7;

     label5:
        if i0 != 3 goto label7;

        $z1 = specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: boolean isTypedTimeFullyLegal()>();

        if $z1 != 0 goto label6;

        $r2 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.util.ArrayList mTypedTimes>;

        virtualinvoke $r2.<java.util.ArrayList: void clear()>();

     label6:
        specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: void finishKbMode(boolean)>(1);

     label7:
        return;
    }

    private void setHour(int, boolean)
    {
        com.android.datetimepicker.time.TimePickerDialog r0;
        int i0;
        boolean z0, $z1;
        java.lang.String r1, r2;
        java.lang.Object[] $r3;
        java.lang.Integer $r4;
        android.widget.TextView $r5, $r6;
        com.android.datetimepicker.time.RadialPickerLayout $r7;

        r0 := @this: com.android.datetimepicker.time.TimePickerDialog;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        $z1 = r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mIs24HourMode>;

        if $z1 == 0 goto label1;

        r1 = "%02d";

        goto label2;

     label1:
        r1 = "%d";

        i0 = i0 % 12;

        if i0 != 0 goto label2;

        i0 = 12;

     label2:
        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3[0] = $r4;

        r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, $r3);

        $r5 = r0.<com.android.datetimepicker.time.TimePickerDialog: android.widget.TextView mHourView>;

        virtualinvoke $r5.<android.widget.TextView: void setText(java.lang.CharSequence)>(r2);

        $r6 = r0.<com.android.datetimepicker.time.TimePickerDialog: android.widget.TextView mHourSpaceView>;

        virtualinvoke $r6.<android.widget.TextView: void setText(java.lang.CharSequence)>(r2);

        if z0 == 0 goto label3;

        $r7 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.RadialPickerLayout mTimePicker>;

        staticinvoke <com.android.datetimepicker.Utils: void tryAccessibilityAnnounce(android.view.View,java.lang.CharSequence)>($r7, r2);

     label3:
        return;
    }

    private void setMinute(int)
    {
        com.android.datetimepicker.time.TimePickerDialog r0;
        int i0;
        java.lang.String r1;
        java.util.Locale $r2;
        java.lang.Object[] $r3;
        java.lang.Integer $r4;
        com.android.datetimepicker.time.RadialPickerLayout $r5;
        android.widget.TextView $r6, $r7;

        r0 := @this: com.android.datetimepicker.time.TimePickerDialog;

        i0 := @parameter0: int;

        if i0 != 60 goto label1;

        i0 = 0;

     label1:
        $r2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r3 = newarray (java.lang.Object)[1];

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3[0] = $r4;

        r1 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>($r2, "%02d", $r3);

        $r5 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.RadialPickerLayout mTimePicker>;

        staticinvoke <com.android.datetimepicker.Utils: void tryAccessibilityAnnounce(android.view.View,java.lang.CharSequence)>($r5, r1);

        $r6 = r0.<com.android.datetimepicker.time.TimePickerDialog: android.widget.TextView mMinuteView>;

        virtualinvoke $r6.<android.widget.TextView: void setText(java.lang.CharSequence)>(r1);

        $r7 = r0.<com.android.datetimepicker.time.TimePickerDialog: android.widget.TextView mMinuteSpaceView>;

        virtualinvoke $r7.<android.widget.TextView: void setText(java.lang.CharSequence)>(r1);

        return;
    }

    private void setCurrentItemShowing(int, boolean, boolean, boolean)
    {
        com.android.datetimepicker.time.TimePickerDialog r0;
        int i0, i1, i2, $i3, $i4, i5, i6;
        boolean z0, z1, z2, $z3;
        android.widget.TextView r1, $r11, $r13;
        android.animation.ObjectAnimator r2;
        com.android.datetimepicker.time.RadialPickerLayout $r3, $r4, $r6, $r14, $r16, $r19, $r25;
        java.lang.StringBuilder $r5, $r8, $r9, $r10, $r17, $r20, $r22, $r23;
        java.lang.String $r7, $r12, $r15, $r18, $r21, $r24;

        r0 := @this: com.android.datetimepicker.time.TimePickerDialog;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        z2 := @parameter3: boolean;

        $r3 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.RadialPickerLayout mTimePicker>;

        virtualinvoke $r3.<com.android.datetimepicker.time.RadialPickerLayout: void setCurrentItemShowing(int,boolean)>(i0, z0);

        if i0 != 0 goto label03;

        $r16 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.RadialPickerLayout mTimePicker>;

        i1 = virtualinvoke $r16.<com.android.datetimepicker.time.RadialPickerLayout: int getHours()>();

        $z3 = r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mIs24HourMode>;

        if $z3 != 0 goto label01;

        i1 = i1 % 12;

     label01:
        $r19 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.RadialPickerLayout mTimePicker>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.lang.String mHourPickerDescription>;

        $r22 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r20 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r19.<com.android.datetimepicker.time.RadialPickerLayout: void setContentDescription(java.lang.CharSequence)>($r21);

        if z2 == 0 goto label02;

        $r25 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.RadialPickerLayout mTimePicker>;

        $r24 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.lang.String mSelectHours>;

        staticinvoke <com.android.datetimepicker.Utils: void tryAccessibilityAnnounce(android.view.View,java.lang.CharSequence)>($r25, $r24);

     label02:
        r1 = r0.<com.android.datetimepicker.time.TimePickerDialog: android.widget.TextView mHourView>;

        goto label05;

     label03:
        $r4 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.RadialPickerLayout mTimePicker>;

        i5 = virtualinvoke $r4.<com.android.datetimepicker.time.RadialPickerLayout: int getMinutes()>();

        $r6 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.RadialPickerLayout mTimePicker>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.lang.String mMinutePickerDescription>;

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5);

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<com.android.datetimepicker.time.RadialPickerLayout: void setContentDescription(java.lang.CharSequence)>($r12);

        if z2 == 0 goto label04;

        $r14 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.RadialPickerLayout mTimePicker>;

        $r15 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.lang.String mSelectMinutes>;

        staticinvoke <com.android.datetimepicker.Utils: void tryAccessibilityAnnounce(android.view.View,java.lang.CharSequence)>($r14, $r15);

     label04:
        r1 = r0.<com.android.datetimepicker.time.TimePickerDialog: android.widget.TextView mMinuteView>;

     label05:
        if i0 != 0 goto label06;

        $i3 = r0.<com.android.datetimepicker.time.TimePickerDialog: int mSelectedColor>;

        goto label07;

     label06:
        $i3 = r0.<com.android.datetimepicker.time.TimePickerDialog: int mUnselectedColor>;

     label07:
        i6 = $i3;

        if i0 != 1 goto label08;

        $i4 = r0.<com.android.datetimepicker.time.TimePickerDialog: int mSelectedColor>;

        goto label09;

     label08:
        $i4 = r0.<com.android.datetimepicker.time.TimePickerDialog: int mUnselectedColor>;

     label09:
        i2 = $i4;

        $r11 = r0.<com.android.datetimepicker.time.TimePickerDialog: android.widget.TextView mHourView>;

        virtualinvoke $r11.<android.widget.TextView: void setTextColor(int)>(i6);

        $r13 = r0.<com.android.datetimepicker.time.TimePickerDialog: android.widget.TextView mMinuteView>;

        virtualinvoke $r13.<android.widget.TextView: void setTextColor(int)>(i2);

        r2 = staticinvoke <com.android.datetimepicker.Utils: android.animation.ObjectAnimator getPulseAnimator(android.view.View,float,float)>(r1, 0.85F, 1.1F);

        if z1 == 0 goto label10;

        virtualinvoke r2.<android.animation.ObjectAnimator: void setStartDelay(long)>(300L);

     label10:
        virtualinvoke r2.<android.animation.ObjectAnimator: void start()>();

        return;
    }

    private boolean processKeyUp(int)
    {
        com.android.datetimepicker.time.TimePickerDialog r0;
        int i0, i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.String r1, $r7, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        com.android.datetimepicker.time.RadialPickerLayout $r2, $r10, $r13, $r14, $r15;
        java.util.ArrayList $r3, $r4;
        java.lang.Object[] $r5, $r8;
        java.lang.Integer $r6;
        com.android.datetimepicker.time.TimePickerDialog$OnTimeSetListener $r11, $r12;

        r0 := @this: com.android.datetimepicker.time.TimePickerDialog;

        i0 := @parameter0: int;

        if i0 == 111 goto label01;

        if i0 != 4 goto label02;

     label01:
        virtualinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: void dismiss()>();

        return 1;

     label02:
        if i0 != 61 goto label04;

        $z8 = r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mInKbMode>;

        if $z8 == 0 goto label17;

        $z6 = specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: boolean isTypedTimeFullyLegal()>();

        if $z6 == 0 goto label03;

        specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: void finishKbMode(boolean)>(1);

     label03:
        return 1;

     label04:
        if i0 != 66 goto label08;

        $z5 = r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mInKbMode>;

        if $z5 == 0 goto label06;

        $z7 = specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: boolean isTypedTimeFullyLegal()>();

        if $z7 != 0 goto label05;

        return 1;

     label05:
        specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: void finishKbMode(boolean)>(0);

     label06:
        $r11 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.TimePickerDialog$OnTimeSetListener mCallback>;

        if $r11 == null goto label07;

        $r12 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.TimePickerDialog$OnTimeSetListener mCallback>;

        $r15 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.RadialPickerLayout mTimePicker>;

        $r13 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.RadialPickerLayout mTimePicker>;

        $i9 = virtualinvoke $r13.<com.android.datetimepicker.time.RadialPickerLayout: int getHours()>();

        $r14 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.RadialPickerLayout mTimePicker>;

        $i8 = virtualinvoke $r14.<com.android.datetimepicker.time.RadialPickerLayout: int getMinutes()>();

        interfaceinvoke $r12.<com.android.datetimepicker.time.TimePickerDialog$OnTimeSetListener: void onTimeSet(com.android.datetimepicker.time.RadialPickerLayout,int,int)>($r15, $i9, $i8);

     label07:
        virtualinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: void dismiss()>();

        return 1;

     label08:
        if i0 != 67 goto label12;

        $z3 = r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mInKbMode>;

        if $z3 == 0 goto label17;

        $r4 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.util.ArrayList mTypedTimes>;

        $z4 = virtualinvoke $r4.<java.util.ArrayList: boolean isEmpty()>();

        if $z4 != 0 goto label17;

        i1 = specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: int deleteLastTypedKey()>();

        $i6 = specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: int getAmOrPmKeyCode(int)>(0);

        if i1 != $i6 goto label09;

        r1 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.lang.String mAmText>;

        goto label11;

     label09:
        $i5 = specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: int getAmOrPmKeyCode(int)>(1);

        if i1 != $i5 goto label10;

        r1 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.lang.String mPmText>;

        goto label11;

     label10:
        $r5 = newarray (java.lang.Object)[1];

        $i7 = staticinvoke <com.android.datetimepicker.time.TimePickerDialog: int getValFromKeyCode(int)>(i1);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r5[0] = $r6;

        r1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%d", $r5);

     label11:
        $r10 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.RadialPickerLayout mTimePicker>;

        $r7 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.lang.String mDeletedKeyFormat>;

        $r8 = newarray (java.lang.Object)[1];

        $r8[0] = r1;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>($r7, $r8);

        staticinvoke <com.android.datetimepicker.Utils: void tryAccessibilityAnnounce(android.view.View,java.lang.CharSequence)>($r10, $r9);

        specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: void updateDisplay(boolean)>(1);

        goto label17;

     label12:
        if i0 == 7 goto label13;

        if i0 == 8 goto label13;

        if i0 == 9 goto label13;

        if i0 == 10 goto label13;

        if i0 == 11 goto label13;

        if i0 == 12 goto label13;

        if i0 == 13 goto label13;

        if i0 == 14 goto label13;

        if i0 == 15 goto label13;

        if i0 == 16 goto label13;

        $z2 = r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mIs24HourMode>;

        if $z2 != 0 goto label17;

        $i3 = specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: int getAmOrPmKeyCode(int)>(0);

        if i0 == $i3 goto label13;

        $i4 = specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: int getAmOrPmKeyCode(int)>(1);

        if i0 != $i4 goto label17;

     label13:
        $z0 = r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mInKbMode>;

        if $z0 != 0 goto label15;

        $r2 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.RadialPickerLayout mTimePicker>;

        if $r2 != null goto label14;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TimePickerDialog", "Unable to initiate keyboard mode, TimePicker was null.");

        return 1;

     label14:
        $r3 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.util.ArrayList mTypedTimes>;

        virtualinvoke $r3.<java.util.ArrayList: void clear()>();

        specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: void tryStartingKbMode(int)>(i0);

        return 1;

     label15:
        $z1 = specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: boolean addKeyIfLegal(int)>(i0);

        if $z1 == 0 goto label16;

        specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: void updateDisplay(boolean)>(0);

     label16:
        return 1;

     label17:
        return 0;
    }

    private void tryStartingKbMode(int)
    {
        com.android.datetimepicker.time.TimePickerDialog r0;
        int i0;
        com.android.datetimepicker.time.RadialPickerLayout $r1;
        boolean $z0, $z1;
        android.widget.TextView $r2;

        r0 := @this: com.android.datetimepicker.time.TimePickerDialog;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.RadialPickerLayout mTimePicker>;

        $z0 = virtualinvoke $r1.<com.android.datetimepicker.time.RadialPickerLayout: boolean trySettingInputEnabled(boolean)>(0);

        if $z0 == 0 goto label2;

        if i0 == -1 goto label1;

        $z1 = specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: boolean addKeyIfLegal(int)>(i0);

        if $z1 == 0 goto label2;

     label1:
        r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mInKbMode> = 1;

        $r2 = r0.<com.android.datetimepicker.time.TimePickerDialog: android.widget.TextView mDoneButton>;

        virtualinvoke $r2.<android.widget.TextView: void setEnabled(boolean)>(0);

        specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: void updateDisplay(boolean)>(0);

     label2:
        return;
    }

    private boolean addKeyIfLegal(int)
    {
        com.android.datetimepicker.time.TimePickerDialog r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i8;
        boolean $z0, $z1, $z3, $z4, $z5, $z6;
        java.util.ArrayList $r1, $r7, $r9, $r10, $r12, $r13, $r15;
        java.lang.Integer $r2, $r5, $r11, $r14;
        java.lang.Object[] $r3;
        com.android.datetimepicker.time.RadialPickerLayout $r4;
        java.lang.String $r6;
        android.widget.TextView $r8;

        r0 := @this: com.android.datetimepicker.time.TimePickerDialog;

        i0 := @parameter0: int;

        $z0 = r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mIs24HourMode>;

        if $z0 == 0 goto label1;

        $r15 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.util.ArrayList mTypedTimes>;

        $i8 = virtualinvoke $r15.<java.util.ArrayList: int size()>();

        if $i8 == 4 goto label2;

     label1:
        $z1 = r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mIs24HourMode>;

        if $z1 != 0 goto label3;

        $z6 = specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: boolean isTypedTimeFullyLegal()>();

        if $z6 == 0 goto label3;

     label2:
        return 0;

     label3:
        $r1 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.util.ArrayList mTypedTimes>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $z3 = specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: boolean isTypedTimeLegalSoFar()>();

        if $z3 != 0 goto label4;

        specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: int deleteLastTypedKey()>();

        return 0;

     label4:
        i1 = staticinvoke <com.android.datetimepicker.time.TimePickerDialog: int getValFromKeyCode(int)>(i0);

        $r4 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.RadialPickerLayout mTimePicker>;

        $r3 = newarray (java.lang.Object)[1];

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r3[0] = $r5;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%d", $r3);

        staticinvoke <com.android.datetimepicker.Utils: void tryAccessibilityAnnounce(android.view.View,java.lang.CharSequence)>($r4, $r6);

        $z5 = specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: boolean isTypedTimeFullyLegal()>();

        if $z5 == 0 goto label6;

        $z4 = r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mIs24HourMode>;

        if $z4 != 0 goto label5;

        $r7 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.util.ArrayList mTypedTimes>;

        $i2 = virtualinvoke $r7.<java.util.ArrayList: int size()>();

        if $i2 > 3 goto label5;

        $r10 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.util.ArrayList mTypedTimes>;

        $r9 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.util.ArrayList mTypedTimes>;

        $i3 = virtualinvoke $r9.<java.util.ArrayList: int size()>();

        $i4 = $i3 - 1;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7);

        virtualinvoke $r10.<java.util.ArrayList: void add(int,java.lang.Object)>($i4, $r11);

        $r12 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.util.ArrayList mTypedTimes>;

        $r13 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.util.ArrayList mTypedTimes>;

        $i6 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

        $i5 = $i6 - 1;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(7);

        virtualinvoke $r12.<java.util.ArrayList: void add(int,java.lang.Object)>($i5, $r14);

     label5:
        $r8 = r0.<com.android.datetimepicker.time.TimePickerDialog: android.widget.TextView mDoneButton>;

        virtualinvoke $r8.<android.widget.TextView: void setEnabled(boolean)>(1);

     label6:
        return 1;
    }

    private boolean isTypedTimeLegalSoFar()
    {
        com.android.datetimepicker.time.TimePickerDialog r0;
        com.android.datetimepicker.time.TimePickerDialog$Node r1;
        java.util.Iterator r2;
        int i0;
        java.util.ArrayList $r3;
        boolean $z0;
        java.lang.Object $r4;
        java.lang.Integer $r5;

        r0 := @this: com.android.datetimepicker.time.TimePickerDialog;

        r1 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.TimePickerDialog$Node mLegalTimesTree>;

        $r3 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.util.ArrayList mTypedTimes>;

        r2 = virtualinvoke $r3.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (java.lang.Integer) $r4;

        i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        r1 = virtualinvoke r1.<com.android.datetimepicker.time.TimePickerDialog$Node: com.android.datetimepicker.time.TimePickerDialog$Node canReach(int)>(i0);

        if r1 != null goto label2;

        return 0;

     label2:
        goto label1;

     label3:
        return 1;
    }

    private boolean isTypedTimeFullyLegal()
    {
        com.android.datetimepicker.time.TimePickerDialog r0;
        int[] r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.ArrayList $r2, $r4;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Integer $r3, $r5;

        r0 := @this: com.android.datetimepicker.time.TimePickerDialog;

        $z0 = r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mIs24HourMode>;

        if $z0 == 0 goto label3;

        r1 = specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: int[] getEnteredTime(java.lang.Boolean[])>(null);

        $i2 = r1[0];

        if $i2 < 0 goto label1;

        $i3 = r1[1];

        if $i3 < 0 goto label1;

        $i4 = r1[1];

        if $i4 >= 60 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        return $z4;

     label3:
        $r2 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.util.ArrayList mTypedTimes>;

        $i0 = specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: int getAmOrPmKeyCode(int)>(0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $z1 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>($r3);

        if $z1 != 0 goto label4;

        $r4 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.util.ArrayList mTypedTimes>;

        $i1 = specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: int getAmOrPmKeyCode(int)>(1);

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        $z2 = virtualinvoke $r4.<java.util.ArrayList: boolean contains(java.lang.Object)>($r5);

        if $z2 == 0 goto label5;

     label4:
        $z3 = 1;

        goto label6;

     label5:
        $z3 = 0;

     label6:
        return $z3;
    }

    private int deleteLastTypedKey()
    {
        com.android.datetimepicker.time.TimePickerDialog r0;
        int i0, $i1, $i2;
        java.util.ArrayList $r1, $r2;
        java.lang.Object $r3;
        java.lang.Integer $r4;
        boolean $z0;
        android.widget.TextView $r5;

        r0 := @this: com.android.datetimepicker.time.TimePickerDialog;

        $r2 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.util.ArrayList mTypedTimes>;

        $r1 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.util.ArrayList mTypedTimes>;

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        $i2 = $i1 - 1;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object remove(int)>($i2);

        $r4 = (java.lang.Integer) $r3;

        i0 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        $z0 = specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: boolean isTypedTimeFullyLegal()>();

        if $z0 != 0 goto label1;

        $r5 = r0.<com.android.datetimepicker.time.TimePickerDialog: android.widget.TextView mDoneButton>;

        virtualinvoke $r5.<android.widget.TextView: void setEnabled(boolean)>(0);

     label1:
        return i0;
    }

    private void finishKbMode(boolean)
    {
        com.android.datetimepicker.time.TimePickerDialog r0;
        boolean z0, $z1, $z3;
        int[] r1;
        java.util.ArrayList $r2, $r5;
        com.android.datetimepicker.time.RadialPickerLayout $r3, $r4, $r6;
        int $i0, $i1, $i2;

        r0 := @this: com.android.datetimepicker.time.TimePickerDialog;

        z0 := @parameter0: boolean;

        r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mInKbMode> = 0;

        $r2 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.util.ArrayList mTypedTimes>;

        $z1 = virtualinvoke $r2.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 != 0 goto label2;

        r1 = specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: int[] getEnteredTime(java.lang.Boolean[])>(null);

        $r4 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.RadialPickerLayout mTimePicker>;

        $i1 = r1[0];

        $i0 = r1[1];

        virtualinvoke $r4.<com.android.datetimepicker.time.RadialPickerLayout: void setTime(int,int)>($i1, $i0);

        $z3 = r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mIs24HourMode>;

        if $z3 != 0 goto label1;

        $r6 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.RadialPickerLayout mTimePicker>;

        $i2 = r1[2];

        virtualinvoke $r6.<com.android.datetimepicker.time.RadialPickerLayout: void setAmOrPm(int)>($i2);

     label1:
        $r5 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.util.ArrayList mTypedTimes>;

        virtualinvoke $r5.<java.util.ArrayList: void clear()>();

     label2:
        if z0 == 0 goto label3;

        specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: void updateDisplay(boolean)>(0);

        $r3 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.RadialPickerLayout mTimePicker>;

        virtualinvoke $r3.<com.android.datetimepicker.time.RadialPickerLayout: boolean trySettingInputEnabled(boolean)>(1);

     label3:
        return;
    }

    private void updateDisplay(boolean)
    {
        com.android.datetimepicker.time.TimePickerDialog r0;
        boolean z0, $z1, $z2, $z3, $z4, $z5;
        int i0, i1, $i2, $i3, $i5, $i6, $i8, $i9, $i10, $i11;
        java.lang.String r1, r2, r3, r4, $r11, $r13, $r15, $r19, $r25, $r26;
        java.lang.Boolean[] $r5, r31;
        java.lang.Boolean $r6, $r7, $r8, $r9;
        java.lang.Object[] $r10, $r14;
        java.lang.Integer $r12, $r16;
        char $c4, $c7;
        android.widget.TextView $r17, $r18, $r20, $r21, $r22, $r23, $r29;
        java.util.ArrayList $r24;
        com.android.datetimepicker.time.RadialPickerLayout $r27, $r28, $r30;
        byte $b12;
        int[] r32;

        r0 := @this: com.android.datetimepicker.time.TimePickerDialog;

        z0 := @parameter0: boolean;

        if z0 != 0 goto label04;

        $r24 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.util.ArrayList mTypedTimes>;

        $z4 = virtualinvoke $r24.<java.util.ArrayList: boolean isEmpty()>();

        if $z4 == 0 goto label04;

        $r28 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.RadialPickerLayout mTimePicker>;

        i0 = virtualinvoke $r28.<com.android.datetimepicker.time.RadialPickerLayout: int getHours()>();

        $r27 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.RadialPickerLayout mTimePicker>;

        i1 = virtualinvoke $r27.<com.android.datetimepicker.time.RadialPickerLayout: int getMinutes()>();

        specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: void setHour(int,boolean)>(i0, 1);

        specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: void setMinute(int)>(i1);

        $z5 = r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mIs24HourMode>;

        if $z5 != 0 goto label03;

        if i0 >= 12 goto label01;

        $b12 = 0;

        goto label02;

     label01:
        $b12 = 1;

     label02:
        specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: void updateAmPmDisplay(int)>($b12);

     label03:
        $r30 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.RadialPickerLayout mTimePicker>;

        $i11 = virtualinvoke $r30.<com.android.datetimepicker.time.RadialPickerLayout: int getCurrentItemShowing()>();

        specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: void setCurrentItemShowing(int,boolean,boolean,boolean)>($i11, 1, 1, 1);

        $r29 = r0.<com.android.datetimepicker.time.TimePickerDialog: android.widget.TextView mDoneButton>;

        virtualinvoke $r29.<android.widget.TextView: void setEnabled(boolean)>(1);

        goto label13;

     label04:
        $r5 = newarray (java.lang.Boolean)[2];

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r5[0] = $r6;

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r5[1] = $r7;

        r31 = $r5;

        r32 = specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: int[] getEnteredTime(java.lang.Boolean[])>(r31);

        $r8 = r31[0];

        $z1 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        if $z1 == 0 goto label05;

        $r26 = "%02d";

        goto label06;

     label05:
        $r26 = "%2d";

     label06:
        r1 = $r26;

        $r9 = r31[1];

        $z2 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

        if $z2 == 0 goto label07;

        $r25 = "%02d";

        goto label08;

     label07:
        $r25 = "%2d";

     label08:
        r2 = $r25;

        $i2 = r32[0];

        if $i2 != -1 goto label09;

        $r13 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.lang.String mDoublePlaceholderText>;

        goto label10;

     label09:
        $r10 = newarray (java.lang.Object)[1];

        $i3 = r32[0];

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r10[0] = $r12;

        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, $r10);

        $c4 = r0.<com.android.datetimepicker.time.TimePickerDialog: char mPlaceholderText>;

        $r13 = virtualinvoke $r11.<java.lang.String: java.lang.String replace(char,char)>(32, $c4);

     label10:
        r3 = $r13;

        $i5 = r32[1];

        if $i5 != -1 goto label11;

        $r19 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.lang.String mDoublePlaceholderText>;

        goto label12;

     label11:
        $r14 = newarray (java.lang.Object)[1];

        $i6 = r32[1];

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        $r14[0] = $r16;

        $r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r2, $r14);

        $c7 = r0.<com.android.datetimepicker.time.TimePickerDialog: char mPlaceholderText>;

        $r19 = virtualinvoke $r15.<java.lang.String: java.lang.String replace(char,char)>(32, $c7);

     label12:
        r4 = $r19;

        $r17 = r0.<com.android.datetimepicker.time.TimePickerDialog: android.widget.TextView mHourView>;

        virtualinvoke $r17.<android.widget.TextView: void setText(java.lang.CharSequence)>(r3);

        $r18 = r0.<com.android.datetimepicker.time.TimePickerDialog: android.widget.TextView mHourSpaceView>;

        virtualinvoke $r18.<android.widget.TextView: void setText(java.lang.CharSequence)>(r3);

        $r22 = r0.<com.android.datetimepicker.time.TimePickerDialog: android.widget.TextView mHourView>;

        $i8 = r0.<com.android.datetimepicker.time.TimePickerDialog: int mUnselectedColor>;

        virtualinvoke $r22.<android.widget.TextView: void setTextColor(int)>($i8);

        $r20 = r0.<com.android.datetimepicker.time.TimePickerDialog: android.widget.TextView mMinuteView>;

        virtualinvoke $r20.<android.widget.TextView: void setText(java.lang.CharSequence)>(r4);

        $r21 = r0.<com.android.datetimepicker.time.TimePickerDialog: android.widget.TextView mMinuteSpaceView>;

        virtualinvoke $r21.<android.widget.TextView: void setText(java.lang.CharSequence)>(r4);

        $r23 = r0.<com.android.datetimepicker.time.TimePickerDialog: android.widget.TextView mMinuteView>;

        $i10 = r0.<com.android.datetimepicker.time.TimePickerDialog: int mUnselectedColor>;

        virtualinvoke $r23.<android.widget.TextView: void setTextColor(int)>($i10);

        $z3 = r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mIs24HourMode>;

        if $z3 != 0 goto label13;

        $i9 = r32[2];

        specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: void updateAmPmDisplay(int)>($i9);

     label13:
        return;
    }

    private static int getValFromKeyCode(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 7: goto label01;
            case 8: goto label02;
            case 9: goto label03;
            case 10: goto label04;
            case 11: goto label05;
            case 12: goto label06;
            case 13: goto label07;
            case 14: goto label08;
            case 15: goto label09;
            case 16: goto label10;
            default: goto label11;
        };

     label01:
        return 0;

     label02:
        return 1;

     label03:
        return 2;

     label04:
        return 3;

     label05:
        return 4;

     label06:
        return 5;

     label07:
        return 6;

     label08:
        return 7;

     label09:
        return 8;

     label10:
        return 9;

     label11:
        return -1;
    }

    private int[] getEnteredTime(java.lang.Boolean[])
    {
        com.android.datetimepicker.time.TimePickerDialog r0;
        java.lang.Boolean[] r1;
        byte b0, b1;
        int i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19;
        boolean $z0, $z1;
        java.util.ArrayList $r2, $r4, $r5, $r10, $r11;
        int[] $r3, r14;
        java.lang.Integer $r6, $r13;
        java.lang.Object $r7, $r12;
        java.lang.Boolean $r8, $r9;

        r0 := @this: com.android.datetimepicker.time.TimePickerDialog;

        r1 := @parameter0: java.lang.Boolean[];

        b0 = -1;

        b1 = 1;

        $z0 = r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mIs24HourMode>;

        if $z0 != 0 goto label3;

        $z1 = specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: boolean isTypedTimeFullyLegal()>();

        if $z1 == 0 goto label3;

        $r10 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.util.ArrayList mTypedTimes>;

        $r11 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.util.ArrayList mTypedTimes>;

        $i15 = virtualinvoke $r11.<java.util.ArrayList: int size()>();

        $i16 = $i15 - 1;

        $r12 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>($i16);

        $r13 = (java.lang.Integer) $r12;

        i2 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        $i18 = specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: int getAmOrPmKeyCode(int)>(0);

        if i2 != $i18 goto label1;

        b0 = 0;

        goto label2;

     label1:
        $i17 = specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: int getAmOrPmKeyCode(int)>(1);

        if i2 != $i17 goto label2;

        b0 = 1;

     label2:
        b1 = 2;

     label3:
        i19 = -1;

        i3 = -1;

        i4 = b1;

     label4:
        $r2 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.util.ArrayList mTypedTimes>;

        $i6 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        if i4 > $i6 goto label9;

        $r5 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.util.ArrayList mTypedTimes>;

        $r4 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.util.ArrayList mTypedTimes>;

        $i7 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        $i8 = $i7 - i4;

        $r7 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i8);

        $r6 = (java.lang.Integer) $r7;

        $i9 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        i5 = staticinvoke <com.android.datetimepicker.time.TimePickerDialog: int getValFromKeyCode(int)>($i9);

        if i4 != b1 goto label5;

        i19 = i5;

        goto label8;

     label5:
        $i11 = b1 + 1;

        if i4 != $i11 goto label6;

        $i14 = 10 * i5;

        i19 = i19 + $i14;

        if r1 == null goto label8;

        if i5 != 0 goto label8;

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        r1[1] = $r9;

        goto label8;

     label6:
        $i10 = b1 + 2;

        if i4 != $i10 goto label7;

        i3 = i5;

        goto label8;

     label7:
        $i13 = b1 + 3;

        if i4 != $i13 goto label8;

        $i12 = 10 * i5;

        i3 = i3 + $i12;

        if r1 == null goto label8;

        if i5 != 0 goto label8;

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        r1[0] = $r8;

     label8:
        i4 = i4 + 1;

        goto label4;

     label9:
        $r3 = newarray (int)[3];

        $r3[0] = i3;

        $r3[1] = i19;

        $r3[2] = b0;

        r14 = $r3;

        return r14;
    }

    private int getAmOrPmKeyCode(int)
    {
        com.android.datetimepicker.time.TimePickerDialog r0;
        int i0, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14;
        android.view.KeyCharacterMap r1;
        char c1, c2;
        android.view.KeyEvent[] r2;
        java.lang.String $r3, $r4, $r6, $r7, $r9, $r10;
        java.util.Locale $r5, $r8;
        char[] $r11;
        android.view.KeyEvent $r12, $r13;

        r0 := @this: com.android.datetimepicker.time.TimePickerDialog;

        i0 := @parameter0: int;

        $i4 = r0.<com.android.datetimepicker.time.TimePickerDialog: int mAmKeyCode>;

        if $i4 == -1 goto label1;

        $i14 = r0.<com.android.datetimepicker.time.TimePickerDialog: int mPmKeyCode>;

        if $i14 != -1 goto label5;

     label1:
        r1 = staticinvoke <android.view.KeyCharacterMap: android.view.KeyCharacterMap load(int)>(-1);

        i3 = 0;

     label2:
        $r3 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.lang.String mAmText>;

        $i5 = virtualinvoke $r3.<java.lang.String: int length()>();

        $r4 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.lang.String mPmText>;

        $i6 = virtualinvoke $r4.<java.lang.String: int length()>();

        $i7 = staticinvoke <java.lang.Math: int max(int,int)>($i5, $i6);

        if i3 >= $i7 goto label5;

        $r6 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.lang.String mAmText>;

        $r5 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r5);

        c1 = virtualinvoke $r7.<java.lang.String: char charAt(int)>(i3);

        $r9 = r0.<com.android.datetimepicker.time.TimePickerDialog: java.lang.String mPmText>;

        $r8 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r8);

        c2 = virtualinvoke $r10.<java.lang.String: char charAt(int)>(i3);

        if c1 == c2 goto label4;

        $r11 = newarray (char)[2];

        $r11[0] = c1;

        $r11[1] = c2;

        r2 = virtualinvoke r1.<android.view.KeyCharacterMap: android.view.KeyEvent[] getEvents(char[])>($r11);

        if r2 == null goto label3;

        $i10 = lengthof r2;

        if $i10 != 4 goto label3;

        $r12 = r2[0];

        $i12 = virtualinvoke $r12.<android.view.KeyEvent: int getKeyCode()>();

        r0.<com.android.datetimepicker.time.TimePickerDialog: int mAmKeyCode> = $i12;

        $r13 = r2[2];

        $i13 = virtualinvoke $r13.<android.view.KeyEvent: int getKeyCode()>();

        r0.<com.android.datetimepicker.time.TimePickerDialog: int mPmKeyCode> = $i13;

        goto label5;

     label3:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("TimePickerDialog", "Unable to find keycodes for AM and PM.");

        goto label5;

     label4:
        i3 = i3 + 1;

        goto label2;

     label5:
        if i0 != 0 goto label6;

        $i9 = r0.<com.android.datetimepicker.time.TimePickerDialog: int mAmKeyCode>;

        return $i9;

     label6:
        if i0 != 1 goto label7;

        $i8 = r0.<com.android.datetimepicker.time.TimePickerDialog: int mPmKeyCode>;

        return $i8;

     label7:
        return -1;
    }

    private void generateLegalTimesTree()
    {
        com.android.datetimepicker.time.TimePickerDialog r0;
        byte b0, b1, b2, b3, b4, b5, b6, b7, b8, b9;
        com.android.datetimepicker.time.TimePickerDialog$Node r1, r2, r3, r4, r5, $r7, $r8, $r10, $r11, $r14, $r16, $r17, $r19, $r21, $r23, $r25, $r26, $r27, $r30, $r32, $r33, $r35, $r38, $r39, $r42, $r44, $r45, $r46, $r48, $r50, $r52, $r54, r55, r56, r57, r58, r59, r60, r61, r62, r63, r64, r65, r66, r67, r68, r69, r70;
        int[] $r6, $r9, $r12, $r13, $r15, $r18, $r20, $r22, $r24, $r28, $r29, $r31, $r34, $r36, $r37, $r40, $r41, $r43, $r47, $r49, $r51, $r53;
        boolean $z0;
        int $i10, $i11;

        r0 := @this: com.android.datetimepicker.time.TimePickerDialog;

        b0 = 7;

        b1 = 8;

        b2 = 9;

        b3 = 10;

        b4 = 11;

        b5 = 12;

        b6 = 13;

        b7 = 14;

        b8 = 15;

        b9 = 16;

        $r7 = new com.android.datetimepicker.time.TimePickerDialog$Node;

        $r6 = newarray (int)[0];

        specialinvoke $r7.<com.android.datetimepicker.time.TimePickerDialog$Node: void <init>(com.android.datetimepicker.time.TimePickerDialog,int[])>(r0, $r6);

        r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.TimePickerDialog$Node mLegalTimesTree> = $r7;

        $z0 = r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mIs24HourMode>;

        if $z0 == 0 goto label1;

        $r30 = new com.android.datetimepicker.time.TimePickerDialog$Node;

        $r36 = newarray (int)[6];

        $r36[0] = b0;

        $r36[1] = b1;

        $r36[2] = b2;

        $r36[3] = b3;

        $r36[4] = b4;

        $r36[5] = b5;

        specialinvoke $r30.<com.android.datetimepicker.time.TimePickerDialog$Node: void <init>(com.android.datetimepicker.time.TimePickerDialog,int[])>(r0, $r36);

        r1 = $r30;

        $r35 = new com.android.datetimepicker.time.TimePickerDialog$Node;

        $r34 = newarray (int)[10];

        $r34[0] = b0;

        $r34[1] = b1;

        $r34[2] = b2;

        $r34[3] = b3;

        $r34[4] = b4;

        $r34[5] = b5;

        $r34[6] = b6;

        $r34[7] = b7;

        $r34[8] = b8;

        $r34[9] = b9;

        specialinvoke $r35.<com.android.datetimepicker.time.TimePickerDialog$Node: void <init>(com.android.datetimepicker.time.TimePickerDialog,int[])>(r0, $r34);

        r2 = $r35;

        virtualinvoke r1.<com.android.datetimepicker.time.TimePickerDialog$Node: void addChild(com.android.datetimepicker.time.TimePickerDialog$Node)>(r2);

        $r33 = new com.android.datetimepicker.time.TimePickerDialog$Node;

        $r40 = newarray (int)[2];

        $r40[0] = b0;

        $r40[1] = b1;

        specialinvoke $r33.<com.android.datetimepicker.time.TimePickerDialog$Node: void <init>(com.android.datetimepicker.time.TimePickerDialog,int[])>(r0, $r40);

        r3 = $r33;

        $r39 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.TimePickerDialog$Node mLegalTimesTree>;

        virtualinvoke $r39.<com.android.datetimepicker.time.TimePickerDialog$Node: void addChild(com.android.datetimepicker.time.TimePickerDialog$Node)>(r3);

        $r38 = new com.android.datetimepicker.time.TimePickerDialog$Node;

        $r37 = newarray (int)[6];

        $r37[0] = b0;

        $r37[1] = b1;

        $r37[2] = b2;

        $r37[3] = b3;

        $r37[4] = b4;

        $r37[5] = b5;

        specialinvoke $r38.<com.android.datetimepicker.time.TimePickerDialog$Node: void <init>(com.android.datetimepicker.time.TimePickerDialog,int[])>(r0, $r37);

        r4 = $r38;

        virtualinvoke r3.<com.android.datetimepicker.time.TimePickerDialog$Node: void addChild(com.android.datetimepicker.time.TimePickerDialog$Node)>(r4);

        virtualinvoke r4.<com.android.datetimepicker.time.TimePickerDialog$Node: void addChild(com.android.datetimepicker.time.TimePickerDialog$Node)>(r1);

        $r44 = new com.android.datetimepicker.time.TimePickerDialog$Node;

        $r43 = newarray (int)[4];

        $r43[0] = b6;

        $r43[1] = b7;

        $r43[2] = b8;

        $r43[3] = b9;

        specialinvoke $r44.<com.android.datetimepicker.time.TimePickerDialog$Node: void <init>(com.android.datetimepicker.time.TimePickerDialog,int[])>(r0, $r43);

        r5 = $r44;

        virtualinvoke r4.<com.android.datetimepicker.time.TimePickerDialog$Node: void addChild(com.android.datetimepicker.time.TimePickerDialog$Node)>(r5);

        $r42 = new com.android.datetimepicker.time.TimePickerDialog$Node;

        $r41 = newarray (int)[4];

        $r41[0] = b6;

        $r41[1] = b7;

        $r41[2] = b8;

        $r41[3] = b9;

        specialinvoke $r42.<com.android.datetimepicker.time.TimePickerDialog$Node: void <init>(com.android.datetimepicker.time.TimePickerDialog,int[])>(r0, $r41);

        r55 = $r42;

        virtualinvoke r3.<com.android.datetimepicker.time.TimePickerDialog$Node: void addChild(com.android.datetimepicker.time.TimePickerDialog$Node)>(r55);

        virtualinvoke r55.<com.android.datetimepicker.time.TimePickerDialog$Node: void addChild(com.android.datetimepicker.time.TimePickerDialog$Node)>(r1);

        $r48 = new com.android.datetimepicker.time.TimePickerDialog$Node;

        $r47 = newarray (int)[1];

        $r47[0] = b2;

        specialinvoke $r48.<com.android.datetimepicker.time.TimePickerDialog$Node: void <init>(com.android.datetimepicker.time.TimePickerDialog,int[])>(r0, $r47);

        r56 = $r48;

        $r46 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.TimePickerDialog$Node mLegalTimesTree>;

        virtualinvoke $r46.<com.android.datetimepicker.time.TimePickerDialog$Node: void addChild(com.android.datetimepicker.time.TimePickerDialog$Node)>(r56);

        $r45 = new com.android.datetimepicker.time.TimePickerDialog$Node;

        $r51 = newarray (int)[4];

        $r51[0] = b0;

        $r51[1] = b1;

        $r51[2] = b2;

        $r51[3] = b3;

        specialinvoke $r45.<com.android.datetimepicker.time.TimePickerDialog$Node: void <init>(com.android.datetimepicker.time.TimePickerDialog,int[])>(r0, $r51);

        r57 = $r45;

        virtualinvoke r56.<com.android.datetimepicker.time.TimePickerDialog$Node: void addChild(com.android.datetimepicker.time.TimePickerDialog$Node)>(r57);

        virtualinvoke r57.<com.android.datetimepicker.time.TimePickerDialog$Node: void addChild(com.android.datetimepicker.time.TimePickerDialog$Node)>(r1);

        $r52 = new com.android.datetimepicker.time.TimePickerDialog$Node;

        $r53 = newarray (int)[2];

        $r53[0] = b4;

        $r53[1] = b5;

        specialinvoke $r52.<com.android.datetimepicker.time.TimePickerDialog$Node: void <init>(com.android.datetimepicker.time.TimePickerDialog,int[])>(r0, $r53);

        r58 = $r52;

        virtualinvoke r56.<com.android.datetimepicker.time.TimePickerDialog$Node: void addChild(com.android.datetimepicker.time.TimePickerDialog$Node)>(r58);

        virtualinvoke r58.<com.android.datetimepicker.time.TimePickerDialog$Node: void addChild(com.android.datetimepicker.time.TimePickerDialog$Node)>(r2);

        $r54 = new com.android.datetimepicker.time.TimePickerDialog$Node;

        $r49 = newarray (int)[7];

        $r49[0] = b3;

        $r49[1] = b4;

        $r49[2] = b5;

        $r49[3] = b6;

        $r49[4] = b7;

        $r49[5] = b8;

        $r49[6] = b9;

        specialinvoke $r54.<com.android.datetimepicker.time.TimePickerDialog$Node: void <init>(com.android.datetimepicker.time.TimePickerDialog,int[])>(r0, $r49);

        r59 = $r54;

        $r50 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.TimePickerDialog$Node mLegalTimesTree>;

        virtualinvoke $r50.<com.android.datetimepicker.time.TimePickerDialog$Node: void addChild(com.android.datetimepicker.time.TimePickerDialog$Node)>(r59);

        virtualinvoke r59.<com.android.datetimepicker.time.TimePickerDialog$Node: void addChild(com.android.datetimepicker.time.TimePickerDialog$Node)>(r1);

        goto label2;

     label1:
        $r8 = new com.android.datetimepicker.time.TimePickerDialog$Node;

        $r9 = newarray (int)[2];

        $i10 = specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: int getAmOrPmKeyCode(int)>(0);

        $r9[0] = $i10;

        $i11 = specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: int getAmOrPmKeyCode(int)>(1);

        $r9[1] = $i11;

        specialinvoke $r8.<com.android.datetimepicker.time.TimePickerDialog$Node: void <init>(com.android.datetimepicker.time.TimePickerDialog,int[])>(r0, $r9);

        r60 = $r8;

        $r10 = new com.android.datetimepicker.time.TimePickerDialog$Node;

        $r12 = newarray (int)[1];

        $r12[0] = b1;

        specialinvoke $r10.<com.android.datetimepicker.time.TimePickerDialog$Node: void <init>(com.android.datetimepicker.time.TimePickerDialog,int[])>(r0, $r12);

        r61 = $r10;

        $r11 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.TimePickerDialog$Node mLegalTimesTree>;

        virtualinvoke $r11.<com.android.datetimepicker.time.TimePickerDialog$Node: void addChild(com.android.datetimepicker.time.TimePickerDialog$Node)>(r61);

        virtualinvoke r61.<com.android.datetimepicker.time.TimePickerDialog$Node: void addChild(com.android.datetimepicker.time.TimePickerDialog$Node)>(r60);

        $r14 = new com.android.datetimepicker.time.TimePickerDialog$Node;

        $r13 = newarray (int)[3];

        $r13[0] = b0;

        $r13[1] = b1;

        $r13[2] = b2;

        specialinvoke $r14.<com.android.datetimepicker.time.TimePickerDialog$Node: void <init>(com.android.datetimepicker.time.TimePickerDialog,int[])>(r0, $r13);

        r62 = $r14;

        virtualinvoke r61.<com.android.datetimepicker.time.TimePickerDialog$Node: void addChild(com.android.datetimepicker.time.TimePickerDialog$Node)>(r62);

        virtualinvoke r62.<com.android.datetimepicker.time.TimePickerDialog$Node: void addChild(com.android.datetimepicker.time.TimePickerDialog$Node)>(r60);

        $r16 = new com.android.datetimepicker.time.TimePickerDialog$Node;

        $r15 = newarray (int)[6];

        $r15[0] = b0;

        $r15[1] = b1;

        $r15[2] = b2;

        $r15[3] = b3;

        $r15[4] = b4;

        $r15[5] = b5;

        specialinvoke $r16.<com.android.datetimepicker.time.TimePickerDialog$Node: void <init>(com.android.datetimepicker.time.TimePickerDialog,int[])>(r0, $r15);

        r63 = $r16;

        virtualinvoke r62.<com.android.datetimepicker.time.TimePickerDialog$Node: void addChild(com.android.datetimepicker.time.TimePickerDialog$Node)>(r63);

        virtualinvoke r63.<com.android.datetimepicker.time.TimePickerDialog$Node: void addChild(com.android.datetimepicker.time.TimePickerDialog$Node)>(r60);

        $r19 = new com.android.datetimepicker.time.TimePickerDialog$Node;

        $r20 = newarray (int)[10];

        $r20[0] = b0;

        $r20[1] = b1;

        $r20[2] = b2;

        $r20[3] = b3;

        $r20[4] = b4;

        $r20[5] = b5;

        $r20[6] = b6;

        $r20[7] = b7;

        $r20[8] = b8;

        $r20[9] = b9;

        specialinvoke $r19.<com.android.datetimepicker.time.TimePickerDialog$Node: void <init>(com.android.datetimepicker.time.TimePickerDialog,int[])>(r0, $r20);

        r64 = $r19;

        virtualinvoke r63.<com.android.datetimepicker.time.TimePickerDialog$Node: void addChild(com.android.datetimepicker.time.TimePickerDialog$Node)>(r64);

        virtualinvoke r64.<com.android.datetimepicker.time.TimePickerDialog$Node: void addChild(com.android.datetimepicker.time.TimePickerDialog$Node)>(r60);

        $r17 = new com.android.datetimepicker.time.TimePickerDialog$Node;

        $r18 = newarray (int)[4];

        $r18[0] = b6;

        $r18[1] = b7;

        $r18[2] = b8;

        $r18[3] = b9;

        specialinvoke $r17.<com.android.datetimepicker.time.TimePickerDialog$Node: void <init>(com.android.datetimepicker.time.TimePickerDialog,int[])>(r0, $r18);

        r65 = $r17;

        virtualinvoke r62.<com.android.datetimepicker.time.TimePickerDialog$Node: void addChild(com.android.datetimepicker.time.TimePickerDialog$Node)>(r65);

        virtualinvoke r65.<com.android.datetimepicker.time.TimePickerDialog$Node: void addChild(com.android.datetimepicker.time.TimePickerDialog$Node)>(r60);

        $r23 = new com.android.datetimepicker.time.TimePickerDialog$Node;

        $r24 = newarray (int)[3];

        $r24[0] = b3;

        $r24[1] = b4;

        $r24[2] = b5;

        specialinvoke $r23.<com.android.datetimepicker.time.TimePickerDialog$Node: void <init>(com.android.datetimepicker.time.TimePickerDialog,int[])>(r0, $r24);

        r66 = $r23;

        virtualinvoke r61.<com.android.datetimepicker.time.TimePickerDialog$Node: void addChild(com.android.datetimepicker.time.TimePickerDialog$Node)>(r66);

        $r21 = new com.android.datetimepicker.time.TimePickerDialog$Node;

        $r22 = newarray (int)[10];

        $r22[0] = b0;

        $r22[1] = b1;

        $r22[2] = b2;

        $r22[3] = b3;

        $r22[4] = b4;

        $r22[5] = b5;

        $r22[6] = b6;

        $r22[7] = b7;

        $r22[8] = b8;

        $r22[9] = b9;

        specialinvoke $r21.<com.android.datetimepicker.time.TimePickerDialog$Node: void <init>(com.android.datetimepicker.time.TimePickerDialog,int[])>(r0, $r22);

        r67 = $r21;

        virtualinvoke r66.<com.android.datetimepicker.time.TimePickerDialog$Node: void addChild(com.android.datetimepicker.time.TimePickerDialog$Node)>(r67);

        virtualinvoke r67.<com.android.datetimepicker.time.TimePickerDialog$Node: void addChild(com.android.datetimepicker.time.TimePickerDialog$Node)>(r60);

        $r27 = new com.android.datetimepicker.time.TimePickerDialog$Node;

        $r28 = newarray (int)[8];

        $r28[0] = b2;

        $r28[1] = b3;

        $r28[2] = b4;

        $r28[3] = b5;

        $r28[4] = b6;

        $r28[5] = b7;

        $r28[6] = b8;

        $r28[7] = b9;

        specialinvoke $r27.<com.android.datetimepicker.time.TimePickerDialog$Node: void <init>(com.android.datetimepicker.time.TimePickerDialog,int[])>(r0, $r28);

        r68 = $r27;

        $r25 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.TimePickerDialog$Node mLegalTimesTree>;

        virtualinvoke $r25.<com.android.datetimepicker.time.TimePickerDialog$Node: void addChild(com.android.datetimepicker.time.TimePickerDialog$Node)>(r68);

        virtualinvoke r68.<com.android.datetimepicker.time.TimePickerDialog$Node: void addChild(com.android.datetimepicker.time.TimePickerDialog$Node)>(r60);

        $r26 = new com.android.datetimepicker.time.TimePickerDialog$Node;

        $r31 = newarray (int)[6];

        $r31[0] = b0;

        $r31[1] = b1;

        $r31[2] = b2;

        $r31[3] = b3;

        $r31[4] = b4;

        $r31[5] = b5;

        specialinvoke $r26.<com.android.datetimepicker.time.TimePickerDialog$Node: void <init>(com.android.datetimepicker.time.TimePickerDialog,int[])>(r0, $r31);

        r69 = $r26;

        virtualinvoke r68.<com.android.datetimepicker.time.TimePickerDialog$Node: void addChild(com.android.datetimepicker.time.TimePickerDialog$Node)>(r69);

        $r32 = new com.android.datetimepicker.time.TimePickerDialog$Node;

        $r29 = newarray (int)[10];

        $r29[0] = b0;

        $r29[1] = b1;

        $r29[2] = b2;

        $r29[3] = b3;

        $r29[4] = b4;

        $r29[5] = b5;

        $r29[6] = b6;

        $r29[7] = b7;

        $r29[8] = b8;

        $r29[9] = b9;

        specialinvoke $r32.<com.android.datetimepicker.time.TimePickerDialog$Node: void <init>(com.android.datetimepicker.time.TimePickerDialog,int[])>(r0, $r29);

        r70 = $r32;

        virtualinvoke r69.<com.android.datetimepicker.time.TimePickerDialog$Node: void addChild(com.android.datetimepicker.time.TimePickerDialog$Node)>(r70);

        virtualinvoke r70.<com.android.datetimepicker.time.TimePickerDialog$Node: void addChild(com.android.datetimepicker.time.TimePickerDialog$Node)>(r60);

     label2:
        return;
    }

    static void access$100(com.android.datetimepicker.time.TimePickerDialog, int, boolean, boolean, boolean)
    {
        com.android.datetimepicker.time.TimePickerDialog r0;
        int i0;
        boolean z0, z1, z2;

        r0 := @parameter0: com.android.datetimepicker.time.TimePickerDialog;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: void setCurrentItemShowing(int,boolean,boolean,boolean)>(i0, z0, z1, z2);

        return;
    }

    static boolean access$200(com.android.datetimepicker.time.TimePickerDialog)
    {
        com.android.datetimepicker.time.TimePickerDialog r0;
        boolean $z0;

        r0 := @parameter0: com.android.datetimepicker.time.TimePickerDialog;

        $z0 = r0.<com.android.datetimepicker.time.TimePickerDialog: boolean mInKbMode>;

        return $z0;
    }

    static boolean access$300(com.android.datetimepicker.time.TimePickerDialog)
    {
        com.android.datetimepicker.time.TimePickerDialog r0;
        boolean $z0;

        r0 := @parameter0: com.android.datetimepicker.time.TimePickerDialog;

        $z0 = specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: boolean isTypedTimeFullyLegal()>();

        return $z0;
    }

    static void access$400(com.android.datetimepicker.time.TimePickerDialog, boolean)
    {
        com.android.datetimepicker.time.TimePickerDialog r0;
        boolean z0;

        r0 := @parameter0: com.android.datetimepicker.time.TimePickerDialog;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: void finishKbMode(boolean)>(z0);

        return;
    }

    static com.android.datetimepicker.time.TimePickerDialog$OnTimeSetListener access$500(com.android.datetimepicker.time.TimePickerDialog)
    {
        com.android.datetimepicker.time.TimePickerDialog r0;
        com.android.datetimepicker.time.TimePickerDialog$OnTimeSetListener $r1;

        r0 := @parameter0: com.android.datetimepicker.time.TimePickerDialog;

        $r1 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.TimePickerDialog$OnTimeSetListener mCallback>;

        return $r1;
    }

    static com.android.datetimepicker.time.RadialPickerLayout access$600(com.android.datetimepicker.time.TimePickerDialog)
    {
        com.android.datetimepicker.time.TimePickerDialog r0;
        com.android.datetimepicker.time.RadialPickerLayout $r1;

        r0 := @parameter0: com.android.datetimepicker.time.TimePickerDialog;

        $r1 = r0.<com.android.datetimepicker.time.TimePickerDialog: com.android.datetimepicker.time.RadialPickerLayout mTimePicker>;

        return $r1;
    }

    static void access$700(com.android.datetimepicker.time.TimePickerDialog, int)
    {
        com.android.datetimepicker.time.TimePickerDialog r0;
        int i0;

        r0 := @parameter0: com.android.datetimepicker.time.TimePickerDialog;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: void updateAmPmDisplay(int)>(i0);

        return;
    }

    static boolean access$800(com.android.datetimepicker.time.TimePickerDialog, int)
    {
        com.android.datetimepicker.time.TimePickerDialog r0;
        int i0;
        boolean $z0;

        r0 := @parameter0: com.android.datetimepicker.time.TimePickerDialog;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.datetimepicker.time.TimePickerDialog: boolean processKeyUp(int)>(i0);

        return $z0;
    }

    public static void <clinit>()
    {
        <com.android.datetimepicker.time.TimePickerDialog: int PULSE_ANIMATOR_DELAY> = 300;

        <com.android.datetimepicker.time.TimePickerDialog: int PM> = 1;

        <com.android.datetimepicker.time.TimePickerDialog: int AM> = 0;

        <com.android.datetimepicker.time.TimePickerDialog: int ENABLE_PICKER_INDEX> = 3;

        <com.android.datetimepicker.time.TimePickerDialog: int AMPM_INDEX> = 2;

        <com.android.datetimepicker.time.TimePickerDialog: int MINUTE_INDEX> = 1;

        <com.android.datetimepicker.time.TimePickerDialog: int HOUR_INDEX> = 0;

        <com.android.datetimepicker.time.TimePickerDialog: java.lang.String KEY_DARK_THEME> = "dark_theme";

        <com.android.datetimepicker.time.TimePickerDialog: java.lang.String KEY_TYPED_TIMES> = "typed_times";

        <com.android.datetimepicker.time.TimePickerDialog: java.lang.String KEY_IN_KB_MODE> = "in_kb_mode";

        <com.android.datetimepicker.time.TimePickerDialog: java.lang.String KEY_CURRENT_ITEM_SHOWING> = "current_item_showing";

        <com.android.datetimepicker.time.TimePickerDialog: java.lang.String KEY_IS_24_HOUR_VIEW> = "is_24_hour_view";

        <com.android.datetimepicker.time.TimePickerDialog: java.lang.String KEY_MINUTE> = "minute";

        <com.android.datetimepicker.time.TimePickerDialog: java.lang.String KEY_HOUR_OF_DAY> = "hour_of_day";

        <com.android.datetimepicker.time.TimePickerDialog: java.lang.String TAG> = "TimePickerDialog";

        return;
    }
}
