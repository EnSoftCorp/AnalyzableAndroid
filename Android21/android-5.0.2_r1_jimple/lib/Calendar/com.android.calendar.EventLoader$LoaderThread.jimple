class com.android.calendar.EventLoader$LoaderThread extends java.lang.Thread
{
    java.util.concurrent.LinkedBlockingQueue mQueue;
    com.android.calendar.EventLoader mEventLoader;

    public void <init>(java.util.concurrent.LinkedBlockingQueue, com.android.calendar.EventLoader)
    {
        com.android.calendar.EventLoader$LoaderThread r0;
        java.util.concurrent.LinkedBlockingQueue r1;
        com.android.calendar.EventLoader r2;

        r0 := @this: com.android.calendar.EventLoader$LoaderThread;

        r1 := @parameter0: java.util.concurrent.LinkedBlockingQueue;

        r2 := @parameter1: com.android.calendar.EventLoader;

        specialinvoke r0.<java.lang.Thread: void <init>()>();

        r0.<com.android.calendar.EventLoader$LoaderThread: java.util.concurrent.LinkedBlockingQueue mQueue> = r1;

        r0.<com.android.calendar.EventLoader$LoaderThread: com.android.calendar.EventLoader mEventLoader> = r2;

        return;
    }

    public void shutdown()
    {
        com.android.calendar.EventLoader$LoaderThread r0;
        com.android.calendar.EventLoader$ShutdownRequest $r2;
        java.util.concurrent.LinkedBlockingQueue $r3;
        java.lang.InterruptedException $r4;

        r0 := @this: com.android.calendar.EventLoader$LoaderThread;

     label1:
        $r3 = r0.<com.android.calendar.EventLoader$LoaderThread: java.util.concurrent.LinkedBlockingQueue mQueue>;

        $r2 = new com.android.calendar.EventLoader$ShutdownRequest;

        specialinvoke $r2.<com.android.calendar.EventLoader$ShutdownRequest: void <init>(com.android.calendar.EventLoader$1)>(null);

        virtualinvoke $r3.<java.util.concurrent.LinkedBlockingQueue: void put(java.lang.Object)>($r2);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Cal", "LoaderThread.shutdown() interrupted!");

     label4:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    public void run()
    {
        com.android.calendar.EventLoader$LoaderThread r0;
        com.android.calendar.EventLoader$LoadRequest r1;
        java.util.concurrent.LinkedBlockingQueue $r2, $r4, $r7;
        java.lang.Object $r3, $r8;
        boolean $z0, $z1;
        com.android.calendar.EventLoader $r5, $r6;
        java.lang.InterruptedException $r9;

        r0 := @this: com.android.calendar.EventLoader$LoaderThread;

        staticinvoke <android.os.Process: void setThreadPriority(int)>(10);

     label1:
        $r2 = r0.<com.android.calendar.EventLoader$LoaderThread: java.util.concurrent.LinkedBlockingQueue mQueue>;

        $r3 = virtualinvoke $r2.<java.util.concurrent.LinkedBlockingQueue: java.lang.Object take()>();

        r1 = (com.android.calendar.EventLoader$LoadRequest) $r3;

     label2:
        $r4 = r0.<com.android.calendar.EventLoader$LoaderThread: java.util.concurrent.LinkedBlockingQueue mQueue>;

        $z0 = virtualinvoke $r4.<java.util.concurrent.LinkedBlockingQueue: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        $r6 = r0.<com.android.calendar.EventLoader$LoaderThread: com.android.calendar.EventLoader mEventLoader>;

        interfaceinvoke r1.<com.android.calendar.EventLoader$LoadRequest: void skipRequest(com.android.calendar.EventLoader)>($r6);

        $r7 = r0.<com.android.calendar.EventLoader$LoaderThread: java.util.concurrent.LinkedBlockingQueue mQueue>;

        $r8 = virtualinvoke $r7.<java.util.concurrent.LinkedBlockingQueue: java.lang.Object take()>();

        r1 = (com.android.calendar.EventLoader$LoadRequest) $r8;

        goto label2;

     label3:
        $z1 = r1 instanceof com.android.calendar.EventLoader$ShutdownRequest;

        if $z1 == 0 goto label5;

     label4:
        return;

     label5:
        $r5 = r0.<com.android.calendar.EventLoader$LoaderThread: com.android.calendar.EventLoader mEventLoader>;

        interfaceinvoke r1.<com.android.calendar.EventLoader$LoadRequest: void processRequest(com.android.calendar.EventLoader)>($r5);

     label6:
        goto label1;

     label7:
        $r9 := @caughtexception;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("Cal", "background LoaderThread interrupted!");

        goto label1;

        catch java.lang.InterruptedException from label1 to label4 with label7;
        catch java.lang.InterruptedException from label5 to label6 with label7;
    }
}
