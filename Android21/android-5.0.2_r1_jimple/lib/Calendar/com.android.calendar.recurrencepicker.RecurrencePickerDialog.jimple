public class com.android.calendar.recurrencepicker.RecurrencePickerDialog extends android.app.DialogFragment implements android.widget.AdapterView$OnItemSelectedListener, android.widget.CompoundButton$OnCheckedChangeListener, android.view.View$OnClickListener, android.widget.RadioGroup$OnCheckedChangeListener, com.android.datetimepicker.date.DatePickerDialog$OnDateSetListener
{
    private static final java.lang.String TAG;
    private static final int MIN_SCREEN_WIDTH_FOR_SINGLE_ROW_WEEK;
    private static final int INTERVAL_MAX;
    private static final int INTERVAL_DEFAULT;
    private static final int COUNT_MAX;
    private static final int COUNT_DEFAULT;
    private static final int FIFTH_WEEK_IN_A_MONTH;
    private static final int LAST_NTH_DAY_OF_WEEK;
    private com.android.datetimepicker.date.DatePickerDialog mDatePickerDialog;
    private android.content.res.Resources mResources;
    private com.android.calendarcommon2.EventRecurrence mRecurrence;
    private android.text.format.Time mTime;
    private com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel;
    private android.widget.Toast mToast;
    private final int[] TIME_DAY_TO_CALENDAR_DAY;
    private android.view.View mView;
    private android.widget.Spinner mFreqSpinner;
    private static final int[] mFreqModelToEventRecurrence;
    public static final java.lang.String BUNDLE_START_TIME_MILLIS;
    public static final java.lang.String BUNDLE_TIME_ZONE;
    public static final java.lang.String BUNDLE_RRULE;
    private static final java.lang.String BUNDLE_MODEL;
    private static final java.lang.String BUNDLE_END_COUNT_HAS_FOCUS;
    private static final java.lang.String FRAG_TAG_DATE_PICKER;
    private android.widget.Switch mRepeatSwitch;
    private android.widget.EditText mInterval;
    private android.widget.TextView mIntervalPreText;
    private android.widget.TextView mIntervalPostText;
    private int mIntervalResId;
    private android.widget.Spinner mEndSpinner;
    private android.widget.TextView mEndDateTextView;
    private android.widget.EditText mEndCount;
    private android.widget.TextView mPostEndCount;
    private boolean mHidePostEndCount;
    private java.util.ArrayList mEndSpinnerArray;
    private com.android.calendar.recurrencepicker.RecurrencePickerDialog$EndSpinnerAdapter mEndSpinnerAdapter;
    private java.lang.String mEndNeverStr;
    private java.lang.String mEndDateLabel;
    private java.lang.String mEndCountLabel;
    private android.widget.LinearLayout mWeekGroup;
    private android.widget.LinearLayout mWeekGroup2;
    private android.widget.ToggleButton[] mWeekByDayButtons;
    private java.lang.String[][] mMonthRepeatByDayOfWeekStrs;
    private android.widget.LinearLayout mMonthGroup;
    private android.widget.RadioGroup mMonthRepeatByRadioGroup;
    private android.widget.RadioButton mRepeatMonthlyByNthDayOfWeek;
    private android.widget.RadioButton mRepeatMonthlyByNthDayOfMonth;
    private java.lang.String mMonthRepeatByDayOfWeekStr;
    private android.widget.Button mDone;
    private com.android.calendar.recurrencepicker.RecurrencePickerDialog$OnRecurrenceSetListener mRecurrenceSetListener;

    public void <init>()
    {
        com.android.calendar.recurrencepicker.RecurrencePickerDialog r0;
        com.android.calendarcommon2.EventRecurrence $r1;
        android.text.format.Time $r2;
        com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel $r3;
        int[] $r4;
        java.util.ArrayList $r5;
        android.widget.ToggleButton[] $r6;

        r0 := @this: com.android.calendar.recurrencepicker.RecurrencePickerDialog;

        specialinvoke r0.<android.app.DialogFragment: void <init>()>();

        $r1 = new com.android.calendarcommon2.EventRecurrence;

        specialinvoke $r1.<com.android.calendarcommon2.EventRecurrence: void <init>()>();

        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendarcommon2.EventRecurrence mRecurrence> = $r1;

        $r2 = new android.text.format.Time;

        specialinvoke $r2.<android.text.format.Time: void <init>()>();

        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.text.format.Time mTime> = $r2;

        $r3 = new com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel;

        specialinvoke $r3.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: void <init>(com.android.calendar.recurrencepicker.RecurrencePickerDialog)>(r0);

        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel> = $r3;

        $r4 = newarray (int)[7];

        $r4[0] = 1;

        $r4[1] = 2;

        $r4[2] = 3;

        $r4[3] = 4;

        $r4[4] = 5;

        $r4[5] = 6;

        $r4[6] = 7;

        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: int[] TIME_DAY_TO_CALENDAR_DAY> = $r4;

        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: int mIntervalResId> = -1;

        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(int)>(3);

        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: java.util.ArrayList mEndSpinnerArray> = $r5;

        $r6 = newarray (android.widget.ToggleButton)[7];

        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.ToggleButton[] mWeekByDayButtons> = $r6;

        return;
    }

    public static boolean isSupportedMonthlyByNthDayOfWeek(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 <= 0 goto label1;

        if i0 <= 5 goto label2;

     label1:
        if i0 != -1 goto label3;

     label2:
        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    public static boolean canHandleRecurrenceRule(com.android.calendarcommon2.EventRecurrence)
    {
        com.android.calendarcommon2.EventRecurrence r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        int[] $r1;
        boolean $z0, $z1;
        java.lang.String $r2;

        r0 := @parameter0: com.android.calendarcommon2.EventRecurrence;

        $i2 = r0.<com.android.calendarcommon2.EventRecurrence: int freq>;

        tableswitch($i2)
        {
            case 4: goto label01;
            case 5: goto label01;
            case 6: goto label01;
            case 7: goto label01;
            default: goto label02;
        };

     label01:
        goto label03;

     label02:
        return 0;

     label03:
        $i3 = r0.<com.android.calendarcommon2.EventRecurrence: int count>;

        if $i3 <= 0 goto label04;

        $r2 = r0.<com.android.calendarcommon2.EventRecurrence: java.lang.String until>;

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z1 != 0 goto label04;

        return 0;

     label04:
        i0 = 0;

        i1 = 0;

     label05:
        $i4 = r0.<com.android.calendarcommon2.EventRecurrence: int bydayCount>;

        if i1 >= $i4 goto label07;

        $r1 = r0.<com.android.calendarcommon2.EventRecurrence: int[] bydayNum>;

        $i11 = $r1[i1];

        $z0 = staticinvoke <com.android.calendar.recurrencepicker.RecurrencePickerDialog: boolean isSupportedMonthlyByNthDayOfWeek(int)>($i11);

        if $z0 == 0 goto label06;

        i0 = i0 + 1;

     label06:
        i1 = i1 + 1;

        goto label05;

     label07:
        if i0 <= 1 goto label08;

        return 0;

     label08:
        if i0 <= 0 goto label09;

        $i10 = r0.<com.android.calendarcommon2.EventRecurrence: int freq>;

        if $i10 == 6 goto label09;

        return 0;

     label09:
        $i5 = r0.<com.android.calendarcommon2.EventRecurrence: int bymonthdayCount>;

        if $i5 <= 1 goto label10;

        return 0;

     label10:
        $i6 = r0.<com.android.calendarcommon2.EventRecurrence: int freq>;

        if $i6 != 6 goto label12;

        $i7 = r0.<com.android.calendarcommon2.EventRecurrence: int bydayCount>;

        if $i7 <= 1 goto label11;

        return 0;

     label11:
        $i8 = r0.<com.android.calendarcommon2.EventRecurrence: int bydayCount>;

        if $i8 <= 0 goto label12;

        $i9 = r0.<com.android.calendarcommon2.EventRecurrence: int bymonthdayCount>;

        if $i9 <= 0 goto label12;

        return 0;

     label12:
        return 1;
    }

    private static void copyEventRecurrenceToModel(com.android.calendarcommon2.EventRecurrence, com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel)
    {
        com.android.calendarcommon2.EventRecurrence r0;
        com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, i23;
        java.lang.String $r3, $r16, $r21, $r26;
        boolean $z0, $z1;
        boolean[] $r4, $r11;
        java.lang.IllegalStateException $r5, $r7, $r8, $r9, $r17, $r24;
        int[] $r6, $r10, $r12, $r13;
        android.text.format.Time $r14, $r15, $r19, $r25;
        java.lang.StringBuilder $r18, $r20, $r22, $r23, $r27, $r28;
        android.util.TimeFormatException $r29;

        r0 := @parameter0: com.android.calendarcommon2.EventRecurrence;

        r1 := @parameter1: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel;

        $i2 = r0.<com.android.calendarcommon2.EventRecurrence: int freq>;

        tableswitch($i2)
        {
            case 4: goto label01;
            case 5: goto label04;
            case 6: goto label02;
            case 7: goto label03;
            default: goto label05;
        };

     label01:
        r1.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int freq> = 0;

        goto label06;

     label02:
        r1.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int freq> = 2;

        goto label06;

     label03:
        r1.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int freq> = 3;

        goto label06;

     label04:
        r1.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int freq> = 1;

        goto label06;

     label05:
        $r24 = new java.lang.IllegalStateException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("freq=");

        $i22 = r0.<com.android.calendarcommon2.EventRecurrence: int freq>;

        $r27 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i22);

        $r26 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r26);

        throw $r24;

     label06:
        $i3 = r0.<com.android.calendarcommon2.EventRecurrence: int interval>;

        if $i3 <= 0 goto label07;

        $i21 = r0.<com.android.calendarcommon2.EventRecurrence: int interval>;

        r1.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int interval> = $i21;

     label07:
        $i4 = r0.<com.android.calendarcommon2.EventRecurrence: int count>;

        r1.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int endCount> = $i4;

        $i5 = r1.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int endCount>;

        if $i5 <= 0 goto label08;

        r1.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int end> = 2;

     label08:
        $r3 = r0.<com.android.calendarcommon2.EventRecurrence: java.lang.String until>;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r3);

        if $z0 != 0 goto label14;

        $r15 = r1.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: android.text.format.Time endDate>;

        if $r15 != null goto label09;

        $r25 = new android.text.format.Time;

        specialinvoke $r25.<android.text.format.Time: void <init>()>();

        r1.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: android.text.format.Time endDate> = $r25;

     label09:
        $r14 = r1.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: android.text.format.Time endDate>;

        $r16 = r0.<com.android.calendarcommon2.EventRecurrence: java.lang.String until>;

        virtualinvoke $r14.<android.text.format.Time: boolean parse(java.lang.String)>($r16);

     label10:
        goto label12;

     label11:
        $r29 := @caughtexception;

        r1.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: android.text.format.Time endDate> = null;

     label12:
        $i19 = r1.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int end>;

        if $i19 != 2 goto label13;

        $r19 = r1.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: android.text.format.Time endDate>;

        if $r19 == null goto label13;

        $r17 = new java.lang.IllegalStateException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("freq=");

        $i20 = r0.<com.android.calendarcommon2.EventRecurrence: int freq>;

        $r20 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i20);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r21);

        throw $r17;

     label13:
        r1.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int end> = 1;

     label14:
        $r4 = r1.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: boolean[] weeklyByDayOfWeek>;

        staticinvoke <java.util.Arrays: void fill(boolean[],boolean)>($r4, 0);

        $i6 = r0.<com.android.calendarcommon2.EventRecurrence: int bydayCount>;

        if $i6 <= 0 goto label19;

        i23 = 0;

        i0 = 0;

     label15:
        $i12 = r0.<com.android.calendarcommon2.EventRecurrence: int bydayCount>;

        if i0 >= $i12 goto label17;

        $r10 = r0.<com.android.calendarcommon2.EventRecurrence: int[] byday>;

        $i15 = $r10[i0];

        i1 = staticinvoke <com.android.calendarcommon2.EventRecurrence: int day2TimeDay(int)>($i15);

        $r11 = r1.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: boolean[] weeklyByDayOfWeek>;

        $r11[i1] = 1;

        $i16 = r1.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int freq>;

        if $i16 != 2 goto label16;

        $r12 = r0.<com.android.calendarcommon2.EventRecurrence: int[] bydayNum>;

        $i18 = $r12[i0];

        $z1 = staticinvoke <com.android.calendar.recurrencepicker.RecurrencePickerDialog: boolean isSupportedMonthlyByNthDayOfWeek(int)>($i18);

        if $z1 == 0 goto label16;

        r1.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int monthlyByDayOfWeek> = i1;

        $r13 = r0.<com.android.calendarcommon2.EventRecurrence: int[] bydayNum>;

        $i17 = $r13[i0];

        r1.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int monthlyByNthDayOfWeek> = $i17;

        r1.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int monthlyRepeat> = 1;

        i23 = i23 + 1;

     label16:
        i0 = i0 + 1;

        goto label15;

     label17:
        $i14 = r1.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int freq>;

        if $i14 != 2 goto label19;

        $i13 = r0.<com.android.calendarcommon2.EventRecurrence: int bydayCount>;

        if $i13 == 1 goto label18;

        $r8 = new java.lang.IllegalStateException;

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can handle only 1 byDayOfWeek in monthly");

        throw $r8;

     label18:
        if i23 == 1 goto label19;

        $r9 = new java.lang.IllegalStateException;

        specialinvoke $r9.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Didn\'t specify which nth day of week to repeat for a monthly");

        throw $r9;

     label19:
        $i7 = r1.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int freq>;

        if $i7 != 2 goto label22;

        $i8 = r0.<com.android.calendarcommon2.EventRecurrence: int bymonthdayCount>;

        if $i8 != 1 goto label21;

        $i10 = r1.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int monthlyRepeat>;

        if $i10 != 1 goto label20;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can handle only by monthday or by nth day of week, not both");

        throw $r7;

     label20:
        $r6 = r0.<com.android.calendarcommon2.EventRecurrence: int[] bymonthday>;

        $i11 = $r6[0];

        r1.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int monthlyByMonthDay> = $i11;

        r1.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int monthlyRepeat> = 0;

        goto label22;

     label21:
        $i9 = r0.<com.android.calendarcommon2.EventRecurrence: int bymonthCount>;

        if $i9 <= 1 goto label22;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Can handle only one bymonthday");

        throw $r5;

     label22:
        return;

        catch android.util.TimeFormatException from label09 to label10 with label11;
    }

    private static void copyModelToEventRecurrence(com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel, com.android.calendarcommon2.EventRecurrence)
    {
        com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel r0;
        com.android.calendarcommon2.EventRecurrence r1;
        byte b0;
        int i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i26, i27;
        int[] $r2, $r12, $r13, $r14, $r15, $r17, $r18, $r22, $r23, $r25, $r27, $r28, $r29, $r30, $r31, $r34;
        java.lang.IllegalStateException $r3, $r16, $r32, $r37, $r42;
        boolean $z0, $z1, $z2, $z3;
        java.lang.StringBuilder $r4, $r5, $r6, $r9, $r11, $r19, $r20, $r21, $r39, $r40, $r41;
        java.lang.String $r7, $r8, $r10, $r24, $r35, $r45;
        boolean[] $r26, $r33;
        android.text.format.Time $r36, $r38, $r43, $r44;

        r0 := @parameter0: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel;

        r1 := @parameter1: com.android.calendarcommon2.EventRecurrence;

        $i2 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int recurrenceState>;

        if $i2 != 0 goto label01;

        $r42 = new java.lang.IllegalStateException;

        specialinvoke $r42.<java.lang.IllegalStateException: void <init>(java.lang.String)>("There\'s no recurrence");

        throw $r42;

     label01:
        $r2 = <com.android.calendar.recurrencepicker.RecurrencePickerDialog: int[] mFreqModelToEventRecurrence>;

        $i3 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int freq>;

        $i4 = $r2[$i3];

        r1.<com.android.calendarcommon2.EventRecurrence: int freq> = $i4;

        $i5 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int interval>;

        if $i5 > 1 goto label02;

        r1.<com.android.calendarcommon2.EventRecurrence: int interval> = 0;

        goto label03;

     label02:
        $i6 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int interval>;

        r1.<com.android.calendarcommon2.EventRecurrence: int interval> = $i6;

     label03:
        $i7 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int end>;

        lookupswitch($i7)
        {
            case 1: goto label04;
            case 2: goto label06;
            default: goto label07;
        };

     label04:
        $r36 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: android.text.format.Time endDate>;

        if $r36 == null goto label05;

        $r38 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: android.text.format.Time endDate>;

        virtualinvoke $r38.<android.text.format.Time: void switchTimezone(java.lang.String)>("UTC");

        $r43 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: android.text.format.Time endDate>;

        virtualinvoke $r43.<android.text.format.Time: long normalize(boolean)>(0);

        $r44 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: android.text.format.Time endDate>;

        $r45 = virtualinvoke $r44.<android.text.format.Time: java.lang.String format2445()>();

        r1.<com.android.calendarcommon2.EventRecurrence: java.lang.String until> = $r45;

        r1.<com.android.calendarcommon2.EventRecurrence: int count> = 0;

        goto label08;

     label05:
        $r37 = new java.lang.IllegalStateException;

        specialinvoke $r37.<java.lang.IllegalStateException: void <init>(java.lang.String)>("end = END_BY_DATE but endDate is null");

        throw $r37;

     label06:
        $i8 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int endCount>;

        r1.<com.android.calendarcommon2.EventRecurrence: int count> = $i8;

        r1.<com.android.calendarcommon2.EventRecurrence: java.lang.String until> = null;

        $i9 = r1.<com.android.calendarcommon2.EventRecurrence: int count>;

        if $i9 > 0 goto label08;

        $r32 = new java.lang.IllegalStateException;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("count is ");

        $i24 = r1.<com.android.calendarcommon2.EventRecurrence: int count>;

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i24);

        $r35 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r32.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r35);

        throw $r32;

     label07:
        r1.<com.android.calendarcommon2.EventRecurrence: int count> = 0;

        r1.<com.android.calendarcommon2.EventRecurrence: java.lang.String until> = null;

     label08:
        r1.<com.android.calendarcommon2.EventRecurrence: int bydayCount> = 0;

        r1.<com.android.calendarcommon2.EventRecurrence: int bymonthdayCount> = 0;

        $i10 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int freq>;

        lookupswitch($i10)
        {
            case 1: goto label16;
            case 2: goto label09;
            default: goto label24;
        };

     label09:
        $i11 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int monthlyRepeat>;

        if $i11 != 0 goto label12;

        $i19 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int monthlyByMonthDay>;

        if $i19 <= 0 goto label24;

        $r22 = r1.<com.android.calendarcommon2.EventRecurrence: int[] bymonthday>;

        if $r22 == null goto label10;

        $i21 = r1.<com.android.calendarcommon2.EventRecurrence: int bymonthdayCount>;

        if $i21 >= 1 goto label11;

     label10:
        $r23 = newarray (int)[1];

        r1.<com.android.calendarcommon2.EventRecurrence: int[] bymonthday> = $r23;

     label11:
        $r25 = r1.<com.android.calendarcommon2.EventRecurrence: int[] bymonthday>;

        $i22 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int monthlyByMonthDay>;

        $r25[0] = $i22;

        r1.<com.android.calendarcommon2.EventRecurrence: int bymonthdayCount> = 1;

        goto label24;

     label12:
        $i12 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int monthlyRepeat>;

        if $i12 != 1 goto label24;

        $i13 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int monthlyByNthDayOfWeek>;

        $z1 = staticinvoke <com.android.calendar.recurrencepicker.RecurrencePickerDialog: boolean isSupportedMonthlyByNthDayOfWeek(int)>($i13);

        if $z1 != 0 goto label13;

        $r16 = new java.lang.IllegalStateException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("month repeat by nth week but n is ");

        $i18 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int monthlyByNthDayOfWeek>;

        $r19 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        $r24 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r24);

        throw $r16;

     label13:
        b0 = 1;

        $i14 = r1.<com.android.calendarcommon2.EventRecurrence: int bydayCount>;

        if $i14 < b0 goto label14;

        $r18 = r1.<com.android.calendarcommon2.EventRecurrence: int[] byday>;

        if $r18 == null goto label14;

        $r15 = r1.<com.android.calendarcommon2.EventRecurrence: int[] bydayNum>;

        if $r15 != null goto label15;

     label14:
        $r12 = newarray (int)[b0];

        r1.<com.android.calendarcommon2.EventRecurrence: int[] byday> = $r12;

        $r13 = newarray (int)[b0];

        r1.<com.android.calendarcommon2.EventRecurrence: int[] bydayNum> = $r13;

     label15:
        r1.<com.android.calendarcommon2.EventRecurrence: int bydayCount> = b0;

        $r14 = r1.<com.android.calendarcommon2.EventRecurrence: int[] byday>;

        $i15 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int monthlyByDayOfWeek>;

        $i16 = staticinvoke <com.android.calendarcommon2.EventRecurrence: int timeDay2Day(int)>($i15);

        $r14[0] = $i16;

        $r17 = r1.<com.android.calendarcommon2.EventRecurrence: int[] bydayNum>;

        $i17 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int monthlyByNthDayOfWeek>;

        $r17[0] = $i17;

        goto label24;

     label16:
        i26 = 0;

        i1 = 0;

     label17:
        if i1 >= 7 goto label19;

        $r33 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: boolean[] weeklyByDayOfWeek>;

        $z3 = $r33[i1];

        if $z3 == 0 goto label18;

        i26 = i26 + 1;

     label18:
        i1 = i1 + 1;

        goto label17;

     label19:
        $i20 = r1.<com.android.calendarcommon2.EventRecurrence: int bydayCount>;

        if $i20 < i26 goto label20;

        $r29 = r1.<com.android.calendarcommon2.EventRecurrence: int[] byday>;

        if $r29 == null goto label20;

        $r34 = r1.<com.android.calendarcommon2.EventRecurrence: int[] bydayNum>;

        if $r34 != null goto label21;

     label20:
        $r28 = newarray (int)[i26];

        r1.<com.android.calendarcommon2.EventRecurrence: int[] byday> = $r28;

        $r27 = newarray (int)[i26];

        r1.<com.android.calendarcommon2.EventRecurrence: int[] bydayNum> = $r27;

     label21:
        r1.<com.android.calendarcommon2.EventRecurrence: int bydayCount> = i26;

        i27 = 6;

     label22:
        if i27 < 0 goto label24;

        $r26 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: boolean[] weeklyByDayOfWeek>;

        $z2 = $r26[i27];

        if $z2 == 0 goto label23;

        $r31 = r1.<com.android.calendarcommon2.EventRecurrence: int[] bydayNum>;

        i26 = i26 + -1;

        $r31[i26] = 0;

        $r30 = r1.<com.android.calendarcommon2.EventRecurrence: int[] byday>;

        $i23 = staticinvoke <com.android.calendarcommon2.EventRecurrence: int timeDay2Day(int)>(i27);

        $r30[i26] = $i23;

     label23:
        i27 = i27 + -1;

        goto label22;

     label24:
        $z0 = staticinvoke <com.android.calendar.recurrencepicker.RecurrencePickerDialog: boolean canHandleRecurrenceRule(com.android.calendarcommon2.EventRecurrence)>(r1);

        if $z0 != 0 goto label25;

        $r3 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UI generated recurrence that it can\'t handle. ER:");

        $r7 = virtualinvoke r1.<com.android.calendarcommon2.EventRecurrence: java.lang.String toString()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Model: ");

        $r8 = virtualinvoke r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: java.lang.String toString()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r10);

        throw $r3;

     label25:
        return;
    }

    public android.view.View onCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)
    {
        com.android.calendar.recurrencepicker.RecurrencePickerDialog r0;
        android.view.LayoutInflater r1;
        android.view.ViewGroup r2;
        android.os.Bundle r3, r193;
        boolean z0, $z6, $z7, $z8;
        com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel r4, $r19, $r79, $r161, $r162, $r163, $r164, $r175, $r178, $r181, $r184, $r186, $r189;
        java.lang.String r5, r6, $r40, $r43, $r44, $r46, $r48, $r54, $r132, $r144, $r148, $r152;
        int i0, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i16, $i17, $i18, $i19, $i21, $i22, $i23, i25;
        byte b1, b2;
        com.android.calendarcommon2.EventRecurrence $r8, $r182, $r183, $r185;
        android.app.Activity $r9, $r25, $r61, $r112, r194;
        android.app.Dialog $r10;
        android.view.Window $r11;
        android.text.format.Time $r12, $r78, $r160, $r167, $r168, $r173, $r174, $r176, $r177, $r179, $r180, $r188, $r192;
        android.view.View $r13, $r16, $r18, $r21, $r26, $r28, $r29, $r32, $r35, $r36, $r38, $r50, $r51, $r58, $r59, $r65, $r66, $r67, $r70, $r72, $r73, $r74, $r84, $r106, $r107, $r109, $r110, $r111, $r117, $r118, $r121, $r126, $r127, $r129, $r130, $r141, $r154, $r155, $r165, $r172;
        android.content.res.Resources $r14, $r15, $r39, $r41, $r45, $r82, $r88, $r91, $r93, $r96, $r99, $r102, $r115;
        android.widget.Switch $r17, $r20, $r22;
        com.android.calendar.recurrencepicker.RecurrencePickerDialog$1 $r23;
        android.widget.Spinner $r24, $r27, $r30, $r52, $r53, $r57;
        android.widget.EditText $r31, $r33, $r69, $r71, $r122;
        com.android.calendar.recurrencepicker.RecurrencePickerDialog$2 $r34;
        android.widget.TextView $r37, $r42, $r64, $r76, $r77;
        java.util.ArrayList $r47, $r49, $r55, $r62;
        com.android.calendar.recurrencepicker.RecurrencePickerDialog$EndSpinnerAdapter $r56, $r60, $r63;
        com.android.calendar.recurrencepicker.RecurrencePickerDialog$3 $r68;
        android.widget.LinearLayout $r75, $r85, $r104, $r105, $r108, $r123, $r135, $r156, $r166, $r169, $r171;
        java.lang.String[][] $r80, $r81, $r86, $r89, $r92, $r95, $r98, $r101;
        java.text.DateFormatSymbols $r83, $r114;
        java.lang.String[] $r87, $r90, $r94, $r97, $r100, $r103, $r113, r197;
        android.content.res.Configuration $r116;
        android.widget.Button $r119, $r120;
        android.widget.RadioGroup $r124, $r125;
        android.widget.RadioButton $r128, $r131;
        int[] $r133, $r145, $r147, $r157;
        android.widget.ToggleButton[] $r134, $r137, $r139, $r142, $r146, $r151, $r153, $r159;
        android.widget.ToggleButton $r136, $r138, $r140, $r143, $r149, $r150, $r158, $r170;
        long $l15;
        boolean[] $r187, $r191;
        java.lang.Object $r190;
        android.widget.ArrayAdapter r196;

        r0 := @this: com.android.calendar.recurrencepicker.RecurrencePickerDialog;

        r1 := @parameter0: android.view.LayoutInflater;

        r2 := @parameter1: android.view.ViewGroup;

        r3 := @parameter2: android.os.Bundle;

        $r8 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendarcommon2.EventRecurrence mRecurrence>;

        $r9 = virtualinvoke r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.app.Activity getActivity()>();

        $i4 = staticinvoke <com.android.calendar.Utils: int getFirstDayOfWeek(android.content.Context)>($r9);

        $i5 = staticinvoke <com.android.calendarcommon2.EventRecurrence: int timeDay2Day(int)>($i4);

        $r8.<com.android.calendarcommon2.EventRecurrence: int wkst> = $i5;

        $r10 = virtualinvoke r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.app.Dialog getDialog()>();

        $r11 = virtualinvoke $r10.<android.app.Dialog: android.view.Window getWindow()>();

        virtualinvoke $r11.<android.view.Window: boolean requestFeature(int)>(1);

        z0 = 0;

        if r3 == null goto label02;

        $r190 = virtualinvoke r3.<android.os.Bundle: java.lang.Object get(java.lang.String)>("bundle_model");

        r4 = (com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel) $r190;

        if r4 == null goto label01;

        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel> = r4;

     label01:
        z0 = virtualinvoke r3.<android.os.Bundle: boolean getBoolean(java.lang.String)>("bundle_end_count_has_focus");

        goto label06;

     label02:
        r193 = virtualinvoke r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.os.Bundle getArguments()>();

        if r193 == null goto label05;

        $r174 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.text.format.Time mTime>;

        $l15 = virtualinvoke r193.<android.os.Bundle: long getLong(java.lang.String)>("bundle_event_start_time");

        virtualinvoke $r174.<android.text.format.Time: void set(long)>($l15);

        r5 = virtualinvoke r193.<android.os.Bundle: java.lang.String getString(java.lang.String)>("bundle_event_time_zone");

        $z6 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r5);

        if $z6 != 0 goto label03;

        $r192 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.text.format.Time mTime>;

        $r192.<android.text.format.Time: java.lang.String timezone> = r5;

     label03:
        $r173 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.text.format.Time mTime>;

        virtualinvoke $r173.<android.text.format.Time: long normalize(boolean)>(0);

        $r189 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $r187 = $r189.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: boolean[] weeklyByDayOfWeek>;

        $r188 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.text.format.Time mTime>;

        $i23 = $r188.<android.text.format.Time: int weekDay>;

        $r187[$i23] = 1;

        r6 = virtualinvoke r193.<android.os.Bundle: java.lang.String getString(java.lang.String)>("bundle_event_rrule");

        $z8 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r6);

        if $z8 != 0 goto label04;

        $r186 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $r186.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int recurrenceState> = 1;

        $r185 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendarcommon2.EventRecurrence mRecurrence>;

        virtualinvoke $r185.<com.android.calendarcommon2.EventRecurrence: void parse(java.lang.String)>(r6);

        $r183 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendarcommon2.EventRecurrence mRecurrence>;

        $r184 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        staticinvoke <com.android.calendar.recurrencepicker.RecurrencePickerDialog: void copyEventRecurrenceToModel(com.android.calendarcommon2.EventRecurrence,com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel)>($r183, $r184);

        $r182 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendarcommon2.EventRecurrence mRecurrence>;

        $i22 = $r182.<com.android.calendarcommon2.EventRecurrence: int bydayCount>;

        if $i22 != 0 goto label04;

        $r181 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $r191 = $r181.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: boolean[] weeklyByDayOfWeek>;

        $r180 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.text.format.Time mTime>;

        $i21 = $r180.<android.text.format.Time: int weekDay>;

        $r191[$i21] = 1;

     label04:
        goto label06;

     label05:
        $r12 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.text.format.Time mTime>;

        virtualinvoke $r12.<android.text.format.Time: void setToNow()>();

     label06:
        $r14 = virtualinvoke r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.content.res.Resources getResources()>();

        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.content.res.Resources mResources> = $r14;

        $r13 = virtualinvoke r1.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>(2130968634, r2, 1);

        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.view.View mView> = $r13;

        r194 = virtualinvoke r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.app.Activity getActivity()>();

        $r15 = virtualinvoke r194.<android.app.Activity: android.content.res.Resources getResources()>();

        virtualinvoke $r15.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $r16 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.view.View mView>;

        $r18 = virtualinvoke $r16.<android.view.View: android.view.View findViewById(int)>(2131755209);

        $r17 = (android.widget.Switch) $r18;

        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.Switch mRepeatSwitch> = $r17;

        $r22 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.Switch mRepeatSwitch>;

        $r19 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $i6 = $r19.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int recurrenceState>;

        if $i6 != 1 goto label07;

        $z7 = 1;

        goto label08;

     label07:
        $z7 = 0;

     label08:
        virtualinvoke $r22.<android.widget.Switch: void setChecked(boolean)>($z7);

        $r20 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.Switch mRepeatSwitch>;

        $r23 = new com.android.calendar.recurrencepicker.RecurrencePickerDialog$1;

        specialinvoke $r23.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$1: void <init>(com.android.calendar.recurrencepicker.RecurrencePickerDialog)>(r0);

        virtualinvoke $r20.<android.widget.Switch: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)>($r23);

        $r21 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.view.View mView>;

        $r26 = virtualinvoke $r21.<android.view.View: android.view.View findViewById(int)>(2131755208);

        $r27 = (android.widget.Spinner) $r26;

        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.Spinner mFreqSpinner> = $r27;

        $r24 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.Spinner mFreqSpinner>;

        virtualinvoke $r24.<android.widget.Spinner: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)>(r0);

        $r25 = virtualinvoke r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.app.Activity getActivity()>();

        r196 = staticinvoke <android.widget.ArrayAdapter: android.widget.ArrayAdapter createFromResource(android.content.Context,int,int)>($r25, 2131165204, 2130968636);

        virtualinvoke r196.<android.widget.ArrayAdapter: void setDropDownViewResource(int)>(2130968636);

        $r30 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.Spinner mFreqSpinner>;

        virtualinvoke $r30.<android.widget.Spinner: void setAdapter(android.widget.SpinnerAdapter)>(r196);

        $r28 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.view.View mView>;

        $r29 = virtualinvoke $r28.<android.view.View: android.view.View findViewById(int)>(2131755213);

        $r33 = (android.widget.EditText) $r29;

        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.EditText mInterval> = $r33;

        $r31 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.EditText mInterval>;

        $r34 = new com.android.calendar.recurrencepicker.RecurrencePickerDialog$2;

        specialinvoke $r34.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$2: void <init>(com.android.calendar.recurrencepicker.RecurrencePickerDialog,int,int,int)>(r0, 1, 1, 99);

        virtualinvoke $r31.<android.widget.EditText: void addTextChangedListener(android.text.TextWatcher)>($r34);

        $r32 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.view.View mView>;

        $r38 = virtualinvoke $r32.<android.view.View: android.view.View findViewById(int)>(2131755212);

        $r37 = (android.widget.TextView) $r38;

        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.TextView mIntervalPreText> = $r37;

        $r36 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.view.View mView>;

        $r35 = virtualinvoke $r36.<android.view.View: android.view.View findViewById(int)>(2131755214);

        $r42 = (android.widget.TextView) $r35;

        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.TextView mIntervalPostText> = $r42;

        $r41 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.content.res.Resources mResources>;

        $r40 = virtualinvoke $r41.<android.content.res.Resources: java.lang.String getString(int)>(2131493055);

        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: java.lang.String mEndNeverStr> = $r40;

        $r39 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.content.res.Resources mResources>;

        $r46 = virtualinvoke $r39.<android.content.res.Resources: java.lang.String getString(int)>(2131493056);

        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: java.lang.String mEndDateLabel> = $r46;

        $r45 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.content.res.Resources mResources>;

        $r44 = virtualinvoke $r45.<android.content.res.Resources: java.lang.String getString(int)>(2131493058);

        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: java.lang.String mEndCountLabel> = $r44;

        $r49 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: java.util.ArrayList mEndSpinnerArray>;

        $r43 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: java.lang.String mEndNeverStr>;

        virtualinvoke $r49.<java.util.ArrayList: boolean add(java.lang.Object)>($r43);

        $r47 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: java.util.ArrayList mEndSpinnerArray>;

        $r48 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: java.lang.String mEndDateLabel>;

        virtualinvoke $r47.<java.util.ArrayList: boolean add(java.lang.Object)>($r48);

        $r55 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: java.util.ArrayList mEndSpinnerArray>;

        $r54 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: java.lang.String mEndCountLabel>;

        virtualinvoke $r55.<java.util.ArrayList: boolean add(java.lang.Object)>($r54);

        $r50 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.view.View mView>;

        $r51 = virtualinvoke $r50.<android.view.View: android.view.View findViewById(int)>(2131755221);

        $r52 = (android.widget.Spinner) $r51;

        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.Spinner mEndSpinner> = $r52;

        $r53 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.Spinner mEndSpinner>;

        virtualinvoke $r53.<android.widget.Spinner: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)>(r0);

        $r60 = new com.android.calendar.recurrencepicker.RecurrencePickerDialog$EndSpinnerAdapter;

        $r61 = virtualinvoke r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.app.Activity getActivity()>();

        $r62 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: java.util.ArrayList mEndSpinnerArray>;

        specialinvoke $r60.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$EndSpinnerAdapter: void <init>(com.android.calendar.recurrencepicker.RecurrencePickerDialog,android.content.Context,java.util.ArrayList,int,int)>(r0, $r61, $r62, 2130968636, 2130968635);

        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$EndSpinnerAdapter mEndSpinnerAdapter> = $r60;

        $r63 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$EndSpinnerAdapter mEndSpinnerAdapter>;

        virtualinvoke $r63.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$EndSpinnerAdapter: void setDropDownViewResource(int)>(2130968636);

        $r57 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.Spinner mEndSpinner>;

        $r56 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$EndSpinnerAdapter mEndSpinnerAdapter>;

        virtualinvoke $r57.<android.widget.Spinner: void setAdapter(android.widget.SpinnerAdapter)>($r56);

        $r58 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.view.View mView>;

        $r59 = virtualinvoke $r58.<android.view.View: android.view.View findViewById(int)>(2131755222);

        $r69 = (android.widget.EditText) $r59;

        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.EditText mEndCount> = $r69;

        $r71 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.EditText mEndCount>;

        $r68 = new com.android.calendar.recurrencepicker.RecurrencePickerDialog$3;

        specialinvoke $r68.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$3: void <init>(com.android.calendar.recurrencepicker.RecurrencePickerDialog,int,int,int)>(r0, 1, 5, 730);

        virtualinvoke $r71.<android.widget.EditText: void addTextChangedListener(android.text.TextWatcher)>($r68);

        $r70 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.view.View mView>;

        $r65 = virtualinvoke $r70.<android.view.View: android.view.View findViewById(int)>(2131755223);

        $r64 = (android.widget.TextView) $r65;

        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.TextView mPostEndCount> = $r64;

        $r67 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.view.View mView>;

        $r66 = virtualinvoke $r67.<android.view.View: android.view.View findViewById(int)>(2131755224);

        $r77 = (android.widget.TextView) $r66;

        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.TextView mEndDateTextView> = $r77;

        $r76 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.TextView mEndDateTextView>;

        virtualinvoke $r76.<android.widget.TextView: void setOnClickListener(android.view.View$OnClickListener)>(r0);

        $r79 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $r78 = $r79.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: android.text.format.Time endDate>;

        if $r78 != null goto label13;

        $r163 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $r168 = new android.text.format.Time;

        $r167 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.text.format.Time mTime>;

        specialinvoke $r168.<android.text.format.Time: void <init>(android.text.format.Time)>($r167);

        $r163.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: android.text.format.Time endDate> = $r168;

        $r162 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $i14 = $r162.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int freq>;

        tableswitch($i14)
        {
            case 0: goto label09;
            case 1: goto label09;
            case 2: goto label10;
            case 3: goto label11;
            default: goto label12;
        };

     label09:
        $r164 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $r160 = $r164.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: android.text.format.Time endDate>;

        $i12 = $r160.<android.text.format.Time: int month>;

        $i13 = $i12 + 1;

        $r160.<android.text.format.Time: int month> = $i13;

        goto label12;

     label10:
        $r175 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $r176 = $r175.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: android.text.format.Time endDate>;

        $i16 = $r176.<android.text.format.Time: int month>;

        $i17 = $i16 + 3;

        $r176.<android.text.format.Time: int month> = $i17;

        goto label12;

     label11:
        $r178 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $r179 = $r178.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: android.text.format.Time endDate>;

        $i18 = $r179.<android.text.format.Time: int year>;

        $i19 = $i18 + 3;

        $r179.<android.text.format.Time: int year> = $i19;

     label12:
        $r161 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $r177 = $r161.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: android.text.format.Time endDate>;

        virtualinvoke $r177.<android.text.format.Time: long normalize(boolean)>(0);

     label13:
        $r73 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.view.View mView>;

        $r72 = virtualinvoke $r73.<android.view.View: android.view.View findViewById(int)>(2131755215);

        $r75 = (android.widget.LinearLayout) $r72;

        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.LinearLayout mWeekGroup> = $r75;

        $r74 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.view.View mView>;

        $r84 = virtualinvoke $r74.<android.view.View: android.view.View findViewById(int)>(2131755216);

        $r85 = (android.widget.LinearLayout) $r84;

        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.LinearLayout mWeekGroup2> = $r85;

        $r83 = new java.text.DateFormatSymbols;

        specialinvoke $r83.<java.text.DateFormatSymbols: void <init>()>();

        virtualinvoke $r83.<java.text.DateFormatSymbols: java.lang.String[] getWeekdays()>();

        $r81 = newarray (java.lang.String[])[7];

        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: java.lang.String[][] mMonthRepeatByDayOfWeekStrs> = $r81;

        $r80 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: java.lang.String[][] mMonthRepeatByDayOfWeekStrs>;

        $r82 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.content.res.Resources mResources>;

        $r90 = virtualinvoke $r82.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(2131165205);

        $r80[0] = $r90;

        $r89 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: java.lang.String[][] mMonthRepeatByDayOfWeekStrs>;

        $r91 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.content.res.Resources mResources>;

        $r87 = virtualinvoke $r91.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(2131165206);

        $r89[1] = $r87;

        $r86 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: java.lang.String[][] mMonthRepeatByDayOfWeekStrs>;

        $r88 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.content.res.Resources mResources>;

        $r97 = virtualinvoke $r88.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(2131165207);

        $r86[2] = $r97;

        $r95 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: java.lang.String[][] mMonthRepeatByDayOfWeekStrs>;

        $r96 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.content.res.Resources mResources>;

        $r94 = virtualinvoke $r96.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(2131165208);

        $r95[3] = $r94;

        $r92 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: java.lang.String[][] mMonthRepeatByDayOfWeekStrs>;

        $r93 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.content.res.Resources mResources>;

        $r103 = virtualinvoke $r93.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(2131165209);

        $r92[4] = $r103;

        $r101 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: java.lang.String[][] mMonthRepeatByDayOfWeekStrs>;

        $r102 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.content.res.Resources mResources>;

        $r100 = virtualinvoke $r102.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(2131165210);

        $r101[5] = $r100;

        $r98 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: java.lang.String[][] mMonthRepeatByDayOfWeekStrs>;

        $r99 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.content.res.Resources mResources>;

        $r113 = virtualinvoke $r99.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(2131165211);

        $r98[6] = $r113;

        $r112 = virtualinvoke r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.app.Activity getActivity()>();

        i0 = staticinvoke <com.android.calendar.Utils: int getFirstDayOfWeek(android.content.Context)>($r112);

        $r114 = new java.text.DateFormatSymbols;

        specialinvoke $r114.<java.text.DateFormatSymbols: void <init>()>();

        r197 = virtualinvoke $r114.<java.text.DateFormatSymbols: java.lang.String[] getShortWeekdays()>();

        $r115 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.content.res.Resources mResources>;

        $r116 = virtualinvoke $r115.<android.content.res.Resources: android.content.res.Configuration getConfiguration()>();

        $i7 = $r116.<android.content.res.Configuration: int screenWidthDp>;

        if $i7 <= 450 goto label14;

        b1 = 7;

        b2 = 0;

        $r171 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.LinearLayout mWeekGroup2>;

        virtualinvoke $r171.<android.widget.LinearLayout: void setVisibility(int)>(8);

        $r166 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.LinearLayout mWeekGroup2>;

        $r165 = virtualinvoke $r166.<android.widget.LinearLayout: android.view.View getChildAt(int)>(3);

        virtualinvoke $r165.<android.view.View: void setVisibility(int)>(8);

        goto label15;

     label14:
        b1 = 4;

        b2 = 3;

        $r105 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.LinearLayout mWeekGroup2>;

        virtualinvoke $r105.<android.widget.LinearLayout: void setVisibility(int)>(0);

        $r104 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.LinearLayout mWeekGroup2>;

        $r107 = virtualinvoke $r104.<android.widget.LinearLayout: android.view.View getChildAt(int)>(3);

        virtualinvoke $r107.<android.view.View: void setVisibility(int)>(4);

     label15:
        i3 = 0;

     label16:
        if i3 >= 7 goto label19;

        if i3 < b1 goto label17;

        $r169 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.LinearLayout mWeekGroup>;

        $r172 = virtualinvoke $r169.<android.widget.LinearLayout: android.view.View getChildAt(int)>(i3);

        virtualinvoke $r172.<android.view.View: void setVisibility(int)>(8);

        goto label18;

     label17:
        $r153 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.ToggleButton[] mWeekByDayButtons>;

        $r156 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.LinearLayout mWeekGroup>;

        $r154 = virtualinvoke $r156.<android.widget.LinearLayout: android.view.View getChildAt(int)>(i3);

        $r158 = (android.widget.ToggleButton) $r154;

        $r153[i0] = $r158;

        $r159 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.ToggleButton[] mWeekByDayButtons>;

        $r149 = $r159[i0];

        $r157 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: int[] TIME_DAY_TO_CALENDAR_DAY>;

        $i11 = $r157[i0];

        $r148 = r197[$i11];

        virtualinvoke $r149.<android.widget.ToggleButton: void setTextOff(java.lang.CharSequence)>($r148);

        $r146 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.ToggleButton[] mWeekByDayButtons>;

        $r150 = $r146[i0];

        $r147 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: int[] TIME_DAY_TO_CALENDAR_DAY>;

        $i10 = $r147[i0];

        $r152 = r197[$i10];

        virtualinvoke $r150.<android.widget.ToggleButton: void setTextOn(java.lang.CharSequence)>($r152);

        $r151 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.ToggleButton[] mWeekByDayButtons>;

        $r170 = $r151[i0];

        virtualinvoke $r170.<android.widget.ToggleButton: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)>(r0);

        i0 = i0 + 1;

        if i0 < 7 goto label18;

        i0 = 0;

     label18:
        i3 = i3 + 1;

        goto label16;

     label19:
        i25 = 0;

     label20:
        if i25 >= 3 goto label23;

        if i25 < b2 goto label21;

        $r135 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.LinearLayout mWeekGroup2>;

        $r155 = virtualinvoke $r135.<android.widget.LinearLayout: android.view.View getChildAt(int)>(i25);

        virtualinvoke $r155.<android.view.View: void setVisibility(int)>(8);

        goto label22;

     label21:
        $r142 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.ToggleButton[] mWeekByDayButtons>;

        $r123 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.LinearLayout mWeekGroup2>;

        $r141 = virtualinvoke $r123.<android.widget.LinearLayout: android.view.View getChildAt(int)>(i25);

        $r140 = (android.widget.ToggleButton) $r141;

        $r142[i0] = $r140;

        $r139 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.ToggleButton[] mWeekByDayButtons>;

        $r143 = $r139[i0];

        $r145 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: int[] TIME_DAY_TO_CALENDAR_DAY>;

        $i9 = $r145[i0];

        $r144 = r197[$i9];

        virtualinvoke $r143.<android.widget.ToggleButton: void setTextOff(java.lang.CharSequence)>($r144);

        $r134 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.ToggleButton[] mWeekByDayButtons>;

        $r138 = $r134[i0];

        $r133 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: int[] TIME_DAY_TO_CALENDAR_DAY>;

        $i8 = $r133[i0];

        $r132 = r197[$i8];

        virtualinvoke $r138.<android.widget.ToggleButton: void setTextOn(java.lang.CharSequence)>($r132);

        $r137 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.ToggleButton[] mWeekByDayButtons>;

        $r136 = $r137[i0];

        virtualinvoke $r136.<android.widget.ToggleButton: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)>(r0);

        i0 = i0 + 1;

        if i0 < 7 goto label22;

        i0 = 0;

     label22:
        i25 = i25 + 1;

        goto label20;

     label23:
        $r106 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.view.View mView>;

        $r109 = virtualinvoke $r106.<android.view.View: android.view.View findViewById(int)>(2131755217);

        $r108 = (android.widget.LinearLayout) $r109;

        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.LinearLayout mMonthGroup> = $r108;

        $r111 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.view.View mView>;

        $r110 = virtualinvoke $r111.<android.view.View: android.view.View findViewById(int)>(2131755217);

        $r124 = (android.widget.RadioGroup) $r110;

        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.RadioGroup mMonthRepeatByRadioGroup> = $r124;

        $r125 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.RadioGroup mMonthRepeatByRadioGroup>;

        virtualinvoke $r125.<android.widget.RadioGroup: void setOnCheckedChangeListener(android.widget.RadioGroup$OnCheckedChangeListener)>(r0);

        $r126 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.view.View mView>;

        $r127 = virtualinvoke $r126.<android.view.View: android.view.View findViewById(int)>(2131755219);

        $r128 = (android.widget.RadioButton) $r127;

        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.RadioButton mRepeatMonthlyByNthDayOfWeek> = $r128;

        $r129 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.view.View mView>;

        $r130 = virtualinvoke $r129.<android.view.View: android.view.View findViewById(int)>(2131755218);

        $r131 = (android.widget.RadioButton) $r130;

        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.RadioButton mRepeatMonthlyByNthDayOfMonth> = $r131;

        $r117 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.view.View mView>;

        $r118 = virtualinvoke $r117.<android.view.View: android.view.View findViewById(int)>(2131755076);

        $r119 = (android.widget.Button) $r118;

        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.Button mDone> = $r119;

        $r120 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.Button mDone>;

        virtualinvoke $r120.<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>(r0);

        specialinvoke r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: void togglePickerOptions()>();

        virtualinvoke r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: void updateDialog()>();

        if z0 == 0 goto label24;

        $r122 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.EditText mEndCount>;

        virtualinvoke $r122.<android.widget.EditText: boolean requestFocus()>();

     label24:
        $r121 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.view.View mView>;

        return $r121;
    }

    private void togglePickerOptions()
    {
        com.android.calendar.recurrencepicker.RecurrencePickerDialog r0;
        android.widget.ToggleButton[] r1, r28;
        int i0, i1, $i2, i3, i4;
        android.widget.ToggleButton r2, r29;
        com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel $r3;
        android.view.View $r4, $r5;
        android.widget.Spinner $r6, $r7, $r17, $r18;
        android.widget.TextView $r8, $r10, $r13, $r14, $r20, $r22, $r23, $r26;
        android.widget.EditText $r9, $r12, $r19, $r24;
        android.widget.RadioGroup $r11, $r21;
        android.widget.RadioButton $r15, $r16, $r25, $r27;

        r0 := @this: com.android.calendar.recurrencepicker.RecurrencePickerDialog;

        $r3 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $i2 = $r3.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int recurrenceState>;

        if $i2 != 0 goto label3;

        $r18 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.Spinner mFreqSpinner>;

        virtualinvoke $r18.<android.widget.Spinner: void setEnabled(boolean)>(0);

        $r17 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.Spinner mEndSpinner>;

        virtualinvoke $r17.<android.widget.Spinner: void setEnabled(boolean)>(0);

        $r20 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.TextView mIntervalPreText>;

        virtualinvoke $r20.<android.widget.TextView: void setEnabled(boolean)>(0);

        $r19 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.EditText mInterval>;

        virtualinvoke $r19.<android.widget.EditText: void setEnabled(boolean)>(0);

        $r22 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.TextView mIntervalPostText>;

        virtualinvoke $r22.<android.widget.TextView: void setEnabled(boolean)>(0);

        $r21 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.RadioGroup mMonthRepeatByRadioGroup>;

        virtualinvoke $r21.<android.widget.RadioGroup: void setEnabled(boolean)>(0);

        $r24 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.EditText mEndCount>;

        virtualinvoke $r24.<android.widget.EditText: void setEnabled(boolean)>(0);

        $r23 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.TextView mPostEndCount>;

        virtualinvoke $r23.<android.widget.TextView: void setEnabled(boolean)>(0);

        $r26 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.TextView mEndDateTextView>;

        virtualinvoke $r26.<android.widget.TextView: void setEnabled(boolean)>(0);

        $r25 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.RadioButton mRepeatMonthlyByNthDayOfWeek>;

        virtualinvoke $r25.<android.widget.RadioButton: void setEnabled(boolean)>(0);

        $r27 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.RadioButton mRepeatMonthlyByNthDayOfMonth>;

        virtualinvoke $r27.<android.widget.RadioButton: void setEnabled(boolean)>(0);

        r1 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.ToggleButton[] mWeekByDayButtons>;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r2 = r1[i1];

        virtualinvoke r2.<android.widget.Button: void setEnabled(boolean)>(0);

        i1 = i1 + 1;

        goto label1;

     label2:
        goto label5;

     label3:
        $r4 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.view.View mView>;

        $r5 = virtualinvoke $r4.<android.view.View: android.view.View findViewById(int)>(2131755210);

        virtualinvoke $r5.<android.view.View: void setEnabled(boolean)>(1);

        $r6 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.Spinner mFreqSpinner>;

        virtualinvoke $r6.<android.widget.Spinner: void setEnabled(boolean)>(1);

        $r7 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.Spinner mEndSpinner>;

        virtualinvoke $r7.<android.widget.Spinner: void setEnabled(boolean)>(1);

        $r8 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.TextView mIntervalPreText>;

        virtualinvoke $r8.<android.widget.TextView: void setEnabled(boolean)>(1);

        $r9 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.EditText mInterval>;

        virtualinvoke $r9.<android.widget.EditText: void setEnabled(boolean)>(1);

        $r10 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.TextView mIntervalPostText>;

        virtualinvoke $r10.<android.widget.TextView: void setEnabled(boolean)>(1);

        $r11 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.RadioGroup mMonthRepeatByRadioGroup>;

        virtualinvoke $r11.<android.widget.RadioGroup: void setEnabled(boolean)>(1);

        $r12 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.EditText mEndCount>;

        virtualinvoke $r12.<android.widget.EditText: void setEnabled(boolean)>(1);

        $r14 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.TextView mPostEndCount>;

        virtualinvoke $r14.<android.widget.TextView: void setEnabled(boolean)>(1);

        $r13 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.TextView mEndDateTextView>;

        virtualinvoke $r13.<android.widget.TextView: void setEnabled(boolean)>(1);

        $r16 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.RadioButton mRepeatMonthlyByNthDayOfWeek>;

        virtualinvoke $r16.<android.widget.RadioButton: void setEnabled(boolean)>(1);

        $r15 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.RadioButton mRepeatMonthlyByNthDayOfMonth>;

        virtualinvoke $r15.<android.widget.RadioButton: void setEnabled(boolean)>(1);

        r28 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.ToggleButton[] mWeekByDayButtons>;

        i3 = lengthof r28;

        i4 = 0;

     label4:
        if i4 >= i3 goto label5;

        r29 = r28[i4];

        virtualinvoke r29.<android.widget.Button: void setEnabled(boolean)>(1);

        i4 = i4 + 1;

        goto label4;

     label5:
        specialinvoke r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: void updateDoneButtonState()>();

        return;
    }

    private void updateDoneButtonState()
    {
        com.android.calendar.recurrencepicker.RecurrencePickerDialog r0;
        android.widget.ToggleButton[] r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        android.widget.ToggleButton r2;
        com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel $r3, $r8;
        android.widget.EditText $r4, $r7, $r11;
        android.text.Editable $r5, $r14;
        java.lang.String $r6, $r13;
        android.widget.Button $r9, $r10, $r12, $r15, $r16, $r17;
        boolean $z0;

        r0 := @this: com.android.calendar.recurrencepicker.RecurrencePickerDialog;

        $r3 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $i2 = $r3.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int recurrenceState>;

        if $i2 != 0 goto label1;

        $r16 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.Button mDone>;

        virtualinvoke $r16.<android.widget.Button: void setEnabled(boolean)>(1);

        return;

     label1:
        $r4 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.EditText mInterval>;

        $r5 = virtualinvoke $r4.<android.widget.EditText: android.text.Editable getText()>();

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.String toString()>();

        $i3 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i3 != 0 goto label2;

        $r17 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.Button mDone>;

        virtualinvoke $r17.<android.widget.Button: void setEnabled(boolean)>(0);

        return;

     label2:
        $r7 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.EditText mEndCount>;

        $i4 = virtualinvoke $r7.<android.widget.EditText: int getVisibility()>();

        if $i4 != 0 goto label3;

        $r11 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.EditText mEndCount>;

        $r14 = virtualinvoke $r11.<android.widget.EditText: android.text.Editable getText()>();

        $r13 = virtualinvoke $r14.<java.lang.Object: java.lang.String toString()>();

        $i6 = virtualinvoke $r13.<java.lang.String: int length()>();

        if $i6 != 0 goto label3;

        $r15 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.Button mDone>;

        virtualinvoke $r15.<android.widget.Button: void setEnabled(boolean)>(0);

        return;

     label3:
        $r8 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $i5 = $r8.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int freq>;

        if $i5 != 1 goto label7;

        r1 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.ToggleButton[] mWeekByDayButtons>;

        i0 = lengthof r1;

        i1 = 0;

     label4:
        if i1 >= i0 goto label6;

        r2 = r1[i1];

        $z0 = virtualinvoke r2.<android.widget.CompoundButton: boolean isChecked()>();

        if $z0 == 0 goto label5;

        $r12 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.Button mDone>;

        virtualinvoke $r12.<android.widget.Button: void setEnabled(boolean)>(1);

        return;

     label5:
        i1 = i1 + 1;

        goto label4;

     label6:
        $r10 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.Button mDone>;

        virtualinvoke $r10.<android.widget.Button: void setEnabled(boolean)>(0);

        return;

     label7:
        $r9 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.Button mDone>;

        virtualinvoke $r9.<android.widget.Button: void setEnabled(boolean)>(1);

        return;
    }

    public void onSaveInstanceState(android.os.Bundle)
    {
        com.android.calendar.recurrencepicker.RecurrencePickerDialog r0;
        android.os.Bundle r1;
        com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel $r2;
        android.widget.EditText $r3;
        boolean $z0;

        r0 := @this: com.android.calendar.recurrencepicker.RecurrencePickerDialog;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.DialogFragment: void onSaveInstanceState(android.os.Bundle)>(r1);

        $r2 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        virtualinvoke r1.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>("bundle_model", $r2);

        $r3 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.EditText mEndCount>;

        $z0 = virtualinvoke $r3.<android.widget.EditText: boolean hasFocus()>();

        if $z0 == 0 goto label1;

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("bundle_end_count_has_focus", 1);

     label1:
        return;
    }

    public void updateDialog()
    {
        com.android.calendar.recurrencepicker.RecurrencePickerDialog r0;
        java.lang.String r1, $r5, $r23, $r30, $r37, $r38, r53, r54;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24;
        com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel $r2, $r6, $r8, $r9, $r12, $r13, $r15, $r17, $r18, $r20, $r26, $r27, $r29, $r31, $r33, $r34, $r35, $r39, $r40, $r45, $r47, $r48;
        android.widget.EditText $r3, $r19, $r21, $r50;
        android.text.Editable $r4, $r22;
        boolean $z0, $z1, $z2;
        android.widget.Spinner $r7, $r16;
        android.widget.LinearLayout $r10, $r11, $r14;
        android.text.format.Time $r24, $r41, $r42;
        long $l12;
        android.app.Activity $r25;
        android.widget.TextView $r28;
        java.lang.String[][] $r32;
        android.widget.RadioButton $r36;
        android.widget.RadioGroup $r43, $r49;
        android.widget.ToggleButton[] $r44;
        boolean[] $r46;
        byte $b25, $b26, $b27;
        android.widget.ToggleButton $r51;
        java.lang.String[] r52;

        r0 := @this: com.android.calendar.recurrencepicker.RecurrencePickerDialog;

        $r2 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $i2 = $r2.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int interval>;

        r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i2);

        $r3 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.EditText mInterval>;

        $r4 = virtualinvoke $r3.<android.widget.EditText: android.text.Editable getText()>();

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label01;

        $r50 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.EditText mInterval>;

        virtualinvoke $r50.<android.widget.EditText: void setText(java.lang.CharSequence)>(r1);

     label01:
        $r7 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.Spinner mFreqSpinner>;

        $r6 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $i3 = $r6.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int freq>;

        virtualinvoke $r7.<android.widget.Spinner: void setSelection(int)>($i3);

        $r10 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.LinearLayout mWeekGroup>;

        $r8 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $i4 = $r8.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int freq>;

        if $i4 != 1 goto label02;

        $b25 = 0;

        goto label03;

     label02:
        $b25 = 8;

     label03:
        virtualinvoke $r10.<android.widget.LinearLayout: void setVisibility(int)>($b25);

        $r11 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.LinearLayout mWeekGroup2>;

        $r9 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $i5 = $r9.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int freq>;

        if $i5 != 1 goto label04;

        $b26 = 0;

        goto label05;

     label04:
        $b26 = 8;

     label05:
        virtualinvoke $r11.<android.widget.LinearLayout: void setVisibility(int)>($b26);

        $r14 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.LinearLayout mMonthGroup>;

        $r12 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $i6 = $r12.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int freq>;

        if $i6 != 2 goto label06;

        $b27 = 0;

        goto label07;

     label06:
        $b27 = 8;

     label07:
        virtualinvoke $r14.<android.widget.LinearLayout: void setVisibility(int)>($b27);

        $r13 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $i7 = $r13.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int freq>;

        tableswitch($i7)
        {
            case 0: goto label08;
            case 1: goto label09;
            case 2: goto label12;
            case 3: goto label19;
            default: goto label20;
        };

     label08:
        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: int mIntervalResId> = 2131558411;

        goto label20;

     label09:
        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: int mIntervalResId> = 2131558412;

        i0 = 0;

     label10:
        if i0 >= 7 goto label11;

        $r44 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.ToggleButton[] mWeekByDayButtons>;

        $r51 = $r44[i0];

        $r45 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $r46 = $r45.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: boolean[] weeklyByDayOfWeek>;

        $z2 = $r46[i0];

        virtualinvoke $r51.<android.widget.ToggleButton: void setChecked(boolean)>($z2);

        i0 = i0 + 1;

        goto label10;

     label11:
        goto label20;

     label12:
        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: int mIntervalResId> = 2131558413;

        $r27 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $i13 = $r27.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int monthlyRepeat>;

        if $i13 != 0 goto label13;

        $r43 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.RadioGroup mMonthRepeatByRadioGroup>;

        virtualinvoke $r43.<android.widget.RadioGroup: void check(int)>(2131755218);

        goto label14;

     label13:
        $r31 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $i14 = $r31.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int monthlyRepeat>;

        if $i14 != 1 goto label14;

        $r49 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.RadioGroup mMonthRepeatByRadioGroup>;

        virtualinvoke $r49.<android.widget.RadioGroup: void check(int)>(2131755219);

     label14:
        $r30 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: java.lang.String mMonthRepeatByDayOfWeekStr>;

        if $r30 != null goto label20;

        $r29 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $i16 = $r29.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int monthlyByNthDayOfWeek>;

        if $i16 != 0 goto label16;

        $r39 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $r42 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.text.format.Time mTime>;

        $i21 = $r42.<android.text.format.Time: int monthDay>;

        $i22 = $i21 + 6;

        $i23 = $i22 / 7;

        $r39.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int monthlyByNthDayOfWeek> = $i23;

        $r40 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $i20 = $r40.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int monthlyByNthDayOfWeek>;

        if $i20 < 5 goto label15;

        $r48 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $r48.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int monthlyByNthDayOfWeek> = -1;

     label15:
        $r47 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $r41 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.text.format.Time mTime>;

        $i24 = $r41.<android.text.format.Time: int weekDay>;

        $r47.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int monthlyByDayOfWeek> = $i24;

     label16:
        $r32 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: java.lang.String[][] mMonthRepeatByDayOfWeekStrs>;

        $r33 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $i15 = $r33.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int monthlyByDayOfWeek>;

        r52 = $r32[$i15];

        $r35 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $i18 = $r35.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int monthlyByNthDayOfWeek>;

        if $i18 >= 0 goto label17;

        $i19 = 5;

        goto label18;

     label17:
        $r34 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $i19 = $r34.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int monthlyByNthDayOfWeek>;

     label18:
        i1 = $i19;

        $i17 = i1 - 1;

        $r38 = r52[$i17];

        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: java.lang.String mMonthRepeatByDayOfWeekStr> = $r38;

        $r36 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.RadioButton mRepeatMonthlyByNthDayOfWeek>;

        $r37 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: java.lang.String mMonthRepeatByDayOfWeekStr>;

        virtualinvoke $r36.<android.widget.RadioButton: void setText(java.lang.CharSequence)>($r37);

        goto label20;

     label19:
        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: int mIntervalResId> = 2131558414;

     label20:
        specialinvoke r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: void updateIntervalText()>();

        specialinvoke r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: void updateDoneButtonState()>();

        $r16 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.Spinner mEndSpinner>;

        $r15 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $i8 = $r15.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int end>;

        virtualinvoke $r16.<android.widget.Spinner: void setSelection(int)>($i8);

        $r17 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $i9 = $r17.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int end>;

        if $i9 != 1 goto label21;

        $r25 = virtualinvoke r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.app.Activity getActivity()>();

        $r26 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $r24 = $r26.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: android.text.format.Time endDate>;

        $l12 = virtualinvoke $r24.<android.text.format.Time: long toMillis(boolean)>(0);

        r53 = staticinvoke <android.text.format.DateUtils: java.lang.String formatDateTime(android.content.Context,long,int)>($r25, $l12, 131072);

        $r28 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.TextView mEndDateTextView>;

        virtualinvoke $r28.<android.widget.TextView: void setText(java.lang.CharSequence)>(r53);

        goto label22;

     label21:
        $r18 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $i10 = $r18.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int end>;

        if $i10 != 2 goto label22;

        $r20 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $i11 = $r20.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int endCount>;

        r54 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i11);

        $r19 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.EditText mEndCount>;

        $r22 = virtualinvoke $r19.<android.widget.EditText: android.text.Editable getText()>();

        $r23 = virtualinvoke $r22.<java.lang.Object: java.lang.String toString()>();

        $z1 = virtualinvoke r54.<java.lang.String: boolean equals(java.lang.Object)>($r23);

        if $z1 != 0 goto label22;

        $r21 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.EditText mEndCount>;

        virtualinvoke $r21.<android.widget.EditText: void setText(java.lang.CharSequence)>(r54);

     label22:
        return;
    }

    private void setEndSpinnerEndDateStr(java.lang.String)
    {
        com.android.calendar.recurrencepicker.RecurrencePickerDialog r0;
        java.lang.String r1;
        java.util.ArrayList $r2;
        com.android.calendar.recurrencepicker.RecurrencePickerDialog$EndSpinnerAdapter $r4;

        r0 := @this: com.android.calendar.recurrencepicker.RecurrencePickerDialog;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: java.util.ArrayList mEndSpinnerArray>;

        virtualinvoke $r2.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(1, r1);

        $r4 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$EndSpinnerAdapter mEndSpinnerAdapter>;

        virtualinvoke $r4.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$EndSpinnerAdapter: void notifyDataSetChanged()>();

        return;
    }

    private void doToast()
    {
        com.android.calendar.recurrencepicker.RecurrencePickerDialog r0;
        java.lang.String r1, $r5, $r7;
        java.lang.StringBuilder $r2, $r3, $r6;
        com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel $r4, $r8, $r10;
        int $i1;
        com.android.calendarcommon2.EventRecurrence $r9, $r11;
        android.app.Activity $r12;
        android.widget.Toast $r13, $r14, $r15, $r16;

        r0 := @this: com.android.calendar.recurrencepicker.RecurrencePickerDialog;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Model = ");

        $r4 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $r5 = virtualinvoke $r4.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: java.lang.String toString()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecurrencePickerDialog", $r7);

        $r8 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $i1 = $r8.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int recurrenceState>;

        if $i1 != 0 goto label1;

        r1 = "Not repeating";

        goto label2;

     label1:
        $r10 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $r9 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendarcommon2.EventRecurrence mRecurrence>;

        staticinvoke <com.android.calendar.recurrencepicker.RecurrencePickerDialog: void copyModelToEventRecurrence(com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel,com.android.calendarcommon2.EventRecurrence)>($r10, $r9);

        $r11 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendarcommon2.EventRecurrence mRecurrence>;

        r1 = virtualinvoke $r11.<com.android.calendarcommon2.EventRecurrence: java.lang.String toString()>();

     label2:
        $r13 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.Toast mToast>;

        if $r13 == null goto label3;

        $r16 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.Toast mToast>;

        virtualinvoke $r16.<android.widget.Toast: void cancel()>();

     label3:
        $r12 = virtualinvoke r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.app.Activity getActivity()>();

        $r15 = staticinvoke <android.widget.Toast: android.widget.Toast makeText(android.content.Context,java.lang.CharSequence,int)>($r12, r1, 1);

        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.Toast mToast> = $r15;

        $r14 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.Toast mToast>;

        virtualinvoke $r14.<android.widget.Toast: void show()>();

        return;
    }

    private void updateIntervalText()
    {
        com.android.calendar.recurrencepicker.RecurrencePickerDialog r0;
        java.lang.String r2, $r5, $r7, $r8, $r9, $r11;
        int i0, i1, $i2, $i3, $i4, $i5, $i6;
        com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel $r3;
        android.content.res.Resources $r4;
        android.widget.TextView $r6, $r10;

        r0 := @this: com.android.calendar.recurrencepicker.RecurrencePickerDialog;

        $i2 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: int mIntervalResId>;

        if $i2 != -1 goto label1;

        return;

     label1:
        $r4 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.content.res.Resources mResources>;

        $i4 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: int mIntervalResId>;

        $r3 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $i3 = $r3.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int interval>;

        r2 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getQuantityString(int,int)>($i4, $i3);

        i0 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>("%d");

        if i0 == -1 goto label2;

        $r5 = "%d";

        $i5 = virtualinvoke $r5.<java.lang.String: int length()>();

        i1 = i0 + $i5;

        $r6 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.TextView mIntervalPostText>;

        $i6 = virtualinvoke r2.<java.lang.String: int length()>();

        $r8 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(i1, $i6);

        $r7 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $r6.<android.widget.TextView: void setText(java.lang.CharSequence)>($r7);

        $r10 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.TextView mIntervalPreText>;

        $r9 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, i0);

        $r11 = virtualinvoke $r9.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $r10.<android.widget.TextView: void setText(java.lang.CharSequence)>($r11);

     label2:
        return;
    }

    private void updateEndCountText()
    {
        com.android.calendar.recurrencepicker.RecurrencePickerDialog r0;
        java.lang.String r2, $r5, $r7, $r8;
        int i0, i1, $i2, $i3, $i4;
        com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel $r3;
        android.content.res.Resources $r4;
        android.widget.TextView $r6;

        r0 := @this: com.android.calendar.recurrencepicker.RecurrencePickerDialog;

        $r4 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.content.res.Resources mResources>;

        $r3 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $i2 = $r3.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int endCount>;

        r2 = virtualinvoke $r4.<android.content.res.Resources: java.lang.String getQuantityString(int,int)>(2131558415, $i2);

        i0 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>("%d");

        if i0 == -1 goto label2;

        if i0 != 0 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RecurrencePickerDialog", "No text to put in to recurrence\'s end spinner.");

        goto label2;

     label1:
        $r5 = "%d";

        $i3 = virtualinvoke $r5.<java.lang.String: int length()>();

        i1 = i0 + $i3;

        $r6 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.TextView mPostEndCount>;

        $i4 = virtualinvoke r2.<java.lang.String: int length()>();

        $r7 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(i1, $i4);

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>();

        virtualinvoke $r6.<android.widget.TextView: void setText(java.lang.CharSequence)>($r8);

     label2:
        return;
    }

    public void onItemSelected(android.widget.AdapterView, android.view.View, int, long)
    {
        com.android.calendar.recurrencepicker.RecurrencePickerDialog r0;
        android.widget.AdapterView r1;
        android.view.View r2;
        int i0, $i2, $i3, $i4, $i8, $i9;
        long l1;
        android.widget.Spinner $r3, $r4;
        com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel $r5, $r6, $r8, $r10, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        android.widget.EditText $r7;
        android.widget.TextView $r9, $r11;
        byte $b5, $b6, $b7;
        boolean $z0;

        r0 := @this: com.android.calendar.recurrencepicker.RecurrencePickerDialog;

        r1 := @parameter0: android.widget.AdapterView;

        r2 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        l1 := @parameter3: long;

        $r3 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.Spinner mFreqSpinner>;

        if r1 != $r3 goto label01;

        $r18 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $r18.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int freq> = i0;

        goto label14;

     label01:
        $r4 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.Spinner mEndSpinner>;

        if r1 != $r4 goto label14;

        tableswitch(i0)
        {
            case 0: goto label02;
            case 1: goto label03;
            case 2: goto label04;
            default: goto label07;
        };

     label02:
        $r5 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $r5.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int end> = 0;

        goto label07;

     label03:
        $r16 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $r16.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int end> = 1;

        goto label07;

     label04:
        $r13 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $r13.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int end> = 2;

        $r12 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $i8 = $r12.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int endCount>;

        if $i8 > 1 goto label05;

        $r17 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $r17.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int endCount> = 1;

        goto label06;

     label05:
        $r14 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $i9 = $r14.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int endCount>;

        if $i9 <= 730 goto label06;

        $r15 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $r15.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int endCount> = 730;

     label06:
        specialinvoke r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: void updateEndCountText()>();

     label07:
        $r7 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.EditText mEndCount>;

        $r6 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $i2 = $r6.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int end>;

        if $i2 != 2 goto label08;

        $b6 = 0;

        goto label09;

     label08:
        $b6 = 8;

     label09:
        virtualinvoke $r7.<android.widget.EditText: void setVisibility(int)>($b6);

        $r9 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.TextView mEndDateTextView>;

        $r8 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $i3 = $r8.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int end>;

        if $i3 != 1 goto label10;

        $b7 = 0;

        goto label11;

     label10:
        $b7 = 8;

     label11:
        virtualinvoke $r9.<android.widget.TextView: void setVisibility(int)>($b7);

        $r11 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.TextView mPostEndCount>;

        $r10 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $i4 = $r10.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int end>;

        if $i4 != 2 goto label12;

        $z0 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: boolean mHidePostEndCount>;

        if $z0 != 0 goto label12;

        $b5 = 0;

        goto label13;

     label12:
        $b5 = 8;

     label13:
        virtualinvoke $r11.<android.widget.TextView: void setVisibility(int)>($b5);

     label14:
        virtualinvoke r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: void updateDialog()>();

        return;
    }

    public void onNothingSelected(android.widget.AdapterView)
    {
        com.android.calendar.recurrencepicker.RecurrencePickerDialog r0;
        android.widget.AdapterView r1;

        r0 := @this: com.android.calendar.recurrencepicker.RecurrencePickerDialog;

        r1 := @parameter0: android.widget.AdapterView;

        return;
    }

    public void onDateSet(com.android.datetimepicker.date.DatePickerDialog, int, int, int)
    {
        com.android.calendar.recurrencepicker.RecurrencePickerDialog r0;
        com.android.datetimepicker.date.DatePickerDialog r1;
        int i0, i1, i2;
        com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel $r2, $r4, $r6, $r8, $r10, $r14, $r16, $r17, $r19;
        android.text.format.Time $r3, $r5, $r7, $r9, $r11, $r12, $r13, $r18, $r20, $r21;
        java.lang.String $r15;

        r0 := @this: com.android.calendar.recurrencepicker.RecurrencePickerDialog;

        r1 := @parameter0: com.android.datetimepicker.date.DatePickerDialog;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $r3 = $r2.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: android.text.format.Time endDate>;

        if $r3 != null goto label1;

        $r14 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $r13 = new android.text.format.Time;

        $r12 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.text.format.Time mTime>;

        $r15 = $r12.<android.text.format.Time: java.lang.String timezone>;

        specialinvoke $r13.<android.text.format.Time: void <init>(java.lang.String)>($r15);

        $r14.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: android.text.format.Time endDate> = $r13;

        $r17 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $r21 = $r17.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: android.text.format.Time endDate>;

        $r16 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $r20 = $r16.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: android.text.format.Time endDate>;

        $r19 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $r18 = $r19.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: android.text.format.Time endDate>;

        $r18.<android.text.format.Time: int second> = 0;

        $r20.<android.text.format.Time: int minute> = 0;

        $r21.<android.text.format.Time: int hour> = 0;

     label1:
        $r4 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $r5 = $r4.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: android.text.format.Time endDate>;

        $r5.<android.text.format.Time: int year> = i0;

        $r6 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $r7 = $r6.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: android.text.format.Time endDate>;

        $r7.<android.text.format.Time: int month> = i1;

        $r8 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $r9 = $r8.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: android.text.format.Time endDate>;

        $r9.<android.text.format.Time: int monthDay> = i2;

        $r10 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $r11 = $r10.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: android.text.format.Time endDate>;

        virtualinvoke $r11.<android.text.format.Time: long normalize(boolean)>(0);

        virtualinvoke r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: void updateDialog()>();

        return;
    }

    public void onCheckedChanged(android.widget.CompoundButton, boolean)
    {
        com.android.calendar.recurrencepicker.RecurrencePickerDialog r0;
        android.widget.CompoundButton r1;
        boolean z0;
        int i0, i1;
        android.widget.ToggleButton[] $r2;
        android.widget.ToggleButton $r3;
        com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel $r4;
        boolean[] $r5;

        r0 := @this: com.android.calendar.recurrencepicker.RecurrencePickerDialog;

        r1 := @parameter0: android.widget.CompoundButton;

        z0 := @parameter1: boolean;

        i0 = -1;

        i1 = 0;

     label1:
        if i1 >= 7 goto label3;

        if i0 != -1 goto label2;

        $r2 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.ToggleButton[] mWeekByDayButtons>;

        $r3 = $r2[i1];

        if r1 != $r3 goto label2;

        i0 = i1;

        $r4 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $r5 = $r4.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: boolean[] weeklyByDayOfWeek>;

        $r5[i1] = z0;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        virtualinvoke r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: void updateDialog()>();

        return;
    }

    public void onCheckedChanged(android.widget.RadioGroup, int)
    {
        com.android.calendar.recurrencepicker.RecurrencePickerDialog r0;
        android.widget.RadioGroup r1;
        int i0;
        com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel $r2, $r3;

        r0 := @this: com.android.calendar.recurrencepicker.RecurrencePickerDialog;

        r1 := @parameter0: android.widget.RadioGroup;

        i0 := @parameter1: int;

        if i0 != 2131755218 goto label1;

        $r3 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $r3.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int monthlyRepeat> = 0;

        goto label2;

     label1:
        if i0 != 2131755219 goto label2;

        $r2 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $r2.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int monthlyRepeat> = 1;

     label2:
        virtualinvoke r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: void updateDialog()>();

        return;
    }

    public void onClick(android.view.View)
    {
        com.android.calendar.recurrencepicker.RecurrencePickerDialog r0;
        android.view.View r1;
        java.lang.String r2;
        android.widget.TextView $r3;
        android.widget.Button $r4;
        com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel $r5, $r7, $r11, $r13, $r14;
        int $i0, $i1, $i2, $i3, $i4;
        com.android.calendarcommon2.EventRecurrence $r6, $r8;
        com.android.calendar.recurrencepicker.RecurrencePickerDialog$OnRecurrenceSetListener $r9;
        com.android.datetimepicker.date.DatePickerDialog $r10, $r17, $r18, $r20, $r21, $r22;
        android.text.format.Time $r12, $r15, $r16;
        android.app.Activity $r19;
        android.app.FragmentManager $r23;

        r0 := @this: com.android.calendar.recurrencepicker.RecurrencePickerDialog;

        r1 := @parameter0: android.view.View;

        $r3 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.TextView mEndDateTextView>;

        if $r3 != r1 goto label2;

        $r10 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.datetimepicker.date.DatePickerDialog mDatePickerDialog>;

        if $r10 == null goto label1;

        $r22 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.datetimepicker.date.DatePickerDialog mDatePickerDialog>;

        virtualinvoke $r22.<com.android.datetimepicker.date.DatePickerDialog: void dismiss()>();

     label1:
        $r11 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $r12 = $r11.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: android.text.format.Time endDate>;

        $i2 = $r12.<android.text.format.Time: int year>;

        $r13 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $r15 = $r13.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: android.text.format.Time endDate>;

        $i3 = $r15.<android.text.format.Time: int month>;

        $r14 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $r16 = $r14.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: android.text.format.Time endDate>;

        $i1 = $r16.<android.text.format.Time: int monthDay>;

        $r18 = staticinvoke <com.android.datetimepicker.date.DatePickerDialog: com.android.datetimepicker.date.DatePickerDialog newInstance(com.android.datetimepicker.date.DatePickerDialog$OnDateSetListener,int,int,int)>(r0, $i2, $i3, $i1);

        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.datetimepicker.date.DatePickerDialog mDatePickerDialog> = $r18;

        $r17 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.datetimepicker.date.DatePickerDialog mDatePickerDialog>;

        $r19 = virtualinvoke r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.app.Activity getActivity()>();

        $i4 = staticinvoke <com.android.calendar.Utils: int getFirstDayOfWeekAsCalendar(android.content.Context)>($r19);

        virtualinvoke $r17.<com.android.datetimepicker.date.DatePickerDialog: void setFirstDayOfWeek(int)>($i4);

        $r21 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.datetimepicker.date.DatePickerDialog mDatePickerDialog>;

        virtualinvoke $r21.<com.android.datetimepicker.date.DatePickerDialog: void setYearRange(int,int)>(1970, 2036);

        $r20 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.datetimepicker.date.DatePickerDialog mDatePickerDialog>;

        $r23 = virtualinvoke r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.app.FragmentManager getFragmentManager()>();

        virtualinvoke $r20.<com.android.datetimepicker.date.DatePickerDialog: void show(android.app.FragmentManager,java.lang.String)>($r23, "tag_date_picker_frag");

        goto label5;

     label2:
        $r4 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.Button mDone>;

        if $r4 != r1 goto label5;

        $r5 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $i0 = $r5.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel: int recurrenceState>;

        if $i0 != 0 goto label3;

        r2 = null;

        goto label4;

     label3:
        $r7 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        $r6 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendarcommon2.EventRecurrence mRecurrence>;

        staticinvoke <com.android.calendar.recurrencepicker.RecurrencePickerDialog: void copyModelToEventRecurrence(com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel,com.android.calendarcommon2.EventRecurrence)>($r7, $r6);

        $r8 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendarcommon2.EventRecurrence mRecurrence>;

        r2 = virtualinvoke $r8.<com.android.calendarcommon2.EventRecurrence: java.lang.String toString()>();

     label4:
        $r9 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$OnRecurrenceSetListener mRecurrenceSetListener>;

        interfaceinvoke $r9.<com.android.calendar.recurrencepicker.RecurrencePickerDialog$OnRecurrenceSetListener: void onRecurrenceSet(java.lang.String)>(r2);

        virtualinvoke r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: void dismiss()>();

     label5:
        return;
    }

    public void onActivityCreated(android.os.Bundle)
    {
        com.android.calendar.recurrencepicker.RecurrencePickerDialog r0;
        android.os.Bundle r1;
        android.app.FragmentManager $r2;
        android.app.Fragment $r3;
        com.android.datetimepicker.date.DatePickerDialog $r4, $r5, $r6;

        r0 := @this: com.android.calendar.recurrencepicker.RecurrencePickerDialog;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.DialogFragment: void onActivityCreated(android.os.Bundle)>(r1);

        $r2 = virtualinvoke r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.app.FragmentManager getFragmentManager()>();

        $r3 = virtualinvoke $r2.<android.app.FragmentManager: android.app.Fragment findFragmentByTag(java.lang.String)>("tag_date_picker_frag");

        $r4 = (com.android.datetimepicker.date.DatePickerDialog) $r3;

        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.datetimepicker.date.DatePickerDialog mDatePickerDialog> = $r4;

        $r5 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.datetimepicker.date.DatePickerDialog mDatePickerDialog>;

        if $r5 == null goto label1;

        $r6 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.datetimepicker.date.DatePickerDialog mDatePickerDialog>;

        virtualinvoke $r6.<com.android.datetimepicker.date.DatePickerDialog: void setOnDateSetListener(com.android.datetimepicker.date.DatePickerDialog$OnDateSetListener)>(r0);

     label1:
        return;
    }

    public void setOnRecurrenceSetListener(com.android.calendar.recurrencepicker.RecurrencePickerDialog$OnRecurrenceSetListener)
    {
        com.android.calendar.recurrencepicker.RecurrencePickerDialog r0;
        com.android.calendar.recurrencepicker.RecurrencePickerDialog$OnRecurrenceSetListener r1;

        r0 := @this: com.android.calendar.recurrencepicker.RecurrencePickerDialog;

        r1 := @parameter0: com.android.calendar.recurrencepicker.RecurrencePickerDialog$OnRecurrenceSetListener;

        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$OnRecurrenceSetListener mRecurrenceSetListener> = r1;

        return;
    }

    static void access$000(com.android.calendar.recurrencepicker.RecurrencePickerDialog)
    {
        com.android.calendar.recurrencepicker.RecurrencePickerDialog r0;

        r0 := @parameter0: com.android.calendar.recurrencepicker.RecurrencePickerDialog;

        specialinvoke r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: void updateDoneButtonState()>();

        return;
    }

    static com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel access$100(com.android.calendar.recurrencepicker.RecurrencePickerDialog)
    {
        com.android.calendar.recurrencepicker.RecurrencePickerDialog r0;
        com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel $r1;

        r0 := @parameter0: com.android.calendar.recurrencepicker.RecurrencePickerDialog;

        $r1 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: com.android.calendar.recurrencepicker.RecurrencePickerDialog$RecurrenceModel mModel>;

        return $r1;
    }

    static void access$200(com.android.calendar.recurrencepicker.RecurrencePickerDialog)
    {
        com.android.calendar.recurrencepicker.RecurrencePickerDialog r0;

        r0 := @parameter0: com.android.calendar.recurrencepicker.RecurrencePickerDialog;

        specialinvoke r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: void togglePickerOptions()>();

        return;
    }

    static int access$300(com.android.calendar.recurrencepicker.RecurrencePickerDialog)
    {
        com.android.calendar.recurrencepicker.RecurrencePickerDialog r0;
        int $i0;

        r0 := @parameter0: com.android.calendar.recurrencepicker.RecurrencePickerDialog;

        $i0 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: int mIntervalResId>;

        return $i0;
    }

    static android.widget.EditText access$400(com.android.calendar.recurrencepicker.RecurrencePickerDialog)
    {
        com.android.calendar.recurrencepicker.RecurrencePickerDialog r0;
        android.widget.EditText $r1;

        r0 := @parameter0: com.android.calendar.recurrencepicker.RecurrencePickerDialog;

        $r1 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.EditText mInterval>;

        return $r1;
    }

    static void access$500(com.android.calendar.recurrencepicker.RecurrencePickerDialog)
    {
        com.android.calendar.recurrencepicker.RecurrencePickerDialog r0;

        r0 := @parameter0: com.android.calendar.recurrencepicker.RecurrencePickerDialog;

        specialinvoke r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: void updateIntervalText()>();

        return;
    }

    static void access$600(com.android.calendar.recurrencepicker.RecurrencePickerDialog)
    {
        com.android.calendar.recurrencepicker.RecurrencePickerDialog r0;

        r0 := @parameter0: com.android.calendar.recurrencepicker.RecurrencePickerDialog;

        specialinvoke r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: void updateEndCountText()>();

        return;
    }

    static android.widget.EditText access$700(com.android.calendar.recurrencepicker.RecurrencePickerDialog)
    {
        com.android.calendar.recurrencepicker.RecurrencePickerDialog r0;
        android.widget.EditText $r1;

        r0 := @parameter0: com.android.calendar.recurrencepicker.RecurrencePickerDialog;

        $r1 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.EditText mEndCount>;

        return $r1;
    }

    static android.widget.Spinner access$800(com.android.calendar.recurrencepicker.RecurrencePickerDialog)
    {
        com.android.calendar.recurrencepicker.RecurrencePickerDialog r0;
        android.widget.Spinner $r1;

        r0 := @parameter0: com.android.calendar.recurrencepicker.RecurrencePickerDialog;

        $r1 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.Spinner mEndSpinner>;

        return $r1;
    }

    static java.lang.String access$900(com.android.calendar.recurrencepicker.RecurrencePickerDialog)
    {
        com.android.calendar.recurrencepicker.RecurrencePickerDialog r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.calendar.recurrencepicker.RecurrencePickerDialog;

        $r1 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: java.lang.String mEndDateLabel>;

        return $r1;
    }

    static android.content.res.Resources access$1000(com.android.calendar.recurrencepicker.RecurrencePickerDialog)
    {
        com.android.calendar.recurrencepicker.RecurrencePickerDialog r0;
        android.content.res.Resources $r1;

        r0 := @parameter0: com.android.calendar.recurrencepicker.RecurrencePickerDialog;

        $r1 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.content.res.Resources mResources>;

        return $r1;
    }

    static java.lang.String access$1100(com.android.calendar.recurrencepicker.RecurrencePickerDialog)
    {
        com.android.calendar.recurrencepicker.RecurrencePickerDialog r0;
        java.lang.String $r1;

        r0 := @parameter0: com.android.calendar.recurrencepicker.RecurrencePickerDialog;

        $r1 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: java.lang.String mEndCountLabel>;

        return $r1;
    }

    static android.widget.TextView access$1200(com.android.calendar.recurrencepicker.RecurrencePickerDialog)
    {
        com.android.calendar.recurrencepicker.RecurrencePickerDialog r0;
        android.widget.TextView $r1;

        r0 := @parameter0: com.android.calendar.recurrencepicker.RecurrencePickerDialog;

        $r1 = r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: android.widget.TextView mPostEndCount>;

        return $r1;
    }

    static boolean access$1302(com.android.calendar.recurrencepicker.RecurrencePickerDialog, boolean)
    {
        com.android.calendar.recurrencepicker.RecurrencePickerDialog r0;
        boolean z0;

        r0 := @parameter0: com.android.calendar.recurrencepicker.RecurrencePickerDialog;

        z0 := @parameter1: boolean;

        r0.<com.android.calendar.recurrencepicker.RecurrencePickerDialog: boolean mHidePostEndCount> = z0;

        return z0;
    }

    static void <clinit>()
    {
        int[] $r0;

        <com.android.calendar.recurrencepicker.RecurrencePickerDialog: java.lang.String FRAG_TAG_DATE_PICKER> = "tag_date_picker_frag";

        <com.android.calendar.recurrencepicker.RecurrencePickerDialog: java.lang.String BUNDLE_END_COUNT_HAS_FOCUS> = "bundle_end_count_has_focus";

        <com.android.calendar.recurrencepicker.RecurrencePickerDialog: java.lang.String BUNDLE_MODEL> = "bundle_model";

        <com.android.calendar.recurrencepicker.RecurrencePickerDialog: java.lang.String BUNDLE_RRULE> = "bundle_event_rrule";

        <com.android.calendar.recurrencepicker.RecurrencePickerDialog: java.lang.String BUNDLE_TIME_ZONE> = "bundle_event_time_zone";

        <com.android.calendar.recurrencepicker.RecurrencePickerDialog: java.lang.String BUNDLE_START_TIME_MILLIS> = "bundle_event_start_time";

        <com.android.calendar.recurrencepicker.RecurrencePickerDialog: int LAST_NTH_DAY_OF_WEEK> = -1;

        <com.android.calendar.recurrencepicker.RecurrencePickerDialog: int FIFTH_WEEK_IN_A_MONTH> = 5;

        <com.android.calendar.recurrencepicker.RecurrencePickerDialog: int COUNT_DEFAULT> = 5;

        <com.android.calendar.recurrencepicker.RecurrencePickerDialog: int COUNT_MAX> = 730;

        <com.android.calendar.recurrencepicker.RecurrencePickerDialog: int INTERVAL_DEFAULT> = 1;

        <com.android.calendar.recurrencepicker.RecurrencePickerDialog: int INTERVAL_MAX> = 99;

        <com.android.calendar.recurrencepicker.RecurrencePickerDialog: int MIN_SCREEN_WIDTH_FOR_SINGLE_ROW_WEEK> = 450;

        <com.android.calendar.recurrencepicker.RecurrencePickerDialog: java.lang.String TAG> = "RecurrencePickerDialog";

        $r0 = newarray (int)[4];

        $r0[0] = 4;

        $r0[1] = 5;

        $r0[2] = 6;

        $r0[3] = 7;

        <com.android.calendar.recurrencepicker.RecurrencePickerDialog: int[] mFreqModelToEventRecurrence> = $r0;

        return;
    }
}
