public class com.android.calendar.month.MonthListView extends android.widget.ListView
{
    private static final java.lang.String TAG;
    android.view.VelocityTracker mTracker;
    private static float mScale;
    private static int MIN_VELOCITY_FOR_FLING;
    private static int MULTIPLE_MONTH_VELOCITY_THRESHOLD;
    private static int FLING_VELOCITY_DIVIDER;
    private static int FLING_TIME;
    protected android.text.format.Time mTempTime;
    private long mDownActionTime;
    private final android.graphics.Rect mFirstViewRect;
    android.content.Context mListContext;
    private final java.lang.Runnable mTimezoneUpdater;

    public void <init>(android.content.Context)
    {
        com.android.calendar.month.MonthListView r0;
        android.content.Context r1;
        android.graphics.Rect $r2;
        com.android.calendar.month.MonthListView$1 $r3;

        r0 := @this: com.android.calendar.month.MonthListView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.widget.ListView: void <init>(android.content.Context)>(r1);

        $r2 = new android.graphics.Rect;

        specialinvoke $r2.<android.graphics.Rect: void <init>()>();

        r0.<com.android.calendar.month.MonthListView: android.graphics.Rect mFirstViewRect> = $r2;

        $r3 = new com.android.calendar.month.MonthListView$1;

        specialinvoke $r3.<com.android.calendar.month.MonthListView$1: void <init>(com.android.calendar.month.MonthListView)>(r0);

        r0.<com.android.calendar.month.MonthListView: java.lang.Runnable mTimezoneUpdater> = $r3;

        specialinvoke r0.<com.android.calendar.month.MonthListView: void init(android.content.Context)>(r1);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.android.calendar.month.MonthListView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;
        android.graphics.Rect $r3;
        com.android.calendar.month.MonthListView$1 $r4;

        r0 := @this: com.android.calendar.month.MonthListView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.ListView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<com.android.calendar.month.MonthListView: android.graphics.Rect mFirstViewRect> = $r3;

        $r4 = new com.android.calendar.month.MonthListView$1;

        specialinvoke $r4.<com.android.calendar.month.MonthListView$1: void <init>(com.android.calendar.month.MonthListView)>(r0);

        r0.<com.android.calendar.month.MonthListView: java.lang.Runnable mTimezoneUpdater> = $r4;

        specialinvoke r0.<com.android.calendar.month.MonthListView: void init(android.content.Context)>(r1);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.android.calendar.month.MonthListView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        android.graphics.Rect $r3;
        com.android.calendar.month.MonthListView$1 $r4;

        r0 := @this: com.android.calendar.month.MonthListView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.ListView: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        $r3 = new android.graphics.Rect;

        specialinvoke $r3.<android.graphics.Rect: void <init>()>();

        r0.<com.android.calendar.month.MonthListView: android.graphics.Rect mFirstViewRect> = $r3;

        $r4 = new com.android.calendar.month.MonthListView$1;

        specialinvoke $r4.<com.android.calendar.month.MonthListView$1: void <init>(com.android.calendar.month.MonthListView)>(r0);

        r0.<com.android.calendar.month.MonthListView: java.lang.Runnable mTimezoneUpdater> = $r4;

        specialinvoke r0.<com.android.calendar.month.MonthListView: void init(android.content.Context)>(r1);

        return;
    }

    private void init(android.content.Context)
    {
        com.android.calendar.month.MonthListView r0;
        android.content.Context r1;
        android.view.VelocityTracker $r2;
        android.text.format.Time $r3;
        java.lang.Runnable $r4;
        java.lang.String $r5;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11;
        byte $b0, $b1;
        android.content.res.Resources $r6;
        android.util.DisplayMetrics $r7;
        int $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: com.android.calendar.month.MonthListView;

        r1 := @parameter0: android.content.Context;

        r0.<com.android.calendar.month.MonthListView: android.content.Context mListContext> = r1;

        $r2 = staticinvoke <android.view.VelocityTracker: android.view.VelocityTracker obtain()>();

        r0.<com.android.calendar.month.MonthListView: android.view.VelocityTracker mTracker> = $r2;

        $r3 = new android.text.format.Time;

        $r4 = r0.<com.android.calendar.month.MonthListView: java.lang.Runnable mTimezoneUpdater>;

        $r5 = staticinvoke <com.android.calendar.Utils: java.lang.String getTimeZone(android.content.Context,java.lang.Runnable)>(r1, $r4);

        specialinvoke $r3.<android.text.format.Time: void <init>(java.lang.String)>($r5);

        r0.<com.android.calendar.month.MonthListView: android.text.format.Time mTempTime> = $r3;

        $f0 = <com.android.calendar.month.MonthListView: float mScale>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 != 0 goto label1;

        $r6 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r7 = virtualinvoke $r6.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f1 = $r7.<android.util.DisplayMetrics: float density>;

        <com.android.calendar.month.MonthListView: float mScale> = $f1;

        $f2 = <com.android.calendar.month.MonthListView: float mScale>;

        $b1 = $f2 cmpl 1.0F;

        if $b1 == 0 goto label1;

        $i2 = <com.android.calendar.month.MonthListView: int MIN_VELOCITY_FOR_FLING>;

        $f4 = (float) $i2;

        $f3 = <com.android.calendar.month.MonthListView: float mScale>;

        $f5 = $f4 * $f3;

        $i3 = (int) $f5;

        <com.android.calendar.month.MonthListView: int MIN_VELOCITY_FOR_FLING> = $i3;

        $i4 = <com.android.calendar.month.MonthListView: int MULTIPLE_MONTH_VELOCITY_THRESHOLD>;

        $f8 = (float) $i4;

        $f6 = <com.android.calendar.month.MonthListView: float mScale>;

        $f7 = $f8 * $f6;

        $i6 = (int) $f7;

        <com.android.calendar.month.MonthListView: int MULTIPLE_MONTH_VELOCITY_THRESHOLD> = $i6;

        $i5 = <com.android.calendar.month.MonthListView: int FLING_VELOCITY_DIVIDER>;

        $f9 = (float) $i5;

        $f10 = <com.android.calendar.month.MonthListView: float mScale>;

        $f11 = $f9 * $f10;

        $i7 = (int) $f11;

        <com.android.calendar.month.MonthListView: int FLING_VELOCITY_DIVIDER> = $i7;

     label1:
        return;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        com.android.calendar.month.MonthListView r0;
        android.view.MotionEvent r1;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.calendar.month.MonthListView;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = specialinvoke r0.<com.android.calendar.month.MonthListView: boolean processEvent(android.view.MotionEvent)>(r1);

        if $z0 != 0 goto label1;

        $z1 = specialinvoke r0.<android.widget.ListView: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        com.android.calendar.month.MonthListView r0;
        android.view.MotionEvent r1;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.calendar.month.MonthListView;

        r1 := @parameter0: android.view.MotionEvent;

        $z0 = specialinvoke r0.<com.android.calendar.month.MonthListView: boolean processEvent(android.view.MotionEvent)>(r1);

        if $z0 != 0 goto label1;

        $z1 = specialinvoke r0.<android.widget.ListView: boolean onInterceptTouchEvent(android.view.MotionEvent)>(r1);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    private boolean processEvent(android.view.MotionEvent)
    {
        com.android.calendar.month.MonthListView r0;
        android.view.MotionEvent r1;
        float f0, $f1, $f2;
        int $i0, $i1, $i2;
        android.view.VelocityTracker $r2, $r3, $r4, $r5, $r6;
        byte $b3;
        long $l4;

        r0 := @this: com.android.calendar.month.MonthListView;

        r1 := @parameter0: android.view.MotionEvent;

        $i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        $i1 = $i0 & 255;

        tableswitch($i1)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label1;
            default: goto label4;
        };

     label1:
        return 0;

     label2:
        $r5 = r0.<com.android.calendar.month.MonthListView: android.view.VelocityTracker mTracker>;

        virtualinvoke $r5.<android.view.VelocityTracker: void clear()>();

        $l4 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r0.<com.android.calendar.month.MonthListView: long mDownActionTime> = $l4;

        goto label5;

     label3:
        $r2 = r0.<com.android.calendar.month.MonthListView: android.view.VelocityTracker mTracker>;

        virtualinvoke $r2.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r1);

        $r3 = r0.<com.android.calendar.month.MonthListView: android.view.VelocityTracker mTracker>;

        virtualinvoke $r3.<android.view.VelocityTracker: void computeCurrentVelocity(int)>(1000);

        $r4 = r0.<com.android.calendar.month.MonthListView: android.view.VelocityTracker mTracker>;

        f0 = virtualinvoke $r4.<android.view.VelocityTracker: float getYVelocity()>();

        $f1 = staticinvoke <java.lang.Math: float abs(float)>(f0);

        $i2 = <com.android.calendar.month.MonthListView: int MIN_VELOCITY_FOR_FLING>;

        $f2 = (float) $i2;

        $b3 = $f1 cmpl $f2;

        if $b3 <= 0 goto label5;

        specialinvoke r0.<com.android.calendar.month.MonthListView: void doFling(float)>(f0);

        return 1;

     label4:
        $r6 = r0.<com.android.calendar.month.MonthListView: android.view.VelocityTracker mTracker>;

        virtualinvoke $r6.<android.view.VelocityTracker: void addMovement(android.view.MotionEvent)>(r1);

     label5:
        return 0;
    }

    private void doFling(float)
    {
        com.android.calendar.month.MonthListView r0;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;
        android.view.MotionEvent r1;
        int i0, i1, i3, i4, i5, i6, i7, $i10, $i13, $i14, $i15, $i17, $i18, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i31, $i32, $i33, $i34, $i35, $i38;
        long l2, $l8, $l9, $l19;
        android.view.View r2;
        byte $b11, $b12, $b30, $b36, $b37;
        android.text.format.Time $r3, $r4, $r5, $r6, $r7;
        android.graphics.Rect $r8, $r9, $r10;

        r0 := @this: com.android.calendar.month.MonthListView;

        f0 := @parameter0: float;

        $l8 = r0.<com.android.calendar.month.MonthListView: long mDownActionTime>;

        $l9 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r1 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>($l8, $l9, 3, 0.0F, 0.0F, 0);

        virtualinvoke r0.<com.android.calendar.month.MonthListView: boolean onTouchEvent(android.view.MotionEvent)>(r1);

        $f1 = staticinvoke <java.lang.Math: float abs(float)>(f0);

        $i10 = <com.android.calendar.month.MonthListView: int MULTIPLE_MONTH_VELOCITY_THRESHOLD>;

        $f2 = (float) $i10;

        $b12 = $f1 cmpg $f2;

        if $b12 >= 0 goto label02;

        $b37 = f0 cmpg 0.0F;

        if $b37 >= 0 goto label01;

        i0 = 1;

        goto label04;

     label01:
        i0 = 0;

        goto label04;

     label02:
        $b11 = f0 cmpg 0.0F;

        if $b11 >= 0 goto label03;

        $i35 = <com.android.calendar.month.MonthListView: int MULTIPLE_MONTH_VELOCITY_THRESHOLD>;

        $f7 = (float) $i35;

        $f9 = f0 + $f7;

        $i34 = <com.android.calendar.month.MonthListView: int FLING_VELOCITY_DIVIDER>;

        $f8 = (float) $i34;

        $f10 = $f9 / $f8;

        $i38 = (int) $f10;

        i0 = 1 - $i38;

        goto label04;

     label03:
        $i13 = <com.android.calendar.month.MonthListView: int MULTIPLE_MONTH_VELOCITY_THRESHOLD>;

        $f3 = (float) $i13;

        $f6 = f0 - $f3;

        $i14 = <com.android.calendar.month.MonthListView: int FLING_VELOCITY_DIVIDER>;

        $f4 = (float) $i14;

        $f5 = $f6 / $f4;

        $i15 = (int) $f5;

        i0 = neg $i15;

     label04:
        i1 = specialinvoke r0.<com.android.calendar.month.MonthListView: int getUpperRightJulianDay()>();

        $r3 = r0.<com.android.calendar.month.MonthListView: android.text.format.Time mTempTime>;

        virtualinvoke $r3.<android.text.format.Time: long setJulianDay(int)>(i1);

        $r4 = r0.<com.android.calendar.month.MonthListView: android.text.format.Time mTempTime>;

        $r4.<android.text.format.Time: int monthDay> = 1;

        $r5 = r0.<com.android.calendar.month.MonthListView: android.text.format.Time mTempTime>;

        $i17 = $r5.<android.text.format.Time: int month>;

        $i18 = $i17 + i0;

        $r5.<android.text.format.Time: int month> = $i18;

        $r7 = r0.<com.android.calendar.month.MonthListView: android.text.format.Time mTempTime>;

        l2 = virtualinvoke $r7.<android.text.format.Time: long normalize(boolean)>(0);

        $r6 = r0.<com.android.calendar.month.MonthListView: android.text.format.Time mTempTime>;

        $l19 = $r6.<android.text.format.Time: long gmtoff>;

        $i20 = staticinvoke <android.text.format.Time: int getJulianDay(long,long)>(l2, $l19);

        if i0 <= 0 goto label05;

        $b36 = 6;

        goto label06;

     label05:
        $b36 = 0;

     label06:
        i3 = $i20 + $b36;

        r2 = virtualinvoke r0.<com.android.calendar.month.MonthListView: android.view.View getChildAt(int)>(0);

        i4 = virtualinvoke r2.<android.view.View: int getHeight()>();

        $r8 = r0.<com.android.calendar.month.MonthListView: android.graphics.Rect mFirstViewRect>;

        virtualinvoke r2.<android.view.View: boolean getLocalVisibleRect(android.graphics.Rect)>($r8);

        $r10 = r0.<com.android.calendar.month.MonthListView: android.graphics.Rect mFirstViewRect>;

        $i25 = $r10.<android.graphics.Rect: int bottom>;

        $r9 = r0.<com.android.calendar.month.MonthListView: android.graphics.Rect mFirstViewRect>;

        $i21 = $r9.<android.graphics.Rect: int top>;

        i5 = $i25 - $i21;

        $i24 = i3 - i1;

        $i23 = $i24 / 7;

        if i0 > 0 goto label07;

        $b30 = 1;

        goto label08;

     label07:
        $b30 = 0;

     label08:
        i6 = $i23 - $b30;

        if i6 <= 0 goto label09;

        $i33 = i4 - i5;

        $i26 = <com.android.calendar.month.SimpleDayPickerFragment: int LIST_TOP_OFFSET>;

        $i32 = $i33 + $i26;

        $i31 = neg $i32;

        goto label10;

     label09:
        $i22 = <com.android.calendar.month.SimpleDayPickerFragment: int LIST_TOP_OFFSET>;

        $i31 = i5 - $i22;

     label10:
        i7 = $i31;

        $i29 = i6 * i4;

        $i27 = $i29 + i7;

        $i28 = <com.android.calendar.month.MonthListView: int FLING_TIME>;

        virtualinvoke r0.<com.android.calendar.month.MonthListView: void smoothScrollBy(int,int)>($i27, $i28);

        return;
    }

    private int getUpperRightJulianDay()
    {
        com.android.calendar.month.MonthListView r0;
        com.android.calendar.month.SimpleWeekView r1;
        android.view.View $r2;
        int $i0, $i1, $i2;

        r0 := @this: com.android.calendar.month.MonthListView;

        $r2 = virtualinvoke r0.<com.android.calendar.month.MonthListView: android.view.View getChildAt(int)>(0);

        r1 = (com.android.calendar.month.SimpleWeekView) $r2;

        if r1 != null goto label1;

        return -1;

     label1:
        $i0 = virtualinvoke r1.<com.android.calendar.month.SimpleWeekView: int getFirstJulianDay()>();

        $i1 = $i0 + 7;

        $i2 = $i1 - 1;

        return $i2;
    }

    static java.lang.Runnable access$000(com.android.calendar.month.MonthListView)
    {
        com.android.calendar.month.MonthListView r0;
        java.lang.Runnable $r1;

        r0 := @parameter0: com.android.calendar.month.MonthListView;

        $r1 = r0.<com.android.calendar.month.MonthListView: java.lang.Runnable mTimezoneUpdater>;

        return $r1;
    }

    static void <clinit>()
    {
        <com.android.calendar.month.MonthListView: java.lang.String TAG> = "MonthListView";

        <com.android.calendar.month.MonthListView: float mScale> = 0.0F;

        <com.android.calendar.month.MonthListView: int MIN_VELOCITY_FOR_FLING> = 1500;

        <com.android.calendar.month.MonthListView: int MULTIPLE_MONTH_VELOCITY_THRESHOLD> = 2000;

        <com.android.calendar.month.MonthListView: int FLING_VELOCITY_DIVIDER> = 500;

        <com.android.calendar.month.MonthListView: int FLING_TIME> = 1000;

        return;
    }
}
