public class android.support.v4.widget.DrawerLayout extends android.view.ViewGroup implements android.support.v4.widget.DrawerLayoutImpl
{
    private static final java.lang.String TAG;
    public static final int STATE_IDLE;
    public static final int STATE_DRAGGING;
    public static final int STATE_SETTLING;
    public static final int LOCK_MODE_UNLOCKED;
    public static final int LOCK_MODE_LOCKED_CLOSED;
    public static final int LOCK_MODE_LOCKED_OPEN;
    private static final int MIN_DRAWER_MARGIN;
    private static final int DEFAULT_SCRIM_COLOR;
    private static final int PEEK_DELAY;
    private static final int MIN_FLING_VELOCITY;
    private static final boolean ALLOW_EDGE_LOCK;
    private static final boolean CHILDREN_DISALLOW_INTERCEPT;
    private static final float TOUCH_SLOP_SENSITIVITY;
    private static final int[] LAYOUT_ATTRS;
    private final android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate;
    private int mMinDrawerMargin;
    private int mScrimColor;
    private float mScrimOpacity;
    private android.graphics.Paint mScrimPaint;
    private final android.support.v4.widget.ViewDragHelper mLeftDragger;
    private final android.support.v4.widget.ViewDragHelper mRightDragger;
    private final android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback;
    private final android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback;
    private int mDrawerState;
    private boolean mInLayout;
    private boolean mFirstLayout;
    private int mLockModeLeft;
    private int mLockModeRight;
    private boolean mDisallowInterceptRequested;
    private boolean mChildrenCanceledTouch;
    private android.support.v4.widget.DrawerLayout$DrawerListener mListener;
    private float mInitialMotionX;
    private float mInitialMotionY;
    private android.graphics.drawable.Drawable mShadowLeft;
    private android.graphics.drawable.Drawable mShadowRight;
    private android.graphics.drawable.Drawable mStatusBarBackground;
    private java.lang.CharSequence mTitleLeft;
    private java.lang.CharSequence mTitleRight;
    private java.lang.Object mLastInsets;
    private boolean mDrawStatusBarBackground;
    static final android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl IMPL;

    public void <init>(android.content.Context)
    {
        android.support.v4.widget.DrawerLayout r0;
        android.content.Context r1;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.support.v4.widget.DrawerLayout: void <init>(android.content.Context,android.util.AttributeSet)>(r1, null);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        android.support.v4.widget.DrawerLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.support.v4.widget.DrawerLayout: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        android.support.v4.widget.DrawerLayout r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0, $i1;
        float f0, f1, $f2, $f3;
        android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate $r3;
        android.graphics.Paint $r4;
        android.content.res.Resources $r5;
        android.util.DisplayMetrics $r6;
        android.support.v4.widget.DrawerLayout$ViewDragCallback $r7, $r8, $r9, $r14, $r15, $r21;
        android.support.v4.widget.ViewDragHelper $r10, $r11, $r12, $r13, $r16, $r17, $r18, $r19;
        android.support.v4.widget.DrawerLayout$AccessibilityDelegate $r20;
        android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl $r22;
        boolean $z0;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.view.ViewGroup: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        $r3 = new android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate;

        specialinvoke $r3.<android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate: void <init>(android.support.v4.widget.DrawerLayout)>(r0);

        r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate> = $r3;

        r0.<android.support.v4.widget.DrawerLayout: int mScrimColor> = -1728053248;

        $r4 = new android.graphics.Paint;

        specialinvoke $r4.<android.graphics.Paint: void <init>()>();

        r0.<android.support.v4.widget.DrawerLayout: android.graphics.Paint mScrimPaint> = $r4;

        r0.<android.support.v4.widget.DrawerLayout: boolean mFirstLayout> = 1;

        virtualinvoke r0.<android.support.v4.widget.DrawerLayout: void setDescendantFocusability(int)>(262144);

        $r5 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        f0 = $r6.<android.util.DisplayMetrics: float density>;

        $f2 = 64.0F * f0;

        $f3 = $f2 + 0.5F;

        $i1 = (int) $f3;

        r0.<android.support.v4.widget.DrawerLayout: int mMinDrawerMargin> = $i1;

        f1 = 400.0F * f0;

        $r7 = new android.support.v4.widget.DrawerLayout$ViewDragCallback;

        specialinvoke $r7.<android.support.v4.widget.DrawerLayout$ViewDragCallback: void <init>(android.support.v4.widget.DrawerLayout,int)>(r0, 3);

        r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback> = $r7;

        $r8 = new android.support.v4.widget.DrawerLayout$ViewDragCallback;

        specialinvoke $r8.<android.support.v4.widget.DrawerLayout$ViewDragCallback: void <init>(android.support.v4.widget.DrawerLayout,int)>(r0, 5);

        r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback> = $r8;

        $r9 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback>;

        $r11 = staticinvoke <android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback)>(r0, 1.0F, $r9);

        r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.ViewDragHelper mLeftDragger> = $r11;

        $r10 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.ViewDragHelper mLeftDragger>;

        virtualinvoke $r10.<android.support.v4.widget.ViewDragHelper: void setEdgeTrackingEnabled(int)>(1);

        $r13 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.ViewDragHelper mLeftDragger>;

        virtualinvoke $r13.<android.support.v4.widget.ViewDragHelper: void setMinVelocity(float)>(f1);

        $r15 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback>;

        $r12 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.ViewDragHelper mLeftDragger>;

        virtualinvoke $r15.<android.support.v4.widget.DrawerLayout$ViewDragCallback: void setDragger(android.support.v4.widget.ViewDragHelper)>($r12);

        $r14 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback>;

        $r17 = staticinvoke <android.support.v4.widget.ViewDragHelper: android.support.v4.widget.ViewDragHelper create(android.view.ViewGroup,float,android.support.v4.widget.ViewDragHelper$Callback)>(r0, 1.0F, $r14);

        r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.ViewDragHelper mRightDragger> = $r17;

        $r16 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.ViewDragHelper mRightDragger>;

        virtualinvoke $r16.<android.support.v4.widget.ViewDragHelper: void setEdgeTrackingEnabled(int)>(2);

        $r19 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.ViewDragHelper mRightDragger>;

        virtualinvoke $r19.<android.support.v4.widget.ViewDragHelper: void setMinVelocity(float)>(f1);

        $r21 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback>;

        $r18 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.ViewDragHelper mRightDragger>;

        virtualinvoke $r21.<android.support.v4.widget.DrawerLayout$ViewDragCallback: void setDragger(android.support.v4.widget.ViewDragHelper)>($r18);

        virtualinvoke r0.<android.support.v4.widget.DrawerLayout: void setFocusableInTouchMode(boolean)>(1);

        staticinvoke <android.support.v4.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>(r0, 1);

        $r20 = new android.support.v4.widget.DrawerLayout$AccessibilityDelegate;

        specialinvoke $r20.<android.support.v4.widget.DrawerLayout$AccessibilityDelegate: void <init>(android.support.v4.widget.DrawerLayout)>(r0);

        staticinvoke <android.support.v4.view.ViewCompat: void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)>(r0, $r20);

        staticinvoke <android.support.v4.view.ViewGroupCompat: void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean)>(r0, 0);

        $z0 = staticinvoke <android.support.v4.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>(r0);

        if $z0 == 0 goto label1;

        $r22 = <android.support.v4.widget.DrawerLayout: android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl IMPL>;

        interfaceinvoke $r22.<android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl: void configureApplyInsets(android.view.View)>(r0);

     label1:
        return;
    }

    public void setChildInsets(java.lang.Object, boolean)
    {
        android.support.v4.widget.DrawerLayout r0;
        java.lang.Object r1;
        boolean z0, $z1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        r1 := @parameter0: java.lang.Object;

        z0 := @parameter1: boolean;

        r0.<android.support.v4.widget.DrawerLayout: java.lang.Object mLastInsets> = r1;

        r0.<android.support.v4.widget.DrawerLayout: boolean mDrawStatusBarBackground> = z0;

        if z0 != 0 goto label1;

        $r2 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: android.graphics.drawable.Drawable getBackground()>();

        if $r2 != null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        virtualinvoke r0.<android.support.v4.widget.DrawerLayout: void setWillNotDraw(boolean)>($z1);

        virtualinvoke r0.<android.support.v4.widget.DrawerLayout: void requestLayout()>();

        return;
    }

    public void setDrawerShadow(android.graphics.drawable.Drawable, int)
    {
        android.support.v4.widget.DrawerLayout r0;
        android.graphics.drawable.Drawable r1;
        int i0, i1, $i2, $i3, $i4;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        i0 := @parameter1: int;

        $i2 = staticinvoke <android.support.v4.view.ViewCompat: int getLayoutDirection(android.view.View)>(r0);

        i1 = staticinvoke <android.support.v4.view.GravityCompat: int getAbsoluteGravity(int,int)>(i0, $i2);

        $i3 = i1 & 3;

        if $i3 != 3 goto label1;

        r0.<android.support.v4.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowLeft> = r1;

        virtualinvoke r0.<android.support.v4.widget.DrawerLayout: void invalidate()>();

     label1:
        $i4 = i1 & 5;

        if $i4 != 5 goto label2;

        r0.<android.support.v4.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowRight> = r1;

        virtualinvoke r0.<android.support.v4.widget.DrawerLayout: void invalidate()>();

     label2:
        return;
    }

    public void setDrawerShadow(int, int)
    {
        android.support.v4.widget.DrawerLayout r0;
        int i0, i1;
        android.content.res.Resources $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: android.content.res.Resources getResources()>();

        $r2 = virtualinvoke $r1.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>(i0);

        virtualinvoke r0.<android.support.v4.widget.DrawerLayout: void setDrawerShadow(android.graphics.drawable.Drawable,int)>($r2, i1);

        return;
    }

    public void setScrimColor(int)
    {
        android.support.v4.widget.DrawerLayout r0;
        int i0;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        i0 := @parameter0: int;

        r0.<android.support.v4.widget.DrawerLayout: int mScrimColor> = i0;

        virtualinvoke r0.<android.support.v4.widget.DrawerLayout: void invalidate()>();

        return;
    }

    public void setDrawerListener(android.support.v4.widget.DrawerLayout$DrawerListener)
    {
        android.support.v4.widget.DrawerLayout r0;
        android.support.v4.widget.DrawerLayout$DrawerListener r1;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        r1 := @parameter0: android.support.v4.widget.DrawerLayout$DrawerListener;

        r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.DrawerLayout$DrawerListener mListener> = r1;

        return;
    }

    public void setDrawerLockMode(int)
    {
        android.support.v4.widget.DrawerLayout r0;
        int i0;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        i0 := @parameter0: int;

        virtualinvoke r0.<android.support.v4.widget.DrawerLayout: void setDrawerLockMode(int,int)>(i0, 3);

        virtualinvoke r0.<android.support.v4.widget.DrawerLayout: void setDrawerLockMode(int,int)>(i0, 5);

        return;
    }

    public void setDrawerLockMode(int, int)
    {
        android.support.v4.widget.DrawerLayout r0;
        int i0, i1, i2, $i3;
        android.support.v4.widget.ViewDragHelper r1, $r3;
        android.view.View r2, r4;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $i3 = staticinvoke <android.support.v4.view.ViewCompat: int getLayoutDirection(android.view.View)>(r0);

        i2 = staticinvoke <android.support.v4.view.GravityCompat: int getAbsoluteGravity(int,int)>(i1, $i3);

        if i2 != 3 goto label1;

        r0.<android.support.v4.widget.DrawerLayout: int mLockModeLeft> = i0;

        goto label2;

     label1:
        if i2 != 5 goto label2;

        r0.<android.support.v4.widget.DrawerLayout: int mLockModeRight> = i0;

     label2:
        if i0 == 0 goto label5;

        if i2 != 3 goto label3;

        $r3 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.ViewDragHelper mLeftDragger>;

        goto label4;

     label3:
        $r3 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.ViewDragHelper mRightDragger>;

     label4:
        r1 = $r3;

        virtualinvoke r1.<android.support.v4.widget.ViewDragHelper: void cancel()>();

     label5:
        lookupswitch(i0)
        {
            case 1: goto label7;
            case 2: goto label6;
            default: goto label8;
        };

     label6:
        r4 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: android.view.View findDrawerWithGravity(int)>(i2);

        if r4 == null goto label8;

        virtualinvoke r0.<android.support.v4.widget.DrawerLayout: void openDrawer(android.view.View)>(r4);

        goto label8;

     label7:
        r2 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: android.view.View findDrawerWithGravity(int)>(i2);

        if r2 == null goto label8;

        virtualinvoke r0.<android.support.v4.widget.DrawerLayout: void closeDrawer(android.view.View)>(r2);

     label8:
        return;
    }

    public void setDrawerLockMode(int, android.view.View)
    {
        android.support.v4.widget.DrawerLayout r0;
        int i0, i1;
        android.view.View r1;
        boolean $z0;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.v4.widget.DrawerLayout$LayoutParams $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9;
        java.lang.String $r10;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.View;

        $z0 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: boolean isDrawerView(android.view.View)>(r1);

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("View ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("drawer with appropriate layout_gravity");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r4;

     label1:
        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.support.v4.widget.DrawerLayout$LayoutParams) $r2;

        i1 = $r3.<android.support.v4.widget.DrawerLayout$LayoutParams: int gravity>;

        virtualinvoke r0.<android.support.v4.widget.DrawerLayout: void setDrawerLockMode(int,int)>(i0, i1);

        return;
    }

    public int getDrawerLockMode(int)
    {
        android.support.v4.widget.DrawerLayout r0;
        int i0, i1, $i2, $i3, $i4;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        i0 := @parameter0: int;

        $i2 = staticinvoke <android.support.v4.view.ViewCompat: int getLayoutDirection(android.view.View)>(r0);

        i1 = staticinvoke <android.support.v4.view.GravityCompat: int getAbsoluteGravity(int,int)>(i0, $i2);

        if i1 != 3 goto label1;

        $i4 = r0.<android.support.v4.widget.DrawerLayout: int mLockModeLeft>;

        return $i4;

     label1:
        if i1 != 5 goto label2;

        $i3 = r0.<android.support.v4.widget.DrawerLayout: int mLockModeRight>;

        return $i3;

     label2:
        return 0;
    }

    public int getDrawerLockMode(android.view.View)
    {
        android.support.v4.widget.DrawerLayout r0;
        android.view.View r1;
        int i0, $i1, $i2;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        r1 := @parameter0: android.view.View;

        i0 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: int getDrawerViewAbsoluteGravity(android.view.View)>(r1);

        if i0 != 3 goto label1;

        $i2 = r0.<android.support.v4.widget.DrawerLayout: int mLockModeLeft>;

        return $i2;

     label1:
        if i0 != 5 goto label2;

        $i1 = r0.<android.support.v4.widget.DrawerLayout: int mLockModeRight>;

        return $i1;

     label2:
        return 0;
    }

    public void setDrawerTitle(int, java.lang.CharSequence)
    {
        android.support.v4.widget.DrawerLayout r0;
        int i0, i1, $i2;
        java.lang.CharSequence r1;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.CharSequence;

        $i2 = staticinvoke <android.support.v4.view.ViewCompat: int getLayoutDirection(android.view.View)>(r0);

        i1 = staticinvoke <android.support.v4.view.GravityCompat: int getAbsoluteGravity(int,int)>(i0, $i2);

        if i1 != 3 goto label1;

        r0.<android.support.v4.widget.DrawerLayout: java.lang.CharSequence mTitleLeft> = r1;

        goto label2;

     label1:
        if i1 != 5 goto label2;

        r0.<android.support.v4.widget.DrawerLayout: java.lang.CharSequence mTitleRight> = r1;

     label2:
        return;
    }

    public java.lang.CharSequence getDrawerTitle(int)
    {
        android.support.v4.widget.DrawerLayout r0;
        int i0, i1, $i2;
        java.lang.CharSequence $r1, $r2;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        i0 := @parameter0: int;

        $i2 = staticinvoke <android.support.v4.view.ViewCompat: int getLayoutDirection(android.view.View)>(r0);

        i1 = staticinvoke <android.support.v4.view.GravityCompat: int getAbsoluteGravity(int,int)>(i0, $i2);

        if i1 != 3 goto label1;

        $r2 = r0.<android.support.v4.widget.DrawerLayout: java.lang.CharSequence mTitleLeft>;

        return $r2;

     label1:
        if i1 != 5 goto label2;

        $r1 = r0.<android.support.v4.widget.DrawerLayout: java.lang.CharSequence mTitleRight>;

        return $r1;

     label2:
        return null;
    }

    void updateDrawerState(int, int, android.view.View)
    {
        android.support.v4.widget.DrawerLayout r0;
        int i0, i1, i2, i3, $i5;
        android.view.View r1;
        byte b4, $b6, $b7;
        android.support.v4.widget.DrawerLayout$LayoutParams r2;
        android.support.v4.widget.ViewDragHelper $r3, $r4;
        android.support.v4.widget.DrawerLayout$DrawerListener $r5, $r6;
        android.view.ViewGroup$LayoutParams $r7;
        float $f0, $f1;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: android.view.View;

        $r3 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.ViewDragHelper mLeftDragger>;

        i2 = virtualinvoke $r3.<android.support.v4.widget.ViewDragHelper: int getViewDragState()>();

        $r4 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.ViewDragHelper mRightDragger>;

        i3 = virtualinvoke $r4.<android.support.v4.widget.ViewDragHelper: int getViewDragState()>();

        if i2 == 1 goto label1;

        if i3 != 1 goto label2;

     label1:
        b4 = 1;

        goto label5;

     label2:
        if i2 == 2 goto label3;

        if i3 != 2 goto label4;

     label3:
        b4 = 2;

        goto label5;

     label4:
        b4 = 0;

     label5:
        if r1 == null goto label7;

        if i1 != 0 goto label7;

        $r7 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.support.v4.widget.DrawerLayout$LayoutParams) $r7;

        $f0 = r2.<android.support.v4.widget.DrawerLayout$LayoutParams: float onScreen>;

        $b6 = $f0 cmpl 0.0F;

        if $b6 != 0 goto label6;

        virtualinvoke r0.<android.support.v4.widget.DrawerLayout: void dispatchOnDrawerClosed(android.view.View)>(r1);

        goto label7;

     label6:
        $f1 = r2.<android.support.v4.widget.DrawerLayout$LayoutParams: float onScreen>;

        $b7 = $f1 cmpl 1.0F;

        if $b7 != 0 goto label7;

        virtualinvoke r0.<android.support.v4.widget.DrawerLayout: void dispatchOnDrawerOpened(android.view.View)>(r1);

     label7:
        $i5 = r0.<android.support.v4.widget.DrawerLayout: int mDrawerState>;

        if b4 == $i5 goto label8;

        r0.<android.support.v4.widget.DrawerLayout: int mDrawerState> = b4;

        $r5 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.DrawerLayout$DrawerListener mListener>;

        if $r5 == null goto label8;

        $r6 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.DrawerLayout$DrawerListener mListener>;

        interfaceinvoke $r6.<android.support.v4.widget.DrawerLayout$DrawerListener: void onDrawerStateChanged(int)>(b4);

     label8:
        return;
    }

    void dispatchOnDrawerClosed(android.view.View)
    {
        android.support.v4.widget.DrawerLayout r0;
        android.view.View r1, r3, r4;
        android.support.v4.widget.DrawerLayout$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r5;
        boolean $z0, $z1;
        android.support.v4.widget.DrawerLayout$DrawerListener $r6, $r7;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        r1 := @parameter0: android.view.View;

        $r5 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.support.v4.widget.DrawerLayout$LayoutParams) $r5;

        $z0 = r2.<android.support.v4.widget.DrawerLayout$LayoutParams: boolean knownOpen>;

        if $z0 == 0 goto label3;

        r2.<android.support.v4.widget.DrawerLayout$LayoutParams: boolean knownOpen> = 0;

        $r6 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.DrawerLayout$DrawerListener mListener>;

        if $r6 == null goto label1;

        $r7 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.DrawerLayout$DrawerListener mListener>;

        interfaceinvoke $r7.<android.support.v4.widget.DrawerLayout$DrawerListener: void onDrawerClosed(android.view.View)>(r1);

     label1:
        r3 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: android.view.View getChildAt(int)>(0);

        if r3 == null goto label2;

        staticinvoke <android.support.v4.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>(r3, 1);

     label2:
        staticinvoke <android.support.v4.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>(r1, 4);

        $z1 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: boolean hasWindowFocus()>();

        if $z1 == 0 goto label3;

        r4 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: android.view.View getRootView()>();

        if r4 == null goto label3;

        virtualinvoke r4.<android.view.View: void sendAccessibilityEvent(int)>(32);

     label3:
        return;
    }

    void dispatchOnDrawerOpened(android.view.View)
    {
        android.support.v4.widget.DrawerLayout r0;
        android.view.View r1, r3;
        android.support.v4.widget.DrawerLayout$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r4;
        boolean $z0;
        android.support.v4.widget.DrawerLayout$DrawerListener $r5, $r6;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        r1 := @parameter0: android.view.View;

        $r4 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.support.v4.widget.DrawerLayout$LayoutParams) $r4;

        $z0 = r2.<android.support.v4.widget.DrawerLayout$LayoutParams: boolean knownOpen>;

        if $z0 != 0 goto label3;

        r2.<android.support.v4.widget.DrawerLayout$LayoutParams: boolean knownOpen> = 1;

        $r5 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.DrawerLayout$DrawerListener mListener>;

        if $r5 == null goto label1;

        $r6 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.DrawerLayout$DrawerListener mListener>;

        interfaceinvoke $r6.<android.support.v4.widget.DrawerLayout$DrawerListener: void onDrawerOpened(android.view.View)>(r1);

     label1:
        r3 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: android.view.View getChildAt(int)>(0);

        if r3 == null goto label2;

        staticinvoke <android.support.v4.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>(r3, 4);

     label2:
        staticinvoke <android.support.v4.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>(r1, 1);

        virtualinvoke r0.<android.support.v4.widget.DrawerLayout: void sendAccessibilityEvent(int)>(32);

        virtualinvoke r1.<android.view.View: boolean requestFocus()>();

     label3:
        return;
    }

    void dispatchOnDrawerSlide(android.view.View, float)
    {
        android.support.v4.widget.DrawerLayout r0;
        android.view.View r1;
        float f0;
        android.support.v4.widget.DrawerLayout$DrawerListener $r2, $r3;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        $r2 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.DrawerLayout$DrawerListener mListener>;

        if $r2 == null goto label1;

        $r3 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.DrawerLayout$DrawerListener mListener>;

        interfaceinvoke $r3.<android.support.v4.widget.DrawerLayout$DrawerListener: void onDrawerSlide(android.view.View,float)>(r1, f0);

     label1:
        return;
    }

    void setDrawerViewOffset(android.view.View, float)
    {
        android.support.v4.widget.DrawerLayout r0;
        android.view.View r1;
        float f0, $f1;
        android.support.v4.widget.DrawerLayout$LayoutParams r2;
        android.view.ViewGroup$LayoutParams $r3;
        byte $b0;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.support.v4.widget.DrawerLayout$LayoutParams) $r3;

        $f1 = r2.<android.support.v4.widget.DrawerLayout$LayoutParams: float onScreen>;

        $b0 = f0 cmpl $f1;

        if $b0 != 0 goto label1;

        return;

     label1:
        r2.<android.support.v4.widget.DrawerLayout$LayoutParams: float onScreen> = f0;

        virtualinvoke r0.<android.support.v4.widget.DrawerLayout: void dispatchOnDrawerSlide(android.view.View,float)>(r1, f0);

        return;
    }

    float getDrawerViewOffset(android.view.View)
    {
        android.support.v4.widget.DrawerLayout r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.v4.widget.DrawerLayout$LayoutParams $r3;
        float $f0;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.support.v4.widget.DrawerLayout$LayoutParams) $r2;

        $f0 = $r3.<android.support.v4.widget.DrawerLayout$LayoutParams: float onScreen>;

        return $f0;
    }

    int getDrawerViewAbsoluteGravity(android.view.View)
    {
        android.support.v4.widget.DrawerLayout r0;
        android.view.View r1;
        int i0, $i1, $i2;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.v4.widget.DrawerLayout$LayoutParams $r3;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.support.v4.widget.DrawerLayout$LayoutParams) $r2;

        i0 = $r3.<android.support.v4.widget.DrawerLayout$LayoutParams: int gravity>;

        $i1 = staticinvoke <android.support.v4.view.ViewCompat: int getLayoutDirection(android.view.View)>(r0);

        $i2 = staticinvoke <android.support.v4.view.GravityCompat: int getAbsoluteGravity(int,int)>(i0, $i1);

        return $i2;
    }

    boolean checkDrawerViewAbsoluteGravity(android.view.View, int)
    {
        android.support.v4.widget.DrawerLayout r0;
        android.view.View r1;
        int i0, i1, $i2;
        boolean $z0;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        i1 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: int getDrawerViewAbsoluteGravity(android.view.View)>(r1);

        $i2 = i1 & i0;

        if $i2 != i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    android.view.View findOpenDrawer()
    {
        android.support.v4.widget.DrawerLayout r0;
        int i0, i1;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.v4.widget.DrawerLayout$LayoutParams $r3;
        boolean $z0;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        i0 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: int getChildCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r1 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: android.view.View getChildAt(int)>(i1);

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.support.v4.widget.DrawerLayout$LayoutParams) $r2;

        $z0 = $r3.<android.support.v4.widget.DrawerLayout$LayoutParams: boolean knownOpen>;

        if $z0 == 0 goto label2;

        return r1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    void moveDrawerToOffset(android.view.View, float)
    {
        android.support.v4.widget.DrawerLayout r0;
        android.view.View r1;
        float f0, f1, $f2, $f3, $f4, $f5;
        int i0, i1, i2, i3, $i4;
        boolean $z0;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        r1 := @parameter0: android.view.View;

        f0 := @parameter1: float;

        f1 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: float getDrawerViewOffset(android.view.View)>(r1);

        i0 = virtualinvoke r1.<android.view.View: int getWidth()>();

        $f2 = (float) i0;

        $f3 = $f2 * f1;

        i1 = (int) $f3;

        $f4 = (float) i0;

        $f5 = $f4 * f0;

        i2 = (int) $f5;

        i3 = i2 - i1;

        $z0 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: boolean checkDrawerViewAbsoluteGravity(android.view.View,int)>(r1, 3);

        if $z0 == 0 goto label1;

        $i4 = i3;

        goto label2;

     label1:
        $i4 = neg i3;

     label2:
        virtualinvoke r1.<android.view.View: void offsetLeftAndRight(int)>($i4);

        virtualinvoke r0.<android.support.v4.widget.DrawerLayout: void setDrawerViewOffset(android.view.View,float)>(r1, f0);

        return;
    }

    android.view.View findDrawerWithGravity(int)
    {
        android.support.v4.widget.DrawerLayout r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7;
        android.view.View r1;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        i0 := @parameter0: int;

        $i5 = staticinvoke <android.support.v4.view.ViewCompat: int getLayoutDirection(android.view.View)>(r0);

        $i6 = staticinvoke <android.support.v4.view.GravityCompat: int getAbsoluteGravity(int,int)>(i0, $i5);

        i1 = $i6 & 7;

        i2 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: int getChildCount()>();

        i3 = 0;

     label1:
        if i3 >= i2 goto label3;

        r1 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: android.view.View getChildAt(int)>(i3);

        i4 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: int getDrawerViewAbsoluteGravity(android.view.View)>(r1);

        $i7 = i4 & 7;

        if $i7 != i1 goto label2;

        return r1;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return null;
    }

    static java.lang.String gravityToString(int)
    {
        int i0, $i1, $i2;
        java.lang.String $r0;

        i0 := @parameter0: int;

        $i1 = i0 & 3;

        if $i1 != 3 goto label1;

        return "LEFT";

     label1:
        $i2 = i0 & 5;

        if $i2 != 5 goto label2;

        return "RIGHT";

     label2:
        $r0 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0);

        return $r0;
    }

    protected void onDetachedFromWindow()
    {
        android.support.v4.widget.DrawerLayout r0;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        specialinvoke r0.<android.view.ViewGroup: void onDetachedFromWindow()>();

        r0.<android.support.v4.widget.DrawerLayout: boolean mFirstLayout> = 1;

        return;
    }

    protected void onAttachedToWindow()
    {
        android.support.v4.widget.DrawerLayout r0;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        specialinvoke r0.<android.view.ViewGroup: void onAttachedToWindow()>();

        r0.<android.support.v4.widget.DrawerLayout: boolean mFirstLayout> = 1;

        return;
    }

    protected void onMeasure(int, int)
    {
        android.support.v4.widget.DrawerLayout r0;
        int i0, i1, i2, i3, i4, i5, i6, i8, i9, i10, i11, i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, i39, i40, i41;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        byte b7;
        android.view.View r1;
        android.support.v4.widget.DrawerLayout$LayoutParams r2;
        java.lang.Object $r3, $r25, $r27;
        java.lang.IllegalArgumentException $r4;
        android.view.ViewGroup$LayoutParams $r5;
        java.lang.IllegalStateException $r6, $r16;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r11, $r13, $r14, $r15, $r17, $r18, $r20, $r22, $r23, $r24;
        java.lang.String $r12, $r19, $r21;
        android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl $r26, $r28;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i0);

        i3 = staticinvoke <android.view.View$MeasureSpec: int getMode(int)>(i1);

        i4 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i0);

        i5 = staticinvoke <android.view.View$MeasureSpec: int getSize(int)>(i1);

        if i2 != 1073741824 goto label01;

        if i3 == 1073741824 goto label06;

     label01:
        $z1 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: boolean isInEditMode()>();

        if $z1 == 0 goto label05;

        if i2 != -2147483648 goto label02;

        goto label03;

     label02:
        if i2 != 0 goto label03;

        i4 = 300;

     label03:
        if i3 != -2147483648 goto label04;

        goto label06;

     label04:
        if i3 != 0 goto label06;

        i5 = 300;

        goto label06;

     label05:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("DrawerLayout must be measured with MeasureSpec.EXACTLY.");

        throw $r4;

     label06:
        virtualinvoke r0.<android.support.v4.widget.DrawerLayout: void setMeasuredDimension(int,int)>(i4, i5);

        $r3 = r0.<android.support.v4.widget.DrawerLayout: java.lang.Object mLastInsets>;

        if $r3 == null goto label07;

        $z5 = staticinvoke <android.support.v4.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>(r0);

        if $z5 == 0 goto label07;

        $z6 = 1;

        goto label08;

     label07:
        $z6 = 0;

     label08:
        z0 = $z6;

        i6 = staticinvoke <android.support.v4.view.ViewCompat: int getLayoutDirection(android.view.View)>(r0);

        b7 = 0;

        i8 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: int getChildCount()>();

        i9 = 0;

     label09:
        if i9 >= i8 goto label17;

        r1 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: android.view.View getChildAt(int)>(i9);

        $i13 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i13 != 8 goto label10;

        goto label16;

     label10:
        $r5 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.support.v4.widget.DrawerLayout$LayoutParams) $r5;

        if z0 == 0 goto label12;

        $i34 = r2.<android.support.v4.widget.DrawerLayout$LayoutParams: int gravity>;

        i10 = staticinvoke <android.support.v4.view.GravityCompat: int getAbsoluteGravity(int,int)>($i34, i6);

        $z4 = staticinvoke <android.support.v4.view.ViewCompat: boolean getFitsSystemWindows(android.view.View)>(r1);

        if $z4 == 0 goto label11;

        $r28 = <android.support.v4.widget.DrawerLayout: android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl IMPL>;

        $r27 = r0.<android.support.v4.widget.DrawerLayout: java.lang.Object mLastInsets>;

        interfaceinvoke $r28.<android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl: void dispatchChildInsets(android.view.View,java.lang.Object,int)>(r1, $r27, i10);

        goto label12;

     label11:
        $r26 = <android.support.v4.widget.DrawerLayout: android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl IMPL>;

        $r25 = r0.<android.support.v4.widget.DrawerLayout: java.lang.Object mLastInsets>;

        interfaceinvoke $r26.<android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl: void applyMarginInsets(android.view.ViewGroup$MarginLayoutParams,java.lang.Object,int)>(r2, $r25, i10);

     label12:
        $z2 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: boolean isContentView(android.view.View)>(r1);

        if $z2 == 0 goto label13;

        $i29 = r2.<android.support.v4.widget.DrawerLayout$LayoutParams: int leftMargin>;

        $i31 = i4 - $i29;

        $i30 = r2.<android.support.v4.widget.DrawerLayout$LayoutParams: int rightMargin>;

        $i32 = $i31 - $i30;

        i39 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i32, 1073741824);

        $i26 = r2.<android.support.v4.widget.DrawerLayout$LayoutParams: int topMargin>;

        $i28 = i5 - $i26;

        $i27 = r2.<android.support.v4.widget.DrawerLayout$LayoutParams: int bottomMargin>;

        $i33 = $i28 - $i27;

        i11 = staticinvoke <android.view.View$MeasureSpec: int makeMeasureSpec(int,int)>($i33, 1073741824);

        virtualinvoke r1.<android.view.View: void measure(int,int)>(i39, i11);

        goto label16;

     label13:
        $z3 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: boolean isDrawerView(android.view.View)>(r1);

        if $z3 == 0 goto label15;

        $i16 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: int getDrawerViewAbsoluteGravity(android.view.View)>(r1);

        i40 = $i16 & 7;

        $i17 = b7 & i40;

        if $i17 == 0 goto label14;

        $r16 = new java.lang.IllegalStateException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Child drawer has absolute gravity ");

        $r19 = staticinvoke <android.support.v4.widget.DrawerLayout: java.lang.String gravityToString(int)>(i40);

        $r18 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but this ");

        $r24 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("DrawerLayout");

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" already has a ");

        $r22 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("drawer view along that edge");

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r21);

        throw $r16;

     label14:
        $i15 = r0.<android.support.v4.widget.DrawerLayout: int mMinDrawerMargin>;

        $i14 = r2.<android.support.v4.widget.DrawerLayout$LayoutParams: int leftMargin>;

        $i21 = $i15 + $i14;

        $i20 = r2.<android.support.v4.widget.DrawerLayout$LayoutParams: int rightMargin>;

        $i19 = $i21 + $i20;

        $i18 = r2.<android.support.v4.widget.DrawerLayout$LayoutParams: int width>;

        i41 = staticinvoke <android.support.v4.widget.DrawerLayout: int getChildMeasureSpec(int,int,int)>(i0, $i19, $i18);

        $i23 = r2.<android.support.v4.widget.DrawerLayout$LayoutParams: int topMargin>;

        $i24 = r2.<android.support.v4.widget.DrawerLayout$LayoutParams: int bottomMargin>;

        $i25 = $i23 + $i24;

        $i22 = r2.<android.support.v4.widget.DrawerLayout$LayoutParams: int height>;

        i12 = staticinvoke <android.support.v4.widget.DrawerLayout: int getChildMeasureSpec(int,int,int)>(i1, $i25, $i22);

        virtualinvoke r1.<android.view.View: void measure(int,int)>(i41, i12);

        goto label16;

     label15:
        $r6 = new java.lang.IllegalStateException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Child ");

        $r7 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" at index ");

        $r13 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i9);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have a valid layout_gravity - must be Gravity.LEFT, ");

        $r11 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Gravity.RIGHT or Gravity.NO_GRAVITY");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        throw $r6;

     label16:
        i9 = i9 + 1;

        goto label09;

     label17:
        return;
    }

    protected void onLayout(boolean, int, int, int, int)
    {
        android.support.v4.widget.DrawerLayout r0;
        boolean z0, z1, $z2, $z3, $z4;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, i10, i11, i12, $i13, $i14, $i15, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, i52;
        android.view.View r1;
        android.support.v4.widget.DrawerLayout$LayoutParams r2;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;
        android.view.ViewGroup$LayoutParams $r3;
        byte $b16, $b26, $b27, b53;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        z0 := @parameter0: boolean;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        r0.<android.support.v4.widget.DrawerLayout: boolean mInLayout> = 1;

        i4 = i2 - i0;

        i5 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: int getChildCount()>();

        i6 = 0;

     label01:
        if i6 >= i5 goto label18;

        r1 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: android.view.View getChildAt(int)>(i6);

        $i13 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i13 != 8 goto label02;

        goto label17;

     label02:
        $r3 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.support.v4.widget.DrawerLayout$LayoutParams) $r3;

        $z2 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: boolean isContentView(android.view.View)>(r1);

        if $z2 == 0 goto label03;

        $i41 = r2.<android.support.v4.widget.DrawerLayout$LayoutParams: int leftMargin>;

        $i42 = r2.<android.support.v4.widget.DrawerLayout$LayoutParams: int topMargin>;

        $i48 = r2.<android.support.v4.widget.DrawerLayout$LayoutParams: int leftMargin>;

        $i49 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        $i50 = $i48 + $i49;

        $i51 = r2.<android.support.v4.widget.DrawerLayout$LayoutParams: int topMargin>;

        $i46 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        $i47 = $i51 + $i46;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>($i41, $i42, $i50, $i47);

        goto label17;

     label03:
        i7 = virtualinvoke r1.<android.view.View: int getMeasuredWidth()>();

        i8 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        $z3 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: boolean checkDrawerViewAbsoluteGravity(android.view.View,int)>(r1, 3);

        if $z3 == 0 goto label04;

        $i44 = neg i7;

        $f8 = (float) i7;

        $f9 = r2.<android.support.v4.widget.DrawerLayout$LayoutParams: float onScreen>;

        $f12 = $f8 * $f9;

        $i43 = (int) $f12;

        i9 = $i44 + $i43;

        $i45 = i7 + i9;

        $f11 = (float) $i45;

        $f10 = (float) i7;

        f0 = $f11 / $f10;

        goto label05;

     label04:
        $f3 = (float) i7;

        $f1 = r2.<android.support.v4.widget.DrawerLayout$LayoutParams: float onScreen>;

        $f2 = $f3 * $f1;

        $i15 = (int) $f2;

        i9 = i4 - $i15;

        $i14 = i4 - i9;

        $f6 = (float) $i14;

        $f5 = (float) i7;

        f0 = $f6 / $f5;

     label05:
        $f4 = r2.<android.support.v4.widget.DrawerLayout$LayoutParams: float onScreen>;

        $b16 = f0 cmpl $f4;

        if $b16 == 0 goto label06;

        $z4 = 1;

        goto label07;

     label06:
        $z4 = 0;

     label07:
        z1 = $z4;

        $i19 = r2.<android.support.v4.widget.DrawerLayout$LayoutParams: int gravity>;

        i11 = $i19 & 112;

        lookupswitch(i11)
        {
            case 16: goto label10;
            case 48: goto label08;
            case 80: goto label09;
            default: goto label08;
        };

     label08:
        $i40 = r2.<android.support.v4.widget.DrawerLayout$LayoutParams: int topMargin>;

        $i36 = i9 + i7;

        $i38 = r2.<android.support.v4.widget.DrawerLayout$LayoutParams: int topMargin>;

        $i37 = $i38 + i8;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>(i9, $i40, $i36, $i37);

        goto label13;

     label09:
        i10 = i3 - i1;

        $i20 = r2.<android.support.v4.widget.DrawerLayout$LayoutParams: int bottomMargin>;

        $i17 = i10 - $i20;

        $i18 = virtualinvoke r1.<android.view.View: int getMeasuredHeight()>();

        $i22 = $i17 - $i18;

        $i21 = i9 + i7;

        $i23 = r2.<android.support.v4.widget.DrawerLayout$LayoutParams: int bottomMargin>;

        $i24 = i10 - $i23;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>(i9, $i22, $i21, $i24);

        goto label13;

     label10:
        i52 = i3 - i1;

        $i31 = i52 - i8;

        i12 = $i31 / 2;

        $i30 = r2.<android.support.v4.widget.DrawerLayout$LayoutParams: int topMargin>;

        if i12 >= $i30 goto label11;

        i12 = r2.<android.support.v4.widget.DrawerLayout$LayoutParams: int topMargin>;

        goto label12;

     label11:
        $i35 = i12 + i8;

        $i29 = r2.<android.support.v4.widget.DrawerLayout$LayoutParams: int bottomMargin>;

        $i28 = i52 - $i29;

        if $i35 <= $i28 goto label12;

        $i32 = r2.<android.support.v4.widget.DrawerLayout$LayoutParams: int bottomMargin>;

        $i39 = i52 - $i32;

        i12 = $i39 - i8;

     label12:
        $i33 = i9 + i7;

        $i34 = i12 + i8;

        virtualinvoke r1.<android.view.View: void layout(int,int,int,int)>(i9, i12, $i33, $i34);

        goto label13;

     label13:
        if z1 == 0 goto label14;

        virtualinvoke r0.<android.support.v4.widget.DrawerLayout: void setDrawerViewOffset(android.view.View,float)>(r1, f0);

     label14:
        $f7 = r2.<android.support.v4.widget.DrawerLayout$LayoutParams: float onScreen>;

        $b27 = $f7 cmpl 0.0F;

        if $b27 <= 0 goto label15;

        $b26 = 0;

        goto label16;

     label15:
        $b26 = 4;

     label16:
        b53 = $b26;

        $i25 = virtualinvoke r1.<android.view.View: int getVisibility()>();

        if $i25 == b53 goto label17;

        virtualinvoke r1.<android.view.View: void setVisibility(int)>(b53);

     label17:
        i6 = i6 + 1;

        goto label01;

     label18:
        r0.<android.support.v4.widget.DrawerLayout: boolean mInLayout> = 0;

        r0.<android.support.v4.widget.DrawerLayout: boolean mFirstLayout> = 0;

        return;
    }

    public void requestLayout()
    {
        android.support.v4.widget.DrawerLayout r0;
        boolean $z0;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        $z0 = r0.<android.support.v4.widget.DrawerLayout: boolean mInLayout>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<android.view.ViewGroup: void requestLayout()>();

     label1:
        return;
    }

    public void computeScroll()
    {
        android.support.v4.widget.DrawerLayout r0;
        int i0, i1;
        float f0, f1;
        android.support.v4.widget.ViewDragHelper $r1, $r2;
        boolean $z0, $z1, $z2;
        android.view.View $r3;
        android.view.ViewGroup$LayoutParams $r4;
        android.support.v4.widget.DrawerLayout$LayoutParams $r5;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        i0 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: int getChildCount()>();

        f0 = 0.0F;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        $r3 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: android.view.View getChildAt(int)>(i1);

        $r4 = virtualinvoke $r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r5 = (android.support.v4.widget.DrawerLayout$LayoutParams) $r4;

        f1 = $r5.<android.support.v4.widget.DrawerLayout$LayoutParams: float onScreen>;

        f0 = staticinvoke <java.lang.Math: float max(float,float)>(f0, f1);

        i1 = i1 + 1;

        goto label1;

     label2:
        r0.<android.support.v4.widget.DrawerLayout: float mScrimOpacity> = f0;

        $r1 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.ViewDragHelper mLeftDragger>;

        $z0 = virtualinvoke $r1.<android.support.v4.widget.ViewDragHelper: boolean continueSettling(boolean)>(1);

        $r2 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.ViewDragHelper mRightDragger>;

        $z1 = virtualinvoke $r2.<android.support.v4.widget.ViewDragHelper: boolean continueSettling(boolean)>(1);

        $z2 = $z0 | $z1;

        if $z2 == 0 goto label3;

        staticinvoke <android.support.v4.view.ViewCompat: void postInvalidateOnAnimation(android.view.View)>(r0);

     label3:
        return;
    }

    private static boolean hasOpaqueBackground(android.view.View)
    {
        android.view.View r0;
        android.graphics.drawable.Drawable r1;
        int $i0;
        boolean $z0;

        r0 := @parameter0: android.view.View;

        r1 = virtualinvoke r0.<android.view.View: android.graphics.drawable.Drawable getBackground()>();

        if r1 == null goto label3;

        $i0 = virtualinvoke r1.<android.graphics.drawable.Drawable: int getOpacity()>();

        if $i0 != -1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;

     label3:
        return 0;
    }

    public void setStatusBarBackground(android.graphics.drawable.Drawable)
    {
        android.support.v4.widget.DrawerLayout r0;
        android.graphics.drawable.Drawable r1;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        r1 := @parameter0: android.graphics.drawable.Drawable;

        r0.<android.support.v4.widget.DrawerLayout: android.graphics.drawable.Drawable mStatusBarBackground> = r1;

        return;
    }

    public void setStatusBarBackground(int)
    {
        android.support.v4.widget.DrawerLayout r0;
        int i0;
        android.content.Context $r1;
        android.graphics.drawable.Drawable $r2;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        i0 := @parameter0: int;

        if i0 == 0 goto label1;

        $r1 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: android.content.Context getContext()>();

        $r2 = staticinvoke <android.support.v4.content.ContextCompat: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)>($r1, i0);

        goto label2;

     label1:
        $r2 = null;

     label2:
        r0.<android.support.v4.widget.DrawerLayout: android.graphics.drawable.Drawable mStatusBarBackground> = $r2;

        return;
    }

    public void setStatusBarBackgroundColor(int)
    {
        android.support.v4.widget.DrawerLayout r0;
        int i0;
        android.graphics.drawable.ColorDrawable $r1;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        i0 := @parameter0: int;

        $r1 = new android.graphics.drawable.ColorDrawable;

        specialinvoke $r1.<android.graphics.drawable.ColorDrawable: void <init>(int)>(i0);

        r0.<android.support.v4.widget.DrawerLayout: android.graphics.drawable.Drawable mStatusBarBackground> = $r1;

        return;
    }

    public void onDraw(android.graphics.Canvas)
    {
        android.support.v4.widget.DrawerLayout r0;
        android.graphics.Canvas r1;
        int i0, $i1;
        boolean $z0;
        android.graphics.drawable.Drawable $r2, $r5, $r6;
        java.lang.Object $r3;
        android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl $r4;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        r1 := @parameter0: android.graphics.Canvas;

        specialinvoke r0.<android.view.ViewGroup: void onDraw(android.graphics.Canvas)>(r1);

        $z0 = r0.<android.support.v4.widget.DrawerLayout: boolean mDrawStatusBarBackground>;

        if $z0 == 0 goto label1;

        $r2 = r0.<android.support.v4.widget.DrawerLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        if $r2 == null goto label1;

        $r4 = <android.support.v4.widget.DrawerLayout: android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl IMPL>;

        $r3 = r0.<android.support.v4.widget.DrawerLayout: java.lang.Object mLastInsets>;

        i0 = interfaceinvoke $r4.<android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl: int getTopInset(java.lang.Object)>($r3);

        if i0 <= 0 goto label1;

        $r5 = r0.<android.support.v4.widget.DrawerLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        $i1 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: int getWidth()>();

        virtualinvoke $r5.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(0, 0, $i1, i0);

        $r6 = r0.<android.support.v4.widget.DrawerLayout: android.graphics.drawable.Drawable mStatusBarBackground>;

        virtualinvoke $r6.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

     label1:
        return;
    }

    protected boolean drawChild(android.graphics.Canvas, android.view.View, long)
    {
        android.support.v4.widget.DrawerLayout r0;
        android.graphics.Canvas r1;
        android.view.View r2, r3;
        long l0;
        int i1, i2, i3, i4, i5, i6, i7, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, i27, i28, i29, i30, i31, i32, i33, i34, i35, i36, i37;
        boolean z0, $z1, $z2, $z4, $z5, $z6, z7;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18;
        android.graphics.drawable.Drawable $r4, $r5, $r6, $r8, $r9, $r10, $r11, $r13, $r14, $r15;
        byte $b8;
        android.support.v4.widget.ViewDragHelper $r7, $r12;
        android.graphics.Paint $r16, $r17;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        r1 := @parameter0: android.graphics.Canvas;

        r2 := @parameter1: android.view.View;

        l0 := @parameter2: long;

        i1 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: int getHeight()>();

        z0 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: boolean isContentView(android.view.View)>(r2);

        i2 = 0;

        i3 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: int getWidth()>();

        i4 = virtualinvoke r1.<android.graphics.Canvas: int save()>();

        if z0 == 0 goto label07;

        i5 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: int getChildCount()>();

        i6 = 0;

     label01:
        if i6 >= i5 goto label06;

        r3 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: android.view.View getChildAt(int)>(i6);

        if r3 == r2 goto label05;

        $i24 = virtualinvoke r3.<android.view.View: int getVisibility()>();

        if $i24 != 0 goto label05;

        $z4 = staticinvoke <android.support.v4.widget.DrawerLayout: boolean hasOpaqueBackground(android.view.View)>(r3);

        if $z4 == 0 goto label05;

        $z5 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: boolean isDrawerView(android.view.View)>(r3);

        if $z5 == 0 goto label05;

        $i26 = virtualinvoke r3.<android.view.View: int getHeight()>();

        if $i26 >= i1 goto label02;

        goto label05;

     label02:
        $z6 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: boolean checkDrawerViewAbsoluteGravity(android.view.View,int)>(r3, 3);

        if $z6 == 0 goto label04;

        i7 = virtualinvoke r3.<android.view.View: int getRight()>();

        if i7 <= i2 goto label03;

        i2 = i7;

     label03:
        goto label05;

     label04:
        i27 = virtualinvoke r3.<android.view.View: int getLeft()>();

        if i27 >= i3 goto label05;

        i3 = i27;

     label05:
        i6 = i6 + 1;

        goto label01;

     label06:
        $i25 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: int getHeight()>();

        virtualinvoke r1.<android.graphics.Canvas: boolean clipRect(int,int,int,int)>(i2, 0, i3, $i25);

     label07:
        z7 = specialinvoke r0.<android.view.ViewGroup: boolean drawChild(android.graphics.Canvas,android.view.View,long)>(r1, r2, l0);

        virtualinvoke r1.<android.graphics.Canvas: void restoreToCount(int)>(i4);

        $f2 = r0.<android.support.v4.widget.DrawerLayout: float mScrimOpacity>;

        $b8 = $f2 cmpl 0.0F;

        if $b8 <= 0 goto label08;

        if z0 == 0 goto label08;

        $i19 = r0.<android.support.v4.widget.DrawerLayout: int mScrimColor>;

        $i20 = $i19 & -16777216;

        i28 = $i20 >>> 24;

        $f14 = (float) i28;

        $f13 = r0.<android.support.v4.widget.DrawerLayout: float mScrimOpacity>;

        $f15 = $f14 * $f13;

        i29 = (int) $f15;

        $i23 = i29 << 24;

        $i18 = r0.<android.support.v4.widget.DrawerLayout: int mScrimColor>;

        $i22 = $i18 & 16777215;

        i30 = $i23 | $i22;

        $r17 = r0.<android.support.v4.widget.DrawerLayout: android.graphics.Paint mScrimPaint>;

        virtualinvoke $r17.<android.graphics.Paint: void setColor(int)>(i30);

        $f17 = (float) i2;

        $f16 = (float) i3;

        $i21 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: int getHeight()>();

        $f18 = (float) $i21;

        $r16 = r0.<android.support.v4.widget.DrawerLayout: android.graphics.Paint mScrimPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>($f17, 0.0F, $f16, $f18, $r16);

        goto label10;

     label08:
        $r4 = r0.<android.support.v4.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowLeft>;

        if $r4 == null goto label09;

        $z2 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: boolean checkDrawerViewAbsoluteGravity(android.view.View,int)>(r2, 3);

        if $z2 == 0 goto label09;

        $r9 = r0.<android.support.v4.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowLeft>;

        i31 = virtualinvoke $r9.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        i32 = virtualinvoke r2.<android.view.View: int getRight()>();

        $r12 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.ViewDragHelper mLeftDragger>;

        i33 = virtualinvoke $r12.<android.support.v4.widget.ViewDragHelper: int getEdgeSize()>();

        $f9 = (float) i32;

        $f10 = (float) i33;

        $f8 = $f9 / $f10;

        $f11 = staticinvoke <java.lang.Math: float min(float,float)>($f8, 1.0F);

        f0 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f11);

        $r13 = r0.<android.support.v4.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowLeft>;

        $i14 = virtualinvoke r2.<android.view.View: int getTop()>();

        $i17 = i32 + i31;

        $i16 = virtualinvoke r2.<android.view.View: int getBottom()>();

        virtualinvoke $r13.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>(i32, $i14, $i17, $i16);

        $r14 = r0.<android.support.v4.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowLeft>;

        $f12 = 255.0F * f0;

        $i15 = (int) $f12;

        virtualinvoke $r14.<android.graphics.drawable.Drawable: void setAlpha(int)>($i15);

        $r15 = r0.<android.support.v4.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowLeft>;

        virtualinvoke $r15.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

        goto label10;

     label09:
        $r5 = r0.<android.support.v4.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowRight>;

        if $r5 == null goto label10;

        $z1 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: boolean checkDrawerViewAbsoluteGravity(android.view.View,int)>(r2, 5);

        if $z1 == 0 goto label10;

        $r6 = r0.<android.support.v4.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowRight>;

        i34 = virtualinvoke $r6.<android.graphics.drawable.Drawable: int getIntrinsicWidth()>();

        i35 = virtualinvoke r2.<android.view.View: int getLeft()>();

        $i9 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: int getWidth()>();

        i36 = $i9 - i35;

        $r7 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.ViewDragHelper mRightDragger>;

        i37 = virtualinvoke $r7.<android.support.v4.widget.ViewDragHelper: int getEdgeSize()>();

        $f5 = (float) i36;

        $f4 = (float) i37;

        $f3 = $f5 / $f4;

        $f6 = staticinvoke <java.lang.Math: float min(float,float)>($f3, 1.0F);

        f1 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f6);

        $r8 = r0.<android.support.v4.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowRight>;

        $i10 = i35 - i34;

        $i12 = virtualinvoke r2.<android.view.View: int getTop()>();

        $i13 = virtualinvoke r2.<android.view.View: int getBottom()>();

        virtualinvoke $r8.<android.graphics.drawable.Drawable: void setBounds(int,int,int,int)>($i10, $i12, i35, $i13);

        $r10 = r0.<android.support.v4.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowRight>;

        $f7 = 255.0F * f1;

        $i11 = (int) $f7;

        virtualinvoke $r10.<android.graphics.drawable.Drawable: void setAlpha(int)>($i11);

        $r11 = r0.<android.support.v4.widget.DrawerLayout: android.graphics.drawable.Drawable mShadowRight>;

        virtualinvoke $r11.<android.graphics.drawable.Drawable: void draw(android.graphics.Canvas)>(r1);

     label10:
        return z7;
    }

    boolean isContentView(android.view.View)
    {
        android.support.v4.widget.DrawerLayout r0;
        android.view.View r1;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.v4.widget.DrawerLayout$LayoutParams $r3;
        int $i0;
        boolean $z0;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.support.v4.widget.DrawerLayout$LayoutParams) $r2;

        $i0 = $r3.<android.support.v4.widget.DrawerLayout$LayoutParams: int gravity>;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    boolean isDrawerView(android.view.View)
    {
        android.support.v4.widget.DrawerLayout r0;
        android.view.View r1;
        int i0, i1, $i2, $i3;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.v4.widget.DrawerLayout$LayoutParams $r3;
        boolean $z0;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        r1 := @parameter0: android.view.View;

        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.support.v4.widget.DrawerLayout$LayoutParams) $r2;

        i0 = $r3.<android.support.v4.widget.DrawerLayout$LayoutParams: int gravity>;

        $i2 = staticinvoke <android.support.v4.view.ViewCompat: int getLayoutDirection(android.view.View)>(r1);

        i1 = staticinvoke <android.support.v4.view.GravityCompat: int getAbsoluteGravity(int,int)>(i0, $i2);

        $i3 = i1 & 7;

        if $i3 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean onInterceptTouchEvent(android.view.MotionEvent)
    {
        android.support.v4.widget.DrawerLayout r0;
        android.view.MotionEvent r1;
        int i0, $i2, $i3;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        float f0, f1, $f2;
        android.support.v4.widget.ViewDragHelper $r2, $r3, $r4, $r6;
        byte $b1;
        android.view.View $r5;
        android.support.v4.widget.DrawerLayout$ViewDragCallback $r7, $r8;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        r1 := @parameter0: android.view.MotionEvent;

        i0 = staticinvoke <android.support.v4.view.MotionEventCompat: int getActionMasked(android.view.MotionEvent)>(r1);

        $r2 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.ViewDragHelper mLeftDragger>;

        $z2 = virtualinvoke $r2.<android.support.v4.widget.ViewDragHelper: boolean shouldInterceptTouchEvent(android.view.MotionEvent)>(r1);

        $r3 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.ViewDragHelper mRightDragger>;

        $z3 = virtualinvoke $r3.<android.support.v4.widget.ViewDragHelper: boolean shouldInterceptTouchEvent(android.view.MotionEvent)>(r1);

        z0 = $z2 | $z3;

        z1 = 0;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label4;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label5;
        };

     label1:
        f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        r0.<android.support.v4.widget.DrawerLayout: float mInitialMotionX> = f0;

        r0.<android.support.v4.widget.DrawerLayout: float mInitialMotionY> = f1;

        $f2 = r0.<android.support.v4.widget.DrawerLayout: float mScrimOpacity>;

        $b1 = $f2 cmpl 0.0F;

        if $b1 <= 0 goto label2;

        $r4 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.ViewDragHelper mLeftDragger>;

        $i3 = (int) f0;

        $i2 = (int) f1;

        $r5 = virtualinvoke $r4.<android.support.v4.widget.ViewDragHelper: android.view.View findTopChildUnder(int,int)>($i3, $i2);

        $z7 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: boolean isContentView(android.view.View)>($r5);

        if $z7 == 0 goto label2;

        z1 = 1;

     label2:
        r0.<android.support.v4.widget.DrawerLayout: boolean mDisallowInterceptRequested> = 0;

        r0.<android.support.v4.widget.DrawerLayout: boolean mChildrenCanceledTouch> = 0;

        goto label5;

     label3:
        $r6 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.ViewDragHelper mLeftDragger>;

        $z8 = virtualinvoke $r6.<android.support.v4.widget.ViewDragHelper: boolean checkTouchSlop(int)>(3);

        if $z8 == 0 goto label5;

        $r8 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback>;

        virtualinvoke $r8.<android.support.v4.widget.DrawerLayout$ViewDragCallback: void removeCallbacks()>();

        $r7 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback>;

        virtualinvoke $r7.<android.support.v4.widget.DrawerLayout$ViewDragCallback: void removeCallbacks()>();

        goto label5;

     label4:
        virtualinvoke r0.<android.support.v4.widget.DrawerLayout: void closeDrawers(boolean)>(1);

        r0.<android.support.v4.widget.DrawerLayout: boolean mDisallowInterceptRequested> = 0;

        r0.<android.support.v4.widget.DrawerLayout: boolean mChildrenCanceledTouch> = 0;

     label5:
        if z0 != 0 goto label6;

        if z1 != 0 goto label6;

        $z5 = specialinvoke r0.<android.support.v4.widget.DrawerLayout: boolean hasPeekingDrawer()>();

        if $z5 != 0 goto label6;

        $z4 = r0.<android.support.v4.widget.DrawerLayout: boolean mChildrenCanceledTouch>;

        if $z4 == 0 goto label7;

     label6:
        $z6 = 1;

        goto label8;

     label7:
        $z6 = 0;

     label8:
        return $z6;
    }

    public boolean onTouchEvent(android.view.MotionEvent)
    {
        android.support.v4.widget.DrawerLayout r0;
        android.view.MotionEvent r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i7;
        boolean z0, z1, $z2, $z3;
        float f0, f1, f2, f3, $f4, $f5, $f6, $f7, $f8, $f9, f10, f11;
        android.view.View r2, r3;
        android.support.v4.widget.ViewDragHelper $r4, $r5, $r6, $r7;
        byte $b6;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        r1 := @parameter0: android.view.MotionEvent;

        $r4 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.ViewDragHelper mLeftDragger>;

        virtualinvoke $r4.<android.support.v4.widget.ViewDragHelper: void processTouchEvent(android.view.MotionEvent)>(r1);

        $r5 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.ViewDragHelper mRightDragger>;

        virtualinvoke $r5.<android.support.v4.widget.ViewDragHelper: void processTouchEvent(android.view.MotionEvent)>(r1);

        i0 = virtualinvoke r1.<android.view.MotionEvent: int getAction()>();

        z0 = 1;

        $i2 = i0 & 255;

        tableswitch($i2)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label7;
            case 3: goto label6;
            default: goto label7;
        };

     label1:
        f0 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        f1 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        r0.<android.support.v4.widget.DrawerLayout: float mInitialMotionX> = f0;

        r0.<android.support.v4.widget.DrawerLayout: float mInitialMotionY> = f1;

        r0.<android.support.v4.widget.DrawerLayout: boolean mDisallowInterceptRequested> = 0;

        r0.<android.support.v4.widget.DrawerLayout: boolean mChildrenCanceledTouch> = 0;

        goto label7;

     label2:
        f10 = virtualinvoke r1.<android.view.MotionEvent: float getX()>();

        f11 = virtualinvoke r1.<android.view.MotionEvent: float getY()>();

        z1 = 1;

        $r6 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.ViewDragHelper mLeftDragger>;

        $i3 = (int) f10;

        $i4 = (int) f11;

        r2 = virtualinvoke $r6.<android.support.v4.widget.ViewDragHelper: android.view.View findTopChildUnder(int,int)>($i3, $i4);

        if r2 == null goto label5;

        $z2 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: boolean isContentView(android.view.View)>(r2);

        if $z2 == 0 goto label5;

        $f4 = r0.<android.support.v4.widget.DrawerLayout: float mInitialMotionX>;

        f2 = f10 - $f4;

        $f5 = r0.<android.support.v4.widget.DrawerLayout: float mInitialMotionY>;

        f3 = f11 - $f5;

        $r7 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.ViewDragHelper mLeftDragger>;

        i1 = virtualinvoke $r7.<android.support.v4.widget.ViewDragHelper: int getTouchSlop()>();

        $f7 = f2 * f2;

        $f6 = f3 * f3;

        $f9 = $f7 + $f6;

        $i5 = i1 * i1;

        $f8 = (float) $i5;

        $b6 = $f9 cmpg $f8;

        if $b6 >= 0 goto label5;

        r3 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: android.view.View findOpenDrawer()>();

        if r3 == null goto label5;

        $i7 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: int getDrawerLockMode(android.view.View)>(r3);

        if $i7 != 2 goto label3;

        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        z1 = $z3;

     label5:
        virtualinvoke r0.<android.support.v4.widget.DrawerLayout: void closeDrawers(boolean)>(z1);

        r0.<android.support.v4.widget.DrawerLayout: boolean mDisallowInterceptRequested> = 0;

        goto label7;

     label6:
        virtualinvoke r0.<android.support.v4.widget.DrawerLayout: void closeDrawers(boolean)>(1);

        r0.<android.support.v4.widget.DrawerLayout: boolean mDisallowInterceptRequested> = 0;

        r0.<android.support.v4.widget.DrawerLayout: boolean mChildrenCanceledTouch> = 0;

     label7:
        return z0;
    }

    public void requestDisallowInterceptTouchEvent(boolean)
    {
        android.support.v4.widget.DrawerLayout r0;
        boolean z0;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        z0 := @parameter0: boolean;

        specialinvoke r0.<android.view.ViewGroup: void requestDisallowInterceptTouchEvent(boolean)>(z0);

        r0.<android.support.v4.widget.DrawerLayout: boolean mDisallowInterceptRequested> = z0;

        if z0 == 0 goto label1;

        virtualinvoke r0.<android.support.v4.widget.DrawerLayout: void closeDrawers(boolean)>(1);

     label1:
        return;
    }

    public void closeDrawers()
    {
        android.support.v4.widget.DrawerLayout r0;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        virtualinvoke r0.<android.support.v4.widget.DrawerLayout: void closeDrawers(boolean)>(0);

        return;
    }

    void closeDrawers(boolean)
    {
        android.support.v4.widget.DrawerLayout r0;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6;
        int i0, i1, i2, $i3, $i4, $i5, $i6;
        android.view.View r1;
        android.support.v4.widget.DrawerLayout$LayoutParams r2;
        android.support.v4.widget.DrawerLayout$ViewDragCallback $r3, $r4;
        android.view.ViewGroup$LayoutParams $r5;
        android.support.v4.widget.ViewDragHelper $r6, $r7;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        z0 := @parameter0: boolean;

        z1 = 0;

        i0 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: int getChildCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label6;

        r1 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: android.view.View getChildAt(int)>(i1);

        $r5 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.support.v4.widget.DrawerLayout$LayoutParams) $r5;

        $z2 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: boolean isDrawerView(android.view.View)>(r1);

        if $z2 == 0 goto label5;

        if z0 == 0 goto label2;

        $z6 = r2.<android.support.v4.widget.DrawerLayout$LayoutParams: boolean isPeeking>;

        if $z6 != 0 goto label2;

        goto label5;

     label2:
        i2 = virtualinvoke r1.<android.view.View: int getWidth()>();

        $z3 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: boolean checkDrawerViewAbsoluteGravity(android.view.View,int)>(r1, 3);

        if $z3 == 0 goto label3;

        $r7 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.ViewDragHelper mLeftDragger>;

        $i5 = neg i2;

        $i6 = virtualinvoke r1.<android.view.View: int getTop()>();

        $z5 = virtualinvoke $r7.<android.support.v4.widget.ViewDragHelper: boolean smoothSlideViewTo(android.view.View,int,int)>(r1, $i5, $i6);

        z1 = z1 | $z5;

        goto label4;

     label3:
        $r6 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.ViewDragHelper mRightDragger>;

        $i3 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: int getWidth()>();

        $i4 = virtualinvoke r1.<android.view.View: int getTop()>();

        $z4 = virtualinvoke $r6.<android.support.v4.widget.ViewDragHelper: boolean smoothSlideViewTo(android.view.View,int,int)>(r1, $i3, $i4);

        z1 = z1 | $z4;

     label4:
        r2.<android.support.v4.widget.DrawerLayout$LayoutParams: boolean isPeeking> = 0;

     label5:
        i1 = i1 + 1;

        goto label1;

     label6:
        $r3 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.DrawerLayout$ViewDragCallback mLeftCallback>;

        virtualinvoke $r3.<android.support.v4.widget.DrawerLayout$ViewDragCallback: void removeCallbacks()>();

        $r4 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.DrawerLayout$ViewDragCallback mRightCallback>;

        virtualinvoke $r4.<android.support.v4.widget.DrawerLayout$ViewDragCallback: void removeCallbacks()>();

        if z1 == 0 goto label7;

        virtualinvoke r0.<android.support.v4.widget.DrawerLayout: void invalidate()>();

     label7:
        return;
    }

    public void openDrawer(android.view.View)
    {
        android.support.v4.widget.DrawerLayout r0;
        android.view.View r1, r3;
        android.support.v4.widget.DrawerLayout$LayoutParams r2;
        boolean $z0, $z1, $z2;
        android.support.v4.widget.ViewDragHelper $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4;
        android.view.ViewGroup$LayoutParams $r6;
        java.lang.IllegalArgumentException $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r11;
        java.lang.String $r12;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        r1 := @parameter0: android.view.View;

        $z0 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: boolean isDrawerView(android.view.View)>(r1);

        if $z0 != 0 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("View ");

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a sliding drawer");

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r7;

     label1:
        $z1 = r0.<android.support.v4.widget.DrawerLayout: boolean mFirstLayout>;

        if $z1 == 0 goto label3;

        $r6 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.support.v4.widget.DrawerLayout$LayoutParams) $r6;

        r2.<android.support.v4.widget.DrawerLayout$LayoutParams: float onScreen> = 1.0F;

        r2.<android.support.v4.widget.DrawerLayout$LayoutParams: boolean knownOpen> = 1;

        r3 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: android.view.View getChildAt(int)>(0);

        if r3 == null goto label2;

        staticinvoke <android.support.v4.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>(r3, 4);

     label2:
        staticinvoke <android.support.v4.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>(r1, 1);

        goto label5;

     label3:
        $z2 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: boolean checkDrawerViewAbsoluteGravity(android.view.View,int)>(r1, 3);

        if $z2 == 0 goto label4;

        $r5 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.ViewDragHelper mLeftDragger>;

        $i4 = virtualinvoke r1.<android.view.View: int getTop()>();

        virtualinvoke $r5.<android.support.v4.widget.ViewDragHelper: boolean smoothSlideViewTo(android.view.View,int,int)>(r1, 0, $i4);

        goto label5;

     label4:
        $r4 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.ViewDragHelper mRightDragger>;

        $i0 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: int getWidth()>();

        $i1 = virtualinvoke r1.<android.view.View: int getWidth()>();

        $i2 = $i0 - $i1;

        $i3 = virtualinvoke r1.<android.view.View: int getTop()>();

        virtualinvoke $r4.<android.support.v4.widget.ViewDragHelper: boolean smoothSlideViewTo(android.view.View,int,int)>(r1, $i2, $i3);

     label5:
        virtualinvoke r0.<android.support.v4.widget.DrawerLayout: void invalidate()>();

        return;
    }

    public void openDrawer(int)
    {
        android.support.v4.widget.DrawerLayout r0;
        int i0;
        android.view.View r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5, $r7;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: android.view.View findDrawerWithGravity(int)>(i0);

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No drawer view found with gravity ");

        $r5 = staticinvoke <android.support.v4.widget.DrawerLayout: java.lang.String gravityToString(int)>(i0);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label1:
        virtualinvoke r0.<android.support.v4.widget.DrawerLayout: void openDrawer(android.view.View)>(r1);

        return;
    }

    public void closeDrawer(android.view.View)
    {
        android.support.v4.widget.DrawerLayout r0;
        android.view.View r1;
        android.support.v4.widget.DrawerLayout$LayoutParams r2;
        boolean $z0, $z1, $z2;
        android.support.v4.widget.ViewDragHelper $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4;
        android.view.ViewGroup$LayoutParams $r5;
        java.lang.StringBuilder $r6, $r8, $r9, $r11;
        java.lang.IllegalArgumentException $r7;
        java.lang.String $r10;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        r1 := @parameter0: android.view.View;

        $z0 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: boolean isDrawerView(android.view.View)>(r1);

        if $z0 != 0 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("View ");

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a sliding drawer");

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r7;

     label1:
        $z1 = r0.<android.support.v4.widget.DrawerLayout: boolean mFirstLayout>;

        if $z1 == 0 goto label2;

        $r5 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r2 = (android.support.v4.widget.DrawerLayout$LayoutParams) $r5;

        r2.<android.support.v4.widget.DrawerLayout$LayoutParams: float onScreen> = 0.0F;

        r2.<android.support.v4.widget.DrawerLayout$LayoutParams: boolean knownOpen> = 0;

        goto label4;

     label2:
        $z2 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: boolean checkDrawerViewAbsoluteGravity(android.view.View,int)>(r1, 3);

        if $z2 == 0 goto label3;

        $r4 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.ViewDragHelper mLeftDragger>;

        $i2 = virtualinvoke r1.<android.view.View: int getWidth()>();

        $i3 = neg $i2;

        $i4 = virtualinvoke r1.<android.view.View: int getTop()>();

        virtualinvoke $r4.<android.support.v4.widget.ViewDragHelper: boolean smoothSlideViewTo(android.view.View,int,int)>(r1, $i3, $i4);

        goto label4;

     label3:
        $r3 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.ViewDragHelper mRightDragger>;

        $i0 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: int getWidth()>();

        $i1 = virtualinvoke r1.<android.view.View: int getTop()>();

        virtualinvoke $r3.<android.support.v4.widget.ViewDragHelper: boolean smoothSlideViewTo(android.view.View,int,int)>(r1, $i0, $i1);

     label4:
        virtualinvoke r0.<android.support.v4.widget.DrawerLayout: void invalidate()>();

        return;
    }

    public void closeDrawer(int)
    {
        android.support.v4.widget.DrawerLayout r0;
        int i0;
        android.view.View r1;
        java.lang.IllegalArgumentException $r2;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5, $r7;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: android.view.View findDrawerWithGravity(int)>(i0);

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No drawer view found with gravity ");

        $r5 = staticinvoke <android.support.v4.widget.DrawerLayout: java.lang.String gravityToString(int)>(i0);

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label1:
        virtualinvoke r0.<android.support.v4.widget.DrawerLayout: void closeDrawer(android.view.View)>(r1);

        return;
    }

    public boolean isDrawerOpen(android.view.View)
    {
        android.support.v4.widget.DrawerLayout r0;
        android.view.View r1;
        boolean $z0, $z1;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.v4.widget.DrawerLayout$LayoutParams $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        r1 := @parameter0: android.view.View;

        $z0 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: boolean isDrawerView(android.view.View)>(r1);

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("View ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a drawer");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label1:
        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.support.v4.widget.DrawerLayout$LayoutParams) $r2;

        $z1 = $r3.<android.support.v4.widget.DrawerLayout$LayoutParams: boolean knownOpen>;

        return $z1;
    }

    public boolean isDrawerOpen(int)
    {
        android.support.v4.widget.DrawerLayout r0;
        int i0;
        android.view.View r1;
        boolean $z0;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: android.view.View findDrawerWithGravity(int)>(i0);

        if r1 == null goto label1;

        $z0 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: boolean isDrawerOpen(android.view.View)>(r1);

        return $z0;

     label1:
        return 0;
    }

    public boolean isDrawerVisible(android.view.View)
    {
        android.support.v4.widget.DrawerLayout r0;
        android.view.View r1;
        boolean $z0, $z1;
        android.view.ViewGroup$LayoutParams $r2;
        android.support.v4.widget.DrawerLayout$LayoutParams $r3;
        float $f0;
        byte $b0;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        r1 := @parameter0: android.view.View;

        $z0 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: boolean isDrawerView(android.view.View)>(r1);

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("View ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a drawer");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label1:
        $r2 = virtualinvoke r1.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        $r3 = (android.support.v4.widget.DrawerLayout$LayoutParams) $r2;

        $f0 = $r3.<android.support.v4.widget.DrawerLayout$LayoutParams: float onScreen>;

        $b0 = $f0 cmpl 0.0F;

        if $b0 <= 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public boolean isDrawerVisible(int)
    {
        android.support.v4.widget.DrawerLayout r0;
        int i0;
        android.view.View r1;
        boolean $z0;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        i0 := @parameter0: int;

        r1 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: android.view.View findDrawerWithGravity(int)>(i0);

        if r1 == null goto label1;

        $z0 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: boolean isDrawerVisible(android.view.View)>(r1);

        return $z0;

     label1:
        return 0;
    }

    private boolean hasPeekingDrawer()
    {
        android.support.v4.widget.DrawerLayout r0;
        int i0, i1;
        android.support.v4.widget.DrawerLayout$LayoutParams r1;
        android.view.View $r2;
        android.view.ViewGroup$LayoutParams $r3;
        boolean $z0;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        i0 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: int getChildCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        $r2 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: android.view.View getChildAt(int)>(i1);

        $r3 = virtualinvoke $r2.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r1 = (android.support.v4.widget.DrawerLayout$LayoutParams) $r3;

        $z0 = r1.<android.support.v4.widget.DrawerLayout$LayoutParams: boolean isPeeking>;

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    protected android.view.ViewGroup$LayoutParams generateDefaultLayoutParams()
    {
        android.support.v4.widget.DrawerLayout r0;
        android.support.v4.widget.DrawerLayout$LayoutParams $r1;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        $r1 = new android.support.v4.widget.DrawerLayout$LayoutParams;

        specialinvoke $r1.<android.support.v4.widget.DrawerLayout$LayoutParams: void <init>(int,int)>(-1, -1);

        return $r1;
    }

    protected android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.support.v4.widget.DrawerLayout r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0, $z1;
        android.support.v4.widget.DrawerLayout$LayoutParams $r2, $r4, $r5;
        android.view.ViewGroup$MarginLayoutParams $r3;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof android.support.v4.widget.DrawerLayout$LayoutParams;

        if $z0 == 0 goto label1;

        $r4 = new android.support.v4.widget.DrawerLayout$LayoutParams;

        $r2 = $r4;

        $r5 = (android.support.v4.widget.DrawerLayout$LayoutParams) r1;

        specialinvoke $r4.<android.support.v4.widget.DrawerLayout$LayoutParams: void <init>(android.support.v4.widget.DrawerLayout$LayoutParams)>($r5);

        goto label3;

     label1:
        $z1 = r1 instanceof android.view.ViewGroup$MarginLayoutParams;

        if $z1 == 0 goto label2;

        $r2 = new android.support.v4.widget.DrawerLayout$LayoutParams;

        $r3 = (android.view.ViewGroup$MarginLayoutParams) r1;

        specialinvoke $r2.<android.support.v4.widget.DrawerLayout$LayoutParams: void <init>(android.view.ViewGroup$MarginLayoutParams)>($r3);

        goto label3;

     label2:
        $r2 = new android.support.v4.widget.DrawerLayout$LayoutParams;

        specialinvoke $r2.<android.support.v4.widget.DrawerLayout$LayoutParams: void <init>(android.view.ViewGroup$LayoutParams)>(r1);

     label3:
        return $r2;
    }

    protected boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)
    {
        android.support.v4.widget.DrawerLayout r0;
        android.view.ViewGroup$LayoutParams r1;
        boolean $z0, $z1, $z2;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        r1 := @parameter0: android.view.ViewGroup$LayoutParams;

        $z0 = r1 instanceof android.support.v4.widget.DrawerLayout$LayoutParams;

        if $z0 == 0 goto label1;

        $z1 = specialinvoke r0.<android.view.ViewGroup: boolean checkLayoutParams(android.view.ViewGroup$LayoutParams)>(r1);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet)
    {
        android.support.v4.widget.DrawerLayout r0;
        android.util.AttributeSet r1;
        android.support.v4.widget.DrawerLayout$LayoutParams $r2;
        android.content.Context $r3;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        r1 := @parameter0: android.util.AttributeSet;

        $r2 = new android.support.v4.widget.DrawerLayout$LayoutParams;

        $r3 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: android.content.Context getContext()>();

        specialinvoke $r2.<android.support.v4.widget.DrawerLayout$LayoutParams: void <init>(android.content.Context,android.util.AttributeSet)>($r3, r1);

        return $r2;
    }

    private boolean hasVisibleDrawer()
    {
        android.support.v4.widget.DrawerLayout r0;
        android.view.View $r1;
        boolean $z0;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        $r1 = specialinvoke r0.<android.support.v4.widget.DrawerLayout: android.view.View findVisibleDrawer()>();

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private android.view.View findVisibleDrawer()
    {
        android.support.v4.widget.DrawerLayout r0;
        int i0, i1;
        android.view.View r1;
        boolean $z0, $z1;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        i0 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: int getChildCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r1 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: android.view.View getChildAt(int)>(i1);

        $z0 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: boolean isDrawerView(android.view.View)>(r1);

        if $z0 == 0 goto label2;

        $z1 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: boolean isDrawerVisible(android.view.View)>(r1);

        if $z1 == 0 goto label2;

        return r1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return null;
    }

    void cancelChildViewTouch()
    {
        android.support.v4.widget.DrawerLayout r0;
        long l0;
        android.view.MotionEvent r1;
        int i1, i2;
        boolean $z0;
        android.view.View $r2;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        $z0 = r0.<android.support.v4.widget.DrawerLayout: boolean mChildrenCanceledTouch>;

        if $z0 != 0 goto label3;

        l0 = staticinvoke <android.os.SystemClock: long uptimeMillis()>();

        r1 = staticinvoke <android.view.MotionEvent: android.view.MotionEvent obtain(long,long,int,float,float,int)>(l0, l0, 3, 0.0F, 0.0F, 0);

        i1 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: int getChildCount()>();

        i2 = 0;

     label1:
        if i2 >= i1 goto label2;

        $r2 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: android.view.View getChildAt(int)>(i2);

        virtualinvoke $r2.<android.view.View: boolean dispatchTouchEvent(android.view.MotionEvent)>(r1);

        i2 = i2 + 1;

        goto label1;

     label2:
        virtualinvoke r1.<android.view.MotionEvent: void recycle()>();

        r0.<android.support.v4.widget.DrawerLayout: boolean mChildrenCanceledTouch> = 1;

     label3:
        return;
    }

    public boolean onKeyDown(int, android.view.KeyEvent)
    {
        android.support.v4.widget.DrawerLayout r0;
        int i0;
        android.view.KeyEvent r1;
        boolean $z0, $z1;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        if i0 != 4 goto label1;

        $z1 = specialinvoke r0.<android.support.v4.widget.DrawerLayout: boolean hasVisibleDrawer()>();

        if $z1 == 0 goto label1;

        staticinvoke <android.support.v4.view.KeyEventCompat: void startTracking(android.view.KeyEvent)>(r1);

        return 1;

     label1:
        $z0 = specialinvoke r0.<android.view.ViewGroup: boolean onKeyDown(int,android.view.KeyEvent)>(i0, r1);

        return $z0;
    }

    public boolean onKeyUp(int, android.view.KeyEvent)
    {
        android.support.v4.widget.DrawerLayout r0;
        int i0, $i1;
        android.view.KeyEvent r1;
        android.view.View r2;
        boolean $z0, $z1;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.KeyEvent;

        if i0 != 4 goto label4;

        r2 = specialinvoke r0.<android.support.v4.widget.DrawerLayout: android.view.View findVisibleDrawer()>();

        if r2 == null goto label1;

        $i1 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: int getDrawerLockMode(android.view.View)>(r2);

        if $i1 != 0 goto label1;

        virtualinvoke r0.<android.support.v4.widget.DrawerLayout: void closeDrawers()>();

     label1:
        if r2 == null goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;

     label4:
        $z0 = specialinvoke r0.<android.view.ViewGroup: boolean onKeyUp(int,android.view.KeyEvent)>(i0, r1);

        return $z0;
    }

    protected void onRestoreInstanceState(android.os.Parcelable)
    {
        android.support.v4.widget.DrawerLayout r0;
        android.os.Parcelable r1, $r4;
        android.support.v4.widget.DrawerLayout$SavedState r2;
        android.view.View r3;
        int $i0, $i1, $i2, $i3;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        r1 := @parameter0: android.os.Parcelable;

        r2 = (android.support.v4.widget.DrawerLayout$SavedState) r1;

        $r4 = virtualinvoke r2.<android.support.v4.widget.DrawerLayout$SavedState: android.os.Parcelable getSuperState()>();

        specialinvoke r0.<android.view.ViewGroup: void onRestoreInstanceState(android.os.Parcelable)>($r4);

        $i0 = r2.<android.support.v4.widget.DrawerLayout$SavedState: int openDrawerGravity>;

        if $i0 == 0 goto label1;

        $i3 = r2.<android.support.v4.widget.DrawerLayout$SavedState: int openDrawerGravity>;

        r3 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: android.view.View findDrawerWithGravity(int)>($i3);

        if r3 == null goto label1;

        virtualinvoke r0.<android.support.v4.widget.DrawerLayout: void openDrawer(android.view.View)>(r3);

     label1:
        $i1 = r2.<android.support.v4.widget.DrawerLayout$SavedState: int lockModeLeft>;

        virtualinvoke r0.<android.support.v4.widget.DrawerLayout: void setDrawerLockMode(int,int)>($i1, 3);

        $i2 = r2.<android.support.v4.widget.DrawerLayout$SavedState: int lockModeRight>;

        virtualinvoke r0.<android.support.v4.widget.DrawerLayout: void setDrawerLockMode(int,int)>($i2, 5);

        return;
    }

    protected android.os.Parcelable onSaveInstanceState()
    {
        android.support.v4.widget.DrawerLayout r0;
        android.os.Parcelable r1;
        android.support.v4.widget.DrawerLayout$SavedState r2, $r5;
        int i0, i1, $i2, $i3, $i4;
        android.view.View r3;
        android.support.v4.widget.DrawerLayout$LayoutParams r4;
        boolean $z0, $z1;
        android.view.ViewGroup$LayoutParams $r6;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        r1 = specialinvoke r0.<android.view.ViewGroup: android.os.Parcelable onSaveInstanceState()>();

        $r5 = new android.support.v4.widget.DrawerLayout$SavedState;

        specialinvoke $r5.<android.support.v4.widget.DrawerLayout$SavedState: void <init>(android.os.Parcelable)>(r1);

        r2 = $r5;

        i0 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: int getChildCount()>();

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        r3 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: android.view.View getChildAt(int)>(i1);

        $z0 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: boolean isDrawerView(android.view.View)>(r3);

        if $z0 != 0 goto label2;

        goto label3;

     label2:
        $r6 = virtualinvoke r3.<android.view.View: android.view.ViewGroup$LayoutParams getLayoutParams()>();

        r4 = (android.support.v4.widget.DrawerLayout$LayoutParams) $r6;

        $z1 = r4.<android.support.v4.widget.DrawerLayout$LayoutParams: boolean knownOpen>;

        if $z1 == 0 goto label3;

        $i4 = r4.<android.support.v4.widget.DrawerLayout$LayoutParams: int gravity>;

        r2.<android.support.v4.widget.DrawerLayout$SavedState: int openDrawerGravity> = $i4;

        goto label4;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        $i2 = r0.<android.support.v4.widget.DrawerLayout: int mLockModeLeft>;

        r2.<android.support.v4.widget.DrawerLayout$SavedState: int lockModeLeft> = $i2;

        $i3 = r0.<android.support.v4.widget.DrawerLayout: int mLockModeRight>;

        r2.<android.support.v4.widget.DrawerLayout$SavedState: int lockModeRight> = $i3;

        return r2;
    }

    public void addView(android.view.View, int, android.view.ViewGroup$LayoutParams)
    {
        android.support.v4.widget.DrawerLayout r0;
        android.view.View r1;
        int i0, $i1;
        android.view.ViewGroup$LayoutParams r2;
        android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate $r3;

        r0 := @this: android.support.v4.widget.DrawerLayout;

        r1 := @parameter0: android.view.View;

        i0 := @parameter1: int;

        r2 := @parameter2: android.view.ViewGroup$LayoutParams;

        if i0 > 0 goto label1;

        if i0 >= 0 goto label2;

        $i1 = virtualinvoke r0.<android.support.v4.widget.DrawerLayout: int getChildCount()>();

        if $i1 <= 0 goto label2;

     label1:
        staticinvoke <android.support.v4.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>(r1, 4);

        $r3 = r0.<android.support.v4.widget.DrawerLayout: android.support.v4.widget.DrawerLayout$ChildAccessibilityDelegate mChildAccessibilityDelegate>;

        staticinvoke <android.support.v4.view.ViewCompat: void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat)>(r1, $r3);

        goto label3;

     label2:
        staticinvoke <android.support.v4.view.ViewCompat: void setImportantForAccessibility(android.view.View,int)>(r1, 1);

     label3:
        specialinvoke r0.<android.view.ViewGroup: void addView(android.view.View,int,android.view.ViewGroup$LayoutParams)>(r1, i0, r2);

        return;
    }

    private static boolean includeChildForAccessibility(android.view.View)
    {
        android.view.View r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @parameter0: android.view.View;

        $i0 = staticinvoke <android.support.v4.view.ViewCompat: int getImportantForAccessibility(android.view.View)>(r0);

        if $i0 == 4 goto label1;

        $i1 = staticinvoke <android.support.v4.view.ViewCompat: int getImportantForAccessibility(android.view.View)>(r0);

        if $i1 == 2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    static int[] access$100()
    {
        int[] $r0;

        $r0 = <android.support.v4.widget.DrawerLayout: int[] LAYOUT_ATTRS>;

        return $r0;
    }

    static android.view.View access$200(android.support.v4.widget.DrawerLayout)
    {
        android.support.v4.widget.DrawerLayout r0;
        android.view.View $r1;

        r0 := @parameter0: android.support.v4.widget.DrawerLayout;

        $r1 = specialinvoke r0.<android.support.v4.widget.DrawerLayout: android.view.View findVisibleDrawer()>();

        return $r1;
    }

    static boolean access$300(android.view.View)
    {
        android.view.View r0;
        boolean $z0;

        r0 := @parameter0: android.view.View;

        $z0 = staticinvoke <android.support.v4.widget.DrawerLayout: boolean includeChildForAccessibility(android.view.View)>(r0);

        return $z0;
    }

    static void <clinit>()
    {
        int i0;
        int[] $r0;
        android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplBase $r1;
        android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplApi21 $r2;

        <android.support.v4.widget.DrawerLayout: float TOUCH_SLOP_SENSITIVITY> = 1.0F;

        <android.support.v4.widget.DrawerLayout: boolean CHILDREN_DISALLOW_INTERCEPT> = 1;

        <android.support.v4.widget.DrawerLayout: boolean ALLOW_EDGE_LOCK> = 0;

        <android.support.v4.widget.DrawerLayout: int MIN_FLING_VELOCITY> = 400;

        <android.support.v4.widget.DrawerLayout: int PEEK_DELAY> = 160;

        <android.support.v4.widget.DrawerLayout: int DEFAULT_SCRIM_COLOR> = -1728053248;

        <android.support.v4.widget.DrawerLayout: int MIN_DRAWER_MARGIN> = 64;

        <android.support.v4.widget.DrawerLayout: int LOCK_MODE_LOCKED_OPEN> = 2;

        <android.support.v4.widget.DrawerLayout: int LOCK_MODE_LOCKED_CLOSED> = 1;

        <android.support.v4.widget.DrawerLayout: int LOCK_MODE_UNLOCKED> = 0;

        <android.support.v4.widget.DrawerLayout: int STATE_SETTLING> = 2;

        <android.support.v4.widget.DrawerLayout: int STATE_DRAGGING> = 1;

        <android.support.v4.widget.DrawerLayout: int STATE_IDLE> = 0;

        <android.support.v4.widget.DrawerLayout: java.lang.String TAG> = "DrawerLayout";

        $r0 = newarray (int)[1];

        $r0[0] = 16842931;

        <android.support.v4.widget.DrawerLayout: int[] LAYOUT_ATTRS> = $r0;

        i0 = <android.os.Build$VERSION: int SDK_INT>;

        if i0 < 21 goto label1;

        $r2 = new android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplApi21;

        specialinvoke $r2.<android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplApi21: void <init>()>();

        <android.support.v4.widget.DrawerLayout: android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl IMPL> = $r2;

        goto label2;

     label1:
        $r1 = new android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplBase;

        specialinvoke $r1.<android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImplBase: void <init>()>();

        <android.support.v4.widget.DrawerLayout: android.support.v4.widget.DrawerLayout$DrawerLayoutCompatImpl IMPL> = $r1;

     label2:
        return;
    }
}
