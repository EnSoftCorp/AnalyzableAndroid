public class com.android.ex.chips.CircularImageView extends android.widget.ImageView
{
    private static float circularImageBorder;
    private final android.graphics.Matrix matrix;
    private final android.graphics.RectF source;
    private final android.graphics.RectF destination;
    private final android.graphics.Paint bitmapPaint;
    private final android.graphics.Paint borderPaint;

    public void <init>(android.content.Context)
    {
        com.android.ex.chips.CircularImageView r0;
        android.content.Context r1;

        r0 := @this: com.android.ex.chips.CircularImageView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<com.android.ex.chips.CircularImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, null, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.android.ex.chips.CircularImageView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: com.android.ex.chips.CircularImageView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<com.android.ex.chips.CircularImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, 0);

        return;
    }

    public void <init>(android.content.Context, android.util.AttributeSet, int)
    {
        com.android.ex.chips.CircularImageView r0;
        android.content.Context r1;
        android.util.AttributeSet r2;
        int i0;
        android.graphics.Matrix $r3;
        android.graphics.RectF $r4, $r5;
        android.graphics.Paint $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r14, $r15;
        android.graphics.Paint$Style $r12;
        float $f0;

        r0 := @this: com.android.ex.chips.CircularImageView;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        i0 := @parameter2: int;

        specialinvoke r0.<android.widget.ImageView: void <init>(android.content.Context,android.util.AttributeSet,int)>(r1, r2, i0);

        $r3 = new android.graphics.Matrix;

        specialinvoke $r3.<android.graphics.Matrix: void <init>()>();

        r0.<com.android.ex.chips.CircularImageView: android.graphics.Matrix matrix> = $r3;

        $r4 = new android.graphics.RectF;

        specialinvoke $r4.<android.graphics.RectF: void <init>()>();

        r0.<com.android.ex.chips.CircularImageView: android.graphics.RectF source> = $r4;

        $r5 = new android.graphics.RectF;

        specialinvoke $r5.<android.graphics.RectF: void <init>()>();

        r0.<com.android.ex.chips.CircularImageView: android.graphics.RectF destination> = $r5;

        $r6 = new android.graphics.Paint;

        specialinvoke $r6.<android.graphics.Paint: void <init>()>();

        r0.<com.android.ex.chips.CircularImageView: android.graphics.Paint bitmapPaint> = $r6;

        $r7 = r0.<com.android.ex.chips.CircularImageView: android.graphics.Paint bitmapPaint>;

        virtualinvoke $r7.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r8 = r0.<com.android.ex.chips.CircularImageView: android.graphics.Paint bitmapPaint>;

        virtualinvoke $r8.<android.graphics.Paint: void setFilterBitmap(boolean)>(1);

        $r9 = r0.<com.android.ex.chips.CircularImageView: android.graphics.Paint bitmapPaint>;

        virtualinvoke $r9.<android.graphics.Paint: void setDither(boolean)>(1);

        $r10 = new android.graphics.Paint;

        specialinvoke $r10.<android.graphics.Paint: void <init>()>();

        r0.<com.android.ex.chips.CircularImageView: android.graphics.Paint borderPaint> = $r10;

        $r11 = r0.<com.android.ex.chips.CircularImageView: android.graphics.Paint borderPaint>;

        virtualinvoke $r11.<android.graphics.Paint: void setColor(int)>(0);

        $r13 = r0.<com.android.ex.chips.CircularImageView: android.graphics.Paint borderPaint>;

        $r12 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r13.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r12);

        $r15 = r0.<com.android.ex.chips.CircularImageView: android.graphics.Paint borderPaint>;

        $f0 = <com.android.ex.chips.CircularImageView: float circularImageBorder>;

        virtualinvoke $r15.<android.graphics.Paint: void setStrokeWidth(float)>($f0);

        $r14 = r0.<com.android.ex.chips.CircularImageView: android.graphics.Paint borderPaint>;

        virtualinvoke $r14.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        return;
    }

    protected void onDraw(android.graphics.Canvas)
    {
        com.android.ex.chips.CircularImageView r0;
        android.graphics.Canvas r1;
        android.graphics.drawable.Drawable r2, $r9, $r11;
        android.graphics.drawable.BitmapDrawable r3;
        android.graphics.Bitmap r4;
        boolean $z0;
        android.graphics.RectF $r5, $r6, $r7, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        android.graphics.drawable.StateListDrawable $r10;

        r0 := @this: com.android.ex.chips.CircularImageView;

        r1 := @parameter0: android.graphics.Canvas;

        r2 = virtualinvoke r0.<com.android.ex.chips.CircularImageView: android.graphics.drawable.Drawable getDrawable()>();

        r3 = null;

        $z0 = r2 instanceof android.graphics.drawable.StateListDrawable;

        if $z0 == 0 goto label1;

        $r10 = (android.graphics.drawable.StateListDrawable) r2;

        $r9 = virtualinvoke $r10.<android.graphics.drawable.StateListDrawable: android.graphics.drawable.Drawable getCurrent()>();

        if $r9 == null goto label2;

        $r11 = virtualinvoke r2.<android.graphics.drawable.Drawable: android.graphics.drawable.Drawable getCurrent()>();

        r3 = (android.graphics.drawable.BitmapDrawable) $r11;

        goto label2;

     label1:
        r3 = (android.graphics.drawable.BitmapDrawable) r2;

     label2:
        if r3 != null goto label3;

        return;

     label3:
        r4 = virtualinvoke r3.<android.graphics.drawable.BitmapDrawable: android.graphics.Bitmap getBitmap()>();

        if r4 != null goto label4;

        return;

     label4:
        $r5 = r0.<com.android.ex.chips.CircularImageView: android.graphics.RectF source>;

        $i0 = virtualinvoke r4.<android.graphics.Bitmap: int getWidth()>();

        $f0 = (float) $i0;

        $i1 = virtualinvoke r4.<android.graphics.Bitmap: int getHeight()>();

        $f1 = (float) $i1;

        virtualinvoke $r5.<android.graphics.RectF: void set(float,float,float,float)>(0.0F, 0.0F, $f0, $f1);

        $r6 = r0.<com.android.ex.chips.CircularImageView: android.graphics.RectF destination>;

        $i2 = virtualinvoke r0.<com.android.ex.chips.CircularImageView: int getPaddingLeft()>();

        $f2 = (float) $i2;

        $i3 = virtualinvoke r0.<com.android.ex.chips.CircularImageView: int getPaddingTop()>();

        $f3 = (float) $i3;

        $i5 = virtualinvoke r0.<com.android.ex.chips.CircularImageView: int getWidth()>();

        $i4 = virtualinvoke r0.<com.android.ex.chips.CircularImageView: int getPaddingRight()>();

        $i6 = $i5 - $i4;

        $f4 = (float) $i6;

        $i8 = virtualinvoke r0.<com.android.ex.chips.CircularImageView: int getHeight()>();

        $i7 = virtualinvoke r0.<com.android.ex.chips.CircularImageView: int getPaddingBottom()>();

        $i9 = $i8 - $i7;

        $f5 = (float) $i9;

        virtualinvoke $r6.<android.graphics.RectF: void set(float,float,float,float)>($f2, $f3, $f4, $f5);

        $r7 = r0.<com.android.ex.chips.CircularImageView: android.graphics.RectF source>;

        $r8 = r0.<com.android.ex.chips.CircularImageView: android.graphics.RectF destination>;

        virtualinvoke r0.<com.android.ex.chips.CircularImageView: void drawBitmapWithCircleOnCanvas(android.graphics.Bitmap,android.graphics.Canvas,android.graphics.RectF,android.graphics.RectF)>(r4, r1, $r7, $r8);

        return;
    }

    public void drawBitmapWithCircleOnCanvas(android.graphics.Bitmap, android.graphics.Canvas, android.graphics.RectF, android.graphics.RectF)
    {
        com.android.ex.chips.CircularImageView r0;
        android.graphics.Bitmap r1;
        android.graphics.Canvas r2;
        android.graphics.RectF r3, r4;
        android.graphics.BitmapShader r5, $r6;
        android.graphics.Shader$TileMode $r7, $r8;
        android.graphics.Matrix $r9, $r11, $r12;
        android.graphics.Matrix$ScaleToFit $r10;
        android.graphics.Paint $r13, $r15, $r16;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;

        r0 := @this: com.android.ex.chips.CircularImageView;

        r1 := @parameter0: android.graphics.Bitmap;

        r2 := @parameter1: android.graphics.Canvas;

        r3 := @parameter2: android.graphics.RectF;

        r4 := @parameter3: android.graphics.RectF;

        $r6 = new android.graphics.BitmapShader;

        $r8 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        $r7 = <android.graphics.Shader$TileMode: android.graphics.Shader$TileMode CLAMP>;

        specialinvoke $r6.<android.graphics.BitmapShader: void <init>(android.graphics.Bitmap,android.graphics.Shader$TileMode,android.graphics.Shader$TileMode)>(r1, $r8, $r7);

        r5 = $r6;

        $r9 = r0.<com.android.ex.chips.CircularImageView: android.graphics.Matrix matrix>;

        virtualinvoke $r9.<android.graphics.Matrix: void reset()>();

        $r11 = r0.<com.android.ex.chips.CircularImageView: android.graphics.Matrix matrix>;

        $r10 = <android.graphics.Matrix$ScaleToFit: android.graphics.Matrix$ScaleToFit FILL>;

        virtualinvoke $r11.<android.graphics.Matrix: boolean setRectToRect(android.graphics.RectF,android.graphics.RectF,android.graphics.Matrix$ScaleToFit)>(r3, r4, $r10);

        $r12 = r0.<com.android.ex.chips.CircularImageView: android.graphics.Matrix matrix>;

        virtualinvoke r5.<android.graphics.BitmapShader: void setLocalMatrix(android.graphics.Matrix)>($r12);

        $r13 = r0.<com.android.ex.chips.CircularImageView: android.graphics.Paint bitmapPaint>;

        virtualinvoke $r13.<android.graphics.Paint: android.graphics.Shader setShader(android.graphics.Shader)>(r5);

        $f1 = virtualinvoke r4.<android.graphics.RectF: float centerX()>();

        $f0 = virtualinvoke r4.<android.graphics.RectF: float centerY()>();

        $f2 = virtualinvoke r4.<android.graphics.RectF: float width()>();

        $f4 = $f2 / 2.0F;

        $r15 = r0.<com.android.ex.chips.CircularImageView: android.graphics.Paint bitmapPaint>;

        virtualinvoke r2.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f1, $f0, $f4, $r15);

        $f3 = virtualinvoke r4.<android.graphics.RectF: float centerX()>();

        $f6 = virtualinvoke r4.<android.graphics.RectF: float centerY()>();

        $f5 = virtualinvoke r4.<android.graphics.RectF: float width()>();

        $f9 = $f5 / 2.0F;

        $f8 = <com.android.ex.chips.CircularImageView: float circularImageBorder>;

        $f7 = $f8 / 2.0F;

        $f10 = $f9 - $f7;

        $r16 = r0.<com.android.ex.chips.CircularImageView: android.graphics.Paint borderPaint>;

        virtualinvoke r2.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f3, $f6, $f10, $r16);

        return;
    }

    static void <clinit>()
    {
        <com.android.ex.chips.CircularImageView: float circularImageBorder> = 1.0F;

        return;
    }
}
