public class com.android.datetimepicker.time.CircleView extends android.view.View
{
    private static final java.lang.String TAG;
    private final android.graphics.Paint mPaint;
    private boolean mIs24HourMode;
    private int mCircleColor;
    private int mDotColor;
    private float mCircleRadiusMultiplier;
    private float mAmPmCircleRadiusMultiplier;
    private boolean mIsInitialized;
    private boolean mDrawValuesReady;
    private int mXCenter;
    private int mYCenter;
    private int mCircleRadius;

    public void <init>(android.content.Context)
    {
        com.android.datetimepicker.time.CircleView r0;
        android.content.Context r1;
        android.content.res.Resources r2;
        android.graphics.Paint $r3, $r4;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.android.datetimepicker.time.CircleView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context)>(r1);

        $r3 = new android.graphics.Paint;

        specialinvoke $r3.<android.graphics.Paint: void <init>()>();

        r0.<com.android.datetimepicker.time.CircleView: android.graphics.Paint mPaint> = $r3;

        r2 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $i0 = <com.android.datetimepicker.R$color: int white>;

        $i1 = virtualinvoke r2.<android.content.res.Resources: int getColor(int)>($i0);

        r0.<com.android.datetimepicker.time.CircleView: int mCircleColor> = $i1;

        $i2 = <com.android.datetimepicker.R$color: int numbers_text_color>;

        $i3 = virtualinvoke r2.<android.content.res.Resources: int getColor(int)>($i2);

        r0.<com.android.datetimepicker.time.CircleView: int mDotColor> = $i3;

        $r4 = r0.<com.android.datetimepicker.time.CircleView: android.graphics.Paint mPaint>;

        virtualinvoke $r4.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        r0.<com.android.datetimepicker.time.CircleView: boolean mIsInitialized> = 0;

        return;
    }

    public void initialize(android.content.Context, boolean)
    {
        com.android.datetimepicker.time.CircleView r0;
        android.content.Context r1;
        boolean z0, $z1;
        android.content.res.Resources r2;
        int $i0, $i1, $i2;
        java.lang.String $r3, $r4, $r5;
        float $f0, $f1, $f2;

        r0 := @this: com.android.datetimepicker.time.CircleView;

        r1 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        $z1 = r0.<com.android.datetimepicker.time.CircleView: boolean mIsInitialized>;

        if $z1 == 0 goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CircleView", "CircleView may only be initialized once.");

        return;

     label1:
        r2 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        r0.<com.android.datetimepicker.time.CircleView: boolean mIs24HourMode> = z0;

        if z0 == 0 goto label2;

        $i2 = <com.android.datetimepicker.R$string: int circle_radius_multiplier_24HourMode>;

        $r5 = virtualinvoke r2.<android.content.res.Resources: java.lang.String getString(int)>($i2);

        $f2 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r5);

        r0.<com.android.datetimepicker.time.CircleView: float mCircleRadiusMultiplier> = $f2;

        goto label3;

     label2:
        $i0 = <com.android.datetimepicker.R$string: int circle_radius_multiplier>;

        $r3 = virtualinvoke r2.<android.content.res.Resources: java.lang.String getString(int)>($i0);

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r3);

        r0.<com.android.datetimepicker.time.CircleView: float mCircleRadiusMultiplier> = $f0;

        $i1 = <com.android.datetimepicker.R$string: int ampm_circle_radius_multiplier>;

        $r4 = virtualinvoke r2.<android.content.res.Resources: java.lang.String getString(int)>($i1);

        $f1 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r4);

        r0.<com.android.datetimepicker.time.CircleView: float mAmPmCircleRadiusMultiplier> = $f1;

     label3:
        r0.<com.android.datetimepicker.time.CircleView: boolean mIsInitialized> = 1;

        return;
    }

    void setTheme(android.content.Context, boolean)
    {
        com.android.datetimepicker.time.CircleView r0;
        android.content.Context r1;
        boolean z0;
        android.content.res.Resources r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: com.android.datetimepicker.time.CircleView;

        r1 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        r2 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        if z0 == 0 goto label1;

        $i4 = <com.android.datetimepicker.R$color: int dark_gray>;

        $i5 = virtualinvoke r2.<android.content.res.Resources: int getColor(int)>($i4);

        r0.<com.android.datetimepicker.time.CircleView: int mCircleColor> = $i5;

        $i6 = <com.android.datetimepicker.R$color: int light_gray>;

        $i7 = virtualinvoke r2.<android.content.res.Resources: int getColor(int)>($i6);

        r0.<com.android.datetimepicker.time.CircleView: int mDotColor> = $i7;

        goto label2;

     label1:
        $i0 = <com.android.datetimepicker.R$color: int white>;

        $i1 = virtualinvoke r2.<android.content.res.Resources: int getColor(int)>($i0);

        r0.<com.android.datetimepicker.time.CircleView: int mCircleColor> = $i1;

        $i2 = <com.android.datetimepicker.R$color: int numbers_text_color>;

        $i3 = virtualinvoke r2.<android.content.res.Resources: int getColor(int)>($i2);

        r0.<com.android.datetimepicker.time.CircleView: int mDotColor> = $i3;

     label2:
        return;
    }

    public void onDraw(android.graphics.Canvas)
    {
        com.android.datetimepicker.time.CircleView r0;
        android.graphics.Canvas r1;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20;
        boolean $z0, $z1, $z2;
        android.graphics.Paint $r2, $r3, $r4, $r5;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10;

        r0 := @this: com.android.datetimepicker.time.CircleView;

        r1 := @parameter0: android.graphics.Canvas;

        i0 = virtualinvoke r0.<com.android.datetimepicker.time.CircleView: int getWidth()>();

        if i0 == 0 goto label1;

        $z0 = r0.<com.android.datetimepicker.time.CircleView: boolean mIsInitialized>;

        if $z0 != 0 goto label2;

     label1:
        return;

     label2:
        $z1 = r0.<com.android.datetimepicker.time.CircleView: boolean mDrawValuesReady>;

        if $z1 != 0 goto label4;

        $i9 = virtualinvoke r0.<com.android.datetimepicker.time.CircleView: int getWidth()>();

        $i11 = $i9 / 2;

        r0.<com.android.datetimepicker.time.CircleView: int mXCenter> = $i11;

        $i10 = virtualinvoke r0.<com.android.datetimepicker.time.CircleView: int getHeight()>();

        $i13 = $i10 / 2;

        r0.<com.android.datetimepicker.time.CircleView: int mYCenter> = $i13;

        $i15 = r0.<com.android.datetimepicker.time.CircleView: int mXCenter>;

        $i12 = r0.<com.android.datetimepicker.time.CircleView: int mYCenter>;

        $i14 = staticinvoke <java.lang.Math: int min(int,int)>($i15, $i12);

        $f5 = (float) $i14;

        $f6 = r0.<com.android.datetimepicker.time.CircleView: float mCircleRadiusMultiplier>;

        $f7 = $f5 * $f6;

        $i17 = (int) $f7;

        r0.<com.android.datetimepicker.time.CircleView: int mCircleRadius> = $i17;

        $z2 = r0.<com.android.datetimepicker.time.CircleView: boolean mIs24HourMode>;

        if $z2 != 0 goto label3;

        $i16 = r0.<com.android.datetimepicker.time.CircleView: int mCircleRadius>;

        $f10 = (float) $i16;

        $f9 = r0.<com.android.datetimepicker.time.CircleView: float mAmPmCircleRadiusMultiplier>;

        $f8 = $f10 * $f9;

        i1 = (int) $f8;

        $i19 = r0.<com.android.datetimepicker.time.CircleView: int mYCenter>;

        $i18 = i1 / 2;

        $i20 = $i19 - $i18;

        r0.<com.android.datetimepicker.time.CircleView: int mYCenter> = $i20;

     label3:
        r0.<com.android.datetimepicker.time.CircleView: boolean mDrawValuesReady> = 1;

     label4:
        $r2 = r0.<com.android.datetimepicker.time.CircleView: android.graphics.Paint mPaint>;

        $i2 = r0.<com.android.datetimepicker.time.CircleView: int mCircleColor>;

        virtualinvoke $r2.<android.graphics.Paint: void setColor(int)>($i2);

        $i3 = r0.<com.android.datetimepicker.time.CircleView: int mXCenter>;

        $f2 = (float) $i3;

        $i4 = r0.<com.android.datetimepicker.time.CircleView: int mYCenter>;

        $f1 = (float) $i4;

        $i5 = r0.<com.android.datetimepicker.time.CircleView: int mCircleRadius>;

        $f0 = (float) $i5;

        $r3 = r0.<com.android.datetimepicker.time.CircleView: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f2, $f1, $f0, $r3);

        $r4 = r0.<com.android.datetimepicker.time.CircleView: android.graphics.Paint mPaint>;

        $i6 = r0.<com.android.datetimepicker.time.CircleView: int mDotColor>;

        virtualinvoke $r4.<android.graphics.Paint: void setColor(int)>($i6);

        $i8 = r0.<com.android.datetimepicker.time.CircleView: int mXCenter>;

        $f4 = (float) $i8;

        $i7 = r0.<com.android.datetimepicker.time.CircleView: int mYCenter>;

        $f3 = (float) $i7;

        $r5 = r0.<com.android.datetimepicker.time.CircleView: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f4, $f3, 2.0F, $r5);

        return;
    }

    public static void <clinit>()
    {
        <com.android.datetimepicker.time.CircleView: java.lang.String TAG> = "CircleView";

        return;
    }
}
