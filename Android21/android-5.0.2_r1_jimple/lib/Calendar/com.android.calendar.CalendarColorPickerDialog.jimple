public class com.android.calendar.CalendarColorPickerDialog extends com.android.colorpicker.ColorPickerDialog
{
    private static final int NUM_COLUMNS;
    private static final java.lang.String KEY_CALENDAR_ID;
    private static final java.lang.String KEY_COLOR_KEYS;
    private static final int TOKEN_QUERY_CALENDARS;
    private static final int TOKEN_QUERY_COLORS;
    static final java.lang.String[] CALENDARS_PROJECTION;
    static final int CALENDARS_INDEX_ACCOUNT_NAME;
    static final int CALENDARS_INDEX_ACCOUNT_TYPE;
    static final int CALENDARS_INDEX_CALENDAR_COLOR;
    static final java.lang.String[] COLORS_PROJECTION;
    static final java.lang.String COLORS_WHERE;
    public static final int COLORS_INDEX_COLOR;
    public static final int COLORS_INDEX_COLOR_KEY;
    private com.android.calendar.CalendarColorPickerDialog$QueryService mService;
    private android.util.SparseIntArray mColorKeyMap;
    private long mCalendarId;

    public void <init>()
    {
        com.android.calendar.CalendarColorPickerDialog r0;
        android.util.SparseIntArray $r1;

        r0 := @this: com.android.calendar.CalendarColorPickerDialog;

        specialinvoke r0.<com.android.colorpicker.ColorPickerDialog: void <init>()>();

        $r1 = new android.util.SparseIntArray;

        specialinvoke $r1.<android.util.SparseIntArray: void <init>()>();

        r0.<com.android.calendar.CalendarColorPickerDialog: android.util.SparseIntArray mColorKeyMap> = $r1;

        return;
    }

    public static com.android.calendar.CalendarColorPickerDialog newInstance(long, boolean)
    {
        long l0;
        boolean z0;
        com.android.calendar.CalendarColorPickerDialog r0, $r1;
        byte $b1;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        $r1 = new com.android.calendar.CalendarColorPickerDialog;

        specialinvoke $r1.<com.android.calendar.CalendarColorPickerDialog: void <init>()>();

        r0 = $r1;

        if z0 == 0 goto label1;

        $b1 = 1;

        goto label2;

     label1:
        $b1 = 2;

     label2:
        virtualinvoke r0.<com.android.calendar.CalendarColorPickerDialog: void setArguments(int,int,int)>(2131492934, 4, $b1);

        virtualinvoke r0.<com.android.calendar.CalendarColorPickerDialog: void setCalendarId(long)>(l0);

        return r0;
    }

    public void onSaveInstanceState(android.os.Bundle)
    {
        com.android.calendar.CalendarColorPickerDialog r0;
        android.os.Bundle r1;
        long $l0;

        r0 := @this: com.android.calendar.CalendarColorPickerDialog;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<com.android.colorpicker.ColorPickerDialog: void onSaveInstanceState(android.os.Bundle)>(r1);

        $l0 = r0.<com.android.calendar.CalendarColorPickerDialog: long mCalendarId>;

        virtualinvoke r1.<android.os.Bundle: void putLong(java.lang.String,long)>("calendar_id", $l0);

        specialinvoke r0.<com.android.calendar.CalendarColorPickerDialog: void saveColorKeys(android.os.Bundle)>(r1);

        return;
    }

    private void saveColorKeys(android.os.Bundle)
    {
        com.android.calendar.CalendarColorPickerDialog r0;
        android.os.Bundle r1;
        int[] r2, $r3, $r4, $r5, $r6;
        int i0, $i1, $i2, $i3, $i4;
        android.util.SparseIntArray $r7;

        r0 := @this: com.android.calendar.CalendarColorPickerDialog;

        r1 := @parameter0: android.os.Bundle;

        $r3 = r0.<com.android.calendar.CalendarColorPickerDialog: int[] mColors>;

        if $r3 != null goto label1;

        return;

     label1:
        $r4 = r0.<com.android.calendar.CalendarColorPickerDialog: int[] mColors>;

        $i1 = lengthof $r4;

        r2 = newarray (int)[$i1];

        i0 = 0;

     label2:
        $r5 = r0.<com.android.calendar.CalendarColorPickerDialog: int[] mColors>;

        $i2 = lengthof $r5;

        if i0 >= $i2 goto label3;

        $r7 = r0.<com.android.calendar.CalendarColorPickerDialog: android.util.SparseIntArray mColorKeyMap>;

        $r6 = r0.<com.android.calendar.CalendarColorPickerDialog: int[] mColors>;

        $i3 = $r6[i0];

        $i4 = virtualinvoke $r7.<android.util.SparseIntArray: int get(int)>($i3);

        r2[i0] = $i4;

        i0 = i0 + 1;

        goto label2;

     label3:
        virtualinvoke r1.<android.os.Bundle: void putIntArray(java.lang.String,int[])>("color_keys", r2);

        return;
    }

    public void onCreate(android.os.Bundle)
    {
        com.android.calendar.CalendarColorPickerDialog r0;
        android.os.Bundle r1;
        com.android.calendar.CalendarColorPickerDialog$OnCalendarColorSelectedListener $r2;
        long $l0;

        r0 := @this: com.android.calendar.CalendarColorPickerDialog;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<com.android.colorpicker.ColorPickerDialog: void onCreate(android.os.Bundle)>(r1);

        if r1 == null goto label1;

        $l0 = virtualinvoke r1.<android.os.Bundle: long getLong(java.lang.String)>("calendar_id");

        r0.<com.android.calendar.CalendarColorPickerDialog: long mCalendarId> = $l0;

        specialinvoke r0.<com.android.calendar.CalendarColorPickerDialog: void retrieveColorKeys(android.os.Bundle)>(r1);

     label1:
        $r2 = new com.android.calendar.CalendarColorPickerDialog$OnCalendarColorSelectedListener;

        specialinvoke $r2.<com.android.calendar.CalendarColorPickerDialog$OnCalendarColorSelectedListener: void <init>(com.android.calendar.CalendarColorPickerDialog,com.android.calendar.CalendarColorPickerDialog$1)>(r0, null);

        virtualinvoke r0.<com.android.calendar.CalendarColorPickerDialog: void setOnColorSelectedListener(com.android.colorpicker.ColorPickerSwatch$OnColorSelectedListener)>($r2);

        return;
    }

    private void retrieveColorKeys(android.os.Bundle)
    {
        com.android.calendar.CalendarColorPickerDialog r0;
        android.os.Bundle r1;
        int[] r2, $r3, $r4, $r5;
        int i0, $i1, $i2, $i3;
        android.util.SparseIntArray $r6;

        r0 := @this: com.android.calendar.CalendarColorPickerDialog;

        r1 := @parameter0: android.os.Bundle;

        r2 = virtualinvoke r1.<android.os.Bundle: int[] getIntArray(java.lang.String)>("color_keys");

        $r3 = r0.<com.android.calendar.CalendarColorPickerDialog: int[] mColors>;

        if $r3 == null goto label2;

        if r2 == null goto label2;

        i0 = 0;

     label1:
        $r4 = r0.<com.android.calendar.CalendarColorPickerDialog: int[] mColors>;

        $i1 = lengthof $r4;

        if i0 >= $i1 goto label2;

        $r6 = r0.<com.android.calendar.CalendarColorPickerDialog: android.util.SparseIntArray mColorKeyMap>;

        $r5 = r0.<com.android.calendar.CalendarColorPickerDialog: int[] mColors>;

        $i3 = $r5[i0];

        $i2 = r2[i0];

        virtualinvoke $r6.<android.util.SparseIntArray: void put(int,int)>($i3, $i2);

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    public void setColors(int[])
    {
        com.android.calendar.CalendarColorPickerDialog r0;
        int[] r1;
        java.lang.IllegalStateException $r2;

        r0 := @this: com.android.calendar.CalendarColorPickerDialog;

        r1 := @parameter0: int[];

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Must call setCalendarId() to update calendar colors");

        throw $r2;
    }

    public void setColors(int[], int)
    {
        com.android.calendar.CalendarColorPickerDialog r0;
        int[] r1;
        int i0;
        java.lang.IllegalStateException $r2;

        r0 := @this: com.android.calendar.CalendarColorPickerDialog;

        r1 := @parameter0: int[];

        i0 := @parameter1: int;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Must call setCalendarId() to update calendar colors");

        throw $r2;
    }

    public void setCalendarId(long)
    {
        com.android.calendar.CalendarColorPickerDialog r0;
        long l0, $l1;
        byte $b2;

        r0 := @this: com.android.calendar.CalendarColorPickerDialog;

        l0 := @parameter0: long;

        $l1 = r0.<com.android.calendar.CalendarColorPickerDialog: long mCalendarId>;

        $b2 = l0 cmp $l1;

        if $b2 == 0 goto label1;

        r0.<com.android.calendar.CalendarColorPickerDialog: long mCalendarId> = l0;

        specialinvoke r0.<com.android.calendar.CalendarColorPickerDialog: void startQuery()>();

     label1:
        return;
    }

    public android.app.Dialog onCreateDialog(android.os.Bundle)
    {
        com.android.calendar.CalendarColorPickerDialog r0;
        android.os.Bundle r1;
        android.app.Dialog r2;
        com.android.calendar.CalendarColorPickerDialog$QueryService $r3;
        android.app.Activity $r4;
        int[] $r5;

        r0 := @this: com.android.calendar.CalendarColorPickerDialog;

        r1 := @parameter0: android.os.Bundle;

        r2 = specialinvoke r0.<com.android.colorpicker.ColorPickerDialog: android.app.Dialog onCreateDialog(android.os.Bundle)>(r1);

        $r3 = new com.android.calendar.CalendarColorPickerDialog$QueryService;

        $r4 = virtualinvoke r0.<com.android.calendar.CalendarColorPickerDialog: android.app.Activity getActivity()>();

        specialinvoke $r3.<com.android.calendar.CalendarColorPickerDialog$QueryService: void <init>(com.android.calendar.CalendarColorPickerDialog,android.content.Context,com.android.calendar.CalendarColorPickerDialog$1)>(r0, $r4, null);

        r0.<com.android.calendar.CalendarColorPickerDialog: com.android.calendar.CalendarColorPickerDialog$QueryService mService> = $r3;

        $r5 = r0.<com.android.calendar.CalendarColorPickerDialog: int[] mColors>;

        if $r5 != null goto label1;

        specialinvoke r0.<com.android.calendar.CalendarColorPickerDialog: void startQuery()>();

     label1:
        return r2;
    }

    private void startQuery()
    {
        com.android.calendar.CalendarColorPickerDialog r0;
        com.android.calendar.CalendarColorPickerDialog$QueryService $r1, $r3;
        long $l0;
        android.net.Uri $r2, $r4;
        java.lang.String[] $r5;

        r0 := @this: com.android.calendar.CalendarColorPickerDialog;

        $r1 = r0.<com.android.calendar.CalendarColorPickerDialog: com.android.calendar.CalendarColorPickerDialog$QueryService mService>;

        if $r1 == null goto label1;

        virtualinvoke r0.<com.android.calendar.CalendarColorPickerDialog: void showProgressBarView()>();

        $r3 = r0.<com.android.calendar.CalendarColorPickerDialog: com.android.calendar.CalendarColorPickerDialog$QueryService mService>;

        $r2 = <android.provider.CalendarContract$Calendars: android.net.Uri CONTENT_URI>;

        $l0 = r0.<com.android.calendar.CalendarColorPickerDialog: long mCalendarId>;

        $r4 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r2, $l0);

        $r5 = <com.android.calendar.CalendarColorPickerDialog: java.lang.String[] CALENDARS_PROJECTION>;

        virtualinvoke $r3.<com.android.calendar.CalendarColorPickerDialog$QueryService: void startQuery(int,java.lang.Object,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(2, null, $r4, $r5, null, null, null);

     label1:
        return;
    }

    static int access$002(com.android.calendar.CalendarColorPickerDialog, int)
    {
        com.android.calendar.CalendarColorPickerDialog r0;
        int i0;

        r0 := @parameter0: com.android.calendar.CalendarColorPickerDialog;

        i0 := @parameter1: int;

        r0.<com.android.calendar.CalendarColorPickerDialog: int mSelectedColor> = i0;

        return i0;
    }

    static android.util.SparseIntArray access$100(com.android.calendar.CalendarColorPickerDialog)
    {
        com.android.calendar.CalendarColorPickerDialog r0;
        android.util.SparseIntArray $r1;

        r0 := @parameter0: com.android.calendar.CalendarColorPickerDialog;

        $r1 = r0.<com.android.calendar.CalendarColorPickerDialog: android.util.SparseIntArray mColorKeyMap>;

        return $r1;
    }

    static int[] access$202(com.android.calendar.CalendarColorPickerDialog, int[])
    {
        com.android.calendar.CalendarColorPickerDialog r0;
        int[] r1;

        r0 := @parameter0: com.android.calendar.CalendarColorPickerDialog;

        r1 := @parameter1: int[];

        r0.<com.android.calendar.CalendarColorPickerDialog: int[] mColors> = r1;

        return r1;
    }

    static int[] access$300(com.android.calendar.CalendarColorPickerDialog)
    {
        com.android.calendar.CalendarColorPickerDialog r0;
        int[] $r1;

        r0 := @parameter0: com.android.calendar.CalendarColorPickerDialog;

        $r1 = r0.<com.android.calendar.CalendarColorPickerDialog: int[] mColors>;

        return $r1;
    }

    static int[] access$400(com.android.calendar.CalendarColorPickerDialog)
    {
        com.android.calendar.CalendarColorPickerDialog r0;
        int[] $r1;

        r0 := @parameter0: com.android.calendar.CalendarColorPickerDialog;

        $r1 = r0.<com.android.calendar.CalendarColorPickerDialog: int[] mColors>;

        return $r1;
    }

    static int access$500(com.android.calendar.CalendarColorPickerDialog)
    {
        com.android.calendar.CalendarColorPickerDialog r0;
        int $i0;

        r0 := @parameter0: com.android.calendar.CalendarColorPickerDialog;

        $i0 = r0.<com.android.calendar.CalendarColorPickerDialog: int mSelectedColor>;

        return $i0;
    }

    static com.android.calendar.CalendarColorPickerDialog$QueryService access$600(com.android.calendar.CalendarColorPickerDialog)
    {
        com.android.calendar.CalendarColorPickerDialog r0;
        com.android.calendar.CalendarColorPickerDialog$QueryService $r1;

        r0 := @parameter0: com.android.calendar.CalendarColorPickerDialog;

        $r1 = r0.<com.android.calendar.CalendarColorPickerDialog: com.android.calendar.CalendarColorPickerDialog$QueryService mService>;

        return $r1;
    }

    static long access$700(com.android.calendar.CalendarColorPickerDialog)
    {
        com.android.calendar.CalendarColorPickerDialog r0;
        long $l0;

        r0 := @parameter0: com.android.calendar.CalendarColorPickerDialog;

        $l0 = r0.<com.android.calendar.CalendarColorPickerDialog: long mCalendarId>;

        return $l0;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0, $r1;

        <com.android.calendar.CalendarColorPickerDialog: int COLORS_INDEX_COLOR_KEY> = 1;

        <com.android.calendar.CalendarColorPickerDialog: int COLORS_INDEX_COLOR> = 0;

        <com.android.calendar.CalendarColorPickerDialog: java.lang.String COLORS_WHERE> = "account_name=? AND account_type=? AND color_type=0";

        <com.android.calendar.CalendarColorPickerDialog: int CALENDARS_INDEX_CALENDAR_COLOR> = 2;

        <com.android.calendar.CalendarColorPickerDialog: int CALENDARS_INDEX_ACCOUNT_TYPE> = 1;

        <com.android.calendar.CalendarColorPickerDialog: int CALENDARS_INDEX_ACCOUNT_NAME> = 0;

        <com.android.calendar.CalendarColorPickerDialog: int TOKEN_QUERY_COLORS> = 4;

        <com.android.calendar.CalendarColorPickerDialog: int TOKEN_QUERY_CALENDARS> = 2;

        <com.android.calendar.CalendarColorPickerDialog: java.lang.String KEY_COLOR_KEYS> = "color_keys";

        <com.android.calendar.CalendarColorPickerDialog: java.lang.String KEY_CALENDAR_ID> = "calendar_id";

        <com.android.calendar.CalendarColorPickerDialog: int NUM_COLUMNS> = 4;

        $r0 = newarray (java.lang.String)[3];

        $r0[0] = "account_name";

        $r0[1] = "account_type";

        $r0[2] = "calendar_color";

        <com.android.calendar.CalendarColorPickerDialog: java.lang.String[] CALENDARS_PROJECTION> = $r0;

        $r1 = newarray (java.lang.String)[2];

        $r1[0] = "color";

        $r1[1] = "color_index";

        <com.android.calendar.CalendarColorPickerDialog: java.lang.String[] COLORS_PROJECTION> = $r1;

        return;
    }
}
