public class com.android.calendar.month.SimpleDayPickerFragment extends android.app.ListFragment implements android.widget.AbsListView$OnScrollListener
{
    private static final java.lang.String TAG;
    private static final java.lang.String KEY_CURRENT_TIME;
    protected static final int SCROLL_HYST_WEEKS;
    protected static final int GOTO_SCROLL_DURATION;
    protected static final int SCROLL_CHANGE_DELAY;
    public static final int DAYS_PER_WEEK;
    protected static final int MINI_MONTH_NAME_TEXT_SIZE;
    public static int LIST_TOP_OFFSET;
    protected int WEEK_MIN_VISIBLE_HEIGHT;
    protected int BOTTOM_BUFFER;
    protected int mSaturdayColor;
    protected int mSundayColor;
    protected int mDayNameColor;
    protected int mNumWeeks;
    protected boolean mShowWeekNumber;
    protected int mDaysPerWeek;
    protected float mFriction;
    protected android.content.Context mContext;
    protected android.os.Handler mHandler;
    protected float mMinimumFlingVelocity;
    protected android.text.format.Time mSelectedDay;
    protected com.android.calendar.month.SimpleWeeksAdapter mAdapter;
    protected android.widget.ListView mListView;
    protected android.view.ViewGroup mDayNamesHeader;
    protected java.lang.String[] mDayLabels;
    protected android.text.format.Time mTempTime;
    private static float mScale;
    protected int mFirstDayOfWeek;
    protected android.text.format.Time mFirstDayOfMonth;
    protected android.text.format.Time mFirstVisibleDay;
    protected android.widget.TextView mMonthName;
    protected java.lang.CharSequence mPrevMonthName;
    protected int mCurrentMonthDisplayed;
    protected long mPreviousScrollPosition;
    protected boolean mIsScrollingUp;
    protected int mPreviousScrollState;
    protected int mCurrentScrollState;
    protected java.lang.Runnable mTodayUpdater;
    protected android.database.DataSetObserver mObserver;
    protected com.android.calendar.month.SimpleDayPickerFragment$ScrollStateRunnable mScrollStateChangedRunnable;

    public void <init>(long)
    {
        com.android.calendar.month.SimpleDayPickerFragment r0;
        long l0;
        android.text.format.Time $r1, $r2, $r3, $r4;
        com.android.calendar.month.SimpleDayPickerFragment$1 $r5;
        com.android.calendar.month.SimpleDayPickerFragment$2 $r6;
        com.android.calendar.month.SimpleDayPickerFragment$ScrollStateRunnable $r7;
        android.os.Handler $r8;

        r0 := @this: com.android.calendar.month.SimpleDayPickerFragment;

        l0 := @parameter0: long;

        specialinvoke r0.<android.app.ListFragment: void <init>()>();

        r0.<com.android.calendar.month.SimpleDayPickerFragment: int WEEK_MIN_VISIBLE_HEIGHT> = 12;

        r0.<com.android.calendar.month.SimpleDayPickerFragment: int BOTTOM_BUFFER> = 20;

        r0.<com.android.calendar.month.SimpleDayPickerFragment: int mSaturdayColor> = 0;

        r0.<com.android.calendar.month.SimpleDayPickerFragment: int mSundayColor> = 0;

        r0.<com.android.calendar.month.SimpleDayPickerFragment: int mDayNameColor> = 0;

        r0.<com.android.calendar.month.SimpleDayPickerFragment: int mNumWeeks> = 6;

        r0.<com.android.calendar.month.SimpleDayPickerFragment: boolean mShowWeekNumber> = 0;

        r0.<com.android.calendar.month.SimpleDayPickerFragment: int mDaysPerWeek> = 7;

        r0.<com.android.calendar.month.SimpleDayPickerFragment: float mFriction> = 1.0F;

        $r1 = new android.text.format.Time;

        specialinvoke $r1.<android.text.format.Time: void <init>()>();

        r0.<com.android.calendar.month.SimpleDayPickerFragment: android.text.format.Time mSelectedDay> = $r1;

        $r2 = new android.text.format.Time;

        specialinvoke $r2.<android.text.format.Time: void <init>()>();

        r0.<com.android.calendar.month.SimpleDayPickerFragment: android.text.format.Time mTempTime> = $r2;

        $r3 = new android.text.format.Time;

        specialinvoke $r3.<android.text.format.Time: void <init>()>();

        r0.<com.android.calendar.month.SimpleDayPickerFragment: android.text.format.Time mFirstDayOfMonth> = $r3;

        $r4 = new android.text.format.Time;

        specialinvoke $r4.<android.text.format.Time: void <init>()>();

        r0.<com.android.calendar.month.SimpleDayPickerFragment: android.text.format.Time mFirstVisibleDay> = $r4;

        r0.<com.android.calendar.month.SimpleDayPickerFragment: boolean mIsScrollingUp> = 0;

        r0.<com.android.calendar.month.SimpleDayPickerFragment: int mPreviousScrollState> = 0;

        r0.<com.android.calendar.month.SimpleDayPickerFragment: int mCurrentScrollState> = 0;

        $r5 = new com.android.calendar.month.SimpleDayPickerFragment$1;

        specialinvoke $r5.<com.android.calendar.month.SimpleDayPickerFragment$1: void <init>(com.android.calendar.month.SimpleDayPickerFragment)>(r0);

        r0.<com.android.calendar.month.SimpleDayPickerFragment: java.lang.Runnable mTodayUpdater> = $r5;

        $r6 = new com.android.calendar.month.SimpleDayPickerFragment$2;

        specialinvoke $r6.<com.android.calendar.month.SimpleDayPickerFragment$2: void <init>(com.android.calendar.month.SimpleDayPickerFragment)>(r0);

        r0.<com.android.calendar.month.SimpleDayPickerFragment: android.database.DataSetObserver mObserver> = $r6;

        $r7 = new com.android.calendar.month.SimpleDayPickerFragment$ScrollStateRunnable;

        specialinvoke $r7.<com.android.calendar.month.SimpleDayPickerFragment$ScrollStateRunnable: void <init>(com.android.calendar.month.SimpleDayPickerFragment)>(r0);

        r0.<com.android.calendar.month.SimpleDayPickerFragment: com.android.calendar.month.SimpleDayPickerFragment$ScrollStateRunnable mScrollStateChangedRunnable> = $r7;

        virtualinvoke r0.<com.android.calendar.month.SimpleDayPickerFragment: boolean goTo(long,boolean,boolean,boolean)>(l0, 0, 1, 1);

        $r8 = new android.os.Handler;

        specialinvoke $r8.<android.os.Handler: void <init>()>();

        r0.<com.android.calendar.month.SimpleDayPickerFragment: android.os.Handler mHandler> = $r8;

        return;
    }

    public void onAttach(android.app.Activity)
    {
        com.android.calendar.month.SimpleDayPickerFragment r0;
        android.app.Activity r1;
        java.lang.String r2;
        android.view.ViewConfiguration r3;
        android.content.res.Resources r4, $r14;
        int $i0, $i4, $i5, $i6, $i8, $i10, $i11, $i12, $i13, $i14;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12;
        android.text.format.Time $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        com.android.calendar.month.SimpleWeeksAdapter $r12;
        byte $b7, $b9;
        android.util.DisplayMetrics $r13;

        r0 := @this: com.android.calendar.month.SimpleDayPickerFragment;

        r1 := @parameter0: android.app.Activity;

        specialinvoke r0.<android.app.ListFragment: void onAttach(android.app.Activity)>(r1);

        r0.<com.android.calendar.month.SimpleDayPickerFragment: android.content.Context mContext> = r1;

        r2 = staticinvoke <android.text.format.Time: java.lang.String getCurrentTimezone()>();

        r3 = staticinvoke <android.view.ViewConfiguration: android.view.ViewConfiguration get(android.content.Context)>(r1);

        $i0 = virtualinvoke r3.<android.view.ViewConfiguration: int getScaledMinimumFlingVelocity()>();

        $f0 = (float) $i0;

        r0.<com.android.calendar.month.SimpleDayPickerFragment: float mMinimumFlingVelocity> = $f0;

        $r5 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.text.format.Time mSelectedDay>;

        virtualinvoke $r5.<android.text.format.Time: void switchTimezone(java.lang.String)>(r2);

        $r6 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.text.format.Time mSelectedDay>;

        virtualinvoke $r6.<android.text.format.Time: long normalize(boolean)>(1);

        $r7 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.text.format.Time mFirstDayOfMonth>;

        $r7.<android.text.format.Time: java.lang.String timezone> = r2;

        $r8 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.text.format.Time mFirstDayOfMonth>;

        virtualinvoke $r8.<android.text.format.Time: long normalize(boolean)>(1);

        $r9 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.text.format.Time mFirstVisibleDay>;

        $r9.<android.text.format.Time: java.lang.String timezone> = r2;

        $r10 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.text.format.Time mFirstVisibleDay>;

        virtualinvoke $r10.<android.text.format.Time: long normalize(boolean)>(1);

        $r11 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.text.format.Time mTempTime>;

        $r11.<android.text.format.Time: java.lang.String timezone> = r2;

        r4 = virtualinvoke r1.<android.app.Activity: android.content.res.Resources getResources()>();

        $i5 = virtualinvoke r4.<android.content.res.Resources: int getColor(int)>(2131230753);

        r0.<com.android.calendar.month.SimpleDayPickerFragment: int mSaturdayColor> = $i5;

        $i4 = virtualinvoke r4.<android.content.res.Resources: int getColor(int)>(2131230754);

        r0.<com.android.calendar.month.SimpleDayPickerFragment: int mSundayColor> = $i4;

        $i6 = virtualinvoke r4.<android.content.res.Resources: int getColor(int)>(2131230747);

        r0.<com.android.calendar.month.SimpleDayPickerFragment: int mDayNameColor> = $i6;

        $f1 = <com.android.calendar.month.SimpleDayPickerFragment: float mScale>;

        $b7 = $f1 cmpl 0.0F;

        if $b7 != 0 goto label1;

        $r14 = virtualinvoke r1.<android.app.Activity: android.content.res.Resources getResources()>();

        $r13 = virtualinvoke $r14.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f3 = $r13.<android.util.DisplayMetrics: float density>;

        <com.android.calendar.month.SimpleDayPickerFragment: float mScale> = $f3;

        $f2 = <com.android.calendar.month.SimpleDayPickerFragment: float mScale>;

        $b9 = $f2 cmpl 1.0F;

        if $b9 == 0 goto label1;

        $i8 = r0.<com.android.calendar.month.SimpleDayPickerFragment: int WEEK_MIN_VISIBLE_HEIGHT>;

        $f6 = (float) $i8;

        $f5 = <com.android.calendar.month.SimpleDayPickerFragment: float mScale>;

        $f4 = $f6 * $f5;

        $i10 = (int) $f4;

        r0.<com.android.calendar.month.SimpleDayPickerFragment: int WEEK_MIN_VISIBLE_HEIGHT> = $i10;

        $i11 = r0.<com.android.calendar.month.SimpleDayPickerFragment: int BOTTOM_BUFFER>;

        $f7 = (float) $i11;

        $f9 = <com.android.calendar.month.SimpleDayPickerFragment: float mScale>;

        $f8 = $f7 * $f9;

        $i12 = (int) $f8;

        r0.<com.android.calendar.month.SimpleDayPickerFragment: int BOTTOM_BUFFER> = $i12;

        $i13 = <com.android.calendar.month.SimpleDayPickerFragment: int LIST_TOP_OFFSET>;

        $f11 = (float) $i13;

        $f10 = <com.android.calendar.month.SimpleDayPickerFragment: float mScale>;

        $f12 = $f11 * $f10;

        $i14 = (int) $f12;

        <com.android.calendar.month.SimpleDayPickerFragment: int LIST_TOP_OFFSET> = $i14;

     label1:
        virtualinvoke r0.<com.android.calendar.month.SimpleDayPickerFragment: void setUpAdapter()>();

        $r12 = r0.<com.android.calendar.month.SimpleDayPickerFragment: com.android.calendar.month.SimpleWeeksAdapter mAdapter>;

        virtualinvoke r0.<com.android.calendar.month.SimpleDayPickerFragment: void setListAdapter(android.widget.ListAdapter)>($r12);

        return;
    }

    protected void setUpAdapter()
    {
        com.android.calendar.month.SimpleDayPickerFragment r0;
        java.util.HashMap r1, $r2;
        int $i0, $i1, $i4;
        java.lang.Integer $r3, $r6, $r8, $r12;
        boolean $z0;
        android.text.format.Time $r10, $r11;
        long $l2, $l3;
        com.android.calendar.month.SimpleWeeksAdapter $r13, $r15, $r16, $r18, $r19;
        android.app.Activity $r17;
        android.database.DataSetObserver $r20;
        byte $b5;

        r0 := @this: com.android.calendar.month.SimpleDayPickerFragment;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r1 = $r2;

        $i0 = r0.<com.android.calendar.month.SimpleDayPickerFragment: int mNumWeeks>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("num_weeks", $r3);

        $z0 = r0.<com.android.calendar.month.SimpleDayPickerFragment: boolean mShowWeekNumber>;

        if $z0 == 0 goto label1;

        $b5 = 1;

        goto label2;

     label1:
        $b5 = 0;

     label2:
        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b5);

        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("week_numbers", $r6);

        $i1 = r0.<com.android.calendar.month.SimpleDayPickerFragment: int mFirstDayOfWeek>;

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("week_start", $r8);

        $r10 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.text.format.Time mSelectedDay>;

        $l2 = virtualinvoke $r10.<android.text.format.Time: long toMillis(boolean)>(0);

        $r11 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.text.format.Time mSelectedDay>;

        $l3 = $r11.<android.text.format.Time: long gmtoff>;

        $i4 = staticinvoke <android.text.format.Time: int getJulianDay(long,long)>($l2, $l3);

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        virtualinvoke r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("selected_day", $r12);

        $r13 = r0.<com.android.calendar.month.SimpleDayPickerFragment: com.android.calendar.month.SimpleWeeksAdapter mAdapter>;

        if $r13 != null goto label3;

        $r18 = new com.android.calendar.month.SimpleWeeksAdapter;

        $r17 = virtualinvoke r0.<com.android.calendar.month.SimpleDayPickerFragment: android.app.Activity getActivity()>();

        specialinvoke $r18.<com.android.calendar.month.SimpleWeeksAdapter: void <init>(android.content.Context,java.util.HashMap)>($r17, r1);

        r0.<com.android.calendar.month.SimpleDayPickerFragment: com.android.calendar.month.SimpleWeeksAdapter mAdapter> = $r18;

        $r19 = r0.<com.android.calendar.month.SimpleDayPickerFragment: com.android.calendar.month.SimpleWeeksAdapter mAdapter>;

        $r20 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.database.DataSetObserver mObserver>;

        virtualinvoke $r19.<com.android.calendar.month.SimpleWeeksAdapter: void registerDataSetObserver(android.database.DataSetObserver)>($r20);

        goto label4;

     label3:
        $r16 = r0.<com.android.calendar.month.SimpleDayPickerFragment: com.android.calendar.month.SimpleWeeksAdapter mAdapter>;

        virtualinvoke $r16.<com.android.calendar.month.SimpleWeeksAdapter: void updateParams(java.util.HashMap)>(r1);

     label4:
        $r15 = r0.<com.android.calendar.month.SimpleDayPickerFragment: com.android.calendar.month.SimpleWeeksAdapter mAdapter>;

        virtualinvoke $r15.<com.android.calendar.month.SimpleWeeksAdapter: void notifyDataSetChanged()>();

        return;
    }

    public void onCreate(android.os.Bundle)
    {
        com.android.calendar.month.SimpleDayPickerFragment r0;
        android.os.Bundle r1;
        boolean $z0;
        long $l0;

        r0 := @this: com.android.calendar.month.SimpleDayPickerFragment;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.ListFragment: void onCreate(android.os.Bundle)>(r1);

        if r1 == null goto label1;

        $z0 = virtualinvoke r1.<android.os.Bundle: boolean containsKey(java.lang.String)>("current_time");

        if $z0 == 0 goto label1;

        $l0 = virtualinvoke r1.<android.os.Bundle: long getLong(java.lang.String)>("current_time");

        virtualinvoke r0.<com.android.calendar.month.SimpleDayPickerFragment: boolean goTo(long,boolean,boolean,boolean)>($l0, 0, 1, 1);

     label1:
        return;
    }

    public void onActivityCreated(android.os.Bundle)
    {
        com.android.calendar.month.SimpleDayPickerFragment r0;
        android.os.Bundle r1;
        com.android.calendar.month.SimpleWeekView r2;
        int i0, $i2;
        android.view.View $r3, $r4, $r7;
        android.widget.TextView $r5;
        android.widget.ListView $r6;
        android.text.format.Time $r8, $r9, $r10;

        r0 := @this: com.android.calendar.month.SimpleDayPickerFragment;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.ListFragment: void onActivityCreated(android.os.Bundle)>(r1);

        virtualinvoke r0.<com.android.calendar.month.SimpleDayPickerFragment: void setUpListView()>();

        virtualinvoke r0.<com.android.calendar.month.SimpleDayPickerFragment: void setUpHeader()>();

        $r3 = virtualinvoke r0.<com.android.calendar.month.SimpleDayPickerFragment: android.view.View getView()>();

        $r4 = virtualinvoke $r3.<android.view.View: android.view.View findViewById(int)>(2131755187);

        $r5 = (android.widget.TextView) $r4;

        r0.<com.android.calendar.month.SimpleDayPickerFragment: android.widget.TextView mMonthName> = $r5;

        $r6 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.widget.ListView mListView>;

        $r7 = virtualinvoke $r6.<android.widget.ListView: android.view.View getChildAt(int)>(0);

        r2 = (com.android.calendar.month.SimpleWeekView) $r7;

        if r2 != null goto label1;

        return;

     label1:
        i0 = virtualinvoke r2.<com.android.calendar.month.SimpleWeekView: int getFirstJulianDay()>();

        $r8 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.text.format.Time mFirstVisibleDay>;

        virtualinvoke $r8.<android.text.format.Time: long setJulianDay(int)>(i0);

        $r9 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.text.format.Time mTempTime>;

        $i2 = i0 + 7;

        virtualinvoke $r9.<android.text.format.Time: long setJulianDay(int)>($i2);

        $r10 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.text.format.Time mTempTime>;

        virtualinvoke r0.<com.android.calendar.month.SimpleDayPickerFragment: void setMonthDisplayed(android.text.format.Time,boolean)>($r10, 1);

        return;
    }

    protected void setUpHeader()
    {
        com.android.calendar.month.SimpleDayPickerFragment r0;
        int i0, $i1;
        java.lang.String[] $r1, $r2;
        java.lang.String $r3, $r4;

        r0 := @this: com.android.calendar.month.SimpleDayPickerFragment;

        $r1 = newarray (java.lang.String)[7];

        r0.<com.android.calendar.month.SimpleDayPickerFragment: java.lang.String[] mDayLabels> = $r1;

        i0 = 1;

     label1:
        if i0 > 7 goto label2;

        $r2 = r0.<com.android.calendar.month.SimpleDayPickerFragment: java.lang.String[] mDayLabels>;

        $i1 = i0 - 1;

        $r3 = staticinvoke <android.text.format.DateUtils: java.lang.String getDayOfWeekString(int,int)>(i0, 50);

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String toUpperCase()>();

        $r2[$i1] = $r4;

        i0 = i0 + 1;

        goto label1;

     label2:
        return;
    }

    protected void setUpListView()
    {
        com.android.calendar.month.SimpleDayPickerFragment r0;
        android.widget.ListView $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;
        float $f0, $f1, $f2;

        r0 := @this: com.android.calendar.month.SimpleDayPickerFragment;

        $r1 = virtualinvoke r0.<com.android.calendar.month.SimpleDayPickerFragment: android.widget.ListView getListView()>();

        r0.<com.android.calendar.month.SimpleDayPickerFragment: android.widget.ListView mListView> = $r1;

        $r2 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.widget.ListView mListView>;

        virtualinvoke $r2.<android.widget.ListView: void setCacheColorHint(int)>(0);

        $r3 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.widget.ListView mListView>;

        virtualinvoke $r3.<android.widget.ListView: void setDivider(android.graphics.drawable.Drawable)>(null);

        $r4 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.widget.ListView mListView>;

        virtualinvoke $r4.<android.widget.ListView: void setItemsCanFocus(boolean)>(1);

        $r5 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.widget.ListView mListView>;

        virtualinvoke $r5.<android.widget.ListView: void setFastScrollEnabled(boolean)>(0);

        $r6 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.widget.ListView mListView>;

        virtualinvoke $r6.<android.widget.ListView: void setVerticalScrollBarEnabled(boolean)>(0);

        $r7 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.widget.ListView mListView>;

        virtualinvoke $r7.<android.widget.ListView: void setOnScrollListener(android.widget.AbsListView$OnScrollListener)>(r0);

        $r8 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.widget.ListView mListView>;

        virtualinvoke $r8.<android.widget.ListView: void setFadingEdgeLength(int)>(0);

        $r9 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.widget.ListView mListView>;

        $f0 = staticinvoke <android.view.ViewConfiguration: float getScrollFriction()>();

        $f1 = r0.<com.android.calendar.month.SimpleDayPickerFragment: float mFriction>;

        $f2 = $f0 * $f1;

        virtualinvoke $r9.<android.widget.ListView: void setFriction(float)>($f2);

        return;
    }

    public void onResume()
    {
        com.android.calendar.month.SimpleDayPickerFragment r0;

        r0 := @this: com.android.calendar.month.SimpleDayPickerFragment;

        specialinvoke r0.<android.app.ListFragment: void onResume()>();

        virtualinvoke r0.<com.android.calendar.month.SimpleDayPickerFragment: void setUpAdapter()>();

        virtualinvoke r0.<com.android.calendar.month.SimpleDayPickerFragment: void doResumeUpdates()>();

        return;
    }

    public void onPause()
    {
        com.android.calendar.month.SimpleDayPickerFragment r0;
        java.lang.Runnable $r1;
        android.os.Handler $r2;

        r0 := @this: com.android.calendar.month.SimpleDayPickerFragment;

        specialinvoke r0.<android.app.ListFragment: void onPause()>();

        $r2 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.os.Handler mHandler>;

        $r1 = r0.<com.android.calendar.month.SimpleDayPickerFragment: java.lang.Runnable mTodayUpdater>;

        virtualinvoke $r2.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>($r1);

        return;
    }

    public void onSaveInstanceState(android.os.Bundle)
    {
        com.android.calendar.month.SimpleDayPickerFragment r0;
        android.os.Bundle r1;
        android.text.format.Time $r2;
        long $l0;

        r0 := @this: com.android.calendar.month.SimpleDayPickerFragment;

        r1 := @parameter0: android.os.Bundle;

        $r2 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.text.format.Time mSelectedDay>;

        $l0 = virtualinvoke $r2.<android.text.format.Time: long toMillis(boolean)>(1);

        virtualinvoke r1.<android.os.Bundle: void putLong(java.lang.String,long)>("current_time", $l0);

        return;
    }

    protected void doResumeUpdates()
    {
        com.android.calendar.month.SimpleDayPickerFragment r0;
        java.util.Calendar r1;
        java.util.Locale $r2;
        int $i0, $i1;
        android.text.format.Time $r3, $r4;
        long $l2;
        com.android.calendar.month.SimpleWeeksAdapter $r5;
        java.lang.Runnable $r6;

        r0 := @this: com.android.calendar.month.SimpleDayPickerFragment;

        $r2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.Locale)>($r2);

        $i0 = virtualinvoke r1.<java.util.Calendar: int getFirstDayOfWeek()>();

        $i1 = $i0 - 1;

        r0.<com.android.calendar.month.SimpleDayPickerFragment: int mFirstDayOfWeek> = $i1;

        r0.<com.android.calendar.month.SimpleDayPickerFragment: boolean mShowWeekNumber> = 0;

        virtualinvoke r0.<com.android.calendar.month.SimpleDayPickerFragment: void updateHeader()>();

        $r3 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.text.format.Time mSelectedDay>;

        $l2 = virtualinvoke $r3.<android.text.format.Time: long toMillis(boolean)>(1);

        virtualinvoke r0.<com.android.calendar.month.SimpleDayPickerFragment: boolean goTo(long,boolean,boolean,boolean)>($l2, 0, 0, 0);

        $r5 = r0.<com.android.calendar.month.SimpleDayPickerFragment: com.android.calendar.month.SimpleWeeksAdapter mAdapter>;

        $r4 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.text.format.Time mSelectedDay>;

        virtualinvoke $r5.<com.android.calendar.month.SimpleWeeksAdapter: void setSelectedDay(android.text.format.Time)>($r4);

        $r6 = r0.<com.android.calendar.month.SimpleDayPickerFragment: java.lang.Runnable mTodayUpdater>;

        interfaceinvoke $r6.<java.lang.Runnable: void run()>();

        return;
    }

    protected void updateHeader()
    {
        com.android.calendar.month.SimpleDayPickerFragment r0;
        android.widget.TextView r1, r9;
        int i0, i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.view.ViewGroup $r2, $r4, $r5;
        android.view.View $r3, $r6;
        boolean $z0;
        java.lang.String[] $r7;
        java.lang.String $r8;

        r0 := @this: com.android.calendar.month.SimpleDayPickerFragment;

        $r2 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.view.ViewGroup mDayNamesHeader>;

        $r3 = virtualinvoke $r2.<android.view.ViewGroup: android.view.View findViewById(int)>(2131755189);

        r1 = (android.widget.TextView) $r3;

        $z0 = r0.<com.android.calendar.month.SimpleDayPickerFragment: boolean mShowWeekNumber>;

        if $z0 == 0 goto label1;

        virtualinvoke r1.<android.widget.TextView: void setVisibility(int)>(0);

        goto label2;

     label1:
        virtualinvoke r1.<android.widget.TextView: void setVisibility(int)>(8);

     label2:
        $i3 = r0.<com.android.calendar.month.SimpleDayPickerFragment: int mFirstDayOfWeek>;

        i0 = $i3 - 1;

        i1 = 1;

     label3:
        if i1 >= 8 goto label9;

        $r5 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.view.ViewGroup mDayNamesHeader>;

        $r6 = virtualinvoke $r5.<android.view.ViewGroup: android.view.View getChildAt(int)>(i1);

        r9 = (android.widget.TextView) $r6;

        $i4 = r0.<com.android.calendar.month.SimpleDayPickerFragment: int mDaysPerWeek>;

        $i5 = $i4 + 1;

        if i1 >= $i5 goto label7;

        $i6 = i0 + i1;

        i2 = $i6 % 7;

        $r7 = r0.<com.android.calendar.month.SimpleDayPickerFragment: java.lang.String[] mDayLabels>;

        $r8 = $r7[i2];

        virtualinvoke r9.<android.widget.TextView: void setText(java.lang.CharSequence)>($r8);

        virtualinvoke r9.<android.widget.TextView: void setVisibility(int)>(0);

        if i2 != 6 goto label4;

        $i8 = r0.<com.android.calendar.month.SimpleDayPickerFragment: int mSaturdayColor>;

        virtualinvoke r9.<android.widget.TextView: void setTextColor(int)>($i8);

        goto label6;

     label4:
        if i2 != 0 goto label5;

        $i9 = r0.<com.android.calendar.month.SimpleDayPickerFragment: int mSundayColor>;

        virtualinvoke r9.<android.widget.TextView: void setTextColor(int)>($i9);

        goto label6;

     label5:
        $i7 = r0.<com.android.calendar.month.SimpleDayPickerFragment: int mDayNameColor>;

        virtualinvoke r9.<android.widget.TextView: void setTextColor(int)>($i7);

     label6:
        goto label8;

     label7:
        virtualinvoke r9.<android.widget.TextView: void setVisibility(int)>(8);

     label8:
        i1 = i1 + 1;

        goto label3;

     label9:
        $r4 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.view.ViewGroup mDayNamesHeader>;

        virtualinvoke $r4.<android.view.ViewGroup: void invalidate()>();

        return;
    }

    public android.view.View onCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)
    {
        com.android.calendar.month.SimpleDayPickerFragment r0;
        android.view.LayoutInflater r1;
        android.view.ViewGroup r2, $r6;
        android.os.Bundle r3;
        android.view.View r4, $r5;

        r0 := @this: com.android.calendar.month.SimpleDayPickerFragment;

        r1 := @parameter0: android.view.LayoutInflater;

        r2 := @parameter1: android.view.ViewGroup;

        r3 := @parameter2: android.os.Bundle;

        r4 = virtualinvoke r1.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>(2130968630, r2, 0);

        $r5 = virtualinvoke r4.<android.view.View: android.view.View findViewById(int)>(2131755188);

        $r6 = (android.view.ViewGroup) $r5;

        r0.<com.android.calendar.month.SimpleDayPickerFragment: android.view.ViewGroup mDayNamesHeader> = $r6;

        return r4;
    }

    public long getSelectedTime()
    {
        com.android.calendar.month.SimpleDayPickerFragment r0;
        android.text.format.Time $r1;
        long $l0;

        r0 := @this: com.android.calendar.month.SimpleDayPickerFragment;

        $r1 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.text.format.Time mSelectedDay>;

        $l0 = virtualinvoke $r1.<android.text.format.Time: long toMillis(boolean)>(1);

        return $l0;
    }

    public boolean goTo(long, boolean, boolean, boolean)
    {
        com.android.calendar.month.SimpleDayPickerFragment r0;
        long l0, l1, $l9, $l16, l26;
        boolean z0, z1, z2, $z3, $z4, $z5, $z6;
        int i2, i3, i4, i5, i6, $i8, $i10, $i11, $i12, $i13, $i14, $i15, $i17, $i18, $i19, $i21, i27;
        android.view.View r1;
        byte $b7;
        android.text.format.Time $r2, $r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r15, $r22, $r25, $r30;
        android.widget.ListView $r5, $r12, $r13, $r16, $r20;
        java.lang.StringBuilder $r14, $r18, $r19, $r23, $r24, $r26, $r27, $r28;
        java.lang.String $r17, $r29;
        com.android.calendar.month.SimpleWeeksAdapter $r21;

        r0 := @this: com.android.calendar.month.SimpleDayPickerFragment;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        z2 := @parameter3: boolean;

        $b7 = l0 cmp -1L;

        if $b7 != 0 goto label01;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MonthFragment", "time is invalid");

        return 0;

     label01:
        if z1 == 0 goto label02;

        $r25 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.text.format.Time mSelectedDay>;

        virtualinvoke $r25.<android.text.format.Time: void set(long)>(l0);

        $r30 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.text.format.Time mSelectedDay>;

        virtualinvoke $r30.<android.text.format.Time: long normalize(boolean)>(1);

     label02:
        $z3 = virtualinvoke r0.<com.android.calendar.month.SimpleDayPickerFragment: boolean isResumed()>();

        if $z3 != 0 goto label04;

        $z6 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("MonthFragment", 3);

        if $z6 == 0 goto label03;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MonthFragment", "We\'re not visible yet");

     label03:
        return 0;

     label04:
        $r3 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.text.format.Time mTempTime>;

        virtualinvoke $r3.<android.text.format.Time: void set(long)>(l0);

        $r2 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.text.format.Time mTempTime>;

        l1 = virtualinvoke $r2.<android.text.format.Time: long normalize(boolean)>(1);

        $r4 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.text.format.Time mTempTime>;

        $l9 = $r4.<android.text.format.Time: long gmtoff>;

        $i8 = staticinvoke <android.text.format.Time: int getJulianDay(long,long)>(l1, $l9);

        $i10 = r0.<com.android.calendar.month.SimpleDayPickerFragment: int mFirstDayOfWeek>;

        i2 = staticinvoke <com.android.calendar.Utils: int getWeeksSinceEpochFromJulianDay(int,int)>($i8, $i10);

        i3 = 0;

        i4 = 0;

     label05:
        $r5 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.widget.ListView mListView>;

        $i11 = i3;

        i3 = i3 + 1;

        r1 = virtualinvoke $r5.<android.widget.ListView: android.view.View getChildAt(int)>($i11);

        if r1 != null goto label06;

        goto label08;

     label06:
        i4 = virtualinvoke r1.<android.view.View: int getTop()>();

        $z4 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("MonthFragment", 3);

        if $z4 == 0 goto label07;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("child at ");

        $i21 = i3 - 1;

        $r26 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i21);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has top ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MonthFragment", $r29);

     label07:
        if i4 < 0 goto label05;

     label08:
        if r1 == null goto label09;

        $r20 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.widget.ListView mListView>;

        i5 = virtualinvoke $r20.<android.widget.ListView: int getPositionForView(android.view.View)>(r1);

        goto label10;

     label09:
        i5 = 0;

     label10:
        $i12 = r0.<com.android.calendar.month.SimpleDayPickerFragment: int mNumWeeks>;

        $i14 = i5 + $i12;

        i6 = $i14 - 1;

        $i13 = r0.<com.android.calendar.month.SimpleDayPickerFragment: int BOTTOM_BUFFER>;

        if i4 <= $i13 goto label11;

        i6 = i6 + -1;

     label11:
        if z1 == 0 goto label12;

        $r21 = r0.<com.android.calendar.month.SimpleDayPickerFragment: com.android.calendar.month.SimpleWeeksAdapter mAdapter>;

        $r22 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.text.format.Time mSelectedDay>;

        virtualinvoke $r21.<com.android.calendar.month.SimpleWeeksAdapter: void setSelectedDay(android.text.format.Time)>($r22);

     label12:
        $z5 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("MonthFragment", 3);

        if $z5 == 0 goto label13;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GoTo position ");

        $r18 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MonthFragment", $r17);

     label13:
        if i2 < i5 goto label14;

        if i2 > i6 goto label14;

        if z2 == 0 goto label16;

     label14:
        $r6 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.text.format.Time mFirstDayOfMonth>;

        $r8 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.text.format.Time mTempTime>;

        virtualinvoke $r6.<android.text.format.Time: void set(android.text.format.Time)>($r8);

        $r7 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.text.format.Time mFirstDayOfMonth>;

        $r7.<android.text.format.Time: int monthDay> = 1;

        $r11 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.text.format.Time mFirstDayOfMonth>;

        l26 = virtualinvoke $r11.<android.text.format.Time: long normalize(boolean)>(1);

        $r9 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.text.format.Time mFirstDayOfMonth>;

        virtualinvoke r0.<com.android.calendar.month.SimpleDayPickerFragment: void setMonthDisplayed(android.text.format.Time,boolean)>($r9, 1);

        $r10 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.text.format.Time mFirstDayOfMonth>;

        $l16 = $r10.<android.text.format.Time: long gmtoff>;

        $i17 = staticinvoke <android.text.format.Time: int getJulianDay(long,long)>(l26, $l16);

        $i15 = r0.<com.android.calendar.month.SimpleDayPickerFragment: int mFirstDayOfWeek>;

        i27 = staticinvoke <com.android.calendar.Utils: int getWeeksSinceEpochFromJulianDay(int,int)>($i17, $i15);

        r0.<com.android.calendar.month.SimpleDayPickerFragment: int mPreviousScrollState> = 2;

        if z0 == 0 goto label15;

        $r16 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.widget.ListView mListView>;

        $i18 = <com.android.calendar.month.SimpleDayPickerFragment: int LIST_TOP_OFFSET>;

        virtualinvoke $r16.<android.widget.ListView: void smoothScrollToPositionFromTop(int,int,int)>(i27, $i18, 500);

        return 1;

     label15:
        $r13 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.widget.ListView mListView>;

        $i19 = <com.android.calendar.month.SimpleDayPickerFragment: int LIST_TOP_OFFSET>;

        virtualinvoke $r13.<android.widget.ListView: void setSelectionFromTop(int,int)>(i27, $i19);

        $r12 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.widget.ListView mListView>;

        virtualinvoke r0.<com.android.calendar.month.SimpleDayPickerFragment: void onScrollStateChanged(android.widget.AbsListView,int)>($r12, 0);

        goto label17;

     label16:
        if z1 == 0 goto label17;

        $r15 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.text.format.Time mSelectedDay>;

        virtualinvoke r0.<com.android.calendar.month.SimpleDayPickerFragment: void setMonthDisplayed(android.text.format.Time,boolean)>($r15, 1);

     label17:
        return 0;
    }

    public void onScroll(android.widget.AbsListView, int, int, int)
    {
        com.android.calendar.month.SimpleDayPickerFragment r0;
        android.widget.AbsListView r1;
        int i0, i1, i2, $i4, $i5, $i6, $i7, $i8, $i9, $i14;
        com.android.calendar.month.SimpleWeekView r2;
        long l3, $l10, $l12;
        android.view.View $r3;
        android.text.format.Time $r4;
        byte $b13, $b15;
        android.widget.ListView $r5;

        r0 := @this: com.android.calendar.month.SimpleDayPickerFragment;

        r1 := @parameter0: android.widget.AbsListView;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r3 = virtualinvoke r1.<android.widget.AbsListView: android.view.View getChildAt(int)>(0);

        r2 = (com.android.calendar.month.SimpleWeekView) $r3;

        if r2 != null goto label1;

        return;

     label1:
        $i4 = virtualinvoke r1.<android.widget.AbsListView: int getFirstVisiblePosition()>();

        $i5 = virtualinvoke r2.<com.android.calendar.month.SimpleWeekView: int getHeight()>();

        $i6 = $i4 * $i5;

        $i7 = virtualinvoke r2.<com.android.calendar.month.SimpleWeekView: int getBottom()>();

        $i8 = $i6 - $i7;

        l3 = (long) $i8;

        $r4 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.text.format.Time mFirstVisibleDay>;

        $i9 = virtualinvoke r2.<com.android.calendar.month.SimpleWeekView: int getFirstJulianDay()>();

        virtualinvoke $r4.<android.text.format.Time: long setJulianDay(int)>($i9);

        $l10 = r0.<com.android.calendar.month.SimpleDayPickerFragment: long mPreviousScrollPosition>;

        $b13 = l3 cmp $l10;

        if $b13 >= 0 goto label2;

        r0.<com.android.calendar.month.SimpleDayPickerFragment: boolean mIsScrollingUp> = 1;

        goto label4;

     label2:
        $l12 = r0.<com.android.calendar.month.SimpleDayPickerFragment: long mPreviousScrollPosition>;

        $b15 = l3 cmp $l12;

        if $b15 <= 0 goto label3;

        r0.<com.android.calendar.month.SimpleDayPickerFragment: boolean mIsScrollingUp> = 0;

        goto label4;

     label3:
        return;

     label4:
        r0.<com.android.calendar.month.SimpleDayPickerFragment: long mPreviousScrollPosition> = l3;

        $i14 = r0.<com.android.calendar.month.SimpleDayPickerFragment: int mCurrentScrollState>;

        r0.<com.android.calendar.month.SimpleDayPickerFragment: int mPreviousScrollState> = $i14;

        $r5 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.widget.ListView mListView>;

        specialinvoke r0.<com.android.calendar.month.SimpleDayPickerFragment: void updateMonthHighlight(android.widget.AbsListView)>($r5);

        return;
    }

    private void updateMonthHighlight(android.widget.AbsListView)
    {
        com.android.calendar.month.SimpleDayPickerFragment r0;
        android.widget.AbsListView r1;
        com.android.calendar.month.SimpleWeekView r2, r7;
        byte b0, $b11;
        int i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9;
        android.view.View $r3, $r4;
        boolean $z0, $z1;
        android.text.format.Time $r5, $r6;

        r0 := @this: com.android.calendar.month.SimpleDayPickerFragment;

        r1 := @parameter0: android.widget.AbsListView;

        $r3 = virtualinvoke r1.<android.widget.AbsListView: android.view.View getChildAt(int)>(0);

        r2 = (com.android.calendar.month.SimpleWeekView) $r3;

        if r2 != null goto label01;

        return;

     label01:
        $i4 = virtualinvoke r2.<com.android.calendar.month.SimpleWeekView: int getBottom()>();

        $i5 = r0.<com.android.calendar.month.SimpleDayPickerFragment: int WEEK_MIN_VISIBLE_HEIGHT>;

        if $i4 >= $i5 goto label02;

        $b11 = 1;

        goto label03;

     label02:
        $b11 = 0;

     label03:
        b0 = $b11;

        $i6 = 2 + b0;

        $r4 = virtualinvoke r1.<android.widget.AbsListView: android.view.View getChildAt(int)>($i6);

        r7 = (com.android.calendar.month.SimpleWeekView) $r4;

        if r7 != null goto label04;

        return;

     label04:
        $z0 = r0.<com.android.calendar.month.SimpleDayPickerFragment: boolean mIsScrollingUp>;

        if $z0 == 0 goto label05;

        i1 = virtualinvoke r7.<com.android.calendar.month.SimpleWeekView: int getFirstMonth()>();

        goto label06;

     label05:
        i1 = virtualinvoke r7.<com.android.calendar.month.SimpleWeekView: int getLastMonth()>();

     label06:
        $i7 = r0.<com.android.calendar.month.SimpleDayPickerFragment: int mCurrentMonthDisplayed>;

        if $i7 != 11 goto label07;

        if i1 != 0 goto label07;

        i2 = 1;

        goto label09;

     label07:
        $i8 = r0.<com.android.calendar.month.SimpleDayPickerFragment: int mCurrentMonthDisplayed>;

        if $i8 != 0 goto label08;

        if i1 != 11 goto label08;

        i2 = -1;

        goto label09;

     label08:
        $i9 = r0.<com.android.calendar.month.SimpleDayPickerFragment: int mCurrentMonthDisplayed>;

        i2 = i1 - $i9;

     label09:
        if i2 == 0 goto label12;

        i3 = virtualinvoke r7.<com.android.calendar.month.SimpleWeekView: int getFirstJulianDay()>();

        $z1 = r0.<com.android.calendar.month.SimpleDayPickerFragment: boolean mIsScrollingUp>;

        if $z1 == 0 goto label10;

        goto label11;

     label10:
        i3 = i3 + 7;

     label11:
        $r5 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.text.format.Time mTempTime>;

        virtualinvoke $r5.<android.text.format.Time: long setJulianDay(int)>(i3);

        $r6 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.text.format.Time mTempTime>;

        virtualinvoke r0.<com.android.calendar.month.SimpleDayPickerFragment: void setMonthDisplayed(android.text.format.Time,boolean)>($r6, 0);

     label12:
        return;
    }

    protected void setMonthDisplayed(android.text.format.Time, boolean)
    {
        com.android.calendar.month.SimpleDayPickerFragment r0;
        android.text.format.Time r1;
        boolean z0, $z1;
        java.lang.CharSequence r2, $r9;
        android.widget.TextView $r3, $r5, $r7, $r8, $r11;
        android.content.Context $r4;
        java.lang.String $r6;
        int $i0, $i1;
        com.android.calendar.month.SimpleWeeksAdapter $r10;

        r0 := @this: com.android.calendar.month.SimpleDayPickerFragment;

        r1 := @parameter0: android.text.format.Time;

        z0 := @parameter1: boolean;

        $r3 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.widget.TextView mMonthName>;

        r2 = virtualinvoke $r3.<android.widget.TextView: java.lang.CharSequence getText()>();

        $r5 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.widget.TextView mMonthName>;

        $r4 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.content.Context mContext>;

        $r6 = staticinvoke <com.android.calendar.Utils: java.lang.String formatMonthYear(android.content.Context,android.text.format.Time)>($r4, r1);

        virtualinvoke $r5.<android.widget.TextView: void setText(java.lang.CharSequence)>($r6);

        $r7 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.widget.TextView mMonthName>;

        virtualinvoke $r7.<android.widget.TextView: void invalidate()>();

        $r8 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.widget.TextView mMonthName>;

        $r9 = virtualinvoke $r8.<android.widget.TextView: java.lang.CharSequence getText()>();

        $z1 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r2, $r9);

        if $z1 != 0 goto label1;

        $r11 = r0.<com.android.calendar.month.SimpleDayPickerFragment: android.widget.TextView mMonthName>;

        virtualinvoke $r11.<android.widget.TextView: void sendAccessibilityEvent(int)>(8);

     label1:
        $i0 = r1.<android.text.format.Time: int month>;

        r0.<com.android.calendar.month.SimpleDayPickerFragment: int mCurrentMonthDisplayed> = $i0;

        if z0 == 0 goto label2;

        $r10 = r0.<com.android.calendar.month.SimpleDayPickerFragment: com.android.calendar.month.SimpleWeeksAdapter mAdapter>;

        $i1 = r0.<com.android.calendar.month.SimpleDayPickerFragment: int mCurrentMonthDisplayed>;

        virtualinvoke $r10.<com.android.calendar.month.SimpleWeeksAdapter: void updateFocusMonth(int)>($i1);

     label2:
        return;
    }

    public void onScrollStateChanged(android.widget.AbsListView, int)
    {
        com.android.calendar.month.SimpleDayPickerFragment r0;
        android.widget.AbsListView r1;
        int i0;
        com.android.calendar.month.SimpleDayPickerFragment$ScrollStateRunnable $r2;

        r0 := @this: com.android.calendar.month.SimpleDayPickerFragment;

        r1 := @parameter0: android.widget.AbsListView;

        i0 := @parameter1: int;

        $r2 = r0.<com.android.calendar.month.SimpleDayPickerFragment: com.android.calendar.month.SimpleDayPickerFragment$ScrollStateRunnable mScrollStateChangedRunnable>;

        virtualinvoke $r2.<com.android.calendar.month.SimpleDayPickerFragment$ScrollStateRunnable: void doScrollStateChange(android.widget.AbsListView,int)>(r1, i0);

        return;
    }

    static void <clinit>()
    {
        <com.android.calendar.month.SimpleDayPickerFragment: int MINI_MONTH_NAME_TEXT_SIZE> = 18;

        <com.android.calendar.month.SimpleDayPickerFragment: int DAYS_PER_WEEK> = 7;

        <com.android.calendar.month.SimpleDayPickerFragment: int SCROLL_CHANGE_DELAY> = 40;

        <com.android.calendar.month.SimpleDayPickerFragment: int GOTO_SCROLL_DURATION> = 500;

        <com.android.calendar.month.SimpleDayPickerFragment: int SCROLL_HYST_WEEKS> = 2;

        <com.android.calendar.month.SimpleDayPickerFragment: java.lang.String KEY_CURRENT_TIME> = "current_time";

        <com.android.calendar.month.SimpleDayPickerFragment: java.lang.String TAG> = "MonthFragment";

        <com.android.calendar.month.SimpleDayPickerFragment: int LIST_TOP_OFFSET> = -1;

        <com.android.calendar.month.SimpleDayPickerFragment: float mScale> = 0.0F;

        return;
    }
}
