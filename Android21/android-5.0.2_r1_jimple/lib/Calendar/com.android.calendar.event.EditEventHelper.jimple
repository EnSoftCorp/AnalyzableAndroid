public class com.android.calendar.event.EditEventHelper extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final boolean DEBUG;
    private com.android.calendarcommon2.EventRecurrence mEventRecurrence;
    private static final java.lang.String NO_EVENT_COLOR;
    public static final java.lang.String[] EVENT_PROJECTION;
    protected static final int EVENT_INDEX_ID;
    protected static final int EVENT_INDEX_TITLE;
    protected static final int EVENT_INDEX_DESCRIPTION;
    protected static final int EVENT_INDEX_EVENT_LOCATION;
    protected static final int EVENT_INDEX_ALL_DAY;
    protected static final int EVENT_INDEX_HAS_ALARM;
    protected static final int EVENT_INDEX_CALENDAR_ID;
    protected static final int EVENT_INDEX_DTSTART;
    protected static final int EVENT_INDEX_DTEND;
    protected static final int EVENT_INDEX_DURATION;
    protected static final int EVENT_INDEX_TIMEZONE;
    protected static final int EVENT_INDEX_RRULE;
    protected static final int EVENT_INDEX_SYNC_ID;
    protected static final int EVENT_INDEX_AVAILABILITY;
    protected static final int EVENT_INDEX_ACCESS_LEVEL;
    protected static final int EVENT_INDEX_OWNER_ACCOUNT;
    protected static final int EVENT_INDEX_HAS_ATTENDEE_DATA;
    protected static final int EVENT_INDEX_ORIGINAL_SYNC_ID;
    protected static final int EVENT_INDEX_ORGANIZER;
    protected static final int EVENT_INDEX_GUESTS_CAN_MODIFY;
    protected static final int EVENT_INDEX_ORIGINAL_ID;
    protected static final int EVENT_INDEX_EVENT_STATUS;
    protected static final int EVENT_INDEX_CALENDAR_COLOR;
    protected static final int EVENT_INDEX_EVENT_COLOR;
    protected static final int EVENT_INDEX_EVENT_COLOR_KEY;
    public static final java.lang.String[] REMINDERS_PROJECTION;
    public static final int REMINDERS_INDEX_MINUTES;
    public static final int REMINDERS_INDEX_METHOD;
    public static final java.lang.String REMINDERS_WHERE;
    static final java.lang.String ATTENDEES_DELETE_PREFIX;
    public static final int DOES_NOT_REPEAT;
    public static final int REPEATS_DAILY;
    public static final int REPEATS_EVERY_WEEKDAY;
    public static final int REPEATS_WEEKLY_ON_DAY;
    public static final int REPEATS_MONTHLY_ON_DAY_COUNT;
    public static final int REPEATS_MONTHLY_ON_DAY;
    public static final int REPEATS_YEARLY;
    public static final int REPEATS_CUSTOM;
    protected static final int MODIFY_UNINITIALIZED;
    protected static final int MODIFY_SELECTED;
    protected static final int MODIFY_ALL_FOLLOWING;
    protected static final int MODIFY_ALL;
    protected static final int DAY_IN_SECONDS;
    private final com.android.calendar.AsyncQueryService mService;
    protected boolean mEventOk;
    public static final int ATTENDEE_ID_NONE;
    public static final int[] ATTENDEE_VALUES;
    public static final java.lang.String EVENT_ALL_DAY;
    static final java.lang.String[] CALENDARS_PROJECTION;
    static final int CALENDARS_INDEX_ID;
    static final int CALENDARS_INDEX_DISPLAY_NAME;
    static final int CALENDARS_INDEX_OWNER_ACCOUNT;
    static final int CALENDARS_INDEX_COLOR;
    static final int CALENDARS_INDEX_CAN_ORGANIZER_RESPOND;
    static final int CALENDARS_INDEX_ACCESS_LEVEL;
    static final int CALENDARS_INDEX_VISIBLE;
    static final int CALENDARS_INDEX_MAX_REMINDERS;
    static final int CALENDARS_INDEX_ALLOWED_REMINDERS;
    static final int CALENDARS_INDEX_ALLOWED_ATTENDEE_TYPES;
    static final int CALENDARS_INDEX_ALLOWED_AVAILABILITY;
    static final int CALENDARS_INDEX_ACCOUNT_NAME;
    static final int CALENDARS_INDEX_ACCOUNT_TYPE;
    static final java.lang.String CALENDARS_WHERE_WRITEABLE_VISIBLE;
    static final java.lang.String CALENDARS_WHERE;
    static final java.lang.String[] COLORS_PROJECTION;
    static final java.lang.String COLORS_WHERE;
    static final int COLORS_INDEX_ACCOUNT_NAME;
    static final int COLORS_INDEX_ACCOUNT_TYPE;
    static final int COLORS_INDEX_COLOR;
    static final int COLORS_INDEX_COLOR_KEY;
    static final java.lang.String[] ATTENDEES_PROJECTION;
    static final int ATTENDEES_INDEX_ID;
    static final int ATTENDEES_INDEX_NAME;
    static final int ATTENDEES_INDEX_EMAIL;
    static final int ATTENDEES_INDEX_RELATIONSHIP;
    static final int ATTENDEES_INDEX_STATUS;
    static final java.lang.String ATTENDEES_WHERE;

    public void <init>(android.content.Context)
    {
        com.android.calendar.event.EditEventHelper r0;
        android.content.Context r1;
        com.android.calendarcommon2.EventRecurrence $r2;
        com.android.calendar.AbstractCalendarActivity $r3;
        com.android.calendar.AsyncQueryService $r4;

        r0 := @this: com.android.calendar.event.EditEventHelper;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new com.android.calendarcommon2.EventRecurrence;

        specialinvoke $r2.<com.android.calendarcommon2.EventRecurrence: void <init>()>();

        r0.<com.android.calendar.event.EditEventHelper: com.android.calendarcommon2.EventRecurrence mEventRecurrence> = $r2;

        r0.<com.android.calendar.event.EditEventHelper: boolean mEventOk> = 1;

        $r3 = (com.android.calendar.AbstractCalendarActivity) r1;

        $r4 = virtualinvoke $r3.<com.android.calendar.AbstractCalendarActivity: com.android.calendar.AsyncQueryService getAsyncQueryService()>();

        r0.<com.android.calendar.event.EditEventHelper: com.android.calendar.AsyncQueryService mService> = $r4;

        return;
    }

    public void <init>(android.content.Context, com.android.calendar.CalendarEventModel)
    {
        com.android.calendar.event.EditEventHelper r0;
        android.content.Context r1;
        com.android.calendar.CalendarEventModel r2;

        r0 := @this: com.android.calendar.event.EditEventHelper;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.calendar.CalendarEventModel;

        specialinvoke r0.<com.android.calendar.event.EditEventHelper: void <init>(android.content.Context)>(r1);

        return;
    }

    public boolean saveEvent(com.android.calendar.CalendarEventModel, com.android.calendar.CalendarEventModel, int)
    {
        com.android.calendar.event.EditEventHelper r0;
        com.android.calendar.CalendarEventModel r1, r2;
        int i0, i1, i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i17, $i18, $i19, $i22, $i24, $i26, i34;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6, $z8, $z10, $z11, $z13, $z14, $z17, $z19, $z22, $z23, $z27, $z29, $z34, $z36, $z37, z39, z40;
        java.util.ArrayList r3, r6, r8, $r20, $r28;
        android.content.ContentValues r4;
        android.net.Uri r5, $r39, $r44, $r47, $r60, $r69, $r74, $r75, $r87, $r96, $r105, $r111, r126;
        android.content.ContentProviderOperation$Builder r7, r9, $r38, $r45, $r63, $r71, $r73, $r76, $r77, $r80, $r81, $r83, $r85, $r86, $r89, $r93, $r94, $r97, $r104, $r115, $r116, $r117, $r118, $r122, r123, r125, r127, r129, r133;
        java.lang.String r10, r12, r15, r19, $r21, $r24, $r25, $r26, $r32, $r35, $r46, $r49, $r68, $r79, $r91, $r92, $r108, $r114, $r120, r124, r128;
        java.util.LinkedHashMap r11, r14, $r61;
        long l3, $l11, $l15, $l16, $l20, $l21, $l23, l32, l33;
        java.util.LinkedList r13, $r31;
        java.util.Iterator r16, r17, r131;
        java.lang.StringBuilder r18, $r51;
        java.lang.Integer $r23, $r34, $r36, $r37, $r59, $r64, $r65, $r66, $r88, $r95, $r103, $r106, $r110, $r113;
        com.android.calendar.AsyncQueryService $r27, $r29;
        java.util.Collection $r30;
        java.lang.Object $r33, $r53, $r56;
        java.lang.Long $r40, $r58, $r70, $r109;
        java.util.Set $r42;
        android.content.ContentProviderOperation $r43, $r50, $r62, $r72, $r78, $r82, $r84, $r90, $r98, $r99, $r100, $r102, $r112, $r119, $r121;
        byte $b25, $b31;
        java.lang.String[] r130;
        com.android.calendar.CalendarEventModel$Attendee r132;

        r0 := @this: com.android.calendar.event.EditEventHelper;

        r1 := @parameter0: com.android.calendar.CalendarEventModel;

        r2 := @parameter1: com.android.calendar.CalendarEventModel;

        i0 := @parameter2: int;

        z0 = 0;

        $z2 = r0.<com.android.calendar.event.EditEventHelper: boolean mEventOk>;

        if $z2 != 0 goto label01;

        return 0;

     label01:
        if r1 != null goto label02;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("EditEventHelper", "Attempted to save null model.");

        return 0;

     label02:
        $z3 = virtualinvoke r1.<com.android.calendar.CalendarEventModel: boolean isValid()>();

        if $z3 != 0 goto label03;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("EditEventHelper", "Attempted to save invalid model.");

        return 0;

     label03:
        if r2 == null goto label04;

        $z36 = staticinvoke <com.android.calendar.event.EditEventHelper: boolean isSameEvent(com.android.calendar.CalendarEventModel,com.android.calendar.CalendarEventModel)>(r1, r2);

        if $z36 != 0 goto label04;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("EditEventHelper", "Attempted to update existing event but models didn\'t refer to the same event.");

        return 0;

     label04:
        if r2 == null goto label05;

        $z37 = virtualinvoke r1.<com.android.calendar.CalendarEventModel: boolean isUnchanged(com.android.calendar.CalendarEventModel)>(r2);

        if $z37 == 0 goto label05;

        return 0;

     label05:
        $r20 = new java.util.ArrayList;

        specialinvoke $r20.<java.util.ArrayList: void <init>()>();

        r3 = $r20;

        i1 = -1;

        r4 = virtualinvoke r0.<com.android.calendar.event.EditEventHelper: android.content.ContentValues getContentValuesFromModel(com.android.calendar.CalendarEventModel)>(r1);

        $r21 = r1.<com.android.calendar.CalendarEventModel: java.lang.String mUri>;

        if $r21 == null goto label06;

        if r2 != null goto label06;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("EditEventHelper", "Existing event but no originalModel provided. Aborting save.");

        return 0;

     label06:
        r5 = null;

        $r24 = r1.<com.android.calendar.CalendarEventModel: java.lang.String mUri>;

        if $r24 == null goto label07;

        $r120 = r1.<com.android.calendar.CalendarEventModel: java.lang.String mUri>;

        r5 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r120);

     label07:
        r6 = r1.<com.android.calendar.CalendarEventModel: java.util.ArrayList mReminders>;

        i2 = virtualinvoke r6.<java.util.ArrayList: int size()>();

        if i2 <= 0 goto label08;

        $b31 = 1;

        goto label09;

     label08:
        $b31 = 0;

     label09:
        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b31);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("hasAlarm", $r23);

        if r5 != null goto label10;

        $r113 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("hasAttendeeData", $r113);

        $r110 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("eventStatus", $r110);

        i1 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        $r111 = <android.provider.CalendarContract$Events: android.net.Uri CONTENT_URI>;

        $r122 = staticinvoke <android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newInsert(android.net.Uri)>($r111);

        r7 = virtualinvoke $r122.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValues(android.content.ContentValues)>(r4);

        $r121 = virtualinvoke r7.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation build()>();

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r121);

        z0 = 1;

        goto label24;

     label10:
        $r26 = r1.<com.android.calendar.CalendarEventModel: java.lang.String mRrule>;

        $z5 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r26);

        if $z5 == 0 goto label11;

        $r114 = r2.<com.android.calendar.CalendarEventModel: java.lang.String mRrule>;

        $z34 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r114);

        if $z34 == 0 goto label11;

        virtualinvoke r0.<com.android.calendar.event.EditEventHelper: void checkTimeDependentFields(com.android.calendar.CalendarEventModel,com.android.calendar.CalendarEventModel,android.content.ContentValues,int)>(r2, r1, r4, i0);

        $r115 = staticinvoke <android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newUpdate(android.net.Uri)>(r5);

        $r116 = virtualinvoke $r115.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValues(android.content.ContentValues)>(r4);

        $r112 = virtualinvoke $r116.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation build()>();

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r112);

        goto label24;

     label11:
        $r25 = r2.<com.android.calendar.CalendarEventModel: java.lang.String mRrule>;

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r25);

        if $z4 == 0 goto label12;

        $r117 = staticinvoke <android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newUpdate(android.net.Uri)>(r5);

        $r118 = virtualinvoke $r117.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValues(android.content.ContentValues)>(r4);

        $r119 = virtualinvoke $r118.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation build()>();

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r119);

        goto label24;

     label12:
        if i0 != 1 goto label15;

        l32 = r1.<com.android.calendar.CalendarEventModel: long mOriginalStart>;

        $r108 = r2.<com.android.calendar.CalendarEventModel: java.lang.String mSyncId>;

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("original_sync_id", $r108);

        $r109 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l32);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("originalInstanceTime", $r109);

        z1 = r2.<com.android.calendar.CalendarEventModel: boolean mAllDay>;

        if z1 == 0 goto label13;

        $b25 = 1;

        goto label14;

     label13:
        $b25 = 0;

     label14:
        $r106 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b25);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("originalAllDay", $r106);

        $i26 = r2.<com.android.calendar.CalendarEventModel: int mEventStatus>;

        $r103 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i26);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("eventStatus", $r103);

        i1 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        $r105 = <android.provider.CalendarContract$Events: android.net.Uri CONTENT_URI>;

        $r104 = staticinvoke <android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newInsert(android.net.Uri)>($r105);

        r9 = virtualinvoke $r104.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValues(android.content.ContentValues)>(r4);

        $r102 = virtualinvoke r9.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation build()>();

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r102);

        z0 = 1;

        goto label24;

     label15:
        if i0 != 2 goto label22;

        $r79 = r1.<com.android.calendar.CalendarEventModel: java.lang.String mRrule>;

        $z22 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r79);

        if $z22 == 0 goto label18;

        $z29 = staticinvoke <com.android.calendar.event.EditEventHelper: boolean isFirstEventInSeries(com.android.calendar.CalendarEventModel,com.android.calendar.CalendarEventModel)>(r1, r2);

        if $z29 == 0 goto label16;

        $r97 = staticinvoke <android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newDelete(android.net.Uri)>(r5);

        $r98 = virtualinvoke $r97.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation build()>();

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r98);

        goto label17;

     label16:
        $l23 = r1.<com.android.calendar.CalendarEventModel: long mOriginalStart>;

        virtualinvoke r0.<com.android.calendar.event.EditEventHelper: java.lang.String updatePastEvents(java.util.ArrayList,com.android.calendar.CalendarEventModel,long)>(r3, r2, $l23);

     label17:
        i1 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        $i24 = r2.<com.android.calendar.CalendarEventModel: int mEventStatus>;

        $r95 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i24);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("eventStatus", $r95);

        $r96 = <android.provider.CalendarContract$Events: android.net.Uri CONTENT_URI>;

        $r93 = staticinvoke <android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newInsert(android.net.Uri)>($r96);

        $r94 = virtualinvoke $r93.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValues(android.content.ContentValues)>(r4);

        $r99 = virtualinvoke $r94.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation build()>();

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r99);

        goto label21;

     label18:
        $z23 = staticinvoke <com.android.calendar.event.EditEventHelper: boolean isFirstEventInSeries(com.android.calendar.CalendarEventModel,com.android.calendar.CalendarEventModel)>(r1, r2);

        if $z23 == 0 goto label19;

        virtualinvoke r0.<com.android.calendar.event.EditEventHelper: void checkTimeDependentFields(com.android.calendar.CalendarEventModel,com.android.calendar.CalendarEventModel,android.content.ContentValues,int)>(r2, r1, r4, i0);

        $r89 = staticinvoke <android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newUpdate(android.net.Uri)>(r5);

        r123 = virtualinvoke $r89.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValues(android.content.ContentValues)>(r4);

        $r100 = virtualinvoke r123.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation build()>();

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r100);

        goto label21;

     label19:
        $l21 = r1.<com.android.calendar.CalendarEventModel: long mOriginalStart>;

        r124 = virtualinvoke r0.<com.android.calendar.event.EditEventHelper: java.lang.String updatePastEvents(java.util.ArrayList,com.android.calendar.CalendarEventModel,long)>(r3, r2, $l21);

        $r91 = r1.<com.android.calendar.CalendarEventModel: java.lang.String mRrule>;

        $r92 = r2.<com.android.calendar.CalendarEventModel: java.lang.String mRrule>;

        $z27 = virtualinvoke $r91.<java.lang.String: boolean equals(java.lang.Object)>($r92);

        if $z27 == 0 goto label20;

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("rrule", r124);

     label20:
        i1 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        $i22 = r2.<com.android.calendar.CalendarEventModel: int mEventStatus>;

        $r88 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i22);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("eventStatus", $r88);

        $r87 = <android.provider.CalendarContract$Events: android.net.Uri CONTENT_URI>;

        $r86 = staticinvoke <android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newInsert(android.net.Uri)>($r87);

        $r85 = virtualinvoke $r86.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValues(android.content.ContentValues)>(r4);

        $r90 = virtualinvoke $r85.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation build()>();

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r90);

     label21:
        z0 = 1;

        goto label24;

     label22:
        if i0 != 3 goto label24;

        $r68 = r1.<com.android.calendar.CalendarEventModel: java.lang.String mRrule>;

        $z19 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r68);

        if $z19 == 0 goto label23;

        $r83 = staticinvoke <android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newDelete(android.net.Uri)>(r5);

        $r84 = virtualinvoke $r83.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation build()>();

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r84);

        i1 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        $r75 = <android.provider.CalendarContract$Events: android.net.Uri CONTENT_URI>;

        $r76 = staticinvoke <android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newInsert(android.net.Uri)>($r75);

        $r77 = virtualinvoke $r76.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValues(android.content.ContentValues)>(r4);

        $r78 = virtualinvoke $r77.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation build()>();

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r78);

        z0 = 1;

        goto label24;

     label23:
        virtualinvoke r0.<com.android.calendar.event.EditEventHelper: void checkTimeDependentFields(com.android.calendar.CalendarEventModel,com.android.calendar.CalendarEventModel,android.content.ContentValues,int)>(r2, r1, r4, i0);

        $r80 = staticinvoke <android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newUpdate(android.net.Uri)>(r5);

        $r81 = virtualinvoke $r80.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValues(android.content.ContentValues)>(r4);

        $r82 = virtualinvoke $r81.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation build()>();

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r82);

     label24:
        if i1 == -1 goto label25;

        $z17 = 1;

        goto label26;

     label25:
        $z17 = 0;

     label26:
        z39 = $z17;

        if r2 == null goto label27;

        r8 = r2.<com.android.calendar.CalendarEventModel: java.util.ArrayList mReminders>;

        goto label28;

     label27:
        $r28 = new java.util.ArrayList;

        specialinvoke $r28.<java.util.ArrayList: void <init>()>();

        r8 = $r28;

     label28:
        if z39 == 0 goto label29;

        staticinvoke <com.android.calendar.event.EditEventHelper: boolean saveRemindersWithBackRef(java.util.ArrayList,int,java.util.ArrayList,java.util.ArrayList,boolean)>(r3, i1, r6, r8, z0);

        goto label30;

     label29:
        if r5 == null goto label30;

        l33 = staticinvoke <android.content.ContentUris: long parseId(android.net.Uri)>(r5);

        staticinvoke <com.android.calendar.event.EditEventHelper: boolean saveReminders(java.util.ArrayList,long,java.util.ArrayList,java.util.ArrayList,boolean)>(r3, l33, r6, r8, z0);

     label30:
        z40 = r1.<com.android.calendar.CalendarEventModel: boolean mHasAttendeeData>;

        if z40 == 0 goto label34;

        $i19 = r1.<com.android.calendar.CalendarEventModel: int mOwnerAttendeeId>;

        if $i19 != -1 goto label34;

        r10 = r1.<com.android.calendar.CalendarEventModel: java.lang.String mOwnerAccount>;

        $r61 = r1.<com.android.calendar.CalendarEventModel: java.util.LinkedHashMap mAttendeesList>;

        $i18 = virtualinvoke $r61.<java.util.LinkedHashMap: int size()>();

        if $i18 == 0 goto label33;

        $z14 = staticinvoke <com.android.calendar.Utils: boolean isValidEmail(java.lang.String)>(r10);

        if $z14 == 0 goto label33;

        virtualinvoke r4.<android.content.ContentValues: void clear()>();

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("attendeeEmail", r10);

        $r66 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("attendeeRelationship", $r66);

        $r65 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("attendeeType", $r65);

        $r64 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("attendeeStatus", $r64);

        if z39 == 0 goto label31;

        $r74 = <android.provider.CalendarContract$Attendees: android.net.Uri CONTENT_URI>;

        $r73 = staticinvoke <android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newInsert(android.net.Uri)>($r74);

        r125 = virtualinvoke $r73.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValues(android.content.ContentValues)>(r4);

        virtualinvoke r125.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValueBackReference(java.lang.String,int)>("event_id", i1);

        goto label32;

     label31:
        $l20 = r1.<com.android.calendar.CalendarEventModel: long mId>;

        $r70 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l20);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("event_id", $r70);

        $r69 = <android.provider.CalendarContract$Attendees: android.net.Uri CONTENT_URI>;

        $r71 = staticinvoke <android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newInsert(android.net.Uri)>($r69);

        r125 = virtualinvoke $r71.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValues(android.content.ContentValues)>(r4);

     label32:
        $r72 = virtualinvoke r125.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation build()>();

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r72);

     label33:
        goto label35;

     label34:
        if z40 == 0 goto label35;

        $i12 = r1.<com.android.calendar.CalendarEventModel: int mSelfAttendeeStatus>;

        $i14 = r2.<com.android.calendar.CalendarEventModel: int mSelfAttendeeStatus>;

        if $i12 == $i14 goto label35;

        $i13 = r1.<com.android.calendar.CalendarEventModel: int mOwnerAttendeeId>;

        if $i13 == -1 goto label35;

        $r60 = <android.provider.CalendarContract$Attendees: android.net.Uri CONTENT_URI>;

        $i10 = r1.<com.android.calendar.CalendarEventModel: int mOwnerAttendeeId>;

        $l11 = (long) $i10;

        r126 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r60, $l11);

        virtualinvoke r4.<android.content.ContentValues: void clear()>();

        $i17 = r1.<com.android.calendar.CalendarEventModel: int mSelfAttendeeStatus>;

        $r59 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i17);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("attendeeStatus", $r59);

        $l16 = r1.<com.android.calendar.CalendarEventModel: long mId>;

        $r58 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l16);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("event_id", $r58);

        $r63 = staticinvoke <android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newUpdate(android.net.Uri)>(r126);

        r127 = virtualinvoke $r63.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValues(android.content.ContentValues)>(r4);

        $r62 = virtualinvoke r127.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation build()>();

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r62);

     label35:
        if z40 == 0 goto label53;

        if z39 != 0 goto label36;

        if r5 == null goto label53;

     label36:
        r128 = virtualinvoke r1.<com.android.calendar.CalendarEventModel: java.lang.String getAttendeesString()>();

        if r2 == null goto label37;

        r12 = virtualinvoke r2.<com.android.calendar.CalendarEventModel: java.lang.String getAttendeesString()>();

        goto label38;

     label37:
        r12 = "";

     label38:
        if z39 != 0 goto label39;

        $z13 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r12, r128);

        if $z13 != 0 goto label53;

     label39:
        r11 = r1.<com.android.calendar.CalendarEventModel: java.util.LinkedHashMap mAttendeesList>;

        $r31 = new java.util.LinkedList;

        specialinvoke $r31.<java.util.LinkedList: void <init>()>();

        r13 = $r31;

        if r5 == null goto label40;

        $l15 = staticinvoke <android.content.ContentUris: long parseId(android.net.Uri)>(r5);

        goto label41;

     label40:
        $l15 = -1L;

     label41:
        l3 = $l15;

        if z39 != 0 goto label49;

        virtualinvoke r13.<java.util.LinkedList: void clear()>();

        r14 = r2.<com.android.calendar.CalendarEventModel: java.util.LinkedHashMap mAttendeesList>;

        $r42 = virtualinvoke r14.<java.util.HashMap: java.util.Set keySet()>();

        r16 = interfaceinvoke $r42.<java.util.Set: java.util.Iterator iterator()>();

     label42:
        $z8 = interfaceinvoke r16.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label45;

        $r53 = interfaceinvoke r16.<java.util.Iterator: java.lang.Object next()>();

        r15 = (java.lang.String) $r53;

        $z11 = virtualinvoke r11.<java.util.HashMap: boolean containsKey(java.lang.Object)>(r15);

        if $z11 == 0 goto label43;

        virtualinvoke r11.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(r15);

        goto label44;

     label43:
        virtualinvoke r13.<java.util.LinkedList: boolean add(java.lang.Object)>(r15);

     label44:
        goto label42;

     label45:
        $i8 = virtualinvoke r13.<java.util.LinkedList: int size()>();

        if $i8 <= 0 goto label49;

        $r47 = <android.provider.CalendarContract$Attendees: android.net.Uri CONTENT_URI>;

        r129 = staticinvoke <android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newDelete(android.net.Uri)>($r47);

        $i6 = virtualinvoke r13.<java.util.LinkedList: int size()>();

        $i7 = $i6 + 1;

        r130 = newarray (java.lang.String)[$i7];

        $r46 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l3);

        r130[0] = $r46;

        i34 = 1;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>(java.lang.String)>("event_id=? AND attendeeEmail IN (");

        r18 = $r51;

        r17 = virtualinvoke r13.<java.util.LinkedList: java.util.Iterator iterator()>();

     label46:
        $z10 = interfaceinvoke r17.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label48;

        $r56 = interfaceinvoke r17.<java.util.Iterator: java.lang.Object next()>();

        r19 = (java.lang.String) $r56;

        if i34 <= 1 goto label47;

        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label47:
        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        $i9 = i34;

        i34 = i34 + 1;

        r130[$i9] = r19;

        goto label46;

     label48:
        virtualinvoke r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r49 = virtualinvoke r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r129.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withSelection(java.lang.String,java.lang.String[])>($r49, r130);

        $r50 = virtualinvoke r129.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation build()>();

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r50);

     label49:
        $i5 = virtualinvoke r11.<java.util.HashMap: int size()>();

        if $i5 <= 0 goto label53;

        $r30 = virtualinvoke r11.<java.util.HashMap: java.util.Collection values()>();

        r131 = interfaceinvoke $r30.<java.util.Collection: java.util.Iterator iterator()>();

     label50:
        $z6 = interfaceinvoke r131.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label53;

        $r33 = interfaceinvoke r131.<java.util.Iterator: java.lang.Object next()>();

        r132 = (com.android.calendar.CalendarEventModel$Attendee) $r33;

        virtualinvoke r4.<android.content.ContentValues: void clear()>();

        $r32 = r132.<com.android.calendar.CalendarEventModel$Attendee: java.lang.String mName>;

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("attendeeName", $r32);

        $r35 = r132.<com.android.calendar.CalendarEventModel$Attendee: java.lang.String mEmail>;

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("attendeeEmail", $r35);

        $r34 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("attendeeRelationship", $r34);

        $r37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("attendeeType", $r37);

        $r36 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("attendeeStatus", $r36);

        if z39 == 0 goto label51;

        $r44 = <android.provider.CalendarContract$Attendees: android.net.Uri CONTENT_URI>;

        $r45 = staticinvoke <android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newInsert(android.net.Uri)>($r44);

        r133 = virtualinvoke $r45.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValues(android.content.ContentValues)>(r4);

        virtualinvoke r133.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValueBackReference(java.lang.String,int)>("event_id", i1);

        goto label52;

     label51:
        $r40 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l3);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("event_id", $r40);

        $r39 = <android.provider.CalendarContract$Attendees: android.net.Uri CONTENT_URI>;

        $r38 = staticinvoke <android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newInsert(android.net.Uri)>($r39);

        r133 = virtualinvoke $r38.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValues(android.content.ContentValues)>(r4);

     label52:
        $r43 = virtualinvoke r133.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation build()>();

        virtualinvoke r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r43);

        goto label50;

     label53:
        $r27 = r0.<com.android.calendar.event.EditEventHelper: com.android.calendar.AsyncQueryService mService>;

        $r29 = r0.<com.android.calendar.event.EditEventHelper: com.android.calendar.AsyncQueryService mService>;

        $i4 = virtualinvoke $r29.<com.android.calendar.AsyncQueryService: int getNextToken()>();

        virtualinvoke $r27.<com.android.calendar.AsyncQueryService: void startBatch(int,java.lang.Object,java.lang.String,java.util.ArrayList,long)>($i4, null, "com.android.calendar", r3, 0L);

        return 1;
    }

    public static java.util.LinkedHashSet getAddressesFromList(java.lang.String, com.android.common.Rfc822Validator)
    {
        java.lang.String r0, $r7, $r10, $r12;
        com.android.common.Rfc822Validator r1;
        java.util.LinkedHashSet r2, $r5;
        java.util.Iterator r3;
        android.text.util.Rfc822Token r4;
        boolean $z0, $z1;
        java.lang.Object $r6;
        java.lang.StringBuilder $r8, $r9, $r11;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: com.android.common.Rfc822Validator;

        $r5 = new java.util.LinkedHashSet;

        specialinvoke $r5.<java.util.LinkedHashSet: void <init>()>();

        r2 = $r5;

        staticinvoke <android.text.util.Rfc822Tokenizer: void tokenize(java.lang.CharSequence,java.util.Collection)>(r0, r2);

        if r1 != null goto label1;

        return r2;

     label1:
        r3 = virtualinvoke r2.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (android.text.util.Rfc822Token) $r6;

        $r7 = virtualinvoke r4.<android.text.util.Rfc822Token: java.lang.String getAddress()>();

        $z1 = virtualinvoke r1.<com.android.common.Rfc822Validator: boolean isValid(java.lang.CharSequence)>($r7);

        if $z1 != 0 goto label3;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dropping invalid attendee email address: ");

        $r10 = virtualinvoke r4.<android.text.util.Rfc822Token: java.lang.String getAddress()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("EditEventHelper", $r12);

        interfaceinvoke r3.<java.util.Iterator: void remove()>();

     label3:
        goto label2;

     label4:
        return r2;
    }

    protected long constructDefaultStartTime(long)
    {
        com.android.calendar.event.EditEventHelper r0;
        long l0, l1, $l3;
        android.text.format.Time r1, $r2;
        byte $b2;

        r0 := @this: com.android.calendar.event.EditEventHelper;

        l0 := @parameter0: long;

        $r2 = new android.text.format.Time;

        specialinvoke $r2.<android.text.format.Time: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<android.text.format.Time: void set(long)>(l0);

        r1.<android.text.format.Time: int second> = 0;

        r1.<android.text.format.Time: int minute> = 30;

        l1 = virtualinvoke r1.<android.text.format.Time: long toMillis(boolean)>(0);

        $b2 = l0 cmp l1;

        if $b2 >= 0 goto label1;

        return l1;

     label1:
        $l3 = l1 + 1800000L;

        return $l3;
    }

    protected long constructDefaultEndTime(long)
    {
        com.android.calendar.event.EditEventHelper r0;
        long l0, $l1;

        r0 := @this: com.android.calendar.event.EditEventHelper;

        l0 := @parameter0: long;

        $l1 = l0 + 3600000L;

        return $l1;
    }

    void checkTimeDependentFields(com.android.calendar.CalendarEventModel, com.android.calendar.CalendarEventModel, android.content.ContentValues, int)
    {
        com.android.calendar.event.EditEventHelper r0;
        com.android.calendar.CalendarEventModel r1, r2;
        android.content.ContentValues r3;
        int i0;
        long l1, l2, l3, l4, l5, l6;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        java.lang.String r4, r5, r6, r7;
        byte $b7, $b8, $b9;
        android.text.format.Time $r8, r10;
        java.lang.Long $r9;

        r0 := @this: com.android.calendar.event.EditEventHelper;

        r1 := @parameter0: com.android.calendar.CalendarEventModel;

        r2 := @parameter1: com.android.calendar.CalendarEventModel;

        r3 := @parameter2: android.content.ContentValues;

        i0 := @parameter3: int;

        l1 = r2.<com.android.calendar.CalendarEventModel: long mOriginalStart>;

        l2 = r2.<com.android.calendar.CalendarEventModel: long mOriginalEnd>;

        z0 = r1.<com.android.calendar.CalendarEventModel: boolean mAllDay>;

        r4 = r1.<com.android.calendar.CalendarEventModel: java.lang.String mRrule>;

        r5 = r1.<com.android.calendar.CalendarEventModel: java.lang.String mTimezone>;

        l3 = r2.<com.android.calendar.CalendarEventModel: long mStart>;

        l4 = r2.<com.android.calendar.CalendarEventModel: long mEnd>;

        z1 = r2.<com.android.calendar.CalendarEventModel: boolean mAllDay>;

        r6 = r2.<com.android.calendar.CalendarEventModel: java.lang.String mRrule>;

        r7 = r2.<com.android.calendar.CalendarEventModel: java.lang.String mTimezone>;

        $b7 = l1 cmp l3;

        if $b7 != 0 goto label1;

        $b9 = l2 cmp l4;

        if $b9 != 0 goto label1;

        if z0 != z1 goto label1;

        $z4 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r4, r6);

        if $z4 == 0 goto label1;

        $z5 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r5, r7);

        if $z5 == 0 goto label1;

        virtualinvoke r3.<android.content.ContentValues: void remove(java.lang.String)>("dtstart");

        virtualinvoke r3.<android.content.ContentValues: void remove(java.lang.String)>("dtend");

        virtualinvoke r3.<android.content.ContentValues: void remove(java.lang.String)>("duration");

        virtualinvoke r3.<android.content.ContentValues: void remove(java.lang.String)>("allDay");

        virtualinvoke r3.<android.content.ContentValues: void remove(java.lang.String)>("rrule");

        virtualinvoke r3.<android.content.ContentValues: void remove(java.lang.String)>("eventTimezone");

        return;

     label1:
        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r4);

        if $z3 != 0 goto label2;

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r6);

        if $z2 == 0 goto label3;

     label2:
        return;

     label3:
        if i0 != 3 goto label6;

        l5 = r1.<com.android.calendar.CalendarEventModel: long mStart>;

        $b8 = l1 cmp l3;

        if $b8 == 0 goto label4;

        l6 = l3 - l1;

        l5 = l5 + l6;

     label4:
        if z1 == 0 goto label5;

        $r8 = new android.text.format.Time;

        specialinvoke $r8.<android.text.format.Time: void <init>(java.lang.String)>("UTC");

        r10 = $r8;

        virtualinvoke r10.<android.text.format.Time: void set(long)>(l5);

        r10.<android.text.format.Time: int hour> = 0;

        r10.<android.text.format.Time: int minute> = 0;

        r10.<android.text.format.Time: int second> = 0;

        l5 = virtualinvoke r10.<android.text.format.Time: long toMillis(boolean)>(0);

     label5:
        $r9 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l5);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("dtstart", $r9);

     label6:
        return;
    }

    public java.lang.String updatePastEvents(java.util.ArrayList, com.android.calendar.CalendarEventModel, long)
    {
        com.android.calendar.event.EditEventHelper r0;
        java.util.ArrayList r1;
        com.android.calendar.CalendarEventModel r2;
        long l0, l1, $l3, $l4;
        boolean z0;
        java.lang.String r3, r4, $r13, $r17, $r18, $r21, $r24;
        com.android.calendarcommon2.EventRecurrence r5, $r11, $r27, r31;
        android.text.format.Time r6, $r14, $r16, r32;
        android.content.ContentValues r7, $r15;
        com.android.calendarcommon2.RecurrenceSet r8, $r26;
        com.android.calendarcommon2.RecurrenceProcessor r9, $r25;
        long[] r10;
        com.android.calendarcommon2.DateException r12, $r29;
        int $i2, $i6, $i7, $i8, $i9, $i10;
        java.lang.Long $r19;
        android.net.Uri $r20;
        android.content.ContentProviderOperation $r22;
        android.content.ContentProviderOperation$Builder $r23, r33;
        java.lang.RuntimeException $r28, $r30;

        r0 := @this: com.android.calendar.event.EditEventHelper;

        r1 := @parameter0: java.util.ArrayList;

        r2 := @parameter1: com.android.calendar.CalendarEventModel;

        l0 := @parameter2: long;

        z0 = r2.<com.android.calendar.CalendarEventModel: boolean mAllDay>;

        r3 = r2.<com.android.calendar.CalendarEventModel: java.lang.String mRrule>;

        r4 = r3;

        $r11 = new com.android.calendarcommon2.EventRecurrence;

        specialinvoke $r11.<com.android.calendarcommon2.EventRecurrence: void <init>()>();

        r5 = $r11;

        virtualinvoke r5.<com.android.calendarcommon2.EventRecurrence: void parse(java.lang.String)>(r3);

        l1 = r2.<com.android.calendar.CalendarEventModel: long mStart>;

        $r14 = new android.text.format.Time;

        specialinvoke $r14.<android.text.format.Time: void <init>()>();

        r6 = $r14;

        $r13 = r2.<com.android.calendar.CalendarEventModel: java.lang.String mTimezone>;

        r6.<android.text.format.Time: java.lang.String timezone> = $r13;

        virtualinvoke r6.<android.text.format.Time: void set(long)>(l1);

        $r15 = new android.content.ContentValues;

        specialinvoke $r15.<android.content.ContentValues: void <init>()>();

        r7 = $r15;

        $i2 = r5.<com.android.calendarcommon2.EventRecurrence: int count>;

        if $i2 <= 0 goto label6;

        $r26 = new com.android.calendarcommon2.RecurrenceSet;

        $r24 = r2.<com.android.calendar.CalendarEventModel: java.lang.String mRrule>;

        specialinvoke $r26.<com.android.calendarcommon2.RecurrenceSet: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r24, null, null, null);

        r8 = $r26;

        $r25 = new com.android.calendarcommon2.RecurrenceProcessor;

        specialinvoke $r25.<com.android.calendarcommon2.RecurrenceProcessor: void <init>()>();

        r9 = $r25;

     label1:
        r10 = virtualinvoke r9.<com.android.calendarcommon2.RecurrenceProcessor: long[] expand(android.text.format.Time,com.android.calendarcommon2.RecurrenceSet,long,long)>(r6, r8, l1, l0);

     label2:
        goto label4;

     label3:
        $r29 := @caughtexception;

        r12 = $r29;

        $r28 = new java.lang.RuntimeException;

        specialinvoke $r28.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r12);

        throw $r28;

     label4:
        $i7 = lengthof r10;

        if $i7 != 0 goto label5;

        $r30 = new java.lang.RuntimeException;

        specialinvoke $r30.<java.lang.RuntimeException: void <init>(java.lang.String)>("can\'t use this method on first instance");

        throw $r30;

     label5:
        $r27 = new com.android.calendarcommon2.EventRecurrence;

        specialinvoke $r27.<com.android.calendarcommon2.EventRecurrence: void <init>()>();

        r31 = $r27;

        virtualinvoke r31.<com.android.calendarcommon2.EventRecurrence: void parse(java.lang.String)>(r3);

        $i9 = r31.<com.android.calendarcommon2.EventRecurrence: int count>;

        $i6 = lengthof r10;

        $i10 = $i9 - $i6;

        r31.<com.android.calendarcommon2.EventRecurrence: int count> = $i10;

        r4 = virtualinvoke r31.<com.android.calendarcommon2.EventRecurrence: java.lang.String toString()>();

        $i8 = lengthof r10;

        r5.<com.android.calendarcommon2.EventRecurrence: int count> = $i8;

        goto label8;

     label6:
        $r16 = new android.text.format.Time;

        specialinvoke $r16.<android.text.format.Time: void <init>()>();

        r32 = $r16;

        r32.<android.text.format.Time: java.lang.String timezone> = "UTC";

        $l3 = l0 - 1000L;

        virtualinvoke r32.<android.text.format.Time: void set(long)>($l3);

        if z0 == 0 goto label7;

        r32.<android.text.format.Time: int hour> = 0;

        r32.<android.text.format.Time: int minute> = 0;

        r32.<android.text.format.Time: int second> = 0;

        r32.<android.text.format.Time: boolean allDay> = 1;

        virtualinvoke r32.<android.text.format.Time: long normalize(boolean)>(0);

        r6.<android.text.format.Time: int hour> = 0;

        r6.<android.text.format.Time: int minute> = 0;

        r6.<android.text.format.Time: int second> = 0;

        r6.<android.text.format.Time: boolean allDay> = 1;

        r6.<android.text.format.Time: java.lang.String timezone> = "UTC";

     label7:
        $r17 = virtualinvoke r32.<android.text.format.Time: java.lang.String format2445()>();

        r5.<com.android.calendarcommon2.EventRecurrence: java.lang.String until> = $r17;

     label8:
        $r18 = virtualinvoke r5.<com.android.calendarcommon2.EventRecurrence: java.lang.String toString()>();

        virtualinvoke r7.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("rrule", $r18);

        $l4 = virtualinvoke r6.<android.text.format.Time: long normalize(boolean)>(1);

        $r19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l4);

        virtualinvoke r7.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("dtstart", $r19);

        $r21 = r2.<com.android.calendar.CalendarEventModel: java.lang.String mUri>;

        $r20 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r21);

        $r23 = staticinvoke <android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newUpdate(android.net.Uri)>($r20);

        r33 = virtualinvoke $r23.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValues(android.content.ContentValues)>(r7);

        $r22 = virtualinvoke r33.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation build()>();

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r22);

        return r4;

        catch com.android.calendarcommon2.DateException from label1 to label2 with label3;
    }

    public static boolean isSameEvent(com.android.calendar.CalendarEventModel, com.android.calendar.CalendarEventModel)
    {
        com.android.calendar.CalendarEventModel r0, r1;
        long $l0, $l1, $l3, $l4;
        byte $b2, $b5;

        r0 := @parameter0: com.android.calendar.CalendarEventModel;

        r1 := @parameter1: com.android.calendar.CalendarEventModel;

        if r1 != null goto label1;

        return 1;

     label1:
        $l1 = r0.<com.android.calendar.CalendarEventModel: long mCalendarId>;

        $l0 = r1.<com.android.calendar.CalendarEventModel: long mCalendarId>;

        $b2 = $l1 cmp $l0;

        if $b2 == 0 goto label2;

        return 0;

     label2:
        $l4 = r0.<com.android.calendar.CalendarEventModel: long mId>;

        $l3 = r1.<com.android.calendar.CalendarEventModel: long mId>;

        $b5 = $l4 cmp $l3;

        if $b5 == 0 goto label3;

        return 0;

     label3:
        return 1;
    }

    public static boolean saveReminders(java.util.ArrayList, long, java.util.ArrayList, java.util.ArrayList, boolean)
    {
        java.util.ArrayList r0, r1, r2;
        long l0;
        boolean z0, $z1;
        java.lang.String r3, $r10;
        java.lang.String[] r4, $r8;
        android.content.ContentProviderOperation$Builder r5, $r17, r21;
        android.content.ContentValues r6, $r13;
        int i1, i2, $i3, $i4;
        com.android.calendar.CalendarEventModel$ReminderEntry r7;
        android.net.Uri $r9, $r19;
        android.content.ContentProviderOperation $r12, $r20;
        java.lang.Object $r14;
        java.lang.Integer $r15, $r16;
        java.lang.Long $r18;

        r0 := @parameter0: java.util.ArrayList;

        l0 := @parameter1: long;

        r1 := @parameter2: java.util.ArrayList;

        r2 := @parameter3: java.util.ArrayList;

        z0 := @parameter4: boolean;

        $z1 = virtualinvoke r1.<java.util.ArrayList: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label1;

        if z0 != 0 goto label1;

        return 0;

     label1:
        r3 = "event_id=?";

        $r8 = newarray (java.lang.String)[1];

        $r10 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        $r8[0] = $r10;

        r4 = $r8;

        $r9 = <android.provider.CalendarContract$Reminders: android.net.Uri CONTENT_URI>;

        r5 = staticinvoke <android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newDelete(android.net.Uri)>($r9);

        virtualinvoke r5.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withSelection(java.lang.String,java.lang.String[])>(r3, r4);

        $r12 = virtualinvoke r5.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation build()>();

        virtualinvoke r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r12);

        $r13 = new android.content.ContentValues;

        specialinvoke $r13.<android.content.ContentValues: void <init>()>();

        r6 = $r13;

        i1 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i2 = 0;

     label2:
        if i2 >= i1 goto label3;

        $r14 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r7 = (com.android.calendar.CalendarEventModel$ReminderEntry) $r14;

        virtualinvoke r6.<android.content.ContentValues: void clear()>();

        $i3 = virtualinvoke r7.<com.android.calendar.CalendarEventModel$ReminderEntry: int getMinutes()>();

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        virtualinvoke r6.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("minutes", $r15);

        $i4 = virtualinvoke r7.<com.android.calendar.CalendarEventModel$ReminderEntry: int getMethod()>();

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        virtualinvoke r6.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("method", $r16);

        $r18 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke r6.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("event_id", $r18);

        $r19 = <android.provider.CalendarContract$Reminders: android.net.Uri CONTENT_URI>;

        $r17 = staticinvoke <android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newInsert(android.net.Uri)>($r19);

        r21 = virtualinvoke $r17.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValues(android.content.ContentValues)>(r6);

        $r20 = virtualinvoke r21.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation build()>();

        virtualinvoke r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r20);

        i2 = i2 + 1;

        goto label2;

     label3:
        return 1;
    }

    public static boolean saveRemindersWithBackRef(java.util.ArrayList, int, java.util.ArrayList, java.util.ArrayList, boolean)
    {
        java.util.ArrayList r0, r1, r2;
        int i0, i1, i2, $i3, $i4;
        boolean z0, $z1;
        android.content.ContentProviderOperation$Builder r3, $r16, r19;
        android.content.ContentValues r4, $r11;
        com.android.calendar.CalendarEventModel$ReminderEntry r5;
        android.net.Uri $r6, $r14;
        java.lang.String[] $r7;
        android.content.ContentProviderOperation $r10, $r17;
        java.lang.Object $r12;
        java.lang.Integer $r13, $r15;

        r0 := @parameter0: java.util.ArrayList;

        i0 := @parameter1: int;

        r1 := @parameter2: java.util.ArrayList;

        r2 := @parameter3: java.util.ArrayList;

        z0 := @parameter4: boolean;

        $z1 = virtualinvoke r1.<java.util.ArrayList: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label1;

        if z0 != 0 goto label1;

        return 0;

     label1:
        $r6 = <android.provider.CalendarContract$Reminders: android.net.Uri CONTENT_URI>;

        r3 = staticinvoke <android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newDelete(android.net.Uri)>($r6);

        $r7 = newarray (java.lang.String)[1];

        virtualinvoke r3.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withSelection(java.lang.String,java.lang.String[])>("event_id=?", $r7);

        virtualinvoke r3.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withSelectionBackReference(int,int)>(0, i0);

        $r10 = virtualinvoke r3.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation build()>();

        virtualinvoke r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r10);

        $r11 = new android.content.ContentValues;

        specialinvoke $r11.<android.content.ContentValues: void <init>()>();

        r4 = $r11;

        i1 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i2 = 0;

     label2:
        if i2 >= i1 goto label3;

        $r12 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i2);

        r5 = (com.android.calendar.CalendarEventModel$ReminderEntry) $r12;

        virtualinvoke r4.<android.content.ContentValues: void clear()>();

        $i3 = virtualinvoke r5.<com.android.calendar.CalendarEventModel$ReminderEntry: int getMinutes()>();

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("minutes", $r13);

        $i4 = virtualinvoke r5.<com.android.calendar.CalendarEventModel$ReminderEntry: int getMethod()>();

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        virtualinvoke r4.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("method", $r15);

        $r14 = <android.provider.CalendarContract$Reminders: android.net.Uri CONTENT_URI>;

        $r16 = staticinvoke <android.content.ContentProviderOperation: android.content.ContentProviderOperation$Builder newInsert(android.net.Uri)>($r14);

        r19 = virtualinvoke $r16.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValues(android.content.ContentValues)>(r4);

        virtualinvoke r19.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation$Builder withValueBackReference(java.lang.String,int)>("event_id", i0);

        $r17 = virtualinvoke r19.<android.content.ContentProviderOperation$Builder: android.content.ContentProviderOperation build()>();

        virtualinvoke r0.<java.util.ArrayList: boolean add(java.lang.Object)>($r17);

        i2 = i2 + 1;

        goto label2;

     label3:
        return 1;
    }

    static boolean isFirstEventInSeries(com.android.calendar.CalendarEventModel, com.android.calendar.CalendarEventModel)
    {
        com.android.calendar.CalendarEventModel r0, r1;
        long $l0, $l1;
        byte $b2;
        boolean $z0;

        r0 := @parameter0: com.android.calendar.CalendarEventModel;

        r1 := @parameter1: com.android.calendar.CalendarEventModel;

        $l1 = r0.<com.android.calendar.CalendarEventModel: long mOriginalStart>;

        $l0 = r1.<com.android.calendar.CalendarEventModel: long mStart>;

        $b2 = $l1 cmp $l0;

        if $b2 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    void addRecurrenceRule(android.content.ContentValues, com.android.calendar.CalendarEventModel)
    {
        com.android.calendar.event.EditEventHelper r0;
        android.content.ContentValues r1;
        com.android.calendar.CalendarEventModel r2;
        java.lang.String r3, r4;
        long l0, l1, l2, $l4, $l5, $l6, $l7, l8;
        boolean z0, $z1;
        byte $b3;
        java.lang.Long $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;

        r0 := @this: com.android.calendar.event.EditEventHelper;

        r1 := @parameter0: android.content.ContentValues;

        r2 := @parameter1: com.android.calendar.CalendarEventModel;

        r3 = r2.<com.android.calendar.CalendarEventModel: java.lang.String mRrule>;

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("rrule", r3);

        l0 = r2.<com.android.calendar.CalendarEventModel: long mEnd>;

        l1 = r2.<com.android.calendar.CalendarEventModel: long mStart>;

        r4 = r2.<com.android.calendar.CalendarEventModel: java.lang.String mDuration>;

        z0 = r2.<com.android.calendar.CalendarEventModel: boolean mAllDay>;

        $b3 = l0 cmp l1;

        if $b3 < 0 goto label2;

        if z0 == 0 goto label1;

        $l5 = l0 - l1;

        $l7 = $l5 + 86400000L;

        $l6 = $l7 - 1L;

        l2 = $l6 / 86400000L;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("P");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l2);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("D");

        r4 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label4;

     label1:
        $l4 = l0 - l1;

        l8 = $l4 / 1000L;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("P");

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l8);

        $r8 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("S");

        r4 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label4;

     label2:
        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r4);

        if $z1 == 0 goto label4;

        if z0 == 0 goto label3;

        r4 = "P1D";

        goto label4;

     label3:
        r4 = "P3600S";

     label4:
        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("duration", r4);

        $r5 = (java.lang.Long) null;

        virtualinvoke r1.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("dtend", $r5);

        return;
    }

    static void updateRecurrenceRule(int, com.android.calendar.CalendarEventModel, int)
    {
        int i0, i1, i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i15, i17;
        com.android.calendar.CalendarEventModel r0;
        com.android.calendarcommon2.EventRecurrence r1, $r4;
        byte b2, b16;
        int[] r2, r3, r12, r13, r15, r17, r18;
        java.lang.String $r5, $r7, $r8, $r10;
        android.text.format.Time $r6, $r9, $r11, r14, r16, r19;
        long $l5, $l12, $l14;

        i0 := @parameter0: int;

        r0 := @parameter1: com.android.calendar.CalendarEventModel;

        i1 := @parameter2: int;

        $r4 = new com.android.calendarcommon2.EventRecurrence;

        specialinvoke $r4.<com.android.calendarcommon2.EventRecurrence: void <init>()>();

        r1 = $r4;

        if i0 != 0 goto label01;

        r0.<com.android.calendar.CalendarEventModel: java.lang.String mRrule> = null;

        return;

     label01:
        if i0 != 7 goto label02;

        return;

     label02:
        if i0 != 1 goto label03;

        r1.<com.android.calendarcommon2.EventRecurrence: int freq> = 4;

        goto label11;

     label03:
        if i0 != 2 goto label06;

        r1.<com.android.calendarcommon2.EventRecurrence: int freq> = 5;

        b2 = 5;

        r2 = newarray (int)[b2];

        r3 = newarray (int)[b2];

        r2[0] = 131072;

        r2[1] = 262144;

        r2[2] = 524288;

        r2[3] = 1048576;

        r2[4] = 2097152;

        i3 = 0;

     label04:
        if i3 >= b2 goto label05;

        r3[i3] = 0;

        i3 = i3 + 1;

        goto label04;

     label05:
        r1.<com.android.calendarcommon2.EventRecurrence: int[] byday> = r2;

        r1.<com.android.calendarcommon2.EventRecurrence: int[] bydayNum> = r3;

        r1.<com.android.calendarcommon2.EventRecurrence: int bydayCount> = b2;

        goto label11;

     label06:
        if i0 != 3 goto label07;

        r1.<com.android.calendarcommon2.EventRecurrence: int freq> = 5;

        r12 = newarray (int)[1];

        b16 = 1;

        r13 = newarray (int)[b16];

        $r11 = new android.text.format.Time;

        $r10 = r0.<com.android.calendar.CalendarEventModel: java.lang.String mTimezone>;

        specialinvoke $r11.<android.text.format.Time: void <init>(java.lang.String)>($r10);

        r14 = $r11;

        $l14 = r0.<com.android.calendar.CalendarEventModel: long mStart>;

        virtualinvoke r14.<android.text.format.Time: void set(long)>($l14);

        $i13 = r14.<android.text.format.Time: int weekDay>;

        $i15 = staticinvoke <com.android.calendarcommon2.EventRecurrence: int timeDay2Day(int)>($i13);

        r12[0] = $i15;

        r13[0] = 0;

        r1.<com.android.calendarcommon2.EventRecurrence: int[] byday> = r12;

        r1.<com.android.calendarcommon2.EventRecurrence: int[] bydayNum> = r13;

        r1.<com.android.calendarcommon2.EventRecurrence: int bydayCount> = b16;

        goto label11;

     label07:
        if i0 != 5 goto label08;

        r1.<com.android.calendarcommon2.EventRecurrence: int freq> = 6;

        r1.<com.android.calendarcommon2.EventRecurrence: int bydayCount> = 0;

        r1.<com.android.calendarcommon2.EventRecurrence: int bymonthdayCount> = 1;

        r15 = newarray (int)[1];

        $r9 = new android.text.format.Time;

        $r8 = r0.<com.android.calendar.CalendarEventModel: java.lang.String mTimezone>;

        specialinvoke $r9.<android.text.format.Time: void <init>(java.lang.String)>($r8);

        r16 = $r9;

        $l12 = r0.<com.android.calendar.CalendarEventModel: long mStart>;

        virtualinvoke r16.<android.text.format.Time: void set(long)>($l12);

        $i11 = r16.<android.text.format.Time: int monthDay>;

        r15[0] = $i11;

        r1.<com.android.calendarcommon2.EventRecurrence: int[] bymonthday> = r15;

        goto label11;

     label08:
        if i0 != 4 goto label10;

        r1.<com.android.calendarcommon2.EventRecurrence: int freq> = 6;

        r1.<com.android.calendarcommon2.EventRecurrence: int bydayCount> = 1;

        r1.<com.android.calendarcommon2.EventRecurrence: int bymonthdayCount> = 0;

        r17 = newarray (int)[1];

        r18 = newarray (int)[1];

        $r6 = new android.text.format.Time;

        $r7 = r0.<com.android.calendar.CalendarEventModel: java.lang.String mTimezone>;

        specialinvoke $r6.<android.text.format.Time: void <init>(java.lang.String)>($r7);

        r19 = $r6;

        $l5 = r0.<com.android.calendar.CalendarEventModel: long mStart>;

        virtualinvoke r19.<android.text.format.Time: void set(long)>($l5);

        $i6 = r19.<android.text.format.Time: int monthDay>;

        $i7 = $i6 - 1;

        $i9 = $i7 / 7;

        i17 = 1 + $i9;

        if i17 != 5 goto label09;

        i17 = -1;

     label09:
        r18[0] = i17;

        $i8 = r19.<android.text.format.Time: int weekDay>;

        $i10 = staticinvoke <com.android.calendarcommon2.EventRecurrence: int timeDay2Day(int)>($i8);

        r17[0] = $i10;

        r1.<com.android.calendarcommon2.EventRecurrence: int[] byday> = r17;

        r1.<com.android.calendarcommon2.EventRecurrence: int[] bydayNum> = r18;

        goto label11;

     label10:
        if i0 != 6 goto label11;

        r1.<com.android.calendarcommon2.EventRecurrence: int freq> = 7;

     label11:
        $i4 = staticinvoke <com.android.calendarcommon2.EventRecurrence: int calendarDay2Day(int)>(i1);

        r1.<com.android.calendarcommon2.EventRecurrence: int wkst> = $i4;

        $r5 = virtualinvoke r1.<com.android.calendarcommon2.EventRecurrence: java.lang.String toString()>();

        r0.<com.android.calendar.CalendarEventModel: java.lang.String mRrule> = $r5;

        return;
    }

    public static void setModelFromCursor(com.android.calendar.CalendarEventModel, android.database.Cursor)
    {
        com.android.calendar.CalendarEventModel r0;
        android.database.Cursor r1;
        java.lang.String r2, r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13;
        int i0, i1, $i3, $i4, $i6, $i7, $i8, $i11, $i12, $i14, $i15, $i16;
        boolean z0, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        long $l5, $l9, $l10, $l13, $l17;

        r0 := @parameter0: com.android.calendar.CalendarEventModel;

        r1 := @parameter1: android.database.Cursor;

        if r0 == null goto label01;

        if r1 == null goto label01;

        $i3 = interfaceinvoke r1.<android.database.Cursor: int getCount()>();

        if $i3 == 1 goto label02;

     label01:
        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String)>("EditEventHelper", "Attempted to build non-existent model or from an incorrect query.");

        return;

     label02:
        virtualinvoke r0.<com.android.calendar.CalendarEventModel: void clear()>();

        interfaceinvoke r1.<android.database.Cursor: boolean moveToFirst()>();

        $i4 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>(0);

        $l5 = (long) $i4;

        r0.<com.android.calendar.CalendarEventModel: long mId> = $l5;

        $r4 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(1);

        r0.<com.android.calendar.CalendarEventModel: java.lang.String mTitle> = $r4;

        $r5 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(2);

        r0.<com.android.calendar.CalendarEventModel: java.lang.String mDescription> = $r5;

        $r6 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(3);

        r0.<com.android.calendar.CalendarEventModel: java.lang.String mLocation> = $r6;

        $i6 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>(4);

        if $i6 == 0 goto label03;

        $z8 = 1;

        goto label04;

     label03:
        $z8 = 0;

     label04:
        r0.<com.android.calendar.CalendarEventModel: boolean mAllDay> = $z8;

        $i8 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>(5);

        if $i8 == 0 goto label05;

        $z7 = 1;

        goto label06;

     label05:
        $z7 = 0;

     label06:
        r0.<com.android.calendar.CalendarEventModel: boolean mHasAlarm> = $z7;

        $i7 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>(6);

        $l10 = (long) $i7;

        r0.<com.android.calendar.CalendarEventModel: long mCalendarId> = $l10;

        $l9 = interfaceinvoke r1.<android.database.Cursor: long getLong(int)>(7);

        r0.<com.android.calendar.CalendarEventModel: long mStart> = $l9;

        r2 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(10);

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z2 != 0 goto label07;

        r0.<com.android.calendar.CalendarEventModel: java.lang.String mTimezone> = r2;

     label07:
        r3 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(11);

        r0.<com.android.calendar.CalendarEventModel: java.lang.String mRrule> = r3;

        $r7 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(12);

        r0.<com.android.calendar.CalendarEventModel: java.lang.String mSyncId> = $r7;

        $i11 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>(13);

        r0.<com.android.calendar.CalendarEventModel: int mAvailability> = $i11;

        i0 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>(14);

        $r8 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(15);

        r0.<com.android.calendar.CalendarEventModel: java.lang.String mOwnerAccount> = $r8;

        $i12 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>(16);

        if $i12 == 0 goto label08;

        $z10 = 1;

        goto label09;

     label08:
        $z10 = 0;

     label09:
        r0.<com.android.calendar.CalendarEventModel: boolean mHasAttendeeData> = $z10;

        $r9 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(17);

        r0.<com.android.calendar.CalendarEventModel: java.lang.String mOriginalSyncId> = $r9;

        $l13 = interfaceinvoke r1.<android.database.Cursor: long getLong(int)>(20);

        r0.<com.android.calendar.CalendarEventModel: long mOriginalId> = $l13;

        $r11 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(18);

        r0.<com.android.calendar.CalendarEventModel: java.lang.String mOrganizer> = $r11;

        $r12 = r0.<com.android.calendar.CalendarEventModel: java.lang.String mOwnerAccount>;

        $r10 = r0.<com.android.calendar.CalendarEventModel: java.lang.String mOrganizer>;

        $z4 = virtualinvoke $r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r10);

        r0.<com.android.calendar.CalendarEventModel: boolean mIsOrganizer> = $z4;

        $i14 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>(19);

        if $i14 == 0 goto label10;

        $z9 = 1;

        goto label11;

     label10:
        $z9 = 0;

     label11:
        r0.<com.android.calendar.CalendarEventModel: boolean mGuestsCanModify> = $z9;

        $z3 = interfaceinvoke r1.<android.database.Cursor: boolean isNull(int)>(23);

        if $z3 == 0 goto label12;

        i1 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>(22);

        goto label13;

     label12:
        i1 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>(23);

     label13:
        $i16 = staticinvoke <com.android.calendar.Utils: int getDisplayColorFromColor(int)>(i1);

        virtualinvoke r0.<com.android.calendar.CalendarEventModel: void setEventColor(int)>($i16);

        if i0 <= 0 goto label14;

        i0 = i0 + -1;

     label14:
        r0.<com.android.calendar.CalendarEventModel: int mAccessLevel> = i0;

        $i15 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>(21);

        r0.<com.android.calendar.CalendarEventModel: int mEventStatus> = $i15;

        $z5 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z5 != 0 goto label15;

        $z6 = 1;

        goto label16;

     label15:
        $z6 = 0;

     label16:
        z0 = $z6;

        if z0 == 0 goto label17;

        $r13 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(9);

        r0.<com.android.calendar.CalendarEventModel: java.lang.String mDuration> = $r13;

        goto label18;

     label17:
        $l17 = interfaceinvoke r1.<android.database.Cursor: long getLong(int)>(8);

        r0.<com.android.calendar.CalendarEventModel: long mEnd> = $l17;

     label18:
        r0.<com.android.calendar.CalendarEventModel: boolean mModelUpdatedWithEventCursor> = 1;

        return;
    }

    public static boolean setModelFromCalendarCursor(com.android.calendar.CalendarEventModel, android.database.Cursor)
    {
        com.android.calendar.CalendarEventModel r0;
        android.database.Cursor r1;
        long $l1, $l3, $l5;
        byte $b2, $b6;
        boolean $z0, $z2, $z3;
        int $i4, $i7, $i8, $i9, $i10, $i11;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7;

        r0 := @parameter0: com.android.calendar.CalendarEventModel;

        r1 := @parameter1: android.database.Cursor;

        if r0 == null goto label1;

        if r1 != null goto label2;

     label1:
        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String)>("EditEventHelper", "Attempted to build non-existent model or from an incorrect query.");

        return 0;

     label2:
        $l1 = r0.<com.android.calendar.CalendarEventModel: long mCalendarId>;

        $b2 = $l1 cmp -1L;

        if $b2 != 0 goto label3;

        return 0;

     label3:
        $z0 = r0.<com.android.calendar.CalendarEventModel: boolean mModelUpdatedWithEventCursor>;

        if $z0 != 0 goto label4;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String)>("EditEventHelper", "Can\'t update model with a Calendar cursor until it has seen an Event cursor.");

        return 0;

     label4:
        interfaceinvoke r1.<android.database.Cursor: boolean moveToPosition(int)>(-1);

     label5:
        $z2 = interfaceinvoke r1.<android.database.Cursor: boolean moveToNext()>();

        if $z2 == 0 goto label9;

        $l3 = r0.<com.android.calendar.CalendarEventModel: long mCalendarId>;

        $i4 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>(0);

        $l5 = (long) $i4;

        $b6 = $l3 cmp $l5;

        if $b6 == 0 goto label6;

        goto label5;

     label6:
        $i7 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>(4);

        if $i7 == 0 goto label7;

        $z3 = 1;

        goto label8;

     label7:
        $z3 = 0;

     label8:
        r0.<com.android.calendar.CalendarEventModel: boolean mOrganizerCanRespond> = $z3;

        $i8 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>(5);

        r0.<com.android.calendar.CalendarEventModel: int mCalendarAccessLevel> = $i8;

        $r2 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(1);

        r0.<com.android.calendar.CalendarEventModel: java.lang.String mCalendarDisplayName> = $r2;

        $i9 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>(3);

        $i10 = staticinvoke <com.android.calendar.Utils: int getDisplayColorFromColor(int)>($i9);

        virtualinvoke r0.<com.android.calendar.CalendarEventModel: void setCalendarColor(int)>($i10);

        $r3 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(11);

        r0.<com.android.calendar.CalendarEventModel: java.lang.String mCalendarAccountName> = $r3;

        $r4 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(12);

        r0.<com.android.calendar.CalendarEventModel: java.lang.String mCalendarAccountType> = $r4;

        $i11 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>(7);

        r0.<com.android.calendar.CalendarEventModel: int mCalendarMaxReminders> = $i11;

        $r6 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(8);

        r0.<com.android.calendar.CalendarEventModel: java.lang.String mCalendarAllowedReminders> = $r6;

        $r5 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(9);

        r0.<com.android.calendar.CalendarEventModel: java.lang.String mCalendarAllowedAttendeeTypes> = $r5;

        $r7 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(10);

        r0.<com.android.calendar.CalendarEventModel: java.lang.String mCalendarAllowedAvailability> = $r7;

        return 1;

     label9:
        return 0;
    }

    public static boolean canModifyEvent(com.android.calendar.CalendarEventModel)
    {
        com.android.calendar.CalendarEventModel r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: com.android.calendar.CalendarEventModel;

        $z0 = staticinvoke <com.android.calendar.event.EditEventHelper: boolean canModifyCalendar(com.android.calendar.CalendarEventModel)>(r0);

        if $z0 == 0 goto label2;

        $z1 = r0.<com.android.calendar.CalendarEventModel: boolean mIsOrganizer>;

        if $z1 != 0 goto label1;

        $z3 = r0.<com.android.calendar.CalendarEventModel: boolean mGuestsCanModify>;

        if $z3 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public static boolean canModifyCalendar(com.android.calendar.CalendarEventModel)
    {
        com.android.calendar.CalendarEventModel r0;
        int $i0;
        long $l1;
        byte $b2;
        boolean $z0;

        r0 := @parameter0: com.android.calendar.CalendarEventModel;

        $i0 = r0.<com.android.calendar.CalendarEventModel: int mCalendarAccessLevel>;

        if $i0 >= 500 goto label1;

        $l1 = r0.<com.android.calendar.CalendarEventModel: long mCalendarId>;

        $b2 = $l1 cmp -1L;

        if $b2 != 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public static boolean canAddReminders(com.android.calendar.CalendarEventModel)
    {
        com.android.calendar.CalendarEventModel r0;
        int $i0;
        boolean $z0;

        r0 := @parameter0: com.android.calendar.CalendarEventModel;

        $i0 = r0.<com.android.calendar.CalendarEventModel: int mCalendarAccessLevel>;

        if $i0 < 200 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean canRespond(com.android.calendar.CalendarEventModel)
    {
        com.android.calendar.CalendarEventModel r0;
        boolean $z0, $z1, $z2, $z3;
        java.util.LinkedHashMap $r1;
        int $i0;

        r0 := @parameter0: com.android.calendar.CalendarEventModel;

        $z0 = staticinvoke <com.android.calendar.event.EditEventHelper: boolean canModifyCalendar(com.android.calendar.CalendarEventModel)>(r0);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z1 = r0.<com.android.calendar.CalendarEventModel: boolean mIsOrganizer>;

        if $z1 != 0 goto label2;

        return 1;

     label2:
        $z2 = r0.<com.android.calendar.CalendarEventModel: boolean mOrganizerCanRespond>;

        if $z2 != 0 goto label3;

        return 0;

     label3:
        $z3 = r0.<com.android.calendar.CalendarEventModel: boolean mHasAttendeeData>;

        if $z3 == 0 goto label4;

        $r1 = r0.<com.android.calendar.CalendarEventModel: java.util.LinkedHashMap mAttendeesList>;

        $i0 = virtualinvoke $r1.<java.util.LinkedHashMap: int size()>();

        if $i0 != 0 goto label4;

        return 0;

     label4:
        return 1;
    }

    android.content.ContentValues getContentValuesFromModel(com.android.calendar.CalendarEventModel)
    {
        com.android.calendar.event.EditEventHelper r0;
        com.android.calendar.CalendarEventModel r1;
        java.lang.String r2, r3, r4, $r15, $r16, $r17, $r19, $r21, $r26, $r28, $r29, $r30;
        boolean z0, $z1, $z2, $z3;
        android.text.format.Time r5, r6, $r8, $r9;
        android.content.ContentValues r7, $r10;
        long l0, l1, l2, $l4, $l5, $l13;
        int i3, $i6, $i7, $i8, $i9, $i11;
        java.lang.Long $r12, $r14, $r18;
        java.lang.Integer $r13, $r20, $r22, $r24, $r25, $r27;
        byte $b10, $b12, $b14;
        java.util.TimeZone $r31;

        r0 := @this: com.android.calendar.event.EditEventHelper;

        r1 := @parameter0: com.android.calendar.CalendarEventModel;

        r2 = r1.<com.android.calendar.CalendarEventModel: java.lang.String mTitle>;

        z0 = r1.<com.android.calendar.CalendarEventModel: boolean mAllDay>;

        r3 = r1.<com.android.calendar.CalendarEventModel: java.lang.String mRrule>;

        r4 = r1.<com.android.calendar.CalendarEventModel: java.lang.String mTimezone>;

        if r4 != null goto label01;

        $r31 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        r4 = virtualinvoke $r31.<java.util.TimeZone: java.lang.String getID()>();

     label01:
        $r9 = new android.text.format.Time;

        specialinvoke $r9.<android.text.format.Time: void <init>(java.lang.String)>(r4);

        r5 = $r9;

        $r8 = new android.text.format.Time;

        specialinvoke $r8.<android.text.format.Time: void <init>(java.lang.String)>(r4);

        r6 = $r8;

        $l5 = r1.<com.android.calendar.CalendarEventModel: long mStart>;

        virtualinvoke r5.<android.text.format.Time: void set(long)>($l5);

        $l4 = r1.<com.android.calendar.CalendarEventModel: long mEnd>;

        virtualinvoke r6.<android.text.format.Time: void set(long)>($l4);

        specialinvoke r0.<com.android.calendar.event.EditEventHelper: void offsetStartTimeIfNecessary(android.text.format.Time,android.text.format.Time,java.lang.String,com.android.calendar.CalendarEventModel)>(r5, r6, r3, r1);

        $r10 = new android.content.ContentValues;

        specialinvoke $r10.<android.content.ContentValues: void <init>()>();

        r7 = $r10;

        l2 = r1.<com.android.calendar.CalendarEventModel: long mCalendarId>;

        if z0 == 0 goto label02;

        r4 = "UTC";

        r5.<android.text.format.Time: int hour> = 0;

        r5.<android.text.format.Time: int minute> = 0;

        r5.<android.text.format.Time: int second> = 0;

        r5.<android.text.format.Time: java.lang.String timezone> = r4;

        l0 = virtualinvoke r5.<android.text.format.Time: long normalize(boolean)>(1);

        r6.<android.text.format.Time: int hour> = 0;

        r6.<android.text.format.Time: int minute> = 0;

        r6.<android.text.format.Time: int second> = 0;

        r6.<android.text.format.Time: java.lang.String timezone> = r4;

        l1 = virtualinvoke r6.<android.text.format.Time: long normalize(boolean)>(1);

        $l13 = l0 + 86400000L;

        $b14 = l1 cmp $l13;

        if $b14 >= 0 goto label03;

        l1 = l0 + 86400000L;

        goto label03;

     label02:
        l0 = virtualinvoke r5.<android.text.format.Time: long toMillis(boolean)>(1);

        l1 = virtualinvoke r6.<android.text.format.Time: long toMillis(boolean)>(1);

     label03:
        $r12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l2);

        virtualinvoke r7.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("calendar_id", $r12);

        virtualinvoke r7.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("eventTimezone", r4);

        virtualinvoke r7.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("title", r2);

        if z0 == 0 goto label04;

        $b12 = 1;

        goto label05;

     label04:
        $b12 = 0;

     label05:
        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b12);

        virtualinvoke r7.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("allDay", $r13);

        $r14 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        virtualinvoke r7.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("dtstart", $r14);

        virtualinvoke r7.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("rrule", r3);

        $z1 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z1 != 0 goto label06;

        virtualinvoke r0.<com.android.calendar.event.EditEventHelper: void addRecurrenceRule(android.content.ContentValues,com.android.calendar.CalendarEventModel)>(r7, r1);

        goto label07;

     label06:
        $r15 = (java.lang.String) null;

        virtualinvoke r7.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("duration", $r15);

        $r18 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        virtualinvoke r7.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("dtend", $r18);

     label07:
        $r19 = r1.<com.android.calendar.CalendarEventModel: java.lang.String mDescription>;

        if $r19 == null goto label08;

        $r28 = r1.<com.android.calendar.CalendarEventModel: java.lang.String mDescription>;

        $r30 = virtualinvoke $r28.<java.lang.String: java.lang.String trim()>();

        virtualinvoke r7.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("description", $r30);

        goto label09;

     label08:
        $r16 = (java.lang.String) null;

        virtualinvoke r7.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("description", $r16);

     label09:
        $r17 = r1.<com.android.calendar.CalendarEventModel: java.lang.String mLocation>;

        if $r17 == null goto label10;

        $r26 = r1.<com.android.calendar.CalendarEventModel: java.lang.String mLocation>;

        $r29 = virtualinvoke $r26.<java.lang.String: java.lang.String trim()>();

        virtualinvoke r7.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("eventLocation", $r29);

        goto label11;

     label10:
        $r21 = (java.lang.String) null;

        virtualinvoke r7.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("eventLocation", $r21);

     label11:
        $i6 = r1.<com.android.calendar.CalendarEventModel: int mAvailability>;

        $r20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        virtualinvoke r7.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("availability", $r20);

        $z2 = r1.<com.android.calendar.CalendarEventModel: boolean mHasAttendeeData>;

        if $z2 == 0 goto label12;

        $b10 = 1;

        goto label13;

     label12:
        $b10 = 0;

     label13:
        $r22 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b10);

        virtualinvoke r7.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("hasAttendeeData", $r22);

        i3 = r1.<com.android.calendar.CalendarEventModel: int mAccessLevel>;

        if i3 <= 0 goto label14;

        i3 = i3 + 1;

     label14:
        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        virtualinvoke r7.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("accessLevel", $r25);

        $i7 = r1.<com.android.calendar.CalendarEventModel: int mEventStatus>;

        $r24 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        virtualinvoke r7.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("eventStatus", $r24);

        $z3 = virtualinvoke r1.<com.android.calendar.CalendarEventModel: boolean isEventColorInitialized()>();

        if $z3 == 0 goto label16;

        $i9 = virtualinvoke r1.<com.android.calendar.CalendarEventModel: int getEventColor()>();

        $i8 = virtualinvoke r1.<com.android.calendar.CalendarEventModel: int getCalendarColor()>();

        if $i9 != $i8 goto label15;

        virtualinvoke r7.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("eventColor_index", "");

        goto label16;

     label15:
        $i11 = virtualinvoke r1.<com.android.calendar.CalendarEventModel: int getEventColorKey()>();

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        virtualinvoke r7.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("eventColor_index", $r27);

     label16:
        return r7;
    }

    private void offsetStartTimeIfNecessary(android.text.format.Time, android.text.format.Time, java.lang.String, com.android.calendar.CalendarEventModel)
    {
        com.android.calendar.event.EditEventHelper r0;
        android.text.format.Time r1, r2;
        java.lang.String r3;
        com.android.calendar.CalendarEventModel r4;
        int i0, i1, i2, i3, i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16;
        long l5, l17;
        boolean $z0;
        com.android.calendarcommon2.EventRecurrence $r5, $r6, $r7, $r8, $r10, $r12, $r13, $r14;
        int[] $r9, $r11, $r15;

        r0 := @this: com.android.calendar.event.EditEventHelper;

        r1 := @parameter0: android.text.format.Time;

        r2 := @parameter1: android.text.format.Time;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: com.android.calendar.CalendarEventModel;

        if r3 == null goto label01;

        $z0 = virtualinvoke r3.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label02;

     label01:
        return;

     label02:
        $r5 = r0.<com.android.calendar.event.EditEventHelper: com.android.calendarcommon2.EventRecurrence mEventRecurrence>;

        virtualinvoke $r5.<com.android.calendarcommon2.EventRecurrence: void parse(java.lang.String)>(r3);

        $r6 = r0.<com.android.calendar.event.EditEventHelper: com.android.calendarcommon2.EventRecurrence mEventRecurrence>;

        $i6 = $r6.<com.android.calendarcommon2.EventRecurrence: int freq>;

        if $i6 == 5 goto label03;

        return;

     label03:
        $r7 = r0.<com.android.calendar.event.EditEventHelper: com.android.calendarcommon2.EventRecurrence mEventRecurrence>;

        $r9 = $r7.<com.android.calendarcommon2.EventRecurrence: int[] byday>;

        if $r9 == null goto label04;

        $r8 = r0.<com.android.calendar.event.EditEventHelper: com.android.calendarcommon2.EventRecurrence mEventRecurrence>;

        $r11 = $r8.<com.android.calendarcommon2.EventRecurrence: int[] byday>;

        $i7 = lengthof $r11;

        $r10 = r0.<com.android.calendar.event.EditEventHelper: com.android.calendarcommon2.EventRecurrence mEventRecurrence>;

        $i8 = $r10.<com.android.calendarcommon2.EventRecurrence: int bydayCount>;

        if $i7 <= $i8 goto label05;

     label04:
        return;

     label05:
        i0 = 2147483647;

        $r12 = r0.<com.android.calendar.event.EditEventHelper: com.android.calendarcommon2.EventRecurrence mEventRecurrence>;

        $i9 = $r12.<com.android.calendarcommon2.EventRecurrence: int wkst>;

        i1 = staticinvoke <com.android.calendarcommon2.EventRecurrence: int day2TimeDay(int)>($i9);

        i2 = r1.<android.text.format.Time: int weekDay>;

        i3 = 0;

     label06:
        $r13 = r0.<com.android.calendar.event.EditEventHelper: com.android.calendarcommon2.EventRecurrence mEventRecurrence>;

        $i11 = $r13.<com.android.calendarcommon2.EventRecurrence: int bydayCount>;

        if i3 >= $i11 goto label13;

        $r14 = r0.<com.android.calendar.event.EditEventHelper: com.android.calendarcommon2.EventRecurrence mEventRecurrence>;

        $r15 = $r14.<com.android.calendarcommon2.EventRecurrence: int[] byday>;

        $i15 = $r15[i3];

        i4 = staticinvoke <com.android.calendarcommon2.EventRecurrence: int day2TimeDay(int)>($i15);

        if i4 != i2 goto label07;

        return;

     label07:
        if i4 >= i1 goto label08;

        i4 = i4 + 7;

     label08:
        if i4 <= i2 goto label10;

        if i4 < i0 goto label09;

        if i0 >= i2 goto label10;

     label09:
        i0 = i4;

     label10:
        if i0 == 2147483647 goto label11;

        if i0 >= i2 goto label12;

     label11:
        if i4 >= i0 goto label12;

        i0 = i4;

     label12:
        i3 = i3 + 1;

        goto label06;

     label13:
        if i0 >= i2 goto label14;

        i0 = i0 + 7;

     label14:
        i16 = i0 - i2;

        $i10 = r1.<android.text.format.Time: int monthDay>;

        $i13 = $i10 + i16;

        r1.<android.text.format.Time: int monthDay> = $i13;

        $i12 = r2.<android.text.format.Time: int monthDay>;

        $i14 = $i12 + i16;

        r2.<android.text.format.Time: int monthDay> = $i14;

        l17 = virtualinvoke r1.<android.text.format.Time: long normalize(boolean)>(1);

        l5 = virtualinvoke r2.<android.text.format.Time: long normalize(boolean)>(1);

        r4.<com.android.calendar.CalendarEventModel: long mStart> = l17;

        r4.<com.android.calendar.CalendarEventModel: long mEnd> = l5;

        return;
    }

    public static java.lang.String extractDomain(java.lang.String)
    {
        java.lang.String r0, $r1;
        int i0, $i1, i2;

        r0 := @parameter0: java.lang.String;

        i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(64);

        if i0 == -1 goto label1;

        i2 = i0 + 1;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if i2 >= $i1 goto label1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i2);

        return $r1;

     label1:
        return null;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0, $r1, $r3, $r4, $r5;
        int[] $r2;

        <com.android.calendar.event.EditEventHelper: java.lang.String ATTENDEES_WHERE> = "event_id=? AND attendeeEmail IS NOT NULL";

        <com.android.calendar.event.EditEventHelper: int ATTENDEES_INDEX_STATUS> = 4;

        <com.android.calendar.event.EditEventHelper: int ATTENDEES_INDEX_RELATIONSHIP> = 3;

        <com.android.calendar.event.EditEventHelper: int ATTENDEES_INDEX_EMAIL> = 2;

        <com.android.calendar.event.EditEventHelper: int ATTENDEES_INDEX_NAME> = 1;

        <com.android.calendar.event.EditEventHelper: int ATTENDEES_INDEX_ID> = 0;

        <com.android.calendar.event.EditEventHelper: int COLORS_INDEX_COLOR_KEY> = 4;

        <com.android.calendar.event.EditEventHelper: int COLORS_INDEX_COLOR> = 3;

        <com.android.calendar.event.EditEventHelper: int COLORS_INDEX_ACCOUNT_TYPE> = 2;

        <com.android.calendar.event.EditEventHelper: int COLORS_INDEX_ACCOUNT_NAME> = 1;

        <com.android.calendar.event.EditEventHelper: java.lang.String COLORS_WHERE> = "account_name=? AND account_type=? AND color_type=1";

        <com.android.calendar.event.EditEventHelper: java.lang.String CALENDARS_WHERE> = "_id=?";

        <com.android.calendar.event.EditEventHelper: java.lang.String CALENDARS_WHERE_WRITEABLE_VISIBLE> = "calendar_access_level>=500 AND visible=1";

        <com.android.calendar.event.EditEventHelper: int CALENDARS_INDEX_ACCOUNT_TYPE> = 12;

        <com.android.calendar.event.EditEventHelper: int CALENDARS_INDEX_ACCOUNT_NAME> = 11;

        <com.android.calendar.event.EditEventHelper: int CALENDARS_INDEX_ALLOWED_AVAILABILITY> = 10;

        <com.android.calendar.event.EditEventHelper: int CALENDARS_INDEX_ALLOWED_ATTENDEE_TYPES> = 9;

        <com.android.calendar.event.EditEventHelper: int CALENDARS_INDEX_ALLOWED_REMINDERS> = 8;

        <com.android.calendar.event.EditEventHelper: int CALENDARS_INDEX_MAX_REMINDERS> = 7;

        <com.android.calendar.event.EditEventHelper: int CALENDARS_INDEX_VISIBLE> = 6;

        <com.android.calendar.event.EditEventHelper: int CALENDARS_INDEX_ACCESS_LEVEL> = 5;

        <com.android.calendar.event.EditEventHelper: int CALENDARS_INDEX_CAN_ORGANIZER_RESPOND> = 4;

        <com.android.calendar.event.EditEventHelper: int CALENDARS_INDEX_COLOR> = 3;

        <com.android.calendar.event.EditEventHelper: int CALENDARS_INDEX_OWNER_ACCOUNT> = 2;

        <com.android.calendar.event.EditEventHelper: int CALENDARS_INDEX_DISPLAY_NAME> = 1;

        <com.android.calendar.event.EditEventHelper: int CALENDARS_INDEX_ID> = 0;

        <com.android.calendar.event.EditEventHelper: java.lang.String EVENT_ALL_DAY> = "allDay";

        <com.android.calendar.event.EditEventHelper: int ATTENDEE_ID_NONE> = -1;

        <com.android.calendar.event.EditEventHelper: int DAY_IN_SECONDS> = 86400;

        <com.android.calendar.event.EditEventHelper: int MODIFY_ALL> = 3;

        <com.android.calendar.event.EditEventHelper: int MODIFY_ALL_FOLLOWING> = 2;

        <com.android.calendar.event.EditEventHelper: int MODIFY_SELECTED> = 1;

        <com.android.calendar.event.EditEventHelper: int MODIFY_UNINITIALIZED> = 0;

        <com.android.calendar.event.EditEventHelper: int REPEATS_CUSTOM> = 7;

        <com.android.calendar.event.EditEventHelper: int REPEATS_YEARLY> = 6;

        <com.android.calendar.event.EditEventHelper: int REPEATS_MONTHLY_ON_DAY> = 5;

        <com.android.calendar.event.EditEventHelper: int REPEATS_MONTHLY_ON_DAY_COUNT> = 4;

        <com.android.calendar.event.EditEventHelper: int REPEATS_WEEKLY_ON_DAY> = 3;

        <com.android.calendar.event.EditEventHelper: int REPEATS_EVERY_WEEKDAY> = 2;

        <com.android.calendar.event.EditEventHelper: int REPEATS_DAILY> = 1;

        <com.android.calendar.event.EditEventHelper: int DOES_NOT_REPEAT> = 0;

        <com.android.calendar.event.EditEventHelper: java.lang.String ATTENDEES_DELETE_PREFIX> = "event_id=? AND attendeeEmail IN (";

        <com.android.calendar.event.EditEventHelper: java.lang.String REMINDERS_WHERE> = "event_id=?";

        <com.android.calendar.event.EditEventHelper: int REMINDERS_INDEX_METHOD> = 2;

        <com.android.calendar.event.EditEventHelper: int REMINDERS_INDEX_MINUTES> = 1;

        <com.android.calendar.event.EditEventHelper: int EVENT_INDEX_EVENT_COLOR_KEY> = 24;

        <com.android.calendar.event.EditEventHelper: int EVENT_INDEX_EVENT_COLOR> = 23;

        <com.android.calendar.event.EditEventHelper: int EVENT_INDEX_CALENDAR_COLOR> = 22;

        <com.android.calendar.event.EditEventHelper: int EVENT_INDEX_EVENT_STATUS> = 21;

        <com.android.calendar.event.EditEventHelper: int EVENT_INDEX_ORIGINAL_ID> = 20;

        <com.android.calendar.event.EditEventHelper: int EVENT_INDEX_GUESTS_CAN_MODIFY> = 19;

        <com.android.calendar.event.EditEventHelper: int EVENT_INDEX_ORGANIZER> = 18;

        <com.android.calendar.event.EditEventHelper: int EVENT_INDEX_ORIGINAL_SYNC_ID> = 17;

        <com.android.calendar.event.EditEventHelper: int EVENT_INDEX_HAS_ATTENDEE_DATA> = 16;

        <com.android.calendar.event.EditEventHelper: int EVENT_INDEX_OWNER_ACCOUNT> = 15;

        <com.android.calendar.event.EditEventHelper: int EVENT_INDEX_ACCESS_LEVEL> = 14;

        <com.android.calendar.event.EditEventHelper: int EVENT_INDEX_AVAILABILITY> = 13;

        <com.android.calendar.event.EditEventHelper: int EVENT_INDEX_SYNC_ID> = 12;

        <com.android.calendar.event.EditEventHelper: int EVENT_INDEX_RRULE> = 11;

        <com.android.calendar.event.EditEventHelper: int EVENT_INDEX_TIMEZONE> = 10;

        <com.android.calendar.event.EditEventHelper: int EVENT_INDEX_DURATION> = 9;

        <com.android.calendar.event.EditEventHelper: int EVENT_INDEX_DTEND> = 8;

        <com.android.calendar.event.EditEventHelper: int EVENT_INDEX_DTSTART> = 7;

        <com.android.calendar.event.EditEventHelper: int EVENT_INDEX_CALENDAR_ID> = 6;

        <com.android.calendar.event.EditEventHelper: int EVENT_INDEX_HAS_ALARM> = 5;

        <com.android.calendar.event.EditEventHelper: int EVENT_INDEX_ALL_DAY> = 4;

        <com.android.calendar.event.EditEventHelper: int EVENT_INDEX_EVENT_LOCATION> = 3;

        <com.android.calendar.event.EditEventHelper: int EVENT_INDEX_DESCRIPTION> = 2;

        <com.android.calendar.event.EditEventHelper: int EVENT_INDEX_TITLE> = 1;

        <com.android.calendar.event.EditEventHelper: int EVENT_INDEX_ID> = 0;

        <com.android.calendar.event.EditEventHelper: java.lang.String NO_EVENT_COLOR> = "";

        <com.android.calendar.event.EditEventHelper: boolean DEBUG> = 0;

        <com.android.calendar.event.EditEventHelper: java.lang.String TAG> = "EditEventHelper";

        $r0 = newarray (java.lang.String)[25];

        $r0[0] = "_id";

        $r0[1] = "title";

        $r0[2] = "description";

        $r0[3] = "eventLocation";

        $r0[4] = "allDay";

        $r0[5] = "hasAlarm";

        $r0[6] = "calendar_id";

        $r0[7] = "dtstart";

        $r0[8] = "dtend";

        $r0[9] = "duration";

        $r0[10] = "eventTimezone";

        $r0[11] = "rrule";

        $r0[12] = "_sync_id";

        $r0[13] = "availability";

        $r0[14] = "accessLevel";

        $r0[15] = "ownerAccount";

        $r0[16] = "hasAttendeeData";

        $r0[17] = "original_sync_id";

        $r0[18] = "organizer";

        $r0[19] = "guestsCanModify";

        $r0[20] = "original_id";

        $r0[21] = "eventStatus";

        $r0[22] = "calendar_color";

        $r0[23] = "eventColor";

        $r0[24] = "eventColor_index";

        <com.android.calendar.event.EditEventHelper: java.lang.String[] EVENT_PROJECTION> = $r0;

        $r1 = newarray (java.lang.String)[3];

        $r1[0] = "_id";

        $r1[1] = "minutes";

        $r1[2] = "method";

        <com.android.calendar.event.EditEventHelper: java.lang.String[] REMINDERS_PROJECTION> = $r1;

        $r2 = newarray (int)[4];

        $r2[0] = 0;

        $r2[1] = 1;

        $r2[2] = 4;

        $r2[3] = 2;

        <com.android.calendar.event.EditEventHelper: int[] ATTENDEE_VALUES> = $r2;

        $r3 = newarray (java.lang.String)[13];

        $r3[0] = "_id";

        $r3[1] = "calendar_displayName";

        $r3[2] = "ownerAccount";

        $r3[3] = "calendar_color";

        $r3[4] = "canOrganizerRespond";

        $r3[5] = "calendar_access_level";

        $r3[6] = "visible";

        $r3[7] = "maxReminders";

        $r3[8] = "allowedReminders";

        $r3[9] = "allowedAttendeeTypes";

        $r3[10] = "allowedAvailability";

        $r3[11] = "account_name";

        $r3[12] = "account_type";

        <com.android.calendar.event.EditEventHelper: java.lang.String[] CALENDARS_PROJECTION> = $r3;

        $r4 = newarray (java.lang.String)[5];

        $r4[0] = "_id";

        $r4[1] = "account_name";

        $r4[2] = "account_type";

        $r4[3] = "color";

        $r4[4] = "color_index";

        <com.android.calendar.event.EditEventHelper: java.lang.String[] COLORS_PROJECTION> = $r4;

        $r5 = newarray (java.lang.String)[5];

        $r5[0] = "_id";

        $r5[1] = "attendeeName";

        $r5[2] = "attendeeEmail";

        $r5[3] = "attendeeRelationship";

        $r5[4] = "attendeeStatus";

        <com.android.calendar.event.EditEventHelper: java.lang.String[] ATTENDEES_PROJECTION> = $r5;

        return;
    }
}
