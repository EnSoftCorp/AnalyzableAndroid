public class com.android.calendar.event.EventLocationAdapter extends android.widget.ArrayAdapter implements android.widget.Filterable
{
    private static final java.lang.String TAG;
    private static java.util.ArrayList EMPTY_LIST;
    private static final java.lang.String[] CONTACTS_PROJECTION;
    private static final int CONTACTS_INDEX_ID;
    private static final int CONTACTS_INDEX_DISPLAY_NAME;
    private static final int CONTACTS_INDEX_ADDRESS;
    private static final int CONTACTS_INDEX_CONTACT_ID;
    private static final int CONTACTS_INDEX_PHOTO_ID;
    private static final java.lang.String CONTACTS_WHERE;
    private static final java.lang.String[] EVENT_PROJECTION;
    private static final int EVENT_INDEX_ID;
    private static final int EVENT_INDEX_LOCATION;
    private static final int EVENT_INDEX_VISIBLE;
    private static final java.lang.String LOCATION_WHERE;
    private static final int MAX_LOCATION_SUGGESTIONS;
    private final android.content.ContentResolver mResolver;
    private final android.view.LayoutInflater mInflater;
    private final java.util.ArrayList mResultList;
    private final java.util.Map mPhotoCache;

    public void <init>(android.content.Context)
    {
        com.android.calendar.event.EventLocationAdapter r0;
        android.content.Context r1;
        java.util.ArrayList $r2, $r3;
        java.util.HashMap $r4;
        android.content.ContentResolver $r5;
        java.lang.Object $r6;
        android.view.LayoutInflater $r7;

        r0 := @this: com.android.calendar.event.EventLocationAdapter;

        r1 := @parameter0: android.content.Context;

        $r2 = <com.android.calendar.event.EventLocationAdapter: java.util.ArrayList EMPTY_LIST>;

        specialinvoke r0.<android.widget.ArrayAdapter: void <init>(android.content.Context,int,java.util.List)>(r1, 2130968627, $r2);

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<com.android.calendar.event.EventLocationAdapter: java.util.ArrayList mResultList> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<com.android.calendar.event.EventLocationAdapter: java.util.Map mPhotoCache> = $r4;

        $r5 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r0.<com.android.calendar.event.EventLocationAdapter: android.content.ContentResolver mResolver> = $r5;

        $r6 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");

        $r7 = (android.view.LayoutInflater) $r6;

        r0.<com.android.calendar.event.EventLocationAdapter: android.view.LayoutInflater mInflater> = $r7;

        return;
    }

    public int getCount()
    {
        com.android.calendar.event.EventLocationAdapter r0;
        java.util.ArrayList $r1;
        int $i0;

        r0 := @this: com.android.calendar.event.EventLocationAdapter;

        $r1 = r0.<com.android.calendar.event.EventLocationAdapter: java.util.ArrayList mResultList>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        return $i0;
    }

    public com.android.calendar.event.EventLocationAdapter$Result getItem(int)
    {
        com.android.calendar.event.EventLocationAdapter r0;
        int i0, $i1;
        java.util.ArrayList $r1, $r2;
        java.lang.Object $r3;
        com.android.calendar.event.EventLocationAdapter$Result $r4;

        r0 := @this: com.android.calendar.event.EventLocationAdapter;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.calendar.event.EventLocationAdapter: java.util.ArrayList mResultList>;

        $i1 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        if i0 >= $i1 goto label1;

        $r2 = r0.<com.android.calendar.event.EventLocationAdapter: java.util.ArrayList mResultList>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r4 = (com.android.calendar.event.EventLocationAdapter$Result) $r3;

        return $r4;

     label1:
        return null;
    }

    public android.view.View getView(int, android.view.View, android.view.ViewGroup)
    {
        com.android.calendar.event.EventLocationAdapter r0;
        int i0, $i1;
        android.view.View r1, r3, $r9, $r10, $r11;
        android.view.ViewGroup r2;
        com.android.calendar.event.EventLocationAdapter$Result r4;
        android.widget.TextView r5, r6;
        android.widget.ImageView r7;
        android.graphics.Bitmap r8;
        java.lang.Integer $r12, $r13;
        android.net.Uri $r14, $r16, $r18, $r20;
        java.util.Map $r15;
        java.lang.Object $r17;
        java.lang.String $r19, $r21, $r22;
        android.view.LayoutInflater $r23;

        r0 := @this: com.android.calendar.event.EventLocationAdapter;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.View;

        r2 := @parameter2: android.view.ViewGroup;

        r3 = r1;

        if r3 != null goto label1;

        $r23 = r0.<com.android.calendar.event.EventLocationAdapter: android.view.LayoutInflater mInflater>;

        r3 = virtualinvoke $r23.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup,boolean)>(2130968627, r2, 0);

     label1:
        r4 = virtualinvoke r0.<com.android.calendar.event.EventLocationAdapter: com.android.calendar.event.EventLocationAdapter$Result getItem(int)>(i0);

        if r4 != null goto label2;

        return r3;

     label2:
        $r9 = virtualinvoke r3.<android.view.View: android.view.View findViewById(int)>(2131755198);

        r5 = (android.widget.TextView) $r9;

        if r5 == null goto label4;

        $r22 = staticinvoke <com.android.calendar.event.EventLocationAdapter$Result: java.lang.String access$000(com.android.calendar.event.EventLocationAdapter$Result)>(r4);

        if $r22 != null goto label3;

        virtualinvoke r5.<android.widget.TextView: void setVisibility(int)>(8);

        goto label4;

     label3:
        virtualinvoke r5.<android.widget.TextView: void setVisibility(int)>(0);

        $r21 = staticinvoke <com.android.calendar.event.EventLocationAdapter$Result: java.lang.String access$000(com.android.calendar.event.EventLocationAdapter$Result)>(r4);

        virtualinvoke r5.<android.widget.TextView: void setText(java.lang.CharSequence)>($r21);

     label4:
        $r10 = virtualinvoke r3.<android.view.View: android.view.View findViewById(int)>(2131755199);

        r6 = (android.widget.TextView) $r10;

        if r6 == null goto label5;

        $r19 = staticinvoke <com.android.calendar.event.EventLocationAdapter$Result: java.lang.String access$100(com.android.calendar.event.EventLocationAdapter$Result)>(r4);

        virtualinvoke r6.<android.widget.TextView: void setText(java.lang.CharSequence)>($r19);

     label5:
        $r11 = virtualinvoke r3.<android.view.View: android.view.View findViewById(int)>(2131755197);

        r7 = (android.widget.ImageView) $r11;

        if r7 == null goto label8;

        $r12 = staticinvoke <com.android.calendar.event.EventLocationAdapter$Result: java.lang.Integer access$200(com.android.calendar.event.EventLocationAdapter$Result)>(r4);

        if $r12 != null goto label6;

        virtualinvoke r7.<android.widget.ImageView: void setVisibility(int)>(4);

        goto label8;

     label6:
        virtualinvoke r7.<android.widget.ImageView: void setVisibility(int)>(0);

        $r13 = staticinvoke <com.android.calendar.event.EventLocationAdapter$Result: java.lang.Integer access$200(com.android.calendar.event.EventLocationAdapter$Result)>(r4);

        $i1 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        virtualinvoke r7.<android.widget.ImageView: void setImageResource(int)>($i1);

        $r14 = staticinvoke <com.android.calendar.event.EventLocationAdapter$Result: android.net.Uri access$300(com.android.calendar.event.EventLocationAdapter$Result)>(r4);

        virtualinvoke r7.<android.widget.ImageView: void setTag(java.lang.Object)>($r14);

        $r16 = staticinvoke <com.android.calendar.event.EventLocationAdapter$Result: android.net.Uri access$300(com.android.calendar.event.EventLocationAdapter$Result)>(r4);

        if $r16 == null goto label8;

        $r15 = r0.<com.android.calendar.event.EventLocationAdapter: java.util.Map mPhotoCache>;

        $r18 = staticinvoke <com.android.calendar.event.EventLocationAdapter$Result: android.net.Uri access$300(com.android.calendar.event.EventLocationAdapter$Result)>(r4);

        $r17 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>($r18);

        r8 = (android.graphics.Bitmap) $r17;

        if r8 == null goto label7;

        virtualinvoke r7.<android.widget.ImageView: void setImageBitmap(android.graphics.Bitmap)>(r8);

        goto label8;

     label7:
        $r20 = staticinvoke <com.android.calendar.event.EventLocationAdapter$Result: android.net.Uri access$300(com.android.calendar.event.EventLocationAdapter$Result)>(r4);

        specialinvoke r0.<com.android.calendar.event.EventLocationAdapter: void asyncLoadPhotoAndUpdateView(android.net.Uri,android.widget.ImageView)>($r20, r7);

     label8:
        return r3;
    }

    private void asyncLoadPhotoAndUpdateView(android.net.Uri, android.widget.ImageView)
    {
        com.android.calendar.event.EventLocationAdapter r0;
        android.net.Uri r1;
        android.widget.ImageView r2;
        com.android.calendar.event.EventLocationAdapter$1 $r4;
        java.lang.Void[] $r5;

        r0 := @this: com.android.calendar.event.EventLocationAdapter;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: android.widget.ImageView;

        $r4 = new com.android.calendar.event.EventLocationAdapter$1;

        specialinvoke $r4.<com.android.calendar.event.EventLocationAdapter$1: void <init>(com.android.calendar.event.EventLocationAdapter,android.net.Uri,android.widget.ImageView)>(r0, r1, r2);

        $r5 = newarray (java.lang.Void)[0];

        virtualinvoke $r4.<com.android.calendar.event.EventLocationAdapter$1: android.os.AsyncTask execute(java.lang.Object[])>($r5);

        return;
    }

    public android.widget.Filter getFilter()
    {
        com.android.calendar.event.EventLocationAdapter r0;
        com.android.calendar.event.EventLocationAdapter$LocationFilter $r1;

        r0 := @this: com.android.calendar.event.EventLocationAdapter;

        $r1 = new com.android.calendar.event.EventLocationAdapter$LocationFilter;

        specialinvoke $r1.<com.android.calendar.event.EventLocationAdapter$LocationFilter: void <init>(com.android.calendar.event.EventLocationAdapter)>(r0);

        return $r1;
    }

    private static java.util.List queryContacts(android.content.ContentResolver, java.lang.String, java.util.HashSet)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, r3, r5, r6, r7, r8;
        java.util.HashSet r2;
        java.lang.String[] r4, $r13, $r33;
        java.util.List r9, r39;
        com.android.calendar.event.EventLocationAdapter$Result r10, $r19, $r24;
        android.net.Uri r11, $r14, $r23;
        java.lang.Throwable r12, $r32;
        boolean $z0, $z1, $z3;
        java.util.HashMap $r15, r36;
        java.util.Collection $r16;
        java.util.ArrayList $r17, $r21, r37, r40;
        java.lang.Object $r18, $r20;
        long $l0, $l2;
        byte $b1;
        java.lang.Integer $r25;
        java.lang.StringBuilder $r26, $r27, $r28, $r29, $r30, $r31, $r34;
        android.database.Cursor r35;
        java.util.Iterator r38;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.HashSet;

        r3 = null;

        r4 = null;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 != 0 goto label01;

        r3 = <com.android.calendar.event.EventLocationAdapter: java.lang.String CONTACTS_WHERE>;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%");

        r5 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("% ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r34 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%");

        r6 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        $r33 = newarray (java.lang.String)[4];

        $r33[0] = r5;

        $r33[1] = r6;

        $r33[2] = r5;

        $r33[3] = r6;

        r4 = $r33;

     label01:
        $r14 = <android.provider.ContactsContract$CommonDataKinds$StructuredPostal: android.net.Uri CONTENT_URI>;

        $r13 = <com.android.calendar.event.EventLocationAdapter: java.lang.String[] CONTACTS_PROJECTION>;

        r35 = virtualinvoke r0.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r14, $r13, r3, r4, "display_name ASC");

     label02:
        $r15 = new java.util.HashMap;

        specialinvoke $r15.<java.util.HashMap: void <init>()>();

        r36 = $r15;

        interfaceinvoke r35.<android.database.Cursor: boolean moveToPosition(int)>(-1);

     label03:
        $z1 = interfaceinvoke r35.<android.database.Cursor: boolean moveToNext()>();

        if $z1 == 0 goto label08;

        r7 = interfaceinvoke r35.<android.database.Cursor: java.lang.String getString(int)>(1);

        r8 = interfaceinvoke r35.<android.database.Cursor: java.lang.String getString(int)>(2);

        if r7 == null goto label07;

        $r20 = interfaceinvoke r36.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7);

        r9 = (java.util.List) $r20;

        if r9 != null goto label05;

        r11 = null;

        $l0 = interfaceinvoke r35.<android.database.Cursor: long getLong(int)>(4);

        $b1 = $l0 cmp 0L;

        if $b1 <= 0 goto label04;

        $r23 = <android.provider.ContactsContract$Contacts: android.net.Uri CONTENT_URI>;

        $l2 = interfaceinvoke r35.<android.database.Cursor: long getLong(int)>(3);

        r11 = staticinvoke <android.content.ContentUris: android.net.Uri withAppendedId(android.net.Uri,long)>($r23, $l2);

     label04:
        $r21 = new java.util.ArrayList;

        specialinvoke $r21.<java.util.ArrayList: void <init>()>();

        r9 = $r21;

        interfaceinvoke r36.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, r9);

        $r24 = new com.android.calendar.event.EventLocationAdapter$Result;

        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2130837563);

        specialinvoke $r24.<com.android.calendar.event.EventLocationAdapter$Result: void <init>(java.lang.String,java.lang.String,java.lang.Integer,android.net.Uri)>(r7, r8, $r25, r11);

        r10 = $r24;

        goto label06;

     label05:
        $r19 = new com.android.calendar.event.EventLocationAdapter$Result;

        specialinvoke $r19.<com.android.calendar.event.EventLocationAdapter$Result: void <init>(java.lang.String,java.lang.String,java.lang.Integer,android.net.Uri)>(null, r8, null, null);

        r10 = $r19;

     label06:
        interfaceinvoke r9.<java.util.List: boolean add(java.lang.Object)>(r10);

        virtualinvoke r2.<java.util.HashSet: boolean add(java.lang.Object)>(r8);

     label07:
        goto label03;

     label08:
        $r17 = new java.util.ArrayList;

        specialinvoke $r17.<java.util.ArrayList: void <init>()>();

        r37 = $r17;

        $r16 = interfaceinvoke r36.<java.util.Map: java.util.Collection values()>();

        r38 = interfaceinvoke $r16.<java.util.Collection: java.util.Iterator iterator()>();

     label09:
        $z3 = interfaceinvoke r38.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label10;

        $r18 = interfaceinvoke r38.<java.util.Iterator: java.lang.Object next()>();

        r39 = (java.util.List) $r18;

        interfaceinvoke r37.<java.util.List: boolean addAll(java.util.Collection)>(r39);

        goto label09;

     label10:
        r40 = r37;

     label11:
        if r35 == null goto label12;

        interfaceinvoke r35.<android.database.Cursor: void close()>();

     label12:
        return r40;

     label13:
        $r32 := @caughtexception;

        r12 = $r32;

     label14:
        if r35 == null goto label15;

        interfaceinvoke r35.<android.database.Cursor: void close()>();

     label15:
        throw r12;

        catch java.lang.Throwable from label02 to label11 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
    }

    private static java.util.List queryRecentLocations(android.content.ContentResolver, java.lang.String)
    {
        android.content.ContentResolver r0;
        java.lang.String r1, r2, $r10;
        android.database.Cursor r3;
        java.util.List r4, r5;
        java.lang.Throwable r6, $r14;
        java.lang.StringBuilder $r7, $r8, $r9;
        boolean $z0;
        java.lang.String[] $r11, $r12;
        android.net.Uri $r13;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        if r1 != null goto label01;

        $r10 = "";

        goto label02;

     label01:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label02:
        r2 = $r10;

        $z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label03;

        return null;

     label03:
        $r13 = <android.provider.CalendarContract$Events: android.net.Uri CONTENT_URI>;

        $r12 = <com.android.calendar.event.EventLocationAdapter: java.lang.String[] EVENT_PROJECTION>;

        $r11 = newarray (java.lang.String)[2];

        $r11[0] = "1";

        $r11[1] = r2;

        r3 = virtualinvoke r0.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r13, $r12, "visible=? AND eventLocation LIKE ?", $r11, "_id DESC");

     label04:
        r4 = null;

        if r3 == null goto label05;

        r4 = staticinvoke <com.android.calendar.event.EventLocationAdapter: java.util.List processLocationsQueryResults(android.database.Cursor)>(r3);

     label05:
        r5 = r4;

     label06:
        if r3 == null goto label07;

        interfaceinvoke r3.<android.database.Cursor: void close()>();

     label07:
        return r5;

     label08:
        $r14 := @caughtexception;

        r6 = $r14;

     label09:
        if r3 == null goto label10;

        interfaceinvoke r3.<android.database.Cursor: void close()>();

     label10:
        throw r6;

        catch java.lang.Throwable from label04 to label06 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    private static java.util.List processLocationsQueryResults(android.database.Cursor)
    {
        android.database.Cursor r0;
        java.util.TreeSet r1, $r5;
        java.lang.String r2, r4, $r11;
        java.util.Iterator r3;
        java.util.Comparator $r6;
        int $i0;
        java.util.ArrayList $r7, r12;
        boolean $z1, $z2;
        java.lang.Object $r8;
        com.android.calendar.event.EventLocationAdapter$Result $r9;
        java.lang.Integer $r10;

        r0 := @parameter0: android.database.Cursor;

        $r5 = new java.util.TreeSet;

        $r6 = <java.lang.String: java.util.Comparator CASE_INSENSITIVE_ORDER>;

        specialinvoke $r5.<java.util.TreeSet: void <init>(java.util.Comparator)>($r6);

        r1 = $r5;

        interfaceinvoke r0.<android.database.Cursor: boolean moveToPosition(int)>(-1);

     label1:
        $i0 = virtualinvoke r1.<java.util.TreeSet: int size()>();

        if $i0 >= 4 goto label2;

        $z2 = interfaceinvoke r0.<android.database.Cursor: boolean moveToNext()>();

        if $z2 == 0 goto label2;

        $r11 = interfaceinvoke r0.<android.database.Cursor: java.lang.String getString(int)>(1);

        r2 = virtualinvoke $r11.<java.lang.String: java.lang.String trim()>();

        virtualinvoke r1.<java.util.TreeSet: boolean add(java.lang.Object)>(r2);

        goto label1;

     label2:
        $r7 = new java.util.ArrayList;

        specialinvoke $r7.<java.util.ArrayList: void <init>()>();

        r12 = $r7;

        r3 = virtualinvoke r1.<java.util.TreeSet: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r8 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r8;

        $r9 = new com.android.calendar.event.EventLocationAdapter$Result;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2130837567);

        specialinvoke $r9.<com.android.calendar.event.EventLocationAdapter$Result: void <init>(java.lang.String,java.lang.String,java.lang.Integer,android.net.Uri)>(null, r4, $r10, null);

        interfaceinvoke r12.<java.util.List: boolean add(java.lang.Object)>($r9);

        goto label3;

     label4:
        return r12;
    }

    public volatile java.lang.Object getItem(int)
    {
        com.android.calendar.event.EventLocationAdapter r0;
        int i0;
        com.android.calendar.event.EventLocationAdapter$Result $r1;

        r0 := @this: com.android.calendar.event.EventLocationAdapter;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.android.calendar.event.EventLocationAdapter: com.android.calendar.event.EventLocationAdapter$Result getItem(int)>(i0);

        return $r1;
    }

    static android.content.ContentResolver access$400(com.android.calendar.event.EventLocationAdapter)
    {
        com.android.calendar.event.EventLocationAdapter r0;
        android.content.ContentResolver $r1;

        r0 := @parameter0: com.android.calendar.event.EventLocationAdapter;

        $r1 = r0.<com.android.calendar.event.EventLocationAdapter: android.content.ContentResolver mResolver>;

        return $r1;
    }

    static java.util.Map access$500(com.android.calendar.event.EventLocationAdapter)
    {
        com.android.calendar.event.EventLocationAdapter r0;
        java.util.Map $r1;

        r0 := @parameter0: com.android.calendar.event.EventLocationAdapter;

        $r1 = r0.<com.android.calendar.event.EventLocationAdapter: java.util.Map mPhotoCache>;

        return $r1;
    }

    static java.util.List access$600(android.content.ContentResolver, java.lang.String)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        java.util.List $r2;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <com.android.calendar.event.EventLocationAdapter: java.util.List queryRecentLocations(android.content.ContentResolver,java.lang.String)>(r0, r1);

        return $r2;
    }

    static java.util.List access$700(android.content.ContentResolver, java.lang.String, java.util.HashSet)
    {
        android.content.ContentResolver r0;
        java.lang.String r1;
        java.util.HashSet r2;
        java.util.List $r3;

        r0 := @parameter0: android.content.ContentResolver;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.HashSet;

        $r3 = staticinvoke <com.android.calendar.event.EventLocationAdapter: java.util.List queryContacts(android.content.ContentResolver,java.lang.String,java.util.HashSet)>(r0, r1, r2);

        return $r3;
    }

    static java.util.ArrayList access$800(com.android.calendar.event.EventLocationAdapter)
    {
        com.android.calendar.event.EventLocationAdapter r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: com.android.calendar.event.EventLocationAdapter;

        $r1 = r0.<com.android.calendar.event.EventLocationAdapter: java.util.ArrayList mResultList>;

        return $r1;
    }

    static void <clinit>()
    {
        java.util.ArrayList $r0;
        java.lang.String[] $r1, $r13;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        java.lang.String $r12;

        <com.android.calendar.event.EventLocationAdapter: int MAX_LOCATION_SUGGESTIONS> = 4;

        <com.android.calendar.event.EventLocationAdapter: java.lang.String LOCATION_WHERE> = "visible=? AND eventLocation LIKE ?";

        <com.android.calendar.event.EventLocationAdapter: int EVENT_INDEX_VISIBLE> = 2;

        <com.android.calendar.event.EventLocationAdapter: int EVENT_INDEX_LOCATION> = 1;

        <com.android.calendar.event.EventLocationAdapter: int EVENT_INDEX_ID> = 0;

        <com.android.calendar.event.EventLocationAdapter: int CONTACTS_INDEX_PHOTO_ID> = 4;

        <com.android.calendar.event.EventLocationAdapter: int CONTACTS_INDEX_CONTACT_ID> = 3;

        <com.android.calendar.event.EventLocationAdapter: int CONTACTS_INDEX_ADDRESS> = 2;

        <com.android.calendar.event.EventLocationAdapter: int CONTACTS_INDEX_DISPLAY_NAME> = 1;

        <com.android.calendar.event.EventLocationAdapter: int CONTACTS_INDEX_ID> = 0;

        <com.android.calendar.event.EventLocationAdapter: java.lang.String TAG> = "EventLocationAdapter";

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        <com.android.calendar.event.EventLocationAdapter: java.util.ArrayList EMPTY_LIST> = $r0;

        $r1 = newarray (java.lang.String)[5];

        $r1[0] = "_id";

        $r1[1] = "display_name";

        $r1[2] = "data1";

        $r1[3] = "contact_id";

        $r1[4] = "photo_id";

        <com.android.calendar.event.EventLocationAdapter: java.lang.String[] CONTACTS_PROJECTION> = $r1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("data1");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" LIKE ? OR ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("data1");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" LIKE ? OR ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("display_name");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" LIKE ? OR ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("display_name");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" LIKE ? )");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        <com.android.calendar.event.EventLocationAdapter: java.lang.String CONTACTS_WHERE> = $r12;

        $r13 = newarray (java.lang.String)[3];

        $r13[0] = "_id";

        $r13[1] = "eventLocation";

        $r13[2] = "visible";

        <com.android.calendar.event.EventLocationAdapter: java.lang.String[] EVENT_PROJECTION> = $r13;

        return;
    }
}
