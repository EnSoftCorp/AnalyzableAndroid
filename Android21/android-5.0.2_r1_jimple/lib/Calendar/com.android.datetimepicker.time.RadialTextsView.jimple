public class com.android.datetimepicker.time.RadialTextsView extends android.view.View
{
    private static final java.lang.String TAG;
    private final android.graphics.Paint mPaint;
    private boolean mDrawValuesReady;
    private boolean mIsInitialized;
    private android.graphics.Typeface mTypefaceLight;
    private android.graphics.Typeface mTypefaceRegular;
    private java.lang.String[] mTexts;
    private java.lang.String[] mInnerTexts;
    private boolean mIs24HourMode;
    private boolean mHasInnerCircle;
    private float mCircleRadiusMultiplier;
    private float mAmPmCircleRadiusMultiplier;
    private float mNumbersRadiusMultiplier;
    private float mInnerNumbersRadiusMultiplier;
    private float mTextSizeMultiplier;
    private float mInnerTextSizeMultiplier;
    private int mXCenter;
    private int mYCenter;
    private float mCircleRadius;
    private boolean mTextGridValuesDirty;
    private float mTextSize;
    private float mInnerTextSize;
    private float[] mTextGridHeights;
    private float[] mTextGridWidths;
    private float[] mInnerTextGridHeights;
    private float[] mInnerTextGridWidths;
    private float mAnimationRadiusMultiplier;
    private float mTransitionMidRadiusMultiplier;
    private float mTransitionEndRadiusMultiplier;
    android.animation.ObjectAnimator mDisappearAnimator;
    android.animation.ObjectAnimator mReappearAnimator;
    private com.android.datetimepicker.time.RadialTextsView$InvalidateUpdateListener mInvalidateUpdateListener;

    public void <init>(android.content.Context)
    {
        com.android.datetimepicker.time.RadialTextsView r0;
        android.content.Context r1;
        android.graphics.Paint $r2;

        r0 := @this: com.android.datetimepicker.time.RadialTextsView;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<android.view.View: void <init>(android.content.Context)>(r1);

        $r2 = new android.graphics.Paint;

        specialinvoke $r2.<android.graphics.Paint: void <init>()>();

        r0.<com.android.datetimepicker.time.RadialTextsView: android.graphics.Paint mPaint> = $r2;

        r0.<com.android.datetimepicker.time.RadialTextsView: boolean mIsInitialized> = 0;

        return;
    }

    public void initialize(android.content.res.Resources, java.lang.String[], java.lang.String[], boolean, boolean)
    {
        com.android.datetimepicker.time.RadialTextsView r0;
        android.content.res.Resources r1;
        java.lang.String[] r2, r3;
        boolean z0, z1, $z2, $z3, $z4;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i11, $i12, $i13, $i14;
        java.lang.String r4, r5, $r12, $r13, $r16, $r17, $r19, $r20, $r21, $r24, $r25;
        android.graphics.Paint $r6, $r8, $r10;
        android.graphics.Typeface $r7, $r9;
        android.graphics.Paint$Align $r11;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14;
        float[] $r14, $r15, $r22, $r23;
        com.android.datetimepicker.time.RadialTextsView$InvalidateUpdateListener $r18;
        byte $b9, $b10;

        r0 := @this: com.android.datetimepicker.time.RadialTextsView;

        r1 := @parameter0: android.content.res.Resources;

        r2 := @parameter1: java.lang.String[];

        r3 := @parameter2: java.lang.String[];

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        $z2 = r0.<com.android.datetimepicker.time.RadialTextsView: boolean mIsInitialized>;

        if $z2 == 0 goto label01;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RadialTextsView", "This RadialTextsView may only be initialized once.");

        return;

     label01:
        $i1 = <com.android.datetimepicker.R$color: int numbers_text_color>;

        i0 = virtualinvoke r1.<android.content.res.Resources: int getColor(int)>($i1);

        $r6 = r0.<com.android.datetimepicker.time.RadialTextsView: android.graphics.Paint mPaint>;

        virtualinvoke $r6.<android.graphics.Paint: void setColor(int)>(i0);

        $i2 = <com.android.datetimepicker.R$string: int radial_numbers_typeface>;

        r4 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>($i2);

        $r7 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(java.lang.String,int)>(r4, 0);

        r0.<com.android.datetimepicker.time.RadialTextsView: android.graphics.Typeface mTypefaceLight> = $r7;

        $i3 = <com.android.datetimepicker.R$string: int sans_serif>;

        r5 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>($i3);

        $r9 = staticinvoke <android.graphics.Typeface: android.graphics.Typeface create(java.lang.String,int)>(r5, 0);

        r0.<com.android.datetimepicker.time.RadialTextsView: android.graphics.Typeface mTypefaceRegular> = $r9;

        $r8 = r0.<com.android.datetimepicker.time.RadialTextsView: android.graphics.Paint mPaint>;

        virtualinvoke $r8.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r10 = r0.<com.android.datetimepicker.time.RadialTextsView: android.graphics.Paint mPaint>;

        $r11 = <android.graphics.Paint$Align: android.graphics.Paint$Align CENTER>;

        virtualinvoke $r10.<android.graphics.Paint: void setTextAlign(android.graphics.Paint$Align)>($r11);

        r0.<com.android.datetimepicker.time.RadialTextsView: java.lang.String[] mTexts> = r2;

        r0.<com.android.datetimepicker.time.RadialTextsView: java.lang.String[] mInnerTexts> = r3;

        r0.<com.android.datetimepicker.time.RadialTextsView: boolean mIs24HourMode> = z0;

        if r3 == null goto label02;

        $z4 = 1;

        goto label03;

     label02:
        $z4 = 0;

     label03:
        r0.<com.android.datetimepicker.time.RadialTextsView: boolean mHasInnerCircle> = $z4;

        if z0 == 0 goto label04;

        $i14 = <com.android.datetimepicker.R$string: int circle_radius_multiplier_24HourMode>;

        $r25 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>($i14);

        $f14 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r25);

        r0.<com.android.datetimepicker.time.RadialTextsView: float mCircleRadiusMultiplier> = $f14;

        goto label05;

     label04:
        $i4 = <com.android.datetimepicker.R$string: int circle_radius_multiplier>;

        $r12 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>($i4);

        $f0 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r12);

        r0.<com.android.datetimepicker.time.RadialTextsView: float mCircleRadiusMultiplier> = $f0;

        $i5 = <com.android.datetimepicker.R$string: int ampm_circle_radius_multiplier>;

        $r13 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>($i5);

        $f1 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r13);

        r0.<com.android.datetimepicker.time.RadialTextsView: float mAmPmCircleRadiusMultiplier> = $f1;

     label05:
        $r15 = newarray (float)[7];

        r0.<com.android.datetimepicker.time.RadialTextsView: float[] mTextGridHeights> = $r15;

        $r14 = newarray (float)[7];

        r0.<com.android.datetimepicker.time.RadialTextsView: float[] mTextGridWidths> = $r14;

        $z3 = r0.<com.android.datetimepicker.time.RadialTextsView: boolean mHasInnerCircle>;

        if $z3 == 0 goto label06;

        $i8 = <com.android.datetimepicker.R$string: int numbers_radius_multiplier_outer>;

        $r19 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>($i8);

        $f11 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r19);

        r0.<com.android.datetimepicker.time.RadialTextsView: float mNumbersRadiusMultiplier> = $f11;

        $i11 = <com.android.datetimepicker.R$string: int text_size_multiplier_outer>;

        $r20 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>($i11);

        $f10 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r20);

        r0.<com.android.datetimepicker.time.RadialTextsView: float mTextSizeMultiplier> = $f10;

        $i13 = <com.android.datetimepicker.R$string: int numbers_radius_multiplier_inner>;

        $r21 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>($i13);

        $f12 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r21);

        r0.<com.android.datetimepicker.time.RadialTextsView: float mInnerNumbersRadiusMultiplier> = $f12;

        $i12 = <com.android.datetimepicker.R$string: int text_size_multiplier_inner>;

        $r24 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>($i12);

        $f13 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r24);

        r0.<com.android.datetimepicker.time.RadialTextsView: float mInnerTextSizeMultiplier> = $f13;

        $r23 = newarray (float)[7];

        r0.<com.android.datetimepicker.time.RadialTextsView: float[] mInnerTextGridHeights> = $r23;

        $r22 = newarray (float)[7];

        r0.<com.android.datetimepicker.time.RadialTextsView: float[] mInnerTextGridWidths> = $r22;

        goto label07;

     label06:
        $i6 = <com.android.datetimepicker.R$string: int numbers_radius_multiplier_normal>;

        $r17 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>($i6);

        $f2 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r17);

        r0.<com.android.datetimepicker.time.RadialTextsView: float mNumbersRadiusMultiplier> = $f2;

        $i7 = <com.android.datetimepicker.R$string: int text_size_multiplier_normal>;

        $r16 = virtualinvoke r1.<android.content.res.Resources: java.lang.String getString(int)>($i7);

        $f5 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>($r16);

        r0.<com.android.datetimepicker.time.RadialTextsView: float mTextSizeMultiplier> = $f5;

     label07:
        r0.<com.android.datetimepicker.time.RadialTextsView: float mAnimationRadiusMultiplier> = 1.0F;

        if z1 == 0 goto label08;

        $b10 = -1;

        goto label09;

     label08:
        $b10 = 1;

     label09:
        $f6 = (float) $b10;

        $f3 = 0.05F * $f6;

        $f4 = 1.0F + $f3;

        r0.<com.android.datetimepicker.time.RadialTextsView: float mTransitionMidRadiusMultiplier> = $f4;

        if z1 == 0 goto label10;

        $b9 = 1;

        goto label11;

     label10:
        $b9 = -1;

     label11:
        $f8 = (float) $b9;

        $f9 = 0.3F * $f8;

        $f7 = 1.0F + $f9;

        r0.<com.android.datetimepicker.time.RadialTextsView: float mTransitionEndRadiusMultiplier> = $f7;

        $r18 = new com.android.datetimepicker.time.RadialTextsView$InvalidateUpdateListener;

        specialinvoke $r18.<com.android.datetimepicker.time.RadialTextsView$InvalidateUpdateListener: void <init>(com.android.datetimepicker.time.RadialTextsView,com.android.datetimepicker.time.RadialTextsView$1)>(r0, null);

        r0.<com.android.datetimepicker.time.RadialTextsView: com.android.datetimepicker.time.RadialTextsView$InvalidateUpdateListener mInvalidateUpdateListener> = $r18;

        r0.<com.android.datetimepicker.time.RadialTextsView: boolean mTextGridValuesDirty> = 1;

        r0.<com.android.datetimepicker.time.RadialTextsView: boolean mIsInitialized> = 1;

        return;
    }

    void setTheme(android.content.Context, boolean)
    {
        com.android.datetimepicker.time.RadialTextsView r0;
        android.content.Context r1;
        boolean z0;
        android.content.res.Resources r2;
        int i0, $i1, $i2;
        android.graphics.Paint $r3;

        r0 := @this: com.android.datetimepicker.time.RadialTextsView;

        r1 := @parameter0: android.content.Context;

        z0 := @parameter1: boolean;

        r2 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        if z0 == 0 goto label1;

        $i2 = <com.android.datetimepicker.R$color: int white>;

        i0 = virtualinvoke r2.<android.content.res.Resources: int getColor(int)>($i2);

        goto label2;

     label1:
        $i1 = <com.android.datetimepicker.R$color: int numbers_text_color>;

        i0 = virtualinvoke r2.<android.content.res.Resources: int getColor(int)>($i1);

     label2:
        $r3 = r0.<com.android.datetimepicker.time.RadialTextsView: android.graphics.Paint mPaint>;

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>(i0);

        return;
    }

    public boolean hasOverlappingRendering()
    {
        com.android.datetimepicker.time.RadialTextsView r0;

        r0 := @this: com.android.datetimepicker.time.RadialTextsView;

        return 0;
    }

    public void setAnimationRadiusMultiplier(float)
    {
        com.android.datetimepicker.time.RadialTextsView r0;
        float f0;

        r0 := @this: com.android.datetimepicker.time.RadialTextsView;

        f0 := @parameter0: float;

        r0.<com.android.datetimepicker.time.RadialTextsView: float mAnimationRadiusMultiplier> = f0;

        r0.<com.android.datetimepicker.time.RadialTextsView: boolean mTextGridValuesDirty> = 1;

        return;
    }

    public void onDraw(android.graphics.Canvas)
    {
        com.android.datetimepicker.time.RadialTextsView r0;
        android.graphics.Canvas r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        float f0, f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, f32;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        float[] $r2, $r3, $r6, $r8, $r10, $r11, $r12, $r13;
        java.lang.String[] $r4, $r7;
        android.graphics.Typeface $r5, $r9;

        r0 := @this: com.android.datetimepicker.time.RadialTextsView;

        r1 := @parameter0: android.graphics.Canvas;

        i0 = virtualinvoke r0.<com.android.datetimepicker.time.RadialTextsView: int getWidth()>();

        if i0 == 0 goto label1;

        $z0 = r0.<com.android.datetimepicker.time.RadialTextsView: boolean mIsInitialized>;

        if $z0 != 0 goto label2;

     label1:
        return;

     label2:
        $z1 = r0.<com.android.datetimepicker.time.RadialTextsView: boolean mDrawValuesReady>;

        if $z1 != 0 goto label5;

        $i5 = virtualinvoke r0.<com.android.datetimepicker.time.RadialTextsView: int getWidth()>();

        $i8 = $i5 / 2;

        r0.<com.android.datetimepicker.time.RadialTextsView: int mXCenter> = $i8;

        $i9 = virtualinvoke r0.<com.android.datetimepicker.time.RadialTextsView: int getHeight()>();

        $i6 = $i9 / 2;

        r0.<com.android.datetimepicker.time.RadialTextsView: int mYCenter> = $i6;

        $i11 = r0.<com.android.datetimepicker.time.RadialTextsView: int mXCenter>;

        $i7 = r0.<com.android.datetimepicker.time.RadialTextsView: int mYCenter>;

        $i10 = staticinvoke <java.lang.Math: int min(int,int)>($i11, $i7);

        $f18 = (float) $i10;

        $f19 = r0.<com.android.datetimepicker.time.RadialTextsView: float mCircleRadiusMultiplier>;

        $f22 = $f18 * $f19;

        r0.<com.android.datetimepicker.time.RadialTextsView: float mCircleRadius> = $f22;

        $z5 = r0.<com.android.datetimepicker.time.RadialTextsView: boolean mIs24HourMode>;

        if $z5 != 0 goto label3;

        $f26 = r0.<com.android.datetimepicker.time.RadialTextsView: float mCircleRadius>;

        $f27 = r0.<com.android.datetimepicker.time.RadialTextsView: float mAmPmCircleRadiusMultiplier>;

        f0 = $f26 * $f27;

        $i12 = r0.<com.android.datetimepicker.time.RadialTextsView: int mYCenter>;

        $f30 = (float) $i12;

        $f29 = f0 / 2.0F;

        $f31 = $f30 - $f29;

        $i13 = (int) $f31;

        r0.<com.android.datetimepicker.time.RadialTextsView: int mYCenter> = $i13;

     label3:
        $f20 = r0.<com.android.datetimepicker.time.RadialTextsView: float mCircleRadius>;

        $f21 = r0.<com.android.datetimepicker.time.RadialTextsView: float mTextSizeMultiplier>;

        $f25 = $f20 * $f21;

        r0.<com.android.datetimepicker.time.RadialTextsView: float mTextSize> = $f25;

        $z6 = r0.<com.android.datetimepicker.time.RadialTextsView: boolean mHasInnerCircle>;

        if $z6 == 0 goto label4;

        $f23 = r0.<com.android.datetimepicker.time.RadialTextsView: float mCircleRadius>;

        $f24 = r0.<com.android.datetimepicker.time.RadialTextsView: float mInnerTextSizeMultiplier>;

        $f28 = $f23 * $f24;

        r0.<com.android.datetimepicker.time.RadialTextsView: float mInnerTextSize> = $f28;

     label4:
        specialinvoke r0.<com.android.datetimepicker.time.RadialTextsView: void renderAnimations()>();

        r0.<com.android.datetimepicker.time.RadialTextsView: boolean mTextGridValuesDirty> = 1;

        r0.<com.android.datetimepicker.time.RadialTextsView: boolean mDrawValuesReady> = 1;

     label5:
        $z2 = r0.<com.android.datetimepicker.time.RadialTextsView: boolean mTextGridValuesDirty>;

        if $z2 == 0 goto label7;

        $f4 = r0.<com.android.datetimepicker.time.RadialTextsView: float mCircleRadius>;

        $f5 = r0.<com.android.datetimepicker.time.RadialTextsView: float mNumbersRadiusMultiplier>;

        $f6 = $f4 * $f5;

        $f7 = r0.<com.android.datetimepicker.time.RadialTextsView: float mAnimationRadiusMultiplier>;

        f32 = $f6 * $f7;

        $i2 = r0.<com.android.datetimepicker.time.RadialTextsView: int mXCenter>;

        $f10 = (float) $i2;

        $i1 = r0.<com.android.datetimepicker.time.RadialTextsView: int mYCenter>;

        $f8 = (float) $i1;

        $f9 = r0.<com.android.datetimepicker.time.RadialTextsView: float mTextSize>;

        $r10 = r0.<com.android.datetimepicker.time.RadialTextsView: float[] mTextGridHeights>;

        $r11 = r0.<com.android.datetimepicker.time.RadialTextsView: float[] mTextGridWidths>;

        specialinvoke r0.<com.android.datetimepicker.time.RadialTextsView: void calculateGridSizes(float,float,float,float,float[],float[])>(f32, $f10, $f8, $f9, $r10, $r11);

        $z4 = r0.<com.android.datetimepicker.time.RadialTextsView: boolean mHasInnerCircle>;

        if $z4 == 0 goto label6;

        $f14 = r0.<com.android.datetimepicker.time.RadialTextsView: float mCircleRadius>;

        $f13 = r0.<com.android.datetimepicker.time.RadialTextsView: float mInnerNumbersRadiusMultiplier>;

        $f12 = $f14 * $f13;

        $f11 = r0.<com.android.datetimepicker.time.RadialTextsView: float mAnimationRadiusMultiplier>;

        f1 = $f12 * $f11;

        $i3 = r0.<com.android.datetimepicker.time.RadialTextsView: int mXCenter>;

        $f15 = (float) $i3;

        $i4 = r0.<com.android.datetimepicker.time.RadialTextsView: int mYCenter>;

        $f17 = (float) $i4;

        $f16 = r0.<com.android.datetimepicker.time.RadialTextsView: float mInnerTextSize>;

        $r13 = r0.<com.android.datetimepicker.time.RadialTextsView: float[] mInnerTextGridHeights>;

        $r12 = r0.<com.android.datetimepicker.time.RadialTextsView: float[] mInnerTextGridWidths>;

        specialinvoke r0.<com.android.datetimepicker.time.RadialTextsView: void calculateGridSizes(float,float,float,float,float[],float[])>(f1, $f15, $f17, $f16, $r13, $r12);

     label6:
        r0.<com.android.datetimepicker.time.RadialTextsView: boolean mTextGridValuesDirty> = 0;

     label7:
        $f2 = r0.<com.android.datetimepicker.time.RadialTextsView: float mTextSize>;

        $r5 = r0.<com.android.datetimepicker.time.RadialTextsView: android.graphics.Typeface mTypefaceLight>;

        $r4 = r0.<com.android.datetimepicker.time.RadialTextsView: java.lang.String[] mTexts>;

        $r3 = r0.<com.android.datetimepicker.time.RadialTextsView: float[] mTextGridWidths>;

        $r2 = r0.<com.android.datetimepicker.time.RadialTextsView: float[] mTextGridHeights>;

        specialinvoke r0.<com.android.datetimepicker.time.RadialTextsView: void drawTexts(android.graphics.Canvas,float,android.graphics.Typeface,java.lang.String[],float[],float[])>(r1, $f2, $r5, $r4, $r3, $r2);

        $z3 = r0.<com.android.datetimepicker.time.RadialTextsView: boolean mHasInnerCircle>;

        if $z3 == 0 goto label8;

        $f3 = r0.<com.android.datetimepicker.time.RadialTextsView: float mInnerTextSize>;

        $r9 = r0.<com.android.datetimepicker.time.RadialTextsView: android.graphics.Typeface mTypefaceRegular>;

        $r7 = r0.<com.android.datetimepicker.time.RadialTextsView: java.lang.String[] mInnerTexts>;

        $r8 = r0.<com.android.datetimepicker.time.RadialTextsView: float[] mInnerTextGridWidths>;

        $r6 = r0.<com.android.datetimepicker.time.RadialTextsView: float[] mInnerTextGridHeights>;

        specialinvoke r0.<com.android.datetimepicker.time.RadialTextsView: void drawTexts(android.graphics.Canvas,float,android.graphics.Typeface,java.lang.String[],float[],float[])>(r1, $f3, $r9, $r7, $r8, $r6);

     label8:
        return;
    }

    private void calculateGridSizes(float, float, float, float, float[], float[])
    {
        com.android.datetimepicker.time.RadialTextsView r0;
        float f0, f1, f2, f3, f4, f5, f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24, f25;
        float[] r1, r2;
        double $d0;
        android.graphics.Paint $r3, $r4, $r5;

        r0 := @this: com.android.datetimepicker.time.RadialTextsView;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        r1 := @parameter4: float[];

        r2 := @parameter5: float[];

        f4 = f0;

        $d0 = staticinvoke <java.lang.Math: double sqrt(double)>(3.0);

        $f7 = (float) $d0;

        $f8 = f0 * $f7;

        f5 = $f8 / 2.0F;

        f6 = f0 / 2.0F;

        $r3 = r0.<com.android.datetimepicker.time.RadialTextsView: android.graphics.Paint mPaint>;

        virtualinvoke $r3.<android.graphics.Paint: void setTextSize(float)>(f3);

        $r4 = r0.<com.android.datetimepicker.time.RadialTextsView: android.graphics.Paint mPaint>;

        $f9 = virtualinvoke $r4.<android.graphics.Paint: float descent()>();

        $r5 = r0.<com.android.datetimepicker.time.RadialTextsView: android.graphics.Paint mPaint>;

        $f10 = virtualinvoke $r5.<android.graphics.Paint: float ascent()>();

        $f12 = $f9 + $f10;

        $f11 = $f12 / 2.0F;

        f25 = f2 - $f11;

        $f14 = f25 - f4;

        r1[0] = $f14;

        $f13 = f1 - f4;

        r2[0] = $f13;

        $f16 = f25 - f5;

        r1[1] = $f16;

        $f15 = f1 - f5;

        r2[1] = $f15;

        $f18 = f25 - f6;

        r1[2] = $f18;

        $f17 = f1 - f6;

        r2[2] = $f17;

        r1[3] = f25;

        r2[3] = f1;

        $f20 = f25 + f6;

        r1[4] = $f20;

        $f19 = f1 + f6;

        r2[4] = $f19;

        $f22 = f25 + f5;

        r1[5] = $f22;

        $f21 = f1 + f5;

        r2[5] = $f21;

        $f24 = f25 + f4;

        r1[6] = $f24;

        $f23 = f1 + f4;

        r2[6] = $f23;

        return;
    }

    private void drawTexts(android.graphics.Canvas, float, android.graphics.Typeface, java.lang.String[], float[], float[])
    {
        com.android.datetimepicker.time.RadialTextsView r0;
        android.graphics.Canvas r1;
        float f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, $f17, $f18, $f19, $f20, $f21, $f22, $f23, $f24;
        android.graphics.Typeface r2;
        java.lang.String[] r3;
        float[] r4, r5;
        android.graphics.Paint $r6, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r20, $r22, $r24, $r26, $r28, $r30;
        java.lang.String $r10, $r12, $r14, $r16, $r18, $r21, $r23, $r25, $r27, $r29, $r31, $r32;

        r0 := @this: com.android.datetimepicker.time.RadialTextsView;

        r1 := @parameter0: android.graphics.Canvas;

        f0 := @parameter1: float;

        r2 := @parameter2: android.graphics.Typeface;

        r3 := @parameter3: java.lang.String[];

        r4 := @parameter4: float[];

        r5 := @parameter5: float[];

        $r6 = r0.<com.android.datetimepicker.time.RadialTextsView: android.graphics.Paint mPaint>;

        virtualinvoke $r6.<android.graphics.Paint: void setTextSize(float)>(f0);

        $r7 = r0.<com.android.datetimepicker.time.RadialTextsView: android.graphics.Paint mPaint>;

        virtualinvoke $r7.<android.graphics.Paint: android.graphics.Typeface setTypeface(android.graphics.Typeface)>(r2);

        $r10 = r3[0];

        $f2 = r4[3];

        $f1 = r5[0];

        $r9 = r0.<com.android.datetimepicker.time.RadialTextsView: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r10, $f2, $f1, $r9);

        $r12 = r3[1];

        $f4 = r4[4];

        $f3 = r5[1];

        $r11 = r0.<com.android.datetimepicker.time.RadialTextsView: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r12, $f4, $f3, $r11);

        $r14 = r3[2];

        $f6 = r4[5];

        $f5 = r5[2];

        $r13 = r0.<com.android.datetimepicker.time.RadialTextsView: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r14, $f6, $f5, $r13);

        $r16 = r3[3];

        $f8 = r4[6];

        $f7 = r5[3];

        $r15 = r0.<com.android.datetimepicker.time.RadialTextsView: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r16, $f8, $f7, $r15);

        $r18 = r3[4];

        $f10 = r4[5];

        $f9 = r5[4];

        $r17 = r0.<com.android.datetimepicker.time.RadialTextsView: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r18, $f10, $f9, $r17);

        $r21 = r3[5];

        $f13 = r4[4];

        $f11 = r5[5];

        $r19 = r0.<com.android.datetimepicker.time.RadialTextsView: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r21, $f13, $f11, $r19);

        $r23 = r3[6];

        $f15 = r4[3];

        $f12 = r5[6];

        $r20 = r0.<com.android.datetimepicker.time.RadialTextsView: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r23, $f15, $f12, $r20);

        $r25 = r3[7];

        $f17 = r4[2];

        $f14 = r5[5];

        $r22 = r0.<com.android.datetimepicker.time.RadialTextsView: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r25, $f17, $f14, $r22);

        $r27 = r3[8];

        $f19 = r4[1];

        $f16 = r5[4];

        $r24 = r0.<com.android.datetimepicker.time.RadialTextsView: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r27, $f19, $f16, $r24);

        $r29 = r3[9];

        $f21 = r4[0];

        $f18 = r5[3];

        $r26 = r0.<com.android.datetimepicker.time.RadialTextsView: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r29, $f21, $f18, $r26);

        $r31 = r3[10];

        $f23 = r4[1];

        $f20 = r5[2];

        $r28 = r0.<com.android.datetimepicker.time.RadialTextsView: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r31, $f23, $f20, $r28);

        $r32 = r3[11];

        $f24 = r4[2];

        $f22 = r5[1];

        $r30 = r0.<com.android.datetimepicker.time.RadialTextsView: android.graphics.Paint mPaint>;

        virtualinvoke r1.<android.graphics.Canvas: void drawText(java.lang.String,float,float,android.graphics.Paint)>($r32, $f24, $f22, $r30);

        return;
    }

    private void renderAnimations()
    {
        com.android.datetimepicker.time.RadialTextsView r0;
        android.animation.Keyframe r1, r2, r3, r4, r23, r24, r25, r26, r27, r28, r29, r30;
        float f0, f1, f2, f3, f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14, $f15, $f16, f17;
        short s0;
        android.animation.PropertyValuesHolder r5, r6, r7, r8;
        int i1;
        android.animation.Keyframe[] $r9, $r10, $r16, $r19;
        android.animation.PropertyValuesHolder[] $r11, $r18;
        long $l2, $l3;
        android.animation.ObjectAnimator $r12, $r14, $r15, $r17, $r20, $r22;
        com.android.datetimepicker.time.RadialTextsView$InvalidateUpdateListener $r13, $r21;

        r0 := @this: com.android.datetimepicker.time.RadialTextsView;

        f0 = 0.2F;

        s0 = 500;

        r1 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofFloat(float,float)>(0.0F, 1.0F);

        $f5 = r0.<com.android.datetimepicker.time.RadialTextsView: float mTransitionMidRadiusMultiplier>;

        r2 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofFloat(float,float)>(f0, $f5);

        $f6 = r0.<com.android.datetimepicker.time.RadialTextsView: float mTransitionEndRadiusMultiplier>;

        r3 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofFloat(float,float)>(1.0F, $f6);

        $r9 = newarray (android.animation.Keyframe)[3];

        $r9[0] = r1;

        $r9[1] = r2;

        $r9[2] = r3;

        r5 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofKeyframe(java.lang.String,android.animation.Keyframe[])>("animationRadiusMultiplier", $r9);

        r23 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofFloat(float,float)>(0.0F, 1.0F);

        r24 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofFloat(float,float)>(1.0F, 0.0F);

        $r10 = newarray (android.animation.Keyframe)[2];

        $r10[0] = r23;

        $r10[1] = r24;

        r6 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofKeyframe(java.lang.String,android.animation.Keyframe[])>("alpha", $r10);

        $r11 = newarray (android.animation.PropertyValuesHolder)[2];

        $r11[0] = r5;

        $r11[1] = r6;

        $r12 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,android.animation.PropertyValuesHolder[])>(r0, $r11);

        $l2 = (long) s0;

        $r14 = virtualinvoke $r12.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>($l2);

        r0.<com.android.datetimepicker.time.RadialTextsView: android.animation.ObjectAnimator mDisappearAnimator> = $r14;

        $r15 = r0.<com.android.datetimepicker.time.RadialTextsView: android.animation.ObjectAnimator mDisappearAnimator>;

        $r13 = r0.<com.android.datetimepicker.time.RadialTextsView: com.android.datetimepicker.time.RadialTextsView$InvalidateUpdateListener mInvalidateUpdateListener>;

        virtualinvoke $r15.<android.animation.ObjectAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r13);

        f1 = 0.25F;

        f2 = 1.0F;

        f3 = f2 + f1;

        $f9 = (float) s0;

        $f7 = $f9 * f3;

        i1 = (int) $f7;

        $f8 = (float) s0;

        $f13 = f1 * $f8;

        $f12 = (float) i1;

        f4 = $f13 / $f12;

        $f10 = 1.0F - f4;

        $f11 = f0 * $f10;

        f17 = 1.0F - $f11;

        $f15 = r0.<com.android.datetimepicker.time.RadialTextsView: float mTransitionEndRadiusMultiplier>;

        r25 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofFloat(float,float)>(0.0F, $f15);

        $f14 = r0.<com.android.datetimepicker.time.RadialTextsView: float mTransitionEndRadiusMultiplier>;

        r26 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofFloat(float,float)>(f4, $f14);

        $f16 = r0.<com.android.datetimepicker.time.RadialTextsView: float mTransitionMidRadiusMultiplier>;

        r27 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofFloat(float,float)>(f17, $f16);

        r4 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofFloat(float,float)>(1.0F, 1.0F);

        $r16 = newarray (android.animation.Keyframe)[4];

        $r16[0] = r25;

        $r16[1] = r26;

        $r16[2] = r27;

        $r16[3] = r4;

        r7 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofKeyframe(java.lang.String,android.animation.Keyframe[])>("animationRadiusMultiplier", $r16);

        r28 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofFloat(float,float)>(0.0F, 0.0F);

        r29 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofFloat(float,float)>(f4, 0.0F);

        r30 = staticinvoke <android.animation.Keyframe: android.animation.Keyframe ofFloat(float,float)>(1.0F, 1.0F);

        $r19 = newarray (android.animation.Keyframe)[3];

        $r19[0] = r28;

        $r19[1] = r29;

        $r19[2] = r30;

        r8 = staticinvoke <android.animation.PropertyValuesHolder: android.animation.PropertyValuesHolder ofKeyframe(java.lang.String,android.animation.Keyframe[])>("alpha", $r19);

        $r18 = newarray (android.animation.PropertyValuesHolder)[2];

        $r18[0] = r7;

        $r18[1] = r8;

        $r17 = staticinvoke <android.animation.ObjectAnimator: android.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,android.animation.PropertyValuesHolder[])>(r0, $r18);

        $l3 = (long) i1;

        $r22 = virtualinvoke $r17.<android.animation.ObjectAnimator: android.animation.ObjectAnimator setDuration(long)>($l3);

        r0.<com.android.datetimepicker.time.RadialTextsView: android.animation.ObjectAnimator mReappearAnimator> = $r22;

        $r20 = r0.<com.android.datetimepicker.time.RadialTextsView: android.animation.ObjectAnimator mReappearAnimator>;

        $r21 = r0.<com.android.datetimepicker.time.RadialTextsView: com.android.datetimepicker.time.RadialTextsView$InvalidateUpdateListener mInvalidateUpdateListener>;

        virtualinvoke $r20.<android.animation.ObjectAnimator: void addUpdateListener(android.animation.ValueAnimator$AnimatorUpdateListener)>($r21);

        return;
    }

    public android.animation.ObjectAnimator getDisappearAnimator()
    {
        com.android.datetimepicker.time.RadialTextsView r0;
        boolean $z0, $z1;
        android.animation.ObjectAnimator $r1, $r2;

        r0 := @this: com.android.datetimepicker.time.RadialTextsView;

        $z0 = r0.<com.android.datetimepicker.time.RadialTextsView: boolean mIsInitialized>;

        if $z0 == 0 goto label1;

        $z1 = r0.<com.android.datetimepicker.time.RadialTextsView: boolean mDrawValuesReady>;

        if $z1 == 0 goto label1;

        $r1 = r0.<com.android.datetimepicker.time.RadialTextsView: android.animation.ObjectAnimator mDisappearAnimator>;

        if $r1 != null goto label2;

     label1:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RadialTextsView", "RadialTextView was not ready for animation.");

        return null;

     label2:
        $r2 = r0.<com.android.datetimepicker.time.RadialTextsView: android.animation.ObjectAnimator mDisappearAnimator>;

        return $r2;
    }

    public android.animation.ObjectAnimator getReappearAnimator()
    {
        com.android.datetimepicker.time.RadialTextsView r0;
        boolean $z0, $z1;
        android.animation.ObjectAnimator $r1, $r2;

        r0 := @this: com.android.datetimepicker.time.RadialTextsView;

        $z0 = r0.<com.android.datetimepicker.time.RadialTextsView: boolean mIsInitialized>;

        if $z0 == 0 goto label1;

        $z1 = r0.<com.android.datetimepicker.time.RadialTextsView: boolean mDrawValuesReady>;

        if $z1 == 0 goto label1;

        $r1 = r0.<com.android.datetimepicker.time.RadialTextsView: android.animation.ObjectAnimator mReappearAnimator>;

        if $r1 != null goto label2;

     label1:
        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("RadialTextsView", "RadialTextView was not ready for animation.");

        return null;

     label2:
        $r2 = r0.<com.android.datetimepicker.time.RadialTextsView: android.animation.ObjectAnimator mReappearAnimator>;

        return $r2;
    }

    public static void <clinit>()
    {
        <com.android.datetimepicker.time.RadialTextsView: java.lang.String TAG> = "RadialTextsView";

        return;
    }
}
