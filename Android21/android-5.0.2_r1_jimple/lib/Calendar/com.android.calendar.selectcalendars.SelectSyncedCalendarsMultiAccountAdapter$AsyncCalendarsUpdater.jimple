class com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter$AsyncCalendarsUpdater extends android.content.AsyncQueryHandler
{
    final com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter this$0;

    public void <init>(com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter, android.content.ContentResolver)
    {
        com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter$AsyncCalendarsUpdater r0;
        com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter r1;
        android.content.ContentResolver r2;

        r0 := @this: com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter$AsyncCalendarsUpdater;

        r1 := @parameter0: com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter;

        r2 := @parameter1: android.content.ContentResolver;

        r0.<com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter$AsyncCalendarsUpdater: com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter this$0> = r1;

        specialinvoke r0.<android.content.AsyncQueryHandler: void <init>(android.content.ContentResolver)>(r2);

        return;
    }

    protected void onQueryComplete(int, java.lang.Object, android.database.Cursor)
    {
        com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter$AsyncCalendarsUpdater r0;
        int i0;
        java.lang.Object r1, $r12;
        android.database.Cursor r2, r28;
        java.util.Map r3, $r7, $r13, $r15;
        java.lang.Throwable r4, $r27;
        java.lang.NullPointerException r5, $r22;
        com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter $r6, $r8, $r9, $r11, $r16, $r19, $r21;
        boolean $z0, $z1, $z2;
        com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountActivity $r10, $r20;
        java.util.HashMap $r14;
        java.lang.String $r18, $r24;
        java.lang.StringBuilder $r23, $r25, $r26;
        android.database.MatrixCursor r29;

        r0 := @this: com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter$AsyncCalendarsUpdater;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: android.database.Cursor;

        if r2 != null goto label01;

        return;

     label01:
        $r6 = r0.<com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter$AsyncCalendarsUpdater: com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter this$0>;

        $r7 = staticinvoke <com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter: java.util.Map access$100(com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter)>($r6);

        r3 = $r7;

        entermonitor $r7;

     label02:
        $r8 = r0.<com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter$AsyncCalendarsUpdater: com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter this$0>;

        $z0 = staticinvoke <com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter: boolean access$200(com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter)>($r8);

        if $z0 != 0 goto label03;

        $r9 = r0.<com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter$AsyncCalendarsUpdater: com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter this$0>;

        $r10 = staticinvoke <com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter: com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountActivity access$300(com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter)>($r9);

        if $r10 == null goto label05;

        $r21 = r0.<com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter$AsyncCalendarsUpdater: com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter this$0>;

        $r20 = staticinvoke <com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter: com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountActivity access$300(com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter)>($r21);

        $z2 = virtualinvoke $r20.<com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountActivity: boolean isFinishing()>();

        if $z2 == 0 goto label05;

     label03:
        interfaceinvoke r2.<android.database.Cursor: void close()>();

        exitmonitor r3;

     label04:
        return;

     label05:
        exitmonitor r3;

     label06:
        goto label09;

     label07:
        $r27 := @caughtexception;

        r4 = $r27;

        exitmonitor r3;

     label08:
        throw r4;

     label09:
        $r11 = r0.<com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter$AsyncCalendarsUpdater: com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter this$0>;

        $r13 = staticinvoke <com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter: java.util.Map access$100(com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter)>($r11);

        $r12 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r28 = (android.database.Cursor) $r12;

        if r28 == null goto label10;

        $z1 = staticinvoke <com.android.calendar.Utils: boolean compareCursors(android.database.Cursor,android.database.Cursor)>(r28, r2);

        if $z1 == 0 goto label10;

        interfaceinvoke r2.<android.database.Cursor: void close()>();

        return;

     label10:
        r29 = staticinvoke <com.android.calendar.Utils: android.database.MatrixCursor matrixCursorFromCursor(android.database.Cursor)>(r2);

        interfaceinvoke r2.<android.database.Cursor: void close()>();

        $r14 = staticinvoke <com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter: java.util.HashMap access$400()>();

        staticinvoke <com.android.calendar.Utils: void checkForDuplicateNames(java.util.Map,android.database.Cursor,int)>($r14, r29, 3);

        $r16 = r0.<com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter$AsyncCalendarsUpdater: com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter this$0>;

        $r15 = staticinvoke <com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter: java.util.Map access$100(com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter)>($r16);

        $r18 = (java.lang.String) r1;

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, r29);

     label11:
        $r19 = r0.<com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter$AsyncCalendarsUpdater: com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter this$0>;

        virtualinvoke $r19.<com.android.calendar.selectcalendars.SelectSyncedCalendarsMultiAccountAdapter: void setChildrenCursor(int,android.database.Cursor)>(i0, r29);

     label12:
        goto label14;

     label13:
        $r22 := @caughtexception;

        r5 = $r22;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Adapter expired, try again on the next query: ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r24 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("Calendar", $r24);

     label14:
        if r28 == null goto label15;

        interfaceinvoke r28.<android.database.Cursor: void close()>();

     label15:
        return;

        catch java.lang.Throwable from label02 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch java.lang.NullPointerException from label11 to label12 with label13;
    }
}
