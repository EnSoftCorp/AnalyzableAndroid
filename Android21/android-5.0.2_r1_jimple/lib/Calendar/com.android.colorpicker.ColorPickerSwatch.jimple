public class com.android.colorpicker.ColorPickerSwatch extends android.widget.FrameLayout implements android.view.View$OnClickListener
{
    private int mColor;
    private android.widget.ImageView mSwatchImage;
    private android.widget.ImageView mCheckmarkImage;
    private com.android.colorpicker.ColorPickerSwatch$OnColorSelectedListener mOnColorSelectedListener;

    public void <init>(android.content.Context, int, boolean, com.android.colorpicker.ColorPickerSwatch$OnColorSelectedListener)
    {
        com.android.colorpicker.ColorPickerSwatch r0;
        android.content.Context r1;
        int i0, $i1, $i2, $i3;
        boolean z0;
        com.android.colorpicker.ColorPickerSwatch$OnColorSelectedListener r2;
        android.view.LayoutInflater $r3;
        android.view.View $r5, $r7;
        android.widget.ImageView $r6, $r8;

        r0 := @this: com.android.colorpicker.ColorPickerSwatch;

        r1 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r2 := @parameter3: com.android.colorpicker.ColorPickerSwatch$OnColorSelectedListener;

        specialinvoke r0.<android.widget.FrameLayout: void <init>(android.content.Context)>(r1);

        r0.<com.android.colorpicker.ColorPickerSwatch: int mColor> = i0;

        r0.<com.android.colorpicker.ColorPickerSwatch: com.android.colorpicker.ColorPickerSwatch$OnColorSelectedListener mOnColorSelectedListener> = r2;

        $r3 = staticinvoke <android.view.LayoutInflater: android.view.LayoutInflater 'from'(android.content.Context)>(r1);

        $i1 = <com.android.colorpicker.R$layout: int color_picker_swatch>;

        virtualinvoke $r3.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>($i1, r0);

        $i2 = <com.android.colorpicker.R$id: int color_picker_swatch>;

        $r5 = virtualinvoke r0.<com.android.colorpicker.ColorPickerSwatch: android.view.View findViewById(int)>($i2);

        $r6 = (android.widget.ImageView) $r5;

        r0.<com.android.colorpicker.ColorPickerSwatch: android.widget.ImageView mSwatchImage> = $r6;

        $i3 = <com.android.colorpicker.R$id: int color_picker_checkmark>;

        $r7 = virtualinvoke r0.<com.android.colorpicker.ColorPickerSwatch: android.view.View findViewById(int)>($i3);

        $r8 = (android.widget.ImageView) $r7;

        r0.<com.android.colorpicker.ColorPickerSwatch: android.widget.ImageView mCheckmarkImage> = $r8;

        virtualinvoke r0.<com.android.colorpicker.ColorPickerSwatch: void setColor(int)>(i0);

        specialinvoke r0.<com.android.colorpicker.ColorPickerSwatch: void setChecked(boolean)>(z0);

        virtualinvoke r0.<com.android.colorpicker.ColorPickerSwatch: void setOnClickListener(android.view.View$OnClickListener)>(r0);

        return;
    }

    protected void setColor(int)
    {
        com.android.colorpicker.ColorPickerSwatch r0;
        int i0, $i1;
        android.graphics.drawable.Drawable[] r1, $r2;
        android.content.Context $r3;
        android.content.res.Resources $r4;
        android.graphics.drawable.Drawable $r5;
        com.android.colorpicker.ColorStateDrawable $r6;
        android.widget.ImageView $r7;

        r0 := @this: com.android.colorpicker.ColorPickerSwatch;

        i0 := @parameter0: int;

        $r2 = newarray (android.graphics.drawable.Drawable)[1];

        $r3 = virtualinvoke r0.<com.android.colorpicker.ColorPickerSwatch: android.content.Context getContext()>();

        $r4 = virtualinvoke $r3.<android.content.Context: android.content.res.Resources getResources()>();

        $i1 = <com.android.colorpicker.R$drawable: int color_picker_swatch>;

        $r5 = virtualinvoke $r4.<android.content.res.Resources: android.graphics.drawable.Drawable getDrawable(int)>($i1);

        $r2[0] = $r5;

        r1 = $r2;

        $r7 = r0.<com.android.colorpicker.ColorPickerSwatch: android.widget.ImageView mSwatchImage>;

        $r6 = new com.android.colorpicker.ColorStateDrawable;

        specialinvoke $r6.<com.android.colorpicker.ColorStateDrawable: void <init>(android.graphics.drawable.Drawable[],int)>(r1, i0);

        virtualinvoke $r7.<android.widget.ImageView: void setImageDrawable(android.graphics.drawable.Drawable)>($r6);

        return;
    }

    private void setChecked(boolean)
    {
        com.android.colorpicker.ColorPickerSwatch r0;
        boolean z0;
        android.widget.ImageView $r1, $r2;

        r0 := @this: com.android.colorpicker.ColorPickerSwatch;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r2 = r0.<com.android.colorpicker.ColorPickerSwatch: android.widget.ImageView mCheckmarkImage>;

        virtualinvoke $r2.<android.widget.ImageView: void setVisibility(int)>(0);

        goto label2;

     label1:
        $r1 = r0.<com.android.colorpicker.ColorPickerSwatch: android.widget.ImageView mCheckmarkImage>;

        virtualinvoke $r1.<android.widget.ImageView: void setVisibility(int)>(8);

     label2:
        return;
    }

    public void onClick(android.view.View)
    {
        com.android.colorpicker.ColorPickerSwatch r0;
        android.view.View r1;
        com.android.colorpicker.ColorPickerSwatch$OnColorSelectedListener $r2, $r3;
        int $i0;

        r0 := @this: com.android.colorpicker.ColorPickerSwatch;

        r1 := @parameter0: android.view.View;

        $r2 = r0.<com.android.colorpicker.ColorPickerSwatch: com.android.colorpicker.ColorPickerSwatch$OnColorSelectedListener mOnColorSelectedListener>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.colorpicker.ColorPickerSwatch: com.android.colorpicker.ColorPickerSwatch$OnColorSelectedListener mOnColorSelectedListener>;

        $i0 = r0.<com.android.colorpicker.ColorPickerSwatch: int mColor>;

        interfaceinvoke $r3.<com.android.colorpicker.ColorPickerSwatch$OnColorSelectedListener: void onColorSelected(int)>($i0);

     label1:
        return;
    }
}
