public class com.android.timezonepicker.TimeZoneResultAdapter extends android.widget.BaseAdapter implements android.widget.AdapterView$OnItemClickListener, com.android.timezonepicker.TimeZoneFilterTypeAdapter$OnSetFilterListener
{
    private static final java.lang.String TAG;
    private static final boolean DEBUG;
    private static final int VIEW_TAG_TIME_ZONE;
    private static final int EMPTY_INDEX;
    private static final java.lang.String SHARED_PREFS_NAME;
    private static final java.lang.String KEY_RECENT_TIMEZONES;
    private int mLastFilterType;
    private java.lang.String mLastFilterString;
    private int mLastFilterTime;
    private boolean mHasResults;
    private static final java.lang.String RECENT_TIMEZONES_DELIMITER;
    private static final int MAX_RECENT_TIMEZONES;
    private android.content.Context mContext;
    private android.view.LayoutInflater mInflater;
    private com.android.timezonepicker.TimeZonePickerView$OnTimeZoneSetListener mTimeZoneSetListener;
    private com.android.timezonepicker.TimeZoneData mTimeZoneData;
    private int[] mFilteredTimeZoneIndices;
    private int mFilteredTimeZoneLength;

    public void <init>(android.content.Context, com.android.timezonepicker.TimeZoneData, com.android.timezonepicker.TimeZonePickerView$OnTimeZoneSetListener)
    {
        com.android.timezonepicker.TimeZoneResultAdapter r0;
        android.content.Context r1;
        com.android.timezonepicker.TimeZoneData r2, $r6;
        com.android.timezonepicker.TimeZonePickerView$OnTimeZoneSetListener r3;
        java.lang.Object $r4;
        android.view.LayoutInflater $r5;
        int $i0;
        int[] $r7;

        r0 := @this: com.android.timezonepicker.TimeZoneResultAdapter;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: com.android.timezonepicker.TimeZoneData;

        r3 := @parameter2: com.android.timezonepicker.TimeZonePickerView$OnTimeZoneSetListener;

        specialinvoke r0.<android.widget.BaseAdapter: void <init>()>();

        r0.<com.android.timezonepicker.TimeZoneResultAdapter: boolean mHasResults> = 0;

        r0.<com.android.timezonepicker.TimeZoneResultAdapter: int mFilteredTimeZoneLength> = 0;

        r0.<com.android.timezonepicker.TimeZoneResultAdapter: android.content.Context mContext> = r1;

        r0.<com.android.timezonepicker.TimeZoneResultAdapter: com.android.timezonepicker.TimeZoneData mTimeZoneData> = r2;

        r0.<com.android.timezonepicker.TimeZoneResultAdapter: com.android.timezonepicker.TimeZonePickerView$OnTimeZoneSetListener mTimeZoneSetListener> = r3;

        $r4 = virtualinvoke r1.<android.content.Context: java.lang.Object getSystemService(java.lang.String)>("layout_inflater");

        $r5 = (android.view.LayoutInflater) $r4;

        r0.<com.android.timezonepicker.TimeZoneResultAdapter: android.view.LayoutInflater mInflater> = $r5;

        $r6 = r0.<com.android.timezonepicker.TimeZoneResultAdapter: com.android.timezonepicker.TimeZoneData mTimeZoneData>;

        $i0 = virtualinvoke $r6.<com.android.timezonepicker.TimeZoneData: int size()>();

        $r7 = newarray (int)[$i0];

        r0.<com.android.timezonepicker.TimeZoneResultAdapter: int[] mFilteredTimeZoneIndices> = $r7;

        virtualinvoke r0.<com.android.timezonepicker.TimeZoneResultAdapter: void onSetFilter(int,java.lang.String,int)>(0, null, 0);

        return;
    }

    public boolean hasResults()
    {
        com.android.timezonepicker.TimeZoneResultAdapter r0;
        boolean $z0;

        r0 := @this: com.android.timezonepicker.TimeZoneResultAdapter;

        $z0 = r0.<com.android.timezonepicker.TimeZoneResultAdapter: boolean mHasResults>;

        return $z0;
    }

    public int getLastFilterType()
    {
        com.android.timezonepicker.TimeZoneResultAdapter r0;
        int $i0;

        r0 := @this: com.android.timezonepicker.TimeZoneResultAdapter;

        $i0 = r0.<com.android.timezonepicker.TimeZoneResultAdapter: int mLastFilterType>;

        return $i0;
    }

    public java.lang.String getLastFilterString()
    {
        com.android.timezonepicker.TimeZoneResultAdapter r0;
        java.lang.String $r1;

        r0 := @this: com.android.timezonepicker.TimeZoneResultAdapter;

        $r1 = r0.<com.android.timezonepicker.TimeZoneResultAdapter: java.lang.String mLastFilterString>;

        return $r1;
    }

    public int getLastFilterTime()
    {
        com.android.timezonepicker.TimeZoneResultAdapter r0;
        int $i0;

        r0 := @this: com.android.timezonepicker.TimeZoneResultAdapter;

        $i0 = r0.<com.android.timezonepicker.TimeZoneResultAdapter: int mLastFilterTime>;

        return $i0;
    }

    public void onSetFilter(int, java.lang.String, int)
    {
        com.android.timezonepicker.TimeZoneResultAdapter r0;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;
        java.lang.String r1, r3, $r18, $r19, $r21, $r22;
        android.content.SharedPreferences r2;
        java.lang.String[] r4;
        java.lang.Integer r5, r28;
        int[] $r6, $r9, $r14, $r23, $r25;
        com.android.timezonepicker.TimeZoneData $r7, $r11, $r16, $r17, $r20;
        boolean $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.Object $r8, $r12, $r13;
        java.util.LinkedHashMap $r10;
        android.content.Context $r15;
        java.lang.IllegalArgumentException $r24;
        java.util.ArrayList r26, r29;
        java.util.Iterator r27, r30;

        r0 := @this: com.android.timezonepicker.TimeZoneResultAdapter;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        r0.<com.android.timezonepicker.TimeZoneResultAdapter: int mLastFilterType> = i0;

        r0.<com.android.timezonepicker.TimeZoneResultAdapter: java.lang.String mLastFilterString> = r1;

        r0.<com.android.timezonepicker.TimeZoneResultAdapter: int mLastFilterTime> = i1;

        r0.<com.android.timezonepicker.TimeZoneResultAdapter: int mFilteredTimeZoneLength> = 0;

        tableswitch(i0)
        {
            case -1: goto label01;
            case 0: goto label02;
            case 1: goto label10;
            case 2: goto label13;
            case 3: goto label07;
            default: goto label14;
        };

     label01:
        $r6 = r0.<com.android.timezonepicker.TimeZoneResultAdapter: int[] mFilteredTimeZoneIndices>;

        $i5 = r0.<com.android.timezonepicker.TimeZoneResultAdapter: int mFilteredTimeZoneLength>;

        $i6 = $i5 + 1;

        r0.<com.android.timezonepicker.TimeZoneResultAdapter: int mFilteredTimeZoneLength> = $i6;

        $r6[$i5] = -100;

        goto label15;

     label02:
        $r16 = r0.<com.android.timezonepicker.TimeZoneResultAdapter: com.android.timezonepicker.TimeZoneData mTimeZoneData>;

        i2 = virtualinvoke $r16.<com.android.timezonepicker.TimeZoneData: int getDefaultTimeZoneIndex()>();

        if i2 == -1 goto label03;

        $r25 = r0.<com.android.timezonepicker.TimeZoneResultAdapter: int[] mFilteredTimeZoneIndices>;

        $i18 = r0.<com.android.timezonepicker.TimeZoneResultAdapter: int mFilteredTimeZoneLength>;

        $i17 = $i18 + 1;

        r0.<com.android.timezonepicker.TimeZoneResultAdapter: int mFilteredTimeZoneLength> = $i17;

        $r25[$i18] = i2;

     label03:
        $r15 = r0.<com.android.timezonepicker.TimeZoneResultAdapter: android.content.Context mContext>;

        r2 = virtualinvoke $r15.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("com.android.calendar_preferences", 0);

        r3 = interfaceinvoke r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("preferences_recent_timezones", null);

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r3);

        if $z4 != 0 goto label15;

        r4 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        $i14 = lengthof r4;

        i3 = $i14 - 1;

     label04:
        if i3 < 0 goto label06;

        $r19 = r4[i3];

        $z5 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r19);

        if $z5 != 0 goto label05;

        $r22 = r4[i3];

        $r17 = r0.<com.android.timezonepicker.TimeZoneResultAdapter: com.android.timezonepicker.TimeZoneData mTimeZoneData>;

        $r18 = $r17.<com.android.timezonepicker.TimeZoneData: java.lang.String mDefaultTimeZoneId>;

        $z6 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>($r18);

        if $z6 != 0 goto label05;

        $r20 = r0.<com.android.timezonepicker.TimeZoneResultAdapter: com.android.timezonepicker.TimeZoneData mTimeZoneData>;

        $r21 = r4[i3];

        i4 = virtualinvoke $r20.<com.android.timezonepicker.TimeZoneData: int findIndexByTimeZoneIdSlow(java.lang.String)>($r21);

        if i4 == -1 goto label05;

        $r23 = r0.<com.android.timezonepicker.TimeZoneResultAdapter: int[] mFilteredTimeZoneIndices>;

        $i16 = r0.<com.android.timezonepicker.TimeZoneResultAdapter: int mFilteredTimeZoneLength>;

        $i15 = $i16 + 1;

        r0.<com.android.timezonepicker.TimeZoneResultAdapter: int mFilteredTimeZoneLength> = $i15;

        $r23[$i16] = i4;

     label05:
        i3 = i3 + -1;

        goto label04;

     label06:
        goto label15;

     label07:
        $r7 = r0.<com.android.timezonepicker.TimeZoneResultAdapter: com.android.timezonepicker.TimeZoneData mTimeZoneData>;

        r26 = virtualinvoke $r7.<com.android.timezonepicker.TimeZoneData: java.util.ArrayList getTimeZonesByOffset(int)>(i1);

        if r26 == null goto label15;

        r27 = virtualinvoke r26.<java.util.ArrayList: java.util.Iterator iterator()>();

     label08:
        $z2 = interfaceinvoke r27.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label09;

        $r8 = interfaceinvoke r27.<java.util.Iterator: java.lang.Object next()>();

        r28 = (java.lang.Integer) $r8;

        $r9 = r0.<com.android.timezonepicker.TimeZoneResultAdapter: int[] mFilteredTimeZoneIndices>;

        $i9 = r0.<com.android.timezonepicker.TimeZoneResultAdapter: int mFilteredTimeZoneLength>;

        $i8 = $i9 + 1;

        r0.<com.android.timezonepicker.TimeZoneResultAdapter: int mFilteredTimeZoneLength> = $i8;

        $i10 = virtualinvoke r28.<java.lang.Integer: int intValue()>();

        $r9[$i9] = $i10;

        goto label08;

     label09:
        goto label15;

     label10:
        $r11 = r0.<com.android.timezonepicker.TimeZoneResultAdapter: com.android.timezonepicker.TimeZoneData mTimeZoneData>;

        $r10 = $r11.<com.android.timezonepicker.TimeZoneData: java.util.LinkedHashMap mTimeZonesByCountry>;

        $r12 = virtualinvoke $r10.<java.util.LinkedHashMap: java.lang.Object get(java.lang.Object)>(r1);

        r29 = (java.util.ArrayList) $r12;

        if r29 == null goto label15;

        r30 = virtualinvoke r29.<java.util.ArrayList: java.util.Iterator iterator()>();

     label11:
        $z3 = interfaceinvoke r30.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label12;

        $r13 = interfaceinvoke r30.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.Integer) $r13;

        $r14 = r0.<com.android.timezonepicker.TimeZoneResultAdapter: int[] mFilteredTimeZoneIndices>;

        $i12 = r0.<com.android.timezonepicker.TimeZoneResultAdapter: int mFilteredTimeZoneLength>;

        $i13 = $i12 + 1;

        r0.<com.android.timezonepicker.TimeZoneResultAdapter: int mFilteredTimeZoneLength> = $i13;

        $i11 = virtualinvoke r5.<java.lang.Integer: int intValue()>();

        $r14[$i12] = $i11;

        goto label11;

     label12:
        goto label15;

     label13:
        goto label15;

     label14:
        $r24 = new java.lang.IllegalArgumentException;

        specialinvoke $r24.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r24;

     label15:
        $i7 = r0.<com.android.timezonepicker.TimeZoneResultAdapter: int mFilteredTimeZoneLength>;

        if $i7 <= 0 goto label16;

        $z1 = 1;

        goto label17;

     label16:
        $z1 = 0;

     label17:
        r0.<com.android.timezonepicker.TimeZoneResultAdapter: boolean mHasResults> = $z1;

        virtualinvoke r0.<com.android.timezonepicker.TimeZoneResultAdapter: void notifyDataSetChanged()>();

        return;
    }

    public void saveRecentTimezone(java.lang.String)
    {
        com.android.timezonepicker.TimeZoneResultAdapter r0;
        java.lang.String r1, r3, r6, r7, r17;
        android.content.SharedPreferences r2;
        java.util.LinkedHashSet r4, $r9;
        java.lang.String[] r5;
        int i0, i1, $i2;
        android.content.Context $r8;
        java.lang.StringBuilder $r10, r19;
        boolean $z1, $z2, $z3, $z5, z6;
        android.content.SharedPreferences$Editor $r11, $r12;
        java.lang.Object $r14;
        java.util.Iterator r18, r20;

        r0 := @this: com.android.timezonepicker.TimeZoneResultAdapter;

        r1 := @parameter0: java.lang.String;

        $r8 = r0.<com.android.timezonepicker.TimeZoneResultAdapter: android.content.Context mContext>;

        r2 = virtualinvoke $r8.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("com.android.calendar_preferences", 0);

        r3 = interfaceinvoke r2.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("preferences_recent_timezones", null);

        if r3 != null goto label01;

        r17 = r1;

        goto label12;

     label01:
        $r9 = new java.util.LinkedHashSet;

        specialinvoke $r9.<java.util.LinkedHashSet: void <init>()>();

        r4 = $r9;

        r5 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");

        i0 = lengthof r5;

        i1 = 0;

     label02:
        if i1 >= i0 goto label04;

        r6 = r5[i1];

        $z3 = virtualinvoke r4.<java.util.LinkedHashSet: boolean contains(java.lang.Object)>(r6);

        if $z3 != 0 goto label03;

        $z5 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r6);

        if $z5 != 0 goto label03;

        virtualinvoke r4.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r6);

     label03:
        i1 = i1 + 1;

        goto label02;

     label04:
        r18 = virtualinvoke r4.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

     label05:
        $i2 = virtualinvoke r4.<java.util.LinkedHashSet: int size()>();

        if $i2 < 3 goto label07;

        $z2 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label06;

        goto label07;

     label06:
        interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        interfaceinvoke r18.<java.util.Iterator: void remove()>();

        goto label05;

     label07:
        virtualinvoke r4.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r1);

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        r19 = $r10;

        z6 = 1;

        r20 = virtualinvoke r4.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

     label08:
        $z1 = interfaceinvoke r20.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label11;

        $r14 = interfaceinvoke r20.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r14;

        if z6 == 0 goto label09;

        z6 = 0;

        goto label10;

     label09:
        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label10:
        virtualinvoke r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        goto label08;

     label11:
        r17 = virtualinvoke r19.<java.lang.StringBuilder: java.lang.String toString()>();

     label12:
        $r12 = interfaceinvoke r2.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r11 = interfaceinvoke $r12.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("preferences_recent_timezones", r17);

        interfaceinvoke $r11.<android.content.SharedPreferences$Editor: void apply()>();

        return;
    }

    public int getCount()
    {
        com.android.timezonepicker.TimeZoneResultAdapter r0;
        int $i0;

        r0 := @this: com.android.timezonepicker.TimeZoneResultAdapter;

        $i0 = r0.<com.android.timezonepicker.TimeZoneResultAdapter: int mFilteredTimeZoneLength>;

        return $i0;
    }

    public java.lang.Object getItem(int)
    {
        com.android.timezonepicker.TimeZoneResultAdapter r0;
        int i0, $i1, $i2;
        int[] $r1;
        com.android.timezonepicker.TimeZoneData $r2;
        com.android.timezonepicker.TimeZoneInfo $r3;

        r0 := @this: com.android.timezonepicker.TimeZoneResultAdapter;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i1 = r0.<com.android.timezonepicker.TimeZoneResultAdapter: int mFilteredTimeZoneLength>;

        if i0 < $i1 goto label2;

     label1:
        return null;

     label2:
        $r2 = r0.<com.android.timezonepicker.TimeZoneResultAdapter: com.android.timezonepicker.TimeZoneData mTimeZoneData>;

        $r1 = r0.<com.android.timezonepicker.TimeZoneResultAdapter: int[] mFilteredTimeZoneIndices>;

        $i2 = $r1[i0];

        $r3 = virtualinvoke $r2.<com.android.timezonepicker.TimeZoneData: com.android.timezonepicker.TimeZoneInfo get(int)>($i2);

        return $r3;
    }

    public boolean areAllItemsEnabled()
    {
        com.android.timezonepicker.TimeZoneResultAdapter r0;

        r0 := @this: com.android.timezonepicker.TimeZoneResultAdapter;

        return 0;
    }

    public boolean isEnabled(int)
    {
        com.android.timezonepicker.TimeZoneResultAdapter r0;
        int i0, $i1;
        int[] $r1;
        boolean $z0;

        r0 := @this: com.android.timezonepicker.TimeZoneResultAdapter;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.timezonepicker.TimeZoneResultAdapter: int[] mFilteredTimeZoneIndices>;

        $i1 = $r1[i0];

        if $i1 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public long getItemId(int)
    {
        com.android.timezonepicker.TimeZoneResultAdapter r0;
        int i0, $i1;
        int[] $r1;
        long $l2;

        r0 := @this: com.android.timezonepicker.TimeZoneResultAdapter;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.timezonepicker.TimeZoneResultAdapter: int[] mFilteredTimeZoneIndices>;

        $i1 = $r1[i0];

        $l2 = (long) $i1;

        return $l2;
    }

    public android.view.View getView(int, android.view.View, android.view.ViewGroup)
    {
        com.android.timezonepicker.TimeZoneResultAdapter r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        android.view.View r1, r3, $r20, r22;
        android.view.ViewGroup r2;
        com.android.timezonepicker.TimeZoneResultAdapter$ViewHolder r4;
        com.android.timezonepicker.TimeZoneInfo r5;
        java.lang.String r6, $r12;
        int[] $r7, $r10;
        android.view.LayoutInflater $r8, $r21;
        java.lang.Object $r9;
        com.android.timezonepicker.TimeZoneData $r11;
        android.content.Context $r13;
        android.widget.TextView $r14, $r16, $r17, $r18, $r19;
        java.lang.CharSequence $r15;

        r0 := @this: com.android.timezonepicker.TimeZoneResultAdapter;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.View;

        r2 := @parameter2: android.view.ViewGroup;

        r3 = r1;

        $r7 = r0.<com.android.timezonepicker.TimeZoneResultAdapter: int[] mFilteredTimeZoneIndices>;

        $i1 = $r7[i0];

        if $i1 != -100 goto label1;

        $r21 = r0.<com.android.timezonepicker.TimeZoneResultAdapter: android.view.LayoutInflater mInflater>;

        $i6 = <com.android.timezonepicker.R$layout: int empty_time_zone_item>;

        r22 = virtualinvoke $r21.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>($i6, null);

        return r22;

     label1:
        if r3 == null goto label2;

        $i5 = <com.android.timezonepicker.R$id: int empty_item>;

        $r20 = virtualinvoke r3.<android.view.View: android.view.View findViewById(int)>($i5);

        if $r20 == null goto label3;

     label2:
        $r8 = r0.<com.android.timezonepicker.TimeZoneResultAdapter: android.view.LayoutInflater mInflater>;

        $i2 = <com.android.timezonepicker.R$layout: int time_zone_item>;

        r3 = virtualinvoke $r8.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>($i2, null);

        staticinvoke <com.android.timezonepicker.TimeZoneResultAdapter$ViewHolder: void setupViewHolder(android.view.View)>(r3);

     label3:
        $r9 = virtualinvoke r3.<android.view.View: java.lang.Object getTag()>();

        r4 = (com.android.timezonepicker.TimeZoneResultAdapter$ViewHolder) $r9;

        $r11 = r0.<com.android.timezonepicker.TimeZoneResultAdapter: com.android.timezonepicker.TimeZoneData mTimeZoneData>;

        $r10 = r0.<com.android.timezonepicker.TimeZoneResultAdapter: int[] mFilteredTimeZoneIndices>;

        $i3 = $r10[i0];

        r5 = virtualinvoke $r11.<com.android.timezonepicker.TimeZoneData: com.android.timezonepicker.TimeZoneInfo get(int)>($i3);

        $i4 = <com.android.timezonepicker.TimeZoneResultAdapter: int VIEW_TAG_TIME_ZONE>;

        virtualinvoke r3.<android.view.View: void setTag(int,java.lang.Object)>($i4, r5);

        $r14 = r4.<com.android.timezonepicker.TimeZoneResultAdapter$ViewHolder: android.widget.TextView timeZone>;

        $r12 = r5.<com.android.timezonepicker.TimeZoneInfo: java.lang.String mDisplayName>;

        virtualinvoke $r14.<android.widget.TextView: void setText(java.lang.CharSequence)>($r12);

        $r16 = r4.<com.android.timezonepicker.TimeZoneResultAdapter$ViewHolder: android.widget.TextView timeOffset>;

        $r13 = r0.<com.android.timezonepicker.TimeZoneResultAdapter: android.content.Context mContext>;

        $r15 = virtualinvoke r5.<com.android.timezonepicker.TimeZoneInfo: java.lang.CharSequence getGmtDisplayName(android.content.Context)>($r13);

        virtualinvoke $r16.<android.widget.TextView: void setText(java.lang.CharSequence)>($r15);

        r6 = r5.<com.android.timezonepicker.TimeZoneInfo: java.lang.String mCountry>;

        if r6 != null goto label4;

        $r19 = r4.<com.android.timezonepicker.TimeZoneResultAdapter$ViewHolder: android.widget.TextView location>;

        virtualinvoke $r19.<android.widget.TextView: void setVisibility(int)>(4);

        goto label5;

     label4:
        $r18 = r4.<com.android.timezonepicker.TimeZoneResultAdapter$ViewHolder: android.widget.TextView location>;

        virtualinvoke $r18.<android.widget.TextView: void setText(java.lang.CharSequence)>(r6);

        $r17 = r4.<com.android.timezonepicker.TimeZoneResultAdapter$ViewHolder: android.widget.TextView location>;

        virtualinvoke $r17.<android.widget.TextView: void setVisibility(int)>(0);

     label5:
        return r3;
    }

    public boolean hasStableIds()
    {
        com.android.timezonepicker.TimeZoneResultAdapter r0;

        r0 := @this: com.android.timezonepicker.TimeZoneResultAdapter;

        return 1;
    }

    public void onItemClick(android.widget.AdapterView, android.view.View, int, long)
    {
        com.android.timezonepicker.TimeZoneResultAdapter r0;
        android.widget.AdapterView r1;
        android.view.View r2;
        int i0, $i2;
        long l1;
        com.android.timezonepicker.TimeZoneInfo r3;
        com.android.timezonepicker.TimeZonePickerView$OnTimeZoneSetListener $r4, $r6;
        java.lang.Object $r5;
        java.lang.String $r7;

        r0 := @this: com.android.timezonepicker.TimeZoneResultAdapter;

        r1 := @parameter0: android.widget.AdapterView;

        r2 := @parameter1: android.view.View;

        i0 := @parameter2: int;

        l1 := @parameter3: long;

        $r4 = r0.<com.android.timezonepicker.TimeZoneResultAdapter: com.android.timezonepicker.TimeZonePickerView$OnTimeZoneSetListener mTimeZoneSetListener>;

        if $r4 == null goto label1;

        $i2 = <com.android.timezonepicker.TimeZoneResultAdapter: int VIEW_TAG_TIME_ZONE>;

        $r5 = virtualinvoke r2.<android.view.View: java.lang.Object getTag(int)>($i2);

        r3 = (com.android.timezonepicker.TimeZoneInfo) $r5;

        if r3 == null goto label1;

        $r6 = r0.<com.android.timezonepicker.TimeZoneResultAdapter: com.android.timezonepicker.TimeZonePickerView$OnTimeZoneSetListener mTimeZoneSetListener>;

        interfaceinvoke $r6.<com.android.timezonepicker.TimeZonePickerView$OnTimeZoneSetListener: void onTimeZoneSet(com.android.timezonepicker.TimeZoneInfo)>(r3);

        $r7 = r3.<com.android.timezonepicker.TimeZoneInfo: java.lang.String mTzId>;

        virtualinvoke r0.<com.android.timezonepicker.TimeZoneResultAdapter: void saveRecentTimezone(java.lang.String)>($r7);

     label1:
        return;
    }

    static void <clinit>()
    {
        int $i0;

        <com.android.timezonepicker.TimeZoneResultAdapter: int MAX_RECENT_TIMEZONES> = 3;

        <com.android.timezonepicker.TimeZoneResultAdapter: java.lang.String RECENT_TIMEZONES_DELIMITER> = ",";

        <com.android.timezonepicker.TimeZoneResultAdapter: java.lang.String KEY_RECENT_TIMEZONES> = "preferences_recent_timezones";

        <com.android.timezonepicker.TimeZoneResultAdapter: java.lang.String SHARED_PREFS_NAME> = "com.android.calendar_preferences";

        <com.android.timezonepicker.TimeZoneResultAdapter: int EMPTY_INDEX> = -100;

        <com.android.timezonepicker.TimeZoneResultAdapter: boolean DEBUG> = 0;

        <com.android.timezonepicker.TimeZoneResultAdapter: java.lang.String TAG> = "TimeZoneResultAdapter";

        $i0 = <com.android.timezonepicker.R$id: int time_zone>;

        <com.android.timezonepicker.TimeZoneResultAdapter: int VIEW_TAG_TIME_ZONE> = $i0;

        return;
    }
}
