public class com.android.calendar.OtherPreferences extends android.preference.PreferenceFragment implements android.preference.Preference$OnPreferenceChangeListener
{
    private static final java.lang.String TAG;
    static final java.lang.String SHARED_PREFS_NAME;
    public static final java.lang.String KEY_OTHER_COPY_DB;
    public static final java.lang.String KEY_OTHER_QUIET_HOURS;
    public static final java.lang.String KEY_OTHER_REMINDERS_RESPONDED;
    public static final java.lang.String KEY_OTHER_QUIET_HOURS_START;
    public static final java.lang.String KEY_OTHER_QUIET_HOURS_START_HOUR;
    public static final java.lang.String KEY_OTHER_QUIET_HOURS_START_MINUTE;
    public static final java.lang.String KEY_OTHER_QUIET_HOURS_END;
    public static final java.lang.String KEY_OTHER_QUIET_HOURS_END_HOUR;
    public static final java.lang.String KEY_OTHER_QUIET_HOURS_END_MINUTE;
    public static final java.lang.String KEY_OTHER_1;
    public static final int QUIET_HOURS_DEFAULT_START_HOUR;
    public static final int QUIET_HOURS_DEFAULT_START_MINUTE;
    public static final int QUIET_HOURS_DEFAULT_END_HOUR;
    public static final int QUIET_HOURS_DEFAULT_END_MINUTE;
    private static final int START_LISTENER;
    private static final int END_LISTENER;
    private static final java.lang.String format24Hour;
    private static final java.lang.String format12Hour;
    private android.preference.Preference mCopyDb;
    private android.preference.ListPreference mSkipReminders;
    private android.preference.CheckBoxPreference mQuietHours;
    private android.preference.Preference mQuietHoursStart;
    private android.preference.Preference mQuietHoursEnd;
    private android.app.TimePickerDialog mTimePickerDialog;
    private com.android.calendar.OtherPreferences$TimeSetListener mQuietHoursStartListener;
    private android.app.TimePickerDialog mQuietHoursStartDialog;
    private com.android.calendar.OtherPreferences$TimeSetListener mQuietHoursEndListener;
    private android.app.TimePickerDialog mQuietHoursEndDialog;
    private boolean mIs24HourMode;

    public void <init>()
    {
        com.android.calendar.OtherPreferences r0;

        r0 := @this: com.android.calendar.OtherPreferences;

        specialinvoke r0.<android.preference.PreferenceFragment: void <init>()>();

        return;
    }

    public void onCreate(android.os.Bundle)
    {
        com.android.calendar.OtherPreferences r0;
        android.os.Bundle r1;
        android.preference.PreferenceManager r2;
        android.content.SharedPreferences r3;
        java.lang.String r4, $r17, $r24;
        android.app.Activity r5;
        int i0, i1, i2, i3;
        android.preference.Preference $r6, $r7, $r11, $r13, $r15, $r18, $r23;
        android.preference.ListPreference $r8, $r9, $r22, $r25;
        boolean $z0, $z1, $z2;
        android.preference.CheckBoxPreference $r10;
        com.android.calendar.OtherPreferences$TimeSetListener $r12, $r16, $r19, $r20;
        android.app.TimePickerDialog $r14, $r21;

        r0 := @this: com.android.calendar.OtherPreferences;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.preference.PreferenceFragment: void onCreate(android.os.Bundle)>(r1);

        r2 = virtualinvoke r0.<com.android.calendar.OtherPreferences: android.preference.PreferenceManager getPreferenceManager()>();

        virtualinvoke r2.<android.preference.PreferenceManager: void setSharedPreferencesName(java.lang.String)>("com.android.calendar_preferences");

        r3 = virtualinvoke r2.<android.preference.PreferenceManager: android.content.SharedPreferences getSharedPreferences()>();

        virtualinvoke r0.<com.android.calendar.OtherPreferences: void addPreferencesFromResource(int)>(2131099652);

        $r6 = virtualinvoke r0.<com.android.calendar.OtherPreferences: android.preference.Preference findPreference(java.lang.CharSequence)>("preferences_copy_db");

        r0.<com.android.calendar.OtherPreferences: android.preference.Preference mCopyDb> = $r6;

        $r7 = virtualinvoke r0.<com.android.calendar.OtherPreferences: android.preference.Preference findPreference(java.lang.CharSequence)>("preferences_reminders_responded");

        $r8 = (android.preference.ListPreference) $r7;

        r0.<com.android.calendar.OtherPreferences: android.preference.ListPreference mSkipReminders> = $r8;

        r4 = null;

        $r9 = r0.<com.android.calendar.OtherPreferences: android.preference.ListPreference mSkipReminders>;

        if $r9 == null goto label1;

        $r22 = r0.<com.android.calendar.OtherPreferences: android.preference.ListPreference mSkipReminders>;

        r4 = virtualinvoke $r22.<android.preference.ListPreference: java.lang.String getValue()>();

        $r25 = r0.<com.android.calendar.OtherPreferences: android.preference.ListPreference mSkipReminders>;

        virtualinvoke $r25.<android.preference.ListPreference: void setOnPreferenceChangeListener(android.preference.Preference$OnPreferenceChangeListener)>(r0);

     label1:
        specialinvoke r0.<com.android.calendar.OtherPreferences: void updateSkipRemindersSummary(java.lang.String)>(r4);

        r5 = virtualinvoke r0.<com.android.calendar.OtherPreferences: android.app.Activity getActivity()>();

        if r5 != null goto label2;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CalendarOtherPreferences", "Activity was null");

     label2:
        $z0 = staticinvoke <android.text.format.DateFormat: boolean is24HourFormat(android.content.Context)>(r5);

        r0.<com.android.calendar.OtherPreferences: boolean mIs24HourMode> = $z0;

        $r11 = virtualinvoke r0.<com.android.calendar.OtherPreferences: android.preference.Preference findPreference(java.lang.CharSequence)>("preferences_reminders_quiet_hours");

        $r10 = (android.preference.CheckBoxPreference) $r11;

        r0.<com.android.calendar.OtherPreferences: android.preference.CheckBoxPreference mQuietHours> = $r10;

        i0 = interfaceinvoke r3.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("preferences_reminders_quiet_hours_start_hour", 22);

        i1 = interfaceinvoke r3.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("preferences_reminders_quiet_hours_start_minute", 0);

        $r13 = virtualinvoke r0.<com.android.calendar.OtherPreferences: android.preference.Preference findPreference(java.lang.CharSequence)>("preferences_reminders_quiet_hours_start");

        r0.<com.android.calendar.OtherPreferences: android.preference.Preference mQuietHoursStart> = $r13;

        $r12 = new com.android.calendar.OtherPreferences$TimeSetListener;

        specialinvoke $r12.<com.android.calendar.OtherPreferences$TimeSetListener: void <init>(com.android.calendar.OtherPreferences,int)>(r0, 1);

        r0.<com.android.calendar.OtherPreferences: com.android.calendar.OtherPreferences$TimeSetListener mQuietHoursStartListener> = $r12;

        $r14 = new android.app.TimePickerDialog;

        $r16 = r0.<com.android.calendar.OtherPreferences: com.android.calendar.OtherPreferences$TimeSetListener mQuietHoursStartListener>;

        $z1 = r0.<com.android.calendar.OtherPreferences: boolean mIs24HourMode>;

        specialinvoke $r14.<android.app.TimePickerDialog: void <init>(android.content.Context,android.app.TimePickerDialog$OnTimeSetListener,int,int,boolean)>(r5, $r16, i0, i1, $z1);

        r0.<com.android.calendar.OtherPreferences: android.app.TimePickerDialog mQuietHoursStartDialog> = $r14;

        $r15 = r0.<com.android.calendar.OtherPreferences: android.preference.Preference mQuietHoursStart>;

        $r17 = specialinvoke r0.<com.android.calendar.OtherPreferences: java.lang.String formatTime(int,int)>(i0, i1);

        virtualinvoke $r15.<android.preference.Preference: void setSummary(java.lang.CharSequence)>($r17);

        i2 = interfaceinvoke r3.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("preferences_reminders_quiet_hours_end_hour", 8);

        i3 = interfaceinvoke r3.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("preferences_reminders_quiet_hours_end_minute", 0);

        $r18 = virtualinvoke r0.<com.android.calendar.OtherPreferences: android.preference.Preference findPreference(java.lang.CharSequence)>("preferences_reminders_quiet_hours_end");

        r0.<com.android.calendar.OtherPreferences: android.preference.Preference mQuietHoursEnd> = $r18;

        $r20 = new com.android.calendar.OtherPreferences$TimeSetListener;

        specialinvoke $r20.<com.android.calendar.OtherPreferences$TimeSetListener: void <init>(com.android.calendar.OtherPreferences,int)>(r0, 2);

        r0.<com.android.calendar.OtherPreferences: com.android.calendar.OtherPreferences$TimeSetListener mQuietHoursEndListener> = $r20;

        $r21 = new android.app.TimePickerDialog;

        $r19 = r0.<com.android.calendar.OtherPreferences: com.android.calendar.OtherPreferences$TimeSetListener mQuietHoursEndListener>;

        $z2 = r0.<com.android.calendar.OtherPreferences: boolean mIs24HourMode>;

        specialinvoke $r21.<android.app.TimePickerDialog: void <init>(android.content.Context,android.app.TimePickerDialog$OnTimeSetListener,int,int,boolean)>(r5, $r19, i2, i3, $z2);

        r0.<com.android.calendar.OtherPreferences: android.app.TimePickerDialog mQuietHoursEndDialog> = $r21;

        $r23 = r0.<com.android.calendar.OtherPreferences: android.preference.Preference mQuietHoursEnd>;

        $r24 = specialinvoke r0.<com.android.calendar.OtherPreferences: java.lang.String formatTime(int,int)>(i2, i3);

        virtualinvoke $r23.<android.preference.Preference: void setSummary(java.lang.CharSequence)>($r24);

        return;
    }

    public boolean onPreferenceChange(android.preference.Preference, java.lang.Object)
    {
        com.android.calendar.OtherPreferences r0;
        android.preference.Preference r1;
        java.lang.Object r2;
        java.lang.String r3, r4, $r5;
        boolean $z0;

        r0 := @this: com.android.calendar.OtherPreferences;

        r1 := @parameter0: android.preference.Preference;

        r2 := @parameter1: java.lang.Object;

        r3 = virtualinvoke r1.<android.preference.Preference: java.lang.String getKey()>();

        $r5 = "preferences_reminders_responded";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label1;

        r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);

        specialinvoke r0.<com.android.calendar.OtherPreferences: void updateSkipRemindersSummary(java.lang.String)>(r4);

     label1:
        return 1;
    }

    public boolean onPreferenceTreeClick(android.preference.PreferenceScreen, android.preference.Preference)
    {
        com.android.calendar.OtherPreferences r0;
        android.preference.PreferenceScreen r1;
        android.preference.Preference r2, $r4, $r5, $r6;
        android.content.Intent r3, $r14;
        boolean $z0;
        android.app.TimePickerDialog $r7, $r8, $r9, $r10, $r11, $r12;
        android.content.ComponentName $r13;

        r0 := @this: com.android.calendar.OtherPreferences;

        r1 := @parameter0: android.preference.PreferenceScreen;

        r2 := @parameter1: android.preference.Preference;

        $r4 = r0.<com.android.calendar.OtherPreferences: android.preference.Preference mCopyDb>;

        if r2 != $r4 goto label1;

        $r14 = new android.content.Intent;

        specialinvoke $r14.<android.content.Intent: void <init>(java.lang.String)>("android.intent.action.MAIN");

        r3 = $r14;

        $r13 = new android.content.ComponentName;

        specialinvoke $r13.<android.content.ComponentName: void <init>(java.lang.String,java.lang.String)>("com.android.providers.calendar", "com.android.providers.calendar.CalendarDebugActivity");

        virtualinvoke r3.<android.content.Intent: android.content.Intent setComponent(android.content.ComponentName)>($r13);

        virtualinvoke r0.<com.android.calendar.OtherPreferences: void startActivity(android.content.Intent)>(r3);

        goto label6;

     label1:
        $r5 = r0.<com.android.calendar.OtherPreferences: android.preference.Preference mQuietHoursStart>;

        if r2 != $r5 goto label3;

        $r10 = r0.<com.android.calendar.OtherPreferences: android.app.TimePickerDialog mTimePickerDialog>;

        if $r10 != null goto label2;

        $r11 = r0.<com.android.calendar.OtherPreferences: android.app.TimePickerDialog mQuietHoursStartDialog>;

        r0.<com.android.calendar.OtherPreferences: android.app.TimePickerDialog mTimePickerDialog> = $r11;

        $r12 = r0.<com.android.calendar.OtherPreferences: android.app.TimePickerDialog mTimePickerDialog>;

        virtualinvoke $r12.<android.app.TimePickerDialog: void show()>();

        goto label6;

     label2:
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("CalendarOtherPreferences", "not null");

        goto label6;

     label3:
        $r6 = r0.<com.android.calendar.OtherPreferences: android.preference.Preference mQuietHoursEnd>;

        if r2 != $r6 goto label5;

        $r7 = r0.<com.android.calendar.OtherPreferences: android.app.TimePickerDialog mTimePickerDialog>;

        if $r7 != null goto label4;

        $r8 = r0.<com.android.calendar.OtherPreferences: android.app.TimePickerDialog mQuietHoursEndDialog>;

        r0.<com.android.calendar.OtherPreferences: android.app.TimePickerDialog mTimePickerDialog> = $r8;

        $r9 = r0.<com.android.calendar.OtherPreferences: android.app.TimePickerDialog mTimePickerDialog>;

        virtualinvoke $r9.<android.app.TimePickerDialog: void show()>();

        goto label6;

     label4:
        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("CalendarOtherPreferences", "not null");

        goto label6;

     label5:
        $z0 = specialinvoke r0.<android.preference.PreferenceFragment: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)>(r1, r2);

        return $z0;

     label6:
        return 1;
    }

    private java.lang.String formatTime(int, int)
    {
        com.android.calendar.OtherPreferences r0;
        int i0, i1;
        android.text.format.Time r1, $r3;
        java.lang.String r2, $r4, $r5;
        boolean $z0;

        r0 := @this: com.android.calendar.OtherPreferences;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r3 = new android.text.format.Time;

        specialinvoke $r3.<android.text.format.Time: void <init>()>();

        r1 = $r3;

        r1.<android.text.format.Time: int hour> = i0;

        r1.<android.text.format.Time: int minute> = i1;

        $z0 = r0.<com.android.calendar.OtherPreferences: boolean mIs24HourMode>;

        if $z0 == 0 goto label1;

        $r5 = "%H:%M";

        goto label2;

     label1:
        $r5 = "%I:%M%P";

     label2:
        r2 = $r5;

        $r4 = virtualinvoke r1.<android.text.format.Time: java.lang.String format(java.lang.String)>(r2);

        return $r4;
    }

    private void updateSkipRemindersSummary(java.lang.String)
    {
        com.android.calendar.OtherPreferences r0;
        java.lang.String r1, $r9, $r11;
        int i0, i1, $i2;
        java.lang.CharSequence[] r2, r3;
        android.preference.ListPreference $r4, $r5, $r6, $r8, $r12;
        java.lang.CharSequence $r7, $r10, $r13;
        boolean $z0;

        r0 := @this: com.android.calendar.OtherPreferences;

        r1 := @parameter0: java.lang.String;

        $r4 = r0.<com.android.calendar.OtherPreferences: android.preference.ListPreference mSkipReminders>;

        if $r4 == null goto label4;

        i0 = 0;

        $r5 = r0.<com.android.calendar.OtherPreferences: android.preference.ListPreference mSkipReminders>;

        r2 = virtualinvoke $r5.<android.preference.ListPreference: java.lang.CharSequence[] getEntryValues()>();

        $r6 = r0.<com.android.calendar.OtherPreferences: android.preference.ListPreference mSkipReminders>;

        r3 = virtualinvoke $r6.<android.preference.ListPreference: java.lang.CharSequence[] getEntries()>();

        i1 = 0;

     label1:
        $i2 = lengthof r2;

        if i1 >= $i2 goto label3;

        $r13 = r2[i1];

        $z0 = virtualinvoke $r13.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        i0 = i1;

        goto label3;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        $r8 = r0.<com.android.calendar.OtherPreferences: android.preference.ListPreference mSkipReminders>;

        $r7 = r3[i0];

        $r9 = interfaceinvoke $r7.<java.lang.CharSequence: java.lang.String toString()>();

        virtualinvoke $r8.<android.preference.ListPreference: void setSummary(java.lang.CharSequence)>($r9);

        if r1 != null goto label4;

        $r12 = r0.<com.android.calendar.OtherPreferences: android.preference.ListPreference mSkipReminders>;

        $r10 = r2[i0];

        $r11 = interfaceinvoke $r10.<java.lang.CharSequence: java.lang.String toString()>();

        virtualinvoke $r12.<android.preference.ListPreference: void setValue(java.lang.String)>($r11);

     label4:
        return;
    }

    static android.app.TimePickerDialog access$002(com.android.calendar.OtherPreferences, android.app.TimePickerDialog)
    {
        com.android.calendar.OtherPreferences r0;
        android.app.TimePickerDialog r1;

        r0 := @parameter0: com.android.calendar.OtherPreferences;

        r1 := @parameter1: android.app.TimePickerDialog;

        r0.<com.android.calendar.OtherPreferences: android.app.TimePickerDialog mTimePickerDialog> = r1;

        return r1;
    }

    static java.lang.String access$100(com.android.calendar.OtherPreferences, int, int)
    {
        com.android.calendar.OtherPreferences r0;
        int i0, i1;
        java.lang.String $r1;

        r0 := @parameter0: com.android.calendar.OtherPreferences;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = specialinvoke r0.<com.android.calendar.OtherPreferences: java.lang.String formatTime(int,int)>(i0, i1);

        return $r1;
    }

    static android.preference.Preference access$200(com.android.calendar.OtherPreferences)
    {
        com.android.calendar.OtherPreferences r0;
        android.preference.Preference $r1;

        r0 := @parameter0: com.android.calendar.OtherPreferences;

        $r1 = r0.<com.android.calendar.OtherPreferences: android.preference.Preference mQuietHoursStart>;

        return $r1;
    }

    static android.preference.Preference access$300(com.android.calendar.OtherPreferences)
    {
        com.android.calendar.OtherPreferences r0;
        android.preference.Preference $r1;

        r0 := @parameter0: com.android.calendar.OtherPreferences;

        $r1 = r0.<com.android.calendar.OtherPreferences: android.preference.Preference mQuietHoursEnd>;

        return $r1;
    }

    public static void <clinit>()
    {
        <com.android.calendar.OtherPreferences: java.lang.String format12Hour> = "%I:%M%P";

        <com.android.calendar.OtherPreferences: java.lang.String format24Hour> = "%H:%M";

        <com.android.calendar.OtherPreferences: int END_LISTENER> = 2;

        <com.android.calendar.OtherPreferences: int START_LISTENER> = 1;

        <com.android.calendar.OtherPreferences: int QUIET_HOURS_DEFAULT_END_MINUTE> = 0;

        <com.android.calendar.OtherPreferences: int QUIET_HOURS_DEFAULT_END_HOUR> = 8;

        <com.android.calendar.OtherPreferences: int QUIET_HOURS_DEFAULT_START_MINUTE> = 0;

        <com.android.calendar.OtherPreferences: int QUIET_HOURS_DEFAULT_START_HOUR> = 22;

        <com.android.calendar.OtherPreferences: java.lang.String KEY_OTHER_1> = "preferences_tardis_1";

        <com.android.calendar.OtherPreferences: java.lang.String KEY_OTHER_QUIET_HOURS_END_MINUTE> = "preferences_reminders_quiet_hours_end_minute";

        <com.android.calendar.OtherPreferences: java.lang.String KEY_OTHER_QUIET_HOURS_END_HOUR> = "preferences_reminders_quiet_hours_end_hour";

        <com.android.calendar.OtherPreferences: java.lang.String KEY_OTHER_QUIET_HOURS_END> = "preferences_reminders_quiet_hours_end";

        <com.android.calendar.OtherPreferences: java.lang.String KEY_OTHER_QUIET_HOURS_START_MINUTE> = "preferences_reminders_quiet_hours_start_minute";

        <com.android.calendar.OtherPreferences: java.lang.String KEY_OTHER_QUIET_HOURS_START_HOUR> = "preferences_reminders_quiet_hours_start_hour";

        <com.android.calendar.OtherPreferences: java.lang.String KEY_OTHER_QUIET_HOURS_START> = "preferences_reminders_quiet_hours_start";

        <com.android.calendar.OtherPreferences: java.lang.String KEY_OTHER_REMINDERS_RESPONDED> = "preferences_reminders_responded";

        <com.android.calendar.OtherPreferences: java.lang.String KEY_OTHER_QUIET_HOURS> = "preferences_reminders_quiet_hours";

        <com.android.calendar.OtherPreferences: java.lang.String KEY_OTHER_COPY_DB> = "preferences_copy_db";

        <com.android.calendar.OtherPreferences: java.lang.String SHARED_PREFS_NAME> = "com.android.calendar_preferences";

        <com.android.calendar.OtherPreferences: java.lang.String TAG> = "CalendarOtherPreferences";

        return;
    }
}
