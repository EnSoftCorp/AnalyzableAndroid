public class com.android.calendar.alerts.InitAlarmsService extends android.app.IntentService
{
    private static final java.lang.String TAG;
    private static final java.lang.String SCHEDULE_ALARM_REMOVE_PATH;
    private static final android.net.Uri SCHEDULE_ALARM_REMOVE_URI;
    private static final long DELAY_MS;

    public void <init>()
    {
        com.android.calendar.alerts.InitAlarmsService r0;

        r0 := @this: com.android.calendar.alerts.InitAlarmsService;

        specialinvoke r0.<android.app.IntentService: void <init>(java.lang.String)>("InitAlarmsService");

        return;
    }

    protected void onHandleIntent(android.content.Intent)
    {
        com.android.calendar.alerts.InitAlarmsService r0;
        android.content.Intent r1;
        java.lang.IllegalArgumentException r2, $r6;
        android.content.ContentResolver $r3;
        android.content.ContentValues $r4;
        android.net.Uri $r5;
        java.lang.StringBuilder $r7, $r8, $r10;
        java.lang.String $r9, $r11;

        r0 := @this: com.android.calendar.alerts.InitAlarmsService;

        r1 := @parameter0: android.content.Intent;

        staticinvoke <android.os.SystemClock: void sleep(long)>(30000L);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("InitAlarmsService", "Clearing and rescheduling alarms.");

     label1:
        $r3 = virtualinvoke r0.<com.android.calendar.alerts.InitAlarmsService: android.content.ContentResolver getContentResolver()>();

        $r5 = <com.android.calendar.alerts.InitAlarmsService: android.net.Uri SCHEDULE_ALARM_REMOVE_URI>;

        $r4 = new android.content.ContentValues;

        specialinvoke $r4.<android.content.ContentValues: void <init>()>();

        virtualinvoke $r3.<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>($r5, $r4, null, null);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r2 = $r6;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("update failed: ");

        $r9 = virtualinvoke r2.<java.lang.IllegalArgumentException: java.lang.String toString()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("InitAlarmsService", $r11);

     label4:
        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        android.net.Uri $r0, $r1;

        <com.android.calendar.alerts.InitAlarmsService: long DELAY_MS> = 30000L;

        <com.android.calendar.alerts.InitAlarmsService: java.lang.String SCHEDULE_ALARM_REMOVE_PATH> = "schedule_alarms_remove";

        <com.android.calendar.alerts.InitAlarmsService: java.lang.String TAG> = "InitAlarmsService";

        $r0 = <android.provider.CalendarContract: android.net.Uri CONTENT_URI>;

        $r1 = staticinvoke <android.net.Uri: android.net.Uri withAppendedPath(android.net.Uri,java.lang.String)>($r0, "schedule_alarms_remove");

        <com.android.calendar.alerts.InitAlarmsService: android.net.Uri SCHEDULE_ALARM_REMOVE_URI> = $r1;

        return;
    }
}
