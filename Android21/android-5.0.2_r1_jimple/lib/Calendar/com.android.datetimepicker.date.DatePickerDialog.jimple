public class com.android.datetimepicker.date.DatePickerDialog extends android.app.DialogFragment implements android.view.View$OnClickListener, com.android.datetimepicker.date.DatePickerController
{
    private static final java.lang.String TAG;
    private static final int UNINITIALIZED;
    private static final int MONTH_AND_DAY_VIEW;
    private static final int YEAR_VIEW;
    private static final java.lang.String KEY_SELECTED_YEAR;
    private static final java.lang.String KEY_SELECTED_MONTH;
    private static final java.lang.String KEY_SELECTED_DAY;
    private static final java.lang.String KEY_LIST_POSITION;
    private static final java.lang.String KEY_WEEK_START;
    private static final java.lang.String KEY_YEAR_START;
    private static final java.lang.String KEY_YEAR_END;
    private static final java.lang.String KEY_CURRENT_VIEW;
    private static final java.lang.String KEY_LIST_POSITION_OFFSET;
    private static final int DEFAULT_START_YEAR;
    private static final int DEFAULT_END_YEAR;
    private static final int ANIMATION_DURATION;
    private static final int ANIMATION_DELAY;
    private static java.text.SimpleDateFormat YEAR_FORMAT;
    private static java.text.SimpleDateFormat DAY_FORMAT;
    private final java.util.Calendar mCalendar;
    private com.android.datetimepicker.date.DatePickerDialog$OnDateSetListener mCallBack;
    private java.util.HashSet mListeners;
    private com.android.datetimepicker.date.AccessibleDateAnimator mAnimator;
    private android.widget.TextView mDayOfWeekView;
    private android.widget.LinearLayout mMonthAndDayView;
    private android.widget.TextView mSelectedMonthTextView;
    private android.widget.TextView mSelectedDayTextView;
    private android.widget.TextView mYearView;
    private com.android.datetimepicker.date.DayPickerView mDayPickerView;
    private com.android.datetimepicker.date.YearPickerView mYearPickerView;
    private android.widget.Button mDoneButton;
    private int mCurrentView;
    private int mWeekStart;
    private int mMinYear;
    private int mMaxYear;
    private java.util.Calendar mMinDate;
    private java.util.Calendar mMaxDate;
    private com.android.datetimepicker.HapticFeedbackController mHapticFeedbackController;
    private boolean mDelayAnimation;
    private java.lang.String mDayPickerDescription;
    private java.lang.String mSelectDay;
    private java.lang.String mYearPickerDescription;
    private java.lang.String mSelectYear;

    public void <init>()
    {
        com.android.datetimepicker.date.DatePickerDialog r0;
        java.util.Calendar $r1, $r3;
        java.util.HashSet $r2;
        int $i0;

        r0 := @this: com.android.datetimepicker.date.DatePickerDialog;

        specialinvoke r0.<android.app.DialogFragment: void <init>()>();

        $r1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        r0.<com.android.datetimepicker.date.DatePickerDialog: java.util.Calendar mCalendar> = $r1;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r0.<com.android.datetimepicker.date.DatePickerDialog: java.util.HashSet mListeners> = $r2;

        r0.<com.android.datetimepicker.date.DatePickerDialog: int mCurrentView> = -1;

        $r3 = r0.<com.android.datetimepicker.date.DatePickerDialog: java.util.Calendar mCalendar>;

        $i0 = virtualinvoke $r3.<java.util.Calendar: int getFirstDayOfWeek()>();

        r0.<com.android.datetimepicker.date.DatePickerDialog: int mWeekStart> = $i0;

        r0.<com.android.datetimepicker.date.DatePickerDialog: int mMinYear> = 1900;

        r0.<com.android.datetimepicker.date.DatePickerDialog: int mMaxYear> = 2100;

        r0.<com.android.datetimepicker.date.DatePickerDialog: boolean mDelayAnimation> = 1;

        return;
    }

    public static com.android.datetimepicker.date.DatePickerDialog newInstance(com.android.datetimepicker.date.DatePickerDialog$OnDateSetListener, int, int, int)
    {
        com.android.datetimepicker.date.DatePickerDialog$OnDateSetListener r0;
        int i0, i1, i2;
        com.android.datetimepicker.date.DatePickerDialog r1, $r2;

        r0 := @parameter0: com.android.datetimepicker.date.DatePickerDialog$OnDateSetListener;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r2 = new com.android.datetimepicker.date.DatePickerDialog;

        specialinvoke $r2.<com.android.datetimepicker.date.DatePickerDialog: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<com.android.datetimepicker.date.DatePickerDialog: void initialize(com.android.datetimepicker.date.DatePickerDialog$OnDateSetListener,int,int,int)>(r0, i0, i1, i2);

        return r1;
    }

    public void initialize(com.android.datetimepicker.date.DatePickerDialog$OnDateSetListener, int, int, int)
    {
        com.android.datetimepicker.date.DatePickerDialog r0;
        com.android.datetimepicker.date.DatePickerDialog$OnDateSetListener r1;
        int i0, i1, i2;
        java.util.Calendar $r2, $r3, $r4;

        r0 := @this: com.android.datetimepicker.date.DatePickerDialog;

        r1 := @parameter0: com.android.datetimepicker.date.DatePickerDialog$OnDateSetListener;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r0.<com.android.datetimepicker.date.DatePickerDialog: com.android.datetimepicker.date.DatePickerDialog$OnDateSetListener mCallBack> = r1;

        $r2 = r0.<com.android.datetimepicker.date.DatePickerDialog: java.util.Calendar mCalendar>;

        virtualinvoke $r2.<java.util.Calendar: void set(int,int)>(1, i0);

        $r3 = r0.<com.android.datetimepicker.date.DatePickerDialog: java.util.Calendar mCalendar>;

        virtualinvoke $r3.<java.util.Calendar: void set(int,int)>(2, i1);

        $r4 = r0.<com.android.datetimepicker.date.DatePickerDialog: java.util.Calendar mCalendar>;

        virtualinvoke $r4.<java.util.Calendar: void set(int,int)>(5, i2);

        return;
    }

    public void onCreate(android.os.Bundle)
    {
        com.android.datetimepicker.date.DatePickerDialog r0;
        android.os.Bundle r1;
        android.app.Activity r2;
        android.view.Window $r3;
        java.util.Calendar $r4, $r5, $r6;
        int $i0, $i1, $i2;

        r0 := @this: com.android.datetimepicker.date.DatePickerDialog;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.DialogFragment: void onCreate(android.os.Bundle)>(r1);

        r2 = virtualinvoke r0.<com.android.datetimepicker.date.DatePickerDialog: android.app.Activity getActivity()>();

        $r3 = virtualinvoke r2.<android.app.Activity: android.view.Window getWindow()>();

        virtualinvoke $r3.<android.view.Window: void setSoftInputMode(int)>(3);

        if r1 == null goto label1;

        $r4 = r0.<com.android.datetimepicker.date.DatePickerDialog: java.util.Calendar mCalendar>;

        $i0 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String)>("year");

        virtualinvoke $r4.<java.util.Calendar: void set(int,int)>(1, $i0);

        $r5 = r0.<com.android.datetimepicker.date.DatePickerDialog: java.util.Calendar mCalendar>;

        $i1 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String)>("month");

        virtualinvoke $r5.<java.util.Calendar: void set(int,int)>(2, $i1);

        $r6 = r0.<com.android.datetimepicker.date.DatePickerDialog: java.util.Calendar mCalendar>;

        $i2 = virtualinvoke r1.<android.os.Bundle: int getInt(java.lang.String)>("day");

        virtualinvoke $r6.<java.util.Calendar: void set(int,int)>(5, $i2);

     label1:
        return;
    }

    public void onSaveInstanceState(android.os.Bundle)
    {
        com.android.datetimepicker.date.DatePickerDialog r0;
        android.os.Bundle r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.util.Calendar $r2, $r3, $r4;
        com.android.datetimepicker.date.YearPickerView $r5, $r6;
        com.android.datetimepicker.date.DayPickerView $r7;

        r0 := @this: com.android.datetimepicker.date.DatePickerDialog;

        r1 := @parameter0: android.os.Bundle;

        specialinvoke r0.<android.app.DialogFragment: void onSaveInstanceState(android.os.Bundle)>(r1);

        $r2 = r0.<com.android.datetimepicker.date.DatePickerDialog: java.util.Calendar mCalendar>;

        $i1 = virtualinvoke $r2.<java.util.Calendar: int get(int)>(1);

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("year", $i1);

        $r3 = r0.<com.android.datetimepicker.date.DatePickerDialog: java.util.Calendar mCalendar>;

        $i2 = virtualinvoke $r3.<java.util.Calendar: int get(int)>(2);

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("month", $i2);

        $r4 = r0.<com.android.datetimepicker.date.DatePickerDialog: java.util.Calendar mCalendar>;

        $i3 = virtualinvoke $r4.<java.util.Calendar: int get(int)>(5);

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("day", $i3);

        $i4 = r0.<com.android.datetimepicker.date.DatePickerDialog: int mWeekStart>;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("week_start", $i4);

        $i5 = r0.<com.android.datetimepicker.date.DatePickerDialog: int mMinYear>;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("year_start", $i5);

        $i6 = r0.<com.android.datetimepicker.date.DatePickerDialog: int mMaxYear>;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("year_end", $i6);

        $i7 = r0.<com.android.datetimepicker.date.DatePickerDialog: int mCurrentView>;

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("current_view", $i7);

        i0 = -1;

        $i9 = r0.<com.android.datetimepicker.date.DatePickerDialog: int mCurrentView>;

        if $i9 != 0 goto label1;

        $r7 = r0.<com.android.datetimepicker.date.DatePickerDialog: com.android.datetimepicker.date.DayPickerView mDayPickerView>;

        i0 = virtualinvoke $r7.<com.android.datetimepicker.date.DayPickerView: int getMostVisiblePosition()>();

        goto label2;

     label1:
        $i8 = r0.<com.android.datetimepicker.date.DatePickerDialog: int mCurrentView>;

        if $i8 != 1 goto label2;

        $r5 = r0.<com.android.datetimepicker.date.DatePickerDialog: com.android.datetimepicker.date.YearPickerView mYearPickerView>;

        i0 = virtualinvoke $r5.<com.android.datetimepicker.date.YearPickerView: int getFirstVisiblePosition()>();

        $r6 = r0.<com.android.datetimepicker.date.DatePickerDialog: com.android.datetimepicker.date.YearPickerView mYearPickerView>;

        $i10 = virtualinvoke $r6.<com.android.datetimepicker.date.YearPickerView: int getFirstPositionOffset()>();

        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("list_position_offset", $i10);

     label2:
        virtualinvoke r1.<android.os.Bundle: void putInt(java.lang.String,int)>("list_position", i0);

        return;
    }

    public android.view.View onCreateView(android.view.LayoutInflater, android.view.ViewGroup, android.os.Bundle)
    {
        com.android.datetimepicker.date.DatePickerDialog r0;
        android.view.LayoutInflater r1;
        android.view.ViewGroup r2;
        android.os.Bundle r3;
        android.view.View r4, $r11, $r14, $r17, $r18, $r21, $r32, $r41;
        int i0, i1, i2, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i16, $i17, $i18, $i19;
        android.app.Activity r5;
        android.content.res.Resources r6;
        android.view.animation.AlphaAnimation r7, r8, $r37, $r39;
        android.app.Dialog $r9;
        android.view.Window $r10;
        android.widget.TextView $r12, $r16, $r19, $r20, $r22;
        android.widget.LinearLayout $r13, $r15;
        com.android.datetimepicker.date.SimpleDayPickerView $r23;
        com.android.datetimepicker.date.YearPickerView $r24, $r36, $r47;
        java.lang.String $r25, $r26, $r27, $r28;
        com.android.datetimepicker.date.AccessibleDateAnimator $r29, $r31, $r33, $r35, $r38, $r42;
        com.android.datetimepicker.date.DayPickerView $r30, $r43;
        java.util.Calendar $r34;
        long $l15;
        android.widget.Button $r40, $r45;
        com.android.datetimepicker.date.DatePickerDialog$1 $r44;
        com.android.datetimepicker.HapticFeedbackController $r46;

        r0 := @this: com.android.datetimepicker.date.DatePickerDialog;

        r1 := @parameter0: android.view.LayoutInflater;

        r2 := @parameter1: android.view.ViewGroup;

        r3 := @parameter2: android.os.Bundle;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("DatePickerDialog", "onCreateView: ");

        $r9 = virtualinvoke r0.<com.android.datetimepicker.date.DatePickerDialog: android.app.Dialog getDialog()>();

        $r10 = virtualinvoke $r9.<android.app.Dialog: android.view.Window getWindow()>();

        virtualinvoke $r10.<android.view.Window: boolean requestFeature(int)>(1);

        $i4 = <com.android.datetimepicker.R$layout: int date_picker_dialog>;

        r4 = virtualinvoke r1.<android.view.LayoutInflater: android.view.View inflate(int,android.view.ViewGroup)>($i4, null);

        $i5 = <com.android.datetimepicker.R$id: int date_picker_header>;

        $r11 = virtualinvoke r4.<android.view.View: android.view.View findViewById(int)>($i5);

        $r12 = (android.widget.TextView) $r11;

        r0.<com.android.datetimepicker.date.DatePickerDialog: android.widget.TextView mDayOfWeekView> = $r12;

        $i6 = <com.android.datetimepicker.R$id: int date_picker_month_and_day>;

        $r14 = virtualinvoke r4.<android.view.View: android.view.View findViewById(int)>($i6);

        $r13 = (android.widget.LinearLayout) $r14;

        r0.<com.android.datetimepicker.date.DatePickerDialog: android.widget.LinearLayout mMonthAndDayView> = $r13;

        $r15 = r0.<com.android.datetimepicker.date.DatePickerDialog: android.widget.LinearLayout mMonthAndDayView>;

        virtualinvoke $r15.<android.widget.LinearLayout: void setOnClickListener(android.view.View$OnClickListener)>(r0);

        $i7 = <com.android.datetimepicker.R$id: int date_picker_month>;

        $r17 = virtualinvoke r4.<android.view.View: android.view.View findViewById(int)>($i7);

        $r16 = (android.widget.TextView) $r17;

        r0.<com.android.datetimepicker.date.DatePickerDialog: android.widget.TextView mSelectedMonthTextView> = $r16;

        $i8 = <com.android.datetimepicker.R$id: int date_picker_day>;

        $r18 = virtualinvoke r4.<android.view.View: android.view.View findViewById(int)>($i8);

        $r19 = (android.widget.TextView) $r18;

        r0.<com.android.datetimepicker.date.DatePickerDialog: android.widget.TextView mSelectedDayTextView> = $r19;

        $i9 = <com.android.datetimepicker.R$id: int date_picker_year>;

        $r21 = virtualinvoke r4.<android.view.View: android.view.View findViewById(int)>($i9);

        $r22 = (android.widget.TextView) $r21;

        r0.<com.android.datetimepicker.date.DatePickerDialog: android.widget.TextView mYearView> = $r22;

        $r20 = r0.<com.android.datetimepicker.date.DatePickerDialog: android.widget.TextView mYearView>;

        virtualinvoke $r20.<android.widget.TextView: void setOnClickListener(android.view.View$OnClickListener)>(r0);

        i0 = -1;

        i1 = 0;

        i2 = 0;

        if r3 == null goto label1;

        $i17 = virtualinvoke r3.<android.os.Bundle: int getInt(java.lang.String)>("week_start");

        r0.<com.android.datetimepicker.date.DatePickerDialog: int mWeekStart> = $i17;

        $i18 = virtualinvoke r3.<android.os.Bundle: int getInt(java.lang.String)>("year_start");

        r0.<com.android.datetimepicker.date.DatePickerDialog: int mMinYear> = $i18;

        $i19 = virtualinvoke r3.<android.os.Bundle: int getInt(java.lang.String)>("year_end");

        r0.<com.android.datetimepicker.date.DatePickerDialog: int mMaxYear> = $i19;

        i2 = virtualinvoke r3.<android.os.Bundle: int getInt(java.lang.String)>("current_view");

        i0 = virtualinvoke r3.<android.os.Bundle: int getInt(java.lang.String)>("list_position");

        i1 = virtualinvoke r3.<android.os.Bundle: int getInt(java.lang.String)>("list_position_offset");

     label1:
        r5 = virtualinvoke r0.<com.android.datetimepicker.date.DatePickerDialog: android.app.Activity getActivity()>();

        $r23 = new com.android.datetimepicker.date.SimpleDayPickerView;

        specialinvoke $r23.<com.android.datetimepicker.date.SimpleDayPickerView: void <init>(android.content.Context,com.android.datetimepicker.date.DatePickerController)>(r5, r0);

        r0.<com.android.datetimepicker.date.DatePickerDialog: com.android.datetimepicker.date.DayPickerView mDayPickerView> = $r23;

        $r24 = new com.android.datetimepicker.date.YearPickerView;

        specialinvoke $r24.<com.android.datetimepicker.date.YearPickerView: void <init>(android.content.Context,com.android.datetimepicker.date.DatePickerController)>(r5, r0);

        r0.<com.android.datetimepicker.date.DatePickerDialog: com.android.datetimepicker.date.YearPickerView mYearPickerView> = $r24;

        r6 = virtualinvoke r0.<com.android.datetimepicker.date.DatePickerDialog: android.content.res.Resources getResources()>();

        $i10 = <com.android.datetimepicker.R$string: int day_picker_description>;

        $r26 = virtualinvoke r6.<android.content.res.Resources: java.lang.String getString(int)>($i10);

        r0.<com.android.datetimepicker.date.DatePickerDialog: java.lang.String mDayPickerDescription> = $r26;

        $i12 = <com.android.datetimepicker.R$string: int select_day>;

        $r25 = virtualinvoke r6.<android.content.res.Resources: java.lang.String getString(int)>($i12);

        r0.<com.android.datetimepicker.date.DatePickerDialog: java.lang.String mSelectDay> = $r25;

        $i11 = <com.android.datetimepicker.R$string: int year_picker_description>;

        $r28 = virtualinvoke r6.<android.content.res.Resources: java.lang.String getString(int)>($i11);

        r0.<com.android.datetimepicker.date.DatePickerDialog: java.lang.String mYearPickerDescription> = $r28;

        $i14 = <com.android.datetimepicker.R$string: int select_year>;

        $r27 = virtualinvoke r6.<android.content.res.Resources: java.lang.String getString(int)>($i14);

        r0.<com.android.datetimepicker.date.DatePickerDialog: java.lang.String mSelectYear> = $r27;

        $i13 = <com.android.datetimepicker.R$id: int animator>;

        $r32 = virtualinvoke r4.<android.view.View: android.view.View findViewById(int)>($i13);

        $r31 = (com.android.datetimepicker.date.AccessibleDateAnimator) $r32;

        r0.<com.android.datetimepicker.date.DatePickerDialog: com.android.datetimepicker.date.AccessibleDateAnimator mAnimator> = $r31;

        $r29 = r0.<com.android.datetimepicker.date.DatePickerDialog: com.android.datetimepicker.date.AccessibleDateAnimator mAnimator>;

        $r30 = r0.<com.android.datetimepicker.date.DatePickerDialog: com.android.datetimepicker.date.DayPickerView mDayPickerView>;

        virtualinvoke $r29.<com.android.datetimepicker.date.AccessibleDateAnimator: void addView(android.view.View)>($r30);

        $r35 = r0.<com.android.datetimepicker.date.DatePickerDialog: com.android.datetimepicker.date.AccessibleDateAnimator mAnimator>;

        $r36 = r0.<com.android.datetimepicker.date.DatePickerDialog: com.android.datetimepicker.date.YearPickerView mYearPickerView>;

        virtualinvoke $r35.<com.android.datetimepicker.date.AccessibleDateAnimator: void addView(android.view.View)>($r36);

        $r33 = r0.<com.android.datetimepicker.date.DatePickerDialog: com.android.datetimepicker.date.AccessibleDateAnimator mAnimator>;

        $r34 = r0.<com.android.datetimepicker.date.DatePickerDialog: java.util.Calendar mCalendar>;

        $l15 = virtualinvoke $r34.<java.util.Calendar: long getTimeInMillis()>();

        virtualinvoke $r33.<com.android.datetimepicker.date.AccessibleDateAnimator: void setDateMillis(long)>($l15);

        $r39 = new android.view.animation.AlphaAnimation;

        specialinvoke $r39.<android.view.animation.AlphaAnimation: void <init>(float,float)>(0.0F, 1.0F);

        r7 = $r39;

        virtualinvoke r7.<android.view.animation.Animation: void setDuration(long)>(300L);

        $r38 = r0.<com.android.datetimepicker.date.DatePickerDialog: com.android.datetimepicker.date.AccessibleDateAnimator mAnimator>;

        virtualinvoke $r38.<com.android.datetimepicker.date.AccessibleDateAnimator: void setInAnimation(android.view.animation.Animation)>(r7);

        $r37 = new android.view.animation.AlphaAnimation;

        specialinvoke $r37.<android.view.animation.AlphaAnimation: void <init>(float,float)>(1.0F, 0.0F);

        r8 = $r37;

        virtualinvoke r8.<android.view.animation.Animation: void setDuration(long)>(300L);

        $r42 = r0.<com.android.datetimepicker.date.DatePickerDialog: com.android.datetimepicker.date.AccessibleDateAnimator mAnimator>;

        virtualinvoke $r42.<com.android.datetimepicker.date.AccessibleDateAnimator: void setOutAnimation(android.view.animation.Animation)>(r8);

        $i16 = <com.android.datetimepicker.R$id: int done>;

        $r41 = virtualinvoke r4.<android.view.View: android.view.View findViewById(int)>($i16);

        $r40 = (android.widget.Button) $r41;

        r0.<com.android.datetimepicker.date.DatePickerDialog: android.widget.Button mDoneButton> = $r40;

        $r45 = r0.<com.android.datetimepicker.date.DatePickerDialog: android.widget.Button mDoneButton>;

        $r44 = new com.android.datetimepicker.date.DatePickerDialog$1;

        specialinvoke $r44.<com.android.datetimepicker.date.DatePickerDialog$1: void <init>(com.android.datetimepicker.date.DatePickerDialog)>(r0);

        virtualinvoke $r45.<android.widget.Button: void setOnClickListener(android.view.View$OnClickListener)>($r44);

        specialinvoke r0.<com.android.datetimepicker.date.DatePickerDialog: void updateDisplay(boolean)>(0);

        specialinvoke r0.<com.android.datetimepicker.date.DatePickerDialog: void setCurrentView(int)>(i2);

        if i0 == -1 goto label3;

        if i2 != 0 goto label2;

        $r43 = r0.<com.android.datetimepicker.date.DatePickerDialog: com.android.datetimepicker.date.DayPickerView mDayPickerView>;

        virtualinvoke $r43.<com.android.datetimepicker.date.DayPickerView: void postSetSelection(int)>(i0);

        goto label3;

     label2:
        if i2 != 1 goto label3;

        $r47 = r0.<com.android.datetimepicker.date.DatePickerDialog: com.android.datetimepicker.date.YearPickerView mYearPickerView>;

        virtualinvoke $r47.<com.android.datetimepicker.date.YearPickerView: void postSetSelectionFromTop(int,int)>(i0, i1);

     label3:
        $r46 = new com.android.datetimepicker.HapticFeedbackController;

        specialinvoke $r46.<com.android.datetimepicker.HapticFeedbackController: void <init>(android.content.Context)>(r5);

        r0.<com.android.datetimepicker.date.DatePickerDialog: com.android.datetimepicker.HapticFeedbackController mHapticFeedbackController> = $r46;

        return r4;
    }

    public void onResume()
    {
        com.android.datetimepicker.date.DatePickerDialog r0;
        com.android.datetimepicker.HapticFeedbackController $r1;

        r0 := @this: com.android.datetimepicker.date.DatePickerDialog;

        specialinvoke r0.<android.app.DialogFragment: void onResume()>();

        $r1 = r0.<com.android.datetimepicker.date.DatePickerDialog: com.android.datetimepicker.HapticFeedbackController mHapticFeedbackController>;

        virtualinvoke $r1.<com.android.datetimepicker.HapticFeedbackController: void start()>();

        return;
    }

    public void onPause()
    {
        com.android.datetimepicker.date.DatePickerDialog r0;
        com.android.datetimepicker.HapticFeedbackController $r1;

        r0 := @this: com.android.datetimepicker.date.DatePickerDialog;

        specialinvoke r0.<android.app.DialogFragment: void onPause()>();

        $r1 = r0.<com.android.datetimepicker.date.DatePickerDialog: com.android.datetimepicker.HapticFeedbackController mHapticFeedbackController>;

        virtualinvoke $r1.<com.android.datetimepicker.HapticFeedbackController: void stop()>();

        return;
    }

    private void setCurrentView(int)
    {
        com.android.datetimepicker.date.DatePickerDialog r0;
        int i0, $i3, $i4;
        long l1;
        android.animation.ObjectAnimator r1, r36;
        byte b2;
        java.lang.String r2, r3, $r12, $r15, $r16, $r25, $r28, $r33;
        java.util.Calendar $r4;
        android.widget.TextView $r5, $r20, $r32;
        boolean $z0, $z1;
        com.android.datetimepicker.date.YearPickerView $r6;
        java.text.SimpleDateFormat $r7;
        java.lang.Long $r8;
        com.android.datetimepicker.date.AccessibleDateAnimator $r9, $r18, $r19, $r24, $r34, $r35;
        java.lang.StringBuilder $r10, $r11, $r13, $r14, $r26, $r27, $r29, $r30;
        android.widget.LinearLayout $r17, $r21, $r31;
        android.app.Activity $r22;
        com.android.datetimepicker.date.DayPickerView $r23;

        r0 := @this: com.android.datetimepicker.date.DatePickerDialog;

        i0 := @parameter0: int;

        $r4 = r0.<com.android.datetimepicker.date.DatePickerDialog: java.util.Calendar mCalendar>;

        l1 = virtualinvoke $r4.<java.util.Calendar: long getTimeInMillis()>();

        lookupswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label4;
            default: goto label7;
        };

     label1:
        $r21 = r0.<com.android.datetimepicker.date.DatePickerDialog: android.widget.LinearLayout mMonthAndDayView>;

        r1 = staticinvoke <com.android.datetimepicker.Utils: android.animation.ObjectAnimator getPulseAnimator(android.view.View,float,float)>($r21, 0.9F, 1.05F);

        $z1 = r0.<com.android.datetimepicker.date.DatePickerDialog: boolean mDelayAnimation>;

        if $z1 == 0 goto label2;

        virtualinvoke r1.<android.animation.ObjectAnimator: void setStartDelay(long)>(500L);

        r0.<com.android.datetimepicker.date.DatePickerDialog: boolean mDelayAnimation> = 0;

     label2:
        $r23 = r0.<com.android.datetimepicker.date.DatePickerDialog: com.android.datetimepicker.date.DayPickerView mDayPickerView>;

        virtualinvoke $r23.<com.android.datetimepicker.date.DayPickerView: void onDateChanged()>();

        $i4 = r0.<com.android.datetimepicker.date.DatePickerDialog: int mCurrentView>;

        if $i4 == i0 goto label3;

        $r31 = r0.<com.android.datetimepicker.date.DatePickerDialog: android.widget.LinearLayout mMonthAndDayView>;

        virtualinvoke $r31.<android.widget.LinearLayout: void setSelected(boolean)>(1);

        $r32 = r0.<com.android.datetimepicker.date.DatePickerDialog: android.widget.TextView mYearView>;

        virtualinvoke $r32.<android.widget.TextView: void setSelected(boolean)>(0);

        $r35 = r0.<com.android.datetimepicker.date.DatePickerDialog: com.android.datetimepicker.date.AccessibleDateAnimator mAnimator>;

        virtualinvoke $r35.<com.android.datetimepicker.date.AccessibleDateAnimator: void setDisplayedChild(int)>(0);

        r0.<com.android.datetimepicker.date.DatePickerDialog: int mCurrentView> = i0;

     label3:
        virtualinvoke r1.<android.animation.ObjectAnimator: void start()>();

        b2 = 16;

        $r22 = virtualinvoke r0.<com.android.datetimepicker.date.DatePickerDialog: android.app.Activity getActivity()>();

        r2 = staticinvoke <android.text.format.DateUtils: java.lang.String formatDateTime(android.content.Context,long,int)>($r22, l1, b2);

        $r24 = r0.<com.android.datetimepicker.date.DatePickerDialog: com.android.datetimepicker.date.AccessibleDateAnimator mAnimator>;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r25 = r0.<com.android.datetimepicker.date.DatePickerDialog: java.lang.String mDayPickerDescription>;

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r27 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<com.android.datetimepicker.date.AccessibleDateAnimator: void setContentDescription(java.lang.CharSequence)>($r28);

        $r34 = r0.<com.android.datetimepicker.date.DatePickerDialog: com.android.datetimepicker.date.AccessibleDateAnimator mAnimator>;

        $r33 = r0.<com.android.datetimepicker.date.DatePickerDialog: java.lang.String mSelectDay>;

        staticinvoke <com.android.datetimepicker.Utils: void tryAccessibilityAnnounce(android.view.View,java.lang.CharSequence)>($r34, $r33);

        goto label7;

     label4:
        $r5 = r0.<com.android.datetimepicker.date.DatePickerDialog: android.widget.TextView mYearView>;

        r36 = staticinvoke <com.android.datetimepicker.Utils: android.animation.ObjectAnimator getPulseAnimator(android.view.View,float,float)>($r5, 0.85F, 1.1F);

        $z0 = r0.<com.android.datetimepicker.date.DatePickerDialog: boolean mDelayAnimation>;

        if $z0 == 0 goto label5;

        virtualinvoke r36.<android.animation.ObjectAnimator: void setStartDelay(long)>(500L);

        r0.<com.android.datetimepicker.date.DatePickerDialog: boolean mDelayAnimation> = 0;

     label5:
        $r6 = r0.<com.android.datetimepicker.date.DatePickerDialog: com.android.datetimepicker.date.YearPickerView mYearPickerView>;

        virtualinvoke $r6.<com.android.datetimepicker.date.YearPickerView: void onDateChanged()>();

        $i3 = r0.<com.android.datetimepicker.date.DatePickerDialog: int mCurrentView>;

        if $i3 == i0 goto label6;

        $r17 = r0.<com.android.datetimepicker.date.DatePickerDialog: android.widget.LinearLayout mMonthAndDayView>;

        virtualinvoke $r17.<android.widget.LinearLayout: void setSelected(boolean)>(0);

        $r20 = r0.<com.android.datetimepicker.date.DatePickerDialog: android.widget.TextView mYearView>;

        virtualinvoke $r20.<android.widget.TextView: void setSelected(boolean)>(1);

        $r19 = r0.<com.android.datetimepicker.date.DatePickerDialog: com.android.datetimepicker.date.AccessibleDateAnimator mAnimator>;

        virtualinvoke $r19.<com.android.datetimepicker.date.AccessibleDateAnimator: void setDisplayedChild(int)>(1);

        r0.<com.android.datetimepicker.date.DatePickerDialog: int mCurrentView> = i0;

     label6:
        virtualinvoke r36.<android.animation.ObjectAnimator: void start()>();

        $r7 = <com.android.datetimepicker.date.DatePickerDialog: java.text.SimpleDateFormat YEAR_FORMAT>;

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        r3 = virtualinvoke $r7.<java.text.SimpleDateFormat: java.lang.String format(java.lang.Object)>($r8);

        $r9 = r0.<com.android.datetimepicker.date.DatePickerDialog: com.android.datetimepicker.date.AccessibleDateAnimator mAnimator>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = r0.<com.android.datetimepicker.date.DatePickerDialog: java.lang.String mYearPickerDescription>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<com.android.datetimepicker.date.AccessibleDateAnimator: void setContentDescription(java.lang.CharSequence)>($r16);

        $r18 = r0.<com.android.datetimepicker.date.DatePickerDialog: com.android.datetimepicker.date.AccessibleDateAnimator mAnimator>;

        $r15 = r0.<com.android.datetimepicker.date.DatePickerDialog: java.lang.String mSelectYear>;

        staticinvoke <com.android.datetimepicker.Utils: void tryAccessibilityAnnounce(android.view.View,java.lang.CharSequence)>($r18, $r15);

     label7:
        return;
    }

    private void updateDisplay(boolean)
    {
        com.android.datetimepicker.date.DatePickerDialog r0;
        boolean z0;
        long l0;
        byte b1, b2;
        java.lang.String r1, r2, $r7, $r9, $r15, $r18, $r29, $r30;
        android.widget.TextView $r3, $r4, $r10, $r17, $r25;
        java.util.Calendar $r5, $r11, $r14, $r20, $r28;
        java.util.Locale $r6, $r8, $r27, $r31;
        java.util.Date $r12, $r19;
        java.text.SimpleDateFormat $r13, $r16;
        android.app.Activity $r21, $r26;
        com.android.datetimepicker.date.AccessibleDateAnimator $r22, $r24;
        android.widget.LinearLayout $r23;

        r0 := @this: com.android.datetimepicker.date.DatePickerDialog;

        z0 := @parameter0: boolean;

        $r3 = r0.<com.android.datetimepicker.date.DatePickerDialog: android.widget.TextView mDayOfWeekView>;

        if $r3 == null goto label1;

        $r25 = r0.<com.android.datetimepicker.date.DatePickerDialog: android.widget.TextView mDayOfWeekView>;

        $r28 = r0.<com.android.datetimepicker.date.DatePickerDialog: java.util.Calendar mCalendar>;

        $r27 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r30 = virtualinvoke $r28.<java.util.Calendar: java.lang.String getDisplayName(int,int,java.util.Locale)>(7, 2, $r27);

        $r31 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r29 = virtualinvoke $r30.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r31);

        virtualinvoke $r25.<android.widget.TextView: void setText(java.lang.CharSequence)>($r29);

     label1:
        $r4 = r0.<com.android.datetimepicker.date.DatePickerDialog: android.widget.TextView mSelectedMonthTextView>;

        $r5 = r0.<com.android.datetimepicker.date.DatePickerDialog: java.util.Calendar mCalendar>;

        $r6 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r7 = virtualinvoke $r5.<java.util.Calendar: java.lang.String getDisplayName(int,int,java.util.Locale)>(2, 1, $r6);

        $r8 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        $r9 = virtualinvoke $r7.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r8);

        virtualinvoke $r4.<android.widget.TextView: void setText(java.lang.CharSequence)>($r9);

        $r10 = r0.<com.android.datetimepicker.date.DatePickerDialog: android.widget.TextView mSelectedDayTextView>;

        $r13 = <com.android.datetimepicker.date.DatePickerDialog: java.text.SimpleDateFormat DAY_FORMAT>;

        $r11 = r0.<com.android.datetimepicker.date.DatePickerDialog: java.util.Calendar mCalendar>;

        $r12 = virtualinvoke $r11.<java.util.Calendar: java.util.Date getTime()>();

        $r15 = virtualinvoke $r13.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r12);

        virtualinvoke $r10.<android.widget.TextView: void setText(java.lang.CharSequence)>($r15);

        $r17 = r0.<com.android.datetimepicker.date.DatePickerDialog: android.widget.TextView mYearView>;

        $r16 = <com.android.datetimepicker.date.DatePickerDialog: java.text.SimpleDateFormat YEAR_FORMAT>;

        $r14 = r0.<com.android.datetimepicker.date.DatePickerDialog: java.util.Calendar mCalendar>;

        $r19 = virtualinvoke $r14.<java.util.Calendar: java.util.Date getTime()>();

        $r18 = virtualinvoke $r16.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r19);

        virtualinvoke $r17.<android.widget.TextView: void setText(java.lang.CharSequence)>($r18);

        $r20 = r0.<com.android.datetimepicker.date.DatePickerDialog: java.util.Calendar mCalendar>;

        l0 = virtualinvoke $r20.<java.util.Calendar: long getTimeInMillis()>();

        $r22 = r0.<com.android.datetimepicker.date.DatePickerDialog: com.android.datetimepicker.date.AccessibleDateAnimator mAnimator>;

        virtualinvoke $r22.<com.android.datetimepicker.date.AccessibleDateAnimator: void setDateMillis(long)>(l0);

        b1 = 24;

        $r21 = virtualinvoke r0.<com.android.datetimepicker.date.DatePickerDialog: android.app.Activity getActivity()>();

        r1 = staticinvoke <android.text.format.DateUtils: java.lang.String formatDateTime(android.content.Context,long,int)>($r21, l0, b1);

        $r23 = r0.<com.android.datetimepicker.date.DatePickerDialog: android.widget.LinearLayout mMonthAndDayView>;

        virtualinvoke $r23.<android.widget.LinearLayout: void setContentDescription(java.lang.CharSequence)>(r1);

        if z0 == 0 goto label2;

        b2 = 20;

        $r26 = virtualinvoke r0.<com.android.datetimepicker.date.DatePickerDialog: android.app.Activity getActivity()>();

        r2 = staticinvoke <android.text.format.DateUtils: java.lang.String formatDateTime(android.content.Context,long,int)>($r26, l0, b2);

        $r24 = r0.<com.android.datetimepicker.date.DatePickerDialog: com.android.datetimepicker.date.AccessibleDateAnimator mAnimator>;

        staticinvoke <com.android.datetimepicker.Utils: void tryAccessibilityAnnounce(android.view.View,java.lang.CharSequence)>($r24, r2);

     label2:
        return;
    }

    public void setFirstDayOfWeek(int)
    {
        com.android.datetimepicker.date.DatePickerDialog r0;
        int i0;
        java.lang.IllegalArgumentException $r1;
        com.android.datetimepicker.date.DayPickerView $r2, $r3;

        r0 := @this: com.android.datetimepicker.date.DatePickerDialog;

        i0 := @parameter0: int;

        if i0 < 1 goto label1;

        if i0 <= 7 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Value must be between Calendar.SUNDAY and Calendar.SATURDAY");

        throw $r1;

     label2:
        r0.<com.android.datetimepicker.date.DatePickerDialog: int mWeekStart> = i0;

        $r2 = r0.<com.android.datetimepicker.date.DatePickerDialog: com.android.datetimepicker.date.DayPickerView mDayPickerView>;

        if $r2 == null goto label3;

        $r3 = r0.<com.android.datetimepicker.date.DatePickerDialog: com.android.datetimepicker.date.DayPickerView mDayPickerView>;

        virtualinvoke $r3.<com.android.datetimepicker.date.DayPickerView: void onChange()>();

     label3:
        return;
    }

    public void setYearRange(int, int)
    {
        com.android.datetimepicker.date.DatePickerDialog r0;
        int i0, i1;
        com.android.datetimepicker.date.DayPickerView $r1, $r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: com.android.datetimepicker.date.DatePickerDialog;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 > i0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Year end must be larger than year start");

        throw $r3;

     label1:
        r0.<com.android.datetimepicker.date.DatePickerDialog: int mMinYear> = i0;

        r0.<com.android.datetimepicker.date.DatePickerDialog: int mMaxYear> = i1;

        $r1 = r0.<com.android.datetimepicker.date.DatePickerDialog: com.android.datetimepicker.date.DayPickerView mDayPickerView>;

        if $r1 == null goto label2;

        $r2 = r0.<com.android.datetimepicker.date.DatePickerDialog: com.android.datetimepicker.date.DayPickerView mDayPickerView>;

        virtualinvoke $r2.<com.android.datetimepicker.date.DayPickerView: void onChange()>();

     label2:
        return;
    }

    public void setMinDate(java.util.Calendar)
    {
        com.android.datetimepicker.date.DatePickerDialog r0;
        java.util.Calendar r1;
        com.android.datetimepicker.date.DayPickerView $r2, $r3;

        r0 := @this: com.android.datetimepicker.date.DatePickerDialog;

        r1 := @parameter0: java.util.Calendar;

        r0.<com.android.datetimepicker.date.DatePickerDialog: java.util.Calendar mMinDate> = r1;

        $r2 = r0.<com.android.datetimepicker.date.DatePickerDialog: com.android.datetimepicker.date.DayPickerView mDayPickerView>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.datetimepicker.date.DatePickerDialog: com.android.datetimepicker.date.DayPickerView mDayPickerView>;

        virtualinvoke $r3.<com.android.datetimepicker.date.DayPickerView: void onChange()>();

     label1:
        return;
    }

    public java.util.Calendar getMinDate()
    {
        com.android.datetimepicker.date.DatePickerDialog r0;
        java.util.Calendar $r1;

        r0 := @this: com.android.datetimepicker.date.DatePickerDialog;

        $r1 = r0.<com.android.datetimepicker.date.DatePickerDialog: java.util.Calendar mMinDate>;

        return $r1;
    }

    public void setMaxDate(java.util.Calendar)
    {
        com.android.datetimepicker.date.DatePickerDialog r0;
        java.util.Calendar r1;
        com.android.datetimepicker.date.DayPickerView $r2, $r3;

        r0 := @this: com.android.datetimepicker.date.DatePickerDialog;

        r1 := @parameter0: java.util.Calendar;

        r0.<com.android.datetimepicker.date.DatePickerDialog: java.util.Calendar mMaxDate> = r1;

        $r2 = r0.<com.android.datetimepicker.date.DatePickerDialog: com.android.datetimepicker.date.DayPickerView mDayPickerView>;

        if $r2 == null goto label1;

        $r3 = r0.<com.android.datetimepicker.date.DatePickerDialog: com.android.datetimepicker.date.DayPickerView mDayPickerView>;

        virtualinvoke $r3.<com.android.datetimepicker.date.DayPickerView: void onChange()>();

     label1:
        return;
    }

    public java.util.Calendar getMaxDate()
    {
        com.android.datetimepicker.date.DatePickerDialog r0;
        java.util.Calendar $r1;

        r0 := @this: com.android.datetimepicker.date.DatePickerDialog;

        $r1 = r0.<com.android.datetimepicker.date.DatePickerDialog: java.util.Calendar mMaxDate>;

        return $r1;
    }

    public void setOnDateSetListener(com.android.datetimepicker.date.DatePickerDialog$OnDateSetListener)
    {
        com.android.datetimepicker.date.DatePickerDialog r0;
        com.android.datetimepicker.date.DatePickerDialog$OnDateSetListener r1;

        r0 := @this: com.android.datetimepicker.date.DatePickerDialog;

        r1 := @parameter0: com.android.datetimepicker.date.DatePickerDialog$OnDateSetListener;

        r0.<com.android.datetimepicker.date.DatePickerDialog: com.android.datetimepicker.date.DatePickerDialog$OnDateSetListener mCallBack> = r1;

        return;
    }

    private void adjustDayInMonthIfNeeded(int, int)
    {
        com.android.datetimepicker.date.DatePickerDialog r0;
        int i0, i1, i2, i3;
        java.util.Calendar $r1, $r2;

        r0 := @this: com.android.datetimepicker.date.DatePickerDialog;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.datetimepicker.date.DatePickerDialog: java.util.Calendar mCalendar>;

        i2 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(5);

        i3 = staticinvoke <com.android.datetimepicker.Utils: int getDaysInMonth(int,int)>(i0, i1);

        if i2 <= i3 goto label1;

        $r2 = r0.<com.android.datetimepicker.date.DatePickerDialog: java.util.Calendar mCalendar>;

        virtualinvoke $r2.<java.util.Calendar: void set(int,int)>(5, i3);

     label1:
        return;
    }

    public void onClick(android.view.View)
    {
        com.android.datetimepicker.date.DatePickerDialog r0;
        android.view.View r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.android.datetimepicker.date.DatePickerDialog;

        r1 := @parameter0: android.view.View;

        virtualinvoke r0.<com.android.datetimepicker.date.DatePickerDialog: void tryVibrate()>();

        $i0 = virtualinvoke r1.<android.view.View: int getId()>();

        $i1 = <com.android.datetimepicker.R$id: int date_picker_year>;

        if $i0 != $i1 goto label1;

        specialinvoke r0.<com.android.datetimepicker.date.DatePickerDialog: void setCurrentView(int)>(1);

        goto label2;

     label1:
        $i2 = virtualinvoke r1.<android.view.View: int getId()>();

        $i3 = <com.android.datetimepicker.R$id: int date_picker_month_and_day>;

        if $i2 != $i3 goto label2;

        specialinvoke r0.<com.android.datetimepicker.date.DatePickerDialog: void setCurrentView(int)>(0);

     label2:
        return;
    }

    public void onYearSelected(int)
    {
        com.android.datetimepicker.date.DatePickerDialog r0;
        int i0, $i1;
        java.util.Calendar $r1, $r2;

        r0 := @this: com.android.datetimepicker.date.DatePickerDialog;

        i0 := @parameter0: int;

        $r1 = r0.<com.android.datetimepicker.date.DatePickerDialog: java.util.Calendar mCalendar>;

        $i1 = virtualinvoke $r1.<java.util.Calendar: int get(int)>(2);

        specialinvoke r0.<com.android.datetimepicker.date.DatePickerDialog: void adjustDayInMonthIfNeeded(int,int)>($i1, i0);

        $r2 = r0.<com.android.datetimepicker.date.DatePickerDialog: java.util.Calendar mCalendar>;

        virtualinvoke $r2.<java.util.Calendar: void set(int,int)>(1, i0);

        specialinvoke r0.<com.android.datetimepicker.date.DatePickerDialog: void updatePickers()>();

        specialinvoke r0.<com.android.datetimepicker.date.DatePickerDialog: void setCurrentView(int)>(0);

        specialinvoke r0.<com.android.datetimepicker.date.DatePickerDialog: void updateDisplay(boolean)>(1);

        return;
    }

    public void onDayOfMonthSelected(int, int, int)
    {
        com.android.datetimepicker.date.DatePickerDialog r0;
        int i0, i1, i2;
        java.util.Calendar $r1, $r2, $r3;

        r0 := @this: com.android.datetimepicker.date.DatePickerDialog;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $r1 = r0.<com.android.datetimepicker.date.DatePickerDialog: java.util.Calendar mCalendar>;

        virtualinvoke $r1.<java.util.Calendar: void set(int,int)>(1, i0);

        $r2 = r0.<com.android.datetimepicker.date.DatePickerDialog: java.util.Calendar mCalendar>;

        virtualinvoke $r2.<java.util.Calendar: void set(int,int)>(2, i1);

        $r3 = r0.<com.android.datetimepicker.date.DatePickerDialog: java.util.Calendar mCalendar>;

        virtualinvoke $r3.<java.util.Calendar: void set(int,int)>(5, i2);

        specialinvoke r0.<com.android.datetimepicker.date.DatePickerDialog: void updatePickers()>();

        specialinvoke r0.<com.android.datetimepicker.date.DatePickerDialog: void updateDisplay(boolean)>(1);

        return;
    }

    private void updatePickers()
    {
        com.android.datetimepicker.date.DatePickerDialog r0;
        java.util.Iterator r1;
        java.util.HashSet $r2;
        boolean $z0;
        java.lang.Object $r3;
        com.android.datetimepicker.date.DatePickerDialog$OnDateChangedListener $r4;

        r0 := @this: com.android.datetimepicker.date.DatePickerDialog;

        $r2 = r0.<com.android.datetimepicker.date.DatePickerDialog: java.util.HashSet mListeners>;

        r1 = virtualinvoke $r2.<java.util.HashSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (com.android.datetimepicker.date.DatePickerDialog$OnDateChangedListener) $r3;

        interfaceinvoke $r4.<com.android.datetimepicker.date.DatePickerDialog$OnDateChangedListener: void onDateChanged()>();

        goto label1;

     label2:
        return;
    }

    public com.android.datetimepicker.date.MonthAdapter$CalendarDay getSelectedDay()
    {
        com.android.datetimepicker.date.DatePickerDialog r0;
        com.android.datetimepicker.date.MonthAdapter$CalendarDay $r1;
        java.util.Calendar $r2;

        r0 := @this: com.android.datetimepicker.date.DatePickerDialog;

        $r1 = new com.android.datetimepicker.date.MonthAdapter$CalendarDay;

        $r2 = r0.<com.android.datetimepicker.date.DatePickerDialog: java.util.Calendar mCalendar>;

        specialinvoke $r1.<com.android.datetimepicker.date.MonthAdapter$CalendarDay: void <init>(java.util.Calendar)>($r2);

        return $r1;
    }

    public int getMinYear()
    {
        com.android.datetimepicker.date.DatePickerDialog r0;
        int $i0;

        r0 := @this: com.android.datetimepicker.date.DatePickerDialog;

        $i0 = r0.<com.android.datetimepicker.date.DatePickerDialog: int mMinYear>;

        return $i0;
    }

    public int getMaxYear()
    {
        com.android.datetimepicker.date.DatePickerDialog r0;
        int $i0;

        r0 := @this: com.android.datetimepicker.date.DatePickerDialog;

        $i0 = r0.<com.android.datetimepicker.date.DatePickerDialog: int mMaxYear>;

        return $i0;
    }

    public int getFirstDayOfWeek()
    {
        com.android.datetimepicker.date.DatePickerDialog r0;
        int $i0;

        r0 := @this: com.android.datetimepicker.date.DatePickerDialog;

        $i0 = r0.<com.android.datetimepicker.date.DatePickerDialog: int mWeekStart>;

        return $i0;
    }

    public void registerOnDateChangedListener(com.android.datetimepicker.date.DatePickerDialog$OnDateChangedListener)
    {
        com.android.datetimepicker.date.DatePickerDialog r0;
        com.android.datetimepicker.date.DatePickerDialog$OnDateChangedListener r1;
        java.util.HashSet $r2;

        r0 := @this: com.android.datetimepicker.date.DatePickerDialog;

        r1 := @parameter0: com.android.datetimepicker.date.DatePickerDialog$OnDateChangedListener;

        $r2 = r0.<com.android.datetimepicker.date.DatePickerDialog: java.util.HashSet mListeners>;

        virtualinvoke $r2.<java.util.HashSet: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void unregisterOnDateChangedListener(com.android.datetimepicker.date.DatePickerDialog$OnDateChangedListener)
    {
        com.android.datetimepicker.date.DatePickerDialog r0;
        com.android.datetimepicker.date.DatePickerDialog$OnDateChangedListener r1;
        java.util.HashSet $r2;

        r0 := @this: com.android.datetimepicker.date.DatePickerDialog;

        r1 := @parameter0: com.android.datetimepicker.date.DatePickerDialog$OnDateChangedListener;

        $r2 = r0.<com.android.datetimepicker.date.DatePickerDialog: java.util.HashSet mListeners>;

        virtualinvoke $r2.<java.util.HashSet: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public void tryVibrate()
    {
        com.android.datetimepicker.date.DatePickerDialog r0;
        com.android.datetimepicker.HapticFeedbackController $r1;

        r0 := @this: com.android.datetimepicker.date.DatePickerDialog;

        $r1 = r0.<com.android.datetimepicker.date.DatePickerDialog: com.android.datetimepicker.HapticFeedbackController mHapticFeedbackController>;

        virtualinvoke $r1.<com.android.datetimepicker.HapticFeedbackController: void tryVibrate()>();

        return;
    }

    static com.android.datetimepicker.date.DatePickerDialog$OnDateSetListener access$000(com.android.datetimepicker.date.DatePickerDialog)
    {
        com.android.datetimepicker.date.DatePickerDialog r0;
        com.android.datetimepicker.date.DatePickerDialog$OnDateSetListener $r1;

        r0 := @parameter0: com.android.datetimepicker.date.DatePickerDialog;

        $r1 = r0.<com.android.datetimepicker.date.DatePickerDialog: com.android.datetimepicker.date.DatePickerDialog$OnDateSetListener mCallBack>;

        return $r1;
    }

    static java.util.Calendar access$100(com.android.datetimepicker.date.DatePickerDialog)
    {
        com.android.datetimepicker.date.DatePickerDialog r0;
        java.util.Calendar $r1;

        r0 := @parameter0: com.android.datetimepicker.date.DatePickerDialog;

        $r1 = r0.<com.android.datetimepicker.date.DatePickerDialog: java.util.Calendar mCalendar>;

        return $r1;
    }

    static void <clinit>()
    {
        java.text.SimpleDateFormat $r0, $r2;
        java.util.Locale $r1, $r3;

        <com.android.datetimepicker.date.DatePickerDialog: int ANIMATION_DELAY> = 500;

        <com.android.datetimepicker.date.DatePickerDialog: int ANIMATION_DURATION> = 300;

        <com.android.datetimepicker.date.DatePickerDialog: int DEFAULT_END_YEAR> = 2100;

        <com.android.datetimepicker.date.DatePickerDialog: int DEFAULT_START_YEAR> = 1900;

        <com.android.datetimepicker.date.DatePickerDialog: java.lang.String KEY_LIST_POSITION_OFFSET> = "list_position_offset";

        <com.android.datetimepicker.date.DatePickerDialog: java.lang.String KEY_CURRENT_VIEW> = "current_view";

        <com.android.datetimepicker.date.DatePickerDialog: java.lang.String KEY_YEAR_END> = "year_end";

        <com.android.datetimepicker.date.DatePickerDialog: java.lang.String KEY_YEAR_START> = "year_start";

        <com.android.datetimepicker.date.DatePickerDialog: java.lang.String KEY_WEEK_START> = "week_start";

        <com.android.datetimepicker.date.DatePickerDialog: java.lang.String KEY_LIST_POSITION> = "list_position";

        <com.android.datetimepicker.date.DatePickerDialog: java.lang.String KEY_SELECTED_DAY> = "day";

        <com.android.datetimepicker.date.DatePickerDialog: java.lang.String KEY_SELECTED_MONTH> = "month";

        <com.android.datetimepicker.date.DatePickerDialog: java.lang.String KEY_SELECTED_YEAR> = "year";

        <com.android.datetimepicker.date.DatePickerDialog: int YEAR_VIEW> = 1;

        <com.android.datetimepicker.date.DatePickerDialog: int MONTH_AND_DAY_VIEW> = 0;

        <com.android.datetimepicker.date.DatePickerDialog: int UNINITIALIZED> = -1;

        <com.android.datetimepicker.date.DatePickerDialog: java.lang.String TAG> = "DatePickerDialog";

        $r0 = new java.text.SimpleDateFormat;

        $r1 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        specialinvoke $r0.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("yyyy", $r1);

        <com.android.datetimepicker.date.DatePickerDialog: java.text.SimpleDateFormat YEAR_FORMAT> = $r0;

        $r2 = new java.text.SimpleDateFormat;

        $r3 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        specialinvoke $r2.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("dd", $r3);

        <com.android.datetimepicker.date.DatePickerDialog: java.text.SimpleDateFormat DAY_FORMAT> = $r2;

        return;
    }
}
