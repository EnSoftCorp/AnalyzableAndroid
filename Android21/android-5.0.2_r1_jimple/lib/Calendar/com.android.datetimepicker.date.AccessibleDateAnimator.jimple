public class com.android.datetimepicker.date.AccessibleDateAnimator extends android.widget.ViewAnimator
{
    private long mDateMillis;

    public void <init>(android.content.Context, android.util.AttributeSet)
    {
        com.android.datetimepicker.date.AccessibleDateAnimator r0;
        android.content.Context r1;
        android.util.AttributeSet r2;

        r0 := @this: com.android.datetimepicker.date.AccessibleDateAnimator;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.util.AttributeSet;

        specialinvoke r0.<android.widget.ViewAnimator: void <init>(android.content.Context,android.util.AttributeSet)>(r1, r2);

        return;
    }

    public void setDateMillis(long)
    {
        com.android.datetimepicker.date.AccessibleDateAnimator r0;
        long l0;

        r0 := @this: com.android.datetimepicker.date.AccessibleDateAnimator;

        l0 := @parameter0: long;

        r0.<com.android.datetimepicker.date.AccessibleDateAnimator: long mDateMillis> = l0;

        return;
    }

    public boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)
    {
        com.android.datetimepicker.date.AccessibleDateAnimator r0;
        android.view.accessibility.AccessibilityEvent r1;
        byte b0;
        java.lang.String r2;
        int $i1;
        boolean $z0;
        java.util.List $r3, $r5;
        android.content.Context $r4;
        long $l2;

        r0 := @this: com.android.datetimepicker.date.AccessibleDateAnimator;

        r1 := @parameter0: android.view.accessibility.AccessibilityEvent;

        $i1 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: int getEventType()>();

        if $i1 != 32 goto label1;

        $r3 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        interfaceinvoke $r3.<java.util.List: void clear()>();

        b0 = 22;

        $r4 = virtualinvoke r0.<com.android.datetimepicker.date.AccessibleDateAnimator: android.content.Context getContext()>();

        $l2 = r0.<com.android.datetimepicker.date.AccessibleDateAnimator: long mDateMillis>;

        r2 = staticinvoke <android.text.format.DateUtils: java.lang.String formatDateTime(android.content.Context,long,int)>($r4, $l2, b0);

        $r5 = virtualinvoke r1.<android.view.accessibility.AccessibilityEvent: java.util.List getText()>();

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r2);

        return 1;

     label1:
        $z0 = specialinvoke r0.<android.widget.ViewAnimator: boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent)>(r1);

        return $z0;
    }
}
