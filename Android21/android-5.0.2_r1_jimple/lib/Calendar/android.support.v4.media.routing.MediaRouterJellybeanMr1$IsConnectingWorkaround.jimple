public final class android.support.v4.media.routing.MediaRouterJellybeanMr1$IsConnectingWorkaround extends java.lang.Object
{
    private java.lang.reflect.Method mGetStatusCodeMethod;
    private int mStatusConnecting;

    public void <init>()
    {
        android.support.v4.media.routing.MediaRouterJellybeanMr1$IsConnectingWorkaround r0;
        java.lang.reflect.Field r1;
        int $i0, $i1;
        java.lang.Class $r2, $r4;
        java.lang.Class[] $r3;
        java.lang.reflect.Method $r5;
        java.lang.UnsupportedOperationException $r6;
        java.lang.NoSuchFieldException $r7;
        java.lang.IllegalAccessException $r8;
        java.lang.NoSuchMethodException $r9;

        r0 := @this: android.support.v4.media.routing.MediaRouterJellybeanMr1$IsConnectingWorkaround;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 == 17 goto label1;

        $r6 = new java.lang.UnsupportedOperationException;

        specialinvoke $r6.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r6;

     label1:
        $r2 = class "android/media/MediaRouter$RouteInfo";

        r1 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Field getField(java.lang.String)>("STATUS_CONNECTING");

        $i1 = virtualinvoke r1.<java.lang.reflect.Field: int getInt(java.lang.Object)>(null);

        r0.<android.support.v4.media.routing.MediaRouterJellybeanMr1$IsConnectingWorkaround: int mStatusConnecting> = $i1;

        $r4 = class "android/media/MediaRouter$RouteInfo";

        $r3 = newarray (java.lang.Class)[0];

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getStatusCode", $r3);

        r0.<android.support.v4.media.routing.MediaRouterJellybeanMr1$IsConnectingWorkaround: java.lang.reflect.Method mGetStatusCodeMethod> = $r5;

     label2:
        goto label6;

     label3:
        $r7 := @caughtexception;

        goto label6;

     label4:
        $r9 := @caughtexception;

        goto label6;

     label5:
        $r8 := @caughtexception;

     label6:
        return;

        catch java.lang.NoSuchFieldException from label1 to label2 with label3;
        catch java.lang.NoSuchMethodException from label1 to label2 with label4;
        catch java.lang.IllegalAccessException from label1 to label2 with label5;
    }

    public boolean isConnecting(java.lang.Object)
    {
        android.support.v4.media.routing.MediaRouterJellybeanMr1$IsConnectingWorkaround r0;
        java.lang.Object r1, $r6;
        android.media.MediaRouter$RouteInfo r2;
        int i0, $i1;
        java.lang.reflect.Method $r3, $r5;
        java.lang.Object[] $r4;
        java.lang.Integer $r7;
        boolean $z0;
        java.lang.IllegalAccessException $r8;
        java.lang.reflect.InvocationTargetException $r9;

        r0 := @this: android.support.v4.media.routing.MediaRouterJellybeanMr1$IsConnectingWorkaround;

        r1 := @parameter0: java.lang.Object;

        r2 = (android.media.MediaRouter$RouteInfo) r1;

        $r3 = r0.<android.support.v4.media.routing.MediaRouterJellybeanMr1$IsConnectingWorkaround: java.lang.reflect.Method mGetStatusCodeMethod>;

        if $r3 == null goto label6;

     label1:
        $r5 = r0.<android.support.v4.media.routing.MediaRouterJellybeanMr1$IsConnectingWorkaround: java.lang.reflect.Method mGetStatusCodeMethod>;

        $r4 = newarray (java.lang.Object)[0];

        $r6 = virtualinvoke $r5.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r2, $r4);

        $r7 = (java.lang.Integer) $r6;

        i0 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        $i1 = r0.<android.support.v4.media.routing.MediaRouterJellybeanMr1$IsConnectingWorkaround: int mStatusConnecting>;

        if i0 != $i1 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;

     label4:
        $r8 := @caughtexception;

        goto label6;

     label5:
        $r9 := @caughtexception;

     label6:
        return 0;

        catch java.lang.IllegalAccessException from label1 to label3 with label4;
        catch java.lang.reflect.InvocationTargetException from label1 to label3 with label5;
    }
}
