public class com.android.calendar.Utils extends java.lang.Object
{
    private static final boolean DEBUG;
    private static final java.lang.String TAG;
    public static final long UNDO_DELAY;
    public static final int MODIFY_UNINITIALIZED;
    public static final int MODIFY_SELECTED;
    public static final int MODIFY_ALL_FOLLOWING;
    public static final int MODIFY_ALL;
    public static final int DONE_REVERT;
    public static final int DONE_SAVE;
    public static final int DONE_DELETE;
    public static final int DONE_EXIT;
    public static final java.lang.String OPEN_EMAIL_MARKER;
    public static final java.lang.String CLOSE_EMAIL_MARKER;
    public static final java.lang.String INTENT_KEY_DETAIL_VIEW;
    public static final java.lang.String INTENT_KEY_VIEW_TYPE;
    public static final java.lang.String INTENT_VALUE_VIEW_TYPE_DAY;
    public static final java.lang.String INTENT_KEY_HOME;
    public static final int MONDAY_BEFORE_JULIAN_EPOCH;
    public static final int DECLINED_EVENT_ALPHA;
    public static final int DECLINED_EVENT_TEXT_ALPHA;
    private static final float SATURATION_ADJUST;
    private static final float INTENSITY_ADJUST;
    static final int DAY_IN_MINUTES;
    static final int WEEK_IN_MINUTES;
    static int WORK_DAY_MINUTES;
    static int WORK_DAY_START_MINUTES;
    static int WORK_DAY_END_MINUTES;
    static int WORK_DAY_END_LENGTH;
    static int CONFLICT_COLOR;
    static boolean mMinutesLoaded;
    public static final int YEAR_MIN;
    public static final int YEAR_MAX;
    static final java.lang.String SHARED_PREFS_NAME;
    public static final java.lang.String KEY_QUICK_RESPONSES;
    public static final java.lang.String KEY_ALERTS_VIBRATE_WHEN;
    public static final java.lang.String APPWIDGET_DATA_TYPE;
    static final java.lang.String MACHINE_GENERATED_ADDRESS;
    private static final com.android.calendar.CalendarUtils$TimeZoneUtils mTZUtils;
    private static boolean mAllowWeekForDetailView;
    private static long mTardis;
    private static java.lang.String sVersion;
    private static final java.util.regex.Pattern mWildcardPattern;
    private static final java.lang.String COORD_DEGREES_LATITUDE;
    private static final java.lang.String COORD_DEGREES_LONGITUDE;
    private static final java.lang.String COORD_DEGREES_PATTERN;
    private static final java.lang.String COORD_DECIMAL_LATITUDE;
    private static final java.lang.String COORD_DECIMAL_LONGITUDE;
    private static final java.lang.String COORD_DECIMAL_PATTERN;
    private static final java.util.regex.Pattern COORD_PATTERN;
    private static final java.lang.String NANP_ALLOWED_SYMBOLS;
    private static final int NANP_MIN_DIGITS;
    private static final int NANP_MAX_DIGITS;
    private static final int TODAY;
    private static final int TOMORROW;
    private static final int NONE;

    public void <init>()
    {
        com.android.calendar.Utils r0;

        r0 := @this: com.android.calendar.Utils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isJellybeanOrLater()
    {
        int $i0;
        boolean $z0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 16 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isKeyLimePieOrLater()
    {
        int $i0;
        boolean $z0;

        $i0 = <android.os.Build$VERSION: int SDK_INT>;

        if $i0 < 19 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static int getViewTypeFromIntentAndSharedPref(android.app.Activity)
    {
        android.app.Activity r0;
        android.content.Intent r1;
        android.os.Bundle r2;
        android.content.SharedPreferences r3;
        java.lang.String $r4, $r5, $r6;
        boolean $z0, $z1, $z2;
        int $i0, $i1;

        r0 := @parameter0: android.app.Activity;

        r1 = virtualinvoke r0.<android.app.Activity: android.content.Intent getIntent()>();

        r2 = virtualinvoke r1.<android.content.Intent: android.os.Bundle getExtras()>();

        r3 = staticinvoke <com.android.calendar.GeneralPreferences: android.content.SharedPreferences getSharedPreferences(android.content.Context)>(r0);

        $r4 = virtualinvoke r1.<android.content.Intent: java.lang.String getAction()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r4, "android.intent.action.EDIT");

        if $z0 == 0 goto label1;

        return 5;

     label1:
        if r2 == null goto label3;

        $z1 = virtualinvoke r2.<android.os.Bundle: boolean getBoolean(java.lang.String,boolean)>("DETAIL_VIEW", 0);

        if $z1 == 0 goto label2;

        $i1 = interfaceinvoke r3.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("preferred_detailedView", 2);

        return $i1;

     label2:
        $r5 = "DAY";

        $r6 = virtualinvoke r2.<android.os.Bundle: java.lang.String getString(java.lang.String)>("VIEW");

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z2 == 0 goto label3;

        return 2;

     label3:
        $i0 = interfaceinvoke r3.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("preferred_startView", 3);

        return $i0;
    }

    public static java.lang.String getWidgetUpdateAction(android.content.Context)
    {
        android.content.Context r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5;

        r0 := @parameter0: android.content.Context;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<android.content.Context: java.lang.String getPackageName()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".APPWIDGET_UPDATE");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static java.lang.String getWidgetScheduledUpdateAction(android.content.Context)
    {
        android.content.Context r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5;

        r0 := @parameter0: android.content.Context;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<android.content.Context: java.lang.String getPackageName()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".APPWIDGET_SCHEDULED_UPDATE");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static java.lang.String getSearchAuthority(android.content.Context)
    {
        android.content.Context r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5;

        r0 := @parameter0: android.content.Context;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<android.content.Context: java.lang.String getPackageName()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".CalendarRecentSuggestionsProvider");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public static void setTimeZone(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1;
        com.android.calendar.CalendarUtils$TimeZoneUtils $r2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        $r2 = <com.android.calendar.Utils: com.android.calendar.CalendarUtils$TimeZoneUtils mTZUtils>;

        virtualinvoke $r2.<com.android.calendar.CalendarUtils$TimeZoneUtils: void setTimeZone(android.content.Context,java.lang.String)>(r0, r1);

        return;
    }

    public static java.lang.String getTimeZone(android.content.Context, java.lang.Runnable)
    {
        android.content.Context r0;
        java.lang.Runnable r1;
        com.android.calendar.CalendarUtils$TimeZoneUtils $r2;
        java.lang.String $r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.Runnable;

        $r2 = <com.android.calendar.Utils: com.android.calendar.CalendarUtils$TimeZoneUtils mTZUtils>;

        $r3 = virtualinvoke $r2.<com.android.calendar.CalendarUtils$TimeZoneUtils: java.lang.String getTimeZone(android.content.Context,java.lang.Runnable)>(r0, r1);

        return $r3;
    }

    public static java.lang.String formatDateRange(android.content.Context, long, long, int)
    {
        android.content.Context r0;
        long l0, l1;
        int i2;
        com.android.calendar.CalendarUtils$TimeZoneUtils $r1;
        java.lang.String $r2;

        r0 := @parameter0: android.content.Context;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        i2 := @parameter3: int;

        $r1 = <com.android.calendar.Utils: com.android.calendar.CalendarUtils$TimeZoneUtils mTZUtils>;

        $r2 = virtualinvoke $r1.<com.android.calendar.CalendarUtils$TimeZoneUtils: java.lang.String formatDateRange(android.content.Context,long,long,int)>(r0, l0, l1, i2);

        return $r2;
    }

    public static boolean getDefaultVibrate(android.content.Context, android.content.SharedPreferences)
    {
        android.content.Context r0;
        android.content.SharedPreferences r1;
        boolean z0, $z1, $z3, $z4;
        java.lang.String r2, $r10, $r11;
        android.content.SharedPreferences$Editor $r3, $r4;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r9;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.content.SharedPreferences;

        $z1 = interfaceinvoke r1.<android.content.SharedPreferences: boolean contains(java.lang.String)>("preferences_alerts_vibrateWhen");

        if $z1 == 0 goto label3;

        r2 = interfaceinvoke r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("preferences_alerts_vibrateWhen", null);

        if r2 == null goto label1;

        $r11 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int)>(2131493001);

        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z3 == 0 goto label1;

        $z4 = 1;

        goto label2;

     label1:
        $z4 = 0;

     label2:
        z0 = $z4;

        $r3 = interfaceinvoke r1.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r4 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>("preferences_alerts_vibrateWhen");

        interfaceinvoke $r4.<android.content.SharedPreferences$Editor: boolean commit()>();

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Migrating KEY_ALERTS_VIBRATE_WHEN(");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") to KEY_ALERTS_VIBRATE = ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CalUtils", $r10);

        goto label4;

     label3:
        z0 = interfaceinvoke r1.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("preferences_alerts_vibrate", 0);

     label4:
        return z0;
    }

    public static java.lang.String[] getSharedPreference(android.content.Context, java.lang.String, java.lang.String[])
    {
        android.content.Context r0;
        java.lang.String r1;
        java.lang.String[] r2, r5, $r7;
        android.content.SharedPreferences r3;
        java.util.Set r4;
        int $i0;
        java.lang.Object[] $r6;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String[];

        r3 = staticinvoke <com.android.calendar.GeneralPreferences: android.content.SharedPreferences getSharedPreferences(android.content.Context)>(r0);

        r4 = interfaceinvoke r3.<android.content.SharedPreferences: java.util.Set getStringSet(java.lang.String,java.util.Set)>(r1, null);

        if r4 == null goto label1;

        $i0 = interfaceinvoke r4.<java.util.Set: int size()>();

        r5 = newarray (java.lang.String)[$i0];

        $r6 = interfaceinvoke r4.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>(r5);

        $r7 = (java.lang.String[]) $r6;

        return $r7;

     label1:
        return r2;
    }

    public static java.lang.String getSharedPreference(android.content.Context, java.lang.String, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, r2, $r4;
        android.content.SharedPreferences r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 = staticinvoke <com.android.calendar.GeneralPreferences: android.content.SharedPreferences getSharedPreferences(android.content.Context)>(r0);

        $r4 = interfaceinvoke r3.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>(r1, r2);

        return $r4;
    }

    public static int getSharedPreference(android.content.Context, java.lang.String, int)
    {
        android.content.Context r0;
        java.lang.String r1;
        int i0, $i1;
        android.content.SharedPreferences r2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 = staticinvoke <com.android.calendar.GeneralPreferences: android.content.SharedPreferences getSharedPreferences(android.content.Context)>(r0);

        $i1 = interfaceinvoke r2.<android.content.SharedPreferences: int getInt(java.lang.String,int)>(r1, i0);

        return $i1;
    }

    public static boolean getSharedPreference(android.content.Context, java.lang.String, boolean)
    {
        android.content.Context r0;
        java.lang.String r1;
        boolean z0, $z1;
        android.content.SharedPreferences r2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r2 = staticinvoke <com.android.calendar.GeneralPreferences: android.content.SharedPreferences getSharedPreferences(android.content.Context)>(r0);

        $z1 = interfaceinvoke r2.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>(r1, z0);

        return $z1;
    }

    public static void setSharedPreference(android.content.Context, java.lang.String, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1, r2;
        android.content.SharedPreferences r3;
        android.content.SharedPreferences$Editor $r4, $r5;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 = staticinvoke <com.android.calendar.GeneralPreferences: android.content.SharedPreferences getSharedPreferences(android.content.Context)>(r0);

        $r4 = interfaceinvoke r3.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r5 = interfaceinvoke $r4.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>(r1, r2);

        interfaceinvoke $r5.<android.content.SharedPreferences$Editor: void apply()>();

        return;
    }

    public static void setSharedPreference(android.content.Context, java.lang.String, java.lang.String[])
    {
        android.content.Context r0;
        java.lang.String r1, r6;
        java.lang.String[] r2, r5;
        android.content.SharedPreferences r3;
        java.util.LinkedHashSet r4, $r7;
        int i0, i1;
        android.content.SharedPreferences$Editor $r8, $r9;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String[];

        r3 = staticinvoke <com.android.calendar.GeneralPreferences: android.content.SharedPreferences getSharedPreferences(android.content.Context)>(r0);

        $r7 = new java.util.LinkedHashSet;

        specialinvoke $r7.<java.util.LinkedHashSet: void <init>()>();

        r4 = $r7;

        r5 = r2;

        i0 = lengthof r5;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r6 = r5[i1];

        virtualinvoke r4.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r6);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r8 = interfaceinvoke r3.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r9 = interfaceinvoke $r8.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putStringSet(java.lang.String,java.util.Set)>(r1, r4);

        interfaceinvoke $r9.<android.content.SharedPreferences$Editor: void apply()>();

        return;
    }

    protected static void tardis()
    {
        long $l0;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        <com.android.calendar.Utils: long mTardis> = $l0;

        return;
    }

    protected static long getTardis()
    {
        long $l0;

        $l0 = <com.android.calendar.Utils: long mTardis>;

        return $l0;
    }

    public static void setSharedPreference(android.content.Context, java.lang.String, boolean)
    {
        android.content.Context r0;
        java.lang.String r1;
        boolean z0;
        android.content.SharedPreferences r2;
        android.content.SharedPreferences$Editor r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r2 = staticinvoke <com.android.calendar.GeneralPreferences: android.content.SharedPreferences getSharedPreferences(android.content.Context)>(r0);

        r3 = interfaceinvoke r2.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        interfaceinvoke r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>(r1, z0);

        interfaceinvoke r3.<android.content.SharedPreferences$Editor: void apply()>();

        return;
    }

    static void setSharedPreference(android.content.Context, java.lang.String, int)
    {
        android.content.Context r0;
        java.lang.String r1;
        int i0;
        android.content.SharedPreferences r2;
        android.content.SharedPreferences$Editor r3;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        r2 = staticinvoke <com.android.calendar.GeneralPreferences: android.content.SharedPreferences getSharedPreferences(android.content.Context)>(r0);

        r3 = interfaceinvoke r2.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        interfaceinvoke r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>(r1, i0);

        interfaceinvoke r3.<android.content.SharedPreferences$Editor: void apply()>();

        return;
    }

    public static void removeSharedPreference(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1;
        android.content.SharedPreferences r2;
        android.content.SharedPreferences$Editor $r3, $r4;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 = virtualinvoke r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("com.android.calendar_preferences", 0);

        $r3 = interfaceinvoke r2.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r4 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>(r1);

        interfaceinvoke $r4.<android.content.SharedPreferences$Editor: void apply()>();

        return;
    }

    public static java.lang.String getRingTonePreference(android.content.Context)
    {
        android.content.Context r0;
        android.content.SharedPreferences r1;
        java.lang.String r2;

        r0 := @parameter0: android.content.Context;

        r1 = virtualinvoke r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("com.android.calendar_preferences_no_backup", 0);

        r2 = interfaceinvoke r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("preferences_alerts_ringtone", null);

        if r2 != null goto label1;

        r2 = staticinvoke <com.android.calendar.Utils: java.lang.String getSharedPreference(android.content.Context,java.lang.String,java.lang.String)>(r0, "preferences_alerts_ringtone", "content://settings/system/notification_sound");

        staticinvoke <com.android.calendar.Utils: void setRingTonePreference(android.content.Context,java.lang.String)>(r0, r2);

     label1:
        return r2;
    }

    public static void setRingTonePreference(android.content.Context, java.lang.String)
    {
        android.content.Context r0;
        java.lang.String r1;
        android.content.SharedPreferences r2;
        android.content.SharedPreferences$Editor $r3, $r4;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.String;

        r2 = virtualinvoke r0.<android.content.Context: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("com.android.calendar_preferences_no_backup", 0);

        $r3 = interfaceinvoke r2.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $r4 = interfaceinvoke $r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putString(java.lang.String,java.lang.String)>("preferences_alerts_ringtone", r1);

        interfaceinvoke $r4.<android.content.SharedPreferences$Editor: void apply()>();

        return;
    }

    static void setDefaultView(android.content.Context, int)
    {
        android.content.Context r0;
        int i0;
        android.content.SharedPreferences r1;
        android.content.SharedPreferences$Editor r2;
        boolean $z1, $z2, z3;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        r1 = staticinvoke <com.android.calendar.GeneralPreferences: android.content.SharedPreferences getSharedPreferences(android.content.Context)>(r0);

        r2 = interfaceinvoke r1.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        $z1 = <com.android.calendar.Utils: boolean mAllowWeekForDetailView>;

        if $z1 == 0 goto label1;

        if i0 != 3 goto label1;

        z3 = 1;

        goto label5;

     label1:
        if i0 == 1 goto label2;

        if i0 != 2 goto label3;

     label2:
        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        z3 = $z2;

     label5:
        if z3 == 0 goto label6;

        interfaceinvoke r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>("preferred_detailedView", i0);

     label6:
        interfaceinvoke r2.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putInt(java.lang.String,int)>("preferred_startView", i0);

        interfaceinvoke r2.<android.content.SharedPreferences$Editor: void apply()>();

        return;
    }

    public static android.database.MatrixCursor matrixCursorFromCursor(android.database.Cursor)
    {
        android.database.Cursor r0;
        java.lang.String[] r1, r3;
        android.database.MatrixCursor r2, $r4;
        int i0, i1;
        boolean $z1;
        java.lang.String $r5;

        r0 := @parameter0: android.database.Cursor;

        if r0 != null goto label1;

        return null;

     label1:
        r1 = interfaceinvoke r0.<android.database.Cursor: java.lang.String[] getColumnNames()>();

        if r1 != null goto label2;

        r1 = newarray (java.lang.String)[0];

     label2:
        $r4 = new android.database.MatrixCursor;

        specialinvoke $r4.<android.database.MatrixCursor: void <init>(java.lang.String[])>(r1);

        r2 = $r4;

        i0 = interfaceinvoke r0.<android.database.Cursor: int getColumnCount()>();

        r3 = newarray (java.lang.String)[i0];

        interfaceinvoke r0.<android.database.Cursor: boolean moveToPosition(int)>(-1);

     label3:
        $z1 = interfaceinvoke r0.<android.database.Cursor: boolean moveToNext()>();

        if $z1 == 0 goto label6;

        i1 = 0;

     label4:
        if i1 >= i0 goto label5;

        $r5 = interfaceinvoke r0.<android.database.Cursor: java.lang.String getString(int)>(i1);

        r3[i1] = $r5;

        i1 = i1 + 1;

        goto label4;

     label5:
        virtualinvoke r2.<android.database.MatrixCursor: void addRow(java.lang.Object[])>(r3);

        goto label3;

     label6:
        return r2;
    }

    public static boolean compareCursors(android.database.Cursor, android.database.Cursor)
    {
        android.database.Cursor r0, r1;
        int i0, i1, $i2, $i3, $i4;
        boolean $z2, $z3, $z4;
        java.lang.String $r2, $r3;

        r0 := @parameter0: android.database.Cursor;

        r1 := @parameter1: android.database.Cursor;

        if r0 == null goto label1;

        if r1 != null goto label2;

     label1:
        return 0;

     label2:
        i0 = interfaceinvoke r0.<android.database.Cursor: int getColumnCount()>();

        $i2 = interfaceinvoke r1.<android.database.Cursor: int getColumnCount()>();

        if i0 == $i2 goto label3;

        return 0;

     label3:
        $i3 = interfaceinvoke r0.<android.database.Cursor: int getCount()>();

        $i4 = interfaceinvoke r1.<android.database.Cursor: int getCount()>();

        if $i3 == $i4 goto label4;

        return 0;

     label4:
        interfaceinvoke r0.<android.database.Cursor: boolean moveToPosition(int)>(-1);

        interfaceinvoke r1.<android.database.Cursor: boolean moveToPosition(int)>(-1);

     label5:
        $z2 = interfaceinvoke r0.<android.database.Cursor: boolean moveToNext()>();

        if $z2 == 0 goto label9;

        $z3 = interfaceinvoke r1.<android.database.Cursor: boolean moveToNext()>();

        if $z3 == 0 goto label9;

        i1 = 0;

     label6:
        if i1 >= i0 goto label8;

        $r2 = interfaceinvoke r0.<android.database.Cursor: java.lang.String getString(int)>(i1);

        $r3 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(i1);

        $z4 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>($r2, $r3);

        if $z4 != 0 goto label7;

        return 0;

     label7:
        i1 = i1 + 1;

        goto label6;

     label8:
        goto label5;

     label9:
        return 1;
    }

    public static final long timeFromIntentInMillis(android.content.Intent)
    {
        android.content.Intent r0;
        android.net.Uri r1;
        long l0;
        java.util.List r2;
        byte $b1, $b2;
        boolean $z0, $z1;
        int $i3;
        java.lang.Object $r4;
        java.lang.String $r5, $r6;
        java.lang.Long $r7;
        java.lang.NumberFormatException $r8;

        r0 := @parameter0: android.content.Intent;

        r1 = virtualinvoke r0.<android.content.Intent: android.net.Uri getData()>();

        l0 = virtualinvoke r0.<android.content.Intent: long getLongExtra(java.lang.String,long)>("beginTime", -1L);

        $b1 = l0 cmp -1L;

        if $b1 != 0 goto label4;

        if r1 == null goto label4;

        $z0 = virtualinvoke r1.<android.net.Uri: boolean isHierarchical()>();

        if $z0 == 0 goto label4;

        r2 = virtualinvoke r1.<android.net.Uri: java.util.List getPathSegments()>();

        $i3 = interfaceinvoke r2.<java.util.List: int size()>();

        if $i3 != 2 goto label4;

        $r4 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (java.lang.String) $r4;

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("time");

        if $z1 == 0 goto label4;

     label1:
        $r6 = virtualinvoke r1.<android.net.Uri: java.lang.String getLastPathSegment()>();

        $r7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>($r6);

        l0 = virtualinvoke $r7.<java.lang.Long: long longValue()>();

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        staticinvoke <android.util.Log: int i(java.lang.String,java.lang.String)>("Calendar", "timeFromIntentInMillis: Data existed but no valid time found. Using current time.");

     label4:
        $b2 = l0 cmp 0L;

        if $b2 > 0 goto label5;

        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

     label5:
        return l0;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public static java.lang.String formatMonthYear(android.content.Context, android.text.format.Time)
    {
        android.content.Context r0;
        android.text.format.Time r1;
        byte b0;
        long l1;
        java.lang.String $r2;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.text.format.Time;

        b0 = 52;

        l1 = virtualinvoke r1.<android.text.format.Time: long toMillis(boolean)>(1);

        $r2 = staticinvoke <com.android.calendar.Utils: java.lang.String formatDateRange(android.content.Context,long,long,int)>(r0, l1, l1, b0);

        return $r2;
    }

    public static java.lang.String join(java.util.List, java.lang.String)
    {
        java.util.List r0;
        java.lang.String r1, $r6, $r8;
        java.lang.StringBuilder r2, $r5;
        boolean z0, $z1;
        java.util.Iterator r3;
        java.lang.Object r4;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.lang.String;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        r2 = $r5;

        z0 = 1;

        r3 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        r4 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        if z0 == 0 goto label2;

        z0 = 0;

        goto label3;

     label2:
        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

     label3:
        $r8 = virtualinvoke r4.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        goto label1;

     label4:
        $r6 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public static int getWeeksSinceEpochFromJulianDay(int, int)
    {
        int i0, i1, i2, i3, $i4, $i5;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 = 4 - i1;

        if i2 >= 0 goto label1;

        i2 = i2 + 7;

     label1:
        i3 = 2440588 - i2;

        $i4 = i0 - i3;

        $i5 = $i4 / 7;

        return $i5;
    }

    public static int getJulianMondayFromWeeksSinceEpoch(int)
    {
        int i0, $i1, $i2;

        i0 := @parameter0: int;

        $i1 = i0 * 7;

        $i2 = 2440585 + $i1;

        return $i2;
    }

    public static int getFirstDayOfWeek(android.content.Context)
    {
        android.content.Context r0;
        android.content.SharedPreferences r1;
        java.lang.String r2, $r3;
        int i0;
        boolean $z0;
        java.util.Calendar $r4;

        r0 := @parameter0: android.content.Context;

        r1 = staticinvoke <com.android.calendar.GeneralPreferences: android.content.SharedPreferences getSharedPreferences(android.content.Context)>(r0);

        r2 = interfaceinvoke r1.<android.content.SharedPreferences: java.lang.String getString(java.lang.String,java.lang.String)>("preferences_week_start_day", "-1");

        $r3 = "-1";

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label1;

        $r4 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        i0 = virtualinvoke $r4.<java.util.Calendar: int getFirstDayOfWeek()>();

        goto label2;

     label1:
        i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r2);

     label2:
        if i0 != 7 goto label3;

        return 6;

     label3:
        if i0 != 2 goto label4;

        return 1;

     label4:
        return 0;
    }

    public static int getFirstDayOfWeekAsCalendar(android.content.Context)
    {
        android.content.Context r0;
        int $i0, $i1;

        r0 := @parameter0: android.content.Context;

        $i0 = staticinvoke <com.android.calendar.Utils: int getFirstDayOfWeek(android.content.Context)>(r0);

        $i1 = staticinvoke <com.android.calendar.Utils: int convertDayOfWeekFromTimeToCalendar(int)>($i0);

        return $i1;
    }

    public static int convertDayOfWeekFromTimeToCalendar(int)
    {
        int i0;
        java.lang.IllegalArgumentException $r0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label7;
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            case 6: goto label6;
            default: goto label8;
        };

     label1:
        return 2;

     label2:
        return 3;

     label3:
        return 4;

     label4:
        return 5;

     label5:
        return 6;

     label6:
        return 7;

     label7:
        return 1;

     label8:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Argument must be between Time.SUNDAY and Time.SATURDAY");

        throw $r0;
    }

    public static boolean getShowWeekNumber(android.content.Context)
    {
        android.content.Context r0;
        android.content.SharedPreferences r1;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        r1 = staticinvoke <com.android.calendar.GeneralPreferences: android.content.SharedPreferences getSharedPreferences(android.content.Context)>(r0);

        $z0 = interfaceinvoke r1.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("preferences_show_week_num", 0);

        return $z0;
    }

    public static boolean getHideDeclinedEvents(android.content.Context)
    {
        android.content.Context r0;
        android.content.SharedPreferences r1;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        r1 = staticinvoke <com.android.calendar.GeneralPreferences: android.content.SharedPreferences getSharedPreferences(android.content.Context)>(r0);

        $z0 = interfaceinvoke r1.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>("preferences_hide_declined", 0);

        return $z0;
    }

    public static int getDaysPerWeek(android.content.Context)
    {
        android.content.Context r0;
        android.content.SharedPreferences r1;
        int $i0;

        r0 := @parameter0: android.content.Context;

        r1 = staticinvoke <com.android.calendar.GeneralPreferences: android.content.SharedPreferences getSharedPreferences(android.content.Context)>(r0);

        $i0 = interfaceinvoke r1.<android.content.SharedPreferences: int getInt(java.lang.String,int)>("preferences_days_per_week", 7);

        return $i0;
    }

    public static boolean isSaturday(int, int)
    {
        int i0, i1;
        boolean $z0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 != 0 goto label1;

        if i0 == 6 goto label3;

     label1:
        if i1 != 1 goto label2;

        if i0 == 5 goto label3;

     label2:
        if i1 != 6 goto label4;

        if i0 != 0 goto label4;

     label3:
        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        return $z0;
    }

    public static boolean isSunday(int, int)
    {
        int i0, i1;
        boolean $z0;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        if i1 != 0 goto label1;

        if i0 == 0 goto label3;

     label1:
        if i1 != 1 goto label2;

        if i0 == 6 goto label3;

     label2:
        if i1 != 6 goto label4;

        if i0 != 1 goto label4;

     label3:
        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        return $z0;
    }

    public static long convertAlldayUtcToLocal(android.text.format.Time, long, java.lang.String)
    {
        android.text.format.Time r0, $r2;
        long l0, $l1;
        java.lang.String r1;

        r0 := @parameter0: android.text.format.Time;

        l0 := @parameter1: long;

        r1 := @parameter2: java.lang.String;

        if r0 != null goto label1;

        $r2 = new android.text.format.Time;

        specialinvoke $r2.<android.text.format.Time: void <init>()>();

        r0 = $r2;

     label1:
        r0.<android.text.format.Time: java.lang.String timezone> = "UTC";

        virtualinvoke r0.<android.text.format.Time: void set(long)>(l0);

        r0.<android.text.format.Time: java.lang.String timezone> = r1;

        $l1 = virtualinvoke r0.<android.text.format.Time: long normalize(boolean)>(1);

        return $l1;
    }

    public static long convertAlldayLocalToUTC(android.text.format.Time, long, java.lang.String)
    {
        android.text.format.Time r0, $r2;
        long l0, $l1;
        java.lang.String r1;

        r0 := @parameter0: android.text.format.Time;

        l0 := @parameter1: long;

        r1 := @parameter2: java.lang.String;

        if r0 != null goto label1;

        $r2 = new android.text.format.Time;

        specialinvoke $r2.<android.text.format.Time: void <init>()>();

        r0 = $r2;

     label1:
        r0.<android.text.format.Time: java.lang.String timezone> = r1;

        virtualinvoke r0.<android.text.format.Time: void set(long)>(l0);

        r0.<android.text.format.Time: java.lang.String timezone> = "UTC";

        $l1 = virtualinvoke r0.<android.text.format.Time: long normalize(boolean)>(1);

        return $l1;
    }

    public static long getNextMidnight(android.text.format.Time, long, java.lang.String)
    {
        android.text.format.Time r0, $r2;
        long l0, $l3;
        java.lang.String r1;
        int $i1, $i2;

        r0 := @parameter0: android.text.format.Time;

        l0 := @parameter1: long;

        r1 := @parameter2: java.lang.String;

        if r0 != null goto label1;

        $r2 = new android.text.format.Time;

        specialinvoke $r2.<android.text.format.Time: void <init>()>();

        r0 = $r2;

     label1:
        r0.<android.text.format.Time: java.lang.String timezone> = r1;

        virtualinvoke r0.<android.text.format.Time: void set(long)>(l0);

        $i1 = r0.<android.text.format.Time: int monthDay>;

        $i2 = $i1 + 1;

        r0.<android.text.format.Time: int monthDay> = $i2;

        r0.<android.text.format.Time: int hour> = 0;

        r0.<android.text.format.Time: int minute> = 0;

        r0.<android.text.format.Time: int second> = 0;

        $l3 = virtualinvoke r0.<android.text.format.Time: long normalize(boolean)>(1);

        return $l3;
    }

    public static void checkForDuplicateNames(java.util.Map, android.database.Cursor, int)
    {
        java.util.Map r0;
        android.database.Cursor r1;
        int i0;
        java.lang.String r2;
        boolean $z1, $z2;
        java.lang.Boolean $r3;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: android.database.Cursor;

        i0 := @parameter2: int;

        interfaceinvoke r0.<java.util.Map: void clear()>();

        interfaceinvoke r1.<android.database.Cursor: boolean moveToPosition(int)>(-1);

     label1:
        $z1 = interfaceinvoke r1.<android.database.Cursor: boolean moveToNext()>();

        if $z1 == 0 goto label3;

        r2 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>(i0);

        if r2 == null goto label2;

        $z2 = interfaceinvoke r0.<java.util.Map: boolean containsKey(java.lang.Object)>(r2);

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r3);

     label2:
        goto label1;

     label3:
        return;
    }

    public static boolean equals(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        if r0 != null goto label2;

        if r1 != null goto label1;

        $z0 = 1;

        goto label3;

     label1:
        $z0 = 0;

        goto label3;

     label2:
        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

     label3:
        return $z0;
    }

    public static void setAllowWeekForDetailView(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <com.android.calendar.Utils: boolean mAllowWeekForDetailView> = z0;

        return;
    }

    public static boolean getAllowWeekForDetailView()
    {
        boolean $z0;

        $z0 = <com.android.calendar.Utils: boolean mAllowWeekForDetailView>;

        return $z0;
    }

    public static boolean getConfigBool(android.content.Context, int)
    {
        android.content.Context r0;
        int i0;
        android.content.res.Resources $r1;
        boolean $z0;

        r0 := @parameter0: android.content.Context;

        i0 := @parameter1: int;

        $r1 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        $z0 = virtualinvoke $r1.<android.content.res.Resources: boolean getBoolean(int)>(i0);

        return $z0;
    }

    public static int getDisplayColorFromColor(int)
    {
        int i0, $i1;
        float[] r0;
        boolean $z0;
        float $f0, $f1, $f2, $f3, $f4;

        i0 := @parameter0: int;

        $z0 = staticinvoke <com.android.calendar.Utils: boolean isJellybeanOrLater()>();

        if $z0 != 0 goto label1;

        return i0;

     label1:
        r0 = newarray (float)[3];

        staticinvoke <android.graphics.Color: void colorToHSV(int,float[])>(i0, r0);

        $f0 = r0[1];

        $f1 = $f0 * 1.3F;

        $f2 = staticinvoke <java.lang.Math: float min(float,float)>($f1, 1.0F);

        r0[1] = $f2;

        $f3 = r0[2];

        $f4 = $f3 * 0.8F;

        r0[2] = $f4;

        $i1 = staticinvoke <android.graphics.Color: int HSVToColor(float[])>(r0);

        return $i1;
    }

    public static int getDeclinedColorFromColor(int)
    {
        int i0, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i22, $i23, $i24, $i25, $i26, $i27;
        byte b1, b2;
        short $s21;

        i0 := @parameter0: int;

        b1 = -1;

        b2 = 102;

        $i6 = i0 & 16711680;

        $i10 = $i6 * b2;

        $i8 = b1 & 16711680;

        $i7 = 255 - b2;

        $i9 = $i8 * $i7;

        $i11 = $i10 + $i9;

        i3 = $i11 & -16777216;

        $i12 = i0 & 65280;

        $i17 = $i12 * b2;

        $i14 = b1 & 65280;

        $i13 = 255 - b2;

        $i15 = $i14 * $i13;

        $i16 = $i17 + $i15;

        i4 = $i16 & 16711680;

        $i19 = i0 & 255;

        $i23 = $i19 * b2;

        $s21 = b1 & 255;

        $i18 = 255 - b2;

        $i20 = $s21 * $i18;

        $i22 = $i23 + $i20;

        i5 = $i22 & 65280;

        $i25 = i3 | i4;

        $i24 = $i25 | i5;

        $i27 = $i24 >> 8;

        $i26 = -16777216 | $i27;

        return $i26;
    }

    public static void trySyncAndDisableUpgradeReceiver(android.content.Context)
    {
        android.content.Context r0;
        android.content.pm.PackageManager r1;
        android.content.ComponentName r2, $r4;
        android.os.Bundle r3, $r5;
        int $i0;
        android.net.Uri $r6;
        java.lang.String $r7;

        r0 := @parameter0: android.content.Context;

        r1 = virtualinvoke r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r4 = new android.content.ComponentName;

        specialinvoke $r4.<android.content.ComponentName: void <init>(android.content.Context,java.lang.Class)>(r0, class "com/android/calendar/UpgradeReceiver");

        r2 = $r4;

        $i0 = virtualinvoke r1.<android.content.pm.PackageManager: int getComponentEnabledSetting(android.content.ComponentName)>(r2);

        if $i0 != 2 goto label1;

        return;

     label1:
        $r5 = new android.os.Bundle;

        specialinvoke $r5.<android.os.Bundle: void <init>()>();

        r3 = $r5;

        virtualinvoke r3.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("force", 1);

        $r6 = <android.provider.CalendarContract$Calendars: android.net.Uri CONTENT_URI>;

        $r7 = virtualinvoke $r6.<android.net.Uri: java.lang.String getAuthority()>();

        staticinvoke <android.content.ContentResolver: void requestSync(android.accounts.Account,java.lang.String,android.os.Bundle)>(null, $r7, r3);

        virtualinvoke r1.<android.content.pm.PackageManager: void setComponentEnabledSetting(android.content.ComponentName,int,int)>(r2, 2, 1);

        return;
    }

    public static java.util.HashMap createDNAStrands(int, java.util.ArrayList, int, int, int, int[], android.content.Context)
    {
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11, $i12, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140;
        java.util.ArrayList r0;
        int[] r1;
        android.content.Context r2;
        android.content.res.Resources r3;
        java.util.HashMap r4, $r25;
        com.android.calendar.Utils$DNAStrand r5, $r23, $r34, $r36, $r41, $r48, $r53, $r55;
        com.android.calendar.Event r6, r8, $r28;
        java.util.Iterator r7;
        com.android.calendar.Utils$DNASegment r9, r10, r11, $r31, $r49, $r54, $r56, r58, r59, r60;
        java.lang.StringBuilder $r12, $r13, $r14, $r15, $r16, $r18, $r19, $r21, $r22;
        boolean $z0, $z1, $z2, $z3;
        java.lang.String $r17, $r20;
        java.util.LinkedList $r24, r57;
        java.lang.Integer $r27, $r35, $r37, $r40, $r44, $r46, $r51;
        java.lang.Object $r29, $r30, $r32, $r33, $r38, $r39, $r42, $r43, $r45, $r47, $r50, $r52;

        i0 := @parameter0: int;

        r0 := @parameter1: java.util.ArrayList;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        r1 := @parameter5: int[];

        r2 := @parameter6: android.content.Context;

        $z0 = <com.android.calendar.Utils: boolean mMinutesLoaded>;

        if $z0 != 0 goto label02;

        if r2 != null goto label01;

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String)>("CalUtils", "No context and haven\'t loaded parameters yet! Can\'t create DNA.");

     label01:
        r3 = virtualinvoke r2.<android.content.Context: android.content.res.Resources getResources()>();

        $i129 = virtualinvoke r3.<android.content.res.Resources: int getColor(int)>(2131230761);

        <com.android.calendar.Utils: int CONFLICT_COLOR> = $i129;

        $i131 = virtualinvoke r3.<android.content.res.Resources: int getInteger(int)>(2131427336);

        <com.android.calendar.Utils: int WORK_DAY_START_MINUTES> = $i131;

        $i130 = virtualinvoke r3.<android.content.res.Resources: int getInteger(int)>(2131427337);

        <com.android.calendar.Utils: int WORK_DAY_END_MINUTES> = $i130;

        $i126 = <com.android.calendar.Utils: int WORK_DAY_END_MINUTES>;

        $i125 = 1440 - $i126;

        <com.android.calendar.Utils: int WORK_DAY_END_LENGTH> = $i125;

        $i127 = <com.android.calendar.Utils: int WORK_DAY_END_MINUTES>;

        $i128 = <com.android.calendar.Utils: int WORK_DAY_START_MINUTES>;

        $i140 = $i127 - $i128;

        <com.android.calendar.Utils: int WORK_DAY_MINUTES> = $i140;

        <com.android.calendar.Utils: boolean mMinutesLoaded> = 1;

     label02:
        if r0 == null goto label03;

        $z1 = virtualinvoke r0.<java.util.ArrayList: boolean isEmpty()>();

        if $z1 != 0 goto label03;

        if r1 == null goto label03;

        $i11 = lengthof r1;

        if $i11 < 1 goto label03;

        $i12 = i2 - i1;

        if $i12 < 8 goto label03;

        if i3 >= 0 goto label04;

     label03:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad values for createDNAStrands! events:");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dayXs:");

        $r17 = staticinvoke <java.util.Arrays: java.lang.String toString(int[])>(r1);

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bot-top:");

        $i10 = i2 - i1;

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" minPixels:");

        $r19 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CalUtils", $r20);

        return null;

     label04:
        $r24 = new java.util.LinkedList;

        specialinvoke $r24.<java.util.LinkedList: void <init>()>();

        r57 = $r24;

        $r25 = new java.util.HashMap;

        specialinvoke $r25.<java.util.HashMap: void <init>()>();

        r4 = $r25;

        $r23 = new com.android.calendar.Utils$DNAStrand;

        specialinvoke $r23.<com.android.calendar.Utils$DNAStrand: void <init>()>();

        r5 = $r23;

        $i14 = <com.android.calendar.Utils: int CONFLICT_COLOR>;

        r5.<com.android.calendar.Utils$DNAStrand: int color> = $i14;

        $i16 = <com.android.calendar.Utils: int CONFLICT_COLOR>;

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i16);

        virtualinvoke r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r27, r5);

        $i20 = i3 * 4;

        $i15 = <com.android.calendar.Utils: int WORK_DAY_MINUTES>;

        $i17 = $i20 * $i15;

        $i19 = i2 - i1;

        $i18 = 3 * $i19;

        i4 = $i17 / $i18;

        $i23 = i4 * 5;

        i5 = $i23 / 2;

        $i22 = lengthof r1;

        $i21 = i0 + $i22;

        i6 = $i21 - 1;

        $r28 = new com.android.calendar.Event;

        specialinvoke $r28.<com.android.calendar.Event: void <init>()>();

        r6 = $r28;

        r7 = virtualinvoke r0.<java.util.ArrayList: java.util.Iterator iterator()>();

     label05:
        $z2 = interfaceinvoke r7.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label27;

        $r29 = interfaceinvoke r7.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.android.calendar.Event) $r29;

        $i24 = r8.<com.android.calendar.Event: int endDay>;

        if $i24 < i0 goto label05;

        $i27 = r8.<com.android.calendar.Event: int startDay>;

        if $i27 <= i6 goto label06;

        goto label05;

     label06:
        $z3 = virtualinvoke r8.<com.android.calendar.Event: boolean drawAsAllday()>();

        if $z3 == 0 goto label07;

        $i134 = lengthof r1;

        staticinvoke <com.android.calendar.Utils: void addAllDayToStrands(com.android.calendar.Event,java.util.HashMap,int,int)>(r8, r4, i0, $i134);

        goto label05;

     label07:
        virtualinvoke r8.<com.android.calendar.Event: void copyTo(com.android.calendar.Event)>(r6);

        $i26 = r6.<com.android.calendar.Event: int startDay>;

        if $i26 >= i0 goto label08;

        r6.<com.android.calendar.Event: int startDay> = i0;

        r6.<com.android.calendar.Event: int startTime> = 0;

     label08:
        $i31 = r6.<com.android.calendar.Event: int startTime>;

        $i25 = 1440 - i5;

        if $i31 <= $i25 goto label09;

        $i135 = 1440 - i5;

        r6.<com.android.calendar.Event: int startTime> = $i135;

     label09:
        $i32 = r6.<com.android.calendar.Event: int endDay>;

        if $i32 <= i6 goto label10;

        r6.<com.android.calendar.Event: int endDay> = i6;

        r6.<com.android.calendar.Event: int endTime> = 1439;

     label10:
        $i33 = r6.<com.android.calendar.Event: int endTime>;

        if $i33 >= i5 goto label11;

        r6.<com.android.calendar.Event: int endTime> = i5;

     label11:
        $i28 = r6.<com.android.calendar.Event: int startDay>;

        $i34 = r6.<com.android.calendar.Event: int endDay>;

        if $i28 != $i34 goto label13;

        $i119 = r6.<com.android.calendar.Event: int endTime>;

        $i118 = r6.<com.android.calendar.Event: int startTime>;

        $i123 = $i119 - $i118;

        if $i123 >= i5 goto label13;

        $i121 = r6.<com.android.calendar.Event: int startTime>;

        $i124 = <com.android.calendar.Utils: int WORK_DAY_START_MINUTES>;

        if $i121 >= $i124 goto label12;

        $i136 = r6.<com.android.calendar.Event: int startTime>;

        $i133 = $i136 + i5;

        $i139 = <com.android.calendar.Utils: int WORK_DAY_START_MINUTES>;

        $i138 = $i139 + i4;

        $i132 = staticinvoke <java.lang.Math: int min(int,int)>($i133, $i138);

        r6.<com.android.calendar.Event: int endTime> = $i132;

        goto label13;

     label12:
        $i112 = r6.<com.android.calendar.Event: int endTime>;

        $i122 = <com.android.calendar.Utils: int WORK_DAY_END_MINUTES>;

        if $i112 <= $i122 goto label13;

        $i113 = r6.<com.android.calendar.Event: int endTime>;

        $i110 = $i113 + i5;

        $i111 = staticinvoke <java.lang.Math: int min(int,int)>($i110, 1439);

        r6.<com.android.calendar.Event: int endTime> = $i111;

        $i117 = r6.<com.android.calendar.Event: int endTime>;

        $i116 = r6.<com.android.calendar.Event: int startTime>;

        $i114 = $i117 - $i116;

        if $i114 >= i5 goto label13;

        $i115 = r6.<com.android.calendar.Event: int endTime>;

        $i137 = $i115 - i5;

        r6.<com.android.calendar.Event: int startTime> = $i137;

     label13:
        $i29 = virtualinvoke r57.<java.util.LinkedList: int size()>();

        if $i29 != 0 goto label14;

        staticinvoke <com.android.calendar.Utils: void addNewSegment(java.util.LinkedList,com.android.calendar.Event,java.util.HashMap,int,int,int)>(r57, r6, r4, i0, 0, i4);

        goto label05;

     label14:
        $r30 = virtualinvoke r57.<java.util.LinkedList: java.lang.Object getLast()>();

        r9 = (com.android.calendar.Utils$DNASegment) $r30;

        $i30 = r6.<com.android.calendar.Event: int startDay>;

        $i39 = $i30 - i0;

        $i41 = $i39 * 1440;

        $i40 = r6.<com.android.calendar.Event: int startTime>;

        i7 = $i41 + $i40;

        $i42 = r6.<com.android.calendar.Event: int endDay>;

        $i35 = $i42 - i0;

        $i37 = $i35 * 1440;

        $i36 = r6.<com.android.calendar.Event: int endTime>;

        $i44 = $i37 + $i36;

        $i38 = i7 + i4;

        i9 = staticinvoke <java.lang.Math: int max(int,int)>($i44, $i38);

        if i7 >= 0 goto label15;

        i7 = 0;

     label15:
        if i9 < 10080 goto label16;

        i9 = 10079;

     label16:
        $i46 = r9.<com.android.calendar.Utils$DNASegment: int endMinute>;

        if i7 >= $i46 goto label25;

        i8 = virtualinvoke r57.<java.util.LinkedList: int size()>();

     label17:
        i8 = i8 + -1;

        if i8 < 0 goto label18;

        $r52 = virtualinvoke r57.<java.util.LinkedList: java.lang.Object get(int)>(i8);

        $r56 = (com.android.calendar.Utils$DNASegment) $r52;

        $i120 = $r56.<com.android.calendar.Utils$DNASegment: int startMinute>;

        if i9 >= $i120 goto label18;

        goto label17;

     label18:
        if i8 < 0 goto label25;

        $r32 = virtualinvoke r57.<java.util.LinkedList: java.lang.Object get(int)>(i8);

        $r31 = (com.android.calendar.Utils$DNASegment) $r32;

        r11 = $r31;

        $i52 = $r31.<com.android.calendar.Utils$DNASegment: int endMinute>;

        if i7 > $i52 goto label25;

        $i54 = r11.<com.android.calendar.Utils$DNASegment: int color>;

        $i51 = <com.android.calendar.Utils: int CONFLICT_COLOR>;

        if $i54 != $i51 goto label19;

        goto label24;

     label19:
        $i53 = r11.<com.android.calendar.Utils$DNASegment: int endMinute>;

        $i48 = $i53 - i4;

        if i9 >= $i48 goto label20;

        $r54 = new com.android.calendar.Utils$DNASegment;

        specialinvoke $r54.<com.android.calendar.Utils$DNASegment: void <init>(com.android.calendar.Utils$1)>(null);

        r10 = $r54;

        $i109 = r11.<com.android.calendar.Utils$DNASegment: int endMinute>;

        r10.<com.android.calendar.Utils$DNASegment: int endMinute> = $i109;

        $i108 = r11.<com.android.calendar.Utils$DNASegment: int color>;

        r10.<com.android.calendar.Utils$DNASegment: int color> = $i108;

        $i107 = i9 + 1;

        r10.<com.android.calendar.Utils$DNASegment: int startMinute> = $i107;

        $i106 = r11.<com.android.calendar.Utils$DNASegment: int day>;

        r10.<com.android.calendar.Utils$DNASegment: int day> = $i106;

        r11.<com.android.calendar.Utils$DNASegment: int endMinute> = i9;

        $i101 = i8 + 1;

        virtualinvoke r57.<java.util.LinkedList: void add(int,java.lang.Object)>($i101, r10);

        $i100 = r10.<com.android.calendar.Utils$DNASegment: int color>;

        $r51 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i100);

        $r50 = virtualinvoke r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r51);

        $r53 = (com.android.calendar.Utils$DNAStrand) $r50;

        $i103 = $r53.<com.android.calendar.Utils$DNAStrand: int count>;

        $i102 = $i103 + 1;

        $r53.<com.android.calendar.Utils$DNAStrand: int count> = $i102;

     label20:
        $i47 = r11.<com.android.calendar.Utils$DNASegment: int startMinute>;

        $i50 = $i47 + i4;

        if i7 <= $i50 goto label21;

        $r49 = new com.android.calendar.Utils$DNASegment;

        specialinvoke $r49.<com.android.calendar.Utils$DNASegment: void <init>(com.android.calendar.Utils$1)>(null);

        r58 = $r49;

        $i91 = r11.<com.android.calendar.Utils$DNASegment: int startMinute>;

        r58.<com.android.calendar.Utils$DNASegment: int startMinute> = $i91;

        $i92 = r11.<com.android.calendar.Utils$DNASegment: int color>;

        r58.<com.android.calendar.Utils$DNASegment: int color> = $i92;

        $i93 = i7 - 1;

        r58.<com.android.calendar.Utils$DNASegment: int endMinute> = $i93;

        $i94 = r11.<com.android.calendar.Utils$DNASegment: int day>;

        r58.<com.android.calendar.Utils$DNASegment: int day> = $i94;

        r11.<com.android.calendar.Utils$DNASegment: int startMinute> = i7;

        $i95 = i8;

        i8 = i8 + 1;

        virtualinvoke r57.<java.util.LinkedList: void add(int,java.lang.Object)>($i95, r58);

        $i96 = r58.<com.android.calendar.Utils$DNASegment: int color>;

        $r44 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i96);

        $r45 = virtualinvoke r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r44);

        $r55 = (com.android.calendar.Utils$DNAStrand) $r45;

        $i105 = $r55.<com.android.calendar.Utils$DNAStrand: int count>;

        $i104 = $i105 + 1;

        $r55.<com.android.calendar.Utils$DNAStrand: int count> = $i104;

     label21:
        $i49 = i8 + 1;

        $i58 = virtualinvoke r57.<java.util.LinkedList: int size()>();

        if $i49 >= $i58 goto label22;

        $i88 = i8 + 1;

        $r43 = virtualinvoke r57.<java.util.LinkedList: java.lang.Object get(int)>($i88);

        r59 = (com.android.calendar.Utils$DNASegment) $r43;

        $i89 = r59.<com.android.calendar.Utils$DNASegment: int color>;

        $i90 = <com.android.calendar.Utils: int CONFLICT_COLOR>;

        if $i89 != $i90 goto label22;

        $i78 = r11.<com.android.calendar.Utils$DNASegment: int day>;

        $i79 = r59.<com.android.calendar.Utils$DNASegment: int day>;

        if $i78 != $i79 goto label22;

        $i83 = r59.<com.android.calendar.Utils$DNASegment: int startMinute>;

        $i81 = r11.<com.android.calendar.Utils$DNASegment: int endMinute>;

        $i80 = $i81 + 1;

        if $i83 > $i80 goto label22;

        $i85 = r11.<com.android.calendar.Utils$DNASegment: int startMinute>;

        $i82 = r59.<com.android.calendar.Utils$DNASegment: int startMinute>;

        $i84 = staticinvoke <java.lang.Math: int min(int,int)>($i85, $i82);

        r59.<com.android.calendar.Utils$DNASegment: int startMinute> = $i84;

        virtualinvoke r57.<java.util.LinkedList: boolean remove(java.lang.Object)>(r11);

        $i97 = r11.<com.android.calendar.Utils$DNASegment: int color>;

        $r46 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i97);

        $r47 = virtualinvoke r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r46);

        $r48 = (com.android.calendar.Utils$DNAStrand) $r47;

        $i98 = $r48.<com.android.calendar.Utils$DNAStrand: int count>;

        $i99 = $i98 - 1;

        $r48.<com.android.calendar.Utils$DNAStrand: int count> = $i99;

        r11 = r59;

     label22:
        $i59 = i8 - 1;

        if $i59 < 0 goto label23;

        $i70 = i8 - 1;

        $r39 = virtualinvoke r57.<java.util.LinkedList: java.lang.Object get(int)>($i70);

        r60 = (com.android.calendar.Utils$DNASegment) $r39;

        $i68 = r60.<com.android.calendar.Utils$DNASegment: int color>;

        $i69 = <com.android.calendar.Utils: int CONFLICT_COLOR>;

        if $i68 != $i69 goto label23;

        $i66 = r11.<com.android.calendar.Utils$DNASegment: int day>;

        $i67 = r60.<com.android.calendar.Utils$DNASegment: int day>;

        if $i66 != $i67 goto label23;

        $i76 = r60.<com.android.calendar.Utils$DNASegment: int endMinute>;

        $i65 = r11.<com.android.calendar.Utils$DNASegment: int startMinute>;

        $i77 = $i65 - 1;

        if $i76 < $i77 goto label23;

        $i74 = r11.<com.android.calendar.Utils$DNASegment: int endMinute>;

        $i75 = r60.<com.android.calendar.Utils$DNASegment: int endMinute>;

        $i73 = staticinvoke <java.lang.Math: int max(int,int)>($i74, $i75);

        r60.<com.android.calendar.Utils$DNASegment: int endMinute> = $i73;

        virtualinvoke r57.<java.util.LinkedList: boolean remove(java.lang.Object)>(r11);

        $i72 = r11.<com.android.calendar.Utils$DNASegment: int color>;

        $r40 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i72);

        $r42 = virtualinvoke r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r40);

        $r41 = (com.android.calendar.Utils$DNAStrand) $r42;

        $i87 = $r41.<com.android.calendar.Utils$DNAStrand: int count>;

        $i86 = $i87 - 1;

        $r41.<com.android.calendar.Utils$DNAStrand: int count> = $i86;

        r11 = r60;

        i8 = i8 + -1;

     label23:
        $i57 = r11.<com.android.calendar.Utils$DNASegment: int color>;

        $i56 = <com.android.calendar.Utils: int CONFLICT_COLOR>;

        if $i57 == $i56 goto label24;

        $i55 = r11.<com.android.calendar.Utils$DNASegment: int color>;

        $r35 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i55);

        $r33 = virtualinvoke r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r35);

        $r34 = (com.android.calendar.Utils$DNAStrand) $r33;

        $i63 = $r34.<com.android.calendar.Utils$DNAStrand: int count>;

        $i64 = $i63 - 1;

        $r34.<com.android.calendar.Utils$DNAStrand: int count> = $i64;

        $i61 = <com.android.calendar.Utils: int CONFLICT_COLOR>;

        r11.<com.android.calendar.Utils$DNASegment: int color> = $i61;

        $i62 = <com.android.calendar.Utils: int CONFLICT_COLOR>;

        $r37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i62);

        $r38 = virtualinvoke r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r37);

        $r36 = (com.android.calendar.Utils$DNAStrand) $r38;

        $i60 = $r36.<com.android.calendar.Utils$DNAStrand: int count>;

        $i71 = $i60 + 1;

        $r36.<com.android.calendar.Utils$DNAStrand: int count> = $i71;

     label24:
        i8 = i8 + -1;

        goto label18;

     label25:
        $i45 = r9.<com.android.calendar.Utils$DNASegment: int endMinute>;

        if i9 <= $i45 goto label26;

        $i43 = r9.<com.android.calendar.Utils$DNASegment: int endMinute>;

        staticinvoke <com.android.calendar.Utils: void addNewSegment(java.util.LinkedList,com.android.calendar.Event,java.util.HashMap,int,int,int)>(r57, r6, r4, i0, $i43, i4);

     label26:
        goto label05;

     label27:
        staticinvoke <com.android.calendar.Utils: void weaveDNAStrands(java.util.LinkedList,int,java.util.HashMap,int,int,int[])>(r57, i0, r4, i1, i2, r1);

        return r4;
    }

    private static void addAllDayToStrands(com.android.calendar.Event, java.util.HashMap, int, int)
    {
        com.android.calendar.Event r0;
        java.util.HashMap r1;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        com.android.calendar.Utils$DNAStrand r2;
        int[] $r3, $r4, $r5, $r6, $r7;

        r0 := @parameter0: com.android.calendar.Event;

        r1 := @parameter1: java.util.HashMap;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $i4 = <com.android.calendar.Utils: int CONFLICT_COLOR>;

        r2 = staticinvoke <com.android.calendar.Utils: com.android.calendar.Utils$DNAStrand getOrCreateStrand(java.util.HashMap,int)>(r1, $i4);

        $r3 = r2.<com.android.calendar.Utils$DNAStrand: int[] allDays>;

        if $r3 != null goto label1;

        $r6 = newarray (int)[i1];

        r2.<com.android.calendar.Utils$DNAStrand: int[] allDays> = $r6;

     label1:
        $i5 = r0.<com.android.calendar.Event: int endDay>;

        $i7 = $i5 - i0;

        $i6 = i1 - 1;

        i2 = staticinvoke <java.lang.Math: int min(int,int)>($i7, $i6);

        $i8 = r0.<com.android.calendar.Event: int startDay>;

        $i9 = $i8 - i0;

        i3 = staticinvoke <java.lang.Math: int max(int,int)>($i9, 0);

     label2:
        if i3 > i2 goto label5;

        $r4 = r2.<com.android.calendar.Utils$DNAStrand: int[] allDays>;

        $i11 = $r4[i3];

        if $i11 == 0 goto label3;

        $r7 = r2.<com.android.calendar.Utils$DNAStrand: int[] allDays>;

        $i12 = <com.android.calendar.Utils: int CONFLICT_COLOR>;

        $r7[i3] = $i12;

        goto label4;

     label3:
        $r5 = r2.<com.android.calendar.Utils$DNAStrand: int[] allDays>;

        $i10 = r0.<com.android.calendar.Event: int color>;

        $r5[i3] = $i10;

     label4:
        i3 = i3 + 1;

        goto label2;

     label5:
        return;
    }

    private static void weaveDNAStrands(java.util.LinkedList, int, java.util.HashMap, int, int, int[])
    {
        java.util.LinkedList r0;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, i29, i30;
        java.util.HashMap r1;
        int[] r2, $r17;
        java.util.Iterator r3, r18;
        com.android.calendar.Utils$DNAStrand r4, r6;
        com.android.calendar.Utils$DNASegment r5;
        java.util.Collection $r7;
        boolean $z2, $z3;
        java.lang.Object $r8, $r9, $r14;
        java.lang.Integer $r10;
        float $f0, $f1, $f2, $f3;
        float[] $r11, $r12, $r13, $r15, $r16;

        r0 := @parameter0: java.util.LinkedList;

        i0 := @parameter1: int;

        r1 := @parameter2: java.util.HashMap;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        r2 := @parameter5: int[];

        $r7 = virtualinvoke r1.<java.util.HashMap: java.util.Collection values()>();

        r3 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r14 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.calendar.Utils$DNAStrand) $r14;

        $i28 = r4.<com.android.calendar.Utils$DNAStrand: int count>;

        if $i28 >= 1 goto label2;

        $r17 = r4.<com.android.calendar.Utils$DNAStrand: int[] allDays>;

        if $r17 != null goto label2;

        interfaceinvoke r3.<java.util.Iterator: void remove()>();

        goto label1;

     label2:
        $i27 = r4.<com.android.calendar.Utils$DNAStrand: int count>;

        $i26 = $i27 * 4;

        $r16 = newarray (float)[$i26];

        r4.<com.android.calendar.Utils$DNAStrand: float[] points> = $r16;

        r4.<com.android.calendar.Utils$DNAStrand: int position> = 0;

        goto label1;

     label3:
        r18 = virtualinvoke r0.<java.util.LinkedList: java.util.Iterator iterator()>();

     label4:
        $z3 = interfaceinvoke r18.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r8 = interfaceinvoke r18.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.android.calendar.Utils$DNASegment) $r8;

        $i10 = r5.<com.android.calendar.Utils$DNASegment: int color>;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i10);

        $r9 = virtualinvoke r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r10);

        r6 = (com.android.calendar.Utils$DNAStrand) $r9;

        $i12 = r5.<com.android.calendar.Utils$DNASegment: int day>;

        i3 = $i12 - i0;

        $i11 = r5.<com.android.calendar.Utils$DNASegment: int startMinute>;

        i4 = $i11 % 1440;

        $i14 = r5.<com.android.calendar.Utils$DNASegment: int endMinute>;

        i5 = $i14 % 1440;

        i6 = i2 - i1;

        $i13 = i6 * 3;

        i7 = $i13 / 4;

        $i17 = i6 - i7;

        i8 = $i17 / 2;

        i9 = r2[i3];

        $i18 = staticinvoke <com.android.calendar.Utils: int getPixelOffsetFromMinutes(int,int,int)>(i4, i7, i8);

        i29 = i1 + $i18;

        $i15 = staticinvoke <com.android.calendar.Utils: int getPixelOffsetFromMinutes(int,int,int)>(i5, i7, i8);

        i30 = i1 + $i15;

        $r11 = r6.<com.android.calendar.Utils$DNAStrand: float[] points>;

        $i16 = r6.<com.android.calendar.Utils$DNAStrand: int position>;

        $i20 = $i16 + 1;

        r6.<com.android.calendar.Utils$DNAStrand: int position> = $i20;

        $f0 = (float) i9;

        $r11[$i16] = $f0;

        $r12 = r6.<com.android.calendar.Utils$DNAStrand: float[] points>;

        $i19 = r6.<com.android.calendar.Utils$DNAStrand: int position>;

        $i22 = $i19 + 1;

        r6.<com.android.calendar.Utils$DNAStrand: int position> = $i22;

        $f1 = (float) i29;

        $r12[$i19] = $f1;

        $r13 = r6.<com.android.calendar.Utils$DNAStrand: float[] points>;

        $i21 = r6.<com.android.calendar.Utils$DNAStrand: int position>;

        $i24 = $i21 + 1;

        r6.<com.android.calendar.Utils$DNAStrand: int position> = $i24;

        $f2 = (float) i9;

        $r13[$i21] = $f2;

        $r15 = r6.<com.android.calendar.Utils$DNAStrand: float[] points>;

        $i23 = r6.<com.android.calendar.Utils$DNAStrand: int position>;

        $i25 = $i23 + 1;

        r6.<com.android.calendar.Utils$DNAStrand: int position> = $i25;

        $f3 = (float) i30;

        $r15[$i23] = $f3;

        goto label4;

     label5:
        return;
    }

    private static int getPixelOffsetFromMinutes(int, int, int)
    {
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i4 = <com.android.calendar.Utils: int WORK_DAY_START_MINUTES>;

        if i0 >= $i4 goto label1;

        $i18 = i0 * i2;

        $i16 = <com.android.calendar.Utils: int WORK_DAY_START_MINUTES>;

        i3 = $i18 / $i16;

        goto label3;

     label1:
        $i5 = <com.android.calendar.Utils: int WORK_DAY_END_MINUTES>;

        if i0 >= $i5 goto label2;

        $i12 = <com.android.calendar.Utils: int WORK_DAY_START_MINUTES>;

        $i13 = i0 - $i12;

        $i15 = $i13 * i1;

        $i14 = <com.android.calendar.Utils: int WORK_DAY_MINUTES>;

        $i17 = $i15 / $i14;

        i3 = i2 + $i17;

        goto label3;

     label2:
        $i11 = i2 + i1;

        $i6 = <com.android.calendar.Utils: int WORK_DAY_END_MINUTES>;

        $i7 = i0 - $i6;

        $i9 = $i7 * i2;

        $i8 = <com.android.calendar.Utils: int WORK_DAY_END_LENGTH>;

        $i10 = $i9 / $i8;

        i3 = $i11 + $i10;

     label3:
        return i3;
    }

    private static void addNewSegment(java.util.LinkedList, com.android.calendar.Event, java.util.HashMap, int, int, int)
    {
        java.util.LinkedList r0;
        com.android.calendar.Event r1, r3, $r6;
        java.util.HashMap r2;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36;
        com.android.calendar.Utils$DNAStrand r4;
        com.android.calendar.Utils$DNASegment $r5, r12;
        java.lang.StringBuilder $r7, $r8, $r10;
        java.lang.String $r9, $r11;

        r0 := @parameter0: java.util.LinkedList;

        r1 := @parameter1: com.android.calendar.Event;

        r2 := @parameter2: java.util.HashMap;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        i2 := @parameter5: int;

        $i7 = r1.<com.android.calendar.Event: int startDay>;

        $i6 = r1.<com.android.calendar.Event: int endDay>;

        if $i7 <= $i6 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Event starts after it ends: ");

        $r9 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r8 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int wtf(java.lang.String,java.lang.String)>("CalUtils", $r11);

     label1:
        $i9 = r1.<com.android.calendar.Event: int startDay>;

        $i8 = r1.<com.android.calendar.Event: int endDay>;

        if $i9 == $i8 goto label4;

        $r6 = new com.android.calendar.Event;

        specialinvoke $r6.<com.android.calendar.Event: void <init>()>();

        r3 = $r6;

        $i29 = r1.<com.android.calendar.Event: int color>;

        r3.<com.android.calendar.Event: int color> = $i29;

        $i27 = r1.<com.android.calendar.Event: int startDay>;

        r3.<com.android.calendar.Event: int startDay> = $i27;

        $i28 = r1.<com.android.calendar.Event: int startTime>;

        r3.<com.android.calendar.Event: int startTime> = $i28;

        $i32 = r3.<com.android.calendar.Event: int startDay>;

        r3.<com.android.calendar.Event: int endDay> = $i32;

        r3.<com.android.calendar.Event: int endTime> = 1439;

     label2:
        $i30 = r3.<com.android.calendar.Event: int startDay>;

        $i33 = r1.<com.android.calendar.Event: int endDay>;

        if $i30 == $i33 goto label3;

        staticinvoke <com.android.calendar.Utils: void addNewSegment(java.util.LinkedList,com.android.calendar.Event,java.util.HashMap,int,int,int)>(r0, r3, r2, i0, i1, i2);

        $i35 = r3.<com.android.calendar.Event: int startDay>;

        $i36 = $i35 + 1;

        r3.<com.android.calendar.Event: int startDay> = $i36;

        $i34 = r3.<com.android.calendar.Event: int startDay>;

        r3.<com.android.calendar.Event: int endDay> = $i34;

        r3.<com.android.calendar.Event: int startTime> = 0;

        i1 = 0;

        goto label2;

     label3:
        $i31 = r1.<com.android.calendar.Event: int endTime>;

        r3.<com.android.calendar.Event: int endTime> = $i31;

        r1 = r3;

     label4:
        $r5 = new com.android.calendar.Utils$DNASegment;

        specialinvoke $r5.<com.android.calendar.Utils$DNASegment: void <init>(com.android.calendar.Utils$1)>(null);

        r12 = $r5;

        $i11 = r1.<com.android.calendar.Event: int startDay>;

        $i10 = $i11 - i0;

        i3 = $i10 * 1440;

        $i13 = i3 + 1440;

        i4 = $i13 - 1;

        $i12 = r1.<com.android.calendar.Event: int startTime>;

        $i15 = i3 + $i12;

        $i14 = staticinvoke <java.lang.Math: int max(int,int)>($i15, i1);

        r12.<com.android.calendar.Utils$DNASegment: int startMinute> = $i14;

        $i17 = r12.<com.android.calendar.Utils$DNASegment: int startMinute>;

        $i16 = $i17 + i2;

        i5 = staticinvoke <java.lang.Math: int min(int,int)>($i16, i4);

        $i18 = r1.<com.android.calendar.Event: int endTime>;

        $i20 = i3 + $i18;

        $i19 = staticinvoke <java.lang.Math: int max(int,int)>($i20, i5);

        r12.<com.android.calendar.Utils$DNASegment: int endMinute> = $i19;

        $i22 = r12.<com.android.calendar.Utils$DNASegment: int endMinute>;

        if $i22 <= i4 goto label5;

        r12.<com.android.calendar.Utils$DNASegment: int endMinute> = i4;

     label5:
        $i21 = r1.<com.android.calendar.Event: int color>;

        r12.<com.android.calendar.Utils$DNASegment: int color> = $i21;

        $i23 = r1.<com.android.calendar.Event: int startDay>;

        r12.<com.android.calendar.Utils$DNASegment: int day> = $i23;

        virtualinvoke r0.<java.util.LinkedList: boolean add(java.lang.Object)>(r12);

        $i26 = r12.<com.android.calendar.Utils$DNASegment: int color>;

        r4 = staticinvoke <com.android.calendar.Utils: com.android.calendar.Utils$DNAStrand getOrCreateStrand(java.util.HashMap,int)>(r2, $i26);

        $i24 = r4.<com.android.calendar.Utils$DNAStrand: int count>;

        $i25 = $i24 + 1;

        r4.<com.android.calendar.Utils$DNAStrand: int count> = $i25;

        return;
    }

    private static com.android.calendar.Utils$DNAStrand getOrCreateStrand(java.util.HashMap, int)
    {
        java.util.HashMap r0;
        int i0, $i1;
        com.android.calendar.Utils$DNAStrand r1, $r4;
        java.lang.Integer $r2, $r5;
        java.lang.Object $r3;

        r0 := @parameter0: java.util.HashMap;

        i0 := @parameter1: int;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = virtualinvoke r0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        r1 = (com.android.calendar.Utils$DNAStrand) $r3;

        if r1 != null goto label1;

        $r4 = new com.android.calendar.Utils$DNAStrand;

        specialinvoke $r4.<com.android.calendar.Utils$DNAStrand: void <init>()>();

        r1 = $r4;

        r1.<com.android.calendar.Utils$DNAStrand: int color> = i0;

        r1.<com.android.calendar.Utils$DNAStrand: int count> = 0;

        $i1 = r1.<com.android.calendar.Utils$DNAStrand: int color>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke r0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, r1);

     label1:
        return r1;
    }

    public static void returnToCalendarHome(android.content.Context)
    {
        android.content.Context r0;
        android.content.Intent r1, $r2;

        r0 := @parameter0: android.content.Context;

        $r2 = new android.content.Intent;

        specialinvoke $r2.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, class "com/android/calendar/AllInOneActivity");

        r1 = $r2;

        virtualinvoke r1.<android.content.Intent: android.content.Intent setAction(java.lang.String)>("android.intent.action.VIEW");

        virtualinvoke r1.<android.content.Intent: android.content.Intent setFlags(int)>(67108864);

        virtualinvoke r1.<android.content.Intent: android.content.Intent putExtra(java.lang.String,boolean)>("KEY_HOME", 1);

        virtualinvoke r0.<android.content.Context: void startActivity(android.content.Intent)>(r1);

        return;
    }

    public static void setUpSearchView(android.widget.SearchView, android.app.Activity)
    {
        android.widget.SearchView r0;
        android.app.Activity r1;
        android.app.SearchManager r2;
        java.lang.Object $r3;
        android.content.ComponentName $r4;
        android.app.SearchableInfo $r5;

        r0 := @parameter0: android.widget.SearchView;

        r1 := @parameter1: android.app.Activity;

        $r3 = virtualinvoke r1.<android.app.Activity: java.lang.Object getSystemService(java.lang.String)>("search");

        r2 = (android.app.SearchManager) $r3;

        $r4 = virtualinvoke r1.<android.app.Activity: android.content.ComponentName getComponentName()>();

        $r5 = virtualinvoke r2.<android.app.SearchManager: android.app.SearchableInfo getSearchableInfo(android.content.ComponentName)>($r4);

        virtualinvoke r0.<android.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)>($r5);

        virtualinvoke r0.<android.widget.SearchView: void setQueryRefinementEnabled(boolean)>(1);

        return;
    }

    public static int getWeekNumberFromTime(long, android.content.Context)
    {
        long l0;
        android.content.Context r0;
        android.text.format.Time r1, $r2;
        int i1, $i3, $i4, $i5, $i6, $i7, $i9, $i11;
        java.lang.String $r3;

        l0 := @parameter0: long;

        r0 := @parameter1: android.content.Context;

        $r2 = new android.text.format.Time;

        $r3 = staticinvoke <com.android.calendar.Utils: java.lang.String getTimeZone(android.content.Context,java.lang.Runnable)>(r0, null);

        specialinvoke $r2.<android.text.format.Time: void <init>(java.lang.String)>($r3);

        r1 = $r2;

        virtualinvoke r1.<android.text.format.Time: void set(long)>(l0);

        virtualinvoke r1.<android.text.format.Time: long normalize(boolean)>(1);

        i1 = staticinvoke <com.android.calendar.Utils: int getFirstDayOfWeek(android.content.Context)>(r0);

        $i3 = r1.<android.text.format.Time: int weekDay>;

        if $i3 != 0 goto label2;

        if i1 == 0 goto label1;

        if i1 != 6 goto label2;

     label1:
        $i9 = r1.<android.text.format.Time: int monthDay>;

        $i11 = $i9 + 1;

        r1.<android.text.format.Time: int monthDay> = $i11;

        virtualinvoke r1.<android.text.format.Time: long normalize(boolean)>(1);

        goto label3;

     label2:
        $i4 = r1.<android.text.format.Time: int weekDay>;

        if $i4 != 6 goto label3;

        if i1 != 6 goto label3;

        $i6 = r1.<android.text.format.Time: int monthDay>;

        $i7 = $i6 + 2;

        r1.<android.text.format.Time: int monthDay> = $i7;

        virtualinvoke r1.<android.text.format.Time: long normalize(boolean)>(1);

     label3:
        $i5 = virtualinvoke r1.<android.text.format.Time: int getWeekNumber()>();

        return $i5;
    }

    public static java.lang.String getDayOfWeekString(int, int, long, android.content.Context)
    {
        int i0, i1, $i4, $i5;
        long l2;
        android.content.Context r0;
        byte b3;
        java.lang.String r1, $r4, $r7, $r8, $r11, $r12, $r15, $r16, r17;
        com.android.calendar.CalendarUtils$TimeZoneUtils $r3, $r6, $r10, $r13;
        java.lang.Object[] $r5, $r9, $r14;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        r0 := @parameter3: android.content.Context;

        staticinvoke <com.android.calendar.Utils: java.lang.String getTimeZone(android.content.Context,java.lang.Runnable)>(r0, null);

        b3 = 2;

        if i0 != i1 goto label1;

        $r14 = newarray (java.lang.Object)[1];

        $r13 = <com.android.calendar.Utils: com.android.calendar.CalendarUtils$TimeZoneUtils mTZUtils>;

        $r15 = virtualinvoke $r13.<com.android.calendar.CalendarUtils$TimeZoneUtils: java.lang.String formatDateRange(android.content.Context,long,long,int)>(r0, l2, l2, b3);

        $r16 = virtualinvoke $r15.<java.lang.String: java.lang.String toString()>();

        $r14[0] = $r16;

        r1 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>(2131492956, $r14);

        goto label4;

     label1:
        $i4 = i1 - 1;

        if i0 != $i4 goto label2;

        $r9 = newarray (java.lang.Object)[1];

        $r10 = <com.android.calendar.Utils: com.android.calendar.CalendarUtils$TimeZoneUtils mTZUtils>;

        $r11 = virtualinvoke $r10.<com.android.calendar.CalendarUtils$TimeZoneUtils: java.lang.String formatDateRange(android.content.Context,long,long,int)>(r0, l2, l2, b3);

        $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String toString()>();

        $r9[0] = $r12;

        r1 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>(2131492957, $r9);

        goto label4;

     label2:
        $i5 = i1 + 1;

        if i0 != $i5 goto label3;

        $r5 = newarray (java.lang.Object)[1];

        $r6 = <com.android.calendar.Utils: com.android.calendar.CalendarUtils$TimeZoneUtils mTZUtils>;

        $r8 = virtualinvoke $r6.<com.android.calendar.CalendarUtils$TimeZoneUtils: java.lang.String formatDateRange(android.content.Context,long,long,int)>(r0, l2, l2, b3);

        $r7 = virtualinvoke $r8.<java.lang.String: java.lang.String toString()>();

        $r5[0] = $r7;

        r1 = virtualinvoke r0.<android.content.Context: java.lang.String getString(int,java.lang.Object[])>(2131492958, $r5);

        goto label4;

     label3:
        $r3 = <com.android.calendar.Utils: com.android.calendar.CalendarUtils$TimeZoneUtils mTZUtils>;

        $r4 = virtualinvoke $r3.<com.android.calendar.CalendarUtils$TimeZoneUtils: java.lang.String formatDateRange(android.content.Context,long,long,int)>(r0, l2, l2, b3);

        r1 = virtualinvoke $r4.<java.lang.String: java.lang.String toString()>();

     label4:
        r17 = virtualinvoke r1.<java.lang.String: java.lang.String toUpperCase()>();

        return r17;
    }

    public static void setMidnightUpdater(android.os.Handler, java.lang.Runnable, java.lang.String)
    {
        android.os.Handler r0;
        java.lang.Runnable r1;
        java.lang.String r2;
        long l0, l1;
        android.text.format.Time r3, $r4;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @parameter0: android.os.Handler;

        r1 := @parameter1: java.lang.Runnable;

        r2 := @parameter2: java.lang.String;

        if r0 == null goto label1;

        if r1 == null goto label1;

        if r2 != null goto label2;

     label1:
        return;

     label2:
        l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r4 = new android.text.format.Time;

        specialinvoke $r4.<android.text.format.Time: void <init>(java.lang.String)>(r2);

        r3 = $r4;

        virtualinvoke r3.<android.text.format.Time: void set(long)>(l0);

        $i2 = r3.<android.text.format.Time: int hour>;

        $i3 = $i2 * 3600;

        $i6 = 86400 - $i3;

        $i4 = r3.<android.text.format.Time: int minute>;

        $i5 = $i4 * 60;

        $i9 = $i6 - $i5;

        $i7 = r3.<android.text.format.Time: int second>;

        $i8 = $i9 - $i7;

        $i11 = $i8 + 1;

        $i10 = $i11 * 1000;

        l1 = (long) $i10;

        virtualinvoke r0.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>(r1);

        virtualinvoke r0.<android.os.Handler: boolean postDelayed(java.lang.Runnable,long)>(r1, l1);

        return;
    }

    public static void resetMidnightUpdater(android.os.Handler, java.lang.Runnable)
    {
        android.os.Handler r0;
        java.lang.Runnable r1;

        r0 := @parameter0: android.os.Handler;

        r1 := @parameter1: java.lang.Runnable;

        if r0 == null goto label1;

        if r1 != null goto label2;

     label1:
        return;

     label2:
        virtualinvoke r0.<android.os.Handler: void removeCallbacks(java.lang.Runnable)>(r1);

        return;
    }

    public static java.lang.String getDisplayedDatetime(long, long, long, java.lang.String, boolean, android.content.Context)
    {
        long l0, l1, l2, l5, l7, $l9, $l12, $l13, $l14;
        java.lang.String r0, r4, r16, r17;
        boolean z0, $z1, $z2, $z3;
        android.content.Context r1;
        short s3, s4, $s11;
        android.text.format.Time r2, $r5;
        android.content.res.Resources r3, $r6, $r12;
        int i6, i8, $i10, i15;
        java.lang.Object[] $r7, $r8, $r9;
        java.util.Formatter $r10, $r14, r15;
        java.lang.StringBuilder $r11;
        java.util.Locale $r13;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        r0 := @parameter3: java.lang.String;

        z0 := @parameter4: boolean;

        r1 := @parameter5: android.content.Context;

        s3 = 18;

        s4 = 1;

        $z1 = staticinvoke <android.text.format.DateFormat: boolean is24HourFormat(android.content.Context)>(r1);

        if $z1 == 0 goto label01;

        s4 = s4 | 128;

     label01:
        $r5 = new android.text.format.Time;

        specialinvoke $r5.<android.text.format.Time: void <init>(java.lang.String)>(r0);

        r2 = $r5;

        virtualinvoke r2.<android.text.format.Time: void set(long)>(l2);

        r3 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        r4 = null;

        if z0 == 0 goto label05;

        l5 = staticinvoke <com.android.calendar.Utils: long convertAlldayUtcToLocal(android.text.format.Time,long,java.lang.String)>(null, l0, r0);

        l7 = staticinvoke <com.android.calendar.Utils: long convertAlldayUtcToLocal(android.text.format.Time,long,java.lang.String)>(null, l1, r0);

        $l13 = r2.<android.text.format.Time: long gmtoff>;

        $z3 = staticinvoke <com.android.calendar.Utils: boolean singleDayEvent(long,long,long)>(l5, l7, $l13);

        if $z3 == 0 goto label03;

        $r12 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $l14 = r2.<android.text.format.Time: long gmtoff>;

        i8 = staticinvoke <com.android.calendar.Utils: int isTodayOrTomorrow(android.content.res.Resources,long,long,long)>($r12, l5, l2, $l14);

        if 1 != i8 goto label02;

        r4 = virtualinvoke r3.<android.content.res.Resources: java.lang.String getString(int)>(2131492870);

        goto label03;

     label02:
        if 2 != i8 goto label03;

        r4 = virtualinvoke r3.<android.content.res.Resources: java.lang.String getString(int)>(2131492871);

     label03:
        if r4 != null goto label04;

        $r10 = new java.util.Formatter;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(int)>(50);

        $r13 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        specialinvoke $r10.<java.util.Formatter: void <init>(java.lang.Appendable,java.util.Locale)>($r11, $r13);

        r15 = $r10;

        $r14 = staticinvoke <android.text.format.DateUtils: java.util.Formatter formatDateRange(android.content.Context,java.util.Formatter,long,long,int,java.lang.String)>(r1, r15, l0, l1, s3, "UTC");

        r4 = virtualinvoke $r14.<java.util.Formatter: java.lang.String toString()>();

     label04:
        goto label10;

     label05:
        $l9 = r2.<android.text.format.Time: long gmtoff>;

        $z2 = staticinvoke <com.android.calendar.Utils: boolean singleDayEvent(long,long,long)>(l0, l1, $l9);

        if $z2 == 0 goto label09;

        r16 = staticinvoke <com.android.calendar.Utils: java.lang.String formatDateRange(android.content.Context,long,long,int)>(r1, l0, l1, s4);

        $r6 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $l12 = r2.<android.text.format.Time: long gmtoff>;

        i6 = staticinvoke <com.android.calendar.Utils: int isTodayOrTomorrow(android.content.res.Resources,long,long,long)>($r6, l0, l2, $l12);

        if 1 != i6 goto label06;

        $r9 = newarray (java.lang.Object)[1];

        $r9[0] = r16;

        r4 = virtualinvoke r3.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(2131492872, $r9);

        goto label08;

     label06:
        if 2 != i6 goto label07;

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = r16;

        r4 = virtualinvoke r3.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(2131492873, $r7);

        goto label08;

     label07:
        r17 = staticinvoke <com.android.calendar.Utils: java.lang.String formatDateRange(android.content.Context,long,long,int)>(r1, l0, l1, s3);

        $r8 = newarray (java.lang.Object)[2];

        $r8[0] = r17;

        $r8[1] = r16;

        r4 = virtualinvoke r3.<android.content.res.Resources: java.lang.String getString(int,java.lang.Object[])>(2131492874, $r8);

     label08:
        goto label10;

     label09:
        $s11 = s3 | s4;

        $i10 = $s11 | 65536;

        i15 = $i10 | 32768;

        r4 = staticinvoke <com.android.calendar.Utils: java.lang.String formatDateRange(android.content.Context,long,long,int)>(r1, l0, l1, i15);

     label10:
        return r4;
    }

    public static java.lang.String getDisplayedTimezone(long, java.lang.String, java.lang.String)
    {
        long l0;
        java.lang.String r0, r1, r2, $r5;
        java.util.TimeZone r3;
        android.text.format.Time r4, $r6;
        boolean $z0, $z1, $z2;
        int $i1;

        l0 := @parameter0: long;

        r0 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.String;

        r2 = null;

        $z0 = staticinvoke <android.text.TextUtils: boolean equals(java.lang.CharSequence,java.lang.CharSequence)>(r0, r1);

        if $z0 != 0 goto label5;

        r3 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>(r0);

        if r3 == null goto label1;

        $r5 = virtualinvoke r3.<java.util.TimeZone: java.lang.String getID()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("GMT");

        if $z1 == 0 goto label2;

     label1:
        r2 = r0;

        goto label5;

     label2:
        $r6 = new android.text.format.Time;

        specialinvoke $r6.<android.text.format.Time: void <init>(java.lang.String)>(r0);

        r4 = $r6;

        virtualinvoke r4.<android.text.format.Time: void set(long)>(l0);

        $i1 = r4.<android.text.format.Time: int isDst>;

        if $i1 == 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        r2 = virtualinvoke r3.<java.util.TimeZone: java.lang.String getDisplayName(boolean,int)>($z2, 0);

     label5:
        return r2;
    }

    private static boolean singleDayEvent(long, long, long)
    {
        long l0, l1, l2, $l6;
        int i3, i4;
        byte $b5;
        boolean $z0;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        l2 := @parameter2: long;

        $b5 = l0 cmp l1;

        if $b5 != 0 goto label1;

        return 1;

     label1:
        i3 = staticinvoke <android.text.format.Time: int getJulianDay(long,long)>(l0, l2);

        $l6 = l1 - 1L;

        i4 = staticinvoke <android.text.format.Time: int getJulianDay(long,long)>($l6, l2);

        if i3 != i4 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private static int isTodayOrTomorrow(android.content.res.Resources, long, long, long)
    {
        android.content.res.Resources r0;
        long l0, l1, l2;
        int i3, i4, i5;

        r0 := @parameter0: android.content.res.Resources;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        l2 := @parameter3: long;

        i3 = staticinvoke <android.text.format.Time: int getJulianDay(long,long)>(l0, l2);

        i4 = staticinvoke <android.text.format.Time: int getJulianDay(long,long)>(l1, l2);

        i5 = i3 - i4;

        if i5 != 1 goto label1;

        return 2;

     label1:
        if i5 != 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public static android.content.Intent createEmailAttendeesIntent(android.content.res.Resources, java.lang.String, java.lang.String, java.util.List, java.util.List, java.lang.String)
    {
        android.content.res.Resources r0;
        java.lang.String r1, r2, r5, r8, r10, $r17, $r21, $r22, $r28, $r34, r37;
        java.util.List r3, r4, r6, r7;
        android.net.Uri$Builder r9, $r11;
        int i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1;
        android.content.Intent $r13, $r16, r39;
        android.net.Uri $r15;
        java.lang.StringBuilder $r18, $r31, $r32, $r33, r38;
        java.lang.Object $r20, $r24, $r30;
        java.lang.IllegalArgumentException $r35;
        java.util.Iterator r36;

        r0 := @parameter0: android.content.res.Resources;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.util.List;

        r4 := @parameter4: java.util.List;

        r5 := @parameter5: java.lang.String;

        r6 = r3;

        r7 = r4;

        $i1 = interfaceinvoke r3.<java.util.List: int size()>();

        if $i1 > 0 goto label02;

        $i5 = interfaceinvoke r4.<java.util.List: int size()>();

        if $i5 > 0 goto label01;

        $r35 = new java.lang.IllegalArgumentException;

        specialinvoke $r35.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Both toEmails and ccEmails are empty.");

        throw $r35;

     label01:
        r6 = r4;

        r7 = null;

     label02:
        r8 = null;

        if r1 == null goto label03;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke r0.<android.content.res.Resources: java.lang.String getString(int)>(2131492943);

        $r31 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r8 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

     label03:
        $r11 = new android.net.Uri$Builder;

        specialinvoke $r11.<android.net.Uri$Builder: void <init>()>();

        r9 = $r11;

        virtualinvoke r9.<android.net.Uri$Builder: android.net.Uri$Builder scheme(java.lang.String)>("mailto");

        $i2 = interfaceinvoke r6.<java.util.List: int size()>();

        if $i2 <= 1 goto label05;

        i0 = 1;

     label04:
        $i4 = interfaceinvoke r6.<java.util.List: int size()>();

        if i0 >= $i4 goto label05;

        $r30 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(i0);

        $r28 = (java.lang.String) $r30;

        virtualinvoke r9.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("to", $r28);

        i0 = i0 + 1;

        goto label04;

     label05:
        if r8 == null goto label06;

        virtualinvoke r9.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("subject", r8);

     label06:
        if r2 == null goto label07;

        virtualinvoke r9.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("body", r2);

     label07:
        if r7 == null goto label09;

        $i3 = interfaceinvoke r7.<java.util.List: int size()>();

        if $i3 <= 0 goto label09;

        r36 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z1 = interfaceinvoke r36.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label09;

        $r24 = interfaceinvoke r36.<java.util.Iterator: java.lang.Object next()>();

        r10 = (java.lang.String) $r24;

        virtualinvoke r9.<android.net.Uri$Builder: android.net.Uri$Builder appendQueryParameter(java.lang.String,java.lang.String)>("cc", r10);

        goto label08;

     label09:
        r37 = virtualinvoke r9.<android.net.Uri$Builder: java.lang.String toString()>();

        $z0 = virtualinvoke r37.<java.lang.String: boolean startsWith(java.lang.String)>("mailto:");

        if $z0 == 0 goto label10;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>(java.lang.String)>(r37);

        r38 = $r18;

        $r20 = interfaceinvoke r6.<java.util.List: java.lang.Object get(int)>(0);

        $r22 = (java.lang.String) $r20;

        $r21 = staticinvoke <android.net.Uri: java.lang.String encode(java.lang.String)>($r22);

        virtualinvoke r38.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.String)>(7, $r21);

        r37 = virtualinvoke r38.<java.lang.StringBuilder: java.lang.String toString()>();

     label10:
        $r13 = new android.content.Intent;

        $r15 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r37);

        specialinvoke $r13.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("android.intent.action.SENDTO", $r15);

        r39 = $r13;

        virtualinvoke r39.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("fromAccountString", r5);

        if r2 == null goto label11;

        virtualinvoke r39.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("android.intent.extra.TEXT", r2);

     label11:
        $r17 = virtualinvoke r0.<android.content.res.Resources: java.lang.String getString(int)>(2131492942);

        $r16 = staticinvoke <android.content.Intent: android.content.Intent createChooser(android.content.Intent,java.lang.CharSequence)>(r39, $r17);

        return $r16;
    }

    public static boolean isValidEmail(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $z0 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("calendar.google.com");

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public static boolean isEmailableFrom(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $z0 = staticinvoke <com.android.calendar.Utils: boolean isValidEmail(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(r1);

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public static void setTodayIcon(android.graphics.drawable.LayerDrawable, android.content.Context, java.lang.String)
    {
        android.graphics.drawable.LayerDrawable r0;
        android.content.Context r1;
        java.lang.String r2;
        com.android.calendar.DayOfMonthDrawable r3, $r6;
        android.graphics.drawable.Drawable r4;
        android.text.format.Time r5, $r7;
        int $i1;
        boolean $z1;

        r0 := @parameter0: android.graphics.drawable.LayerDrawable;

        r1 := @parameter1: android.content.Context;

        r2 := @parameter2: java.lang.String;

        r4 = virtualinvoke r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable findDrawableByLayerId(int)>(2131755256);

        if r4 == null goto label1;

        $z1 = r4 instanceof com.android.calendar.DayOfMonthDrawable;

        if $z1 == 0 goto label1;

        r3 = (com.android.calendar.DayOfMonthDrawable) r4;

        goto label2;

     label1:
        $r6 = new com.android.calendar.DayOfMonthDrawable;

        specialinvoke $r6.<com.android.calendar.DayOfMonthDrawable: void <init>(android.content.Context)>(r1);

        r3 = $r6;

     label2:
        $r7 = new android.text.format.Time;

        specialinvoke $r7.<android.text.format.Time: void <init>(java.lang.String)>(r2);

        r5 = $r7;

        virtualinvoke r5.<android.text.format.Time: void setToNow()>();

        virtualinvoke r5.<android.text.format.Time: long normalize(boolean)>(0);

        $i1 = r5.<android.text.format.Time: int monthDay>;

        virtualinvoke r3.<com.android.calendar.DayOfMonthDrawable: void setDayOfMonth(int)>($i1);

        virtualinvoke r0.<android.graphics.drawable.LayerDrawable: android.graphics.drawable.Drawable mutate()>();

        virtualinvoke r0.<android.graphics.drawable.LayerDrawable: boolean setDrawableByLayerId(int,android.graphics.drawable.Drawable)>(2131755256, r3);

        return;
    }

    public static android.content.BroadcastReceiver setTimeChangesReceiver(android.content.Context, java.lang.Runnable)
    {
        android.content.Context r0;
        java.lang.Runnable r1;
        android.content.IntentFilter r2, $r4;
        com.android.calendar.Utils$CalendarBroadcastReceiver r3, $r5;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: java.lang.Runnable;

        $r4 = new android.content.IntentFilter;

        specialinvoke $r4.<android.content.IntentFilter: void <init>()>();

        r2 = $r4;

        virtualinvoke r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.TIME_SET");

        virtualinvoke r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.DATE_CHANGED");

        virtualinvoke r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.TIMEZONE_CHANGED");

        virtualinvoke r2.<android.content.IntentFilter: void addAction(java.lang.String)>("android.intent.action.LOCALE_CHANGED");

        $r5 = new com.android.calendar.Utils$CalendarBroadcastReceiver;

        specialinvoke $r5.<com.android.calendar.Utils$CalendarBroadcastReceiver: void <init>(java.lang.Runnable)>(r1);

        r3 = $r5;

        virtualinvoke r0.<android.content.Context: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>(r3, r2);

        return r3;
    }

    public static void clearTimeChangesReceiver(android.content.Context, android.content.BroadcastReceiver)
    {
        android.content.Context r0;
        android.content.BroadcastReceiver r1;

        r0 := @parameter0: android.content.Context;

        r1 := @parameter1: android.content.BroadcastReceiver;

        virtualinvoke r0.<android.content.Context: void unregisterReceiver(android.content.BroadcastReceiver)>(r1);

        return;
    }

    public static java.lang.String[] getQuickResponses(android.content.Context)
    {
        android.content.Context r0;
        java.lang.String[] r1, $r2;
        android.content.res.Resources $r3;

        r0 := @parameter0: android.content.Context;

        $r2 = (java.lang.String[]) null;

        r1 = staticinvoke <com.android.calendar.Utils: java.lang.String[] getSharedPreference(android.content.Context,java.lang.String,java.lang.String[])>(r0, "preferences_quick_responses", $r2);

        if r1 != null goto label1;

        $r3 = virtualinvoke r0.<android.content.Context: android.content.res.Resources getResources()>();

        r1 = virtualinvoke $r3.<android.content.res.Resources: java.lang.String[] getStringArray(int)>(2131165212);

     label1:
        return r1;
    }

    public static java.lang.String getVersionCode(android.content.Context)
    {
        android.content.Context r0;
        java.lang.String $r2, $r3, $r5, $r7, $r12, $r14;
        android.content.pm.PackageManager $r4;
        android.content.pm.PackageInfo $r6;
        android.content.pm.PackageManager$NameNotFoundException $r8;
        java.lang.StringBuilder $r9, $r10, $r13;
        android.content.pm.ApplicationInfo $r11;

        r0 := @parameter0: android.content.Context;

        $r2 = <com.android.calendar.Utils: java.lang.String sVersion>;

        if $r2 != null goto label4;

     label1:
        $r4 = virtualinvoke r0.<android.content.Context: android.content.pm.PackageManager getPackageManager()>();

        $r5 = virtualinvoke r0.<android.content.Context: java.lang.String getPackageName()>();

        $r6 = virtualinvoke $r4.<android.content.pm.PackageManager: android.content.pm.PackageInfo getPackageInfo(java.lang.String,int)>($r5, 0);

        $r7 = $r6.<android.content.pm.PackageInfo: java.lang.String versionName>;

        <com.android.calendar.Utils: java.lang.String sVersion> = $r7;

     label2:
        goto label4;

     label3:
        $r8 := @caughtexception;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error finding package ");

        $r11 = virtualinvoke r0.<android.content.Context: android.content.pm.ApplicationInfo getApplicationInfo()>();

        $r12 = $r11.<android.content.pm.ApplicationInfo: java.lang.String packageName>;

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CalUtils", $r14);

     label4:
        $r3 = <com.android.calendar.Utils: java.lang.String sVersion>;

        return $r3;

        catch android.content.pm.PackageManager$NameNotFoundException from label1 to label2 with label3;
    }

    public static void startCalendarMetafeedSync(android.accounts.Account)
    {
        android.accounts.Account r0;
        android.os.Bundle r1, $r2;
        android.net.Uri $r3;
        java.lang.String $r4;

        r0 := @parameter0: android.accounts.Account;

        $r2 = new android.os.Bundle;

        specialinvoke $r2.<android.os.Bundle: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("force", 1);

        virtualinvoke r1.<android.os.Bundle: void putBoolean(java.lang.String,boolean)>("metafeedonly", 1);

        $r3 = <android.provider.CalendarContract$Calendars: android.net.Uri CONTENT_URI>;

        $r4 = virtualinvoke $r3.<android.net.Uri: java.lang.String getAuthority()>();

        staticinvoke <android.content.ContentResolver: void requestSync(android.accounts.Account,java.lang.String,android.os.Bundle)>(r0, $r4, r1);

        return;
    }

    public static android.text.Spannable extendedLinkify(java.lang.String, boolean)
    {
        java.lang.String r0, r2, $r14, $r16, $r20, $r22;
        boolean z0, $z1, $z2, $z4, $z5, $z6, $z7, $z8, $z11, z12;
        android.text.SpannableString r1, r28;
        android.text.style.URLSpan[] r3, r29, r31;
        int i0, i1, i2, i3, i4, i5, i6, i7, $i9, $i10, $i11, $i12, $i13, $i14, $i16, $i17, $i18, $i19, $i20, $i21, i22, i23;
        android.text.style.URLSpan r4, $r10, $r19, $r25, $r26, r33;
        java.lang.StringBuilder r5, $r11, $r12, $r13, $r15, $r18, $r21, $r23;
        char c8;
        java.util.regex.Pattern $r6, $r9, $r27;
        java.lang.Object[] $r7, $r8, $r24;
        java.util.regex.Matcher r30;
        int[] r32;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        r1 = staticinvoke <android.text.SpannableString: android.text.SpannableString valueOf(java.lang.CharSequence)>(r0);

        r2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("user.region", "US");

        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("US");

        if $z1 != 0 goto label03;

        staticinvoke <android.text.util.Linkify: boolean addLinks(android.text.Spannable,int)>(r1, 15);

        $i17 = interfaceinvoke r1.<android.text.Spannable: int length()>();

        $r24 = interfaceinvoke r1.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i17, class "android/text/style/URLSpan");

        r3 = (android.text.style.URLSpan[]) $r24;

        $i18 = lengthof r3;

        if $i18 != 1 goto label01;

        $r25 = r3[0];

        i0 = interfaceinvoke r1.<android.text.Spannable: int getSpanStart(java.lang.Object)>($r25);

        $r26 = r3[0];

        i1 = interfaceinvoke r1.<android.text.Spannable: int getSpanEnd(java.lang.Object)>($r26);

        $i19 = staticinvoke <com.android.calendar.Utils: int indexFirstNonWhitespaceChar(java.lang.CharSequence)>(r1);

        if i0 > $i19 goto label01;

        $i20 = staticinvoke <com.android.calendar.Utils: int indexLastNonWhitespaceChar(java.lang.CharSequence)>(r1);

        $i21 = $i20 + 1;

        if i1 < $i21 goto label01;

        return r1;

     label01:
        r28 = staticinvoke <android.text.SpannableString: android.text.SpannableString valueOf(java.lang.CharSequence)>(r0);

        if z0 == 0 goto label02;

        $z11 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>();

        if $z11 != 0 goto label02;

        $r27 = <com.android.calendar.Utils: java.util.regex.Pattern mWildcardPattern>;

        staticinvoke <android.text.util.Linkify: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String)>(r28, $r27, "geo:0,0?q=");

     label02:
        return r28;

     label03:
        z12 = staticinvoke <android.text.util.Linkify: boolean addLinks(android.text.Spannable,int)>(r1, 11);

        $i9 = interfaceinvoke r1.<android.text.Spannable: int length()>();

        $r7 = interfaceinvoke r1.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i9, class "android/text/style/URLSpan");

        r29 = (android.text.style.URLSpan[]) $r7;

        $r6 = <com.android.calendar.Utils: java.util.regex.Pattern COORD_PATTERN>;

        r30 = virtualinvoke $r6.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        i2 = 0;

     label04:
        $z2 = virtualinvoke r30.<java.util.regex.Matcher: boolean find()>();

        if $z2 == 0 goto label06;

        i3 = virtualinvoke r30.<java.util.regex.Matcher: int start()>();

        i4 = virtualinvoke r30.<java.util.regex.Matcher: int end()>();

        $z8 = staticinvoke <com.android.calendar.Utils: boolean spanWillOverlap(android.text.Spannable,android.text.style.URLSpan[],int,int)>(r1, r29, i3, i4);

        if $z8 == 0 goto label05;

        goto label04;

     label05:
        $r19 = new android.text.style.URLSpan;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("geo:0,0?q=");

        $r22 = virtualinvoke r30.<java.util.regex.Matcher: java.lang.String group()>();

        $r21 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r20 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<android.text.style.URLSpan: void <init>(java.lang.String)>($r20);

        r4 = $r19;

        interfaceinvoke r1.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>(r4, i3, i4, 33);

        i2 = i2 + 1;

        goto label04;

     label06:
        $i10 = interfaceinvoke r1.<android.text.Spannable: int length()>();

        $r8 = interfaceinvoke r1.<android.text.Spannable: java.lang.Object[] getSpans(int,int,java.lang.Class)>(0, $i10, class "android/text/style/URLSpan");

        r31 = (android.text.style.URLSpan[]) $r8;

        r32 = staticinvoke <com.android.calendar.Utils: int[] findNanpPhoneNumbers(java.lang.CharSequence)>(r0);

        i22 = 0;

        i23 = 0;

     label07:
        $i12 = lengthof r32;

        $i11 = $i12 / 2;

        if i23 >= $i11 goto label14;

        $i16 = i23 * 2;

        i5 = r32[$i16];

        $i13 = i23 * 2;

        $i14 = $i13 + 1;

        i6 = r32[$i14];

        $z6 = staticinvoke <com.android.calendar.Utils: boolean spanWillOverlap(android.text.Spannable,android.text.style.URLSpan[],int,int)>(r1, r31, i5, i6);

        if $z6 == 0 goto label08;

        goto label13;

     label08:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        r5 = $r12;

        i7 = i5;

     label09:
        if i7 >= i6 goto label12;

        c8 = interfaceinvoke r1.<android.text.Spannable: char charAt(int)>(i7);

        if c8 == 43 goto label10;

        $z7 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c8);

        if $z7 == 0 goto label11;

     label10:
        virtualinvoke r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c8);

     label11:
        i7 = i7 + 1;

        goto label09;

     label12:
        $r10 = new android.text.style.URLSpan;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("tel:");

        $r16 = virtualinvoke r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r13 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<android.text.style.URLSpan: void <init>(java.lang.String)>($r14);

        r33 = $r10;

        interfaceinvoke r1.<android.text.Spannable: void setSpan(java.lang.Object,int,int,int)>(r33, i5, i6, 33);

        i22 = i22 + 1;

     label13:
        i23 = i23 + 1;

        goto label07;

     label14:
        if z0 == 0 goto label16;

        $z4 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>();

        if $z4 != 0 goto label16;

        if z12 != 0 goto label16;

        if i22 != 0 goto label16;

        if i2 != 0 goto label16;

        $z5 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("CalUtils", 2);

        if $z5 == 0 goto label15;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("CalUtils", "No linkification matches, using geo default");

     label15:
        $r9 = <com.android.calendar.Utils: java.util.regex.Pattern mWildcardPattern>;

        staticinvoke <android.text.util.Linkify: boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String)>(r1, $r9, "geo:0,0?q=");

     label16:
        return r1;
    }

    private static int indexFirstNonWhitespaceChar(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        int i0, $i1;
        char $c2;
        boolean $z0;

        r0 := @parameter0: java.lang.CharSequence;

        i0 = 0;

     label1:
        $i1 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        if i0 >= $i1 goto label3;

        $c2 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i0);

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c2);

        if $z0 != 0 goto label2;

        return i0;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        return -1;
    }

    private static int indexLastNonWhitespaceChar(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        int i0, $i1;
        char $c2;
        boolean $z0;

        r0 := @parameter0: java.lang.CharSequence;

        $i1 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        i0 = $i1 - 1;

     label1:
        if i0 < 0 goto label3;

        $c2 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i0);

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c2);

        if $z0 != 0 goto label2;

        return i0;

     label2:
        i0 = i0 + -1;

        goto label1;

     label3:
        return -1;
    }

    static int[] findNanpPhoneNumbers(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        java.util.ArrayList r1, $r2;
        int i0, i1, i2, i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.Object $r3;
        java.lang.Integer $r4, $r5, $r6;
        char $c9, $c10;
        boolean $z0, $z1;
        int[] $r7, r8;

        r0 := @parameter0: java.lang.CharSequence;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r1 = $r2;

        i0 = 0;

        $i4 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        $i5 = $i4 - 7;

        i1 = $i5 + 1;

        if i1 >= 0 goto label1;

        $r7 = newarray (int)[0];

        return $r7;

     label1:
        if i0 >= i1 goto label7;

     label2:
        $c9 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i0);

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c9);

        if $z0 == 0 goto label3;

        if i0 >= i1 goto label3;

        i0 = i0 + 1;

        goto label2;

     label3:
        if i0 != i1 goto label4;

        goto label7;

     label4:
        i2 = staticinvoke <com.android.calendar.Utils: int findNanpMatchEnd(java.lang.CharSequence,int)>(r0, i0);

        if i2 <= i0 goto label5;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        i0 = i2;

        goto label6;

     label5:
        $c10 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i0);

        $z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c10);

        if $z1 != 0 goto label6;

        if i0 >= i1 goto label6;

        i0 = i0 + 1;

        goto label5;

     label6:
        goto label1;

     label7:
        $i6 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        r8 = newarray (int)[$i6];

        $i7 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        i3 = $i7 - 1;

     label8:
        if i3 < 0 goto label9;

        $r3 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i3);

        $r4 = (java.lang.Integer) $r3;

        $i8 = virtualinvoke $r4.<java.lang.Integer: int intValue()>();

        r8[i3] = $i8;

        i3 = i3 + -1;

        goto label8;

     label9:
        return r8;
    }

    private static int findNanpMatchEnd(java.lang.CharSequence, int)
    {
        java.lang.CharSequence r0, $r2;
        int i0, i1, i2, i3, $i6, $i7, $i8, $i9;
        char c4, c5;
        boolean z0, $z1, $z2, $z3;
        java.lang.String $r1, $r3;

        r0 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        $i6 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        $i7 = i0 + 4;

        if $i6 <= $i7 goto label01;

        $i9 = i0 + 4;

        $r2 = interfaceinvoke r0.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(i0, $i9);

        $r3 = interfaceinvoke $r2.<java.lang.CharSequence: java.lang.String toString()>();

        $z3 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("tel:");

        if $z3 == 0 goto label01;

        i0 = i0 + 4;

     label01:
        i1 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

        i2 = i0;

        i3 = 0;

        c4 = 120;

        z0 = 0;

     label02:
        if i2 > i1 goto label14;

        if i2 >= i1 goto label03;

        c5 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i2);

        goto label04;

     label03:
        c5 = 27;

     label04:
        $z1 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c5);

        if $z1 == 0 goto label06;

        if i3 != 0 goto label05;

        c4 = c5;

     label05:
        i3 = i3 + 1;

        if i3 <= 11 goto label13;

        return -1;

     label06:
        $z2 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>(c5);

        if $z2 == 0 goto label12;

        if c4 != 49 goto label07;

        if i3 == 4 goto label08;

     label07:
        if i3 != 3 goto label09;

     label08:
        z0 = 1;

        goto label13;

     label09:
        if c4 != 49 goto label10;

        if i3 != 1 goto label10;

        goto label13;

     label10:
        if z0 == 0 goto label14;

        if c4 != 49 goto label11;

        if i3 == 7 goto label13;

     label11:
        if i3 != 6 goto label14;

        goto label13;

     label12:
        $r1 = "()+-*#.";

        $i8 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(c5);

        if $i8 != -1 goto label13;

        goto label14;

     label13:
        i2 = i2 + 1;

        goto label02;

     label14:
        if c4 == 49 goto label15;

        if i3 == 7 goto label16;

        if i3 == 10 goto label16;

     label15:
        if c4 != 49 goto label17;

        if i3 != 11 goto label17;

     label16:
        return i2;

     label17:
        return -1;
    }

    private static boolean spanWillOverlap(android.text.Spannable, android.text.style.URLSpan[], int, int)
    {
        android.text.Spannable r0;
        android.text.style.URLSpan[] r1, r2;
        int i0, i1, i2, i3, i4, i5;
        android.text.style.URLSpan r3;
        java.lang.CharSequence r4;
        boolean $z0;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @parameter0: android.text.Spannable;

        r1 := @parameter1: android.text.style.URLSpan[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        if i0 != i1 goto label1;

        return 0;

     label1:
        r2 = r1;

        i2 = lengthof r2;

        i3 = 0;

     label2:
        if i3 >= i2 goto label7;

        r3 = r2[i3];

        i4 = interfaceinvoke r0.<android.text.Spannable: int getSpanStart(java.lang.Object)>(r3);

        i5 = interfaceinvoke r0.<android.text.Spannable: int getSpanEnd(java.lang.Object)>(r3);

        if i0 < i4 goto label3;

        if i0 < i5 goto label4;

     label3:
        if i1 <= i4 goto label6;

        if i1 > i5 goto label6;

     label4:
        $z0 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("CalUtils", 2);

        if $z0 == 0 goto label5;

        r4 = interfaceinvoke r0.<android.text.Spannable: java.lang.CharSequence subSequence(int,int)>(i0, i1);

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not linkifying ");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r7 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as phone number due to overlap");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("CalUtils", $r9);

     label5:
        return 1;

     label6:
        i3 = i3 + 1;

        goto label2;

     label7:
        return 0;
    }

    public static java.util.ArrayList readRemindersFromBundle(android.os.Bundle)
    {
        android.os.Bundle r0;
        java.util.ArrayList r1, r2, r3, $r12;
        java.lang.String r4, $r6, $r7, $r10;
        int i0, i1, i2, $i4, $i5, i7;
        java.lang.Object[] $r5, $r8;
        java.lang.Integer $r9, $r11, $r13, $r17;
        java.lang.Object $r14, $r15;
        com.android.calendar.CalendarEventModel$ReminderEntry $r16;

        r0 := @parameter0: android.os.Bundle;

        r1 = null;

        r2 = virtualinvoke r0.<android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)>("key_reminder_minutes");

        r3 = virtualinvoke r0.<android.os.Bundle: java.util.ArrayList getIntegerArrayList(java.lang.String)>("key_reminder_methods");

        if r2 == null goto label01;

        if r3 != null goto label06;

     label01:
        if r2 != null goto label02;

        if r3 == null goto label05;

     label02:
        if r2 != null goto label03;

        $r7 = "reminderMinutes";

        goto label04;

     label03:
        $r7 = "reminderMethods";

     label04:
        r4 = $r7;

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = r4;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Error resolving reminders: %s was null", $r5);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CalUtils", $r6);

     label05:
        return null;

     label06:
        i7 = virtualinvoke r2.<java.util.ArrayList: int size()>();

        $i4 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        if i7 != $i4 goto label09;

        $r12 = new java.util.ArrayList;

        specialinvoke $r12.<java.util.ArrayList: void <init>(int)>(i7);

        r1 = $r12;

        i0 = 0;

     label07:
        if i0 >= i7 goto label08;

        $r14 = virtualinvoke r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r13 = (java.lang.Integer) $r14;

        i1 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

        $r15 = virtualinvoke r3.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        $r17 = (java.lang.Integer) $r15;

        i2 = virtualinvoke $r17.<java.lang.Integer: int intValue()>();

        $r16 = staticinvoke <com.android.calendar.CalendarEventModel$ReminderEntry: com.android.calendar.CalendarEventModel$ReminderEntry valueOf(int,int)>(i1, i2);

        virtualinvoke r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r16);

        i0 = i0 + 1;

        goto label07;

     label08:
        goto label10;

     label09:
        $r8 = newarray (java.lang.Object)[2];

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i7);

        $r8[0] = $r9;

        $i5 = virtualinvoke r3.<java.util.ArrayList: int size()>();

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        $r8[1] = $r11;

        $r10 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Error resolving reminders. Found %d reminderMinutes, but %d reminderMethods.", $r8);

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("CalUtils", $r10);

     label10:
        return r1;
    }

    static void <clinit>()
    {
        int $i0, $i1;
        com.android.calendar.CalendarUtils$TimeZoneUtils $r0;
        java.util.regex.Pattern $r1, $r2;

        <com.android.calendar.Utils: int NONE> = 0;

        <com.android.calendar.Utils: int TOMORROW> = 2;

        <com.android.calendar.Utils: int TODAY> = 1;

        <com.android.calendar.Utils: int NANP_MAX_DIGITS> = 11;

        <com.android.calendar.Utils: int NANP_MIN_DIGITS> = 7;

        <com.android.calendar.Utils: java.lang.String NANP_ALLOWED_SYMBOLS> = "()+-*#.";

        <com.android.calendar.Utils: java.lang.String COORD_DECIMAL_PATTERN> = "[+-]?[1-9]?[0-9](\\.[0-9]+)(\u00b0)?(\\s)*,(\\s)*[+-]?(1)?[0-9]?[0-9](\\.[0-9]+)(\u00b0)?";

        <com.android.calendar.Utils: java.lang.String COORD_DECIMAL_LONGITUDE> = "[+-]?(1)?[0-9]?[0-9](\\.[0-9]+)(\u00b0)?";

        <com.android.calendar.Utils: java.lang.String COORD_DECIMAL_LATITUDE> = "[+-]?[1-9]?[0-9](\\.[0-9]+)(\u00b0)?";

        <com.android.calendar.Utils: java.lang.String COORD_DEGREES_PATTERN> = "([-+NnSs](\\s)*)?[1-9]?[0-9](\u00b0)(\\s)*([1-5]?[0-9]\')?(\\s)*([1-5]?[0-9](\\.[0-9]+)?\")?((\\s)*[NnSs])?(\\s)*,(\\s)*([-+EeWw](\\s)*)?(1)?[0-9]?[0-9](\u00b0)(\\s)*([1-5]?[0-9]\')?(\\s)*([1-5]?[0-9](\\.[0-9]+)?\")?((\\s)*[EeWw])?";

        <com.android.calendar.Utils: java.lang.String COORD_DEGREES_LONGITUDE> = "([-+EeWw](\\s)*)?(1)?[0-9]?[0-9](\u00b0)(\\s)*([1-5]?[0-9]\')?(\\s)*([1-5]?[0-9](\\.[0-9]+)?\")?((\\s)*[EeWw])?";

        <com.android.calendar.Utils: java.lang.String COORD_DEGREES_LATITUDE> = "([-+NnSs](\\s)*)?[1-9]?[0-9](\u00b0)(\\s)*([1-5]?[0-9]\')?(\\s)*([1-5]?[0-9](\\.[0-9]+)?\")?((\\s)*[NnSs])?";

        <com.android.calendar.Utils: java.lang.String MACHINE_GENERATED_ADDRESS> = "calendar.google.com";

        <com.android.calendar.Utils: java.lang.String APPWIDGET_DATA_TYPE> = "vnd.android.data/update";

        <com.android.calendar.Utils: java.lang.String KEY_ALERTS_VIBRATE_WHEN> = "preferences_alerts_vibrateWhen";

        <com.android.calendar.Utils: java.lang.String KEY_QUICK_RESPONSES> = "preferences_quick_responses";

        <com.android.calendar.Utils: java.lang.String SHARED_PREFS_NAME> = "com.android.calendar_preferences";

        <com.android.calendar.Utils: int YEAR_MAX> = 2036;

        <com.android.calendar.Utils: int YEAR_MIN> = 1970;

        <com.android.calendar.Utils: int WEEK_IN_MINUTES> = 10080;

        <com.android.calendar.Utils: int DAY_IN_MINUTES> = 1440;

        <com.android.calendar.Utils: float INTENSITY_ADJUST> = 0.8F;

        <com.android.calendar.Utils: float SATURATION_ADJUST> = 1.3F;

        <com.android.calendar.Utils: int DECLINED_EVENT_TEXT_ALPHA> = 192;

        <com.android.calendar.Utils: int DECLINED_EVENT_ALPHA> = 102;

        <com.android.calendar.Utils: int MONDAY_BEFORE_JULIAN_EPOCH> = 2440585;

        <com.android.calendar.Utils: java.lang.String INTENT_KEY_HOME> = "KEY_HOME";

        <com.android.calendar.Utils: java.lang.String INTENT_VALUE_VIEW_TYPE_DAY> = "DAY";

        <com.android.calendar.Utils: java.lang.String INTENT_KEY_VIEW_TYPE> = "VIEW";

        <com.android.calendar.Utils: java.lang.String INTENT_KEY_DETAIL_VIEW> = "DETAIL_VIEW";

        <com.android.calendar.Utils: java.lang.String CLOSE_EMAIL_MARKER> = ">";

        <com.android.calendar.Utils: java.lang.String OPEN_EMAIL_MARKER> = " <";

        <com.android.calendar.Utils: int DONE_EXIT> = 1;

        <com.android.calendar.Utils: int DONE_DELETE> = 4;

        <com.android.calendar.Utils: int DONE_SAVE> = 2;

        <com.android.calendar.Utils: int DONE_REVERT> = 1;

        <com.android.calendar.Utils: int MODIFY_ALL> = 3;

        <com.android.calendar.Utils: int MODIFY_ALL_FOLLOWING> = 2;

        <com.android.calendar.Utils: int MODIFY_SELECTED> = 1;

        <com.android.calendar.Utils: int MODIFY_UNINITIALIZED> = 0;

        <com.android.calendar.Utils: long UNDO_DELAY> = 0L;

        <com.android.calendar.Utils: java.lang.String TAG> = "CalUtils";

        <com.android.calendar.Utils: boolean DEBUG> = 0;

        <com.android.calendar.Utils: int WORK_DAY_MINUTES> = 840;

        <com.android.calendar.Utils: int WORK_DAY_START_MINUTES> = 360;

        <com.android.calendar.Utils: int WORK_DAY_END_MINUTES> = 1200;

        $i0 = <com.android.calendar.Utils: int WORK_DAY_END_MINUTES>;

        $i1 = 1440 - $i0;

        <com.android.calendar.Utils: int WORK_DAY_END_LENGTH> = $i1;

        <com.android.calendar.Utils: int CONFLICT_COLOR> = -16777216;

        <com.android.calendar.Utils: boolean mMinutesLoaded> = 0;

        $r0 = new com.android.calendar.CalendarUtils$TimeZoneUtils;

        specialinvoke $r0.<com.android.calendar.CalendarUtils$TimeZoneUtils: void <init>(java.lang.String)>("com.android.calendar_preferences");

        <com.android.calendar.Utils: com.android.calendar.CalendarUtils$TimeZoneUtils mTZUtils> = $r0;

        <com.android.calendar.Utils: boolean mAllowWeekForDetailView> = 0;

        <com.android.calendar.Utils: long mTardis> = 0L;

        <com.android.calendar.Utils: java.lang.String sVersion> = null;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^.*$");

        <com.android.calendar.Utils: java.util.regex.Pattern mWildcardPattern> = $r1;

        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("([-+NnSs](\\s)*)?[1-9]?[0-9](\u00b0)(\\s)*([1-5]?[0-9]\')?(\\s)*([1-5]?[0-9](\\.[0-9]+)?\")?((\\s)*[NnSs])?(\\s)*,(\\s)*([-+EeWw](\\s)*)?(1)?[0-9]?[0-9](\u00b0)(\\s)*([1-5]?[0-9]\')?(\\s)*([1-5]?[0-9](\\.[0-9]+)?\")?((\\s)*[EeWw])?|[+-]?[1-9]?[0-9](\\.[0-9]+)(\u00b0)?(\\s)*,(\\s)*[+-]?(1)?[0-9]?[0-9](\\.[0-9]+)(\u00b0)?");

        <com.android.calendar.Utils: java.util.regex.Pattern COORD_PATTERN> = $r2;

        return;
    }
}
