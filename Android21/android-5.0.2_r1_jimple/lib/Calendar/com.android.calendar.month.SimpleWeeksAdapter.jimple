public class com.android.calendar.month.SimpleWeeksAdapter extends android.widget.BaseAdapter implements android.view.View$OnTouchListener
{
    private static final java.lang.String TAG;
    public static final java.lang.String WEEK_PARAMS_NUM_WEEKS;
    public static final java.lang.String WEEK_PARAMS_FOCUS_MONTH;
    public static final java.lang.String WEEK_PARAMS_SHOW_WEEK;
    public static final java.lang.String WEEK_PARAMS_WEEK_START;
    public static final java.lang.String WEEK_PARAMS_JULIAN_DAY;
    public static final java.lang.String WEEK_PARAMS_DAYS_PER_WEEK;
    protected static final int WEEK_COUNT;
    protected static int DEFAULT_NUM_WEEKS;
    protected static int DEFAULT_MONTH_FOCUS;
    protected static int DEFAULT_DAYS_PER_WEEK;
    protected static int DEFAULT_WEEK_HEIGHT;
    protected static int WEEK_7_OVERHANG_HEIGHT;
    protected static float mScale;
    protected android.content.Context mContext;
    protected android.text.format.Time mSelectedDay;
    protected int mSelectedWeek;
    protected int mFirstDayOfWeek;
    protected boolean mShowWeekNumber;
    protected android.view.GestureDetector mGestureDetector;
    protected int mNumWeeks;
    protected int mDaysPerWeek;
    protected int mFocusMonth;
    android.widget.ListView mListView;

    public void <init>(android.content.Context, java.util.HashMap)
    {
        com.android.calendar.month.SimpleWeeksAdapter r0;
        android.content.Context r1;
        java.util.HashMap r2;
        java.util.Calendar r3;
        int $i0, $i1, $i2, $i3, $i4, $i7, $i8;
        java.util.Locale $r4;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        byte $b5, $b6;
        android.content.res.Resources $r5;
        android.util.DisplayMetrics $r6;

        r0 := @this: com.android.calendar.month.SimpleWeeksAdapter;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: java.util.HashMap;

        specialinvoke r0.<android.widget.BaseAdapter: void <init>()>();

        r0.<com.android.calendar.month.SimpleWeeksAdapter: boolean mShowWeekNumber> = 0;

        $i0 = <com.android.calendar.month.SimpleWeeksAdapter: int DEFAULT_NUM_WEEKS>;

        r0.<com.android.calendar.month.SimpleWeeksAdapter: int mNumWeeks> = $i0;

        $i1 = <com.android.calendar.month.SimpleWeeksAdapter: int DEFAULT_DAYS_PER_WEEK>;

        r0.<com.android.calendar.month.SimpleWeeksAdapter: int mDaysPerWeek> = $i1;

        $i2 = <com.android.calendar.month.SimpleWeeksAdapter: int DEFAULT_MONTH_FOCUS>;

        r0.<com.android.calendar.month.SimpleWeeksAdapter: int mFocusMonth> = $i2;

        r0.<com.android.calendar.month.SimpleWeeksAdapter: android.content.Context mContext> = r1;

        $r4 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.Locale)>($r4);

        $i3 = virtualinvoke r3.<java.util.Calendar: int getFirstDayOfWeek()>();

        $i4 = $i3 - 1;

        r0.<com.android.calendar.month.SimpleWeeksAdapter: int mFirstDayOfWeek> = $i4;

        $f0 = <com.android.calendar.month.SimpleWeeksAdapter: float mScale>;

        $b5 = $f0 cmpl 0.0F;

        if $b5 != 0 goto label1;

        $r5 = virtualinvoke r1.<android.content.Context: android.content.res.Resources getResources()>();

        $r6 = virtualinvoke $r5.<android.content.res.Resources: android.util.DisplayMetrics getDisplayMetrics()>();

        $f1 = $r6.<android.util.DisplayMetrics: float density>;

        <com.android.calendar.month.SimpleWeeksAdapter: float mScale> = $f1;

        $f2 = <com.android.calendar.month.SimpleWeeksAdapter: float mScale>;

        $b6 = $f2 cmpl 1.0F;

        if $b6 == 0 goto label1;

        $i7 = <com.android.calendar.month.SimpleWeeksAdapter: int WEEK_7_OVERHANG_HEIGHT>;

        $f5 = (float) $i7;

        $f3 = <com.android.calendar.month.SimpleWeeksAdapter: float mScale>;

        $f4 = $f5 * $f3;

        $i8 = (int) $f4;

        <com.android.calendar.month.SimpleWeeksAdapter: int WEEK_7_OVERHANG_HEIGHT> = $i8;

     label1:
        virtualinvoke r0.<com.android.calendar.month.SimpleWeeksAdapter: void init()>();

        virtualinvoke r0.<com.android.calendar.month.SimpleWeeksAdapter: void updateParams(java.util.HashMap)>(r2);

        return;
    }

    protected void init()
    {
        com.android.calendar.month.SimpleWeeksAdapter r0;
        android.view.GestureDetector $r1;
        com.android.calendar.month.SimpleWeeksAdapter$CalendarGestureListener $r2;
        android.content.Context $r3;
        android.text.format.Time $r4, $r5;

        r0 := @this: com.android.calendar.month.SimpleWeeksAdapter;

        $r1 = new android.view.GestureDetector;

        $r3 = r0.<com.android.calendar.month.SimpleWeeksAdapter: android.content.Context mContext>;

        $r2 = new com.android.calendar.month.SimpleWeeksAdapter$CalendarGestureListener;

        specialinvoke $r2.<com.android.calendar.month.SimpleWeeksAdapter$CalendarGestureListener: void <init>(com.android.calendar.month.SimpleWeeksAdapter)>(r0);

        specialinvoke $r1.<android.view.GestureDetector: void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener)>($r3, $r2);

        r0.<com.android.calendar.month.SimpleWeeksAdapter: android.view.GestureDetector mGestureDetector> = $r1;

        $r4 = new android.text.format.Time;

        specialinvoke $r4.<android.text.format.Time: void <init>()>();

        r0.<com.android.calendar.month.SimpleWeeksAdapter: android.text.format.Time mSelectedDay> = $r4;

        $r5 = r0.<com.android.calendar.month.SimpleWeeksAdapter: android.text.format.Time mSelectedDay>;

        virtualinvoke $r5.<android.text.format.Time: void setToNow()>();

        return;
    }

    public void updateParams(java.util.HashMap)
    {
        com.android.calendar.month.SimpleWeeksAdapter r0;
        java.util.HashMap r1;
        int i0, $i1, $i2, $i4, $i5, $i6, $i7, $i8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.Object $r2, $r4, $r7, $r10, $r12, $r13;
        java.lang.Integer $r3, $r5, $r8, $r9, $r11, $r14;
        android.text.format.Time $r6;

        r0 := @this: com.android.calendar.month.SimpleWeeksAdapter;

        r1 := @parameter0: java.util.HashMap;

        if r1 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("MonthByWeek", "WeekParameters are null! Cannot update adapter.");

        return;

     label1:
        $z0 = virtualinvoke r1.<java.util.HashMap: boolean containsKey(java.lang.Object)>("focus_month");

        if $z0 == 0 goto label2;

        $r13 = virtualinvoke r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("focus_month");

        $r14 = (java.lang.Integer) $r13;

        $i8 = virtualinvoke $r14.<java.lang.Integer: int intValue()>();

        r0.<com.android.calendar.month.SimpleWeeksAdapter: int mFocusMonth> = $i8;

     label2:
        $z1 = virtualinvoke r1.<java.util.HashMap: boolean containsKey(java.lang.Object)>("focus_month");

        if $z1 == 0 goto label3;

        $r12 = virtualinvoke r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("num_weeks");

        $r11 = (java.lang.Integer) $r12;

        $i7 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();

        r0.<com.android.calendar.month.SimpleWeeksAdapter: int mNumWeeks> = $i7;

     label3:
        $z2 = virtualinvoke r1.<java.util.HashMap: boolean containsKey(java.lang.Object)>("week_numbers");

        if $z2 == 0 goto label6;

        $r10 = virtualinvoke r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("week_numbers");

        $r9 = (java.lang.Integer) $r10;

        $i6 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        if $i6 == 0 goto label4;

        $z6 = 1;

        goto label5;

     label4:
        $z6 = 0;

     label5:
        r0.<com.android.calendar.month.SimpleWeeksAdapter: boolean mShowWeekNumber> = $z6;

     label6:
        $z3 = virtualinvoke r1.<java.util.HashMap: boolean containsKey(java.lang.Object)>("week_start");

        if $z3 == 0 goto label7;

        $r7 = virtualinvoke r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("week_start");

        $r8 = (java.lang.Integer) $r7;

        $i5 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        r0.<com.android.calendar.month.SimpleWeeksAdapter: int mFirstDayOfWeek> = $i5;

     label7:
        $z4 = virtualinvoke r1.<java.util.HashMap: boolean containsKey(java.lang.Object)>("selected_day");

        if $z4 == 0 goto label8;

        $r4 = virtualinvoke r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("selected_day");

        $r5 = (java.lang.Integer) $r4;

        i0 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        $r6 = r0.<com.android.calendar.month.SimpleWeeksAdapter: android.text.format.Time mSelectedDay>;

        virtualinvoke $r6.<android.text.format.Time: long setJulianDay(int)>(i0);

        $i2 = r0.<com.android.calendar.month.SimpleWeeksAdapter: int mFirstDayOfWeek>;

        $i4 = staticinvoke <com.android.calendar.Utils: int getWeeksSinceEpochFromJulianDay(int,int)>(i0, $i2);

        r0.<com.android.calendar.month.SimpleWeeksAdapter: int mSelectedWeek> = $i4;

     label8:
        $z5 = virtualinvoke r1.<java.util.HashMap: boolean containsKey(java.lang.Object)>("days_per_week");

        if $z5 == 0 goto label9;

        $r2 = virtualinvoke r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>("days_per_week");

        $r3 = (java.lang.Integer) $r2;

        $i1 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        r0.<com.android.calendar.month.SimpleWeeksAdapter: int mDaysPerWeek> = $i1;

     label9:
        virtualinvoke r0.<com.android.calendar.month.SimpleWeeksAdapter: void refresh()>();

        return;
    }

    public void setSelectedDay(android.text.format.Time)
    {
        com.android.calendar.month.SimpleWeeksAdapter r0;
        android.text.format.Time r1, $r2, $r3, $r4;
        long l0, $l1;
        int $i2, $i3, $i4;

        r0 := @this: com.android.calendar.month.SimpleWeeksAdapter;

        r1 := @parameter0: android.text.format.Time;

        $r2 = r0.<com.android.calendar.month.SimpleWeeksAdapter: android.text.format.Time mSelectedDay>;

        virtualinvoke $r2.<android.text.format.Time: void set(android.text.format.Time)>(r1);

        $r3 = r0.<com.android.calendar.month.SimpleWeeksAdapter: android.text.format.Time mSelectedDay>;

        l0 = virtualinvoke $r3.<android.text.format.Time: long normalize(boolean)>(1);

        $r4 = r0.<com.android.calendar.month.SimpleWeeksAdapter: android.text.format.Time mSelectedDay>;

        $l1 = $r4.<android.text.format.Time: long gmtoff>;

        $i2 = staticinvoke <android.text.format.Time: int getJulianDay(long,long)>(l0, $l1);

        $i3 = r0.<com.android.calendar.month.SimpleWeeksAdapter: int mFirstDayOfWeek>;

        $i4 = staticinvoke <com.android.calendar.Utils: int getWeeksSinceEpochFromJulianDay(int,int)>($i2, $i3);

        r0.<com.android.calendar.month.SimpleWeeksAdapter: int mSelectedWeek> = $i4;

        virtualinvoke r0.<com.android.calendar.month.SimpleWeeksAdapter: void notifyDataSetChanged()>();

        return;
    }

    public android.text.format.Time getSelectedDay()
    {
        com.android.calendar.month.SimpleWeeksAdapter r0;
        android.text.format.Time $r1;

        r0 := @this: com.android.calendar.month.SimpleWeeksAdapter;

        $r1 = r0.<com.android.calendar.month.SimpleWeeksAdapter: android.text.format.Time mSelectedDay>;

        return $r1;
    }

    protected void refresh()
    {
        com.android.calendar.month.SimpleWeeksAdapter r0;

        r0 := @this: com.android.calendar.month.SimpleWeeksAdapter;

        virtualinvoke r0.<com.android.calendar.month.SimpleWeeksAdapter: void notifyDataSetChanged()>();

        return;
    }

    public int getCount()
    {
        com.android.calendar.month.SimpleWeeksAdapter r0;

        r0 := @this: com.android.calendar.month.SimpleWeeksAdapter;

        return 3497;
    }

    public java.lang.Object getItem(int)
    {
        com.android.calendar.month.SimpleWeeksAdapter r0;
        int i0;

        r0 := @this: com.android.calendar.month.SimpleWeeksAdapter;

        i0 := @parameter0: int;

        return null;
    }

    public long getItemId(int)
    {
        com.android.calendar.month.SimpleWeeksAdapter r0;
        int i0;
        long $l1;

        r0 := @this: com.android.calendar.month.SimpleWeeksAdapter;

        i0 := @parameter0: int;

        $l1 = (long) i0;

        return $l1;
    }

    public android.view.View getView(int, android.view.View, android.view.ViewGroup)
    {
        com.android.calendar.month.SimpleWeeksAdapter r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i11;
        android.view.View r1;
        android.view.ViewGroup r2;
        com.android.calendar.month.SimpleWeekView r3, $r6;
        java.util.HashMap r4, $r28;
        android.widget.AbsListView$LayoutParams r5, $r8;
        android.content.Context $r7;
        java.lang.Integer $r9, $r12, $r15, $r17, $r18, $r19, $r21;
        boolean $z0;
        java.lang.String $r23;
        byte $b10;
        android.text.format.Time $r25, $r27;
        java.lang.Object $r26;

        r0 := @this: com.android.calendar.month.SimpleWeeksAdapter;

        i0 := @parameter0: int;

        r1 := @parameter1: android.view.View;

        r2 := @parameter2: android.view.ViewGroup;

        r4 = null;

        if r1 == null goto label1;

        r3 = (com.android.calendar.month.SimpleWeekView) r1;

        $r26 = virtualinvoke r3.<com.android.calendar.month.SimpleWeekView: java.lang.Object getTag()>();

        r4 = (java.util.HashMap) $r26;

        goto label2;

     label1:
        $r6 = new com.android.calendar.month.SimpleWeekView;

        $r7 = r0.<com.android.calendar.month.SimpleWeeksAdapter: android.content.Context mContext>;

        specialinvoke $r6.<com.android.calendar.month.SimpleWeekView: void <init>(android.content.Context)>($r7);

        r3 = $r6;

        $r8 = new android.widget.AbsListView$LayoutParams;

        specialinvoke $r8.<android.widget.AbsListView$LayoutParams: void <init>(int,int)>(-1, -1);

        r5 = $r8;

        virtualinvoke r3.<com.android.calendar.month.SimpleWeekView: void setLayoutParams(android.view.ViewGroup$LayoutParams)>(r5);

        virtualinvoke r3.<com.android.calendar.month.SimpleWeekView: void setClickable(boolean)>(1);

        virtualinvoke r3.<com.android.calendar.month.SimpleWeekView: void setOnTouchListener(android.view.View$OnTouchListener)>(r0);

     label2:
        if r4 != null goto label3;

        $r28 = new java.util.HashMap;

        specialinvoke $r28.<java.util.HashMap: void <init>()>();

        r4 = $r28;

     label3:
        virtualinvoke r4.<java.util.HashMap: void clear()>();

        i11 = -1;

        $i1 = r0.<com.android.calendar.month.SimpleWeeksAdapter: int mSelectedWeek>;

        if $i1 != i0 goto label4;

        $r27 = r0.<com.android.calendar.month.SimpleWeeksAdapter: android.text.format.Time mSelectedDay>;

        i11 = $r27.<android.text.format.Time: int weekDay>;

     label4:
        $i2 = virtualinvoke r2.<android.view.ViewGroup: int getHeight()>();

        $i3 = <com.android.calendar.month.SimpleWeeksAdapter: int WEEK_7_OVERHANG_HEIGHT>;

        $i5 = $i2 - $i3;

        $i4 = r0.<com.android.calendar.month.SimpleWeeksAdapter: int mNumWeeks>;

        $i6 = $i5 / $i4;

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i6);

        virtualinvoke r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("height", $r9);

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i11);

        virtualinvoke r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("selected_day", $r12);

        $z0 = r0.<com.android.calendar.month.SimpleWeeksAdapter: boolean mShowWeekNumber>;

        if $z0 == 0 goto label5;

        $b10 = 1;

        goto label6;

     label5:
        $b10 = 0;

     label6:
        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($b10);

        virtualinvoke r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("show_wk_num", $r15);

        $i7 = r0.<com.android.calendar.month.SimpleWeeksAdapter: int mFirstDayOfWeek>;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        virtualinvoke r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("week_start", $r17);

        $i8 = r0.<com.android.calendar.month.SimpleWeeksAdapter: int mDaysPerWeek>;

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        virtualinvoke r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("num_days", $r19);

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("week", $r18);

        $i9 = r0.<com.android.calendar.month.SimpleWeeksAdapter: int mFocusMonth>;

        $r21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        virtualinvoke r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("focus_month", $r21);

        $r25 = r0.<com.android.calendar.month.SimpleWeeksAdapter: android.text.format.Time mSelectedDay>;

        $r23 = $r25.<android.text.format.Time: java.lang.String timezone>;

        virtualinvoke r3.<com.android.calendar.month.SimpleWeekView: void setWeekParams(java.util.HashMap,java.lang.String)>(r4, $r23);

        virtualinvoke r3.<com.android.calendar.month.SimpleWeekView: void invalidate()>();

        return r3;
    }

    public void updateFocusMonth(int)
    {
        com.android.calendar.month.SimpleWeeksAdapter r0;
        int i0;

        r0 := @this: com.android.calendar.month.SimpleWeeksAdapter;

        i0 := @parameter0: int;

        r0.<com.android.calendar.month.SimpleWeeksAdapter: int mFocusMonth> = i0;

        virtualinvoke r0.<com.android.calendar.month.SimpleWeeksAdapter: void notifyDataSetChanged()>();

        return;
    }

    public boolean onTouch(android.view.View, android.view.MotionEvent)
    {
        com.android.calendar.month.SimpleWeeksAdapter r0;
        android.view.View r1;
        android.view.MotionEvent r2;
        com.android.calendar.month.SimpleWeekView r3, $r6;
        android.text.format.Time r4;
        android.view.GestureDetector $r5;
        boolean $z0, $z1;
        float $f0;
        java.lang.StringBuilder $r7, $r8, $r9, $r11, $r13;
        int $i0;
        java.lang.String $r10, $r12;

        r0 := @this: com.android.calendar.month.SimpleWeeksAdapter;

        r1 := @parameter0: android.view.View;

        r2 := @parameter1: android.view.MotionEvent;

        $r5 = r0.<com.android.calendar.month.SimpleWeeksAdapter: android.view.GestureDetector mGestureDetector>;

        $z0 = virtualinvoke $r5.<android.view.GestureDetector: boolean onTouchEvent(android.view.MotionEvent)>(r2);

        if $z0 == 0 goto label3;

        r3 = (com.android.calendar.month.SimpleWeekView) r1;

        $r6 = (com.android.calendar.month.SimpleWeekView) r1;

        $f0 = virtualinvoke r2.<android.view.MotionEvent: float getX()>();

        r4 = virtualinvoke $r6.<com.android.calendar.month.SimpleWeekView: android.text.format.Time getDayFromLocation(float)>($f0);

        $z1 = staticinvoke <android.util.Log: boolean isLoggable(java.lang.String,int)>("MonthByWeek", 3);

        if $z1 == 0 goto label1;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Touched day at Row=");

        $i0 = r3.<com.android.calendar.month.SimpleWeekView: int mWeek>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" day=");

        $r10 = virtualinvoke r4.<android.text.format.Time: java.lang.String toString()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MonthByWeek", $r12);

     label1:
        if r4 == null goto label2;

        virtualinvoke r0.<com.android.calendar.month.SimpleWeeksAdapter: void onDayTapped(android.text.format.Time)>(r4);

     label2:
        return 1;

     label3:
        return 0;
    }

    protected void onDayTapped(android.text.format.Time)
    {
        com.android.calendar.month.SimpleWeeksAdapter r0;
        android.text.format.Time r1, $r2, $r3, $r4;
        int $i0, $i1, $i2;

        r0 := @this: com.android.calendar.month.SimpleWeeksAdapter;

        r1 := @parameter0: android.text.format.Time;

        $r2 = r0.<com.android.calendar.month.SimpleWeeksAdapter: android.text.format.Time mSelectedDay>;

        $i0 = $r2.<android.text.format.Time: int hour>;

        r1.<android.text.format.Time: int hour> = $i0;

        $r3 = r0.<com.android.calendar.month.SimpleWeeksAdapter: android.text.format.Time mSelectedDay>;

        $i1 = $r3.<android.text.format.Time: int minute>;

        r1.<android.text.format.Time: int minute> = $i1;

        $r4 = r0.<com.android.calendar.month.SimpleWeeksAdapter: android.text.format.Time mSelectedDay>;

        $i2 = $r4.<android.text.format.Time: int second>;

        r1.<android.text.format.Time: int second> = $i2;

        virtualinvoke r0.<com.android.calendar.month.SimpleWeeksAdapter: void setSelectedDay(android.text.format.Time)>(r1);

        return;
    }

    public void setListView(android.widget.ListView)
    {
        com.android.calendar.month.SimpleWeeksAdapter r0;
        android.widget.ListView r1;

        r0 := @this: com.android.calendar.month.SimpleWeeksAdapter;

        r1 := @parameter0: android.widget.ListView;

        r0.<com.android.calendar.month.SimpleWeeksAdapter: android.widget.ListView mListView> = r1;

        return;
    }

    static void <clinit>()
    {
        <com.android.calendar.month.SimpleWeeksAdapter: int WEEK_COUNT> = 3497;

        <com.android.calendar.month.SimpleWeeksAdapter: java.lang.String WEEK_PARAMS_DAYS_PER_WEEK> = "days_per_week";

        <com.android.calendar.month.SimpleWeeksAdapter: java.lang.String WEEK_PARAMS_JULIAN_DAY> = "selected_day";

        <com.android.calendar.month.SimpleWeeksAdapter: java.lang.String WEEK_PARAMS_WEEK_START> = "week_start";

        <com.android.calendar.month.SimpleWeeksAdapter: java.lang.String WEEK_PARAMS_SHOW_WEEK> = "week_numbers";

        <com.android.calendar.month.SimpleWeeksAdapter: java.lang.String WEEK_PARAMS_FOCUS_MONTH> = "focus_month";

        <com.android.calendar.month.SimpleWeeksAdapter: java.lang.String WEEK_PARAMS_NUM_WEEKS> = "num_weeks";

        <com.android.calendar.month.SimpleWeeksAdapter: java.lang.String TAG> = "MonthByWeek";

        <com.android.calendar.month.SimpleWeeksAdapter: int DEFAULT_NUM_WEEKS> = 6;

        <com.android.calendar.month.SimpleWeeksAdapter: int DEFAULT_MONTH_FOCUS> = 0;

        <com.android.calendar.month.SimpleWeeksAdapter: int DEFAULT_DAYS_PER_WEEK> = 7;

        <com.android.calendar.month.SimpleWeeksAdapter: int DEFAULT_WEEK_HEIGHT> = 32;

        <com.android.calendar.month.SimpleWeeksAdapter: int WEEK_7_OVERHANG_HEIGHT> = 7;

        <com.android.calendar.month.SimpleWeeksAdapter: float mScale> = 0.0F;

        return;
    }
}
