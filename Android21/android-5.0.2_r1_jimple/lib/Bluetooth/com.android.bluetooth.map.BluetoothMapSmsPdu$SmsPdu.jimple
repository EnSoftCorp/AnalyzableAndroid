public class com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu extends java.lang.Object
{
    private byte[] mData;
    private byte[] mScAddress;
    private int mUserDataMsgOffset;
    private int mEncoding;
    private int mLanguageTable;
    private int mLanguageShiftTable;
    private int mType;
    private int mUserDataSeptetPadding;
    private int mMsgSeptetCount;
    private static final byte TELESERVICE_IDENTIFIER;
    private static final byte SERVICE_CATEGORY;
    private static final byte ORIGINATING_ADDRESS;
    private static final byte ORIGINATING_SUB_ADDRESS;
    private static final byte DESTINATION_ADDRESS;
    private static final byte DESTINATION_SUB_ADDRESS;
    private static final byte BEARER_REPLY_OPTION;
    private static final byte CAUSE_CODES;
    private static final byte BEARER_DATA;
    private static final byte BEARER_DATA_MSG_ID;
    private static final byte TP_MIT_DELIVER;
    private static final byte TP_MMS_NO_MORE;
    private static final byte TP_RP_NO_REPLY_PATH;
    private static final byte TP_UDHI_MASK;
    private static final byte TP_SRI_NO_REPORT;

    void <init>(byte[], int)
    {
        com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu r0;
        byte[] r1, $r2;
        int i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = newarray (byte)[1];

        $r2[0] = 0;

        r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte[] mScAddress> = $r2;

        r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int mUserDataMsgOffset> = 0;

        $i1 = staticinvoke <com.android.bluetooth.map.BluetoothMapSmsPdu: int access$000()>();

        r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int mUserDataSeptetPadding> = $i1;

        r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int mMsgSeptetCount> = 0;

        r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte[] mData> = r1;

        $i2 = staticinvoke <com.android.bluetooth.map.BluetoothMapSmsPdu: int access$000()>();

        r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int mEncoding> = $i2;

        r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int mType> = i0;

        $i3 = staticinvoke <com.android.bluetooth.map.BluetoothMapSmsPdu: int access$000()>();

        r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int mLanguageTable> = $i3;

        $i4 = staticinvoke <com.android.bluetooth.map.BluetoothMapSmsPdu: int access$000()>();

        r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int mLanguageShiftTable> = $i4;

        $i5 = specialinvoke r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int gsmSubmitGetTpUdOffset()>();

        r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int mUserDataMsgOffset> = $i5;

        return;
    }

    void <init>(byte[], int, int, int)
    {
        com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu r0;
        byte[] r1, $r2;
        int i0, i1, i2, $i3;

        r0 := @this: com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = newarray (byte)[1];

        $r2[0] = 0;

        r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte[] mScAddress> = $r2;

        r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int mUserDataMsgOffset> = 0;

        $i3 = staticinvoke <com.android.bluetooth.map.BluetoothMapSmsPdu: int access$000()>();

        r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int mUserDataSeptetPadding> = $i3;

        r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int mMsgSeptetCount> = 0;

        r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte[] mData> = r1;

        r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int mEncoding> = i0;

        r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int mType> = i1;

        r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int mLanguageTable> = i2;

        return;
    }

    public byte[] getData()
    {
        com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu r0;
        byte[] $r1;

        r0 := @this: com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu;

        $r1 = r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte[] mData>;

        return $r1;
    }

    public byte[] getScAddress()
    {
        com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu r0;
        byte[] $r1;

        r0 := @this: com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu;

        $r1 = r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte[] mScAddress>;

        return $r1;
    }

    public void setEncoding(int)
    {
        com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu r0;
        int i0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu;

        i0 := @parameter0: int;

        r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int mEncoding> = i0;

        return;
    }

    public int getEncoding()
    {
        com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu r0;
        int $i0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu;

        $i0 = r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int mEncoding>;

        return $i0;
    }

    public int getType()
    {
        com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu r0;
        int $i0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu;

        $i0 = r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int mType>;

        return $i0;
    }

    public int getUserDataMsgOffset()
    {
        com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu r0;
        int $i0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu;

        $i0 = r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int mUserDataMsgOffset>;

        return $i0;
    }

    public int getUserDataMsgSize()
    {
        com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu r0;
        byte[] $r1;
        int $i0, $i1, $i2;

        r0 := @this: com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu;

        $r1 = r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte[] mData>;

        $i1 = lengthof $r1;

        $i0 = r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int mUserDataMsgOffset>;

        $i2 = $i1 - $i0;

        return $i2;
    }

    public int getLanguageShiftTable()
    {
        com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu r0;
        int $i0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu;

        $i0 = r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int mLanguageShiftTable>;

        return $i0;
    }

    public int getLanguageTable()
    {
        com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu r0;
        int $i0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu;

        $i0 = r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int mLanguageTable>;

        return $i0;
    }

    public int getUserDataSeptetPadding()
    {
        com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu r0;
        int $i0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu;

        $i0 = r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int mUserDataSeptetPadding>;

        return $i0;
    }

    public int getMsgSeptetCount()
    {
        com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu r0;
        int $i0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu;

        $i0 = r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int mMsgSeptetCount>;

        return $i0;
    }

    private int cdmaGetParameterOffset(byte)
    {
        com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu r0;
        byte b0;
        java.io.ByteArrayInputStream r1, $r2;
        int i1, i2, i3, $i5, $i8;
        boolean z0;
        byte[] $r3;
        long $l6;
        java.lang.Exception $r4, r5;

        r0 := @this: com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu;

        b0 := @parameter0: byte;

        $r2 = new java.io.ByteArrayInputStream;

        $r3 = r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte[] mData>;

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>($r3);

        r1 = $r2;

        i1 = 0;

        z0 = 0;

     label1:
        virtualinvoke r1.<java.io.ByteArrayInputStream: long skip(long)>(1L);

     label2:
        $i5 = virtualinvoke r1.<java.io.ByteArrayInputStream: int available()>();

        if $i5 <= 0 goto label4;

        i2 = virtualinvoke r1.<java.io.ByteArrayInputStream: int read()>();

        i3 = virtualinvoke r1.<java.io.ByteArrayInputStream: int read()>();

        if i2 != b0 goto label3;

        z0 = 1;

        goto label4;

     label3:
        $l6 = (long) i3;

        virtualinvoke r1.<java.io.ByteArrayInputStream: long skip(long)>($l6);

        $i8 = 2 + i3;

        i1 = i1 + $i8;

        goto label2;

     label4:
        virtualinvoke r1.<java.io.ByteArrayInputStream: void close()>();

     label5:
        goto label7;

     label6:
        $r4 := @caughtexception;

        r5 = $r4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothMapSmsPdu", "cdmaGetParameterOffset: ", r5);

     label7:
        if z0 == 0 goto label8;

        return i1;

     label8:
        return 0;

        catch java.lang.Exception from label1 to label5 with label6;
    }

    private int cdmaGetSubParameterOffset(byte)
    {
        com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu r0;
        byte b0;
        java.io.ByteArrayInputStream r1, $r2;
        boolean z1;
        int i1, i2, $i3, $i6, $i8, i11;
        byte[] $r3;
        long $l4, $l7;
        java.lang.Exception $r4, r5;

        r0 := @this: com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu;

        b0 := @parameter0: byte;

        $r2 = new java.io.ByteArrayInputStream;

        $r3 = r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte[] mData>;

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>($r3);

        r1 = $r2;

        z1 = 0;

        $i3 = specialinvoke r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int cdmaGetParameterOffset(byte)>(8);

        i11 = $i3 + 2;

        $l4 = (long) i11;

        virtualinvoke r1.<java.io.ByteArrayInputStream: long skip(long)>($l4);

     label1:
        $i6 = virtualinvoke r1.<java.io.ByteArrayInputStream: int available()>();

        if $i6 <= 0 goto label3;

        i1 = virtualinvoke r1.<java.io.ByteArrayInputStream: int read()>();

        i2 = virtualinvoke r1.<java.io.ByteArrayInputStream: int read()>();

        if i1 != b0 goto label2;

        z1 = 1;

        goto label3;

     label2:
        $l7 = (long) i2;

        virtualinvoke r1.<java.io.ByteArrayInputStream: long skip(long)>($l7);

        $i8 = 2 + i2;

        i11 = i11 + $i8;

        goto label1;

     label3:
        virtualinvoke r1.<java.io.ByteArrayInputStream: void close()>();

     label4:
        goto label6;

     label5:
        $r4 := @caughtexception;

        r5 = $r4;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothMapSmsPdu", "cdmaGetParameterOffset: ", r5);

     label6:
        if z1 == 0 goto label7;

        return i11;

     label7:
        return 0;

        catch java.lang.Exception from label1 to label4 with label5;
    }

    public void cdmaChangeToDeliverPdu(long)
    {
        com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu r0;
        long l0;
        int i1, $i3, $i4, $i5, $i6, $i7, $i9, i11, i12;
        short s2, s13, s14;
        byte[] $r1, $r2, $r3, $r4, $r5, $r6, $r8, $r10;
        java.lang.IllegalArgumentException $r7, $r9, $r11, $r12;
        byte $b8, $b10;

        r0 := @this: com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu;

        l0 := @parameter0: long;

        $r1 = r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte[] mData>;

        if $r1 != null goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unable to convert PDU to Deliver type");

        throw $r11;

     label1:
        i1 = specialinvoke r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int cdmaGetParameterOffset(byte)>(4);

        $r2 = r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte[] mData>;

        $i3 = lengthof $r2;

        if $i3 >= i1 goto label2;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unable to convert PDU to Deliver type");

        throw $r12;

     label2:
        $r3 = r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte[] mData>;

        $r3[i1] = 2;

        i11 = specialinvoke r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int cdmaGetParameterOffset(byte)>(5);

        $r4 = r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte[] mData>;

        $i4 = lengthof $r4;

        if $i4 >= i11 goto label3;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unable to convert PDU to Deliver type");

        throw $r9;

     label3:
        $r5 = r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte[] mData>;

        $r5[i11] = 3;

        i12 = specialinvoke r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int cdmaGetSubParameterOffset(byte)>(0);

        $r6 = r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte[] mData>;

        $i5 = lengthof $r6;

        $i6 = 2 + i12;

        if $i5 <= $i6 goto label4;

        $r8 = r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte[] mData>;

        $i7 = i12 + 2;

        $b8 = $r8[$i7];

        s2 = $b8 & 255;

        s13 = s2 & 15;

        s14 = s13 | 16;

        $r10 = r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte[] mData>;

        $i9 = i12 + 2;

        $b10 = (byte) s14;

        $r10[$i9] = $b10;

        goto label5;

     label4:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Unable to convert PDU to Deliver type");

        throw $r7;

     label5:
        return;
    }

    private int gsmSubmitGetTpPidOffset()
    {
        com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu r0;
        int i0, $i2, $i3, $i4, $i5, $i6;
        byte[] $r1, $r2;
        byte $b1;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4, $r5, $r6;
        java.lang.String $r7;

        r0 := @this: com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu;

        $r1 = r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte[] mData>;

        $b1 = $r1[2];

        $i2 = $b1 + 1;

        $i3 = $i2 & 255;

        $i4 = $i3 / 2;

        $i5 = 2 + $i4;

        i0 = $i5 + 2;

        $r2 = r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte[] mData>;

        $i6 = lengthof $r2;

        if i0 > $i6 goto label1;

        if i0 <= 14 goto label2;

     label1:
        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("wrongly formatted gsm submit PDU. offset = ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r3;

     label2:
        return i0;
    }

    public int gsmSubmitGetTpDcs()
    {
        com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu r0;
        byte[] $r1;
        int $i0;
        byte $b1;
        short $s2;

        r0 := @this: com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu;

        $r1 = r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte[] mData>;

        $i0 = specialinvoke r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int gsmSubmitGetTpDcsOffset()>();

        $b1 = $r1[$i0];

        $s2 = $b1 & 255;

        return $s2;
    }

    public boolean gsmSubmitHasUserDataHeader()
    {
        com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu r0;
        byte[] $r1;
        byte $b0;
        short $s1, $s2;
        boolean $z0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu;

        $r1 = r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte[] mData>;

        $b0 = $r1[0];

        $s1 = $b0 & 255;

        $s2 = $s1 & 64;

        if $s2 != 64 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private int gsmSubmitGetTpDcsOffset()
    {
        com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu r0;
        int $i0, $i1;

        r0 := @this: com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu;

        $i0 = specialinvoke r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int gsmSubmitGetTpPidOffset()>();

        $i1 = $i0 + 1;

        return $i1;
    }

    private int gsmSubmitGetTpUdlOffset()
    {
        com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu r0;
        byte[] $r1;
        byte $b0;
        short $s1, $s2, $s3;
        int $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu;

        $r1 = r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte[] mData>;

        $b0 = $r1[0];

        $s1 = $b0 & 255;

        $s2 = $s1 & 12;

        $s3 = $s2 >> 2;

        tableswitch($s3)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label3;
            default: goto label3;
        };

     label1:
        $i4 = specialinvoke r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int gsmSubmitGetTpPidOffset()>();

        $i5 = $i4 + 2;

        return $i5;

     label2:
        $i6 = specialinvoke r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int gsmSubmitGetTpPidOffset()>();

        $i7 = $i6 + 2;

        $i8 = $i7 + 1;

        return $i8;

     label3:
        $i9 = specialinvoke r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int gsmSubmitGetTpPidOffset()>();

        $i10 = $i9 + 2;

        $i11 = $i10 + 7;

        return $i11;
    }

    private int gsmSubmitGetTpUdOffset()
    {
        com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu r0;
        int $i0, $i1;

        r0 := @this: com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu;

        $i0 = specialinvoke r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int gsmSubmitGetTpUdlOffset()>();

        $i1 = $i0 + 1;

        return $i1;
    }

    public void gsmDecodeUserDataHeader()
    {
        com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu r0;
        java.io.ByteArrayInputStream r1, $r4;
        int i0, i1, i2, i3, $i4, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i22;
        byte[] r2, $r5;
        java.io.IOException r3, $r6;
        long $l5;
        boolean $z0;
        byte $b20;
        com.android.internal.telephony.SmsHeader r7;

        r0 := @this: com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu;

        $r4 = new java.io.ByteArrayInputStream;

        $r5 = r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte[] mData>;

        specialinvoke $r4.<java.io.ByteArrayInputStream: void <init>(byte[])>($r5);

        r1 = $r4;

        $i4 = specialinvoke r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int gsmSubmitGetTpUdlOffset()>();

        $l5 = (long) $i4;

        virtualinvoke r1.<java.io.ByteArrayInputStream: long skip(long)>($l5);

        i0 = virtualinvoke r1.<java.io.ByteArrayInputStream: int read()>();

        $z0 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: boolean gsmSubmitHasUserDataHeader()>();

        if $z0 != 1 goto label8;

        i1 = virtualinvoke r1.<java.io.ByteArrayInputStream: int read()>();

        $i8 = r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int mEncoding>;

        if $i8 != 1 goto label7;

        r2 = newarray (byte)[i1];

     label1:
        virtualinvoke r1.<java.io.ByteArrayInputStream: int read(byte[])>(r2);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        r3 = $r6;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothMapSmsPdu", "unable to read userDataHeader", r3);

     label4:
        r7 = staticinvoke <com.android.internal.telephony.SmsHeader: com.android.internal.telephony.SmsHeader fromByteArray(byte[])>(r2);

        $i13 = r7.<com.android.internal.telephony.SmsHeader: int languageTable>;

        r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int mLanguageTable> = $i13;

        $i15 = r7.<com.android.internal.telephony.SmsHeader: int languageShiftTable>;

        r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int mLanguageShiftTable> = $i15;

        $i14 = i1 + 1;

        i2 = $i14 * 8;

        i3 = i2 / 7;

        $i17 = i2 % 7;

        if $i17 <= 0 goto label5;

        $b20 = 1;

        goto label6;

     label5:
        $b20 = 0;

     label6:
        i22 = i3 + $b20;

        $i16 = i22 * 7;

        $i19 = $i16 - i2;

        r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int mUserDataSeptetPadding> = $i19;

        $i18 = i0 - i22;

        r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int mMsgSeptetCount> = $i18;

     label7:
        $i10 = specialinvoke r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int gsmSubmitGetTpUdOffset()>();

        $i9 = $i10 + i1;

        $i12 = $i9 + 1;

        r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int mUserDataMsgOffset> = $i12;

        goto label9;

     label8:
        r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int mUserDataSeptetPadding> = 0;

        r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int mMsgSeptetCount> = i0;

        $i7 = specialinvoke r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int gsmSubmitGetTpUdOffset()>();

        r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int mUserDataMsgOffset> = $i7;

     label9:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    private void gsmWriteDate(java.io.ByteArrayOutputStream, long) throws java.io.UnsupportedEncodingException
    {
        com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu r0;
        java.io.ByteArrayOutputStream r1;
        long l0;
        java.text.SimpleDateFormat r2, $r8;
        java.util.Date r3, $r9;
        java.lang.String r4, r6, r15;
        byte[] r5;
        int i1, i2, $i3, $i4, $i5, $i8, $i9, $i10, $i11, $i12, $i13, $i16, $i17, $i18, $i19, $i20, $i21, $i23, $i25, $i26, i27;
        char[] r7, r16;
        java.lang.Object[] $r10, $r12;
        java.lang.Integer $r11, $r13;
        char $c6, $c7, $c14, $c15;
        byte $b22, $b24;
        java.util.Calendar r14;

        r0 := @this: com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu;

        r1 := @parameter0: java.io.ByteArrayOutputStream;

        l0 := @parameter1: long;

        $r8 = new java.text.SimpleDateFormat;

        specialinvoke $r8.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyMMddHHmmss");

        r2 = $r8;

        $r9 = new java.util.Date;

        specialinvoke $r9.<java.util.Date: void <init>(long)>(l0);

        r3 = $r9;

        r4 = virtualinvoke r2.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>(r3);

        r5 = virtualinvoke r4.<java.lang.String: byte[] getBytes(java.lang.String)>("US-ASCII");

        i1 = 0;

        i2 = virtualinvoke r4.<java.lang.String: int length()>();

     label1:
        if i1 >= i2 goto label2;

        $i18 = i1 + 1;

        $b24 = r5[$i18];

        $i23 = $b24 - 48;

        $i26 = $i23 << 4;

        $b22 = r5[i1];

        $i21 = $b22 - 48;

        $i25 = $i26 | $i21;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>($i25);

        i1 = i1 + 2;

        goto label1;

     label2:
        r14 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $i4 = virtualinvoke r14.<java.util.Calendar: int get(int)>(15);

        $i3 = virtualinvoke r14.<java.util.Calendar: int get(int)>(16);

        $i5 = $i4 + $i3;

        i27 = $i5 / 900000;

        if i27 >= 0 goto label3;

        $r12 = newarray (java.lang.Object)[1];

        $i11 = neg i27;

        $r13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i11);

        $r12[0] = $r13;

        r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%1$02d", $r12);

        r7 = virtualinvoke r6.<java.lang.String: char[] toCharArray()>();

        $c15 = r7[1];

        $i16 = $c15 - 48;

        $i13 = $i16 << 4;

        $i20 = $i13 | 64;

        $c14 = r7[0];

        $i19 = $c14 - 48;

        $i17 = $i20 | $i19;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>($i17);

        goto label4;

     label3:
        $r10 = newarray (java.lang.Object)[1];

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i27);

        $r10[0] = $r11;

        r15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%1$02d", $r10);

        r16 = virtualinvoke r15.<java.lang.String: char[] toCharArray()>();

        $c6 = r16[1];

        $i8 = $c6 - 48;

        $i9 = $i8 << 4;

        $c7 = r16[0];

        $i10 = $c7 - 48;

        $i12 = $i9 | $i10;

        virtualinvoke r1.<java.io.ByteArrayOutputStream: void write(int)>($i12);

     label4:
        return;
    }

    public void gsmChangeToDeliverPdu(long, java.lang.String)
    {
        com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu r0;
        long l0;
        java.lang.String r1;
        java.io.ByteArrayOutputStream r2, $r4;
        byte[] r3, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        byte b1, $b2, $b6, $b9, $b10, $b18, $b20, $b22, $b26;
        short $s3, $s4, $s5, $s17, s27;
        int $i7, $i8, $i11, $i12, $i13, $i14, $i15, $i16, $i19, $i21, $i23, $i24;
        java.lang.IllegalArgumentException $r12;
        java.io.IOException $r13, r14;

        r0 := @this: com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu;

        l0 := @parameter0: long;

        r1 := @parameter1: java.lang.String;

        $r4 = new java.io.ByteArrayOutputStream;

        specialinvoke $r4.<java.io.ByteArrayOutputStream: void <init>(int)>(22);

        r2 = $r4;

     label1:
        $r5 = r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte[] mData>;

        $b2 = $r5[0];

        $s3 = $b2 & 255;

        $s4 = $s3 & 64;

        $s5 = 4 | $s4;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>($s5);

        r3 = staticinvoke <android.telephony.PhoneNumberUtils: byte[] networkPortionToCalledPartyBCDWithLength(java.lang.String)>(r1);

        if r3 == null goto label4;

        $i16 = lengthof r3;

        $i19 = $i16 - 1;

        $b20 = r3[$i19];

        $s17 = $b20 & 240;

        if $s17 != 240 goto label2;

        $b26 = 1;

        goto label3;

     label2:
        $b26 = 0;

     label3:
        b1 = $b26;

        $b18 = r3[0];

        $i23 = $b18 - 1;

        $i24 = $i23 * 2;

        $i21 = $i24 - b1;

        $b22 = (byte) $i21;

        r3[0] = $b22;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r3);

        goto label5;

     label4:
        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>(0);

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>(129);

     label5:
        $r6 = r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte[] mData>;

        $i7 = specialinvoke r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int gsmSubmitGetTpPidOffset()>();

        $b6 = $r6[$i7];

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>($b6);

        $r7 = r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte[] mData>;

        $i8 = specialinvoke r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int gsmSubmitGetTpDcsOffset()>();

        $b9 = $r7[$i8];

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>($b9);

        specialinvoke r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: void gsmWriteDate(java.io.ByteArrayOutputStream,long)>(r2, l0);

        $r8 = r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte[] mData>;

        $i11 = specialinvoke r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int gsmSubmitGetTpUdlOffset()>();

        $b10 = $r8[$i11];

        s27 = $b10 & 255;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(int)>(s27);

        $r9 = r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte[] mData>;

        $i12 = specialinvoke r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int gsmSubmitGetTpUdOffset()>();

        $r10 = r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte[] mData>;

        $i13 = lengthof $r10;

        $i15 = specialinvoke r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int gsmSubmitGetTpUdOffset()>();

        $i14 = $i13 - $i15;

        virtualinvoke r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>($r9, $i12, $i14);

     label6:
        goto label8;

     label7:
        $r13 := @caughtexception;

        r14 = $r13;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>("BluetoothMapSmsPdu", "", r14);

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Failed to change type to deliver PDU.");

        throw $r12;

     label8:
        $r11 = virtualinvoke r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte[] mData> = $r11;

        return;

        catch java.io.IOException from label1 to label6 with label7;
    }

    public java.lang.String getEncodingString()
    {
        com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu r0;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu;

        $i1 = r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int mType>;

        $i0 = <com.android.bluetooth.map.BluetoothMapSmsPdu: int SMS_TYPE_GSM>;

        if $i1 != $i0 goto label06;

        $i3 = r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int mEncoding>;

        tableswitch($i3)
        {
            case 0: goto label05;
            case 1: goto label01;
            case 2: goto label03;
            case 3: goto label04;
            default: goto label05;
        };

     label01:
        $i4 = r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int mLanguageTable>;

        if $i4 != 0 goto label02;

        return "G-7BIT";

     label02:
        return "G-7BITEXT";

     label03:
        return "G-8BIT";

     label04:
        return "G-16BIT";

     label05:
        return "";

     label06:
        $i2 = r0.<com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: int mEncoding>;

        tableswitch($i2)
        {
            case 0: goto label11;
            case 1: goto label07;
            case 2: goto label08;
            case 3: goto label09;
            case 4: goto label10;
            default: goto label11;
        };

     label07:
        return "C-7ASCII";

     label08:
        return "C-8BIT";

     label09:
        return "C-UNICODE";

     label10:
        return "C-KOREAN";

     label11:
        return "";
    }

    public static void <clinit>()
    {
        <com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte TP_SRI_NO_REPORT> = 0;

        <com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte TP_UDHI_MASK> = 64;

        <com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte TP_RP_NO_REPLY_PATH> = 0;

        <com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte TP_MMS_NO_MORE> = 4;

        <com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte TP_MIT_DELIVER> = 0;

        <com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte BEARER_DATA_MSG_ID> = 0;

        <com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte BEARER_DATA> = 8;

        <com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte CAUSE_CODES> = 7;

        <com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte BEARER_REPLY_OPTION> = 6;

        <com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte DESTINATION_SUB_ADDRESS> = 5;

        <com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte DESTINATION_ADDRESS> = 4;

        <com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte ORIGINATING_SUB_ADDRESS> = 3;

        <com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte ORIGINATING_ADDRESS> = 2;

        <com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte SERVICE_CATEGORY> = 1;

        <com.android.bluetooth.map.BluetoothMapSmsPdu$SmsPdu: byte TELESERVICE_IDENTIFIER> = 0;

        return;
    }
}
