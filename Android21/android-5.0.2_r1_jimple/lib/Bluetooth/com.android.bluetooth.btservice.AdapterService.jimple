public class com.android.bluetooth.btservice.AdapterService extends android.app.Service
{
    private static final java.lang.String TAG;
    private static final boolean DBG;
    private static final boolean TRACE_REF;
    private static final int MIN_ADVT_INSTANCES_FOR_MA;
    private static final int MIN_OFFLOADED_FILTERS;
    private static final int MIN_OFFLOADED_SCAN_STORAGE_BYTES;
    private static int sRefCount;
    private int mStackReportedState;
    private int mTxTimeTotalMs;
    private int mRxTimeTotalMs;
    private int mIdleTimeTotalMs;
    private int mEnergyUsedTotalVoltAmpSecMicro;
    public static final java.lang.String ACTION_LOAD_ADAPTER_PROPERTIES;
    public static final java.lang.String ACTION_SERVICE_STATE_CHANGED;
    public static final java.lang.String EXTRA_ACTION;
    public static final int PROFILE_CONN_CONNECTED;
    public static final int PROFILE_CONN_REJECTED;
    private static final java.lang.String ACTION_ALARM_WAKEUP;
    static final java.lang.String BLUETOOTH_ADMIN_PERM;
    public static final java.lang.String BLUETOOTH_PRIVILEGED;
    static final java.lang.String BLUETOOTH_PERM;
    static final java.lang.String RECEIVE_MAP_PERM;
    private static final java.lang.String PHONEBOOK_ACCESS_PERMISSION_PREFERENCE_FILE;
    private static final java.lang.String MESSAGE_ACCESS_PERMISSION_PREFERENCE_FILE;
    private static final int ADAPTER_SERVICE_TYPE;
    private static com.android.bluetooth.btservice.AdapterService sAdapterService;
    private com.android.bluetooth.btservice.AdapterProperties mAdapterProperties;
    private com.android.bluetooth.btservice.AdapterState mAdapterStateMachine;
    private com.android.bluetooth.btservice.BondStateMachine mBondStateMachine;
    private com.android.bluetooth.btservice.JniCallbacks mJniCallbacks;
    private com.android.bluetooth.btservice.RemoteDevices mRemoteDevices;
    private boolean mProfilesStarted;
    private boolean mNativeAvailable;
    private boolean mCleaningUp;
    private java.util.HashMap mProfileServicesState;
    private android.os.RemoteCallbackList mCallbacks;
    private int mCurrentRequestId;
    private boolean mQuietmode;
    private android.app.AlarmManager mAlarmManager;
    private android.app.PendingIntent mPendingAlarm;
    private android.os.PowerManager mPowerManager;
    private android.os.PowerManager$WakeLock mWakeLock;
    private java.lang.String mWakeLockName;
    private static final int MESSAGE_PROFILE_SERVICE_STATE_CHANGED;
    private static final int MESSAGE_PROFILE_CONNECTION_STATE_CHANGED;
    private static final int MESSAGE_CONNECT_OTHER_PROFILES;
    private static final int MESSAGE_PROFILE_INIT_PRIORITIES;
    private static final int CONNECT_OTHER_PROFILES_TIMEOUT;
    private final android.os.Handler mHandler;
    private com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder mBinder;
    private final android.content.BroadcastReceiver mAlarmBroadcastReceiver;

    public static synchronized com.android.bluetooth.btservice.AdapterService getAdapterService()
    {
        com.android.bluetooth.btservice.AdapterService $r0, $r1, $r4, $r7;
        boolean $z0;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.String $r6;

        $r0 = <com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterService sAdapterService>;

        if $r0 == null goto label1;

        $r1 = <com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterService sAdapterService>;

        $z0 = $r1.<com.android.bluetooth.btservice.AdapterService: boolean mCleaningUp>;

        if $z0 != 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getAdapterService() - returning ");

        $r4 = <com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterService sAdapterService>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothAdapterService", $r6);

        $r7 = <com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterService sAdapterService>;

        return $r7;

     label1:
        return null;
    }

    private static synchronized void setAdapterService(com.android.bluetooth.btservice.AdapterService)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        boolean $z0;

        r0 := @parameter0: com.android.bluetooth.btservice.AdapterService;

        if r0 == null goto label1;

        $z0 = r0.<com.android.bluetooth.btservice.AdapterService: boolean mCleaningUp>;

        if $z0 != 0 goto label1;

        <com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterService sAdapterService> = r0;

     label1:
        return;
    }

    private static synchronized void clearAdapterService()
    {
        <com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterService sAdapterService> = null;

        return;
    }

    public void <init>()
    {
        com.android.bluetooth.btservice.AdapterService r0;
        java.lang.Class r1;
        java.lang.Throwable r2, $r10;
        java.util.HashMap $r3;
        com.android.bluetooth.btservice.AdapterService$1 $r4;
        com.android.bluetooth.btservice.AdapterService$2 $r5;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        specialinvoke r0.<android.app.Service: void <init>()>();

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<com.android.bluetooth.btservice.AdapterService: java.util.HashMap mProfileServicesState> = $r3;

        r0.<com.android.bluetooth.btservice.AdapterService: boolean mQuietmode> = 0;

        $r4 = new com.android.bluetooth.btservice.AdapterService$1;

        specialinvoke $r4.<com.android.bluetooth.btservice.AdapterService$1: void <init>(com.android.bluetooth.btservice.AdapterService)>(r0);

        r0.<com.android.bluetooth.btservice.AdapterService: android.os.Handler mHandler> = $r4;

        $r5 = new com.android.bluetooth.btservice.AdapterService$2;

        specialinvoke $r5.<com.android.bluetooth.btservice.AdapterService$2: void <init>(com.android.bluetooth.btservice.AdapterService)>(r0);

        r0.<com.android.bluetooth.btservice.AdapterService: android.content.BroadcastReceiver mAlarmBroadcastReceiver> = $r5;

        r1 = class "com/android/bluetooth/btservice/AdapterService";

        entermonitor class "com/android/bluetooth/btservice/AdapterService";

     label1:
        $i0 = <com.android.bluetooth.btservice.AdapterService: int sRefCount>;

        $i1 = $i0 + 1;

        <com.android.bluetooth.btservice.AdapterService: int sRefCount> = $i1;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AdapterService() - REFCOUNT: CREATED. INSTANCE_COUNT");

        $i2 = <com.android.bluetooth.btservice.AdapterService: int sRefCount>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void debugLog(java.lang.String)>($r9);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r10 := @caughtexception;

        r2 = $r10;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void onProfileConnectionStateChanged(android.bluetooth.BluetoothDevice, int, int, int)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        android.bluetooth.BluetoothDevice r1;
        int i0, i1, i2;
        android.os.Message r2;
        android.os.Bundle r3, $r5;
        android.os.Handler $r4, $r6;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r4 = r0.<com.android.bluetooth.btservice.AdapterService: android.os.Handler mHandler>;

        r2 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int)>(20);

        r2.<android.os.Message: java.lang.Object obj> = r1;

        r2.<android.os.Message: int arg1> = i0;

        r2.<android.os.Message: int arg2> = i1;

        $r5 = new android.os.Bundle;

        specialinvoke $r5.<android.os.Bundle: void <init>(int)>(1);

        r3 = $r5;

        virtualinvoke r3.<android.os.Bundle: void putInt(java.lang.String,int)>("prevState", i2);

        virtualinvoke r2.<android.os.Message: void setData(android.os.Bundle)>(r3);

        $r6 = r0.<com.android.bluetooth.btservice.AdapterService: android.os.Handler mHandler>;

        virtualinvoke $r6.<android.os.Handler: boolean sendMessage(android.os.Message)>(r2);

        return;
    }

    public void initProfilePriorities(android.bluetooth.BluetoothDevice, android.os.ParcelUuid[])
    {
        com.android.bluetooth.btservice.AdapterService r0;
        android.bluetooth.BluetoothDevice r1;
        android.os.ParcelUuid[] r2;
        android.os.Message r3;
        android.os.Bundle r4, $r6;
        int i0, $i1, $i2;
        android.os.Handler $r5, $r7;
        java.lang.StringBuilder $r8, $r9, $r10;
        android.os.ParcelUuid $r11;
        java.lang.String $r12;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        r2 := @parameter1: android.os.ParcelUuid[];

        if r2 != null goto label1;

        return;

     label1:
        $r5 = r0.<com.android.bluetooth.btservice.AdapterService: android.os.Handler mHandler>;

        r3 = virtualinvoke $r5.<android.os.Handler: android.os.Message obtainMessage(int)>(40);

        r3.<android.os.Message: java.lang.Object obj> = r1;

        $i1 = lengthof r2;

        r3.<android.os.Message: int arg1> = $i1;

        $r6 = new android.os.Bundle;

        specialinvoke $r6.<android.os.Bundle: void <init>(int)>(1);

        r4 = $r6;

        i0 = 0;

     label2:
        $i2 = lengthof r2;

        if i0 >= $i2 goto label3;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("uuids");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = r2[i0];

        virtualinvoke r4.<android.os.Bundle: void putParcelable(java.lang.String,android.os.Parcelable)>($r12, $r11);

        i0 = i0 + 1;

        goto label2;

     label3:
        virtualinvoke r3.<android.os.Message: void setData(android.os.Bundle)>(r4);

        $r7 = r0.<com.android.bluetooth.btservice.AdapterService: android.os.Handler mHandler>;

        virtualinvoke $r7.<android.os.Handler: boolean sendMessage(android.os.Message)>(r3);

        return;
    }

    private void processInitProfilePriorities(android.bluetooth.BluetoothDevice, android.os.ParcelUuid[])
    {
        com.android.bluetooth.btservice.AdapterService r0;
        android.bluetooth.BluetoothDevice r1;
        android.os.ParcelUuid[] r2;
        com.android.bluetooth.hid.HidService r3;
        com.android.bluetooth.a2dp.A2dpService r4;
        com.android.bluetooth.hfp.HeadsetService r5;
        android.os.ParcelUuid $r6, $r7, $r8, $r9, $r10, $r11;
        boolean $z0, $z2, $z3, $z5, $z6, $z8;
        int $i0, $i1, $i2;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        r2 := @parameter1: android.os.ParcelUuid[];

        r3 = staticinvoke <com.android.bluetooth.hid.HidService: com.android.bluetooth.hid.HidService getHidService()>();

        r4 = staticinvoke <com.android.bluetooth.a2dp.A2dpService: com.android.bluetooth.a2dp.A2dpService getA2dpService()>();

        r5 = staticinvoke <com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetService getHeadsetService()>();

        if r3 == null goto label2;

        $r10 = <android.bluetooth.BluetoothUuid: android.os.ParcelUuid Hid>;

        $z6 = staticinvoke <android.bluetooth.BluetoothUuid: boolean isUuidPresent(android.os.ParcelUuid[],android.os.ParcelUuid)>(r2, $r10);

        if $z6 != 0 goto label1;

        $r11 = <android.bluetooth.BluetoothUuid: android.os.ParcelUuid Hogp>;

        $z8 = staticinvoke <android.bluetooth.BluetoothUuid: boolean isUuidPresent(android.os.ParcelUuid[],android.os.ParcelUuid)>(r2, $r11);

        if $z8 == 0 goto label2;

     label1:
        $i2 = virtualinvoke r3.<com.android.bluetooth.hid.HidService: int getPriority(android.bluetooth.BluetoothDevice)>(r1);

        if $i2 != -1 goto label2;

        virtualinvoke r3.<com.android.bluetooth.hid.HidService: boolean setPriority(android.bluetooth.BluetoothDevice,int)>(r1, 100);

     label2:
        if r4 == null goto label4;

        $r8 = <android.bluetooth.BluetoothUuid: android.os.ParcelUuid AudioSink>;

        $z3 = staticinvoke <android.bluetooth.BluetoothUuid: boolean isUuidPresent(android.os.ParcelUuid[],android.os.ParcelUuid)>(r2, $r8);

        if $z3 != 0 goto label3;

        $r9 = <android.bluetooth.BluetoothUuid: android.os.ParcelUuid AdvAudioDist>;

        $z5 = staticinvoke <android.bluetooth.BluetoothUuid: boolean isUuidPresent(android.os.ParcelUuid[],android.os.ParcelUuid)>(r2, $r9);

        if $z5 == 0 goto label4;

     label3:
        $i1 = virtualinvoke r4.<com.android.bluetooth.a2dp.A2dpService: int getPriority(android.bluetooth.BluetoothDevice)>(r1);

        if $i1 != -1 goto label4;

        virtualinvoke r4.<com.android.bluetooth.a2dp.A2dpService: boolean setPriority(android.bluetooth.BluetoothDevice,int)>(r1, 100);

     label4:
        if r5 == null goto label6;

        $r6 = <android.bluetooth.BluetoothUuid: android.os.ParcelUuid HSP>;

        $z0 = staticinvoke <android.bluetooth.BluetoothUuid: boolean isUuidPresent(android.os.ParcelUuid[],android.os.ParcelUuid)>(r2, $r6);

        if $z0 != 0 goto label5;

        $r7 = <android.bluetooth.BluetoothUuid: android.os.ParcelUuid Handsfree>;

        $z2 = staticinvoke <android.bluetooth.BluetoothUuid: boolean isUuidPresent(android.os.ParcelUuid[],android.os.ParcelUuid)>(r2, $r7);

        if $z2 == 0 goto label6;

     label5:
        $i0 = virtualinvoke r5.<com.android.bluetooth.hfp.HeadsetService: int getPriority(android.bluetooth.BluetoothDevice)>(r1);

        if $i0 != -1 goto label6;

        virtualinvoke r5.<com.android.bluetooth.hfp.HeadsetService: boolean setPriority(android.bluetooth.BluetoothDevice,int)>(r1, 100);

     label6:
        return;
    }

    private void processProfileStateChanged(android.bluetooth.BluetoothDevice, int, int, int)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        android.bluetooth.BluetoothDevice r1;
        int i0, i1, i2;
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r2;
        android.os.RemoteException r3, $r4;
        java.lang.StringBuilder $r5, $r6, $r7;
        java.lang.String $r8;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        if i0 == 2 goto label1;

        if i0 != 1 goto label2;

     label1:
        if i1 != 2 goto label2;

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void debugLog(java.lang.String)>("Profile connected. Schedule missing profile connection if any");

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void connectOtherProfile(android.bluetooth.BluetoothDevice,int)>(r1, 1);

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void setProfileAutoConnectionPriority(android.bluetooth.BluetoothDevice,int)>(r1, i0);

     label2:
        r2 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder mBinder>;

        if r2 == null goto label6;

     label3:
        virtualinvoke r2.<android.bluetooth.IBluetooth$Stub: void sendConnectionStateChange(android.bluetooth.BluetoothDevice,int,int,int)>(r1, i0, i1, i2);

     label4:
        goto label6;

     label5:
        $r4 := @caughtexception;

        r3 = $r4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void errorLog(java.lang.String)>($r8);

     label6:
        return;

        catch android.os.RemoteException from label3 to label4 with label5;
    }

    public void onProfileServiceStateChanged(java.lang.String, int)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        java.lang.String r1;
        int i0;
        android.os.Message r2;
        android.os.Handler $r3, $r4;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.bluetooth.btservice.AdapterService: android.os.Handler mHandler>;

        r2 = virtualinvoke $r3.<android.os.Handler: android.os.Message obtainMessage(int)>(1);

        r2.<android.os.Message: java.lang.Object obj> = r1;

        r2.<android.os.Message: int arg1> = i0;

        $r4 = r0.<com.android.bluetooth.btservice.AdapterService: android.os.Handler mHandler>;

        virtualinvoke $r4.<android.os.Handler: boolean sendMessage(android.os.Message)>(r2);

        return;
    }

    private void processProfileServiceStateChanged(java.lang.String, int)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        java.lang.String r1, $r17, $r32, $r36, $r46, $r48;
        int i0, $i1, $i2, $i3;
        boolean z0, z1, z2, $z3, $z4;
        java.util.HashMap r2, $r8, $r9, $r22, $r23, $r35, $r39, $r54, r60, r63;
        java.lang.Integer r3, $r29, $r43, $r55;
        java.lang.Throwable r4, r5, r6, r7, $r52, $r53, $r57, $r58;
        java.lang.Object $r10, $r26, $r30, $r31, $r44, $r45, $r51;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r15, $r16, $r18, $r33, $r34, $r37, $r47, $r49, $r50;
        com.android.bluetooth.btservice.AdapterState $r19, $r20, $r21, $r27, $r28, $r41, $r42, r59;
        java.util.Set $r24, $r38;
        android.os.Message $r25, $r40;
        java.util.Iterator r61, r64;
        java.util.Map$Entry r62, r65;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 = 0;

        $r8 = r0.<com.android.bluetooth.btservice.AdapterService: java.util.HashMap mProfileServicesState>;

        r2 = $r8;

        entermonitor $r8;

     label01:
        $r9 = r0.<com.android.bluetooth.btservice.AdapterService: java.util.HashMap mProfileServicesState>;

        $r10 = virtualinvoke $r9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (java.lang.Integer) $r10;

        if r3 == null goto label02;

        $i3 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        if $i3 == i0 goto label02;

        $r54 = r0.<com.android.bluetooth.btservice.AdapterService: java.util.HashMap mProfileServicesState>;

        $r55 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke $r54.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r55);

        z0 = 1;

     label02:
        exitmonitor r2;

     label03:
        goto label06;

     label04:
        $r52 := @caughtexception;

        r4 = $r52;

        exitmonitor r2;

     label05:
        throw r4;

     label06:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onProfileServiceStateChange() serviceName=");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", state=");

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", doUpdate=");

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0);

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void debugLog(java.lang.String)>($r17);

        if z0 != 0 goto label07;

        return;

     label07:
        $r20 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterState mAdapterStateMachine>;

        r59 = $r20;

        entermonitor $r20;

     label08:
        $r19 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterState mAdapterStateMachine>;

        z2 = virtualinvoke $r19.<com.android.bluetooth.btservice.AdapterState: boolean isTurningOff()>();

        $r21 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterState mAdapterStateMachine>;

        z1 = virtualinvoke $r21.<com.android.bluetooth.btservice.AdapterState: boolean isTurningOn()>();

        exitmonitor r59;

     label09:
        goto label12;

     label10:
        $r57 := @caughtexception;

        r5 = $r57;

        exitmonitor r59;

     label11:
        throw r5;

     label12:
        if z2 == 0 goto label22;

        $r35 = r0.<com.android.bluetooth.btservice.AdapterService: java.util.HashMap mProfileServicesState>;

        r60 = $r35;

        entermonitor $r35;

     label13:
        $r39 = r0.<com.android.bluetooth.btservice.AdapterService: java.util.HashMap mProfileServicesState>;

        $r38 = virtualinvoke $r39.<java.util.HashMap: java.util.Set entrySet()>();

        r61 = interfaceinvoke $r38.<java.util.Set: java.util.Iterator iterator()>();

     label14:
        $z4 = interfaceinvoke r61.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label17;

        $r45 = interfaceinvoke r61.<java.util.Iterator: java.lang.Object next()>();

        r62 = (java.util.Map$Entry) $r45;

        $r44 = interfaceinvoke r62.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r43 = (java.lang.Integer) $r44;

        $i2 = virtualinvoke $r43.<java.lang.Integer: int intValue()>();

        if 10 == $i2 goto label16;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onProfileServiceStateChange() - Profile still running: ");

        $r51 = interfaceinvoke r62.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r46 = (java.lang.String) $r51;

        $r47 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void debugLog(java.lang.String)>($r48);

        exitmonitor r60;

     label15:
        return;

     label16:
        goto label14;

     label17:
        exitmonitor r60;

     label18:
        goto label21;

     label19:
        $r58 := @caughtexception;

        r6 = $r58;

        exitmonitor r60;

     label20:
        throw r6;

     label21:
        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void debugLog(java.lang.String)>("onProfileServiceStateChange() - All profile services stopped...");

        r0.<com.android.bluetooth.btservice.AdapterService: boolean mProfilesStarted> = 0;

        $r41 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterState mAdapterStateMachine>;

        $r42 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterState mAdapterStateMachine>;

        $r40 = virtualinvoke $r42.<com.android.bluetooth.btservice.AdapterState: android.os.Message obtainMessage(int)>(25);

        virtualinvoke $r41.<com.android.bluetooth.btservice.AdapterState: void sendMessage(android.os.Message)>($r40);

        goto label32;

     label22:
        if z1 == 0 goto label32;

        $r23 = r0.<com.android.bluetooth.btservice.AdapterService: java.util.HashMap mProfileServicesState>;

        r63 = $r23;

        entermonitor $r23;

     label23:
        $r22 = r0.<com.android.bluetooth.btservice.AdapterService: java.util.HashMap mProfileServicesState>;

        $r24 = virtualinvoke $r22.<java.util.HashMap: java.util.Set entrySet()>();

        r64 = interfaceinvoke $r24.<java.util.Set: java.util.Iterator iterator()>();

     label24:
        $z3 = interfaceinvoke r64.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label27;

        $r26 = interfaceinvoke r64.<java.util.Iterator: java.lang.Object next()>();

        r65 = (java.util.Map$Entry) $r26;

        $r30 = interfaceinvoke r65.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r29 = (java.lang.Integer) $r30;

        $i1 = virtualinvoke $r29.<java.lang.Integer: int intValue()>();

        if 12 == $i1 goto label26;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("onProfileServiceStateChange() - Profile still not running:");

        $r31 = interfaceinvoke r65.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r32 = (java.lang.String) $r31;

        $r37 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r36 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void debugLog(java.lang.String)>($r36);

        exitmonitor r63;

     label25:
        return;

     label26:
        goto label24;

     label27:
        exitmonitor r63;

     label28:
        goto label31;

     label29:
        $r53 := @caughtexception;

        r7 = $r53;

        exitmonitor r63;

     label30:
        throw r7;

     label31:
        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void debugLog(java.lang.String)>("onProfileServiceStateChange() - All profile services started.");

        r0.<com.android.bluetooth.btservice.AdapterService: boolean mProfilesStarted> = 1;

        $r28 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterState mAdapterStateMachine>;

        $r27 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterState mAdapterStateMachine>;

        $r25 = virtualinvoke $r27.<com.android.bluetooth.btservice.AdapterState: android.os.Message obtainMessage(int)>(2);

        virtualinvoke $r28.<com.android.bluetooth.btservice.AdapterState: void sendMessage(android.os.Message)>($r25);

     label32:
        return;

        catch java.lang.Throwable from label01 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label08 to label09 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.lang.Throwable from label13 to label15 with label19;
        catch java.lang.Throwable from label16 to label18 with label19;
        catch java.lang.Throwable from label19 to label20 with label19;
        catch java.lang.Throwable from label23 to label25 with label29;
        catch java.lang.Throwable from label26 to label28 with label29;
        catch java.lang.Throwable from label29 to label30 with label29;
    }

    public void onCreate()
    {
        com.android.bluetooth.btservice.AdapterService r0;
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder $r1;
        com.android.bluetooth.btservice.AdapterProperties $r2, $r3, $r6;
        com.android.bluetooth.btservice.AdapterState $r4, $r7;
        com.android.bluetooth.btservice.JniCallbacks $r5;
        android.os.RemoteCallbackList $r8;
        java.lang.Object $r9, $r11;
        android.app.AlarmManager $r10;
        android.os.PowerManager $r12;
        android.content.BroadcastReceiver $r13;
        android.content.IntentFilter $r14;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        specialinvoke r0.<android.app.Service: void onCreate()>();

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void debugLog(java.lang.String)>("onCreate()");

        $r1 = new com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        specialinvoke $r1.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: void <init>(com.android.bluetooth.btservice.AdapterService)>(r0);

        r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder mBinder> = $r1;

        $r2 = new com.android.bluetooth.btservice.AdapterProperties;

        specialinvoke $r2.<com.android.bluetooth.btservice.AdapterProperties: void <init>(com.android.bluetooth.btservice.AdapterService)>(r0);

        r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterProperties mAdapterProperties> = $r2;

        $r3 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterProperties mAdapterProperties>;

        $r4 = staticinvoke <com.android.bluetooth.btservice.AdapterState: com.android.bluetooth.btservice.AdapterState make(com.android.bluetooth.btservice.AdapterService,com.android.bluetooth.btservice.AdapterProperties)>(r0, $r3);

        r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterState mAdapterStateMachine> = $r4;

        $r5 = new com.android.bluetooth.btservice.JniCallbacks;

        $r7 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterState mAdapterStateMachine>;

        $r6 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterProperties mAdapterProperties>;

        specialinvoke $r5.<com.android.bluetooth.btservice.JniCallbacks: void <init>(com.android.bluetooth.btservice.AdapterState,com.android.bluetooth.btservice.AdapterProperties)>($r7, $r6);

        r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.JniCallbacks mJniCallbacks> = $r5;

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: boolean initNative()>();

        r0.<com.android.bluetooth.btservice.AdapterService: boolean mNativeAvailable> = 1;

        $r8 = new android.os.RemoteCallbackList;

        specialinvoke $r8.<android.os.RemoteCallbackList: void <init>()>();

        r0.<com.android.bluetooth.btservice.AdapterService: android.os.RemoteCallbackList mCallbacks> = $r8;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: boolean getAdapterPropertyNative(int)>(2);

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: boolean getAdapterPropertyNative(int)>(1);

        $r9 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: java.lang.Object getSystemService(java.lang.String)>("alarm");

        $r10 = (android.app.AlarmManager) $r9;

        r0.<com.android.bluetooth.btservice.AdapterService: android.app.AlarmManager mAlarmManager> = $r10;

        $r11 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: java.lang.Object getSystemService(java.lang.String)>("power");

        $r12 = (android.os.PowerManager) $r11;

        r0.<com.android.bluetooth.btservice.AdapterService: android.os.PowerManager mPowerManager> = $r12;

        $r13 = r0.<com.android.bluetooth.btservice.AdapterService: android.content.BroadcastReceiver mAlarmBroadcastReceiver>;

        $r14 = new android.content.IntentFilter;

        specialinvoke $r14.<android.content.IntentFilter: void <init>(java.lang.String)>("com.android.bluetooth.btservice.action.ALARM_WAKEUP");

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r13, $r14);

        return;
    }

    public android.os.IBinder onBind(android.content.Intent)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        android.content.Intent r1;
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder $r2;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter0: android.content.Intent;

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void debugLog(java.lang.String)>("onBind()");

        $r2 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder mBinder>;

        return $r2;
    }

    public boolean onUnbind(android.content.Intent)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        android.content.Intent r1;
        boolean $z0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter0: android.content.Intent;

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void debugLog(java.lang.String)>("onUnbind() - calling cleanup");

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void cleanup()>();

        $z0 = specialinvoke r0.<android.app.Service: boolean onUnbind(android.content.Intent)>(r1);

        return $z0;
    }

    public void onDestroy()
    {
        com.android.bluetooth.btservice.AdapterService r0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void debugLog(java.lang.String)>("onDestroy()");

        return;
    }

    void processStart()
    {
        com.android.bluetooth.btservice.AdapterService r0;
        java.lang.Class[] r1;
        int i0, $i1, $i2;
        com.android.bluetooth.btservice.RemoteDevices $r2, $r3, $r5, $r8;
        com.android.bluetooth.btservice.AdapterProperties $r4, $r6;
        com.android.bluetooth.btservice.BondStateMachine $r7, $r9;
        com.android.bluetooth.btservice.JniCallbacks $r10;
        boolean $z0;
        com.android.bluetooth.btservice.AdapterState $r11, $r13;
        android.os.Message $r12;
        java.lang.Class $r14;
        java.lang.String $r15;
        java.util.HashMap $r16;
        java.lang.Integer $r18;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void debugLog(java.lang.String)>("processStart()");

        r1 = staticinvoke <com.android.bluetooth.btservice.Config: java.lang.Class[] getSupportedProfiles()>();

        i0 = 0;

     label1:
        $i1 = lengthof r1;

        if i0 >= $i1 goto label2;

        $r16 = r0.<com.android.bluetooth.btservice.AdapterService: java.util.HashMap mProfileServicesState>;

        $r14 = r1[i0];

        $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>();

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(10);

        virtualinvoke $r16.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r18);

        i0 = i0 + 1;

        goto label1;

     label2:
        $r2 = new com.android.bluetooth.btservice.RemoteDevices;

        specialinvoke $r2.<com.android.bluetooth.btservice.RemoteDevices: void <init>(com.android.bluetooth.btservice.AdapterService)>(r0);

        r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.RemoteDevices mRemoteDevices> = $r2;

        $r4 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterProperties mAdapterProperties>;

        $r3 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.RemoteDevices mRemoteDevices>;

        virtualinvoke $r4.<com.android.bluetooth.btservice.AdapterProperties: void init(com.android.bluetooth.btservice.RemoteDevices)>($r3);

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void debugLog(java.lang.String)>("processStart() - Make Bond State Machine");

        $r6 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterProperties mAdapterProperties>;

        $r5 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.RemoteDevices mRemoteDevices>;

        $r7 = staticinvoke <com.android.bluetooth.btservice.BondStateMachine: com.android.bluetooth.btservice.BondStateMachine make(com.android.bluetooth.btservice.AdapterService,com.android.bluetooth.btservice.AdapterProperties,com.android.bluetooth.btservice.RemoteDevices)>(r0, $r6, $r5);

        r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.BondStateMachine mBondStateMachine> = $r7;

        $r10 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.JniCallbacks mJniCallbacks>;

        $r9 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.BondStateMachine mBondStateMachine>;

        $r8 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.RemoteDevices mRemoteDevices>;

        virtualinvoke $r10.<com.android.bluetooth.btservice.JniCallbacks: void init(com.android.bluetooth.btservice.BondStateMachine,com.android.bluetooth.btservice.RemoteDevices)>($r9, $r8);

        staticinvoke <com.android.bluetooth.btservice.AdapterService: void setAdapterService(com.android.bluetooth.btservice.AdapterService)>(r0);

        $z0 = r0.<com.android.bluetooth.btservice.AdapterService: boolean mProfilesStarted>;

        if $z0 != 0 goto label3;

        $i2 = lengthof r1;

        if $i2 <= 0 goto label3;

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void setProfileServiceState(java.lang.Class[],int)>(r1, 12);

        goto label4;

     label3:
        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void debugLog(java.lang.String)>("processStart() - Profile Services alreay started");

        $r13 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterState mAdapterStateMachine>;

        $r11 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterState mAdapterStateMachine>;

        $r12 = virtualinvoke $r11.<com.android.bluetooth.btservice.AdapterState: android.os.Message obtainMessage(int)>(2);

        virtualinvoke $r13.<com.android.bluetooth.btservice.AdapterState: void sendMessage(android.os.Message)>($r12);

     label4:
        return;
    }

    void startBluetoothDisable()
    {
        com.android.bluetooth.btservice.AdapterService r0;
        com.android.bluetooth.btservice.AdapterState $r1, $r2;
        android.os.Message $r3;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        $r2 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterState mAdapterStateMachine>;

        $r1 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterState mAdapterStateMachine>;

        $r3 = virtualinvoke $r1.<com.android.bluetooth.btservice.AdapterState: android.os.Message obtainMessage(int)>(21);

        virtualinvoke $r2.<com.android.bluetooth.btservice.AdapterState: void sendMessage(android.os.Message)>($r3);

        return;
    }

    boolean stopProfileServices()
    {
        com.android.bluetooth.btservice.AdapterService r0;
        java.lang.Class[] r1;
        boolean $z0;
        int $i0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 = staticinvoke <com.android.bluetooth.btservice.Config: java.lang.Class[] getSupportedProfiles()>();

        $z0 = r0.<com.android.bluetooth.btservice.AdapterService: boolean mProfilesStarted>;

        if $z0 == 0 goto label1;

        $i0 = lengthof r1;

        if $i0 <= 0 goto label1;

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void setProfileServiceState(java.lang.Class[],int)>(r1, 10);

        return 1;

     label1:
        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void debugLog(java.lang.String)>("stopProfileServices() - No profiles services to stop or already stopped.");

        return 0;
    }

    void updateAdapterState(int, int)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        int i0, i1, i2, i3;
        android.os.RemoteException r1, $r14;
        android.os.RemoteCallbackList $r2, $r3, $r9, $r10;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r13, $r15, $r16, $r17, $r18, $r20;
        java.lang.String $r8, $r19;
        android.bluetooth.IBluetoothCallback $r11;
        android.os.IInterface $r12;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r2 = r0.<com.android.bluetooth.btservice.AdapterService: android.os.RemoteCallbackList mCallbacks>;

        if $r2 == null goto label7;

        $r3 = r0.<com.android.bluetooth.btservice.AdapterService: android.os.RemoteCallbackList mCallbacks>;

        i2 = virtualinvoke $r3.<android.os.RemoteCallbackList: int beginBroadcast()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateAdapterState() - Broadcasting state to ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" receivers.");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void debugLog(java.lang.String)>($r8);

        i3 = 0;

     label1:
        if i3 >= i2 goto label6;

     label2:
        $r10 = r0.<com.android.bluetooth.btservice.AdapterService: android.os.RemoteCallbackList mCallbacks>;

        $r12 = virtualinvoke $r10.<android.os.RemoteCallbackList: android.os.IInterface getBroadcastItem(int)>(i3);

        $r11 = (android.bluetooth.IBluetoothCallback) $r12;

        interfaceinvoke $r11.<android.bluetooth.IBluetoothCallback: void onBluetoothStateChange(int,int)>(i0, i1);

     label3:
        goto label5;

     label4:
        $r14 := @caughtexception;

        r1 = $r14;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateAdapterState() - Callback #");

        $r15 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" failed (");

        $r17 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r19 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void debugLog(java.lang.String)>($r19);

     label5:
        i3 = i3 + 1;

        goto label1;

     label6:
        $r9 = r0.<com.android.bluetooth.btservice.AdapterService: android.os.RemoteCallbackList mCallbacks>;

        virtualinvoke $r9.<android.os.RemoteCallbackList: void finishBroadcast()>();

     label7:
        return;

        catch android.os.RemoteException from label2 to label3 with label4;
    }

    void cleanup()
    {
        com.android.bluetooth.btservice.AdapterService r0, r1;
        java.lang.Throwable r2, $r28;
        boolean $z0, $z1;
        android.content.BroadcastReceiver $r3;
        android.app.PendingIntent $r4, $r27;
        android.os.PowerManager$WakeLock $r6, $r24;
        com.android.bluetooth.btservice.AdapterState $r7, $r22, $r25;
        com.android.bluetooth.btservice.BondStateMachine $r8, $r20, $r23;
        com.android.bluetooth.btservice.RemoteDevices $r9, $r21;
        com.android.bluetooth.btservice.AdapterProperties $r10, $r18;
        com.android.bluetooth.btservice.JniCallbacks $r11, $r19;
        java.util.HashMap $r12, $r17;
        android.os.RemoteCallbackList $r13, $r16;
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder $r14, $r15;
        android.app.AlarmManager $r26;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void debugLog(java.lang.String)>("cleanup()");

        $z0 = r0.<com.android.bluetooth.btservice.AdapterService: boolean mCleaningUp>;

        if $z0 == 0 goto label01;

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void errorLog(java.lang.String)>("cleanup() - Service already starting to cleanup, ignoring request...");

        return;

     label01:
        r0.<com.android.bluetooth.btservice.AdapterService: boolean mCleaningUp> = 1;

        $r3 = r0.<com.android.bluetooth.btservice.AdapterService: android.content.BroadcastReceiver mAlarmBroadcastReceiver>;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void unregisterReceiver(android.content.BroadcastReceiver)>($r3);

        $r4 = r0.<com.android.bluetooth.btservice.AdapterService: android.app.PendingIntent mPendingAlarm>;

        if $r4 == null goto label02;

        $r26 = r0.<com.android.bluetooth.btservice.AdapterService: android.app.AlarmManager mAlarmManager>;

        $r27 = r0.<com.android.bluetooth.btservice.AdapterService: android.app.PendingIntent mPendingAlarm>;

        virtualinvoke $r26.<android.app.AlarmManager: void cancel(android.app.PendingIntent)>($r27);

        r0.<com.android.bluetooth.btservice.AdapterService: android.app.PendingIntent mPendingAlarm> = null;

     label02:
        r1 = r0;

        entermonitor r0;

     label03:
        $r6 = r0.<com.android.bluetooth.btservice.AdapterService: android.os.PowerManager$WakeLock mWakeLock>;

        if $r6 == null goto label04;

        $r24 = r0.<com.android.bluetooth.btservice.AdapterService: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r24.<android.os.PowerManager$WakeLock: void release()>();

        r0.<com.android.bluetooth.btservice.AdapterService: android.os.PowerManager$WakeLock mWakeLock> = null;

     label04:
        exitmonitor r1;

     label05:
        goto label08;

     label06:
        $r28 := @caughtexception;

        r2 = $r28;

        exitmonitor r1;

     label07:
        throw r2;

     label08:
        $r7 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterState mAdapterStateMachine>;

        if $r7 == null goto label09;

        $r22 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterState mAdapterStateMachine>;

        virtualinvoke $r22.<com.android.bluetooth.btservice.AdapterState: void doQuit()>();

        $r25 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterState mAdapterStateMachine>;

        virtualinvoke $r25.<com.android.bluetooth.btservice.AdapterState: void cleanup()>();

     label09:
        $r8 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.BondStateMachine mBondStateMachine>;

        if $r8 == null goto label10;

        $r20 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.BondStateMachine mBondStateMachine>;

        virtualinvoke $r20.<com.android.bluetooth.btservice.BondStateMachine: void doQuit()>();

        $r23 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.BondStateMachine mBondStateMachine>;

        virtualinvoke $r23.<com.android.bluetooth.btservice.BondStateMachine: void cleanup()>();

     label10:
        $r9 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.RemoteDevices mRemoteDevices>;

        if $r9 == null goto label11;

        $r21 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.RemoteDevices mRemoteDevices>;

        virtualinvoke $r21.<com.android.bluetooth.btservice.RemoteDevices: void cleanup()>();

     label11:
        $z1 = r0.<com.android.bluetooth.btservice.AdapterService: boolean mNativeAvailable>;

        if $z1 == 0 goto label12;

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void debugLog(java.lang.String)>("cleanup() - Cleaning up adapter native");

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void cleanupNative()>();

        r0.<com.android.bluetooth.btservice.AdapterService: boolean mNativeAvailable> = 0;

     label12:
        $r10 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterProperties mAdapterProperties>;

        if $r10 == null goto label13;

        $r18 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterProperties mAdapterProperties>;

        virtualinvoke $r18.<com.android.bluetooth.btservice.AdapterProperties: void cleanup()>();

     label13:
        $r11 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.JniCallbacks mJniCallbacks>;

        if $r11 == null goto label14;

        $r19 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.JniCallbacks mJniCallbacks>;

        virtualinvoke $r19.<com.android.bluetooth.btservice.JniCallbacks: void cleanup()>();

     label14:
        $r12 = r0.<com.android.bluetooth.btservice.AdapterService: java.util.HashMap mProfileServicesState>;

        if $r12 == null goto label15;

        $r17 = r0.<com.android.bluetooth.btservice.AdapterService: java.util.HashMap mProfileServicesState>;

        virtualinvoke $r17.<java.util.HashMap: void clear()>();

     label15:
        staticinvoke <com.android.bluetooth.btservice.AdapterService: void clearAdapterService()>();

        $r14 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder mBinder>;

        if $r14 == null goto label16;

        $r15 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder mBinder>;

        virtualinvoke $r15.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: boolean cleanup()>();

        r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder mBinder> = null;

     label16:
        $r13 = r0.<com.android.bluetooth.btservice.AdapterService: android.os.RemoteCallbackList mCallbacks>;

        if $r13 == null goto label17;

        $r16 = r0.<com.android.bluetooth.btservice.AdapterService: android.os.RemoteCallbackList mCallbacks>;

        virtualinvoke $r16.<android.os.RemoteCallbackList: void kill()>();

     label17:
        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void debugLog(java.lang.String)>("cleanup() - Bluetooth process exited normally.");

        staticinvoke <java.lang.System: void exit(int)>(0);

        return;

        catch java.lang.Throwable from label03 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
    }

    private void setProfileServiceState(java.lang.Class[], int)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        java.lang.Class[] r1;
        int i0, i3, $i4, $i5;
        byte b1, b2;
        java.lang.String r2, $r12, $r22, $r29, $r31;
        java.lang.Integer r3, $r14;
        android.content.Intent r4, $r16;
        java.lang.Class $r5, $r19;
        java.util.HashMap $r6, $r15;
        java.lang.Object $r7;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r13, $r23, $r24, $r25, $r26, $r27, $r28, $r30;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter0: java.lang.Class[];

        i0 := @parameter1: int;

        if i0 == 12 goto label01;

        if i0 == 10 goto label01;

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void debugLog(java.lang.String)>("setProfileServiceState() - Invalid state, leaving...");

        return;

     label01:
        b1 = 10;

        b2 = 11;

        if i0 != 10 goto label02;

        b1 = 12;

        b2 = 13;

     label02:
        i3 = 0;

     label03:
        $i4 = lengthof r1;

        if i3 >= $i4 goto label10;

        $r5 = r1[i3];

        r2 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r6 = r0.<com.android.bluetooth.btservice.AdapterService: java.util.HashMap mProfileServicesState>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        r3 = (java.lang.Integer) $r7;

        if r3 == null goto label06;

        $i5 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        if $i5 == b1 goto label06;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setProfileServiceState() - Unable to ");

        if i0 != 10 goto label04;

        $r29 = "start";

        goto label05;

     label04:
        $r29 = "stop";

     label05:
        $r27 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" service ");

        $r25 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Invalid state: ");

        $r30 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void debugLog(java.lang.String)>($r31);

        goto label09;

     label06:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("setProfileServiceState() - ");

        if i0 != 10 goto label07;

        $r22 = "Stopping";

        goto label08;

     label07:
        $r22 = "Starting";

     label08:
        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r10 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" service ");

        $r13 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r12 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void debugLog(java.lang.String)>($r12);

        $r15 = r0.<com.android.bluetooth.btservice.AdapterService: java.util.HashMap mProfileServicesState>;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(b2);

        virtualinvoke $r15.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r14);

        $r16 = new android.content.Intent;

        $r19 = r1[i3];

        specialinvoke $r16.<android.content.Intent: void <init>(android.content.Context,java.lang.Class)>(r0, $r19);

        r4 = $r16;

        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,java.lang.String)>("action", "com.android.bluetooth.btservice.action.STATE_CHANGED");

        virtualinvoke r4.<android.content.Intent: android.content.Intent putExtra(java.lang.String,int)>("android.bluetooth.adapter.extra.STATE", i0);

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: android.content.ComponentName startService(android.content.Intent)>(r4);

     label09:
        i3 = i3 + 1;

        goto label03;

     label10:
        return;
    }

    private boolean isAvailable()
    {
        com.android.bluetooth.btservice.AdapterService r0;
        boolean $z0, $z1;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        $z0 = r0.<com.android.bluetooth.btservice.AdapterService: boolean mCleaningUp>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    boolean isEnabled()
    {
        com.android.bluetooth.btservice.AdapterService r0;
        com.android.bluetooth.btservice.AdapterProperties $r1;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r1 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterProperties mAdapterProperties>;

        $i0 = virtualinvoke $r1.<com.android.bluetooth.btservice.AdapterProperties: int getState()>();

        if $i0 != 12 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    int getState()
    {
        com.android.bluetooth.btservice.AdapterService r0;
        com.android.bluetooth.btservice.AdapterProperties $r1, $r4, $r7;
        java.lang.StringBuilder $r2, $r3, $r5;
        java.lang.String $r6;
        int $i0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r1 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterProperties mAdapterProperties>;

        if $r1 != null goto label1;

        return 10;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getState() - mAdapterProperties: ");

        $r4 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterProperties mAdapterProperties>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void debugLog(java.lang.String)>($r6);

        $r7 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterProperties mAdapterProperties>;

        $i0 = virtualinvoke $r7.<com.android.bluetooth.btservice.AdapterProperties: int getState()>();

        return $i0;
    }

    boolean enable()
    {
        com.android.bluetooth.btservice.AdapterService r0;
        boolean $z0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        $z0 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: boolean enable(boolean)>(0);

        return $z0;
    }

    public boolean enableNoAutoConnect()
    {
        com.android.bluetooth.btservice.AdapterService r0;
        boolean $z0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        $z0 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: boolean enable(boolean)>(1);

        return $z0;
    }

    public synchronized boolean enable(boolean)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        boolean z0, $z1;
        android.os.Message r1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;
        com.android.bluetooth.btservice.AdapterState $r6, $r7;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH_ADMIN", "Need BLUETOOTH ADMIN permission");

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("enable() - Enable called with quiet mode status =  ");

        $z1 = r0.<com.android.bluetooth.btservice.AdapterService: boolean mQuietmode>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void debugLog(java.lang.String)>($r5);

        r0.<com.android.bluetooth.btservice.AdapterService: boolean mQuietmode> = z0;

        $r6 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterState mAdapterStateMachine>;

        r1 = virtualinvoke $r6.<com.android.bluetooth.btservice.AdapterState: android.os.Message obtainMessage(int)>(1);

        $r7 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterState mAdapterStateMachine>;

        virtualinvoke $r7.<com.android.bluetooth.btservice.AdapterState: void sendMessage(android.os.Message)>(r1);

        return 1;
    }

    boolean disable()
    {
        com.android.bluetooth.btservice.AdapterService r0;
        android.os.Message r1;
        com.android.bluetooth.btservice.AdapterState $r2, $r3;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH_ADMIN", "Need BLUETOOTH ADMIN permission");

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void debugLog(java.lang.String)>("disable() called...");

        $r2 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterState mAdapterStateMachine>;

        r1 = virtualinvoke $r2.<com.android.bluetooth.btservice.AdapterState: android.os.Message obtainMessage(int)>(20);

        $r3 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterState mAdapterStateMachine>;

        virtualinvoke $r3.<com.android.bluetooth.btservice.AdapterState: void sendMessage(android.os.Message)>(r1);

        return 1;
    }

    java.lang.String getAddress()
    {
        com.android.bluetooth.btservice.AdapterService r0;
        byte[] r1;
        com.android.bluetooth.btservice.AdapterProperties $r2;
        java.lang.String $r3;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r2 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterProperties mAdapterProperties>;

        r1 = virtualinvoke $r2.<com.android.bluetooth.btservice.AdapterProperties: byte[] getAddress()>();

        $r3 = staticinvoke <com.android.bluetooth.Utils: java.lang.String getAddressStringFromByte(byte[])>(r1);

        return $r3;
    }

    android.os.ParcelUuid[] getUuids()
    {
        com.android.bluetooth.btservice.AdapterService r0;
        com.android.bluetooth.btservice.AdapterProperties $r1;
        android.os.ParcelUuid[] $r2;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r1 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterProperties mAdapterProperties>;

        $r2 = virtualinvoke $r1.<com.android.bluetooth.btservice.AdapterProperties: android.os.ParcelUuid[] getUuids()>();

        return $r2;
    }

    java.lang.String getName()
    {
        com.android.bluetooth.btservice.AdapterService r0;
        java.lang.Throwable r1, $r4;
        com.android.bluetooth.btservice.AdapterProperties $r2;
        java.lang.String $r3, $r9;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

     label1:
        $r2 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterProperties mAdapterProperties>;

        $r3 = virtualinvoke $r2.<com.android.bluetooth.btservice.AdapterProperties: java.lang.String getName()>();

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getName() - Unexpected exception (");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void debugLog(java.lang.String)>($r9);

        return null;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    boolean setName(java.lang.String)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        java.lang.String r1;
        com.android.bluetooth.btservice.AdapterProperties $r2;
        boolean $z0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH_ADMIN", "Need BLUETOOTH ADMIN permission");

        $r2 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterProperties mAdapterProperties>;

        $z0 = virtualinvoke $r2.<com.android.bluetooth.btservice.AdapterProperties: boolean setName(java.lang.String)>(r1);

        return $z0;
    }

    int getScanMode()
    {
        com.android.bluetooth.btservice.AdapterService r0;
        com.android.bluetooth.btservice.AdapterProperties $r1;
        int $i0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r1 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterProperties mAdapterProperties>;

        $i0 = virtualinvoke $r1.<com.android.bluetooth.btservice.AdapterProperties: int getScanMode()>();

        return $i0;
    }

    boolean setScanMode(int, int)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        int i0, i1, i2;
        com.android.bluetooth.btservice.AdapterProperties $r1;
        boolean $z1;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: boolean setDiscoverableTimeout(int)>(i1);

        i2 = staticinvoke <com.android.bluetooth.btservice.AdapterService: int convertScanModeToHal(int)>(i0);

        $r1 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterProperties mAdapterProperties>;

        $z1 = virtualinvoke $r1.<com.android.bluetooth.btservice.AdapterProperties: boolean setScanMode(int)>(i2);

        return $z1;
    }

    int getDiscoverableTimeout()
    {
        com.android.bluetooth.btservice.AdapterService r0;
        com.android.bluetooth.btservice.AdapterProperties $r1;
        int $i0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r1 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterProperties mAdapterProperties>;

        $i0 = virtualinvoke $r1.<com.android.bluetooth.btservice.AdapterProperties: int getDiscoverableTimeout()>();

        return $i0;
    }

    boolean setDiscoverableTimeout(int)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        int i0;
        com.android.bluetooth.btservice.AdapterProperties $r1;
        boolean $z0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r1 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterProperties mAdapterProperties>;

        $z0 = virtualinvoke $r1.<com.android.bluetooth.btservice.AdapterProperties: boolean setDiscoverableTimeout(int)>(i0);

        return $z0;
    }

    boolean startDiscovery()
    {
        com.android.bluetooth.btservice.AdapterService r0;
        boolean $z0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH_ADMIN", "Need BLUETOOTH ADMIN permission");

        $z0 = specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: boolean startDiscoveryNative()>();

        return $z0;
    }

    boolean cancelDiscovery()
    {
        com.android.bluetooth.btservice.AdapterService r0;
        boolean $z0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH_ADMIN", "Need BLUETOOTH ADMIN permission");

        $z0 = specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: boolean cancelDiscoveryNative()>();

        return $z0;
    }

    boolean isDiscovering()
    {
        com.android.bluetooth.btservice.AdapterService r0;
        com.android.bluetooth.btservice.AdapterProperties $r1;
        boolean $z0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r1 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterProperties mAdapterProperties>;

        $z0 = virtualinvoke $r1.<com.android.bluetooth.btservice.AdapterProperties: boolean isDiscovering()>();

        return $z0;
    }

    android.bluetooth.BluetoothDevice[] getBondedDevices()
    {
        com.android.bluetooth.btservice.AdapterService r0;
        com.android.bluetooth.btservice.AdapterProperties $r1;
        android.bluetooth.BluetoothDevice[] $r2;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r1 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterProperties mAdapterProperties>;

        $r2 = virtualinvoke $r1.<com.android.bluetooth.btservice.AdapterProperties: android.bluetooth.BluetoothDevice[] getBondedDevices()>();

        return $r2;
    }

    int getAdapterConnectionState()
    {
        com.android.bluetooth.btservice.AdapterService r0;
        com.android.bluetooth.btservice.AdapterProperties $r1;
        int $i0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r1 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterProperties mAdapterProperties>;

        $i0 = virtualinvoke $r1.<com.android.bluetooth.btservice.AdapterProperties: int getConnectionState()>();

        return $i0;
    }

    int getProfileConnectionState(int)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        int i0, $i1;
        com.android.bluetooth.btservice.AdapterProperties $r1;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        i0 := @parameter0: int;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r1 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterProperties mAdapterProperties>;

        $i1 = virtualinvoke $r1.<com.android.bluetooth.btservice.AdapterProperties: int getProfileConnectionState(int)>(i0);

        return $i1;
    }

    boolean createBond(android.bluetooth.BluetoothDevice, int)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        android.bluetooth.BluetoothDevice r1;
        int i0, $i1;
        com.android.bluetooth.btservice.RemoteDevices$DeviceProperties r2;
        android.os.Message r3;
        com.android.bluetooth.btservice.RemoteDevices $r4;
        com.android.bluetooth.btservice.BondStateMachine $r5, $r6;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH_ADMIN", "Need BLUETOOTH ADMIN permission");

        $r4 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.RemoteDevices mRemoteDevices>;

        r2 = virtualinvoke $r4.<com.android.bluetooth.btservice.RemoteDevices: com.android.bluetooth.btservice.RemoteDevices$DeviceProperties getDeviceProperties(android.bluetooth.BluetoothDevice)>(r1);

        if r2 == null goto label1;

        $i1 = virtualinvoke r2.<com.android.bluetooth.btservice.RemoteDevices$DeviceProperties: int getBondState()>();

        if $i1 == 10 goto label1;

        return 0;

     label1:
        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: boolean cancelDiscoveryNative()>();

        $r5 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.BondStateMachine mBondStateMachine>;

        r3 = virtualinvoke $r5.<com.android.bluetooth.btservice.BondStateMachine: android.os.Message obtainMessage(int)>(1);

        r3.<android.os.Message: java.lang.Object obj> = r1;

        r3.<android.os.Message: int arg1> = i0;

        $r6 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.BondStateMachine mBondStateMachine>;

        virtualinvoke $r6.<com.android.bluetooth.btservice.BondStateMachine: void sendMessage(android.os.Message)>(r3);

        return 1;
    }

    public boolean isQuietModeEnabled()
    {
        com.android.bluetooth.btservice.AdapterService r0;
        java.lang.StringBuilder $r1, $r2, $r3;
        boolean $z0, $z1;
        java.lang.String $r4;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("isQuetModeEnabled() - Enabled = ");

        $z0 = r0.<com.android.bluetooth.btservice.AdapterService: boolean mQuietmode>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void debugLog(java.lang.String)>($r4);

        $z1 = r0.<com.android.bluetooth.btservice.AdapterService: boolean mQuietmode>;

        return $z1;
    }

    public void autoConnect()
    {
        com.android.bluetooth.btservice.AdapterService r0;
        int $i0;
        boolean $z0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        $i0 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: int getState()>();

        if $i0 == 12 goto label1;

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void errorLog(java.lang.String)>("autoConnect() - BT is not ON. Exiting autoConnect");

        return;

     label1:
        $z0 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: boolean isQuietModeEnabled()>();

        if $z0 != 0 goto label2;

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void debugLog(java.lang.String)>("autoConnect() - Initiate auto connection on BT on...");

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void autoConnectHeadset()>();

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void autoConnectA2dp()>();

        goto label3;

     label2:
        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void debugLog(java.lang.String)>("autoConnect() - BT is in quiet mode. Not initiating auto connections");

     label3:
        return;
    }

    private void autoConnectHeadset()
    {
        com.android.bluetooth.btservice.AdapterService r0;
        com.android.bluetooth.hfp.HeadsetService r1;
        android.bluetooth.BluetoothDevice[] r2, r3;
        int i0, i1, $i2;
        android.bluetooth.BluetoothDevice r4;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.lang.String $r7, $r9;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 = staticinvoke <com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetService getHeadsetService()>();

        r2 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: android.bluetooth.BluetoothDevice[] getBondedDevices()>();

        if r2 == null goto label1;

        if r1 != null goto label2;

     label1:
        return;

     label2:
        r3 = r2;

        i0 = lengthof r3;

        i1 = 0;

     label3:
        if i1 >= i0 goto label5;

        r4 = r3[i1];

        $i2 = virtualinvoke r1.<com.android.bluetooth.hfp.HeadsetService: int getPriority(android.bluetooth.BluetoothDevice)>(r4);

        if $i2 != 1000 goto label4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("autoConnectHeadset() - Connecting HFP with ");

        $r7 = virtualinvoke r4.<android.bluetooth.BluetoothDevice: java.lang.String toString()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void debugLog(java.lang.String)>($r9);

        virtualinvoke r1.<com.android.bluetooth.hfp.HeadsetService: boolean connect(android.bluetooth.BluetoothDevice)>(r4);

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        return;
    }

    private void autoConnectA2dp()
    {
        com.android.bluetooth.btservice.AdapterService r0;
        com.android.bluetooth.a2dp.A2dpService r1;
        android.bluetooth.BluetoothDevice[] r2, r3;
        int i0, i1, $i2;
        android.bluetooth.BluetoothDevice r4;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.lang.String $r7, $r9;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 = staticinvoke <com.android.bluetooth.a2dp.A2dpService: com.android.bluetooth.a2dp.A2dpService getA2dpService()>();

        r2 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: android.bluetooth.BluetoothDevice[] getBondedDevices()>();

        if r2 == null goto label1;

        if r1 != null goto label2;

     label1:
        return;

     label2:
        r3 = r2;

        i0 = lengthof r3;

        i1 = 0;

     label3:
        if i1 >= i0 goto label5;

        r4 = r3[i1];

        $i2 = virtualinvoke r1.<com.android.bluetooth.a2dp.A2dpService: int getPriority(android.bluetooth.BluetoothDevice)>(r4);

        if $i2 != 1000 goto label4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("autoConnectA2dp() - Connecting A2DP with ");

        $r7 = virtualinvoke r4.<android.bluetooth.BluetoothDevice: java.lang.String toString()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void debugLog(java.lang.String)>($r9);

        virtualinvoke r1.<com.android.bluetooth.a2dp.A2dpService: boolean connect(android.bluetooth.BluetoothDevice)>(r4);

     label4:
        i1 = i1 + 1;

        goto label3;

     label5:
        return;
    }

    public void connectOtherProfile(android.bluetooth.BluetoothDevice, int)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        android.bluetooth.BluetoothDevice r1;
        int i0;
        android.os.Message r2;
        android.os.Handler $r3, $r4, $r5;
        boolean $z0, $z1;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        i0 := @parameter1: int;

        $r3 = r0.<com.android.bluetooth.btservice.AdapterService: android.os.Handler mHandler>;

        $z0 = virtualinvoke $r3.<android.os.Handler: boolean hasMessages(int)>(30);

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: boolean isQuietModeEnabled()>();

        if $z1 != 0 goto label1;

        $r4 = r0.<com.android.bluetooth.btservice.AdapterService: android.os.Handler mHandler>;

        r2 = virtualinvoke $r4.<android.os.Handler: android.os.Message obtainMessage(int)>(30);

        r2.<android.os.Message: java.lang.Object obj> = r1;

        r2.<android.os.Message: int arg1> = i0;

        $r5 = r0.<com.android.bluetooth.btservice.AdapterService: android.os.Handler mHandler>;

        virtualinvoke $r5.<android.os.Handler: boolean sendMessageDelayed(android.os.Message,long)>(r2, 6000L);

     label1:
        return;
    }

    private void processConnectOtherProfiles(android.bluetooth.BluetoothDevice, int)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        android.bluetooth.BluetoothDevice r1;
        int i0, $i1, $i2, $i3;
        com.android.bluetooth.hfp.HeadsetService r2;
        com.android.bluetooth.a2dp.A2dpService r3;
        java.util.List r4, r5;
        boolean $z0, $z1, $z2, $z4;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        i0 := @parameter1: int;

        $i1 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: int getState()>();

        if $i1 == 12 goto label1;

        return;

     label1:
        r2 = staticinvoke <com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetService getHeadsetService()>();

        r3 = staticinvoke <com.android.bluetooth.a2dp.A2dpService: com.android.bluetooth.a2dp.A2dpService getA2dpService()>();

        if r2 == null goto label2;

        if r3 != null goto label3;

     label2:
        return;

     label3:
        r4 = virtualinvoke r3.<com.android.bluetooth.a2dp.A2dpService: java.util.List getConnectedDevices()>();

        r5 = virtualinvoke r2.<com.android.bluetooth.hfp.HeadsetService: java.util.List getConnectedDevices()>();

        $z0 = interfaceinvoke r5.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label4;

        $z4 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>();

        if $z4 == 0 goto label4;

        if 1 != i0 goto label4;

        return;

     label4:
        $z1 = interfaceinvoke r5.<java.util.List: boolean isEmpty()>();

        if $z1 == 0 goto label5;

        $i3 = virtualinvoke r2.<com.android.bluetooth.hfp.HeadsetService: int getPriority(android.bluetooth.BluetoothDevice)>(r1);

        if $i3 < 100 goto label5;

        virtualinvoke r2.<com.android.bluetooth.hfp.HeadsetService: boolean connect(android.bluetooth.BluetoothDevice)>(r1);

        goto label6;

     label5:
        $z2 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>();

        if $z2 == 0 goto label6;

        $i2 = virtualinvoke r3.<com.android.bluetooth.a2dp.A2dpService: int getPriority(android.bluetooth.BluetoothDevice)>(r1);

        if $i2 < 100 goto label6;

        virtualinvoke r3.<com.android.bluetooth.a2dp.A2dpService: boolean connect(android.bluetooth.BluetoothDevice)>(r1);

     label6:
        return;
    }

    private void adjustOtherHeadsetPriorities(com.android.bluetooth.hfp.HeadsetService, java.util.List)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        com.android.bluetooth.hfp.HeadsetService r1;
        java.util.List r2;
        android.bluetooth.BluetoothDevice[] r3;
        int i0, i1, $i2;
        android.bluetooth.BluetoothDevice r4;
        boolean $z0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter0: com.android.bluetooth.hfp.HeadsetService;

        r2 := @parameter1: java.util.List;

        r3 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: android.bluetooth.BluetoothDevice[] getBondedDevices()>();

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r4 = r3[i1];

        $i2 = virtualinvoke r1.<com.android.bluetooth.hfp.HeadsetService: int getPriority(android.bluetooth.BluetoothDevice)>(r4);

        if $i2 < 1000 goto label2;

        $z0 = interfaceinvoke r2.<java.util.List: boolean contains(java.lang.Object)>(r4);

        if $z0 != 0 goto label2;

        virtualinvoke r1.<com.android.bluetooth.hfp.HeadsetService: boolean setPriority(android.bluetooth.BluetoothDevice,int)>(r4, 100);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    private void adjustOtherSinkPriorities(com.android.bluetooth.a2dp.A2dpService, android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        com.android.bluetooth.a2dp.A2dpService r1;
        android.bluetooth.BluetoothDevice r2, r4;
        android.bluetooth.BluetoothDevice[] r3;
        int i0, i1, $i2;
        boolean $z0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter0: com.android.bluetooth.a2dp.A2dpService;

        r2 := @parameter1: android.bluetooth.BluetoothDevice;

        r3 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: android.bluetooth.BluetoothDevice[] getBondedDevices()>();

        i0 = lengthof r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label3;

        r4 = r3[i1];

        $i2 = virtualinvoke r1.<com.android.bluetooth.a2dp.A2dpService: int getPriority(android.bluetooth.BluetoothDevice)>(r4);

        if $i2 < 1000 goto label2;

        $z0 = virtualinvoke r4.<android.bluetooth.BluetoothDevice: boolean equals(java.lang.Object)>(r2);

        if $z0 != 0 goto label2;

        virtualinvoke r1.<com.android.bluetooth.a2dp.A2dpService: boolean setPriority(android.bluetooth.BluetoothDevice,int)>(r4, 100);

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    void setProfileAutoConnectionPriority(android.bluetooth.BluetoothDevice, int)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        android.bluetooth.BluetoothDevice r1;
        int i0, $i1, $i2;
        com.android.bluetooth.hfp.HeadsetService r2;
        java.util.List r3;
        com.android.bluetooth.a2dp.A2dpService r4;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        i0 := @parameter1: int;

        if i0 != 1 goto label2;

        r2 = staticinvoke <com.android.bluetooth.hfp.HeadsetService: com.android.bluetooth.hfp.HeadsetService getHeadsetService()>();

        r3 = virtualinvoke r2.<com.android.bluetooth.hfp.HeadsetService: java.util.List getConnectedDevices()>();

        if r2 == null goto label1;

        $i2 = virtualinvoke r2.<com.android.bluetooth.hfp.HeadsetService: int getPriority(android.bluetooth.BluetoothDevice)>(r1);

        if 1000 == $i2 goto label1;

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void adjustOtherHeadsetPriorities(com.android.bluetooth.hfp.HeadsetService,java.util.List)>(r2, r3);

        virtualinvoke r2.<com.android.bluetooth.hfp.HeadsetService: boolean setPriority(android.bluetooth.BluetoothDevice,int)>(r1, 1000);

     label1:
        goto label3;

     label2:
        if i0 != 2 goto label3;

        r4 = staticinvoke <com.android.bluetooth.a2dp.A2dpService: com.android.bluetooth.a2dp.A2dpService getA2dpService()>();

        if r4 == null goto label3;

        $i1 = virtualinvoke r4.<com.android.bluetooth.a2dp.A2dpService: int getPriority(android.bluetooth.BluetoothDevice)>(r1);

        if 1000 == $i1 goto label3;

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void adjustOtherSinkPriorities(com.android.bluetooth.a2dp.A2dpService,android.bluetooth.BluetoothDevice)>(r4, r1);

        virtualinvoke r4.<com.android.bluetooth.a2dp.A2dpService: boolean setPriority(android.bluetooth.BluetoothDevice,int)>(r1, 1000);

     label3:
        return;
    }

    boolean cancelBondProcess(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        android.bluetooth.BluetoothDevice r1;
        byte[] r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH_ADMIN", "Need BLUETOOTH ADMIN permission");

        $r3 = virtualinvoke r1.<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>();

        r2 = staticinvoke <com.android.bluetooth.Utils: byte[] getBytesFromAddress(java.lang.String)>($r3);

        $z0 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: boolean cancelBondNative(byte[])>(r2);

        return $z0;
    }

    boolean removeBond(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        android.bluetooth.BluetoothDevice r1;
        com.android.bluetooth.btservice.RemoteDevices$DeviceProperties r2;
        android.os.Message r3;
        com.android.bluetooth.btservice.RemoteDevices $r4;
        int $i0;
        com.android.bluetooth.btservice.BondStateMachine $r5, $r6;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH_ADMIN", "Need BLUETOOTH ADMIN permission");

        $r4 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.RemoteDevices mRemoteDevices>;

        r2 = virtualinvoke $r4.<com.android.bluetooth.btservice.RemoteDevices: com.android.bluetooth.btservice.RemoteDevices$DeviceProperties getDeviceProperties(android.bluetooth.BluetoothDevice)>(r1);

        if r2 == null goto label1;

        $i0 = virtualinvoke r2.<com.android.bluetooth.btservice.RemoteDevices$DeviceProperties: int getBondState()>();

        if $i0 == 12 goto label2;

     label1:
        return 0;

     label2:
        $r5 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.BondStateMachine mBondStateMachine>;

        r3 = virtualinvoke $r5.<com.android.bluetooth.btservice.BondStateMachine: android.os.Message obtainMessage(int)>(3);

        r3.<android.os.Message: java.lang.Object obj> = r1;

        $r6 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.BondStateMachine mBondStateMachine>;

        virtualinvoke $r6.<com.android.bluetooth.btservice.BondStateMachine: void sendMessage(android.os.Message)>(r3);

        return 1;
    }

    int getBondState(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        android.bluetooth.BluetoothDevice r1;
        com.android.bluetooth.btservice.RemoteDevices$DeviceProperties r2;
        com.android.bluetooth.btservice.RemoteDevices $r3;
        int $i0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r3 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.RemoteDevices mRemoteDevices>;

        r2 = virtualinvoke $r3.<com.android.bluetooth.btservice.RemoteDevices: com.android.bluetooth.btservice.RemoteDevices$DeviceProperties getDeviceProperties(android.bluetooth.BluetoothDevice)>(r1);

        if r2 != null goto label1;

        return 10;

     label1:
        $i0 = virtualinvoke r2.<com.android.bluetooth.btservice.RemoteDevices$DeviceProperties: int getBondState()>();

        return $i0;
    }

    boolean isConnected(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        android.bluetooth.BluetoothDevice r1;
        byte[] r2;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r3 = virtualinvoke r1.<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>();

        r2 = staticinvoke <com.android.bluetooth.Utils: byte[] getBytesFromAddress(java.lang.String)>($r3);

        $z0 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: boolean isConnectedNative(byte[])>(r2);

        return $z0;
    }

    java.lang.String getRemoteName(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        android.bluetooth.BluetoothDevice r1;
        com.android.bluetooth.btservice.RemoteDevices$DeviceProperties r2;
        com.android.bluetooth.btservice.RemoteDevices $r3;
        java.lang.String $r4;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r3 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.RemoteDevices mRemoteDevices>;

        r2 = virtualinvoke $r3.<com.android.bluetooth.btservice.RemoteDevices: com.android.bluetooth.btservice.RemoteDevices$DeviceProperties getDeviceProperties(android.bluetooth.BluetoothDevice)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        $r4 = virtualinvoke r2.<com.android.bluetooth.btservice.RemoteDevices$DeviceProperties: java.lang.String getName()>();

        return $r4;
    }

    int getRemoteType(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        android.bluetooth.BluetoothDevice r1;
        com.android.bluetooth.btservice.RemoteDevices$DeviceProperties r2;
        com.android.bluetooth.btservice.RemoteDevices $r3;
        int $i0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r3 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.RemoteDevices mRemoteDevices>;

        r2 = virtualinvoke $r3.<com.android.bluetooth.btservice.RemoteDevices: com.android.bluetooth.btservice.RemoteDevices$DeviceProperties getDeviceProperties(android.bluetooth.BluetoothDevice)>(r1);

        if r2 != null goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke r2.<com.android.bluetooth.btservice.RemoteDevices$DeviceProperties: int getDeviceType()>();

        return $i0;
    }

    java.lang.String getRemoteAlias(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        android.bluetooth.BluetoothDevice r1;
        com.android.bluetooth.btservice.RemoteDevices$DeviceProperties r2;
        com.android.bluetooth.btservice.RemoteDevices $r3;
        java.lang.String $r4;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r3 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.RemoteDevices mRemoteDevices>;

        r2 = virtualinvoke $r3.<com.android.bluetooth.btservice.RemoteDevices: com.android.bluetooth.btservice.RemoteDevices$DeviceProperties getDeviceProperties(android.bluetooth.BluetoothDevice)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        $r4 = virtualinvoke r2.<com.android.bluetooth.btservice.RemoteDevices$DeviceProperties: java.lang.String getAlias()>();

        return $r4;
    }

    boolean setRemoteAlias(android.bluetooth.BluetoothDevice, java.lang.String)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        android.bluetooth.BluetoothDevice r1;
        java.lang.String r2;
        com.android.bluetooth.btservice.RemoteDevices$DeviceProperties r3;
        com.android.bluetooth.btservice.RemoteDevices $r4;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r4 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.RemoteDevices mRemoteDevices>;

        r3 = virtualinvoke $r4.<com.android.bluetooth.btservice.RemoteDevices: com.android.bluetooth.btservice.RemoteDevices$DeviceProperties getDeviceProperties(android.bluetooth.BluetoothDevice)>(r1);

        if r3 != null goto label1;

        return 0;

     label1:
        virtualinvoke r3.<com.android.bluetooth.btservice.RemoteDevices$DeviceProperties: void setAlias(java.lang.String)>(r2);

        return 1;
    }

    int getRemoteClass(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        android.bluetooth.BluetoothDevice r1;
        com.android.bluetooth.btservice.RemoteDevices$DeviceProperties r2;
        com.android.bluetooth.btservice.RemoteDevices $r3;
        int $i0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r3 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.RemoteDevices mRemoteDevices>;

        r2 = virtualinvoke $r3.<com.android.bluetooth.btservice.RemoteDevices: com.android.bluetooth.btservice.RemoteDevices$DeviceProperties getDeviceProperties(android.bluetooth.BluetoothDevice)>(r1);

        if r2 != null goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke r2.<com.android.bluetooth.btservice.RemoteDevices$DeviceProperties: int getBluetoothClass()>();

        return $i0;
    }

    android.os.ParcelUuid[] getRemoteUuids(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        android.bluetooth.BluetoothDevice r1;
        com.android.bluetooth.btservice.RemoteDevices$DeviceProperties r2;
        com.android.bluetooth.btservice.RemoteDevices $r3;
        android.os.ParcelUuid[] $r4;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r3 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.RemoteDevices mRemoteDevices>;

        r2 = virtualinvoke $r3.<com.android.bluetooth.btservice.RemoteDevices: com.android.bluetooth.btservice.RemoteDevices$DeviceProperties getDeviceProperties(android.bluetooth.BluetoothDevice)>(r1);

        if r2 != null goto label1;

        return null;

     label1:
        $r4 = virtualinvoke r2.<com.android.bluetooth.btservice.RemoteDevices$DeviceProperties: android.os.ParcelUuid[] getUuids()>();

        return $r4;
    }

    boolean fetchRemoteUuids(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        android.bluetooth.BluetoothDevice r1;
        com.android.bluetooth.btservice.RemoteDevices $r2;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r2 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.RemoteDevices mRemoteDevices>;

        virtualinvoke $r2.<com.android.bluetooth.btservice.RemoteDevices: void fetchUuids(android.bluetooth.BluetoothDevice)>(r1);

        return 1;
    }

    boolean fetchRemoteMasInstances(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        android.bluetooth.BluetoothDevice r1;
        com.android.bluetooth.btservice.RemoteDevices $r2;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.RECEIVE_BLUETOOTH_MAP", "Need RECEIVE BLUETOOTH MAP permission");

        $r2 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.RemoteDevices mRemoteDevices>;

        virtualinvoke $r2.<com.android.bluetooth.btservice.RemoteDevices: void fetchMasInstances(android.bluetooth.BluetoothDevice)>(r1);

        return 1;
    }

    boolean setPin(android.bluetooth.BluetoothDevice, boolean, int, byte[])
    {
        com.android.bluetooth.btservice.AdapterService r0;
        android.bluetooth.BluetoothDevice r1;
        boolean z0, $z1;
        int i0, $i1;
        byte[] r2, r4;
        com.android.bluetooth.btservice.RemoteDevices$DeviceProperties r3;
        com.android.bluetooth.btservice.RemoteDevices $r5;
        java.lang.String $r6;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        r2 := @parameter3: byte[];

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH_ADMIN", "Need BLUETOOTH ADMIN permission");

        $r5 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.RemoteDevices mRemoteDevices>;

        r3 = virtualinvoke $r5.<com.android.bluetooth.btservice.RemoteDevices: com.android.bluetooth.btservice.RemoteDevices$DeviceProperties getDeviceProperties(android.bluetooth.BluetoothDevice)>(r1);

        if r3 == null goto label1;

        $i1 = virtualinvoke r3.<com.android.bluetooth.btservice.RemoteDevices$DeviceProperties: int getBondState()>();

        if $i1 == 11 goto label2;

     label1:
        return 0;

     label2:
        $r6 = virtualinvoke r1.<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>();

        r4 = staticinvoke <com.android.bluetooth.Utils: byte[] getBytesFromAddress(java.lang.String)>($r6);

        $z1 = specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: boolean pinReplyNative(byte[],boolean,int,byte[])>(r4, z0, i0, r2);

        return $z1;
    }

    boolean setPasskey(android.bluetooth.BluetoothDevice, boolean, int, byte[])
    {
        com.android.bluetooth.btservice.AdapterService r0;
        android.bluetooth.BluetoothDevice r1;
        boolean z0, $z1;
        int i0, $i1, $i2;
        byte[] r2, r4;
        com.android.bluetooth.btservice.RemoteDevices$DeviceProperties r3;
        com.android.bluetooth.btservice.RemoteDevices $r5;
        java.lang.String $r6;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        r2 := @parameter3: byte[];

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r5 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.RemoteDevices mRemoteDevices>;

        r3 = virtualinvoke $r5.<com.android.bluetooth.btservice.RemoteDevices: com.android.bluetooth.btservice.RemoteDevices$DeviceProperties getDeviceProperties(android.bluetooth.BluetoothDevice)>(r1);

        if r3 == null goto label1;

        $i1 = virtualinvoke r3.<com.android.bluetooth.btservice.RemoteDevices$DeviceProperties: int getBondState()>();

        if $i1 == 11 goto label2;

     label1:
        return 0;

     label2:
        $r6 = virtualinvoke r1.<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>();

        r4 = staticinvoke <com.android.bluetooth.Utils: byte[] getBytesFromAddress(java.lang.String)>($r6);

        $i2 = staticinvoke <com.android.bluetooth.Utils: int byteArrayToInt(byte[])>(r2);

        $z1 = specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: boolean sspReplyNative(byte[],int,boolean,int)>(r4, 1, z0, $i2);

        return $z1;
    }

    boolean setPairingConfirmation(android.bluetooth.BluetoothDevice, boolean)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        android.bluetooth.BluetoothDevice r1;
        boolean z0, $z1;
        com.android.bluetooth.btservice.RemoteDevices$DeviceProperties r2;
        byte[] r3;
        com.android.bluetooth.btservice.RemoteDevices $r4;
        int $i0;
        java.lang.String $r5;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH_ADMIN", "Need BLUETOOTH ADMIN permission");

        $r4 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.RemoteDevices mRemoteDevices>;

        r2 = virtualinvoke $r4.<com.android.bluetooth.btservice.RemoteDevices: com.android.bluetooth.btservice.RemoteDevices$DeviceProperties getDeviceProperties(android.bluetooth.BluetoothDevice)>(r1);

        if r2 == null goto label1;

        $i0 = virtualinvoke r2.<com.android.bluetooth.btservice.RemoteDevices$DeviceProperties: int getBondState()>();

        if $i0 == 11 goto label2;

     label1:
        return 0;

     label2:
        $r5 = virtualinvoke r1.<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>();

        r3 = staticinvoke <com.android.bluetooth.Utils: byte[] getBytesFromAddress(java.lang.String)>($r5);

        $z1 = specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: boolean sspReplyNative(byte[],int,boolean,int)>(r3, 0, z0, 0);

        return $z1;
    }

    int getPhonebookAccessPermission(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        android.bluetooth.BluetoothDevice r1;
        android.content.SharedPreferences r2;
        java.lang.String $r3, $r4;
        boolean $z0, $z1;
        byte $b0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        r2 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("phonebook_access_permission", 0);

        $r3 = virtualinvoke r1.<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>();

        $z0 = interfaceinvoke r2.<android.content.SharedPreferences: boolean contains(java.lang.String)>($r3);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r4 = virtualinvoke r1.<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>();

        $z1 = interfaceinvoke r2.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>($r4, 0);

        if $z1 == 0 goto label2;

        $b0 = 1;

        goto label3;

     label2:
        $b0 = 2;

     label3:
        return $b0;
    }

    boolean setPhonebookAccessPermission(android.bluetooth.BluetoothDevice, int)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        android.bluetooth.BluetoothDevice r1;
        int i0;
        android.content.SharedPreferences r2;
        android.content.SharedPreferences$Editor r3;
        java.lang.String $r4, $r6;
        boolean $z0, $z1;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH_PRIVILEGED", "Need BLUETOOTH PRIVILEGED permission");

        r2 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("phonebook_access_permission", 0);

        r3 = interfaceinvoke r2.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        if i0 != 0 goto label1;

        $r6 = virtualinvoke r1.<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>();

        interfaceinvoke r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>($r6);

        goto label4;

     label1:
        $r4 = virtualinvoke r1.<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>();

        if i0 != 1 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        interfaceinvoke r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>($r4, $z1);

     label4:
        $z0 = interfaceinvoke r3.<android.content.SharedPreferences$Editor: boolean commit()>();

        return $z0;
    }

    int getMessageAccessPermission(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        android.bluetooth.BluetoothDevice r1;
        android.content.SharedPreferences r2;
        java.lang.String $r3, $r4;
        boolean $z0, $z1;
        byte $b0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        r2 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("message_access_permission", 0);

        $r3 = virtualinvoke r1.<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>();

        $z0 = interfaceinvoke r2.<android.content.SharedPreferences: boolean contains(java.lang.String)>($r3);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r4 = virtualinvoke r1.<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>();

        $z1 = interfaceinvoke r2.<android.content.SharedPreferences: boolean getBoolean(java.lang.String,boolean)>($r4, 0);

        if $z1 == 0 goto label2;

        $b0 = 1;

        goto label3;

     label2:
        $b0 = 2;

     label3:
        return $b0;
    }

    boolean setMessageAccessPermission(android.bluetooth.BluetoothDevice, int)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        android.bluetooth.BluetoothDevice r1;
        int i0;
        android.content.SharedPreferences r2;
        android.content.SharedPreferences$Editor r3;
        java.lang.String $r4, $r6;
        boolean $z0, $z1;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        i0 := @parameter1: int;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH_PRIVILEGED", "Need BLUETOOTH PRIVILEGED permission");

        r2 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: android.content.SharedPreferences getSharedPreferences(java.lang.String,int)>("message_access_permission", 0);

        r3 = interfaceinvoke r2.<android.content.SharedPreferences: android.content.SharedPreferences$Editor edit()>();

        if i0 != 0 goto label1;

        $r6 = virtualinvoke r1.<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>();

        interfaceinvoke r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor remove(java.lang.String)>($r6);

        goto label4;

     label1:
        $r4 = virtualinvoke r1.<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>();

        if i0 != 1 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        interfaceinvoke r3.<android.content.SharedPreferences$Editor: android.content.SharedPreferences$Editor putBoolean(java.lang.String,boolean)>($r4, $z1);

     label4:
        $z0 = interfaceinvoke r3.<android.content.SharedPreferences$Editor: boolean commit()>();

        return $z0;
    }

    void sendConnectionStateChange(android.bluetooth.BluetoothDevice, int, int, int)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        android.bluetooth.BluetoothDevice r1;
        int i0, i1, i2, $i3;
        com.android.bluetooth.btservice.AdapterProperties $r2;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $i3 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: int getState()>();

        if $i3 != 10 goto label1;

        return;

     label1:
        $r2 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterProperties mAdapterProperties>;

        virtualinvoke $r2.<com.android.bluetooth.btservice.AdapterProperties: void sendConnectionStateChange(android.bluetooth.BluetoothDevice,int,int,int)>(r1, i0, i1, i2);

        return;
    }

    android.os.ParcelFileDescriptor connectSocket(android.bluetooth.BluetoothDevice, int, android.os.ParcelUuid, int, int)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        android.bluetooth.BluetoothDevice r1;
        int i0, i1, i2, i3;
        android.os.ParcelUuid r2;
        java.lang.String $r3;
        byte[] $r4, $r5;
        android.os.ParcelFileDescriptor $r6;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.ParcelUuid;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r3 = virtualinvoke r1.<android.bluetooth.BluetoothDevice: java.lang.String getAddress()>();

        $r4 = staticinvoke <com.android.bluetooth.Utils: byte[] getBytesFromAddress(java.lang.String)>($r3);

        $r5 = staticinvoke <com.android.bluetooth.Utils: byte[] uuidToByteArray(android.os.ParcelUuid)>(r2);

        i3 = specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: int connectSocketNative(byte[],int,byte[],int,int)>($r4, i0, $r5, i1, i2);

        if i3 >= 0 goto label1;

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void errorLog(java.lang.String)>("Failed to connect socket");

        return null;

     label1:
        $r6 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor adoptFd(int)>(i3);

        return $r6;
    }

    android.os.ParcelFileDescriptor createSocketChannel(int, java.lang.String, android.os.ParcelUuid, int, int)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        int i0, i1, i2, i3;
        java.lang.String r1;
        android.os.ParcelUuid r2;
        byte[] $r3;
        android.os.ParcelFileDescriptor $r4;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.ParcelUuid;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r3 = staticinvoke <com.android.bluetooth.Utils: byte[] uuidToByteArray(android.os.ParcelUuid)>(r2);

        i3 = specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: int createSocketChannelNative(int,java.lang.String,byte[],int,int)>(i0, r1, $r3, i1, i2);

        if i3 >= 0 goto label1;

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void errorLog(java.lang.String)>("Failed to create socket channel");

        return null;

     label1:
        $r4 = staticinvoke <android.os.ParcelFileDescriptor: android.os.ParcelFileDescriptor adoptFd(int)>(i3);

        return $r4;
    }

    boolean configHciSnoopLog(boolean)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        boolean z0, $z1;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $z1 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: boolean configHciSnoopLogNative(boolean)>(z0);

        return $z1;
    }

    void registerCallback(android.bluetooth.IBluetoothCallback)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        android.bluetooth.IBluetoothCallback r1;
        android.os.RemoteCallbackList $r2;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter0: android.bluetooth.IBluetoothCallback;

        $r2 = r0.<com.android.bluetooth.btservice.AdapterService: android.os.RemoteCallbackList mCallbacks>;

        virtualinvoke $r2.<android.os.RemoteCallbackList: boolean register(android.os.IInterface)>(r1);

        return;
    }

    void unregisterCallback(android.bluetooth.IBluetoothCallback)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        android.bluetooth.IBluetoothCallback r1;
        android.os.RemoteCallbackList $r2;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter0: android.bluetooth.IBluetoothCallback;

        $r2 = r0.<com.android.bluetooth.btservice.AdapterService: android.os.RemoteCallbackList mCallbacks>;

        virtualinvoke $r2.<android.os.RemoteCallbackList: boolean unregister(android.os.IInterface)>(r1);

        return;
    }

    public int getNumOfAdvertisementInstancesSupported()
    {
        com.android.bluetooth.btservice.AdapterService r0;
        com.android.bluetooth.btservice.AdapterProperties $r1;
        int $i0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r1 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterProperties mAdapterProperties>;

        $i0 = virtualinvoke $r1.<com.android.bluetooth.btservice.AdapterProperties: int getNumOfAdvertisementInstancesSupported()>();

        return $i0;
    }

    public boolean isRpaOffloadSupported()
    {
        com.android.bluetooth.btservice.AdapterService r0;
        com.android.bluetooth.btservice.AdapterProperties $r1;
        boolean $z0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r1 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterProperties mAdapterProperties>;

        $z0 = virtualinvoke $r1.<com.android.bluetooth.btservice.AdapterProperties: boolean isRpaOffloadSupported()>();

        return $z0;
    }

    public int getNumOfOffloadedIrkSupported()
    {
        com.android.bluetooth.btservice.AdapterService r0;
        com.android.bluetooth.btservice.AdapterProperties $r1;
        int $i0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r1 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterProperties mAdapterProperties>;

        $i0 = virtualinvoke $r1.<com.android.bluetooth.btservice.AdapterProperties: int getNumOfOffloadedIrkSupported()>();

        return $i0;
    }

    public int getNumOfOffloadedScanFilterSupported()
    {
        com.android.bluetooth.btservice.AdapterService r0;
        com.android.bluetooth.btservice.AdapterProperties $r1;
        int $i0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r1 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterProperties mAdapterProperties>;

        $i0 = virtualinvoke $r1.<com.android.bluetooth.btservice.AdapterProperties: int getNumOfOffloadedScanFilterSupported()>();

        return $i0;
    }

    public int getOffloadedScanResultStorage()
    {
        com.android.bluetooth.btservice.AdapterService r0;
        com.android.bluetooth.btservice.AdapterProperties $r1;
        int $i0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH", "Need BLUETOOTH permission");

        $r1 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterProperties mAdapterProperties>;

        $i0 = virtualinvoke $r1.<com.android.bluetooth.btservice.AdapterProperties: int getOffloadedScanResultStorage()>();

        return $i0;
    }

    private boolean isActivityAndEnergyReportingSupported()
    {
        com.android.bluetooth.btservice.AdapterService r0;
        com.android.bluetooth.btservice.AdapterProperties $r1;
        boolean $z0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH_PRIVILEGED", "Need BLUETOOTH permission");

        $r1 = r0.<com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterProperties mAdapterProperties>;

        $z0 = virtualinvoke $r1.<com.android.bluetooth.btservice.AdapterProperties: boolean isActivityAndEnergyReportingSupported()>();

        return $z0;
    }

    private void getActivityEnergyInfoFromController()
    {
        com.android.bluetooth.btservice.AdapterService r0;
        boolean $z0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH_PRIVILEGED", "Need BLUETOOTH permission");

        $z0 = specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: boolean isActivityAndEnergyReportingSupported()>();

        if $z0 == 0 goto label1;

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: int readEnergyInfo()>();

     label1:
        return;
    }

    private android.bluetooth.BluetoothActivityEnergyInfo reportActivityInfo()
    {
        com.android.bluetooth.btservice.AdapterService r0;
        android.bluetooth.BluetoothActivityEnergyInfo r1, $r2;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void enforceCallingOrSelfPermission(java.lang.String,java.lang.String)>("android.permission.BLUETOOTH_PRIVILEGED", "Need BLUETOOTH permission");

        $r2 = new android.bluetooth.BluetoothActivityEnergyInfo;

        $i4 = r0.<com.android.bluetooth.btservice.AdapterService: int mStackReportedState>;

        $i3 = r0.<com.android.bluetooth.btservice.AdapterService: int mTxTimeTotalMs>;

        $i2 = r0.<com.android.bluetooth.btservice.AdapterService: int mRxTimeTotalMs>;

        $i1 = r0.<com.android.bluetooth.btservice.AdapterService: int mIdleTimeTotalMs>;

        $i0 = r0.<com.android.bluetooth.btservice.AdapterService: int mEnergyUsedTotalVoltAmpSecMicro>;

        specialinvoke $r2.<android.bluetooth.BluetoothActivityEnergyInfo: void <init>(int,int,int,int,int)>($i4, $i3, $i2, $i1, $i0);

        r1 = $r2;

        r0.<com.android.bluetooth.btservice.AdapterService: int mStackReportedState> = 0;

        r0.<com.android.bluetooth.btservice.AdapterService: int mTxTimeTotalMs> = 0;

        r0.<com.android.bluetooth.btservice.AdapterService: int mRxTimeTotalMs> = 0;

        r0.<com.android.bluetooth.btservice.AdapterService: int mIdleTimeTotalMs> = 0;

        r0.<com.android.bluetooth.btservice.AdapterService: int mEnergyUsedTotalVoltAmpSecMicro> = 0;

        return r1;
    }

    private static int convertScanModeToHal(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 20: goto label1;
            case 21: goto label2;
            case 22: goto label4;
            case 23: goto label3;
            default: goto label4;
        };

     label1:
        return 0;

     label2:
        return 1;

     label3:
        return 2;

     label4:
        return -1;
    }

    static int convertScanModeFromHal(int)
    {
        int i0;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label1:
        return 20;

     label2:
        return 21;

     label3:
        return 23;

     label4:
        return -1;
    }

    private boolean setWakeAlarm(long, boolean)
    {
        com.android.bluetooth.btservice.AdapterService r0, r1;
        long l0, l1, $l3;
        boolean z0;
        byte b2, $b4;
        android.content.Intent r2, $r6;
        java.lang.Throwable r3, $r11;
        android.app.PendingIntent $r5, $r7, $r8, $r10;
        android.app.AlarmManager $r9, $r12;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        l0 := @parameter0: long;

        z0 := @parameter1: boolean;

        r1 = r0;

        entermonitor r0;

     label1:
        $r5 = r0.<com.android.bluetooth.btservice.AdapterService: android.app.PendingIntent mPendingAlarm>;

        if $r5 == null goto label2;

        $r12 = r0.<com.android.bluetooth.btservice.AdapterService: android.app.AlarmManager mAlarmManager>;

        $r10 = r0.<com.android.bluetooth.btservice.AdapterService: android.app.PendingIntent mPendingAlarm>;

        virtualinvoke $r12.<android.app.AlarmManager: void cancel(android.app.PendingIntent)>($r10);

     label2:
        $l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l1 = $l3 + l0;

        if z0 == 0 goto label3;

        $b4 = 2;

        goto label4;

     label3:
        $b4 = 3;

     label4:
        b2 = $b4;

        $r6 = new android.content.Intent;

        specialinvoke $r6.<android.content.Intent: void <init>(java.lang.String)>("com.android.bluetooth.btservice.action.ALARM_WAKEUP");

        r2 = $r6;

        $r7 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>(r0, 0, r2, 1073741824);

        r0.<com.android.bluetooth.btservice.AdapterService: android.app.PendingIntent mPendingAlarm> = $r7;

        $r9 = r0.<com.android.bluetooth.btservice.AdapterService: android.app.AlarmManager mAlarmManager>;

        $r8 = r0.<com.android.bluetooth.btservice.AdapterService: android.app.PendingIntent mPendingAlarm>;

        virtualinvoke $r9.<android.app.AlarmManager: void setExact(int,long,android.app.PendingIntent)>(b2, l1, $r8);

        exitmonitor r1;

     label5:
        return 1;

     label6:
        $r11 := @caughtexception;

        r3 = $r11;

        exitmonitor r1;

     label7:
        throw r3;

        catch java.lang.Throwable from label1 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    private boolean acquireWakeLock(java.lang.String)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        java.lang.String r1, $r6, $r11;
        android.os.PowerManager$WakeLock $r2, $r4, $r5, $r7;
        android.os.PowerManager $r3;
        boolean $z0, $z1;
        java.lang.StringBuilder $r8, $r9, $r10;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.android.bluetooth.btservice.AdapterService: android.os.PowerManager$WakeLock mWakeLock>;

        if $r2 == null goto label2;

        $r6 = r0.<com.android.bluetooth.btservice.AdapterService: java.lang.String mWakeLockName>;

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 != 0 goto label1;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Multiple wake lock acquisition attempted; aborting: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void errorLog(java.lang.String)>($r11);

        return 0;

     label1:
        $r7 = r0.<com.android.bluetooth.btservice.AdapterService: android.os.PowerManager$WakeLock mWakeLock>;

        $z1 = virtualinvoke $r7.<android.os.PowerManager$WakeLock: boolean isHeld()>();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        r0.<com.android.bluetooth.btservice.AdapterService: java.lang.String mWakeLockName> = r1;

        $r3 = r0.<com.android.bluetooth.btservice.AdapterService: android.os.PowerManager mPowerManager>;

        $r4 = virtualinvoke $r3.<android.os.PowerManager: android.os.PowerManager$WakeLock newWakeLock(int,java.lang.String)>(1, r1);

        r0.<com.android.bluetooth.btservice.AdapterService: android.os.PowerManager$WakeLock mWakeLock> = $r4;

        $r5 = r0.<com.android.bluetooth.btservice.AdapterService: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r5.<android.os.PowerManager$WakeLock: void acquire()>();

        return 1;
    }

    private boolean releaseWakeLock(java.lang.String)
    {
        com.android.bluetooth.btservice.AdapterService r0, r2;
        java.lang.String r1, $r10;
        java.lang.Throwable r3, $r11;
        android.os.PowerManager$WakeLock $r5, $r6;
        java.lang.StringBuilder $r7, $r8, $r9;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter0: java.lang.String;

        r2 = r0;

        entermonitor r0;

     label1:
        $r5 = r0.<com.android.bluetooth.btservice.AdapterService: android.os.PowerManager$WakeLock mWakeLock>;

        if $r5 != null goto label3;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Repeated wake lock release; aborting release: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void errorLog(java.lang.String)>($r10);

        exitmonitor r2;

     label2:
        return 0;

     label3:
        $r6 = r0.<com.android.bluetooth.btservice.AdapterService: android.os.PowerManager$WakeLock mWakeLock>;

        virtualinvoke $r6.<android.os.PowerManager$WakeLock: void release()>();

        r0.<com.android.bluetooth.btservice.AdapterService: android.os.PowerManager$WakeLock mWakeLock> = null;

        r0.<com.android.bluetooth.btservice.AdapterService: java.lang.String mWakeLockName> = null;

        exitmonitor r2;

     label4:
        goto label7;

     label5:
        $r11 := @caughtexception;

        r3 = $r11;

        exitmonitor r2;

     label6:
        throw r3;

     label7:
        return 1;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private void energyInfoCallback(int, int, long, long, long, long) throws android.os.RemoteException
    {
        com.android.bluetooth.btservice.AdapterService r0;
        int i0, i1, $i6, $i9, $i10, $i13, $i14, $i17, $i18, $i21;
        long l2, l3, l4, l5, $l7, $l8, $l11, $l12, $l15, $l16, $l19, $l20;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        l2 := @parameter2: long;

        l3 := @parameter3: long;

        l4 := @parameter4: long;

        l5 := @parameter5: long;

        if i1 < 0 goto label1;

        if i1 > 3 goto label1;

        r0.<com.android.bluetooth.btservice.AdapterService: int mStackReportedState> = i1;

        $i6 = r0.<com.android.bluetooth.btservice.AdapterService: int mTxTimeTotalMs>;

        $l7 = (long) $i6;

        $l8 = $l7 + l2;

        $i9 = (int) $l8;

        r0.<com.android.bluetooth.btservice.AdapterService: int mTxTimeTotalMs> = $i9;

        $i10 = r0.<com.android.bluetooth.btservice.AdapterService: int mRxTimeTotalMs>;

        $l12 = (long) $i10;

        $l11 = $l12 + l3;

        $i14 = (int) $l11;

        r0.<com.android.bluetooth.btservice.AdapterService: int mRxTimeTotalMs> = $i14;

        $i13 = r0.<com.android.bluetooth.btservice.AdapterService: int mIdleTimeTotalMs>;

        $l16 = (long) $i13;

        $l15 = $l16 + l4;

        $i18 = (int) $l15;

        r0.<com.android.bluetooth.btservice.AdapterService: int mIdleTimeTotalMs> = $i18;

        $i17 = r0.<com.android.bluetooth.btservice.AdapterService: int mEnergyUsedTotalVoltAmpSecMicro>;

        $l20 = (long) $i17;

        $l19 = $l20 + l5;

        $i21 = (int) $l19;

        r0.<com.android.bluetooth.btservice.AdapterService: int mEnergyUsedTotalVoltAmpSecMicro> = $i21;

     label1:
        return;
    }

    private void debugLog(java.lang.String)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        java.lang.String r1;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter0: java.lang.String;

        return;
    }

    private void errorLog(java.lang.String)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        java.lang.String r1, $r6;
        java.lang.StringBuilder $r2, $r3, $r4, $r5;
        int $i0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter0: java.lang.String;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BluetoothAdapterService(");

        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>($r6, r1);

        return;
    }

    private static native void classInitNative();

    private native boolean initNative();

    private native void cleanupNative();

    native boolean enableNative();

    native boolean disableNative();

    native boolean setAdapterPropertyNative(int, byte[]);

    native boolean getAdapterPropertiesNative();

    native boolean getAdapterPropertyNative(int);

    native boolean setAdapterPropertyNative(int);

    native boolean setDevicePropertyNative(byte[], int, byte[]);

    native boolean getDevicePropertyNative(byte[], int);

    native boolean createBondNative(byte[], int);

    native boolean removeBondNative(byte[]);

    native boolean cancelBondNative(byte[]);

    native boolean isConnectedNative(byte[]);

    private native boolean startDiscoveryNative();

    private native boolean cancelDiscoveryNative();

    private native boolean pinReplyNative(byte[], boolean, int, byte[]);

    private native boolean sspReplyNative(byte[], int, boolean, int);

    native boolean getRemoteServicesNative(byte[]);

    native boolean getRemoteMasInstancesNative(byte[]);

    private native int readEnergyInfo();

    private native int connectSocketNative(byte[], int, byte[], int, int);

    private native int createSocketChannelNative(int, java.lang.String, byte[], int, int);

    native boolean configHciSnoopLogNative(boolean);

    private native void alarmFiredNative();

    protected void finalize()
    {
        com.android.bluetooth.btservice.AdapterService r0;
        java.lang.Class r1;
        java.lang.Throwable r2, $r7;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;

        r0 := @this: com.android.bluetooth.btservice.AdapterService;

        virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService: void cleanup()>();

        r1 = class "com/android/bluetooth/btservice/AdapterService";

        entermonitor class "com/android/bluetooth/btservice/AdapterService";

     label1:
        $i0 = <com.android.bluetooth.btservice.AdapterService: int sRefCount>;

        $i1 = $i0 - 1;

        <com.android.bluetooth.btservice.AdapterService: int sRefCount> = $i1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("finalize() - REFCOUNT: FINALIZED. INSTANCE_COUNT= ");

        $i2 = <com.android.bluetooth.btservice.AdapterService: int sRefCount>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void debugLog(java.lang.String)>($r6);

        exitmonitor r1;

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r1;

     label4:
        throw r2;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    static void access$000(com.android.bluetooth.btservice.AdapterService, java.lang.String)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void debugLog(java.lang.String)>(r1);

        return;
    }

    static void access$100(com.android.bluetooth.btservice.AdapterService, java.lang.String, int)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        java.lang.String r1;
        int i0;

        r0 := @parameter0: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void processProfileServiceStateChanged(java.lang.String,int)>(r1, i0);

        return;
    }

    static void access$200(com.android.bluetooth.btservice.AdapterService, android.bluetooth.BluetoothDevice, int, int, int)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        android.bluetooth.BluetoothDevice r1;
        int i0, i1, i2;

        r0 := @parameter0: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter1: android.bluetooth.BluetoothDevice;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void processProfileStateChanged(android.bluetooth.BluetoothDevice,int,int,int)>(r1, i0, i1, i2);

        return;
    }

    static void access$300(com.android.bluetooth.btservice.AdapterService, android.bluetooth.BluetoothDevice, android.os.ParcelUuid[])
    {
        com.android.bluetooth.btservice.AdapterService r0;
        android.bluetooth.BluetoothDevice r1;
        android.os.ParcelUuid[] r2;

        r0 := @parameter0: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter1: android.bluetooth.BluetoothDevice;

        r2 := @parameter2: android.os.ParcelUuid[];

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void processInitProfilePriorities(android.bluetooth.BluetoothDevice,android.os.ParcelUuid[])>(r1, r2);

        return;
    }

    static void access$400(com.android.bluetooth.btservice.AdapterService, android.bluetooth.BluetoothDevice, int)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        android.bluetooth.BluetoothDevice r1;
        int i0;

        r0 := @parameter0: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter1: android.bluetooth.BluetoothDevice;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void processConnectOtherProfiles(android.bluetooth.BluetoothDevice,int)>(r1, i0);

        return;
    }

    static boolean access$500(com.android.bluetooth.btservice.AdapterService)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        boolean $z0;

        r0 := @parameter0: com.android.bluetooth.btservice.AdapterService;

        $z0 = specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: boolean isAvailable()>();

        return $z0;
    }

    static boolean access$600(com.android.bluetooth.btservice.AdapterService)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        boolean $z0;

        r0 := @parameter0: com.android.bluetooth.btservice.AdapterService;

        $z0 = specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: boolean isActivityAndEnergyReportingSupported()>();

        return $z0;
    }

    static void access$700(com.android.bluetooth.btservice.AdapterService)
    {
        com.android.bluetooth.btservice.AdapterService r0;

        r0 := @parameter0: com.android.bluetooth.btservice.AdapterService;

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void getActivityEnergyInfoFromController()>();

        return;
    }

    static android.bluetooth.BluetoothActivityEnergyInfo access$800(com.android.bluetooth.btservice.AdapterService)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        android.bluetooth.BluetoothActivityEnergyInfo $r1;

        r0 := @parameter0: com.android.bluetooth.btservice.AdapterService;

        $r1 = specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: android.bluetooth.BluetoothActivityEnergyInfo reportActivityInfo()>();

        return $r1;
    }

    static android.app.PendingIntent access$902(com.android.bluetooth.btservice.AdapterService, android.app.PendingIntent)
    {
        com.android.bluetooth.btservice.AdapterService r0;
        android.app.PendingIntent r1;

        r0 := @parameter0: com.android.bluetooth.btservice.AdapterService;

        r1 := @parameter1: android.app.PendingIntent;

        r0.<com.android.bluetooth.btservice.AdapterService: android.app.PendingIntent mPendingAlarm> = r1;

        return r1;
    }

    static void access$1000(com.android.bluetooth.btservice.AdapterService)
    {
        com.android.bluetooth.btservice.AdapterService r0;

        r0 := @parameter0: com.android.bluetooth.btservice.AdapterService;

        specialinvoke r0.<com.android.bluetooth.btservice.AdapterService: void alarmFiredNative()>();

        return;
    }

    static void <clinit>()
    {
        <com.android.bluetooth.btservice.AdapterService: int CONNECT_OTHER_PROFILES_TIMEOUT> = 6000;

        <com.android.bluetooth.btservice.AdapterService: int MESSAGE_PROFILE_INIT_PRIORITIES> = 40;

        <com.android.bluetooth.btservice.AdapterService: int MESSAGE_CONNECT_OTHER_PROFILES> = 30;

        <com.android.bluetooth.btservice.AdapterService: int MESSAGE_PROFILE_CONNECTION_STATE_CHANGED> = 20;

        <com.android.bluetooth.btservice.AdapterService: int MESSAGE_PROFILE_SERVICE_STATE_CHANGED> = 1;

        <com.android.bluetooth.btservice.AdapterService: int ADAPTER_SERVICE_TYPE> = 1;

        <com.android.bluetooth.btservice.AdapterService: java.lang.String MESSAGE_ACCESS_PERMISSION_PREFERENCE_FILE> = "message_access_permission";

        <com.android.bluetooth.btservice.AdapterService: java.lang.String PHONEBOOK_ACCESS_PERMISSION_PREFERENCE_FILE> = "phonebook_access_permission";

        <com.android.bluetooth.btservice.AdapterService: java.lang.String RECEIVE_MAP_PERM> = "android.permission.RECEIVE_BLUETOOTH_MAP";

        <com.android.bluetooth.btservice.AdapterService: java.lang.String BLUETOOTH_PERM> = "android.permission.BLUETOOTH";

        <com.android.bluetooth.btservice.AdapterService: java.lang.String BLUETOOTH_PRIVILEGED> = "android.permission.BLUETOOTH_PRIVILEGED";

        <com.android.bluetooth.btservice.AdapterService: java.lang.String BLUETOOTH_ADMIN_PERM> = "android.permission.BLUETOOTH_ADMIN";

        <com.android.bluetooth.btservice.AdapterService: java.lang.String ACTION_ALARM_WAKEUP> = "com.android.bluetooth.btservice.action.ALARM_WAKEUP";

        <com.android.bluetooth.btservice.AdapterService: int PROFILE_CONN_REJECTED> = 2;

        <com.android.bluetooth.btservice.AdapterService: int PROFILE_CONN_CONNECTED> = 1;

        <com.android.bluetooth.btservice.AdapterService: java.lang.String EXTRA_ACTION> = "action";

        <com.android.bluetooth.btservice.AdapterService: java.lang.String ACTION_SERVICE_STATE_CHANGED> = "com.android.bluetooth.btservice.action.STATE_CHANGED";

        <com.android.bluetooth.btservice.AdapterService: java.lang.String ACTION_LOAD_ADAPTER_PROPERTIES> = "com.android.bluetooth.btservice.action.LOAD_ADAPTER_PROPERTIES";

        <com.android.bluetooth.btservice.AdapterService: int MIN_OFFLOADED_SCAN_STORAGE_BYTES> = 1024;

        <com.android.bluetooth.btservice.AdapterService: int MIN_OFFLOADED_FILTERS> = 10;

        <com.android.bluetooth.btservice.AdapterService: int MIN_ADVT_INSTANCES_FOR_MA> = 5;

        <com.android.bluetooth.btservice.AdapterService: boolean TRACE_REF> = 1;

        <com.android.bluetooth.btservice.AdapterService: boolean DBG> = 0;

        <com.android.bluetooth.btservice.AdapterService: java.lang.String TAG> = "BluetoothAdapterService";

        <com.android.bluetooth.btservice.AdapterService: int sRefCount> = 0;

        staticinvoke <com.android.bluetooth.btservice.AdapterService: void classInitNative()>();

        return;
    }
}
