class com.android.bluetooth.opp.TestTcpListener extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final boolean D;
    private static final boolean V;
    private volatile boolean mInterrupted;
    private java.lang.Thread mSocketAcceptThread;
    private android.os.Handler mCallback;
    private static final int ACCEPT_WAIT_TIMEOUT;
    public static final int DEFAULT_OPP_CHANNEL;
    public static final int MSG_INCOMING_BTOPP_CONNECTION;
    private int mBtOppRfcommChannel;

    public void <init>()
    {
        com.android.bluetooth.opp.TestTcpListener r0;

        r0 := @this: com.android.bluetooth.opp.TestTcpListener;

        specialinvoke r0.<com.android.bluetooth.opp.TestTcpListener: void <init>(int)>(12);

        return;
    }

    public void <init>(int)
    {
        com.android.bluetooth.opp.TestTcpListener r0;
        int i0;

        r0 := @this: com.android.bluetooth.opp.TestTcpListener;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.bluetooth.opp.TestTcpListener: int mBtOppRfcommChannel> = -1;

        r0.<com.android.bluetooth.opp.TestTcpListener: int mBtOppRfcommChannel> = i0;

        return;
    }

    public synchronized boolean start(android.os.Handler)
    {
        com.android.bluetooth.opp.TestTcpListener r0;
        android.os.Handler r1;
        java.lang.Thread $r2, $r4;
        com.android.bluetooth.opp.TestTcpListener$1 $r3;

        r0 := @this: com.android.bluetooth.opp.TestTcpListener;

        r1 := @parameter0: android.os.Handler;

        $r2 = r0.<com.android.bluetooth.opp.TestTcpListener: java.lang.Thread mSocketAcceptThread>;

        if $r2 != null goto label1;

        r0.<com.android.bluetooth.opp.TestTcpListener: android.os.Handler mCallback> = r1;

        $r3 = new com.android.bluetooth.opp.TestTcpListener$1;

        specialinvoke $r3.<com.android.bluetooth.opp.TestTcpListener$1: void <init>(com.android.bluetooth.opp.TestTcpListener,java.lang.String)>(r0, "BtOppRfcommListener");

        r0.<com.android.bluetooth.opp.TestTcpListener: java.lang.Thread mSocketAcceptThread> = $r3;

        r0.<com.android.bluetooth.opp.TestTcpListener: boolean mInterrupted> = 0;

        $r4 = r0.<com.android.bluetooth.opp.TestTcpListener: java.lang.Thread mSocketAcceptThread>;

        virtualinvoke $r4.<java.lang.Thread: void start()>();

     label1:
        return 1;
    }

    public synchronized void stop()
    {
        com.android.bluetooth.opp.TestTcpListener r0;
        java.lang.Thread $r2, $r3, $r4;
        java.lang.InterruptedException $r5;

        r0 := @this: com.android.bluetooth.opp.TestTcpListener;

        $r2 = r0.<com.android.bluetooth.opp.TestTcpListener: java.lang.Thread mSocketAcceptThread>;

        if $r2 == null goto label4;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BtOppRfcommListener", "stopping Connect Thread");

        r0.<com.android.bluetooth.opp.TestTcpListener: boolean mInterrupted> = 1;

     label1:
        $r3 = r0.<com.android.bluetooth.opp.TestTcpListener: java.lang.Thread mSocketAcceptThread>;

        virtualinvoke $r3.<java.lang.Thread: void interrupt()>();

        $r4 = r0.<com.android.bluetooth.opp.TestTcpListener: java.lang.Thread mSocketAcceptThread>;

        virtualinvoke $r4.<java.lang.Thread: void join()>();

        r0.<com.android.bluetooth.opp.TestTcpListener: java.lang.Thread mSocketAcceptThread> = null;

        r0.<com.android.bluetooth.opp.TestTcpListener: android.os.Handler mCallback> = null;

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

     label4:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    static int access$000(com.android.bluetooth.opp.TestTcpListener)
    {
        com.android.bluetooth.opp.TestTcpListener r0;
        int $i0;

        r0 := @parameter0: com.android.bluetooth.opp.TestTcpListener;

        $i0 = r0.<com.android.bluetooth.opp.TestTcpListener: int mBtOppRfcommChannel>;

        return $i0;
    }

    static boolean access$102(com.android.bluetooth.opp.TestTcpListener, boolean)
    {
        com.android.bluetooth.opp.TestTcpListener r0;
        boolean z0;

        r0 := @parameter0: com.android.bluetooth.opp.TestTcpListener;

        z0 := @parameter1: boolean;

        r0.<com.android.bluetooth.opp.TestTcpListener: boolean mInterrupted> = z0;

        return z0;
    }

    static boolean access$100(com.android.bluetooth.opp.TestTcpListener)
    {
        com.android.bluetooth.opp.TestTcpListener r0;
        boolean $z0;

        r0 := @parameter0: com.android.bluetooth.opp.TestTcpListener;

        $z0 = r0.<com.android.bluetooth.opp.TestTcpListener: boolean mInterrupted>;

        return $z0;
    }

    static android.os.Handler access$200(com.android.bluetooth.opp.TestTcpListener)
    {
        com.android.bluetooth.opp.TestTcpListener r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.bluetooth.opp.TestTcpListener;

        $r1 = r0.<com.android.bluetooth.opp.TestTcpListener: android.os.Handler mCallback>;

        return $r1;
    }

    public static void <clinit>()
    {
        <com.android.bluetooth.opp.TestTcpListener: int MSG_INCOMING_BTOPP_CONNECTION> = 100;

        <com.android.bluetooth.opp.TestTcpListener: int DEFAULT_OPP_CHANNEL> = 12;

        <com.android.bluetooth.opp.TestTcpListener: int ACCEPT_WAIT_TIMEOUT> = 5000;

        <com.android.bluetooth.opp.TestTcpListener: boolean V> = 0;

        <com.android.bluetooth.opp.TestTcpListener: boolean D> = 1;

        <com.android.bluetooth.opp.TestTcpListener: java.lang.String TAG> = "BtOppRfcommListener";

        return;
    }
}
