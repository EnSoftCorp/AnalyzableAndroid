class com.android.bluetooth.map.BluetoothMapContentObserver$Event extends java.lang.Object
{
    java.lang.String eventType;
    long handle;
    java.lang.String folder;
    java.lang.String oldFolder;
    com.android.bluetooth.map.BluetoothMapUtils$TYPE msgType;
    static final java.lang.String PATH;
    final com.android.bluetooth.map.BluetoothMapContentObserver this$0;

    public void <init>(com.android.bluetooth.map.BluetoothMapContentObserver, java.lang.String, long, java.lang.String, java.lang.String, com.android.bluetooth.map.BluetoothMapUtils$TYPE)
    {
        com.android.bluetooth.map.BluetoothMapContentObserver$Event r0;
        com.android.bluetooth.map.BluetoothMapContentObserver r1;
        java.lang.String r2, r3, r4, $r10, $r14;
        long l0;
        com.android.bluetooth.map.BluetoothMapUtils$TYPE r5, $r6, $r11;
        java.lang.StringBuilder $r7, $r8, $r9, $r12, $r13, $r15;

        r0 := @this: com.android.bluetooth.map.BluetoothMapContentObserver$Event;

        r1 := @parameter0: com.android.bluetooth.map.BluetoothMapContentObserver;

        r2 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        r5 := @parameter5: com.android.bluetooth.map.BluetoothMapUtils$TYPE;

        r0.<com.android.bluetooth.map.BluetoothMapContentObserver$Event: com.android.bluetooth.map.BluetoothMapContentObserver this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.bluetooth.map.BluetoothMapContentObserver$Event: java.lang.String eventType> = r2;

        r0.<com.android.bluetooth.map.BluetoothMapContentObserver$Event: long handle> = l0;

        if r3 == null goto label2;

        $r11 = <com.android.bluetooth.map.BluetoothMapUtils$TYPE: com.android.bluetooth.map.BluetoothMapUtils$TYPE EMAIL>;

        if r5 != $r11 goto label1;

        r0.<com.android.bluetooth.map.BluetoothMapContentObserver$Event: java.lang.String folder> = r3;

        goto label3;

     label1:
        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("telecom/msg/");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r14 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.bluetooth.map.BluetoothMapContentObserver$Event: java.lang.String folder> = $r14;

        goto label3;

     label2:
        r0.<com.android.bluetooth.map.BluetoothMapContentObserver$Event: java.lang.String folder> = null;

     label3:
        if r4 == null goto label5;

        $r6 = <com.android.bluetooth.map.BluetoothMapUtils$TYPE: com.android.bluetooth.map.BluetoothMapUtils$TYPE EMAIL>;

        if r5 != $r6 goto label4;

        r0.<com.android.bluetooth.map.BluetoothMapContentObserver$Event: java.lang.String oldFolder> = r4;

        goto label6;

     label4:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("telecom/msg/");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.android.bluetooth.map.BluetoothMapContentObserver$Event: java.lang.String oldFolder> = $r10;

        goto label6;

     label5:
        r0.<com.android.bluetooth.map.BluetoothMapContentObserver$Event: java.lang.String oldFolder> = null;

     label6:
        r0.<com.android.bluetooth.map.BluetoothMapContentObserver$Event: com.android.bluetooth.map.BluetoothMapUtils$TYPE msgType> = r5;

        return;
    }

    public byte[] encode() throws java.io.UnsupportedEncodingException
    {
        com.android.bluetooth.map.BluetoothMapContentObserver$Event r0;
        java.io.StringWriter r1, $r4;
        org.xmlpull.v1.XmlSerializer r2;
        java.lang.IllegalArgumentException r3, $r28;
        java.lang.String $r9, $r13, $r14, $r15, $r17, $r21, $r23, $r24, $r26;
        com.android.bluetooth.map.BluetoothMapUtils$TYPE $r11, $r16;
        long $l0;
        byte[] $r22;
        java.lang.IllegalStateException $r29, r31;
        java.io.IOException $r30, r32;

        r0 := @this: com.android.bluetooth.map.BluetoothMapContentObserver$Event;

        $r4 = new java.io.StringWriter;

        specialinvoke $r4.<java.io.StringWriter: void <init>()>();

        r1 = $r4;

        r2 = staticinvoke <android.util.Xml: org.xmlpull.v1.XmlSerializer newSerializer()>();

     label1:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.Writer)>(r1);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>(null, null);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer text(java.lang.String)>("\r\n");

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>("", "MAP-event-report");

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "version", "1.0");

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>("", "event");

        $r9 = r0.<com.android.bluetooth.map.BluetoothMapContentObserver$Event: java.lang.String eventType>;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "type", $r9);

        $l0 = r0.<com.android.bluetooth.map.BluetoothMapContentObserver$Event: long handle>;

        $r11 = r0.<com.android.bluetooth.map.BluetoothMapContentObserver$Event: com.android.bluetooth.map.BluetoothMapUtils$TYPE msgType>;

        $r13 = staticinvoke <com.android.bluetooth.map.BluetoothMapUtils: java.lang.String getMapHandle(long,com.android.bluetooth.map.BluetoothMapUtils$TYPE)>($l0, $r11);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "handle", $r13);

        $r15 = r0.<com.android.bluetooth.map.BluetoothMapContentObserver$Event: java.lang.String folder>;

        if $r15 == null goto label2;

        $r24 = r0.<com.android.bluetooth.map.BluetoothMapContentObserver$Event: java.lang.String folder>;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "folder", $r24);

     label2:
        $r14 = r0.<com.android.bluetooth.map.BluetoothMapContentObserver$Event: java.lang.String oldFolder>;

        if $r14 == null goto label3;

        $r26 = r0.<com.android.bluetooth.map.BluetoothMapContentObserver$Event: java.lang.String oldFolder>;

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "old_folder", $r26);

     label3:
        $r16 = r0.<com.android.bluetooth.map.BluetoothMapContentObserver$Event: com.android.bluetooth.map.BluetoothMapUtils$TYPE msgType>;

        $r17 = virtualinvoke $r16.<com.android.bluetooth.map.BluetoothMapUtils$TYPE: java.lang.String name()>();

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>("", "msg_type", $r17);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>("", "event");

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>("", "MAP-event-report");

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

     label4:
        goto label8;

     label5:
        $r28 := @caughtexception;

        r3 = $r28;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>("BluetoothMapContentObserver", r3);

        goto label8;

     label6:
        $r29 := @caughtexception;

        r31 = $r29;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>("BluetoothMapContentObserver", r31);

        goto label8;

     label7:
        $r30 := @caughtexception;

        r32 = $r30;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>("BluetoothMapContentObserver", r32);

     label8:
        $r21 = virtualinvoke r1.<java.io.StringWriter: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothMapContentObserver", $r21);

        $r23 = virtualinvoke r1.<java.io.StringWriter: java.lang.String toString()>();

        $r22 = virtualinvoke $r23.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        return $r22;

        catch java.lang.IllegalArgumentException from label1 to label4 with label5;
        catch java.lang.IllegalStateException from label1 to label4 with label6;
        catch java.io.IOException from label1 to label4 with label7;
    }

    public static void <clinit>()
    {
        <com.android.bluetooth.map.BluetoothMapContentObserver$Event: java.lang.String PATH> = "telecom/msg/";

        return;
    }
}
