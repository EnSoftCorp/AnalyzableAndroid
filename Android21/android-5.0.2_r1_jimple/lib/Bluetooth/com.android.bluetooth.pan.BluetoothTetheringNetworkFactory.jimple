public class com.android.bluetooth.pan.BluetoothTetheringNetworkFactory extends android.net.NetworkFactory
{
    private static final java.lang.String NETWORK_TYPE;
    private static final java.lang.String TAG;
    private static final int NETWORK_SCORE;
    private final android.net.NetworkCapabilities mNetworkCapabilities;
    private final android.content.Context mContext;
    private final com.android.bluetooth.pan.PanService mPanService;
    private final android.net.NetworkInfo mNetworkInfo;
    private android.net.LinkProperties mLinkProperties;
    private android.net.NetworkAgent mNetworkAgent;

    public void <init>(android.content.Context, android.os.Looper, com.android.bluetooth.pan.PanService)
    {
        com.android.bluetooth.pan.BluetoothTetheringNetworkFactory r0;
        android.content.Context r1;
        android.os.Looper r2;
        com.android.bluetooth.pan.PanService r3;
        android.net.NetworkCapabilities $r4, $r7, $r8;
        android.net.NetworkInfo $r5;
        android.net.LinkProperties $r6;

        r0 := @this: com.android.bluetooth.pan.BluetoothTetheringNetworkFactory;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.Looper;

        r3 := @parameter2: com.android.bluetooth.pan.PanService;

        $r4 = new android.net.NetworkCapabilities;

        specialinvoke $r4.<android.net.NetworkCapabilities: void <init>()>();

        specialinvoke r0.<android.net.NetworkFactory: void <init>(android.os.Looper,android.content.Context,java.lang.String,android.net.NetworkCapabilities)>(r2, r1, "Bluetooth Tethering", $r4);

        r0.<com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: android.content.Context mContext> = r1;

        r0.<com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: com.android.bluetooth.pan.PanService mPanService> = r3;

        $r5 = new android.net.NetworkInfo;

        specialinvoke $r5.<android.net.NetworkInfo: void <init>(int,int,java.lang.String,java.lang.String)>(7, 0, "Bluetooth Tethering", "");

        r0.<com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: android.net.NetworkInfo mNetworkInfo> = $r5;

        $r6 = new android.net.LinkProperties;

        specialinvoke $r6.<android.net.LinkProperties: void <init>()>();

        r0.<com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: android.net.LinkProperties mLinkProperties> = $r6;

        $r7 = new android.net.NetworkCapabilities;

        specialinvoke $r7.<android.net.NetworkCapabilities: void <init>()>();

        r0.<com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: android.net.NetworkCapabilities mNetworkCapabilities> = $r7;

        specialinvoke r0.<com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: void initNetworkCapabilities()>();

        $r8 = r0.<com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: android.net.NetworkCapabilities mNetworkCapabilities>;

        virtualinvoke r0.<com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: void setCapabilityFilter(android.net.NetworkCapabilities)>($r8);

        return;
    }

    protected void startNetwork()
    {
        com.android.bluetooth.pan.BluetoothTetheringNetworkFactory r0;
        java.lang.Thread r1, $r2;
        com.android.bluetooth.pan.BluetoothTetheringNetworkFactory$1 $r3;

        r0 := @this: com.android.bluetooth.pan.BluetoothTetheringNetworkFactory;

        $r2 = new java.lang.Thread;

        $r3 = new com.android.bluetooth.pan.BluetoothTetheringNetworkFactory$1;

        specialinvoke $r3.<com.android.bluetooth.pan.BluetoothTetheringNetworkFactory$1: void <init>(com.android.bluetooth.pan.BluetoothTetheringNetworkFactory)>(r0);

        specialinvoke $r2.<java.lang.Thread: void <init>(java.lang.Runnable)>($r3);

        r1 = $r2;

        virtualinvoke r1.<java.lang.Thread: void start()>();

        return;
    }

    protected void stopNetwork()
    {
        com.android.bluetooth.pan.BluetoothTetheringNetworkFactory r0;

        r0 := @this: com.android.bluetooth.pan.BluetoothTetheringNetworkFactory;

        return;
    }

    private synchronized void onCancelRequest()
    {
        com.android.bluetooth.pan.BluetoothTetheringNetworkFactory r0;
        java.util.Iterator r1;
        android.bluetooth.BluetoothDevice r2;
        android.net.LinkProperties $r3, $r5, $r14;
        java.lang.String $r4, $r16;
        boolean $z0, $z1;
        android.net.NetworkInfo$DetailedState $r6;
        android.net.NetworkInfo $r7, $r13;
        android.net.NetworkAgent $r8, $r15;
        com.android.bluetooth.pan.PanService $r9, $r12;
        java.util.List $r10;
        java.lang.Object $r11;

        r0 := @this: com.android.bluetooth.pan.BluetoothTetheringNetworkFactory;

        $r3 = r0.<com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: android.net.LinkProperties mLinkProperties>;

        $r4 = virtualinvoke $r3.<android.net.LinkProperties: java.lang.String getInterfaceName()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r4);

        if $z0 != 0 goto label1;

        $r14 = r0.<com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: android.net.LinkProperties mLinkProperties>;

        $r16 = virtualinvoke $r14.<android.net.LinkProperties: java.lang.String getInterfaceName()>();

        staticinvoke <android.net.NetworkUtils: boolean stopDhcp(java.lang.String)>($r16);

     label1:
        $r5 = r0.<com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: android.net.LinkProperties mLinkProperties>;

        virtualinvoke $r5.<android.net.LinkProperties: void clear()>();

        $r7 = r0.<com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: android.net.NetworkInfo mNetworkInfo>;

        $r6 = <android.net.NetworkInfo$DetailedState: android.net.NetworkInfo$DetailedState DISCONNECTED>;

        virtualinvoke $r7.<android.net.NetworkInfo: void setDetailedState(android.net.NetworkInfo$DetailedState,java.lang.String,java.lang.String)>($r6, null, null);

        $r8 = r0.<com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: android.net.NetworkAgent mNetworkAgent>;

        if $r8 == null goto label2;

        $r15 = r0.<com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: android.net.NetworkAgent mNetworkAgent>;

        $r13 = r0.<com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: android.net.NetworkInfo mNetworkInfo>;

        virtualinvoke $r15.<android.net.NetworkAgent: void sendNetworkInfo(android.net.NetworkInfo)>($r13);

        r0.<com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: android.net.NetworkAgent mNetworkAgent> = null;

     label2:
        $r9 = r0.<com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: com.android.bluetooth.pan.PanService mPanService>;

        $r10 = virtualinvoke $r9.<com.android.bluetooth.pan.PanService: java.util.List getConnectedDevices()>();

        r1 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r11 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (android.bluetooth.BluetoothDevice) $r11;

        $r12 = r0.<com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: com.android.bluetooth.pan.PanService mPanService>;

        virtualinvoke $r12.<com.android.bluetooth.pan.PanService: boolean disconnect(android.bluetooth.BluetoothDevice)>(r2);

        goto label3;

     label4:
        return;
    }

    public void startReverseTether(java.lang.String)
    {
        com.android.bluetooth.pan.BluetoothTetheringNetworkFactory r0, r2;
        java.lang.String r1, $r6;
        java.lang.Throwable r3, $r9;
        boolean $z0;
        android.net.LinkProperties $r5, $r7, $r8;

        r0 := @this: com.android.bluetooth.pan.BluetoothTetheringNetworkFactory;

        r1 := @parameter0: java.lang.String;

        if r1 == null goto label1;

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r1);

        if $z0 == 0 goto label2;

     label1:
        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BluetoothTetheringNetworkFactory", "attempted to reverse tether with empty interface");

        return;

     label2:
        r2 = r0;

        entermonitor r0;

     label3:
        $r5 = r0.<com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: android.net.LinkProperties mLinkProperties>;

        $r6 = virtualinvoke $r5.<android.net.LinkProperties: java.lang.String getInterfaceName()>();

        if $r6 == null goto label5;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BluetoothTetheringNetworkFactory", "attempted to reverse tether while already in process");

        exitmonitor r2;

     label4:
        return;

     label5:
        $r7 = new android.net.LinkProperties;

        specialinvoke $r7.<android.net.LinkProperties: void <init>()>();

        r0.<com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: android.net.LinkProperties mLinkProperties> = $r7;

        $r8 = r0.<com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: android.net.LinkProperties mLinkProperties>;

        virtualinvoke $r8.<android.net.LinkProperties: void setInterfaceName(java.lang.String)>(r1);

        virtualinvoke r0.<com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: void register()>();

        virtualinvoke r0.<com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: void setScoreFilter(int)>(69);

        exitmonitor r2;

     label6:
        goto label9;

     label7:
        $r9 := @caughtexception;

        r3 = $r9;

        exitmonitor r2;

     label8:
        throw r3;

     label9:
        return;

        catch java.lang.Throwable from label3 to label4 with label7;
        catch java.lang.Throwable from label5 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    public synchronized void stopReverseTether()
    {
        com.android.bluetooth.pan.BluetoothTetheringNetworkFactory r0;
        android.net.LinkProperties $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: com.android.bluetooth.pan.BluetoothTetheringNetworkFactory;

        $r1 = r0.<com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: android.net.LinkProperties mLinkProperties>;

        $r2 = virtualinvoke $r1.<android.net.LinkProperties: java.lang.String getInterfaceName()>();

        $z0 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>($r2);

        if $z0 == 0 goto label1;

        staticinvoke <android.util.Slog: int e(java.lang.String,java.lang.String)>("BluetoothTetheringNetworkFactory", "attempted to stop reverse tether with nothing tethered");

        return;

     label1:
        specialinvoke r0.<com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: void onCancelRequest()>();

        virtualinvoke r0.<com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: void setScoreFilter(int)>(-1);

        virtualinvoke r0.<com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: void unregister()>();

        return;
    }

    private void initNetworkCapabilities()
    {
        com.android.bluetooth.pan.BluetoothTetheringNetworkFactory r0;
        android.net.NetworkCapabilities $r1, $r3, $r5, $r7, $r8;

        r0 := @this: com.android.bluetooth.pan.BluetoothTetheringNetworkFactory;

        $r1 = r0.<com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: android.net.NetworkCapabilities mNetworkCapabilities>;

        virtualinvoke $r1.<android.net.NetworkCapabilities: android.net.NetworkCapabilities addTransportType(int)>(2);

        $r3 = r0.<com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: android.net.NetworkCapabilities mNetworkCapabilities>;

        virtualinvoke $r3.<android.net.NetworkCapabilities: android.net.NetworkCapabilities addCapability(int)>(12);

        $r5 = r0.<com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: android.net.NetworkCapabilities mNetworkCapabilities>;

        virtualinvoke $r5.<android.net.NetworkCapabilities: android.net.NetworkCapabilities addCapability(int)>(13);

        $r7 = r0.<com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: android.net.NetworkCapabilities mNetworkCapabilities>;

        virtualinvoke $r7.<android.net.NetworkCapabilities: void setLinkUpstreamBandwidthKbps(int)>(24000);

        $r8 = r0.<com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: android.net.NetworkCapabilities mNetworkCapabilities>;

        virtualinvoke $r8.<android.net.NetworkCapabilities: void setLinkDownstreamBandwidthKbps(int)>(24000);

        return;
    }

    static android.net.LinkProperties access$000(com.android.bluetooth.pan.BluetoothTetheringNetworkFactory)
    {
        com.android.bluetooth.pan.BluetoothTetheringNetworkFactory r0;
        android.net.LinkProperties $r1;

        r0 := @parameter0: com.android.bluetooth.pan.BluetoothTetheringNetworkFactory;

        $r1 = r0.<com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: android.net.LinkProperties mLinkProperties>;

        return $r1;
    }

    static android.net.NetworkInfo access$100(com.android.bluetooth.pan.BluetoothTetheringNetworkFactory)
    {
        com.android.bluetooth.pan.BluetoothTetheringNetworkFactory r0;
        android.net.NetworkInfo $r1;

        r0 := @parameter0: com.android.bluetooth.pan.BluetoothTetheringNetworkFactory;

        $r1 = r0.<com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: android.net.NetworkInfo mNetworkInfo>;

        return $r1;
    }

    static void access$200(com.android.bluetooth.pan.BluetoothTetheringNetworkFactory, java.lang.String)
    {
        com.android.bluetooth.pan.BluetoothTetheringNetworkFactory r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.bluetooth.pan.BluetoothTetheringNetworkFactory;

        r1 := @parameter1: java.lang.String;

        virtualinvoke r0.<com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: void log(java.lang.String)>(r1);

        return;
    }

    static android.net.LinkProperties access$002(com.android.bluetooth.pan.BluetoothTetheringNetworkFactory, android.net.LinkProperties)
    {
        com.android.bluetooth.pan.BluetoothTetheringNetworkFactory r0;
        android.net.LinkProperties r1;

        r0 := @parameter0: com.android.bluetooth.pan.BluetoothTetheringNetworkFactory;

        r1 := @parameter1: android.net.LinkProperties;

        r0.<com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: android.net.LinkProperties mLinkProperties> = r1;

        return r1;
    }

    static android.net.NetworkAgent access$302(com.android.bluetooth.pan.BluetoothTetheringNetworkFactory, android.net.NetworkAgent)
    {
        com.android.bluetooth.pan.BluetoothTetheringNetworkFactory r0;
        android.net.NetworkAgent r1;

        r0 := @parameter0: com.android.bluetooth.pan.BluetoothTetheringNetworkFactory;

        r1 := @parameter1: android.net.NetworkAgent;

        r0.<com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: android.net.NetworkAgent mNetworkAgent> = r1;

        return r1;
    }

    static android.content.Context access$400(com.android.bluetooth.pan.BluetoothTetheringNetworkFactory)
    {
        com.android.bluetooth.pan.BluetoothTetheringNetworkFactory r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.bluetooth.pan.BluetoothTetheringNetworkFactory;

        $r1 = r0.<com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: android.content.Context mContext>;

        return $r1;
    }

    static android.net.NetworkCapabilities access$500(com.android.bluetooth.pan.BluetoothTetheringNetworkFactory)
    {
        com.android.bluetooth.pan.BluetoothTetheringNetworkFactory r0;
        android.net.NetworkCapabilities $r1;

        r0 := @parameter0: com.android.bluetooth.pan.BluetoothTetheringNetworkFactory;

        $r1 = r0.<com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: android.net.NetworkCapabilities mNetworkCapabilities>;

        return $r1;
    }

    static void access$600(com.android.bluetooth.pan.BluetoothTetheringNetworkFactory)
    {
        com.android.bluetooth.pan.BluetoothTetheringNetworkFactory r0;

        r0 := @parameter0: com.android.bluetooth.pan.BluetoothTetheringNetworkFactory;

        specialinvoke r0.<com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: void onCancelRequest()>();

        return;
    }

    public static void <clinit>()
    {
        <com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: int NETWORK_SCORE> = 69;

        <com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: java.lang.String TAG> = "BluetoothTetheringNetworkFactory";

        <com.android.bluetooth.pan.BluetoothTetheringNetworkFactory: java.lang.String NETWORK_TYPE> = "Bluetooth Tethering";

        return;
    }
}
