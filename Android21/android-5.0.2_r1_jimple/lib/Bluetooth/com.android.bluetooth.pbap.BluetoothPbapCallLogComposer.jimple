public class com.android.bluetooth.pbap.BluetoothPbapCallLogComposer extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final java.lang.String FAILURE_REASON_FAILED_TO_GET_DATABASE_INFO;
    private static final java.lang.String FAILURE_REASON_NO_ENTRY;
    private static final java.lang.String FAILURE_REASON_NOT_INITIALIZED;
    private static final java.lang.String FAILURE_REASON_UNSUPPORTED_URI;
    private static final java.lang.String NO_ERROR;
    private static final java.lang.String[] sCallLogProjection;
    private static final int NUMBER_COLUMN_INDEX;
    private static final int DATE_COLUMN_INDEX;
    private static final int CALL_TYPE_COLUMN_INDEX;
    private static final int CALLER_NAME_COLUMN_INDEX;
    private static final int CALLER_NUMBERTYPE_COLUMN_INDEX;
    private static final int CALLER_NUMBERLABEL_COLUMN_INDEX;
    private static final int NUMBER_PRESENTATION_COLUMN_INDEX;
    private static final java.lang.String VCARD_PROPERTY_X_TIMESTAMP;
    private static final java.lang.String VCARD_PROPERTY_CALLTYPE_INCOMING;
    private static final java.lang.String VCARD_PROPERTY_CALLTYPE_OUTGOING;
    private static final java.lang.String VCARD_PROPERTY_CALLTYPE_MISSED;
    private final android.content.Context mContext;
    private android.content.ContentResolver mContentResolver;
    private android.database.Cursor mCursor;
    private boolean mTerminateIsCalled;
    private java.lang.String mErrorReason;

    public void <init>(android.content.Context)
    {
        com.android.bluetooth.pbap.BluetoothPbapCallLogComposer r0;
        android.content.Context r1;
        android.content.ContentResolver $r2;

        r0 := @this: com.android.bluetooth.pbap.BluetoothPbapCallLogComposer;

        r1 := @parameter0: android.content.Context;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: java.lang.String mErrorReason> = "No error";

        r0.<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: android.content.Context mContext> = r1;

        $r2 = virtualinvoke r1.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        r0.<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: android.content.ContentResolver mContentResolver> = $r2;

        return;
    }

    public boolean init(android.net.Uri, java.lang.String, java.lang.String[], java.lang.String)
    {
        com.android.bluetooth.pbap.BluetoothPbapCallLogComposer r0;
        android.net.Uri r1, $r8;
        java.lang.String r2, r4, $r19, $r20;
        java.lang.String[] r3, r5;
        android.database.sqlite.SQLiteException r6, $r16;
        java.lang.Throwable r7, $r21;
        boolean $z0, $z1;
        android.content.ContentResolver $r9;
        android.database.Cursor $r10, $r11, $r12, $r13, $r14;
        int $i0;
        java.lang.StringBuilder $r15, $r17, $r18;

        r0 := @this: com.android.bluetooth.pbap.BluetoothPbapCallLogComposer;

        r1 := @parameter0: android.net.Uri;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String[];

        r4 := @parameter3: java.lang.String;

        $r8 = <android.provider.CallLog$Calls: android.net.Uri CONTENT_URI>;

        $z0 = virtualinvoke $r8.<android.net.Uri: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label01;

        r5 = <com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: java.lang.String[] sCallLogProjection>;

        goto label02;

     label01:
        r0.<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: java.lang.String mErrorReason> = "The Uri vCard composer received is not supported by the composer.";

        return 0;

     label02:
        $r9 = r0.<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: android.content.ContentResolver mContentResolver>;

        $r10 = virtualinvoke $r9.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>(r1, r5, r2, r3, r4);

        r0.<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: android.database.Cursor mCursor> = $r10;

        $r11 = r0.<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: android.database.Cursor mCursor>;

        if $r11 != null goto label03;

        r0.<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: java.lang.String mErrorReason> = "Failed to get database information";

        return 0;

     label03:
        $r12 = r0.<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: android.database.Cursor mCursor>;

        $i0 = interfaceinvoke $r12.<android.database.Cursor: int getCount()>();

        if $i0 == 0 goto label04;

        $r14 = r0.<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: android.database.Cursor mCursor>;

        $z1 = interfaceinvoke $r14.<android.database.Cursor: boolean moveToFirst()>();

        if $z1 != 0 goto label11;

     label04:
        $r13 = r0.<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: android.database.Cursor mCursor>;

        interfaceinvoke $r13.<android.database.Cursor: void close()>();

     label05:
        r0.<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: java.lang.String mErrorReason> = "There\'s no exportable in the database";

        r0.<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: android.database.Cursor mCursor> = null;

        goto label10;

     label06:
        $r16 := @caughtexception;

        r6 = $r16;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SQLiteException on Cursor#close(): ");

        $r19 = virtualinvoke r6.<android.database.sqlite.SQLiteException: java.lang.String getMessage()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CallLogComposer", $r20);

     label07:
        r0.<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: java.lang.String mErrorReason> = "There\'s no exportable in the database";

        r0.<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: android.database.Cursor mCursor> = null;

        goto label10;

     label08:
        $r21 := @caughtexception;

        r7 = $r21;

     label09:
        r0.<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: java.lang.String mErrorReason> = "There\'s no exportable in the database";

        r0.<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: android.database.Cursor mCursor> = null;

        throw r7;

     label10:
        return 0;

     label11:
        return 1;

        catch android.database.sqlite.SQLiteException from label04 to label05 with label06;
        catch java.lang.Throwable from label04 to label05 with label08;
        catch java.lang.Throwable from label06 to label07 with label08;
        catch java.lang.Throwable from label08 to label09 with label08;
    }

    public java.lang.String createOneEntry(boolean)
    {
        com.android.bluetooth.pbap.BluetoothPbapCallLogComposer r0;
        boolean z0, $z1;
        java.lang.String r1;
        java.lang.Throwable r2, $r6;
        android.database.Cursor $r3, $r4, $r5, $r7;

        r0 := @this: com.android.bluetooth.pbap.BluetoothPbapCallLogComposer;

        z0 := @parameter0: boolean;

        $r3 = r0.<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: android.database.Cursor mCursor>;

        if $r3 == null goto label1;

        $r4 = r0.<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: android.database.Cursor mCursor>;

        $z1 = interfaceinvoke $r4.<android.database.Cursor: boolean isAfterLast()>();

        if $z1 == 0 goto label2;

     label1:
        r0.<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: java.lang.String mErrorReason> = "The vCard composer object is not correctly initialized";

        return null;

     label2:
        r1 = specialinvoke r0.<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: java.lang.String createOneCallLogEntryInternal(boolean)>(z0);

     label3:
        $r5 = r0.<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: android.database.Cursor mCursor>;

        interfaceinvoke $r5.<android.database.Cursor: boolean moveToNext()>();

        return r1;

     label4:
        $r6 := @caughtexception;

        r2 = $r6;

     label5:
        $r7 = r0.<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: android.database.Cursor mCursor>;

        interfaceinvoke $r7.<android.database.Cursor: boolean moveToNext()>();

        throw r2;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private java.lang.String createOneCallLogEntryInternal(boolean)
    {
        com.android.bluetooth.pbap.BluetoothPbapCallLogComposer r0;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        int i0, i1, i2, $i3;
        com.android.vcard.VCardBuilder r1, $r5;
        java.lang.String r2, r3, r4, $r13;
        android.database.Cursor $r6, $r7, $r8, $r10, $r11;
        java.lang.String[] $r9;
        java.lang.Integer $r12;
        android.content.Context $r14;

        r0 := @this: com.android.bluetooth.pbap.BluetoothPbapCallLogComposer;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $i3 = -1073741824;

        goto label2;

     label1:
        $i3 = -1073741823;

     label2:
        i0 = $i3 | 33554432;

        $r5 = new com.android.vcard.VCardBuilder;

        specialinvoke $r5.<com.android.vcard.VCardBuilder: void <init>(int)>(i0);

        r1 = $r5;

        $r6 = r0.<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: android.database.Cursor mCursor>;

        r2 = interfaceinvoke $r6.<android.database.Cursor: java.lang.String getString(int)>(3);

        $r7 = r0.<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: android.database.Cursor mCursor>;

        r3 = interfaceinvoke $r7.<android.database.Cursor: java.lang.String getString(int)>(0);

        $r8 = r0.<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: android.database.Cursor mCursor>;

        i1 = interfaceinvoke $r8.<android.database.Cursor: int getInt(int)>(6);

        $z2 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z2 == 0 goto label3;

        r2 = "";

     label3:
        if i1 == 1 goto label4;

        r2 = "";

        $r14 = r0.<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: android.content.Context mContext>;

        r3 = virtualinvoke $r14.<android.content.Context: java.lang.String getString(int)>(2131034118);

     label4:
        $r9 = newarray (java.lang.String)[1];

        $r9[0] = r2;

        $z3 = staticinvoke <com.android.vcard.VCardUtils: boolean containsOnlyPrintableAscii(java.lang.String[])>($r9);

        if $z3 != 0 goto label5;

        $z5 = 1;

        goto label6;

     label5:
        $z5 = 0;

     label6:
        z1 = $z5;

        virtualinvoke r1.<com.android.vcard.VCardBuilder: void appendLine(java.lang.String,java.lang.String,boolean,boolean)>("FN", r2, z1, 0);

        virtualinvoke r1.<com.android.vcard.VCardBuilder: void appendLine(java.lang.String,java.lang.String,boolean,boolean)>("N", r2, z1, 0);

        $r10 = r0.<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: android.database.Cursor mCursor>;

        i2 = interfaceinvoke $r10.<android.database.Cursor: int getInt(int)>(4);

        $r11 = r0.<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: android.database.Cursor mCursor>;

        r4 = interfaceinvoke $r11.<android.database.Cursor: java.lang.String getString(int)>(5);

        $z4 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r4);

        if $z4 == 0 goto label7;

        r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i2);

     label7:
        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        virtualinvoke r1.<com.android.vcard.VCardBuilder: void appendTelLine(java.lang.Integer,java.lang.String,java.lang.String,boolean)>($r12, r4, r3, 0);

        specialinvoke r0.<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: void tryAppendCallHistoryTimeStampField(com.android.vcard.VCardBuilder)>(r1);

        $r13 = virtualinvoke r1.<com.android.vcard.VCardBuilder: java.lang.String toString()>();

        return $r13;
    }

    public java.lang.String composeVCardForPhoneOwnNumber(int, java.lang.String, java.lang.String, boolean)
    {
        com.android.bluetooth.pbap.BluetoothPbapCallLogComposer r0;
        int i0, i1, $i2;
        java.lang.String r1, r2, r4, $r7;
        boolean z0, z1, $z2, $z3;
        com.android.vcard.VCardBuilder r3, $r5;
        java.lang.String[] $r6;
        java.lang.Integer $r8;

        r0 := @this: com.android.bluetooth.pbap.BluetoothPbapCallLogComposer;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        if z0 == 0 goto label1;

        $i2 = -1073741824;

        goto label2;

     label1:
        $i2 = -1073741823;

     label2:
        i1 = $i2 | 33554432;

        $r5 = new com.android.vcard.VCardBuilder;

        specialinvoke $r5.<com.android.vcard.VCardBuilder: void <init>(int)>(i1);

        r3 = $r5;

        z1 = 0;

        $r6 = newarray (java.lang.String)[1];

        $r6[0] = r1;

        $z2 = staticinvoke <com.android.vcard.VCardUtils: boolean containsOnlyPrintableAscii(java.lang.String[])>($r6);

        if $z2 != 0 goto label3;

        z1 = 1;

     label3:
        virtualinvoke r3.<com.android.vcard.VCardBuilder: void appendLine(java.lang.String,java.lang.String,boolean,boolean)>("FN", r1, z1, 0);

        virtualinvoke r3.<com.android.vcard.VCardBuilder: void appendLine(java.lang.String,java.lang.String,boolean,boolean)>("N", r1, z1, 0);

        $z3 = staticinvoke <android.text.TextUtils: boolean isEmpty(java.lang.CharSequence)>(r2);

        if $z3 != 0 goto label4;

        r4 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0);

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        virtualinvoke r3.<com.android.vcard.VCardBuilder: void appendTelLine(java.lang.Integer,java.lang.String,java.lang.String,boolean)>($r8, r4, r2, 0);

     label4:
        $r7 = virtualinvoke r3.<com.android.vcard.VCardBuilder: java.lang.String toString()>();

        return $r7;
    }

    private final java.lang.String toRfc2455Format(long)
    {
        com.android.bluetooth.pbap.BluetoothPbapCallLogComposer r0;
        long l0;
        android.text.format.Time r1, $r2;
        java.lang.String $r3;

        r0 := @this: com.android.bluetooth.pbap.BluetoothPbapCallLogComposer;

        l0 := @parameter0: long;

        $r2 = new android.text.format.Time;

        specialinvoke $r2.<android.text.format.Time: void <init>()>();

        r1 = $r2;

        virtualinvoke r1.<android.text.format.Time: void set(long)>(l0);

        $r3 = virtualinvoke r1.<android.text.format.Time: java.lang.String format2445()>();

        return $r3;
    }

    private void tryAppendCallHistoryTimeStampField(com.android.vcard.VCardBuilder)
    {
        com.android.bluetooth.pbap.BluetoothPbapCallLogComposer r0;
        com.android.vcard.VCardBuilder r1;
        int i0;
        java.lang.String r2, $r7;
        long l1;
        android.database.Cursor $r3, $r4;
        java.lang.String[] $r5;
        java.util.List $r6;

        r0 := @this: com.android.bluetooth.pbap.BluetoothPbapCallLogComposer;

        r1 := @parameter0: com.android.vcard.VCardBuilder;

        $r3 = r0.<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: android.database.Cursor mCursor>;

        i0 = interfaceinvoke $r3.<android.database.Cursor: int getInt(int)>(2);

        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        r2 = "RECEIVED";

        goto label5;

     label2:
        r2 = "DIALED";

        goto label5;

     label3:
        r2 = "MISSED";

        goto label5;

     label4:
        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("CallLogComposer", "Call log type not correct.");

        return;

     label5:
        $r4 = r0.<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: android.database.Cursor mCursor>;

        l1 = interfaceinvoke $r4.<android.database.Cursor: long getLong(int)>(1);

        $r5 = newarray (java.lang.String)[1];

        $r5[0] = r2;

        $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r5);

        $r7 = specialinvoke r0.<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: java.lang.String toRfc2455Format(long)>(l1);

        virtualinvoke r1.<com.android.vcard.VCardBuilder: void appendLine(java.lang.String,java.util.List,java.lang.String)>("X-IRMC-CALL-DATETIME", $r6, $r7);

        return;
    }

    public void terminate()
    {
        com.android.bluetooth.pbap.BluetoothPbapCallLogComposer r0;
        android.database.sqlite.SQLiteException r1, $r4;
        android.database.Cursor $r2, $r3;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.lang.String $r7, $r9;

        r0 := @this: com.android.bluetooth.pbap.BluetoothPbapCallLogComposer;

        $r2 = r0.<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: android.database.Cursor mCursor>;

        if $r2 == null goto label5;

     label1:
        $r3 = r0.<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: android.database.Cursor mCursor>;

        interfaceinvoke $r3.<android.database.Cursor: void close()>();

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r1 = $r4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SQLiteException on Cursor#close(): ");

        $r7 = virtualinvoke r1.<android.database.sqlite.SQLiteException: java.lang.String getMessage()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("CallLogComposer", $r9);

     label4:
        r0.<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: android.database.Cursor mCursor> = null;

     label5:
        r0.<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: boolean mTerminateIsCalled> = 1;

        return;

        catch android.database.sqlite.SQLiteException from label1 to label2 with label3;
    }

    public void finalize()
    {
        com.android.bluetooth.pbap.BluetoothPbapCallLogComposer r0;
        boolean $z0;

        r0 := @this: com.android.bluetooth.pbap.BluetoothPbapCallLogComposer;

        $z0 = r0.<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: boolean mTerminateIsCalled>;

        if $z0 != 0 goto label1;

        virtualinvoke r0.<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: void terminate()>();

     label1:
        return;
    }

    public int getCount()
    {
        com.android.bluetooth.pbap.BluetoothPbapCallLogComposer r0;
        android.database.Cursor $r1, $r2;
        int $i0;

        r0 := @this: com.android.bluetooth.pbap.BluetoothPbapCallLogComposer;

        $r1 = r0.<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: android.database.Cursor mCursor>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: android.database.Cursor mCursor>;

        $i0 = interfaceinvoke $r2.<android.database.Cursor: int getCount()>();

        return $i0;
    }

    public boolean isAfterLast()
    {
        com.android.bluetooth.pbap.BluetoothPbapCallLogComposer r0;
        android.database.Cursor $r1, $r2;
        boolean $z0;

        r0 := @this: com.android.bluetooth.pbap.BluetoothPbapCallLogComposer;

        $r1 = r0.<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: android.database.Cursor mCursor>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: android.database.Cursor mCursor>;

        $z0 = interfaceinvoke $r2.<android.database.Cursor: boolean isAfterLast()>();

        return $z0;
    }

    public java.lang.String getErrorReason()
    {
        com.android.bluetooth.pbap.BluetoothPbapCallLogComposer r0;
        java.lang.String $r1;

        r0 := @this: com.android.bluetooth.pbap.BluetoothPbapCallLogComposer;

        $r1 = r0.<com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: java.lang.String mErrorReason>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;

        <com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: java.lang.String VCARD_PROPERTY_CALLTYPE_MISSED> = "MISSED";

        <com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: java.lang.String VCARD_PROPERTY_CALLTYPE_OUTGOING> = "DIALED";

        <com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: java.lang.String VCARD_PROPERTY_CALLTYPE_INCOMING> = "RECEIVED";

        <com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: java.lang.String VCARD_PROPERTY_X_TIMESTAMP> = "X-IRMC-CALL-DATETIME";

        <com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: int NUMBER_PRESENTATION_COLUMN_INDEX> = 6;

        <com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: int CALLER_NUMBERLABEL_COLUMN_INDEX> = 5;

        <com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: int CALLER_NUMBERTYPE_COLUMN_INDEX> = 4;

        <com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: int CALLER_NAME_COLUMN_INDEX> = 3;

        <com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: int CALL_TYPE_COLUMN_INDEX> = 2;

        <com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: int DATE_COLUMN_INDEX> = 1;

        <com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: int NUMBER_COLUMN_INDEX> = 0;

        <com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: java.lang.String NO_ERROR> = "No error";

        <com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: java.lang.String FAILURE_REASON_UNSUPPORTED_URI> = "The Uri vCard composer received is not supported by the composer.";

        <com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: java.lang.String FAILURE_REASON_NOT_INITIALIZED> = "The vCard composer object is not correctly initialized";

        <com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: java.lang.String FAILURE_REASON_NO_ENTRY> = "There\'s no exportable in the database";

        <com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: java.lang.String FAILURE_REASON_FAILED_TO_GET_DATABASE_INFO> = "Failed to get database information";

        <com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: java.lang.String TAG> = "CallLogComposer";

        $r0 = newarray (java.lang.String)[7];

        $r0[0] = "number";

        $r0[1] = "date";

        $r0[2] = "type";

        $r0[3] = "name";

        $r0[4] = "numbertype";

        $r0[5] = "numberlabel";

        $r0[6] = "presentation";

        <com.android.bluetooth.pbap.BluetoothPbapCallLogComposer: java.lang.String[] sCallLogProjection> = $r0;

        return;
    }
}
