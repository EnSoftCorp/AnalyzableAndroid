class com.android.bluetooth.gatt.ScanManager$ScanNative extends java.lang.Object
{
    private static final int DELIVERY_MODE_IMMEDIATE;
    private static final int DELIVERY_MODE_ON_FOUND_LOST;
    private static final int DELIVERY_MODE_BATCH;
    private static final int DEFAULT_ONLOST_ONFOUND_TIMEOUT_MILLIS;
    private static final int ONFOUND_SIGHTINGS;
    private static final int ALL_PASS_FILTER_INDEX_REGULAR_SCAN;
    private static final int ALL_PASS_FILTER_INDEX_BATCH_SCAN;
    private static final int ALL_PASS_FILTER_SELECTION;
    private static final int DISCARD_OLDEST_WHEN_BUFFER_FULL;
    private static final int SCAN_MODE_LOW_POWER_WINDOW_MS;
    private static final int SCAN_MODE_LOW_POWER_INTERVAL_MS;
    private static final int SCAN_MODE_BALANCED_WINDOW_MS;
    private static final int SCAN_MODE_BALANCED_INTERVAL_MS;
    private static final int SCAN_MODE_LOW_LATENCY_WINDOW_MS;
    private static final int SCAN_MODE_LOW_LATENCY_INTERVAL_MS;
    private static final int SCAN_MODE_BATCH_LOW_POWER_WINDOW_MS;
    private static final int SCAN_MODE_BATCH_LOW_POWER_INTERVAL_MS;
    private static final int SCAN_MODE_BATCH_BALANCED_WINDOW_MS;
    private static final int SCAN_MODE_BATCH_BALANCED_INTERVAL_MS;
    private static final int SCAN_MODE_BATCH_LOW_LATENCY_WINDOW_MS;
    private static final int SCAN_MODE_BATCH_LOW_LATENCY_INTERVAL_MS;
    private static final int LIST_LOGIC_TYPE;
    private static final int FILTER_LOGIC_TYPE;
    private final java.util.Deque mFilterIndexStack;
    private final java.util.Map mClientFilterIndexMap;
    private final java.util.Set mAllPassRegularClients;
    private final java.util.Set mAllPassBatchClients;
    private android.app.AlarmManager mAlarmManager;
    private android.app.PendingIntent mBatchScanIntervalIntent;
    final com.android.bluetooth.gatt.ScanManager this$0;

    void <init>(com.android.bluetooth.gatt.ScanManager)
    {
        com.android.bluetooth.gatt.ScanManager$ScanNative r0;
        com.android.bluetooth.gatt.ScanManager r1;
        android.content.Intent r2, $r11;
        android.content.IntentFilter r3, $r14;
        java.util.HashSet $r4, $r5;
        java.util.ArrayDeque $r6;
        java.util.HashMap $r7;
        com.android.bluetooth.gatt.GattService $r8, $r12, $r16;
        java.lang.Object $r9;
        android.app.AlarmManager $r10;
        android.app.PendingIntent $r13;
        com.android.bluetooth.gatt.ScanManager$ScanNative$1 $r15;
        android.content.BroadcastReceiver $r19;

        r0 := @this: com.android.bluetooth.gatt.ScanManager$ScanNative;

        r1 := @parameter0: com.android.bluetooth.gatt.ScanManager;

        r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: java.util.Set mAllPassRegularClients> = $r4;

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>()>();

        r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: java.util.Set mAllPassBatchClients> = $r5;

        $r6 = new java.util.ArrayDeque;

        specialinvoke $r6.<java.util.ArrayDeque: void <init>()>();

        r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: java.util.Deque mFilterIndexStack> = $r6;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: java.util.Map mClientFilterIndexMap> = $r7;

        $r8 = staticinvoke <com.android.bluetooth.gatt.ScanManager: com.android.bluetooth.gatt.GattService access$000(com.android.bluetooth.gatt.ScanManager)>(r1);

        $r9 = virtualinvoke $r8.<com.android.bluetooth.gatt.GattService: java.lang.Object getSystemService(java.lang.String)>("alarm");

        $r10 = (android.app.AlarmManager) $r9;

        r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: android.app.AlarmManager mAlarmManager> = $r10;

        $r11 = new android.content.Intent;

        specialinvoke $r11.<android.content.Intent: void <init>(java.lang.String,android.net.Uri)>("com.android.bluetooth.gatt.REFRESH_BATCHED_SCAN", null);

        r2 = $r11;

        $r12 = staticinvoke <com.android.bluetooth.gatt.ScanManager: com.android.bluetooth.gatt.GattService access$000(com.android.bluetooth.gatt.ScanManager)>(r1);

        $r13 = staticinvoke <android.app.PendingIntent: android.app.PendingIntent getBroadcast(android.content.Context,int,android.content.Intent,int)>($r12, 0, r2, 0);

        r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: android.app.PendingIntent mBatchScanIntervalIntent> = $r13;

        $r14 = new android.content.IntentFilter;

        specialinvoke $r14.<android.content.IntentFilter: void <init>()>();

        r3 = $r14;

        virtualinvoke r3.<android.content.IntentFilter: void addAction(java.lang.String)>("com.android.bluetooth.gatt.REFRESH_BATCHED_SCAN");

        $r15 = new com.android.bluetooth.gatt.ScanManager$ScanNative$1;

        specialinvoke $r15.<com.android.bluetooth.gatt.ScanManager$ScanNative$1: void <init>(com.android.bluetooth.gatt.ScanManager$ScanNative,com.android.bluetooth.gatt.ScanManager)>(r0, r1);

        staticinvoke <com.android.bluetooth.gatt.ScanManager: android.content.BroadcastReceiver access$602(com.android.bluetooth.gatt.ScanManager,android.content.BroadcastReceiver)>(r1, $r15);

        $r16 = staticinvoke <com.android.bluetooth.gatt.ScanManager: com.android.bluetooth.gatt.GattService access$000(com.android.bluetooth.gatt.ScanManager)>(r1);

        $r19 = staticinvoke <com.android.bluetooth.gatt.ScanManager: android.content.BroadcastReceiver access$600(com.android.bluetooth.gatt.ScanManager)>(r1);

        virtualinvoke $r16.<com.android.bluetooth.gatt.GattService: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r19, r3);

        staticinvoke <com.android.bluetooth.gatt.ScanManager: boolean access$702(com.android.bluetooth.gatt.ScanManager,boolean)>(r1, 1);

        return;
    }

    private void resetCountDownLatch()
    {
        com.android.bluetooth.gatt.ScanManager$ScanNative r0;
        java.util.concurrent.CountDownLatch $r1;
        com.android.bluetooth.gatt.ScanManager $r2;

        r0 := @this: com.android.bluetooth.gatt.ScanManager$ScanNative;

        $r2 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0>;

        $r1 = new java.util.concurrent.CountDownLatch;

        specialinvoke $r1.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);

        staticinvoke <com.android.bluetooth.gatt.ScanManager: java.util.concurrent.CountDownLatch access$802(com.android.bluetooth.gatt.ScanManager,java.util.concurrent.CountDownLatch)>($r2, $r1);

        return;
    }

    private boolean waitForCallback()
    {
        com.android.bluetooth.gatt.ScanManager$ScanNative r0;
        com.android.bluetooth.gatt.ScanManager $r2;
        java.util.concurrent.CountDownLatch $r3;
        java.util.concurrent.TimeUnit $r4;
        boolean $z0;
        java.lang.InterruptedException $r5;

        r0 := @this: com.android.bluetooth.gatt.ScanManager$ScanNative;

     label1:
        $r2 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0>;

        $r3 = staticinvoke <com.android.bluetooth.gatt.ScanManager: java.util.concurrent.CountDownLatch access$800(com.android.bluetooth.gatt.ScanManager)>($r2);

        $r4 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;

        $z0 = virtualinvoke $r3.<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>(500L, $r4);

     label2:
        return $z0;

     label3:
        $r5 := @caughtexception;

        return 0;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    void configureRegularScanParams()
    {
        com.android.bluetooth.gatt.ScanManager$ScanNative r0;
        int i0, $i3, $i4, $i6, i9, i10;
        com.android.bluetooth.gatt.ScanClient r1;
        short s1, s2;
        java.lang.StringBuilder $r2, $r4, $r7, $r12, $r13, $r14, $r16, $r17, $r22, $r25, $r26;
        com.android.bluetooth.gatt.ScanManager $r3, $r5, $r9, $r11, $r15, $r18, $r20, $r21, $r23;
        java.util.Set $r6, $r10;
        java.lang.String $r8, $r19, $r24;
        android.bluetooth.le.ScanSettings $r27;

        r0 := @this: com.android.bluetooth.gatt.ScanManager$ScanNative;

        $r3 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("configureRegularScanParams() - queue=");

        $r5 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0>;

        $r6 = staticinvoke <com.android.bluetooth.gatt.ScanManager: java.util.Set access$200(com.android.bluetooth.gatt.ScanManager)>($r5);

        $i3 = interfaceinvoke $r6.<java.util.Set: int size()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.bluetooth.gatt.ScanManager: void access$100(com.android.bluetooth.gatt.ScanManager,java.lang.String)>($r3, $r8);

        i0 = -2147483648;

        $r9 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0>;

        $r10 = staticinvoke <com.android.bluetooth.gatt.ScanManager: java.util.Set access$200(com.android.bluetooth.gatt.ScanManager)>($r9);

        r1 = virtualinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanClient getAggressiveClient(java.util.Set)>($r10);

        if r1 == null goto label1;

        $r27 = r1.<com.android.bluetooth.gatt.ScanClient: android.bluetooth.le.ScanSettings settings>;

        i0 = virtualinvoke $r27.<android.bluetooth.le.ScanSettings: int getScanMode()>();

     label1:
        $r11 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("configureRegularScanParams() - ScanSetting Scan mode=");

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" mLastConfiguredScanSetting=");

        $r15 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0>;

        $i4 = staticinvoke <com.android.bluetooth.gatt.ScanManager: int access$900(com.android.bluetooth.gatt.ScanManager)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.bluetooth.gatt.ScanManager: void access$100(com.android.bluetooth.gatt.ScanManager,java.lang.String)>($r11, $r19);

        if i0 == -2147483648 goto label7;

        $r21 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0>;

        $i6 = staticinvoke <com.android.bluetooth.gatt.ScanManager: int access$900(com.android.bluetooth.gatt.ScanManager)>($r21);

        if i0 == $i6 goto label8;

        tableswitch(i0)
        {
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            default: goto label5;
        };

     label2:
        s1 = 500;

        s2 = 5000;

        goto label6;

     label3:
        s1 = 2000;

        s2 = 5000;

        goto label6;

     label4:
        s1 = 5000;

        s2 = 5000;

        goto label6;

     label5:
        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid value for curScanSetting ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r24 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BtGatt.ScanManager", $r24);

        s1 = 500;

        s2 = 5000;

     label6:
        i9 = staticinvoke <com.android.bluetooth.Utils: int millsToUnit(int)>(s1);

        i10 = staticinvoke <com.android.bluetooth.Utils: int millsToUnit(int)>(s2);

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void gattClientScanNative(boolean)>(0);

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void gattSetScanParametersNative(int,int)>(i10, i9);

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void gattClientScanNative(boolean)>(1);

        $r23 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0>;

        staticinvoke <com.android.bluetooth.gatt.ScanManager: int access$902(com.android.bluetooth.gatt.ScanManager,int)>($r23, i0);

        goto label8;

     label7:
        $r18 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0>;

        staticinvoke <com.android.bluetooth.gatt.ScanManager: int access$902(com.android.bluetooth.gatt.ScanManager,int)>($r18, i0);

        $r20 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0>;

        staticinvoke <com.android.bluetooth.gatt.ScanManager: void access$100(com.android.bluetooth.gatt.ScanManager,java.lang.String)>($r20, "configureRegularScanParams() - queue emtpy, scan stopped");

     label8:
        return;
    }

    com.android.bluetooth.gatt.ScanClient getAggressiveClient(java.util.Set)
    {
        com.android.bluetooth.gatt.ScanManager$ScanNative r0;
        java.util.Set r1;
        com.android.bluetooth.gatt.ScanClient r2, r4;
        int i0, $i1;
        java.util.Iterator r3;
        boolean $z0;
        java.lang.Object $r5;
        android.bluetooth.le.ScanSettings $r6, $r7;

        r0 := @this: com.android.bluetooth.gatt.ScanManager$ScanNative;

        r1 := @parameter0: java.util.Set;

        r2 = null;

        i0 = -2147483648;

        r3 = interfaceinvoke r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.bluetooth.gatt.ScanClient) $r5;

        $r6 = r4.<com.android.bluetooth.gatt.ScanClient: android.bluetooth.le.ScanSettings settings>;

        $i1 = virtualinvoke $r6.<android.bluetooth.le.ScanSettings: int getScanMode()>();

        if $i1 <= i0 goto label2;

        r2 = r4;

        $r7 = r4.<com.android.bluetooth.gatt.ScanClient: android.bluetooth.le.ScanSettings settings>;

        i0 = virtualinvoke $r7.<android.bluetooth.le.ScanSettings: int getScanMode()>();

     label2:
        goto label1;

     label3:
        return r2;
    }

    void startRegularScan(com.android.bluetooth.gatt.ScanClient)
    {
        com.android.bluetooth.gatt.ScanManager$ScanNative r0;
        com.android.bluetooth.gatt.ScanClient r1;
        java.util.Deque $r2;
        boolean $z0, $z1, $z2;
        com.android.bluetooth.gatt.ScanManager $r3, $r4, $r6;
        java.util.Set $r5;
        int $i0;

        r0 := @this: com.android.bluetooth.gatt.ScanManager$ScanNative;

        r1 := @parameter0: com.android.bluetooth.gatt.ScanClient;

        $r2 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: java.util.Deque mFilterIndexStack>;

        $z0 = interfaceinvoke $r2.<java.util.Deque: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r6 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0>;

        $z2 = staticinvoke <com.android.bluetooth.gatt.ScanManager: boolean access$500(com.android.bluetooth.gatt.ScanManager)>($r6);

        if $z2 == 0 goto label1;

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void initFilterIndexStack()>();

     label1:
        $r3 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0>;

        $z1 = staticinvoke <com.android.bluetooth.gatt.ScanManager: boolean access$500(com.android.bluetooth.gatt.ScanManager)>($r3);

        if $z1 == 0 goto label2;

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void configureScanFilters(com.android.bluetooth.gatt.ScanClient)>(r1);

     label2:
        $r4 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0>;

        $r5 = staticinvoke <com.android.bluetooth.gatt.ScanManager: java.util.Set access$200(com.android.bluetooth.gatt.ScanManager)>($r4);

        $i0 = interfaceinvoke $r5.<java.util.Set: int size()>();

        if $i0 != 1 goto label3;

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void gattClientScanNative(boolean)>(1);

     label3:
        return;
    }

    void startBatchScan(com.android.bluetooth.gatt.ScanClient)
    {
        com.android.bluetooth.gatt.ScanManager$ScanNative r0;
        com.android.bluetooth.gatt.ScanClient r1;
        java.util.Deque $r2;
        boolean $z0, $z1;
        com.android.bluetooth.gatt.ScanManager $r3;

        r0 := @this: com.android.bluetooth.gatt.ScanManager$ScanNative;

        r1 := @parameter0: com.android.bluetooth.gatt.ScanClient;

        $r2 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: java.util.Deque mFilterIndexStack>;

        $z0 = interfaceinvoke $r2.<java.util.Deque: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0>;

        $z1 = staticinvoke <com.android.bluetooth.gatt.ScanManager: boolean access$500(com.android.bluetooth.gatt.ScanManager)>($r3);

        if $z1 == 0 goto label1;

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void initFilterIndexStack()>();

     label1:
        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void configureScanFilters(com.android.bluetooth.gatt.ScanClient)>(r1);

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void resetBatchScan(com.android.bluetooth.gatt.ScanClient)>(r1);

        return;
    }

    private void resetBatchScan(com.android.bluetooth.gatt.ScanClient)
    {
        com.android.bluetooth.gatt.ScanManager$ScanNative r0;
        com.android.bluetooth.gatt.ScanClient r1;
        int i0, i2, i3, i4, i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        com.android.bluetooth.gatt.ScanManager$BatchScanParams r2, $r4, $r8, $r17;
        byte b1;
        com.android.bluetooth.gatt.ScanManager $r3, $r5, $r7, $r9, $r10, $r15, $r16;
        boolean $z0, $z3;
        java.lang.StringBuilder $r11, $r12, $r14;
        java.lang.String $r13;

        r0 := @this: com.android.bluetooth.gatt.ScanManager$ScanNative;

        r1 := @parameter0: com.android.bluetooth.gatt.ScanClient;

        i0 = r1.<com.android.bluetooth.gatt.ScanClient: int clientIf>;

        r2 = specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager$BatchScanParams getBatchScanParams()>();

        $r3 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0>;

        $r4 = staticinvoke <com.android.bluetooth.gatt.ScanManager: com.android.bluetooth.gatt.ScanManager$BatchScanParams access$1000(com.android.bluetooth.gatt.ScanManager)>($r3);

        if $r4 == null goto label1;

        $r16 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0>;

        $r17 = staticinvoke <com.android.bluetooth.gatt.ScanManager: com.android.bluetooth.gatt.ScanManager$BatchScanParams access$1000(com.android.bluetooth.gatt.ScanManager)>($r16);

        $z3 = virtualinvoke $r17.<com.android.bluetooth.gatt.ScanManager$BatchScanParams: boolean equals(java.lang.Object)>(r2);

        if $z3 != 0 goto label1;

        $r15 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0>;

        staticinvoke <com.android.bluetooth.gatt.ScanManager: void access$100(com.android.bluetooth.gatt.ScanManager,java.lang.String)>($r15, "stopping BLe Batch");

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void resetCountDownLatch()>();

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void gattClientStopBatchScanNative(int)>(i0);

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: boolean waitForCallback()>();

        virtualinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void flushBatchResults(int)>(i0);

     label1:
        if r2 == null goto label2;

        $r7 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0>;

        $r8 = staticinvoke <com.android.bluetooth.gatt.ScanManager: com.android.bluetooth.gatt.ScanManager$BatchScanParams access$1000(com.android.bluetooth.gatt.ScanManager)>($r7);

        $z0 = virtualinvoke r2.<com.android.bluetooth.gatt.ScanManager$BatchScanParams: boolean equals(java.lang.Object)>($r8);

        if $z0 != 0 goto label2;

        b1 = 95;

        $r9 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0>;

        staticinvoke <com.android.bluetooth.gatt.ScanManager: void access$100(com.android.bluetooth.gatt.ScanManager,java.lang.String)>($r9, "Starting BLE batch scan");

        i2 = specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: int getResultType(com.android.bluetooth.gatt.ScanManager$BatchScanParams)>(r2);

        i3 = specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: int getFullScanStoragePercent(int)>(i2);

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void resetCountDownLatch()>();

        $r10 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("configuring batch scan storage, appIf ");

        $i6 = r1.<com.android.bluetooth.gatt.ScanClient: int clientIf>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.bluetooth.gatt.ScanManager: void access$100(com.android.bluetooth.gatt.ScanManager,java.lang.String)>($r10, $r13);

        $i7 = r1.<com.android.bluetooth.gatt.ScanClient: int clientIf>;

        $i8 = 100 - i3;

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void gattClientConfigBatchScanStorageNative(int,int,int,int)>($i7, i3, $i8, b1);

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: boolean waitForCallback()>();

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void resetCountDownLatch()>();

        $i9 = r2.<com.android.bluetooth.gatt.ScanManager$BatchScanParams: int scanMode>;

        $i10 = specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: int getBatchScanIntervalMillis(int)>($i9);

        i4 = staticinvoke <com.android.bluetooth.Utils: int millsToUnit(int)>($i10);

        $i11 = r2.<com.android.bluetooth.gatt.ScanManager$BatchScanParams: int scanMode>;

        $i12 = specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: int getBatchScanWindowMillis(int)>($i11);

        i5 = staticinvoke <com.android.bluetooth.Utils: int millsToUnit(int)>($i12);

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void gattClientStartBatchScanNative(int,int,int,int,int,int)>(i0, i2, i4, i5, 0, 0);

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: boolean waitForCallback()>();

     label2:
        $r5 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0>;

        staticinvoke <com.android.bluetooth.gatt.ScanManager: com.android.bluetooth.gatt.ScanManager$BatchScanParams access$1002(com.android.bluetooth.gatt.ScanManager,com.android.bluetooth.gatt.ScanManager$BatchScanParams)>($r5, r2);

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void setBatchAlarm()>();

        return;
    }

    private int getFullScanStoragePercent(int)
    {
        com.android.bluetooth.gatt.ScanManager$ScanNative r0;
        int i0;

        r0 := @this: com.android.bluetooth.gatt.ScanManager$ScanNative;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label2;
            case 2: goto label1;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        return 100;

     label2:
        return 0;

     label3:
        return 50;

     label4:
        return 50;
    }

    private com.android.bluetooth.gatt.ScanManager$BatchScanParams getBatchScanParams()
    {
        com.android.bluetooth.gatt.ScanManager$ScanNative r0;
        com.android.bluetooth.gatt.ScanManager$BatchScanParams r1, $r6;
        java.util.Iterator r2;
        com.android.bluetooth.gatt.ScanClient r3;
        com.android.bluetooth.gatt.ScanManager $r4, $r7, $r8;
        java.util.Set $r5, $r9;
        boolean $z0, $z1;
        java.lang.Object $r10;
        android.bluetooth.le.ScanSettings $r11, $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: com.android.bluetooth.gatt.ScanManager$ScanNative;

        $r4 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0>;

        $r5 = staticinvoke <com.android.bluetooth.gatt.ScanManager: java.util.Set access$300(com.android.bluetooth.gatt.ScanManager)>($r4);

        $z0 = interfaceinvoke $r5.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r6 = new com.android.bluetooth.gatt.ScanManager$BatchScanParams;

        $r7 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0>;

        specialinvoke $r6.<com.android.bluetooth.gatt.ScanManager$BatchScanParams: void <init>(com.android.bluetooth.gatt.ScanManager)>($r7);

        r1 = $r6;

        $r8 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0>;

        $r9 = staticinvoke <com.android.bluetooth.gatt.ScanManager: java.util.Set access$300(com.android.bluetooth.gatt.ScanManager)>($r8);

        r2 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.bluetooth.gatt.ScanClient) $r10;

        $i0 = r1.<com.android.bluetooth.gatt.ScanManager$BatchScanParams: int scanMode>;

        $r11 = r3.<com.android.bluetooth.gatt.ScanClient: android.bluetooth.le.ScanSettings settings>;

        $i2 = virtualinvoke $r11.<android.bluetooth.le.ScanSettings: int getScanMode()>();

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i2);

        r1.<com.android.bluetooth.gatt.ScanManager$BatchScanParams: int scanMode> = $i1;

        $r12 = r3.<com.android.bluetooth.gatt.ScanClient: android.bluetooth.le.ScanSettings settings>;

        $i3 = virtualinvoke $r12.<android.bluetooth.le.ScanSettings: int getScanResultType()>();

        if $i3 != 0 goto label3;

        $i4 = r3.<com.android.bluetooth.gatt.ScanClient: int clientIf>;

        r1.<com.android.bluetooth.gatt.ScanManager$BatchScanParams: int fullScanClientIf> = $i4;

        goto label4;

     label3:
        $i5 = r3.<com.android.bluetooth.gatt.ScanClient: int clientIf>;

        r1.<com.android.bluetooth.gatt.ScanManager$BatchScanParams: int truncatedScanClientIf> = $i5;

     label4:
        goto label2;

     label5:
        return r1;
    }

    private int getBatchScanWindowMillis(int)
    {
        com.android.bluetooth.gatt.ScanManager$ScanNative r0;
        int i0;

        r0 := @this: com.android.bluetooth.gatt.ScanManager$ScanNative;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            case 2: goto label1;
            default: goto label4;
        };

     label1:
        return 1500;

     label2:
        return 1500;

     label3:
        return 1500;

     label4:
        return 1500;
    }

    private int getBatchScanIntervalMillis(int)
    {
        com.android.bluetooth.gatt.ScanManager$ScanNative r0;
        int i0;

        r0 := @this: com.android.bluetooth.gatt.ScanManager$ScanNative;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 0: goto label3;
            case 1: goto label2;
            case 2: goto label1;
            default: goto label4;
        };

     label1:
        return 5000;

     label2:
        return 15000;

     label3:
        return 150000;

     label4:
        return 150000;
    }

    private void setBatchAlarm()
    {
        com.android.bluetooth.gatt.ScanManager$ScanNative r0;
        long l0, l1, l2, $l3;
        android.app.PendingIntent $r1, $r5;
        android.app.AlarmManager $r2, $r6;
        com.android.bluetooth.gatt.ScanManager $r3;
        java.util.Set $r4;
        boolean $z0;

        r0 := @this: com.android.bluetooth.gatt.ScanManager$ScanNative;

        $r2 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: android.app.AlarmManager mAlarmManager>;

        $r1 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: android.app.PendingIntent mBatchScanIntervalIntent>;

        virtualinvoke $r2.<android.app.AlarmManager: void cancel(android.app.PendingIntent)>($r1);

        $r3 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0>;

        $r4 = staticinvoke <com.android.bluetooth.gatt.ScanManager: java.util.Set access$300(com.android.bluetooth.gatt.ScanManager)>($r3);

        $z0 = interfaceinvoke $r4.<java.util.Set: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        l0 = specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: long getBatchTriggerIntervalMillis()>();

        l1 = l0 / 10L;

        $l3 = staticinvoke <android.os.SystemClock: long elapsedRealtime()>();

        l2 = $l3 + l0;

        $r6 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: android.app.AlarmManager mAlarmManager>;

        $r5 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: android.app.PendingIntent mBatchScanIntervalIntent>;

        virtualinvoke $r6.<android.app.AlarmManager: void setWindow(int,long,long,android.app.PendingIntent)>(2, l2, l1, $r5);

        return;
    }

    void stopRegularScan(com.android.bluetooth.gatt.ScanClient)
    {
        com.android.bluetooth.gatt.ScanManager$ScanNative r0;
        com.android.bluetooth.gatt.ScanClient r1;
        int $i0;
        com.android.bluetooth.gatt.ScanManager $r2, $r4, $r6;
        java.util.Set $r3, $r5;
        boolean $z1;

        r0 := @this: com.android.bluetooth.gatt.ScanManager$ScanNative;

        r1 := @parameter0: com.android.bluetooth.gatt.ScanClient;

        $i0 = r1.<com.android.bluetooth.gatt.ScanClient: int clientIf>;

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void removeScanFilters(int)>($i0);

        $r2 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0>;

        $r3 = staticinvoke <com.android.bluetooth.gatt.ScanManager: java.util.Set access$200(com.android.bluetooth.gatt.ScanManager)>($r2);

        interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>(r1);

        $r4 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0>;

        $r5 = staticinvoke <com.android.bluetooth.gatt.ScanManager: java.util.Set access$200(com.android.bluetooth.gatt.ScanManager)>($r4);

        $z1 = interfaceinvoke $r5.<java.util.Set: boolean isEmpty()>();

        if $z1 == 0 goto label1;

        $r6 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0>;

        staticinvoke <com.android.bluetooth.gatt.ScanManager: void access$100(com.android.bluetooth.gatt.ScanManager,java.lang.String)>($r6, "stop scan");

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void gattClientScanNative(boolean)>(0);

     label1:
        return;
    }

    void stopBatchScan(com.android.bluetooth.gatt.ScanClient)
    {
        com.android.bluetooth.gatt.ScanManager$ScanNative r0;
        com.android.bluetooth.gatt.ScanClient r1;
        com.android.bluetooth.gatt.ScanManager $r2;
        java.util.Set $r3;
        int $i0;

        r0 := @this: com.android.bluetooth.gatt.ScanManager$ScanNative;

        r1 := @parameter0: com.android.bluetooth.gatt.ScanClient;

        $r2 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0>;

        $r3 = staticinvoke <com.android.bluetooth.gatt.ScanManager: java.util.Set access$300(com.android.bluetooth.gatt.ScanManager)>($r2);

        interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>(r1);

        $i0 = r1.<com.android.bluetooth.gatt.ScanClient: int clientIf>;

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void removeScanFilters(int)>($i0);

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void resetBatchScan(com.android.bluetooth.gatt.ScanClient)>(r1);

        return;
    }

    void flushBatchResults(int)
    {
        com.android.bluetooth.gatt.ScanManager$ScanNative r0;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.StringBuilder $r1, $r3, $r4;
        com.android.bluetooth.gatt.ScanManager $r2, $r6, $r8, $r10, $r12;
        java.lang.String $r5;
        com.android.bluetooth.gatt.ScanManager$BatchScanParams $r7, $r9, $r11, $r13;

        r0 := @this: com.android.bluetooth.gatt.ScanManager$ScanNative;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("flushPendingBatchResults - clientIf = ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.bluetooth.gatt.ScanManager: void access$100(com.android.bluetooth.gatt.ScanManager,java.lang.String)>($r2, $r5);

        $r6 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0>;

        $r7 = staticinvoke <com.android.bluetooth.gatt.ScanManager: com.android.bluetooth.gatt.ScanManager$BatchScanParams access$1000(com.android.bluetooth.gatt.ScanManager)>($r6);

        $i1 = $r7.<com.android.bluetooth.gatt.ScanManager$BatchScanParams: int fullScanClientIf>;

        if $i1 == -1 goto label1;

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void resetCountDownLatch()>();

        $r12 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0>;

        $r13 = staticinvoke <com.android.bluetooth.gatt.ScanManager: com.android.bluetooth.gatt.ScanManager$BatchScanParams access$1000(com.android.bluetooth.gatt.ScanManager)>($r12);

        $i4 = $r13.<com.android.bluetooth.gatt.ScanManager$BatchScanParams: int fullScanClientIf>;

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void gattClientReadScanReportsNative(int,int)>($i4, 2);

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: boolean waitForCallback()>();

     label1:
        $r8 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0>;

        $r9 = staticinvoke <com.android.bluetooth.gatt.ScanManager: com.android.bluetooth.gatt.ScanManager$BatchScanParams access$1000(com.android.bluetooth.gatt.ScanManager)>($r8);

        $i2 = $r9.<com.android.bluetooth.gatt.ScanManager$BatchScanParams: int truncatedScanClientIf>;

        if $i2 == -1 goto label2;

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void resetCountDownLatch()>();

        $r10 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0>;

        $r11 = staticinvoke <com.android.bluetooth.gatt.ScanManager: com.android.bluetooth.gatt.ScanManager$BatchScanParams access$1000(com.android.bluetooth.gatt.ScanManager)>($r10);

        $i3 = $r11.<com.android.bluetooth.gatt.ScanManager$BatchScanParams: int truncatedScanClientIf>;

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void gattClientReadScanReportsNative(int,int)>($i3, 1);

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: boolean waitForCallback()>();

     label2:
        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void setBatchAlarm()>();

        return;
    }

    void cleanup()
    {
        com.android.bluetooth.gatt.ScanManager$ScanNative r0;
        android.app.PendingIntent $r1;
        android.app.AlarmManager $r2;
        com.android.bluetooth.gatt.ScanManager $r3, $r4, $r5, $r7;
        boolean $z0;
        com.android.bluetooth.gatt.GattService $r6;
        android.content.BroadcastReceiver $r8;

        r0 := @this: com.android.bluetooth.gatt.ScanManager$ScanNative;

        $r2 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: android.app.AlarmManager mAlarmManager>;

        $r1 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: android.app.PendingIntent mBatchScanIntervalIntent>;

        virtualinvoke $r2.<android.app.AlarmManager: void cancel(android.app.PendingIntent)>($r1);

        $r3 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0>;

        $z0 = staticinvoke <com.android.bluetooth.gatt.ScanManager: boolean access$700(com.android.bluetooth.gatt.ScanManager)>($r3);

        if $z0 == 0 goto label1;

        $r5 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0>;

        $r6 = staticinvoke <com.android.bluetooth.gatt.ScanManager: com.android.bluetooth.gatt.GattService access$000(com.android.bluetooth.gatt.ScanManager)>($r5);

        $r7 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0>;

        $r8 = staticinvoke <com.android.bluetooth.gatt.ScanManager: android.content.BroadcastReceiver access$600(com.android.bluetooth.gatt.ScanManager)>($r7);

        virtualinvoke $r6.<com.android.bluetooth.gatt.GattService: void unregisterReceiver(android.content.BroadcastReceiver)>($r8);

     label1:
        $r4 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0>;

        staticinvoke <com.android.bluetooth.gatt.ScanManager: boolean access$702(com.android.bluetooth.gatt.ScanManager,boolean)>($r4, 0);

        return;
    }

    private long getBatchTriggerIntervalMillis()
    {
        com.android.bluetooth.gatt.ScanManager$ScanNative r0;
        long l0, $l1, $l3;
        java.util.Iterator r1;
        com.android.bluetooth.gatt.ScanClient r2;
        com.android.bluetooth.gatt.ScanManager $r3;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5;
        android.bluetooth.le.ScanSettings $r6, $r7, $r8;
        byte $b2;

        r0 := @this: com.android.bluetooth.gatt.ScanManager$ScanNative;

        l0 = 9223372036854775807L;

        $r3 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0>;

        $r4 = staticinvoke <com.android.bluetooth.gatt.ScanManager: java.util.Set access$300(com.android.bluetooth.gatt.ScanManager)>($r3);

        r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.bluetooth.gatt.ScanClient) $r5;

        $r6 = r2.<com.android.bluetooth.gatt.ScanClient: android.bluetooth.le.ScanSettings settings>;

        if $r6 == null goto label2;

        $r7 = r2.<com.android.bluetooth.gatt.ScanClient: android.bluetooth.le.ScanSettings settings>;

        $l1 = virtualinvoke $r7.<android.bluetooth.le.ScanSettings: long getReportDelayMillis()>();

        $b2 = $l1 cmp 0L;

        if $b2 <= 0 goto label2;

        $r8 = r2.<com.android.bluetooth.gatt.ScanClient: android.bluetooth.le.ScanSettings settings>;

        $l3 = virtualinvoke $r8.<android.bluetooth.le.ScanSettings: long getReportDelayMillis()>();

        l0 = staticinvoke <java.lang.Math: long min(long,long)>(l0, $l3);

     label2:
        goto label1;

     label3:
        return l0;
    }

    private void configureScanFilters(com.android.bluetooth.gatt.ScanClient)
    {
        com.android.bluetooth.gatt.ScanManager$ScanNative r0;
        com.android.bluetooth.gatt.ScanClient r1;
        int i0, i1, i3, i4;
        byte b2, $b5;
        java.util.Iterator r2;
        android.bluetooth.le.ScanFilter r3;
        com.android.bluetooth.gatt.ScanFilterQueue r4, $r11;
        boolean $z0, $z2, $z3, $z5;
        java.util.ArrayDeque $r5, r17;
        java.util.List $r6;
        java.lang.Integer $r7, $r14, $r15;
        java.util.Map $r8;
        java.lang.Object $r9, $r12;
        java.util.Deque $r13;
        com.android.bluetooth.gatt.ScanFilterQueue$Entry $r16;

        r0 := @this: com.android.bluetooth.gatt.ScanManager$ScanNative;

        r1 := @parameter0: com.android.bluetooth.gatt.ScanClient;

        i0 = r1.<com.android.bluetooth.gatt.ScanClient: int clientIf>;

        i1 = specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: int getDeliveryMode(com.android.bluetooth.gatt.ScanClient)>(r1);

        $z0 = specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: boolean shouldAddAllPassFilterToController(com.android.bluetooth.gatt.ScanClient,int)>(r1, i1);

        if $z0 != 0 goto label1;

        return;

     label1:
        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void resetCountDownLatch()>();

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void gattClientScanFilterEnableNative(int,boolean)>(i0, 1);

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: boolean waitForCallback()>();

        $z2 = specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: boolean shouldUseAllPassFilter(com.android.bluetooth.gatt.ScanClient)>(r1);

        if $z2 == 0 goto label4;

        if i1 != 2 goto label2;

        $b5 = 2;

        goto label3;

     label2:
        $b5 = 1;

     label3:
        b2 = $b5;

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void resetCountDownLatch()>();

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void configureFilterParamter(int,com.android.bluetooth.gatt.ScanClient,int,int)>(i0, r1, 0, b2);

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: boolean waitForCallback()>();

        goto label9;

     label4:
        $r5 = new java.util.ArrayDeque;

        specialinvoke $r5.<java.util.ArrayDeque: void <init>()>();

        r17 = $r5;

        $r6 = r1.<com.android.bluetooth.gatt.ScanClient: java.util.List filters>;

        r2 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z3 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label8;

        $r9 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (android.bluetooth.le.ScanFilter) $r9;

        $r11 = new com.android.bluetooth.gatt.ScanFilterQueue;

        specialinvoke $r11.<com.android.bluetooth.gatt.ScanFilterQueue: void <init>()>();

        r4 = $r11;

        virtualinvoke r4.<com.android.bluetooth.gatt.ScanFilterQueue: void addScanFilter(android.bluetooth.le.ScanFilter)>(r3);

        i3 = virtualinvoke r4.<com.android.bluetooth.gatt.ScanFilterQueue: int getFeatureSelection()>();

        $r13 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: java.util.Deque mFilterIndexStack>;

        $r12 = interfaceinvoke $r13.<java.util.Deque: java.lang.Object pop()>();

        $r14 = (java.lang.Integer) $r12;

        i4 = virtualinvoke $r14.<java.lang.Integer: int intValue()>();

     label6:
        $z5 = virtualinvoke r4.<com.android.bluetooth.gatt.ScanFilterQueue: boolean isEmpty()>();

        if $z5 != 0 goto label7;

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void resetCountDownLatch()>();

        $r16 = virtualinvoke r4.<com.android.bluetooth.gatt.ScanFilterQueue: com.android.bluetooth.gatt.ScanFilterQueue$Entry pop()>();

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void addFilterToController(int,com.android.bluetooth.gatt.ScanFilterQueue$Entry,int)>(i0, $r16, i4);

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: boolean waitForCallback()>();

        goto label6;

     label7:
        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void resetCountDownLatch()>();

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void configureFilterParamter(int,com.android.bluetooth.gatt.ScanClient,int,int)>(i0, r1, i3, i4);

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: boolean waitForCallback()>();

        $r15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i4);

        interfaceinvoke r17.<java.util.Deque: boolean add(java.lang.Object)>($r15);

        goto label5;

     label8:
        $r8 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: java.util.Map mClientFilterIndexMap>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r7, r17);

     label9:
        return;
    }

    private boolean shouldAddAllPassFilterToController(com.android.bluetooth.gatt.ScanClient, int)
    {
        com.android.bluetooth.gatt.ScanManager$ScanNative r0;
        com.android.bluetooth.gatt.ScanClient r1;
        int i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z2, $z4;
        java.util.Set $r2, $r4, $r5, $r7;
        java.lang.Integer $r3, $r6;

        r0 := @this: com.android.bluetooth.gatt.ScanManager$ScanNative;

        r1 := @parameter0: com.android.bluetooth.gatt.ScanClient;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: boolean shouldUseAllPassFilter(com.android.bluetooth.gatt.ScanClient)>(r1);

        if $z0 != 0 goto label1;

        return 1;

     label1:
        if i0 != 2 goto label4;

        $r5 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: java.util.Set mAllPassBatchClients>;

        $i3 = r1.<com.android.bluetooth.gatt.ScanClient: int clientIf>;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>($r6);

        $r7 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: java.util.Set mAllPassBatchClients>;

        $i4 = interfaceinvoke $r7.<java.util.Set: int size()>();

        if $i4 != 1 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;

     label4:
        $r2 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: java.util.Set mAllPassRegularClients>;

        $i1 = r1.<com.android.bluetooth.gatt.ScanClient: int clientIf>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r3);

        $r4 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: java.util.Set mAllPassRegularClients>;

        $i2 = interfaceinvoke $r4.<java.util.Set: int size()>();

        if $i2 != 1 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        return $z2;
    }

    private void removeScanFilters(int)
    {
        com.android.bluetooth.gatt.ScanManager$ScanNative r0;
        int i0, $i1;
        java.util.Deque r1, $r9;
        java.util.Iterator r2;
        java.lang.Integer r3, $r5;
        java.util.Map $r4;
        java.lang.Object $r6, $r10;
        java.util.Set $r7, $r8;
        boolean $z1;

        r0 := @this: com.android.bluetooth.gatt.ScanManager$ScanNative;

        i0 := @parameter0: int;

        $r4 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: java.util.Map mClientFilterIndexMap>;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r5);

        r1 = (java.util.Deque) $r6;

        if r1 == null goto label2;

        $r9 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: java.util.Deque mFilterIndexStack>;

        interfaceinvoke $r9.<java.util.Deque: boolean addAll(java.util.Collection)>(r1);

        r2 = interfaceinvoke r1.<java.util.Deque: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r10 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (java.lang.Integer) $r10;

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void resetCountDownLatch()>();

        $i1 = virtualinvoke r3.<java.lang.Integer: int intValue()>();

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void gattClientScanFilterParamDeleteNative(int,int)>(i0, $i1);

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: boolean waitForCallback()>();

        goto label1;

     label2:
        $r7 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: java.util.Set mAllPassRegularClients>;

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void removeFilterIfExisits(java.util.Set,int,int)>($r7, i0, 1);

        $r8 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: java.util.Set mAllPassBatchClients>;

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void removeFilterIfExisits(java.util.Set,int,int)>($r8, i0, 2);

        return;
    }

    private void removeFilterIfExisits(java.util.Set, int, int)
    {
        com.android.bluetooth.gatt.ScanManager$ScanNative r0;
        java.util.Set r1;
        int i0, i1;
        java.lang.Integer $r2, $r3;
        boolean $z0, $z2;

        r0 := @this: com.android.bluetooth.gatt.ScanManager$ScanNative;

        r1 := @parameter0: java.util.Set;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke r1.<java.util.Set: boolean remove(java.lang.Object)>($r3);

        $z2 = interfaceinvoke r1.<java.util.Set: boolean isEmpty()>();

        if $z2 == 0 goto label2;

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void resetCountDownLatch()>();

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void gattClientScanFilterParamDeleteNative(int,int)>(i0, i1);

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: boolean waitForCallback()>();

     label2:
        return;
    }

    private com.android.bluetooth.gatt.ScanClient getBatchScanClient(int)
    {
        com.android.bluetooth.gatt.ScanManager$ScanNative r0;
        int i0, $i1;
        java.util.Iterator r1;
        com.android.bluetooth.gatt.ScanClient r2;
        com.android.bluetooth.gatt.ScanManager $r3;
        java.util.Set $r4;
        boolean $z0;
        java.lang.Object $r5;

        r0 := @this: com.android.bluetooth.gatt.ScanManager$ScanNative;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0>;

        $r4 = staticinvoke <com.android.bluetooth.gatt.ScanManager: java.util.Set access$300(com.android.bluetooth.gatt.ScanManager)>($r3);

        r1 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke r1.<java.util.Iterator: java.lang.Object next()>();

        r2 = (com.android.bluetooth.gatt.ScanClient) $r5;

        $i1 = r2.<com.android.bluetooth.gatt.ScanClient: int clientIf>;

        if $i1 != i0 goto label2;

        return r2;

     label2:
        goto label1;

     label3:
        return null;
    }

    private int getResultType(com.android.bluetooth.gatt.ScanManager$BatchScanParams)
    {
        com.android.bluetooth.gatt.ScanManager$ScanNative r0;
        com.android.bluetooth.gatt.ScanManager$BatchScanParams r1;
        int $i0, $i1, $i2, $i3;

        r0 := @this: com.android.bluetooth.gatt.ScanManager$ScanNative;

        r1 := @parameter0: com.android.bluetooth.gatt.ScanManager$BatchScanParams;

        $i0 = r1.<com.android.bluetooth.gatt.ScanManager$BatchScanParams: int fullScanClientIf>;

        if $i0 == -1 goto label1;

        $i3 = r1.<com.android.bluetooth.gatt.ScanManager$BatchScanParams: int truncatedScanClientIf>;

        if $i3 == -1 goto label1;

        return 3;

     label1:
        $i1 = r1.<com.android.bluetooth.gatt.ScanManager$BatchScanParams: int truncatedScanClientIf>;

        if $i1 == -1 goto label2;

        return 1;

     label2:
        $i2 = r1.<com.android.bluetooth.gatt.ScanManager$BatchScanParams: int fullScanClientIf>;

        if $i2 == -1 goto label3;

        return 2;

     label3:
        return -1;
    }

    private boolean shouldUseAllPassFilter(com.android.bluetooth.gatt.ScanClient)
    {
        com.android.bluetooth.gatt.ScanManager$ScanNative r0;
        com.android.bluetooth.gatt.ScanClient r1;
        java.util.List $r2, $r3, $r4;
        boolean $z0, $z1;
        int $i0, $i1;
        java.util.Map $r5;

        r0 := @this: com.android.bluetooth.gatt.ScanManager$ScanNative;

        r1 := @parameter0: com.android.bluetooth.gatt.ScanClient;

        if r1 != null goto label1;

        return 1;

     label1:
        $r2 = r1.<com.android.bluetooth.gatt.ScanClient: java.util.List filters>;

        if $r2 == null goto label2;

        $r3 = r1.<com.android.bluetooth.gatt.ScanClient: java.util.List filters>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label3;

     label2:
        return 1;

     label3:
        $r4 = r1.<com.android.bluetooth.gatt.ScanClient: java.util.List filters>;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        $r5 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: java.util.Map mClientFilterIndexMap>;

        $i1 = interfaceinvoke $r5.<java.util.Map: int size()>();

        if $i0 >= $i1 goto label4;

        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        return $z1;
    }

    private void addFilterToController(int, com.android.bluetooth.gatt.ScanFilterQueue$Entry, int)
    {
        com.android.bluetooth.gatt.ScanManager$ScanNative r0;
        int i0, i1, i2, $i7, $i8, $i9;
        com.android.bluetooth.gatt.ScanFilterQueue$Entry r1;
        java.lang.StringBuilder $r2, $r4, $r5, $r7, $r9, $r12, $r23, $r24, $r28;
        com.android.bluetooth.gatt.ScanManager $r3, $r8, $r22;
        byte $b3, $b4, $b5, $b6, $b10, $b11, $b13;
        java.lang.String $r6, $r10, $r11, $r15, $r25, $r27, $r31;
        byte[] $r13, $r14, $r16, $r17, $r18, $r19, $r20, $r21, $r26, $r30, $r34, $r35;
        java.util.UUID $r29, $r32, $r33, $r36;
        long $l12, $l14, $l15, $l16;

        r0 := @this: com.android.bluetooth.gatt.ScanManager$ScanNative;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.bluetooth.gatt.ScanFilterQueue$Entry;

        i1 := @parameter2: int;

        $r3 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("addFilterToController: ");

        $b3 = r1.<com.android.bluetooth.gatt.ScanFilterQueue$Entry: byte type>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($b3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.bluetooth.gatt.ScanManager: void access$100(com.android.bluetooth.gatt.ScanManager,java.lang.String)>($r3, $r6);

        $b4 = r1.<com.android.bluetooth.gatt.ScanFilterQueue$Entry: byte type>;

        tableswitch($b4)
        {
            case 0: goto label1;
            case 1: goto label7;
            case 2: goto label3;
            case 3: goto label3;
            case 4: goto label4;
            case 5: goto label5;
            case 6: goto label2;
            default: goto label7;
        };

     label1:
        $r8 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("add address ");

        $r10 = r1.<com.android.bluetooth.gatt.ScanFilterQueue$Entry: java.lang.String address>;

        $r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.bluetooth.gatt.ScanManager: void access$100(com.android.bluetooth.gatt.ScanManager,java.lang.String)>($r8, $r11);

        $b5 = r1.<com.android.bluetooth.gatt.ScanFilterQueue$Entry: byte type>;

        $r15 = r1.<com.android.bluetooth.gatt.ScanFilterQueue$Entry: java.lang.String address>;

        $r13 = newarray (byte)[0];

        $r14 = newarray (byte)[0];

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void gattClientScanFilterAddNative(int,int,int,int,int,long,long,long,long,java.lang.String,java.lang.String,byte,byte[],byte[])>(i0, $b5, i1, 0, 0, 0L, 0L, 0L, 0L, "", $r15, 0, $r13, $r14);

        goto label7;

     label2:
        $b6 = r1.<com.android.bluetooth.gatt.ScanFilterQueue$Entry: byte type>;

        $r16 = r1.<com.android.bluetooth.gatt.ScanFilterQueue$Entry: byte[] data>;

        $r17 = r1.<com.android.bluetooth.gatt.ScanFilterQueue$Entry: byte[] data_mask>;

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void gattClientScanFilterAddNative(int,int,int,int,int,long,long,long,long,java.lang.String,java.lang.String,byte,byte[],byte[])>(i0, $b6, i1, 0, 0, 0L, 0L, 0L, 0L, "", "", 0, $r16, $r17);

        goto label7;

     label3:
        $b13 = r1.<com.android.bluetooth.gatt.ScanFilterQueue$Entry: byte type>;

        $r29 = r1.<com.android.bluetooth.gatt.ScanFilterQueue$Entry: java.util.UUID uuid>;

        $l12 = virtualinvoke $r29.<java.util.UUID: long getLeastSignificantBits()>();

        $r33 = r1.<com.android.bluetooth.gatt.ScanFilterQueue$Entry: java.util.UUID uuid>;

        $l15 = virtualinvoke $r33.<java.util.UUID: long getMostSignificantBits()>();

        $r32 = r1.<com.android.bluetooth.gatt.ScanFilterQueue$Entry: java.util.UUID uuid_mask>;

        $l14 = virtualinvoke $r32.<java.util.UUID: long getLeastSignificantBits()>();

        $r36 = r1.<com.android.bluetooth.gatt.ScanFilterQueue$Entry: java.util.UUID uuid_mask>;

        $l16 = virtualinvoke $r36.<java.util.UUID: long getMostSignificantBits()>();

        $r34 = newarray (byte)[0];

        $r35 = newarray (byte)[0];

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void gattClientScanFilterAddNative(int,int,int,int,int,long,long,long,long,java.lang.String,java.lang.String,byte,byte[],byte[])>(i0, $b13, i1, 0, 0, $l12, $l15, $l14, $l16, "", "", 0, $r34, $r35);

        goto label7;

     label4:
        $r22 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: com.android.bluetooth.gatt.ScanManager this$0>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("adding filters: ");

        $r27 = r1.<com.android.bluetooth.gatt.ScanFilterQueue$Entry: java.lang.String name>;

        $r28 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r25 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.android.bluetooth.gatt.ScanManager: void access$100(com.android.bluetooth.gatt.ScanManager,java.lang.String)>($r22, $r25);

        $b11 = r1.<com.android.bluetooth.gatt.ScanFilterQueue$Entry: byte type>;

        $r31 = r1.<com.android.bluetooth.gatt.ScanFilterQueue$Entry: java.lang.String name>;

        $r30 = newarray (byte)[0];

        $r26 = newarray (byte)[0];

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void gattClientScanFilterAddNative(int,int,int,int,int,long,long,long,long,java.lang.String,java.lang.String,byte,byte[],byte[])>(i0, $b11, i1, 0, 0, 0L, 0L, 0L, 0L, $r31, "", 0, $r30, $r26);

        goto label7;

     label5:
        $r18 = r1.<com.android.bluetooth.gatt.ScanFilterQueue$Entry: byte[] data>;

        i2 = lengthof $r18;

        $r19 = r1.<com.android.bluetooth.gatt.ScanFilterQueue$Entry: byte[] data_mask>;

        $i7 = lengthof $r19;

        if $i7 == i2 goto label6;

        return;

     label6:
        $b10 = r1.<com.android.bluetooth.gatt.ScanFilterQueue$Entry: byte type>;

        $i8 = r1.<com.android.bluetooth.gatt.ScanFilterQueue$Entry: int company>;

        $i9 = r1.<com.android.bluetooth.gatt.ScanFilterQueue$Entry: int company_mask>;

        $r20 = r1.<com.android.bluetooth.gatt.ScanFilterQueue$Entry: byte[] data>;

        $r21 = r1.<com.android.bluetooth.gatt.ScanFilterQueue$Entry: byte[] data_mask>;

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void gattClientScanFilterAddNative(int,int,int,int,int,long,long,long,long,java.lang.String,java.lang.String,byte,byte[],byte[])>(i0, $b10, i1, $i8, $i9, 0L, 0L, 0L, 0L, "", "", 0, $r20, $r21);

     label7:
        return;
    }

    private void initFilterIndexStack()
    {
        com.android.bluetooth.gatt.ScanManager$ScanNative r0;
        int i0, i1;
        com.android.bluetooth.btservice.AdapterService $r1;
        java.util.Deque $r2;
        java.lang.Integer $r3;

        r0 := @this: com.android.bluetooth.gatt.ScanManager$ScanNative;

        $r1 = staticinvoke <com.android.bluetooth.btservice.AdapterService: com.android.bluetooth.btservice.AdapterService getAdapterService()>();

        i0 = virtualinvoke $r1.<com.android.bluetooth.btservice.AdapterService: int getNumOfOffloadedScanFilterSupported()>();

        i1 = 3;

     label1:
        if i1 >= i0 goto label2;

        $r2 = r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: java.util.Deque mFilterIndexStack>;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        interfaceinvoke $r2.<java.util.Deque: boolean add(java.lang.Object)>($r3);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    private void configureFilterParamter(int, com.android.bluetooth.gatt.ScanClient, int, int)
    {
        com.android.bluetooth.gatt.ScanManager$ScanNative r0;
        int i0, i1, i2, i3, i5;
        com.android.bluetooth.gatt.ScanClient r1;
        byte b4;

        r0 := @this: com.android.bluetooth.gatt.ScanManager$ScanNative;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.bluetooth.gatt.ScanClient;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 = specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: int getDeliveryMode(com.android.bluetooth.gatt.ScanClient)>(r1);

        b4 = -128;

        i5 = specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: int getOnfoundLostTimeout(com.android.bluetooth.gatt.ScanClient)>(r1);

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager$ScanNative: void gattClientScanFilterParamAddNative(int,int,int,int,int,int,int,int,int,int,int)>(i0, i2, i1, 17895697, 1, b4, b4, i3, i5, i5, 2);

        return;
    }

    private int getDeliveryMode(com.android.bluetooth.gatt.ScanClient)
    {
        com.android.bluetooth.gatt.ScanManager$ScanNative r0;
        com.android.bluetooth.gatt.ScanClient r1;
        android.bluetooth.le.ScanSettings r2;
        int $i0, $i1, $i2, $i3;
        long $l4;
        byte $b5, $b6;

        r0 := @this: com.android.bluetooth.gatt.ScanManager$ScanNative;

        r1 := @parameter0: com.android.bluetooth.gatt.ScanClient;

        if r1 != null goto label1;

        return 0;

     label1:
        r2 = r1.<com.android.bluetooth.gatt.ScanClient: android.bluetooth.le.ScanSettings settings>;

        if r2 != null goto label2;

        return 0;

     label2:
        $i0 = virtualinvoke r2.<android.bluetooth.le.ScanSettings: int getCallbackType()>();

        $i1 = $i0 & 2;

        if $i1 != 0 goto label3;

        $i2 = virtualinvoke r2.<android.bluetooth.le.ScanSettings: int getCallbackType()>();

        $i3 = $i2 & 4;

        if $i3 == 0 goto label4;

     label3:
        return 1;

     label4:
        $l4 = virtualinvoke r2.<android.bluetooth.le.ScanSettings: long getReportDelayMillis()>();

        $b5 = $l4 cmp 0L;

        if $b5 != 0 goto label5;

        $b6 = 0;

        goto label6;

     label5:
        $b6 = 2;

     label6:
        return $b6;
    }

    private int getOnfoundLostTimeout(com.android.bluetooth.gatt.ScanClient)
    {
        com.android.bluetooth.gatt.ScanManager$ScanNative r0;
        com.android.bluetooth.gatt.ScanClient r1;
        android.bluetooth.le.ScanSettings r2;
        long $l0;
        int $i1;

        r0 := @this: com.android.bluetooth.gatt.ScanManager$ScanNative;

        r1 := @parameter0: com.android.bluetooth.gatt.ScanClient;

        if r1 != null goto label1;

        return 1000;

     label1:
        r2 = r1.<com.android.bluetooth.gatt.ScanClient: android.bluetooth.le.ScanSettings settings>;

        if r2 != null goto label2;

        return 1000;

     label2:
        $l0 = virtualinvoke r2.<android.bluetooth.le.ScanSettings: long getReportDelayMillis()>();

        $i1 = (int) $l0;

        return $i1;
    }

    private native void gattClientScanNative(boolean);

    private native void gattSetScanParametersNative(int, int);

    private native void gattClientScanFilterAddNative(int, int, int, int, int, long, long, long, long, java.lang.String, java.lang.String, byte, byte[], byte[]);

    private native void gattClientScanFilterDeleteNative(int, int, int, int, int, long, long, long, long, java.lang.String, java.lang.String, byte, byte[], byte[]);

    private native void gattClientScanFilterParamAddNative(int, int, int, int, int, int, int, int, int, int, int);

    private native void gattClientScanFilterParamClearAllNative(int);

    private native void gattClientScanFilterParamDeleteNative(int, int);

    private native void gattClientScanFilterClearNative(int, int);

    private native void gattClientScanFilterEnableNative(int, boolean);

    private native void gattClientConfigBatchScanStorageNative(int, int, int, int);

    private native void gattClientStartBatchScanNative(int, int, int, int, int, int);

    private native void gattClientStopBatchScanNative(int);

    private native void gattClientReadScanReportsNative(int, int);

    public static void <clinit>()
    {
        <com.android.bluetooth.gatt.ScanManager$ScanNative: int FILTER_LOGIC_TYPE> = 1;

        <com.android.bluetooth.gatt.ScanManager$ScanNative: int LIST_LOGIC_TYPE> = 17895697;

        <com.android.bluetooth.gatt.ScanManager$ScanNative: int SCAN_MODE_BATCH_LOW_LATENCY_INTERVAL_MS> = 5000;

        <com.android.bluetooth.gatt.ScanManager$ScanNative: int SCAN_MODE_BATCH_LOW_LATENCY_WINDOW_MS> = 1500;

        <com.android.bluetooth.gatt.ScanManager$ScanNative: int SCAN_MODE_BATCH_BALANCED_INTERVAL_MS> = 15000;

        <com.android.bluetooth.gatt.ScanManager$ScanNative: int SCAN_MODE_BATCH_BALANCED_WINDOW_MS> = 1500;

        <com.android.bluetooth.gatt.ScanManager$ScanNative: int SCAN_MODE_BATCH_LOW_POWER_INTERVAL_MS> = 150000;

        <com.android.bluetooth.gatt.ScanManager$ScanNative: int SCAN_MODE_BATCH_LOW_POWER_WINDOW_MS> = 1500;

        <com.android.bluetooth.gatt.ScanManager$ScanNative: int SCAN_MODE_LOW_LATENCY_INTERVAL_MS> = 5000;

        <com.android.bluetooth.gatt.ScanManager$ScanNative: int SCAN_MODE_LOW_LATENCY_WINDOW_MS> = 5000;

        <com.android.bluetooth.gatt.ScanManager$ScanNative: int SCAN_MODE_BALANCED_INTERVAL_MS> = 5000;

        <com.android.bluetooth.gatt.ScanManager$ScanNative: int SCAN_MODE_BALANCED_WINDOW_MS> = 2000;

        <com.android.bluetooth.gatt.ScanManager$ScanNative: int SCAN_MODE_LOW_POWER_INTERVAL_MS> = 5000;

        <com.android.bluetooth.gatt.ScanManager$ScanNative: int SCAN_MODE_LOW_POWER_WINDOW_MS> = 500;

        <com.android.bluetooth.gatt.ScanManager$ScanNative: int DISCARD_OLDEST_WHEN_BUFFER_FULL> = 0;

        <com.android.bluetooth.gatt.ScanManager$ScanNative: int ALL_PASS_FILTER_SELECTION> = 0;

        <com.android.bluetooth.gatt.ScanManager$ScanNative: int ALL_PASS_FILTER_INDEX_BATCH_SCAN> = 2;

        <com.android.bluetooth.gatt.ScanManager$ScanNative: int ALL_PASS_FILTER_INDEX_REGULAR_SCAN> = 1;

        <com.android.bluetooth.gatt.ScanManager$ScanNative: int ONFOUND_SIGHTINGS> = 2;

        <com.android.bluetooth.gatt.ScanManager$ScanNative: int DEFAULT_ONLOST_ONFOUND_TIMEOUT_MILLIS> = 1000;

        <com.android.bluetooth.gatt.ScanManager$ScanNative: int DELIVERY_MODE_BATCH> = 2;

        <com.android.bluetooth.gatt.ScanManager$ScanNative: int DELIVERY_MODE_ON_FOUND_LOST> = 1;

        <com.android.bluetooth.gatt.ScanManager$ScanNative: int DELIVERY_MODE_IMMEDIATE> = 0;

        return;
    }
}
