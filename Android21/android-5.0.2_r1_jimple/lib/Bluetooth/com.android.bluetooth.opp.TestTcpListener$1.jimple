class com.android.bluetooth.opp.TestTcpListener$1 extends java.lang.Thread
{
    java.net.ServerSocket mServerSocket;
    final com.android.bluetooth.opp.TestTcpListener this$0;

    void <init>(com.android.bluetooth.opp.TestTcpListener, java.lang.String)
    {
        com.android.bluetooth.opp.TestTcpListener$1 r0;
        com.android.bluetooth.opp.TestTcpListener r1;
        java.lang.String r2;

        r0 := @this: com.android.bluetooth.opp.TestTcpListener$1;

        r1 := @parameter0: com.android.bluetooth.opp.TestTcpListener;

        r2 := @parameter1: java.lang.String;

        r0.<com.android.bluetooth.opp.TestTcpListener$1: com.android.bluetooth.opp.TestTcpListener this$0> = r1;

        specialinvoke r0.<java.lang.Thread: void <init>(java.lang.String)>(r2);

        return;
    }

    public void run()
    {
        com.android.bluetooth.opp.TestTcpListener$1 r0;
        com.android.bluetooth.opp.TestTcpTransport r2, $r13;
        android.os.Message r3;
        java.net.ServerSocket $r4, $r6, $r7;
        com.android.bluetooth.opp.TestTcpListener $r5, $r15, $r16, $r19, $r25;
        boolean $z0, $z1;
        java.lang.StringBuilder $r8, $r9, $r10, $r18, $r20, $r22, $r24, $r26, $r28, $r29, $r32, $r33;
        java.net.SocketAddress $r11;
        java.lang.String $r12, $r21, $r27, $r31;
        android.os.Handler $r14;
        java.io.IOException $r17, $r30, r36;
        int $i6;
        java.net.SocketException $r23, r35;
        java.net.Socket r34;

        r0 := @this: com.android.bluetooth.opp.TestTcpListener$1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BtOppRfcommListener", "RfcommSocket listen thread starting");

     label01:
        $r4 = new java.net.ServerSocket;

        specialinvoke $r4.<java.net.ServerSocket: void <init>(int,int)>(6500, 1);

        r0.<com.android.bluetooth.opp.TestTcpListener$1: java.net.ServerSocket mServerSocket> = $r4;

     label02:
        goto label04;

     label03:
        $r17 := @caughtexception;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error listing on channel");

        $r19 = r0.<com.android.bluetooth.opp.TestTcpListener$1: com.android.bluetooth.opp.TestTcpListener this$0>;

        $i6 = staticinvoke <com.android.bluetooth.opp.TestTcpListener: int access$000(com.android.bluetooth.opp.TestTcpListener)>($r19);

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r21 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BtOppRfcommListener", $r21);

        $r25 = r0.<com.android.bluetooth.opp.TestTcpListener$1: com.android.bluetooth.opp.TestTcpListener this$0>;

        staticinvoke <com.android.bluetooth.opp.TestTcpListener: boolean access$102(com.android.bluetooth.opp.TestTcpListener,boolean)>($r25, 1);

     label04:
        $r5 = r0.<com.android.bluetooth.opp.TestTcpListener$1: com.android.bluetooth.opp.TestTcpListener this$0>;

        $z0 = staticinvoke <com.android.bluetooth.opp.TestTcpListener: boolean access$100(com.android.bluetooth.opp.TestTcpListener)>($r5);

        if $z0 != 0 goto label11;

     label05:
        $r6 = r0.<com.android.bluetooth.opp.TestTcpListener$1: java.net.ServerSocket mServerSocket>;

        virtualinvoke $r6.<java.net.ServerSocket: void setSoTimeout(int)>(5000);

        $r7 = r0.<com.android.bluetooth.opp.TestTcpListener$1: java.net.ServerSocket mServerSocket>;

        r34 = virtualinvoke $r7.<java.net.ServerSocket: java.net.Socket accept()>();

        if r34 != null goto label06;

        goto label07;

     label06:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BtOppRfcommListener", "RfcommSocket connected!");

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("remote addr is ");

        $r11 = virtualinvoke r34.<java.net.Socket: java.net.SocketAddress getRemoteSocketAddress()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11);

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BtOppRfcommListener", $r12);

        $r13 = new com.android.bluetooth.opp.TestTcpTransport;

        specialinvoke $r13.<com.android.bluetooth.opp.TestTcpTransport: void <init>(java.net.Socket)>(r34);

        r2 = $r13;

        r3 = staticinvoke <android.os.Message: android.os.Message obtain()>();

        $r15 = r0.<com.android.bluetooth.opp.TestTcpListener$1: com.android.bluetooth.opp.TestTcpListener this$0>;

        $r14 = staticinvoke <com.android.bluetooth.opp.TestTcpListener: android.os.Handler access$200(com.android.bluetooth.opp.TestTcpListener)>($r15);

        virtualinvoke r3.<android.os.Message: void setTarget(android.os.Handler)>($r14);

        r3.<android.os.Message: int what> = 100;

        r3.<android.os.Message: java.lang.Object obj> = r2;

        virtualinvoke r3.<android.os.Message: void sendToTarget()>();

     label07:
        goto label10;

     label08:
        $r23 := @caughtexception;

        r35 = $r23;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error accept connection ");

        $r26 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r35);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BtOppRfcommListener", $r27);

        goto label10;

     label09:
        $r30 := @caughtexception;

        r36 = $r30;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error accept connection ");

        $r32 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r36);

        $r31 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BtOppRfcommListener", $r31);

     label10:
        $r16 = r0.<com.android.bluetooth.opp.TestTcpListener$1: com.android.bluetooth.opp.TestTcpListener this$0>;

        $z1 = staticinvoke <com.android.bluetooth.opp.TestTcpListener: boolean access$100(com.android.bluetooth.opp.TestTcpListener)>($r16);

        if $z1 == 0 goto label04;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BtOppRfcommListener", "socketAcceptThread thread was interrupted (2), exiting");

        goto label04;

     label11:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BtOppRfcommListener", "RfcommSocket listen thread finished");

        return;

        catch java.io.IOException from label01 to label02 with label03;
        catch java.net.SocketException from label05 to label07 with label08;
        catch java.io.IOException from label05 to label07 with label09;
    }
}
