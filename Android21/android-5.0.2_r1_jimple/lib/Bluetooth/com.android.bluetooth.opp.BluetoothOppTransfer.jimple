public class com.android.bluetooth.opp.BluetoothOppTransfer extends java.lang.Object implements com.android.bluetooth.opp.BluetoothOppBatch$BluetoothOppBatchListener
{
    private static final java.lang.String TAG;
    private static final boolean D;
    private static final boolean V;
    private static final int RFCOMM_ERROR;
    private static final int RFCOMM_CONNECTED;
    private static final int SOCKET_ERROR_RETRY;
    private static final int CONNECT_WAIT_TIMEOUT;
    private static final int CONNECT_RETRY_TIME;
    private static final short OPUSH_UUID16;
    private static final java.lang.String SOCKET_LINK_KEY_ERROR;
    private android.content.Context mContext;
    private android.bluetooth.BluetoothAdapter mAdapter;
    private com.android.bluetooth.opp.BluetoothOppBatch mBatch;
    private com.android.bluetooth.opp.BluetoothOppObexSession mSession;
    private com.android.bluetooth.opp.BluetoothOppShareInfo mCurrentShare;
    private javax.obex.ObexTransport mTransport;
    private android.os.HandlerThread mHandlerThread;
    private com.android.bluetooth.opp.BluetoothOppTransfer$EventHandler mSessionHandler;
    private long mTimestamp;
    private com.android.bluetooth.opp.BluetoothOppTransfer$SocketConnectThread mConnectThread;

    public void <init>(android.content.Context, android.os.PowerManager, com.android.bluetooth.opp.BluetoothOppBatch, com.android.bluetooth.opp.BluetoothOppObexSession)
    {
        com.android.bluetooth.opp.BluetoothOppTransfer r0;
        android.content.Context r1;
        android.os.PowerManager r2;
        com.android.bluetooth.opp.BluetoothOppBatch r3, $r5;
        com.android.bluetooth.opp.BluetoothOppObexSession r4;
        android.bluetooth.BluetoothAdapter $r6;

        r0 := @this: com.android.bluetooth.opp.BluetoothOppTransfer;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.PowerManager;

        r3 := @parameter2: com.android.bluetooth.opp.BluetoothOppBatch;

        r4 := @parameter3: com.android.bluetooth.opp.BluetoothOppObexSession;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.bluetooth.opp.BluetoothOppTransfer: android.content.Context mContext> = r1;

        r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppBatch mBatch> = r3;

        r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppObexSession mSession> = r4;

        $r5 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppBatch mBatch>;

        virtualinvoke $r5.<com.android.bluetooth.opp.BluetoothOppBatch: void registerListern(com.android.bluetooth.opp.BluetoothOppBatch$BluetoothOppBatchListener)>(r0);

        $r6 = staticinvoke <android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()>();

        r0.<com.android.bluetooth.opp.BluetoothOppTransfer: android.bluetooth.BluetoothAdapter mAdapter> = $r6;

        return;
    }

    public void <init>(android.content.Context, android.os.PowerManager, com.android.bluetooth.opp.BluetoothOppBatch)
    {
        com.android.bluetooth.opp.BluetoothOppTransfer r0;
        android.content.Context r1;
        android.os.PowerManager r2;
        com.android.bluetooth.opp.BluetoothOppBatch r3;

        r0 := @this: com.android.bluetooth.opp.BluetoothOppTransfer;

        r1 := @parameter0: android.content.Context;

        r2 := @parameter1: android.os.PowerManager;

        r3 := @parameter2: com.android.bluetooth.opp.BluetoothOppBatch;

        specialinvoke r0.<com.android.bluetooth.opp.BluetoothOppTransfer: void <init>(android.content.Context,android.os.PowerManager,com.android.bluetooth.opp.BluetoothOppBatch,com.android.bluetooth.opp.BluetoothOppObexSession)>(r1, r2, r3, null);

        return;
    }

    public int getBatchId()
    {
        com.android.bluetooth.opp.BluetoothOppTransfer r0;
        com.android.bluetooth.opp.BluetoothOppBatch $r1;
        int $i0;

        r0 := @this: com.android.bluetooth.opp.BluetoothOppTransfer;

        $r1 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppBatch mBatch>;

        $i0 = $r1.<com.android.bluetooth.opp.BluetoothOppBatch: int mId>;

        return $i0;
    }

    private void markShareTimeout(com.android.bluetooth.opp.BluetoothOppShareInfo)
    {
        com.android.bluetooth.opp.BluetoothOppTransfer r0;
        com.android.bluetooth.opp.BluetoothOppShareInfo r1;
        android.net.Uri r2, $r5;
        android.content.ContentValues r3, $r10;
        java.lang.StringBuilder $r4, $r6, $r7, $r8;
        int $i0;
        java.lang.String $r9;
        java.lang.Integer $r11;
        android.content.Context $r12;
        android.content.ContentResolver $r13;

        r0 := @this: com.android.bluetooth.opp.BluetoothOppTransfer;

        r1 := @parameter0: com.android.bluetooth.opp.BluetoothOppShareInfo;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = <com.android.bluetooth.opp.BluetoothShare: android.net.Uri CONTENT_URI>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i0 = r1.<com.android.bluetooth.opp.BluetoothOppShareInfo: int mId>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        r2 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r9);

        $r10 = new android.content.ContentValues;

        specialinvoke $r10.<android.content.ContentValues: void <init>()>();

        r3 = $r10;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(4);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("confirm", $r11);

        $r12 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: android.content.Context mContext>;

        $r13 = virtualinvoke $r12.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r13.<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>(r2, r3, null, null);

        return;
    }

    private void markBatchFailed(int)
    {
        com.android.bluetooth.opp.BluetoothOppTransfer r0, r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i8, $i9;
        java.lang.Throwable r2, $r38;
        com.android.bluetooth.opp.BluetoothOppSendFileInfo r3;
        com.android.bluetooth.opp.BluetoothOppShareInfo $r5, $r29, $r30, $r33, $r34, $r36, r39;
        com.android.bluetooth.opp.BluetoothOppBatch $r6, $r7, $r8;
        android.net.Uri $r9, $r21, $r26, r40;
        java.lang.StringBuilder $r10, $r11, $r12, $r13;
        java.lang.String $r14, $r20, $r23, $r24, $r25, $r28, $r32, $r35;
        android.content.ContentValues $r15, r41;
        java.lang.Integer $r16;
        android.content.ContentResolver $r17;
        android.content.Context $r18, $r19;
        java.io.File $r22, $r31;
        java.lang.Long $r27;
        long $l7;
        boolean $z0;
        java.lang.InterruptedException $r37;

        r0 := @this: com.android.bluetooth.opp.BluetoothOppTransfer;

        i0 := @parameter0: int;

        r1 = r0;

        entermonitor r0;

     label01:
        virtualinvoke r0.<java.lang.Object: void wait(long)>(1000L);

     label02:
        goto label04;

     label03:
        $r37 := @caughtexception;

     label04:
        exitmonitor r1;

     label05:
        goto label08;

     label06:
        $r38 := @caughtexception;

        r2 = $r38;

        exitmonitor r1;

     label07:
        throw r2;

     label08:
        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BtOppTransfer", "Mark all ShareInfo in the batch as failed");

        $r5 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppShareInfo mCurrentShare>;

        if $r5 == null goto label10;

        $r30 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppShareInfo mCurrentShare>;

        $i8 = $r30.<com.android.bluetooth.opp.BluetoothOppShareInfo: int mStatus>;

        $z0 = staticinvoke <com.android.bluetooth.opp.BluetoothShare: boolean isStatusError(int)>($i8);

        if $z0 == 0 goto label09;

        $r34 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppShareInfo mCurrentShare>;

        i0 = $r34.<com.android.bluetooth.opp.BluetoothOppShareInfo: int mStatus>;

     label09:
        $r29 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppShareInfo mCurrentShare>;

        $i9 = $r29.<com.android.bluetooth.opp.BluetoothOppShareInfo: int mDirection>;

        if $i9 != 1 goto label10;

        $r33 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppShareInfo mCurrentShare>;

        $r32 = $r33.<com.android.bluetooth.opp.BluetoothOppShareInfo: java.lang.String mFilename>;

        if $r32 == null goto label10;

        $r31 = new java.io.File;

        $r36 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppShareInfo mCurrentShare>;

        $r35 = $r36.<com.android.bluetooth.opp.BluetoothOppShareInfo: java.lang.String mFilename>;

        specialinvoke $r31.<java.io.File: void <init>(java.lang.String)>($r35);

        virtualinvoke $r31.<java.io.File: boolean delete()>();

     label10:
        $r6 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppBatch mBatch>;

        if $r6 != null goto label11;

        return;

     label11:
        $r7 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppBatch mBatch>;

        r39 = virtualinvoke $r7.<com.android.bluetooth.opp.BluetoothOppBatch: com.android.bluetooth.opp.BluetoothOppShareInfo getPendingShare()>();

     label12:
        if r39 == null goto label17;

        $i1 = r39.<com.android.bluetooth.opp.BluetoothOppShareInfo: int mStatus>;

        if $i1 >= 200 goto label16;

        r39.<com.android.bluetooth.opp.BluetoothOppShareInfo: int mStatus> = i0;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r9 = <com.android.bluetooth.opp.BluetoothShare: android.net.Uri CONTENT_URI>;

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i2 = r39.<com.android.bluetooth.opp.BluetoothOppShareInfo: int mId>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        r40 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r14);

        $r15 = new android.content.ContentValues;

        specialinvoke $r15.<android.content.ContentValues: void <init>()>();

        r41 = $r15;

        $i3 = r39.<com.android.bluetooth.opp.BluetoothOppShareInfo: int mStatus>;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        virtualinvoke r41.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("status", $r16);

        $i5 = r39.<com.android.bluetooth.opp.BluetoothOppShareInfo: int mDirection>;

        if $i5 != 0 goto label14;

        $r21 = r39.<com.android.bluetooth.opp.BluetoothOppShareInfo: android.net.Uri mUri>;

        r3 = staticinvoke <com.android.bluetooth.opp.BluetoothOppUtility: com.android.bluetooth.opp.BluetoothOppSendFileInfo getSendFileInfo(android.net.Uri)>($r21);

        $r26 = r39.<com.android.bluetooth.opp.BluetoothOppShareInfo: android.net.Uri mUri>;

        staticinvoke <com.android.bluetooth.opp.BluetoothOppUtility: void closeSendFileInfo(android.net.Uri)>($r26);

        $r24 = r3.<com.android.bluetooth.opp.BluetoothOppSendFileInfo: java.lang.String mFileName>;

        if $r24 == null goto label13;

        $r25 = r3.<com.android.bluetooth.opp.BluetoothOppSendFileInfo: java.lang.String mFileName>;

        virtualinvoke r41.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("hint", $r25);

        $l7 = r3.<com.android.bluetooth.opp.BluetoothOppSendFileInfo: long mLength>;

        $r27 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l7);

        virtualinvoke r41.<android.content.ContentValues: void put(java.lang.String,java.lang.Long)>("total_bytes", $r27);

        $r28 = r3.<com.android.bluetooth.opp.BluetoothOppSendFileInfo: java.lang.String mMimetype>;

        virtualinvoke r41.<android.content.ContentValues: void put(java.lang.String,java.lang.String)>("mimetype", $r28);

     label13:
        goto label15;

     label14:
        $i4 = r39.<com.android.bluetooth.opp.BluetoothOppShareInfo: int mStatus>;

        if $i4 >= 200 goto label15;

        $r20 = r39.<com.android.bluetooth.opp.BluetoothOppShareInfo: java.lang.String mFilename>;

        if $r20 == null goto label15;

        $r22 = new java.io.File;

        $r23 = r39.<com.android.bluetooth.opp.BluetoothOppShareInfo: java.lang.String mFilename>;

        specialinvoke $r22.<java.io.File: void <init>(java.lang.String)>($r23);

        virtualinvoke $r22.<java.io.File: boolean delete()>();

     label15:
        $r18 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: android.content.Context mContext>;

        $r17 = virtualinvoke $r18.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r17.<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>(r40, r41, null, null);

        $r19 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: android.content.Context mContext>;

        $i6 = r39.<com.android.bluetooth.opp.BluetoothOppShareInfo: int mStatus>;

        staticinvoke <com.android.bluetooth.opp.Constants: void sendIntentIfCompleted(android.content.Context,android.net.Uri,int)>($r19, r40, $i6);

     label16:
        $r8 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppBatch mBatch>;

        r39 = virtualinvoke $r8.<com.android.bluetooth.opp.BluetoothOppBatch: com.android.bluetooth.opp.BluetoothOppShareInfo getPendingShare()>();

        goto label12;

     label17:
        return;

        catch java.lang.InterruptedException from label01 to label02 with label03;
        catch java.lang.Throwable from label01 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
    }

    private void markBatchFailed()
    {
        com.android.bluetooth.opp.BluetoothOppTransfer r0;

        r0 := @this: com.android.bluetooth.opp.BluetoothOppTransfer;

        specialinvoke r0.<com.android.bluetooth.opp.BluetoothOppTransfer: void markBatchFailed(int)>(491);

        return;
    }

    public void start()
    {
        com.android.bluetooth.opp.BluetoothOppTransfer r0;
        android.bluetooth.BluetoothAdapter $r1;
        boolean $z0;
        android.os.HandlerThread $r2, $r3, $r4, $r6;
        com.android.bluetooth.opp.BluetoothOppTransfer$EventHandler $r5;
        android.os.Looper $r7;
        com.android.bluetooth.opp.BluetoothOppBatch $r8, $r9, $r12, $r15;
        int $i0, $i1, $i2;
        java.lang.StringBuilder $r10, $r11, $r14;
        java.lang.String $r13;

        r0 := @this: com.android.bluetooth.opp.BluetoothOppTransfer;

        $r1 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: android.bluetooth.BluetoothAdapter mAdapter>;

        $z0 = virtualinvoke $r1.<android.bluetooth.BluetoothAdapter: boolean isEnabled()>();

        if $z0 != 0 goto label1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t start transfer when Bluetooth is disabled for ");

        $r12 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppBatch mBatch>;

        $i2 = $r12.<com.android.bluetooth.opp.BluetoothOppBatch: int mId>;

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BtOppTransfer", $r13);

        specialinvoke r0.<com.android.bluetooth.opp.BluetoothOppTransfer: void markBatchFailed()>();

        $r15 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppBatch mBatch>;

        $r15.<com.android.bluetooth.opp.BluetoothOppBatch: int mStatus> = 3;

        return;

     label1:
        $r2 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: android.os.HandlerThread mHandlerThread>;

        if $r2 != null goto label3;

        $r3 = new android.os.HandlerThread;

        specialinvoke $r3.<android.os.HandlerThread: void <init>(java.lang.String,int)>("BtOpp Transfer Handler", 10);

        r0.<com.android.bluetooth.opp.BluetoothOppTransfer: android.os.HandlerThread mHandlerThread> = $r3;

        $r4 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: android.os.HandlerThread mHandlerThread>;

        virtualinvoke $r4.<android.os.HandlerThread: void start()>();

        $r5 = new com.android.bluetooth.opp.BluetoothOppTransfer$EventHandler;

        $r6 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: android.os.HandlerThread mHandlerThread>;

        $r7 = virtualinvoke $r6.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r5.<com.android.bluetooth.opp.BluetoothOppTransfer$EventHandler: void <init>(com.android.bluetooth.opp.BluetoothOppTransfer,android.os.Looper)>(r0, $r7);

        r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppTransfer$EventHandler mSessionHandler> = $r5;

        $r8 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppBatch mBatch>;

        $i0 = $r8.<com.android.bluetooth.opp.BluetoothOppBatch: int mDirection>;

        if $i0 != 0 goto label2;

        specialinvoke r0.<com.android.bluetooth.opp.BluetoothOppTransfer: void startConnectSession()>();

        goto label3;

     label2:
        $r9 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppBatch mBatch>;

        $i1 = $r9.<com.android.bluetooth.opp.BluetoothOppBatch: int mDirection>;

        if $i1 != 1 goto label3;

        specialinvoke r0.<com.android.bluetooth.opp.BluetoothOppTransfer: void startObexSession()>();

     label3:
        return;
    }

    public void stop()
    {
        com.android.bluetooth.opp.BluetoothOppTransfer r0;
        com.android.bluetooth.opp.BluetoothOppTransfer$SocketConnectThread $r2, $r9, $r10;
        com.android.bluetooth.opp.BluetoothOppObexSession $r3, $r8;
        android.os.HandlerThread $r4, $r5, $r7;
        android.os.Looper $r6;
        java.lang.InterruptedException $r11;

        r0 := @this: com.android.bluetooth.opp.BluetoothOppTransfer;

        $r2 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppTransfer$SocketConnectThread mConnectThread>;

        if $r2 == null goto label5;

     label1:
        $r9 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppTransfer$SocketConnectThread mConnectThread>;

        virtualinvoke $r9.<com.android.bluetooth.opp.BluetoothOppTransfer$SocketConnectThread: void interrupt()>();

        $r10 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppTransfer$SocketConnectThread mConnectThread>;

        virtualinvoke $r10.<com.android.bluetooth.opp.BluetoothOppTransfer$SocketConnectThread: void join()>();

     label2:
        goto label4;

     label3:
        $r11 := @caughtexception;

     label4:
        r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppTransfer$SocketConnectThread mConnectThread> = null;

     label5:
        $r3 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppObexSession mSession>;

        if $r3 == null goto label6;

        $r8 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppObexSession mSession>;

        interfaceinvoke $r8.<com.android.bluetooth.opp.BluetoothOppObexSession: void stop()>();

     label6:
        $r4 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: android.os.HandlerThread mHandlerThread>;

        if $r4 == null goto label7;

        $r5 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: android.os.HandlerThread mHandlerThread>;

        $r6 = virtualinvoke $r5.<android.os.HandlerThread: android.os.Looper getLooper()>();

        virtualinvoke $r6.<android.os.Looper: void quit()>();

        $r7 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: android.os.HandlerThread mHandlerThread>;

        virtualinvoke $r7.<android.os.HandlerThread: void interrupt()>();

        r0.<com.android.bluetooth.opp.BluetoothOppTransfer: android.os.HandlerThread mHandlerThread> = null;

     label7:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }

    private void startObexSession()
    {
        com.android.bluetooth.opp.BluetoothOppTransfer r0;
        com.android.bluetooth.opp.BluetoothOppBatch $r1, $r2, $r5, $r6, $r7, $r11;
        com.android.bluetooth.opp.BluetoothOppShareInfo $r3, $r4;
        int $i0, $i1, $i2;
        com.android.bluetooth.opp.BluetoothOppObexSession $r8, $r10;
        com.android.bluetooth.opp.BluetoothOppTransfer$EventHandler $r9;
        javax.obex.ObexTransport $r12;
        com.android.bluetooth.opp.BluetoothOppObexClientSession $r13;
        android.content.Context $r14;

        r0 := @this: com.android.bluetooth.opp.BluetoothOppTransfer;

        $r1 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppBatch mBatch>;

        $r1.<com.android.bluetooth.opp.BluetoothOppBatch: int mStatus> = 1;

        $r2 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppBatch mBatch>;

        $r3 = virtualinvoke $r2.<com.android.bluetooth.opp.BluetoothOppBatch: com.android.bluetooth.opp.BluetoothOppShareInfo getPendingShare()>();

        r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppShareInfo mCurrentShare> = $r3;

        $r4 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppShareInfo mCurrentShare>;

        if $r4 != null goto label1;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BtOppTransfer", "Unexpected error happened !");

        return;

     label1:
        $r5 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppBatch mBatch>;

        $i0 = $r5.<com.android.bluetooth.opp.BluetoothOppBatch: int mDirection>;

        if $i0 != 0 goto label2;

        $r13 = new com.android.bluetooth.opp.BluetoothOppObexClientSession;

        $r14 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: android.content.Context mContext>;

        $r12 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: javax.obex.ObexTransport mTransport>;

        specialinvoke $r13.<com.android.bluetooth.opp.BluetoothOppObexClientSession: void <init>(android.content.Context,javax.obex.ObexTransport)>($r14, $r12);

        r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppObexSession mSession> = $r13;

        goto label3;

     label2:
        $r6 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppBatch mBatch>;

        $i1 = $r6.<com.android.bluetooth.opp.BluetoothOppBatch: int mDirection>;

        if $i1 != 1 goto label3;

        $r10 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppObexSession mSession>;

        if $r10 != null goto label3;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BtOppTransfer", "Unexpected error happened !");

        specialinvoke r0.<com.android.bluetooth.opp.BluetoothOppTransfer: void markBatchFailed()>();

        $r11 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppBatch mBatch>;

        $r11.<com.android.bluetooth.opp.BluetoothOppBatch: int mStatus> = 3;

        return;

     label3:
        $r8 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppObexSession mSession>;

        $r9 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppTransfer$EventHandler mSessionHandler>;

        $r7 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppBatch mBatch>;

        $i2 = virtualinvoke $r7.<com.android.bluetooth.opp.BluetoothOppBatch: int getNumShares()>();

        interfaceinvoke $r8.<com.android.bluetooth.opp.BluetoothOppObexSession: void start(android.os.Handler,int)>($r9, $i2);

        specialinvoke r0.<com.android.bluetooth.opp.BluetoothOppTransfer: void processCurrentShare()>();

        return;
    }

    private void processCurrentShare()
    {
        com.android.bluetooth.opp.BluetoothOppTransfer r0;
        com.android.bluetooth.opp.BluetoothOppShareInfo $r1, $r3;
        com.android.bluetooth.opp.BluetoothOppObexSession $r2;
        int $i0;

        r0 := @this: com.android.bluetooth.opp.BluetoothOppTransfer;

        $r2 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppObexSession mSession>;

        $r1 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppShareInfo mCurrentShare>;

        interfaceinvoke $r2.<com.android.bluetooth.opp.BluetoothOppObexSession: void addShare(com.android.bluetooth.opp.BluetoothOppShareInfo)>($r1);

        $r3 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppShareInfo mCurrentShare>;

        $i0 = $r3.<com.android.bluetooth.opp.BluetoothOppShareInfo: int mConfirm>;

        if $i0 != 5 goto label1;

        virtualinvoke r0.<com.android.bluetooth.opp.BluetoothOppTransfer: void setConfirmed()>();

     label1:
        return;
    }

    public void setConfirmed()
    {
        com.android.bluetooth.opp.BluetoothOppTransfer r0;
        com.android.bluetooth.opp.BluetoothOppTransfer$1 r1, $r2;

        r0 := @this: com.android.bluetooth.opp.BluetoothOppTransfer;

        $r2 = new com.android.bluetooth.opp.BluetoothOppTransfer$1;

        specialinvoke $r2.<com.android.bluetooth.opp.BluetoothOppTransfer$1: void <init>(com.android.bluetooth.opp.BluetoothOppTransfer,java.lang.String)>(r0, "Server Unblock thread");

        r1 = $r2;

        virtualinvoke r1.<java.lang.Thread: void start()>();

        return;
    }

    private void startConnectSession()
    {
        com.android.bluetooth.opp.BluetoothOppTransfer r0;
        com.android.bluetooth.opp.BluetoothOppTransfer$SocketConnectThread $r1, $r4;
        com.android.bluetooth.opp.BluetoothOppBatch $r2;
        android.bluetooth.BluetoothDevice $r3;

        r0 := @this: com.android.bluetooth.opp.BluetoothOppTransfer;

        $r1 = new com.android.bluetooth.opp.BluetoothOppTransfer$SocketConnectThread;

        $r2 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppBatch mBatch>;

        $r3 = $r2.<com.android.bluetooth.opp.BluetoothOppBatch: android.bluetooth.BluetoothDevice mDestination>;

        specialinvoke $r1.<com.android.bluetooth.opp.BluetoothOppTransfer$SocketConnectThread: void <init>(com.android.bluetooth.opp.BluetoothOppTransfer,android.bluetooth.BluetoothDevice,boolean)>(r0, $r3, 0);

        r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppTransfer$SocketConnectThread mConnectThread> = $r1;

        $r4 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppTransfer$SocketConnectThread mConnectThread>;

        virtualinvoke $r4.<com.android.bluetooth.opp.BluetoothOppTransfer$SocketConnectThread: void start()>();

        return;
    }

    private void tickShareStatus(com.android.bluetooth.opp.BluetoothOppShareInfo)
    {
        com.android.bluetooth.opp.BluetoothOppTransfer r0;
        com.android.bluetooth.opp.BluetoothOppShareInfo r1;
        android.net.Uri r2, $r5;
        android.content.ContentValues r3, $r10;
        java.lang.StringBuilder $r4, $r6, $r7, $r8;
        int $i0, $i1;
        java.lang.String $r9;
        java.lang.Integer $r11;
        android.content.ContentResolver $r12;
        android.content.Context $r13;

        r0 := @this: com.android.bluetooth.opp.BluetoothOppTransfer;

        r1 := @parameter0: com.android.bluetooth.opp.BluetoothOppShareInfo;

        if r1 != null goto label1;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BtOppTransfer", "Share is null");

        return;

     label1:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = <com.android.bluetooth.opp.BluetoothShare: android.net.Uri CONTENT_URI>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i0 = r1.<com.android.bluetooth.opp.BluetoothOppShareInfo: int mId>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        r2 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r9);

        $r10 = new android.content.ContentValues;

        specialinvoke $r10.<android.content.ContentValues: void <init>()>();

        r3 = $r10;

        $i1 = r1.<com.android.bluetooth.opp.BluetoothOppShareInfo: int mDirection>;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke r3.<android.content.ContentValues: void put(java.lang.String,java.lang.Integer)>("direction", $r11);

        $r13 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: android.content.Context mContext>;

        $r12 = virtualinvoke $r13.<android.content.Context: android.content.ContentResolver getContentResolver()>();

        virtualinvoke $r12.<android.content.ContentResolver: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])>(r2, r3, null, null);

        return;
    }

    public void onShareAdded(int)
    {
        com.android.bluetooth.opp.BluetoothOppTransfer r0;
        int i0, $i1, $i2, $i3;
        com.android.bluetooth.opp.BluetoothOppShareInfo r1, $r4, $r5, $r6, $r7;
        com.android.bluetooth.opp.BluetoothOppBatch $r2, $r3;

        r0 := @this: com.android.bluetooth.opp.BluetoothOppTransfer;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppBatch mBatch>;

        r1 = virtualinvoke $r2.<com.android.bluetooth.opp.BluetoothOppBatch: com.android.bluetooth.opp.BluetoothOppShareInfo getPendingShare()>();

        $i1 = r1.<com.android.bluetooth.opp.BluetoothOppShareInfo: int mDirection>;

        if $i1 != 1 goto label2;

        $r3 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppBatch mBatch>;

        $r4 = virtualinvoke $r3.<com.android.bluetooth.opp.BluetoothOppBatch: com.android.bluetooth.opp.BluetoothOppShareInfo getPendingShare()>();

        r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppShareInfo mCurrentShare> = $r4;

        $r5 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppShareInfo mCurrentShare>;

        if $r5 == null goto label2;

        $r6 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppShareInfo mCurrentShare>;

        $i2 = $r6.<com.android.bluetooth.opp.BluetoothOppShareInfo: int mConfirm>;

        if $i2 == 2 goto label1;

        $r7 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppShareInfo mCurrentShare>;

        $i3 = $r7.<com.android.bluetooth.opp.BluetoothOppShareInfo: int mConfirm>;

        if $i3 != 5 goto label2;

     label1:
        specialinvoke r0.<com.android.bluetooth.opp.BluetoothOppTransfer: void processCurrentShare()>();

        virtualinvoke r0.<com.android.bluetooth.opp.BluetoothOppTransfer: void setConfirmed()>();

     label2:
        return;
    }

    public void onShareDeleted(int)
    {
        com.android.bluetooth.opp.BluetoothOppTransfer r0;
        int i0;

        r0 := @this: com.android.bluetooth.opp.BluetoothOppTransfer;

        i0 := @parameter0: int;

        return;
    }

    public void onBatchCanceled()
    {
        com.android.bluetooth.opp.BluetoothOppTransfer r0;
        com.android.bluetooth.opp.BluetoothOppBatch $r1;

        r0 := @this: com.android.bluetooth.opp.BluetoothOppTransfer;

        virtualinvoke r0.<com.android.bluetooth.opp.BluetoothOppTransfer: void stop()>();

        $r1 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppBatch mBatch>;

        $r1.<com.android.bluetooth.opp.BluetoothOppBatch: int mStatus> = 2;

        return;
    }

    static com.android.bluetooth.opp.BluetoothOppTransfer$SocketConnectThread access$002(com.android.bluetooth.opp.BluetoothOppTransfer, com.android.bluetooth.opp.BluetoothOppTransfer$SocketConnectThread)
    {
        com.android.bluetooth.opp.BluetoothOppTransfer r0;
        com.android.bluetooth.opp.BluetoothOppTransfer$SocketConnectThread r1;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppTransfer;

        r1 := @parameter1: com.android.bluetooth.opp.BluetoothOppTransfer$SocketConnectThread;

        r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppTransfer$SocketConnectThread mConnectThread> = r1;

        return r1;
    }

    static com.android.bluetooth.opp.BluetoothOppTransfer$SocketConnectThread access$000(com.android.bluetooth.opp.BluetoothOppTransfer)
    {
        com.android.bluetooth.opp.BluetoothOppTransfer r0;
        com.android.bluetooth.opp.BluetoothOppTransfer$SocketConnectThread $r1;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppTransfer;

        $r1 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppTransfer$SocketConnectThread mConnectThread>;

        return $r1;
    }

    static void access$100(com.android.bluetooth.opp.BluetoothOppTransfer, int)
    {
        com.android.bluetooth.opp.BluetoothOppTransfer r0;
        int i0;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppTransfer;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.bluetooth.opp.BluetoothOppTransfer: void markBatchFailed(int)>(i0);

        return;
    }

    static com.android.bluetooth.opp.BluetoothOppBatch access$200(com.android.bluetooth.opp.BluetoothOppTransfer)
    {
        com.android.bluetooth.opp.BluetoothOppTransfer r0;
        com.android.bluetooth.opp.BluetoothOppBatch $r1;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppTransfer;

        $r1 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppBatch mBatch>;

        return $r1;
    }

    static javax.obex.ObexTransport access$302(com.android.bluetooth.opp.BluetoothOppTransfer, javax.obex.ObexTransport)
    {
        com.android.bluetooth.opp.BluetoothOppTransfer r0;
        javax.obex.ObexTransport r1;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppTransfer;

        r1 := @parameter1: javax.obex.ObexTransport;

        r0.<com.android.bluetooth.opp.BluetoothOppTransfer: javax.obex.ObexTransport mTransport> = r1;

        return r1;
    }

    static void access$400(com.android.bluetooth.opp.BluetoothOppTransfer)
    {
        com.android.bluetooth.opp.BluetoothOppTransfer r0;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppTransfer;

        specialinvoke r0.<com.android.bluetooth.opp.BluetoothOppTransfer: void startObexSession()>();

        return;
    }

    static com.android.bluetooth.opp.BluetoothOppShareInfo access$502(com.android.bluetooth.opp.BluetoothOppTransfer, com.android.bluetooth.opp.BluetoothOppShareInfo)
    {
        com.android.bluetooth.opp.BluetoothOppTransfer r0;
        com.android.bluetooth.opp.BluetoothOppShareInfo r1;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppTransfer;

        r1 := @parameter1: com.android.bluetooth.opp.BluetoothOppShareInfo;

        r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppShareInfo mCurrentShare> = r1;

        return r1;
    }

    static com.android.bluetooth.opp.BluetoothOppShareInfo access$500(com.android.bluetooth.opp.BluetoothOppTransfer)
    {
        com.android.bluetooth.opp.BluetoothOppTransfer r0;
        com.android.bluetooth.opp.BluetoothOppShareInfo $r1;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppTransfer;

        $r1 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppShareInfo mCurrentShare>;

        return $r1;
    }

    static void access$600(com.android.bluetooth.opp.BluetoothOppTransfer)
    {
        com.android.bluetooth.opp.BluetoothOppTransfer r0;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppTransfer;

        specialinvoke r0.<com.android.bluetooth.opp.BluetoothOppTransfer: void processCurrentShare()>();

        return;
    }

    static com.android.bluetooth.opp.BluetoothOppObexSession access$700(com.android.bluetooth.opp.BluetoothOppTransfer)
    {
        com.android.bluetooth.opp.BluetoothOppTransfer r0;
        com.android.bluetooth.opp.BluetoothOppObexSession $r1;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppTransfer;

        $r1 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppObexSession mSession>;

        return $r1;
    }

    static void access$800(com.android.bluetooth.opp.BluetoothOppTransfer, com.android.bluetooth.opp.BluetoothOppShareInfo)
    {
        com.android.bluetooth.opp.BluetoothOppTransfer r0;
        com.android.bluetooth.opp.BluetoothOppShareInfo r1;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppTransfer;

        r1 := @parameter1: com.android.bluetooth.opp.BluetoothOppShareInfo;

        specialinvoke r0.<com.android.bluetooth.opp.BluetoothOppTransfer: void tickShareStatus(com.android.bluetooth.opp.BluetoothOppShareInfo)>(r1);

        return;
    }

    static javax.obex.ObexTransport access$300(com.android.bluetooth.opp.BluetoothOppTransfer)
    {
        com.android.bluetooth.opp.BluetoothOppTransfer r0;
        javax.obex.ObexTransport $r1;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppTransfer;

        $r1 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: javax.obex.ObexTransport mTransport>;

        return $r1;
    }

    static void access$900(com.android.bluetooth.opp.BluetoothOppTransfer)
    {
        com.android.bluetooth.opp.BluetoothOppTransfer r0;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppTransfer;

        specialinvoke r0.<com.android.bluetooth.opp.BluetoothOppTransfer: void markBatchFailed()>();

        return;
    }

    static android.content.Context access$1000(com.android.bluetooth.opp.BluetoothOppTransfer)
    {
        com.android.bluetooth.opp.BluetoothOppTransfer r0;
        android.content.Context $r1;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppTransfer;

        $r1 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: android.content.Context mContext>;

        return $r1;
    }

    static void access$1100(com.android.bluetooth.opp.BluetoothOppTransfer, com.android.bluetooth.opp.BluetoothOppShareInfo)
    {
        com.android.bluetooth.opp.BluetoothOppTransfer r0;
        com.android.bluetooth.opp.BluetoothOppShareInfo r1;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppTransfer;

        r1 := @parameter1: com.android.bluetooth.opp.BluetoothOppShareInfo;

        specialinvoke r0.<com.android.bluetooth.opp.BluetoothOppTransfer: void markShareTimeout(com.android.bluetooth.opp.BluetoothOppShareInfo)>(r1);

        return;
    }

    static com.android.bluetooth.opp.BluetoothOppTransfer$EventHandler access$1200(com.android.bluetooth.opp.BluetoothOppTransfer)
    {
        com.android.bluetooth.opp.BluetoothOppTransfer r0;
        com.android.bluetooth.opp.BluetoothOppTransfer$EventHandler $r1;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppTransfer;

        $r1 = r0.<com.android.bluetooth.opp.BluetoothOppTransfer: com.android.bluetooth.opp.BluetoothOppTransfer$EventHandler mSessionHandler>;

        return $r1;
    }

    public static void <clinit>()
    {
        <com.android.bluetooth.opp.BluetoothOppTransfer: java.lang.String SOCKET_LINK_KEY_ERROR> = "Invalid exchange";

        <com.android.bluetooth.opp.BluetoothOppTransfer: short OPUSH_UUID16> = 4357;

        <com.android.bluetooth.opp.BluetoothOppTransfer: int CONNECT_RETRY_TIME> = 100;

        <com.android.bluetooth.opp.BluetoothOppTransfer: int CONNECT_WAIT_TIMEOUT> = 45000;

        <com.android.bluetooth.opp.BluetoothOppTransfer: int SOCKET_ERROR_RETRY> = 13;

        <com.android.bluetooth.opp.BluetoothOppTransfer: int RFCOMM_CONNECTED> = 11;

        <com.android.bluetooth.opp.BluetoothOppTransfer: int RFCOMM_ERROR> = 10;

        <com.android.bluetooth.opp.BluetoothOppTransfer: boolean V> = 0;

        <com.android.bluetooth.opp.BluetoothOppTransfer: boolean D> = 1;

        <com.android.bluetooth.opp.BluetoothOppTransfer: java.lang.String TAG> = "BtOppTransfer";

        return;
    }
}
