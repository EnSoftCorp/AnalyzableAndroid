public class com.android.bluetooth.gatt.ScanManager extends java.lang.Object
{
    private static final boolean DBG;
    private static final java.lang.String TAG;
    static final int SCAN_RESULT_TYPE_TRUNCATED;
    static final int SCAN_RESULT_TYPE_FULL;
    static final int SCAN_RESULT_TYPE_BOTH;
    private static final int MSG_START_BLE_SCAN;
    private static final int MSG_STOP_BLE_SCAN;
    private static final int MSG_FLUSH_BATCH_RESULTS;
    private static final java.lang.String ACTION_REFRESH_BATCHED_SCAN;
    private static final int OPERATION_TIME_OUT_MILLIS;
    private int mLastConfiguredScanSetting;
    private com.android.bluetooth.gatt.ScanManager$BatchScanParams mBatchScanParms;
    private com.android.bluetooth.gatt.GattService mService;
    private android.content.BroadcastReceiver mBatchAlarmReceiver;
    private boolean mBatchAlarmReceiverRegistered;
    private com.android.bluetooth.gatt.ScanManager$ScanNative mScanNative;
    private com.android.bluetooth.gatt.ScanManager$ClientHandler mHandler;
    private java.util.Set mRegularScanClients;
    private java.util.Set mBatchClients;
    private java.util.concurrent.CountDownLatch mLatch;

    void <init>(com.android.bluetooth.gatt.GattService)
    {
        com.android.bluetooth.gatt.ScanManager r0;
        com.android.bluetooth.gatt.GattService r1;
        java.util.HashSet $r2, $r3;
        com.android.bluetooth.gatt.ScanManager$ScanNative $r4;

        r0 := @this: com.android.bluetooth.gatt.ScanManager;

        r1 := @parameter0: com.android.bluetooth.gatt.GattService;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.bluetooth.gatt.ScanManager: int mLastConfiguredScanSetting> = -2147483648;

        $r2 = new java.util.HashSet;

        specialinvoke $r2.<java.util.HashSet: void <init>()>();

        r0.<com.android.bluetooth.gatt.ScanManager: java.util.Set mRegularScanClients> = $r2;

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        r0.<com.android.bluetooth.gatt.ScanManager: java.util.Set mBatchClients> = $r3;

        r0.<com.android.bluetooth.gatt.ScanManager: com.android.bluetooth.gatt.GattService mService> = r1;

        $r4 = new com.android.bluetooth.gatt.ScanManager$ScanNative;

        specialinvoke $r4.<com.android.bluetooth.gatt.ScanManager$ScanNative: void <init>(com.android.bluetooth.gatt.ScanManager)>(r0);

        r0.<com.android.bluetooth.gatt.ScanManager: com.android.bluetooth.gatt.ScanManager$ScanNative mScanNative> = $r4;

        return;
    }

    void start()
    {
        com.android.bluetooth.gatt.ScanManager r0;
        android.os.HandlerThread r1, $r2;
        com.android.bluetooth.gatt.ScanManager$ClientHandler $r3;
        android.os.Looper $r4;

        r0 := @this: com.android.bluetooth.gatt.ScanManager;

        $r2 = new android.os.HandlerThread;

        specialinvoke $r2.<android.os.HandlerThread: void <init>(java.lang.String)>("BluetoothScanManager");

        r1 = $r2;

        virtualinvoke r1.<android.os.HandlerThread: void start()>();

        $r3 = new com.android.bluetooth.gatt.ScanManager$ClientHandler;

        $r4 = virtualinvoke r1.<android.os.HandlerThread: android.os.Looper getLooper()>();

        specialinvoke $r3.<com.android.bluetooth.gatt.ScanManager$ClientHandler: void <init>(com.android.bluetooth.gatt.ScanManager,android.os.Looper)>(r0, $r4);

        r0.<com.android.bluetooth.gatt.ScanManager: com.android.bluetooth.gatt.ScanManager$ClientHandler mHandler> = $r3;

        return;
    }

    void cleanup()
    {
        com.android.bluetooth.gatt.ScanManager r0;
        java.util.Set $r1, $r2;
        com.android.bluetooth.gatt.ScanManager$ScanNative $r3;

        r0 := @this: com.android.bluetooth.gatt.ScanManager;

        $r1 = r0.<com.android.bluetooth.gatt.ScanManager: java.util.Set mRegularScanClients>;

        interfaceinvoke $r1.<java.util.Set: void clear()>();

        $r2 = r0.<com.android.bluetooth.gatt.ScanManager: java.util.Set mBatchClients>;

        interfaceinvoke $r2.<java.util.Set: void clear()>();

        $r3 = r0.<com.android.bluetooth.gatt.ScanManager: com.android.bluetooth.gatt.ScanManager$ScanNative mScanNative>;

        virtualinvoke $r3.<com.android.bluetooth.gatt.ScanManager$ScanNative: void cleanup()>();

        return;
    }

    java.util.Set getRegularScanQueue()
    {
        com.android.bluetooth.gatt.ScanManager r0;
        java.util.Set $r1;

        r0 := @this: com.android.bluetooth.gatt.ScanManager;

        $r1 = r0.<com.android.bluetooth.gatt.ScanManager: java.util.Set mRegularScanClients>;

        return $r1;
    }

    java.util.Set getBatchScanQueue()
    {
        com.android.bluetooth.gatt.ScanManager r0;
        java.util.Set $r1;

        r0 := @this: com.android.bluetooth.gatt.ScanManager;

        $r1 = r0.<com.android.bluetooth.gatt.ScanManager: java.util.Set mBatchClients>;

        return $r1;
    }

    java.util.Set getFullBatchScanQueue()
    {
        com.android.bluetooth.gatt.ScanManager r0;
        java.util.HashSet r1, $r4;
        java.util.Iterator r2;
        com.android.bluetooth.gatt.ScanClient r3;
        java.util.Set $r5;
        boolean $z0;
        java.lang.Object $r6;
        android.bluetooth.le.ScanSettings $r7;
        int $i0;

        r0 := @this: com.android.bluetooth.gatt.ScanManager;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>()>();

        r1 = $r4;

        $r5 = r0.<com.android.bluetooth.gatt.ScanManager: java.util.Set mBatchClients>;

        r2 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke r2.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.android.bluetooth.gatt.ScanClient) $r6;

        $r7 = r3.<com.android.bluetooth.gatt.ScanClient: android.bluetooth.le.ScanSettings settings>;

        $i0 = virtualinvoke $r7.<android.bluetooth.le.ScanSettings: int getScanResultType()>();

        if $i0 != 0 goto label2;

        interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r3);

     label2:
        goto label1;

     label3:
        return r1;
    }

    void startScan(com.android.bluetooth.gatt.ScanClient)
    {
        com.android.bluetooth.gatt.ScanManager r0;
        com.android.bluetooth.gatt.ScanClient r1;

        r0 := @this: com.android.bluetooth.gatt.ScanManager;

        r1 := @parameter0: com.android.bluetooth.gatt.ScanClient;

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager: void sendMessage(int,com.android.bluetooth.gatt.ScanClient)>(0, r1);

        return;
    }

    void stopScan(com.android.bluetooth.gatt.ScanClient)
    {
        com.android.bluetooth.gatt.ScanManager r0;
        com.android.bluetooth.gatt.ScanClient r1;

        r0 := @this: com.android.bluetooth.gatt.ScanManager;

        r1 := @parameter0: com.android.bluetooth.gatt.ScanClient;

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager: void sendMessage(int,com.android.bluetooth.gatt.ScanClient)>(1, r1);

        return;
    }

    void flushBatchScanResults(com.android.bluetooth.gatt.ScanClient)
    {
        com.android.bluetooth.gatt.ScanManager r0;
        com.android.bluetooth.gatt.ScanClient r1;

        r0 := @this: com.android.bluetooth.gatt.ScanManager;

        r1 := @parameter0: com.android.bluetooth.gatt.ScanClient;

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager: void sendMessage(int,com.android.bluetooth.gatt.ScanClient)>(2, r1);

        return;
    }

    void callbackDone(int, int)
    {
        com.android.bluetooth.gatt.ScanManager r0;
        int i0, i1;
        java.lang.StringBuilder $r1, $r2, $r3, $r4, $r5;
        java.lang.String $r6;
        java.util.concurrent.CountDownLatch $r7;

        r0 := @this: com.android.bluetooth.gatt.ScanManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("callback done for clientIf - ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" status - ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager: void logd(java.lang.String)>($r6);

        if i1 != 0 goto label1;

        $r7 = r0.<com.android.bluetooth.gatt.ScanManager: java.util.concurrent.CountDownLatch mLatch>;

        virtualinvoke $r7.<java.util.concurrent.CountDownLatch: void countDown()>();

     label1:
        return;
    }

    private void sendMessage(int, com.android.bluetooth.gatt.ScanClient)
    {
        com.android.bluetooth.gatt.ScanManager r0;
        int i0;
        com.android.bluetooth.gatt.ScanClient r1;
        android.os.Message r2, $r3;
        com.android.bluetooth.gatt.ScanManager$ClientHandler $r4;

        r0 := @this: com.android.bluetooth.gatt.ScanManager;

        i0 := @parameter0: int;

        r1 := @parameter1: com.android.bluetooth.gatt.ScanClient;

        $r3 = new android.os.Message;

        specialinvoke $r3.<android.os.Message: void <init>()>();

        r2 = $r3;

        r2.<android.os.Message: int what> = i0;

        r2.<android.os.Message: java.lang.Object obj> = r1;

        $r4 = r0.<com.android.bluetooth.gatt.ScanManager: com.android.bluetooth.gatt.ScanManager$ClientHandler mHandler>;

        virtualinvoke $r4.<com.android.bluetooth.gatt.ScanManager$ClientHandler: boolean sendMessage(android.os.Message)>(r2);

        return;
    }

    private boolean isFilteringSupported()
    {
        com.android.bluetooth.gatt.ScanManager r0;
        android.bluetooth.BluetoothAdapter r1;
        boolean $z0;

        r0 := @this: com.android.bluetooth.gatt.ScanManager;

        r1 = staticinvoke <android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()>();

        $z0 = virtualinvoke r1.<android.bluetooth.BluetoothAdapter: boolean isOffloadedFilteringSupported()>();

        return $z0;
    }

    private void logd(java.lang.String)
    {
        com.android.bluetooth.gatt.ScanManager r0;
        java.lang.String r1;

        r0 := @this: com.android.bluetooth.gatt.ScanManager;

        r1 := @parameter0: java.lang.String;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BtGatt.ScanManager", r1);

        return;
    }

    static com.android.bluetooth.gatt.GattService access$000(com.android.bluetooth.gatt.ScanManager)
    {
        com.android.bluetooth.gatt.ScanManager r0;
        com.android.bluetooth.gatt.GattService $r1;

        r0 := @parameter0: com.android.bluetooth.gatt.ScanManager;

        $r1 = r0.<com.android.bluetooth.gatt.ScanManager: com.android.bluetooth.gatt.GattService mService>;

        return $r1;
    }

    static void access$100(com.android.bluetooth.gatt.ScanManager, java.lang.String)
    {
        com.android.bluetooth.gatt.ScanManager r0;
        java.lang.String r1;

        r0 := @parameter0: com.android.bluetooth.gatt.ScanManager;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<com.android.bluetooth.gatt.ScanManager: void logd(java.lang.String)>(r1);

        return;
    }

    static java.util.Set access$200(com.android.bluetooth.gatt.ScanManager)
    {
        com.android.bluetooth.gatt.ScanManager r0;
        java.util.Set $r1;

        r0 := @parameter0: com.android.bluetooth.gatt.ScanManager;

        $r1 = r0.<com.android.bluetooth.gatt.ScanManager: java.util.Set mRegularScanClients>;

        return $r1;
    }

    static java.util.Set access$300(com.android.bluetooth.gatt.ScanManager)
    {
        com.android.bluetooth.gatt.ScanManager r0;
        java.util.Set $r1;

        r0 := @parameter0: com.android.bluetooth.gatt.ScanManager;

        $r1 = r0.<com.android.bluetooth.gatt.ScanManager: java.util.Set mBatchClients>;

        return $r1;
    }

    static com.android.bluetooth.gatt.ScanManager$ScanNative access$400(com.android.bluetooth.gatt.ScanManager)
    {
        com.android.bluetooth.gatt.ScanManager r0;
        com.android.bluetooth.gatt.ScanManager$ScanNative $r1;

        r0 := @parameter0: com.android.bluetooth.gatt.ScanManager;

        $r1 = r0.<com.android.bluetooth.gatt.ScanManager: com.android.bluetooth.gatt.ScanManager$ScanNative mScanNative>;

        return $r1;
    }

    static boolean access$500(com.android.bluetooth.gatt.ScanManager)
    {
        com.android.bluetooth.gatt.ScanManager r0;
        boolean $z0;

        r0 := @parameter0: com.android.bluetooth.gatt.ScanManager;

        $z0 = specialinvoke r0.<com.android.bluetooth.gatt.ScanManager: boolean isFilteringSupported()>();

        return $z0;
    }

    static android.content.BroadcastReceiver access$602(com.android.bluetooth.gatt.ScanManager, android.content.BroadcastReceiver)
    {
        com.android.bluetooth.gatt.ScanManager r0;
        android.content.BroadcastReceiver r1;

        r0 := @parameter0: com.android.bluetooth.gatt.ScanManager;

        r1 := @parameter1: android.content.BroadcastReceiver;

        r0.<com.android.bluetooth.gatt.ScanManager: android.content.BroadcastReceiver mBatchAlarmReceiver> = r1;

        return r1;
    }

    static android.content.BroadcastReceiver access$600(com.android.bluetooth.gatt.ScanManager)
    {
        com.android.bluetooth.gatt.ScanManager r0;
        android.content.BroadcastReceiver $r1;

        r0 := @parameter0: com.android.bluetooth.gatt.ScanManager;

        $r1 = r0.<com.android.bluetooth.gatt.ScanManager: android.content.BroadcastReceiver mBatchAlarmReceiver>;

        return $r1;
    }

    static boolean access$702(com.android.bluetooth.gatt.ScanManager, boolean)
    {
        com.android.bluetooth.gatt.ScanManager r0;
        boolean z0;

        r0 := @parameter0: com.android.bluetooth.gatt.ScanManager;

        z0 := @parameter1: boolean;

        r0.<com.android.bluetooth.gatt.ScanManager: boolean mBatchAlarmReceiverRegistered> = z0;

        return z0;
    }

    static java.util.concurrent.CountDownLatch access$802(com.android.bluetooth.gatt.ScanManager, java.util.concurrent.CountDownLatch)
    {
        com.android.bluetooth.gatt.ScanManager r0;
        java.util.concurrent.CountDownLatch r1;

        r0 := @parameter0: com.android.bluetooth.gatt.ScanManager;

        r1 := @parameter1: java.util.concurrent.CountDownLatch;

        r0.<com.android.bluetooth.gatt.ScanManager: java.util.concurrent.CountDownLatch mLatch> = r1;

        return r1;
    }

    static java.util.concurrent.CountDownLatch access$800(com.android.bluetooth.gatt.ScanManager)
    {
        com.android.bluetooth.gatt.ScanManager r0;
        java.util.concurrent.CountDownLatch $r1;

        r0 := @parameter0: com.android.bluetooth.gatt.ScanManager;

        $r1 = r0.<com.android.bluetooth.gatt.ScanManager: java.util.concurrent.CountDownLatch mLatch>;

        return $r1;
    }

    static int access$900(com.android.bluetooth.gatt.ScanManager)
    {
        com.android.bluetooth.gatt.ScanManager r0;
        int $i0;

        r0 := @parameter0: com.android.bluetooth.gatt.ScanManager;

        $i0 = r0.<com.android.bluetooth.gatt.ScanManager: int mLastConfiguredScanSetting>;

        return $i0;
    }

    static int access$902(com.android.bluetooth.gatt.ScanManager, int)
    {
        com.android.bluetooth.gatt.ScanManager r0;
        int i0;

        r0 := @parameter0: com.android.bluetooth.gatt.ScanManager;

        i0 := @parameter1: int;

        r0.<com.android.bluetooth.gatt.ScanManager: int mLastConfiguredScanSetting> = i0;

        return i0;
    }

    static com.android.bluetooth.gatt.ScanManager$BatchScanParams access$1000(com.android.bluetooth.gatt.ScanManager)
    {
        com.android.bluetooth.gatt.ScanManager r0;
        com.android.bluetooth.gatt.ScanManager$BatchScanParams $r1;

        r0 := @parameter0: com.android.bluetooth.gatt.ScanManager;

        $r1 = r0.<com.android.bluetooth.gatt.ScanManager: com.android.bluetooth.gatt.ScanManager$BatchScanParams mBatchScanParms>;

        return $r1;
    }

    static com.android.bluetooth.gatt.ScanManager$BatchScanParams access$1002(com.android.bluetooth.gatt.ScanManager, com.android.bluetooth.gatt.ScanManager$BatchScanParams)
    {
        com.android.bluetooth.gatt.ScanManager r0;
        com.android.bluetooth.gatt.ScanManager$BatchScanParams r1;

        r0 := @parameter0: com.android.bluetooth.gatt.ScanManager;

        r1 := @parameter1: com.android.bluetooth.gatt.ScanManager$BatchScanParams;

        r0.<com.android.bluetooth.gatt.ScanManager: com.android.bluetooth.gatt.ScanManager$BatchScanParams mBatchScanParms> = r1;

        return r1;
    }

    static boolean access$700(com.android.bluetooth.gatt.ScanManager)
    {
        com.android.bluetooth.gatt.ScanManager r0;
        boolean $z0;

        r0 := @parameter0: com.android.bluetooth.gatt.ScanManager;

        $z0 = r0.<com.android.bluetooth.gatt.ScanManager: boolean mBatchAlarmReceiverRegistered>;

        return $z0;
    }

    public static void <clinit>()
    {
        <com.android.bluetooth.gatt.ScanManager: int OPERATION_TIME_OUT_MILLIS> = 500;

        <com.android.bluetooth.gatt.ScanManager: java.lang.String ACTION_REFRESH_BATCHED_SCAN> = "com.android.bluetooth.gatt.REFRESH_BATCHED_SCAN";

        <com.android.bluetooth.gatt.ScanManager: int MSG_FLUSH_BATCH_RESULTS> = 2;

        <com.android.bluetooth.gatt.ScanManager: int MSG_STOP_BLE_SCAN> = 1;

        <com.android.bluetooth.gatt.ScanManager: int MSG_START_BLE_SCAN> = 0;

        <com.android.bluetooth.gatt.ScanManager: int SCAN_RESULT_TYPE_BOTH> = 3;

        <com.android.bluetooth.gatt.ScanManager: int SCAN_RESULT_TYPE_FULL> = 2;

        <com.android.bluetooth.gatt.ScanManager: int SCAN_RESULT_TYPE_TRUNCATED> = 1;

        <com.android.bluetooth.gatt.ScanManager: java.lang.String TAG> = "BtGatt.ScanManager";

        <com.android.bluetooth.gatt.ScanManager: boolean DBG> = 1;

        return;
    }
}
