public class com.android.bluetooth.opp.BluetoothOppService extends android.app.Service
{
    private static final boolean D;
    private static final boolean V;
    private boolean userAccepted;
    private static final java.lang.String TAG;
    private com.android.bluetooth.opp.BluetoothOppService$BluetoothShareContentObserver mObserver;
    private com.android.bluetooth.opp.BluetoothOppNotification mNotifier;
    private boolean mPendingUpdate;
    private com.android.bluetooth.opp.BluetoothOppService$UpdateThread mUpdateThread;
    private java.util.ArrayList mShares;
    private java.util.ArrayList mBatchs;
    private com.android.bluetooth.opp.BluetoothOppTransfer mTransfer;
    private com.android.bluetooth.opp.BluetoothOppTransfer mServerTransfer;
    private int mBatchId;
    private android.database.CharArrayBuffer mOldChars;
    private android.database.CharArrayBuffer mNewChars;
    private android.bluetooth.BluetoothAdapter mAdapter;
    private android.os.PowerManager mPowerManager;
    private com.android.bluetooth.opp.BluetoothOppRfcommListener mSocketListener;
    private boolean mListenStarted;
    private boolean mMediaScanInProgress;
    private int mIncomingRetries;
    private javax.obex.ObexTransport mPendingConnection;
    private com.android.bluetooth.opp.BluetoothOppObexServerSession mServerSession;
    private static final int START_LISTENER;
    private static final int MEDIA_SCANNED;
    private static final int MEDIA_SCANNED_FAILED;
    private static final int MSG_INCOMING_CONNECTION_RETRY;
    private static final int STOP_LISTENER;
    private android.os.Handler mHandler;
    private final android.content.BroadcastReceiver mBluetoothReceiver;

    public void <init>()
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        com.android.bluetooth.opp.BluetoothOppService$2 $r1;
        com.android.bluetooth.opp.BluetoothOppService$3 $r2;

        r0 := @this: com.android.bluetooth.opp.BluetoothOppService;

        specialinvoke r0.<android.app.Service: void <init>()>();

        r0.<com.android.bluetooth.opp.BluetoothOppService: boolean userAccepted> = 0;

        r0.<com.android.bluetooth.opp.BluetoothOppService: boolean mListenStarted> = 0;

        r0.<com.android.bluetooth.opp.BluetoothOppService: int mIncomingRetries> = 0;

        r0.<com.android.bluetooth.opp.BluetoothOppService: javax.obex.ObexTransport mPendingConnection> = null;

        $r1 = new com.android.bluetooth.opp.BluetoothOppService$2;

        specialinvoke $r1.<com.android.bluetooth.opp.BluetoothOppService$2: void <init>(com.android.bluetooth.opp.BluetoothOppService)>(r0);

        r0.<com.android.bluetooth.opp.BluetoothOppService: android.os.Handler mHandler> = $r1;

        $r2 = new com.android.bluetooth.opp.BluetoothOppService$3;

        specialinvoke $r2.<com.android.bluetooth.opp.BluetoothOppService$3: void <init>(com.android.bluetooth.opp.BluetoothOppService)>(r0);

        r0.<com.android.bluetooth.opp.BluetoothOppService: android.content.BroadcastReceiver mBluetoothReceiver> = $r2;

        return;
    }

    public android.os.IBinder onBind(android.content.Intent)
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        android.content.Intent r1;
        java.lang.UnsupportedOperationException $r2;

        r0 := @this: com.android.bluetooth.opp.BluetoothOppService;

        r1 := @parameter0: android.content.Intent;

        $r2 = new java.lang.UnsupportedOperationException;

        specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Cannot bind to Bluetooth OPP Service");

        throw $r2;
    }

    public void onCreate()
    {
        com.android.bluetooth.opp.BluetoothOppService r0, r3;
        android.content.ContentResolver r1, $r11;
        android.content.IntentFilter r2, $r20;
        java.lang.Throwable r4, $r24;
        android.bluetooth.BluetoothAdapter $r5, $r7, $r23;
        com.android.bluetooth.opp.BluetoothOppRfcommListener $r6;
        java.util.ArrayList $r8, $r9;
        com.android.bluetooth.opp.BluetoothOppService$BluetoothShareContentObserver $r10, $r12;
        android.net.Uri $r13;
        com.android.bluetooth.opp.BluetoothOppNotification $r14, $r15, $r16;
        android.app.NotificationManager $r17;
        com.android.bluetooth.opp.BluetoothOppService$1 $r18;
        android.content.BroadcastReceiver $r19;

        r0 := @this: com.android.bluetooth.opp.BluetoothOppService;

        specialinvoke r0.<android.app.Service: void onCreate()>();

        $r5 = staticinvoke <android.bluetooth.BluetoothAdapter: android.bluetooth.BluetoothAdapter getDefaultAdapter()>();

        r0.<com.android.bluetooth.opp.BluetoothOppService: android.bluetooth.BluetoothAdapter mAdapter> = $r5;

        $r6 = new com.android.bluetooth.opp.BluetoothOppRfcommListener;

        $r7 = r0.<com.android.bluetooth.opp.BluetoothOppService: android.bluetooth.BluetoothAdapter mAdapter>;

        specialinvoke $r6.<com.android.bluetooth.opp.BluetoothOppRfcommListener: void <init>(android.bluetooth.BluetoothAdapter)>($r7);

        r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppRfcommListener mSocketListener> = $r6;

        $r8 = staticinvoke <com.google.android.collect.Lists: java.util.ArrayList newArrayList()>();

        r0.<com.android.bluetooth.opp.BluetoothOppService: java.util.ArrayList mShares> = $r8;

        $r9 = staticinvoke <com.google.android.collect.Lists: java.util.ArrayList newArrayList()>();

        r0.<com.android.bluetooth.opp.BluetoothOppService: java.util.ArrayList mBatchs> = $r9;

        $r10 = new com.android.bluetooth.opp.BluetoothOppService$BluetoothShareContentObserver;

        specialinvoke $r10.<com.android.bluetooth.opp.BluetoothOppService$BluetoothShareContentObserver: void <init>(com.android.bluetooth.opp.BluetoothOppService)>(r0);

        r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppService$BluetoothShareContentObserver mObserver> = $r10;

        $r11 = virtualinvoke r0.<com.android.bluetooth.opp.BluetoothOppService: android.content.ContentResolver getContentResolver()>();

        $r13 = <com.android.bluetooth.opp.BluetoothShare: android.net.Uri CONTENT_URI>;

        $r12 = r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppService$BluetoothShareContentObserver mObserver>;

        virtualinvoke $r11.<android.content.ContentResolver: void registerContentObserver(android.net.Uri,boolean,android.database.ContentObserver)>($r13, 1, $r12);

        r0.<com.android.bluetooth.opp.BluetoothOppService: int mBatchId> = 1;

        $r14 = new com.android.bluetooth.opp.BluetoothOppNotification;

        specialinvoke $r14.<com.android.bluetooth.opp.BluetoothOppNotification: void <init>(android.content.Context)>(r0);

        r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppNotification mNotifier> = $r14;

        $r15 = r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppNotification mNotifier>;

        $r17 = $r15.<com.android.bluetooth.opp.BluetoothOppNotification: android.app.NotificationManager mNotificationMgr>;

        virtualinvoke $r17.<android.app.NotificationManager: void cancelAll()>();

        $r16 = r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppNotification mNotifier>;

        virtualinvoke $r16.<com.android.bluetooth.opp.BluetoothOppNotification: void updateNotification()>();

        r1 = virtualinvoke r0.<com.android.bluetooth.opp.BluetoothOppService: android.content.ContentResolver getContentResolver()>();

        $r18 = new com.android.bluetooth.opp.BluetoothOppService$1;

        specialinvoke $r18.<com.android.bluetooth.opp.BluetoothOppService$1: void <init>(com.android.bluetooth.opp.BluetoothOppService,java.lang.String,android.content.ContentResolver)>(r0, "trimDatabase", r1);

        virtualinvoke $r18.<com.android.bluetooth.opp.BluetoothOppService$1: void start()>();

        $r20 = new android.content.IntentFilter;

        specialinvoke $r20.<android.content.IntentFilter: void <init>(java.lang.String)>("android.bluetooth.adapter.action.STATE_CHANGED");

        r2 = $r20;

        $r19 = r0.<com.android.bluetooth.opp.BluetoothOppService: android.content.BroadcastReceiver mBluetoothReceiver>;

        virtualinvoke r0.<com.android.bluetooth.opp.BluetoothOppService: android.content.Intent registerReceiver(android.content.BroadcastReceiver,android.content.IntentFilter)>($r19, r2);

        r3 = r0;

        entermonitor r0;

     label1:
        $r23 = r0.<com.android.bluetooth.opp.BluetoothOppService: android.bluetooth.BluetoothAdapter mAdapter>;

        if $r23 != null goto label2;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BtOppService", "Local BT device is not enabled");

        goto label3;

     label2:
        specialinvoke r0.<com.android.bluetooth.opp.BluetoothOppService: void startListener()>();

     label3:
        exitmonitor r3;

     label4:
        goto label7;

     label5:
        $r24 := @caughtexception;

        r4 = $r24;

        exitmonitor r3;

     label6:
        throw r4;

     label7:
        specialinvoke r0.<com.android.bluetooth.opp.BluetoothOppService: void updateFromProvider()>();

        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public int onStartCommand(android.content.Intent, int, int)
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        android.content.Intent r1;
        int i0, i1;
        android.bluetooth.BluetoothAdapter $r2;

        r0 := @this: com.android.bluetooth.opp.BluetoothOppService;

        r1 := @parameter0: android.content.Intent;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.android.bluetooth.opp.BluetoothOppService: android.bluetooth.BluetoothAdapter mAdapter>;

        if $r2 != null goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BtOppService", "Local BT device is not enabled");

        goto label2;

     label1:
        specialinvoke r0.<com.android.bluetooth.opp.BluetoothOppService: void startListener()>();

     label2:
        specialinvoke r0.<com.android.bluetooth.opp.BluetoothOppService: void updateFromProvider()>();

        return 2;
    }

    private void startListener()
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        boolean $z0, $z1;
        android.bluetooth.BluetoothAdapter $r1;
        android.os.Handler $r2, $r3;
        android.os.Message $r4;

        r0 := @this: com.android.bluetooth.opp.BluetoothOppService;

        $z0 = r0.<com.android.bluetooth.opp.BluetoothOppService: boolean mListenStarted>;

        if $z0 != 0 goto label1;

        $r1 = r0.<com.android.bluetooth.opp.BluetoothOppService: android.bluetooth.BluetoothAdapter mAdapter>;

        $z1 = virtualinvoke $r1.<android.bluetooth.BluetoothAdapter: boolean isEnabled()>();

        if $z1 == 0 goto label1;

        $r3 = r0.<com.android.bluetooth.opp.BluetoothOppService: android.os.Handler mHandler>;

        $r2 = r0.<com.android.bluetooth.opp.BluetoothOppService: android.os.Handler mHandler>;

        $r4 = virtualinvoke $r2.<android.os.Handler: android.os.Message obtainMessage(int)>(1);

        virtualinvoke $r3.<android.os.Handler: boolean sendMessage(android.os.Message)>($r4);

        r0.<com.android.bluetooth.opp.BluetoothOppService: boolean mListenStarted> = 1;

     label1:
        return;
    }

    private void startSocketListener()
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        android.os.Handler $r1;
        com.android.bluetooth.opp.BluetoothOppRfcommListener $r2;

        r0 := @this: com.android.bluetooth.opp.BluetoothOppService;

        $r2 = r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppRfcommListener mSocketListener>;

        $r1 = r0.<com.android.bluetooth.opp.BluetoothOppService: android.os.Handler mHandler>;

        virtualinvoke $r2.<com.android.bluetooth.opp.BluetoothOppRfcommListener: boolean start(android.os.Handler)>($r1);

        return;
    }

    public void onDestroy()
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        android.content.ContentResolver $r1;
        com.android.bluetooth.opp.BluetoothOppService$BluetoothShareContentObserver $r2;
        android.content.BroadcastReceiver $r3;
        com.android.bluetooth.opp.BluetoothOppRfcommListener $r4;
        java.util.ArrayList $r5, $r6, $r9, $r10;
        android.os.Handler $r7, $r8;

        r0 := @this: com.android.bluetooth.opp.BluetoothOppService;

        specialinvoke r0.<android.app.Service: void onDestroy()>();

        $r1 = virtualinvoke r0.<com.android.bluetooth.opp.BluetoothOppService: android.content.ContentResolver getContentResolver()>();

        $r2 = r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppService$BluetoothShareContentObserver mObserver>;

        virtualinvoke $r1.<android.content.ContentResolver: void unregisterContentObserver(android.database.ContentObserver)>($r2);

        $r3 = r0.<com.android.bluetooth.opp.BluetoothOppService: android.content.BroadcastReceiver mBluetoothReceiver>;

        virtualinvoke r0.<com.android.bluetooth.opp.BluetoothOppService: void unregisterReceiver(android.content.BroadcastReceiver)>($r3);

        $r4 = r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppRfcommListener mSocketListener>;

        virtualinvoke $r4.<com.android.bluetooth.opp.BluetoothOppRfcommListener: void stop()>();

        $r5 = r0.<com.android.bluetooth.opp.BluetoothOppService: java.util.ArrayList mBatchs>;

        if $r5 == null goto label1;

        $r10 = r0.<com.android.bluetooth.opp.BluetoothOppService: java.util.ArrayList mBatchs>;

        virtualinvoke $r10.<java.util.ArrayList: void clear()>();

     label1:
        $r6 = r0.<com.android.bluetooth.opp.BluetoothOppService: java.util.ArrayList mShares>;

        if $r6 == null goto label2;

        $r9 = r0.<com.android.bluetooth.opp.BluetoothOppService: java.util.ArrayList mShares>;

        virtualinvoke $r9.<java.util.ArrayList: void clear()>();

     label2:
        $r7 = r0.<com.android.bluetooth.opp.BluetoothOppService: android.os.Handler mHandler>;

        if $r7 == null goto label3;

        $r8 = r0.<com.android.bluetooth.opp.BluetoothOppService: android.os.Handler mHandler>;

        virtualinvoke $r8.<android.os.Handler: void removeCallbacksAndMessages(java.lang.Object)>(null);

     label3:
        return;
    }

    private void createServerSession(javax.obex.ObexTransport)
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        javax.obex.ObexTransport r1;
        com.android.bluetooth.opp.BluetoothOppObexServerSession $r2, $r3, $r6;
        java.lang.StringBuilder $r4, $r5, $r8, $r9, $r11;
        java.lang.String $r7, $r10, $r12;

        r0 := @this: com.android.bluetooth.opp.BluetoothOppService;

        r1 := @parameter0: javax.obex.ObexTransport;

        $r2 = new com.android.bluetooth.opp.BluetoothOppObexServerSession;

        specialinvoke $r2.<com.android.bluetooth.opp.BluetoothOppObexServerSession: void <init>(android.content.Context,javax.obex.ObexTransport)>(r0, r1);

        r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppObexServerSession mServerSession> = $r2;

        $r3 = r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppObexServerSession mServerSession>;

        virtualinvoke $r3.<com.android.bluetooth.opp.BluetoothOppObexServerSession: void preStart()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Get ServerSession ");

        $r6 = r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppObexServerSession mServerSession>;

        $r7 = virtualinvoke $r6.<java.lang.Object: java.lang.String toString()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for incoming connection");

        $r10 = virtualinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BtOppService", $r12);

        return;
    }

    private void updateFromProvider()
    {
        com.android.bluetooth.opp.BluetoothOppService r0, r1;
        java.lang.Throwable r2, $r7;
        com.android.bluetooth.opp.BluetoothOppService$UpdateThread $r4, $r5, $r6;

        r0 := @this: com.android.bluetooth.opp.BluetoothOppService;

        r1 = r0;

        entermonitor r0;

     label1:
        r0.<com.android.bluetooth.opp.BluetoothOppService: boolean mPendingUpdate> = 1;

        $r4 = r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppService$UpdateThread mUpdateThread>;

        if $r4 != null goto label2;

        $r5 = new com.android.bluetooth.opp.BluetoothOppService$UpdateThread;

        specialinvoke $r5.<com.android.bluetooth.opp.BluetoothOppService$UpdateThread: void <init>(com.android.bluetooth.opp.BluetoothOppService)>(r0);

        r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppService$UpdateThread mUpdateThread> = $r5;

        $r6 = r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppService$UpdateThread mUpdateThread>;

        virtualinvoke $r6.<com.android.bluetooth.opp.BluetoothOppService$UpdateThread: void start()>();

     label2:
        exitmonitor r1;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        r2 = $r7;

        exitmonitor r1;

     label5:
        throw r2;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void insertShare(android.database.Cursor, int)
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        android.database.Cursor r1;
        int i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, i43;
        java.lang.String r2, $r8, $r9, $r10, $r11, $r35, $r37;
        android.net.Uri r3, $r32, $r34;
        com.android.bluetooth.opp.BluetoothOppShareInfo r4, $r7;
        com.android.bluetooth.opp.BluetoothOppSendFileInfo r5;
        com.android.bluetooth.opp.BluetoothOppBatch r6, $r14, $r16, $r17, r41;
        java.util.ArrayList $r12, $r13, $r15, $r19, $r20;
        boolean $z0, $z1, $z4;
        long $l28;
        java.lang.Object $r18;
        com.android.bluetooth.opp.BluetoothOppTransfer $r21, $r22, $r25, $r26, $r27, $r30;
        com.android.bluetooth.opp.BluetoothOppObexServerSession $r23;
        android.os.PowerManager $r24, $r31;
        java.lang.StringBuilder $r28, $r29, $r36, $r38, $r39, $r40;
        java.io.FileInputStream $r33;

        r0 := @this: com.android.bluetooth.opp.BluetoothOppService;

        r1 := @parameter0: android.database.Cursor;

        i0 := @parameter1: int;

        $i1 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("uri");

        r2 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>($i1);

        if r2 == null goto label01;

        r3 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>(r2);

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("insertShare parsed URI: ");

        $r38 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r37 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BtOppService", $r37);

        goto label02;

     label01:
        r3 = null;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BtOppService", "insertShare found null URI at cursor!");

     label02:
        $r7 = new com.android.bluetooth.opp.BluetoothOppShareInfo;

        $i3 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("_id");

        $i4 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>($i3);

        $i5 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("hint");

        $r8 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>($i5);

        $i6 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("_data");

        $r9 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>($i6);

        $i7 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("mimetype");

        $r10 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>($i7);

        $i9 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("direction");

        $i8 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>($i9);

        $i10 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("destination");

        $r11 = interfaceinvoke r1.<android.database.Cursor: java.lang.String getString(int)>($i10);

        $i12 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("visibility");

        $i11 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>($i12);

        $i14 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("confirm");

        $i13 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>($i14);

        $i16 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("status");

        $i15 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>($i16);

        $i18 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("total_bytes");

        $i17 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>($i18);

        $i21 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("current_bytes");

        $i22 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>($i21);

        $i19 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("timestamp");

        $i20 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>($i19);

        $i23 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("scanned");

        $i24 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>($i23);

        if $i24 == 0 goto label03;

        $z4 = 1;

        goto label04;

     label03:
        $z4 = 0;

     label04:
        specialinvoke $r7.<com.android.bluetooth.opp.BluetoothOppShareInfo: void <init>(int,android.net.Uri,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,int,int,int,int,int,int,boolean)>($i4, r3, $r8, $r9, $r10, $i8, $r11, $i11, $i13, $i15, $i17, $i22, $i20, $z4);

        r4 = $r7;

        $r12 = r0.<com.android.bluetooth.opp.BluetoothOppService: java.util.ArrayList mShares>;

        virtualinvoke $r12.<java.util.ArrayList: void add(int,java.lang.Object)>(i0, r4);

        $z0 = virtualinvoke r4.<com.android.bluetooth.opp.BluetoothOppShareInfo: boolean isObsolete()>();

        if $z0 == 0 goto label05;

        $i39 = r4.<com.android.bluetooth.opp.BluetoothOppShareInfo: int mId>;

        staticinvoke <com.android.bluetooth.opp.Constants: void updateShareStatus(android.content.Context,int,int)>(r0, $i39, 491);

     label05:
        $z1 = virtualinvoke r4.<com.android.bluetooth.opp.BluetoothOppShareInfo: boolean isReadyToStart()>();

        if $z1 == 0 goto label14;

        $i26 = r4.<com.android.bluetooth.opp.BluetoothOppShareInfo: int mDirection>;

        if $i26 != 0 goto label07;

        $r32 = r4.<com.android.bluetooth.opp.BluetoothOppShareInfo: android.net.Uri mUri>;

        r5 = staticinvoke <com.android.bluetooth.opp.BluetoothOppUtility: com.android.bluetooth.opp.BluetoothOppSendFileInfo getSendFileInfo(android.net.Uri)>($r32);

        if r5 == null goto label06;

        $r33 = r5.<com.android.bluetooth.opp.BluetoothOppSendFileInfo: java.io.FileInputStream mInputStream>;

        if $r33 != null goto label07;

     label06:
        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t open file for OUTBOUND info ");

        $i38 = r4.<com.android.bluetooth.opp.BluetoothOppShareInfo: int mId>;

        $r36 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i38);

        $r35 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BtOppService", $r35);

        $i40 = r4.<com.android.bluetooth.opp.BluetoothOppShareInfo: int mId>;

        staticinvoke <com.android.bluetooth.opp.Constants: void updateShareStatus(android.content.Context,int,int)>(r0, $i40, 400);

        $r34 = r4.<com.android.bluetooth.opp.BluetoothOppShareInfo: android.net.Uri mUri>;

        staticinvoke <com.android.bluetooth.opp.BluetoothOppUtility: void closeSendFileInfo(android.net.Uri)>($r34);

        return;

     label07:
        $r13 = r0.<com.android.bluetooth.opp.BluetoothOppService: java.util.ArrayList mBatchs>;

        $i25 = virtualinvoke $r13.<java.util.ArrayList: int size()>();

        if $i25 != 0 goto label12;

        $r16 = new com.android.bluetooth.opp.BluetoothOppBatch;

        specialinvoke $r16.<com.android.bluetooth.opp.BluetoothOppBatch: void <init>(android.content.Context,com.android.bluetooth.opp.BluetoothOppShareInfo)>(r0, r4);

        r41 = $r16;

        $i33 = r0.<com.android.bluetooth.opp.BluetoothOppService: int mBatchId>;

        r41.<com.android.bluetooth.opp.BluetoothOppBatch: int mId> = $i33;

        $i32 = r0.<com.android.bluetooth.opp.BluetoothOppService: int mBatchId>;

        $i31 = $i32 + 1;

        r0.<com.android.bluetooth.opp.BluetoothOppService: int mBatchId> = $i31;

        $r20 = r0.<com.android.bluetooth.opp.BluetoothOppService: java.util.ArrayList mBatchs>;

        virtualinvoke $r20.<java.util.ArrayList: boolean add(java.lang.Object)>(r41);

        $i36 = r4.<com.android.bluetooth.opp.BluetoothOppShareInfo: int mDirection>;

        if $i36 != 0 goto label08;

        $r30 = new com.android.bluetooth.opp.BluetoothOppTransfer;

        $r31 = r0.<com.android.bluetooth.opp.BluetoothOppService: android.os.PowerManager mPowerManager>;

        specialinvoke $r30.<com.android.bluetooth.opp.BluetoothOppTransfer: void <init>(android.content.Context,android.os.PowerManager,com.android.bluetooth.opp.BluetoothOppBatch)>(r0, $r31, r41);

        r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppTransfer mTransfer> = $r30;

        goto label09;

     label08:
        $i35 = r4.<com.android.bluetooth.opp.BluetoothOppShareInfo: int mDirection>;

        if $i35 != 1 goto label09;

        $r22 = new com.android.bluetooth.opp.BluetoothOppTransfer;

        $r24 = r0.<com.android.bluetooth.opp.BluetoothOppService: android.os.PowerManager mPowerManager>;

        $r23 = r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppObexServerSession mServerSession>;

        specialinvoke $r22.<com.android.bluetooth.opp.BluetoothOppTransfer: void <init>(android.content.Context,android.os.PowerManager,com.android.bluetooth.opp.BluetoothOppBatch,com.android.bluetooth.opp.BluetoothOppObexSession)>(r0, $r24, r41, $r23);

        r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppTransfer mServerTransfer> = $r22;

     label09:
        $i34 = r4.<com.android.bluetooth.opp.BluetoothOppShareInfo: int mDirection>;

        if $i34 != 0 goto label10;

        $r27 = r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppTransfer mTransfer>;

        if $r27 == null goto label10;

        $r21 = r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppTransfer mTransfer>;

        virtualinvoke $r21.<com.android.bluetooth.opp.BluetoothOppTransfer: void start()>();

        goto label11;

     label10:
        $i37 = r4.<com.android.bluetooth.opp.BluetoothOppShareInfo: int mDirection>;

        if $i37 != 1 goto label11;

        $r25 = r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppTransfer mServerTransfer>;

        if $r25 == null goto label11;

        $r26 = r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppTransfer mServerTransfer>;

        virtualinvoke $r26.<com.android.bluetooth.opp.BluetoothOppTransfer: void start()>();

     label11:
        goto label14;

     label12:
        $l28 = r4.<com.android.bluetooth.opp.BluetoothOppShareInfo: long mTimestamp>;

        i43 = specialinvoke r0.<com.android.bluetooth.opp.BluetoothOppService: int findBatchWithTimeStamp(long)>($l28);

        if i43 == -1 goto label13;

        $r19 = r0.<com.android.bluetooth.opp.BluetoothOppService: java.util.ArrayList mBatchs>;

        $r18 = virtualinvoke $r19.<java.util.ArrayList: java.lang.Object get(int)>(i43);

        $r17 = (com.android.bluetooth.opp.BluetoothOppBatch) $r18;

        virtualinvoke $r17.<com.android.bluetooth.opp.BluetoothOppBatch: void addShare(com.android.bluetooth.opp.BluetoothOppShareInfo)>(r4);

        goto label14;

     label13:
        $r14 = new com.android.bluetooth.opp.BluetoothOppBatch;

        specialinvoke $r14.<com.android.bluetooth.opp.BluetoothOppBatch: void <init>(android.content.Context,com.android.bluetooth.opp.BluetoothOppShareInfo)>(r0, r4);

        r6 = $r14;

        $i27 = r0.<com.android.bluetooth.opp.BluetoothOppService: int mBatchId>;

        r6.<com.android.bluetooth.opp.BluetoothOppBatch: int mId> = $i27;

        $i30 = r0.<com.android.bluetooth.opp.BluetoothOppService: int mBatchId>;

        $i29 = $i30 + 1;

        r0.<com.android.bluetooth.opp.BluetoothOppService: int mBatchId> = $i29;

        $r15 = r0.<com.android.bluetooth.opp.BluetoothOppService: java.util.ArrayList mBatchs>;

        virtualinvoke $r15.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

     label14:
        return;
    }

    private void updateShare(android.database.Cursor, int, boolean)
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        android.database.Cursor r1;
        int i0, i1, i2, i3, i4, i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i27, $i29, $i30, $i31, $i32, $i33, $i36, $i37, $i38, $i39, $i42, $i43, $i44, $i46, $i47, $i48, $i49, i50;
        boolean z0, z1, $z2, $z3, $z4, $z5;
        com.android.bluetooth.opp.BluetoothOppShareInfo r2;
        com.android.bluetooth.opp.BluetoothOppBatch r3, r55;
        java.util.ArrayList $r4, $r21, $r45;
        java.lang.Object $r5, $r20, $r43;
        android.net.Uri $r6, $r49, $r52;
        java.lang.StringBuilder $r7, $r8, $r9, $r10, $r24, $r25, $r26, $r27, $r31, $r33, $r34, $r36, $r40, $r41;
        java.lang.String $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r32, $r37, $r50, $r51;
        long $l26, $l28, $l45;
        com.android.bluetooth.opp.BluetoothOppTransfer $r22, $r23, $r28, $r29, $r30, $r35, $r38, $r39, $r42, $r44, $r48;
        android.app.NotificationManager $r46, $r53;
        com.android.bluetooth.opp.BluetoothOppNotification $r47, $r54;

        r0 := @this: com.android.bluetooth.opp.BluetoothOppService;

        r1 := @parameter0: android.database.Cursor;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r4 = r0.<com.android.bluetooth.opp.BluetoothOppService: java.util.ArrayList mShares>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r2 = (com.android.bluetooth.opp.BluetoothOppShareInfo) $r5;

        i1 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("status");

        $i6 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("_id");

        $i7 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>($i6);

        r2.<com.android.bluetooth.opp.BluetoothOppShareInfo: int mId> = $i7;

        $r6 = r2.<com.android.bluetooth.opp.BluetoothOppShareInfo: android.net.Uri mUri>;

        if $r6 == null goto label01;

        $r52 = r2.<com.android.bluetooth.opp.BluetoothOppShareInfo: android.net.Uri mUri>;

        $r51 = virtualinvoke $r52.<android.net.Uri: java.lang.String toString()>();

        $r50 = specialinvoke r0.<com.android.bluetooth.opp.BluetoothOppService: java.lang.String stringFromCursor(java.lang.String,android.database.Cursor,java.lang.String)>($r51, r1, "uri");

        $r49 = staticinvoke <android.net.Uri: android.net.Uri parse(java.lang.String)>($r50);

        r2.<com.android.bluetooth.opp.BluetoothOppShareInfo: android.net.Uri mUri> = $r49;

        goto label02;

     label01:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("updateShare() called for ID ");

        $i8 = r2.<com.android.bluetooth.opp.BluetoothOppShareInfo: int mId>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r9 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with null URI");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BtOppService", $r11);

     label02:
        $r13 = r2.<com.android.bluetooth.opp.BluetoothOppShareInfo: java.lang.String mHint>;

        $r12 = specialinvoke r0.<com.android.bluetooth.opp.BluetoothOppService: java.lang.String stringFromCursor(java.lang.String,android.database.Cursor,java.lang.String)>($r13, r1, "hint");

        r2.<com.android.bluetooth.opp.BluetoothOppShareInfo: java.lang.String mHint> = $r12;

        $r15 = r2.<com.android.bluetooth.opp.BluetoothOppShareInfo: java.lang.String mFilename>;

        $r14 = specialinvoke r0.<com.android.bluetooth.opp.BluetoothOppService: java.lang.String stringFromCursor(java.lang.String,android.database.Cursor,java.lang.String)>($r15, r1, "_data");

        r2.<com.android.bluetooth.opp.BluetoothOppShareInfo: java.lang.String mFilename> = $r14;

        $r17 = r2.<com.android.bluetooth.opp.BluetoothOppShareInfo: java.lang.String mMimetype>;

        $r16 = specialinvoke r0.<com.android.bluetooth.opp.BluetoothOppService: java.lang.String stringFromCursor(java.lang.String,android.database.Cursor,java.lang.String)>($r17, r1, "mimetype");

        r2.<com.android.bluetooth.opp.BluetoothOppShareInfo: java.lang.String mMimetype> = $r16;

        $i10 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("direction");

        $i11 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>($i10);

        r2.<com.android.bluetooth.opp.BluetoothOppShareInfo: int mDirection> = $i11;

        $r18 = r2.<com.android.bluetooth.opp.BluetoothOppShareInfo: java.lang.String mDestination>;

        $r19 = specialinvoke r0.<com.android.bluetooth.opp.BluetoothOppService: java.lang.String stringFromCursor(java.lang.String,android.database.Cursor,java.lang.String)>($r18, r1, "destination");

        r2.<com.android.bluetooth.opp.BluetoothOppShareInfo: java.lang.String mDestination> = $r19;

        $i13 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("visibility");

        i2 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>($i13);

        z1 = 0;

        $i12 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("confirm");

        i3 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>($i12);

        $i16 = r2.<com.android.bluetooth.opp.BluetoothOppShareInfo: int mVisibility>;

        if $i16 != 0 goto label04;

        if i2 == 0 goto label04;

        $i46 = r2.<com.android.bluetooth.opp.BluetoothOppShareInfo: int mStatus>;

        $z5 = staticinvoke <com.android.bluetooth.opp.BluetoothShare: boolean isStatusCompleted(int)>($i46);

        if $z5 != 0 goto label03;

        if i3 != 0 goto label04;

     label03:
        $r54 = r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppNotification mNotifier>;

        $r53 = $r54.<com.android.bluetooth.opp.BluetoothOppNotification: android.app.NotificationManager mNotificationMgr>;

        $i49 = r2.<com.android.bluetooth.opp.BluetoothOppShareInfo: int mId>;

        virtualinvoke $r53.<android.app.NotificationManager: void cancel(int)>($i49);

     label04:
        r2.<com.android.bluetooth.opp.BluetoothOppShareInfo: int mVisibility> = i2;

        $i17 = r2.<com.android.bluetooth.opp.BluetoothOppShareInfo: int mConfirm>;

        if $i17 != 0 goto label05;

        if i3 == 0 goto label05;

        z1 = 1;

     label05:
        $i14 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("confirm");

        $i15 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>($i14);

        r2.<com.android.bluetooth.opp.BluetoothOppShareInfo: int mConfirm> = $i15;

        i4 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>(i1);

        $i19 = r2.<com.android.bluetooth.opp.BluetoothOppShareInfo: int mStatus>;

        $z2 = staticinvoke <com.android.bluetooth.opp.BluetoothShare: boolean isStatusCompleted(int)>($i19);

        if $z2 != 0 goto label06;

        $z4 = staticinvoke <com.android.bluetooth.opp.BluetoothShare: boolean isStatusCompleted(int)>(i4);

        if $z4 == 0 goto label06;

        $r47 = r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppNotification mNotifier>;

        $r46 = $r47.<com.android.bluetooth.opp.BluetoothOppNotification: android.app.NotificationManager mNotificationMgr>;

        $i47 = r2.<com.android.bluetooth.opp.BluetoothOppShareInfo: int mId>;

        virtualinvoke $r46.<android.app.NotificationManager: void cancel(int)>($i47);

     label06:
        r2.<com.android.bluetooth.opp.BluetoothOppShareInfo: int mStatus> = i4;

        $i18 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("total_bytes");

        $i23 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>($i18);

        r2.<com.android.bluetooth.opp.BluetoothOppShareInfo: int mTotalBytes> = $i23;

        $i22 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("current_bytes");

        $i21 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>($i22);

        r2.<com.android.bluetooth.opp.BluetoothOppShareInfo: int mCurrentBytes> = $i21;

        $i20 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("timestamp");

        $i27 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>($i20);

        $l26 = (long) $i27;

        r2.<com.android.bluetooth.opp.BluetoothOppShareInfo: long mTimestamp> = $l26;

        $i25 = interfaceinvoke r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("scanned");

        $i24 = interfaceinvoke r1.<android.database.Cursor: int getInt(int)>($i25);

        if $i24 == 0 goto label07;

        $z3 = 1;

        goto label08;

     label07:
        $z3 = 0;

     label08:
        r2.<com.android.bluetooth.opp.BluetoothOppShareInfo: boolean mMediaScanned> = $z3;

        if z1 == 0 goto label09;

        $l45 = r2.<com.android.bluetooth.opp.BluetoothOppShareInfo: long mTimestamp>;

        i5 = specialinvoke r0.<com.android.bluetooth.opp.BluetoothOppService: int findBatchWithTimeStamp(long)>($l45);

        if i5 == -1 goto label09;

        $r45 = r0.<com.android.bluetooth.opp.BluetoothOppService: java.util.ArrayList mBatchs>;

        $r43 = virtualinvoke $r45.<java.util.ArrayList: java.lang.Object get(int)>(i5);

        r3 = (com.android.bluetooth.opp.BluetoothOppBatch) $r43;

        $r44 = r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppTransfer mServerTransfer>;

        if $r44 == null goto label09;

        $i43 = r3.<com.android.bluetooth.opp.BluetoothOppBatch: int mId>;

        $r42 = r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppTransfer mServerTransfer>;

        $i48 = virtualinvoke $r42.<com.android.bluetooth.opp.BluetoothOppTransfer: int getBatchId()>();

        if $i43 != $i48 goto label09;

        $r48 = r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppTransfer mServerTransfer>;

        virtualinvoke $r48.<com.android.bluetooth.opp.BluetoothOppTransfer: void setConfirmed()>();

     label09:
        $l28 = r2.<com.android.bluetooth.opp.BluetoothOppShareInfo: long mTimestamp>;

        i50 = specialinvoke r0.<com.android.bluetooth.opp.BluetoothOppService: int findBatchWithTimeStamp(long)>($l28);

        if i50 == -1 goto label19;

        $r21 = r0.<com.android.bluetooth.opp.BluetoothOppService: java.util.ArrayList mBatchs>;

        $r20 = virtualinvoke $r21.<java.util.ArrayList: java.lang.Object get(int)>(i50);

        r55 = (com.android.bluetooth.opp.BluetoothOppBatch) $r20;

        $i30 = r55.<com.android.bluetooth.opp.BluetoothOppBatch: int mStatus>;

        if $i30 == 2 goto label10;

        $i44 = r55.<com.android.bluetooth.opp.BluetoothOppBatch: int mStatus>;

        if $i44 != 3 goto label19;

     label10:
        $i29 = r55.<com.android.bluetooth.opp.BluetoothOppBatch: int mDirection>;

        if $i29 != 0 goto label14;

        $r29 = r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppTransfer mTransfer>;

        if $r29 != null goto label11;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BtOppService", "Unexpected error! mTransfer is null");

        goto label13;

     label11:
        $i38 = r55.<com.android.bluetooth.opp.BluetoothOppBatch: int mId>;

        $r35 = r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppTransfer mTransfer>;

        $i39 = virtualinvoke $r35.<com.android.bluetooth.opp.BluetoothOppTransfer: int getBatchId()>();

        if $i38 != $i39 goto label12;

        $r38 = r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppTransfer mTransfer>;

        virtualinvoke $r38.<com.android.bluetooth.opp.BluetoothOppTransfer: void stop()>();

        goto label13;

     label12:
        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected error! batch id ");

        $i37 = r55.<com.android.bluetooth.opp.BluetoothOppBatch: int mId>;

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i37);

        $r40 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doesn\'t match mTransfer id ");

        $r39 = r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppTransfer mTransfer>;

        $i42 = virtualinvoke $r39.<com.android.bluetooth.opp.BluetoothOppTransfer: int getBatchId()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i42);

        $r37 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BtOppService", $r37);

     label13:
        r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppTransfer mTransfer> = null;

        goto label18;

     label14:
        $r23 = r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppTransfer mServerTransfer>;

        if $r23 != null goto label15;

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BtOppService", "Unexpected error! mServerTransfer is null");

        goto label17;

     label15:
        $i32 = r55.<com.android.bluetooth.opp.BluetoothOppBatch: int mId>;

        $r22 = r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppTransfer mServerTransfer>;

        $i33 = virtualinvoke $r22.<com.android.bluetooth.opp.BluetoothOppTransfer: int getBatchId()>();

        if $i32 != $i33 goto label16;

        $r28 = r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppTransfer mServerTransfer>;

        virtualinvoke $r28.<com.android.bluetooth.opp.BluetoothOppTransfer: void stop()>();

        goto label17;

     label16:
        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected error! batch id ");

        $i31 = r55.<com.android.bluetooth.opp.BluetoothOppBatch: int mId>;

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i31);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doesn\'t match mServerTransfer id ");

        $r30 = r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppTransfer mServerTransfer>;

        $i36 = virtualinvoke $r30.<com.android.bluetooth.opp.BluetoothOppTransfer: int getBatchId()>();

        $r31 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i36);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int e(java.lang.String,java.lang.String)>("BtOppService", $r32);

     label17:
        r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppTransfer mServerTransfer> = null;

     label18:
        specialinvoke r0.<com.android.bluetooth.opp.BluetoothOppService: void removeBatch(com.android.bluetooth.opp.BluetoothOppBatch)>(r55);

     label19:
        return;
    }

    private void deleteShare(int)
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        int i0, i1;
        com.android.bluetooth.opp.BluetoothOppShareInfo r1;
        com.android.bluetooth.opp.BluetoothOppBatch r2;
        java.util.ArrayList $r3, $r5, $r7;
        java.lang.Object $r4, $r8;
        long $l2;
        boolean $z0, $z1;

        r0 := @this: com.android.bluetooth.opp.BluetoothOppService;

        i0 := @parameter0: int;

        $r3 = r0.<com.android.bluetooth.opp.BluetoothOppService: java.util.ArrayList mShares>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r1 = (com.android.bluetooth.opp.BluetoothOppShareInfo) $r4;

        $l2 = r1.<com.android.bluetooth.opp.BluetoothOppShareInfo: long mTimestamp>;

        i1 = specialinvoke r0.<com.android.bluetooth.opp.BluetoothOppService: int findBatchWithTimeStamp(long)>($l2);

        if i1 == -1 goto label2;

        $r7 = r0.<com.android.bluetooth.opp.BluetoothOppService: java.util.ArrayList mBatchs>;

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        r2 = (com.android.bluetooth.opp.BluetoothOppBatch) $r8;

        $z0 = virtualinvoke r2.<com.android.bluetooth.opp.BluetoothOppBatch: boolean hasShare(com.android.bluetooth.opp.BluetoothOppShareInfo)>(r1);

        if $z0 == 0 goto label1;

        virtualinvoke r2.<com.android.bluetooth.opp.BluetoothOppBatch: void cancelBatch()>();

     label1:
        $z1 = virtualinvoke r2.<com.android.bluetooth.opp.BluetoothOppBatch: boolean isEmpty()>();

        if $z1 == 0 goto label2;

        specialinvoke r0.<com.android.bluetooth.opp.BluetoothOppService: void removeBatch(com.android.bluetooth.opp.BluetoothOppBatch)>(r2);

     label2:
        $r5 = r0.<com.android.bluetooth.opp.BluetoothOppService: java.util.ArrayList mShares>;

        virtualinvoke $r5.<java.util.ArrayList: java.lang.Object remove(int)>(i0);

        return;
    }

    private java.lang.String stringFromCursor(java.lang.String, android.database.Cursor, java.lang.String)
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        java.lang.String r1, r3, $r14, $r15, $r16;
        android.database.Cursor r2;
        int i0, i1, i2, $i3, $i6;
        char[] r4, r5;
        android.database.CharArrayBuffer $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r17;
        char $c4, $c5;

        r0 := @this: com.android.bluetooth.opp.BluetoothOppService;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: android.database.Cursor;

        r3 := @parameter2: java.lang.String;

        i0 = interfaceinvoke r2.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>(r3);

        if r1 != null goto label1;

        $r16 = interfaceinvoke r2.<android.database.Cursor: java.lang.String getString(int)>(i0);

        return $r16;

     label1:
        $r6 = r0.<com.android.bluetooth.opp.BluetoothOppService: android.database.CharArrayBuffer mNewChars>;

        if $r6 != null goto label2;

        $r17 = new android.database.CharArrayBuffer;

        specialinvoke $r17.<android.database.CharArrayBuffer: void <init>(int)>(128);

        r0.<com.android.bluetooth.opp.BluetoothOppService: android.database.CharArrayBuffer mNewChars> = $r17;

     label2:
        $r7 = r0.<com.android.bluetooth.opp.BluetoothOppService: android.database.CharArrayBuffer mNewChars>;

        interfaceinvoke r2.<android.database.Cursor: void copyStringToBuffer(int,android.database.CharArrayBuffer)>(i0, $r7);

        $r8 = r0.<com.android.bluetooth.opp.BluetoothOppService: android.database.CharArrayBuffer mNewChars>;

        i1 = $r8.<android.database.CharArrayBuffer: int sizeCopied>;

        $i3 = virtualinvoke r1.<java.lang.String: int length()>();

        if i1 == $i3 goto label3;

        $r15 = interfaceinvoke r2.<android.database.Cursor: java.lang.String getString(int)>(i0);

        return $r15;

     label3:
        $r9 = r0.<com.android.bluetooth.opp.BluetoothOppService: android.database.CharArrayBuffer mOldChars>;

        if $r9 == null goto label4;

        $r13 = r0.<com.android.bluetooth.opp.BluetoothOppService: android.database.CharArrayBuffer mOldChars>;

        $i6 = $r13.<android.database.CharArrayBuffer: int sizeCopied>;

        if $i6 >= i1 goto label5;

     label4:
        $r10 = new android.database.CharArrayBuffer;

        specialinvoke $r10.<android.database.CharArrayBuffer: void <init>(int)>(i1);

        r0.<com.android.bluetooth.opp.BluetoothOppService: android.database.CharArrayBuffer mOldChars> = $r10;

     label5:
        $r12 = r0.<com.android.bluetooth.opp.BluetoothOppService: android.database.CharArrayBuffer mOldChars>;

        r4 = $r12.<android.database.CharArrayBuffer: char[] data>;

        $r11 = r0.<com.android.bluetooth.opp.BluetoothOppService: android.database.CharArrayBuffer mNewChars>;

        r5 = $r11.<android.database.CharArrayBuffer: char[] data>;

        virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(0, i1, r4, 0);

        i2 = i1 - 1;

     label6:
        if i2 < 0 goto label8;

        $c4 = r4[i2];

        $c5 = r5[i2];

        if $c4 == $c5 goto label7;

        $r14 = new java.lang.String;

        specialinvoke $r14.<java.lang.String: void <init>(char[],int,int)>(r5, 0, i1);

        return $r14;

     label7:
        i2 = i2 + -1;

        goto label6;

     label8:
        return r1;
    }

    private int findBatchWithTimeStamp(long)
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        long l0, $l3;
        int i1, $i2;
        java.util.ArrayList $r1, $r2;
        java.lang.Object $r3;
        com.android.bluetooth.opp.BluetoothOppBatch $r4;
        byte $b4;

        r0 := @this: com.android.bluetooth.opp.BluetoothOppService;

        l0 := @parameter0: long;

        $r1 = r0.<com.android.bluetooth.opp.BluetoothOppService: java.util.ArrayList mBatchs>;

        $i2 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        i1 = $i2 - 1;

     label1:
        if i1 < 0 goto label3;

        $r2 = r0.<com.android.bluetooth.opp.BluetoothOppService: java.util.ArrayList mBatchs>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i1);

        $r4 = (com.android.bluetooth.opp.BluetoothOppBatch) $r3;

        $l3 = $r4.<com.android.bluetooth.opp.BluetoothOppBatch: long mTimestamp>;

        $b4 = $l3 cmp l0;

        if $b4 != 0 goto label2;

        return i1;

     label2:
        i1 = i1 + -1;

        goto label1;

     label3:
        return -1;
    }

    private void removeBatch(com.android.bluetooth.opp.BluetoothOppBatch)
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        com.android.bluetooth.opp.BluetoothOppBatch r1, r2;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.util.ArrayList $r3, $r4, $r5, $r6;
        java.lang.Object $r7;
        com.android.bluetooth.opp.BluetoothOppObexServerSession $r8, $r9;
        com.android.bluetooth.opp.BluetoothOppTransfer $r10, $r11, $r14, $r15, $r16;
        android.os.PowerManager $r12, $r17;
        com.android.bluetooth.opp.BluetoothOppShareInfo $r13;

        r0 := @this: com.android.bluetooth.opp.BluetoothOppService;

        r1 := @parameter0: com.android.bluetooth.opp.BluetoothOppBatch;

        $r3 = r0.<com.android.bluetooth.opp.BluetoothOppService: java.util.ArrayList mBatchs>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        $r4 = r0.<com.android.bluetooth.opp.BluetoothOppService: java.util.ArrayList mBatchs>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i1 <= 0 goto label6;

        i0 = 0;

     label1:
        $r5 = r0.<com.android.bluetooth.opp.BluetoothOppService: java.util.ArrayList mBatchs>;

        $i2 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if i0 >= $i2 goto label6;

        $r6 = r0.<com.android.bluetooth.opp.BluetoothOppService: java.util.ArrayList mBatchs>;

        $r7 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r2 = (com.android.bluetooth.opp.BluetoothOppBatch) $r7;

        $i3 = r2.<com.android.bluetooth.opp.BluetoothOppBatch: int mStatus>;

        if $i3 != 1 goto label2;

        return;

     label2:
        $i4 = r2.<com.android.bluetooth.opp.BluetoothOppBatch: int mDirection>;

        if $i4 != 0 goto label3;

        $r14 = new com.android.bluetooth.opp.BluetoothOppTransfer;

        $r17 = r0.<com.android.bluetooth.opp.BluetoothOppService: android.os.PowerManager mPowerManager>;

        specialinvoke $r14.<com.android.bluetooth.opp.BluetoothOppTransfer: void <init>(android.content.Context,android.os.PowerManager,com.android.bluetooth.opp.BluetoothOppBatch)>(r0, $r17, r2);

        r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppTransfer mTransfer> = $r14;

        $r16 = r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppTransfer mTransfer>;

        virtualinvoke $r16.<com.android.bluetooth.opp.BluetoothOppTransfer: void start()>();

        return;

     label3:
        $i5 = r2.<com.android.bluetooth.opp.BluetoothOppBatch: int mDirection>;

        if $i5 != 1 goto label5;

        $r8 = r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppObexServerSession mServerSession>;

        if $r8 == null goto label5;

        $r10 = new com.android.bluetooth.opp.BluetoothOppTransfer;

        $r12 = r0.<com.android.bluetooth.opp.BluetoothOppService: android.os.PowerManager mPowerManager>;

        $r9 = r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppObexServerSession mServerSession>;

        specialinvoke $r10.<com.android.bluetooth.opp.BluetoothOppTransfer: void <init>(android.content.Context,android.os.PowerManager,com.android.bluetooth.opp.BluetoothOppBatch,com.android.bluetooth.opp.BluetoothOppObexSession)>(r0, $r12, r2, $r9);

        r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppTransfer mServerTransfer> = $r10;

        $r11 = r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppTransfer mServerTransfer>;

        virtualinvoke $r11.<com.android.bluetooth.opp.BluetoothOppTransfer: void start()>();

        $r13 = virtualinvoke r2.<com.android.bluetooth.opp.BluetoothOppBatch: com.android.bluetooth.opp.BluetoothOppShareInfo getPendingShare()>();

        $i6 = $r13.<com.android.bluetooth.opp.BluetoothOppShareInfo: int mConfirm>;

        if $i6 != 1 goto label4;

        $r15 = r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppTransfer mServerTransfer>;

        virtualinvoke $r15.<com.android.bluetooth.opp.BluetoothOppTransfer: void setConfirmed()>();

     label4:
        return;

     label5:
        i0 = i0 + 1;

        goto label1;

     label6:
        return;
    }

    private boolean needAction(int)
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        int i0, $i1;
        com.android.bluetooth.opp.BluetoothOppShareInfo r1;
        java.util.ArrayList $r2;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: com.android.bluetooth.opp.BluetoothOppService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.bluetooth.opp.BluetoothOppService: java.util.ArrayList mShares>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r1 = (com.android.bluetooth.opp.BluetoothOppShareInfo) $r3;

        $i1 = r1.<com.android.bluetooth.opp.BluetoothOppShareInfo: int mStatus>;

        $z0 = staticinvoke <com.android.bluetooth.opp.BluetoothShare: boolean isStatusCompleted(int)>($i1);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    private boolean visibleNotification(int)
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        int i0;
        com.android.bluetooth.opp.BluetoothOppShareInfo r1;
        java.util.ArrayList $r2;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: com.android.bluetooth.opp.BluetoothOppService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.bluetooth.opp.BluetoothOppService: java.util.ArrayList mShares>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r1 = (com.android.bluetooth.opp.BluetoothOppShareInfo) $r3;

        $z0 = virtualinvoke r1.<com.android.bluetooth.opp.BluetoothOppShareInfo: boolean hasCompletionNotification()>();

        return $z0;
    }

    private boolean scanFile(android.database.Cursor, int)
    {
        com.android.bluetooth.opp.BluetoothOppService r0, r3;
        android.database.Cursor r1;
        int i0;
        com.android.bluetooth.opp.BluetoothOppShareInfo r2;
        java.lang.Throwable r4, $r15;
        java.util.ArrayList $r5;
        java.lang.Object $r6;
        java.lang.StringBuilder $r8, $r9, $r11;
        java.lang.String $r10, $r12;
        boolean $z0;
        android.os.Handler $r13;
        com.android.bluetooth.opp.BluetoothOppService$MediaScannerNotifier $r14;

        r0 := @this: com.android.bluetooth.opp.BluetoothOppService;

        r1 := @parameter0: android.database.Cursor;

        i0 := @parameter1: int;

        $r5 = r0.<com.android.bluetooth.opp.BluetoothOppService: java.util.ArrayList mShares>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r2 = (com.android.bluetooth.opp.BluetoothOppShareInfo) $r6;

        r3 = r0;

        entermonitor r0;

     label1:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scanning file ");

        $r10 = r2.<com.android.bluetooth.opp.BluetoothOppShareInfo: java.lang.String mFilename>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BtOppService", $r12);

        $z0 = r0.<com.android.bluetooth.opp.BluetoothOppService: boolean mMediaScanInProgress>;

        if $z0 != 0 goto label3;

        r0.<com.android.bluetooth.opp.BluetoothOppService: boolean mMediaScanInProgress> = 1;

        $r14 = new com.android.bluetooth.opp.BluetoothOppService$MediaScannerNotifier;

        $r13 = r0.<com.android.bluetooth.opp.BluetoothOppService: android.os.Handler mHandler>;

        specialinvoke $r14.<com.android.bluetooth.opp.BluetoothOppService$MediaScannerNotifier: void <init>(android.content.Context,com.android.bluetooth.opp.BluetoothOppShareInfo,android.os.Handler)>(r0, r2, $r13);

        exitmonitor r3;

     label2:
        return 1;

     label3:
        exitmonitor r3;

     label4:
        return 0;

     label5:
        $r15 := @caughtexception;

        r4 = $r15;

        exitmonitor r3;

     label6:
        throw r4;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    private boolean shouldScanFile(int)
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        int i0, $i1, $i2, $i3;
        com.android.bluetooth.opp.BluetoothOppShareInfo r1;
        java.util.ArrayList $r2;
        java.lang.Object $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: com.android.bluetooth.opp.BluetoothOppService;

        i0 := @parameter0: int;

        $r2 = r0.<com.android.bluetooth.opp.BluetoothOppService: java.util.ArrayList mShares>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>(i0);

        r1 = (com.android.bluetooth.opp.BluetoothOppShareInfo) $r3;

        $i1 = r1.<com.android.bluetooth.opp.BluetoothOppShareInfo: int mStatus>;

        $z0 = staticinvoke <com.android.bluetooth.opp.BluetoothShare: boolean isStatusSuccess(int)>($i1);

        if $z0 == 0 goto label1;

        $i2 = r1.<com.android.bluetooth.opp.BluetoothOppShareInfo: int mDirection>;

        if $i2 != 1 goto label1;

        $z1 = r1.<com.android.bluetooth.opp.BluetoothOppShareInfo: boolean mMediaScanned>;

        if $z1 != 0 goto label1;

        $i3 = r1.<com.android.bluetooth.opp.BluetoothOppShareInfo: int mConfirm>;

        if $i3 == 5 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    private static void trimDatabase(android.content.ContentResolver)
    {
        android.content.ContentResolver r0;
        android.database.Cursor r5;
        int i1, i2, i3;
        long l4;
        android.net.Uri $r6, $r7, $r8, $r12;
        java.lang.String[] $r9;
        boolean $z0;
        java.lang.StringBuilder $r10, $r11, $r14;
        java.lang.String $r13;

        r0 := @parameter0: android.content.ContentResolver;

        $r6 = <com.android.bluetooth.opp.BluetoothShare: android.net.Uri CONTENT_URI>;

        virtualinvoke r0.<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>($r6, "direction=0 AND status>=200 AND visibility=1", null);

        $r7 = <com.android.bluetooth.opp.BluetoothShare: android.net.Uri CONTENT_URI>;

        virtualinvoke r0.<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>($r7, "direction=1 AND status>200 AND visibility=1", null);

        $r8 = <com.android.bluetooth.opp.BluetoothShare: android.net.Uri CONTENT_URI>;

        $r9 = newarray (java.lang.String)[1];

        $r9[0] = "_id";

        r5 = virtualinvoke r0.<android.content.ContentResolver: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)>($r8, $r9, "direction=1 AND status=200 AND visibility=1", null, "_id");

        if r5 != null goto label1;

        return;

     label1:
        i1 = interfaceinvoke r5.<android.database.Cursor: int getCount()>();

        if i1 <= 1000 goto label2;

        i2 = i1 - 1000;

        $z0 = interfaceinvoke r5.<android.database.Cursor: boolean moveToPosition(int)>(i2);

        if $z0 == 0 goto label2;

        i3 = interfaceinvoke r5.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("_id");

        l4 = interfaceinvoke r5.<android.database.Cursor: long getLong(int)>(i3);

        $r12 = <com.android.bluetooth.opp.BluetoothShare: android.net.Uri CONTENT_URI>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_id < ");

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l4);

        $r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<android.content.ContentResolver: int delete(android.net.Uri,java.lang.String,java.lang.String[])>($r12, $r13, null);

     label2:
        interfaceinvoke r5.<android.database.Cursor: void close()>();

        return;
    }

    static void access$000(com.android.bluetooth.opp.BluetoothOppService)
    {
        com.android.bluetooth.opp.BluetoothOppService r0;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppService;

        specialinvoke r0.<com.android.bluetooth.opp.BluetoothOppService: void updateFromProvider()>();

        return;
    }

    static void access$100(android.content.ContentResolver)
    {
        android.content.ContentResolver r0;

        r0 := @parameter0: android.content.ContentResolver;

        staticinvoke <com.android.bluetooth.opp.BluetoothOppService: void trimDatabase(android.content.ContentResolver)>(r0);

        return;
    }

    static com.android.bluetooth.opp.BluetoothOppRfcommListener access$200(com.android.bluetooth.opp.BluetoothOppService)
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        com.android.bluetooth.opp.BluetoothOppRfcommListener $r1;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppService;

        $r1 = r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppRfcommListener mSocketListener>;

        return $r1;
    }

    static boolean access$302(com.android.bluetooth.opp.BluetoothOppService, boolean)
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        boolean z0;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppService;

        z0 := @parameter1: boolean;

        r0.<com.android.bluetooth.opp.BluetoothOppService: boolean mListenStarted> = z0;

        return z0;
    }

    static com.android.bluetooth.opp.BluetoothOppTransfer access$400(com.android.bluetooth.opp.BluetoothOppService)
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        com.android.bluetooth.opp.BluetoothOppTransfer $r1;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppService;

        $r1 = r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppTransfer mServerTransfer>;

        return $r1;
    }

    static com.android.bluetooth.opp.BluetoothOppTransfer access$402(com.android.bluetooth.opp.BluetoothOppService, com.android.bluetooth.opp.BluetoothOppTransfer)
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        com.android.bluetooth.opp.BluetoothOppTransfer r1;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppService;

        r1 := @parameter1: com.android.bluetooth.opp.BluetoothOppTransfer;

        r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppTransfer mServerTransfer> = r1;

        return r1;
    }

    static com.android.bluetooth.opp.BluetoothOppTransfer access$500(com.android.bluetooth.opp.BluetoothOppService)
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        com.android.bluetooth.opp.BluetoothOppTransfer $r1;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppService;

        $r1 = r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppTransfer mTransfer>;

        return $r1;
    }

    static com.android.bluetooth.opp.BluetoothOppTransfer access$502(com.android.bluetooth.opp.BluetoothOppService, com.android.bluetooth.opp.BluetoothOppTransfer)
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        com.android.bluetooth.opp.BluetoothOppTransfer r1;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppService;

        r1 := @parameter1: com.android.bluetooth.opp.BluetoothOppTransfer;

        r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppTransfer mTransfer> = r1;

        return r1;
    }

    static com.android.bluetooth.opp.BluetoothOppService$UpdateThread access$600(com.android.bluetooth.opp.BluetoothOppService)
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        com.android.bluetooth.opp.BluetoothOppService$UpdateThread $r1;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppService;

        $r1 = r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppService$UpdateThread mUpdateThread>;

        return $r1;
    }

    static android.bluetooth.BluetoothAdapter access$700(com.android.bluetooth.opp.BluetoothOppService)
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        android.bluetooth.BluetoothAdapter $r1;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppService;

        $r1 = r0.<com.android.bluetooth.opp.BluetoothOppService: android.bluetooth.BluetoothAdapter mAdapter>;

        return $r1;
    }

    static void access$800(com.android.bluetooth.opp.BluetoothOppService)
    {
        com.android.bluetooth.opp.BluetoothOppService r0;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppService;

        specialinvoke r0.<com.android.bluetooth.opp.BluetoothOppService: void startSocketListener()>();

        return;
    }

    static boolean access$902(com.android.bluetooth.opp.BluetoothOppService, boolean)
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        boolean z0;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppService;

        z0 := @parameter1: boolean;

        r0.<com.android.bluetooth.opp.BluetoothOppService: boolean mMediaScanInProgress> = z0;

        return z0;
    }

    static java.util.ArrayList access$1000(com.android.bluetooth.opp.BluetoothOppService)
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppService;

        $r1 = r0.<com.android.bluetooth.opp.BluetoothOppService: java.util.ArrayList mBatchs>;

        return $r1;
    }

    static javax.obex.ObexTransport access$1100(com.android.bluetooth.opp.BluetoothOppService)
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        javax.obex.ObexTransport $r1;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppService;

        $r1 = r0.<com.android.bluetooth.opp.BluetoothOppService: javax.obex.ObexTransport mPendingConnection>;

        return $r1;
    }

    static void access$1200(com.android.bluetooth.opp.BluetoothOppService, javax.obex.ObexTransport)
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        javax.obex.ObexTransport r1;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppService;

        r1 := @parameter1: javax.obex.ObexTransport;

        specialinvoke r0.<com.android.bluetooth.opp.BluetoothOppService: void createServerSession(javax.obex.ObexTransport)>(r1);

        return;
    }

    static int access$1302(com.android.bluetooth.opp.BluetoothOppService, int)
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        int i0;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppService;

        i0 := @parameter1: int;

        r0.<com.android.bluetooth.opp.BluetoothOppService: int mIncomingRetries> = i0;

        return i0;
    }

    static int access$1300(com.android.bluetooth.opp.BluetoothOppService)
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        int $i0;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppService;

        $i0 = r0.<com.android.bluetooth.opp.BluetoothOppService: int mIncomingRetries>;

        return $i0;
    }

    static javax.obex.ObexTransport access$1102(com.android.bluetooth.opp.BluetoothOppService, javax.obex.ObexTransport)
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        javax.obex.ObexTransport r1;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppService;

        r1 := @parameter1: javax.obex.ObexTransport;

        r0.<com.android.bluetooth.opp.BluetoothOppService: javax.obex.ObexTransport mPendingConnection> = r1;

        return r1;
    }

    static android.os.Handler access$1400(com.android.bluetooth.opp.BluetoothOppService)
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        android.os.Handler $r1;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppService;

        $r1 = r0.<com.android.bluetooth.opp.BluetoothOppService: android.os.Handler mHandler>;

        return $r1;
    }

    static boolean access$1500(com.android.bluetooth.opp.BluetoothOppService)
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        boolean $z0;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppService;

        $z0 = r0.<com.android.bluetooth.opp.BluetoothOppService: boolean mPendingUpdate>;

        return $z0;
    }

    static com.android.bluetooth.opp.BluetoothOppService$UpdateThread access$602(com.android.bluetooth.opp.BluetoothOppService, com.android.bluetooth.opp.BluetoothOppService$UpdateThread)
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        com.android.bluetooth.opp.BluetoothOppService$UpdateThread r1;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppService;

        r1 := @parameter1: com.android.bluetooth.opp.BluetoothOppService$UpdateThread;

        r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppService$UpdateThread mUpdateThread> = r1;

        return r1;
    }

    static boolean access$300(com.android.bluetooth.opp.BluetoothOppService)
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        boolean $z0;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppService;

        $z0 = r0.<com.android.bluetooth.opp.BluetoothOppService: boolean mListenStarted>;

        return $z0;
    }

    static boolean access$1502(com.android.bluetooth.opp.BluetoothOppService, boolean)
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        boolean z0;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppService;

        z0 := @parameter1: boolean;

        r0.<com.android.bluetooth.opp.BluetoothOppService: boolean mPendingUpdate> = z0;

        return z0;
    }

    static java.util.ArrayList access$1600(com.android.bluetooth.opp.BluetoothOppService)
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        java.util.ArrayList $r1;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppService;

        $r1 = r0.<com.android.bluetooth.opp.BluetoothOppService: java.util.ArrayList mShares>;

        return $r1;
    }

    static boolean access$1700(com.android.bluetooth.opp.BluetoothOppService, int)
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        int i0;
        boolean $z0;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppService;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.bluetooth.opp.BluetoothOppService: boolean shouldScanFile(int)>(i0);

        return $z0;
    }

    static boolean access$1800(com.android.bluetooth.opp.BluetoothOppService, android.database.Cursor, int)
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        android.database.Cursor r1;
        int i0;
        boolean $z0;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppService;

        r1 := @parameter1: android.database.Cursor;

        i0 := @parameter2: int;

        $z0 = specialinvoke r0.<com.android.bluetooth.opp.BluetoothOppService: boolean scanFile(android.database.Cursor,int)>(r1, i0);

        return $z0;
    }

    static void access$1900(com.android.bluetooth.opp.BluetoothOppService, int)
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        int i0;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppService;

        i0 := @parameter1: int;

        specialinvoke r0.<com.android.bluetooth.opp.BluetoothOppService: void deleteShare(int)>(i0);

        return;
    }

    static void access$2000(com.android.bluetooth.opp.BluetoothOppService, android.database.Cursor, int)
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        android.database.Cursor r1;
        int i0;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppService;

        r1 := @parameter1: android.database.Cursor;

        i0 := @parameter2: int;

        specialinvoke r0.<com.android.bluetooth.opp.BluetoothOppService: void insertShare(android.database.Cursor,int)>(r1, i0);

        return;
    }

    static boolean access$2100(com.android.bluetooth.opp.BluetoothOppService, int)
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        int i0;
        boolean $z0;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppService;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.bluetooth.opp.BluetoothOppService: boolean visibleNotification(int)>(i0);

        return $z0;
    }

    static boolean access$2200(com.android.bluetooth.opp.BluetoothOppService, int)
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        int i0;
        boolean $z0;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppService;

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<com.android.bluetooth.opp.BluetoothOppService: boolean needAction(int)>(i0);

        return $z0;
    }

    static boolean access$2300(com.android.bluetooth.opp.BluetoothOppService)
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        boolean $z0;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppService;

        $z0 = r0.<com.android.bluetooth.opp.BluetoothOppService: boolean userAccepted>;

        return $z0;
    }

    static void access$2400(com.android.bluetooth.opp.BluetoothOppService, android.database.Cursor, int, boolean)
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        android.database.Cursor r1;
        int i0;
        boolean z0;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppService;

        r1 := @parameter1: android.database.Cursor;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        specialinvoke r0.<com.android.bluetooth.opp.BluetoothOppService: void updateShare(android.database.Cursor,int,boolean)>(r1, i0, z0);

        return;
    }

    static com.android.bluetooth.opp.BluetoothOppNotification access$2500(com.android.bluetooth.opp.BluetoothOppService)
    {
        com.android.bluetooth.opp.BluetoothOppService r0;
        com.android.bluetooth.opp.BluetoothOppNotification $r1;

        r0 := @parameter0: com.android.bluetooth.opp.BluetoothOppService;

        $r1 = r0.<com.android.bluetooth.opp.BluetoothOppService: com.android.bluetooth.opp.BluetoothOppNotification mNotifier>;

        return $r1;
    }

    public static void <clinit>()
    {
        <com.android.bluetooth.opp.BluetoothOppService: int STOP_LISTENER> = 200;

        <com.android.bluetooth.opp.BluetoothOppService: int MSG_INCOMING_CONNECTION_RETRY> = 4;

        <com.android.bluetooth.opp.BluetoothOppService: int MEDIA_SCANNED_FAILED> = 3;

        <com.android.bluetooth.opp.BluetoothOppService: int MEDIA_SCANNED> = 2;

        <com.android.bluetooth.opp.BluetoothOppService: int START_LISTENER> = 1;

        <com.android.bluetooth.opp.BluetoothOppService: java.lang.String TAG> = "BtOppService";

        <com.android.bluetooth.opp.BluetoothOppService: boolean V> = 0;

        <com.android.bluetooth.opp.BluetoothOppService: boolean D> = 1;

        return;
    }
}
