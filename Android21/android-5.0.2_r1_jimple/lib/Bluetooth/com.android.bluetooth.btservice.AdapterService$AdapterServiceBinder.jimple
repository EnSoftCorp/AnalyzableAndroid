class com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder extends android.bluetooth.IBluetooth$Stub
{
    private com.android.bluetooth.btservice.AdapterService mService;

    public void <init>(com.android.bluetooth.btservice.AdapterService)
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        com.android.bluetooth.btservice.AdapterService r1;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        r1 := @parameter0: com.android.bluetooth.btservice.AdapterService;

        specialinvoke r0.<android.bluetooth.IBluetooth$Stub: void <init>()>();

        r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService mService> = r1;

        return;
    }

    public boolean cleanup()
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService mService> = null;

        return 1;
    }

    public com.android.bluetooth.btservice.AdapterService getService()
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        com.android.bluetooth.btservice.AdapterService $r1, $r2, $r3;
        boolean $z0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        $r1 = r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService mService>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService mService>;

        $z0 = staticinvoke <com.android.bluetooth.btservice.AdapterService: boolean access$500(com.android.bluetooth.btservice.AdapterService)>($r2);

        if $z0 == 0 goto label1;

        $r3 = r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService mService>;

        return $r3;

     label1:
        return null;
    }

    public boolean isEnabled()
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        com.android.bluetooth.btservice.AdapterService r1;
        boolean $z0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        r1 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r1 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r1.<com.android.bluetooth.btservice.AdapterService: boolean isEnabled()>();

        return $z0;
    }

    public int getState()
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        com.android.bluetooth.btservice.AdapterService r1;
        int $i0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        r1 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r1 != null goto label1;

        return 10;

     label1:
        $i0 = virtualinvoke r1.<com.android.bluetooth.btservice.AdapterService: int getState()>();

        return $i0;
    }

    public boolean enable()
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        com.android.bluetooth.btservice.AdapterService r1;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i0 == 1000 goto label1;

        $z1 = staticinvoke <com.android.bluetooth.Utils: boolean checkCaller()>();

        if $z1 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothAdapterService", "enable() - Not allowed for non-active user and non system user");

        return 0;

     label1:
        r1 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r1 != null goto label2;

        return 0;

     label2:
        $z0 = virtualinvoke r1.<com.android.bluetooth.btservice.AdapterService: boolean enable()>();

        return $z0;
    }

    public boolean enableNoAutoConnect()
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        com.android.bluetooth.btservice.AdapterService r1;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i0 == 1000 goto label1;

        $z1 = staticinvoke <com.android.bluetooth.Utils: boolean checkCaller()>();

        if $z1 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothAdapterService", "enableNoAuto() - Not allowed for non-active user and non system user");

        return 0;

     label1:
        r1 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r1 != null goto label2;

        return 0;

     label2:
        $z0 = virtualinvoke r1.<com.android.bluetooth.btservice.AdapterService: boolean enableNoAutoConnect()>();

        return $z0;
    }

    public boolean disable()
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        com.android.bluetooth.btservice.AdapterService r1;
        int $i0;
        boolean $z0, $z1;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i0 == 1000 goto label1;

        $z1 = staticinvoke <com.android.bluetooth.Utils: boolean checkCaller()>();

        if $z1 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothAdapterService", "disable() - Not allowed for non-active user and non system user");

        return 0;

     label1:
        r1 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r1 != null goto label2;

        return 0;

     label2:
        $z0 = virtualinvoke r1.<com.android.bluetooth.btservice.AdapterService: boolean disable()>();

        return $z0;
    }

    public java.lang.String getAddress()
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        com.android.bluetooth.btservice.AdapterService r1;
        int $i0;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i0 == 1000 goto label1;

        $z0 = staticinvoke <com.android.bluetooth.Utils: boolean checkCaller()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothAdapterService", "getAddress() - Not allowed for non-active user and non system user");

        return null;

     label1:
        r1 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r1 != null goto label2;

        return null;

     label2:
        $r2 = virtualinvoke r1.<com.android.bluetooth.btservice.AdapterService: java.lang.String getAddress()>();

        return $r2;
    }

    public android.os.ParcelUuid[] getUuids()
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        com.android.bluetooth.btservice.AdapterService r1;
        boolean $z0;
        android.os.ParcelUuid[] $r2, $r3, $r4;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        $z0 = staticinvoke <com.android.bluetooth.Utils: boolean checkCaller()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothAdapterService", "getUuids() - Not allowed for non-active user");

        $r4 = newarray (android.os.ParcelUuid)[0];

        return $r4;

     label1:
        r1 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r1 != null goto label2;

        $r3 = newarray (android.os.ParcelUuid)[0];

        return $r3;

     label2:
        $r2 = virtualinvoke r1.<com.android.bluetooth.btservice.AdapterService: android.os.ParcelUuid[] getUuids()>();

        return $r2;
    }

    public java.lang.String getName()
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        com.android.bluetooth.btservice.AdapterService r1;
        int $i0;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i0 == 1000 goto label1;

        $z0 = staticinvoke <com.android.bluetooth.Utils: boolean checkCaller()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothAdapterService", "getName() - Not allowed for non-active user and non system user");

        return null;

     label1:
        r1 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r1 != null goto label2;

        return null;

     label2:
        $r2 = virtualinvoke r1.<com.android.bluetooth.btservice.AdapterService: java.lang.String getName()>();

        return $r2;
    }

    public boolean setName(java.lang.String)
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        java.lang.String r1;
        com.android.bluetooth.btservice.AdapterService r2;
        boolean $z0, $z1;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        r1 := @parameter0: java.lang.String;

        $z0 = staticinvoke <com.android.bluetooth.Utils: boolean checkCaller()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothAdapterService", "setName() - Not allowed for non-active user");

        return 0;

     label1:
        r2 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r2 != null goto label2;

        return 0;

     label2:
        $z1 = virtualinvoke r2.<com.android.bluetooth.btservice.AdapterService: boolean setName(java.lang.String)>(r1);

        return $z1;
    }

    public int getScanMode()
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        com.android.bluetooth.btservice.AdapterService r1;
        boolean $z0;
        int $i0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        $z0 = staticinvoke <com.android.bluetooth.Utils: boolean checkCaller()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothAdapterService", "getScanMode() - Not allowed for non-active user");

        return 20;

     label1:
        r1 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r1 != null goto label2;

        return 20;

     label2:
        $i0 = virtualinvoke r1.<com.android.bluetooth.btservice.AdapterService: int getScanMode()>();

        return $i0;
    }

    public boolean setScanMode(int, int)
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        int i0, i1;
        com.android.bluetooth.btservice.AdapterService r1;
        boolean $z0, $z1;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = staticinvoke <com.android.bluetooth.Utils: boolean checkCaller()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothAdapterService", "setScanMode() - Not allowed for non-active user");

        return 0;

     label1:
        r1 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r1 != null goto label2;

        return 0;

     label2:
        $z1 = virtualinvoke r1.<com.android.bluetooth.btservice.AdapterService: boolean setScanMode(int,int)>(i0, i1);

        return $z1;
    }

    public int getDiscoverableTimeout()
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        com.android.bluetooth.btservice.AdapterService r1;
        boolean $z0;
        int $i0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        $z0 = staticinvoke <com.android.bluetooth.Utils: boolean checkCaller()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothAdapterService", "getDiscoverableTimeout() - Not allowed for non-active user");

        return 0;

     label1:
        r1 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r1 != null goto label2;

        return 0;

     label2:
        $i0 = virtualinvoke r1.<com.android.bluetooth.btservice.AdapterService: int getDiscoverableTimeout()>();

        return $i0;
    }

    public boolean setDiscoverableTimeout(int)
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        int i0;
        com.android.bluetooth.btservice.AdapterService r1;
        boolean $z0, $z1;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        i0 := @parameter0: int;

        $z0 = staticinvoke <com.android.bluetooth.Utils: boolean checkCaller()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothAdapterService", "setDiscoverableTimeout() - Not allowed for non-active user");

        return 0;

     label1:
        r1 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r1 != null goto label2;

        return 0;

     label2:
        $z1 = virtualinvoke r1.<com.android.bluetooth.btservice.AdapterService: boolean setDiscoverableTimeout(int)>(i0);

        return $z1;
    }

    public boolean startDiscovery()
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        com.android.bluetooth.btservice.AdapterService r1;
        boolean $z0, $z1;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        $z0 = staticinvoke <com.android.bluetooth.Utils: boolean checkCaller()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothAdapterService", "startDiscovery() - Not allowed for non-active user");

        return 0;

     label1:
        r1 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r1 != null goto label2;

        return 0;

     label2:
        $z1 = virtualinvoke r1.<com.android.bluetooth.btservice.AdapterService: boolean startDiscovery()>();

        return $z1;
    }

    public boolean cancelDiscovery()
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        com.android.bluetooth.btservice.AdapterService r1;
        boolean $z0, $z1;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        $z0 = staticinvoke <com.android.bluetooth.Utils: boolean checkCaller()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothAdapterService", "cancelDiscovery() - Not allowed for non-active user");

        return 0;

     label1:
        r1 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r1 != null goto label2;

        return 0;

     label2:
        $z1 = virtualinvoke r1.<com.android.bluetooth.btservice.AdapterService: boolean cancelDiscovery()>();

        return $z1;
    }

    public boolean isDiscovering()
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        com.android.bluetooth.btservice.AdapterService r1;
        boolean $z0, $z1;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        $z0 = staticinvoke <com.android.bluetooth.Utils: boolean checkCaller()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothAdapterService", "isDiscovering() - Not allowed for non-active user");

        return 0;

     label1:
        r1 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r1 != null goto label2;

        return 0;

     label2:
        $z1 = virtualinvoke r1.<com.android.bluetooth.btservice.AdapterService: boolean isDiscovering()>();

        return $z1;
    }

    public android.bluetooth.BluetoothDevice[] getBondedDevices()
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        com.android.bluetooth.btservice.AdapterService r1;
        android.bluetooth.BluetoothDevice[] $r2, $r3;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        r1 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r1 != null goto label1;

        $r3 = newarray (android.bluetooth.BluetoothDevice)[0];

        return $r3;

     label1:
        $r2 = virtualinvoke r1.<com.android.bluetooth.btservice.AdapterService: android.bluetooth.BluetoothDevice[] getBondedDevices()>();

        return $r2;
    }

    public int getAdapterConnectionState()
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        com.android.bluetooth.btservice.AdapterService r1;
        int $i0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        r1 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r1 != null goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke r1.<com.android.bluetooth.btservice.AdapterService: int getAdapterConnectionState()>();

        return $i0;
    }

    public int getProfileConnectionState(int)
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        int i0, $i1;
        com.android.bluetooth.btservice.AdapterService r1;
        boolean $z0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        i0 := @parameter0: int;

        $z0 = staticinvoke <com.android.bluetooth.Utils: boolean checkCaller()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothAdapterService", "getProfileConnectionState- Not allowed for non-active user");

        return 0;

     label1:
        r1 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r1 != null goto label2;

        return 0;

     label2:
        $i1 = virtualinvoke r1.<com.android.bluetooth.btservice.AdapterService: int getProfileConnectionState(int)>(i0);

        return $i1;
    }

    public boolean createBond(android.bluetooth.BluetoothDevice, int)
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        android.bluetooth.BluetoothDevice r1;
        int i0;
        com.android.bluetooth.btservice.AdapterService r2;
        boolean $z0, $z1;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        i0 := @parameter1: int;

        $z0 = staticinvoke <com.android.bluetooth.Utils: boolean checkCaller()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothAdapterService", "createBond() - Not allowed for non-active user");

        return 0;

     label1:
        r2 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r2 != null goto label2;

        return 0;

     label2:
        $z1 = virtualinvoke r2.<com.android.bluetooth.btservice.AdapterService: boolean createBond(android.bluetooth.BluetoothDevice,int)>(r1, i0);

        return $z1;
    }

    public boolean cancelBondProcess(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        android.bluetooth.BluetoothDevice r1;
        com.android.bluetooth.btservice.AdapterService r2;
        boolean $z0, $z1;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        $z0 = staticinvoke <com.android.bluetooth.Utils: boolean checkCaller()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothAdapterService", "cancelBondProcess() - Not allowed for non-active user");

        return 0;

     label1:
        r2 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r2 != null goto label2;

        return 0;

     label2:
        $z1 = virtualinvoke r2.<com.android.bluetooth.btservice.AdapterService: boolean cancelBondProcess(android.bluetooth.BluetoothDevice)>(r1);

        return $z1;
    }

    public boolean removeBond(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        android.bluetooth.BluetoothDevice r1;
        com.android.bluetooth.btservice.AdapterService r2;
        boolean $z0, $z1;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        $z0 = staticinvoke <com.android.bluetooth.Utils: boolean checkCaller()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothAdapterService", "removeBond() - Not allowed for non-active user");

        return 0;

     label1:
        r2 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r2 != null goto label2;

        return 0;

     label2:
        $z1 = virtualinvoke r2.<com.android.bluetooth.btservice.AdapterService: boolean removeBond(android.bluetooth.BluetoothDevice)>(r1);

        return $z1;
    }

    public int getBondState(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        android.bluetooth.BluetoothDevice r1;
        com.android.bluetooth.btservice.AdapterService r2;
        int $i0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        r2 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r2 != null goto label1;

        return 10;

     label1:
        $i0 = virtualinvoke r2.<com.android.bluetooth.btservice.AdapterService: int getBondState(android.bluetooth.BluetoothDevice)>(r1);

        return $i0;
    }

    public boolean isConnected(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        android.bluetooth.BluetoothDevice r1;
        com.android.bluetooth.btservice.AdapterService r2;
        boolean $z0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        r2 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r2 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r2.<com.android.bluetooth.btservice.AdapterService: boolean isConnected(android.bluetooth.BluetoothDevice)>(r1);

        return $z0;
    }

    public java.lang.String getRemoteName(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        android.bluetooth.BluetoothDevice r1;
        com.android.bluetooth.btservice.AdapterService r2;
        boolean $z0;
        java.lang.String $r3;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        $z0 = staticinvoke <com.android.bluetooth.Utils: boolean checkCaller()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothAdapterService", "getRemoteName() - Not allowed for non-active user");

        return null;

     label1:
        r2 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r2 != null goto label2;

        return null;

     label2:
        $r3 = virtualinvoke r2.<com.android.bluetooth.btservice.AdapterService: java.lang.String getRemoteName(android.bluetooth.BluetoothDevice)>(r1);

        return $r3;
    }

    public int getRemoteType(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        android.bluetooth.BluetoothDevice r1;
        com.android.bluetooth.btservice.AdapterService r2;
        boolean $z0;
        int $i0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        $z0 = staticinvoke <com.android.bluetooth.Utils: boolean checkCaller()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothAdapterService", "getRemoteType() - Not allowed for non-active user");

        return 0;

     label1:
        r2 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r2 != null goto label2;

        return 0;

     label2:
        $i0 = virtualinvoke r2.<com.android.bluetooth.btservice.AdapterService: int getRemoteType(android.bluetooth.BluetoothDevice)>(r1);

        return $i0;
    }

    public java.lang.String getRemoteAlias(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        android.bluetooth.BluetoothDevice r1;
        com.android.bluetooth.btservice.AdapterService r2;
        boolean $z0;
        java.lang.String $r3;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        $z0 = staticinvoke <com.android.bluetooth.Utils: boolean checkCaller()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothAdapterService", "getRemoteAlias() - Not allowed for non-active user");

        return null;

     label1:
        r2 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r2 != null goto label2;

        return null;

     label2:
        $r3 = virtualinvoke r2.<com.android.bluetooth.btservice.AdapterService: java.lang.String getRemoteAlias(android.bluetooth.BluetoothDevice)>(r1);

        return $r3;
    }

    public boolean setRemoteAlias(android.bluetooth.BluetoothDevice, java.lang.String)
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        android.bluetooth.BluetoothDevice r1;
        java.lang.String r2;
        com.android.bluetooth.btservice.AdapterService r3;
        boolean $z0, $z1;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        r2 := @parameter1: java.lang.String;

        $z0 = staticinvoke <com.android.bluetooth.Utils: boolean checkCaller()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothAdapterService", "setRemoteAlias() - Not allowed for non-active user");

        return 0;

     label1:
        r3 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r3 != null goto label2;

        return 0;

     label2:
        $z1 = virtualinvoke r3.<com.android.bluetooth.btservice.AdapterService: boolean setRemoteAlias(android.bluetooth.BluetoothDevice,java.lang.String)>(r1, r2);

        return $z1;
    }

    public int getRemoteClass(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        android.bluetooth.BluetoothDevice r1;
        com.android.bluetooth.btservice.AdapterService r2;
        boolean $z0;
        int $i0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        $z0 = staticinvoke <com.android.bluetooth.Utils: boolean checkCaller()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothAdapterService", "getRemoteClass() - Not allowed for non-active user");

        return 0;

     label1:
        r2 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r2 != null goto label2;

        return 0;

     label2:
        $i0 = virtualinvoke r2.<com.android.bluetooth.btservice.AdapterService: int getRemoteClass(android.bluetooth.BluetoothDevice)>(r1);

        return $i0;
    }

    public android.os.ParcelUuid[] getRemoteUuids(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        android.bluetooth.BluetoothDevice r1;
        com.android.bluetooth.btservice.AdapterService r2;
        boolean $z0;
        android.os.ParcelUuid[] $r3, $r4, $r5;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        $z0 = staticinvoke <com.android.bluetooth.Utils: boolean checkCaller()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothAdapterService", "getRemoteUuids() - Not allowed for non-active user");

        $r5 = newarray (android.os.ParcelUuid)[0];

        return $r5;

     label1:
        r2 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r2 != null goto label2;

        $r4 = newarray (android.os.ParcelUuid)[0];

        return $r4;

     label2:
        $r3 = virtualinvoke r2.<com.android.bluetooth.btservice.AdapterService: android.os.ParcelUuid[] getRemoteUuids(android.bluetooth.BluetoothDevice)>(r1);

        return $r3;
    }

    public boolean fetchRemoteUuids(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        android.bluetooth.BluetoothDevice r1;
        com.android.bluetooth.btservice.AdapterService r2;
        boolean $z0, $z1;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        $z0 = staticinvoke <com.android.bluetooth.Utils: boolean checkCaller()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothAdapterService", "fetchRemoteUuids() - Not allowed for non-active user");

        return 0;

     label1:
        r2 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r2 != null goto label2;

        return 0;

     label2:
        $z1 = virtualinvoke r2.<com.android.bluetooth.btservice.AdapterService: boolean fetchRemoteUuids(android.bluetooth.BluetoothDevice)>(r1);

        return $z1;
    }

    public boolean fetchRemoteMasInstances(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        android.bluetooth.BluetoothDevice r1;
        com.android.bluetooth.btservice.AdapterService r2;
        boolean $z0, $z1;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        $z0 = staticinvoke <com.android.bluetooth.Utils: boolean checkCaller()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothAdapterService", "fetchMasInstances(): not allowed for non-active user");

        return 0;

     label1:
        r2 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r2 != null goto label2;

        return 0;

     label2:
        $z1 = virtualinvoke r2.<com.android.bluetooth.btservice.AdapterService: boolean fetchRemoteMasInstances(android.bluetooth.BluetoothDevice)>(r1);

        return $z1;
    }

    public boolean setPin(android.bluetooth.BluetoothDevice, boolean, int, byte[])
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        android.bluetooth.BluetoothDevice r1;
        boolean z0, $z1, $z2;
        int i0;
        byte[] r2;
        com.android.bluetooth.btservice.AdapterService r3;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        r2 := @parameter3: byte[];

        $z1 = staticinvoke <com.android.bluetooth.Utils: boolean checkCaller()>();

        if $z1 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothAdapterService", "setPin() - Not allowed for non-active user");

        return 0;

     label1:
        r3 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r3 != null goto label2;

        return 0;

     label2:
        $z2 = virtualinvoke r3.<com.android.bluetooth.btservice.AdapterService: boolean setPin(android.bluetooth.BluetoothDevice,boolean,int,byte[])>(r1, z0, i0, r2);

        return $z2;
    }

    public boolean setPasskey(android.bluetooth.BluetoothDevice, boolean, int, byte[])
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        android.bluetooth.BluetoothDevice r1;
        boolean z0, $z1, $z2;
        int i0;
        byte[] r2;
        com.android.bluetooth.btservice.AdapterService r3;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        z0 := @parameter1: boolean;

        i0 := @parameter2: int;

        r2 := @parameter3: byte[];

        $z1 = staticinvoke <com.android.bluetooth.Utils: boolean checkCaller()>();

        if $z1 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothAdapterService", "setPasskey() - Not allowed for non-active user");

        return 0;

     label1:
        r3 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r3 != null goto label2;

        return 0;

     label2:
        $z2 = virtualinvoke r3.<com.android.bluetooth.btservice.AdapterService: boolean setPasskey(android.bluetooth.BluetoothDevice,boolean,int,byte[])>(r1, z0, i0, r2);

        return $z2;
    }

    public boolean setPairingConfirmation(android.bluetooth.BluetoothDevice, boolean)
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        android.bluetooth.BluetoothDevice r1;
        boolean z0, $z1, $z2;
        com.android.bluetooth.btservice.AdapterService r2;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        z0 := @parameter1: boolean;

        $z1 = staticinvoke <com.android.bluetooth.Utils: boolean checkCaller()>();

        if $z1 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothAdapterService", "setPairingConfirmation() - Not allowed for non-active user");

        return 0;

     label1:
        r2 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r2 != null goto label2;

        return 0;

     label2:
        $z2 = virtualinvoke r2.<com.android.bluetooth.btservice.AdapterService: boolean setPairingConfirmation(android.bluetooth.BluetoothDevice,boolean)>(r1, z0);

        return $z2;
    }

    public int getPhonebookAccessPermission(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        android.bluetooth.BluetoothDevice r1;
        com.android.bluetooth.btservice.AdapterService r2;
        boolean $z0;
        int $i0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        $z0 = staticinvoke <com.android.bluetooth.Utils: boolean checkCaller()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothAdapterService", "getPhonebookAccessPermission() - Not allowed for non-active user");

        return 0;

     label1:
        r2 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r2 != null goto label2;

        return 0;

     label2:
        $i0 = virtualinvoke r2.<com.android.bluetooth.btservice.AdapterService: int getPhonebookAccessPermission(android.bluetooth.BluetoothDevice)>(r1);

        return $i0;
    }

    public boolean setPhonebookAccessPermission(android.bluetooth.BluetoothDevice, int)
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        android.bluetooth.BluetoothDevice r1;
        int i0;
        com.android.bluetooth.btservice.AdapterService r2;
        boolean $z0, $z1;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        i0 := @parameter1: int;

        $z0 = staticinvoke <com.android.bluetooth.Utils: boolean checkCaller()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothAdapterService", "setPhonebookAccessPermission() - Not allowed for non-active user");

        return 0;

     label1:
        r2 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r2 != null goto label2;

        return 0;

     label2:
        $z1 = virtualinvoke r2.<com.android.bluetooth.btservice.AdapterService: boolean setPhonebookAccessPermission(android.bluetooth.BluetoothDevice,int)>(r1, i0);

        return $z1;
    }

    public int getMessageAccessPermission(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        android.bluetooth.BluetoothDevice r1;
        com.android.bluetooth.btservice.AdapterService r2;
        boolean $z0;
        int $i0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        $z0 = staticinvoke <com.android.bluetooth.Utils: boolean checkCaller()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothAdapterService", "getMessageAccessPermission() - Not allowed for non-active user");

        return 0;

     label1:
        r2 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r2 != null goto label2;

        return 0;

     label2:
        $i0 = virtualinvoke r2.<com.android.bluetooth.btservice.AdapterService: int getMessageAccessPermission(android.bluetooth.BluetoothDevice)>(r1);

        return $i0;
    }

    public boolean setMessageAccessPermission(android.bluetooth.BluetoothDevice, int)
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        android.bluetooth.BluetoothDevice r1;
        int i0;
        com.android.bluetooth.btservice.AdapterService r2;
        boolean $z0, $z1;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        i0 := @parameter1: int;

        $z0 = staticinvoke <com.android.bluetooth.Utils: boolean checkCaller()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothAdapterService", "setMessageAccessPermission() - Not allowed for non-active user");

        return 0;

     label1:
        r2 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r2 != null goto label2;

        return 0;

     label2:
        $z1 = virtualinvoke r2.<com.android.bluetooth.btservice.AdapterService: boolean setMessageAccessPermission(android.bluetooth.BluetoothDevice,int)>(r1, i0);

        return $z1;
    }

    public void sendConnectionStateChange(android.bluetooth.BluetoothDevice, int, int, int)
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        android.bluetooth.BluetoothDevice r1;
        int i0, i1, i2;
        com.android.bluetooth.btservice.AdapterService r2;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        r2 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r2 != null goto label1;

        return;

     label1:
        virtualinvoke r2.<com.android.bluetooth.btservice.AdapterService: void sendConnectionStateChange(android.bluetooth.BluetoothDevice,int,int,int)>(r1, i0, i1, i2);

        return;
    }

    public android.os.ParcelFileDescriptor connectSocket(android.bluetooth.BluetoothDevice, int, android.os.ParcelUuid, int, int)
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        android.bluetooth.BluetoothDevice r1;
        int i0, i1, i2;
        android.os.ParcelUuid r2;
        com.android.bluetooth.btservice.AdapterService r3;
        boolean $z0;
        android.os.ParcelFileDescriptor $r4;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        i0 := @parameter1: int;

        r2 := @parameter2: android.os.ParcelUuid;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $z0 = staticinvoke <com.android.bluetooth.Utils: boolean checkCaller()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothAdapterService", "connectSocket() - Not allowed for non-active user");

        return null;

     label1:
        r3 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r3 != null goto label2;

        return null;

     label2:
        $r4 = virtualinvoke r3.<com.android.bluetooth.btservice.AdapterService: android.os.ParcelFileDescriptor connectSocket(android.bluetooth.BluetoothDevice,int,android.os.ParcelUuid,int,int)>(r1, i0, r2, i1, i2);

        return $r4;
    }

    public android.os.ParcelFileDescriptor createSocketChannel(int, java.lang.String, android.os.ParcelUuid, int, int)
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        int i0, i1, i2;
        java.lang.String r1;
        android.os.ParcelUuid r2;
        com.android.bluetooth.btservice.AdapterService r3;
        boolean $z0;
        android.os.ParcelFileDescriptor $r4;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: android.os.ParcelUuid;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $z0 = staticinvoke <com.android.bluetooth.Utils: boolean checkCaller()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothAdapterService", "createSocketChannel() - Not allowed for non-active user");

        return null;

     label1:
        r3 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r3 != null goto label2;

        return null;

     label2:
        $r4 = virtualinvoke r3.<com.android.bluetooth.btservice.AdapterService: android.os.ParcelFileDescriptor createSocketChannel(int,java.lang.String,android.os.ParcelUuid,int,int)>(i0, r1, r2, i1, i2);

        return $r4;
    }

    public boolean configHciSnoopLog(boolean)
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        boolean z0, $z1, $z2;
        com.android.bluetooth.btservice.AdapterService r1;
        int $i0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        z0 := @parameter0: boolean;

        $i0 = staticinvoke <android.os.Binder: int getCallingUid()>();

        if $i0 == 1000 goto label1;

        $z2 = staticinvoke <com.android.bluetooth.Utils: boolean checkCaller()>();

        if $z2 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("BluetoothAdapterService", "configHciSnoopLog() - Not allowed for non-active user");

        return 0;

     label1:
        r1 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r1 != null goto label2;

        return 0;

     label2:
        $z1 = virtualinvoke r1.<com.android.bluetooth.btservice.AdapterService: boolean configHciSnoopLog(boolean)>(z0);

        return $z1;
    }

    public void registerCallback(android.bluetooth.IBluetoothCallback)
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        android.bluetooth.IBluetoothCallback r1;
        com.android.bluetooth.btservice.AdapterService r2;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        r1 := @parameter0: android.bluetooth.IBluetoothCallback;

        r2 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r2 != null goto label1;

        return;

     label1:
        virtualinvoke r2.<com.android.bluetooth.btservice.AdapterService: void registerCallback(android.bluetooth.IBluetoothCallback)>(r1);

        return;
    }

    public void unregisterCallback(android.bluetooth.IBluetoothCallback)
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        android.bluetooth.IBluetoothCallback r1;
        com.android.bluetooth.btservice.AdapterService r2;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        r1 := @parameter0: android.bluetooth.IBluetoothCallback;

        r2 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r2 != null goto label1;

        return;

     label1:
        virtualinvoke r2.<com.android.bluetooth.btservice.AdapterService: void unregisterCallback(android.bluetooth.IBluetoothCallback)>(r1);

        return;
    }

    public boolean isMultiAdvertisementSupported()
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        com.android.bluetooth.btservice.AdapterService r1;
        int i0;
        boolean $z0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        r1 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r1 != null goto label1;

        return 0;

     label1:
        i0 = virtualinvoke r1.<com.android.bluetooth.btservice.AdapterService: int getNumOfAdvertisementInstancesSupported()>();

        if i0 < 5 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean isOffloadedFilteringSupported()
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        com.android.bluetooth.btservice.AdapterService r1;
        int i0;
        boolean $z0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        r1 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r1 != null goto label1;

        return 0;

     label1:
        i0 = virtualinvoke r1.<com.android.bluetooth.btservice.AdapterService: int getNumOfOffloadedScanFilterSupported()>();

        if i0 < 10 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean isOffloadedScanBatchingSupported()
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        com.android.bluetooth.btservice.AdapterService r1;
        int i0;
        boolean $z0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        r1 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r1 != null goto label1;

        return 0;

     label1:
        i0 = virtualinvoke r1.<com.android.bluetooth.btservice.AdapterService: int getOffloadedScanResultStorage()>();

        if i0 < 1024 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public boolean isActivityAndEnergyReportingSupported()
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        com.android.bluetooth.btservice.AdapterService r1;
        boolean $z0;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        r1 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r1 != null goto label1;

        return 0;

     label1:
        $z0 = staticinvoke <com.android.bluetooth.btservice.AdapterService: boolean access$600(com.android.bluetooth.btservice.AdapterService)>(r1);

        return $z0;
    }

    public void getActivityEnergyInfoFromController()
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        com.android.bluetooth.btservice.AdapterService r1;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        r1 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r1 != null goto label1;

        return;

     label1:
        staticinvoke <com.android.bluetooth.btservice.AdapterService: void access$700(com.android.bluetooth.btservice.AdapterService)>(r1);

        return;
    }

    public android.bluetooth.BluetoothActivityEnergyInfo reportActivityInfo()
    {
        com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder r0;
        com.android.bluetooth.btservice.AdapterService r1;
        android.bluetooth.BluetoothActivityEnergyInfo $r2;

        r0 := @this: com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder;

        r1 = virtualinvoke r0.<com.android.bluetooth.btservice.AdapterService$AdapterServiceBinder: com.android.bluetooth.btservice.AdapterService getService()>();

        if r1 != null goto label1;

        return null;

     label1:
        $r2 = staticinvoke <com.android.bluetooth.btservice.AdapterService: android.bluetooth.BluetoothActivityEnergyInfo access$800(com.android.bluetooth.btservice.AdapterService)>(r1);

        return $r2;
    }
}
