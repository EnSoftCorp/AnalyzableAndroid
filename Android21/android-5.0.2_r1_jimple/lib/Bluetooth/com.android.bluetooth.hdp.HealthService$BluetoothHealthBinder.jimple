class com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder extends android.bluetooth.IBluetoothHealth$Stub implements com.android.bluetooth.btservice.ProfileService$IProfileServiceBinder
{
    private com.android.bluetooth.hdp.HealthService mService;

    public void <init>(com.android.bluetooth.hdp.HealthService)
    {
        com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder r0;
        com.android.bluetooth.hdp.HealthService r1;

        r0 := @this: com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder;

        r1 := @parameter0: com.android.bluetooth.hdp.HealthService;

        specialinvoke r0.<android.bluetooth.IBluetoothHealth$Stub: void <init>()>();

        r0.<com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder: com.android.bluetooth.hdp.HealthService mService> = r1;

        return;
    }

    public boolean cleanup()
    {
        com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder r0;

        r0 := @this: com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder;

        r0.<com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder: com.android.bluetooth.hdp.HealthService mService> = null;

        return 1;
    }

    private com.android.bluetooth.hdp.HealthService getService()
    {
        com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder r0;
        boolean $z0, $z1;
        com.android.bluetooth.hdp.HealthService $r1, $r2, $r3;

        r0 := @this: com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder;

        $z0 = staticinvoke <com.android.bluetooth.Utils: boolean checkCaller()>();

        if $z0 != 0 goto label1;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.String)>("HealthService", "Health call not allowed for non-active user");

        return null;

     label1:
        $r1 = r0.<com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder: com.android.bluetooth.hdp.HealthService mService>;

        if $r1 == null goto label2;

        $r2 = r0.<com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder: com.android.bluetooth.hdp.HealthService mService>;

        $z1 = staticinvoke <com.android.bluetooth.hdp.HealthService: boolean access$2700(com.android.bluetooth.hdp.HealthService)>($r2);

        if $z1 == 0 goto label2;

        $r3 = r0.<com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder: com.android.bluetooth.hdp.HealthService mService>;

        return $r3;

     label2:
        return null;
    }

    public boolean registerAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration, android.bluetooth.IBluetoothHealthCallback)
    {
        com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder r0;
        android.bluetooth.BluetoothHealthAppConfiguration r1;
        android.bluetooth.IBluetoothHealthCallback r2;
        com.android.bluetooth.hdp.HealthService r3;
        boolean $z0;

        r0 := @this: com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder;

        r1 := @parameter0: android.bluetooth.BluetoothHealthAppConfiguration;

        r2 := @parameter1: android.bluetooth.IBluetoothHealthCallback;

        r3 = specialinvoke r0.<com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder: com.android.bluetooth.hdp.HealthService getService()>();

        if r3 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r3.<com.android.bluetooth.hdp.HealthService: boolean registerAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration,android.bluetooth.IBluetoothHealthCallback)>(r1, r2);

        return $z0;
    }

    public boolean unregisterAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration)
    {
        com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder r0;
        android.bluetooth.BluetoothHealthAppConfiguration r1;
        com.android.bluetooth.hdp.HealthService r2;
        boolean $z0;

        r0 := @this: com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder;

        r1 := @parameter0: android.bluetooth.BluetoothHealthAppConfiguration;

        r2 = specialinvoke r0.<com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder: com.android.bluetooth.hdp.HealthService getService()>();

        if r2 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r2.<com.android.bluetooth.hdp.HealthService: boolean unregisterAppConfiguration(android.bluetooth.BluetoothHealthAppConfiguration)>(r1);

        return $z0;
    }

    public boolean connectChannelToSource(android.bluetooth.BluetoothDevice, android.bluetooth.BluetoothHealthAppConfiguration)
    {
        com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder r0;
        android.bluetooth.BluetoothDevice r1;
        android.bluetooth.BluetoothHealthAppConfiguration r2;
        com.android.bluetooth.hdp.HealthService r3;
        boolean $z0;

        r0 := @this: com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        r2 := @parameter1: android.bluetooth.BluetoothHealthAppConfiguration;

        r3 = specialinvoke r0.<com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder: com.android.bluetooth.hdp.HealthService getService()>();

        if r3 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r3.<com.android.bluetooth.hdp.HealthService: boolean connectChannelToSource(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)>(r1, r2);

        return $z0;
    }

    public boolean connectChannelToSink(android.bluetooth.BluetoothDevice, android.bluetooth.BluetoothHealthAppConfiguration, int)
    {
        com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder r0;
        android.bluetooth.BluetoothDevice r1;
        android.bluetooth.BluetoothHealthAppConfiguration r2;
        int i0;
        com.android.bluetooth.hdp.HealthService r3;
        boolean $z0;

        r0 := @this: com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        r2 := @parameter1: android.bluetooth.BluetoothHealthAppConfiguration;

        i0 := @parameter2: int;

        r3 = specialinvoke r0.<com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder: com.android.bluetooth.hdp.HealthService getService()>();

        if r3 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r3.<com.android.bluetooth.hdp.HealthService: boolean connectChannelToSink(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration,int)>(r1, r2, i0);

        return $z0;
    }

    public boolean disconnectChannel(android.bluetooth.BluetoothDevice, android.bluetooth.BluetoothHealthAppConfiguration, int)
    {
        com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder r0;
        android.bluetooth.BluetoothDevice r1;
        android.bluetooth.BluetoothHealthAppConfiguration r2;
        int i0;
        com.android.bluetooth.hdp.HealthService r3;
        boolean $z0;

        r0 := @this: com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        r2 := @parameter1: android.bluetooth.BluetoothHealthAppConfiguration;

        i0 := @parameter2: int;

        r3 = specialinvoke r0.<com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder: com.android.bluetooth.hdp.HealthService getService()>();

        if r3 != null goto label1;

        return 0;

     label1:
        $z0 = virtualinvoke r3.<com.android.bluetooth.hdp.HealthService: boolean disconnectChannel(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration,int)>(r1, r2, i0);

        return $z0;
    }

    public android.os.ParcelFileDescriptor getMainChannelFd(android.bluetooth.BluetoothDevice, android.bluetooth.BluetoothHealthAppConfiguration)
    {
        com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder r0;
        android.bluetooth.BluetoothDevice r1;
        android.bluetooth.BluetoothHealthAppConfiguration r2;
        com.android.bluetooth.hdp.HealthService r3;
        android.os.ParcelFileDescriptor $r4;

        r0 := @this: com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        r2 := @parameter1: android.bluetooth.BluetoothHealthAppConfiguration;

        r3 = specialinvoke r0.<com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder: com.android.bluetooth.hdp.HealthService getService()>();

        if r3 != null goto label1;

        return null;

     label1:
        $r4 = virtualinvoke r3.<com.android.bluetooth.hdp.HealthService: android.os.ParcelFileDescriptor getMainChannelFd(android.bluetooth.BluetoothDevice,android.bluetooth.BluetoothHealthAppConfiguration)>(r1, r2);

        return $r4;
    }

    public int getHealthDeviceConnectionState(android.bluetooth.BluetoothDevice)
    {
        com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder r0;
        android.bluetooth.BluetoothDevice r1;
        com.android.bluetooth.hdp.HealthService r2;
        int $i0;

        r0 := @this: com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder;

        r1 := @parameter0: android.bluetooth.BluetoothDevice;

        r2 = specialinvoke r0.<com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder: com.android.bluetooth.hdp.HealthService getService()>();

        if r2 != null goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke r2.<com.android.bluetooth.hdp.HealthService: int getHealthDeviceConnectionState(android.bluetooth.BluetoothDevice)>(r1);

        return $i0;
    }

    public java.util.List getConnectedHealthDevices()
    {
        com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder r0;
        com.android.bluetooth.hdp.HealthService r1;
        java.util.List $r2;
        java.util.ArrayList $r3;

        r0 := @this: com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder;

        r1 = specialinvoke r0.<com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder: com.android.bluetooth.hdp.HealthService getService()>();

        if r1 != null goto label1;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>(int)>(0);

        return $r3;

     label1:
        $r2 = virtualinvoke r1.<com.android.bluetooth.hdp.HealthService: java.util.List getConnectedHealthDevices()>();

        return $r2;
    }

    public java.util.List getHealthDevicesMatchingConnectionStates(int[])
    {
        com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder r0;
        int[] r1;
        com.android.bluetooth.hdp.HealthService r2;
        java.util.List $r3;
        java.util.ArrayList $r4;

        r0 := @this: com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder;

        r1 := @parameter0: int[];

        r2 = specialinvoke r0.<com.android.bluetooth.hdp.HealthService$BluetoothHealthBinder: com.android.bluetooth.hdp.HealthService getService()>();

        if r2 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>(0);

        return $r4;

     label1:
        $r3 = virtualinvoke r2.<com.android.bluetooth.hdp.HealthService: java.util.List getHealthDevicesMatchingConnectionStates(int[])>(r1);

        return $r3;
    }
}
