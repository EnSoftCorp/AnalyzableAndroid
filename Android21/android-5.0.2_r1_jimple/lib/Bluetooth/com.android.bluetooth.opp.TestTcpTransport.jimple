class com.android.bluetooth.opp.TestTcpTransport extends java.lang.Object implements javax.obex.ObexTransport
{
    java.net.Socket s;

    public void <init>(java.net.Socket)
    {
        com.android.bluetooth.opp.TestTcpTransport r0;
        java.net.Socket r1;

        r0 := @this: com.android.bluetooth.opp.TestTcpTransport;

        r1 := @parameter0: java.net.Socket;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.bluetooth.opp.TestTcpTransport: java.net.Socket s> = null;

        r0.<com.android.bluetooth.opp.TestTcpTransport: java.net.Socket s> = r1;

        return;
    }

    public void close() throws java.io.IOException
    {
        com.android.bluetooth.opp.TestTcpTransport r0;
        java.net.Socket $r1;

        r0 := @this: com.android.bluetooth.opp.TestTcpTransport;

        $r1 = r0.<com.android.bluetooth.opp.TestTcpTransport: java.net.Socket s>;

        virtualinvoke $r1.<java.net.Socket: void close()>();

        return;
    }

    public java.io.DataInputStream openDataInputStream() throws java.io.IOException
    {
        com.android.bluetooth.opp.TestTcpTransport r0;
        java.io.DataInputStream $r1;
        java.io.InputStream $r2;

        r0 := @this: com.android.bluetooth.opp.TestTcpTransport;

        $r1 = new java.io.DataInputStream;

        $r2 = virtualinvoke r0.<com.android.bluetooth.opp.TestTcpTransport: java.io.InputStream openInputStream()>();

        specialinvoke $r1.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r2);

        return $r1;
    }

    public java.io.DataOutputStream openDataOutputStream() throws java.io.IOException
    {
        com.android.bluetooth.opp.TestTcpTransport r0;
        java.io.DataOutputStream $r1;
        java.io.OutputStream $r2;

        r0 := @this: com.android.bluetooth.opp.TestTcpTransport;

        $r1 = new java.io.DataOutputStream;

        $r2 = virtualinvoke r0.<com.android.bluetooth.opp.TestTcpTransport: java.io.OutputStream openOutputStream()>();

        specialinvoke $r1.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>($r2);

        return $r1;
    }

    public java.io.InputStream openInputStream() throws java.io.IOException
    {
        com.android.bluetooth.opp.TestTcpTransport r0;
        java.net.Socket $r1;
        java.io.InputStream $r2;

        r0 := @this: com.android.bluetooth.opp.TestTcpTransport;

        $r1 = r0.<com.android.bluetooth.opp.TestTcpTransport: java.net.Socket s>;

        $r2 = virtualinvoke $r1.<java.net.Socket: java.io.InputStream getInputStream()>();

        return $r2;
    }

    public java.io.OutputStream openOutputStream() throws java.io.IOException
    {
        com.android.bluetooth.opp.TestTcpTransport r0;
        java.net.Socket $r1;
        java.io.OutputStream $r2;

        r0 := @this: com.android.bluetooth.opp.TestTcpTransport;

        $r1 = r0.<com.android.bluetooth.opp.TestTcpTransport: java.net.Socket s>;

        $r2 = virtualinvoke $r1.<java.net.Socket: java.io.OutputStream getOutputStream()>();

        return $r2;
    }

    public void connect() throws java.io.IOException
    {
        com.android.bluetooth.opp.TestTcpTransport r0;

        r0 := @this: com.android.bluetooth.opp.TestTcpTransport;

        return;
    }

    public void create() throws java.io.IOException
    {
        com.android.bluetooth.opp.TestTcpTransport r0;

        r0 := @this: com.android.bluetooth.opp.TestTcpTransport;

        return;
    }

    public void disconnect() throws java.io.IOException
    {
        com.android.bluetooth.opp.TestTcpTransport r0;

        r0 := @this: com.android.bluetooth.opp.TestTcpTransport;

        return;
    }

    public void listen() throws java.io.IOException
    {
        com.android.bluetooth.opp.TestTcpTransport r0;

        r0 := @this: com.android.bluetooth.opp.TestTcpTransport;

        return;
    }

    public boolean isConnected() throws java.io.IOException
    {
        com.android.bluetooth.opp.TestTcpTransport r0;
        java.net.Socket $r1;
        boolean $z0;

        r0 := @this: com.android.bluetooth.opp.TestTcpTransport;

        $r1 = r0.<com.android.bluetooth.opp.TestTcpTransport: java.net.Socket s>;

        $z0 = virtualinvoke $r1.<java.net.Socket: boolean isConnected()>();

        return $z0;
    }
}
