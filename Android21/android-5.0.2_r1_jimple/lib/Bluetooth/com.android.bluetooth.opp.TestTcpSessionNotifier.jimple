class com.android.bluetooth.opp.TestTcpSessionNotifier extends java.lang.Object
{
    java.net.ServerSocket server;
    java.net.Socket conn;
    private static final java.lang.String TAG;

    public void <init>(int) throws java.io.IOException
    {
        com.android.bluetooth.opp.TestTcpSessionNotifier r0;
        int i0;
        java.net.ServerSocket $r1;

        r0 := @this: com.android.bluetooth.opp.TestTcpSessionNotifier;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.bluetooth.opp.TestTcpSessionNotifier: java.net.ServerSocket server> = null;

        r0.<com.android.bluetooth.opp.TestTcpSessionNotifier: java.net.Socket conn> = null;

        $r1 = new java.net.ServerSocket;

        specialinvoke $r1.<java.net.ServerSocket: void <init>(int)>(i0);

        r0.<com.android.bluetooth.opp.TestTcpSessionNotifier: java.net.ServerSocket server> = $r1;

        return;
    }

    public javax.obex.ServerSession acceptAndOpen(javax.obex.ServerRequestHandler, javax.obex.Authenticator) throws java.io.IOException
    {
        com.android.bluetooth.opp.TestTcpSessionNotifier r0;
        javax.obex.ServerRequestHandler r1;
        javax.obex.Authenticator r2;
        java.net.ServerSocket $r4;
        java.net.Socket $r5, $r7;
        com.android.bluetooth.opp.TestTcpTransport $r6, r10;
        javax.obex.ServerSession $r8;
        java.lang.Exception $r9;

        r0 := @this: com.android.bluetooth.opp.TestTcpSessionNotifier;

        r1 := @parameter0: javax.obex.ServerRequestHandler;

        r2 := @parameter1: javax.obex.Authenticator;

     label1:
        $r4 = r0.<com.android.bluetooth.opp.TestTcpSessionNotifier: java.net.ServerSocket server>;

        $r5 = virtualinvoke $r4.<java.net.ServerSocket: java.net.Socket accept()>();

        r0.<com.android.bluetooth.opp.TestTcpSessionNotifier: java.net.Socket conn> = $r5;

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        staticinvoke <android.util.Log: int v(java.lang.String,java.lang.String)>("TestTcpSessionNotifier", "ex");

     label4:
        $r6 = new com.android.bluetooth.opp.TestTcpTransport;

        $r7 = r0.<com.android.bluetooth.opp.TestTcpSessionNotifier: java.net.Socket conn>;

        specialinvoke $r6.<com.android.bluetooth.opp.TestTcpTransport: void <init>(java.net.Socket)>($r7);

        r10 = $r6;

        $r8 = new javax.obex.ServerSession;

        specialinvoke $r8.<javax.obex.ServerSession: void <init>(javax.obex.ObexTransport,javax.obex.ServerRequestHandler,javax.obex.Authenticator)>(r10, r1, r2);

        return $r8;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public javax.obex.ServerSession acceptAndOpen(javax.obex.ServerRequestHandler) throws java.io.IOException
    {
        com.android.bluetooth.opp.TestTcpSessionNotifier r0;
        javax.obex.ServerRequestHandler r1;
        javax.obex.ServerSession $r2;

        r0 := @this: com.android.bluetooth.opp.TestTcpSessionNotifier;

        r1 := @parameter0: javax.obex.ServerRequestHandler;

        $r2 = virtualinvoke r0.<com.android.bluetooth.opp.TestTcpSessionNotifier: javax.obex.ServerSession acceptAndOpen(javax.obex.ServerRequestHandler,javax.obex.Authenticator)>(r1, null);

        return $r2;
    }

    public static void <clinit>()
    {
        <com.android.bluetooth.opp.TestTcpSessionNotifier: java.lang.String TAG> = "TestTcpSessionNotifier";

        return;
    }
}
