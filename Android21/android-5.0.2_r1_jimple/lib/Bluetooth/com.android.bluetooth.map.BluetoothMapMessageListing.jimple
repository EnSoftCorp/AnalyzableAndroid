public class com.android.bluetooth.map.BluetoothMapMessageListing extends java.lang.Object
{
    private boolean hasUnread;
    private static final java.lang.String TAG;
    private static final boolean D;
    private java.util.List list;

    public void <init>()
    {
        com.android.bluetooth.map.BluetoothMapMessageListing r0;
        java.util.ArrayList $r1;

        r0 := @this: com.android.bluetooth.map.BluetoothMapMessageListing;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.android.bluetooth.map.BluetoothMapMessageListing: boolean hasUnread> = 0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.android.bluetooth.map.BluetoothMapMessageListing: java.util.List list> = $r1;

        return;
    }

    public void add(com.android.bluetooth.map.BluetoothMapMessageListingElement)
    {
        com.android.bluetooth.map.BluetoothMapMessageListing r0;
        com.android.bluetooth.map.BluetoothMapMessageListingElement r1;
        java.util.List $r2;
        boolean $z1;

        r0 := @this: com.android.bluetooth.map.BluetoothMapMessageListing;

        r1 := @parameter0: com.android.bluetooth.map.BluetoothMapMessageListingElement;

        $r2 = r0.<com.android.bluetooth.map.BluetoothMapMessageListing: java.util.List list>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        $z1 = virtualinvoke r1.<com.android.bluetooth.map.BluetoothMapMessageListingElement: boolean getReadBool()>();

        if $z1 == 0 goto label1;

        r0.<com.android.bluetooth.map.BluetoothMapMessageListing: boolean hasUnread> = 1;

     label1:
        return;
    }

    public int getCount()
    {
        com.android.bluetooth.map.BluetoothMapMessageListing r0;
        java.util.List $r1, $r2;
        int $i0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapMessageListing;

        $r1 = r0.<com.android.bluetooth.map.BluetoothMapMessageListing: java.util.List list>;

        if $r1 == null goto label1;

        $r2 = r0.<com.android.bluetooth.map.BluetoothMapMessageListing: java.util.List list>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        return $i0;

     label1:
        return 0;
    }

    public boolean hasUnread()
    {
        com.android.bluetooth.map.BluetoothMapMessageListing r0;
        boolean $z0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapMessageListing;

        $z0 = r0.<com.android.bluetooth.map.BluetoothMapMessageListing: boolean hasUnread>;

        return $z0;
    }

    public java.util.List getList()
    {
        com.android.bluetooth.map.BluetoothMapMessageListing r0;
        java.util.List $r1;

        r0 := @this: com.android.bluetooth.map.BluetoothMapMessageListing;

        $r1 = r0.<com.android.bluetooth.map.BluetoothMapMessageListing: java.util.List list>;

        return $r1;
    }

    public byte[] encode(boolean) throws java.io.UnsupportedEncodingException
    {
        com.android.bluetooth.map.BluetoothMapMessageListing r0;
        boolean z0, $z1;
        java.io.StringWriter r1, $r5;
        com.android.internal.util.FastXmlSerializer r2, $r6;
        java.util.Iterator r3;
        com.android.bluetooth.map.BluetoothMapMessageListingElement r4;
        java.lang.Boolean $r7;
        java.util.List $r10;
        byte[] $r12;
        java.lang.String $r13;
        java.lang.IllegalArgumentException $r14, r18;
        java.lang.Object $r15;
        java.io.IOException $r16, r20;
        java.lang.IllegalStateException $r17, r19;

        r0 := @this: com.android.bluetooth.map.BluetoothMapMessageListing;

        z0 := @parameter0: boolean;

        $r5 = new java.io.StringWriter;

        specialinvoke $r5.<java.io.StringWriter: void <init>()>();

        r1 = $r5;

        $r6 = new com.android.internal.util.FastXmlSerializer;

        specialinvoke $r6.<com.android.internal.util.FastXmlSerializer: void <init>()>();

        r2 = $r6;

     label1:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void setOutput(java.io.Writer)>(r1);

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void startDocument(java.lang.String,java.lang.Boolean)>("UTF-8", $r7);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void setFeature(java.lang.String,boolean)>("http://xmlpull.org/v1/doc/features.html#indent-output", 1);

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer startTag(java.lang.String,java.lang.String)>(null, "MAP-msg-listing");

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer attribute(java.lang.String,java.lang.String,java.lang.String)>(null, "version", "1.0");

        $r10 = r0.<com.android.bluetooth.map.BluetoothMapMessageListing: java.util.List list>;

        r3 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r15 = interfaceinvoke r3.<java.util.Iterator: java.lang.Object next()>();

        r4 = (com.android.bluetooth.map.BluetoothMapMessageListingElement) $r15;

        virtualinvoke r4.<com.android.bluetooth.map.BluetoothMapMessageListingElement: void encode(org.xmlpull.v1.XmlSerializer,boolean)>(r2, z0);

        goto label2;

     label3:
        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: org.xmlpull.v1.XmlSerializer endTag(java.lang.String,java.lang.String)>(null, "MAP-msg-listing");

        interfaceinvoke r2.<org.xmlpull.v1.XmlSerializer: void endDocument()>();

     label4:
        goto label8;

     label5:
        $r14 := @caughtexception;

        r18 = $r14;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>("BluetoothMapMessageListing", r18);

        goto label8;

     label6:
        $r17 := @caughtexception;

        r19 = $r17;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>("BluetoothMapMessageListing", r19);

        goto label8;

     label7:
        $r16 := @caughtexception;

        r20 = $r16;

        staticinvoke <android.util.Log: int w(java.lang.String,java.lang.Throwable)>("BluetoothMapMessageListing", r20);

     label8:
        $r13 = virtualinvoke r1.<java.io.StringWriter: java.lang.String toString()>();

        $r12 = virtualinvoke $r13.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        return $r12;

        catch java.lang.IllegalArgumentException from label1 to label4 with label5;
        catch java.lang.IllegalStateException from label1 to label4 with label6;
        catch java.io.IOException from label1 to label4 with label7;
    }

    public void sort()
    {
        com.android.bluetooth.map.BluetoothMapMessageListing r0;
        java.util.List $r1;

        r0 := @this: com.android.bluetooth.map.BluetoothMapMessageListing;

        $r1 = r0.<com.android.bluetooth.map.BluetoothMapMessageListing: java.util.List list>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r1);

        return;
    }

    public void segment(int, int)
    {
        com.android.bluetooth.map.BluetoothMapMessageListing r0;
        int i0, i1, $i2, $i3, $i4, $i5, $i7, i8;
        java.util.List $r1, $r2, $r3, $r4, $r5, $r7, $r8, $r10;
        java.util.ArrayList $r6, $r9;

        r0 := @this: com.android.bluetooth.map.BluetoothMapMessageListing;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.android.bluetooth.map.BluetoothMapMessageListing: java.util.List list>;

        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i3 = $i2 - i1;

        i8 = staticinvoke <java.lang.Math: int min(int,int)>(i0, $i3);

        if i8 <= 0 goto label1;

        $r8 = r0.<com.android.bluetooth.map.BluetoothMapMessageListing: java.util.List list>;

        $i7 = i1 + i8;

        $r7 = interfaceinvoke $r8.<java.util.List: java.util.List subList(int,int)>(i1, $i7);

        r0.<com.android.bluetooth.map.BluetoothMapMessageListing: java.util.List list> = $r7;

        $r10 = r0.<com.android.bluetooth.map.BluetoothMapMessageListing: java.util.List list>;

        if $r10 != null goto label3;

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        r0.<com.android.bluetooth.map.BluetoothMapMessageListing: java.util.List list> = $r9;

        goto label3;

     label1:
        $r2 = r0.<com.android.bluetooth.map.BluetoothMapMessageListing: java.util.List list>;

        $i4 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i1 <= $i4 goto label2;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<com.android.bluetooth.map.BluetoothMapMessageListing: java.util.List list> = $r6;

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("BluetoothMapMessageListing", "offset greater than list size. Returning empty list");

        goto label3;

     label2:
        $r4 = r0.<com.android.bluetooth.map.BluetoothMapMessageListing: java.util.List list>;

        $r3 = r0.<com.android.bluetooth.map.BluetoothMapMessageListing: java.util.List list>;

        $i5 = interfaceinvoke $r3.<java.util.List: int size()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.List subList(int,int)>(i1, $i5);

        r0.<com.android.bluetooth.map.BluetoothMapMessageListing: java.util.List list> = $r5;

     label3:
        return;
    }

    public static void <clinit>()
    {
        <com.android.bluetooth.map.BluetoothMapMessageListing: boolean D> = 1;

        <com.android.bluetooth.map.BluetoothMapMessageListing: java.lang.String TAG> = "BluetoothMapMessageListing";

        return;
    }
}
