public class com.android.bluetooth.map.BluetoothMapUtils extends java.lang.Object
{
    private static final java.lang.String TAG;
    private static final boolean D;
    private static final boolean V;
    private static final long HANDLE_TYPE_MASK;
    private static final long HANDLE_TYPE_MMS_MASK;
    private static final long HANDLE_TYPE_EMAIL_MASK;
    private static final long HANDLE_TYPE_SMS_GSM_MASK;
    private static final long HANDLE_TYPE_SMS_CDMA_MASK;

    public void <init>()
    {
        com.android.bluetooth.map.BluetoothMapUtils r0;

        r0 := @this: com.android.bluetooth.map.BluetoothMapUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String getLongAsString(long)
    {
        long l0, $l6, $l7, $l8;
        byte $b1, $b13;
        char[] r0;
        int i2, i3, i4, i5, $i10, $i12, i14, i15, i16;
        java.lang.String $r1;
        char $c9, $c11;

        l0 := @parameter0: long;

        r0 = newarray (char)[16];

        $l6 = l0 & -1L;

        i2 = (int) $l6;

        $l7 = l0 >> 32;

        $l8 = $l7 & -1L;

        i3 = (int) $l8;

        i5 = 0;

     label1:
        if i5 >= 8 goto label6;

        i4 = i3 & 15;

        if i4 >= 10 goto label2;

        $b1 = 48;

        goto label3;

     label2:
        $b1 = 55;

     label3:
        i14 = i4 + $b1;

        $i10 = 7 - i5;

        $c9 = (char) i14;

        r0[$i10] = $c9;

        i3 = i3 >> 4;

        i15 = i2 & 15;

        if i15 >= 10 goto label4;

        $b13 = 48;

        goto label5;

     label4:
        $b13 = 55;

     label5:
        i16 = i15 + $b13;

        $i12 = 15 - i5;

        $c11 = (char) i16;

        r0[$i12] = $c11;

        i2 = i2 >> 4;

        i5 = i5 + 1;

        goto label1;

     label6:
        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(char[])>(r0);

        return $r1;
    }

    public static java.lang.String getMapHandle(long, com.android.bluetooth.map.BluetoothMapUtils$TYPE)
    {
        long l0, $l3, $l4, $l5, $l6;
        com.android.bluetooth.map.BluetoothMapUtils$TYPE r0;
        int[] $r2;
        int $i1, $i2;
        java.lang.IllegalArgumentException $r3;
        java.lang.String r4;

        l0 := @parameter0: long;

        r0 := @parameter1: com.android.bluetooth.map.BluetoothMapUtils$TYPE;

        $r2 = <com.android.bluetooth.map.BluetoothMapUtils$1: int[] $SwitchMap$com$android$bluetooth$map$BluetoothMapUtils$TYPE>;

        $i1 = virtualinvoke r0.<com.android.bluetooth.map.BluetoothMapUtils$TYPE: int ordinal()>();

        $i2 = $r2[$i1];

        tableswitch($i2)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            default: goto label5;
        };

     label1:
        $l3 = l0 | 72057594037927936L;

        r4 = staticinvoke <com.android.bluetooth.map.BluetoothMapUtils: java.lang.String getLongAsString(long)>($l3);

        goto label6;

     label2:
        $l6 = l0 | 288230376151711744L;

        r4 = staticinvoke <com.android.bluetooth.map.BluetoothMapUtils: java.lang.String getLongAsString(long)>($l6);

        goto label6;

     label3:
        $l5 = l0 | 576460752303423488L;

        r4 = staticinvoke <com.android.bluetooth.map.BluetoothMapUtils: java.lang.String getLongAsString(long)>($l5);

        goto label6;

     label4:
        $l4 = l0 | 144115188075855872L;

        r4 = staticinvoke <com.android.bluetooth.map.BluetoothMapUtils: java.lang.String getLongAsString(long)>($l4);

        goto label6;

     label5:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Message type not supported");

        throw $r3;

     label6:
        return r4;
    }

    public static long getMsgHandleAsLong(java.lang.String)
    {
        java.lang.String r0;
        long $l0;

        r0 := @parameter0: java.lang.String;

        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String,int)>(r0, 16);

        return $l0;
    }

    public static long getCpHandle(java.lang.String)
    {
        java.lang.String r0, $r4, $r8;
        long l0, l3;
        java.lang.StringBuilder $r1, $r2, $r3, $r5, $r6, $r7;

        r0 := @parameter0: java.lang.String;

        l0 = staticinvoke <com.android.bluetooth.map.BluetoothMapUtils: long getMsgHandleAsLong(java.lang.String)>(r0);

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-> MAP handle:");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MapUtils", $r4);

        l3 = l0 & -1080863910568919041L;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("->CP handle:");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <android.util.Log: int d(java.lang.String,java.lang.String)>("MapUtils", $r8);

        return l3;
    }

    public static com.android.bluetooth.map.BluetoothMapUtils$TYPE getMsgTypeFromHandle(java.lang.String)
    {
        java.lang.String r0;
        long l0, $l1, $l3, $l5, $l7;
        byte $b2, $b4, $b6, $b8;
        java.lang.IllegalArgumentException $r1;
        com.android.bluetooth.map.BluetoothMapUtils$TYPE $r2, $r3, $r4, $r5;

        r0 := @parameter0: java.lang.String;

        l0 = staticinvoke <com.android.bluetooth.map.BluetoothMapUtils: long getMsgHandleAsLong(java.lang.String)>(r0);

        $l1 = l0 & 72057594037927936L;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label1;

        $r5 = <com.android.bluetooth.map.BluetoothMapUtils$TYPE: com.android.bluetooth.map.BluetoothMapUtils$TYPE MMS>;

        return $r5;

     label1:
        $l3 = l0 & 144115188075855872L;

        $b4 = $l3 cmp 0L;

        if $b4 == 0 goto label2;

        $r4 = <com.android.bluetooth.map.BluetoothMapUtils$TYPE: com.android.bluetooth.map.BluetoothMapUtils$TYPE EMAIL>;

        return $r4;

     label2:
        $l5 = l0 & 288230376151711744L;

        $b6 = $l5 cmp 0L;

        if $b6 == 0 goto label3;

        $r3 = <com.android.bluetooth.map.BluetoothMapUtils$TYPE: com.android.bluetooth.map.BluetoothMapUtils$TYPE SMS_GSM>;

        return $r3;

     label3:
        $l7 = l0 & 576460752303423488L;

        $b8 = $l7 cmp 0L;

        if $b8 == 0 goto label4;

        $r2 = <com.android.bluetooth.map.BluetoothMapUtils$TYPE: com.android.bluetooth.map.BluetoothMapUtils$TYPE SMS_CDMA>;

        return $r2;

     label4:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Message type not found in handle string.");

        throw $r1;
    }

    public static void <clinit>()
    {
        <com.android.bluetooth.map.BluetoothMapUtils: long HANDLE_TYPE_SMS_CDMA_MASK> = 576460752303423488L;

        <com.android.bluetooth.map.BluetoothMapUtils: long HANDLE_TYPE_SMS_GSM_MASK> = 288230376151711744L;

        <com.android.bluetooth.map.BluetoothMapUtils: long HANDLE_TYPE_EMAIL_MASK> = 144115188075855872L;

        <com.android.bluetooth.map.BluetoothMapUtils: long HANDLE_TYPE_MMS_MASK> = 72057594037927936L;

        <com.android.bluetooth.map.BluetoothMapUtils: long HANDLE_TYPE_MASK> = 1080863910568919040L;

        <com.android.bluetooth.map.BluetoothMapUtils: boolean V> = 1;

        <com.android.bluetooth.map.BluetoothMapUtils: boolean D> = 1;

        <com.android.bluetooth.map.BluetoothMapUtils: java.lang.String TAG> = "MapUtils";

        return;
    }
}
